; ModuleID = 'source/numerics/matrices.cc'
source_filename = "source/numerics/matrices.cc"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".globl _ZSt21ios_base_library_initv"

%"class.dealii::MultithreadInfo" = type { i32, i32 }
%"class.dealii::MappingQ1" = type { %"class.dealii::Mapping" }
%"class.dealii::Mapping" = type { %"class.dealii::Subscriptor" }
%"class.dealii::Subscriptor" = type { ptr, i32, %"class.std::map", ptr }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<const char *, std::pair<const char *const, unsigned int>, std::_Select1st<std::pair<const char *const, unsigned int> >, std::less<const char *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, ptr, ptr, ptr }
%"class.dealii::hp::MappingCollection" = type { %"class.dealii::Subscriptor", %"class.std::vector.71" }
%"class.std::vector.71" = type { %"struct.std::_Vector_base.72" }
%"struct.std::_Vector_base.72" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::Mapping<3, 3> >, std::allocator<boost::shared_ptr<const dealii::Mapping<3, 3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::Mapping<3, 3> >, std::allocator<boost::shared_ptr<const dealii::Mapping<3, 3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::Mapping<3, 3> >, std::allocator<boost::shared_ptr<const dealii::Mapping<3, 3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::Mapping<3, 3> >, std::allocator<boost::shared_ptr<const dealii::Mapping<3, 3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.boost::detail::function::basic_vtable7" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::vtable_base" = type { ptr }
%"struct.boost::detail::function::basic_vtable0" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable9" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable7.175" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable9.176" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable7.177" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable9.178" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable7.179" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable9.180" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable9.181" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"struct.boost::detail::function::basic_vtable9.182" = type { %"struct.boost::detail::function::vtable_base", ptr }
%"class.dealii::Threads::ThreadGroup" = type { %"class.std::__cxx11::list" }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<dealii::Threads::Thread<>, std::allocator<dealii::Threads::Thread<> > >::_List_impl" }
%"struct.std::__cxx11::_List_base<dealii::Threads::Thread<>, std::allocator<dealii::Threads::Thread<> > >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { ptr, ptr }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::TriaActiveIterator" = type { %"class.dealii::TriaIterator" }
%"class.dealii::TriaIterator" = type { %"class.dealii::TriaRawIterator" }
%"class.dealii::TriaRawIterator" = type { %"class.dealii::DoFCellAccessor" }
%"class.dealii::DoFCellAccessor" = type { %"class.dealii::DoFAccessor" }
%"class.dealii::DoFAccessor" = type { %"class.dealii::CellAccessor", ptr }
%"class.dealii::CellAccessor" = type { %"class.dealii::TriaAccessor" }
%"class.dealii::TriaAccessor" = type { %"class.dealii::TriaAccessorBase" }
%"class.dealii::TriaAccessorBase" = type { i32, i32, ptr }
%"class.dealii::Threads::DummyThreadMutex" = type { i8 }
%"class.dealii::Threads::Thread" = type { %"class.boost::shared_ptr" }
%"class.boost::shared_ptr" = type { ptr, %"class.boost::detail::shared_count" }
%"class.boost::detail::shared_count" = type { ptr }
%"class.dealii::Threads::internal::fun_encapsulator" = type { %"class.boost::function" }
%"class.boost::function" = type { %"class.boost::function7" }
%"class.boost::function7" = type { %"class.boost::function_base" }
%"class.boost::function_base" = type { ptr, %"union.boost::detail::function::function_buffer" }
%"union.boost::detail::function::function_buffer" = type { %"struct.boost::detail::function::function_buffer::bound_memfunc_ptr_t" }
%"struct.boost::detail::function::function_buffer::bound_memfunc_ptr_t" = type { { i64, i64 }, ptr }
%"struct.dealii::MatrixCreator::IteratorRange" = type { %"class.dealii::TriaActiveIterator", %"class.dealii::TriaActiveIterator" }
%"struct.std::_List_node" = type { %"struct.std::__detail::_List_node_base", %"class.dealii::Threads::Thread" }
%"struct.std::pair" = type { %"class.dealii::TriaActiveIterator", %"class.dealii::TriaActiveIterator" }
%"class.boost::detail::sp_counted_base" = type { ptr, i64, i64 }
%"class.dealii::Triangulation" = type { %"class.dealii::Subscriptor", %"class.std::vector.208", ptr, %"class.std::vector.102", %"class.std::vector.126", [255 x %"class.dealii::SmartPointer.213"], [255 x %"class.dealii::SmartPointer.213"], i8, i32, %"struct.dealii::internal::Triangulation::NumberCache", %"class.std::__cxx11::list.216" }
%"class.std::vector.208" = type { %"struct.std::_Vector_base.209" }
%"struct.std::_Vector_base.209" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaLevel<3> *, std::allocator<dealii::internal::Triangulation::TriaLevel<3> *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.102" = type { %"struct.std::_Vector_base.103" }
%"struct.std::_Vector_base.103" = type { %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<3>, std::allocator<dealii::Point<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.126" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", ptr }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ ptr, i32 }>
%"class.dealii::SmartPointer.213" = type { ptr, ptr }
%"struct.dealii::internal::Triangulation::NumberCache" = type { %"struct.dealii::internal::Triangulation::NumberCache.214", i32, %"class.std::vector.28", i32, %"class.std::vector.28" }
%"struct.dealii::internal::Triangulation::NumberCache.214" = type { %"struct.dealii::internal::Triangulation::NumberCache.215", i32, %"class.std::vector.28", i32, %"class.std::vector.28" }
%"struct.dealii::internal::Triangulation::NumberCache.215" = type { i32, %"class.std::vector.28", i32, %"class.std::vector.28" }
%"class.std::vector.28" = type { %"struct.std::_Vector_base.29" }
%"struct.std::_Vector_base.29" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::__cxx11::list.216" = type { %"class.std::__cxx11::_List_base.217" }
%"class.std::__cxx11::_List_base.217" = type { %"struct.std::__cxx11::_List_base<dealii::Triangulation<3, 3>::RefinementListener *, std::allocator<dealii::Triangulation<3, 3>::RefinementListener *> >::_List_impl" }
%"struct.std::__cxx11::_List_base<dealii::Triangulation<3, 3>::RefinementListener *, std::allocator<dealii::Triangulation<3, 3>::RefinementListener *> >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"class.dealii::internal::Triangulation::TriaLevel" = type { %"class.std::vector.183", %"class.std::vector.126", %"class.std::vector.188", %"class.std::vector.28", %"class.dealii::internal::Triangulation::TriaObjectsHex" }
%"class.std::vector.183" = type { %"struct.std::_Vector_base.184" }
%"struct.std::_Vector_base.184" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl" = type { %"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" }
%"struct.std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.188" = type { %"struct.std::_Vector_base.189" }
%"struct.std::_Vector_base.189" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::internal::Triangulation::TriaObjectsHex" = type { %"class.dealii::internal::Triangulation::TriaObjects.base", %"class.std::vector.126", %"class.std::vector.126", %"class.std::vector.126" }
%"class.dealii::internal::Triangulation::TriaObjects.base" = type <{ %"class.std::vector.193", %"class.std::vector.111", %"class.std::vector.198", %"class.std::vector.126", %"class.std::vector.126", %"class.std::vector.183", i32, i32, i8, [7 x i8], %"class.std::vector.203", i32 }>
%"class.std::vector.193" = type { %"struct.std::_Vector_base.194" }
%"struct.std::_Vector_base.194" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<3>, std::allocator<dealii::internal::Triangulation::TriaObject<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.111" = type { %"struct.std::_Vector_base.112" }
%"struct.std::_Vector_base.112" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.198" = type { %"struct.std::_Vector_base.199" }
%"struct.std::_Vector_base.199" = type { %"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::RefinementCase<3>, std::allocator<dealii::RefinementCase<3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.203" = type { %"struct.std::_Vector_base.204" }
%"struct.std::_Vector_base.204" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<3> >::UserData> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::FEValues" = type { %"class.dealii::FEValuesBase", %"class.dealii::Quadrature" }
%"class.dealii::FEValuesBase" = type { %"class.dealii::Subscriptor", %"class.dealii::FEValuesData.base", i32, i32, %"class.std::auto_ptr", %"class.dealii::SmartPointer.246", %"class.dealii::SmartPointer.22", %"class.dealii::SmartPointer.247", %"class.dealii::SmartPointer.247", i32, %"struct.dealii::internal::FEValuesViews::Cache" }
%"class.dealii::FEValuesData.base" = type <{ %"class.dealii::Table", %"class.std::vector.221", %"class.std::vector.226", %"class.std::vector.92", %"class.std::vector.231", %"class.std::vector.236", %"class.std::vector.231", %"class.std::vector.102", %"class.std::vector.102", %"class.std::vector.102", %"class.std::vector.241", %"class.std::vector.102", %"class.std::vector.226", %"class.std::vector.226", %"class.std::vector.28", i32 }>
%"class.dealii::Table" = type { %"class.dealii::TableBase.base", [4 x i8] }
%"class.dealii::TableBase.base" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::TableIndices" = type { %"class.dealii::TableIndicesBase" }
%"class.dealii::TableIndicesBase" = type { [2 x i32] }
%"class.std::vector.221" = type { %"struct.std::_Vector_base.222" }
%"struct.std::_Vector_base.222" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<1, 3> >, std::allocator<std::vector<dealii::Tensor<1, 3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.92" = type { %"struct.std::_Vector_base.93" }
%"struct.std::_Vector_base.93" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.236" = type { %"struct.std::_Vector_base.237" }
%"struct.std::_Vector_base.237" = type { %"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Tensor<3, 3>, std::allocator<dealii::Tensor<3, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.231" = type { %"struct.std::_Vector_base.232" }
%"struct.std::_Vector_base.232" = type { %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Tensor<2, 3>, std::allocator<dealii::Tensor<2, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.241" = type { %"struct.std::_Vector_base.242" }
%"struct.std::_Vector_base.242" = type { %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Tensor<1, 3>, std::allocator<dealii::Tensor<1, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.226" = type { %"struct.std::_Vector_base.227" }
%"struct.std::_Vector_base.227" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::Tensor<2, 3> >, std::allocator<std::vector<dealii::Tensor<2, 3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::auto_ptr" = type { ptr }
%"class.dealii::SmartPointer.246" = type { ptr, ptr }
%"class.dealii::SmartPointer.22" = type { ptr, ptr }
%"class.dealii::SmartPointer.247" = type { ptr, ptr }
%"struct.dealii::internal::FEValuesViews::Cache" = type { %"class.std::vector.248", %"class.std::vector.253" }
%"class.std::vector.248" = type { %"struct.std::_Vector_base.249" }
%"struct.std::_Vector_base.249" = type { %"struct.std::_Vector_base<dealii::FEValuesViews::Scalar<3, 3>, std::allocator<dealii::FEValuesViews::Scalar<3, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::FEValuesViews::Scalar<3, 3>, std::allocator<dealii::FEValuesViews::Scalar<3, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::FEValuesViews::Scalar<3, 3>, std::allocator<dealii::FEValuesViews::Scalar<3, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::FEValuesViews::Scalar<3, 3>, std::allocator<dealii::FEValuesViews::Scalar<3, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.253" = type { %"struct.std::_Vector_base.254" }
%"struct.std::_Vector_base.254" = type { %"struct.std::_Vector_base<dealii::FEValuesViews::Vector<3, 3>, std::allocator<dealii::FEValuesViews::Vector<3, 3> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::FEValuesViews::Vector<3, 3>, std::allocator<dealii::FEValuesViews::Vector<3, 3> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::FEValuesViews::Vector<3, 3>, std::allocator<dealii::FEValuesViews::Vector<3, 3> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::FEValuesViews::Vector<3, 3>, std::allocator<dealii::FEValuesViews::Vector<3, 3> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Quadrature" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.102", %"class.std::vector.92" }
%"class.dealii::FullMatrix" = type { %"class.dealii::Table.base", [4 x i8] }
%"class.dealii::Table.base" = type { %"class.dealii::TableBase.base" }
%"class.std::vector.258" = type { %"struct.std::_Vector_base.259" }
%"struct.std::_Vector_base.259" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Vector" = type { %"class.dealii::Subscriptor", i32, i32, ptr }
%"class.std::allocator.260" = type { i8 }
%"class.dealii::DoFHandler" = type { %"class.dealii::Subscriptor", %"class.dealii::SmartPointer", %"class.dealii::SmartPointer.22", %"class.std::vector.23", ptr, i32, %"class.std::vector.28" }
%"class.dealii::SmartPointer" = type { ptr, ptr }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<dealii::internal::DoFHandler::DoFLevel<3> *, std::allocator<dealii::internal::DoFHandler::DoFLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::DoFHandler::DoFLevel<3> *, std::allocator<dealii::internal::DoFHandler::DoFLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::DoFHandler::DoFLevel<3> *, std::allocator<dealii::internal::DoFHandler::DoFLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::DoFHandler::DoFLevel<3> *, std::allocator<dealii::internal::DoFHandler::DoFLevel<3> *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::TableBase" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"class.dealii::Function" = type <{ %"class.dealii::FunctionTime", %"class.dealii::Subscriptor", i32, [4 x i8] }>
%"class.dealii::FunctionTime" = type { ptr, double }
%"class.dealii::FiniteElement" = type { %"class.dealii::Subscriptor", %"class.dealii::FiniteElementData", i8, %"class.std::vector.97", %"class.std::vector.97", %"class.dealii::FullMatrix", %"class.std::vector.102", %"class.std::vector.87", %"class.std::vector.102", %"class.std::vector.87", %"class.dealii::Table.107", %"class.std::vector.111", %"class.std::vector.116", %"class.std::vector.116", %"class.std::vector.121", %"class.std::vector.121", %"class.std::vector.28", %"class.std::vector.121", %"class.std::vector.126", %"class.std::vector.131", %"class.std::vector.28" }
%"class.dealii::FiniteElementData" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::vector.97" = type { %"struct.std::_Vector_base.98" }
%"struct.std::_Vector_base.98" = type { %"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<dealii::FullMatrix<double> >, std::allocator<std::vector<dealii::FullMatrix<double> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.87" = type { %"struct.std::_Vector_base.88" }
%"struct.std::_Vector_base.88" = type { %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::Point<2>, std::allocator<dealii::Point<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Table.107" = type { %"class.dealii::TableBase.base.109", [4 x i8] }
%"class.dealii::TableBase.base.109" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.std::vector.116" = type { %"struct.std::_Vector_base.117" }
%"struct.std::_Vector_base.117" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.121" = type { %"struct.std::_Vector_base.122" }
%"struct.std::_Vector_base.122" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<std::pair<unsigned int, unsigned int>, unsigned int>, std::allocator<std::pair<std::pair<unsigned int, unsigned int>, unsigned int> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.131" = type { %"struct.std::_Vector_base.132" }
%"struct.std::_Vector_base.132" = type { %"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool>, std::allocator<std::vector<bool> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.std::pair.263" = type { i32, i32 }
%"class.boost::function.266" = type { %"class.boost::function0" }
%"class.boost::function0" = type { %"class.boost::function_base" }
%"class.boost::_bi::bind_t" = type { %"class.boost::function", %"class.boost::_bi::list7" }
%"class.boost::_bi::list7" = type { %"struct.boost::_bi::storage7" }
%"struct.boost::_bi::storage7" = type { %"struct.boost::_bi::storage6", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage6" = type { %"struct.boost::_bi::storage5", %"class.boost::_bi::value.270" }
%"struct.boost::_bi::storage5" = type { %"struct.boost::_bi::storage4", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage4" = type { %"struct.boost::_bi::storage3", %"class.boost::reference_wrapper.269" }
%"struct.boost::_bi::storage3" = type { %"struct.boost::_bi::storage2", %"class.boost::reference_wrapper.268" }
%"struct.boost::_bi::storage2" = type { %"struct.boost::_bi::storage1", %"class.boost::reference_wrapper.267" }
%"struct.boost::_bi::storage1" = type { %"class.boost::reference_wrapper" }
%"class.boost::reference_wrapper" = type { ptr }
%"class.boost::reference_wrapper.267" = type { ptr }
%"class.boost::reference_wrapper.268" = type { ptr }
%"class.boost::reference_wrapper.269" = type { ptr }
%"class.boost::_bi::value" = type { ptr }
%"class.boost::_bi::value.270" = type { %"struct.dealii::MatrixCreator::IteratorRange" }
%"class.boost::reference_wrapper.271" = type { ptr }
%"class.dealii::Threads::internal::fun_encapsulator.34" = type { %"class.boost::function.35" }
%"class.boost::function.35" = type { %"class.boost::function9" }
%"class.boost::function9" = type { %"class.boost::function_base" }
%"class.boost::_bi::bind_t.276" = type { %"class.boost::function.35", %"class.boost::_bi::list9" }
%"class.boost::_bi::list9" = type { %"struct.boost::_bi::storage9" }
%"struct.boost::_bi::storage9" = type { %"struct.boost::_bi::storage8", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage8" = type { %"struct.boost::_bi::storage7.277", %"class.boost::_bi::value.270" }
%"struct.boost::_bi::storage7.277" = type { %"struct.boost::_bi::storage6.278", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage6.278" = type { %"struct.boost::_bi::storage5.279", %"class.boost::reference_wrapper.281" }
%"struct.boost::_bi::storage5.279" = type { %"struct.boost::_bi::storage4", %"class.boost::reference_wrapper.280" }
%"class.boost::reference_wrapper.280" = type { ptr }
%"class.boost::reference_wrapper.281" = type { ptr }
%"class.dealii::Threads::internal::fun_encapsulator.36" = type { %"class.boost::function.37" }
%"class.boost::function.37" = type { %"class.boost::function7.38" }
%"class.boost::function7.38" = type { %"class.boost::function_base" }
%"class.dealii::FullMatrix.282" = type { %"class.dealii::Table.base.286", [4 x i8] }
%"class.dealii::Table.base.286" = type { %"class.dealii::TableBase.base.285" }
%"class.dealii::TableBase.base.285" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices" }>
%"class.dealii::TableBase.284" = type <{ %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices", [4 x i8] }>
%"class.boost::_bi::bind_t.288" = type { %"class.boost::function.37", %"class.boost::_bi::list7.289" }
%"class.boost::_bi::list7.289" = type { %"struct.boost::_bi::storage7.290" }
%"struct.boost::_bi::storage7.290" = type { %"struct.boost::_bi::storage6.291", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage6.291" = type { %"struct.boost::_bi::storage5.292", %"class.boost::_bi::value.270" }
%"struct.boost::_bi::storage5.292" = type { %"struct.boost::_bi::storage4.293", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage4.293" = type { %"struct.boost::_bi::storage3", %"class.boost::reference_wrapper.294" }
%"class.boost::reference_wrapper.294" = type { ptr }
%"class.dealii::Threads::internal::fun_encapsulator.40" = type { %"class.boost::function.41" }
%"class.boost::function.41" = type { %"class.boost::function9.42" }
%"class.boost::function9.42" = type { %"class.boost::function_base" }
%"class.boost::_bi::bind_t.295" = type { %"class.boost::function.41", %"class.boost::_bi::list9.296" }
%"class.boost::_bi::list9.296" = type { %"struct.boost::_bi::storage9.297" }
%"struct.boost::_bi::storage9.297" = type { %"struct.boost::_bi::storage8.298", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage8.298" = type { %"struct.boost::_bi::storage7.299", %"class.boost::_bi::value.270" }
%"struct.boost::_bi::storage7.299" = type { %"struct.boost::_bi::storage6.300", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage6.300" = type { %"struct.boost::_bi::storage5.301", %"class.boost::reference_wrapper.281" }
%"struct.boost::_bi::storage5.301" = type { %"struct.boost::_bi::storage4.293", %"class.boost::reference_wrapper.280" }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl" = type { %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::TriaActiveIterator.48" = type { %"class.dealii::TriaIterator.49" }
%"class.dealii::TriaIterator.49" = type { %"class.dealii::TriaRawIterator.50" }
%"class.dealii::TriaRawIterator.50" = type { %"class.dealii::DoFCellAccessor.52" }
%"class.dealii::DoFCellAccessor.52" = type { %"class.dealii::DoFAccessor.53" }
%"class.dealii::DoFAccessor.53" = type { %"class.dealii::CellAccessor", ptr }
%"class.dealii::Threads::internal::fun_encapsulator.66" = type { %"class.boost::function.67" }
%"class.boost::function.67" = type { %"class.boost::function7.68" }
%"class.boost::function7.68" = type { %"class.boost::function_base" }
%"struct.dealii::MatrixCreator::IteratorRange.65" = type { %"class.dealii::TriaActiveIterator.48", %"class.dealii::TriaActiveIterator.48" }
%"struct.std::pair.69" = type { %"class.dealii::TriaActiveIterator.48", %"class.dealii::TriaActiveIterator.48" }
%"class.dealii::hp::FEValues" = type { %"class.dealii::internal::hp::FEValuesBase" }
%"class.dealii::internal::hp::FEValuesBase" = type { %"class.dealii::SmartPointer.54", %"class.dealii::SmartPointer.302", %"class.dealii::hp::QCollection", %"class.dealii::Table.303", %"class.dealii::TableIndices.305", i32 }
%"class.dealii::SmartPointer.54" = type { ptr, ptr }
%"class.dealii::SmartPointer.302" = type { ptr, ptr }
%"class.dealii::hp::QCollection" = type { %"class.dealii::Subscriptor", %"class.std::vector.160" }
%"class.std::vector.160" = type { %"struct.std::_Vector_base.161" }
%"struct.std::_Vector_base.161" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<3> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<3> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<3> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<3> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Table.303" = type { %"class.dealii::TableBase.304" }
%"class.dealii::TableBase.304" = type { %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices.305" }
%"class.dealii::TableIndices.305" = type { %"class.dealii::TableIndicesBase.306" }
%"class.dealii::TableIndicesBase.306" = type { [3 x i32] }
%"class.dealii::hp::DoFHandler" = type { %"class.dealii::Subscriptor", %"class.dealii::Triangulation<3, 3>::RefinementListener", %"class.dealii::SmartPointer", %"class.dealii::SmartPointer.54", %"class.std::vector.55", ptr, i32, %"class.std::vector.28", %"class.std::vector.28", %"class.std::vector.60" }
%"class.dealii::Triangulation<3, 3>::RefinementListener" = type { ptr }
%"class.std::vector.55" = type { %"struct.std::_Vector_base.56" }
%"struct.std::_Vector_base.56" = type { %"struct.std::_Vector_base<dealii::internal::hp::DoFLevel<3> *, std::allocator<dealii::internal::hp::DoFLevel<3> *> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::hp::DoFLevel<3> *, std::allocator<dealii::internal::hp::DoFLevel<3> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::hp::DoFLevel<3> *, std::allocator<dealii::internal::hp::DoFLevel<3> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::hp::DoFLevel<3> *, std::allocator<dealii::internal::hp::DoFLevel<3> *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.60" = type { %"struct.std::_Vector_base.61" }
%"struct.std::_Vector_base.61" = type { %"struct.std::_Vector_base<std::vector<bool> *, std::allocator<std::vector<bool> *> >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<bool> *, std::allocator<std::vector<bool> *> >::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<bool> *, std::allocator<std::vector<bool> *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<bool> *, std::allocator<std::vector<bool> *> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::hp::FECollection" = type { %"class.dealii::Subscriptor", %"class.std::vector.141" }
%"class.std::vector.141" = type { %"struct.std::_Vector_base.142" }
%"struct.std::_Vector_base.142" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::FiniteElement<3, 3> >, std::allocator<boost::shared_ptr<const dealii::FiniteElement<3, 3> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::FiniteElement<3, 3> >, std::allocator<boost::shared_ptr<const dealii::FiniteElement<3, 3> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::FiniteElement<3, 3> >, std::allocator<boost::shared_ptr<const dealii::FiniteElement<3, 3> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::FiniteElement<3, 3> >, std::allocator<boost::shared_ptr<const dealii::FiniteElement<3, 3> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::SparseMatrix" = type <{ ptr, %"class.dealii::SmartPointer.33", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.dealii::SmartPointer.33" = type { ptr, ptr }
%"class.boost::shared_ptr.307" = type { ptr, %"class.boost::detail::shared_count" }
%"class.boost::_bi::bind_t.371" = type { %"class.boost::function.67", %"class.boost::_bi::list7.372" }
%"class.boost::_bi::list7.372" = type { %"struct.boost::_bi::storage7.373" }
%"struct.boost::_bi::storage7.373" = type { %"struct.boost::_bi::storage6.374", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage6.374" = type { %"struct.boost::_bi::storage5.375", %"class.boost::_bi::value.383" }
%"struct.boost::_bi::storage5.375" = type { %"struct.boost::_bi::storage4.376", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage4.376" = type { %"struct.boost::_bi::storage3.377", %"class.boost::reference_wrapper.269" }
%"struct.boost::_bi::storage3.377" = type { %"struct.boost::_bi::storage2.378", %"class.boost::reference_wrapper.382" }
%"struct.boost::_bi::storage2.378" = type { %"struct.boost::_bi::storage1.379", %"class.boost::reference_wrapper.381" }
%"struct.boost::_bi::storage1.379" = type { %"class.boost::reference_wrapper.380" }
%"class.boost::reference_wrapper.380" = type { ptr }
%"class.boost::reference_wrapper.381" = type { ptr }
%"class.boost::reference_wrapper.382" = type { ptr }
%"class.boost::_bi::value.383" = type { %"struct.dealii::MatrixCreator::IteratorRange.65" }
%"class.dealii::Threads::internal::fun_encapsulator.76" = type { %"class.boost::function.77" }
%"class.boost::function.77" = type { %"class.boost::function9.78" }
%"class.boost::function9.78" = type { %"class.boost::function_base" }
%"class.boost::_bi::bind_t.384" = type { %"class.boost::function.77", %"class.boost::_bi::list9.385" }
%"class.boost::_bi::list9.385" = type { %"struct.boost::_bi::storage9.386" }
%"struct.boost::_bi::storage9.386" = type { %"struct.boost::_bi::storage8.387", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage8.387" = type { %"struct.boost::_bi::storage7.388", %"class.boost::_bi::value.383" }
%"struct.boost::_bi::storage7.388" = type { %"struct.boost::_bi::storage6.389", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage6.389" = type { %"struct.boost::_bi::storage5.390", %"class.boost::reference_wrapper.281" }
%"struct.boost::_bi::storage5.390" = type { %"struct.boost::_bi::storage4.376", %"class.boost::reference_wrapper.280" }
%"class.dealii::Threads::internal::fun_encapsulator.79" = type { %"class.boost::function.80" }
%"class.boost::function.80" = type { %"class.boost::function7.81" }
%"class.boost::function7.81" = type { %"class.boost::function_base" }
%"class.dealii::SparseMatrix.39" = type <{ ptr, %"class.dealii::SmartPointer.33", ptr, i32, [4 x i8], %"class.dealii::Subscriptor" }>
%"class.boost::_bi::bind_t.391" = type { %"class.boost::function.80", %"class.boost::_bi::list7.392" }
%"class.boost::_bi::list7.392" = type { %"struct.boost::_bi::storage7.393" }
%"struct.boost::_bi::storage7.393" = type { %"struct.boost::_bi::storage6.394", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage6.394" = type { %"struct.boost::_bi::storage5.395", %"class.boost::_bi::value.383" }
%"struct.boost::_bi::storage5.395" = type { %"struct.boost::_bi::storage4.396", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage4.396" = type { %"struct.boost::_bi::storage3.377", %"class.boost::reference_wrapper.294" }
%"class.dealii::Threads::internal::fun_encapsulator.82" = type { %"class.boost::function.83" }
%"class.boost::function.83" = type { %"class.boost::function9.84" }
%"class.boost::function9.84" = type { %"class.boost::function_base" }
%"class.boost::_bi::bind_t.397" = type { %"class.boost::function.83", %"class.boost::_bi::list9.398" }
%"class.boost::_bi::list9.398" = type { %"struct.boost::_bi::storage9.399" }
%"struct.boost::_bi::storage9.399" = type { %"struct.boost::_bi::storage8.400", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage8.400" = type { %"struct.boost::_bi::storage7.401", %"class.boost::_bi::value.383" }
%"struct.boost::_bi::storage7.401" = type { %"struct.boost::_bi::storage6.402", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage6.402" = type { %"struct.boost::_bi::storage5.403", %"class.boost::reference_wrapper.281" }
%"struct.boost::_bi::storage5.403" = type { %"struct.boost::_bi::storage4.396", %"class.boost::reference_wrapper.280" }
%"class.dealii::Threads::internal::fun_encapsulator.138" = type { %"class.boost::function.139" }
%"class.boost::function.139" = type { %"class.boost::function9.140" }
%"class.boost::function9.140" = type { %"class.boost::function_base" }
%"class.boost::tuples::tuple" = type { %"struct.boost::tuples::cons" }
%"struct.boost::tuples::cons" = type { ptr, %"struct.boost::tuples::cons.136" }
%"struct.boost::tuples::cons.136" = type { ptr, %"struct.boost::tuples::cons.137" }
%"struct.boost::tuples::cons.137" = type { ptr }
%"class.dealii::FEFaceValues" = type { %"class.dealii::FEFaceValuesBase" }
%"class.dealii::FEFaceValuesBase" = type { %"class.dealii::FEValuesBase", i32, %"class.dealii::Quadrature.85" }
%"class.dealii::Quadrature.85" = type { %"class.dealii::Subscriptor", i32, %"class.std::vector.87", %"class.std::vector.92" }
%"class.dealii::TriaIterator.411" = type { %"class.dealii::TriaRawIterator.412" }
%"class.dealii::TriaRawIterator.412" = type { %"class.dealii::DoFAccessor.410" }
%"class.dealii::DoFAccessor.410" = type { %"class.dealii::TriaAccessor.317", ptr }
%"class.dealii::TriaAccessor.317" = type { %"class.dealii::TriaAccessorBase.318" }
%"class.dealii::TriaAccessorBase.318" = type { i32, ptr }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.std::pair.405" }
%"struct.std::pair.405" = type { i8, ptr }
%"class.dealii::internal::Triangulation::TriaObject" = type { [6 x i32] }
%"class.dealii::internal::Triangulation::TriaObjects.329" = type <{ %"class.std::vector.330", %"class.std::vector.111", %"class.std::vector.335", %"class.std::vector.126", %"class.std::vector.126", %"class.std::vector.183", i32, i32, i8, [7 x i8], %"class.std::vector.340", i32, [4 x i8] }>
%"class.std::vector.330" = type { %"struct.std::_Vector_base.331" }
%"struct.std::_Vector_base.331" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<2>, std::allocator<dealii::internal::Triangulation::TriaObject<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.335" = type { %"struct.std::_Vector_base.336" }
%"struct.std::_Vector_base.336" = type { %"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::RefinementCase<2>, std::allocator<dealii::RefinementCase<2> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.340" = type { %"struct.std::_Vector_base.341" }
%"struct.std::_Vector_base.341" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<2> >::UserData> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.std::pair.420" = type { %"struct.std::pair.263", i32 }
%"class.dealii::Point" = type { %"class.dealii::Tensor" }
%"class.dealii::Tensor" = type { [3 x double] }
%"class.boost::_bi::bind_t.429" = type { %"class.boost::function.139", %"class.boost::_bi::list9.430" }
%"class.boost::_bi::list9.430" = type { %"struct.boost::_bi::storage9.431" }
%"struct.boost::_bi::storage9.431" = type { %"struct.boost::_bi::storage8.432", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage8.432" = type { %"struct.boost::_bi::storage7.433", %"class.boost::_bi::value.270" }
%"struct.boost::_bi::storage7.433" = type { %"struct.boost::_bi::storage6.434", %"class.boost::reference_wrapper.443" }
%"struct.boost::_bi::storage6.434" = type { %"struct.boost::_bi::storage5.435", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage5.435" = type { %"struct.boost::_bi::storage4.436", %"class.boost::reference_wrapper.442" }
%"struct.boost::_bi::storage4.436" = type { %"struct.boost::_bi::storage3.437", %"class.boost::reference_wrapper.281" }
%"struct.boost::_bi::storage3.437" = type { %"struct.boost::_bi::storage2.438", %"class.boost::reference_wrapper.441" }
%"struct.boost::_bi::storage2.438" = type { %"struct.boost::_bi::storage1.439", %"class.boost::reference_wrapper.269" }
%"struct.boost::_bi::storage1.439" = type { %"class.boost::_bi::value.440" }
%"class.boost::_bi::value.440" = type { %"class.boost::tuples::tuple" }
%"class.boost::reference_wrapper.441" = type { ptr }
%"class.boost::reference_wrapper.442" = type { ptr }
%"class.boost::reference_wrapper.443" = type { ptr }
%"class.dealii::Threads::internal::fun_encapsulator.150" = type { %"class.boost::function.151" }
%"class.boost::function.151" = type { %"class.boost::function9.152" }
%"class.boost::function9.152" = type { %"class.boost::function_base" }
%"class.boost::tuples::tuple.146" = type { %"struct.boost::tuples::cons.147" }
%"struct.boost::tuples::cons.147" = type { ptr, %"struct.boost::tuples::cons.148" }
%"struct.boost::tuples::cons.148" = type { ptr, %"struct.boost::tuples::cons.149" }
%"struct.boost::tuples::cons.149" = type { ptr }
%"class.dealii::hp::FEFaceValues" = type { %"class.dealii::internal::hp::FEValuesBase.444" }
%"class.dealii::internal::hp::FEValuesBase.444" = type { %"class.dealii::SmartPointer.54", %"class.dealii::SmartPointer.302", %"class.dealii::hp::QCollection.153", %"class.dealii::Table.445", %"class.dealii::TableIndices.305", i32 }
%"class.dealii::hp::QCollection.153" = type { %"class.dealii::Subscriptor", %"class.std::vector.154" }
%"class.std::vector.154" = type { %"struct.std::_Vector_base.155" }
%"struct.std::_Vector_base.155" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<2> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<2> > > >::_Vector_impl" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<2> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<2> > > >::_Vector_impl" = type { %"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<2> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<2> > > >::_Vector_impl_data" }
%"struct.std::_Vector_base<boost::shared_ptr<const dealii::Quadrature<2> >, std::allocator<boost::shared_ptr<const dealii::Quadrature<2> > > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::Table.445" = type { %"class.dealii::TableBase.446" }
%"class.dealii::TableBase.446" = type { %"class.dealii::Subscriptor", ptr, i32, %"class.dealii::TableIndices.305" }
%"class.dealii::TriaIterator.319" = type { %"class.dealii::TriaRawIterator.320" }
%"class.dealii::TriaRawIterator.320" = type { %"class.dealii::DoFAccessor.316" }
%"class.dealii::DoFAccessor.316" = type { %"class.dealii::TriaAccessor.317", ptr }
%"class.boost::shared_ptr.322" = type { ptr, %"class.boost::detail::shared_count" }
%"struct.std::_Bit_iterator_base" = type <{ ptr, i32, [4 x i8] }>
%"class.boost::shared_ptr.447" = type { ptr, %"class.boost::detail::shared_count" }
%"class.boost::_bi::bind_t.449" = type { %"class.boost::function.151", %"class.boost::_bi::list9.450" }
%"class.boost::_bi::list9.450" = type { %"struct.boost::_bi::storage9.451" }
%"struct.boost::_bi::storage9.451" = type { %"struct.boost::_bi::storage8.452", %"class.boost::reference_wrapper.271" }
%"struct.boost::_bi::storage8.452" = type { %"struct.boost::_bi::storage7.453", %"class.boost::_bi::value.383" }
%"struct.boost::_bi::storage7.453" = type { %"struct.boost::_bi::storage6.454", %"class.boost::reference_wrapper.443" }
%"struct.boost::_bi::storage6.454" = type { %"struct.boost::_bi::storage5.455", %"class.boost::_bi::value" }
%"struct.boost::_bi::storage5.455" = type { %"struct.boost::_bi::storage4.456", %"class.boost::reference_wrapper.442" }
%"struct.boost::_bi::storage4.456" = type { %"struct.boost::_bi::storage3.457", %"class.boost::reference_wrapper.281" }
%"struct.boost::_bi::storage3.457" = type { %"struct.boost::_bi::storage2.458", %"class.boost::reference_wrapper.441" }
%"struct.boost::_bi::storage2.458" = type { %"struct.boost::_bi::storage1.459", %"class.boost::reference_wrapper.269" }
%"struct.boost::_bi::storage1.459" = type { %"class.boost::_bi::value.460" }
%"class.boost::_bi::value.460" = type { %"class.boost::tuples::tuple.146" }
%"struct.boost::detail::function::function_buffer::type_t" = type { ptr, i8, i8 }
%"class.std::type_info" = type { ptr, ptr }
%"class.boost::detail::sp_counted_impl_p" = type { %"class.boost::detail::sp_counted_base", ptr }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon.275 }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { ptr }
%union.anon.275 = type { i64, [8 x i8] }
%"class.boost::bad_function_call" = type { %"class.std::runtime_error" }
%"class.std::runtime_error" = type { %"class.std::exception", %"struct.std::__cow_string" }
%"class.std::exception" = type { ptr }
%"struct.std::__cow_string" = type { %union.anon }
%union.anon = type { ptr }
%"struct.boost::exception_detail::error_info_injector" = type <{ %"class.boost::bad_function_call", %"class.boost::exception.base", [4 x i8] }>
%"class.boost::exception.base" = type <{ ptr, %"class.boost::exception_detail::refcount_ptr", ptr, ptr, i32 }>
%"class.boost::exception_detail::refcount_ptr" = type { ptr }
%"class.dealii::Threads::Thread<>::ExcNoThread" = type { %"class.dealii::ExceptionBase.base", [4 x i8] }
%"class.dealii::ExceptionBase.base" = type <{ %"class.std::exception", ptr, i32, [4 x i8], ptr, ptr, ptr, ptr, i32 }>
%"class.dealii::internal::Triangulation::TriaObject.346" = type { [4 x i32] }
%"class.dealii::internal::Triangulation::TriaObjectsQuad3D" = type { %"class.dealii::internal::Triangulation::TriaObjects.base.345", %"class.std::vector.126" }
%"class.dealii::internal::Triangulation::TriaObjects.base.345" = type <{ %"class.std::vector.330", %"class.std::vector.111", %"class.std::vector.335", %"class.std::vector.126", %"class.std::vector.126", %"class.std::vector.183", i32, i32, i8, [7 x i8], %"class.std::vector.340", i32 }>
%"class.dealii::internal::Triangulation::TriaFaces" = type { %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", %"class.dealii::internal::Triangulation::TriaObjects.347" }
%"class.dealii::internal::Triangulation::TriaObjects.347" = type <{ %"class.std::vector.348", %"class.std::vector.111", %"class.std::vector.353", %"class.std::vector.126", %"class.std::vector.126", %"class.std::vector.183", i32, i32, i8, [7 x i8], %"class.std::vector.358", i32, [4 x i8] }>
%"class.std::vector.348" = type { %"struct.std::_Vector_base.349" }
%"struct.std::_Vector_base.349" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<1>, std::allocator<dealii::internal::Triangulation::TriaObject<1> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<1>, std::allocator<dealii::internal::Triangulation::TriaObject<1> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<1>, std::allocator<dealii::internal::Triangulation::TriaObject<1> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObject<1>, std::allocator<dealii::internal::Triangulation::TriaObject<1> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.353" = type { %"struct.std::_Vector_base.354" }
%"struct.std::_Vector_base.354" = type { %"struct.std::_Vector_base<dealii::RefinementCase<1>, std::allocator<dealii::RefinementCase<1> > >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::RefinementCase<1>, std::allocator<dealii::RefinementCase<1> > >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::RefinementCase<1>, std::allocator<dealii::RefinementCase<1> > >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::RefinementCase<1>, std::allocator<dealii::RefinementCase<1> > >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.358" = type { %"struct.std::_Vector_base.359" }
%"struct.std::_Vector_base.359" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData> >::_Vector_impl" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData> >::_Vector_impl" = type { %"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData> >::_Vector_impl_data" }
%"struct.std::_Vector_base<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData, std::allocator<dealii::internal::Triangulation::TriaObjects<dealii::internal::Triangulation::TriaObject<1> >::UserData> >::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.dealii::internal::Triangulation::TriaObject.364" = type { [2 x i32] }
%"class.dealii::internal::hp::DoFObjects" = type { %"class.std::vector.28", %"class.std::vector.28" }
%"class.dealii::internal::hp::DoFFaces" = type { %"class.dealii::internal::hp::DoFObjects", %"class.dealii::internal::hp::DoFObjects.366" }
%"class.dealii::internal::hp::DoFObjects.366" = type { %"class.std::vector.28", %"class.std::vector.28" }
%"class.dealii::internal::hp::DoFLevel" = type { %"class.dealii::internal::hp::DoFLevel.368", %"class.dealii::internal::hp::DoFObjects.369" }
%"class.dealii::internal::hp::DoFLevel.368" = type { %"class.std::vector.28" }
%"class.dealii::internal::hp::DoFObjects.369" = type { %"class.std::vector.28", %"class.std::vector.28" }
%"class.boost::shared_ptr.370" = type { ptr, %"class.boost::detail::shared_count" }
%"class.dealii::internal::DoFHandler::DoFFaces" = type { %"class.dealii::internal::DoFHandler::DoFObjects.426", %"class.dealii::internal::DoFHandler::DoFObjects.427" }
%"class.dealii::internal::DoFHandler::DoFObjects.426" = type { %"class.std::vector.28" }
%"class.dealii::internal::DoFHandler::DoFObjects.427" = type { %"class.std::vector.28" }
%"class.boost::shared_ptr.448" = type { ptr, %"class.boost::detail::shared_count" }

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_ = comdat any

$_ZN6dealii7Threads6ThreadIvED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN6dealii7Threads11ThreadGroupIvED2Ev = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_ = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSG_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_ = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSG_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_ = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSH_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_ = comdat any

$_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_ = comdat any

$_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSH_ = comdat any

$_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESN_ = comdat any

$_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESR_ = comdat any

$_ZN6dealii13MatrixCreator29create_boundary_mass_matrix_1ILi3ELi3EEEvN5boost6tuples5tupleIRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEENS3_9null_typeESH_SH_SH_SH_SH_SH_EERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEERKSW_NS0_13IteratorRangeISA_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleINS5_IRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi2EEENS4_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexESI_EELi9EEclESJ_SM_S10_S13_S17_SR_S19_S1C_S1E_ = comdat any

$_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESS_ = comdat any

$_ZN6dealii13MatrixCreator29create_boundary_mass_matrix_1ILi3ELi3EEEvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS5_10DoFHandlerIXT_EXT0_EEERKNS5_11QCollectionIXmiT_Li1EEEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEERKSX_NS0_13IteratorRangeISB_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleINS5_IRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexESJ_EELi9EEclESK_SN_S11_S14_S18_SS_S1A_S1D_S1F_ = comdat any

$_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_2hp10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESO_ = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE = comdat any

$_ZN6dealii13MatrixCreator23create_laplace_matrix_1ILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSJ_ = comdat any

$_ZN6dealii13MatrixCreator23create_laplace_matrix_2ILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSJ_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSF_ = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE = comdat any

$_ZN6dealii13MatrixCreator23create_laplace_matrix_1ILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSK_ = comdat any

$_ZN6dealii13MatrixCreator23create_laplace_matrix_2ILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE = comdat any

$_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSG_ = comdat any

$_ZN5boost10shared_ptrIN6dealii7Threads8internal16ThreadDescriptorIvEEED2Ev = comdat any

$_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj = comdat any

$_ZSt9__advanceIN6dealii18TriaActiveIteratorINS0_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEElEvRT_T0_St26bidirectional_iterator_tag = comdat any

$_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_ = comdat any

$_ZN6dealii6VectorIdED2Ev = comdat any

$_ZN6dealii8FEValuesILi3ELi3EED2Ev = comdat any

$_ZN6dealii6VectorIdED0Ev = comdat any

$_ZN6dealii6VectorIdE6reinitEjb = comdat any

$_ZN6dealii6VectorIdE4swapERS1_ = comdat any

$_ZN6dealii9TableBaseILi2EdED2Ev = comdat any

$_ZN6dealii9TableBaseILi2EdED0Ev = comdat any

$_ZN6dealii8FEValuesILi3ELi3EED0Ev = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSW_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SS_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SS_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIdEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSU_IS9_EENSU_ISD_EENSU_ISG_EESL_SO_NSU_ISQ_EEEENS_3_bi6bind_tINS10_11unspecifiedET_NS10_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES13_S15_S16_S17_S18_S19_S1A_S1B_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS4_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE6manageERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE7managerERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SQ_ = comdat any

$_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_ = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev = comdat any

$_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev = comdat any

$_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv = comdat any

$_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv = comdat any

$_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev = comdat any

$_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev = comdat any

$_ZThn56_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv = comdat any

$_ZThn56_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv = comdat any

$_ZThn56_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev = comdat any

$_ZThn56_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev = comdat any

$_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev = comdat any

$_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev = comdat any

$_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev = comdat any

$_ZN5boost17bad_function_callD0Ev = comdat any

$_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC2ERKS5_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZN5boost6detail15sp_counted_baseD2Ev = comdat any

$_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEED0Ev = comdat any

$_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEE7disposeEv = comdat any

$_ZN5boost6detail15sp_counted_base7destroyEv = comdat any

$_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEE11get_deleterERKSt9type_info = comdat any

$_ZNK5boost9function0IvEclEv = comdat any

$_ZNK6dealii7Threads6ThreadIvE4joinEv = comdat any

$_ZN6dealii7Threads6ThreadIvE11ExcNoThreadD0Ev = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS10_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SQ_ST_SW_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SQ_ST_SW_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIdEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSK_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSY_IS9_EENSY_ISD_EENSY_ISG_EENSY_ISK_EENSY_ISN_EESP_SS_NSY_ISU_EEEENS_3_bi6bind_tINS16_11unspecifiedET_NS16_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES19_S1B_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS4_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE6manageERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE7managerERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SO_SR_SU_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZN6dealii9TableBaseILi2EfED2Ev = comdat any

$_ZN6dealii9TableBaseILi2EfED0Ev = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSW_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SS_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SS_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIfEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSU_IS9_EENSU_ISD_EENSU_ISG_EESL_SO_NSU_ISQ_EEEENS_3_bi6bind_tINS10_11unspecifiedET_NS10_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES13_S15_S16_S17_S18_S19_S1A_S1B_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS4_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE6manageERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE7managerERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SQ_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS10_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SQ_ST_SW_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SQ_ST_SW_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIfEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSK_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSY_IS9_EENSY_ISD_EENSY_ISG_EENSY_ISK_EENSY_ISN_EESP_SS_NSY_ISU_EEEENS_3_bi6bind_tINS16_11unspecifiedET_NS16_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES19_S1B_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS4_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE6manageERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE7managerERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SO_SR_SU_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZSt9__advanceIN6dealii18TriaActiveIteratorINS0_15DoFCellAccessorINS0_2hp10DoFHandlerILi3ELi3EEEEEEElEvRT_T0_St26bidirectional_iterator_tag = comdat any

$_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd = comdat any

$_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_ = comdat any

$_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj = comdat any

$_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj = comdat any

$_ZN6dealii2hp11QCollectionILi3EED2Ev = comdat any

$_ZN5boost10shared_ptrIN6dealii8FEValuesILi3ELi3EEEED2Ev = comdat any

$_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev = comdat any

$_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED0Ev = comdat any

$_ZN6dealii2hp11QCollectionILi3EED0Ev = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSX_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_ST_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_ST_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIdEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSV_ISA_EENSV_ISE_EENSV_ISH_EESM_SP_NSV_ISR_EEEENS_3_bi6bind_tINS11_11unspecifiedET_NS11_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES14_S16_S17_S18_S19_S1A_S1B_S1C_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS4_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE6manageERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE7managerERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SR_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS11_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_SR_SU_SX_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_SR_SU_SX_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIdEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSL_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSZ_ISA_EENSZ_ISE_EENSZ_ISH_EENSZ_ISL_EENSZ_ISO_EESQ_ST_NSZ_ISV_EEEENS_3_bi6bind_tINS17_11unspecifiedET_NS17_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1A_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_S1K_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS4_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE7managerERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SP_SS_SV_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSX_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_ST_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_ST_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIfEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSV_ISA_EENSV_ISE_EENSV_ISH_EESM_SP_NSV_ISR_EEEENS_3_bi6bind_tINS11_11unspecifiedET_NS11_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES14_S16_S17_S18_S19_S1A_S1B_S1C_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS4_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE6manageERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE7managerERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SR_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS11_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_SR_SU_SX_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_SR_SU_SX_ = comdat any

$_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIfEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSL_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSZ_ISA_EENSZ_ISE_EENSZ_ISH_EENSZ_ISL_EENSZ_ISO_EESQ_ST_NSZ_ISV_EEEENS_3_bi6bind_tINS17_11unspecifiedET_NS17_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1A_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_S1K_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS4_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE7managerERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SP_SS_SV_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZSt18__do_uninit_fill_nIPSt6vectorIdSaIdEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi2ET_EERSt6vectorIjSaIjEEj = comdat any

$_ZN6dealii16FEFaceValuesBaseILi3ELi3EED2Ev = comdat any

$_ZN6dealii16FEFaceValuesBaseILi3ELi3EED0Ev = comdat any

$_ZN5boost6detail8function15functor_managerIPFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker9IPFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEvSJ_SM_S10_S13_S17_SR_S19_S1C_S1F_E6invokeERNS1_15function_bufferESJ_SM_S10_S13_S17_SR_S19_S1C_S1F_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS4_5list9INS4_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS20_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS20_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEE6manageERKNS1_15function_bufferERS21_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNSB_10DoFHandlerILi3ELi3EEERKNSB_10QuadratureILi2EEENS9_9null_typeESO_SO_SO_SO_SO_SO_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSX_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESX_RKS1C_NSB_13MatrixCreator13IteratorRangeISH_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISP_EENS_17reference_wrapperISR_EENS1R_IS15_EENS1R_IS18_EENS1R_IS1C_EENS1P_ISX_EENS1R_IS1E_EENS1P_IS1I_EENS1R_IS1K_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEE7managerERKNS1_15function_bufferERS21_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEclESH_SK_SY_S11_S15_SP_S17_S1A_S1D_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNSB_10DoFHandlerILi3ELi3EEERKNSB_10QuadratureILi2EEENS9_9null_typeESO_SO_SO_SO_SO_SO_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSX_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESX_RKS1C_NSB_13MatrixCreator13IteratorRangeISH_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISP_EENS_17reference_wrapperISR_EENS1R_IS15_EENS1R_IS18_EENS1R_IS1C_EENS1P_ISX_EENS1R_IS1E_EENS1P_IS1I_EENS1R_IS1K_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb = comdat any

$_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi2ET_EERSt6vectorIjSaIjEEj = comdat any

$_ZN6dealii2hp11QCollectionILi2EED2Ev = comdat any

$_ZN5boost10shared_ptrIN6dealii12FEFaceValuesILi3ELi3EEEED2Ev = comdat any

$_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED2Ev = comdat any

$_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED0Ev = comdat any

$_ZN6dealii2hp11QCollectionILi2EED0Ev = comdat any

$_ZN5boost6detail8function15functor_managerIPFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS1K_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function22void_function_invoker9IPFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEvSK_SN_S11_S14_S18_SS_S1A_S1D_S1G_E6invokeERNS1_15function_bufferESK_SN_S11_S14_S18_SS_S1A_S1D_S1G_ = comdat any

$_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS4_5list9INS4_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS21_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS21_EE5valueEEE5valueEiE4typeE = comdat any

$_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_ = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEE6manageERKNS1_15function_bufferERS22_NS1_30functor_manager_operation_typeE = comdat any

$_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEvE6invokeERNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSC_10DoFHandlerILi3ELi3EEERKNSC_11QCollectionILi2EEENS9_9null_typeESP_SP_SP_SP_SP_SP_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSY_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESY_RKS1D_NSB_13MatrixCreator13IteratorRangeISI_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISQ_EENS_17reference_wrapperISS_EENS1S_IS16_EENS1S_IS19_EENS1S_IS1D_EENS1Q_ISY_EENS1S_IS1F_EENS1Q_IS1J_EENS1S_IS1L_EEEEEEEEbT_RNS1_15function_bufferE = comdat any

$_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEE7managerERKNS1_15function_bufferERS22_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE = comdat any

$_ZNK5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEclESI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_ = comdat any

$_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSC_10DoFHandlerILi3ELi3EEERKNSC_11QCollectionILi2EEENS9_9null_typeESP_SP_SP_SP_SP_SP_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSY_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESY_RKS1D_NSB_13MatrixCreator13IteratorRangeISI_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISQ_EENS_17reference_wrapperISS_EENS1S_IS16_EENS1S_IS19_EENS1S_IS1D_EENS1Q_ISY_EENS1S_IS1F_EENS1Q_IS1J_EENS1S_IS1L_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE = comdat any

$_ZTVN6dealii6VectorIdEE = comdat any

$_ZTSN6dealii6VectorIdEE = comdat any

$_ZTIN6dealii6VectorIdEE = comdat any

$_ZTVN6dealii9TableBaseILi2EdEE = comdat any

$_ZTSN6dealii9TableBaseILi2EdEE = comdat any

$_ZTIN6dealii9TableBaseILi2EdEE = comdat any

$_ZTVN6dealii8FEValuesILi3ELi3EEE = comdat any

$_ZTSN6dealii8FEValuesILi3ELi3EEE = comdat any

$_ZTSN6dealii12FEValuesBaseILi3ELi3EEE = comdat any

$_ZTSN6dealii12FEValuesDataILi3ELi3EEE = comdat any

$_ZTIN6dealii12FEValuesDataILi3ELi3EEE = comdat any

$_ZTIN6dealii12FEValuesBaseILi3ELi3EEE = comdat any

$_ZTIN6dealii8FEValuesILi3ELi3EEE = comdat any

$_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = comdat any

$_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE = comdat any

$_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE = comdat any

$_ZTSN5boost17bad_function_callE = comdat any

$_ZTIN5boost17bad_function_callE = comdat any

$_ZTSN5boost9exceptionE = comdat any

$_ZTIN5boost9exceptionE = comdat any

$_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE = comdat any

$_ZTSN5boost16exception_detail10clone_baseE = comdat any

$_ZTIN5boost16exception_detail10clone_baseE = comdat any

$_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE = comdat any

$_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE = comdat any

$_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE = comdat any

$_ZTVN5boost17bad_function_callE = comdat any

$_ZTVN5boost9exceptionE = comdat any

$_ZTVN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE = comdat any

$_ZTSN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE = comdat any

$_ZTSN5boost6detail15sp_counted_baseE = comdat any

$_ZTIN5boost6detail15sp_counted_baseE = comdat any

$_ZTIN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE = comdat any

$_ZTSN6dealii7Threads6ThreadIvE11ExcNoThreadE = comdat any

$_ZTIN6dealii7Threads6ThreadIvE11ExcNoThreadE = comdat any

$_ZTVN6dealii7Threads6ThreadIvE11ExcNoThreadE = comdat any

$_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = comdat any

$_ZTVN6dealii9TableBaseILi2EfEE = comdat any

$_ZTSN6dealii9TableBaseILi2EfEE = comdat any

$_ZTIN6dealii9TableBaseILi2EfEE = comdat any

$_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = comdat any

$_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = comdat any

$_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table = comdat any

$_ZZN6dealii8internal12TriaAccessor14Implementation10line_indexILi3ELi3EEEjRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table = comdat any

$_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table = comdat any

$_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE10bool_table = comdat any

$_ZTVN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE = comdat any

$_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE = comdat any

$_ZTIN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE = comdat any

$_ZTVN6dealii2hp11QCollectionILi3EEE = comdat any

$_ZTSN6dealii2hp11QCollectionILi3EEE = comdat any

$_ZTIN6dealii2hp11QCollectionILi3EEE = comdat any

$_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = comdat any

$_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = comdat any

$_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = comdat any

$_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = comdat any

$_ZTVN6dealii16FEFaceValuesBaseILi3ELi3EEE = comdat any

$_ZTSN6dealii16FEFaceValuesBaseILi3ELi3EEE = comdat any

$_ZTIN6dealii16FEFaceValuesBaseILi3ELi3EEE = comdat any

$_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSH_SK_SY_S11_S15_SP_S17_S1A_S1D_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE = comdat any

$_ZTVN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE = comdat any

$_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE = comdat any

$_ZTIN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE = comdat any

$_ZTVN6dealii2hp11QCollectionILi2EEE = comdat any

$_ZTSN6dealii2hp11QCollectionILi2EEE = comdat any

$_ZTIN6dealii2hp11QCollectionILi2EEE = comdat any

$_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_EEEvT_E13stored_vtable = comdat any

$_ZTSPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZTSFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZTIFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZTIPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = comdat any

$_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_E13stored_vtable = comdat any

$_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE = comdat any

$_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE = comdat any

@_ZN6dealii16multithread_infoE = external local_unnamed_addr global %"class.dealii::MultithreadInfo", align 4
@_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE = external global %"class.dealii::MappingQ1", align 8
@_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE = external global %"class.dealii::hp::MappingCollection", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@_ZTVN6dealii6VectorIdEE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii6VectorIdEE, ptr @_ZN6dealii6VectorIdED2Ev, ptr @_ZN6dealii6VectorIdED0Ev, ptr @_ZN6dealii6VectorIdE6reinitEjb, ptr @_ZN6dealii6VectorIdE4swapERS1_] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN6dealii6VectorIdEE = linkonce_odr dso_local constant [20 x i8] c"N6dealii6VectorIdEE\00", comdat, align 1
@_ZTIN6dealii11SubscriptorE = external constant ptr
@_ZTIN6dealii6VectorIdEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii6VectorIdEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii9TableBaseILi2EdEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9TableBaseILi2EdEE, ptr @_ZN6dealii9TableBaseILi2EdED2Ev, ptr @_ZN6dealii9TableBaseILi2EdED0Ev] }, comdat, align 8
@_ZTSN6dealii9TableBaseILi2EdEE = linkonce_odr dso_local constant [27 x i8] c"N6dealii9TableBaseILi2EdEE\00", comdat, align 1
@_ZTIN6dealii9TableBaseILi2EdEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9TableBaseILi2EdEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii8FEValuesILi3ELi3EEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii8FEValuesILi3ELi3EEE, ptr @_ZN6dealii8FEValuesILi3ELi3EED2Ev, ptr @_ZN6dealii8FEValuesILi3ELi3EED0Ev] }, comdat, align 8
@_ZTSN6dealii8FEValuesILi3ELi3EEE = linkonce_odr dso_local constant [29 x i8] c"N6dealii8FEValuesILi3ELi3EEE\00", comdat, align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global ptr
@_ZTSN6dealii12FEValuesBaseILi3ELi3EEE = linkonce_odr dso_local constant [34 x i8] c"N6dealii12FEValuesBaseILi3ELi3EEE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global ptr
@_ZTSN6dealii12FEValuesDataILi3ELi3EEE = linkonce_odr dso_local constant [34 x i8] c"N6dealii12FEValuesDataILi3ELi3EEE\00", comdat, align 1
@_ZTIN6dealii12FEValuesDataILi3ELi3EEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN6dealii12FEValuesDataILi3ELi3EEE }, comdat, align 8
@_ZTIN6dealii12FEValuesBaseILi3ELi3EEE = linkonce_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN6dealii12FEValuesBaseILi3ELi3EEE, i32 0, i32 2, ptr @_ZTIN6dealii12FEValuesDataILi3ELi3EEE, i64 18432, ptr @_ZTIN6dealii11SubscriptorE, i64 2 }, comdat, align 8
@_ZTIN6dealii8FEValuesILi3ELi3EEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii8FEValuesILi3ELi3EEE, ptr @_ZTIN6dealii12FEValuesBaseILi3ELi3EEE }, comdat, align 8
@_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable7" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSW_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SS_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SS_ }, comdat, align 8
@_ZTVN10__cxxabiv119__pointer_type_infoE = external global ptr
@_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [199 x i8] c"PFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTVN10__cxxabiv120__function_type_infoE = external global ptr
@_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [198 x i8] c"FvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE6manageERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = linkonce_odr dso_local constant [366 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE }, comdat, align 8
@_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE = linkonce_odr dso_local constant [92 x i8] c"N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE\00", comdat, align 1
@_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE = linkonce_odr dso_local constant [73 x i8] c"N5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE\00", comdat, align 1
@_ZTSN5boost17bad_function_callE = linkonce_odr dso_local constant [28 x i8] c"N5boost17bad_function_callE\00", comdat, align 1
@_ZTISt13runtime_error = external constant ptr
@_ZTIN5boost17bad_function_callE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN5boost17bad_function_callE, ptr @_ZTISt13runtime_error }, comdat, align 8
@_ZTSN5boost9exceptionE = linkonce_odr dso_local constant [19 x i8] c"N5boost9exceptionE\00", comdat, align 1
@_ZTIN5boost9exceptionE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost9exceptionE }, comdat, align 8
@_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE = linkonce_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE, i32 0, i32 2, ptr @_ZTIN5boost17bad_function_callE, i64 2, ptr @_ZTIN5boost9exceptionE, i64 4098 }, comdat, align 8
@_ZTSN5boost16exception_detail10clone_baseE = linkonce_odr dso_local constant [39 x i8] c"N5boost16exception_detail10clone_baseE\00", comdat, align 1
@_ZTIN5boost16exception_detail10clone_baseE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost16exception_detail10clone_baseE }, comdat, align 8
@_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE = linkonce_odr dso_local constant { ptr, ptr, i32, i32, ptr, i64, ptr, i64 } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2), ptr @_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i32 0, i32 2, ptr @_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE, i64 2, ptr @_ZTIN5boost16exception_detail10clone_baseE, i64 14338 }, comdat, align 8
@_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE = linkonce_odr dso_local unnamed_addr constant { [7 x ptr], [4 x ptr], [6 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, ptr @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev, ptr @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, ptr @_ZNKSt13runtime_error4whatEv, ptr @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, ptr @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv], [4 x ptr] [ptr inttoptr (i64 -16 to ptr), ptr @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, ptr @_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, ptr @_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev], [6 x ptr] [ptr inttoptr (i64 -56 to ptr), ptr @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, ptr @_ZThn56_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, ptr @_ZThn56_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv, ptr @_ZThn56_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, ptr @_ZThn56_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev] }, comdat, align 8
@_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE = linkonce_odr dso_local unnamed_addr constant { [5 x ptr], [4 x ptr] } { [5 x ptr] [ptr null, ptr @_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE, ptr @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev, ptr @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, ptr @_ZNKSt13runtime_error4whatEv], [4 x ptr] [ptr inttoptr (i64 -16 to ptr), ptr @_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE, ptr @_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev, ptr @_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev] }, comdat, align 8
@_ZTVN5boost17bad_function_callE = linkonce_odr dso_local unnamed_addr constant { [5 x ptr] } { [5 x ptr] [ptr null, ptr @_ZTIN5boost17bad_function_callE, ptr @_ZNSt13runtime_errorD2Ev, ptr @_ZN5boost17bad_function_callD0Ev, ptr @_ZNKSt13runtime_error4whatEv] }, comdat, align 8
@_ZTVN5boost9exceptionE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN5boost9exceptionE, ptr @__cxa_pure_virtual, ptr @__cxa_pure_virtual] }, comdat, align 8
@.str.10 = private unnamed_addr constant [30 x i8] c"call to empty boost::function\00", align 1
@_ZTVN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE = linkonce_odr dso_local unnamed_addr constant { [7 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTIN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE, ptr @_ZN5boost6detail15sp_counted_baseD2Ev, ptr @_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEED0Ev, ptr @_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEE7disposeEv, ptr @_ZN5boost6detail15sp_counted_base7destroyEv, ptr @_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEE11get_deleterERKSt9type_info] }, comdat, align 8
@_ZTSN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE = linkonce_odr dso_local constant [84 x i8] c"N5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE\00", comdat, align 1
@_ZTSN5boost6detail15sp_counted_baseE = linkonce_odr dso_local constant [33 x i8] c"N5boost6detail15sp_counted_baseE\00", comdat, align 1
@_ZTIN5boost6detail15sp_counted_baseE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost6detail15sp_counted_baseE }, comdat, align 8
@_ZTIN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE, ptr @_ZTIN5boost6detail15sp_counted_baseE }, comdat, align 8
@.str.12 = private unnamed_addr constant [33 x i8] c"include/base/thread_management.h\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"thread_descriptor\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"ExcNoThread()\00", align 1
@_ZTSN6dealii7Threads6ThreadIvE11ExcNoThreadE = linkonce_odr dso_local constant [41 x i8] c"N6dealii7Threads6ThreadIvE11ExcNoThreadE\00", comdat, align 1
@_ZTIN6dealii13ExceptionBaseE = external constant ptr
@_ZTIN6dealii7Threads6ThreadIvE11ExcNoThreadE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii7Threads6ThreadIvE11ExcNoThreadE, ptr @_ZTIN6dealii13ExceptionBaseE }, comdat, align 8
@_ZTVN6dealii7Threads6ThreadIvE11ExcNoThreadE = linkonce_odr dso_local unnamed_addr constant { [6 x ptr] } { [6 x ptr] [ptr null, ptr @_ZTIN6dealii7Threads6ThreadIvE11ExcNoThreadE, ptr @_ZN6dealii13ExceptionBaseD2Ev, ptr @_ZN6dealii7Threads6ThreadIvE11ExcNoThreadD0Ev, ptr @_ZNK6dealii13ExceptionBase4whatEv, ptr @_ZNK6dealii13ExceptionBase10print_infoERSo] }, comdat, align 8
@_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable9" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS10_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SQ_ST_SW_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SQ_ST_SW_ }, comdat, align 8
@_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [218 x i8] c"PFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [217 x i8] c"FvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE6manageERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = linkonce_odr dso_local constant [412 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE }, comdat, align 8
@_ZTVN6dealii9TableBaseILi2EfEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9TableBaseILi2EfEE, ptr @_ZN6dealii9TableBaseILi2EfED2Ev, ptr @_ZN6dealii9TableBaseILi2EfED0Ev] }, comdat, align 8
@_ZTSN6dealii9TableBaseILi2EfEE = linkonce_odr dso_local constant [27 x i8] c"N6dealii9TableBaseILi2EfEE\00", comdat, align 1
@_ZTIN6dealii9TableBaseILi2EfEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9TableBaseILi2EfEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable7.175" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSW_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SS_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SS_ }, comdat, align 8
@_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [199 x i8] c"PFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [198 x i8] c"FvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE6manageERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = linkonce_odr dso_local constant [366 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE }, comdat, align 8
@_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable9.176" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS10_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SQ_ST_SW_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SQ_ST_SW_ }, comdat, align 8
@_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [218 x i8] c"PFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [217 x i8] c"FvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE6manageERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = linkonce_odr dso_local constant [412 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE }, comdat, align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table = linkonce_odr dso_local local_unnamed_addr constant [2 x [2 x i32]] [[2 x i32] [i32 1, i32 0], [2 x i32] [i32 0, i32 1]], comdat, align 16
@_ZZN6dealii8internal12TriaAccessor14Implementation10line_indexILi3ELi3EEEjRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table = linkonce_odr dso_local local_unnamed_addr constant [12 x [2 x i32]] [[2 x i32] [i32 4, i32 0], [2 x i32] [i32 4, i32 1], [2 x i32] [i32 4, i32 2], [2 x i32] [i32 4, i32 3], [2 x i32] [i32 5, i32 0], [2 x i32] [i32 5, i32 1], [2 x i32] [i32 5, i32 2], [2 x i32] [i32 5, i32 3], [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 0], [2 x i32] [i32 0, i32 1], [2 x i32] [i32 1, i32 1]], comdat, align 16
@_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table = linkonce_odr dso_local local_unnamed_addr constant [12 x [2 x i32]] [[2 x i32] [i32 4, i32 0], [2 x i32] [i32 4, i32 1], [2 x i32] [i32 4, i32 2], [2 x i32] [i32 4, i32 3], [2 x i32] [i32 5, i32 0], [2 x i32] [i32 5, i32 1], [2 x i32] [i32 5, i32 2], [2 x i32] [i32 5, i32 3], [2 x i32] zeroinitializer, [2 x i32] [i32 1, i32 0], [2 x i32] [i32 0, i32 1], [2 x i32] [i32 1, i32 1]], comdat, align 16
@_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE10bool_table = linkonce_odr dso_local local_unnamed_addr constant [2 x [2 x [2 x [2 x i8]]]] [[2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\00\01"], [2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] zeroinitializer]], [2 x [2 x [2 x i8]]] [[2 x [2 x i8]] [[2 x i8] c"\01\01", [2 x i8] zeroinitializer], [2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\00\01"]]], comdat, align 16
@_ZTVN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE, ptr @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev, ptr @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED0Ev] }, comdat, align 8
@_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE = linkonce_odr dso_local constant [71 x i8] c"N6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE\00", comdat, align 1
@_ZTIN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii2hp11QCollectionILi3EEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii2hp11QCollectionILi3EEE, ptr @_ZN6dealii2hp11QCollectionILi3EED2Ev, ptr @_ZN6dealii2hp11QCollectionILi3EED0Ev] }, comdat, align 8
@_ZTSN6dealii2hp11QCollectionILi3EEE = linkonce_odr dso_local constant [32 x i8] c"N6dealii2hp11QCollectionILi3EEE\00", comdat, align 1
@_ZTIN6dealii2hp11QCollectionILi3EEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii2hp11QCollectionILi3EEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable7.177" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSX_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_ST_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_ST_ }, comdat, align 8
@_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [216 x i8] c"PFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [215 x i8] c"FvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE6manageERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = linkonce_odr dso_local constant [381 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE }, comdat, align 8
@_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable9.178" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS11_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_SR_SU_SX_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_SR_SU_SX_ }, comdat, align 8
@_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [235 x i8] c"PFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [234 x i8] c"FvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = linkonce_odr dso_local constant [427 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE }, comdat, align 8
@_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable7.179" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSX_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_ST_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_ST_ }, comdat, align 8
@_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [216 x i8] c"PFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [215 x i8] c"FvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE6manageERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = linkonce_odr dso_local constant [381 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE }, comdat, align 8
@_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable9.180" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS11_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_SR_SU_SX_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_SR_SU_SX_ }, comdat, align 8
@_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [235 x i8] c"PFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [234 x i8] c"FvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = linkonce_odr dso_local constant [427 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE }, comdat, align 8
@_ZTVN6dealii16FEFaceValuesBaseILi3ELi3EEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii16FEFaceValuesBaseILi3ELi3EEE, ptr @_ZN6dealii16FEFaceValuesBaseILi3ELi3EED2Ev, ptr @_ZN6dealii16FEFaceValuesBaseILi3ELi3EED0Ev] }, comdat, align 8
@_ZTSN6dealii16FEFaceValuesBaseILi3ELi3EEE = linkonce_odr dso_local constant [38 x i8] c"N6dealii16FEFaceValuesBaseILi3ELi3EEE\00", comdat, align 1
@_ZTIN6dealii16FEFaceValuesBaseILi3ELi3EEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii16FEFaceValuesBaseILi3ELi3EEE, ptr @_ZTIN6dealii12FEValuesBaseILi3ELi3EEE }, comdat, align 8
@_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSH_SK_SY_S11_S15_SP_S17_S1A_S1D_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable9.181" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker9IPFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEvSJ_SM_S10_S13_S17_SR_S19_S1C_S1F_E6invokeERNS1_15function_bufferESJ_SM_S10_S13_S17_SR_S19_S1C_S1F_ }, comdat, align 8
@_ZTSPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [343 x i8] c"PFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [342 x i8] c"FvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEE6manageERKNS1_15function_bufferERS21_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE = linkonce_odr dso_local constant [532 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE }, comdat, align 8
@.str.17 = private unnamed_addr constant [29 x i8] c"vector<bool>::_M_fill_insert\00", align 1
@_ZTVN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE, ptr @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED2Ev, ptr @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED0Ev] }, comdat, align 8
@_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE = linkonce_odr dso_local constant [76 x i8] c"N6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE\00", comdat, align 1
@_ZTIN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZTVN6dealii2hp11QCollectionILi2EEE = linkonce_odr dso_local unnamed_addr constant { [4 x ptr] } { [4 x ptr] [ptr null, ptr @_ZTIN6dealii2hp11QCollectionILi2EEE, ptr @_ZN6dealii2hp11QCollectionILi2EED2Ev, ptr @_ZN6dealii2hp11QCollectionILi2EED0Ev] }, comdat, align 8
@_ZTSN6dealii2hp11QCollectionILi2EEE = linkonce_odr dso_local constant [32 x i8] c"N6dealii2hp11QCollectionILi2EEE\00", comdat, align 1
@_ZTIN6dealii2hp11QCollectionILi2EEE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN6dealii2hp11QCollectionILi2EEE, ptr @_ZTIN6dealii11SubscriptorE }, comdat, align 8
@_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_EEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable9.182" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerIPFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS1K_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function22void_function_invoker9IPFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEvSK_SN_S11_S14_S18_SS_S1A_S1D_S1G_E6invokeERNS1_15function_bufferESK_SN_S11_S14_S18_SS_S1A_S1D_S1G_ }, comdat, align 8
@_ZTSPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [358 x i8] c"PFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTSFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant [357 x i8] c"FvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE\00", comdat, align 1
@_ZTIFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__function_type_infoE, i64 2), ptr @_ZTSFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZTIPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE = linkonce_odr dso_local constant { ptr, ptr, i32, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv119__pointer_type_infoE, i64 2), ptr @_ZTSPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE, i32 0, ptr @_ZTIFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE }, comdat, align 8
@_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_E13stored_vtable = linkonce_odr dso_local global %"struct.boost::detail::function::basic_vtable0" { %"struct.boost::detail::function::vtable_base" { ptr @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEE6manageERKNS1_15function_bufferERS22_NS1_30functor_manager_operation_typeE }, ptr @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEvE6invokeERNS1_15function_bufferE }, comdat, align 8
@_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE = linkonce_odr dso_local constant [547 x i8] c"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE\00", comdat, align 1
@_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE }, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, ptr, ptr }] zeroinitializer

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.dealii::TriaActiveIterator", align 8
  %9 = alloca %"class.dealii::TriaActiveIterator", align 8
  %10 = alloca %"class.dealii::TriaRawIterator", align 8
  %11 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %12 = alloca %"class.dealii::Threads::Thread", align 16
  %13 = alloca %"class.dealii::Threads::internal::fun_encapsulator", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %15 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #19
  %16 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %6, i64 0, i32 1
  store ptr %6, ptr %16, align 8, !tbaa !10
  store ptr %6, ptr %6, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %6, i64 0, i32 1
  store i64 0, ptr %17, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %8, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %18 unwind label %41

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %10, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %19 unwind label %43

19:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  store ptr %22, ptr %20, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %15)
          to label %23 unwind label %43

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #19
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  %27 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.boost::shared_ptr", ptr %12, i64 0, i32 1
  %31 = zext i32 %15 to i64
  br label %47

32:                                               ; preds = %101, %23
  %33 = load ptr, ptr %6, align 8, !tbaa !13
  %34 = icmp eq ptr %33, %6
  br i1 %34, label %120, label %35

35:                                               ; preds = %32, %38
  %36 = phi ptr [ %39, %38 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.std::_List_node", ptr %36, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %37)
          to label %38 unwind label %153

38:                                               ; preds = %35
  %39 = load ptr, ptr %36, align 8, !tbaa !13
  %40 = icmp eq ptr %39, %6
  br i1 %40, label %120, label %35

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %45

43:                                               ; preds = %19, %18
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  br label %160

47:                                               ; preds = %25, %101
  %48 = phi i64 [ 0, %25 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  store ptr null, ptr %13, align 8, !tbaa !25, !alias.scope !22
  %49 = load ptr, ptr @_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable, align 8, !tbaa !27, !noalias !22
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %52 unwind label %104

52:                                               ; preds = %51, %47
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE, ptr %26, align 8, !tbaa !30, !alias.scope !22
  store ptr @_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable, ptr %13, align 8, !tbaa !25, !alias.scope !22
  %53 = load ptr, ptr %7, align 8, !tbaa !31
  %54 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  store ptr %56, ptr %27, align 8, !tbaa !17
  %57 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48, i32 1
  %58 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %57, i64 16, i1 false)
  store ptr %59, ptr %29, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %12, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %11)
          to label %60 unwind label %106

60:                                               ; preds = %52
  %61 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %62 unwind label %108

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::_List_node", ptr %61, i64 0, i32 1
  %64 = load <2 x ptr>, ptr %12, align 16, !tbaa !33
  store <2 x ptr> %64, ptr %63, align 8, !tbaa !33
  %65 = extractelement <2 x ptr> %64, i64 1
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %65, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !34
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %68, align 8, !tbaa !34
  br label %71

71:                                               ; preds = %67, %62
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %61, ptr noundef nonnull %6) #19
  %72 = load i64, ptr %17, align 8, !tbaa !36
  %73 = add i64 %72, 1
  store i64 %73, ptr %17, align 8, !tbaa !36
  %74 = load ptr, ptr %30, align 8, !tbaa !39
  %75 = icmp eq ptr %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !34
  %79 = add nsw i64 %78, -1
  store i64 %79, ptr %77, align 8, !tbaa !34
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = load ptr, ptr %74, align 8, !tbaa !41
  %83 = getelementptr inbounds ptr, ptr %82, i64 2
  %84 = load ptr, ptr %83, align 8
  invoke void %84(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %85 unwind label %106

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !43
  %88 = add nsw i64 %87, -1
  store i64 %88, ptr %86, align 8, !tbaa !43
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load ptr, ptr %74, align 8, !tbaa !41
  %92 = getelementptr inbounds ptr, ptr %91, i64 3
  %93 = load ptr, ptr %92, align 8
  invoke void %93(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %94 unwind label %106

94:                                               ; preds = %85, %76, %71, %90
  %95 = load ptr, ptr %13, align 8, !tbaa !25
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %95, align 8, !tbaa !27
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  invoke void %98(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %101 unwind label %104

101:                                              ; preds = %97, %100, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  %102 = add nuw nsw i64 %48, 1
  %103 = icmp eq i64 %102, %31
  br i1 %103, label %32, label %47

104:                                              ; preds = %100, %51
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %118

106:                                              ; preds = %90, %81, %52
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %110

108:                                              ; preds = %60
  %109 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %12)
          to label %110 unwind label %163

110:                                              ; preds = %108, %106
  %111 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ]
  %112 = load ptr, ptr %13, align 8, !tbaa !25
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load ptr, ptr %112, align 8, !tbaa !27
  %116 = icmp eq ptr %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  invoke void %115(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %118 unwind label %163

118:                                              ; preds = %114, %117, %110, %104
  %119 = phi { ptr, i32 } [ %105, %104 ], [ %111, %110 ], [ %111, %117 ], [ %111, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  br label %155

120:                                              ; preds = %38, %32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %121 = load ptr, ptr %7, align 8, !tbaa !31
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef nonnull %121) #21
  br label %124

124:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  %125 = load ptr, ptr %6, align 8, !tbaa !13
  %126 = icmp eq ptr %125, %6
  br i1 %126, label %152, label %127

127:                                              ; preds = %124, %150
  %128 = phi ptr [ %129, %150 ], [ %125, %124 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = getelementptr inbounds %"struct.std::_List_node", ptr %128, i64 0, i32 1, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !34
  %136 = add nsw i64 %135, -1
  store i64 %136, ptr %134, align 8, !tbaa !34
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load ptr, ptr %131, align 8, !tbaa !41
  %140 = getelementptr inbounds ptr, ptr %139, i64 2
  %141 = load ptr, ptr %140, align 8
  call void %141(ptr noundef nonnull align 8 dereferenceable(24) %131)
  %142 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !43
  %144 = add nsw i64 %143, -1
  store i64 %144, ptr %142, align 8, !tbaa !43
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %131, align 8, !tbaa !41
  %148 = getelementptr inbounds ptr, ptr %147, i64 3
  %149 = load ptr, ptr %148, align 8
  call void %149(ptr noundef nonnull align 8 dereferenceable(24) %131)
  br label %150

150:                                              ; preds = %146, %138, %133, %127
  call void @_ZdlPv(ptr noundef nonnull %128) #21
  %151 = icmp eq ptr %129, %6
  br i1 %151, label %152, label %127

152:                                              ; preds = %150, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  ret void

153:                                              ; preds = %35
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %118
  %156 = phi { ptr, i32 } [ %119, %118 ], [ %154, %153 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %157 = load ptr, ptr %7, align 8, !tbaa !31
  %158 = icmp eq ptr %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef nonnull %157) #21
  br label %160

160:                                              ; preds = %159, %155, %45
  %161 = phi { ptr, i32 } [ %46, %45 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %162 unwind label %163

162:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  resume { ptr, i32 } %161

163:                                              ; preds = %117, %160, %108
  %164 = landingpad { ptr, i32 }
          catch ptr null
  %165 = extractvalue { ptr, i32 } %164, 0
  call void @__clang_call_terminate(ptr %165) #22
  unreachable
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr noalias sret(%"class.std::vector") align 8 %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %18

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %2, i64 0, i32 1
  %9 = load ptr, ptr %7, align 8, !tbaa !17
  %10 = load ptr, ptr %8, align 8, !tbaa !17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %11 = tail call noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #20
  store ptr %11, ptr %0, align 8, !tbaa !31
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.std::pair", ptr %11, i64 1
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %13, ptr %14, align 8, !tbaa !44
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  store ptr %9, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %"struct.std::pair", ptr %11, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  %17 = getelementptr inbounds %"struct.std::pair", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %10, ptr %17, align 8, !tbaa !17
  store ptr %13, ptr %12, align 8, !tbaa !45
  br label %330

18:                                               ; preds = %4
  %19 = load i32, ptr %1, align 8
  %20 = getelementptr inbounds i8, ptr %1, i64 4
  %21 = load i32, ptr %20, align 4
  %22 = load i32, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %2, i64 4
  %24 = load i32, ptr %23, align 4
  %25 = icmp ne i32 %21, %24
  %26 = icmp ne i32 %19, %22
  %27 = select i1 %25, i1 true, i1 %26
  br i1 %27, label %28, label %128

28:                                               ; preds = %18
  %29 = getelementptr inbounds i8, ptr %1, i64 8
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds %"class.dealii::Triangulation", ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::Triangulation", ptr %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %123, %28
  %36 = phi i32 [ %19, %28 ], [ %86, %123 ]
  %37 = phi i32 [ %21, %28 ], [ %88, %123 ]
  %38 = phi i32 [ 0, %28 ], [ %124, %123 ]
  br label %39

39:                                               ; preds = %107, %35
  %40 = phi i32 [ %36, %35 ], [ %86, %107 ]
  %41 = phi i32 [ %36, %35 ], [ %87, %107 ]
  %42 = phi i32 [ %36, %35 ], [ %108, %107 ]
  %43 = phi i32 [ %37, %35 ], [ %88, %107 ]
  %44 = add nsw i32 %43, 1
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds ptr, ptr %32, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !33
  %48 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %47, i64 0, i32 4
  %49 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %47, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !48
  %51 = load ptr, ptr %48, align 8, !tbaa !50
  %52 = ptrtoint ptr %50 to i64
  %53 = ptrtoint ptr %51 to i64
  %54 = sub i64 %52, %53
  %55 = sdiv exact i64 %54, 24
  %56 = trunc i64 %55 to i32
  %57 = icmp slt i32 %44, %56
  br i1 %57, label %85, label %58

58:                                               ; preds = %39
  %59 = add nsw i64 %45, 1
  %60 = load ptr, ptr %34, align 8, !tbaa !51
  %61 = ptrtoint ptr %60 to i64
  %62 = sub i64 %61, %33
  %63 = shl i64 %62, 29
  %64 = ashr i64 %63, 32
  %65 = icmp slt i64 %59, %64
  br i1 %65, label %66, label %85

66:                                               ; preds = %58, %80
  %67 = phi i64 [ %81, %80 ], [ %59, %58 ]
  %68 = getelementptr inbounds ptr, ptr %32, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !33
  %70 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %69, i64 0, i32 4
  %71 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %69, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !48
  %73 = load ptr, ptr %70, align 8, !tbaa !50
  %74 = ptrtoint ptr %72 to i64
  %75 = ptrtoint ptr %73 to i64
  %76 = sub i64 %74, %75
  %77 = sdiv exact i64 %76, 24
  %78 = trunc i64 %77 to i32
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %66
  %81 = add i64 %67, 1
  %82 = icmp eq i64 %81, %64
  br i1 %82, label %85, label %66, !llvm.loop !52

83:                                               ; preds = %66
  %84 = trunc i64 %67 to i32
  br label %85

85:                                               ; preds = %80, %83, %58, %39
  %86 = phi i32 [ %40, %39 ], [ %84, %83 ], [ -1, %58 ], [ -1, %80 ]
  %87 = phi i32 [ %41, %39 ], [ %84, %83 ], [ -1, %58 ], [ -1, %80 ]
  %88 = phi i32 [ %44, %39 ], [ 0, %83 ], [ -1, %58 ], [ -1, %80 ]
  %89 = phi i32 [ %42, %39 ], [ %84, %83 ], [ -1, %58 ], [ -1, %80 ]
  %90 = or i32 %89, %88
  %91 = icmp sgt i32 %90, -1
  br i1 %91, label %92, label %109

92:                                               ; preds = %85
  %93 = zext i32 %89 to i64
  %94 = getelementptr inbounds ptr, ptr %32, i64 %93
  %95 = load ptr, ptr %94, align 8, !tbaa !33
  %96 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %95, i64 0, i32 4, i32 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !54
  %98 = lshr i32 %88, 6
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i64, ptr %97, i64 %99
  %101 = and i32 %88, 63
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 1, %102
  %104 = load i64, ptr %100, align 8, !tbaa !56
  %105 = and i64 %104, %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %92, %112
  %108 = phi i32 [ %89, %92 ], [ %87, %112 ]
  br label %39

109:                                              ; preds = %92, %85
  %110 = or i32 %88, %87
  %111 = icmp sgt i32 %110, -1
  br i1 %111, label %112, label %123

112:                                              ; preds = %109
  %113 = zext i32 %87 to i64
  %114 = getelementptr inbounds ptr, ptr %32, i64 %113
  %115 = load ptr, ptr %114, align 8, !tbaa !33
  %116 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %115, i64 0, i32 4, i32 0, i32 1
  %117 = shl i32 %88, 2
  %118 = zext i32 %117 to i64
  %119 = load ptr, ptr %116, align 8, !tbaa !57
  %120 = getelementptr inbounds i32, ptr %119, i64 %118
  %121 = load i32, ptr %120, align 4, !tbaa !59
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %123, label %107

123:                                              ; preds = %112, %109
  %124 = add i32 %38, 1
  %125 = icmp ne i32 %88, %24
  %126 = icmp ne i32 %86, %22
  %127 = select i1 %125, i1 true, i1 %126
  br i1 %127, label %35, label %128

128:                                              ; preds = %123, %18
  %129 = phi i32 [ 0, %18 ], [ %124, %123 ]
  %130 = udiv i32 %129, %3
  %131 = urem i32 %129, %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %132 = icmp ne i32 %3, 0
  tail call void @llvm.assume(i1 %132)
  %133 = zext i32 %3 to i64
  %134 = mul nuw nsw i64 %133, 48
  %135 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %134) #20
  store ptr %135, ptr %0, align 8, !tbaa !31
  %136 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %135, ptr %136, align 8, !tbaa !45
  %137 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 %133
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %137, ptr %138, align 8, !tbaa !44
  %139 = and i64 %133, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %128
  store i32 -2, ptr %135, align 8
  %142 = getelementptr inbounds i8, ptr %135, i64 4
  store i32 -2, ptr %142, align 4
  %143 = getelementptr inbounds i8, ptr %135, i64 8
  %144 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %143, i8 0, i64 16, i1 false)
  store i32 -2, ptr %144, align 8
  %145 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %145, align 4
  %146 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %147 = add nsw i64 %133, -1
  %148 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %146, i8 0, i64 16, i1 false)
  br label %149

149:                                              ; preds = %141, %128
  %150 = phi ptr [ undef, %128 ], [ %148, %141 ]
  %151 = phi ptr [ %135, %128 ], [ %148, %141 ]
  %152 = phi i64 [ %133, %128 ], [ %147, %141 ]
  %153 = icmp eq i32 %3, 1
  br i1 %153, label %171, label %154

154:                                              ; preds = %149, %154
  %155 = phi ptr [ %169, %154 ], [ %151, %149 ]
  %156 = phi i64 [ %168, %154 ], [ %152, %149 ]
  store i32 -2, ptr %155, align 8
  %157 = getelementptr inbounds i8, ptr %155, i64 4
  store i32 -2, ptr %157, align 4
  %158 = getelementptr inbounds i8, ptr %155, i64 8
  %159 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %158, i8 0, i64 16, i1 false)
  store i32 -2, ptr %159, align 8
  %160 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %160, align 4
  %161 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %162 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %161, i8 0, i64 16, i1 false)
  store i32 -2, ptr %162, align 8
  %163 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %163, align 4
  %164 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %165 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %164, i8 0, i64 16, i1 false)
  store i32 -2, ptr %165, align 8
  %166 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %166, align 4
  %167 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %168 = add nsw i64 %156, -2
  %169 = getelementptr inbounds %"struct.std::pair", ptr %155, i64 2
  %170 = icmp eq i64 %168, 0
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %167, i8 0, i64 16, i1 false)
  br i1 %170, label %171, label %154

171:                                              ; preds = %154, %149
  %172 = phi ptr [ %150, %149 ], [ %169, %154 ]
  store ptr %172, ptr %136, align 8, !tbaa !45
  store i32 %19, ptr %135, align 8, !tbaa !60
  %173 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %135, i64 0, i32 1
  store i32 %21, ptr %173, align 4, !tbaa !61
  %174 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %1, i64 0, i32 2
  %175 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %135, i64 0, i32 2
  %176 = load <2 x ptr>, ptr %174, align 8, !tbaa !33
  store <2 x ptr> %176, ptr %175, align 8, !tbaa !33
  br i1 %132, label %177, label %330

177:                                              ; preds = %171
  %178 = add i32 %3, -1
  %179 = sext i32 %130 to i64
  %180 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %181 = zext i32 %131 to i64
  %182 = zext i32 %178 to i64
  %183 = zext i32 %3 to i64
  %184 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 %182, i32 1
  %185 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %184, i64 0, i32 2
  br label %186

186:                                              ; preds = %177, %327
  %187 = phi i64 [ 0, %177 ], [ %328, %327 ]
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %323, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 %187
  %191 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 %187, i32 1
  %192 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %191, i64 0, i32 1
  %193 = load <2 x i32>, ptr %190, align 8, !tbaa !59
  store <2 x i32> %193, ptr %191, align 8, !tbaa !59
  %194 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %190, i64 0, i32 2
  %195 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %191, i64 0, i32 2
  %196 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %191, i64 0, i32 1
  %197 = load <2 x ptr>, ptr %194, align 8, !tbaa !33
  store <2 x ptr> %197, ptr %195, align 8, !tbaa !33
  invoke void @_ZSt9__advanceIN6dealii18TriaActiveIteratorINS0_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEElEvRT_T0_St26bidirectional_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %191, i64 noundef %179)
          to label %198 unwind label %312

198:                                              ; preds = %189
  %199 = icmp ult i64 %187, %181
  %200 = load i32, ptr %191, align 8, !tbaa !60
  %201 = load i32, ptr %192, align 4
  %202 = load ptr, ptr %195, align 8, !tbaa !62
  br i1 %199, label %203, label %314

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.dealii::Triangulation", ptr %202, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !46
  %206 = ptrtoint ptr %205 to i64
  %207 = getelementptr inbounds %"class.dealii::Triangulation", ptr %202, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %208

208:                                              ; preds = %296, %203
  %209 = phi i32 [ %200, %203 ], [ %275, %296 ]
  %210 = phi i32 [ %200, %203 ], [ %276, %296 ]
  %211 = phi i32 [ %200, %203 ], [ %297, %296 ]
  %212 = phi i32 [ %201, %203 ], [ %277, %296 ]
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %211 to i64
  %215 = getelementptr inbounds ptr, ptr %205, i64 %214
  %216 = load ptr, ptr %215, align 8, !tbaa !33
  %217 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %216, i64 0, i32 4
  %218 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %216, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = load ptr, ptr %218, align 8, !tbaa !48
  %220 = load ptr, ptr %217, align 8, !tbaa !50
  %221 = ptrtoint ptr %219 to i64
  %222 = ptrtoint ptr %220 to i64
  %223 = sub i64 %221, %222
  %224 = sdiv exact i64 %223, 24
  %225 = trunc i64 %224 to i32
  %226 = icmp slt i32 %213, %225
  br i1 %226, label %274, label %227

227:                                              ; preds = %208
  %228 = add nsw i64 %214, 1
  %229 = trunc i64 %228 to i32
  store i32 %229, ptr %191, align 8, !tbaa !60
  %230 = load ptr, ptr %207, align 8, !tbaa !51
  %231 = ptrtoint ptr %230 to i64
  %232 = sub i64 %231, %206
  %233 = shl i64 %232, 29
  %234 = ashr i64 %233, 32
  %235 = icmp slt i64 %228, %234
  br i1 %235, label %236, label %268

236:                                              ; preds = %227
  %237 = getelementptr inbounds ptr, ptr %205, i64 %228
  %238 = load ptr, ptr %237, align 8, !tbaa !33
  %239 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %238, i64 0, i32 4
  %240 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %238, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %241 = load ptr, ptr %240, align 8, !tbaa !48
  %242 = load ptr, ptr %239, align 8, !tbaa !50
  %243 = ptrtoint ptr %241 to i64
  %244 = ptrtoint ptr %242 to i64
  %245 = sub i64 %243, %244
  %246 = sdiv exact i64 %245, 24
  %247 = trunc i64 %246 to i32
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %270, label %262

249:                                              ; preds = %262
  %250 = getelementptr inbounds ptr, ptr %205, i64 %264
  %251 = load ptr, ptr %250, align 8, !tbaa !33
  %252 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %251, i64 0, i32 4
  %253 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %251, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %254 = load ptr, ptr %253, align 8, !tbaa !48
  %255 = load ptr, ptr %252, align 8, !tbaa !50
  %256 = ptrtoint ptr %254 to i64
  %257 = ptrtoint ptr %255 to i64
  %258 = sub i64 %256, %257
  %259 = sdiv exact i64 %258, 24
  %260 = trunc i64 %259 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %269, label %262, !llvm.loop !52

262:                                              ; preds = %236, %249
  %263 = phi i64 [ %264, %249 ], [ %228, %236 ]
  %264 = add i64 %263, 1
  %265 = trunc i64 %264 to i32
  %266 = icmp eq i64 %264, %234
  br i1 %266, label %267, label %249, !llvm.loop !52

267:                                              ; preds = %262
  store i32 %265, ptr %191, align 8, !tbaa !60
  br label %268

268:                                              ; preds = %267, %227
  store i32 -1, ptr %191, align 8, !tbaa !60
  br label %274

269:                                              ; preds = %249
  store i32 %265, ptr %191, align 8, !tbaa !60
  br label %270

270:                                              ; preds = %269, %236
  %271 = phi i32 [ %229, %236 ], [ %265, %269 ]
  %272 = phi i64 [ %228, %236 ], [ %264, %269 ]
  %273 = trunc i64 %272 to i32
  br label %274

274:                                              ; preds = %270, %268, %208
  %275 = phi i32 [ %209, %208 ], [ -1, %268 ], [ %271, %270 ]
  %276 = phi i32 [ %210, %208 ], [ -1, %268 ], [ %273, %270 ]
  %277 = phi i32 [ %213, %208 ], [ -1, %268 ], [ 0, %270 ]
  %278 = phi i32 [ %211, %208 ], [ -1, %268 ], [ %273, %270 ]
  %279 = or i32 %278, %277
  %280 = icmp sgt i32 %279, -1
  br i1 %280, label %281, label %298

281:                                              ; preds = %274
  %282 = zext i32 %278 to i64
  %283 = getelementptr inbounds ptr, ptr %205, i64 %282
  %284 = load ptr, ptr %283, align 8, !tbaa !33
  %285 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %284, i64 0, i32 4, i32 0, i32 3
  %286 = load ptr, ptr %285, align 8, !tbaa !54
  %287 = lshr i32 %277, 6
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds i64, ptr %286, i64 %288
  %290 = and i32 %277, 63
  %291 = zext i32 %290 to i64
  %292 = shl nuw i64 1, %291
  %293 = load i64, ptr %289, align 8, !tbaa !56
  %294 = and i64 %293, %292
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %281, %301
  %297 = phi i32 [ %278, %281 ], [ %276, %301 ]
  br label %208

298:                                              ; preds = %281, %274
  store i32 %277, ptr %192, align 4, !tbaa !61
  %299 = or i32 %277, %276
  %300 = icmp sgt i32 %299, -1
  br i1 %300, label %301, label %314

301:                                              ; preds = %298
  %302 = zext i32 %276 to i64
  %303 = getelementptr inbounds ptr, ptr %205, i64 %302
  %304 = load ptr, ptr %303, align 8, !tbaa !33
  %305 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %304, i64 0, i32 4, i32 0, i32 1
  %306 = shl i32 %277, 2
  %307 = zext i32 %306 to i64
  %308 = load ptr, ptr %305, align 8, !tbaa !57
  %309 = getelementptr inbounds i32, ptr %308, i64 %307
  %310 = load i32, ptr %309, align 4, !tbaa !59
  %311 = icmp eq i32 %310, -1
  br i1 %311, label %314, label %296

312:                                              ; preds = %189
  %313 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %135) #21
  resume { ptr, i32 } %313

314:                                              ; preds = %301, %298, %198
  %315 = phi i32 [ %201, %198 ], [ %277, %298 ], [ %277, %301 ]
  %316 = phi i32 [ %200, %198 ], [ %275, %298 ], [ %275, %301 ]
  %317 = add nuw nsw i64 %187, 1
  %318 = getelementptr inbounds %"struct.std::pair", ptr %135, i64 %317
  store i32 %316, ptr %318, align 8, !tbaa !60
  %319 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %318, i64 0, i32 1
  store i32 %315, ptr %319, align 4, !tbaa !61
  %320 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %318, i64 0, i32 2
  store ptr %202, ptr %320, align 8, !tbaa !62
  %321 = load ptr, ptr %196, align 8, !tbaa !17
  %322 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %318, i64 0, i32 1
  store ptr %321, ptr %322, align 8, !tbaa !17
  br label %327

323:                                              ; preds = %186
  %324 = load <2 x i32>, ptr %2, align 8, !tbaa !59
  store <2 x i32> %324, ptr %184, align 8, !tbaa !59
  %325 = load <2 x ptr>, ptr %180, align 8, !tbaa !33
  store <2 x ptr> %325, ptr %185, align 8, !tbaa !33
  %326 = add nuw nsw i64 %187, 1
  br label %327

327:                                              ; preds = %323, %314
  %328 = phi i64 [ %326, %323 ], [ %317, %314 ]
  %329 = icmp eq i64 %328, %183
  br i1 %329, label %330, label %186

330:                                              ; preds = %327, %171, %6
  ret void
}

declare void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr sret(%"class.dealii::TriaActiveIterator") align 8, ptr noundef nonnull align 8 dereferenceable(168), i32 noundef) local_unnamed_addr #2

declare i32 @__gxx_personality_v0(...)

declare void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr sret(%"class.dealii::TriaRawIterator") align 8, ptr noundef nonnull align 8 dereferenceable(168)) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 1 dereferenceable(1) %6) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::FEValues", align 8
  %9 = alloca %"class.dealii::FullMatrix", align 8
  %10 = alloca %"class.std::vector.92", align 8
  %11 = alloca %"class.std::vector.258", align 8
  %12 = alloca %"class.dealii::Vector", align 8
  %13 = alloca %"class.std::allocator.260", align 1
  %14 = alloca %"class.dealii::TriaActiveIterator", align 8
  %15 = icmp eq ptr %4, null
  %16 = select i1 %15, i32 33, i32 49
  call void @llvm.lifetime.start.p0(i64 776, ptr nonnull %8) #19
  %17 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !63
  call void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776) %8, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(728) %18, ptr noundef nonnull align 8 dereferenceable(128) %2, i32 noundef %16)
  %19 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !65
  %21 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !127
  %23 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !63
  %25 = getelementptr inbounds i8, ptr %24, i64 116
  %26 = load i32, ptr %25, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %9, i32 noundef %20, i32 noundef %20)
          to label %27 unwind label %209

27:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  %28 = zext i32 %22 to i64
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %37

31:                                               ; preds = %27
  %32 = shl nuw nsw i64 %28, 3
  %33 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %32) #20
          to label %34 unwind label %211

34:                                               ; preds = %31
  store ptr %33, ptr %10, align 8, !tbaa !131
  %35 = getelementptr inbounds double, ptr %33, i64 %28
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %33, i8 0, i64 %32, i1 false), !tbaa !133
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi ptr [ null, %30 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 1
  store ptr %38, ptr %39, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %12) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %40 unwind label %213

40:                                               ; preds = %37
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %41 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, i8 0, i64 16, i1 false)
  %42 = icmp eq i32 %26, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %40
  %44 = zext i32 %26 to i64
  %45 = shl nuw nsw i64 %44, 3
  %46 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %45) #20
          to label %47 unwind label %50

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %49 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 2
  store ptr %46, ptr %48, align 8, !tbaa !136
  store i32 %26, ptr %49, align 4, !tbaa !138
  store i32 %26, ptr %41, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %46, i8 0, i64 %45, i1 false), !tbaa !133
  br label %55

50:                                               ; preds = %43
  %51 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %217 unwind label %52

52:                                               ; preds = %50
  %53 = landingpad { ptr, i32 }
          catch ptr null
  %54 = extractvalue { ptr, i32 } %53, 0
  call void @__clang_call_terminate(ptr %54) #22
  unreachable

55:                                               ; preds = %47, %40
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %11, i64 noundef %28, ptr noundef nonnull align 8 dereferenceable(88) %12, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %56 unwind label %215

56:                                               ; preds = %55
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %57 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !136
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  call void @_ZdaPv(ptr noundef nonnull %58) #21
  store ptr null, ptr %57, align 8, !tbaa !136
  br label %61

61:                                               ; preds = %60, %56
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %62 unwind label %213

62:                                               ; preds = %61
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  %63 = zext i32 %20 to i64
  %64 = icmp eq i32 %20, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = shl nuw nsw i64 %63, 2
  %67 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %66) #20
          to label %68 unwind label %219

68:                                               ; preds = %65
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %67, i8 0, i64 %66, i1 false), !tbaa !59
  %69 = getelementptr inbounds i32, ptr %67, i64 %63
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi ptr [ null, %62 ], [ %67, %68 ]
  %72 = phi ptr [ null, %62 ], [ %69, %68 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  %73 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %5, i64 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %75 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  store ptr %74, ptr %75, align 8, !tbaa !17
  %76 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %5, i64 0, i32 1
  %77 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %14, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i32, ptr %77, align 4, !tbaa !61
  %80 = load i32, ptr %78, align 4, !tbaa !61
  %81 = icmp ne i32 %79, %80
  %82 = load i32, ptr %14, align 8
  %83 = load i32, ptr %76, align 8
  %84 = icmp ne i32 %82, %83
  %85 = select i1 %81, i1 true, i1 %84
  br i1 %85, label %86, label %1774

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 3
  %88 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 3, i32 0, i32 0, i64 1
  %89 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 1
  %90 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %91 = getelementptr inbounds i8, ptr %8, i64 312
  %92 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 2
  %93 = getelementptr inbounds i8, ptr %8, i64 216
  %94 = getelementptr inbounds i8, ptr %8, i64 480
  %95 = getelementptr inbounds i8, ptr %8, i64 144
  %96 = getelementptr inbounds i8, ptr %8, i64 160
  %97 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 12
  %98 = icmp eq i32 %26, 1
  %99 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 19
  %100 = icmp eq ptr %72, %71
  %101 = ptrtoint ptr %71 to i64
  %102 = ptrtoint ptr %72 to i64
  %103 = sub i64 %102, %101
  %104 = ashr exact i64 %103, 2
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %14, i64 0, i32 2
  %107 = zext i32 %26 to i64
  %108 = add nsw i64 %63, -1
  %109 = shl nuw nsw i64 %63, 3
  %110 = add nsw i64 %63, -1
  %111 = shl nuw nsw i64 %63, 3
  %112 = add nsw i64 %63, -1
  %113 = shl nuw nsw i64 %63, 3
  %114 = add nsw i64 %63, -1
  %115 = shl nuw nsw i64 %63, 3
  %116 = icmp ult i32 %20, 16
  %117 = trunc i64 %114 to i32
  %118 = icmp ugt i64 %114, 4294967295
  %119 = trunc i64 %114 to i32
  %120 = and i64 %63, 4294967292
  %121 = icmp eq i64 %120, %63
  %122 = and i64 %63, 1
  %123 = icmp eq i64 %122, 0
  %124 = sub nsw i64 0, %63
  %125 = icmp ult i32 %20, 16
  %126 = trunc i64 %112 to i32
  %127 = icmp ugt i64 %112, 4294967295
  %128 = trunc i64 %112 to i32
  %129 = and i64 %63, 4294967292
  %130 = icmp eq i64 %129, %63
  %131 = and i64 %63, 1
  %132 = icmp eq i64 %131, 0
  %133 = sub nsw i64 0, %63
  %134 = icmp ult i32 %20, 24
  %135 = trunc i64 %110 to i32
  %136 = icmp ugt i64 %110, 4294967295
  %137 = trunc i64 %110 to i32
  %138 = and i64 %63, 4294967292
  %139 = icmp eq i64 %138, %63
  %140 = icmp ult i32 %20, 16
  %141 = trunc i64 %108 to i32
  %142 = icmp ugt i64 %108, 4294967295
  %143 = trunc i64 %108 to i32
  %144 = and i64 %63, 4294967280
  %145 = icmp eq i64 %144, %63
  %146 = and i64 %63, 1
  %147 = icmp eq i64 %146, 0
  %148 = sub nsw i64 0, %63
  %149 = and i64 %63, 1
  %150 = icmp eq i64 %114, 0
  %151 = and i64 %63, 4294967294
  %152 = icmp eq i64 %149, 0
  %153 = or i1 %64, %42
  br label %154

154:                                              ; preds = %86, %1768
  invoke void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776) %8, ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %155 unwind label %223

155:                                              ; preds = %154
  %156 = load i32, ptr %87, align 4, !tbaa !59
  %157 = load i32, ptr %88, align 8, !tbaa !59
  %158 = mul i32 %157, %156
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %164, label %160

160:                                              ; preds = %155
  %161 = load ptr, ptr %89, align 8, !tbaa !140
  %162 = zext i32 %158 to i64
  %163 = shl nuw nsw i64 %162, 3
  call void @llvm.memset.p0.i64(ptr align 8 %161, i8 0, i64 %163, i1 false), !tbaa !133
  br label %164

164:                                              ; preds = %155, %160
  %165 = load ptr, ptr %75, align 8, !tbaa !17
  %166 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %165, i64 0, i32 2
  %167 = load ptr, ptr %166, align 8, !tbaa !63
  %168 = getelementptr inbounds i8, ptr %167, i64 112
  %169 = load i32, ptr %168, align 8, !tbaa !141
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %193, label %171

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %165, i64 0, i32 3
  %173 = load ptr, ptr %172, align 8, !tbaa !142
  %174 = load i32, ptr %14, align 8, !tbaa !60
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds ptr, ptr %173, i64 %175
  %177 = load ptr, ptr %176, align 8, !tbaa !33
  %178 = load ptr, ptr %177, align 8, !tbaa !144
  %179 = load i32, ptr %77, align 4, !tbaa !61
  %180 = mul i32 %179, %169
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i32, ptr %178, i64 %181
  br label %183

183:                                              ; preds = %183, %171
  %184 = phi i64 [ 0, %171 ], [ %188, %183 ]
  %185 = phi ptr [ %182, %171 ], [ %189, %183 ]
  %186 = load i32, ptr %185, align 4, !tbaa !59
  %187 = getelementptr inbounds i32, ptr %71, i64 %184
  store i32 %186, ptr %187, align 4, !tbaa !59
  %188 = add nuw nsw i64 %184, 1
  %189 = getelementptr inbounds i32, ptr %185, i64 1
  %190 = load i32, ptr %168, align 8, !tbaa !141
  %191 = zext i32 %190 to i64
  %192 = icmp ult i64 %188, %191
  br i1 %192, label %183, label %193

193:                                              ; preds = %183, %164
  br i1 %15, label %1015, label %194

194:                                              ; preds = %193
  %195 = load i32, ptr %90, align 8, !tbaa !145
  %196 = icmp eq i32 %195, 1
  %197 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %196, label %198, label %466

198:                                              ; preds = %194
  %199 = getelementptr inbounds ptr, ptr %197, i64 6
  %200 = load ptr, ptr %199, align 8
  invoke void %200(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
          to label %201 unwind label %223

201:                                              ; preds = %198
  br i1 %29, label %1641, label %202

202:                                              ; preds = %201
  %203 = load ptr, ptr %93, align 8, !tbaa !131
  %204 = load ptr, ptr %23, align 8
  %205 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %204, i64 0, i32 2
  %206 = load ptr, ptr %95, align 8
  %207 = load i32, ptr %96, align 8
  %208 = icmp ne i32 %207, 1
  br label %226

209:                                              ; preds = %1809, %7
  %210 = landingpad { ptr, i32 }
          cleanup
  br label %1858

211:                                              ; preds = %31
  %212 = landingpad { ptr, i32 }
          cleanup
  br label %1851

213:                                              ; preds = %61, %37
  %214 = landingpad { ptr, i32 }
          cleanup
  br label %217

215:                                              ; preds = %55
  %216 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %12)
          to label %217 unwind label %1868

217:                                              ; preds = %213, %50, %215
  %218 = phi { ptr, i32 } [ %216, %215 ], [ %214, %213 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  br label %1846

219:                                              ; preds = %65
  %220 = landingpad { ptr, i32 }
          cleanup
  br label %1822

221:                                              ; preds = %1642
  %222 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  br label %1820

223:                                              ; preds = %466, %198, %154
  %224 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %225 = icmp eq ptr %71, null
  br i1 %225, label %1822, label %1820

226:                                              ; preds = %202, %463
  %227 = phi i64 [ 0, %202 ], [ %464, %463 ]
  %228 = shl nuw nsw i64 %227, 3
  %229 = add nuw i64 %228, 8
  %230 = getelementptr i8, ptr %206, i64 %228
  %231 = add nuw i64 %113, %228
  %232 = getelementptr i8, ptr %206, i64 %231
  %233 = trunc i64 %227 to i32
  %234 = getelementptr inbounds double, ptr %203, i64 %227
  %235 = load double, ptr %234, align 8, !tbaa !133
  br i1 %64, label %463, label %236

236:                                              ; preds = %226
  %237 = load i8, ptr %205, align 4, !tbaa !148, !range !182, !noundef !183
  %238 = icmp eq i8 %237, 0
  %239 = load ptr, ptr %94, align 8
  %240 = load ptr, ptr %97, align 8, !tbaa !184
  %241 = trunc i64 %227 to i32
  br i1 %98, label %242, label %388

242:                                              ; preds = %236
  %243 = xor i32 %233, -1
  %244 = icmp ult i32 %243, %128
  %245 = insertelement <4 x double> poison, double %235, i64 0
  %246 = shufflevector <4 x double> %245, <4 x double> poison, <4 x i32> zeroinitializer
  br label %247

247:                                              ; preds = %242, %365
  %248 = phi i64 [ %366, %365 ], [ 0, %242 ]
  %249 = trunc i64 %248 to i32
  br i1 %238, label %250, label %253

250:                                              ; preds = %247
  %251 = getelementptr inbounds i32, ptr %239, i64 %248
  %252 = load i32, ptr %251, align 4, !tbaa !59
  br label %253

253:                                              ; preds = %250, %247
  %254 = phi i32 [ %252, %250 ], [ %249, %247 ]
  %255 = mul i32 %207, %254
  %256 = add i32 %255, %241
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds double, ptr %206, i64 %257
  %259 = load double, ptr %258, align 8, !tbaa !133
  %260 = load ptr, ptr %94, align 8
  %261 = load ptr, ptr %10, align 8
  %262 = getelementptr double, ptr %261, i64 %227
  %263 = load ptr, ptr %89, align 8
  %264 = load i32, ptr %88, align 8
  %265 = mul i32 %264, %249
  br i1 %238, label %368, label %266

266:                                              ; preds = %253
  br i1 %125, label %310, label %267

267:                                              ; preds = %266
  %268 = xor i32 %265, -1
  %269 = icmp ult i32 %268, %126
  %270 = or i1 %269, %127
  %271 = or i1 %208, %270
  %272 = or i1 %244, %271
  br i1 %272, label %310, label %273

273:                                              ; preds = %267
  %274 = getelementptr i8, ptr %261, i64 %229
  %275 = zext i32 %265 to i64
  %276 = shl nuw nsw i64 %275, 3
  %277 = getelementptr i8, ptr %263, i64 %276
  %278 = getelementptr i8, ptr %263, i64 %113
  %279 = getelementptr i8, ptr %278, i64 %276
  %280 = icmp ult ptr %262, %279
  %281 = icmp ult ptr %277, %274
  %282 = and i1 %280, %281
  %283 = icmp ult ptr %277, %232
  %284 = icmp ult ptr %230, %279
  %285 = and i1 %283, %284
  %286 = or i1 %282, %285
  br i1 %286, label %310, label %287

287:                                              ; preds = %273
  %288 = insertelement <4 x double> poison, double %259, i64 0
  %289 = shufflevector <4 x double> %288, <4 x double> poison, <4 x i32> zeroinitializer
  %290 = load double, ptr %262, align 8, !tbaa !133, !alias.scope !185, !noalias !188
  %291 = insertelement <4 x double> poison, double %290, i64 0
  %292 = shufflevector <4 x double> %291, <4 x double> poison, <4 x i32> zeroinitializer
  br label %293

293:                                              ; preds = %293, %287
  %294 = phi i64 [ 0, %287 ], [ %307, %293 ]
  %295 = trunc i64 %294 to i32
  %296 = add i64 %294, %227
  %297 = and i64 %296, 4294967295
  %298 = getelementptr inbounds double, ptr %206, i64 %297
  %299 = load <4 x double>, ptr %298, align 8, !tbaa !133, !alias.scope !190
  %300 = fmul <4 x double> %289, %299
  %301 = fmul <4 x double> %246, %300
  %302 = add i32 %265, %295
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds double, ptr %263, i64 %303
  %305 = load <4 x double>, ptr %304, align 8, !tbaa !133, !alias.scope !188, !noalias !190
  %306 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %301, <4 x double> %292, <4 x double> %305)
  store <4 x double> %306, ptr %304, align 8, !tbaa !133, !alias.scope !188, !noalias !190
  %307 = add nuw i64 %294, 4
  %308 = icmp eq i64 %307, %129
  br i1 %308, label %309, label %293, !llvm.loop !192

309:                                              ; preds = %293
  br i1 %130, label %365, label %310

310:                                              ; preds = %273, %267, %266, %309
  %311 = phi i64 [ 0, %273 ], [ 0, %267 ], [ 0, %266 ], [ %129, %309 ]
  %312 = xor i64 %311, -1
  br i1 %132, label %329, label %313

313:                                              ; preds = %310
  %314 = trunc i64 %311 to i32
  %315 = mul i32 %207, %314
  %316 = add i32 %315, %241
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds double, ptr %206, i64 %317
  %319 = load double, ptr %318, align 8, !tbaa !133
  %320 = fmul double %259, %319
  %321 = fmul double %235, %320
  %322 = load double, ptr %262, align 8, !tbaa !133
  %323 = add i32 %265, %314
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds double, ptr %263, i64 %324
  %326 = load double, ptr %325, align 8, !tbaa !133
  %327 = call double @llvm.fmuladd.f64(double %321, double %322, double %326)
  store double %327, ptr %325, align 8, !tbaa !133
  %328 = or i64 %311, 1
  br label %329

329:                                              ; preds = %313, %310
  %330 = phi i64 [ %311, %310 ], [ %328, %313 ]
  %331 = icmp eq i64 %312, %133
  br i1 %331, label %365, label %332

332:                                              ; preds = %329, %332
  %333 = phi i64 [ %363, %332 ], [ %330, %329 ]
  %334 = trunc i64 %333 to i32
  %335 = mul i32 %207, %334
  %336 = add i32 %335, %241
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds double, ptr %206, i64 %337
  %339 = load double, ptr %338, align 8, !tbaa !133
  %340 = fmul double %259, %339
  %341 = fmul double %235, %340
  %342 = load double, ptr %262, align 8, !tbaa !133
  %343 = add i32 %265, %334
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds double, ptr %263, i64 %344
  %346 = load double, ptr %345, align 8, !tbaa !133
  %347 = call double @llvm.fmuladd.f64(double %341, double %342, double %346)
  store double %347, ptr %345, align 8, !tbaa !133
  %348 = trunc i64 %333 to i32
  %349 = add i32 %348, 1
  %350 = mul i32 %207, %349
  %351 = add i32 %350, %241
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds double, ptr %206, i64 %352
  %354 = load double, ptr %353, align 8, !tbaa !133
  %355 = fmul double %259, %354
  %356 = fmul double %235, %355
  %357 = load double, ptr %262, align 8, !tbaa !133
  %358 = add i32 %265, %349
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds double, ptr %263, i64 %359
  %361 = load double, ptr %360, align 8, !tbaa !133
  %362 = call double @llvm.fmuladd.f64(double %356, double %357, double %361)
  store double %362, ptr %360, align 8, !tbaa !133
  %363 = add nuw nsw i64 %333, 2
  %364 = icmp eq i64 %363, %63
  br i1 %364, label %365, label %332, !llvm.loop !195

365:                                              ; preds = %329, %332, %368, %309
  %366 = add nuw nsw i64 %248, 1
  %367 = icmp eq i64 %366, %63
  br i1 %367, label %463, label %247

368:                                              ; preds = %253, %368
  %369 = phi i64 [ %386, %368 ], [ 0, %253 ]
  %370 = getelementptr inbounds i32, ptr %260, i64 %369
  %371 = load i32, ptr %370, align 4, !tbaa !59
  %372 = mul i32 %371, %207
  %373 = add i32 %372, %241
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds double, ptr %206, i64 %374
  %376 = load double, ptr %375, align 8, !tbaa !133
  %377 = fmul double %259, %376
  %378 = fmul double %235, %377
  %379 = load double, ptr %262, align 8, !tbaa !133
  %380 = trunc i64 %369 to i32
  %381 = add i32 %265, %380
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds double, ptr %263, i64 %382
  %384 = load double, ptr %383, align 8, !tbaa !133
  %385 = call double @llvm.fmuladd.f64(double %378, double %379, double %384)
  store double %385, ptr %383, align 8, !tbaa !133
  %386 = add nuw nsw i64 %369, 1
  %387 = icmp eq i64 %386, %63
  br i1 %387, label %365, label %368

388:                                              ; preds = %236, %434
  %389 = phi i64 [ %435, %434 ], [ 0, %236 ]
  %390 = trunc i64 %389 to i32
  br i1 %238, label %391, label %394

391:                                              ; preds = %388
  %392 = getelementptr inbounds i32, ptr %239, i64 %389
  %393 = load i32, ptr %392, align 4, !tbaa !59
  br label %394

394:                                              ; preds = %391, %388
  %395 = phi i32 [ %393, %391 ], [ %390, %388 ]
  %396 = mul i32 %207, %395
  %397 = add i32 %396, %241
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds double, ptr %206, i64 %398
  %400 = load double, ptr %399, align 8, !tbaa !133
  %401 = getelementptr inbounds %"struct.std::pair.263", ptr %240, i64 %389
  %402 = load i64, ptr %401, align 4
  %403 = trunc i64 %402 to i32
  %404 = load ptr, ptr %94, align 8
  %405 = load ptr, ptr %10, align 8
  %406 = getelementptr inbounds double, ptr %405, i64 %227
  %407 = load ptr, ptr %89, align 8
  %408 = load i32, ptr %88, align 8
  %409 = mul i32 %408, %390
  br i1 %238, label %437, label %410

410:                                              ; preds = %394, %431
  %411 = phi i64 [ %432, %431 ], [ 0, %394 ]
  %412 = getelementptr inbounds %"struct.std::pair.263", ptr %240, i64 %411
  %413 = load i64, ptr %412, align 4
  %414 = trunc i64 %413 to i32
  %415 = icmp eq i32 %414, %403
  br i1 %415, label %416, label %431

416:                                              ; preds = %410
  %417 = trunc i64 %411 to i32
  %418 = mul i32 %207, %417
  %419 = add i32 %418, %241
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds double, ptr %206, i64 %420
  %422 = load double, ptr %421, align 8, !tbaa !133
  %423 = fmul double %400, %422
  %424 = fmul double %235, %423
  %425 = load double, ptr %406, align 8, !tbaa !133
  %426 = add i32 %409, %417
  %427 = zext i32 %426 to i64
  %428 = getelementptr inbounds double, ptr %407, i64 %427
  %429 = load double, ptr %428, align 8, !tbaa !133
  %430 = call double @llvm.fmuladd.f64(double %424, double %425, double %429)
  store double %430, ptr %428, align 8, !tbaa !133
  br label %431

431:                                              ; preds = %416, %410
  %432 = add nuw nsw i64 %411, 1
  %433 = icmp eq i64 %432, %63
  br i1 %433, label %434, label %410

434:                                              ; preds = %431, %460
  %435 = add nuw nsw i64 %389, 1
  %436 = icmp eq i64 %435, %63
  br i1 %436, label %463, label %388

437:                                              ; preds = %394, %460
  %438 = phi i64 [ %461, %460 ], [ 0, %394 ]
  %439 = getelementptr inbounds %"struct.std::pair.263", ptr %240, i64 %438
  %440 = load i64, ptr %439, align 4
  %441 = trunc i64 %440 to i32
  %442 = icmp eq i32 %441, %403
  br i1 %442, label %443, label %460

443:                                              ; preds = %437
  %444 = getelementptr inbounds i32, ptr %404, i64 %438
  %445 = load i32, ptr %444, align 4, !tbaa !59
  %446 = mul i32 %445, %207
  %447 = add i32 %446, %241
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds double, ptr %206, i64 %448
  %450 = load double, ptr %449, align 8, !tbaa !133
  %451 = fmul double %400, %450
  %452 = fmul double %235, %451
  %453 = load double, ptr %406, align 8, !tbaa !133
  %454 = trunc i64 %438 to i32
  %455 = add i32 %409, %454
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds double, ptr %407, i64 %456
  %458 = load double, ptr %457, align 8, !tbaa !133
  %459 = call double @llvm.fmuladd.f64(double %452, double %453, double %458)
  store double %459, ptr %457, align 8, !tbaa !133
  br label %460

460:                                              ; preds = %443, %437
  %461 = add nuw nsw i64 %438, 1
  %462 = icmp eq i64 %461, %63
  br i1 %462, label %434, label %437

463:                                              ; preds = %434, %365, %226
  %464 = add nuw nsw i64 %227, 1
  %465 = icmp eq i64 %464, %28
  br i1 %465, label %1641, label %226

466:                                              ; preds = %194
  %467 = getelementptr inbounds ptr, ptr %197, i64 7
  %468 = load ptr, ptr %467, align 8
  invoke void %468(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %11)
          to label %469 unwind label %223

469:                                              ; preds = %466
  %470 = load i8, ptr %92, align 4, !tbaa !148, !range !182, !noundef !183
  %471 = icmp eq i8 %470, 0
  br i1 %471, label %749, label %472

472:                                              ; preds = %469
  br i1 %29, label %1641, label %473

473:                                              ; preds = %472
  %474 = load ptr, ptr %93, align 8, !tbaa !131
  %475 = load ptr, ptr %95, align 8
  %476 = load i32, ptr %96, align 8
  br i1 %64, label %1641, label %477

477:                                              ; preds = %473
  %478 = load ptr, ptr %23, align 8
  %479 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %478, i64 0, i32 2
  %480 = load i8, ptr %479, align 4, !tbaa !148, !range !182, !noundef !183
  %481 = icmp eq i8 %480, 0
  %482 = load ptr, ptr %97, align 8, !tbaa !184
  %483 = icmp ne i32 %476, 1
  br label %484

484:                                              ; preds = %547, %477
  %485 = phi i64 [ %548, %547 ], [ 0, %477 ]
  %486 = shl nuw nsw i64 %485, 3
  %487 = getelementptr i8, ptr %475, i64 %486
  %488 = add nuw i64 %115, %486
  %489 = getelementptr i8, ptr %475, i64 %488
  %490 = trunc i64 %485 to i32
  %491 = getelementptr inbounds double, ptr %474, i64 %485
  %492 = load double, ptr %491, align 8, !tbaa !133
  %493 = load ptr, ptr %94, align 8
  %494 = trunc i64 %485 to i32
  br i1 %98, label %495, label %546

495:                                              ; preds = %484
  %496 = xor i32 %490, -1
  %497 = icmp ult i32 %496, %119
  %498 = insertelement <4 x double> poison, double %492, i64 0
  %499 = shufflevector <4 x double> %498, <4 x double> poison, <4 x i32> zeroinitializer
  br label %550

500:                                              ; preds = %546, %517
  %501 = phi i64 [ %518, %517 ], [ 0, %546 ]
  %502 = trunc i64 %501 to i32
  %503 = mul i32 %476, %502
  %504 = add i32 %503, %494
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds double, ptr %475, i64 %505
  %507 = load double, ptr %506, align 8, !tbaa !133
  %508 = getelementptr inbounds %"struct.std::pair.263", ptr %482, i64 %501
  %509 = load i64, ptr %508, align 4
  %510 = trunc i64 %509 to i32
  %511 = load ptr, ptr %11, align 8
  %512 = getelementptr inbounds %"class.dealii::Vector", ptr %511, i64 %485, i32 3
  %513 = and i64 %509, 4294967295
  %514 = load ptr, ptr %89, align 8
  %515 = load i32, ptr %88, align 8
  %516 = mul i32 %515, %502
  br label %520

517:                                              ; preds = %543
  %518 = add nuw nsw i64 %501, 1
  %519 = icmp eq i64 %518, %63
  br i1 %519, label %547, label %500

520:                                              ; preds = %543, %500
  %521 = phi i64 [ %544, %543 ], [ 0, %500 ]
  %522 = getelementptr inbounds %"struct.std::pair.263", ptr %482, i64 %521
  %523 = load i64, ptr %522, align 4
  %524 = trunc i64 %523 to i32
  %525 = icmp eq i32 %524, %510
  br i1 %525, label %526, label %543

526:                                              ; preds = %520
  %527 = trunc i64 %521 to i32
  %528 = mul i32 %476, %527
  %529 = add i32 %528, %494
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds double, ptr %475, i64 %530
  %532 = load double, ptr %531, align 8, !tbaa !133
  %533 = fmul double %507, %532
  %534 = fmul double %492, %533
  %535 = load ptr, ptr %512, align 8, !tbaa !136
  %536 = getelementptr inbounds double, ptr %535, i64 %513
  %537 = load double, ptr %536, align 8, !tbaa !133
  %538 = add i32 %516, %527
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds double, ptr %514, i64 %539
  %541 = load double, ptr %540, align 8, !tbaa !133
  %542 = call double @llvm.fmuladd.f64(double %534, double %537, double %541)
  store double %542, ptr %540, align 8, !tbaa !133
  br label %543

543:                                              ; preds = %526, %520
  %544 = add nuw nsw i64 %521, 1
  %545 = icmp eq i64 %544, %63
  br i1 %545, label %517, label %520

546:                                              ; preds = %484
  br i1 %481, label %698, label %500

547:                                              ; preds = %517, %746, %675
  %548 = add nuw nsw i64 %485, 1
  %549 = icmp eq i64 %548, %28
  br i1 %549, label %1641, label %484

550:                                              ; preds = %495, %675
  %551 = phi i64 [ %676, %675 ], [ 0, %495 ]
  %552 = trunc i64 %551 to i32
  br i1 %481, label %553, label %556

553:                                              ; preds = %550
  %554 = getelementptr inbounds i32, ptr %493, i64 %551
  %555 = load i32, ptr %554, align 4, !tbaa !59
  br label %556

556:                                              ; preds = %553, %550
  %557 = phi i32 [ %555, %553 ], [ %552, %550 ]
  %558 = mul i32 %476, %557
  %559 = add i32 %558, %494
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds double, ptr %475, i64 %560
  %562 = load double, ptr %561, align 8, !tbaa !133
  %563 = getelementptr inbounds %"struct.std::pair.263", ptr %482, i64 %551
  %564 = load i64, ptr %563, align 4
  %565 = load ptr, ptr %94, align 8
  %566 = load ptr, ptr %11, align 8
  %567 = getelementptr inbounds %"class.dealii::Vector", ptr %566, i64 %485, i32 3
  %568 = and i64 %564, 4294967295
  %569 = load ptr, ptr %89, align 8
  %570 = load i32, ptr %88, align 8
  %571 = mul i32 %570, %552
  %572 = load ptr, ptr %567, align 8, !tbaa !136
  %573 = getelementptr double, ptr %572, i64 %568
  br i1 %481, label %678, label %574

574:                                              ; preds = %556
  br i1 %116, label %620, label %575

575:                                              ; preds = %574
  %576 = xor i32 %571, -1
  %577 = icmp ult i32 %576, %117
  %578 = or i1 %577, %118
  %579 = or i1 %483, %578
  %580 = or i1 %497, %579
  br i1 %580, label %620, label %581

581:                                              ; preds = %575
  %582 = getelementptr i8, ptr %572, i64 8
  %583 = shl nuw nsw i64 %568, 3
  %584 = getelementptr i8, ptr %582, i64 %583
  %585 = zext i32 %571 to i64
  %586 = shl nuw nsw i64 %585, 3
  %587 = getelementptr i8, ptr %569, i64 %586
  %588 = getelementptr i8, ptr %569, i64 %115
  %589 = getelementptr i8, ptr %588, i64 %586
  %590 = icmp ult ptr %573, %589
  %591 = icmp ult ptr %587, %584
  %592 = and i1 %590, %591
  %593 = icmp ult ptr %587, %489
  %594 = icmp ult ptr %487, %589
  %595 = and i1 %593, %594
  %596 = or i1 %592, %595
  br i1 %596, label %620, label %597

597:                                              ; preds = %581
  %598 = insertelement <4 x double> poison, double %562, i64 0
  %599 = shufflevector <4 x double> %598, <4 x double> poison, <4 x i32> zeroinitializer
  %600 = load double, ptr %573, align 8, !tbaa !133, !alias.scope !196, !noalias !199
  %601 = insertelement <4 x double> poison, double %600, i64 0
  %602 = shufflevector <4 x double> %601, <4 x double> poison, <4 x i32> zeroinitializer
  br label %603

603:                                              ; preds = %603, %597
  %604 = phi i64 [ 0, %597 ], [ %617, %603 ]
  %605 = trunc i64 %604 to i32
  %606 = add i64 %604, %485
  %607 = and i64 %606, 4294967295
  %608 = getelementptr inbounds double, ptr %475, i64 %607
  %609 = load <4 x double>, ptr %608, align 8, !tbaa !133, !alias.scope !201
  %610 = fmul <4 x double> %599, %609
  %611 = fmul <4 x double> %499, %610
  %612 = add i32 %571, %605
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds double, ptr %569, i64 %613
  %615 = load <4 x double>, ptr %614, align 8, !tbaa !133, !alias.scope !199, !noalias !201
  %616 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %611, <4 x double> %602, <4 x double> %615)
  store <4 x double> %616, ptr %614, align 8, !tbaa !133, !alias.scope !199, !noalias !201
  %617 = add nuw i64 %604, 4
  %618 = icmp eq i64 %617, %120
  br i1 %618, label %619, label %603, !llvm.loop !203

619:                                              ; preds = %603
  br i1 %121, label %675, label %620

620:                                              ; preds = %581, %575, %574, %619
  %621 = phi i64 [ 0, %581 ], [ 0, %575 ], [ 0, %574 ], [ %120, %619 ]
  %622 = xor i64 %621, -1
  br i1 %123, label %639, label %623

623:                                              ; preds = %620
  %624 = trunc i64 %621 to i32
  %625 = mul i32 %476, %624
  %626 = add i32 %625, %494
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds double, ptr %475, i64 %627
  %629 = load double, ptr %628, align 8, !tbaa !133
  %630 = fmul double %562, %629
  %631 = fmul double %492, %630
  %632 = load double, ptr %573, align 8, !tbaa !133
  %633 = add i32 %571, %624
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds double, ptr %569, i64 %634
  %636 = load double, ptr %635, align 8, !tbaa !133
  %637 = call double @llvm.fmuladd.f64(double %631, double %632, double %636)
  store double %637, ptr %635, align 8, !tbaa !133
  %638 = or i64 %621, 1
  br label %639

639:                                              ; preds = %623, %620
  %640 = phi i64 [ %621, %620 ], [ %638, %623 ]
  %641 = icmp eq i64 %622, %124
  br i1 %641, label %675, label %642

642:                                              ; preds = %639, %642
  %643 = phi i64 [ %673, %642 ], [ %640, %639 ]
  %644 = trunc i64 %643 to i32
  %645 = mul i32 %476, %644
  %646 = add i32 %645, %494
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds double, ptr %475, i64 %647
  %649 = load double, ptr %648, align 8, !tbaa !133
  %650 = fmul double %562, %649
  %651 = fmul double %492, %650
  %652 = load double, ptr %573, align 8, !tbaa !133
  %653 = add i32 %571, %644
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds double, ptr %569, i64 %654
  %656 = load double, ptr %655, align 8, !tbaa !133
  %657 = call double @llvm.fmuladd.f64(double %651, double %652, double %656)
  store double %657, ptr %655, align 8, !tbaa !133
  %658 = trunc i64 %643 to i32
  %659 = add i32 %658, 1
  %660 = mul i32 %476, %659
  %661 = add i32 %660, %494
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds double, ptr %475, i64 %662
  %664 = load double, ptr %663, align 8, !tbaa !133
  %665 = fmul double %562, %664
  %666 = fmul double %492, %665
  %667 = load double, ptr %573, align 8, !tbaa !133
  %668 = add i32 %571, %659
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds double, ptr %569, i64 %669
  %671 = load double, ptr %670, align 8, !tbaa !133
  %672 = call double @llvm.fmuladd.f64(double %666, double %667, double %671)
  store double %672, ptr %670, align 8, !tbaa !133
  %673 = add nuw nsw i64 %643, 2
  %674 = icmp eq i64 %673, %63
  br i1 %674, label %675, label %642, !llvm.loop !204

675:                                              ; preds = %639, %642, %678, %619
  %676 = add nuw nsw i64 %551, 1
  %677 = icmp eq i64 %676, %63
  br i1 %677, label %547, label %550

678:                                              ; preds = %556, %678
  %679 = phi i64 [ %696, %678 ], [ 0, %556 ]
  %680 = getelementptr inbounds i32, ptr %565, i64 %679
  %681 = load i32, ptr %680, align 4, !tbaa !59
  %682 = mul i32 %681, %476
  %683 = add i32 %682, %494
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds double, ptr %475, i64 %684
  %686 = load double, ptr %685, align 8, !tbaa !133
  %687 = fmul double %562, %686
  %688 = fmul double %492, %687
  %689 = load double, ptr %573, align 8, !tbaa !133
  %690 = trunc i64 %679 to i32
  %691 = add i32 %571, %690
  %692 = zext i32 %691 to i64
  %693 = getelementptr inbounds double, ptr %569, i64 %692
  %694 = load double, ptr %693, align 8, !tbaa !133
  %695 = call double @llvm.fmuladd.f64(double %688, double %689, double %694)
  store double %695, ptr %693, align 8, !tbaa !133
  %696 = add nuw nsw i64 %679, 1
  %697 = icmp eq i64 %696, %63
  br i1 %697, label %675, label %678

698:                                              ; preds = %546, %746
  %699 = phi i64 [ %747, %746 ], [ 0, %546 ]
  %700 = getelementptr inbounds i32, ptr %493, i64 %699
  %701 = load i32, ptr %700, align 4, !tbaa !59
  %702 = mul i32 %476, %701
  %703 = add i32 %702, %494
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds double, ptr %475, i64 %704
  %706 = load double, ptr %705, align 8, !tbaa !133
  %707 = getelementptr inbounds %"struct.std::pair.263", ptr %482, i64 %699
  %708 = load i64, ptr %707, align 4
  %709 = trunc i64 %708 to i32
  %710 = load ptr, ptr %94, align 8
  %711 = load ptr, ptr %11, align 8
  %712 = getelementptr inbounds %"class.dealii::Vector", ptr %711, i64 %485, i32 3
  %713 = and i64 %708, 4294967295
  %714 = load ptr, ptr %89, align 8
  %715 = load i32, ptr %88, align 8
  %716 = trunc i64 %699 to i32
  %717 = mul i32 %715, %716
  br label %718

718:                                              ; preds = %743, %698
  %719 = phi i64 [ %744, %743 ], [ 0, %698 ]
  %720 = getelementptr inbounds %"struct.std::pair.263", ptr %482, i64 %719
  %721 = load i64, ptr %720, align 4
  %722 = trunc i64 %721 to i32
  %723 = icmp eq i32 %722, %709
  br i1 %723, label %724, label %743

724:                                              ; preds = %718
  %725 = getelementptr inbounds i32, ptr %710, i64 %719
  %726 = load i32, ptr %725, align 4, !tbaa !59
  %727 = mul i32 %726, %476
  %728 = add i32 %727, %494
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds double, ptr %475, i64 %729
  %731 = load double, ptr %730, align 8, !tbaa !133
  %732 = fmul double %706, %731
  %733 = fmul double %492, %732
  %734 = load ptr, ptr %712, align 8, !tbaa !136
  %735 = getelementptr inbounds double, ptr %734, i64 %713
  %736 = load double, ptr %735, align 8, !tbaa !133
  %737 = trunc i64 %719 to i32
  %738 = add i32 %717, %737
  %739 = zext i32 %738 to i64
  %740 = getelementptr inbounds double, ptr %714, i64 %739
  %741 = load double, ptr %740, align 8, !tbaa !133
  %742 = call double @llvm.fmuladd.f64(double %733, double %736, double %741)
  store double %742, ptr %740, align 8, !tbaa !133
  br label %743

743:                                              ; preds = %724, %718
  %744 = add nuw nsw i64 %719, 1
  %745 = icmp eq i64 %744, %63
  br i1 %745, label %746, label %718

746:                                              ; preds = %743
  %747 = add nuw nsw i64 %699, 1
  %748 = icmp eq i64 %747, %63
  br i1 %748, label %547, label %698

749:                                              ; preds = %469
  br i1 %29, label %1641, label %750

750:                                              ; preds = %749
  %751 = load ptr, ptr %93, align 8, !tbaa !131
  br i1 %64, label %1641, label %752

752:                                              ; preds = %750, %756
  %753 = phi i64 [ %757, %756 ], [ 0, %750 ]
  %754 = getelementptr inbounds double, ptr %751, i64 %753
  %755 = load double, ptr %754, align 8, !tbaa !133
  br i1 %42, label %756, label %759

756:                                              ; preds = %1012, %752
  %757 = add nuw nsw i64 %753, 1
  %758 = icmp eq i64 %757, %28
  br i1 %758, label %1641, label %752

759:                                              ; preds = %752
  %760 = load ptr, ptr %99, align 8, !tbaa !205
  %761 = trunc i64 %753 to i32
  %762 = trunc i64 %753 to i32
  %763 = trunc i64 %753 to i32
  br label %764

764:                                              ; preds = %1012, %759
  %765 = phi i64 [ %1013, %1012 ], [ 0, %759 ]
  %766 = getelementptr inbounds %"class.std::vector.126", ptr %760, i64 %765
  %767 = load ptr, ptr %766, align 8, !tbaa !54
  %768 = load ptr, ptr %23, align 8
  %769 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %768, i64 0, i32 2
  %770 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %768, i64 0, i32 20
  %771 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %768, i64 0, i32 19
  %772 = load ptr, ptr %94, align 8
  %773 = getelementptr inbounds i32, ptr %772, i64 %765
  %774 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %768, i64 0, i32 12
  %775 = load ptr, ptr %95, align 8
  %776 = load i32, ptr %96, align 8
  %777 = trunc i64 %765 to i32
  %778 = trunc i64 %765 to i32
  br label %779

779:                                              ; preds = %893, %764
  %780 = phi i64 [ %894, %893 ], [ 0, %764 ]
  %781 = trunc i64 %780 to i32
  %782 = lshr i64 %780, 6
  %783 = and i64 %782, 67108863
  %784 = getelementptr inbounds i64, ptr %767, i64 %783
  %785 = and i32 %781, 63
  %786 = and i64 %780, 63
  %787 = shl nuw i64 1, %786
  %788 = load i64, ptr %784, align 8, !tbaa !56
  %789 = and i64 %788, %787
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %893, label %791

791:                                              ; preds = %779
  %792 = load i8, ptr %769, align 4, !tbaa !148, !range !182, !noundef !183
  %793 = icmp eq i8 %792, 0
  br i1 %793, label %794, label %832

794:                                              ; preds = %791
  %795 = load ptr, ptr %770, align 8, !tbaa !144
  %796 = getelementptr inbounds i32, ptr %795, i64 %765
  %797 = load i32, ptr %796, align 4, !tbaa !59
  %798 = icmp eq i32 %797, 1
  br i1 %798, label %832, label %799

799:                                              ; preds = %794
  %800 = load ptr, ptr %771, align 8, !tbaa !205
  %801 = getelementptr inbounds %"class.std::vector.126", ptr %800, i64 %765
  %802 = load ptr, ptr %801, align 8, !tbaa !54
  %803 = getelementptr inbounds i64, ptr %802, i64 %783
  %804 = load i64, ptr %803, align 8, !tbaa !56
  %805 = and i64 %804, %787
  %806 = icmp eq i64 %805, 0
  br i1 %806, label %849, label %807

807:                                              ; preds = %799
  %808 = load i32, ptr %773, align 4, !tbaa !59
  %809 = icmp eq i64 %780, 0
  br i1 %809, label %829, label %810

810:                                              ; preds = %807, %810
  %811 = phi i64 [ %818, %810 ], [ 0, %807 ]
  %812 = phi i32 [ %823, %810 ], [ 0, %807 ]
  %813 = phi ptr [ %822, %810 ], [ %802, %807 ]
  %814 = zext i32 %812 to i64
  %815 = load i64, ptr %813, align 8, !tbaa !56
  %816 = lshr i64 %815, %814
  %817 = and i64 %816, 1
  %818 = add nuw nsw i64 %817, %811
  %819 = add i32 %812, 1
  %820 = icmp eq i32 %812, 63
  %821 = zext i1 %820 to i64
  %822 = getelementptr inbounds i64, ptr %813, i64 %821
  %823 = select i1 %820, i32 0, i32 %819
  %824 = icmp ne ptr %822, %803
  %825 = icmp ne i32 %823, %785
  %826 = or i1 %825, %824
  br i1 %826, label %810, label %827

827:                                              ; preds = %810
  %828 = trunc i64 %818 to i32
  br label %829

829:                                              ; preds = %827, %807
  %830 = phi i32 [ 0, %807 ], [ %828, %827 ]
  %831 = add i32 %830, %808
  br label %840

832:                                              ; preds = %794, %791
  %833 = load ptr, ptr %774, align 8, !tbaa !184
  %834 = getelementptr inbounds %"struct.std::pair.263", ptr %833, i64 %765
  %835 = load i64, ptr %834, align 4
  %836 = and i64 %835, 4294967295
  %837 = icmp eq i64 %780, %836
  br i1 %837, label %838, label %847

838:                                              ; preds = %832
  %839 = load i32, ptr %773, align 4, !tbaa !59
  br label %840

840:                                              ; preds = %838, %829
  %841 = phi i32 [ %831, %829 ], [ %839, %838 ]
  %842 = mul i32 %776, %841
  %843 = add i32 %842, %761
  %844 = zext i32 %843 to i64
  %845 = getelementptr inbounds double, ptr %775, i64 %844
  %846 = load double, ptr %845, align 8, !tbaa !133
  br label %847

847:                                              ; preds = %840, %832
  %848 = phi double [ 0.000000e+00, %832 ], [ %846, %840 ]
  br i1 %793, label %849, label %896

849:                                              ; preds = %799, %847
  %850 = phi double [ %848, %847 ], [ 0.000000e+00, %799 ]
  br label %913

851:                                              ; preds = %890
  %852 = add nuw nsw i64 %897, 1
  %853 = icmp eq i64 %852, %63
  br i1 %853, label %893, label %896

854:                                              ; preds = %896, %890
  %855 = phi i32 [ 0, %896 ], [ %891, %890 ]
  %856 = lshr i32 %855, 6
  %857 = zext i32 %856 to i64
  %858 = getelementptr inbounds i64, ptr %899, i64 %857
  %859 = and i32 %855, 63
  %860 = zext i32 %859 to i64
  %861 = shl nuw i64 1, %860
  %862 = load i64, ptr %858, align 8, !tbaa !56
  %863 = and i64 %862, %861
  %864 = icmp eq i64 %863, 0
  br i1 %864, label %890, label %865

865:                                              ; preds = %854
  %866 = load ptr, ptr %774, align 8, !tbaa !184
  %867 = getelementptr inbounds %"struct.std::pair.263", ptr %866, i64 %897
  %868 = load i64, ptr %867, align 4
  %869 = trunc i64 %868 to i32
  %870 = icmp eq i32 %855, %869
  br i1 %870, label %871, label %878

871:                                              ; preds = %865
  %872 = load i32, ptr %901, align 4, !tbaa !59
  %873 = mul i32 %903, %872
  %874 = add i32 %873, %762
  %875 = zext i32 %874 to i64
  %876 = getelementptr inbounds double, ptr %902, i64 %875
  %877 = load double, ptr %876, align 8, !tbaa !133
  br label %878

878:                                              ; preds = %871, %865
  %879 = phi double [ 0.000000e+00, %865 ], [ %877, %871 ]
  %880 = zext i32 %855 to i64
  %881 = icmp eq i64 %780, %880
  br i1 %881, label %882, label %890

882:                                              ; preds = %878
  %883 = fmul double %848, %879
  %884 = fmul double %755, %883
  %885 = load ptr, ptr %905, align 8, !tbaa !136
  %886 = getelementptr inbounds double, ptr %885, i64 %780
  %887 = load double, ptr %886, align 8, !tbaa !133
  %888 = load double, ptr %912, align 8, !tbaa !133
  %889 = call double @llvm.fmuladd.f64(double %884, double %887, double %888)
  store double %889, ptr %912, align 8, !tbaa !133
  br label %890

890:                                              ; preds = %882, %878, %854
  %891 = add nuw i32 %855, 1
  %892 = icmp eq i32 %891, %26
  br i1 %892, label %851, label %854

893:                                              ; preds = %851, %1009, %779
  %894 = add nuw nsw i64 %780, 1
  %895 = icmp eq i64 %894, %107
  br i1 %895, label %1012, label %779

896:                                              ; preds = %847, %851
  %897 = phi i64 [ %852, %851 ], [ 0, %847 ]
  %898 = getelementptr inbounds %"class.std::vector.126", ptr %760, i64 %897
  %899 = load ptr, ptr %898, align 8, !tbaa !54
  %900 = load ptr, ptr %94, align 8
  %901 = getelementptr inbounds i32, ptr %900, i64 %897
  %902 = load ptr, ptr %95, align 8
  %903 = load i32, ptr %96, align 8
  %904 = load ptr, ptr %11, align 8
  %905 = getelementptr inbounds %"class.dealii::Vector", ptr %904, i64 %753, i32 3
  %906 = load ptr, ptr %89, align 8
  %907 = load i32, ptr %88, align 8
  %908 = mul i32 %907, %777
  %909 = trunc i64 %897 to i32
  %910 = add i32 %908, %909
  %911 = zext i32 %910 to i64
  %912 = getelementptr inbounds double, ptr %906, i64 %911
  br label %854

913:                                              ; preds = %849, %1009
  %914 = phi i64 [ 0, %849 ], [ %1010, %1009 ]
  %915 = getelementptr inbounds %"class.std::vector.126", ptr %760, i64 %914
  %916 = load ptr, ptr %915, align 8, !tbaa !54
  %917 = load ptr, ptr %94, align 8
  %918 = getelementptr inbounds i32, ptr %917, i64 %914
  %919 = load ptr, ptr %95, align 8
  %920 = load i32, ptr %96, align 8
  %921 = load ptr, ptr %11, align 8
  %922 = getelementptr inbounds %"class.dealii::Vector", ptr %921, i64 %753, i32 3
  %923 = load ptr, ptr %89, align 8
  %924 = load i32, ptr %88, align 8
  %925 = mul i32 %924, %778
  %926 = trunc i64 %914 to i32
  %927 = add i32 %925, %926
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds double, ptr %923, i64 %928
  br label %930

930:                                              ; preds = %1006, %913
  %931 = phi i32 [ 0, %913 ], [ %1007, %1006 ]
  %932 = lshr i32 %931, 6
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds i64, ptr %916, i64 %933
  %935 = and i32 %931, 63
  %936 = zext i32 %935 to i64
  %937 = shl nuw i64 1, %936
  %938 = load i64, ptr %934, align 8, !tbaa !56
  %939 = and i64 %938, %937
  %940 = icmp eq i64 %939, 0
  br i1 %940, label %1006, label %941

941:                                              ; preds = %930
  %942 = load ptr, ptr %770, align 8, !tbaa !144
  %943 = getelementptr inbounds i32, ptr %942, i64 %914
  %944 = load i32, ptr %943, align 4, !tbaa !59
  %945 = icmp eq i32 %944, 1
  br i1 %945, label %979, label %946

946:                                              ; preds = %941
  %947 = load ptr, ptr %771, align 8, !tbaa !205
  %948 = getelementptr inbounds %"class.std::vector.126", ptr %947, i64 %914
  %949 = load ptr, ptr %948, align 8, !tbaa !54
  %950 = getelementptr inbounds i64, ptr %949, i64 %933
  %951 = load i64, ptr %950, align 8, !tbaa !56
  %952 = and i64 %951, %937
  %953 = icmp eq i64 %952, 0
  br i1 %953, label %994, label %954

954:                                              ; preds = %946
  %955 = load i32, ptr %918, align 4, !tbaa !59
  %956 = icmp eq i32 %931, 0
  br i1 %956, label %976, label %957

957:                                              ; preds = %954, %957
  %958 = phi i64 [ %965, %957 ], [ 0, %954 ]
  %959 = phi i32 [ %970, %957 ], [ 0, %954 ]
  %960 = phi ptr [ %969, %957 ], [ %949, %954 ]
  %961 = zext i32 %959 to i64
  %962 = load i64, ptr %960, align 8, !tbaa !56
  %963 = lshr i64 %962, %961
  %964 = and i64 %963, 1
  %965 = add nuw nsw i64 %964, %958
  %966 = add i32 %959, 1
  %967 = icmp eq i32 %959, 63
  %968 = zext i1 %967 to i64
  %969 = getelementptr inbounds i64, ptr %960, i64 %968
  %970 = select i1 %967, i32 0, i32 %966
  %971 = icmp ne ptr %969, %950
  %972 = icmp ne i32 %970, %935
  %973 = or i1 %972, %971
  br i1 %973, label %957, label %974

974:                                              ; preds = %957
  %975 = trunc i64 %965 to i32
  br label %976

976:                                              ; preds = %974, %954
  %977 = phi i32 [ 0, %954 ], [ %975, %974 ]
  %978 = add i32 %977, %955
  br label %987

979:                                              ; preds = %941
  %980 = load ptr, ptr %774, align 8, !tbaa !184
  %981 = getelementptr inbounds %"struct.std::pair.263", ptr %980, i64 %914
  %982 = load i64, ptr %981, align 4
  %983 = trunc i64 %982 to i32
  %984 = icmp eq i32 %931, %983
  br i1 %984, label %985, label %994

985:                                              ; preds = %979
  %986 = load i32, ptr %918, align 4, !tbaa !59
  br label %987

987:                                              ; preds = %985, %976
  %988 = phi i32 [ %978, %976 ], [ %986, %985 ]
  %989 = mul i32 %920, %988
  %990 = add i32 %989, %763
  %991 = zext i32 %990 to i64
  %992 = getelementptr inbounds double, ptr %919, i64 %991
  %993 = load double, ptr %992, align 8, !tbaa !133
  br label %994

994:                                              ; preds = %987, %979, %946
  %995 = phi double [ 0.000000e+00, %979 ], [ 0.000000e+00, %946 ], [ %993, %987 ]
  %996 = zext i32 %931 to i64
  %997 = icmp eq i64 %780, %996
  br i1 %997, label %998, label %1006

998:                                              ; preds = %994
  %999 = fmul double %850, %995
  %1000 = fmul double %755, %999
  %1001 = load ptr, ptr %922, align 8, !tbaa !136
  %1002 = getelementptr inbounds double, ptr %1001, i64 %780
  %1003 = load double, ptr %1002, align 8, !tbaa !133
  %1004 = load double, ptr %929, align 8, !tbaa !133
  %1005 = call double @llvm.fmuladd.f64(double %1000, double %1003, double %1004)
  store double %1005, ptr %929, align 8, !tbaa !133
  br label %1006

1006:                                             ; preds = %998, %994, %930
  %1007 = add nuw i32 %931, 1
  %1008 = icmp eq i32 %1007, %26
  br i1 %1008, label %1009, label %930

1009:                                             ; preds = %1006
  %1010 = add nuw nsw i64 %914, 1
  %1011 = icmp eq i64 %1010, %63
  br i1 %1011, label %893, label %913

1012:                                             ; preds = %893
  %1013 = add nuw nsw i64 %765, 1
  %1014 = icmp eq i64 %1013, %63
  br i1 %1014, label %756, label %764

1015:                                             ; preds = %193
  %1016 = load i8, ptr %92, align 4, !tbaa !148, !range !182, !noundef !183
  %1017 = icmp eq i8 %1016, 0
  br i1 %1017, label %1027, label %1018

1018:                                             ; preds = %1015
  br i1 %29, label %1641, label %1019

1019:                                             ; preds = %1018
  %1020 = load ptr, ptr %93, align 8, !tbaa !131
  %1021 = load ptr, ptr %23, align 8
  %1022 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1021, i64 0, i32 2
  %1023 = load ptr, ptr %95, align 8
  %1024 = load i32, ptr %96, align 8
  %1025 = icmp ne i32 %1024, 1
  %1026 = icmp ne i32 %1024, 1
  br label %1030

1027:                                             ; preds = %1015
  br i1 %29, label %1641, label %1028

1028:                                             ; preds = %1027
  %1029 = load ptr, ptr %93, align 8, !tbaa !131
  br label %1397

1030:                                             ; preds = %1019, %1394
  %1031 = phi i64 [ 0, %1019 ], [ %1395, %1394 ]
  %1032 = shl nuw nsw i64 %1031, 3
  %1033 = getelementptr i8, ptr %1023, i64 %1032
  %1034 = add nuw i64 %111, %1032
  %1035 = getelementptr i8, ptr %1023, i64 %1034
  %1036 = trunc i64 %1031 to i32
  %1037 = shl nuw nsw i64 %1031, 3
  %1038 = getelementptr i8, ptr %1023, i64 %1037
  %1039 = add nuw i64 %109, %1037
  %1040 = getelementptr i8, ptr %1023, i64 %1039
  %1041 = trunc i64 %1031 to i32
  %1042 = getelementptr inbounds double, ptr %1020, i64 %1031
  %1043 = load double, ptr %1042, align 8, !tbaa !133
  br i1 %64, label %1394, label %1044

1044:                                             ; preds = %1030
  %1045 = load i8, ptr %1022, align 4, !tbaa !148, !range !182, !noundef !183
  %1046 = icmp eq i8 %1045, 0
  %1047 = load ptr, ptr %94, align 8
  %1048 = trunc i64 %1031 to i32
  br i1 %98, label %1049, label %1249

1049:                                             ; preds = %1044
  %1050 = trunc i64 %1031 to i32
  %1051 = xor i32 %1041, -1
  %1052 = icmp ult i32 %1051, %143
  %1053 = insertelement <4 x double> poison, double %1043, i64 0
  %1054 = shufflevector <4 x double> %1053, <4 x double> poison, <4 x i32> zeroinitializer
  %1055 = insertelement <4 x double> poison, double %1043, i64 0
  %1056 = shufflevector <4 x double> %1055, <4 x double> poison, <4 x i32> zeroinitializer
  %1057 = insertelement <4 x double> poison, double %1043, i64 0
  %1058 = shufflevector <4 x double> %1057, <4 x double> poison, <4 x i32> zeroinitializer
  %1059 = insertelement <4 x double> poison, double %1043, i64 0
  %1060 = shufflevector <4 x double> %1059, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1061

1061:                                             ; preds = %1049, %1211
  %1062 = phi i64 [ 0, %1049 ], [ %1212, %1211 ]
  %1063 = trunc i64 %1062 to i32
  %1064 = mul i32 %157, %1063
  %1065 = zext i32 %1064 to i64
  %1066 = shl nuw nsw i64 %1065, 3
  %1067 = trunc i64 %1062 to i32
  %1068 = mul i32 %157, %1067
  %1069 = trunc i64 %1062 to i32
  br i1 %1046, label %1154, label %1070

1070:                                             ; preds = %1061
  %1071 = mul i32 %1024, %1069
  %1072 = add i32 %1071, %1050
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds double, ptr %1023, i64 %1073
  %1075 = load double, ptr %1074, align 8, !tbaa !133
  %1076 = load ptr, ptr %89, align 8
  %1077 = mul i32 %157, %1069
  br i1 %140, label %1134, label %1078

1078:                                             ; preds = %1070
  %1079 = xor i32 %1068, -1
  %1080 = icmp ult i32 %1079, %141
  %1081 = or i1 %1080, %142
  %1082 = or i1 %1026, %1081
  %1083 = or i1 %1052, %1082
  br i1 %1083, label %1134, label %1084

1084:                                             ; preds = %1078
  %1085 = getelementptr i8, ptr %1076, i64 %1066
  %1086 = getelementptr i8, ptr %1076, i64 %109
  %1087 = getelementptr i8, ptr %1086, i64 %1066
  %1088 = icmp ult ptr %1085, %1040
  %1089 = icmp ult ptr %1038, %1087
  %1090 = and i1 %1088, %1089
  br i1 %1090, label %1134, label %1091

1091:                                             ; preds = %1084
  %1092 = insertelement <4 x double> poison, double %1075, i64 0
  %1093 = shufflevector <4 x double> %1092, <4 x double> poison, <4 x i32> zeroinitializer
  %1094 = insertelement <4 x double> poison, double %1075, i64 0
  %1095 = shufflevector <4 x double> %1094, <4 x double> poison, <4 x i32> zeroinitializer
  %1096 = insertelement <4 x double> poison, double %1075, i64 0
  %1097 = shufflevector <4 x double> %1096, <4 x double> poison, <4 x i32> zeroinitializer
  %1098 = insertelement <4 x double> poison, double %1075, i64 0
  %1099 = shufflevector <4 x double> %1098, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1100

1100:                                             ; preds = %1100, %1091
  %1101 = phi i64 [ 0, %1091 ], [ %1131, %1100 ]
  %1102 = trunc i64 %1101 to i32
  %1103 = add i64 %1101, %1031
  %1104 = and i64 %1103, 4294967295
  %1105 = getelementptr inbounds double, ptr %1023, i64 %1104
  %1106 = load <4 x double>, ptr %1105, align 8, !tbaa !133, !alias.scope !206
  %1107 = getelementptr inbounds double, ptr %1105, i64 4
  %1108 = load <4 x double>, ptr %1107, align 8, !tbaa !133, !alias.scope !206
  %1109 = getelementptr inbounds double, ptr %1105, i64 8
  %1110 = load <4 x double>, ptr %1109, align 8, !tbaa !133, !alias.scope !206
  %1111 = getelementptr inbounds double, ptr %1105, i64 12
  %1112 = load <4 x double>, ptr %1111, align 8, !tbaa !133, !alias.scope !206
  %1113 = fmul <4 x double> %1093, %1106
  %1114 = fmul <4 x double> %1095, %1108
  %1115 = fmul <4 x double> %1097, %1110
  %1116 = fmul <4 x double> %1099, %1112
  %1117 = add i32 %1077, %1102
  %1118 = zext i32 %1117 to i64
  %1119 = getelementptr inbounds double, ptr %1076, i64 %1118
  %1120 = load <4 x double>, ptr %1119, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  %1121 = getelementptr inbounds double, ptr %1119, i64 4
  %1122 = load <4 x double>, ptr %1121, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  %1123 = getelementptr inbounds double, ptr %1119, i64 8
  %1124 = load <4 x double>, ptr %1123, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  %1125 = getelementptr inbounds double, ptr %1119, i64 12
  %1126 = load <4 x double>, ptr %1125, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  %1127 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1113, <4 x double> %1054, <4 x double> %1120)
  %1128 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1114, <4 x double> %1056, <4 x double> %1122)
  %1129 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1115, <4 x double> %1058, <4 x double> %1124)
  %1130 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1116, <4 x double> %1060, <4 x double> %1126)
  store <4 x double> %1127, ptr %1119, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  store <4 x double> %1128, ptr %1121, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  store <4 x double> %1129, ptr %1123, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  store <4 x double> %1130, ptr %1125, align 8, !tbaa !133, !alias.scope !209, !noalias !206
  %1131 = add nuw i64 %1101, 16
  %1132 = icmp eq i64 %1131, %144
  br i1 %1132, label %1133, label %1100, !llvm.loop !211

1133:                                             ; preds = %1100
  br i1 %145, label %1211, label %1134

1134:                                             ; preds = %1084, %1078, %1070, %1133
  %1135 = phi i64 [ 0, %1084 ], [ 0, %1078 ], [ 0, %1070 ], [ %144, %1133 ]
  %1136 = xor i64 %1135, -1
  br i1 %147, label %1151, label %1137

1137:                                             ; preds = %1134
  %1138 = trunc i64 %1135 to i32
  %1139 = mul i32 %1024, %1138
  %1140 = add i32 %1139, %1050
  %1141 = zext i32 %1140 to i64
  %1142 = getelementptr inbounds double, ptr %1023, i64 %1141
  %1143 = load double, ptr %1142, align 8, !tbaa !133
  %1144 = fmul double %1075, %1143
  %1145 = add i32 %1077, %1138
  %1146 = zext i32 %1145 to i64
  %1147 = getelementptr inbounds double, ptr %1076, i64 %1146
  %1148 = load double, ptr %1147, align 8, !tbaa !133
  %1149 = call double @llvm.fmuladd.f64(double %1144, double %1043, double %1148)
  store double %1149, ptr %1147, align 8, !tbaa !133
  %1150 = or i64 %1135, 1
  br label %1151

1151:                                             ; preds = %1137, %1134
  %1152 = phi i64 [ %1135, %1134 ], [ %1150, %1137 ]
  %1153 = icmp eq i64 %1136, %148
  br i1 %1153, label %1211, label %1165

1154:                                             ; preds = %1061
  %1155 = getelementptr inbounds i32, ptr %1047, i64 %1062
  %1156 = load i32, ptr %1155, align 4, !tbaa !59
  %1157 = mul i32 %1024, %1156
  %1158 = add i32 %1157, %1048
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds double, ptr %1023, i64 %1159
  %1161 = load double, ptr %1160, align 8, !tbaa !133
  %1162 = load ptr, ptr %94, align 8
  %1163 = load ptr, ptr %89, align 8
  %1164 = mul i32 %157, %1069
  br i1 %150, label %1194, label %1214

1165:                                             ; preds = %1151, %1165
  %1166 = phi i64 [ %1192, %1165 ], [ %1152, %1151 ]
  %1167 = trunc i64 %1166 to i32
  %1168 = mul i32 %1024, %1167
  %1169 = add i32 %1168, %1050
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds double, ptr %1023, i64 %1170
  %1172 = load double, ptr %1171, align 8, !tbaa !133
  %1173 = fmul double %1075, %1172
  %1174 = add i32 %1077, %1167
  %1175 = zext i32 %1174 to i64
  %1176 = getelementptr inbounds double, ptr %1076, i64 %1175
  %1177 = load double, ptr %1176, align 8, !tbaa !133
  %1178 = call double @llvm.fmuladd.f64(double %1173, double %1043, double %1177)
  store double %1178, ptr %1176, align 8, !tbaa !133
  %1179 = trunc i64 %1166 to i32
  %1180 = add i32 %1179, 1
  %1181 = mul i32 %1024, %1180
  %1182 = add i32 %1181, %1050
  %1183 = zext i32 %1182 to i64
  %1184 = getelementptr inbounds double, ptr %1023, i64 %1183
  %1185 = load double, ptr %1184, align 8, !tbaa !133
  %1186 = fmul double %1075, %1185
  %1187 = add i32 %1077, %1180
  %1188 = zext i32 %1187 to i64
  %1189 = getelementptr inbounds double, ptr %1076, i64 %1188
  %1190 = load double, ptr %1189, align 8, !tbaa !133
  %1191 = call double @llvm.fmuladd.f64(double %1186, double %1043, double %1190)
  store double %1191, ptr %1189, align 8, !tbaa !133
  %1192 = add nuw nsw i64 %1166, 2
  %1193 = icmp eq i64 %1192, %63
  br i1 %1193, label %1211, label %1165, !llvm.loop !212

1194:                                             ; preds = %1214, %1154
  %1195 = phi i64 [ 0, %1154 ], [ %1246, %1214 ]
  br i1 %152, label %1211, label %1196

1196:                                             ; preds = %1194
  %1197 = getelementptr inbounds i32, ptr %1162, i64 %1195
  %1198 = load i32, ptr %1197, align 4, !tbaa !59
  %1199 = mul i32 %1198, %1024
  %1200 = add i32 %1199, %1048
  %1201 = zext i32 %1200 to i64
  %1202 = getelementptr inbounds double, ptr %1023, i64 %1201
  %1203 = load double, ptr %1202, align 8, !tbaa !133
  %1204 = fmul double %1161, %1203
  %1205 = trunc i64 %1195 to i32
  %1206 = add i32 %1164, %1205
  %1207 = zext i32 %1206 to i64
  %1208 = getelementptr inbounds double, ptr %1163, i64 %1207
  %1209 = load double, ptr %1208, align 8, !tbaa !133
  %1210 = call double @llvm.fmuladd.f64(double %1204, double %1043, double %1209)
  store double %1210, ptr %1208, align 8, !tbaa !133
  br label %1211

1211:                                             ; preds = %1151, %1165, %1196, %1194, %1133
  %1212 = add nuw nsw i64 %1062, 1
  %1213 = icmp eq i64 %1212, %63
  br i1 %1213, label %1394, label %1061

1214:                                             ; preds = %1154, %1214
  %1215 = phi i64 [ %1246, %1214 ], [ 0, %1154 ]
  %1216 = phi i64 [ %1247, %1214 ], [ 0, %1154 ]
  %1217 = getelementptr inbounds i32, ptr %1162, i64 %1215
  %1218 = load i32, ptr %1217, align 4, !tbaa !59
  %1219 = mul i32 %1218, %1024
  %1220 = add i32 %1219, %1048
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds double, ptr %1023, i64 %1221
  %1223 = load double, ptr %1222, align 8, !tbaa !133
  %1224 = fmul double %1161, %1223
  %1225 = trunc i64 %1215 to i32
  %1226 = add i32 %1164, %1225
  %1227 = zext i32 %1226 to i64
  %1228 = getelementptr inbounds double, ptr %1163, i64 %1227
  %1229 = load double, ptr %1228, align 8, !tbaa !133
  %1230 = call double @llvm.fmuladd.f64(double %1224, double %1043, double %1229)
  store double %1230, ptr %1228, align 8, !tbaa !133
  %1231 = or i64 %1215, 1
  %1232 = getelementptr inbounds i32, ptr %1162, i64 %1231
  %1233 = load i32, ptr %1232, align 4, !tbaa !59
  %1234 = mul i32 %1233, %1024
  %1235 = add i32 %1234, %1048
  %1236 = zext i32 %1235 to i64
  %1237 = getelementptr inbounds double, ptr %1023, i64 %1236
  %1238 = load double, ptr %1237, align 8, !tbaa !133
  %1239 = fmul double %1161, %1238
  %1240 = trunc i64 %1231 to i32
  %1241 = add i32 %1164, %1240
  %1242 = zext i32 %1241 to i64
  %1243 = getelementptr inbounds double, ptr %1163, i64 %1242
  %1244 = load double, ptr %1243, align 8, !tbaa !133
  %1245 = call double @llvm.fmuladd.f64(double %1239, double %1043, double %1244)
  store double %1245, ptr %1243, align 8, !tbaa !133
  %1246 = add nuw nsw i64 %1215, 2
  %1247 = add i64 %1216, 2
  %1248 = icmp eq i64 %1247, %151
  br i1 %1248, label %1194, label %1214

1249:                                             ; preds = %1044
  %1250 = load ptr, ptr %97, align 8, !tbaa !184
  %1251 = trunc i64 %1031 to i32
  %1252 = getelementptr i8, ptr %1250, i64 %111
  %1253 = xor i32 %1036, -1
  %1254 = icmp ult i32 %1253, %137
  %1255 = insertelement <4 x double> poison, double %1043, i64 0
  %1256 = shufflevector <4 x double> %1255, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1257

1257:                                             ; preds = %1365, %1249
  %1258 = phi i64 [ %1366, %1365 ], [ 0, %1249 ]
  %1259 = trunc i64 %1258 to i32
  %1260 = mul i32 %157, %1259
  %1261 = zext i32 %1260 to i64
  %1262 = shl nuw nsw i64 %1261, 3
  %1263 = shl nuw nsw i64 %1258, 3
  %1264 = getelementptr i8, ptr %1250, i64 %1263
  %1265 = add nuw i64 %1263, 8
  %1266 = getelementptr i8, ptr %1250, i64 %1265
  %1267 = trunc i64 %1258 to i32
  %1268 = mul i32 %157, %1267
  %1269 = trunc i64 %1258 to i32
  br i1 %1046, label %1329, label %1270

1270:                                             ; preds = %1257
  %1271 = mul i32 %1024, %1269
  %1272 = add i32 %1271, %1048
  %1273 = zext i32 %1272 to i64
  %1274 = getelementptr inbounds double, ptr %1023, i64 %1273
  %1275 = load double, ptr %1274, align 8, !tbaa !133
  %1276 = load ptr, ptr %89, align 8
  %1277 = mul i32 %157, %1269
  %1278 = getelementptr inbounds %"struct.std::pair.263", ptr %1250, i64 %1258
  br i1 %134, label %1327, label %1279

1279:                                             ; preds = %1270
  %1280 = xor i32 %1268, -1
  %1281 = icmp ult i32 %1280, %135
  %1282 = or i1 %1281, %136
  %1283 = or i1 %1025, %1282
  %1284 = or i1 %1254, %1283
  br i1 %1284, label %1327, label %1285

1285:                                             ; preds = %1279
  %1286 = getelementptr i8, ptr %1276, i64 %1262
  %1287 = getelementptr i8, ptr %1276, i64 %111
  %1288 = getelementptr i8, ptr %1287, i64 %1262
  %1289 = icmp ult ptr %1250, %1288
  %1290 = icmp ult ptr %1286, %1252
  %1291 = and i1 %1289, %1290
  %1292 = icmp ult ptr %1264, %1288
  %1293 = icmp ult ptr %1286, %1266
  %1294 = and i1 %1292, %1293
  %1295 = or i1 %1291, %1294
  %1296 = icmp ult ptr %1286, %1035
  %1297 = icmp ult ptr %1033, %1288
  %1298 = and i1 %1296, %1297
  %1299 = or i1 %1295, %1298
  br i1 %1299, label %1327, label %1300

1300:                                             ; preds = %1285
  %1301 = insertelement <4 x double> poison, double %1275, i64 0
  %1302 = shufflevector <4 x double> %1301, <4 x double> poison, <4 x i32> zeroinitializer
  %1303 = load i64, ptr %1278, align 4, !alias.scope !213, !noalias !216
  %1304 = trunc i64 %1303 to i32
  %1305 = insertelement <4 x i32> undef, i32 %1304, i64 0
  %1306 = shufflevector <4 x i32> %1305, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1307

1307:                                             ; preds = %1307, %1300
  %1308 = phi i64 [ 0, %1300 ], [ %1324, %1307 ]
  %1309 = trunc i64 %1308 to i32
  %1310 = getelementptr inbounds %"struct.std::pair.263", ptr %1250, i64 %1308
  %1311 = load <4 x i64>, ptr %1310, align 4, !alias.scope !218, !noalias !216
  %1312 = trunc <4 x i64> %1311 to <4 x i32>
  %1313 = icmp eq <4 x i32> %1306, %1312
  %1314 = add i64 %1308, %1031
  %1315 = and i64 %1314, 4294967295
  %1316 = getelementptr double, ptr %1023, i64 %1315
  %1317 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1316, i32 8, <4 x i1> %1313, <4 x double> poison), !tbaa !133, !alias.scope !220
  %1318 = fmul <4 x double> %1302, %1317
  %1319 = add i32 %1277, %1309
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr double, ptr %1276, i64 %1320
  %1322 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1321, i32 8, <4 x i1> %1313, <4 x double> poison), !tbaa !133, !alias.scope !216, !noalias !220
  %1323 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1318, <4 x double> %1256, <4 x double> %1322)
  call void @llvm.masked.store.v4f64.p0(<4 x double> %1323, ptr %1321, i32 8, <4 x i1> %1313), !tbaa !133, !alias.scope !216, !noalias !220
  %1324 = add nuw i64 %1308, 4
  %1325 = icmp eq i64 %1324, %138
  br i1 %1325, label %1326, label %1307, !llvm.loop !222

1326:                                             ; preds = %1307
  br i1 %139, label %1365, label %1327

1327:                                             ; preds = %1285, %1279, %1270, %1326
  %1328 = phi i64 [ 0, %1285 ], [ 0, %1279 ], [ 0, %1270 ], [ %138, %1326 ]
  br label %1341

1329:                                             ; preds = %1257
  %1330 = getelementptr inbounds i32, ptr %1047, i64 %1258
  %1331 = load i32, ptr %1330, align 4, !tbaa !59
  %1332 = mul i32 %1024, %1331
  %1333 = add i32 %1332, %1251
  %1334 = zext i32 %1333 to i64
  %1335 = getelementptr inbounds double, ptr %1023, i64 %1334
  %1336 = load double, ptr %1335, align 8, !tbaa !133
  %1337 = load ptr, ptr %94, align 8
  %1338 = load ptr, ptr %89, align 8
  %1339 = mul i32 %157, %1269
  %1340 = getelementptr inbounds %"struct.std::pair.263", ptr %1250, i64 %1258
  br label %1368

1341:                                             ; preds = %1327, %1362
  %1342 = phi i64 [ %1363, %1362 ], [ %1328, %1327 ]
  %1343 = load i64, ptr %1278, align 4
  %1344 = getelementptr inbounds %"struct.std::pair.263", ptr %1250, i64 %1342
  %1345 = load i64, ptr %1344, align 4
  %1346 = trunc i64 %1343 to i32
  %1347 = trunc i64 %1345 to i32
  %1348 = icmp eq i32 %1346, %1347
  br i1 %1348, label %1349, label %1362

1349:                                             ; preds = %1341
  %1350 = trunc i64 %1342 to i32
  %1351 = mul i32 %1024, %1350
  %1352 = add i32 %1351, %1048
  %1353 = zext i32 %1352 to i64
  %1354 = getelementptr inbounds double, ptr %1023, i64 %1353
  %1355 = load double, ptr %1354, align 8, !tbaa !133
  %1356 = fmul double %1275, %1355
  %1357 = add i32 %1277, %1350
  %1358 = zext i32 %1357 to i64
  %1359 = getelementptr inbounds double, ptr %1276, i64 %1358
  %1360 = load double, ptr %1359, align 8, !tbaa !133
  %1361 = call double @llvm.fmuladd.f64(double %1356, double %1043, double %1360)
  store double %1361, ptr %1359, align 8, !tbaa !133
  br label %1362

1362:                                             ; preds = %1349, %1341
  %1363 = add nuw nsw i64 %1342, 1
  %1364 = icmp eq i64 %1363, %63
  br i1 %1364, label %1365, label %1341, !llvm.loop !223

1365:                                             ; preds = %1362, %1391, %1326
  %1366 = add nuw nsw i64 %1258, 1
  %1367 = icmp eq i64 %1366, %63
  br i1 %1367, label %1394, label %1257

1368:                                             ; preds = %1329, %1391
  %1369 = phi i64 [ 0, %1329 ], [ %1392, %1391 ]
  %1370 = load i64, ptr %1340, align 4
  %1371 = getelementptr inbounds %"struct.std::pair.263", ptr %1250, i64 %1369
  %1372 = load i64, ptr %1371, align 4
  %1373 = trunc i64 %1370 to i32
  %1374 = trunc i64 %1372 to i32
  %1375 = icmp eq i32 %1373, %1374
  br i1 %1375, label %1376, label %1391

1376:                                             ; preds = %1368
  %1377 = getelementptr inbounds i32, ptr %1337, i64 %1369
  %1378 = load i32, ptr %1377, align 4, !tbaa !59
  %1379 = mul i32 %1378, %1024
  %1380 = add i32 %1379, %1251
  %1381 = zext i32 %1380 to i64
  %1382 = getelementptr inbounds double, ptr %1023, i64 %1381
  %1383 = load double, ptr %1382, align 8, !tbaa !133
  %1384 = fmul double %1336, %1383
  %1385 = trunc i64 %1369 to i32
  %1386 = add i32 %1339, %1385
  %1387 = zext i32 %1386 to i64
  %1388 = getelementptr inbounds double, ptr %1338, i64 %1387
  %1389 = load double, ptr %1388, align 8, !tbaa !133
  %1390 = call double @llvm.fmuladd.f64(double %1384, double %1043, double %1389)
  store double %1390, ptr %1388, align 8, !tbaa !133
  br label %1391

1391:                                             ; preds = %1376, %1368
  %1392 = add nuw nsw i64 %1369, 1
  %1393 = icmp eq i64 %1392, %63
  br i1 %1393, label %1365, label %1368

1394:                                             ; preds = %1365, %1211, %1030
  %1395 = add nuw nsw i64 %1031, 1
  %1396 = icmp eq i64 %1395, %28
  br i1 %1396, label %1641, label %1030

1397:                                             ; preds = %1028, %1638
  %1398 = phi i64 [ 0, %1028 ], [ %1639, %1638 ]
  %1399 = getelementptr inbounds double, ptr %1029, i64 %1398
  %1400 = load double, ptr %1399, align 8, !tbaa !133
  br i1 %153, label %1638, label %1401

1401:                                             ; preds = %1397
  %1402 = load ptr, ptr %99, align 8, !tbaa !205
  %1403 = trunc i64 %1398 to i32
  %1404 = trunc i64 %1398 to i32
  %1405 = trunc i64 %1398 to i32
  br label %1406

1406:                                             ; preds = %1635, %1401
  %1407 = phi i64 [ %1636, %1635 ], [ 0, %1401 ]
  %1408 = getelementptr inbounds %"class.std::vector.126", ptr %1402, i64 %1407
  %1409 = load ptr, ptr %1408, align 8, !tbaa !54
  %1410 = load ptr, ptr %23, align 8
  %1411 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1410, i64 0, i32 2
  %1412 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1410, i64 0, i32 20
  %1413 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1410, i64 0, i32 19
  %1414 = load ptr, ptr %94, align 8
  %1415 = getelementptr inbounds i32, ptr %1414, i64 %1407
  %1416 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1410, i64 0, i32 12
  %1417 = load ptr, ptr %95, align 8
  %1418 = load i32, ptr %96, align 8
  %1419 = trunc i64 %1407 to i32
  %1420 = mul i32 %157, %1419
  br label %1421

1421:                                             ; preds = %1406, %1525
  %1422 = phi i32 [ 0, %1406 ], [ %1526, %1525 ]
  %1423 = lshr i32 %1422, 6
  %1424 = zext i32 %1423 to i64
  %1425 = getelementptr inbounds i64, ptr %1409, i64 %1424
  %1426 = and i32 %1422, 63
  %1427 = zext i32 %1426 to i64
  %1428 = shl nuw i64 1, %1427
  %1429 = load i64, ptr %1425, align 8, !tbaa !56
  %1430 = and i64 %1429, %1428
  %1431 = icmp eq i64 %1430, 0
  br i1 %1431, label %1525, label %1432

1432:                                             ; preds = %1421
  %1433 = load i8, ptr %1411, align 4, !tbaa !148, !range !182, !noundef !183
  %1434 = icmp eq i8 %1433, 0
  br i1 %1434, label %1435, label %1473

1435:                                             ; preds = %1432
  %1436 = load ptr, ptr %1412, align 8, !tbaa !144
  %1437 = getelementptr inbounds i32, ptr %1436, i64 %1407
  %1438 = load i32, ptr %1437, align 4, !tbaa !59
  %1439 = icmp eq i32 %1438, 1
  br i1 %1439, label %1473, label %1440

1440:                                             ; preds = %1435
  %1441 = load ptr, ptr %1413, align 8, !tbaa !205
  %1442 = getelementptr inbounds %"class.std::vector.126", ptr %1441, i64 %1407
  %1443 = load ptr, ptr %1442, align 8, !tbaa !54
  %1444 = getelementptr inbounds i64, ptr %1443, i64 %1424
  %1445 = load i64, ptr %1444, align 8, !tbaa !56
  %1446 = and i64 %1445, %1428
  %1447 = icmp eq i64 %1446, 0
  br i1 %1447, label %1543, label %1448

1448:                                             ; preds = %1440
  %1449 = load i32, ptr %1415, align 4, !tbaa !59
  %1450 = icmp eq i32 %1422, 0
  br i1 %1450, label %1470, label %1451

1451:                                             ; preds = %1448, %1451
  %1452 = phi i64 [ %1459, %1451 ], [ 0, %1448 ]
  %1453 = phi i32 [ %1464, %1451 ], [ 0, %1448 ]
  %1454 = phi ptr [ %1463, %1451 ], [ %1443, %1448 ]
  %1455 = zext i32 %1453 to i64
  %1456 = load i64, ptr %1454, align 8, !tbaa !56
  %1457 = lshr i64 %1456, %1455
  %1458 = and i64 %1457, 1
  %1459 = add nuw nsw i64 %1458, %1452
  %1460 = add i32 %1453, 1
  %1461 = icmp eq i32 %1453, 63
  %1462 = zext i1 %1461 to i64
  %1463 = getelementptr inbounds i64, ptr %1454, i64 %1462
  %1464 = select i1 %1461, i32 0, i32 %1460
  %1465 = icmp ne ptr %1463, %1444
  %1466 = icmp ne i32 %1464, %1426
  %1467 = or i1 %1466, %1465
  br i1 %1467, label %1451, label %1468

1468:                                             ; preds = %1451
  %1469 = trunc i64 %1459 to i32
  br label %1470

1470:                                             ; preds = %1468, %1448
  %1471 = phi i32 [ 0, %1448 ], [ %1469, %1468 ]
  %1472 = add i32 %1471, %1449
  br label %1481

1473:                                             ; preds = %1435, %1432
  %1474 = load ptr, ptr %1416, align 8, !tbaa !184
  %1475 = getelementptr inbounds %"struct.std::pair.263", ptr %1474, i64 %1407
  %1476 = load i64, ptr %1475, align 4
  %1477 = trunc i64 %1476 to i32
  %1478 = icmp eq i32 %1422, %1477
  br i1 %1478, label %1479, label %1541

1479:                                             ; preds = %1473
  %1480 = load i32, ptr %1415, align 4, !tbaa !59
  br label %1481

1481:                                             ; preds = %1479, %1470
  %1482 = phi i32 [ %1472, %1470 ], [ %1480, %1479 ]
  %1483 = mul i32 %1418, %1482
  %1484 = add i32 %1483, %1403
  %1485 = zext i32 %1484 to i64
  %1486 = getelementptr inbounds double, ptr %1417, i64 %1485
  %1487 = load double, ptr %1486, align 8, !tbaa !133
  br label %1541

1488:                                             ; preds = %1522
  %1489 = add nuw nsw i64 %1529, 1
  %1490 = icmp eq i64 %1489, %63
  br i1 %1490, label %1525, label %1528

1491:                                             ; preds = %1528, %1522
  %1492 = phi i32 [ 0, %1528 ], [ %1523, %1522 ]
  %1493 = lshr i32 %1492, 6
  %1494 = zext i32 %1493 to i64
  %1495 = getelementptr inbounds i64, ptr %1531, i64 %1494
  %1496 = and i32 %1492, 63
  %1497 = zext i32 %1496 to i64
  %1498 = shl nuw i64 1, %1497
  %1499 = load i64, ptr %1495, align 8, !tbaa !56
  %1500 = and i64 %1499, %1498
  %1501 = icmp eq i64 %1500, 0
  br i1 %1501, label %1522, label %1502

1502:                                             ; preds = %1491
  %1503 = load ptr, ptr %1416, align 8, !tbaa !184
  %1504 = getelementptr inbounds %"struct.std::pair.263", ptr %1503, i64 %1529
  %1505 = load i64, ptr %1504, align 4
  %1506 = trunc i64 %1505 to i32
  %1507 = icmp eq i32 %1492, %1506
  br i1 %1507, label %1508, label %1515

1508:                                             ; preds = %1502
  %1509 = load i32, ptr %1533, align 4, !tbaa !59
  %1510 = mul i32 %1535, %1509
  %1511 = add i32 %1510, %1404
  %1512 = zext i32 %1511 to i64
  %1513 = getelementptr inbounds double, ptr %1534, i64 %1512
  %1514 = load double, ptr %1513, align 8, !tbaa !133
  br label %1515

1515:                                             ; preds = %1508, %1502
  %1516 = phi double [ 0.000000e+00, %1502 ], [ %1514, %1508 ]
  %1517 = icmp eq i32 %1422, %1492
  br i1 %1517, label %1518, label %1522

1518:                                             ; preds = %1515
  %1519 = fmul double %1542, %1516
  %1520 = load double, ptr %1540, align 8, !tbaa !133
  %1521 = call double @llvm.fmuladd.f64(double %1519, double %1400, double %1520)
  store double %1521, ptr %1540, align 8, !tbaa !133
  br label %1522

1522:                                             ; preds = %1518, %1515, %1491
  %1523 = add nuw i32 %1492, 1
  %1524 = icmp eq i32 %1523, %26
  br i1 %1524, label %1488, label %1491

1525:                                             ; preds = %1488, %1632, %1421
  %1526 = add nuw i32 %1422, 1
  %1527 = icmp eq i32 %1526, %26
  br i1 %1527, label %1635, label %1421

1528:                                             ; preds = %1541, %1488
  %1529 = phi i64 [ %1489, %1488 ], [ 0, %1541 ]
  %1530 = getelementptr inbounds %"class.std::vector.126", ptr %1402, i64 %1529
  %1531 = load ptr, ptr %1530, align 8, !tbaa !54
  %1532 = load ptr, ptr %94, align 8
  %1533 = getelementptr inbounds i32, ptr %1532, i64 %1529
  %1534 = load ptr, ptr %95, align 8
  %1535 = load i32, ptr %96, align 8
  %1536 = load ptr, ptr %89, align 8
  %1537 = trunc i64 %1529 to i32
  %1538 = add i32 %1420, %1537
  %1539 = zext i32 %1538 to i64
  %1540 = getelementptr inbounds double, ptr %1536, i64 %1539
  br label %1491

1541:                                             ; preds = %1473, %1481
  %1542 = phi double [ 0.000000e+00, %1473 ], [ %1487, %1481 ]
  br i1 %1434, label %1543, label %1528

1543:                                             ; preds = %1440, %1541
  %1544 = phi double [ %1542, %1541 ], [ 0.000000e+00, %1440 ]
  br label %1545

1545:                                             ; preds = %1543, %1632
  %1546 = phi i64 [ 0, %1543 ], [ %1633, %1632 ]
  %1547 = getelementptr inbounds %"class.std::vector.126", ptr %1402, i64 %1546
  %1548 = load ptr, ptr %1547, align 8, !tbaa !54
  %1549 = load ptr, ptr %94, align 8
  %1550 = getelementptr inbounds i32, ptr %1549, i64 %1546
  %1551 = load ptr, ptr %95, align 8
  %1552 = load i32, ptr %96, align 8
  %1553 = load ptr, ptr %89, align 8
  %1554 = trunc i64 %1546 to i32
  %1555 = add i32 %1420, %1554
  %1556 = zext i32 %1555 to i64
  %1557 = getelementptr inbounds double, ptr %1553, i64 %1556
  br label %1558

1558:                                             ; preds = %1629, %1545
  %1559 = phi i32 [ 0, %1545 ], [ %1630, %1629 ]
  %1560 = lshr i32 %1559, 6
  %1561 = zext i32 %1560 to i64
  %1562 = getelementptr inbounds i64, ptr %1548, i64 %1561
  %1563 = and i32 %1559, 63
  %1564 = zext i32 %1563 to i64
  %1565 = shl nuw i64 1, %1564
  %1566 = load i64, ptr %1562, align 8, !tbaa !56
  %1567 = and i64 %1566, %1565
  %1568 = icmp eq i64 %1567, 0
  br i1 %1568, label %1629, label %1569

1569:                                             ; preds = %1558
  %1570 = load ptr, ptr %1412, align 8, !tbaa !144
  %1571 = getelementptr inbounds i32, ptr %1570, i64 %1546
  %1572 = load i32, ptr %1571, align 4, !tbaa !59
  %1573 = icmp eq i32 %1572, 1
  br i1 %1573, label %1607, label %1574

1574:                                             ; preds = %1569
  %1575 = load ptr, ptr %1413, align 8, !tbaa !205
  %1576 = getelementptr inbounds %"class.std::vector.126", ptr %1575, i64 %1546
  %1577 = load ptr, ptr %1576, align 8, !tbaa !54
  %1578 = getelementptr inbounds i64, ptr %1577, i64 %1561
  %1579 = load i64, ptr %1578, align 8, !tbaa !56
  %1580 = and i64 %1579, %1565
  %1581 = icmp eq i64 %1580, 0
  br i1 %1581, label %1622, label %1582

1582:                                             ; preds = %1574
  %1583 = load i32, ptr %1550, align 4, !tbaa !59
  %1584 = icmp eq i32 %1559, 0
  br i1 %1584, label %1604, label %1585

1585:                                             ; preds = %1582, %1585
  %1586 = phi i64 [ %1593, %1585 ], [ 0, %1582 ]
  %1587 = phi i32 [ %1598, %1585 ], [ 0, %1582 ]
  %1588 = phi ptr [ %1597, %1585 ], [ %1577, %1582 ]
  %1589 = zext i32 %1587 to i64
  %1590 = load i64, ptr %1588, align 8, !tbaa !56
  %1591 = lshr i64 %1590, %1589
  %1592 = and i64 %1591, 1
  %1593 = add nuw nsw i64 %1592, %1586
  %1594 = add i32 %1587, 1
  %1595 = icmp eq i32 %1587, 63
  %1596 = zext i1 %1595 to i64
  %1597 = getelementptr inbounds i64, ptr %1588, i64 %1596
  %1598 = select i1 %1595, i32 0, i32 %1594
  %1599 = icmp ne ptr %1597, %1578
  %1600 = icmp ne i32 %1598, %1563
  %1601 = or i1 %1600, %1599
  br i1 %1601, label %1585, label %1602

1602:                                             ; preds = %1585
  %1603 = trunc i64 %1593 to i32
  br label %1604

1604:                                             ; preds = %1602, %1582
  %1605 = phi i32 [ 0, %1582 ], [ %1603, %1602 ]
  %1606 = add i32 %1605, %1583
  br label %1615

1607:                                             ; preds = %1569
  %1608 = load ptr, ptr %1416, align 8, !tbaa !184
  %1609 = getelementptr inbounds %"struct.std::pair.263", ptr %1608, i64 %1546
  %1610 = load i64, ptr %1609, align 4
  %1611 = trunc i64 %1610 to i32
  %1612 = icmp eq i32 %1559, %1611
  br i1 %1612, label %1613, label %1622

1613:                                             ; preds = %1607
  %1614 = load i32, ptr %1550, align 4, !tbaa !59
  br label %1615

1615:                                             ; preds = %1613, %1604
  %1616 = phi i32 [ %1606, %1604 ], [ %1614, %1613 ]
  %1617 = mul i32 %1552, %1616
  %1618 = add i32 %1617, %1405
  %1619 = zext i32 %1618 to i64
  %1620 = getelementptr inbounds double, ptr %1551, i64 %1619
  %1621 = load double, ptr %1620, align 8, !tbaa !133
  br label %1622

1622:                                             ; preds = %1615, %1607, %1574
  %1623 = phi double [ 0.000000e+00, %1607 ], [ 0.000000e+00, %1574 ], [ %1621, %1615 ]
  %1624 = icmp eq i32 %1422, %1559
  br i1 %1624, label %1625, label %1629

1625:                                             ; preds = %1622
  %1626 = fmul double %1544, %1623
  %1627 = load double, ptr %1557, align 8, !tbaa !133
  %1628 = call double @llvm.fmuladd.f64(double %1626, double %1400, double %1627)
  store double %1628, ptr %1557, align 8, !tbaa !133
  br label %1629

1629:                                             ; preds = %1625, %1622, %1558
  %1630 = add nuw i32 %1559, 1
  %1631 = icmp eq i32 %1630, %26
  br i1 %1631, label %1632, label %1558

1632:                                             ; preds = %1629
  %1633 = add nuw nsw i64 %1546, 1
  %1634 = icmp eq i64 %1633, %63
  br i1 %1634, label %1525, label %1545

1635:                                             ; preds = %1525
  %1636 = add nuw nsw i64 %1407, 1
  %1637 = icmp eq i64 %1636, %63
  br i1 %1637, label %1638, label %1406

1638:                                             ; preds = %1635, %1397
  %1639 = add nuw nsw i64 %1398, 1
  %1640 = icmp eq i64 %1639, %28
  br i1 %1640, label %1641, label %1397

1641:                                             ; preds = %547, %756, %463, %1394, %1638, %750, %473, %472, %749, %201, %1018, %1027
  br i1 %100, label %1656, label %1642

1642:                                             ; preds = %1641, %1652
  %1643 = phi i64 [ %1654, %1652 ], [ 0, %1641 ]
  %1644 = phi i32 [ %1653, %1652 ], [ 0, %1641 ]
  %1645 = getelementptr inbounds i32, ptr %71, i64 %1643
  %1646 = load i32, ptr %1645, align 4, !tbaa !59
  %1647 = load ptr, ptr %89, align 8, !tbaa !140
  %1648 = load i32, ptr %88, align 8, !tbaa !59
  %1649 = mul i32 %1648, %1644
  %1650 = zext i32 %1649 to i64
  %1651 = getelementptr inbounds double, ptr %1647, i64 %1650
  invoke void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %3, i32 noundef %1646, i32 noundef %105, ptr noundef nonnull %71, ptr noundef nonnull %1651, i1 noundef zeroext true, i1 noundef zeroext false)
          to label %1652 unwind label %221

1652:                                             ; preds = %1642
  %1653 = add i32 %1644, 1
  %1654 = zext i32 %1653 to i64
  %1655 = icmp ugt i64 %104, %1654
  br i1 %1655, label %1642, label %1656

1656:                                             ; preds = %1652, %1641
  %1657 = load ptr, ptr %106, align 8, !tbaa !62
  %1658 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1657, i64 0, i32 1
  %1659 = load ptr, ptr %1658, align 8, !tbaa !46
  %1660 = ptrtoint ptr %1659 to i64
  %1661 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1657, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1662 = load i32, ptr %14, align 8
  %1663 = load i32, ptr %77, align 4
  br label %1664

1664:                                             ; preds = %1752, %1656
  %1665 = phi i32 [ %1662, %1656 ], [ %1731, %1752 ]
  %1666 = phi i32 [ %1662, %1656 ], [ %1732, %1752 ]
  %1667 = phi i32 [ %1662, %1656 ], [ %1753, %1752 ]
  %1668 = phi i32 [ %1663, %1656 ], [ %1733, %1752 ]
  %1669 = add nsw i32 %1668, 1
  %1670 = sext i32 %1667 to i64
  %1671 = getelementptr inbounds ptr, ptr %1659, i64 %1670
  %1672 = load ptr, ptr %1671, align 8, !tbaa !33
  %1673 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1672, i64 0, i32 4
  %1674 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1672, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1675 = load ptr, ptr %1674, align 8, !tbaa !48
  %1676 = load ptr, ptr %1673, align 8, !tbaa !50
  %1677 = ptrtoint ptr %1675 to i64
  %1678 = ptrtoint ptr %1676 to i64
  %1679 = sub i64 %1677, %1678
  %1680 = sdiv exact i64 %1679, 24
  %1681 = trunc i64 %1680 to i32
  %1682 = icmp slt i32 %1669, %1681
  br i1 %1682, label %1730, label %1683

1683:                                             ; preds = %1664
  %1684 = add nsw i64 %1670, 1
  %1685 = trunc i64 %1684 to i32
  store i32 %1685, ptr %14, align 8, !tbaa !60
  %1686 = load ptr, ptr %1661, align 8, !tbaa !51
  %1687 = ptrtoint ptr %1686 to i64
  %1688 = sub i64 %1687, %1660
  %1689 = shl i64 %1688, 29
  %1690 = ashr i64 %1689, 32
  %1691 = icmp slt i64 %1684, %1690
  br i1 %1691, label %1692, label %1724

1692:                                             ; preds = %1683
  %1693 = getelementptr inbounds ptr, ptr %1659, i64 %1684
  %1694 = load ptr, ptr %1693, align 8, !tbaa !33
  %1695 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1694, i64 0, i32 4
  %1696 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1694, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1697 = load ptr, ptr %1696, align 8, !tbaa !48
  %1698 = load ptr, ptr %1695, align 8, !tbaa !50
  %1699 = ptrtoint ptr %1697 to i64
  %1700 = ptrtoint ptr %1698 to i64
  %1701 = sub i64 %1699, %1700
  %1702 = sdiv exact i64 %1701, 24
  %1703 = trunc i64 %1702 to i32
  %1704 = icmp sgt i32 %1703, 0
  br i1 %1704, label %1726, label %1718

1705:                                             ; preds = %1718
  %1706 = getelementptr inbounds ptr, ptr %1659, i64 %1720
  %1707 = load ptr, ptr %1706, align 8, !tbaa !33
  %1708 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1707, i64 0, i32 4
  %1709 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1707, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1710 = load ptr, ptr %1709, align 8, !tbaa !48
  %1711 = load ptr, ptr %1708, align 8, !tbaa !50
  %1712 = ptrtoint ptr %1710 to i64
  %1713 = ptrtoint ptr %1711 to i64
  %1714 = sub i64 %1712, %1713
  %1715 = sdiv exact i64 %1714, 24
  %1716 = trunc i64 %1715 to i32
  %1717 = icmp sgt i32 %1716, 0
  br i1 %1717, label %1725, label %1718, !llvm.loop !52

1718:                                             ; preds = %1692, %1705
  %1719 = phi i64 [ %1720, %1705 ], [ %1684, %1692 ]
  %1720 = add i64 %1719, 1
  %1721 = trunc i64 %1720 to i32
  %1722 = icmp eq i64 %1720, %1690
  br i1 %1722, label %1723, label %1705, !llvm.loop !52

1723:                                             ; preds = %1718
  store i32 %1721, ptr %14, align 8, !tbaa !60
  br label %1724

1724:                                             ; preds = %1723, %1683
  store i32 -1, ptr %14, align 8, !tbaa !60
  br label %1730

1725:                                             ; preds = %1705
  store i32 %1721, ptr %14, align 8, !tbaa !60
  br label %1726

1726:                                             ; preds = %1725, %1692
  %1727 = phi i32 [ %1685, %1692 ], [ %1721, %1725 ]
  %1728 = phi i64 [ %1684, %1692 ], [ %1720, %1725 ]
  %1729 = trunc i64 %1728 to i32
  br label %1730

1730:                                             ; preds = %1726, %1724, %1664
  %1731 = phi i32 [ %1665, %1664 ], [ -1, %1724 ], [ %1727, %1726 ]
  %1732 = phi i32 [ %1666, %1664 ], [ -1, %1724 ], [ %1729, %1726 ]
  %1733 = phi i32 [ %1669, %1664 ], [ -1, %1724 ], [ 0, %1726 ]
  %1734 = phi i32 [ %1667, %1664 ], [ -1, %1724 ], [ %1729, %1726 ]
  %1735 = or i32 %1734, %1733
  %1736 = icmp sgt i32 %1735, -1
  br i1 %1736, label %1737, label %1754

1737:                                             ; preds = %1730
  %1738 = zext i32 %1734 to i64
  %1739 = getelementptr inbounds ptr, ptr %1659, i64 %1738
  %1740 = load ptr, ptr %1739, align 8, !tbaa !33
  %1741 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1740, i64 0, i32 4, i32 0, i32 3
  %1742 = load ptr, ptr %1741, align 8, !tbaa !54
  %1743 = lshr i32 %1733, 6
  %1744 = zext i32 %1743 to i64
  %1745 = getelementptr inbounds i64, ptr %1742, i64 %1744
  %1746 = and i32 %1733, 63
  %1747 = zext i32 %1746 to i64
  %1748 = shl nuw i64 1, %1747
  %1749 = load i64, ptr %1745, align 8, !tbaa !56
  %1750 = and i64 %1749, %1748
  %1751 = icmp eq i64 %1750, 0
  br i1 %1751, label %1752, label %1754

1752:                                             ; preds = %1737, %1757
  %1753 = phi i32 [ %1734, %1737 ], [ %1732, %1757 ]
  br label %1664

1754:                                             ; preds = %1737, %1730
  store i32 %1733, ptr %77, align 4, !tbaa !61
  %1755 = or i32 %1733, %1732
  %1756 = icmp sgt i32 %1755, -1
  br i1 %1756, label %1757, label %1768

1757:                                             ; preds = %1754
  %1758 = zext i32 %1732 to i64
  %1759 = getelementptr inbounds ptr, ptr %1659, i64 %1758
  %1760 = load ptr, ptr %1759, align 8, !tbaa !33
  %1761 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1760, i64 0, i32 4, i32 0, i32 1
  %1762 = shl i32 %1733, 2
  %1763 = zext i32 %1762 to i64
  %1764 = load ptr, ptr %1761, align 8, !tbaa !57
  %1765 = getelementptr inbounds i32, ptr %1764, i64 %1763
  %1766 = load i32, ptr %1765, align 4, !tbaa !59
  %1767 = icmp eq i32 %1766, -1
  br i1 %1767, label %1768, label %1752

1768:                                             ; preds = %1754, %1757
  %1769 = load i32, ptr %78, align 4, !tbaa !61
  %1770 = icmp ne i32 %1733, %1769
  %1771 = load i32, ptr %76, align 8
  %1772 = icmp ne i32 %1731, %1771
  %1773 = select i1 %1770, i1 true, i1 %1772
  br i1 %1773, label %154, label %1774

1774:                                             ; preds = %1768, %70
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1775 = icmp eq ptr %71, null
  br i1 %1775, label %1777, label %1776

1776:                                             ; preds = %1774
  call void @_ZdlPv(ptr noundef nonnull %71) #21
  br label %1777

1777:                                             ; preds = %1776, %1774
  %1778 = load ptr, ptr %11, align 8, !tbaa !224
  %1779 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %1780 = load ptr, ptr %1779, align 8, !tbaa !226
  %1781 = icmp eq ptr %1778, %1780
  br i1 %1781, label %1791, label %1782

1782:                                             ; preds = %1777, %1786
  %1783 = phi ptr [ %1787, %1786 ], [ %1778, %1777 ]
  %1784 = load ptr, ptr %1783, align 8, !tbaa !41
  %1785 = load ptr, ptr %1784, align 8
  invoke void %1785(ptr noundef nonnull align 8 dereferenceable(88) %1783)
          to label %1786 unwind label %1795

1786:                                             ; preds = %1782
  %1787 = getelementptr inbounds %"class.dealii::Vector", ptr %1783, i64 1
  %1788 = icmp eq ptr %1787, %1780
  br i1 %1788, label %1789, label %1782

1789:                                             ; preds = %1786
  %1790 = load ptr, ptr %11, align 8, !tbaa !224
  br label %1791

1791:                                             ; preds = %1789, %1777
  %1792 = phi ptr [ %1790, %1789 ], [ %1778, %1777 ]
  %1793 = icmp eq ptr %1792, null
  br i1 %1793, label %1800, label %1794

1794:                                             ; preds = %1791
  call void @_ZdlPv(ptr noundef nonnull %1792) #21
  br label %1800

1795:                                             ; preds = %1782
  %1796 = landingpad { ptr, i32 }
          cleanup
  %1797 = load ptr, ptr %11, align 8, !tbaa !224
  %1798 = icmp eq ptr %1797, null
  br i1 %1798, label %1846, label %1799

1799:                                             ; preds = %1795
  call void @_ZdlPv(ptr noundef nonnull %1797) #21
  br label %1846

1800:                                             ; preds = %1794, %1791
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  %1801 = load ptr, ptr %10, align 8, !tbaa !131
  %1802 = icmp eq ptr %1801, null
  br i1 %1802, label %1804, label %1803

1803:                                             ; preds = %1800
  call void @_ZdlPv(ptr noundef nonnull %1801) #21
  br label %1804

1804:                                             ; preds = %1803, %1800
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !41
  %1805 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 1
  %1806 = load ptr, ptr %1805, align 8, !tbaa !140
  %1807 = icmp eq ptr %1806, null
  br i1 %1807, label %1809, label %1808

1808:                                             ; preds = %1804
  call void @_ZdaPv(ptr noundef nonnull %1806) #21
  br label %1809

1809:                                             ; preds = %1808, %1804
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %9)
          to label %1810 unwind label %209

1810:                                             ; preds = %1809
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !41
  %1811 = getelementptr inbounds %"class.dealii::FEValues", ptr %8, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1811)
          to label %1819 unwind label %1812

1812:                                             ; preds = %1810
  %1813 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1814 unwind label %1816

1814:                                             ; preds = %1812, %1867
  %1815 = phi { ptr, i32 } [ %1859, %1867 ], [ %1813, %1812 ]
  resume { ptr, i32 } %1815

1816:                                             ; preds = %1812
  %1817 = landingpad { ptr, i32 }
          catch ptr null
  %1818 = extractvalue { ptr, i32 } %1817, 0
  call void @__clang_call_terminate(ptr %1818) #22
  unreachable

1819:                                             ; preds = %1810
  call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %8) #19
  ret void

1820:                                             ; preds = %221, %223
  %1821 = phi { ptr, i32 } [ %222, %221 ], [ %224, %223 ]
  call void @_ZdlPv(ptr noundef nonnull %71) #21
  br label %1822

1822:                                             ; preds = %1820, %223, %219
  %1823 = phi { ptr, i32 } [ %220, %219 ], [ %224, %223 ], [ %1821, %1820 ]
  %1824 = load ptr, ptr %11, align 8, !tbaa !224
  %1825 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %1826 = load ptr, ptr %1825, align 8, !tbaa !226
  %1827 = icmp eq ptr %1824, %1826
  br i1 %1827, label %1837, label %1828

1828:                                             ; preds = %1822, %1832
  %1829 = phi ptr [ %1833, %1832 ], [ %1824, %1822 ]
  %1830 = load ptr, ptr %1829, align 8, !tbaa !41
  %1831 = load ptr, ptr %1830, align 8
  invoke void %1831(ptr noundef nonnull align 8 dereferenceable(88) %1829)
          to label %1832 unwind label %1841

1832:                                             ; preds = %1828
  %1833 = getelementptr inbounds %"class.dealii::Vector", ptr %1829, i64 1
  %1834 = icmp eq ptr %1833, %1826
  br i1 %1834, label %1835, label %1828

1835:                                             ; preds = %1832
  %1836 = load ptr, ptr %11, align 8, !tbaa !224
  br label %1837

1837:                                             ; preds = %1835, %1822
  %1838 = phi ptr [ %1836, %1835 ], [ %1824, %1822 ]
  %1839 = icmp eq ptr %1838, null
  br i1 %1839, label %1846, label %1840

1840:                                             ; preds = %1837
  call void @_ZdlPv(ptr noundef nonnull %1838) #21
  br label %1846

1841:                                             ; preds = %1828
  %1842 = landingpad { ptr, i32 }
          catch ptr null
  %1843 = load ptr, ptr %11, align 8, !tbaa !224
  %1844 = icmp eq ptr %1843, null
  br i1 %1844, label %1870, label %1845

1845:                                             ; preds = %1841
  call void @_ZdlPv(ptr noundef nonnull %1843) #21
  br label %1870

1846:                                             ; preds = %1799, %1795, %1840, %1837, %217
  %1847 = phi { ptr, i32 } [ %218, %217 ], [ %1823, %1837 ], [ %1823, %1840 ], [ %1796, %1799 ], [ %1796, %1795 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  %1848 = load ptr, ptr %10, align 8, !tbaa !131
  %1849 = icmp eq ptr %1848, null
  br i1 %1849, label %1851, label %1850

1850:                                             ; preds = %1846
  call void @_ZdlPv(ptr noundef nonnull %1848) #21
  br label %1851

1851:                                             ; preds = %1850, %1846, %211
  %1852 = phi { ptr, i32 } [ %212, %211 ], [ %1847, %1846 ], [ %1847, %1850 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !41
  %1853 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 1
  %1854 = load ptr, ptr %1853, align 8, !tbaa !140
  %1855 = icmp eq ptr %1854, null
  br i1 %1855, label %1857, label %1856

1856:                                             ; preds = %1851
  call void @_ZdaPv(ptr noundef nonnull %1854) #21
  br label %1857

1857:                                             ; preds = %1856, %1851
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %9)
          to label %1858 unwind label %1868

1858:                                             ; preds = %1857, %209
  %1859 = phi { ptr, i32 } [ %210, %209 ], [ %1852, %1857 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !41
  %1860 = getelementptr inbounds %"class.dealii::FEValues", ptr %8, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1860)
          to label %1861 unwind label %1862

1861:                                             ; preds = %1858
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1867 unwind label %1868

1862:                                             ; preds = %1858
  %1863 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1870 unwind label %1864

1864:                                             ; preds = %1862
  %1865 = landingpad { ptr, i32 }
          catch ptr null
  %1866 = extractvalue { ptr, i32 } %1865, 0
  call void @__clang_call_terminate(ptr %1866) #22
  unreachable

1867:                                             ; preds = %1861
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %8) #19
  br label %1814

1868:                                             ; preds = %1861, %1857, %215
  %1869 = landingpad { ptr, i32 }
          catch ptr null
  br label %1870

1870:                                             ; preds = %1868, %1862, %1841, %1845
  %1871 = phi { ptr, i32 } [ %1842, %1845 ], [ %1842, %1841 ], [ %1869, %1868 ], [ %1863, %1862 ]
  %1872 = extractvalue { ptr, i32 } %1871, 0
  call void @__clang_call_terminate(ptr %1872) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(168) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(36) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.266", align 8
  %11 = alloca %"class.boost::_bi::bind_t", align 8
  %12 = alloca %"class.boost::function", align 8
  %13 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  store ptr null, ptr %12, align 8, !tbaa !25
  %14 = load ptr, ptr %1, align 8, !tbaa !25
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  store ptr %14, ptr %12, align 8, !tbaa !25
  %17 = load ptr, ptr %14, align 8, !tbaa !227
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %17(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef 0)
  br label %20

20:                                               ; preds = %9, %16
  call void @llvm.experimental.noalias.scope.decl(metadata !228)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17, !noalias !228
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %13, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17, !alias.scope !228
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %13, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !17, !noalias !228
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %24, ptr noundef nonnull align 8 dereferenceable(16) %25, i64 16, i1 false)
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %27, ptr %28, align 8, !tbaa !17, !alias.scope !228
  %29 = ptrtoint ptr %8 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIdEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSU_IS9_EENSU_ISD_EENSU_ISG_EESL_SO_NSU_ISQ_EEEENS_3_bi6bind_tINS10_11unspecifiedET_NS10_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES13_S15_S16_S17_S18_S19_S1A_S1B_(ptr nonnull sret(%"class.boost::_bi::bind_t") align 8 %11, ptr noundef nonnull %12, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, ptr noundef %6, ptr noundef nonnull %13, i64 %29)
          to label %30 unwind label %59

30:                                               ; preds = %20
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS4_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull %11, i32 noundef 0)
          to label %31 unwind label %61

31:                                               ; preds = %30
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %32 unwind label %63

32:                                               ; preds = %31
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  %34 = icmp eq ptr %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = load ptr, ptr %33, align 8, !tbaa !231
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %36(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %39, i32 noundef 2)
          to label %40 unwind label %61

40:                                               ; preds = %38, %35
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %41

41:                                               ; preds = %40, %32
  %42 = load ptr, ptr %11, align 8, !tbaa !25
  %43 = icmp eq ptr %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load ptr, ptr %42, align 8, !tbaa !27
  %46 = icmp eq ptr %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(24) %48, ptr noundef nonnull align 8 dereferenceable(24) %48, i32 noundef 2)
          to label %49 unwind label %59

49:                                               ; preds = %47, %44
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %50

50:                                               ; preds = %49, %41
  %51 = load ptr, ptr %12, align 8, !tbaa !25
  %52 = icmp eq ptr %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr %51, align 8, !tbaa !27
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  ret void

59:                                               ; preds = %47, %20
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %83

61:                                               ; preds = %38, %30
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %73

63:                                               ; preds = %31
  %64 = landingpad { ptr, i32 }
          cleanup
  %65 = load ptr, ptr %10, align 8, !tbaa !25
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = load ptr, ptr %65, align 8, !tbaa !231
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %68(ptr noundef nonnull align 8 dereferenceable(24) %71, ptr noundef nonnull align 8 dereferenceable(24) %71, i32 noundef 2)
          to label %72 unwind label %93

72:                                               ; preds = %70, %67
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %73

73:                                               ; preds = %72, %63, %61
  %74 = phi { ptr, i32 } [ %62, %61 ], [ %64, %63 ], [ %64, %72 ]
  %75 = load ptr, ptr %11, align 8, !tbaa !25
  %76 = icmp eq ptr %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr %75, align 8, !tbaa !27
  %79 = icmp eq ptr %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %78(ptr noundef nonnull align 8 dereferenceable(24) %81, ptr noundef nonnull align 8 dereferenceable(24) %81, i32 noundef 2)
          to label %82 unwind label %93

82:                                               ; preds = %80, %77
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %83

83:                                               ; preds = %82, %73, %59
  %84 = phi { ptr, i32 } [ %60, %59 ], [ %74, %73 ], [ %74, %82 ]
  %85 = load ptr, ptr %12, align 8, !tbaa !25
  %86 = icmp eq ptr %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = load ptr, ptr %85, align 8, !tbaa !27
  %89 = icmp eq ptr %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %88(ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %91, i32 noundef 2)
          to label %92 unwind label %93

92:                                               ; preds = %87, %90, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  resume { ptr, i32 } %84

93:                                               ; preds = %90, %80, %70
  %94 = landingpad { ptr, i32 }
          catch ptr null
  %95 = extractvalue { ptr, i32 } %94, 0
  call void @__clang_call_terminate(ptr %95) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::shared_ptr", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !39
  %4 = icmp eq ptr %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !34
  %8 = add nsw i64 %7, -1
  store i64 %8, ptr %6, align 8, !tbaa !34
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = load ptr, ptr %3, align 8, !tbaa !41
  %12 = getelementptr inbounds ptr, ptr %11, i64 2
  %13 = load ptr, ptr %12, align 8
  tail call void %13(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %14 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 2
  %15 = load i64, ptr %14, align 8, !tbaa !43
  %16 = add nsw i64 %15, -1
  store i64 %16, ptr %14, align 8, !tbaa !43
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = load ptr, ptr %3, align 8, !tbaa !41
  %20 = getelementptr inbounds ptr, ptr %19, i64 3
  %21 = load ptr, ptr %20, align 8
  tail call void %21(ptr noundef nonnull align 8 dereferenceable(24) %3)
  br label %22

22:                                               ; preds = %1, %5, %10, %18
  ret void
}

; Function Attrs: noinline noreturn nounwind sspstrong uwtable
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #4 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #19
  tail call void @_ZSt9terminatev() #22
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load ptr, ptr %0, align 8, !tbaa !13
  %3 = icmp eq ptr %2, %0
  br i1 %3, label %29, label %4

4:                                                ; preds = %1, %27
  %5 = phi ptr [ %6, %27 ], [ %2, %1 ]
  %6 = load ptr, ptr %5, align 8, !tbaa !13
  %7 = getelementptr inbounds %"struct.std::_List_node", ptr %5, i64 0, i32 1, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !39
  %9 = icmp eq ptr %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %8, i64 0, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = add nsw i64 %12, -1
  store i64 %13, ptr %11, align 8, !tbaa !34
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = load ptr, ptr %8, align 8, !tbaa !41
  %17 = getelementptr inbounds ptr, ptr %16, i64 2
  %18 = load ptr, ptr %17, align 8
  tail call void %18(ptr noundef nonnull align 8 dereferenceable(24) %8)
  %19 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %8, i64 0, i32 2
  %20 = load i64, ptr %19, align 8, !tbaa !43
  %21 = add nsw i64 %20, -1
  store i64 %21, ptr %19, align 8, !tbaa !43
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %15
  %24 = load ptr, ptr %8, align 8, !tbaa !41
  %25 = getelementptr inbounds ptr, ptr %24, i64 3
  %26 = load ptr, ptr %25, align 8
  tail call void %26(ptr noundef nonnull align 8 dereferenceable(24) %8)
  br label %27

27:                                               ; preds = %23, %15, %10, %4
  tail call void @_ZdlPv(ptr noundef nonnull %5) #21
  %28 = icmp eq ptr %6, %0
  br i1 %28, label %29, label %4

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %9 = alloca %"class.std::vector", align 8
  %10 = alloca %"class.dealii::TriaActiveIterator", align 8
  %11 = alloca %"class.dealii::TriaActiveIterator", align 8
  %12 = alloca %"class.dealii::TriaRawIterator", align 8
  %13 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %14 = alloca %"class.dealii::Threads::Thread", align 16
  %15 = alloca %"class.dealii::Threads::internal::fun_encapsulator.34", align 8
  %16 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %17 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %8, i64 0, i32 1
  store ptr %8, ptr %18, align 8, !tbaa !10
  store ptr %8, ptr %8, align 8, !tbaa !13
  %19 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %8, i64 0, i32 1
  store i64 0, ptr %19, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %10, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %20 unwind label %43

20:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %12, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %21 unwind label %45

21:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %12, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  store ptr %24, ptr %22, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %9, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %17)
          to label %25 unwind label %45

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %16, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.boost::shared_ptr", ptr %14, i64 0, i32 1
  %33 = zext i32 %17 to i64
  br label %49

34:                                               ; preds = %103, %25
  %35 = load ptr, ptr %8, align 8, !tbaa !13
  %36 = icmp eq ptr %35, %8
  br i1 %36, label %122, label %37

37:                                               ; preds = %34, %40
  %38 = phi ptr [ %41, %40 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_List_node", ptr %38, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %39)
          to label %40 unwind label %155

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !13
  %42 = icmp eq ptr %41, %8
  br i1 %42, label %122, label %37

43:                                               ; preds = %7
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %21, %20
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %46, %45 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  br label %162

49:                                               ; preds = %27, %103
  %50 = phi i64 [ 0, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !233)
  store ptr null, ptr %15, align 8, !tbaa !25, !alias.scope !233
  %51 = load ptr, ptr @_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable, align 8, !tbaa !236, !noalias !233
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  invoke void %51(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %54 unwind label %106

54:                                               ; preds = %53, %49
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE, ptr %28, align 8, !tbaa !30, !alias.scope !233
  store ptr @_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable, ptr %15, align 8, !tbaa !25, !alias.scope !233
  %55 = load ptr, ptr %9, align 8, !tbaa !31
  %56 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50
  %57 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  store ptr %58, ptr %29, align 8, !tbaa !17
  %59 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50, i32 1
  %60 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  store ptr %61, ptr %31, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %14, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %62 unwind label %108

62:                                               ; preds = %54
  %63 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %64 unwind label %110

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_List_node", ptr %63, i64 0, i32 1
  %66 = load <2 x ptr>, ptr %14, align 16, !tbaa !33
  store <2 x ptr> %66, ptr %65, align 8, !tbaa !33
  %67 = extractelement <2 x ptr> %66, i64 1
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %67, i64 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !34
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %70, align 8, !tbaa !34
  br label %73

73:                                               ; preds = %69, %64
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull %8) #19
  %74 = load i64, ptr %19, align 8, !tbaa !36
  %75 = add i64 %74, 1
  store i64 %75, ptr %19, align 8, !tbaa !36
  %76 = load ptr, ptr %32, align 8, !tbaa !39
  %77 = icmp eq ptr %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = add nsw i64 %80, -1
  store i64 %81, ptr %79, align 8, !tbaa !34
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %78
  %84 = load ptr, ptr %76, align 8, !tbaa !41
  %85 = getelementptr inbounds ptr, ptr %84, i64 2
  %86 = load ptr, ptr %85, align 8
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %87 unwind label %108

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !43
  %90 = add nsw i64 %89, -1
  store i64 %90, ptr %88, align 8, !tbaa !43
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load ptr, ptr %76, align 8, !tbaa !41
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %96 unwind label %108

96:                                               ; preds = %87, %78, %73, %92
  %97 = load ptr, ptr %15, align 8, !tbaa !25
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load ptr, ptr %97, align 8, !tbaa !236
  %101 = icmp eq ptr %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  invoke void %100(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %103 unwind label %106

103:                                              ; preds = %99, %102, %96
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  %104 = add nuw nsw i64 %50, 1
  %105 = icmp eq i64 %104, %33
  br i1 %105, label %34, label %49

106:                                              ; preds = %102, %53
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %120

108:                                              ; preds = %92, %83, %54
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %112

110:                                              ; preds = %62
  %111 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %112 unwind label %165

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  %114 = load ptr, ptr %15, align 8, !tbaa !25
  %115 = icmp eq ptr %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !236
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  invoke void %117(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %120 unwind label %165

120:                                              ; preds = %116, %119, %112, %106
  %121 = phi { ptr, i32 } [ %107, %106 ], [ %113, %112 ], [ %113, %119 ], [ %113, %116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  br label %157

122:                                              ; preds = %40, %34
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %123 = load ptr, ptr %9, align 8, !tbaa !31
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZdlPv(ptr noundef nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  %127 = load ptr, ptr %8, align 8, !tbaa !13
  %128 = icmp eq ptr %127, %8
  br i1 %128, label %154, label %129

129:                                              ; preds = %126, %152
  %130 = phi ptr [ %131, %152 ], [ %127, %126 ]
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds %"struct.std::_List_node", ptr %130, i64 0, i32 1, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !34
  %138 = add nsw i64 %137, -1
  store i64 %138, ptr %136, align 8, !tbaa !34
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load ptr, ptr %133, align 8, !tbaa !41
  %142 = getelementptr inbounds ptr, ptr %141, i64 2
  %143 = load ptr, ptr %142, align 8
  call void %143(ptr noundef nonnull align 8 dereferenceable(24) %133)
  %144 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !43
  %146 = add nsw i64 %145, -1
  store i64 %146, ptr %144, align 8, !tbaa !43
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load ptr, ptr %133, align 8, !tbaa !41
  %150 = getelementptr inbounds ptr, ptr %149, i64 3
  %151 = load ptr, ptr %150, align 8
  call void %151(ptr noundef nonnull align 8 dereferenceable(24) %133)
  br label %152

152:                                              ; preds = %148, %140, %135, %129
  call void @_ZdlPv(ptr noundef nonnull %130) #21
  %153 = icmp eq ptr %131, %8
  br i1 %153, label %154, label %129

154:                                              ; preds = %152, %126
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  ret void

155:                                              ; preds = %37
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %157

157:                                              ; preds = %155, %120
  %158 = phi { ptr, i32 } [ %121, %120 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %159 = load ptr, ptr %9, align 8, !tbaa !31
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %159) #21
  br label %162

162:                                              ; preds = %161, %157, %47
  %163 = phi { ptr, i32 } [ %48, %47 ], [ %158, %157 ], [ %158, %161 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %164 unwind label %165

164:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  resume { ptr, i32 } %163

165:                                              ; preds = %119, %162, %110
  %166 = landingpad { ptr, i32 }
          catch ptr null
  %167 = extractvalue { ptr, i32 } %166, 0
  call void @__clang_call_terminate(ptr %167) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::FEValues", align 8
  %11 = alloca %"class.dealii::FullMatrix", align 8
  %12 = alloca %"class.dealii::Vector", align 8
  %13 = alloca %"class.std::vector.92", align 8
  %14 = alloca %"class.std::vector.258", align 8
  %15 = alloca %"class.dealii::Vector", align 8
  %16 = alloca %"class.std::allocator.260", align 1
  %17 = alloca %"class.std::vector.92", align 8
  %18 = alloca %"class.std::vector.258", align 8
  %19 = alloca %"class.dealii::Vector", align 8
  %20 = alloca %"class.std::allocator.260", align 1
  %21 = alloca %"class.dealii::TriaActiveIterator", align 8
  %22 = icmp eq ptr %6, null
  call void @llvm.lifetime.start.p0(i64 776, ptr nonnull %10) #19
  %23 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !63
  call void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776) %10, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(728) %24, ptr noundef nonnull align 8 dereferenceable(128) %2, i32 noundef 49)
  %25 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 3
  %26 = load i32, ptr %25, align 8, !tbaa !65
  %27 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !127
  %29 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 6
  %30 = load ptr, ptr %29, align 8, !tbaa !63
  %31 = getelementptr inbounds i8, ptr %30, i64 116
  %32 = load i32, ptr %31, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %11, i32 noundef %26, i32 noundef %26)
          to label %33 unwind label %269

33:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %12) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %34 unwind label %271

34:                                               ; preds = %33
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %35 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %35, i8 0, i64 16, i1 false)
  %36 = icmp eq i32 %26, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %34
  %38 = zext i32 %26 to i64
  %39 = shl nuw nsw i64 %38, 3
  %40 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %39) #20
          to label %41 unwind label %44

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %43 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 2
  store ptr %40, ptr %42, align 8, !tbaa !136
  store i32 %26, ptr %43, align 4, !tbaa !138
  store i32 %26, ptr %35, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %40, i8 0, i64 %39, i1 false), !tbaa !133
  br label %49

44:                                               ; preds = %37
  %45 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %2066 unwind label %46

46:                                               ; preds = %44
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable

49:                                               ; preds = %41, %34
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  %50 = zext i32 %28 to i64
  %51 = icmp eq i32 %28, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %59

53:                                               ; preds = %49
  %54 = shl nuw nsw i64 %50, 3
  %55 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %54) #20
          to label %56 unwind label %273

56:                                               ; preds = %53
  store ptr %55, ptr %13, align 8, !tbaa !131
  %57 = getelementptr inbounds double, ptr %55, i64 %50
  %58 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 2
  store ptr %57, ptr %58, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %55, i8 0, i64 %54, i1 false), !tbaa !133
  br label %59

59:                                               ; preds = %56, %52
  %60 = phi ptr [ null, %52 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 1
  store ptr %60, ptr %61, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %62 unwind label %275

62:                                               ; preds = %59
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %63, i8 0, i64 16, i1 false)
  %64 = icmp eq i32 %32, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = zext i32 %32 to i64
  %67 = shl nuw nsw i64 %66, 3
  %68 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %67) #20
          to label %69 unwind label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %71 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 2
  store ptr %68, ptr %70, align 8, !tbaa !136
  store i32 %32, ptr %71, align 4, !tbaa !138
  store i32 %32, ptr %63, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %68, i8 0, i64 %67, i1 false), !tbaa !133
  br label %77

72:                                               ; preds = %65
  %73 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %279 unwind label %74

74:                                               ; preds = %72
  %75 = landingpad { ptr, i32 }
          catch ptr null
  %76 = extractvalue { ptr, i32 } %75, 0
  call void @__clang_call_terminate(ptr %76) #22
  unreachable

77:                                               ; preds = %69, %62
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %14, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef nonnull align 1 dereferenceable(1) %16)
          to label %78 unwind label %277

78:                                               ; preds = %77
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !136
  %81 = icmp eq ptr %80, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  call void @_ZdaPv(ptr noundef nonnull %80) #21
  store ptr null, ptr %79, align 8, !tbaa !136
  br label %83

83:                                               ; preds = %82, %78
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %84 unwind label %275

84:                                               ; preds = %83
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %17) #19
  br i1 %51, label %85, label %86

85:                                               ; preds = %84
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  br label %92

86:                                               ; preds = %84
  %87 = shl nuw nsw i64 %50, 3
  %88 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %87) #20
          to label %89 unwind label %281

89:                                               ; preds = %86
  store ptr %88, ptr %17, align 8, !tbaa !131
  %90 = getelementptr inbounds double, ptr %88, i64 %50
  %91 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 2
  store ptr %90, ptr %91, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %88, i8 0, i64 %87, i1 false), !tbaa !133
  br label %92

92:                                               ; preds = %89, %85
  %93 = phi ptr [ null, %85 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 1
  store ptr %93, ptr %94, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %19) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %95 unwind label %283

95:                                               ; preds = %92
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !41
  %96 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %96, i8 0, i64 16, i1 false)
  br i1 %64, label %109, label %97

97:                                               ; preds = %95
  %98 = zext i32 %32 to i64
  %99 = shl nuw nsw i64 %98, 3
  %100 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %99) #20
          to label %101 unwind label %104

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 3
  %103 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 2
  store ptr %100, ptr %102, align 8, !tbaa !136
  store i32 %32, ptr %103, align 4, !tbaa !138
  store i32 %32, ptr %96, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %100, i8 0, i64 %99, i1 false), !tbaa !133
  br label %109

104:                                              ; preds = %97
  %105 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %287 unwind label %106

106:                                              ; preds = %104
  %107 = landingpad { ptr, i32 }
          catch ptr null
  %108 = extractvalue { ptr, i32 } %107, 0
  call void @__clang_call_terminate(ptr %108) #22
  unreachable

109:                                              ; preds = %101, %95
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %20) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %18, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(88) %19, ptr noundef nonnull align 1 dereferenceable(1) %20)
          to label %110 unwind label %285

110:                                              ; preds = %109
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !41
  %111 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 3
  %112 = load ptr, ptr %111, align 8, !tbaa !136
  %113 = icmp eq ptr %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %110
  call void @_ZdaPv(ptr noundef nonnull %112) #21
  store ptr null, ptr %111, align 8, !tbaa !136
  br label %115

115:                                              ; preds = %114, %110
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %116 unwind label %283

116:                                              ; preds = %115
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %19) #19
  %117 = zext i32 %26 to i64
  br i1 %36, label %123, label %118

118:                                              ; preds = %116
  %119 = shl nuw nsw i64 %117, 2
  %120 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %119) #20
          to label %121 unwind label %289

121:                                              ; preds = %118
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %120, i8 0, i64 %119, i1 false), !tbaa !59
  %122 = getelementptr inbounds i32, ptr %120, i64 %117
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi ptr [ null, %116 ], [ %120, %121 ]
  %125 = phi ptr [ null, %116 ], [ %122, %121 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %21) #19
  %126 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %128 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %21, i64 0, i32 1
  store ptr %127, ptr %128, align 8, !tbaa !17
  %129 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %130 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %21, i64 0, i32 1
  %131 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i32, ptr %130, align 4, !tbaa !61
  %133 = load i32, ptr %131, align 4, !tbaa !61
  %134 = icmp ne i32 %132, %133
  %135 = load i32, ptr %21, align 8
  %136 = load i32, ptr %129, align 8
  %137 = icmp ne i32 %135, %136
  %138 = select i1 %134, i1 true, i1 %137
  br i1 %138, label %139, label %1920

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3
  %141 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3, i32 0, i32 0, i64 1
  %142 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %143 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %144 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %145 = getelementptr inbounds i8, ptr %10, i64 312
  %146 = getelementptr inbounds %"class.dealii::Function", ptr %6, i64 0, i32 2
  %147 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %30, i64 0, i32 2
  %148 = getelementptr inbounds i8, ptr %10, i64 216
  %149 = getelementptr inbounds i8, ptr %10, i64 480
  %150 = getelementptr inbounds i8, ptr %10, i64 144
  %151 = getelementptr inbounds i8, ptr %10, i64 160
  %152 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %30, i64 0, i32 12
  %153 = icmp eq i32 %32, 1
  %154 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %30, i64 0, i32 19
  %155 = icmp eq ptr %125, %124
  %156 = ptrtoint ptr %124 to i64
  %157 = ptrtoint ptr %125 to i64
  %158 = sub i64 %157, %156
  %159 = ashr exact i64 %158, 2
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %162 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %21, i64 0, i32 2
  %163 = zext i32 %32 to i64
  %164 = zext i32 %32 to i64
  %165 = add nsw i64 %117, -1
  %166 = shl nuw nsw i64 %117, 3
  %167 = add nsw i64 %117, -1
  %168 = shl nuw nsw i64 %117, 3
  %169 = add nsw i64 %117, -1
  %170 = shl nuw nsw i64 %117, 3
  %171 = add nsw i64 %117, -1
  %172 = shl nuw nsw i64 %117, 3
  %173 = icmp ult i32 %26, 16
  %174 = trunc i64 %171 to i32
  %175 = icmp ugt i64 %171, 4294967295
  %176 = trunc i64 %171 to i32
  %177 = and i64 %117, 4294967292
  %178 = icmp eq i64 %177, %117
  %179 = and i64 %117, 1
  %180 = icmp eq i64 %179, 0
  %181 = sub nsw i64 0, %117
  %182 = or i1 %36, %64
  %183 = icmp ult i32 %26, 16
  %184 = trunc i64 %169 to i32
  %185 = icmp ugt i64 %169, 4294967295
  %186 = trunc i64 %169 to i32
  %187 = and i64 %117, 4294967292
  %188 = icmp eq i64 %187, %117
  %189 = and i64 %117, 1
  %190 = icmp eq i64 %189, 0
  %191 = sub nsw i64 0, %117
  %192 = icmp ult i32 %26, 24
  %193 = trunc i64 %167 to i32
  %194 = icmp ugt i64 %167, 4294967295
  %195 = trunc i64 %167 to i32
  %196 = and i64 %117, 4294967292
  %197 = icmp eq i64 %196, %117
  %198 = icmp ult i32 %26, 16
  %199 = trunc i64 %165 to i32
  %200 = icmp ugt i64 %165, 4294967295
  %201 = trunc i64 %165 to i32
  %202 = and i64 %117, 4294967280
  %203 = icmp eq i64 %202, %117
  %204 = and i64 %117, 1
  %205 = icmp eq i64 %204, 0
  %206 = sub nsw i64 0, %117
  %207 = and i64 %117, 1
  %208 = icmp eq i64 %171, 0
  %209 = and i64 %117, 4294967294
  %210 = icmp eq i64 %207, 0
  %211 = or i1 %36, %64
  %212 = and i64 %117, 1
  %213 = icmp eq i64 %171, 0
  %214 = and i64 %117, 4294967294
  %215 = icmp eq i64 %212, 0
  br label %216

216:                                              ; preds = %139, %1889
  invoke void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776) %10, ptr noundef nonnull align 8 dereferenceable(24) %21)
          to label %217 unwind label %291

217:                                              ; preds = %216
  %218 = load i32, ptr %140, align 4, !tbaa !59
  %219 = load i32, ptr %141, align 8, !tbaa !59
  %220 = mul i32 %219, %218
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %217
  %223 = load ptr, ptr %142, align 8, !tbaa !140
  %224 = zext i32 %220 to i64
  %225 = shl nuw nsw i64 %224, 3
  call void @llvm.memset.p0.i64(ptr align 8 %223, i8 0, i64 %225, i1 false), !tbaa !133
  br label %226

226:                                              ; preds = %222, %217
  %227 = load i32, ptr %35, align 8, !tbaa !139
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %226
  %230 = load ptr, ptr %143, align 8, !tbaa !136
  %231 = zext i32 %227 to i64
  %232 = shl nuw nsw i64 %231, 3
  call void @llvm.memset.p0.i64(ptr align 8 %230, i8 0, i64 %232, i1 false), !tbaa !133
  br label %233

233:                                              ; preds = %229, %226
  %234 = load ptr, ptr %128, align 8, !tbaa !17
  %235 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %234, i64 0, i32 2
  %236 = load ptr, ptr %235, align 8, !tbaa !63
  %237 = getelementptr inbounds i8, ptr %236, i64 112
  %238 = load i32, ptr %237, align 8, !tbaa !141
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %262, label %240

240:                                              ; preds = %233
  %241 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %234, i64 0, i32 3
  %242 = load ptr, ptr %241, align 8, !tbaa !142
  %243 = load i32, ptr %21, align 8, !tbaa !60
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds ptr, ptr %242, i64 %244
  %246 = load ptr, ptr %245, align 8, !tbaa !33
  %247 = load ptr, ptr %246, align 8, !tbaa !144
  %248 = load i32, ptr %130, align 4, !tbaa !61
  %249 = mul i32 %248, %238
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i32, ptr %247, i64 %250
  br label %252

252:                                              ; preds = %252, %240
  %253 = phi i64 [ 0, %240 ], [ %257, %252 ]
  %254 = phi ptr [ %251, %240 ], [ %258, %252 ]
  %255 = load i32, ptr %254, align 4, !tbaa !59
  %256 = getelementptr inbounds i32, ptr %124, i64 %253
  store i32 %255, ptr %256, align 4, !tbaa !59
  %257 = add nuw nsw i64 %253, 1
  %258 = getelementptr inbounds i32, ptr %254, i64 1
  %259 = load i32, ptr %237, align 8, !tbaa !141
  %260 = zext i32 %259 to i64
  %261 = icmp ult i64 %257, %260
  br i1 %261, label %252, label %262

262:                                              ; preds = %252, %233
  %263 = load i32, ptr %144, align 8, !tbaa !145
  %264 = icmp eq i32 %263, 1
  %265 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %264, label %266, label %294

266:                                              ; preds = %262
  %267 = getelementptr inbounds ptr, ptr %265, i64 6
  %268 = load ptr, ptr %267, align 8
  invoke void %268(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %17, i32 noundef 0)
          to label %297 unwind label %291

269:                                              ; preds = %1988, %9
  %270 = landingpad { ptr, i32 }
          cleanup
  br label %2073

271:                                              ; preds = %1982, %33
  %272 = landingpad { ptr, i32 }
          cleanup
  br label %2066

273:                                              ; preds = %53
  %274 = landingpad { ptr, i32 }
          cleanup
  br label %2059

275:                                              ; preds = %83, %59
  %276 = landingpad { ptr, i32 }
          cleanup
  br label %279

277:                                              ; preds = %77
  %278 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %15)
          to label %279 unwind label %2083

279:                                              ; preds = %275, %72, %277
  %280 = phi { ptr, i32 } [ %278, %277 ], [ %276, %275 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  br label %2054

281:                                              ; preds = %86
  %282 = landingpad { ptr, i32 }
          cleanup
  br label %2030

283:                                              ; preds = %115, %92
  %284 = landingpad { ptr, i32 }
          cleanup
  br label %287

285:                                              ; preds = %109
  %286 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %19)
          to label %287 unwind label %2083

287:                                              ; preds = %283, %104, %285
  %288 = phi { ptr, i32 } [ %286, %285 ], [ %284, %283 ], [ %105, %104 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %19) #19
  br label %2025

289:                                              ; preds = %118
  %290 = landingpad { ptr, i32 }
          cleanup
  br label %2001

291:                                              ; preds = %550, %302, %294, %266, %216
  %292 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %293 = icmp eq ptr %124, null
  br i1 %293, label %2001, label %1999

294:                                              ; preds = %262
  %295 = getelementptr inbounds ptr, ptr %265, i64 7
  %296 = load ptr, ptr %295, align 8
  invoke void %296(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %297 unwind label %291

297:                                              ; preds = %294, %266
  br i1 %22, label %1127, label %298

298:                                              ; preds = %297
  %299 = load i32, ptr %146, align 8, !tbaa !145
  %300 = icmp eq i32 %299, 1
  %301 = load ptr, ptr %6, align 8, !tbaa !41
  br i1 %300, label %302, label %550

302:                                              ; preds = %298
  %303 = getelementptr inbounds ptr, ptr %301, i64 6
  %304 = load ptr, ptr %303, align 8
  invoke void %304(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %305 unwind label %291

305:                                              ; preds = %302
  br i1 %51, label %1747, label %306

306:                                              ; preds = %305
  %307 = load ptr, ptr %148, align 8, !tbaa !131
  %308 = load ptr, ptr %29, align 8
  %309 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %308, i64 0, i32 2
  %310 = load ptr, ptr %150, align 8
  %311 = load i32, ptr %151, align 8
  %312 = icmp ne i32 %311, 1
  br label %313

313:                                              ; preds = %306, %547
  %314 = phi i64 [ 0, %306 ], [ %548, %547 ]
  %315 = shl nuw nsw i64 %314, 3
  %316 = add nuw i64 %315, 8
  %317 = getelementptr i8, ptr %310, i64 %315
  %318 = add nuw i64 %170, %315
  %319 = getelementptr i8, ptr %310, i64 %318
  %320 = trunc i64 %314 to i32
  %321 = getelementptr inbounds double, ptr %307, i64 %314
  %322 = load double, ptr %321, align 8, !tbaa !133
  br i1 %36, label %547, label %323

323:                                              ; preds = %313
  %324 = load i8, ptr %309, align 4, !tbaa !148, !range !182, !noundef !183
  %325 = icmp eq i8 %324, 0
  %326 = load ptr, ptr %149, align 8
  %327 = load ptr, ptr %152, align 8, !tbaa !184
  %328 = load i32, ptr %144, align 8, !tbaa !145
  %329 = icmp eq i32 %328, 1
  %330 = load ptr, ptr %18, align 8
  %331 = getelementptr inbounds %"class.dealii::Vector", ptr %330, i64 %314, i32 3
  %332 = load ptr, ptr %143, align 8
  %333 = load ptr, ptr %17, align 8
  %334 = getelementptr inbounds double, ptr %333, i64 %314
  %335 = trunc i64 %314 to i32
  %336 = xor i32 %320, -1
  %337 = icmp ult i32 %336, %186
  %338 = insertelement <4 x double> poison, double %322, i64 0
  %339 = shufflevector <4 x double> %338, <4 x double> poison, <4 x i32> zeroinitializer
  br label %340

340:                                              ; preds = %366, %323
  %341 = phi i64 [ %373, %366 ], [ 0, %323 ]
  %342 = trunc i64 %341 to i32
  br i1 %325, label %343, label %346

343:                                              ; preds = %340
  %344 = getelementptr inbounds i32, ptr %326, i64 %341
  %345 = load i32, ptr %344, align 4, !tbaa !59
  br label %346

346:                                              ; preds = %343, %340
  %347 = phi i32 [ %345, %343 ], [ %342, %340 ]
  %348 = mul i32 %311, %347
  %349 = add i32 %348, %335
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds double, ptr %310, i64 %350
  %352 = load double, ptr %351, align 8, !tbaa !133
  %353 = getelementptr inbounds %"struct.std::pair.263", ptr %327, i64 %341
  %354 = load i64, ptr %353, align 4
  %355 = trunc i64 %354 to i32
  %356 = load ptr, ptr %149, align 8
  %357 = load ptr, ptr %13, align 8
  %358 = getelementptr double, ptr %357, i64 %314
  %359 = load ptr, ptr %142, align 8
  %360 = load i32, ptr %141, align 8
  %361 = mul i32 %360, %342
  br i1 %153, label %401, label %399

362:                                              ; preds = %400
  %363 = load ptr, ptr %331, align 8, !tbaa !136
  %364 = and i64 %354, 4294967295
  %365 = getelementptr inbounds double, ptr %363, i64 %364
  br label %366

366:                                              ; preds = %400, %362
  %367 = phi ptr [ %365, %362 ], [ %334, %400 ]
  %368 = load double, ptr %367, align 8, !tbaa !133
  %369 = fmul double %352, %368
  %370 = getelementptr inbounds double, ptr %332, i64 %341
  %371 = load double, ptr %370, align 8, !tbaa !133
  %372 = call double @llvm.fmuladd.f64(double %369, double %322, double %371)
  store double %372, ptr %370, align 8, !tbaa !133
  %373 = add nuw nsw i64 %341, 1
  %374 = icmp eq i64 %373, %117
  br i1 %374, label %547, label %340

375:                                              ; preds = %399, %396
  %376 = phi i64 [ %397, %396 ], [ 0, %399 ]
  %377 = getelementptr inbounds %"struct.std::pair.263", ptr %327, i64 %376
  %378 = load i64, ptr %377, align 4
  %379 = trunc i64 %378 to i32
  %380 = icmp eq i32 %379, %355
  br i1 %380, label %381, label %396

381:                                              ; preds = %375
  %382 = trunc i64 %376 to i32
  %383 = mul i32 %311, %382
  %384 = add i32 %383, %335
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds double, ptr %310, i64 %385
  %387 = load double, ptr %386, align 8, !tbaa !133
  %388 = fmul double %352, %387
  %389 = fmul double %322, %388
  %390 = load double, ptr %358, align 8, !tbaa !133
  %391 = add i32 %361, %382
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds double, ptr %359, i64 %392
  %394 = load double, ptr %393, align 8, !tbaa !133
  %395 = call double @llvm.fmuladd.f64(double %389, double %390, double %394)
  store double %395, ptr %393, align 8, !tbaa !133
  br label %396

396:                                              ; preds = %381, %375
  %397 = add nuw nsw i64 %376, 1
  %398 = icmp eq i64 %397, %117
  br i1 %398, label %400, label %375

399:                                              ; preds = %346
  br i1 %325, label %501, label %375

400:                                              ; preds = %396, %524, %465, %468, %527, %445
  br i1 %329, label %366, label %362

401:                                              ; preds = %346
  br i1 %325, label %527, label %402

402:                                              ; preds = %401
  br i1 %183, label %446, label %403

403:                                              ; preds = %402
  %404 = xor i32 %361, -1
  %405 = icmp ult i32 %404, %184
  %406 = or i1 %405, %185
  %407 = or i1 %312, %406
  %408 = or i1 %337, %407
  br i1 %408, label %446, label %409

409:                                              ; preds = %403
  %410 = getelementptr i8, ptr %357, i64 %316
  %411 = zext i32 %361 to i64
  %412 = shl nuw nsw i64 %411, 3
  %413 = getelementptr i8, ptr %359, i64 %412
  %414 = getelementptr i8, ptr %359, i64 %170
  %415 = getelementptr i8, ptr %414, i64 %412
  %416 = icmp ult ptr %358, %415
  %417 = icmp ult ptr %413, %410
  %418 = and i1 %416, %417
  %419 = icmp ult ptr %413, %319
  %420 = icmp ult ptr %317, %415
  %421 = and i1 %419, %420
  %422 = or i1 %418, %421
  br i1 %422, label %446, label %423

423:                                              ; preds = %409
  %424 = insertelement <4 x double> poison, double %352, i64 0
  %425 = shufflevector <4 x double> %424, <4 x double> poison, <4 x i32> zeroinitializer
  %426 = load double, ptr %358, align 8, !tbaa !133, !alias.scope !238, !noalias !241
  %427 = insertelement <4 x double> poison, double %426, i64 0
  %428 = shufflevector <4 x double> %427, <4 x double> poison, <4 x i32> zeroinitializer
  br label %429

429:                                              ; preds = %429, %423
  %430 = phi i64 [ 0, %423 ], [ %443, %429 ]
  %431 = trunc i64 %430 to i32
  %432 = add i64 %430, %314
  %433 = and i64 %432, 4294967295
  %434 = getelementptr inbounds double, ptr %310, i64 %433
  %435 = load <4 x double>, ptr %434, align 8, !tbaa !133, !alias.scope !243
  %436 = fmul <4 x double> %425, %435
  %437 = fmul <4 x double> %339, %436
  %438 = add i32 %361, %431
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds double, ptr %359, i64 %439
  %441 = load <4 x double>, ptr %440, align 8, !tbaa !133, !alias.scope !241, !noalias !243
  %442 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %437, <4 x double> %428, <4 x double> %441)
  store <4 x double> %442, ptr %440, align 8, !tbaa !133, !alias.scope !241, !noalias !243
  %443 = add nuw i64 %430, 4
  %444 = icmp eq i64 %443, %187
  br i1 %444, label %445, label %429, !llvm.loop !245

445:                                              ; preds = %429
  br i1 %188, label %400, label %446

446:                                              ; preds = %409, %403, %402, %445
  %447 = phi i64 [ 0, %409 ], [ 0, %403 ], [ 0, %402 ], [ %187, %445 ]
  %448 = xor i64 %447, -1
  br i1 %190, label %465, label %449

449:                                              ; preds = %446
  %450 = trunc i64 %447 to i32
  %451 = mul i32 %311, %450
  %452 = add i32 %451, %335
  %453 = zext i32 %452 to i64
  %454 = getelementptr inbounds double, ptr %310, i64 %453
  %455 = load double, ptr %454, align 8, !tbaa !133
  %456 = fmul double %352, %455
  %457 = fmul double %322, %456
  %458 = load double, ptr %358, align 8, !tbaa !133
  %459 = add i32 %361, %450
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds double, ptr %359, i64 %460
  %462 = load double, ptr %461, align 8, !tbaa !133
  %463 = call double @llvm.fmuladd.f64(double %457, double %458, double %462)
  store double %463, ptr %461, align 8, !tbaa !133
  %464 = or i64 %447, 1
  br label %465

465:                                              ; preds = %449, %446
  %466 = phi i64 [ %447, %446 ], [ %464, %449 ]
  %467 = icmp eq i64 %448, %191
  br i1 %467, label %400, label %468

468:                                              ; preds = %465, %468
  %469 = phi i64 [ %499, %468 ], [ %466, %465 ]
  %470 = trunc i64 %469 to i32
  %471 = mul i32 %311, %470
  %472 = add i32 %471, %335
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds double, ptr %310, i64 %473
  %475 = load double, ptr %474, align 8, !tbaa !133
  %476 = fmul double %352, %475
  %477 = fmul double %322, %476
  %478 = load double, ptr %358, align 8, !tbaa !133
  %479 = add i32 %361, %470
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds double, ptr %359, i64 %480
  %482 = load double, ptr %481, align 8, !tbaa !133
  %483 = call double @llvm.fmuladd.f64(double %477, double %478, double %482)
  store double %483, ptr %481, align 8, !tbaa !133
  %484 = trunc i64 %469 to i32
  %485 = add i32 %484, 1
  %486 = mul i32 %311, %485
  %487 = add i32 %486, %335
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds double, ptr %310, i64 %488
  %490 = load double, ptr %489, align 8, !tbaa !133
  %491 = fmul double %352, %490
  %492 = fmul double %322, %491
  %493 = load double, ptr %358, align 8, !tbaa !133
  %494 = add i32 %361, %485
  %495 = zext i32 %494 to i64
  %496 = getelementptr inbounds double, ptr %359, i64 %495
  %497 = load double, ptr %496, align 8, !tbaa !133
  %498 = call double @llvm.fmuladd.f64(double %492, double %493, double %497)
  store double %498, ptr %496, align 8, !tbaa !133
  %499 = add nuw nsw i64 %469, 2
  %500 = icmp eq i64 %499, %117
  br i1 %500, label %400, label %468, !llvm.loop !246

501:                                              ; preds = %399, %524
  %502 = phi i64 [ %525, %524 ], [ 0, %399 ]
  %503 = getelementptr inbounds %"struct.std::pair.263", ptr %327, i64 %502
  %504 = load i64, ptr %503, align 4
  %505 = trunc i64 %504 to i32
  %506 = icmp eq i32 %505, %355
  br i1 %506, label %507, label %524

507:                                              ; preds = %501
  %508 = getelementptr inbounds i32, ptr %356, i64 %502
  %509 = load i32, ptr %508, align 4, !tbaa !59
  %510 = mul i32 %509, %311
  %511 = add i32 %510, %335
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds double, ptr %310, i64 %512
  %514 = load double, ptr %513, align 8, !tbaa !133
  %515 = fmul double %352, %514
  %516 = fmul double %322, %515
  %517 = load double, ptr %358, align 8, !tbaa !133
  %518 = trunc i64 %502 to i32
  %519 = add i32 %361, %518
  %520 = zext i32 %519 to i64
  %521 = getelementptr inbounds double, ptr %359, i64 %520
  %522 = load double, ptr %521, align 8, !tbaa !133
  %523 = call double @llvm.fmuladd.f64(double %516, double %517, double %522)
  store double %523, ptr %521, align 8, !tbaa !133
  br label %524

524:                                              ; preds = %507, %501
  %525 = add nuw nsw i64 %502, 1
  %526 = icmp eq i64 %525, %117
  br i1 %526, label %400, label %501

527:                                              ; preds = %401, %527
  %528 = phi i64 [ %545, %527 ], [ 0, %401 ]
  %529 = getelementptr inbounds i32, ptr %356, i64 %528
  %530 = load i32, ptr %529, align 4, !tbaa !59
  %531 = mul i32 %530, %311
  %532 = add i32 %531, %335
  %533 = zext i32 %532 to i64
  %534 = getelementptr inbounds double, ptr %310, i64 %533
  %535 = load double, ptr %534, align 8, !tbaa !133
  %536 = fmul double %352, %535
  %537 = fmul double %322, %536
  %538 = load double, ptr %358, align 8, !tbaa !133
  %539 = trunc i64 %528 to i32
  %540 = add i32 %361, %539
  %541 = zext i32 %540 to i64
  %542 = getelementptr inbounds double, ptr %359, i64 %541
  %543 = load double, ptr %542, align 8, !tbaa !133
  %544 = call double @llvm.fmuladd.f64(double %537, double %538, double %543)
  store double %544, ptr %542, align 8, !tbaa !133
  %545 = add nuw nsw i64 %528, 1
  %546 = icmp eq i64 %545, %117
  br i1 %546, label %400, label %527

547:                                              ; preds = %366, %313
  %548 = add nuw nsw i64 %314, 1
  %549 = icmp eq i64 %548, %50
  br i1 %549, label %1747, label %313

550:                                              ; preds = %298
  %551 = getelementptr inbounds ptr, ptr %301, i64 7
  %552 = load ptr, ptr %551, align 8
  invoke void %552(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %553 unwind label %291

553:                                              ; preds = %550
  %554 = load i8, ptr %147, align 4, !tbaa !148, !range !182, !noundef !183
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %564, label %556

556:                                              ; preds = %553
  br i1 %51, label %1747, label %557

557:                                              ; preds = %556
  %558 = load ptr, ptr %148, align 8, !tbaa !131
  %559 = load ptr, ptr %29, align 8
  %560 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %559, i64 0, i32 2
  %561 = load ptr, ptr %150, align 8
  %562 = load i32, ptr %151, align 8
  %563 = icmp ne i32 %562, 1
  br label %567

564:                                              ; preds = %553
  br i1 %51, label %1747, label %565

565:                                              ; preds = %564
  %566 = load ptr, ptr %148, align 8, !tbaa !131
  br label %845

567:                                              ; preds = %557, %752
  %568 = phi i64 [ 0, %557 ], [ %753, %752 ]
  %569 = shl nuw nsw i64 %568, 3
  %570 = getelementptr i8, ptr %561, i64 %569
  %571 = add nuw i64 %172, %569
  %572 = getelementptr i8, ptr %561, i64 %571
  %573 = trunc i64 %568 to i32
  %574 = getelementptr inbounds double, ptr %558, i64 %568
  %575 = load double, ptr %574, align 8, !tbaa !133
  br i1 %36, label %752, label %576

576:                                              ; preds = %567
  %577 = load i8, ptr %560, align 4, !tbaa !148, !range !182, !noundef !183
  %578 = icmp eq i8 %577, 0
  %579 = load ptr, ptr %149, align 8
  %580 = load ptr, ptr %152, align 8, !tbaa !184
  %581 = load i32, ptr %144, align 8, !tbaa !145
  %582 = icmp eq i32 %581, 1
  %583 = load ptr, ptr %18, align 8
  %584 = getelementptr inbounds %"class.dealii::Vector", ptr %583, i64 %568, i32 3
  %585 = load ptr, ptr %143, align 8
  %586 = load ptr, ptr %17, align 8
  %587 = getelementptr inbounds double, ptr %586, i64 %568
  %588 = trunc i64 %568 to i32
  br i1 %153, label %589, label %755

589:                                              ; preds = %576
  %590 = xor i32 %573, -1
  %591 = icmp ult i32 %590, %176
  %592 = insertelement <4 x double> poison, double %575, i64 0
  %593 = shufflevector <4 x double> %592, <4 x double> poison, <4 x i32> zeroinitializer
  br label %594

594:                                              ; preds = %589, %689
  %595 = phi i64 [ %696, %689 ], [ 0, %589 ]
  %596 = trunc i64 %595 to i32
  br i1 %578, label %597, label %600

597:                                              ; preds = %594
  %598 = getelementptr inbounds i32, ptr %579, i64 %595
  %599 = load i32, ptr %598, align 4, !tbaa !59
  br label %600

600:                                              ; preds = %597, %594
  %601 = phi i32 [ %599, %597 ], [ %596, %594 ]
  %602 = mul i32 %562, %601
  %603 = add i32 %602, %588
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds double, ptr %561, i64 %604
  %606 = load double, ptr %605, align 8, !tbaa !133
  %607 = getelementptr inbounds %"struct.std::pair.263", ptr %580, i64 %595
  %608 = load i64, ptr %607, align 4
  %609 = load ptr, ptr %149, align 8
  %610 = load ptr, ptr %14, align 8
  %611 = getelementptr inbounds %"class.dealii::Vector", ptr %610, i64 %568, i32 3
  %612 = and i64 %608, 4294967295
  %613 = load ptr, ptr %142, align 8
  %614 = load i32, ptr %141, align 8
  %615 = mul i32 %614, %596
  %616 = load ptr, ptr %611, align 8, !tbaa !136
  %617 = getelementptr double, ptr %616, i64 %612
  br i1 %578, label %732, label %618

618:                                              ; preds = %600
  br i1 %173, label %664, label %619

619:                                              ; preds = %618
  %620 = xor i32 %615, -1
  %621 = icmp ult i32 %620, %174
  %622 = or i1 %621, %175
  %623 = or i1 %563, %622
  %624 = or i1 %591, %623
  br i1 %624, label %664, label %625

625:                                              ; preds = %619
  %626 = getelementptr i8, ptr %616, i64 8
  %627 = shl nuw nsw i64 %612, 3
  %628 = getelementptr i8, ptr %626, i64 %627
  %629 = zext i32 %615 to i64
  %630 = shl nuw nsw i64 %629, 3
  %631 = getelementptr i8, ptr %613, i64 %630
  %632 = getelementptr i8, ptr %613, i64 %172
  %633 = getelementptr i8, ptr %632, i64 %630
  %634 = icmp ult ptr %617, %633
  %635 = icmp ult ptr %631, %628
  %636 = and i1 %634, %635
  %637 = icmp ult ptr %631, %572
  %638 = icmp ult ptr %570, %633
  %639 = and i1 %637, %638
  %640 = or i1 %636, %639
  br i1 %640, label %664, label %641

641:                                              ; preds = %625
  %642 = insertelement <4 x double> poison, double %606, i64 0
  %643 = shufflevector <4 x double> %642, <4 x double> poison, <4 x i32> zeroinitializer
  %644 = load double, ptr %617, align 8, !tbaa !133, !alias.scope !247, !noalias !250
  %645 = insertelement <4 x double> poison, double %644, i64 0
  %646 = shufflevector <4 x double> %645, <4 x double> poison, <4 x i32> zeroinitializer
  br label %647

647:                                              ; preds = %647, %641
  %648 = phi i64 [ 0, %641 ], [ %661, %647 ]
  %649 = trunc i64 %648 to i32
  %650 = add i64 %648, %568
  %651 = and i64 %650, 4294967295
  %652 = getelementptr inbounds double, ptr %561, i64 %651
  %653 = load <4 x double>, ptr %652, align 8, !tbaa !133, !alias.scope !252
  %654 = fmul <4 x double> %643, %653
  %655 = fmul <4 x double> %593, %654
  %656 = add i32 %615, %649
  %657 = zext i32 %656 to i64
  %658 = getelementptr inbounds double, ptr %613, i64 %657
  %659 = load <4 x double>, ptr %658, align 8, !tbaa !133, !alias.scope !250, !noalias !252
  %660 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %655, <4 x double> %646, <4 x double> %659)
  store <4 x double> %660, ptr %658, align 8, !tbaa !133, !alias.scope !250, !noalias !252
  %661 = add nuw i64 %648, 4
  %662 = icmp eq i64 %661, %177
  br i1 %662, label %663, label %647, !llvm.loop !254

663:                                              ; preds = %647
  br i1 %178, label %731, label %664

664:                                              ; preds = %625, %619, %618, %663
  %665 = phi i64 [ 0, %625 ], [ 0, %619 ], [ 0, %618 ], [ %177, %663 ]
  %666 = xor i64 %665, -1
  br i1 %180, label %683, label %667

667:                                              ; preds = %664
  %668 = trunc i64 %665 to i32
  %669 = mul i32 %562, %668
  %670 = add i32 %669, %588
  %671 = zext i32 %670 to i64
  %672 = getelementptr inbounds double, ptr %561, i64 %671
  %673 = load double, ptr %672, align 8, !tbaa !133
  %674 = fmul double %606, %673
  %675 = fmul double %575, %674
  %676 = load double, ptr %617, align 8, !tbaa !133
  %677 = add i32 %615, %668
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds double, ptr %613, i64 %678
  %680 = load double, ptr %679, align 8, !tbaa !133
  %681 = call double @llvm.fmuladd.f64(double %675, double %676, double %680)
  store double %681, ptr %679, align 8, !tbaa !133
  %682 = or i64 %665, 1
  br label %683

683:                                              ; preds = %667, %664
  %684 = phi i64 [ %665, %664 ], [ %682, %667 ]
  %685 = icmp eq i64 %666, %181
  br i1 %685, label %731, label %698

686:                                              ; preds = %731
  %687 = load ptr, ptr %584, align 8, !tbaa !136
  %688 = getelementptr inbounds double, ptr %687, i64 %612
  br label %689

689:                                              ; preds = %731, %686
  %690 = phi ptr [ %688, %686 ], [ %587, %731 ]
  %691 = load double, ptr %690, align 8, !tbaa !133
  %692 = fmul double %606, %691
  %693 = getelementptr inbounds double, ptr %585, i64 %595
  %694 = load double, ptr %693, align 8, !tbaa !133
  %695 = call double @llvm.fmuladd.f64(double %692, double %575, double %694)
  store double %695, ptr %693, align 8, !tbaa !133
  %696 = add nuw nsw i64 %595, 1
  %697 = icmp eq i64 %696, %117
  br i1 %697, label %752, label %594

698:                                              ; preds = %683, %698
  %699 = phi i64 [ %729, %698 ], [ %684, %683 ]
  %700 = trunc i64 %699 to i32
  %701 = mul i32 %562, %700
  %702 = add i32 %701, %588
  %703 = zext i32 %702 to i64
  %704 = getelementptr inbounds double, ptr %561, i64 %703
  %705 = load double, ptr %704, align 8, !tbaa !133
  %706 = fmul double %606, %705
  %707 = fmul double %575, %706
  %708 = load double, ptr %617, align 8, !tbaa !133
  %709 = add i32 %615, %700
  %710 = zext i32 %709 to i64
  %711 = getelementptr inbounds double, ptr %613, i64 %710
  %712 = load double, ptr %711, align 8, !tbaa !133
  %713 = call double @llvm.fmuladd.f64(double %707, double %708, double %712)
  store double %713, ptr %711, align 8, !tbaa !133
  %714 = trunc i64 %699 to i32
  %715 = add i32 %714, 1
  %716 = mul i32 %562, %715
  %717 = add i32 %716, %588
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds double, ptr %561, i64 %718
  %720 = load double, ptr %719, align 8, !tbaa !133
  %721 = fmul double %606, %720
  %722 = fmul double %575, %721
  %723 = load double, ptr %617, align 8, !tbaa !133
  %724 = add i32 %615, %715
  %725 = zext i32 %724 to i64
  %726 = getelementptr inbounds double, ptr %613, i64 %725
  %727 = load double, ptr %726, align 8, !tbaa !133
  %728 = call double @llvm.fmuladd.f64(double %722, double %723, double %727)
  store double %728, ptr %726, align 8, !tbaa !133
  %729 = add nuw nsw i64 %699, 2
  %730 = icmp eq i64 %729, %117
  br i1 %730, label %731, label %698, !llvm.loop !255

731:                                              ; preds = %683, %698, %732, %663
  br i1 %582, label %689, label %686

732:                                              ; preds = %600, %732
  %733 = phi i64 [ %750, %732 ], [ 0, %600 ]
  %734 = getelementptr inbounds i32, ptr %609, i64 %733
  %735 = load i32, ptr %734, align 4, !tbaa !59
  %736 = mul i32 %735, %562
  %737 = add i32 %736, %588
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds double, ptr %561, i64 %738
  %740 = load double, ptr %739, align 8, !tbaa !133
  %741 = fmul double %606, %740
  %742 = fmul double %575, %741
  %743 = load double, ptr %617, align 8, !tbaa !133
  %744 = trunc i64 %733 to i32
  %745 = add i32 %615, %744
  %746 = zext i32 %745 to i64
  %747 = getelementptr inbounds double, ptr %613, i64 %746
  %748 = load double, ptr %747, align 8, !tbaa !133
  %749 = call double @llvm.fmuladd.f64(double %742, double %743, double %748)
  store double %749, ptr %747, align 8, !tbaa !133
  %750 = add nuw nsw i64 %733, 1
  %751 = icmp eq i64 %750, %117
  br i1 %751, label %731, label %732

752:                                              ; preds = %836, %689, %567
  %753 = add nuw nsw i64 %568, 1
  %754 = icmp eq i64 %753, %50
  br i1 %754, label %1747, label %567

755:                                              ; preds = %576, %836
  %756 = phi i64 [ %843, %836 ], [ 0, %576 ]
  %757 = trunc i64 %756 to i32
  br i1 %578, label %758, label %761

758:                                              ; preds = %755
  %759 = getelementptr inbounds i32, ptr %579, i64 %756
  %760 = load i32, ptr %759, align 4, !tbaa !59
  br label %761

761:                                              ; preds = %755, %758
  %762 = phi i32 [ %760, %758 ], [ %757, %755 ]
  %763 = mul i32 %562, %762
  %764 = add i32 %763, %588
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds double, ptr %561, i64 %765
  %767 = load double, ptr %766, align 8, !tbaa !133
  %768 = getelementptr inbounds %"struct.std::pair.263", ptr %580, i64 %756
  %769 = load i64, ptr %768, align 4
  %770 = trunc i64 %769 to i32
  %771 = load ptr, ptr %149, align 8
  %772 = load ptr, ptr %14, align 8
  %773 = getelementptr inbounds %"class.dealii::Vector", ptr %772, i64 %568, i32 3
  %774 = and i64 %769, 4294967295
  %775 = load ptr, ptr %142, align 8
  %776 = load i32, ptr %141, align 8
  %777 = mul i32 %776, %757
  br i1 %578, label %778, label %807

778:                                              ; preds = %761, %803
  %779 = phi i64 [ %804, %803 ], [ 0, %761 ]
  %780 = getelementptr inbounds %"struct.std::pair.263", ptr %580, i64 %779
  %781 = load i64, ptr %780, align 4
  %782 = trunc i64 %781 to i32
  %783 = icmp eq i32 %782, %770
  br i1 %783, label %784, label %803

784:                                              ; preds = %778
  %785 = getelementptr inbounds i32, ptr %771, i64 %779
  %786 = load i32, ptr %785, align 4, !tbaa !59
  %787 = mul i32 %786, %562
  %788 = add i32 %787, %588
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds double, ptr %561, i64 %789
  %791 = load double, ptr %790, align 8, !tbaa !133
  %792 = fmul double %767, %791
  %793 = fmul double %575, %792
  %794 = load ptr, ptr %773, align 8, !tbaa !136
  %795 = getelementptr inbounds double, ptr %794, i64 %774
  %796 = load double, ptr %795, align 8, !tbaa !133
  %797 = trunc i64 %779 to i32
  %798 = add i32 %777, %797
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds double, ptr %775, i64 %799
  %801 = load double, ptr %800, align 8, !tbaa !133
  %802 = call double @llvm.fmuladd.f64(double %793, double %796, double %801)
  store double %802, ptr %800, align 8, !tbaa !133
  br label %803

803:                                              ; preds = %784, %778
  %804 = add nuw nsw i64 %779, 1
  %805 = icmp eq i64 %804, %117
  br i1 %805, label %806, label %778

806:                                              ; preds = %830, %803
  br i1 %582, label %836, label %833

807:                                              ; preds = %761, %830
  %808 = phi i64 [ %831, %830 ], [ 0, %761 ]
  %809 = getelementptr inbounds %"struct.std::pair.263", ptr %580, i64 %808
  %810 = load i64, ptr %809, align 4
  %811 = trunc i64 %810 to i32
  %812 = icmp eq i32 %811, %770
  br i1 %812, label %813, label %830

813:                                              ; preds = %807
  %814 = trunc i64 %808 to i32
  %815 = mul i32 %562, %814
  %816 = add i32 %815, %588
  %817 = zext i32 %816 to i64
  %818 = getelementptr inbounds double, ptr %561, i64 %817
  %819 = load double, ptr %818, align 8, !tbaa !133
  %820 = fmul double %767, %819
  %821 = fmul double %575, %820
  %822 = load ptr, ptr %773, align 8, !tbaa !136
  %823 = getelementptr inbounds double, ptr %822, i64 %774
  %824 = load double, ptr %823, align 8, !tbaa !133
  %825 = add i32 %777, %814
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds double, ptr %775, i64 %826
  %828 = load double, ptr %827, align 8, !tbaa !133
  %829 = call double @llvm.fmuladd.f64(double %821, double %824, double %828)
  store double %829, ptr %827, align 8, !tbaa !133
  br label %830

830:                                              ; preds = %807, %813
  %831 = add nuw nsw i64 %808, 1
  %832 = icmp eq i64 %831, %117
  br i1 %832, label %806, label %807

833:                                              ; preds = %806
  %834 = load ptr, ptr %584, align 8, !tbaa !136
  %835 = getelementptr inbounds double, ptr %834, i64 %774
  br label %836

836:                                              ; preds = %806, %833
  %837 = phi ptr [ %835, %833 ], [ %587, %806 ]
  %838 = load double, ptr %837, align 8, !tbaa !133
  %839 = fmul double %767, %838
  %840 = getelementptr inbounds double, ptr %585, i64 %756
  %841 = load double, ptr %840, align 8, !tbaa !133
  %842 = call double @llvm.fmuladd.f64(double %839, double %575, double %841)
  store double %842, ptr %840, align 8, !tbaa !133
  %843 = add nuw nsw i64 %756, 1
  %844 = icmp eq i64 %843, %117
  br i1 %844, label %752, label %755

845:                                              ; preds = %565, %1124
  %846 = phi i64 [ 0, %565 ], [ %1125, %1124 ]
  %847 = getelementptr inbounds double, ptr %566, i64 %846
  %848 = load double, ptr %847, align 8, !tbaa !133
  br i1 %182, label %1124, label %849

849:                                              ; preds = %845
  %850 = load ptr, ptr %154, align 8, !tbaa !205
  %851 = trunc i64 %846 to i32
  %852 = trunc i64 %846 to i32
  %853 = trunc i64 %846 to i32
  br label %854

854:                                              ; preds = %1121, %849
  %855 = phi i64 [ %1122, %1121 ], [ 0, %849 ]
  %856 = getelementptr inbounds %"class.std::vector.126", ptr %850, i64 %855
  %857 = load ptr, ptr %856, align 8, !tbaa !54
  %858 = load ptr, ptr %29, align 8
  %859 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %858, i64 0, i32 2
  %860 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %858, i64 0, i32 20
  %861 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %858, i64 0, i32 19
  %862 = load ptr, ptr %149, align 8
  %863 = getelementptr inbounds i32, ptr %862, i64 %855
  %864 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %858, i64 0, i32 12
  %865 = load ptr, ptr %150, align 8
  %866 = load i32, ptr %151, align 8
  %867 = load ptr, ptr %18, align 8
  %868 = getelementptr inbounds %"class.dealii::Vector", ptr %867, i64 %846, i32 3
  %869 = load ptr, ptr %143, align 8
  %870 = getelementptr inbounds double, ptr %869, i64 %855
  %871 = load ptr, ptr %17, align 8
  %872 = getelementptr inbounds double, ptr %871, i64 %846
  %873 = trunc i64 %855 to i32
  %874 = trunc i64 %855 to i32
  br label %875

875:                                              ; preds = %854, %994
  %876 = phi i64 [ 0, %854 ], [ %995, %994 ]
  %877 = trunc i64 %876 to i32
  %878 = lshr i64 %876, 6
  %879 = and i64 %878, 67108863
  %880 = getelementptr inbounds i64, ptr %857, i64 %879
  %881 = and i32 %877, 63
  %882 = and i64 %876, 63
  %883 = shl nuw i64 1, %882
  %884 = load i64, ptr %880, align 8, !tbaa !56
  %885 = and i64 %884, %883
  %886 = icmp eq i64 %885, 0
  br i1 %886, label %994, label %887

887:                                              ; preds = %875
  %888 = load i8, ptr %859, align 4, !tbaa !148, !range !182, !noundef !183
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %890, label %928

890:                                              ; preds = %887
  %891 = load ptr, ptr %860, align 8, !tbaa !144
  %892 = getelementptr inbounds i32, ptr %891, i64 %855
  %893 = load i32, ptr %892, align 4, !tbaa !59
  %894 = icmp eq i32 %893, 1
  br i1 %894, label %928, label %895

895:                                              ; preds = %890
  %896 = load ptr, ptr %861, align 8, !tbaa !205
  %897 = getelementptr inbounds %"class.std::vector.126", ptr %896, i64 %855
  %898 = load ptr, ptr %897, align 8, !tbaa !54
  %899 = getelementptr inbounds i64, ptr %898, i64 %879
  %900 = load i64, ptr %899, align 8, !tbaa !56
  %901 = and i64 %900, %883
  %902 = icmp eq i64 %901, 0
  br i1 %902, label %1016, label %903

903:                                              ; preds = %895
  %904 = load i32, ptr %863, align 4, !tbaa !59
  %905 = icmp eq i64 %876, 0
  br i1 %905, label %925, label %906

906:                                              ; preds = %903, %906
  %907 = phi i64 [ %914, %906 ], [ 0, %903 ]
  %908 = phi i32 [ %919, %906 ], [ 0, %903 ]
  %909 = phi ptr [ %918, %906 ], [ %898, %903 ]
  %910 = zext i32 %908 to i64
  %911 = load i64, ptr %909, align 8, !tbaa !56
  %912 = lshr i64 %911, %910
  %913 = and i64 %912, 1
  %914 = add nuw nsw i64 %913, %907
  %915 = add i32 %908, 1
  %916 = icmp eq i32 %908, 63
  %917 = zext i1 %916 to i64
  %918 = getelementptr inbounds i64, ptr %909, i64 %917
  %919 = select i1 %916, i32 0, i32 %915
  %920 = icmp ne ptr %918, %899
  %921 = icmp ne i32 %919, %881
  %922 = or i1 %921, %920
  br i1 %922, label %906, label %923

923:                                              ; preds = %906
  %924 = trunc i64 %914 to i32
  br label %925

925:                                              ; preds = %923, %903
  %926 = phi i32 [ 0, %903 ], [ %924, %923 ]
  %927 = add i32 %926, %904
  br label %936

928:                                              ; preds = %890, %887
  %929 = load ptr, ptr %864, align 8, !tbaa !184
  %930 = getelementptr inbounds %"struct.std::pair.263", ptr %929, i64 %855
  %931 = load i64, ptr %930, align 4
  %932 = and i64 %931, 4294967295
  %933 = icmp eq i64 %876, %932
  br i1 %933, label %934, label %1014

934:                                              ; preds = %928
  %935 = load i32, ptr %863, align 4, !tbaa !59
  br label %936

936:                                              ; preds = %934, %925
  %937 = phi i32 [ %927, %925 ], [ %935, %934 ]
  %938 = mul i32 %866, %937
  %939 = add i32 %938, %851
  %940 = zext i32 %939 to i64
  %941 = getelementptr inbounds double, ptr %865, i64 %940
  %942 = load double, ptr %941, align 8, !tbaa !133
  br label %1014

943:                                              ; preds = %1018
  %944 = load ptr, ptr %868, align 8, !tbaa !136
  %945 = getelementptr inbounds double, ptr %944, i64 %876
  br label %988

946:                                              ; preds = %985
  %947 = add nuw nsw i64 %998, 1
  %948 = icmp eq i64 %947, %117
  br i1 %948, label %1018, label %997

949:                                              ; preds = %997, %985
  %950 = phi i32 [ 0, %997 ], [ %986, %985 ]
  %951 = lshr i32 %950, 6
  %952 = zext i32 %951 to i64
  %953 = getelementptr inbounds i64, ptr %1000, i64 %952
  %954 = and i32 %950, 63
  %955 = zext i32 %954 to i64
  %956 = shl nuw i64 1, %955
  %957 = load i64, ptr %953, align 8, !tbaa !56
  %958 = and i64 %957, %956
  %959 = icmp eq i64 %958, 0
  br i1 %959, label %985, label %960

960:                                              ; preds = %949
  %961 = load ptr, ptr %864, align 8, !tbaa !184
  %962 = getelementptr inbounds %"struct.std::pair.263", ptr %961, i64 %998
  %963 = load i64, ptr %962, align 4
  %964 = trunc i64 %963 to i32
  %965 = icmp eq i32 %950, %964
  br i1 %965, label %966, label %973

966:                                              ; preds = %960
  %967 = load i32, ptr %1002, align 4, !tbaa !59
  %968 = mul i32 %1004, %967
  %969 = add i32 %968, %852
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds double, ptr %1003, i64 %970
  %972 = load double, ptr %971, align 8, !tbaa !133
  br label %973

973:                                              ; preds = %966, %960
  %974 = phi double [ 0.000000e+00, %960 ], [ %972, %966 ]
  %975 = zext i32 %950 to i64
  %976 = icmp eq i64 %876, %975
  br i1 %976, label %977, label %985

977:                                              ; preds = %973
  %978 = fmul double %1015, %974
  %979 = fmul double %848, %978
  %980 = load ptr, ptr %1006, align 8, !tbaa !136
  %981 = getelementptr inbounds double, ptr %980, i64 %876
  %982 = load double, ptr %981, align 8, !tbaa !133
  %983 = load double, ptr %1013, align 8, !tbaa !133
  %984 = call double @llvm.fmuladd.f64(double %979, double %982, double %983)
  store double %984, ptr %1013, align 8, !tbaa !133
  br label %985

985:                                              ; preds = %977, %973, %949
  %986 = add nuw i32 %950, 1
  %987 = icmp eq i32 %986, %32
  br i1 %987, label %946, label %949

988:                                              ; preds = %1018, %943
  %989 = phi ptr [ %945, %943 ], [ %872, %1018 ]
  %990 = load double, ptr %989, align 8, !tbaa !133
  %991 = fmul double %1019, %990
  %992 = load double, ptr %870, align 8, !tbaa !133
  %993 = call double @llvm.fmuladd.f64(double %991, double %848, double %992)
  store double %993, ptr %870, align 8, !tbaa !133
  br label %994

994:                                              ; preds = %988, %875
  %995 = add nuw nsw i64 %876, 1
  %996 = icmp eq i64 %995, %163
  br i1 %996, label %1121, label %875

997:                                              ; preds = %1014, %946
  %998 = phi i64 [ %947, %946 ], [ 0, %1014 ]
  %999 = getelementptr inbounds %"class.std::vector.126", ptr %850, i64 %998
  %1000 = load ptr, ptr %999, align 8, !tbaa !54
  %1001 = load ptr, ptr %149, align 8
  %1002 = getelementptr inbounds i32, ptr %1001, i64 %998
  %1003 = load ptr, ptr %150, align 8
  %1004 = load i32, ptr %151, align 8
  %1005 = load ptr, ptr %14, align 8
  %1006 = getelementptr inbounds %"class.dealii::Vector", ptr %1005, i64 %846, i32 3
  %1007 = load ptr, ptr %142, align 8
  %1008 = load i32, ptr %141, align 8
  %1009 = mul i32 %1008, %873
  %1010 = trunc i64 %998 to i32
  %1011 = add i32 %1009, %1010
  %1012 = zext i32 %1011 to i64
  %1013 = getelementptr inbounds double, ptr %1007, i64 %1012
  br label %949

1014:                                             ; preds = %928, %936
  %1015 = phi double [ 0.000000e+00, %928 ], [ %942, %936 ]
  br i1 %889, label %1016, label %997

1016:                                             ; preds = %895, %1014
  %1017 = phi double [ %1015, %1014 ], [ 0.000000e+00, %895 ]
  br label %1022

1018:                                             ; preds = %946, %1118
  %1019 = phi double [ %1017, %1118 ], [ %1015, %946 ]
  %1020 = load i32, ptr %144, align 8, !tbaa !145
  %1021 = icmp eq i32 %1020, 1
  br i1 %1021, label %988, label %943

1022:                                             ; preds = %1016, %1118
  %1023 = phi i64 [ 0, %1016 ], [ %1119, %1118 ]
  %1024 = getelementptr inbounds %"class.std::vector.126", ptr %850, i64 %1023
  %1025 = load ptr, ptr %1024, align 8, !tbaa !54
  %1026 = load ptr, ptr %149, align 8
  %1027 = getelementptr inbounds i32, ptr %1026, i64 %1023
  %1028 = load ptr, ptr %150, align 8
  %1029 = load i32, ptr %151, align 8
  %1030 = load ptr, ptr %14, align 8
  %1031 = getelementptr inbounds %"class.dealii::Vector", ptr %1030, i64 %846, i32 3
  %1032 = load ptr, ptr %142, align 8
  %1033 = load i32, ptr %141, align 8
  %1034 = mul i32 %1033, %874
  %1035 = trunc i64 %1023 to i32
  %1036 = add i32 %1034, %1035
  %1037 = zext i32 %1036 to i64
  %1038 = getelementptr inbounds double, ptr %1032, i64 %1037
  br label %1039

1039:                                             ; preds = %1115, %1022
  %1040 = phi i32 [ 0, %1022 ], [ %1116, %1115 ]
  %1041 = lshr i32 %1040, 6
  %1042 = zext i32 %1041 to i64
  %1043 = getelementptr inbounds i64, ptr %1025, i64 %1042
  %1044 = and i32 %1040, 63
  %1045 = zext i32 %1044 to i64
  %1046 = shl nuw i64 1, %1045
  %1047 = load i64, ptr %1043, align 8, !tbaa !56
  %1048 = and i64 %1047, %1046
  %1049 = icmp eq i64 %1048, 0
  br i1 %1049, label %1115, label %1050

1050:                                             ; preds = %1039
  %1051 = load ptr, ptr %860, align 8, !tbaa !144
  %1052 = getelementptr inbounds i32, ptr %1051, i64 %1023
  %1053 = load i32, ptr %1052, align 4, !tbaa !59
  %1054 = icmp eq i32 %1053, 1
  br i1 %1054, label %1088, label %1055

1055:                                             ; preds = %1050
  %1056 = load ptr, ptr %861, align 8, !tbaa !205
  %1057 = getelementptr inbounds %"class.std::vector.126", ptr %1056, i64 %1023
  %1058 = load ptr, ptr %1057, align 8, !tbaa !54
  %1059 = getelementptr inbounds i64, ptr %1058, i64 %1042
  %1060 = load i64, ptr %1059, align 8, !tbaa !56
  %1061 = and i64 %1060, %1046
  %1062 = icmp eq i64 %1061, 0
  br i1 %1062, label %1103, label %1063

1063:                                             ; preds = %1055
  %1064 = load i32, ptr %1027, align 4, !tbaa !59
  %1065 = icmp eq i32 %1040, 0
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1063, %1066
  %1067 = phi i64 [ %1074, %1066 ], [ 0, %1063 ]
  %1068 = phi i32 [ %1079, %1066 ], [ 0, %1063 ]
  %1069 = phi ptr [ %1078, %1066 ], [ %1058, %1063 ]
  %1070 = zext i32 %1068 to i64
  %1071 = load i64, ptr %1069, align 8, !tbaa !56
  %1072 = lshr i64 %1071, %1070
  %1073 = and i64 %1072, 1
  %1074 = add nuw nsw i64 %1073, %1067
  %1075 = add i32 %1068, 1
  %1076 = icmp eq i32 %1068, 63
  %1077 = zext i1 %1076 to i64
  %1078 = getelementptr inbounds i64, ptr %1069, i64 %1077
  %1079 = select i1 %1076, i32 0, i32 %1075
  %1080 = icmp ne ptr %1078, %1059
  %1081 = icmp ne i32 %1079, %1044
  %1082 = or i1 %1081, %1080
  br i1 %1082, label %1066, label %1083

1083:                                             ; preds = %1066
  %1084 = trunc i64 %1074 to i32
  br label %1085

1085:                                             ; preds = %1083, %1063
  %1086 = phi i32 [ 0, %1063 ], [ %1084, %1083 ]
  %1087 = add i32 %1086, %1064
  br label %1096

1088:                                             ; preds = %1050
  %1089 = load ptr, ptr %864, align 8, !tbaa !184
  %1090 = getelementptr inbounds %"struct.std::pair.263", ptr %1089, i64 %1023
  %1091 = load i64, ptr %1090, align 4
  %1092 = trunc i64 %1091 to i32
  %1093 = icmp eq i32 %1040, %1092
  br i1 %1093, label %1094, label %1103

1094:                                             ; preds = %1088
  %1095 = load i32, ptr %1027, align 4, !tbaa !59
  br label %1096

1096:                                             ; preds = %1094, %1085
  %1097 = phi i32 [ %1087, %1085 ], [ %1095, %1094 ]
  %1098 = mul i32 %1029, %1097
  %1099 = add i32 %1098, %853
  %1100 = zext i32 %1099 to i64
  %1101 = getelementptr inbounds double, ptr %1028, i64 %1100
  %1102 = load double, ptr %1101, align 8, !tbaa !133
  br label %1103

1103:                                             ; preds = %1096, %1088, %1055
  %1104 = phi double [ 0.000000e+00, %1088 ], [ 0.000000e+00, %1055 ], [ %1102, %1096 ]
  %1105 = zext i32 %1040 to i64
  %1106 = icmp eq i64 %876, %1105
  br i1 %1106, label %1107, label %1115

1107:                                             ; preds = %1103
  %1108 = fmul double %1017, %1104
  %1109 = fmul double %848, %1108
  %1110 = load ptr, ptr %1031, align 8, !tbaa !136
  %1111 = getelementptr inbounds double, ptr %1110, i64 %876
  %1112 = load double, ptr %1111, align 8, !tbaa !133
  %1113 = load double, ptr %1038, align 8, !tbaa !133
  %1114 = call double @llvm.fmuladd.f64(double %1109, double %1112, double %1113)
  store double %1114, ptr %1038, align 8, !tbaa !133
  br label %1115

1115:                                             ; preds = %1107, %1103, %1039
  %1116 = add nuw i32 %1040, 1
  %1117 = icmp eq i32 %1116, %32
  br i1 %1117, label %1118, label %1039

1118:                                             ; preds = %1115
  %1119 = add nuw nsw i64 %1023, 1
  %1120 = icmp eq i64 %1119, %117
  br i1 %1120, label %1018, label %1022

1121:                                             ; preds = %994
  %1122 = add nuw nsw i64 %855, 1
  %1123 = icmp eq i64 %1122, %117
  br i1 %1123, label %1124, label %854

1124:                                             ; preds = %1121, %845
  %1125 = add nuw nsw i64 %846, 1
  %1126 = icmp eq i64 %1125, %50
  br i1 %1126, label %1747, label %845

1127:                                             ; preds = %297
  %1128 = load i8, ptr %147, align 4, !tbaa !148, !range !182, !noundef !183
  %1129 = icmp eq i8 %1128, 0
  br i1 %1129, label %1139, label %1130

1130:                                             ; preds = %1127
  br i1 %51, label %1747, label %1131

1131:                                             ; preds = %1130
  %1132 = load ptr, ptr %148, align 8, !tbaa !131
  %1133 = load ptr, ptr %29, align 8
  %1134 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1133, i64 0, i32 2
  %1135 = load ptr, ptr %150, align 8
  %1136 = load i32, ptr %151, align 8
  %1137 = icmp ne i32 %1136, 1
  %1138 = icmp ne i32 %1136, 1
  br label %1142

1139:                                             ; preds = %1127
  br i1 %51, label %1747, label %1140

1140:                                             ; preds = %1139
  %1141 = load ptr, ptr %148, align 8, !tbaa !131
  br label %1477

1142:                                             ; preds = %1131, %1474
  %1143 = phi i64 [ 0, %1131 ], [ %1475, %1474 ]
  %1144 = shl nuw nsw i64 %1143, 3
  %1145 = getelementptr i8, ptr %1135, i64 %1144
  %1146 = add nuw i64 %168, %1144
  %1147 = getelementptr i8, ptr %1135, i64 %1146
  %1148 = trunc i64 %1143 to i32
  %1149 = shl nuw nsw i64 %1143, 3
  %1150 = getelementptr i8, ptr %1135, i64 %1149
  %1151 = add nuw i64 %166, %1149
  %1152 = getelementptr i8, ptr %1135, i64 %1151
  %1153 = trunc i64 %1143 to i32
  %1154 = getelementptr inbounds double, ptr %1132, i64 %1143
  %1155 = load double, ptr %1154, align 8, !tbaa !133
  br i1 %36, label %1474, label %1156

1156:                                             ; preds = %1142
  %1157 = load i8, ptr %1134, align 4, !tbaa !148, !range !182, !noundef !183
  %1158 = icmp eq i8 %1157, 0
  %1159 = load ptr, ptr %149, align 8
  %1160 = load ptr, ptr %152, align 8, !tbaa !184
  %1161 = load i32, ptr %144, align 8, !tbaa !145
  %1162 = icmp eq i32 %1161, 1
  %1163 = load ptr, ptr %18, align 8
  %1164 = getelementptr inbounds %"class.dealii::Vector", ptr %1163, i64 %1143, i32 3
  %1165 = load ptr, ptr %143, align 8
  %1166 = load ptr, ptr %17, align 8
  %1167 = getelementptr inbounds double, ptr %1166, i64 %1143
  %1168 = trunc i64 %1143 to i32
  %1169 = getelementptr i8, ptr %1160, i64 %168
  %1170 = xor i32 %1148, -1
  %1171 = icmp ult i32 %1170, %195
  %1172 = insertelement <4 x double> poison, double %1155, i64 0
  %1173 = shufflevector <4 x double> %1172, <4 x double> poison, <4 x i32> zeroinitializer
  %1174 = xor i32 %1153, -1
  %1175 = icmp ult i32 %1174, %201
  %1176 = insertelement <4 x double> poison, double %1155, i64 0
  %1177 = shufflevector <4 x double> %1176, <4 x double> poison, <4 x i32> zeroinitializer
  %1178 = insertelement <4 x double> poison, double %1155, i64 0
  %1179 = shufflevector <4 x double> %1178, <4 x double> poison, <4 x i32> zeroinitializer
  %1180 = insertelement <4 x double> poison, double %1155, i64 0
  %1181 = shufflevector <4 x double> %1180, <4 x double> poison, <4 x i32> zeroinitializer
  %1182 = insertelement <4 x double> poison, double %1155, i64 0
  %1183 = shufflevector <4 x double> %1182, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1184

1184:                                             ; preds = %1208, %1156
  %1185 = phi i64 [ %1215, %1208 ], [ 0, %1156 ]
  %1186 = trunc i64 %1185 to i32
  br i1 %1158, label %1187, label %1190

1187:                                             ; preds = %1184
  %1188 = getelementptr inbounds i32, ptr %1159, i64 %1185
  %1189 = load i32, ptr %1188, align 4, !tbaa !59
  br label %1190

1190:                                             ; preds = %1187, %1184
  %1191 = phi i32 [ %1189, %1187 ], [ %1186, %1184 ]
  %1192 = mul i32 %1136, %1191
  %1193 = add i32 %1192, %1168
  %1194 = zext i32 %1193 to i64
  %1195 = getelementptr inbounds double, ptr %1135, i64 %1194
  %1196 = load double, ptr %1195, align 8, !tbaa !133
  %1197 = getelementptr inbounds %"struct.std::pair.263", ptr %1160, i64 %1185
  %1198 = load i64, ptr %1197, align 4
  %1199 = trunc i64 %1198 to i32
  %1200 = load ptr, ptr %149, align 8
  %1201 = load ptr, ptr %142, align 8
  %1202 = load i32, ptr %141, align 8
  %1203 = mul i32 %1202, %1186
  br i1 %153, label %1305, label %1239

1204:                                             ; preds = %1304
  %1205 = load ptr, ptr %1164, align 8, !tbaa !136
  %1206 = and i64 %1198, 4294967295
  %1207 = getelementptr inbounds double, ptr %1205, i64 %1206
  br label %1208

1208:                                             ; preds = %1304, %1204
  %1209 = phi ptr [ %1207, %1204 ], [ %1167, %1304 ]
  %1210 = load double, ptr %1209, align 8, !tbaa !133
  %1211 = fmul double %1196, %1210
  %1212 = getelementptr inbounds double, ptr %1165, i64 %1185
  %1213 = load double, ptr %1212, align 8, !tbaa !133
  %1214 = call double @llvm.fmuladd.f64(double %1211, double %1155, double %1213)
  store double %1214, ptr %1212, align 8, !tbaa !133
  %1215 = add nuw nsw i64 %1185, 1
  %1216 = icmp eq i64 %1215, %117
  br i1 %1216, label %1474, label %1184

1217:                                             ; preds = %1285, %1236
  %1218 = phi i64 [ %1237, %1236 ], [ %1286, %1285 ]
  %1219 = getelementptr inbounds %"struct.std::pair.263", ptr %1160, i64 %1218
  %1220 = load i64, ptr %1219, align 4
  %1221 = trunc i64 %1220 to i32
  %1222 = icmp eq i32 %1221, %1199
  br i1 %1222, label %1223, label %1236

1223:                                             ; preds = %1217
  %1224 = trunc i64 %1218 to i32
  %1225 = mul i32 %1136, %1224
  %1226 = add i32 %1225, %1168
  %1227 = zext i32 %1226 to i64
  %1228 = getelementptr inbounds double, ptr %1135, i64 %1227
  %1229 = load double, ptr %1228, align 8, !tbaa !133
  %1230 = fmul double %1196, %1229
  %1231 = add i32 %1203, %1224
  %1232 = zext i32 %1231 to i64
  %1233 = getelementptr inbounds double, ptr %1201, i64 %1232
  %1234 = load double, ptr %1233, align 8, !tbaa !133
  %1235 = call double @llvm.fmuladd.f64(double %1230, double %1155, double %1234)
  store double %1235, ptr %1233, align 8, !tbaa !133
  br label %1236

1236:                                             ; preds = %1223, %1217
  %1237 = add nuw nsw i64 %1218, 1
  %1238 = icmp eq i64 %1237, %117
  br i1 %1238, label %1304, label %1217, !llvm.loop !256

1239:                                             ; preds = %1190
  br i1 %1158, label %1415, label %1240

1240:                                             ; preds = %1239
  br i1 %192, label %1285, label %1241

1241:                                             ; preds = %1240
  %1242 = xor i32 %1203, -1
  %1243 = icmp ult i32 %1242, %193
  %1244 = or i1 %1243, %194
  %1245 = or i1 %1137, %1244
  %1246 = or i1 %1171, %1245
  br i1 %1246, label %1285, label %1247

1247:                                             ; preds = %1241
  %1248 = zext i32 %1203 to i64
  %1249 = shl nuw nsw i64 %1248, 3
  %1250 = getelementptr i8, ptr %1201, i64 %1249
  %1251 = getelementptr i8, ptr %1201, i64 %168
  %1252 = getelementptr i8, ptr %1251, i64 %1249
  %1253 = icmp ult ptr %1160, %1252
  %1254 = icmp ult ptr %1250, %1169
  %1255 = and i1 %1253, %1254
  %1256 = icmp ult ptr %1250, %1147
  %1257 = icmp ult ptr %1145, %1252
  %1258 = and i1 %1256, %1257
  %1259 = or i1 %1255, %1258
  br i1 %1259, label %1285, label %1260

1260:                                             ; preds = %1247
  %1261 = insertelement <4 x i32> poison, i32 %1199, i64 0
  %1262 = shufflevector <4 x i32> %1261, <4 x i32> poison, <4 x i32> zeroinitializer
  %1263 = insertelement <4 x double> poison, double %1196, i64 0
  %1264 = shufflevector <4 x double> %1263, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1265

1265:                                             ; preds = %1265, %1260
  %1266 = phi i64 [ 0, %1260 ], [ %1282, %1265 ]
  %1267 = trunc i64 %1266 to i32
  %1268 = getelementptr inbounds %"struct.std::pair.263", ptr %1160, i64 %1266
  %1269 = load <4 x i64>, ptr %1268, align 4, !alias.scope !257, !noalias !260
  %1270 = trunc <4 x i64> %1269 to <4 x i32>
  %1271 = icmp eq <4 x i32> %1262, %1270
  %1272 = add i64 %1266, %1143
  %1273 = and i64 %1272, 4294967295
  %1274 = getelementptr double, ptr %1135, i64 %1273
  %1275 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1274, i32 8, <4 x i1> %1271, <4 x double> poison), !tbaa !133, !alias.scope !262
  %1276 = fmul <4 x double> %1264, %1275
  %1277 = add i32 %1203, %1267
  %1278 = zext i32 %1277 to i64
  %1279 = getelementptr double, ptr %1201, i64 %1278
  %1280 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1279, i32 8, <4 x i1> %1271, <4 x double> poison), !tbaa !133, !alias.scope !260, !noalias !262
  %1281 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1276, <4 x double> %1173, <4 x double> %1280)
  call void @llvm.masked.store.v4f64.p0(<4 x double> %1281, ptr %1279, i32 8, <4 x i1> %1271), !tbaa !133, !alias.scope !260, !noalias !262
  %1282 = add nuw i64 %1266, 4
  %1283 = icmp eq i64 %1282, %196
  br i1 %1283, label %1284, label %1265, !llvm.loop !264

1284:                                             ; preds = %1265
  br i1 %197, label %1304, label %1285

1285:                                             ; preds = %1247, %1241, %1240, %1284
  %1286 = phi i64 [ 0, %1247 ], [ 0, %1241 ], [ 0, %1240 ], [ %196, %1284 ]
  br label %1217

1287:                                             ; preds = %1439, %1306
  %1288 = phi i64 [ 0, %1306 ], [ %1471, %1439 ]
  br i1 %210, label %1304, label %1289

1289:                                             ; preds = %1287
  %1290 = getelementptr inbounds i32, ptr %1200, i64 %1288
  %1291 = load i32, ptr %1290, align 4, !tbaa !59
  %1292 = mul i32 %1291, %1136
  %1293 = add i32 %1292, %1168
  %1294 = zext i32 %1293 to i64
  %1295 = getelementptr inbounds double, ptr %1135, i64 %1294
  %1296 = load double, ptr %1295, align 8, !tbaa !133
  %1297 = fmul double %1196, %1296
  %1298 = trunc i64 %1288 to i32
  %1299 = add i32 %1203, %1298
  %1300 = zext i32 %1299 to i64
  %1301 = getelementptr inbounds double, ptr %1201, i64 %1300
  %1302 = load double, ptr %1301, align 8, !tbaa !133
  %1303 = call double @llvm.fmuladd.f64(double %1297, double %1155, double %1302)
  store double %1303, ptr %1301, align 8, !tbaa !133
  br label %1304

1304:                                             ; preds = %1236, %1436, %1383, %1386, %1289, %1287, %1284, %1365
  br i1 %1162, label %1208, label %1204

1305:                                             ; preds = %1190
  br i1 %1158, label %1306, label %1307

1306:                                             ; preds = %1305
  br i1 %208, label %1287, label %1439

1307:                                             ; preds = %1305
  br i1 %198, label %1366, label %1308

1308:                                             ; preds = %1307
  %1309 = xor i32 %1203, -1
  %1310 = icmp ult i32 %1309, %199
  %1311 = or i1 %1310, %200
  %1312 = or i1 %1138, %1311
  %1313 = or i1 %1175, %1312
  br i1 %1313, label %1366, label %1314

1314:                                             ; preds = %1308
  %1315 = zext i32 %1203 to i64
  %1316 = shl nuw nsw i64 %1315, 3
  %1317 = getelementptr i8, ptr %1201, i64 %1316
  %1318 = getelementptr i8, ptr %1201, i64 %166
  %1319 = getelementptr i8, ptr %1318, i64 %1316
  %1320 = icmp ult ptr %1317, %1152
  %1321 = icmp ult ptr %1150, %1319
  %1322 = and i1 %1320, %1321
  br i1 %1322, label %1366, label %1323

1323:                                             ; preds = %1314
  %1324 = insertelement <4 x double> poison, double %1196, i64 0
  %1325 = shufflevector <4 x double> %1324, <4 x double> poison, <4 x i32> zeroinitializer
  %1326 = insertelement <4 x double> poison, double %1196, i64 0
  %1327 = shufflevector <4 x double> %1326, <4 x double> poison, <4 x i32> zeroinitializer
  %1328 = insertelement <4 x double> poison, double %1196, i64 0
  %1329 = shufflevector <4 x double> %1328, <4 x double> poison, <4 x i32> zeroinitializer
  %1330 = insertelement <4 x double> poison, double %1196, i64 0
  %1331 = shufflevector <4 x double> %1330, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1332

1332:                                             ; preds = %1332, %1323
  %1333 = phi i64 [ 0, %1323 ], [ %1363, %1332 ]
  %1334 = trunc i64 %1333 to i32
  %1335 = add i64 %1333, %1143
  %1336 = and i64 %1335, 4294967295
  %1337 = getelementptr inbounds double, ptr %1135, i64 %1336
  %1338 = load <4 x double>, ptr %1337, align 8, !tbaa !133, !alias.scope !265
  %1339 = getelementptr inbounds double, ptr %1337, i64 4
  %1340 = load <4 x double>, ptr %1339, align 8, !tbaa !133, !alias.scope !265
  %1341 = getelementptr inbounds double, ptr %1337, i64 8
  %1342 = load <4 x double>, ptr %1341, align 8, !tbaa !133, !alias.scope !265
  %1343 = getelementptr inbounds double, ptr %1337, i64 12
  %1344 = load <4 x double>, ptr %1343, align 8, !tbaa !133, !alias.scope !265
  %1345 = fmul <4 x double> %1325, %1338
  %1346 = fmul <4 x double> %1327, %1340
  %1347 = fmul <4 x double> %1329, %1342
  %1348 = fmul <4 x double> %1331, %1344
  %1349 = add i32 %1203, %1334
  %1350 = zext i32 %1349 to i64
  %1351 = getelementptr inbounds double, ptr %1201, i64 %1350
  %1352 = load <4 x double>, ptr %1351, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  %1353 = getelementptr inbounds double, ptr %1351, i64 4
  %1354 = load <4 x double>, ptr %1353, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  %1355 = getelementptr inbounds double, ptr %1351, i64 8
  %1356 = load <4 x double>, ptr %1355, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  %1357 = getelementptr inbounds double, ptr %1351, i64 12
  %1358 = load <4 x double>, ptr %1357, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  %1359 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1345, <4 x double> %1177, <4 x double> %1352)
  %1360 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1346, <4 x double> %1179, <4 x double> %1354)
  %1361 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1347, <4 x double> %1181, <4 x double> %1356)
  %1362 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1348, <4 x double> %1183, <4 x double> %1358)
  store <4 x double> %1359, ptr %1351, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  store <4 x double> %1360, ptr %1353, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  store <4 x double> %1361, ptr %1355, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  store <4 x double> %1362, ptr %1357, align 8, !tbaa !133, !alias.scope !268, !noalias !265
  %1363 = add nuw i64 %1333, 16
  %1364 = icmp eq i64 %1363, %202
  br i1 %1364, label %1365, label %1332, !llvm.loop !270

1365:                                             ; preds = %1332
  br i1 %203, label %1304, label %1366

1366:                                             ; preds = %1314, %1308, %1307, %1365
  %1367 = phi i64 [ 0, %1314 ], [ 0, %1308 ], [ 0, %1307 ], [ %202, %1365 ]
  %1368 = xor i64 %1367, -1
  br i1 %205, label %1383, label %1369

1369:                                             ; preds = %1366
  %1370 = trunc i64 %1367 to i32
  %1371 = mul i32 %1136, %1370
  %1372 = add i32 %1371, %1168
  %1373 = zext i32 %1372 to i64
  %1374 = getelementptr inbounds double, ptr %1135, i64 %1373
  %1375 = load double, ptr %1374, align 8, !tbaa !133
  %1376 = fmul double %1196, %1375
  %1377 = add i32 %1203, %1370
  %1378 = zext i32 %1377 to i64
  %1379 = getelementptr inbounds double, ptr %1201, i64 %1378
  %1380 = load double, ptr %1379, align 8, !tbaa !133
  %1381 = call double @llvm.fmuladd.f64(double %1376, double %1155, double %1380)
  store double %1381, ptr %1379, align 8, !tbaa !133
  %1382 = or i64 %1367, 1
  br label %1383

1383:                                             ; preds = %1369, %1366
  %1384 = phi i64 [ %1367, %1366 ], [ %1382, %1369 ]
  %1385 = icmp eq i64 %1368, %206
  br i1 %1385, label %1304, label %1386

1386:                                             ; preds = %1383, %1386
  %1387 = phi i64 [ %1413, %1386 ], [ %1384, %1383 ]
  %1388 = trunc i64 %1387 to i32
  %1389 = mul i32 %1136, %1388
  %1390 = add i32 %1389, %1168
  %1391 = zext i32 %1390 to i64
  %1392 = getelementptr inbounds double, ptr %1135, i64 %1391
  %1393 = load double, ptr %1392, align 8, !tbaa !133
  %1394 = fmul double %1196, %1393
  %1395 = add i32 %1203, %1388
  %1396 = zext i32 %1395 to i64
  %1397 = getelementptr inbounds double, ptr %1201, i64 %1396
  %1398 = load double, ptr %1397, align 8, !tbaa !133
  %1399 = call double @llvm.fmuladd.f64(double %1394, double %1155, double %1398)
  store double %1399, ptr %1397, align 8, !tbaa !133
  %1400 = trunc i64 %1387 to i32
  %1401 = add i32 %1400, 1
  %1402 = mul i32 %1136, %1401
  %1403 = add i32 %1402, %1168
  %1404 = zext i32 %1403 to i64
  %1405 = getelementptr inbounds double, ptr %1135, i64 %1404
  %1406 = load double, ptr %1405, align 8, !tbaa !133
  %1407 = fmul double %1196, %1406
  %1408 = add i32 %1203, %1401
  %1409 = zext i32 %1408 to i64
  %1410 = getelementptr inbounds double, ptr %1201, i64 %1409
  %1411 = load double, ptr %1410, align 8, !tbaa !133
  %1412 = call double @llvm.fmuladd.f64(double %1407, double %1155, double %1411)
  store double %1412, ptr %1410, align 8, !tbaa !133
  %1413 = add nuw nsw i64 %1387, 2
  %1414 = icmp eq i64 %1413, %117
  br i1 %1414, label %1304, label %1386, !llvm.loop !271

1415:                                             ; preds = %1239, %1436
  %1416 = phi i64 [ %1437, %1436 ], [ 0, %1239 ]
  %1417 = getelementptr inbounds %"struct.std::pair.263", ptr %1160, i64 %1416
  %1418 = load i64, ptr %1417, align 4
  %1419 = trunc i64 %1418 to i32
  %1420 = icmp eq i32 %1419, %1199
  br i1 %1420, label %1421, label %1436

1421:                                             ; preds = %1415
  %1422 = getelementptr inbounds i32, ptr %1200, i64 %1416
  %1423 = load i32, ptr %1422, align 4, !tbaa !59
  %1424 = mul i32 %1423, %1136
  %1425 = add i32 %1424, %1168
  %1426 = zext i32 %1425 to i64
  %1427 = getelementptr inbounds double, ptr %1135, i64 %1426
  %1428 = load double, ptr %1427, align 8, !tbaa !133
  %1429 = fmul double %1196, %1428
  %1430 = trunc i64 %1416 to i32
  %1431 = add i32 %1203, %1430
  %1432 = zext i32 %1431 to i64
  %1433 = getelementptr inbounds double, ptr %1201, i64 %1432
  %1434 = load double, ptr %1433, align 8, !tbaa !133
  %1435 = call double @llvm.fmuladd.f64(double %1429, double %1155, double %1434)
  store double %1435, ptr %1433, align 8, !tbaa !133
  br label %1436

1436:                                             ; preds = %1421, %1415
  %1437 = add nuw nsw i64 %1416, 1
  %1438 = icmp eq i64 %1437, %117
  br i1 %1438, label %1304, label %1415

1439:                                             ; preds = %1306, %1439
  %1440 = phi i64 [ %1471, %1439 ], [ 0, %1306 ]
  %1441 = phi i64 [ %1472, %1439 ], [ 0, %1306 ]
  %1442 = getelementptr inbounds i32, ptr %1200, i64 %1440
  %1443 = load i32, ptr %1442, align 4, !tbaa !59
  %1444 = mul i32 %1443, %1136
  %1445 = add i32 %1444, %1168
  %1446 = zext i32 %1445 to i64
  %1447 = getelementptr inbounds double, ptr %1135, i64 %1446
  %1448 = load double, ptr %1447, align 8, !tbaa !133
  %1449 = fmul double %1196, %1448
  %1450 = trunc i64 %1440 to i32
  %1451 = add i32 %1203, %1450
  %1452 = zext i32 %1451 to i64
  %1453 = getelementptr inbounds double, ptr %1201, i64 %1452
  %1454 = load double, ptr %1453, align 8, !tbaa !133
  %1455 = call double @llvm.fmuladd.f64(double %1449, double %1155, double %1454)
  store double %1455, ptr %1453, align 8, !tbaa !133
  %1456 = or i64 %1440, 1
  %1457 = getelementptr inbounds i32, ptr %1200, i64 %1456
  %1458 = load i32, ptr %1457, align 4, !tbaa !59
  %1459 = mul i32 %1458, %1136
  %1460 = add i32 %1459, %1168
  %1461 = zext i32 %1460 to i64
  %1462 = getelementptr inbounds double, ptr %1135, i64 %1461
  %1463 = load double, ptr %1462, align 8, !tbaa !133
  %1464 = fmul double %1196, %1463
  %1465 = trunc i64 %1456 to i32
  %1466 = add i32 %1203, %1465
  %1467 = zext i32 %1466 to i64
  %1468 = getelementptr inbounds double, ptr %1201, i64 %1467
  %1469 = load double, ptr %1468, align 8, !tbaa !133
  %1470 = call double @llvm.fmuladd.f64(double %1464, double %1155, double %1469)
  store double %1470, ptr %1468, align 8, !tbaa !133
  %1471 = add nuw nsw i64 %1440, 2
  %1472 = add i64 %1441, 2
  %1473 = icmp eq i64 %1472, %209
  br i1 %1473, label %1287, label %1439

1474:                                             ; preds = %1208, %1142
  %1475 = add nuw nsw i64 %1143, 1
  %1476 = icmp eq i64 %1475, %50
  br i1 %1476, label %1747, label %1142

1477:                                             ; preds = %1140, %1744
  %1478 = phi i64 [ 0, %1140 ], [ %1745, %1744 ]
  %1479 = getelementptr inbounds double, ptr %1141, i64 %1478
  %1480 = load double, ptr %1479, align 8, !tbaa !133
  br i1 %211, label %1744, label %1481

1481:                                             ; preds = %1477
  %1482 = load ptr, ptr %154, align 8, !tbaa !205
  %1483 = trunc i64 %1478 to i32
  %1484 = trunc i64 %1478 to i32
  %1485 = trunc i64 %1478 to i32
  br label %1486

1486:                                             ; preds = %1741, %1481
  %1487 = phi i64 [ %1742, %1741 ], [ 0, %1481 ]
  %1488 = getelementptr inbounds %"class.std::vector.126", ptr %1482, i64 %1487
  %1489 = load ptr, ptr %1488, align 8, !tbaa !54
  %1490 = load ptr, ptr %29, align 8
  %1491 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1490, i64 0, i32 2
  %1492 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1490, i64 0, i32 20
  %1493 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1490, i64 0, i32 19
  %1494 = load ptr, ptr %149, align 8
  %1495 = getelementptr inbounds i32, ptr %1494, i64 %1487
  %1496 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1490, i64 0, i32 12
  %1497 = load ptr, ptr %150, align 8
  %1498 = load i32, ptr %151, align 8
  %1499 = load ptr, ptr %18, align 8
  %1500 = getelementptr inbounds %"class.dealii::Vector", ptr %1499, i64 %1478, i32 3
  %1501 = load ptr, ptr %143, align 8
  %1502 = getelementptr inbounds double, ptr %1501, i64 %1487
  %1503 = load ptr, ptr %17, align 8
  %1504 = getelementptr inbounds double, ptr %1503, i64 %1478
  %1505 = trunc i64 %1487 to i32
  %1506 = trunc i64 %1487 to i32
  br label %1507

1507:                                             ; preds = %1486, %1622
  %1508 = phi i64 [ 0, %1486 ], [ %1623, %1622 ]
  %1509 = trunc i64 %1508 to i32
  %1510 = lshr i64 %1508, 6
  %1511 = and i64 %1510, 67108863
  %1512 = getelementptr inbounds i64, ptr %1489, i64 %1511
  %1513 = and i32 %1509, 63
  %1514 = and i64 %1508, 63
  %1515 = shl nuw i64 1, %1514
  %1516 = load i64, ptr %1512, align 8, !tbaa !56
  %1517 = and i64 %1516, %1515
  %1518 = icmp eq i64 %1517, 0
  br i1 %1518, label %1622, label %1519

1519:                                             ; preds = %1507
  %1520 = load i8, ptr %1491, align 4, !tbaa !148, !range !182, !noundef !183
  %1521 = icmp eq i8 %1520, 0
  br i1 %1521, label %1522, label %1560

1522:                                             ; preds = %1519
  %1523 = load ptr, ptr %1492, align 8, !tbaa !144
  %1524 = getelementptr inbounds i32, ptr %1523, i64 %1487
  %1525 = load i32, ptr %1524, align 4, !tbaa !59
  %1526 = icmp eq i32 %1525, 1
  br i1 %1526, label %1560, label %1527

1527:                                             ; preds = %1522
  %1528 = load ptr, ptr %1493, align 8, !tbaa !205
  %1529 = getelementptr inbounds %"class.std::vector.126", ptr %1528, i64 %1487
  %1530 = load ptr, ptr %1529, align 8, !tbaa !54
  %1531 = getelementptr inbounds i64, ptr %1530, i64 %1511
  %1532 = load i64, ptr %1531, align 8, !tbaa !56
  %1533 = and i64 %1532, %1515
  %1534 = icmp eq i64 %1533, 0
  br i1 %1534, label %1642, label %1535

1535:                                             ; preds = %1527
  %1536 = load i32, ptr %1495, align 4, !tbaa !59
  %1537 = icmp eq i64 %1508, 0
  br i1 %1537, label %1557, label %1538

1538:                                             ; preds = %1535, %1538
  %1539 = phi i64 [ %1546, %1538 ], [ 0, %1535 ]
  %1540 = phi i32 [ %1551, %1538 ], [ 0, %1535 ]
  %1541 = phi ptr [ %1550, %1538 ], [ %1530, %1535 ]
  %1542 = zext i32 %1540 to i64
  %1543 = load i64, ptr %1541, align 8, !tbaa !56
  %1544 = lshr i64 %1543, %1542
  %1545 = and i64 %1544, 1
  %1546 = add nuw nsw i64 %1545, %1539
  %1547 = add i32 %1540, 1
  %1548 = icmp eq i32 %1540, 63
  %1549 = zext i1 %1548 to i64
  %1550 = getelementptr inbounds i64, ptr %1541, i64 %1549
  %1551 = select i1 %1548, i32 0, i32 %1547
  %1552 = icmp ne ptr %1550, %1531
  %1553 = icmp ne i32 %1551, %1513
  %1554 = or i1 %1553, %1552
  br i1 %1554, label %1538, label %1555

1555:                                             ; preds = %1538
  %1556 = trunc i64 %1546 to i32
  br label %1557

1557:                                             ; preds = %1555, %1535
  %1558 = phi i32 [ 0, %1535 ], [ %1556, %1555 ]
  %1559 = add i32 %1558, %1536
  br label %1568

1560:                                             ; preds = %1522, %1519
  %1561 = load ptr, ptr %1496, align 8, !tbaa !184
  %1562 = getelementptr inbounds %"struct.std::pair.263", ptr %1561, i64 %1487
  %1563 = load i64, ptr %1562, align 4
  %1564 = and i64 %1563, 4294967295
  %1565 = icmp eq i64 %1508, %1564
  br i1 %1565, label %1566, label %1640

1566:                                             ; preds = %1560
  %1567 = load i32, ptr %1495, align 4, !tbaa !59
  br label %1568

1568:                                             ; preds = %1566, %1557
  %1569 = phi i32 [ %1559, %1557 ], [ %1567, %1566 ]
  %1570 = mul i32 %1498, %1569
  %1571 = add i32 %1570, %1483
  %1572 = zext i32 %1571 to i64
  %1573 = getelementptr inbounds double, ptr %1497, i64 %1572
  %1574 = load double, ptr %1573, align 8, !tbaa !133
  br label %1640

1575:                                             ; preds = %1644
  %1576 = load ptr, ptr %1500, align 8, !tbaa !136
  %1577 = getelementptr inbounds double, ptr %1576, i64 %1508
  br label %1616

1578:                                             ; preds = %1613
  %1579 = add nuw nsw i64 %1626, 1
  %1580 = icmp eq i64 %1579, %117
  br i1 %1580, label %1644, label %1625

1581:                                             ; preds = %1625, %1613
  %1582 = phi i32 [ 0, %1625 ], [ %1614, %1613 ]
  %1583 = lshr i32 %1582, 6
  %1584 = zext i32 %1583 to i64
  %1585 = getelementptr inbounds i64, ptr %1628, i64 %1584
  %1586 = and i32 %1582, 63
  %1587 = zext i32 %1586 to i64
  %1588 = shl nuw i64 1, %1587
  %1589 = load i64, ptr %1585, align 8, !tbaa !56
  %1590 = and i64 %1589, %1588
  %1591 = icmp eq i64 %1590, 0
  br i1 %1591, label %1613, label %1592

1592:                                             ; preds = %1581
  %1593 = load ptr, ptr %1496, align 8, !tbaa !184
  %1594 = getelementptr inbounds %"struct.std::pair.263", ptr %1593, i64 %1626
  %1595 = load i64, ptr %1594, align 4
  %1596 = trunc i64 %1595 to i32
  %1597 = icmp eq i32 %1582, %1596
  br i1 %1597, label %1598, label %1605

1598:                                             ; preds = %1592
  %1599 = load i32, ptr %1630, align 4, !tbaa !59
  %1600 = mul i32 %1632, %1599
  %1601 = add i32 %1600, %1484
  %1602 = zext i32 %1601 to i64
  %1603 = getelementptr inbounds double, ptr %1631, i64 %1602
  %1604 = load double, ptr %1603, align 8, !tbaa !133
  br label %1605

1605:                                             ; preds = %1598, %1592
  %1606 = phi double [ 0.000000e+00, %1592 ], [ %1604, %1598 ]
  %1607 = zext i32 %1582 to i64
  %1608 = icmp eq i64 %1508, %1607
  br i1 %1608, label %1609, label %1613

1609:                                             ; preds = %1605
  %1610 = fmul double %1641, %1606
  %1611 = load double, ptr %1639, align 8, !tbaa !133
  %1612 = call double @llvm.fmuladd.f64(double %1610, double %1480, double %1611)
  store double %1612, ptr %1639, align 8, !tbaa !133
  br label %1613

1613:                                             ; preds = %1609, %1605, %1581
  %1614 = add nuw i32 %1582, 1
  %1615 = icmp eq i32 %1614, %32
  br i1 %1615, label %1578, label %1581

1616:                                             ; preds = %1644, %1575
  %1617 = phi ptr [ %1577, %1575 ], [ %1504, %1644 ]
  %1618 = load double, ptr %1617, align 8, !tbaa !133
  %1619 = fmul double %1645, %1618
  %1620 = load double, ptr %1502, align 8, !tbaa !133
  %1621 = call double @llvm.fmuladd.f64(double %1619, double %1480, double %1620)
  store double %1621, ptr %1502, align 8, !tbaa !133
  br label %1622

1622:                                             ; preds = %1616, %1507
  %1623 = add nuw nsw i64 %1508, 1
  %1624 = icmp eq i64 %1623, %164
  br i1 %1624, label %1741, label %1507

1625:                                             ; preds = %1640, %1578
  %1626 = phi i64 [ %1579, %1578 ], [ 0, %1640 ]
  %1627 = getelementptr inbounds %"class.std::vector.126", ptr %1482, i64 %1626
  %1628 = load ptr, ptr %1627, align 8, !tbaa !54
  %1629 = load ptr, ptr %149, align 8
  %1630 = getelementptr inbounds i32, ptr %1629, i64 %1626
  %1631 = load ptr, ptr %150, align 8
  %1632 = load i32, ptr %151, align 8
  %1633 = load ptr, ptr %142, align 8
  %1634 = load i32, ptr %141, align 8
  %1635 = mul i32 %1634, %1505
  %1636 = trunc i64 %1626 to i32
  %1637 = add i32 %1635, %1636
  %1638 = zext i32 %1637 to i64
  %1639 = getelementptr inbounds double, ptr %1633, i64 %1638
  br label %1581

1640:                                             ; preds = %1560, %1568
  %1641 = phi double [ 0.000000e+00, %1560 ], [ %1574, %1568 ]
  br i1 %1521, label %1642, label %1625

1642:                                             ; preds = %1527, %1640
  %1643 = phi double [ %1641, %1640 ], [ 0.000000e+00, %1527 ]
  br label %1648

1644:                                             ; preds = %1578, %1738
  %1645 = phi double [ %1643, %1738 ], [ %1641, %1578 ]
  %1646 = load i32, ptr %144, align 8, !tbaa !145
  %1647 = icmp eq i32 %1646, 1
  br i1 %1647, label %1616, label %1575

1648:                                             ; preds = %1642, %1738
  %1649 = phi i64 [ 0, %1642 ], [ %1739, %1738 ]
  %1650 = getelementptr inbounds %"class.std::vector.126", ptr %1482, i64 %1649
  %1651 = load ptr, ptr %1650, align 8, !tbaa !54
  %1652 = load ptr, ptr %149, align 8
  %1653 = getelementptr inbounds i32, ptr %1652, i64 %1649
  %1654 = load ptr, ptr %150, align 8
  %1655 = load i32, ptr %151, align 8
  %1656 = load ptr, ptr %142, align 8
  %1657 = load i32, ptr %141, align 8
  %1658 = mul i32 %1657, %1506
  %1659 = trunc i64 %1649 to i32
  %1660 = add i32 %1658, %1659
  %1661 = zext i32 %1660 to i64
  %1662 = getelementptr inbounds double, ptr %1656, i64 %1661
  br label %1663

1663:                                             ; preds = %1735, %1648
  %1664 = phi i32 [ 0, %1648 ], [ %1736, %1735 ]
  %1665 = lshr i32 %1664, 6
  %1666 = zext i32 %1665 to i64
  %1667 = getelementptr inbounds i64, ptr %1651, i64 %1666
  %1668 = and i32 %1664, 63
  %1669 = zext i32 %1668 to i64
  %1670 = shl nuw i64 1, %1669
  %1671 = load i64, ptr %1667, align 8, !tbaa !56
  %1672 = and i64 %1671, %1670
  %1673 = icmp eq i64 %1672, 0
  br i1 %1673, label %1735, label %1674

1674:                                             ; preds = %1663
  %1675 = load ptr, ptr %1492, align 8, !tbaa !144
  %1676 = getelementptr inbounds i32, ptr %1675, i64 %1649
  %1677 = load i32, ptr %1676, align 4, !tbaa !59
  %1678 = icmp eq i32 %1677, 1
  br i1 %1678, label %1712, label %1679

1679:                                             ; preds = %1674
  %1680 = load ptr, ptr %1493, align 8, !tbaa !205
  %1681 = getelementptr inbounds %"class.std::vector.126", ptr %1680, i64 %1649
  %1682 = load ptr, ptr %1681, align 8, !tbaa !54
  %1683 = getelementptr inbounds i64, ptr %1682, i64 %1666
  %1684 = load i64, ptr %1683, align 8, !tbaa !56
  %1685 = and i64 %1684, %1670
  %1686 = icmp eq i64 %1685, 0
  br i1 %1686, label %1727, label %1687

1687:                                             ; preds = %1679
  %1688 = load i32, ptr %1653, align 4, !tbaa !59
  %1689 = icmp eq i32 %1664, 0
  br i1 %1689, label %1709, label %1690

1690:                                             ; preds = %1687, %1690
  %1691 = phi i64 [ %1698, %1690 ], [ 0, %1687 ]
  %1692 = phi i32 [ %1703, %1690 ], [ 0, %1687 ]
  %1693 = phi ptr [ %1702, %1690 ], [ %1682, %1687 ]
  %1694 = zext i32 %1692 to i64
  %1695 = load i64, ptr %1693, align 8, !tbaa !56
  %1696 = lshr i64 %1695, %1694
  %1697 = and i64 %1696, 1
  %1698 = add nuw nsw i64 %1697, %1691
  %1699 = add i32 %1692, 1
  %1700 = icmp eq i32 %1692, 63
  %1701 = zext i1 %1700 to i64
  %1702 = getelementptr inbounds i64, ptr %1693, i64 %1701
  %1703 = select i1 %1700, i32 0, i32 %1699
  %1704 = icmp ne ptr %1702, %1683
  %1705 = icmp ne i32 %1703, %1668
  %1706 = or i1 %1705, %1704
  br i1 %1706, label %1690, label %1707

1707:                                             ; preds = %1690
  %1708 = trunc i64 %1698 to i32
  br label %1709

1709:                                             ; preds = %1707, %1687
  %1710 = phi i32 [ 0, %1687 ], [ %1708, %1707 ]
  %1711 = add i32 %1710, %1688
  br label %1720

1712:                                             ; preds = %1674
  %1713 = load ptr, ptr %1496, align 8, !tbaa !184
  %1714 = getelementptr inbounds %"struct.std::pair.263", ptr %1713, i64 %1649
  %1715 = load i64, ptr %1714, align 4
  %1716 = trunc i64 %1715 to i32
  %1717 = icmp eq i32 %1664, %1716
  br i1 %1717, label %1718, label %1727

1718:                                             ; preds = %1712
  %1719 = load i32, ptr %1653, align 4, !tbaa !59
  br label %1720

1720:                                             ; preds = %1718, %1709
  %1721 = phi i32 [ %1711, %1709 ], [ %1719, %1718 ]
  %1722 = mul i32 %1655, %1721
  %1723 = add i32 %1722, %1485
  %1724 = zext i32 %1723 to i64
  %1725 = getelementptr inbounds double, ptr %1654, i64 %1724
  %1726 = load double, ptr %1725, align 8, !tbaa !133
  br label %1727

1727:                                             ; preds = %1720, %1712, %1679
  %1728 = phi double [ 0.000000e+00, %1712 ], [ 0.000000e+00, %1679 ], [ %1726, %1720 ]
  %1729 = zext i32 %1664 to i64
  %1730 = icmp eq i64 %1508, %1729
  br i1 %1730, label %1731, label %1735

1731:                                             ; preds = %1727
  %1732 = fmul double %1643, %1728
  %1733 = load double, ptr %1662, align 8, !tbaa !133
  %1734 = call double @llvm.fmuladd.f64(double %1732, double %1480, double %1733)
  store double %1734, ptr %1662, align 8, !tbaa !133
  br label %1735

1735:                                             ; preds = %1731, %1727, %1663
  %1736 = add nuw i32 %1664, 1
  %1737 = icmp eq i32 %1736, %32
  br i1 %1737, label %1738, label %1663

1738:                                             ; preds = %1735
  %1739 = add nuw nsw i64 %1649, 1
  %1740 = icmp eq i64 %1739, %117
  br i1 %1740, label %1644, label %1648

1741:                                             ; preds = %1622
  %1742 = add nuw nsw i64 %1487, 1
  %1743 = icmp eq i64 %1742, %117
  br i1 %1743, label %1744, label %1486

1744:                                             ; preds = %1741, %1477
  %1745 = add nuw nsw i64 %1478, 1
  %1746 = icmp eq i64 %1745, %50
  br i1 %1746, label %1747, label %1477

1747:                                             ; preds = %752, %1124, %547, %1474, %1744, %556, %564, %305, %1130, %1139
  br i1 %155, label %1762, label %1748

1748:                                             ; preds = %1747, %1758
  %1749 = phi i64 [ %1760, %1758 ], [ 0, %1747 ]
  %1750 = phi i32 [ %1759, %1758 ], [ 0, %1747 ]
  %1751 = getelementptr inbounds i32, ptr %124, i64 %1749
  %1752 = load i32, ptr %1751, align 4, !tbaa !59
  %1753 = load ptr, ptr %142, align 8, !tbaa !140
  %1754 = load i32, ptr %141, align 8, !tbaa !59
  %1755 = mul i32 %1754, %1750
  %1756 = zext i32 %1755 to i64
  %1757 = getelementptr inbounds double, ptr %1753, i64 %1756
  invoke void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %3, i32 noundef %1752, i32 noundef %160, ptr noundef nonnull %124, ptr noundef nonnull %1757, i1 noundef zeroext true, i1 noundef zeroext false)
          to label %1758 unwind label %1895

1758:                                             ; preds = %1748
  %1759 = add i32 %1750, 1
  %1760 = zext i32 %1759 to i64
  %1761 = icmp ugt i64 %159, %1760
  br i1 %1761, label %1748, label %1762

1762:                                             ; preds = %1758, %1747
  br i1 %36, label %1777, label %1763

1763:                                             ; preds = %1762
  %1764 = load ptr, ptr %143, align 8, !tbaa !136
  %1765 = load ptr, ptr %161, align 8, !tbaa !136
  br i1 %213, label %1766, label %1897

1766:                                             ; preds = %1897, %1763
  %1767 = phi i64 [ 0, %1763 ], [ %1917, %1897 ]
  br i1 %215, label %1777, label %1768

1768:                                             ; preds = %1766
  %1769 = getelementptr inbounds double, ptr %1764, i64 %1767
  %1770 = load double, ptr %1769, align 8, !tbaa !133
  %1771 = getelementptr inbounds i32, ptr %124, i64 %1767
  %1772 = load i32, ptr %1771, align 4, !tbaa !59
  %1773 = zext i32 %1772 to i64
  %1774 = getelementptr inbounds double, ptr %1765, i64 %1773
  %1775 = load double, ptr %1774, align 8, !tbaa !133
  %1776 = fadd double %1770, %1775
  store double %1776, ptr %1774, align 8, !tbaa !133
  br label %1777

1777:                                             ; preds = %1768, %1766, %1762
  %1778 = load ptr, ptr %162, align 8, !tbaa !62
  %1779 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1778, i64 0, i32 1
  %1780 = load ptr, ptr %1779, align 8, !tbaa !46
  %1781 = ptrtoint ptr %1780 to i64
  %1782 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1778, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1783 = load i32, ptr %21, align 8
  %1784 = load i32, ptr %130, align 4
  br label %1785

1785:                                             ; preds = %1873, %1777
  %1786 = phi i32 [ %1783, %1777 ], [ %1852, %1873 ]
  %1787 = phi i32 [ %1783, %1777 ], [ %1853, %1873 ]
  %1788 = phi i32 [ %1783, %1777 ], [ %1874, %1873 ]
  %1789 = phi i32 [ %1784, %1777 ], [ %1854, %1873 ]
  %1790 = add nsw i32 %1789, 1
  %1791 = sext i32 %1788 to i64
  %1792 = getelementptr inbounds ptr, ptr %1780, i64 %1791
  %1793 = load ptr, ptr %1792, align 8, !tbaa !33
  %1794 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1793, i64 0, i32 4
  %1795 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1793, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1796 = load ptr, ptr %1795, align 8, !tbaa !48
  %1797 = load ptr, ptr %1794, align 8, !tbaa !50
  %1798 = ptrtoint ptr %1796 to i64
  %1799 = ptrtoint ptr %1797 to i64
  %1800 = sub i64 %1798, %1799
  %1801 = sdiv exact i64 %1800, 24
  %1802 = trunc i64 %1801 to i32
  %1803 = icmp slt i32 %1790, %1802
  br i1 %1803, label %1851, label %1804

1804:                                             ; preds = %1785
  %1805 = add nsw i64 %1791, 1
  %1806 = trunc i64 %1805 to i32
  store i32 %1806, ptr %21, align 8, !tbaa !60
  %1807 = load ptr, ptr %1782, align 8, !tbaa !51
  %1808 = ptrtoint ptr %1807 to i64
  %1809 = sub i64 %1808, %1781
  %1810 = shl i64 %1809, 29
  %1811 = ashr i64 %1810, 32
  %1812 = icmp slt i64 %1805, %1811
  br i1 %1812, label %1813, label %1845

1813:                                             ; preds = %1804
  %1814 = getelementptr inbounds ptr, ptr %1780, i64 %1805
  %1815 = load ptr, ptr %1814, align 8, !tbaa !33
  %1816 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1815, i64 0, i32 4
  %1817 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1815, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1818 = load ptr, ptr %1817, align 8, !tbaa !48
  %1819 = load ptr, ptr %1816, align 8, !tbaa !50
  %1820 = ptrtoint ptr %1818 to i64
  %1821 = ptrtoint ptr %1819 to i64
  %1822 = sub i64 %1820, %1821
  %1823 = sdiv exact i64 %1822, 24
  %1824 = trunc i64 %1823 to i32
  %1825 = icmp sgt i32 %1824, 0
  br i1 %1825, label %1847, label %1839

1826:                                             ; preds = %1839
  %1827 = getelementptr inbounds ptr, ptr %1780, i64 %1841
  %1828 = load ptr, ptr %1827, align 8, !tbaa !33
  %1829 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1828, i64 0, i32 4
  %1830 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1828, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1831 = load ptr, ptr %1830, align 8, !tbaa !48
  %1832 = load ptr, ptr %1829, align 8, !tbaa !50
  %1833 = ptrtoint ptr %1831 to i64
  %1834 = ptrtoint ptr %1832 to i64
  %1835 = sub i64 %1833, %1834
  %1836 = sdiv exact i64 %1835, 24
  %1837 = trunc i64 %1836 to i32
  %1838 = icmp sgt i32 %1837, 0
  br i1 %1838, label %1846, label %1839, !llvm.loop !52

1839:                                             ; preds = %1813, %1826
  %1840 = phi i64 [ %1841, %1826 ], [ %1805, %1813 ]
  %1841 = add i64 %1840, 1
  %1842 = trunc i64 %1841 to i32
  %1843 = icmp eq i64 %1841, %1811
  br i1 %1843, label %1844, label %1826, !llvm.loop !52

1844:                                             ; preds = %1839
  store i32 %1842, ptr %21, align 8, !tbaa !60
  br label %1845

1845:                                             ; preds = %1844, %1804
  store i32 -1, ptr %21, align 8, !tbaa !60
  br label %1851

1846:                                             ; preds = %1826
  store i32 %1842, ptr %21, align 8, !tbaa !60
  br label %1847

1847:                                             ; preds = %1846, %1813
  %1848 = phi i32 [ %1806, %1813 ], [ %1842, %1846 ]
  %1849 = phi i64 [ %1805, %1813 ], [ %1841, %1846 ]
  %1850 = trunc i64 %1849 to i32
  br label %1851

1851:                                             ; preds = %1847, %1845, %1785
  %1852 = phi i32 [ %1786, %1785 ], [ -1, %1845 ], [ %1848, %1847 ]
  %1853 = phi i32 [ %1787, %1785 ], [ -1, %1845 ], [ %1850, %1847 ]
  %1854 = phi i32 [ %1790, %1785 ], [ -1, %1845 ], [ 0, %1847 ]
  %1855 = phi i32 [ %1788, %1785 ], [ -1, %1845 ], [ %1850, %1847 ]
  %1856 = or i32 %1855, %1854
  %1857 = icmp sgt i32 %1856, -1
  br i1 %1857, label %1858, label %1875

1858:                                             ; preds = %1851
  %1859 = zext i32 %1855 to i64
  %1860 = getelementptr inbounds ptr, ptr %1780, i64 %1859
  %1861 = load ptr, ptr %1860, align 8, !tbaa !33
  %1862 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1861, i64 0, i32 4, i32 0, i32 3
  %1863 = load ptr, ptr %1862, align 8, !tbaa !54
  %1864 = lshr i32 %1854, 6
  %1865 = zext i32 %1864 to i64
  %1866 = getelementptr inbounds i64, ptr %1863, i64 %1865
  %1867 = and i32 %1854, 63
  %1868 = zext i32 %1867 to i64
  %1869 = shl nuw i64 1, %1868
  %1870 = load i64, ptr %1866, align 8, !tbaa !56
  %1871 = and i64 %1870, %1869
  %1872 = icmp eq i64 %1871, 0
  br i1 %1872, label %1873, label %1875

1873:                                             ; preds = %1858, %1878
  %1874 = phi i32 [ %1855, %1858 ], [ %1853, %1878 ]
  br label %1785

1875:                                             ; preds = %1858, %1851
  store i32 %1854, ptr %130, align 4, !tbaa !61
  %1876 = or i32 %1854, %1853
  %1877 = icmp sgt i32 %1876, -1
  br i1 %1877, label %1878, label %1889

1878:                                             ; preds = %1875
  %1879 = zext i32 %1853 to i64
  %1880 = getelementptr inbounds ptr, ptr %1780, i64 %1879
  %1881 = load ptr, ptr %1880, align 8, !tbaa !33
  %1882 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1881, i64 0, i32 4, i32 0, i32 1
  %1883 = shl i32 %1854, 2
  %1884 = zext i32 %1883 to i64
  %1885 = load ptr, ptr %1882, align 8, !tbaa !57
  %1886 = getelementptr inbounds i32, ptr %1885, i64 %1884
  %1887 = load i32, ptr %1886, align 4, !tbaa !59
  %1888 = icmp eq i32 %1887, -1
  br i1 %1888, label %1889, label %1873

1889:                                             ; preds = %1875, %1878
  %1890 = load i32, ptr %131, align 4, !tbaa !61
  %1891 = icmp ne i32 %1854, %1890
  %1892 = load i32, ptr %129, align 8
  %1893 = icmp ne i32 %1852, %1892
  %1894 = select i1 %1891, i1 true, i1 %1893
  br i1 %1894, label %216, label %1920

1895:                                             ; preds = %1748
  %1896 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  br label %1999

1897:                                             ; preds = %1763, %1897
  %1898 = phi i64 [ %1917, %1897 ], [ 0, %1763 ]
  %1899 = phi i64 [ %1918, %1897 ], [ 0, %1763 ]
  %1900 = getelementptr inbounds double, ptr %1764, i64 %1898
  %1901 = load double, ptr %1900, align 8, !tbaa !133
  %1902 = getelementptr inbounds i32, ptr %124, i64 %1898
  %1903 = load i32, ptr %1902, align 4, !tbaa !59
  %1904 = zext i32 %1903 to i64
  %1905 = getelementptr inbounds double, ptr %1765, i64 %1904
  %1906 = load double, ptr %1905, align 8, !tbaa !133
  %1907 = fadd double %1901, %1906
  store double %1907, ptr %1905, align 8, !tbaa !133
  %1908 = or i64 %1898, 1
  %1909 = getelementptr inbounds double, ptr %1764, i64 %1908
  %1910 = load double, ptr %1909, align 8, !tbaa !133
  %1911 = getelementptr inbounds i32, ptr %124, i64 %1908
  %1912 = load i32, ptr %1911, align 4, !tbaa !59
  %1913 = zext i32 %1912 to i64
  %1914 = getelementptr inbounds double, ptr %1765, i64 %1913
  %1915 = load double, ptr %1914, align 8, !tbaa !133
  %1916 = fadd double %1910, %1915
  store double %1916, ptr %1914, align 8, !tbaa !133
  %1917 = add nuw nsw i64 %1898, 2
  %1918 = add i64 %1899, 2
  %1919 = icmp eq i64 %1918, %214
  br i1 %1919, label %1766, label %1897

1920:                                             ; preds = %1889, %123
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %1921 = icmp eq ptr %124, null
  br i1 %1921, label %1923, label %1922

1922:                                             ; preds = %1920
  call void @_ZdlPv(ptr noundef nonnull %124) #21
  br label %1923

1923:                                             ; preds = %1922, %1920
  %1924 = load ptr, ptr %18, align 8, !tbaa !224
  %1925 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1926 = load ptr, ptr %1925, align 8, !tbaa !226
  %1927 = icmp eq ptr %1924, %1926
  br i1 %1927, label %1937, label %1928

1928:                                             ; preds = %1923, %1932
  %1929 = phi ptr [ %1933, %1932 ], [ %1924, %1923 ]
  %1930 = load ptr, ptr %1929, align 8, !tbaa !41
  %1931 = load ptr, ptr %1930, align 8
  invoke void %1931(ptr noundef nonnull align 8 dereferenceable(88) %1929)
          to label %1932 unwind label %1941

1932:                                             ; preds = %1928
  %1933 = getelementptr inbounds %"class.dealii::Vector", ptr %1929, i64 1
  %1934 = icmp eq ptr %1933, %1926
  br i1 %1934, label %1935, label %1928

1935:                                             ; preds = %1932
  %1936 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1937

1937:                                             ; preds = %1935, %1923
  %1938 = phi ptr [ %1936, %1935 ], [ %1924, %1923 ]
  %1939 = icmp eq ptr %1938, null
  br i1 %1939, label %1946, label %1940

1940:                                             ; preds = %1937
  call void @_ZdlPv(ptr noundef nonnull %1938) #21
  br label %1946

1941:                                             ; preds = %1928
  %1942 = landingpad { ptr, i32 }
          cleanup
  %1943 = load ptr, ptr %18, align 8, !tbaa !224
  %1944 = icmp eq ptr %1943, null
  br i1 %1944, label %2025, label %1945

1945:                                             ; preds = %1941
  call void @_ZdlPv(ptr noundef nonnull %1943) #21
  br label %2025

1946:                                             ; preds = %1940, %1937
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1947 = load ptr, ptr %17, align 8, !tbaa !131
  %1948 = icmp eq ptr %1947, null
  br i1 %1948, label %1950, label %1949

1949:                                             ; preds = %1946
  call void @_ZdlPv(ptr noundef nonnull %1947) #21
  br label %1950

1950:                                             ; preds = %1949, %1946
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1951 = load ptr, ptr %14, align 8, !tbaa !224
  %1952 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %1953 = load ptr, ptr %1952, align 8, !tbaa !226
  %1954 = icmp eq ptr %1951, %1953
  br i1 %1954, label %1964, label %1955

1955:                                             ; preds = %1950, %1959
  %1956 = phi ptr [ %1960, %1959 ], [ %1951, %1950 ]
  %1957 = load ptr, ptr %1956, align 8, !tbaa !41
  %1958 = load ptr, ptr %1957, align 8
  invoke void %1958(ptr noundef nonnull align 8 dereferenceable(88) %1956)
          to label %1959 unwind label %1968

1959:                                             ; preds = %1955
  %1960 = getelementptr inbounds %"class.dealii::Vector", ptr %1956, i64 1
  %1961 = icmp eq ptr %1960, %1953
  br i1 %1961, label %1962, label %1955

1962:                                             ; preds = %1959
  %1963 = load ptr, ptr %14, align 8, !tbaa !224
  br label %1964

1964:                                             ; preds = %1962, %1950
  %1965 = phi ptr [ %1963, %1962 ], [ %1951, %1950 ]
  %1966 = icmp eq ptr %1965, null
  br i1 %1966, label %1973, label %1967

1967:                                             ; preds = %1964
  call void @_ZdlPv(ptr noundef nonnull %1965) #21
  br label %1973

1968:                                             ; preds = %1955
  %1969 = landingpad { ptr, i32 }
          cleanup
  %1970 = load ptr, ptr %14, align 8, !tbaa !224
  %1971 = icmp eq ptr %1970, null
  br i1 %1971, label %2054, label %1972

1972:                                             ; preds = %1968
  call void @_ZdlPv(ptr noundef nonnull %1970) #21
  br label %2054

1973:                                             ; preds = %1967, %1964
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1974 = load ptr, ptr %13, align 8, !tbaa !131
  %1975 = icmp eq ptr %1974, null
  br i1 %1975, label %1977, label %1976

1976:                                             ; preds = %1973
  call void @_ZdlPv(ptr noundef nonnull %1974) #21
  br label %1977

1977:                                             ; preds = %1976, %1973
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1978 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %1979 = load ptr, ptr %1978, align 8, !tbaa !136
  %1980 = icmp eq ptr %1979, null
  br i1 %1980, label %1982, label %1981

1981:                                             ; preds = %1977
  call void @_ZdaPv(ptr noundef nonnull %1979) #21
  store ptr null, ptr %1978, align 8, !tbaa !136
  br label %1982

1982:                                             ; preds = %1981, %1977
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1983 unwind label %271

1983:                                             ; preds = %1982
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1984 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1985 = load ptr, ptr %1984, align 8, !tbaa !140
  %1986 = icmp eq ptr %1985, null
  br i1 %1986, label %1988, label %1987

1987:                                             ; preds = %1983
  call void @_ZdaPv(ptr noundef nonnull %1985) #21
  br label %1988

1988:                                             ; preds = %1987, %1983
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1989 unwind label %269

1989:                                             ; preds = %1988
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1990 = getelementptr inbounds %"class.dealii::FEValues", ptr %10, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1990)
          to label %1998 unwind label %1991

1991:                                             ; preds = %1989
  %1992 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1993 unwind label %1995

1993:                                             ; preds = %1991, %2082
  %1994 = phi { ptr, i32 } [ %2074, %2082 ], [ %1992, %1991 ]
  resume { ptr, i32 } %1994

1995:                                             ; preds = %1991
  %1996 = landingpad { ptr, i32 }
          catch ptr null
  %1997 = extractvalue { ptr, i32 } %1996, 0
  call void @__clang_call_terminate(ptr %1997) #22
  unreachable

1998:                                             ; preds = %1989
  call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %10) #19
  ret void

1999:                                             ; preds = %1895, %291
  %2000 = phi { ptr, i32 } [ %1896, %1895 ], [ %292, %291 ]
  call void @_ZdlPv(ptr noundef nonnull %124) #21
  br label %2001

2001:                                             ; preds = %1999, %291, %289
  %2002 = phi { ptr, i32 } [ %290, %289 ], [ %292, %291 ], [ %2000, %1999 ]
  %2003 = load ptr, ptr %18, align 8, !tbaa !224
  %2004 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %2005 = load ptr, ptr %2004, align 8, !tbaa !226
  %2006 = icmp eq ptr %2003, %2005
  br i1 %2006, label %2016, label %2007

2007:                                             ; preds = %2001, %2011
  %2008 = phi ptr [ %2012, %2011 ], [ %2003, %2001 ]
  %2009 = load ptr, ptr %2008, align 8, !tbaa !41
  %2010 = load ptr, ptr %2009, align 8
  invoke void %2010(ptr noundef nonnull align 8 dereferenceable(88) %2008)
          to label %2011 unwind label %2020

2011:                                             ; preds = %2007
  %2012 = getelementptr inbounds %"class.dealii::Vector", ptr %2008, i64 1
  %2013 = icmp eq ptr %2012, %2005
  br i1 %2013, label %2014, label %2007

2014:                                             ; preds = %2011
  %2015 = load ptr, ptr %18, align 8, !tbaa !224
  br label %2016

2016:                                             ; preds = %2014, %2001
  %2017 = phi ptr [ %2015, %2014 ], [ %2003, %2001 ]
  %2018 = icmp eq ptr %2017, null
  br i1 %2018, label %2025, label %2019

2019:                                             ; preds = %2016
  call void @_ZdlPv(ptr noundef nonnull %2017) #21
  br label %2025

2020:                                             ; preds = %2007
  %2021 = landingpad { ptr, i32 }
          catch ptr null
  %2022 = load ptr, ptr %18, align 8, !tbaa !224
  %2023 = icmp eq ptr %2022, null
  br i1 %2023, label %2085, label %2024

2024:                                             ; preds = %2020
  call void @_ZdlPv(ptr noundef nonnull %2022) #21
  br label %2085

2025:                                             ; preds = %1945, %1941, %2019, %2016, %287
  %2026 = phi { ptr, i32 } [ %288, %287 ], [ %2002, %2016 ], [ %2002, %2019 ], [ %1942, %1945 ], [ %1942, %1941 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %2027 = load ptr, ptr %17, align 8, !tbaa !131
  %2028 = icmp eq ptr %2027, null
  br i1 %2028, label %2030, label %2029

2029:                                             ; preds = %2025
  call void @_ZdlPv(ptr noundef nonnull %2027) #21
  br label %2030

2030:                                             ; preds = %2029, %2025, %281
  %2031 = phi { ptr, i32 } [ %282, %281 ], [ %2026, %2025 ], [ %2026, %2029 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %2032 = load ptr, ptr %14, align 8, !tbaa !224
  %2033 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %2034 = load ptr, ptr %2033, align 8, !tbaa !226
  %2035 = icmp eq ptr %2032, %2034
  br i1 %2035, label %2045, label %2036

2036:                                             ; preds = %2030, %2040
  %2037 = phi ptr [ %2041, %2040 ], [ %2032, %2030 ]
  %2038 = load ptr, ptr %2037, align 8, !tbaa !41
  %2039 = load ptr, ptr %2038, align 8
  invoke void %2039(ptr noundef nonnull align 8 dereferenceable(88) %2037)
          to label %2040 unwind label %2049

2040:                                             ; preds = %2036
  %2041 = getelementptr inbounds %"class.dealii::Vector", ptr %2037, i64 1
  %2042 = icmp eq ptr %2041, %2034
  br i1 %2042, label %2043, label %2036

2043:                                             ; preds = %2040
  %2044 = load ptr, ptr %14, align 8, !tbaa !224
  br label %2045

2045:                                             ; preds = %2043, %2030
  %2046 = phi ptr [ %2044, %2043 ], [ %2032, %2030 ]
  %2047 = icmp eq ptr %2046, null
  br i1 %2047, label %2054, label %2048

2048:                                             ; preds = %2045
  call void @_ZdlPv(ptr noundef nonnull %2046) #21
  br label %2054

2049:                                             ; preds = %2036
  %2050 = landingpad { ptr, i32 }
          catch ptr null
  %2051 = load ptr, ptr %14, align 8, !tbaa !224
  %2052 = icmp eq ptr %2051, null
  br i1 %2052, label %2085, label %2053

2053:                                             ; preds = %2049
  call void @_ZdlPv(ptr noundef nonnull %2051) #21
  br label %2085

2054:                                             ; preds = %1972, %1968, %2048, %2045, %279
  %2055 = phi { ptr, i32 } [ %280, %279 ], [ %2031, %2045 ], [ %2031, %2048 ], [ %1969, %1972 ], [ %1969, %1968 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %2056 = load ptr, ptr %13, align 8, !tbaa !131
  %2057 = icmp eq ptr %2056, null
  br i1 %2057, label %2059, label %2058

2058:                                             ; preds = %2054
  call void @_ZdlPv(ptr noundef nonnull %2056) #21
  br label %2059

2059:                                             ; preds = %2058, %2054, %273
  %2060 = phi { ptr, i32 } [ %274, %273 ], [ %2055, %2054 ], [ %2055, %2058 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %2061 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %2062 = load ptr, ptr %2061, align 8, !tbaa !136
  %2063 = icmp eq ptr %2062, null
  br i1 %2063, label %2065, label %2064

2064:                                             ; preds = %2059
  call void @_ZdaPv(ptr noundef nonnull %2062) #21
  store ptr null, ptr %2061, align 8, !tbaa !136
  br label %2065

2065:                                             ; preds = %2064, %2059
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %2066 unwind label %2083

2066:                                             ; preds = %2065, %271, %44
  %2067 = phi { ptr, i32 } [ %272, %271 ], [ %45, %44 ], [ %2060, %2065 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %2068 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %2069 = load ptr, ptr %2068, align 8, !tbaa !140
  %2070 = icmp eq ptr %2069, null
  br i1 %2070, label %2072, label %2071

2071:                                             ; preds = %2066
  call void @_ZdaPv(ptr noundef nonnull %2069) #21
  br label %2072

2072:                                             ; preds = %2071, %2066
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %2073 unwind label %2083

2073:                                             ; preds = %2072, %269
  %2074 = phi { ptr, i32 } [ %270, %269 ], [ %2067, %2072 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %2075 = getelementptr inbounds %"class.dealii::FEValues", ptr %10, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2075)
          to label %2076 unwind label %2077

2076:                                             ; preds = %2073
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %2082 unwind label %2083

2077:                                             ; preds = %2073
  %2078 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %2085 unwind label %2079

2079:                                             ; preds = %2077
  %2080 = landingpad { ptr, i32 }
          catch ptr null
  %2081 = extractvalue { ptr, i32 } %2080, 0
  call void @__clang_call_terminate(ptr %2081) #22
  unreachable

2082:                                             ; preds = %2076
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %10) #19
  br label %1993

2083:                                             ; preds = %2076, %2072, %2065, %285, %277
  %2084 = landingpad { ptr, i32 }
          catch ptr null
  br label %2085

2085:                                             ; preds = %2053, %2049, %2077, %2083, %2020, %2024
  %2086 = phi { ptr, i32 } [ %2021, %2024 ], [ %2021, %2020 ], [ %2050, %2053 ], [ %2050, %2049 ], [ %2084, %2083 ], [ %2078, %2077 ]
  %2087 = extractvalue { ptr, i32 } %2086, 0
  call void @__clang_call_terminate(ptr %2087) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(168) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(36) %5, ptr noundef nonnull align 1 %6, ptr noundef nonnull align 8 dereferenceable(88) %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %10) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.266", align 8
  %13 = alloca %"class.boost::_bi::bind_t.276", align 8
  %14 = alloca %"class.boost::function.35", align 8
  %15 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  store ptr null, ptr %14, align 8, !tbaa !25
  %16 = load ptr, ptr %1, align 8, !tbaa !25
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  store ptr %16, ptr %14, align 8, !tbaa !25
  %19 = load ptr, ptr %16, align 8, !tbaa !227
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %19(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %21, i32 noundef 0)
  br label %22

22:                                               ; preds = %11, %18
  call void @llvm.experimental.noalias.scope.decl(metadata !272)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17, !noalias !272
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %25 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %15, i64 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !17, !alias.scope !272
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %15, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17, !noalias !272
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false)
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !17, !alias.scope !272
  %31 = ptrtoint ptr %6 to i64
  %32 = ptrtoint ptr %7 to i64
  %33 = ptrtoint ptr %10 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIdEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSK_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSY_IS9_EENSY_ISD_EENSY_ISG_EENSY_ISK_EENSY_ISN_EESP_SS_NSY_ISU_EEEENS_3_bi6bind_tINS16_11unspecifiedET_NS16_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES19_S1B_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_(ptr nonnull sret(%"class.boost::_bi::bind_t.276") align 8 %13, ptr noundef nonnull %14, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, i64 %31, i64 %32, ptr noundef %8, ptr noundef nonnull %15, i64 %33)
          to label %34 unwind label %63

34:                                               ; preds = %22
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS4_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull %13, i32 noundef 0)
          to label %35 unwind label %65

35:                                               ; preds = %34
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %36 unwind label %67

36:                                               ; preds = %35
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  %38 = icmp eq ptr %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load ptr, ptr %37, align 8, !tbaa !231
  %41 = icmp eq ptr %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %40(ptr noundef nonnull align 8 dereferenceable(24) %43, ptr noundef nonnull align 8 dereferenceable(24) %43, i32 noundef 2)
          to label %44 unwind label %65

44:                                               ; preds = %42, %39
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %45

45:                                               ; preds = %44, %36
  %46 = load ptr, ptr %13, align 8, !tbaa !25
  %47 = icmp eq ptr %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = load ptr, ptr %46, align 8, !tbaa !236
  %50 = icmp eq ptr %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr noundef nonnull align 8 dereferenceable(24) %52, i32 noundef 2)
          to label %53 unwind label %63

53:                                               ; preds = %51, %48
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %54

54:                                               ; preds = %53, %45
  %55 = load ptr, ptr %14, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %55, align 8, !tbaa !236
  %59 = icmp eq ptr %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %58(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
  br label %62

62:                                               ; preds = %57, %60, %54
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  ret void

63:                                               ; preds = %51, %22
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %87

65:                                               ; preds = %42, %34
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %77

67:                                               ; preds = %35
  %68 = landingpad { ptr, i32 }
          cleanup
  %69 = load ptr, ptr %12, align 8, !tbaa !25
  %70 = icmp eq ptr %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = load ptr, ptr %69, align 8, !tbaa !231
  %73 = icmp eq ptr %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %72(ptr noundef nonnull align 8 dereferenceable(24) %75, ptr noundef nonnull align 8 dereferenceable(24) %75, i32 noundef 2)
          to label %76 unwind label %97

76:                                               ; preds = %74, %71
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %77

77:                                               ; preds = %76, %67, %65
  %78 = phi { ptr, i32 } [ %66, %65 ], [ %68, %67 ], [ %68, %76 ]
  %79 = load ptr, ptr %13, align 8, !tbaa !25
  %80 = icmp eq ptr %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = load ptr, ptr %79, align 8, !tbaa !236
  %83 = icmp eq ptr %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %82(ptr noundef nonnull align 8 dereferenceable(24) %85, ptr noundef nonnull align 8 dereferenceable(24) %85, i32 noundef 2)
          to label %86 unwind label %97

86:                                               ; preds = %84, %81
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %87

87:                                               ; preds = %86, %77, %63
  %88 = phi { ptr, i32 } [ %64, %63 ], [ %78, %77 ], [ %78, %86 ]
  %89 = load ptr, ptr %14, align 8, !tbaa !25
  %90 = icmp eq ptr %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = load ptr, ptr %89, align 8, !tbaa !236
  %93 = icmp eq ptr %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  invoke void %92(ptr noundef nonnull align 8 dereferenceable(24) %95, ptr noundef nonnull align 8 dereferenceable(24) %95, i32 noundef 2)
          to label %96 unwind label %97

96:                                               ; preds = %91, %94, %87
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  resume { ptr, i32 } %88

97:                                               ; preds = %94, %84, %74
  %98 = landingpad { ptr, i32 }
          catch ptr null
  %99 = extractvalue { ptr, i32 } %98, 0
  call void @__clang_call_terminate(ptr %99) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSG_(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.dealii::TriaActiveIterator", align 8
  %9 = alloca %"class.dealii::TriaActiveIterator", align 8
  %10 = alloca %"class.dealii::TriaRawIterator", align 8
  %11 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %12 = alloca %"class.dealii::Threads::Thread", align 16
  %13 = alloca %"class.dealii::Threads::internal::fun_encapsulator.36", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %15 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #19
  %16 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %6, i64 0, i32 1
  store ptr %6, ptr %16, align 8, !tbaa !10
  store ptr %6, ptr %6, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %6, i64 0, i32 1
  store i64 0, ptr %17, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %8, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %18 unwind label %41

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %10, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %19 unwind label %43

19:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  store ptr %22, ptr %20, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %15)
          to label %23 unwind label %43

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #19
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  %27 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.boost::shared_ptr", ptr %12, i64 0, i32 1
  %31 = zext i32 %15 to i64
  br label %47

32:                                               ; preds = %101, %23
  %33 = load ptr, ptr %6, align 8, !tbaa !13
  %34 = icmp eq ptr %33, %6
  br i1 %34, label %120, label %35

35:                                               ; preds = %32, %38
  %36 = phi ptr [ %39, %38 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.std::_List_node", ptr %36, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %37)
          to label %38 unwind label %153

38:                                               ; preds = %35
  %39 = load ptr, ptr %36, align 8, !tbaa !13
  %40 = icmp eq ptr %39, %6
  br i1 %40, label %120, label %35

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %45

43:                                               ; preds = %19, %18
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  br label %160

47:                                               ; preds = %25, %101
  %48 = phi i64 [ 0, %25 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !275)
  store ptr null, ptr %13, align 8, !tbaa !25, !alias.scope !275
  %49 = load ptr, ptr @_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable, align 8, !tbaa !278, !noalias !275
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %52 unwind label %104

52:                                               ; preds = %51, %47
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE, ptr %26, align 8, !tbaa !30, !alias.scope !275
  store ptr @_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable, ptr %13, align 8, !tbaa !25, !alias.scope !275
  %53 = load ptr, ptr %7, align 8, !tbaa !31
  %54 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  store ptr %56, ptr %27, align 8, !tbaa !17
  %57 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48, i32 1
  %58 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %57, i64 16, i1 false)
  store ptr %59, ptr %29, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %12, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef %4, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %11)
          to label %60 unwind label %106

60:                                               ; preds = %52
  %61 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %62 unwind label %108

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::_List_node", ptr %61, i64 0, i32 1
  %64 = load <2 x ptr>, ptr %12, align 16, !tbaa !33
  store <2 x ptr> %64, ptr %63, align 8, !tbaa !33
  %65 = extractelement <2 x ptr> %64, i64 1
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %65, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !34
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %68, align 8, !tbaa !34
  br label %71

71:                                               ; preds = %67, %62
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %61, ptr noundef nonnull %6) #19
  %72 = load i64, ptr %17, align 8, !tbaa !36
  %73 = add i64 %72, 1
  store i64 %73, ptr %17, align 8, !tbaa !36
  %74 = load ptr, ptr %30, align 8, !tbaa !39
  %75 = icmp eq ptr %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !34
  %79 = add nsw i64 %78, -1
  store i64 %79, ptr %77, align 8, !tbaa !34
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = load ptr, ptr %74, align 8, !tbaa !41
  %83 = getelementptr inbounds ptr, ptr %82, i64 2
  %84 = load ptr, ptr %83, align 8
  invoke void %84(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %85 unwind label %106

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !43
  %88 = add nsw i64 %87, -1
  store i64 %88, ptr %86, align 8, !tbaa !43
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load ptr, ptr %74, align 8, !tbaa !41
  %92 = getelementptr inbounds ptr, ptr %91, i64 3
  %93 = load ptr, ptr %92, align 8
  invoke void %93(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %94 unwind label %106

94:                                               ; preds = %85, %76, %71, %90
  %95 = load ptr, ptr %13, align 8, !tbaa !25
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %95, align 8, !tbaa !278
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  invoke void %98(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %101 unwind label %104

101:                                              ; preds = %97, %100, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  %102 = add nuw nsw i64 %48, 1
  %103 = icmp eq i64 %102, %31
  br i1 %103, label %32, label %47

104:                                              ; preds = %100, %51
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %118

106:                                              ; preds = %90, %81, %52
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %110

108:                                              ; preds = %60
  %109 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %12)
          to label %110 unwind label %163

110:                                              ; preds = %108, %106
  %111 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ]
  %112 = load ptr, ptr %13, align 8, !tbaa !25
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load ptr, ptr %112, align 8, !tbaa !278
  %116 = icmp eq ptr %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  invoke void %115(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %118 unwind label %163

118:                                              ; preds = %114, %117, %110, %104
  %119 = phi { ptr, i32 } [ %105, %104 ], [ %111, %110 ], [ %111, %117 ], [ %111, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  br label %155

120:                                              ; preds = %38, %32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %121 = load ptr, ptr %7, align 8, !tbaa !31
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef nonnull %121) #21
  br label %124

124:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  %125 = load ptr, ptr %6, align 8, !tbaa !13
  %126 = icmp eq ptr %125, %6
  br i1 %126, label %152, label %127

127:                                              ; preds = %124, %150
  %128 = phi ptr [ %129, %150 ], [ %125, %124 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = getelementptr inbounds %"struct.std::_List_node", ptr %128, i64 0, i32 1, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !34
  %136 = add nsw i64 %135, -1
  store i64 %136, ptr %134, align 8, !tbaa !34
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load ptr, ptr %131, align 8, !tbaa !41
  %140 = getelementptr inbounds ptr, ptr %139, i64 2
  %141 = load ptr, ptr %140, align 8
  call void %141(ptr noundef nonnull align 8 dereferenceable(24) %131)
  %142 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !43
  %144 = add nsw i64 %143, -1
  store i64 %144, ptr %142, align 8, !tbaa !43
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %131, align 8, !tbaa !41
  %148 = getelementptr inbounds ptr, ptr %147, i64 3
  %149 = load ptr, ptr %148, align 8
  call void %149(ptr noundef nonnull align 8 dereferenceable(24) %131)
  br label %150

150:                                              ; preds = %146, %138, %133, %127
  call void @_ZdlPv(ptr noundef nonnull %128) #21
  %151 = icmp eq ptr %129, %6
  br i1 %151, label %152, label %127

152:                                              ; preds = %150, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  ret void

153:                                              ; preds = %35
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %118
  %156 = phi { ptr, i32 } [ %119, %118 ], [ %154, %153 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %157 = load ptr, ptr %7, align 8, !tbaa !31
  %158 = icmp eq ptr %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef nonnull %157) #21
  br label %160

160:                                              ; preds = %159, %155, %45
  %161 = phi { ptr, i32 } [ %46, %45 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %162 unwind label %163

162:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  resume { ptr, i32 } %161

163:                                              ; preds = %117, %160, %108
  %164 = landingpad { ptr, i32 }
          catch ptr null
  %165 = extractvalue { ptr, i32 } %164, 0
  call void @__clang_call_terminate(ptr %165) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 1 dereferenceable(1) %6) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::FEValues", align 8
  %9 = alloca %"class.dealii::FullMatrix.282", align 8
  %10 = alloca %"class.std::vector.92", align 8
  %11 = alloca %"class.std::vector.258", align 8
  %12 = alloca %"class.dealii::Vector", align 8
  %13 = alloca %"class.std::allocator.260", align 1
  %14 = alloca %"class.dealii::TriaActiveIterator", align 8
  %15 = icmp eq ptr %4, null
  %16 = select i1 %15, i32 33, i32 49
  call void @llvm.lifetime.start.p0(i64 776, ptr nonnull %8) #19
  %17 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !63
  call void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776) %8, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(728) %18, ptr noundef nonnull align 8 dereferenceable(128) %2, i32 noundef %16)
  %19 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !65
  %21 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !127
  %23 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !63
  %25 = getelementptr inbounds i8, ptr %24, i64 116
  %26 = load i32, ptr %25, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9) #19
  invoke void @_ZN6dealii10FullMatrixIfEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %9, i32 noundef %20, i32 noundef %20)
          to label %27 unwind label %197

27:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  %28 = zext i32 %22 to i64
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %37

31:                                               ; preds = %27
  %32 = shl nuw nsw i64 %28, 3
  %33 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %32) #20
          to label %34 unwind label %199

34:                                               ; preds = %31
  store ptr %33, ptr %10, align 8, !tbaa !131
  %35 = getelementptr inbounds double, ptr %33, i64 %28
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %33, i8 0, i64 %32, i1 false), !tbaa !133
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi ptr [ null, %30 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 1
  store ptr %38, ptr %39, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %12) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %40 unwind label %201

40:                                               ; preds = %37
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %41 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, i8 0, i64 16, i1 false)
  %42 = icmp eq i32 %26, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %40
  %44 = zext i32 %26 to i64
  %45 = shl nuw nsw i64 %44, 3
  %46 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %45) #20
          to label %47 unwind label %50

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %49 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 2
  store ptr %46, ptr %48, align 8, !tbaa !136
  store i32 %26, ptr %49, align 4, !tbaa !138
  store i32 %26, ptr %41, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %46, i8 0, i64 %45, i1 false), !tbaa !133
  br label %55

50:                                               ; preds = %43
  %51 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %205 unwind label %52

52:                                               ; preds = %50
  %53 = landingpad { ptr, i32 }
          catch ptr null
  %54 = extractvalue { ptr, i32 } %53, 0
  call void @__clang_call_terminate(ptr %54) #22
  unreachable

55:                                               ; preds = %47, %40
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %11, i64 noundef %28, ptr noundef nonnull align 8 dereferenceable(88) %12, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %56 unwind label %203

56:                                               ; preds = %55
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %57 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !136
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  call void @_ZdaPv(ptr noundef nonnull %58) #21
  store ptr null, ptr %57, align 8, !tbaa !136
  br label %61

61:                                               ; preds = %60, %56
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %62 unwind label %201

62:                                               ; preds = %61
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  %63 = zext i32 %20 to i64
  %64 = icmp eq i32 %20, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = shl nuw nsw i64 %63, 2
  %67 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %66) #20
          to label %68 unwind label %207

68:                                               ; preds = %65
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %67, i8 0, i64 %66, i1 false), !tbaa !59
  %69 = getelementptr inbounds i32, ptr %67, i64 %63
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi ptr [ null, %62 ], [ %67, %68 ]
  %72 = phi ptr [ null, %62 ], [ %69, %68 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  %73 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %5, i64 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %75 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  store ptr %74, ptr %75, align 8, !tbaa !17
  %76 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %5, i64 0, i32 1
  %77 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %14, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i32, ptr %77, align 4, !tbaa !61
  %80 = load i32, ptr %78, align 4, !tbaa !61
  %81 = icmp ne i32 %79, %80
  %82 = load i32, ptr %14, align 8
  %83 = load i32, ptr %76, align 8
  %84 = icmp ne i32 %82, %83
  %85 = select i1 %81, i1 true, i1 %84
  br i1 %85, label %86, label %1650

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %9, i64 0, i32 3
  %88 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %9, i64 0, i32 3, i32 0, i32 0, i64 1
  %89 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %9, i64 0, i32 1
  %90 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %91 = getelementptr inbounds i8, ptr %8, i64 312
  %92 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 2
  %93 = getelementptr inbounds i8, ptr %8, i64 216
  %94 = getelementptr inbounds i8, ptr %8, i64 480
  %95 = getelementptr inbounds i8, ptr %8, i64 144
  %96 = getelementptr inbounds i8, ptr %8, i64 160
  %97 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 12
  %98 = icmp eq i32 %26, 1
  %99 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 19
  %100 = icmp eq ptr %72, %71
  %101 = ptrtoint ptr %71 to i64
  %102 = ptrtoint ptr %72 to i64
  %103 = sub i64 %102, %101
  %104 = ashr exact i64 %103, 2
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %14, i64 0, i32 2
  %107 = zext i32 %26 to i64
  %108 = add nsw i64 %63, -1
  %109 = add nsw i64 %63, -1
  %110 = shl nuw nsw i64 %63, 3
  %111 = shl nuw nsw i64 %63, 2
  %112 = add nsw i64 %63, -1
  %113 = add nsw i64 %63, -1
  %114 = icmp ult i32 %20, 8
  %115 = trunc i64 %113 to i32
  %116 = icmp ugt i64 %113, 4294967295
  %117 = trunc i64 %113 to i32
  %118 = and i64 %63, 4294967292
  %119 = icmp eq i64 %118, %63
  %120 = icmp ult i32 %20, 8
  %121 = trunc i64 %112 to i32
  %122 = icmp ugt i64 %112, 4294967295
  %123 = trunc i64 %112 to i32
  %124 = and i64 %63, 4294967292
  %125 = icmp eq i64 %124, %63
  %126 = icmp ult i32 %20, 20
  %127 = trunc i64 %109 to i32
  %128 = icmp ugt i64 %109, 4294967295
  %129 = trunc i64 %109 to i32
  %130 = and i64 %63, 4294967292
  %131 = icmp eq i64 %130, %63
  %132 = icmp ult i32 %20, 16
  %133 = trunc i64 %108 to i32
  %134 = icmp ugt i64 %108, 4294967295
  %135 = trunc i64 %108 to i32
  %136 = and i64 %63, 4294967280
  %137 = icmp eq i64 %136, %63
  %138 = and i64 %63, 1
  %139 = icmp eq i64 %138, 0
  %140 = sub nsw i64 0, %63
  %141 = or i1 %64, %42
  br label %142

142:                                              ; preds = %86, %1644
  invoke void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776) %8, ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %143 unwind label %211

143:                                              ; preds = %142
  %144 = load i32, ptr %87, align 4, !tbaa !59
  %145 = load i32, ptr %88, align 8, !tbaa !59
  %146 = mul i32 %145, %144
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %143
  %149 = load ptr, ptr %89, align 8, !tbaa !280
  %150 = zext i32 %146 to i64
  %151 = shl nuw nsw i64 %150, 2
  call void @llvm.memset.p0.i64(ptr align 4 %149, i8 0, i64 %151, i1 false), !tbaa !282
  br label %152

152:                                              ; preds = %143, %148
  %153 = load ptr, ptr %75, align 8, !tbaa !17
  %154 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %153, i64 0, i32 2
  %155 = load ptr, ptr %154, align 8, !tbaa !63
  %156 = getelementptr inbounds i8, ptr %155, i64 112
  %157 = load i32, ptr %156, align 8, !tbaa !141
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %181, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %153, i64 0, i32 3
  %161 = load ptr, ptr %160, align 8, !tbaa !142
  %162 = load i32, ptr %14, align 8, !tbaa !60
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds ptr, ptr %161, i64 %163
  %165 = load ptr, ptr %164, align 8, !tbaa !33
  %166 = load ptr, ptr %165, align 8, !tbaa !144
  %167 = load i32, ptr %77, align 4, !tbaa !61
  %168 = mul i32 %167, %157
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i32, ptr %166, i64 %169
  br label %171

171:                                              ; preds = %171, %159
  %172 = phi i64 [ 0, %159 ], [ %176, %171 ]
  %173 = phi ptr [ %170, %159 ], [ %177, %171 ]
  %174 = load i32, ptr %173, align 4, !tbaa !59
  %175 = getelementptr inbounds i32, ptr %71, i64 %172
  store i32 %174, ptr %175, align 4, !tbaa !59
  %176 = add nuw nsw i64 %172, 1
  %177 = getelementptr inbounds i32, ptr %173, i64 1
  %178 = load i32, ptr %156, align 8, !tbaa !141
  %179 = zext i32 %178 to i64
  %180 = icmp ult i64 %176, %179
  br i1 %180, label %171, label %181

181:                                              ; preds = %171, %152
  br i1 %15, label %914, label %182

182:                                              ; preds = %181
  %183 = load i32, ptr %90, align 8, !tbaa !145
  %184 = icmp eq i32 %183, 1
  %185 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %184, label %186, label %408

186:                                              ; preds = %182
  %187 = getelementptr inbounds ptr, ptr %185, i64 6
  %188 = load ptr, ptr %187, align 8
  invoke void %188(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
          to label %189 unwind label %211

189:                                              ; preds = %186
  br i1 %29, label %1517, label %190

190:                                              ; preds = %189
  %191 = load ptr, ptr %93, align 8, !tbaa !131
  %192 = load ptr, ptr %23, align 8
  %193 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %192, i64 0, i32 2
  %194 = load ptr, ptr %95, align 8
  %195 = load i32, ptr %96, align 8
  %196 = icmp ne i32 %195, 1
  br label %214

197:                                              ; preds = %1685, %7
  %198 = landingpad { ptr, i32 }
          cleanup
  br label %1734

199:                                              ; preds = %31
  %200 = landingpad { ptr, i32 }
          cleanup
  br label %1727

201:                                              ; preds = %61, %37
  %202 = landingpad { ptr, i32 }
          cleanup
  br label %205

203:                                              ; preds = %55
  %204 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %12)
          to label %205 unwind label %1744

205:                                              ; preds = %201, %50, %203
  %206 = phi { ptr, i32 } [ %204, %203 ], [ %202, %201 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  br label %1722

207:                                              ; preds = %65
  %208 = landingpad { ptr, i32 }
          cleanup
  br label %1698

209:                                              ; preds = %1518
  %210 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  br label %1696

211:                                              ; preds = %408, %186, %142
  %212 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %213 = icmp eq ptr %71, null
  br i1 %213, label %1698, label %1696

214:                                              ; preds = %190, %405
  %215 = phi i64 [ 0, %190 ], [ %406, %405 ]
  %216 = trunc i64 %215 to i32
  %217 = getelementptr inbounds double, ptr %191, i64 %215
  %218 = load double, ptr %217, align 8, !tbaa !133
  br i1 %64, label %405, label %219

219:                                              ; preds = %214
  %220 = load i8, ptr %193, align 4, !tbaa !148, !range !182, !noundef !183
  %221 = icmp eq i8 %220, 0
  %222 = load ptr, ptr %94, align 8
  %223 = load ptr, ptr %97, align 8, !tbaa !184
  %224 = trunc i64 %215 to i32
  br i1 %98, label %225, label %326

225:                                              ; preds = %219
  %226 = xor i32 %216, -1
  %227 = icmp ult i32 %226, %123
  %228 = insertelement <4 x double> poison, double %218, i64 0
  %229 = shufflevector <4 x double> %228, <4 x double> poison, <4 x i32> zeroinitializer
  br label %230

230:                                              ; preds = %225, %323
  %231 = phi i64 [ %324, %323 ], [ 0, %225 ]
  %232 = trunc i64 %231 to i32
  br i1 %221, label %233, label %236

233:                                              ; preds = %230
  %234 = getelementptr inbounds i32, ptr %222, i64 %231
  %235 = load i32, ptr %234, align 4, !tbaa !59
  br label %236

236:                                              ; preds = %233, %230
  %237 = phi i32 [ %235, %233 ], [ %232, %230 ]
  %238 = mul i32 %195, %237
  %239 = add i32 %238, %224
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds double, ptr %194, i64 %240
  %242 = load double, ptr %241, align 8, !tbaa !133
  %243 = load ptr, ptr %94, align 8
  %244 = load ptr, ptr %10, align 8
  %245 = getelementptr inbounds double, ptr %244, i64 %215
  %246 = load ptr, ptr %89, align 8
  %247 = load i32, ptr %88, align 8
  %248 = mul i32 %247, %232
  %249 = load double, ptr %245, align 8, !tbaa !133
  br i1 %221, label %283, label %250

250:                                              ; preds = %236
  br i1 %120, label %281, label %251

251:                                              ; preds = %250
  %252 = xor i32 %248, -1
  %253 = icmp ult i32 %252, %121
  %254 = or i1 %253, %122
  %255 = or i1 %254, %196
  %256 = or i1 %227, %255
  br i1 %256, label %281, label %257

257:                                              ; preds = %251
  %258 = insertelement <4 x double> poison, double %242, i64 0
  %259 = shufflevector <4 x double> %258, <4 x double> poison, <4 x i32> zeroinitializer
  %260 = insertelement <4 x double> poison, double %249, i64 0
  %261 = shufflevector <4 x double> %260, <4 x double> poison, <4 x i32> zeroinitializer
  br label %262

262:                                              ; preds = %262, %257
  %263 = phi i64 [ 0, %257 ], [ %278, %262 ]
  %264 = trunc i64 %263 to i32
  %265 = add i64 %263, %215
  %266 = and i64 %265, 4294967295
  %267 = getelementptr inbounds double, ptr %194, i64 %266
  %268 = load <4 x double>, ptr %267, align 8, !tbaa !133
  %269 = fmul <4 x double> %259, %268
  %270 = fmul <4 x double> %229, %269
  %271 = add i32 %248, %264
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds float, ptr %246, i64 %272
  %274 = load <4 x float>, ptr %273, align 4, !tbaa !282
  %275 = fpext <4 x float> %274 to <4 x double>
  %276 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %270, <4 x double> %261, <4 x double> %275)
  %277 = fptrunc <4 x double> %276 to <4 x float>
  store <4 x float> %277, ptr %273, align 4, !tbaa !282
  %278 = add nuw i64 %263, 4
  %279 = icmp eq i64 %278, %124
  br i1 %279, label %280, label %262, !llvm.loop !284

280:                                              ; preds = %262
  br i1 %125, label %323, label %281

281:                                              ; preds = %251, %250, %280
  %282 = phi i64 [ 0, %251 ], [ 0, %250 ], [ %124, %280 ]
  br label %304

283:                                              ; preds = %236, %283
  %284 = phi i64 [ %302, %283 ], [ 0, %236 ]
  %285 = getelementptr inbounds i32, ptr %243, i64 %284
  %286 = load i32, ptr %285, align 4, !tbaa !59
  %287 = mul i32 %286, %195
  %288 = add i32 %287, %224
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds double, ptr %194, i64 %289
  %291 = load double, ptr %290, align 8, !tbaa !133
  %292 = fmul double %242, %291
  %293 = fmul double %218, %292
  %294 = trunc i64 %284 to i32
  %295 = add i32 %248, %294
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds float, ptr %246, i64 %296
  %298 = load float, ptr %297, align 4, !tbaa !282
  %299 = fpext float %298 to double
  %300 = call double @llvm.fmuladd.f64(double %293, double %249, double %299)
  %301 = fptrunc double %300 to float
  store float %301, ptr %297, align 4, !tbaa !282
  %302 = add nuw nsw i64 %284, 1
  %303 = icmp eq i64 %302, %63
  br i1 %303, label %323, label %283

304:                                              ; preds = %281, %304
  %305 = phi i64 [ %321, %304 ], [ %282, %281 ]
  %306 = trunc i64 %305 to i32
  %307 = mul i32 %195, %306
  %308 = add i32 %307, %224
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds double, ptr %194, i64 %309
  %311 = load double, ptr %310, align 8, !tbaa !133
  %312 = fmul double %242, %311
  %313 = fmul double %218, %312
  %314 = add i32 %248, %306
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds float, ptr %246, i64 %315
  %317 = load float, ptr %316, align 4, !tbaa !282
  %318 = fpext float %317 to double
  %319 = call double @llvm.fmuladd.f64(double %313, double %249, double %318)
  %320 = fptrunc double %319 to float
  store float %320, ptr %316, align 4, !tbaa !282
  %321 = add nuw nsw i64 %305, 1
  %322 = icmp eq i64 %321, %63
  br i1 %322, label %323, label %304, !llvm.loop !285

323:                                              ; preds = %304, %283, %280
  %324 = add nuw nsw i64 %231, 1
  %325 = icmp eq i64 %324, %63
  br i1 %325, label %405, label %230

326:                                              ; preds = %219, %374
  %327 = phi i64 [ %375, %374 ], [ 0, %219 ]
  %328 = trunc i64 %327 to i32
  br i1 %221, label %329, label %332

329:                                              ; preds = %326
  %330 = getelementptr inbounds i32, ptr %222, i64 %327
  %331 = load i32, ptr %330, align 4, !tbaa !59
  br label %332

332:                                              ; preds = %329, %326
  %333 = phi i32 [ %331, %329 ], [ %328, %326 ]
  %334 = mul i32 %195, %333
  %335 = add i32 %334, %224
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds double, ptr %194, i64 %336
  %338 = load double, ptr %337, align 8, !tbaa !133
  %339 = getelementptr inbounds %"struct.std::pair.263", ptr %223, i64 %327
  %340 = load i64, ptr %339, align 4
  %341 = trunc i64 %340 to i32
  %342 = load ptr, ptr %94, align 8
  %343 = load ptr, ptr %10, align 8
  %344 = getelementptr inbounds double, ptr %343, i64 %215
  %345 = load ptr, ptr %89, align 8
  %346 = load i32, ptr %88, align 8
  %347 = mul i32 %346, %328
  br i1 %221, label %377, label %348

348:                                              ; preds = %332, %371
  %349 = phi i64 [ %372, %371 ], [ 0, %332 ]
  %350 = getelementptr inbounds %"struct.std::pair.263", ptr %223, i64 %349
  %351 = load i64, ptr %350, align 4
  %352 = trunc i64 %351 to i32
  %353 = icmp eq i32 %352, %341
  br i1 %353, label %354, label %371

354:                                              ; preds = %348
  %355 = trunc i64 %349 to i32
  %356 = mul i32 %195, %355
  %357 = add i32 %356, %224
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds double, ptr %194, i64 %358
  %360 = load double, ptr %359, align 8, !tbaa !133
  %361 = fmul double %338, %360
  %362 = fmul double %218, %361
  %363 = load double, ptr %344, align 8, !tbaa !133
  %364 = add i32 %347, %355
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds float, ptr %345, i64 %365
  %367 = load float, ptr %366, align 4, !tbaa !282
  %368 = fpext float %367 to double
  %369 = call double @llvm.fmuladd.f64(double %362, double %363, double %368)
  %370 = fptrunc double %369 to float
  store float %370, ptr %366, align 4, !tbaa !282
  br label %371

371:                                              ; preds = %354, %348
  %372 = add nuw nsw i64 %349, 1
  %373 = icmp eq i64 %372, %63
  br i1 %373, label %374, label %348

374:                                              ; preds = %371, %402
  %375 = add nuw nsw i64 %327, 1
  %376 = icmp eq i64 %375, %63
  br i1 %376, label %405, label %326

377:                                              ; preds = %332, %402
  %378 = phi i64 [ %403, %402 ], [ 0, %332 ]
  %379 = getelementptr inbounds %"struct.std::pair.263", ptr %223, i64 %378
  %380 = load i64, ptr %379, align 4
  %381 = trunc i64 %380 to i32
  %382 = icmp eq i32 %381, %341
  br i1 %382, label %383, label %402

383:                                              ; preds = %377
  %384 = getelementptr inbounds i32, ptr %342, i64 %378
  %385 = load i32, ptr %384, align 4, !tbaa !59
  %386 = mul i32 %385, %195
  %387 = add i32 %386, %224
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds double, ptr %194, i64 %388
  %390 = load double, ptr %389, align 8, !tbaa !133
  %391 = fmul double %338, %390
  %392 = fmul double %218, %391
  %393 = load double, ptr %344, align 8, !tbaa !133
  %394 = trunc i64 %378 to i32
  %395 = add i32 %347, %394
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds float, ptr %345, i64 %396
  %398 = load float, ptr %397, align 4, !tbaa !282
  %399 = fpext float %398 to double
  %400 = call double @llvm.fmuladd.f64(double %392, double %393, double %399)
  %401 = fptrunc double %400 to float
  store float %401, ptr %397, align 4, !tbaa !282
  br label %402

402:                                              ; preds = %383, %377
  %403 = add nuw nsw i64 %378, 1
  %404 = icmp eq i64 %403, %63
  br i1 %404, label %374, label %377

405:                                              ; preds = %374, %323, %214
  %406 = add nuw nsw i64 %215, 1
  %407 = icmp eq i64 %406, %28
  br i1 %407, label %1517, label %214

408:                                              ; preds = %182
  %409 = getelementptr inbounds ptr, ptr %185, i64 7
  %410 = load ptr, ptr %409, align 8
  invoke void %410(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %11)
          to label %411 unwind label %211

411:                                              ; preds = %408
  %412 = load i8, ptr %92, align 4, !tbaa !148, !range !182, !noundef !183
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %644, label %414

414:                                              ; preds = %411
  br i1 %29, label %1517, label %415

415:                                              ; preds = %414
  %416 = load ptr, ptr %93, align 8, !tbaa !131
  %417 = load ptr, ptr %95, align 8
  %418 = load i32, ptr %96, align 8
  br i1 %64, label %1517, label %419

419:                                              ; preds = %415
  %420 = load ptr, ptr %23, align 8
  %421 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %420, i64 0, i32 2
  %422 = load i8, ptr %421, align 4, !tbaa !148, !range !182, !noundef !183
  %423 = icmp eq i8 %422, 0
  %424 = load ptr, ptr %97, align 8, !tbaa !184
  %425 = icmp ne i32 %418, 1
  br label %426

426:                                              ; preds = %487, %419
  %427 = phi i64 [ %488, %487 ], [ 0, %419 ]
  %428 = trunc i64 %427 to i32
  %429 = getelementptr inbounds double, ptr %416, i64 %427
  %430 = load double, ptr %429, align 8, !tbaa !133
  %431 = load ptr, ptr %94, align 8
  %432 = trunc i64 %427 to i32
  br i1 %98, label %433, label %486

433:                                              ; preds = %426
  %434 = xor i32 %428, -1
  %435 = icmp ult i32 %434, %117
  %436 = insertelement <4 x double> poison, double %430, i64 0
  %437 = shufflevector <4 x double> %436, <4 x double> poison, <4 x i32> zeroinitializer
  br label %490

438:                                              ; preds = %486, %455
  %439 = phi i64 [ %456, %455 ], [ 0, %486 ]
  %440 = trunc i64 %439 to i32
  %441 = mul i32 %418, %440
  %442 = add i32 %441, %432
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds double, ptr %417, i64 %443
  %445 = load double, ptr %444, align 8, !tbaa !133
  %446 = getelementptr inbounds %"struct.std::pair.263", ptr %424, i64 %439
  %447 = load i64, ptr %446, align 4
  %448 = trunc i64 %447 to i32
  %449 = load ptr, ptr %11, align 8
  %450 = getelementptr inbounds %"class.dealii::Vector", ptr %449, i64 %427, i32 3
  %451 = and i64 %447, 4294967295
  %452 = load ptr, ptr %89, align 8
  %453 = load i32, ptr %88, align 8
  %454 = mul i32 %453, %440
  br label %458

455:                                              ; preds = %483
  %456 = add nuw nsw i64 %439, 1
  %457 = icmp eq i64 %456, %63
  br i1 %457, label %487, label %438

458:                                              ; preds = %483, %438
  %459 = phi i64 [ %484, %483 ], [ 0, %438 ]
  %460 = getelementptr inbounds %"struct.std::pair.263", ptr %424, i64 %459
  %461 = load i64, ptr %460, align 4
  %462 = trunc i64 %461 to i32
  %463 = icmp eq i32 %462, %448
  br i1 %463, label %464, label %483

464:                                              ; preds = %458
  %465 = trunc i64 %459 to i32
  %466 = mul i32 %418, %465
  %467 = add i32 %466, %432
  %468 = zext i32 %467 to i64
  %469 = getelementptr inbounds double, ptr %417, i64 %468
  %470 = load double, ptr %469, align 8, !tbaa !133
  %471 = fmul double %445, %470
  %472 = fmul double %430, %471
  %473 = load ptr, ptr %450, align 8, !tbaa !136
  %474 = getelementptr inbounds double, ptr %473, i64 %451
  %475 = load double, ptr %474, align 8, !tbaa !133
  %476 = add i32 %454, %465
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds float, ptr %452, i64 %477
  %479 = load float, ptr %478, align 4, !tbaa !282
  %480 = fpext float %479 to double
  %481 = call double @llvm.fmuladd.f64(double %472, double %475, double %480)
  %482 = fptrunc double %481 to float
  store float %482, ptr %478, align 4, !tbaa !282
  br label %483

483:                                              ; preds = %464, %458
  %484 = add nuw nsw i64 %459, 1
  %485 = icmp eq i64 %484, %63
  br i1 %485, label %455, label %458

486:                                              ; preds = %426
  br i1 %423, label %567, label %438

487:                                              ; preds = %455, %617, %620
  %488 = add nuw nsw i64 %427, 1
  %489 = icmp eq i64 %488, %28
  br i1 %489, label %1517, label %426

490:                                              ; preds = %433, %620
  %491 = phi i64 [ %621, %620 ], [ 0, %433 ]
  %492 = trunc i64 %491 to i32
  br i1 %423, label %493, label %496

493:                                              ; preds = %490
  %494 = getelementptr inbounds i32, ptr %431, i64 %491
  %495 = load i32, ptr %494, align 4, !tbaa !59
  br label %496

496:                                              ; preds = %493, %490
  %497 = phi i32 [ %495, %493 ], [ %492, %490 ]
  %498 = mul i32 %418, %497
  %499 = add i32 %498, %432
  %500 = zext i32 %499 to i64
  %501 = getelementptr inbounds double, ptr %417, i64 %500
  %502 = load double, ptr %501, align 8, !tbaa !133
  %503 = getelementptr inbounds %"struct.std::pair.263", ptr %424, i64 %491
  %504 = load i64, ptr %503, align 4
  %505 = load ptr, ptr %94, align 8
  %506 = load ptr, ptr %11, align 8
  %507 = getelementptr inbounds %"class.dealii::Vector", ptr %506, i64 %427, i32 3
  %508 = and i64 %504, 4294967295
  %509 = load ptr, ptr %89, align 8
  %510 = load i32, ptr %88, align 8
  %511 = mul i32 %510, %492
  %512 = load ptr, ptr %507, align 8, !tbaa !136
  %513 = getelementptr inbounds double, ptr %512, i64 %508
  %514 = load double, ptr %513, align 8, !tbaa !133
  br i1 %423, label %623, label %515

515:                                              ; preds = %496
  br i1 %114, label %546, label %516

516:                                              ; preds = %515
  %517 = xor i32 %511, -1
  %518 = icmp ult i32 %517, %115
  %519 = or i1 %518, %116
  %520 = or i1 %519, %425
  %521 = or i1 %435, %520
  br i1 %521, label %546, label %522

522:                                              ; preds = %516
  %523 = insertelement <4 x double> poison, double %502, i64 0
  %524 = shufflevector <4 x double> %523, <4 x double> poison, <4 x i32> zeroinitializer
  %525 = insertelement <4 x double> poison, double %514, i64 0
  %526 = shufflevector <4 x double> %525, <4 x double> poison, <4 x i32> zeroinitializer
  br label %527

527:                                              ; preds = %527, %522
  %528 = phi i64 [ 0, %522 ], [ %543, %527 ]
  %529 = trunc i64 %528 to i32
  %530 = add i64 %528, %427
  %531 = and i64 %530, 4294967295
  %532 = getelementptr inbounds double, ptr %417, i64 %531
  %533 = load <4 x double>, ptr %532, align 8, !tbaa !133
  %534 = fmul <4 x double> %524, %533
  %535 = fmul <4 x double> %437, %534
  %536 = add i32 %511, %529
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds float, ptr %509, i64 %537
  %539 = load <4 x float>, ptr %538, align 4, !tbaa !282
  %540 = fpext <4 x float> %539 to <4 x double>
  %541 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %535, <4 x double> %526, <4 x double> %540)
  %542 = fptrunc <4 x double> %541 to <4 x float>
  store <4 x float> %542, ptr %538, align 4, !tbaa !282
  %543 = add nuw i64 %528, 4
  %544 = icmp eq i64 %543, %118
  br i1 %544, label %545, label %527, !llvm.loop !286

545:                                              ; preds = %527
  br i1 %119, label %620, label %546

546:                                              ; preds = %516, %515, %545
  %547 = phi i64 [ 0, %516 ], [ 0, %515 ], [ %118, %545 ]
  br label %548

548:                                              ; preds = %546, %548
  %549 = phi i64 [ %565, %548 ], [ %547, %546 ]
  %550 = trunc i64 %549 to i32
  %551 = mul i32 %418, %550
  %552 = add i32 %551, %432
  %553 = zext i32 %552 to i64
  %554 = getelementptr inbounds double, ptr %417, i64 %553
  %555 = load double, ptr %554, align 8, !tbaa !133
  %556 = fmul double %502, %555
  %557 = fmul double %430, %556
  %558 = add i32 %511, %550
  %559 = zext i32 %558 to i64
  %560 = getelementptr inbounds float, ptr %509, i64 %559
  %561 = load float, ptr %560, align 4, !tbaa !282
  %562 = fpext float %561 to double
  %563 = call double @llvm.fmuladd.f64(double %557, double %514, double %562)
  %564 = fptrunc double %563 to float
  store float %564, ptr %560, align 4, !tbaa !282
  %565 = add nuw nsw i64 %549, 1
  %566 = icmp eq i64 %565, %63
  br i1 %566, label %620, label %548, !llvm.loop !287

567:                                              ; preds = %486, %617
  %568 = phi i64 [ %618, %617 ], [ 0, %486 ]
  %569 = getelementptr inbounds i32, ptr %431, i64 %568
  %570 = load i32, ptr %569, align 4, !tbaa !59
  %571 = mul i32 %418, %570
  %572 = add i32 %571, %432
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds double, ptr %417, i64 %573
  %575 = load double, ptr %574, align 8, !tbaa !133
  %576 = getelementptr inbounds %"struct.std::pair.263", ptr %424, i64 %568
  %577 = load i64, ptr %576, align 4
  %578 = trunc i64 %577 to i32
  %579 = load ptr, ptr %94, align 8
  %580 = load ptr, ptr %11, align 8
  %581 = getelementptr inbounds %"class.dealii::Vector", ptr %580, i64 %427, i32 3
  %582 = and i64 %577, 4294967295
  %583 = load ptr, ptr %89, align 8
  %584 = load i32, ptr %88, align 8
  %585 = trunc i64 %568 to i32
  %586 = mul i32 %584, %585
  br label %587

587:                                              ; preds = %614, %567
  %588 = phi i64 [ %615, %614 ], [ 0, %567 ]
  %589 = getelementptr inbounds %"struct.std::pair.263", ptr %424, i64 %588
  %590 = load i64, ptr %589, align 4
  %591 = trunc i64 %590 to i32
  %592 = icmp eq i32 %591, %578
  br i1 %592, label %593, label %614

593:                                              ; preds = %587
  %594 = getelementptr inbounds i32, ptr %579, i64 %588
  %595 = load i32, ptr %594, align 4, !tbaa !59
  %596 = mul i32 %595, %418
  %597 = add i32 %596, %432
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds double, ptr %417, i64 %598
  %600 = load double, ptr %599, align 8, !tbaa !133
  %601 = fmul double %575, %600
  %602 = fmul double %430, %601
  %603 = load ptr, ptr %581, align 8, !tbaa !136
  %604 = getelementptr inbounds double, ptr %603, i64 %582
  %605 = load double, ptr %604, align 8, !tbaa !133
  %606 = trunc i64 %588 to i32
  %607 = add i32 %586, %606
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds float, ptr %583, i64 %608
  %610 = load float, ptr %609, align 4, !tbaa !282
  %611 = fpext float %610 to double
  %612 = call double @llvm.fmuladd.f64(double %602, double %605, double %611)
  %613 = fptrunc double %612 to float
  store float %613, ptr %609, align 4, !tbaa !282
  br label %614

614:                                              ; preds = %593, %587
  %615 = add nuw nsw i64 %588, 1
  %616 = icmp eq i64 %615, %63
  br i1 %616, label %617, label %587

617:                                              ; preds = %614
  %618 = add nuw nsw i64 %568, 1
  %619 = icmp eq i64 %618, %63
  br i1 %619, label %487, label %567

620:                                              ; preds = %548, %623, %545
  %621 = add nuw nsw i64 %491, 1
  %622 = icmp eq i64 %621, %63
  br i1 %622, label %487, label %490

623:                                              ; preds = %496, %623
  %624 = phi i64 [ %642, %623 ], [ 0, %496 ]
  %625 = getelementptr inbounds i32, ptr %505, i64 %624
  %626 = load i32, ptr %625, align 4, !tbaa !59
  %627 = mul i32 %626, %418
  %628 = add i32 %627, %432
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds double, ptr %417, i64 %629
  %631 = load double, ptr %630, align 8, !tbaa !133
  %632 = fmul double %502, %631
  %633 = fmul double %430, %632
  %634 = trunc i64 %624 to i32
  %635 = add i32 %511, %634
  %636 = zext i32 %635 to i64
  %637 = getelementptr inbounds float, ptr %509, i64 %636
  %638 = load float, ptr %637, align 4, !tbaa !282
  %639 = fpext float %638 to double
  %640 = call double @llvm.fmuladd.f64(double %633, double %514, double %639)
  %641 = fptrunc double %640 to float
  store float %641, ptr %637, align 4, !tbaa !282
  %642 = add nuw nsw i64 %624, 1
  %643 = icmp eq i64 %642, %63
  br i1 %643, label %620, label %623

644:                                              ; preds = %411
  br i1 %29, label %1517, label %645

645:                                              ; preds = %644
  %646 = load ptr, ptr %93, align 8, !tbaa !131
  br i1 %64, label %1517, label %647

647:                                              ; preds = %645, %651
  %648 = phi i64 [ %652, %651 ], [ 0, %645 ]
  %649 = getelementptr inbounds double, ptr %646, i64 %648
  %650 = load double, ptr %649, align 8, !tbaa !133
  br i1 %42, label %651, label %654

651:                                              ; preds = %911, %647
  %652 = add nuw nsw i64 %648, 1
  %653 = icmp eq i64 %652, %28
  br i1 %653, label %1517, label %647

654:                                              ; preds = %647
  %655 = load ptr, ptr %99, align 8, !tbaa !205
  %656 = trunc i64 %648 to i32
  %657 = trunc i64 %648 to i32
  %658 = trunc i64 %648 to i32
  br label %659

659:                                              ; preds = %911, %654
  %660 = phi i64 [ %912, %911 ], [ 0, %654 ]
  %661 = getelementptr inbounds %"class.std::vector.126", ptr %655, i64 %660
  %662 = load ptr, ptr %661, align 8, !tbaa !54
  %663 = load ptr, ptr %23, align 8
  %664 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %663, i64 0, i32 2
  %665 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %663, i64 0, i32 20
  %666 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %663, i64 0, i32 19
  %667 = load ptr, ptr %94, align 8
  %668 = getelementptr inbounds i32, ptr %667, i64 %660
  %669 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %663, i64 0, i32 12
  %670 = load ptr, ptr %95, align 8
  %671 = load i32, ptr %96, align 8
  %672 = trunc i64 %660 to i32
  %673 = trunc i64 %660 to i32
  br label %674

674:                                              ; preds = %790, %659
  %675 = phi i64 [ %791, %790 ], [ 0, %659 ]
  %676 = trunc i64 %675 to i32
  %677 = lshr i64 %675, 6
  %678 = and i64 %677, 67108863
  %679 = getelementptr inbounds i64, ptr %662, i64 %678
  %680 = and i32 %676, 63
  %681 = and i64 %675, 63
  %682 = shl nuw i64 1, %681
  %683 = load i64, ptr %679, align 8, !tbaa !56
  %684 = and i64 %683, %682
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %790, label %686

686:                                              ; preds = %674
  %687 = load i8, ptr %664, align 4, !tbaa !148, !range !182, !noundef !183
  %688 = icmp eq i8 %687, 0
  br i1 %688, label %689, label %727

689:                                              ; preds = %686
  %690 = load ptr, ptr %665, align 8, !tbaa !144
  %691 = getelementptr inbounds i32, ptr %690, i64 %660
  %692 = load i32, ptr %691, align 4, !tbaa !59
  %693 = icmp eq i32 %692, 1
  br i1 %693, label %727, label %694

694:                                              ; preds = %689
  %695 = load ptr, ptr %666, align 8, !tbaa !205
  %696 = getelementptr inbounds %"class.std::vector.126", ptr %695, i64 %660
  %697 = load ptr, ptr %696, align 8, !tbaa !54
  %698 = getelementptr inbounds i64, ptr %697, i64 %678
  %699 = load i64, ptr %698, align 8, !tbaa !56
  %700 = and i64 %699, %682
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %744, label %702

702:                                              ; preds = %694
  %703 = load i32, ptr %668, align 4, !tbaa !59
  %704 = icmp eq i64 %675, 0
  br i1 %704, label %724, label %705

705:                                              ; preds = %702, %705
  %706 = phi i64 [ %713, %705 ], [ 0, %702 ]
  %707 = phi i32 [ %718, %705 ], [ 0, %702 ]
  %708 = phi ptr [ %717, %705 ], [ %697, %702 ]
  %709 = zext i32 %707 to i64
  %710 = load i64, ptr %708, align 8, !tbaa !56
  %711 = lshr i64 %710, %709
  %712 = and i64 %711, 1
  %713 = add nuw nsw i64 %712, %706
  %714 = add i32 %707, 1
  %715 = icmp eq i32 %707, 63
  %716 = zext i1 %715 to i64
  %717 = getelementptr inbounds i64, ptr %708, i64 %716
  %718 = select i1 %715, i32 0, i32 %714
  %719 = icmp ne ptr %717, %698
  %720 = icmp ne i32 %718, %680
  %721 = or i1 %720, %719
  br i1 %721, label %705, label %722

722:                                              ; preds = %705
  %723 = trunc i64 %713 to i32
  br label %724

724:                                              ; preds = %722, %702
  %725 = phi i32 [ 0, %702 ], [ %723, %722 ]
  %726 = add i32 %725, %703
  br label %735

727:                                              ; preds = %689, %686
  %728 = load ptr, ptr %669, align 8, !tbaa !184
  %729 = getelementptr inbounds %"struct.std::pair.263", ptr %728, i64 %660
  %730 = load i64, ptr %729, align 4
  %731 = and i64 %730, 4294967295
  %732 = icmp eq i64 %675, %731
  br i1 %732, label %733, label %742

733:                                              ; preds = %727
  %734 = load i32, ptr %668, align 4, !tbaa !59
  br label %735

735:                                              ; preds = %733, %724
  %736 = phi i32 [ %726, %724 ], [ %734, %733 ]
  %737 = mul i32 %671, %736
  %738 = add i32 %737, %656
  %739 = zext i32 %738 to i64
  %740 = getelementptr inbounds double, ptr %670, i64 %739
  %741 = load double, ptr %740, align 8, !tbaa !133
  br label %742

742:                                              ; preds = %735, %727
  %743 = phi double [ 0.000000e+00, %727 ], [ %741, %735 ]
  br i1 %688, label %744, label %793

744:                                              ; preds = %694, %742
  %745 = phi double [ %743, %742 ], [ 0.000000e+00, %694 ]
  br label %810

746:                                              ; preds = %787
  %747 = add nuw nsw i64 %794, 1
  %748 = icmp eq i64 %747, %63
  br i1 %748, label %790, label %793

749:                                              ; preds = %793, %787
  %750 = phi i32 [ 0, %793 ], [ %788, %787 ]
  %751 = lshr i32 %750, 6
  %752 = zext i32 %751 to i64
  %753 = getelementptr inbounds i64, ptr %796, i64 %752
  %754 = and i32 %750, 63
  %755 = zext i32 %754 to i64
  %756 = shl nuw i64 1, %755
  %757 = load i64, ptr %753, align 8, !tbaa !56
  %758 = and i64 %757, %756
  %759 = icmp eq i64 %758, 0
  br i1 %759, label %787, label %760

760:                                              ; preds = %749
  %761 = load ptr, ptr %669, align 8, !tbaa !184
  %762 = getelementptr inbounds %"struct.std::pair.263", ptr %761, i64 %794
  %763 = load i64, ptr %762, align 4
  %764 = trunc i64 %763 to i32
  %765 = icmp eq i32 %750, %764
  br i1 %765, label %766, label %773

766:                                              ; preds = %760
  %767 = load i32, ptr %798, align 4, !tbaa !59
  %768 = mul i32 %800, %767
  %769 = add i32 %768, %657
  %770 = zext i32 %769 to i64
  %771 = getelementptr inbounds double, ptr %799, i64 %770
  %772 = load double, ptr %771, align 8, !tbaa !133
  br label %773

773:                                              ; preds = %766, %760
  %774 = phi double [ 0.000000e+00, %760 ], [ %772, %766 ]
  %775 = zext i32 %750 to i64
  %776 = icmp eq i64 %675, %775
  br i1 %776, label %777, label %787

777:                                              ; preds = %773
  %778 = fmul double %743, %774
  %779 = fmul double %650, %778
  %780 = load ptr, ptr %802, align 8, !tbaa !136
  %781 = getelementptr inbounds double, ptr %780, i64 %675
  %782 = load double, ptr %781, align 8, !tbaa !133
  %783 = load float, ptr %809, align 4, !tbaa !282
  %784 = fpext float %783 to double
  %785 = call double @llvm.fmuladd.f64(double %779, double %782, double %784)
  %786 = fptrunc double %785 to float
  store float %786, ptr %809, align 4, !tbaa !282
  br label %787

787:                                              ; preds = %777, %773, %749
  %788 = add nuw i32 %750, 1
  %789 = icmp eq i32 %788, %26
  br i1 %789, label %746, label %749

790:                                              ; preds = %746, %908, %674
  %791 = add nuw nsw i64 %675, 1
  %792 = icmp eq i64 %791, %107
  br i1 %792, label %911, label %674

793:                                              ; preds = %742, %746
  %794 = phi i64 [ %747, %746 ], [ 0, %742 ]
  %795 = getelementptr inbounds %"class.std::vector.126", ptr %655, i64 %794
  %796 = load ptr, ptr %795, align 8, !tbaa !54
  %797 = load ptr, ptr %94, align 8
  %798 = getelementptr inbounds i32, ptr %797, i64 %794
  %799 = load ptr, ptr %95, align 8
  %800 = load i32, ptr %96, align 8
  %801 = load ptr, ptr %11, align 8
  %802 = getelementptr inbounds %"class.dealii::Vector", ptr %801, i64 %648, i32 3
  %803 = load ptr, ptr %89, align 8
  %804 = load i32, ptr %88, align 8
  %805 = mul i32 %804, %672
  %806 = trunc i64 %794 to i32
  %807 = add i32 %805, %806
  %808 = zext i32 %807 to i64
  %809 = getelementptr inbounds float, ptr %803, i64 %808
  br label %749

810:                                              ; preds = %744, %908
  %811 = phi i64 [ 0, %744 ], [ %909, %908 ]
  %812 = getelementptr inbounds %"class.std::vector.126", ptr %655, i64 %811
  %813 = load ptr, ptr %812, align 8, !tbaa !54
  %814 = load ptr, ptr %94, align 8
  %815 = getelementptr inbounds i32, ptr %814, i64 %811
  %816 = load ptr, ptr %95, align 8
  %817 = load i32, ptr %96, align 8
  %818 = load ptr, ptr %11, align 8
  %819 = getelementptr inbounds %"class.dealii::Vector", ptr %818, i64 %648, i32 3
  %820 = load ptr, ptr %89, align 8
  %821 = load i32, ptr %88, align 8
  %822 = mul i32 %821, %673
  %823 = trunc i64 %811 to i32
  %824 = add i32 %822, %823
  %825 = zext i32 %824 to i64
  %826 = getelementptr inbounds float, ptr %820, i64 %825
  br label %827

827:                                              ; preds = %905, %810
  %828 = phi i32 [ 0, %810 ], [ %906, %905 ]
  %829 = lshr i32 %828, 6
  %830 = zext i32 %829 to i64
  %831 = getelementptr inbounds i64, ptr %813, i64 %830
  %832 = and i32 %828, 63
  %833 = zext i32 %832 to i64
  %834 = shl nuw i64 1, %833
  %835 = load i64, ptr %831, align 8, !tbaa !56
  %836 = and i64 %835, %834
  %837 = icmp eq i64 %836, 0
  br i1 %837, label %905, label %838

838:                                              ; preds = %827
  %839 = load ptr, ptr %665, align 8, !tbaa !144
  %840 = getelementptr inbounds i32, ptr %839, i64 %811
  %841 = load i32, ptr %840, align 4, !tbaa !59
  %842 = icmp eq i32 %841, 1
  br i1 %842, label %876, label %843

843:                                              ; preds = %838
  %844 = load ptr, ptr %666, align 8, !tbaa !205
  %845 = getelementptr inbounds %"class.std::vector.126", ptr %844, i64 %811
  %846 = load ptr, ptr %845, align 8, !tbaa !54
  %847 = getelementptr inbounds i64, ptr %846, i64 %830
  %848 = load i64, ptr %847, align 8, !tbaa !56
  %849 = and i64 %848, %834
  %850 = icmp eq i64 %849, 0
  br i1 %850, label %891, label %851

851:                                              ; preds = %843
  %852 = load i32, ptr %815, align 4, !tbaa !59
  %853 = icmp eq i32 %828, 0
  br i1 %853, label %873, label %854

854:                                              ; preds = %851, %854
  %855 = phi i64 [ %862, %854 ], [ 0, %851 ]
  %856 = phi i32 [ %867, %854 ], [ 0, %851 ]
  %857 = phi ptr [ %866, %854 ], [ %846, %851 ]
  %858 = zext i32 %856 to i64
  %859 = load i64, ptr %857, align 8, !tbaa !56
  %860 = lshr i64 %859, %858
  %861 = and i64 %860, 1
  %862 = add nuw nsw i64 %861, %855
  %863 = add i32 %856, 1
  %864 = icmp eq i32 %856, 63
  %865 = zext i1 %864 to i64
  %866 = getelementptr inbounds i64, ptr %857, i64 %865
  %867 = select i1 %864, i32 0, i32 %863
  %868 = icmp ne ptr %866, %847
  %869 = icmp ne i32 %867, %832
  %870 = or i1 %869, %868
  br i1 %870, label %854, label %871

871:                                              ; preds = %854
  %872 = trunc i64 %862 to i32
  br label %873

873:                                              ; preds = %871, %851
  %874 = phi i32 [ 0, %851 ], [ %872, %871 ]
  %875 = add i32 %874, %852
  br label %884

876:                                              ; preds = %838
  %877 = load ptr, ptr %669, align 8, !tbaa !184
  %878 = getelementptr inbounds %"struct.std::pair.263", ptr %877, i64 %811
  %879 = load i64, ptr %878, align 4
  %880 = trunc i64 %879 to i32
  %881 = icmp eq i32 %828, %880
  br i1 %881, label %882, label %891

882:                                              ; preds = %876
  %883 = load i32, ptr %815, align 4, !tbaa !59
  br label %884

884:                                              ; preds = %882, %873
  %885 = phi i32 [ %875, %873 ], [ %883, %882 ]
  %886 = mul i32 %817, %885
  %887 = add i32 %886, %658
  %888 = zext i32 %887 to i64
  %889 = getelementptr inbounds double, ptr %816, i64 %888
  %890 = load double, ptr %889, align 8, !tbaa !133
  br label %891

891:                                              ; preds = %884, %876, %843
  %892 = phi double [ 0.000000e+00, %876 ], [ 0.000000e+00, %843 ], [ %890, %884 ]
  %893 = zext i32 %828 to i64
  %894 = icmp eq i64 %675, %893
  br i1 %894, label %895, label %905

895:                                              ; preds = %891
  %896 = fmul double %745, %892
  %897 = fmul double %650, %896
  %898 = load ptr, ptr %819, align 8, !tbaa !136
  %899 = getelementptr inbounds double, ptr %898, i64 %675
  %900 = load double, ptr %899, align 8, !tbaa !133
  %901 = load float, ptr %826, align 4, !tbaa !282
  %902 = fpext float %901 to double
  %903 = call double @llvm.fmuladd.f64(double %897, double %900, double %902)
  %904 = fptrunc double %903 to float
  store float %904, ptr %826, align 4, !tbaa !282
  br label %905

905:                                              ; preds = %895, %891, %827
  %906 = add nuw i32 %828, 1
  %907 = icmp eq i32 %906, %26
  br i1 %907, label %908, label %827

908:                                              ; preds = %905
  %909 = add nuw nsw i64 %811, 1
  %910 = icmp eq i64 %909, %63
  br i1 %910, label %790, label %810

911:                                              ; preds = %790
  %912 = add nuw nsw i64 %660, 1
  %913 = icmp eq i64 %912, %63
  br i1 %913, label %651, label %659

914:                                              ; preds = %181
  %915 = load i8, ptr %92, align 4, !tbaa !148, !range !182, !noundef !183
  %916 = icmp eq i8 %915, 0
  br i1 %916, label %926, label %917

917:                                              ; preds = %914
  br i1 %29, label %1517, label %918

918:                                              ; preds = %917
  %919 = load ptr, ptr %93, align 8, !tbaa !131
  %920 = load ptr, ptr %23, align 8
  %921 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %920, i64 0, i32 2
  %922 = load ptr, ptr %95, align 8
  %923 = load i32, ptr %96, align 8
  %924 = icmp ne i32 %923, 1
  %925 = icmp ne i32 %923, 1
  br label %929

926:                                              ; preds = %914
  br i1 %29, label %1517, label %927

927:                                              ; preds = %926
  %928 = load ptr, ptr %93, align 8, !tbaa !131
  br label %1269

929:                                              ; preds = %918, %1266
  %930 = phi i64 [ 0, %918 ], [ %1267, %1266 ]
  %931 = shl nuw nsw i64 %930, 3
  %932 = getelementptr i8, ptr %922, i64 %931
  %933 = add nuw i64 %110, %931
  %934 = getelementptr i8, ptr %922, i64 %933
  %935 = trunc i64 %930 to i32
  %936 = trunc i64 %930 to i32
  %937 = getelementptr inbounds double, ptr %919, i64 %930
  %938 = load double, ptr %937, align 8, !tbaa !133
  br i1 %64, label %1266, label %939

939:                                              ; preds = %929
  %940 = load i8, ptr %921, align 4, !tbaa !148, !range !182, !noundef !183
  %941 = icmp eq i8 %940, 0
  %942 = load ptr, ptr %94, align 8
  %943 = trunc i64 %930 to i32
  br i1 %98, label %944, label %1115

944:                                              ; preds = %939
  %945 = trunc i64 %930 to i32
  %946 = xor i32 %936, -1
  %947 = icmp ult i32 %946, %135
  %948 = insertelement <4 x double> poison, double %938, i64 0
  %949 = shufflevector <4 x double> %948, <4 x double> poison, <4 x i32> zeroinitializer
  %950 = insertelement <4 x double> poison, double %938, i64 0
  %951 = shufflevector <4 x double> %950, <4 x double> poison, <4 x i32> zeroinitializer
  %952 = insertelement <4 x double> poison, double %938, i64 0
  %953 = shufflevector <4 x double> %952, <4 x double> poison, <4 x i32> zeroinitializer
  %954 = insertelement <4 x double> poison, double %938, i64 0
  %955 = shufflevector <4 x double> %954, <4 x double> poison, <4 x i32> zeroinitializer
  br label %956

956:                                              ; preds = %944, %1092
  %957 = phi i64 [ 0, %944 ], [ %1093, %1092 ]
  %958 = trunc i64 %957 to i32
  %959 = mul i32 %145, %958
  %960 = trunc i64 %957 to i32
  br i1 %941, label %1048, label %961

961:                                              ; preds = %956
  %962 = mul i32 %923, %960
  %963 = add i32 %962, %945
  %964 = zext i32 %963 to i64
  %965 = getelementptr inbounds double, ptr %922, i64 %964
  %966 = load double, ptr %965, align 8, !tbaa !133
  %967 = load ptr, ptr %89, align 8
  %968 = mul i32 %145, %960
  br i1 %132, label %1026, label %969

969:                                              ; preds = %961
  %970 = xor i32 %959, -1
  %971 = icmp ult i32 %970, %133
  %972 = or i1 %971, %134
  %973 = or i1 %972, %925
  %974 = or i1 %947, %973
  br i1 %974, label %1026, label %975

975:                                              ; preds = %969
  %976 = insertelement <4 x double> poison, double %966, i64 0
  %977 = shufflevector <4 x double> %976, <4 x double> poison, <4 x i32> zeroinitializer
  %978 = insertelement <4 x double> poison, double %966, i64 0
  %979 = shufflevector <4 x double> %978, <4 x double> poison, <4 x i32> zeroinitializer
  %980 = insertelement <4 x double> poison, double %966, i64 0
  %981 = shufflevector <4 x double> %980, <4 x double> poison, <4 x i32> zeroinitializer
  %982 = insertelement <4 x double> poison, double %966, i64 0
  %983 = shufflevector <4 x double> %982, <4 x double> poison, <4 x i32> zeroinitializer
  br label %984

984:                                              ; preds = %984, %975
  %985 = phi i64 [ 0, %975 ], [ %1023, %984 ]
  %986 = trunc i64 %985 to i32
  %987 = add i64 %985, %930
  %988 = and i64 %987, 4294967295
  %989 = getelementptr inbounds double, ptr %922, i64 %988
  %990 = load <4 x double>, ptr %989, align 8, !tbaa !133
  %991 = getelementptr inbounds double, ptr %989, i64 4
  %992 = load <4 x double>, ptr %991, align 8, !tbaa !133
  %993 = getelementptr inbounds double, ptr %989, i64 8
  %994 = load <4 x double>, ptr %993, align 8, !tbaa !133
  %995 = getelementptr inbounds double, ptr %989, i64 12
  %996 = load <4 x double>, ptr %995, align 8, !tbaa !133
  %997 = fmul <4 x double> %977, %990
  %998 = fmul <4 x double> %979, %992
  %999 = fmul <4 x double> %981, %994
  %1000 = fmul <4 x double> %983, %996
  %1001 = add i32 %968, %986
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds float, ptr %967, i64 %1002
  %1004 = load <4 x float>, ptr %1003, align 4, !tbaa !282
  %1005 = getelementptr inbounds float, ptr %1003, i64 4
  %1006 = load <4 x float>, ptr %1005, align 4, !tbaa !282
  %1007 = getelementptr inbounds float, ptr %1003, i64 8
  %1008 = load <4 x float>, ptr %1007, align 4, !tbaa !282
  %1009 = getelementptr inbounds float, ptr %1003, i64 12
  %1010 = load <4 x float>, ptr %1009, align 4, !tbaa !282
  %1011 = fpext <4 x float> %1004 to <4 x double>
  %1012 = fpext <4 x float> %1006 to <4 x double>
  %1013 = fpext <4 x float> %1008 to <4 x double>
  %1014 = fpext <4 x float> %1010 to <4 x double>
  %1015 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %997, <4 x double> %949, <4 x double> %1011)
  %1016 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %998, <4 x double> %951, <4 x double> %1012)
  %1017 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %999, <4 x double> %953, <4 x double> %1013)
  %1018 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1000, <4 x double> %955, <4 x double> %1014)
  %1019 = fptrunc <4 x double> %1015 to <4 x float>
  %1020 = fptrunc <4 x double> %1016 to <4 x float>
  %1021 = fptrunc <4 x double> %1017 to <4 x float>
  %1022 = fptrunc <4 x double> %1018 to <4 x float>
  store <4 x float> %1019, ptr %1003, align 4, !tbaa !282
  store <4 x float> %1020, ptr %1005, align 4, !tbaa !282
  store <4 x float> %1021, ptr %1007, align 4, !tbaa !282
  store <4 x float> %1022, ptr %1009, align 4, !tbaa !282
  %1023 = add nuw i64 %985, 16
  %1024 = icmp eq i64 %1023, %136
  br i1 %1024, label %1025, label %984, !llvm.loop !288

1025:                                             ; preds = %984
  br i1 %137, label %1092, label %1026

1026:                                             ; preds = %969, %961, %1025
  %1027 = phi i64 [ 0, %969 ], [ 0, %961 ], [ %136, %1025 ]
  %1028 = xor i64 %1027, -1
  br i1 %139, label %1045, label %1029

1029:                                             ; preds = %1026
  %1030 = trunc i64 %1027 to i32
  %1031 = mul i32 %923, %1030
  %1032 = add i32 %1031, %945
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds double, ptr %922, i64 %1033
  %1035 = load double, ptr %1034, align 8, !tbaa !133
  %1036 = fmul double %966, %1035
  %1037 = add i32 %968, %1030
  %1038 = zext i32 %1037 to i64
  %1039 = getelementptr inbounds float, ptr %967, i64 %1038
  %1040 = load float, ptr %1039, align 4, !tbaa !282
  %1041 = fpext float %1040 to double
  %1042 = call double @llvm.fmuladd.f64(double %1036, double %938, double %1041)
  %1043 = fptrunc double %1042 to float
  store float %1043, ptr %1039, align 4, !tbaa !282
  %1044 = or i64 %1027, 1
  br label %1045

1045:                                             ; preds = %1029, %1026
  %1046 = phi i64 [ %1027, %1026 ], [ %1044, %1029 ]
  %1047 = icmp eq i64 %1028, %140
  br i1 %1047, label %1092, label %1059

1048:                                             ; preds = %956
  %1049 = getelementptr inbounds i32, ptr %942, i64 %957
  %1050 = load i32, ptr %1049, align 4, !tbaa !59
  %1051 = mul i32 %923, %1050
  %1052 = add i32 %1051, %943
  %1053 = zext i32 %1052 to i64
  %1054 = getelementptr inbounds double, ptr %922, i64 %1053
  %1055 = load double, ptr %1054, align 8, !tbaa !133
  %1056 = load ptr, ptr %94, align 8
  %1057 = load ptr, ptr %89, align 8
  %1058 = mul i32 %145, %960
  br label %1095

1059:                                             ; preds = %1045, %1059
  %1060 = phi i64 [ %1090, %1059 ], [ %1046, %1045 ]
  %1061 = trunc i64 %1060 to i32
  %1062 = mul i32 %923, %1061
  %1063 = add i32 %1062, %945
  %1064 = zext i32 %1063 to i64
  %1065 = getelementptr inbounds double, ptr %922, i64 %1064
  %1066 = load double, ptr %1065, align 8, !tbaa !133
  %1067 = fmul double %966, %1066
  %1068 = add i32 %968, %1061
  %1069 = zext i32 %1068 to i64
  %1070 = getelementptr inbounds float, ptr %967, i64 %1069
  %1071 = load float, ptr %1070, align 4, !tbaa !282
  %1072 = fpext float %1071 to double
  %1073 = call double @llvm.fmuladd.f64(double %1067, double %938, double %1072)
  %1074 = fptrunc double %1073 to float
  store float %1074, ptr %1070, align 4, !tbaa !282
  %1075 = trunc i64 %1060 to i32
  %1076 = add i32 %1075, 1
  %1077 = mul i32 %923, %1076
  %1078 = add i32 %1077, %945
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds double, ptr %922, i64 %1079
  %1081 = load double, ptr %1080, align 8, !tbaa !133
  %1082 = fmul double %966, %1081
  %1083 = add i32 %968, %1076
  %1084 = zext i32 %1083 to i64
  %1085 = getelementptr inbounds float, ptr %967, i64 %1084
  %1086 = load float, ptr %1085, align 4, !tbaa !282
  %1087 = fpext float %1086 to double
  %1088 = call double @llvm.fmuladd.f64(double %1082, double %938, double %1087)
  %1089 = fptrunc double %1088 to float
  store float %1089, ptr %1085, align 4, !tbaa !282
  %1090 = add nuw nsw i64 %1060, 2
  %1091 = icmp eq i64 %1090, %63
  br i1 %1091, label %1092, label %1059, !llvm.loop !289

1092:                                             ; preds = %1045, %1059, %1095, %1025
  %1093 = add nuw nsw i64 %957, 1
  %1094 = icmp eq i64 %1093, %63
  br i1 %1094, label %1266, label %956

1095:                                             ; preds = %1048, %1095
  %1096 = phi i64 [ 0, %1048 ], [ %1113, %1095 ]
  %1097 = getelementptr inbounds i32, ptr %1056, i64 %1096
  %1098 = load i32, ptr %1097, align 4, !tbaa !59
  %1099 = mul i32 %1098, %923
  %1100 = add i32 %1099, %943
  %1101 = zext i32 %1100 to i64
  %1102 = getelementptr inbounds double, ptr %922, i64 %1101
  %1103 = load double, ptr %1102, align 8, !tbaa !133
  %1104 = fmul double %1055, %1103
  %1105 = trunc i64 %1096 to i32
  %1106 = add i32 %1058, %1105
  %1107 = zext i32 %1106 to i64
  %1108 = getelementptr inbounds float, ptr %1057, i64 %1107
  %1109 = load float, ptr %1108, align 4, !tbaa !282
  %1110 = fpext float %1109 to double
  %1111 = call double @llvm.fmuladd.f64(double %1104, double %938, double %1110)
  %1112 = fptrunc double %1111 to float
  store float %1112, ptr %1108, align 4, !tbaa !282
  %1113 = add nuw nsw i64 %1096, 1
  %1114 = icmp eq i64 %1113, %63
  br i1 %1114, label %1092, label %1095

1115:                                             ; preds = %939
  %1116 = load ptr, ptr %97, align 8, !tbaa !184
  %1117 = trunc i64 %930 to i32
  %1118 = getelementptr i8, ptr %1116, i64 %110
  %1119 = xor i32 %935, -1
  %1120 = icmp ult i32 %1119, %129
  %1121 = insertelement <4 x double> poison, double %938, i64 0
  %1122 = shufflevector <4 x double> %1121, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1123

1123:                                             ; preds = %1235, %1115
  %1124 = phi i64 [ %1236, %1235 ], [ 0, %1115 ]
  %1125 = trunc i64 %1124 to i32
  %1126 = mul i32 %145, %1125
  %1127 = zext i32 %1126 to i64
  %1128 = shl nuw nsw i64 %1127, 2
  %1129 = shl nuw nsw i64 %1124, 3
  %1130 = getelementptr i8, ptr %1116, i64 %1129
  %1131 = add nuw i64 %1129, 8
  %1132 = getelementptr i8, ptr %1116, i64 %1131
  %1133 = trunc i64 %1124 to i32
  %1134 = mul i32 %145, %1133
  %1135 = trunc i64 %1124 to i32
  br i1 %941, label %1197, label %1136

1136:                                             ; preds = %1123
  %1137 = mul i32 %923, %1135
  %1138 = add i32 %1137, %943
  %1139 = zext i32 %1138 to i64
  %1140 = getelementptr inbounds double, ptr %922, i64 %1139
  %1141 = load double, ptr %1140, align 8, !tbaa !133
  %1142 = load ptr, ptr %89, align 8
  %1143 = mul i32 %145, %1135
  %1144 = getelementptr inbounds %"struct.std::pair.263", ptr %1116, i64 %1124
  br i1 %126, label %1195, label %1145

1145:                                             ; preds = %1136
  %1146 = xor i32 %1134, -1
  %1147 = icmp ult i32 %1146, %127
  %1148 = or i1 %1147, %128
  %1149 = or i1 %924, %1148
  %1150 = or i1 %1120, %1149
  br i1 %1150, label %1195, label %1151

1151:                                             ; preds = %1145
  %1152 = getelementptr i8, ptr %1142, i64 %1128
  %1153 = getelementptr i8, ptr %1142, i64 %111
  %1154 = getelementptr i8, ptr %1153, i64 %1128
  %1155 = icmp ult ptr %1116, %1154
  %1156 = icmp ult ptr %1152, %1118
  %1157 = and i1 %1155, %1156
  %1158 = icmp ult ptr %1130, %1154
  %1159 = icmp ult ptr %1152, %1132
  %1160 = and i1 %1158, %1159
  %1161 = or i1 %1157, %1160
  %1162 = icmp ult ptr %1152, %934
  %1163 = icmp ult ptr %932, %1154
  %1164 = and i1 %1162, %1163
  %1165 = or i1 %1161, %1164
  br i1 %1165, label %1195, label %1166

1166:                                             ; preds = %1151
  %1167 = insertelement <4 x double> poison, double %1141, i64 0
  %1168 = shufflevector <4 x double> %1167, <4 x double> poison, <4 x i32> zeroinitializer
  %1169 = load i64, ptr %1144, align 4, !alias.scope !290, !noalias !293
  %1170 = trunc i64 %1169 to i32
  %1171 = insertelement <4 x i32> undef, i32 %1170, i64 0
  %1172 = shufflevector <4 x i32> %1171, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1173

1173:                                             ; preds = %1173, %1166
  %1174 = phi i64 [ 0, %1166 ], [ %1192, %1173 ]
  %1175 = trunc i64 %1174 to i32
  %1176 = getelementptr inbounds %"struct.std::pair.263", ptr %1116, i64 %1174
  %1177 = load <4 x i64>, ptr %1176, align 4, !alias.scope !295, !noalias !293
  %1178 = trunc <4 x i64> %1177 to <4 x i32>
  %1179 = icmp eq <4 x i32> %1172, %1178
  %1180 = add i64 %1174, %930
  %1181 = and i64 %1180, 4294967295
  %1182 = getelementptr double, ptr %922, i64 %1181
  %1183 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1182, i32 8, <4 x i1> %1179, <4 x double> poison), !tbaa !133, !alias.scope !297
  %1184 = fmul <4 x double> %1168, %1183
  %1185 = add i32 %1143, %1175
  %1186 = zext i32 %1185 to i64
  %1187 = getelementptr float, ptr %1142, i64 %1186
  %1188 = call <4 x float> @llvm.masked.load.v4f32.p0(ptr %1187, i32 4, <4 x i1> %1179, <4 x float> poison), !tbaa !282, !alias.scope !293, !noalias !297
  %1189 = fpext <4 x float> %1188 to <4 x double>
  %1190 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1184, <4 x double> %1122, <4 x double> %1189)
  %1191 = fptrunc <4 x double> %1190 to <4 x float>
  call void @llvm.masked.store.v4f32.p0(<4 x float> %1191, ptr %1187, i32 4, <4 x i1> %1179), !tbaa !282, !alias.scope !293, !noalias !297
  %1192 = add nuw i64 %1174, 4
  %1193 = icmp eq i64 %1192, %130
  br i1 %1193, label %1194, label %1173, !llvm.loop !299

1194:                                             ; preds = %1173
  br i1 %131, label %1235, label %1195

1195:                                             ; preds = %1151, %1145, %1136, %1194
  %1196 = phi i64 [ 0, %1151 ], [ 0, %1145 ], [ 0, %1136 ], [ %130, %1194 ]
  br label %1209

1197:                                             ; preds = %1123
  %1198 = getelementptr inbounds i32, ptr %942, i64 %1124
  %1199 = load i32, ptr %1198, align 4, !tbaa !59
  %1200 = mul i32 %923, %1199
  %1201 = add i32 %1200, %1117
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds double, ptr %922, i64 %1202
  %1204 = load double, ptr %1203, align 8, !tbaa !133
  %1205 = load ptr, ptr %94, align 8
  %1206 = load ptr, ptr %89, align 8
  %1207 = mul i32 %145, %1135
  %1208 = getelementptr inbounds %"struct.std::pair.263", ptr %1116, i64 %1124
  br label %1238

1209:                                             ; preds = %1195, %1232
  %1210 = phi i64 [ %1233, %1232 ], [ %1196, %1195 ]
  %1211 = load i64, ptr %1144, align 4
  %1212 = getelementptr inbounds %"struct.std::pair.263", ptr %1116, i64 %1210
  %1213 = load i64, ptr %1212, align 4
  %1214 = trunc i64 %1211 to i32
  %1215 = trunc i64 %1213 to i32
  %1216 = icmp eq i32 %1214, %1215
  br i1 %1216, label %1217, label %1232

1217:                                             ; preds = %1209
  %1218 = trunc i64 %1210 to i32
  %1219 = mul i32 %923, %1218
  %1220 = add i32 %1219, %943
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds double, ptr %922, i64 %1221
  %1223 = load double, ptr %1222, align 8, !tbaa !133
  %1224 = fmul double %1141, %1223
  %1225 = add i32 %1143, %1218
  %1226 = zext i32 %1225 to i64
  %1227 = getelementptr inbounds float, ptr %1142, i64 %1226
  %1228 = load float, ptr %1227, align 4, !tbaa !282
  %1229 = fpext float %1228 to double
  %1230 = call double @llvm.fmuladd.f64(double %1224, double %938, double %1229)
  %1231 = fptrunc double %1230 to float
  store float %1231, ptr %1227, align 4, !tbaa !282
  br label %1232

1232:                                             ; preds = %1217, %1209
  %1233 = add nuw nsw i64 %1210, 1
  %1234 = icmp eq i64 %1233, %63
  br i1 %1234, label %1235, label %1209, !llvm.loop !300

1235:                                             ; preds = %1232, %1263, %1194
  %1236 = add nuw nsw i64 %1124, 1
  %1237 = icmp eq i64 %1236, %63
  br i1 %1237, label %1266, label %1123

1238:                                             ; preds = %1197, %1263
  %1239 = phi i64 [ 0, %1197 ], [ %1264, %1263 ]
  %1240 = load i64, ptr %1208, align 4
  %1241 = getelementptr inbounds %"struct.std::pair.263", ptr %1116, i64 %1239
  %1242 = load i64, ptr %1241, align 4
  %1243 = trunc i64 %1240 to i32
  %1244 = trunc i64 %1242 to i32
  %1245 = icmp eq i32 %1243, %1244
  br i1 %1245, label %1246, label %1263

1246:                                             ; preds = %1238
  %1247 = getelementptr inbounds i32, ptr %1205, i64 %1239
  %1248 = load i32, ptr %1247, align 4, !tbaa !59
  %1249 = mul i32 %1248, %923
  %1250 = add i32 %1249, %1117
  %1251 = zext i32 %1250 to i64
  %1252 = getelementptr inbounds double, ptr %922, i64 %1251
  %1253 = load double, ptr %1252, align 8, !tbaa !133
  %1254 = fmul double %1204, %1253
  %1255 = trunc i64 %1239 to i32
  %1256 = add i32 %1207, %1255
  %1257 = zext i32 %1256 to i64
  %1258 = getelementptr inbounds float, ptr %1206, i64 %1257
  %1259 = load float, ptr %1258, align 4, !tbaa !282
  %1260 = fpext float %1259 to double
  %1261 = call double @llvm.fmuladd.f64(double %1254, double %938, double %1260)
  %1262 = fptrunc double %1261 to float
  store float %1262, ptr %1258, align 4, !tbaa !282
  br label %1263

1263:                                             ; preds = %1246, %1238
  %1264 = add nuw nsw i64 %1239, 1
  %1265 = icmp eq i64 %1264, %63
  br i1 %1265, label %1235, label %1238

1266:                                             ; preds = %1235, %1092, %929
  %1267 = add nuw nsw i64 %930, 1
  %1268 = icmp eq i64 %1267, %28
  br i1 %1268, label %1517, label %929

1269:                                             ; preds = %927, %1514
  %1270 = phi i64 [ 0, %927 ], [ %1515, %1514 ]
  %1271 = getelementptr inbounds double, ptr %928, i64 %1270
  %1272 = load double, ptr %1271, align 8, !tbaa !133
  br i1 %141, label %1514, label %1273

1273:                                             ; preds = %1269
  %1274 = load ptr, ptr %99, align 8, !tbaa !205
  %1275 = trunc i64 %1270 to i32
  %1276 = trunc i64 %1270 to i32
  %1277 = trunc i64 %1270 to i32
  br label %1278

1278:                                             ; preds = %1511, %1273
  %1279 = phi i64 [ %1512, %1511 ], [ 0, %1273 ]
  %1280 = getelementptr inbounds %"class.std::vector.126", ptr %1274, i64 %1279
  %1281 = load ptr, ptr %1280, align 8, !tbaa !54
  %1282 = load ptr, ptr %23, align 8
  %1283 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1282, i64 0, i32 2
  %1284 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1282, i64 0, i32 20
  %1285 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1282, i64 0, i32 19
  %1286 = load ptr, ptr %94, align 8
  %1287 = getelementptr inbounds i32, ptr %1286, i64 %1279
  %1288 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1282, i64 0, i32 12
  %1289 = load ptr, ptr %95, align 8
  %1290 = load i32, ptr %96, align 8
  %1291 = trunc i64 %1279 to i32
  %1292 = mul i32 %145, %1291
  br label %1293

1293:                                             ; preds = %1278, %1399
  %1294 = phi i32 [ 0, %1278 ], [ %1400, %1399 ]
  %1295 = lshr i32 %1294, 6
  %1296 = zext i32 %1295 to i64
  %1297 = getelementptr inbounds i64, ptr %1281, i64 %1296
  %1298 = and i32 %1294, 63
  %1299 = zext i32 %1298 to i64
  %1300 = shl nuw i64 1, %1299
  %1301 = load i64, ptr %1297, align 8, !tbaa !56
  %1302 = and i64 %1301, %1300
  %1303 = icmp eq i64 %1302, 0
  br i1 %1303, label %1399, label %1304

1304:                                             ; preds = %1293
  %1305 = load i8, ptr %1283, align 4, !tbaa !148, !range !182, !noundef !183
  %1306 = icmp eq i8 %1305, 0
  br i1 %1306, label %1307, label %1345

1307:                                             ; preds = %1304
  %1308 = load ptr, ptr %1284, align 8, !tbaa !144
  %1309 = getelementptr inbounds i32, ptr %1308, i64 %1279
  %1310 = load i32, ptr %1309, align 4, !tbaa !59
  %1311 = icmp eq i32 %1310, 1
  br i1 %1311, label %1345, label %1312

1312:                                             ; preds = %1307
  %1313 = load ptr, ptr %1285, align 8, !tbaa !205
  %1314 = getelementptr inbounds %"class.std::vector.126", ptr %1313, i64 %1279
  %1315 = load ptr, ptr %1314, align 8, !tbaa !54
  %1316 = getelementptr inbounds i64, ptr %1315, i64 %1296
  %1317 = load i64, ptr %1316, align 8, !tbaa !56
  %1318 = and i64 %1317, %1300
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1417, label %1320

1320:                                             ; preds = %1312
  %1321 = load i32, ptr %1287, align 4, !tbaa !59
  %1322 = icmp eq i32 %1294, 0
  br i1 %1322, label %1342, label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1331, %1323 ], [ 0, %1320 ]
  %1325 = phi i32 [ %1336, %1323 ], [ 0, %1320 ]
  %1326 = phi ptr [ %1335, %1323 ], [ %1315, %1320 ]
  %1327 = zext i32 %1325 to i64
  %1328 = load i64, ptr %1326, align 8, !tbaa !56
  %1329 = lshr i64 %1328, %1327
  %1330 = and i64 %1329, 1
  %1331 = add nuw nsw i64 %1330, %1324
  %1332 = add i32 %1325, 1
  %1333 = icmp eq i32 %1325, 63
  %1334 = zext i1 %1333 to i64
  %1335 = getelementptr inbounds i64, ptr %1326, i64 %1334
  %1336 = select i1 %1333, i32 0, i32 %1332
  %1337 = icmp ne ptr %1335, %1316
  %1338 = icmp ne i32 %1336, %1298
  %1339 = or i1 %1338, %1337
  br i1 %1339, label %1323, label %1340

1340:                                             ; preds = %1323
  %1341 = trunc i64 %1331 to i32
  br label %1342

1342:                                             ; preds = %1340, %1320
  %1343 = phi i32 [ 0, %1320 ], [ %1341, %1340 ]
  %1344 = add i32 %1343, %1321
  br label %1353

1345:                                             ; preds = %1307, %1304
  %1346 = load ptr, ptr %1288, align 8, !tbaa !184
  %1347 = getelementptr inbounds %"struct.std::pair.263", ptr %1346, i64 %1279
  %1348 = load i64, ptr %1347, align 4
  %1349 = trunc i64 %1348 to i32
  %1350 = icmp eq i32 %1294, %1349
  br i1 %1350, label %1351, label %1415

1351:                                             ; preds = %1345
  %1352 = load i32, ptr %1287, align 4, !tbaa !59
  br label %1353

1353:                                             ; preds = %1351, %1342
  %1354 = phi i32 [ %1344, %1342 ], [ %1352, %1351 ]
  %1355 = mul i32 %1290, %1354
  %1356 = add i32 %1355, %1275
  %1357 = zext i32 %1356 to i64
  %1358 = getelementptr inbounds double, ptr %1289, i64 %1357
  %1359 = load double, ptr %1358, align 8, !tbaa !133
  br label %1415

1360:                                             ; preds = %1396
  %1361 = add nuw nsw i64 %1403, 1
  %1362 = icmp eq i64 %1361, %63
  br i1 %1362, label %1399, label %1402

1363:                                             ; preds = %1402, %1396
  %1364 = phi i32 [ 0, %1402 ], [ %1397, %1396 ]
  %1365 = lshr i32 %1364, 6
  %1366 = zext i32 %1365 to i64
  %1367 = getelementptr inbounds i64, ptr %1405, i64 %1366
  %1368 = and i32 %1364, 63
  %1369 = zext i32 %1368 to i64
  %1370 = shl nuw i64 1, %1369
  %1371 = load i64, ptr %1367, align 8, !tbaa !56
  %1372 = and i64 %1371, %1370
  %1373 = icmp eq i64 %1372, 0
  br i1 %1373, label %1396, label %1374

1374:                                             ; preds = %1363
  %1375 = load ptr, ptr %1288, align 8, !tbaa !184
  %1376 = getelementptr inbounds %"struct.std::pair.263", ptr %1375, i64 %1403
  %1377 = load i64, ptr %1376, align 4
  %1378 = trunc i64 %1377 to i32
  %1379 = icmp eq i32 %1364, %1378
  br i1 %1379, label %1380, label %1387

1380:                                             ; preds = %1374
  %1381 = load i32, ptr %1407, align 4, !tbaa !59
  %1382 = mul i32 %1409, %1381
  %1383 = add i32 %1382, %1276
  %1384 = zext i32 %1383 to i64
  %1385 = getelementptr inbounds double, ptr %1408, i64 %1384
  %1386 = load double, ptr %1385, align 8, !tbaa !133
  br label %1387

1387:                                             ; preds = %1380, %1374
  %1388 = phi double [ 0.000000e+00, %1374 ], [ %1386, %1380 ]
  %1389 = icmp eq i32 %1294, %1364
  br i1 %1389, label %1390, label %1396

1390:                                             ; preds = %1387
  %1391 = fmul double %1416, %1388
  %1392 = load float, ptr %1414, align 4, !tbaa !282
  %1393 = fpext float %1392 to double
  %1394 = call double @llvm.fmuladd.f64(double %1391, double %1272, double %1393)
  %1395 = fptrunc double %1394 to float
  store float %1395, ptr %1414, align 4, !tbaa !282
  br label %1396

1396:                                             ; preds = %1390, %1387, %1363
  %1397 = add nuw i32 %1364, 1
  %1398 = icmp eq i32 %1397, %26
  br i1 %1398, label %1360, label %1363

1399:                                             ; preds = %1360, %1508, %1293
  %1400 = add nuw i32 %1294, 1
  %1401 = icmp eq i32 %1400, %26
  br i1 %1401, label %1511, label %1293

1402:                                             ; preds = %1415, %1360
  %1403 = phi i64 [ %1361, %1360 ], [ 0, %1415 ]
  %1404 = getelementptr inbounds %"class.std::vector.126", ptr %1274, i64 %1403
  %1405 = load ptr, ptr %1404, align 8, !tbaa !54
  %1406 = load ptr, ptr %94, align 8
  %1407 = getelementptr inbounds i32, ptr %1406, i64 %1403
  %1408 = load ptr, ptr %95, align 8
  %1409 = load i32, ptr %96, align 8
  %1410 = load ptr, ptr %89, align 8
  %1411 = trunc i64 %1403 to i32
  %1412 = add i32 %1292, %1411
  %1413 = zext i32 %1412 to i64
  %1414 = getelementptr inbounds float, ptr %1410, i64 %1413
  br label %1363

1415:                                             ; preds = %1345, %1353
  %1416 = phi double [ 0.000000e+00, %1345 ], [ %1359, %1353 ]
  br i1 %1306, label %1417, label %1402

1417:                                             ; preds = %1312, %1415
  %1418 = phi double [ %1416, %1415 ], [ 0.000000e+00, %1312 ]
  br label %1419

1419:                                             ; preds = %1417, %1508
  %1420 = phi i64 [ 0, %1417 ], [ %1509, %1508 ]
  %1421 = getelementptr inbounds %"class.std::vector.126", ptr %1274, i64 %1420
  %1422 = load ptr, ptr %1421, align 8, !tbaa !54
  %1423 = load ptr, ptr %94, align 8
  %1424 = getelementptr inbounds i32, ptr %1423, i64 %1420
  %1425 = load ptr, ptr %95, align 8
  %1426 = load i32, ptr %96, align 8
  %1427 = load ptr, ptr %89, align 8
  %1428 = trunc i64 %1420 to i32
  %1429 = add i32 %1292, %1428
  %1430 = zext i32 %1429 to i64
  %1431 = getelementptr inbounds float, ptr %1427, i64 %1430
  br label %1432

1432:                                             ; preds = %1505, %1419
  %1433 = phi i32 [ 0, %1419 ], [ %1506, %1505 ]
  %1434 = lshr i32 %1433, 6
  %1435 = zext i32 %1434 to i64
  %1436 = getelementptr inbounds i64, ptr %1422, i64 %1435
  %1437 = and i32 %1433, 63
  %1438 = zext i32 %1437 to i64
  %1439 = shl nuw i64 1, %1438
  %1440 = load i64, ptr %1436, align 8, !tbaa !56
  %1441 = and i64 %1440, %1439
  %1442 = icmp eq i64 %1441, 0
  br i1 %1442, label %1505, label %1443

1443:                                             ; preds = %1432
  %1444 = load ptr, ptr %1284, align 8, !tbaa !144
  %1445 = getelementptr inbounds i32, ptr %1444, i64 %1420
  %1446 = load i32, ptr %1445, align 4, !tbaa !59
  %1447 = icmp eq i32 %1446, 1
  br i1 %1447, label %1481, label %1448

1448:                                             ; preds = %1443
  %1449 = load ptr, ptr %1285, align 8, !tbaa !205
  %1450 = getelementptr inbounds %"class.std::vector.126", ptr %1449, i64 %1420
  %1451 = load ptr, ptr %1450, align 8, !tbaa !54
  %1452 = getelementptr inbounds i64, ptr %1451, i64 %1435
  %1453 = load i64, ptr %1452, align 8, !tbaa !56
  %1454 = and i64 %1453, %1439
  %1455 = icmp eq i64 %1454, 0
  br i1 %1455, label %1496, label %1456

1456:                                             ; preds = %1448
  %1457 = load i32, ptr %1424, align 4, !tbaa !59
  %1458 = icmp eq i32 %1433, 0
  br i1 %1458, label %1478, label %1459

1459:                                             ; preds = %1456, %1459
  %1460 = phi i64 [ %1467, %1459 ], [ 0, %1456 ]
  %1461 = phi i32 [ %1472, %1459 ], [ 0, %1456 ]
  %1462 = phi ptr [ %1471, %1459 ], [ %1451, %1456 ]
  %1463 = zext i32 %1461 to i64
  %1464 = load i64, ptr %1462, align 8, !tbaa !56
  %1465 = lshr i64 %1464, %1463
  %1466 = and i64 %1465, 1
  %1467 = add nuw nsw i64 %1466, %1460
  %1468 = add i32 %1461, 1
  %1469 = icmp eq i32 %1461, 63
  %1470 = zext i1 %1469 to i64
  %1471 = getelementptr inbounds i64, ptr %1462, i64 %1470
  %1472 = select i1 %1469, i32 0, i32 %1468
  %1473 = icmp ne ptr %1471, %1452
  %1474 = icmp ne i32 %1472, %1437
  %1475 = or i1 %1474, %1473
  br i1 %1475, label %1459, label %1476

1476:                                             ; preds = %1459
  %1477 = trunc i64 %1467 to i32
  br label %1478

1478:                                             ; preds = %1476, %1456
  %1479 = phi i32 [ 0, %1456 ], [ %1477, %1476 ]
  %1480 = add i32 %1479, %1457
  br label %1489

1481:                                             ; preds = %1443
  %1482 = load ptr, ptr %1288, align 8, !tbaa !184
  %1483 = getelementptr inbounds %"struct.std::pair.263", ptr %1482, i64 %1420
  %1484 = load i64, ptr %1483, align 4
  %1485 = trunc i64 %1484 to i32
  %1486 = icmp eq i32 %1433, %1485
  br i1 %1486, label %1487, label %1496

1487:                                             ; preds = %1481
  %1488 = load i32, ptr %1424, align 4, !tbaa !59
  br label %1489

1489:                                             ; preds = %1487, %1478
  %1490 = phi i32 [ %1480, %1478 ], [ %1488, %1487 ]
  %1491 = mul i32 %1426, %1490
  %1492 = add i32 %1491, %1277
  %1493 = zext i32 %1492 to i64
  %1494 = getelementptr inbounds double, ptr %1425, i64 %1493
  %1495 = load double, ptr %1494, align 8, !tbaa !133
  br label %1496

1496:                                             ; preds = %1489, %1481, %1448
  %1497 = phi double [ 0.000000e+00, %1481 ], [ 0.000000e+00, %1448 ], [ %1495, %1489 ]
  %1498 = icmp eq i32 %1294, %1433
  br i1 %1498, label %1499, label %1505

1499:                                             ; preds = %1496
  %1500 = fmul double %1418, %1497
  %1501 = load float, ptr %1431, align 4, !tbaa !282
  %1502 = fpext float %1501 to double
  %1503 = call double @llvm.fmuladd.f64(double %1500, double %1272, double %1502)
  %1504 = fptrunc double %1503 to float
  store float %1504, ptr %1431, align 4, !tbaa !282
  br label %1505

1505:                                             ; preds = %1499, %1496, %1432
  %1506 = add nuw i32 %1433, 1
  %1507 = icmp eq i32 %1506, %26
  br i1 %1507, label %1508, label %1432

1508:                                             ; preds = %1505
  %1509 = add nuw nsw i64 %1420, 1
  %1510 = icmp eq i64 %1509, %63
  br i1 %1510, label %1399, label %1419

1511:                                             ; preds = %1399
  %1512 = add nuw nsw i64 %1279, 1
  %1513 = icmp eq i64 %1512, %63
  br i1 %1513, label %1514, label %1278

1514:                                             ; preds = %1511, %1269
  %1515 = add nuw nsw i64 %1270, 1
  %1516 = icmp eq i64 %1515, %28
  br i1 %1516, label %1517, label %1269

1517:                                             ; preds = %487, %651, %405, %1266, %1514, %645, %415, %414, %644, %189, %917, %926
  br i1 %100, label %1532, label %1518

1518:                                             ; preds = %1517, %1528
  %1519 = phi i64 [ %1530, %1528 ], [ 0, %1517 ]
  %1520 = phi i32 [ %1529, %1528 ], [ 0, %1517 ]
  %1521 = getelementptr inbounds i32, ptr %71, i64 %1519
  %1522 = load i32, ptr %1521, align 4, !tbaa !59
  %1523 = load ptr, ptr %89, align 8, !tbaa !280
  %1524 = load i32, ptr %88, align 8, !tbaa !59
  %1525 = mul i32 %1524, %1520
  %1526 = zext i32 %1525 to i64
  %1527 = getelementptr inbounds float, ptr %1523, i64 %1526
  invoke void @_ZN6dealii12SparseMatrixIfE3addIfEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %3, i32 noundef %1522, i32 noundef %105, ptr noundef nonnull %71, ptr noundef nonnull %1527, i1 noundef zeroext true, i1 noundef zeroext false)
          to label %1528 unwind label %209

1528:                                             ; preds = %1518
  %1529 = add i32 %1520, 1
  %1530 = zext i32 %1529 to i64
  %1531 = icmp ugt i64 %104, %1530
  br i1 %1531, label %1518, label %1532

1532:                                             ; preds = %1528, %1517
  %1533 = load ptr, ptr %106, align 8, !tbaa !62
  %1534 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1533, i64 0, i32 1
  %1535 = load ptr, ptr %1534, align 8, !tbaa !46
  %1536 = ptrtoint ptr %1535 to i64
  %1537 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1533, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1538 = load i32, ptr %14, align 8
  %1539 = load i32, ptr %77, align 4
  br label %1540

1540:                                             ; preds = %1628, %1532
  %1541 = phi i32 [ %1538, %1532 ], [ %1607, %1628 ]
  %1542 = phi i32 [ %1538, %1532 ], [ %1608, %1628 ]
  %1543 = phi i32 [ %1538, %1532 ], [ %1629, %1628 ]
  %1544 = phi i32 [ %1539, %1532 ], [ %1609, %1628 ]
  %1545 = add nsw i32 %1544, 1
  %1546 = sext i32 %1543 to i64
  %1547 = getelementptr inbounds ptr, ptr %1535, i64 %1546
  %1548 = load ptr, ptr %1547, align 8, !tbaa !33
  %1549 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1548, i64 0, i32 4
  %1550 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1548, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1551 = load ptr, ptr %1550, align 8, !tbaa !48
  %1552 = load ptr, ptr %1549, align 8, !tbaa !50
  %1553 = ptrtoint ptr %1551 to i64
  %1554 = ptrtoint ptr %1552 to i64
  %1555 = sub i64 %1553, %1554
  %1556 = sdiv exact i64 %1555, 24
  %1557 = trunc i64 %1556 to i32
  %1558 = icmp slt i32 %1545, %1557
  br i1 %1558, label %1606, label %1559

1559:                                             ; preds = %1540
  %1560 = add nsw i64 %1546, 1
  %1561 = trunc i64 %1560 to i32
  store i32 %1561, ptr %14, align 8, !tbaa !60
  %1562 = load ptr, ptr %1537, align 8, !tbaa !51
  %1563 = ptrtoint ptr %1562 to i64
  %1564 = sub i64 %1563, %1536
  %1565 = shl i64 %1564, 29
  %1566 = ashr i64 %1565, 32
  %1567 = icmp slt i64 %1560, %1566
  br i1 %1567, label %1568, label %1600

1568:                                             ; preds = %1559
  %1569 = getelementptr inbounds ptr, ptr %1535, i64 %1560
  %1570 = load ptr, ptr %1569, align 8, !tbaa !33
  %1571 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1570, i64 0, i32 4
  %1572 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1570, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1573 = load ptr, ptr %1572, align 8, !tbaa !48
  %1574 = load ptr, ptr %1571, align 8, !tbaa !50
  %1575 = ptrtoint ptr %1573 to i64
  %1576 = ptrtoint ptr %1574 to i64
  %1577 = sub i64 %1575, %1576
  %1578 = sdiv exact i64 %1577, 24
  %1579 = trunc i64 %1578 to i32
  %1580 = icmp sgt i32 %1579, 0
  br i1 %1580, label %1602, label %1594

1581:                                             ; preds = %1594
  %1582 = getelementptr inbounds ptr, ptr %1535, i64 %1596
  %1583 = load ptr, ptr %1582, align 8, !tbaa !33
  %1584 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1583, i64 0, i32 4
  %1585 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1583, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1586 = load ptr, ptr %1585, align 8, !tbaa !48
  %1587 = load ptr, ptr %1584, align 8, !tbaa !50
  %1588 = ptrtoint ptr %1586 to i64
  %1589 = ptrtoint ptr %1587 to i64
  %1590 = sub i64 %1588, %1589
  %1591 = sdiv exact i64 %1590, 24
  %1592 = trunc i64 %1591 to i32
  %1593 = icmp sgt i32 %1592, 0
  br i1 %1593, label %1601, label %1594, !llvm.loop !52

1594:                                             ; preds = %1568, %1581
  %1595 = phi i64 [ %1596, %1581 ], [ %1560, %1568 ]
  %1596 = add i64 %1595, 1
  %1597 = trunc i64 %1596 to i32
  %1598 = icmp eq i64 %1596, %1566
  br i1 %1598, label %1599, label %1581, !llvm.loop !52

1599:                                             ; preds = %1594
  store i32 %1597, ptr %14, align 8, !tbaa !60
  br label %1600

1600:                                             ; preds = %1599, %1559
  store i32 -1, ptr %14, align 8, !tbaa !60
  br label %1606

1601:                                             ; preds = %1581
  store i32 %1597, ptr %14, align 8, !tbaa !60
  br label %1602

1602:                                             ; preds = %1601, %1568
  %1603 = phi i32 [ %1561, %1568 ], [ %1597, %1601 ]
  %1604 = phi i64 [ %1560, %1568 ], [ %1596, %1601 ]
  %1605 = trunc i64 %1604 to i32
  br label %1606

1606:                                             ; preds = %1602, %1600, %1540
  %1607 = phi i32 [ %1541, %1540 ], [ -1, %1600 ], [ %1603, %1602 ]
  %1608 = phi i32 [ %1542, %1540 ], [ -1, %1600 ], [ %1605, %1602 ]
  %1609 = phi i32 [ %1545, %1540 ], [ -1, %1600 ], [ 0, %1602 ]
  %1610 = phi i32 [ %1543, %1540 ], [ -1, %1600 ], [ %1605, %1602 ]
  %1611 = or i32 %1610, %1609
  %1612 = icmp sgt i32 %1611, -1
  br i1 %1612, label %1613, label %1630

1613:                                             ; preds = %1606
  %1614 = zext i32 %1610 to i64
  %1615 = getelementptr inbounds ptr, ptr %1535, i64 %1614
  %1616 = load ptr, ptr %1615, align 8, !tbaa !33
  %1617 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1616, i64 0, i32 4, i32 0, i32 3
  %1618 = load ptr, ptr %1617, align 8, !tbaa !54
  %1619 = lshr i32 %1609, 6
  %1620 = zext i32 %1619 to i64
  %1621 = getelementptr inbounds i64, ptr %1618, i64 %1620
  %1622 = and i32 %1609, 63
  %1623 = zext i32 %1622 to i64
  %1624 = shl nuw i64 1, %1623
  %1625 = load i64, ptr %1621, align 8, !tbaa !56
  %1626 = and i64 %1625, %1624
  %1627 = icmp eq i64 %1626, 0
  br i1 %1627, label %1628, label %1630

1628:                                             ; preds = %1613, %1633
  %1629 = phi i32 [ %1610, %1613 ], [ %1608, %1633 ]
  br label %1540

1630:                                             ; preds = %1613, %1606
  store i32 %1609, ptr %77, align 4, !tbaa !61
  %1631 = or i32 %1609, %1608
  %1632 = icmp sgt i32 %1631, -1
  br i1 %1632, label %1633, label %1644

1633:                                             ; preds = %1630
  %1634 = zext i32 %1608 to i64
  %1635 = getelementptr inbounds ptr, ptr %1535, i64 %1634
  %1636 = load ptr, ptr %1635, align 8, !tbaa !33
  %1637 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1636, i64 0, i32 4, i32 0, i32 1
  %1638 = shl i32 %1609, 2
  %1639 = zext i32 %1638 to i64
  %1640 = load ptr, ptr %1637, align 8, !tbaa !57
  %1641 = getelementptr inbounds i32, ptr %1640, i64 %1639
  %1642 = load i32, ptr %1641, align 4, !tbaa !59
  %1643 = icmp eq i32 %1642, -1
  br i1 %1643, label %1644, label %1628

1644:                                             ; preds = %1630, %1633
  %1645 = load i32, ptr %78, align 4, !tbaa !61
  %1646 = icmp ne i32 %1609, %1645
  %1647 = load i32, ptr %76, align 8
  %1648 = icmp ne i32 %1607, %1647
  %1649 = select i1 %1646, i1 true, i1 %1648
  br i1 %1649, label %142, label %1650

1650:                                             ; preds = %1644, %70
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1651 = icmp eq ptr %71, null
  br i1 %1651, label %1653, label %1652

1652:                                             ; preds = %1650
  call void @_ZdlPv(ptr noundef nonnull %71) #21
  br label %1653

1653:                                             ; preds = %1652, %1650
  %1654 = load ptr, ptr %11, align 8, !tbaa !224
  %1655 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %1656 = load ptr, ptr %1655, align 8, !tbaa !226
  %1657 = icmp eq ptr %1654, %1656
  br i1 %1657, label %1667, label %1658

1658:                                             ; preds = %1653, %1662
  %1659 = phi ptr [ %1663, %1662 ], [ %1654, %1653 ]
  %1660 = load ptr, ptr %1659, align 8, !tbaa !41
  %1661 = load ptr, ptr %1660, align 8
  invoke void %1661(ptr noundef nonnull align 8 dereferenceable(88) %1659)
          to label %1662 unwind label %1671

1662:                                             ; preds = %1658
  %1663 = getelementptr inbounds %"class.dealii::Vector", ptr %1659, i64 1
  %1664 = icmp eq ptr %1663, %1656
  br i1 %1664, label %1665, label %1658

1665:                                             ; preds = %1662
  %1666 = load ptr, ptr %11, align 8, !tbaa !224
  br label %1667

1667:                                             ; preds = %1665, %1653
  %1668 = phi ptr [ %1666, %1665 ], [ %1654, %1653 ]
  %1669 = icmp eq ptr %1668, null
  br i1 %1669, label %1676, label %1670

1670:                                             ; preds = %1667
  call void @_ZdlPv(ptr noundef nonnull %1668) #21
  br label %1676

1671:                                             ; preds = %1658
  %1672 = landingpad { ptr, i32 }
          cleanup
  %1673 = load ptr, ptr %11, align 8, !tbaa !224
  %1674 = icmp eq ptr %1673, null
  br i1 %1674, label %1722, label %1675

1675:                                             ; preds = %1671
  call void @_ZdlPv(ptr noundef nonnull %1673) #21
  br label %1722

1676:                                             ; preds = %1670, %1667
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  %1677 = load ptr, ptr %10, align 8, !tbaa !131
  %1678 = icmp eq ptr %1677, null
  br i1 %1678, label %1680, label %1679

1679:                                             ; preds = %1676
  call void @_ZdlPv(ptr noundef nonnull %1677) #21
  br label %1680

1680:                                             ; preds = %1679, %1676
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EfEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !41
  %1681 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %9, i64 0, i32 1
  %1682 = load ptr, ptr %1681, align 8, !tbaa !280
  %1683 = icmp eq ptr %1682, null
  br i1 %1683, label %1685, label %1684

1684:                                             ; preds = %1680
  call void @_ZdaPv(ptr noundef nonnull %1682) #21
  br label %1685

1685:                                             ; preds = %1684, %1680
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %9)
          to label %1686 unwind label %197

1686:                                             ; preds = %1685
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !41
  %1687 = getelementptr inbounds %"class.dealii::FEValues", ptr %8, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1687)
          to label %1695 unwind label %1688

1688:                                             ; preds = %1686
  %1689 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1690 unwind label %1692

1690:                                             ; preds = %1688, %1743
  %1691 = phi { ptr, i32 } [ %1735, %1743 ], [ %1689, %1688 ]
  resume { ptr, i32 } %1691

1692:                                             ; preds = %1688
  %1693 = landingpad { ptr, i32 }
          catch ptr null
  %1694 = extractvalue { ptr, i32 } %1693, 0
  call void @__clang_call_terminate(ptr %1694) #22
  unreachable

1695:                                             ; preds = %1686
  call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %8) #19
  ret void

1696:                                             ; preds = %209, %211
  %1697 = phi { ptr, i32 } [ %210, %209 ], [ %212, %211 ]
  call void @_ZdlPv(ptr noundef nonnull %71) #21
  br label %1698

1698:                                             ; preds = %1696, %211, %207
  %1699 = phi { ptr, i32 } [ %208, %207 ], [ %212, %211 ], [ %1697, %1696 ]
  %1700 = load ptr, ptr %11, align 8, !tbaa !224
  %1701 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %1702 = load ptr, ptr %1701, align 8, !tbaa !226
  %1703 = icmp eq ptr %1700, %1702
  br i1 %1703, label %1713, label %1704

1704:                                             ; preds = %1698, %1708
  %1705 = phi ptr [ %1709, %1708 ], [ %1700, %1698 ]
  %1706 = load ptr, ptr %1705, align 8, !tbaa !41
  %1707 = load ptr, ptr %1706, align 8
  invoke void %1707(ptr noundef nonnull align 8 dereferenceable(88) %1705)
          to label %1708 unwind label %1717

1708:                                             ; preds = %1704
  %1709 = getelementptr inbounds %"class.dealii::Vector", ptr %1705, i64 1
  %1710 = icmp eq ptr %1709, %1702
  br i1 %1710, label %1711, label %1704

1711:                                             ; preds = %1708
  %1712 = load ptr, ptr %11, align 8, !tbaa !224
  br label %1713

1713:                                             ; preds = %1711, %1698
  %1714 = phi ptr [ %1712, %1711 ], [ %1700, %1698 ]
  %1715 = icmp eq ptr %1714, null
  br i1 %1715, label %1722, label %1716

1716:                                             ; preds = %1713
  call void @_ZdlPv(ptr noundef nonnull %1714) #21
  br label %1722

1717:                                             ; preds = %1704
  %1718 = landingpad { ptr, i32 }
          catch ptr null
  %1719 = load ptr, ptr %11, align 8, !tbaa !224
  %1720 = icmp eq ptr %1719, null
  br i1 %1720, label %1746, label %1721

1721:                                             ; preds = %1717
  call void @_ZdlPv(ptr noundef nonnull %1719) #21
  br label %1746

1722:                                             ; preds = %1675, %1671, %1716, %1713, %205
  %1723 = phi { ptr, i32 } [ %206, %205 ], [ %1699, %1713 ], [ %1699, %1716 ], [ %1672, %1675 ], [ %1672, %1671 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  %1724 = load ptr, ptr %10, align 8, !tbaa !131
  %1725 = icmp eq ptr %1724, null
  br i1 %1725, label %1727, label %1726

1726:                                             ; preds = %1722
  call void @_ZdlPv(ptr noundef nonnull %1724) #21
  br label %1727

1727:                                             ; preds = %1726, %1722, %199
  %1728 = phi { ptr, i32 } [ %200, %199 ], [ %1723, %1722 ], [ %1723, %1726 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EfEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !41
  %1729 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %9, i64 0, i32 1
  %1730 = load ptr, ptr %1729, align 8, !tbaa !280
  %1731 = icmp eq ptr %1730, null
  br i1 %1731, label %1733, label %1732

1732:                                             ; preds = %1727
  call void @_ZdaPv(ptr noundef nonnull %1730) #21
  br label %1733

1733:                                             ; preds = %1732, %1727
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %9)
          to label %1734 unwind label %1744

1734:                                             ; preds = %1733, %197
  %1735 = phi { ptr, i32 } [ %198, %197 ], [ %1728, %1733 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !41
  %1736 = getelementptr inbounds %"class.dealii::FEValues", ptr %8, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1736)
          to label %1737 unwind label %1738

1737:                                             ; preds = %1734
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1743 unwind label %1744

1738:                                             ; preds = %1734
  %1739 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1746 unwind label %1740

1740:                                             ; preds = %1738
  %1741 = landingpad { ptr, i32 }
          catch ptr null
  %1742 = extractvalue { ptr, i32 } %1741, 0
  call void @__clang_call_terminate(ptr %1742) #22
  unreachable

1743:                                             ; preds = %1737
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %8) #19
  br label %1690

1744:                                             ; preds = %1737, %1733, %203
  %1745 = landingpad { ptr, i32 }
          catch ptr null
  br label %1746

1746:                                             ; preds = %1744, %1738, %1717, %1721
  %1747 = phi { ptr, i32 } [ %1718, %1721 ], [ %1718, %1717 ], [ %1745, %1744 ], [ %1739, %1738 ]
  %1748 = extractvalue { ptr, i32 } %1747, 0
  call void @__clang_call_terminate(ptr %1748) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(168) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 1 %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.266", align 8
  %11 = alloca %"class.boost::_bi::bind_t.288", align 8
  %12 = alloca %"class.boost::function.37", align 8
  %13 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  store ptr null, ptr %12, align 8, !tbaa !25
  %14 = load ptr, ptr %1, align 8, !tbaa !25
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  store ptr %14, ptr %12, align 8, !tbaa !25
  %17 = load ptr, ptr %14, align 8, !tbaa !227
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %17(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef 0)
  br label %20

20:                                               ; preds = %9, %16
  call void @llvm.experimental.noalias.scope.decl(metadata !301)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17, !noalias !301
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %13, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17, !alias.scope !301
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %13, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !17, !noalias !301
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %24, ptr noundef nonnull align 8 dereferenceable(16) %25, i64 16, i1 false)
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %27, ptr %28, align 8, !tbaa !17, !alias.scope !301
  %29 = ptrtoint ptr %8 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIfEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSU_IS9_EENSU_ISD_EENSU_ISG_EESL_SO_NSU_ISQ_EEEENS_3_bi6bind_tINS10_11unspecifiedET_NS10_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES13_S15_S16_S17_S18_S19_S1A_S1B_(ptr nonnull sret(%"class.boost::_bi::bind_t.288") align 8 %11, ptr noundef nonnull %12, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, ptr noundef %6, ptr noundef nonnull %13, i64 %29)
          to label %30 unwind label %59

30:                                               ; preds = %20
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS4_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull %11, i32 noundef 0)
          to label %31 unwind label %61

31:                                               ; preds = %30
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %32 unwind label %63

32:                                               ; preds = %31
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  %34 = icmp eq ptr %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = load ptr, ptr %33, align 8, !tbaa !231
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %36(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %39, i32 noundef 2)
          to label %40 unwind label %61

40:                                               ; preds = %38, %35
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %41

41:                                               ; preds = %40, %32
  %42 = load ptr, ptr %11, align 8, !tbaa !25
  %43 = icmp eq ptr %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load ptr, ptr %42, align 8, !tbaa !278
  %46 = icmp eq ptr %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(24) %48, ptr noundef nonnull align 8 dereferenceable(24) %48, i32 noundef 2)
          to label %49 unwind label %59

49:                                               ; preds = %47, %44
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %50

50:                                               ; preds = %49, %41
  %51 = load ptr, ptr %12, align 8, !tbaa !25
  %52 = icmp eq ptr %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr %51, align 8, !tbaa !278
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  ret void

59:                                               ; preds = %47, %20
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %83

61:                                               ; preds = %38, %30
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %73

63:                                               ; preds = %31
  %64 = landingpad { ptr, i32 }
          cleanup
  %65 = load ptr, ptr %10, align 8, !tbaa !25
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = load ptr, ptr %65, align 8, !tbaa !231
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %68(ptr noundef nonnull align 8 dereferenceable(24) %71, ptr noundef nonnull align 8 dereferenceable(24) %71, i32 noundef 2)
          to label %72 unwind label %93

72:                                               ; preds = %70, %67
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %73

73:                                               ; preds = %72, %63, %61
  %74 = phi { ptr, i32 } [ %62, %61 ], [ %64, %63 ], [ %64, %72 ]
  %75 = load ptr, ptr %11, align 8, !tbaa !25
  %76 = icmp eq ptr %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr %75, align 8, !tbaa !278
  %79 = icmp eq ptr %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %78(ptr noundef nonnull align 8 dereferenceable(24) %81, ptr noundef nonnull align 8 dereferenceable(24) %81, i32 noundef 2)
          to label %82 unwind label %93

82:                                               ; preds = %80, %77
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %83

83:                                               ; preds = %82, %73, %59
  %84 = phi { ptr, i32 } [ %60, %59 ], [ %74, %73 ], [ %74, %82 ]
  %85 = load ptr, ptr %12, align 8, !tbaa !25
  %86 = icmp eq ptr %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = load ptr, ptr %85, align 8, !tbaa !278
  %89 = icmp eq ptr %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %88(ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %91, i32 noundef 2)
          to label %92 unwind label %93

92:                                               ; preds = %87, %90, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  resume { ptr, i32 } %84

93:                                               ; preds = %90, %80, %70
  %94 = landingpad { ptr, i32 }
          catch ptr null
  %95 = extractvalue { ptr, i32 } %94, 0
  call void @__clang_call_terminate(ptr %95) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef %3)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %9 = alloca %"class.std::vector", align 8
  %10 = alloca %"class.dealii::TriaActiveIterator", align 8
  %11 = alloca %"class.dealii::TriaActiveIterator", align 8
  %12 = alloca %"class.dealii::TriaRawIterator", align 8
  %13 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %14 = alloca %"class.dealii::Threads::Thread", align 16
  %15 = alloca %"class.dealii::Threads::internal::fun_encapsulator.40", align 8
  %16 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %17 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %8, i64 0, i32 1
  store ptr %8, ptr %18, align 8, !tbaa !10
  store ptr %8, ptr %8, align 8, !tbaa !13
  %19 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %8, i64 0, i32 1
  store i64 0, ptr %19, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %10, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %20 unwind label %43

20:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %12, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %21 unwind label %45

21:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %12, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  store ptr %24, ptr %22, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %9, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %17)
          to label %25 unwind label %45

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %16, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.boost::shared_ptr", ptr %14, i64 0, i32 1
  %33 = zext i32 %17 to i64
  br label %49

34:                                               ; preds = %103, %25
  %35 = load ptr, ptr %8, align 8, !tbaa !13
  %36 = icmp eq ptr %35, %8
  br i1 %36, label %122, label %37

37:                                               ; preds = %34, %40
  %38 = phi ptr [ %41, %40 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_List_node", ptr %38, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %39)
          to label %40 unwind label %155

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !13
  %42 = icmp eq ptr %41, %8
  br i1 %42, label %122, label %37

43:                                               ; preds = %7
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %21, %20
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %46, %45 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  br label %162

49:                                               ; preds = %27, %103
  %50 = phi i64 [ 0, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !304)
  store ptr null, ptr %15, align 8, !tbaa !25, !alias.scope !304
  %51 = load ptr, ptr @_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable, align 8, !tbaa !307, !noalias !304
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  invoke void %51(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %54 unwind label %106

54:                                               ; preds = %53, %49
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE, ptr %28, align 8, !tbaa !30, !alias.scope !304
  store ptr @_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable, ptr %15, align 8, !tbaa !25, !alias.scope !304
  %55 = load ptr, ptr %9, align 8, !tbaa !31
  %56 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50
  %57 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  store ptr %58, ptr %29, align 8, !tbaa !17
  %59 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50, i32 1
  %60 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  store ptr %61, ptr %31, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %14, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %62 unwind label %108

62:                                               ; preds = %54
  %63 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %64 unwind label %110

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_List_node", ptr %63, i64 0, i32 1
  %66 = load <2 x ptr>, ptr %14, align 16, !tbaa !33
  store <2 x ptr> %66, ptr %65, align 8, !tbaa !33
  %67 = extractelement <2 x ptr> %66, i64 1
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %67, i64 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !34
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %70, align 8, !tbaa !34
  br label %73

73:                                               ; preds = %69, %64
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull %8) #19
  %74 = load i64, ptr %19, align 8, !tbaa !36
  %75 = add i64 %74, 1
  store i64 %75, ptr %19, align 8, !tbaa !36
  %76 = load ptr, ptr %32, align 8, !tbaa !39
  %77 = icmp eq ptr %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = add nsw i64 %80, -1
  store i64 %81, ptr %79, align 8, !tbaa !34
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %78
  %84 = load ptr, ptr %76, align 8, !tbaa !41
  %85 = getelementptr inbounds ptr, ptr %84, i64 2
  %86 = load ptr, ptr %85, align 8
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %87 unwind label %108

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !43
  %90 = add nsw i64 %89, -1
  store i64 %90, ptr %88, align 8, !tbaa !43
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load ptr, ptr %76, align 8, !tbaa !41
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %96 unwind label %108

96:                                               ; preds = %87, %78, %73, %92
  %97 = load ptr, ptr %15, align 8, !tbaa !25
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load ptr, ptr %97, align 8, !tbaa !307
  %101 = icmp eq ptr %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  invoke void %100(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %103 unwind label %106

103:                                              ; preds = %99, %102, %96
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  %104 = add nuw nsw i64 %50, 1
  %105 = icmp eq i64 %104, %33
  br i1 %105, label %34, label %49

106:                                              ; preds = %102, %53
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %120

108:                                              ; preds = %92, %83, %54
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %112

110:                                              ; preds = %62
  %111 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %112 unwind label %165

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  %114 = load ptr, ptr %15, align 8, !tbaa !25
  %115 = icmp eq ptr %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !307
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  invoke void %117(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %120 unwind label %165

120:                                              ; preds = %116, %119, %112, %106
  %121 = phi { ptr, i32 } [ %107, %106 ], [ %113, %112 ], [ %113, %119 ], [ %113, %116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  br label %157

122:                                              ; preds = %40, %34
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %123 = load ptr, ptr %9, align 8, !tbaa !31
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZdlPv(ptr noundef nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  %127 = load ptr, ptr %8, align 8, !tbaa !13
  %128 = icmp eq ptr %127, %8
  br i1 %128, label %154, label %129

129:                                              ; preds = %126, %152
  %130 = phi ptr [ %131, %152 ], [ %127, %126 ]
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds %"struct.std::_List_node", ptr %130, i64 0, i32 1, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !34
  %138 = add nsw i64 %137, -1
  store i64 %138, ptr %136, align 8, !tbaa !34
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load ptr, ptr %133, align 8, !tbaa !41
  %142 = getelementptr inbounds ptr, ptr %141, i64 2
  %143 = load ptr, ptr %142, align 8
  call void %143(ptr noundef nonnull align 8 dereferenceable(24) %133)
  %144 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !43
  %146 = add nsw i64 %145, -1
  store i64 %146, ptr %144, align 8, !tbaa !43
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load ptr, ptr %133, align 8, !tbaa !41
  %150 = getelementptr inbounds ptr, ptr %149, i64 3
  %151 = load ptr, ptr %150, align 8
  call void %151(ptr noundef nonnull align 8 dereferenceable(24) %133)
  br label %152

152:                                              ; preds = %148, %140, %135, %129
  call void @_ZdlPv(ptr noundef nonnull %130) #21
  %153 = icmp eq ptr %131, %8
  br i1 %153, label %154, label %129

154:                                              ; preds = %152, %126
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  ret void

155:                                              ; preds = %37
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %157

157:                                              ; preds = %155, %120
  %158 = phi { ptr, i32 } [ %121, %120 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %159 = load ptr, ptr %9, align 8, !tbaa !31
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %159) #21
  br label %162

162:                                              ; preds = %161, %157, %47
  %163 = phi { ptr, i32 } [ %48, %47 ], [ %158, %157 ], [ %158, %161 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %164 unwind label %165

164:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  resume { ptr, i32 } %163

165:                                              ; preds = %119, %162, %110
  %166 = landingpad { ptr, i32 }
          catch ptr null
  %167 = extractvalue { ptr, i32 } %166, 0
  call void @__clang_call_terminate(ptr %167) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::FEValues", align 8
  %11 = alloca %"class.dealii::FullMatrix.282", align 8
  %12 = alloca %"class.dealii::Vector", align 8
  %13 = alloca %"class.std::vector.92", align 8
  %14 = alloca %"class.std::vector.258", align 8
  %15 = alloca %"class.dealii::Vector", align 8
  %16 = alloca %"class.std::allocator.260", align 1
  %17 = alloca %"class.std::vector.92", align 8
  %18 = alloca %"class.std::vector.258", align 8
  %19 = alloca %"class.dealii::Vector", align 8
  %20 = alloca %"class.std::allocator.260", align 1
  %21 = alloca %"class.dealii::TriaActiveIterator", align 8
  %22 = icmp eq ptr %6, null
  call void @llvm.lifetime.start.p0(i64 776, ptr nonnull %10) #19
  %23 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !63
  call void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776) %10, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(728) %24, ptr noundef nonnull align 8 dereferenceable(128) %2, i32 noundef 49)
  %25 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 3
  %26 = load i32, ptr %25, align 8, !tbaa !65
  %27 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 2
  %28 = load i32, ptr %27, align 4, !tbaa !127
  %29 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 6
  %30 = load ptr, ptr %29, align 8, !tbaa !63
  %31 = getelementptr inbounds i8, ptr %30, i64 116
  %32 = load i32, ptr %31, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #19
  invoke void @_ZN6dealii10FullMatrixIfEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %11, i32 noundef %26, i32 noundef %26)
          to label %33 unwind label %250

33:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %12) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %34 unwind label %252

34:                                               ; preds = %33
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %35 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %35, i8 0, i64 16, i1 false)
  %36 = icmp eq i32 %26, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %34
  %38 = zext i32 %26 to i64
  %39 = shl nuw nsw i64 %38, 3
  %40 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %39) #20
          to label %41 unwind label %44

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %43 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 2
  store ptr %40, ptr %42, align 8, !tbaa !136
  store i32 %26, ptr %43, align 4, !tbaa !138
  store i32 %26, ptr %35, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %40, i8 0, i64 %39, i1 false), !tbaa !133
  br label %49

44:                                               ; preds = %37
  %45 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1881 unwind label %46

46:                                               ; preds = %44
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable

49:                                               ; preds = %41, %34
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  %50 = zext i32 %28 to i64
  %51 = icmp eq i32 %28, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %59

53:                                               ; preds = %49
  %54 = shl nuw nsw i64 %50, 3
  %55 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %54) #20
          to label %56 unwind label %254

56:                                               ; preds = %53
  store ptr %55, ptr %13, align 8, !tbaa !131
  %57 = getelementptr inbounds double, ptr %55, i64 %50
  %58 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 2
  store ptr %57, ptr %58, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %55, i8 0, i64 %54, i1 false), !tbaa !133
  br label %59

59:                                               ; preds = %56, %52
  %60 = phi ptr [ null, %52 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 1
  store ptr %60, ptr %61, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %62 unwind label %256

62:                                               ; preds = %59
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %63, i8 0, i64 16, i1 false)
  %64 = icmp eq i32 %32, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = zext i32 %32 to i64
  %67 = shl nuw nsw i64 %66, 3
  %68 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %67) #20
          to label %69 unwind label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %71 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 2
  store ptr %68, ptr %70, align 8, !tbaa !136
  store i32 %32, ptr %71, align 4, !tbaa !138
  store i32 %32, ptr %63, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %68, i8 0, i64 %67, i1 false), !tbaa !133
  br label %77

72:                                               ; preds = %65
  %73 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %260 unwind label %74

74:                                               ; preds = %72
  %75 = landingpad { ptr, i32 }
          catch ptr null
  %76 = extractvalue { ptr, i32 } %75, 0
  call void @__clang_call_terminate(ptr %76) #22
  unreachable

77:                                               ; preds = %69, %62
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %14, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef nonnull align 1 dereferenceable(1) %16)
          to label %78 unwind label %258

78:                                               ; preds = %77
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %79 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !136
  %81 = icmp eq ptr %80, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  call void @_ZdaPv(ptr noundef nonnull %80) #21
  store ptr null, ptr %79, align 8, !tbaa !136
  br label %83

83:                                               ; preds = %82, %78
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %84 unwind label %256

84:                                               ; preds = %83
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %17) #19
  br i1 %51, label %85, label %86

85:                                               ; preds = %84
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  br label %92

86:                                               ; preds = %84
  %87 = shl nuw nsw i64 %50, 3
  %88 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %87) #20
          to label %89 unwind label %262

89:                                               ; preds = %86
  store ptr %88, ptr %17, align 8, !tbaa !131
  %90 = getelementptr inbounds double, ptr %88, i64 %50
  %91 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 2
  store ptr %90, ptr %91, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %88, i8 0, i64 %87, i1 false), !tbaa !133
  br label %92

92:                                               ; preds = %89, %85
  %93 = phi ptr [ null, %85 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 1
  store ptr %93, ptr %94, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %19) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %95 unwind label %264

95:                                               ; preds = %92
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !41
  %96 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %96, i8 0, i64 16, i1 false)
  br i1 %64, label %109, label %97

97:                                               ; preds = %95
  %98 = zext i32 %32 to i64
  %99 = shl nuw nsw i64 %98, 3
  %100 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %99) #20
          to label %101 unwind label %104

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 3
  %103 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 2
  store ptr %100, ptr %102, align 8, !tbaa !136
  store i32 %32, ptr %103, align 4, !tbaa !138
  store i32 %32, ptr %96, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %100, i8 0, i64 %99, i1 false), !tbaa !133
  br label %109

104:                                              ; preds = %97
  %105 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %268 unwind label %106

106:                                              ; preds = %104
  %107 = landingpad { ptr, i32 }
          catch ptr null
  %108 = extractvalue { ptr, i32 } %107, 0
  call void @__clang_call_terminate(ptr %108) #22
  unreachable

109:                                              ; preds = %101, %95
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %20) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %18, i64 noundef %50, ptr noundef nonnull align 8 dereferenceable(88) %19, ptr noundef nonnull align 1 dereferenceable(1) %20)
          to label %110 unwind label %266

110:                                              ; preds = %109
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !41
  %111 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 3
  %112 = load ptr, ptr %111, align 8, !tbaa !136
  %113 = icmp eq ptr %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %110
  call void @_ZdaPv(ptr noundef nonnull %112) #21
  store ptr null, ptr %111, align 8, !tbaa !136
  br label %115

115:                                              ; preds = %114, %110
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %116 unwind label %264

116:                                              ; preds = %115
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %19) #19
  %117 = zext i32 %26 to i64
  br i1 %36, label %123, label %118

118:                                              ; preds = %116
  %119 = shl nuw nsw i64 %117, 2
  %120 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %119) #20
          to label %121 unwind label %270

121:                                              ; preds = %118
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %120, i8 0, i64 %119, i1 false), !tbaa !59
  %122 = getelementptr inbounds i32, ptr %120, i64 %117
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi ptr [ null, %116 ], [ %120, %121 ]
  %125 = phi ptr [ null, %116 ], [ %122, %121 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %21) #19
  %126 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %128 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %21, i64 0, i32 1
  store ptr %127, ptr %128, align 8, !tbaa !17
  %129 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %130 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %21, i64 0, i32 1
  %131 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i32, ptr %130, align 4, !tbaa !61
  %133 = load i32, ptr %131, align 4, !tbaa !61
  %134 = icmp ne i32 %132, %133
  %135 = load i32, ptr %21, align 8
  %136 = load i32, ptr %129, align 8
  %137 = icmp ne i32 %135, %136
  %138 = select i1 %134, i1 true, i1 %137
  br i1 %138, label %139, label %1735

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %11, i64 0, i32 3
  %141 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %11, i64 0, i32 3, i32 0, i32 0, i64 1
  %142 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %11, i64 0, i32 1
  %143 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %144 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %145 = getelementptr inbounds i8, ptr %10, i64 312
  %146 = getelementptr inbounds %"class.dealii::Function", ptr %6, i64 0, i32 2
  %147 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %30, i64 0, i32 2
  %148 = getelementptr inbounds i8, ptr %10, i64 216
  %149 = getelementptr inbounds i8, ptr %10, i64 480
  %150 = getelementptr inbounds i8, ptr %10, i64 144
  %151 = getelementptr inbounds i8, ptr %10, i64 160
  %152 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %30, i64 0, i32 12
  %153 = icmp eq i32 %32, 1
  %154 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %30, i64 0, i32 19
  %155 = icmp eq ptr %125, %124
  %156 = ptrtoint ptr %124 to i64
  %157 = ptrtoint ptr %125 to i64
  %158 = sub i64 %157, %156
  %159 = ashr exact i64 %158, 2
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %162 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %21, i64 0, i32 2
  %163 = zext i32 %32 to i64
  %164 = zext i32 %32 to i64
  %165 = add nsw i64 %117, -1
  %166 = add nsw i64 %117, -1
  %167 = shl nuw nsw i64 %117, 3
  %168 = shl nuw nsw i64 %117, 2
  %169 = add nsw i64 %117, -1
  %170 = icmp ult i32 %26, 8
  %171 = trunc i64 %169 to i32
  %172 = icmp ugt i64 %169, 4294967295
  %173 = trunc i64 %169 to i32
  %174 = and i64 %117, 4294967292
  %175 = icmp eq i64 %174, %117
  %176 = or i1 %36, %64
  %177 = icmp ult i32 %26, 20
  %178 = trunc i64 %166 to i32
  %179 = icmp ugt i64 %166, 4294967295
  %180 = trunc i64 %166 to i32
  %181 = and i64 %117, 4294967292
  %182 = icmp eq i64 %181, %117
  %183 = icmp ult i32 %26, 16
  %184 = trunc i64 %165 to i32
  %185 = icmp ugt i64 %165, 4294967295
  %186 = trunc i64 %165 to i32
  %187 = and i64 %117, 4294967280
  %188 = icmp eq i64 %187, %117
  %189 = and i64 %117, 1
  %190 = icmp eq i64 %189, 0
  %191 = sub nsw i64 0, %117
  %192 = or i1 %36, %64
  %193 = and i64 %117, 1
  %194 = icmp eq i64 %169, 0
  %195 = and i64 %117, 4294967294
  %196 = icmp eq i64 %193, 0
  br label %197

197:                                              ; preds = %139, %1704
  invoke void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776) %10, ptr noundef nonnull align 8 dereferenceable(24) %21)
          to label %198 unwind label %272

198:                                              ; preds = %197
  %199 = load i32, ptr %140, align 4, !tbaa !59
  %200 = load i32, ptr %141, align 8, !tbaa !59
  %201 = mul i32 %200, %199
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %198
  %204 = load ptr, ptr %142, align 8, !tbaa !280
  %205 = zext i32 %201 to i64
  %206 = shl nuw nsw i64 %205, 2
  call void @llvm.memset.p0.i64(ptr align 4 %204, i8 0, i64 %206, i1 false), !tbaa !282
  br label %207

207:                                              ; preds = %203, %198
  %208 = load i32, ptr %35, align 8, !tbaa !139
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %207
  %211 = load ptr, ptr %143, align 8, !tbaa !136
  %212 = zext i32 %208 to i64
  %213 = shl nuw nsw i64 %212, 3
  call void @llvm.memset.p0.i64(ptr align 8 %211, i8 0, i64 %213, i1 false), !tbaa !133
  br label %214

214:                                              ; preds = %210, %207
  %215 = load ptr, ptr %128, align 8, !tbaa !17
  %216 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %215, i64 0, i32 2
  %217 = load ptr, ptr %216, align 8, !tbaa !63
  %218 = getelementptr inbounds i8, ptr %217, i64 112
  %219 = load i32, ptr %218, align 8, !tbaa !141
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %243, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %215, i64 0, i32 3
  %223 = load ptr, ptr %222, align 8, !tbaa !142
  %224 = load i32, ptr %21, align 8, !tbaa !60
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds ptr, ptr %223, i64 %225
  %227 = load ptr, ptr %226, align 8, !tbaa !33
  %228 = load ptr, ptr %227, align 8, !tbaa !144
  %229 = load i32, ptr %130, align 4, !tbaa !61
  %230 = mul i32 %229, %219
  %231 = zext i32 %230 to i64
  %232 = getelementptr inbounds i32, ptr %228, i64 %231
  br label %233

233:                                              ; preds = %233, %221
  %234 = phi i64 [ 0, %221 ], [ %238, %233 ]
  %235 = phi ptr [ %232, %221 ], [ %239, %233 ]
  %236 = load i32, ptr %235, align 4, !tbaa !59
  %237 = getelementptr inbounds i32, ptr %124, i64 %234
  store i32 %236, ptr %237, align 4, !tbaa !59
  %238 = add nuw nsw i64 %234, 1
  %239 = getelementptr inbounds i32, ptr %235, i64 1
  %240 = load i32, ptr %218, align 8, !tbaa !141
  %241 = zext i32 %240 to i64
  %242 = icmp ult i64 %238, %241
  br i1 %242, label %233, label %243

243:                                              ; preds = %233, %214
  %244 = load i32, ptr %144, align 8, !tbaa !145
  %245 = icmp eq i32 %244, 1
  %246 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %245, label %247, label %275

247:                                              ; preds = %243
  %248 = getelementptr inbounds ptr, ptr %246, i64 6
  %249 = load ptr, ptr %248, align 8
  invoke void %249(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %17, i32 noundef 0)
          to label %278 unwind label %272

250:                                              ; preds = %1803, %9
  %251 = landingpad { ptr, i32 }
          cleanup
  br label %1888

252:                                              ; preds = %1797, %33
  %253 = landingpad { ptr, i32 }
          cleanup
  br label %1881

254:                                              ; preds = %53
  %255 = landingpad { ptr, i32 }
          cleanup
  br label %1874

256:                                              ; preds = %83, %59
  %257 = landingpad { ptr, i32 }
          cleanup
  br label %260

258:                                              ; preds = %77
  %259 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %15)
          to label %260 unwind label %1898

260:                                              ; preds = %256, %72, %258
  %261 = phi { ptr, i32 } [ %259, %258 ], [ %257, %256 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  br label %1869

262:                                              ; preds = %86
  %263 = landingpad { ptr, i32 }
          cleanup
  br label %1845

264:                                              ; preds = %115, %92
  %265 = landingpad { ptr, i32 }
          cleanup
  br label %268

266:                                              ; preds = %109
  %267 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %19)
          to label %268 unwind label %1898

268:                                              ; preds = %264, %104, %266
  %269 = phi { ptr, i32 } [ %267, %266 ], [ %265, %264 ], [ %105, %104 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %19) #19
  br label %1840

270:                                              ; preds = %118
  %271 = landingpad { ptr, i32 }
          cleanup
  br label %1816

272:                                              ; preds = %430, %283, %275, %247, %197
  %273 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %274 = icmp eq ptr %124, null
  br i1 %274, label %1816, label %1814

275:                                              ; preds = %243
  %276 = getelementptr inbounds ptr, ptr %246, i64 7
  %277 = load ptr, ptr %276, align 8
  invoke void %277(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %278 unwind label %272

278:                                              ; preds = %275, %247
  br i1 %22, label %964, label %279

279:                                              ; preds = %278
  %280 = load i32, ptr %146, align 8, !tbaa !145
  %281 = icmp eq i32 %280, 1
  %282 = load ptr, ptr %6, align 8, !tbaa !41
  br i1 %281, label %283, label %430

283:                                              ; preds = %279
  %284 = getelementptr inbounds ptr, ptr %282, i64 6
  %285 = load ptr, ptr %284, align 8
  invoke void %285(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %286 unwind label %272

286:                                              ; preds = %283
  br i1 %51, label %1562, label %287

287:                                              ; preds = %286
  %288 = load ptr, ptr %148, align 8, !tbaa !131
  %289 = load ptr, ptr %29, align 8
  %290 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %289, i64 0, i32 2
  %291 = load ptr, ptr %150, align 8
  %292 = load i32, ptr %151, align 8
  br label %293

293:                                              ; preds = %287, %427
  %294 = phi i64 [ 0, %287 ], [ %428, %427 ]
  %295 = getelementptr inbounds double, ptr %288, i64 %294
  %296 = load double, ptr %295, align 8, !tbaa !133
  br i1 %36, label %427, label %297

297:                                              ; preds = %293
  %298 = load i8, ptr %290, align 4, !tbaa !148, !range !182, !noundef !183
  %299 = icmp eq i8 %298, 0
  %300 = load ptr, ptr %149, align 8
  %301 = load ptr, ptr %152, align 8, !tbaa !184
  %302 = load i32, ptr %144, align 8, !tbaa !145
  %303 = icmp eq i32 %302, 1
  %304 = load ptr, ptr %18, align 8
  %305 = getelementptr inbounds %"class.dealii::Vector", ptr %304, i64 %294, i32 3
  %306 = load ptr, ptr %143, align 8
  %307 = load ptr, ptr %17, align 8
  %308 = getelementptr inbounds double, ptr %307, i64 %294
  %309 = trunc i64 %294 to i32
  br label %310

310:                                              ; preds = %336, %297
  %311 = phi i64 [ %343, %336 ], [ 0, %297 ]
  %312 = trunc i64 %311 to i32
  br i1 %299, label %313, label %316

313:                                              ; preds = %310
  %314 = getelementptr inbounds i32, ptr %300, i64 %311
  %315 = load i32, ptr %314, align 4, !tbaa !59
  br label %316

316:                                              ; preds = %313, %310
  %317 = phi i32 [ %315, %313 ], [ %312, %310 ]
  %318 = mul i32 %292, %317
  %319 = add i32 %318, %309
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds double, ptr %291, i64 %320
  %322 = load double, ptr %321, align 8, !tbaa !133
  %323 = getelementptr inbounds %"struct.std::pair.263", ptr %301, i64 %311
  %324 = load i64, ptr %323, align 4
  %325 = trunc i64 %324 to i32
  %326 = load ptr, ptr %149, align 8
  %327 = load ptr, ptr %13, align 8
  %328 = getelementptr inbounds double, ptr %327, i64 %294
  %329 = load ptr, ptr %142, align 8
  %330 = load i32, ptr %141, align 8
  %331 = mul i32 %330, %312
  br i1 %153, label %373, label %371

332:                                              ; preds = %372
  %333 = load ptr, ptr %305, align 8, !tbaa !136
  %334 = and i64 %324, 4294967295
  %335 = getelementptr inbounds double, ptr %333, i64 %334
  br label %336

336:                                              ; preds = %372, %332
  %337 = phi ptr [ %335, %332 ], [ %308, %372 ]
  %338 = load double, ptr %337, align 8, !tbaa !133
  %339 = fmul double %322, %338
  %340 = getelementptr inbounds double, ptr %306, i64 %311
  %341 = load double, ptr %340, align 8, !tbaa !133
  %342 = call double @llvm.fmuladd.f64(double %339, double %296, double %341)
  store double %342, ptr %340, align 8, !tbaa !133
  %343 = add nuw nsw i64 %311, 1
  %344 = icmp eq i64 %343, %117
  br i1 %344, label %427, label %310

345:                                              ; preds = %371, %368
  %346 = phi i64 [ %369, %368 ], [ 0, %371 ]
  %347 = getelementptr inbounds %"struct.std::pair.263", ptr %301, i64 %346
  %348 = load i64, ptr %347, align 4
  %349 = trunc i64 %348 to i32
  %350 = icmp eq i32 %349, %325
  br i1 %350, label %351, label %368

351:                                              ; preds = %345
  %352 = trunc i64 %346 to i32
  %353 = mul i32 %292, %352
  %354 = add i32 %353, %309
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds double, ptr %291, i64 %355
  %357 = load double, ptr %356, align 8, !tbaa !133
  %358 = fmul double %322, %357
  %359 = fmul double %296, %358
  %360 = load double, ptr %328, align 8, !tbaa !133
  %361 = add i32 %331, %352
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds float, ptr %329, i64 %362
  %364 = load float, ptr %363, align 4, !tbaa !282
  %365 = fpext float %364 to double
  %366 = call double @llvm.fmuladd.f64(double %359, double %360, double %365)
  %367 = fptrunc double %366 to float
  store float %367, ptr %363, align 4, !tbaa !282
  br label %368

368:                                              ; preds = %351, %345
  %369 = add nuw nsw i64 %346, 1
  %370 = icmp eq i64 %369, %117
  br i1 %370, label %372, label %345

371:                                              ; preds = %316
  br i1 %299, label %399, label %345

372:                                              ; preds = %368, %424, %381
  br i1 %303, label %336, label %332

373:                                              ; preds = %316
  %374 = load double, ptr %328, align 8, !tbaa !133
  br label %375

375:                                              ; preds = %381, %373
  %376 = phi i64 [ %397, %381 ], [ 0, %373 ]
  %377 = trunc i64 %376 to i32
  br i1 %299, label %378, label %381

378:                                              ; preds = %375
  %379 = getelementptr inbounds i32, ptr %326, i64 %376
  %380 = load i32, ptr %379, align 4, !tbaa !59
  br label %381

381:                                              ; preds = %378, %375
  %382 = phi i32 [ %380, %378 ], [ %377, %375 ]
  %383 = mul i32 %382, %292
  %384 = add i32 %383, %309
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds double, ptr %291, i64 %385
  %387 = load double, ptr %386, align 8, !tbaa !133
  %388 = fmul double %322, %387
  %389 = fmul double %296, %388
  %390 = add i32 %331, %377
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds float, ptr %329, i64 %391
  %393 = load float, ptr %392, align 4, !tbaa !282
  %394 = fpext float %393 to double
  %395 = call double @llvm.fmuladd.f64(double %389, double %374, double %394)
  %396 = fptrunc double %395 to float
  store float %396, ptr %392, align 4, !tbaa !282
  %397 = add nuw nsw i64 %376, 1
  %398 = icmp eq i64 %397, %117
  br i1 %398, label %372, label %375

399:                                              ; preds = %371, %424
  %400 = phi i64 [ %425, %424 ], [ 0, %371 ]
  %401 = getelementptr inbounds %"struct.std::pair.263", ptr %301, i64 %400
  %402 = load i64, ptr %401, align 4
  %403 = trunc i64 %402 to i32
  %404 = icmp eq i32 %403, %325
  br i1 %404, label %405, label %424

405:                                              ; preds = %399
  %406 = getelementptr inbounds i32, ptr %326, i64 %400
  %407 = load i32, ptr %406, align 4, !tbaa !59
  %408 = mul i32 %407, %292
  %409 = add i32 %408, %309
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds double, ptr %291, i64 %410
  %412 = load double, ptr %411, align 8, !tbaa !133
  %413 = fmul double %322, %412
  %414 = fmul double %296, %413
  %415 = load double, ptr %328, align 8, !tbaa !133
  %416 = trunc i64 %400 to i32
  %417 = add i32 %331, %416
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds float, ptr %329, i64 %418
  %420 = load float, ptr %419, align 4, !tbaa !282
  %421 = fpext float %420 to double
  %422 = call double @llvm.fmuladd.f64(double %414, double %415, double %421)
  %423 = fptrunc double %422 to float
  store float %423, ptr %419, align 4, !tbaa !282
  br label %424

424:                                              ; preds = %405, %399
  %425 = add nuw nsw i64 %400, 1
  %426 = icmp eq i64 %425, %117
  br i1 %426, label %372, label %399

427:                                              ; preds = %336, %293
  %428 = add nuw nsw i64 %294, 1
  %429 = icmp eq i64 %428, %50
  br i1 %429, label %1562, label %293

430:                                              ; preds = %279
  %431 = getelementptr inbounds ptr, ptr %282, i64 7
  %432 = load ptr, ptr %431, align 8
  invoke void %432(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %145, ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %433 unwind label %272

433:                                              ; preds = %430
  %434 = load i8, ptr %147, align 4, !tbaa !148, !range !182, !noundef !183
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %444, label %436

436:                                              ; preds = %433
  br i1 %51, label %1562, label %437

437:                                              ; preds = %436
  %438 = load ptr, ptr %148, align 8, !tbaa !131
  %439 = load ptr, ptr %29, align 8
  %440 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %439, i64 0, i32 2
  %441 = load ptr, ptr %150, align 8
  %442 = load i32, ptr %151, align 8
  %443 = icmp ne i32 %442, 1
  br label %447

444:                                              ; preds = %433
  br i1 %51, label %1562, label %445

445:                                              ; preds = %444
  %446 = load ptr, ptr %148, align 8, !tbaa !131
  br label %678

447:                                              ; preds = %437, %581
  %448 = phi i64 [ 0, %437 ], [ %582, %581 ]
  %449 = trunc i64 %448 to i32
  %450 = getelementptr inbounds double, ptr %438, i64 %448
  %451 = load double, ptr %450, align 8, !tbaa !133
  br i1 %36, label %581, label %452

452:                                              ; preds = %447
  %453 = load i8, ptr %440, align 4, !tbaa !148, !range !182, !noundef !183
  %454 = icmp eq i8 %453, 0
  %455 = load ptr, ptr %149, align 8
  %456 = load ptr, ptr %152, align 8, !tbaa !184
  %457 = load i32, ptr %144, align 8, !tbaa !145
  %458 = icmp eq i32 %457, 1
  %459 = load ptr, ptr %18, align 8
  %460 = getelementptr inbounds %"class.dealii::Vector", ptr %459, i64 %448, i32 3
  %461 = load ptr, ptr %143, align 8
  %462 = load ptr, ptr %17, align 8
  %463 = getelementptr inbounds double, ptr %462, i64 %448
  %464 = trunc i64 %448 to i32
  br i1 %153, label %465, label %584

465:                                              ; preds = %452
  %466 = xor i32 %449, -1
  %467 = icmp ult i32 %466, %173
  %468 = insertelement <4 x double> poison, double %451, i64 0
  %469 = shufflevector <4 x double> %468, <4 x double> poison, <4 x i32> zeroinitializer
  br label %470

470:                                              ; preds = %465, %531
  %471 = phi i64 [ %538, %531 ], [ 0, %465 ]
  %472 = trunc i64 %471 to i32
  br i1 %454, label %473, label %476

473:                                              ; preds = %470
  %474 = getelementptr inbounds i32, ptr %455, i64 %471
  %475 = load i32, ptr %474, align 4, !tbaa !59
  br label %476

476:                                              ; preds = %473, %470
  %477 = phi i32 [ %475, %473 ], [ %472, %470 ]
  %478 = mul i32 %442, %477
  %479 = add i32 %478, %464
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds double, ptr %441, i64 %480
  %482 = load double, ptr %481, align 8, !tbaa !133
  %483 = getelementptr inbounds %"struct.std::pair.263", ptr %456, i64 %471
  %484 = load i64, ptr %483, align 4
  %485 = load ptr, ptr %149, align 8
  %486 = load ptr, ptr %14, align 8
  %487 = getelementptr inbounds %"class.dealii::Vector", ptr %486, i64 %448, i32 3
  %488 = and i64 %484, 4294967295
  %489 = load ptr, ptr %142, align 8
  %490 = load i32, ptr %141, align 8
  %491 = mul i32 %490, %472
  %492 = load ptr, ptr %487, align 8, !tbaa !136
  %493 = getelementptr inbounds double, ptr %492, i64 %488
  %494 = load double, ptr %493, align 8, !tbaa !133
  br i1 %454, label %540, label %495

495:                                              ; preds = %476
  br i1 %170, label %526, label %496

496:                                              ; preds = %495
  %497 = xor i32 %491, -1
  %498 = icmp ult i32 %497, %171
  %499 = or i1 %498, %172
  %500 = or i1 %499, %443
  %501 = or i1 %467, %500
  br i1 %501, label %526, label %502

502:                                              ; preds = %496
  %503 = insertelement <4 x double> poison, double %482, i64 0
  %504 = shufflevector <4 x double> %503, <4 x double> poison, <4 x i32> zeroinitializer
  %505 = insertelement <4 x double> poison, double %494, i64 0
  %506 = shufflevector <4 x double> %505, <4 x double> poison, <4 x i32> zeroinitializer
  br label %507

507:                                              ; preds = %507, %502
  %508 = phi i64 [ 0, %502 ], [ %523, %507 ]
  %509 = trunc i64 %508 to i32
  %510 = add i64 %508, %448
  %511 = and i64 %510, 4294967295
  %512 = getelementptr inbounds double, ptr %441, i64 %511
  %513 = load <4 x double>, ptr %512, align 8, !tbaa !133
  %514 = fmul <4 x double> %504, %513
  %515 = fmul <4 x double> %469, %514
  %516 = add i32 %491, %509
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds float, ptr %489, i64 %517
  %519 = load <4 x float>, ptr %518, align 4, !tbaa !282
  %520 = fpext <4 x float> %519 to <4 x double>
  %521 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %515, <4 x double> %506, <4 x double> %520)
  %522 = fptrunc <4 x double> %521 to <4 x float>
  store <4 x float> %522, ptr %518, align 4, !tbaa !282
  %523 = add nuw i64 %508, 4
  %524 = icmp eq i64 %523, %174
  br i1 %524, label %525, label %507, !llvm.loop !309

525:                                              ; preds = %507
  br i1 %175, label %580, label %526

526:                                              ; preds = %496, %495, %525
  %527 = phi i64 [ 0, %496 ], [ 0, %495 ], [ %174, %525 ]
  br label %561

528:                                              ; preds = %580
  %529 = load ptr, ptr %460, align 8, !tbaa !136
  %530 = getelementptr inbounds double, ptr %529, i64 %488
  br label %531

531:                                              ; preds = %580, %528
  %532 = phi ptr [ %530, %528 ], [ %463, %580 ]
  %533 = load double, ptr %532, align 8, !tbaa !133
  %534 = fmul double %482, %533
  %535 = getelementptr inbounds double, ptr %461, i64 %471
  %536 = load double, ptr %535, align 8, !tbaa !133
  %537 = call double @llvm.fmuladd.f64(double %534, double %451, double %536)
  store double %537, ptr %535, align 8, !tbaa !133
  %538 = add nuw nsw i64 %471, 1
  %539 = icmp eq i64 %538, %117
  br i1 %539, label %581, label %470

540:                                              ; preds = %476, %540
  %541 = phi i64 [ %559, %540 ], [ 0, %476 ]
  %542 = getelementptr inbounds i32, ptr %485, i64 %541
  %543 = load i32, ptr %542, align 4, !tbaa !59
  %544 = mul i32 %543, %442
  %545 = add i32 %544, %464
  %546 = zext i32 %545 to i64
  %547 = getelementptr inbounds double, ptr %441, i64 %546
  %548 = load double, ptr %547, align 8, !tbaa !133
  %549 = fmul double %482, %548
  %550 = fmul double %451, %549
  %551 = trunc i64 %541 to i32
  %552 = add i32 %491, %551
  %553 = zext i32 %552 to i64
  %554 = getelementptr inbounds float, ptr %489, i64 %553
  %555 = load float, ptr %554, align 4, !tbaa !282
  %556 = fpext float %555 to double
  %557 = call double @llvm.fmuladd.f64(double %550, double %494, double %556)
  %558 = fptrunc double %557 to float
  store float %558, ptr %554, align 4, !tbaa !282
  %559 = add nuw nsw i64 %541, 1
  %560 = icmp eq i64 %559, %117
  br i1 %560, label %580, label %540

561:                                              ; preds = %526, %561
  %562 = phi i64 [ %578, %561 ], [ %527, %526 ]
  %563 = trunc i64 %562 to i32
  %564 = mul i32 %442, %563
  %565 = add i32 %564, %464
  %566 = zext i32 %565 to i64
  %567 = getelementptr inbounds double, ptr %441, i64 %566
  %568 = load double, ptr %567, align 8, !tbaa !133
  %569 = fmul double %482, %568
  %570 = fmul double %451, %569
  %571 = add i32 %491, %563
  %572 = zext i32 %571 to i64
  %573 = getelementptr inbounds float, ptr %489, i64 %572
  %574 = load float, ptr %573, align 4, !tbaa !282
  %575 = fpext float %574 to double
  %576 = call double @llvm.fmuladd.f64(double %570, double %494, double %575)
  %577 = fptrunc double %576 to float
  store float %577, ptr %573, align 4, !tbaa !282
  %578 = add nuw nsw i64 %562, 1
  %579 = icmp eq i64 %578, %117
  br i1 %579, label %580, label %561, !llvm.loop !310

580:                                              ; preds = %561, %540, %525
  br i1 %458, label %531, label %528

581:                                              ; preds = %669, %531, %447
  %582 = add nuw nsw i64 %448, 1
  %583 = icmp eq i64 %582, %50
  br i1 %583, label %1562, label %447

584:                                              ; preds = %452, %669
  %585 = phi i64 [ %676, %669 ], [ 0, %452 ]
  %586 = trunc i64 %585 to i32
  br i1 %454, label %587, label %590

587:                                              ; preds = %584
  %588 = getelementptr inbounds i32, ptr %455, i64 %585
  %589 = load i32, ptr %588, align 4, !tbaa !59
  br label %590

590:                                              ; preds = %584, %587
  %591 = phi i32 [ %589, %587 ], [ %586, %584 ]
  %592 = mul i32 %442, %591
  %593 = add i32 %592, %464
  %594 = zext i32 %593 to i64
  %595 = getelementptr inbounds double, ptr %441, i64 %594
  %596 = load double, ptr %595, align 8, !tbaa !133
  %597 = getelementptr inbounds %"struct.std::pair.263", ptr %456, i64 %585
  %598 = load i64, ptr %597, align 4
  %599 = trunc i64 %598 to i32
  %600 = load ptr, ptr %149, align 8
  %601 = load ptr, ptr %14, align 8
  %602 = getelementptr inbounds %"class.dealii::Vector", ptr %601, i64 %448, i32 3
  %603 = and i64 %598, 4294967295
  %604 = load ptr, ptr %142, align 8
  %605 = load i32, ptr %141, align 8
  %606 = mul i32 %605, %586
  br i1 %454, label %607, label %638

607:                                              ; preds = %590, %634
  %608 = phi i64 [ %635, %634 ], [ 0, %590 ]
  %609 = getelementptr inbounds %"struct.std::pair.263", ptr %456, i64 %608
  %610 = load i64, ptr %609, align 4
  %611 = trunc i64 %610 to i32
  %612 = icmp eq i32 %611, %599
  br i1 %612, label %613, label %634

613:                                              ; preds = %607
  %614 = getelementptr inbounds i32, ptr %600, i64 %608
  %615 = load i32, ptr %614, align 4, !tbaa !59
  %616 = mul i32 %615, %442
  %617 = add i32 %616, %464
  %618 = zext i32 %617 to i64
  %619 = getelementptr inbounds double, ptr %441, i64 %618
  %620 = load double, ptr %619, align 8, !tbaa !133
  %621 = fmul double %596, %620
  %622 = fmul double %451, %621
  %623 = load ptr, ptr %602, align 8, !tbaa !136
  %624 = getelementptr inbounds double, ptr %623, i64 %603
  %625 = load double, ptr %624, align 8, !tbaa !133
  %626 = trunc i64 %608 to i32
  %627 = add i32 %606, %626
  %628 = zext i32 %627 to i64
  %629 = getelementptr inbounds float, ptr %604, i64 %628
  %630 = load float, ptr %629, align 4, !tbaa !282
  %631 = fpext float %630 to double
  %632 = call double @llvm.fmuladd.f64(double %622, double %625, double %631)
  %633 = fptrunc double %632 to float
  store float %633, ptr %629, align 4, !tbaa !282
  br label %634

634:                                              ; preds = %613, %607
  %635 = add nuw nsw i64 %608, 1
  %636 = icmp eq i64 %635, %117
  br i1 %636, label %637, label %607

637:                                              ; preds = %663, %634
  br i1 %458, label %669, label %666

638:                                              ; preds = %590, %663
  %639 = phi i64 [ %664, %663 ], [ 0, %590 ]
  %640 = getelementptr inbounds %"struct.std::pair.263", ptr %456, i64 %639
  %641 = load i64, ptr %640, align 4
  %642 = trunc i64 %641 to i32
  %643 = icmp eq i32 %642, %599
  br i1 %643, label %644, label %663

644:                                              ; preds = %638
  %645 = trunc i64 %639 to i32
  %646 = mul i32 %442, %645
  %647 = add i32 %646, %464
  %648 = zext i32 %647 to i64
  %649 = getelementptr inbounds double, ptr %441, i64 %648
  %650 = load double, ptr %649, align 8, !tbaa !133
  %651 = fmul double %596, %650
  %652 = fmul double %451, %651
  %653 = load ptr, ptr %602, align 8, !tbaa !136
  %654 = getelementptr inbounds double, ptr %653, i64 %603
  %655 = load double, ptr %654, align 8, !tbaa !133
  %656 = add i32 %606, %645
  %657 = zext i32 %656 to i64
  %658 = getelementptr inbounds float, ptr %604, i64 %657
  %659 = load float, ptr %658, align 4, !tbaa !282
  %660 = fpext float %659 to double
  %661 = call double @llvm.fmuladd.f64(double %652, double %655, double %660)
  %662 = fptrunc double %661 to float
  store float %662, ptr %658, align 4, !tbaa !282
  br label %663

663:                                              ; preds = %638, %644
  %664 = add nuw nsw i64 %639, 1
  %665 = icmp eq i64 %664, %117
  br i1 %665, label %637, label %638

666:                                              ; preds = %637
  %667 = load ptr, ptr %460, align 8, !tbaa !136
  %668 = getelementptr inbounds double, ptr %667, i64 %603
  br label %669

669:                                              ; preds = %637, %666
  %670 = phi ptr [ %668, %666 ], [ %463, %637 ]
  %671 = load double, ptr %670, align 8, !tbaa !133
  %672 = fmul double %596, %671
  %673 = getelementptr inbounds double, ptr %461, i64 %585
  %674 = load double, ptr %673, align 8, !tbaa !133
  %675 = call double @llvm.fmuladd.f64(double %672, double %451, double %674)
  store double %675, ptr %673, align 8, !tbaa !133
  %676 = add nuw nsw i64 %585, 1
  %677 = icmp eq i64 %676, %117
  br i1 %677, label %581, label %584

678:                                              ; preds = %445, %961
  %679 = phi i64 [ 0, %445 ], [ %962, %961 ]
  %680 = getelementptr inbounds double, ptr %446, i64 %679
  %681 = load double, ptr %680, align 8, !tbaa !133
  br i1 %176, label %961, label %682

682:                                              ; preds = %678
  %683 = load ptr, ptr %154, align 8, !tbaa !205
  %684 = trunc i64 %679 to i32
  %685 = trunc i64 %679 to i32
  %686 = trunc i64 %679 to i32
  br label %687

687:                                              ; preds = %958, %682
  %688 = phi i64 [ %959, %958 ], [ 0, %682 ]
  %689 = getelementptr inbounds %"class.std::vector.126", ptr %683, i64 %688
  %690 = load ptr, ptr %689, align 8, !tbaa !54
  %691 = load ptr, ptr %29, align 8
  %692 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %691, i64 0, i32 2
  %693 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %691, i64 0, i32 20
  %694 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %691, i64 0, i32 19
  %695 = load ptr, ptr %149, align 8
  %696 = getelementptr inbounds i32, ptr %695, i64 %688
  %697 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %691, i64 0, i32 12
  %698 = load ptr, ptr %150, align 8
  %699 = load i32, ptr %151, align 8
  %700 = load ptr, ptr %18, align 8
  %701 = getelementptr inbounds %"class.dealii::Vector", ptr %700, i64 %679, i32 3
  %702 = load ptr, ptr %143, align 8
  %703 = getelementptr inbounds double, ptr %702, i64 %688
  %704 = load ptr, ptr %17, align 8
  %705 = getelementptr inbounds double, ptr %704, i64 %679
  %706 = trunc i64 %688 to i32
  %707 = trunc i64 %688 to i32
  br label %708

708:                                              ; preds = %687, %829
  %709 = phi i64 [ 0, %687 ], [ %830, %829 ]
  %710 = trunc i64 %709 to i32
  %711 = lshr i64 %709, 6
  %712 = and i64 %711, 67108863
  %713 = getelementptr inbounds i64, ptr %690, i64 %712
  %714 = and i32 %710, 63
  %715 = and i64 %709, 63
  %716 = shl nuw i64 1, %715
  %717 = load i64, ptr %713, align 8, !tbaa !56
  %718 = and i64 %717, %716
  %719 = icmp eq i64 %718, 0
  br i1 %719, label %829, label %720

720:                                              ; preds = %708
  %721 = load i8, ptr %692, align 4, !tbaa !148, !range !182, !noundef !183
  %722 = icmp eq i8 %721, 0
  br i1 %722, label %723, label %761

723:                                              ; preds = %720
  %724 = load ptr, ptr %693, align 8, !tbaa !144
  %725 = getelementptr inbounds i32, ptr %724, i64 %688
  %726 = load i32, ptr %725, align 4, !tbaa !59
  %727 = icmp eq i32 %726, 1
  br i1 %727, label %761, label %728

728:                                              ; preds = %723
  %729 = load ptr, ptr %694, align 8, !tbaa !205
  %730 = getelementptr inbounds %"class.std::vector.126", ptr %729, i64 %688
  %731 = load ptr, ptr %730, align 8, !tbaa !54
  %732 = getelementptr inbounds i64, ptr %731, i64 %712
  %733 = load i64, ptr %732, align 8, !tbaa !56
  %734 = and i64 %733, %716
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %851, label %736

736:                                              ; preds = %728
  %737 = load i32, ptr %696, align 4, !tbaa !59
  %738 = icmp eq i64 %709, 0
  br i1 %738, label %758, label %739

739:                                              ; preds = %736, %739
  %740 = phi i64 [ %747, %739 ], [ 0, %736 ]
  %741 = phi i32 [ %752, %739 ], [ 0, %736 ]
  %742 = phi ptr [ %751, %739 ], [ %731, %736 ]
  %743 = zext i32 %741 to i64
  %744 = load i64, ptr %742, align 8, !tbaa !56
  %745 = lshr i64 %744, %743
  %746 = and i64 %745, 1
  %747 = add nuw nsw i64 %746, %740
  %748 = add i32 %741, 1
  %749 = icmp eq i32 %741, 63
  %750 = zext i1 %749 to i64
  %751 = getelementptr inbounds i64, ptr %742, i64 %750
  %752 = select i1 %749, i32 0, i32 %748
  %753 = icmp ne ptr %751, %732
  %754 = icmp ne i32 %752, %714
  %755 = or i1 %754, %753
  br i1 %755, label %739, label %756

756:                                              ; preds = %739
  %757 = trunc i64 %747 to i32
  br label %758

758:                                              ; preds = %756, %736
  %759 = phi i32 [ 0, %736 ], [ %757, %756 ]
  %760 = add i32 %759, %737
  br label %769

761:                                              ; preds = %723, %720
  %762 = load ptr, ptr %697, align 8, !tbaa !184
  %763 = getelementptr inbounds %"struct.std::pair.263", ptr %762, i64 %688
  %764 = load i64, ptr %763, align 4
  %765 = and i64 %764, 4294967295
  %766 = icmp eq i64 %709, %765
  br i1 %766, label %767, label %849

767:                                              ; preds = %761
  %768 = load i32, ptr %696, align 4, !tbaa !59
  br label %769

769:                                              ; preds = %767, %758
  %770 = phi i32 [ %760, %758 ], [ %768, %767 ]
  %771 = mul i32 %699, %770
  %772 = add i32 %771, %684
  %773 = zext i32 %772 to i64
  %774 = getelementptr inbounds double, ptr %698, i64 %773
  %775 = load double, ptr %774, align 8, !tbaa !133
  br label %849

776:                                              ; preds = %853
  %777 = load ptr, ptr %701, align 8, !tbaa !136
  %778 = getelementptr inbounds double, ptr %777, i64 %709
  br label %823

779:                                              ; preds = %820
  %780 = add nuw nsw i64 %833, 1
  %781 = icmp eq i64 %780, %117
  br i1 %781, label %853, label %832

782:                                              ; preds = %832, %820
  %783 = phi i32 [ 0, %832 ], [ %821, %820 ]
  %784 = lshr i32 %783, 6
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds i64, ptr %835, i64 %785
  %787 = and i32 %783, 63
  %788 = zext i32 %787 to i64
  %789 = shl nuw i64 1, %788
  %790 = load i64, ptr %786, align 8, !tbaa !56
  %791 = and i64 %790, %789
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %820, label %793

793:                                              ; preds = %782
  %794 = load ptr, ptr %697, align 8, !tbaa !184
  %795 = getelementptr inbounds %"struct.std::pair.263", ptr %794, i64 %833
  %796 = load i64, ptr %795, align 4
  %797 = trunc i64 %796 to i32
  %798 = icmp eq i32 %783, %797
  br i1 %798, label %799, label %806

799:                                              ; preds = %793
  %800 = load i32, ptr %837, align 4, !tbaa !59
  %801 = mul i32 %839, %800
  %802 = add i32 %801, %685
  %803 = zext i32 %802 to i64
  %804 = getelementptr inbounds double, ptr %838, i64 %803
  %805 = load double, ptr %804, align 8, !tbaa !133
  br label %806

806:                                              ; preds = %799, %793
  %807 = phi double [ 0.000000e+00, %793 ], [ %805, %799 ]
  %808 = zext i32 %783 to i64
  %809 = icmp eq i64 %709, %808
  br i1 %809, label %810, label %820

810:                                              ; preds = %806
  %811 = fmul double %850, %807
  %812 = fmul double %681, %811
  %813 = load ptr, ptr %841, align 8, !tbaa !136
  %814 = getelementptr inbounds double, ptr %813, i64 %709
  %815 = load double, ptr %814, align 8, !tbaa !133
  %816 = load float, ptr %848, align 4, !tbaa !282
  %817 = fpext float %816 to double
  %818 = call double @llvm.fmuladd.f64(double %812, double %815, double %817)
  %819 = fptrunc double %818 to float
  store float %819, ptr %848, align 4, !tbaa !282
  br label %820

820:                                              ; preds = %810, %806, %782
  %821 = add nuw i32 %783, 1
  %822 = icmp eq i32 %821, %32
  br i1 %822, label %779, label %782

823:                                              ; preds = %853, %776
  %824 = phi ptr [ %778, %776 ], [ %705, %853 ]
  %825 = load double, ptr %824, align 8, !tbaa !133
  %826 = fmul double %854, %825
  %827 = load double, ptr %703, align 8, !tbaa !133
  %828 = call double @llvm.fmuladd.f64(double %826, double %681, double %827)
  store double %828, ptr %703, align 8, !tbaa !133
  br label %829

829:                                              ; preds = %823, %708
  %830 = add nuw nsw i64 %709, 1
  %831 = icmp eq i64 %830, %163
  br i1 %831, label %958, label %708

832:                                              ; preds = %849, %779
  %833 = phi i64 [ %780, %779 ], [ 0, %849 ]
  %834 = getelementptr inbounds %"class.std::vector.126", ptr %683, i64 %833
  %835 = load ptr, ptr %834, align 8, !tbaa !54
  %836 = load ptr, ptr %149, align 8
  %837 = getelementptr inbounds i32, ptr %836, i64 %833
  %838 = load ptr, ptr %150, align 8
  %839 = load i32, ptr %151, align 8
  %840 = load ptr, ptr %14, align 8
  %841 = getelementptr inbounds %"class.dealii::Vector", ptr %840, i64 %679, i32 3
  %842 = load ptr, ptr %142, align 8
  %843 = load i32, ptr %141, align 8
  %844 = mul i32 %843, %706
  %845 = trunc i64 %833 to i32
  %846 = add i32 %844, %845
  %847 = zext i32 %846 to i64
  %848 = getelementptr inbounds float, ptr %842, i64 %847
  br label %782

849:                                              ; preds = %761, %769
  %850 = phi double [ 0.000000e+00, %761 ], [ %775, %769 ]
  br i1 %722, label %851, label %832

851:                                              ; preds = %728, %849
  %852 = phi double [ %850, %849 ], [ 0.000000e+00, %728 ]
  br label %857

853:                                              ; preds = %779, %955
  %854 = phi double [ %852, %955 ], [ %850, %779 ]
  %855 = load i32, ptr %144, align 8, !tbaa !145
  %856 = icmp eq i32 %855, 1
  br i1 %856, label %823, label %776

857:                                              ; preds = %851, %955
  %858 = phi i64 [ 0, %851 ], [ %956, %955 ]
  %859 = getelementptr inbounds %"class.std::vector.126", ptr %683, i64 %858
  %860 = load ptr, ptr %859, align 8, !tbaa !54
  %861 = load ptr, ptr %149, align 8
  %862 = getelementptr inbounds i32, ptr %861, i64 %858
  %863 = load ptr, ptr %150, align 8
  %864 = load i32, ptr %151, align 8
  %865 = load ptr, ptr %14, align 8
  %866 = getelementptr inbounds %"class.dealii::Vector", ptr %865, i64 %679, i32 3
  %867 = load ptr, ptr %142, align 8
  %868 = load i32, ptr %141, align 8
  %869 = mul i32 %868, %707
  %870 = trunc i64 %858 to i32
  %871 = add i32 %869, %870
  %872 = zext i32 %871 to i64
  %873 = getelementptr inbounds float, ptr %867, i64 %872
  br label %874

874:                                              ; preds = %952, %857
  %875 = phi i32 [ 0, %857 ], [ %953, %952 ]
  %876 = lshr i32 %875, 6
  %877 = zext i32 %876 to i64
  %878 = getelementptr inbounds i64, ptr %860, i64 %877
  %879 = and i32 %875, 63
  %880 = zext i32 %879 to i64
  %881 = shl nuw i64 1, %880
  %882 = load i64, ptr %878, align 8, !tbaa !56
  %883 = and i64 %882, %881
  %884 = icmp eq i64 %883, 0
  br i1 %884, label %952, label %885

885:                                              ; preds = %874
  %886 = load ptr, ptr %693, align 8, !tbaa !144
  %887 = getelementptr inbounds i32, ptr %886, i64 %858
  %888 = load i32, ptr %887, align 4, !tbaa !59
  %889 = icmp eq i32 %888, 1
  br i1 %889, label %923, label %890

890:                                              ; preds = %885
  %891 = load ptr, ptr %694, align 8, !tbaa !205
  %892 = getelementptr inbounds %"class.std::vector.126", ptr %891, i64 %858
  %893 = load ptr, ptr %892, align 8, !tbaa !54
  %894 = getelementptr inbounds i64, ptr %893, i64 %877
  %895 = load i64, ptr %894, align 8, !tbaa !56
  %896 = and i64 %895, %881
  %897 = icmp eq i64 %896, 0
  br i1 %897, label %938, label %898

898:                                              ; preds = %890
  %899 = load i32, ptr %862, align 4, !tbaa !59
  %900 = icmp eq i32 %875, 0
  br i1 %900, label %920, label %901

901:                                              ; preds = %898, %901
  %902 = phi i64 [ %909, %901 ], [ 0, %898 ]
  %903 = phi i32 [ %914, %901 ], [ 0, %898 ]
  %904 = phi ptr [ %913, %901 ], [ %893, %898 ]
  %905 = zext i32 %903 to i64
  %906 = load i64, ptr %904, align 8, !tbaa !56
  %907 = lshr i64 %906, %905
  %908 = and i64 %907, 1
  %909 = add nuw nsw i64 %908, %902
  %910 = add i32 %903, 1
  %911 = icmp eq i32 %903, 63
  %912 = zext i1 %911 to i64
  %913 = getelementptr inbounds i64, ptr %904, i64 %912
  %914 = select i1 %911, i32 0, i32 %910
  %915 = icmp ne ptr %913, %894
  %916 = icmp ne i32 %914, %879
  %917 = or i1 %916, %915
  br i1 %917, label %901, label %918

918:                                              ; preds = %901
  %919 = trunc i64 %909 to i32
  br label %920

920:                                              ; preds = %918, %898
  %921 = phi i32 [ 0, %898 ], [ %919, %918 ]
  %922 = add i32 %921, %899
  br label %931

923:                                              ; preds = %885
  %924 = load ptr, ptr %697, align 8, !tbaa !184
  %925 = getelementptr inbounds %"struct.std::pair.263", ptr %924, i64 %858
  %926 = load i64, ptr %925, align 4
  %927 = trunc i64 %926 to i32
  %928 = icmp eq i32 %875, %927
  br i1 %928, label %929, label %938

929:                                              ; preds = %923
  %930 = load i32, ptr %862, align 4, !tbaa !59
  br label %931

931:                                              ; preds = %929, %920
  %932 = phi i32 [ %922, %920 ], [ %930, %929 ]
  %933 = mul i32 %864, %932
  %934 = add i32 %933, %686
  %935 = zext i32 %934 to i64
  %936 = getelementptr inbounds double, ptr %863, i64 %935
  %937 = load double, ptr %936, align 8, !tbaa !133
  br label %938

938:                                              ; preds = %931, %923, %890
  %939 = phi double [ 0.000000e+00, %923 ], [ 0.000000e+00, %890 ], [ %937, %931 ]
  %940 = zext i32 %875 to i64
  %941 = icmp eq i64 %709, %940
  br i1 %941, label %942, label %952

942:                                              ; preds = %938
  %943 = fmul double %852, %939
  %944 = fmul double %681, %943
  %945 = load ptr, ptr %866, align 8, !tbaa !136
  %946 = getelementptr inbounds double, ptr %945, i64 %709
  %947 = load double, ptr %946, align 8, !tbaa !133
  %948 = load float, ptr %873, align 4, !tbaa !282
  %949 = fpext float %948 to double
  %950 = call double @llvm.fmuladd.f64(double %944, double %947, double %949)
  %951 = fptrunc double %950 to float
  store float %951, ptr %873, align 4, !tbaa !282
  br label %952

952:                                              ; preds = %942, %938, %874
  %953 = add nuw i32 %875, 1
  %954 = icmp eq i32 %953, %32
  br i1 %954, label %955, label %874

955:                                              ; preds = %952
  %956 = add nuw nsw i64 %858, 1
  %957 = icmp eq i64 %956, %117
  br i1 %957, label %853, label %857

958:                                              ; preds = %829
  %959 = add nuw nsw i64 %688, 1
  %960 = icmp eq i64 %959, %117
  br i1 %960, label %961, label %687

961:                                              ; preds = %958, %678
  %962 = add nuw nsw i64 %679, 1
  %963 = icmp eq i64 %962, %50
  br i1 %963, label %1562, label %678

964:                                              ; preds = %278
  %965 = load i8, ptr %147, align 4, !tbaa !148, !range !182, !noundef !183
  %966 = icmp eq i8 %965, 0
  br i1 %966, label %976, label %967

967:                                              ; preds = %964
  br i1 %51, label %1562, label %968

968:                                              ; preds = %967
  %969 = load ptr, ptr %148, align 8, !tbaa !131
  %970 = load ptr, ptr %29, align 8
  %971 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %970, i64 0, i32 2
  %972 = load ptr, ptr %150, align 8
  %973 = load i32, ptr %151, align 8
  %974 = icmp ne i32 %973, 1
  %975 = icmp ne i32 %973, 1
  br label %979

976:                                              ; preds = %964
  br i1 %51, label %1562, label %977

977:                                              ; preds = %976
  %978 = load ptr, ptr %148, align 8, !tbaa !131
  br label %1288

979:                                              ; preds = %968, %1285
  %980 = phi i64 [ 0, %968 ], [ %1286, %1285 ]
  %981 = shl nuw nsw i64 %980, 3
  %982 = getelementptr i8, ptr %972, i64 %981
  %983 = add nuw i64 %167, %981
  %984 = getelementptr i8, ptr %972, i64 %983
  %985 = trunc i64 %980 to i32
  %986 = trunc i64 %980 to i32
  %987 = getelementptr inbounds double, ptr %969, i64 %980
  %988 = load double, ptr %987, align 8, !tbaa !133
  br i1 %36, label %1285, label %989

989:                                              ; preds = %979
  %990 = load i8, ptr %971, align 4, !tbaa !148, !range !182, !noundef !183
  %991 = icmp eq i8 %990, 0
  %992 = load ptr, ptr %149, align 8
  %993 = load ptr, ptr %152, align 8, !tbaa !184
  %994 = load i32, ptr %144, align 8, !tbaa !145
  %995 = icmp eq i32 %994, 1
  %996 = load ptr, ptr %18, align 8
  %997 = getelementptr inbounds %"class.dealii::Vector", ptr %996, i64 %980, i32 3
  %998 = load ptr, ptr %143, align 8
  %999 = load ptr, ptr %17, align 8
  %1000 = getelementptr inbounds double, ptr %999, i64 %980
  %1001 = trunc i64 %980 to i32
  %1002 = getelementptr i8, ptr %993, i64 %167
  %1003 = xor i32 %985, -1
  %1004 = icmp ult i32 %1003, %180
  %1005 = insertelement <4 x double> poison, double %988, i64 0
  %1006 = shufflevector <4 x double> %1005, <4 x double> poison, <4 x i32> zeroinitializer
  %1007 = xor i32 %986, -1
  %1008 = icmp ult i32 %1007, %186
  %1009 = insertelement <4 x double> poison, double %988, i64 0
  %1010 = shufflevector <4 x double> %1009, <4 x double> poison, <4 x i32> zeroinitializer
  %1011 = insertelement <4 x double> poison, double %988, i64 0
  %1012 = shufflevector <4 x double> %1011, <4 x double> poison, <4 x i32> zeroinitializer
  %1013 = insertelement <4 x double> poison, double %988, i64 0
  %1014 = shufflevector <4 x double> %1013, <4 x double> poison, <4 x i32> zeroinitializer
  %1015 = insertelement <4 x double> poison, double %988, i64 0
  %1016 = shufflevector <4 x double> %1015, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1017

1017:                                             ; preds = %1041, %989
  %1018 = phi i64 [ %1048, %1041 ], [ 0, %989 ]
  %1019 = trunc i64 %1018 to i32
  br i1 %991, label %1020, label %1023

1020:                                             ; preds = %1017
  %1021 = getelementptr inbounds i32, ptr %992, i64 %1018
  %1022 = load i32, ptr %1021, align 4, !tbaa !59
  br label %1023

1023:                                             ; preds = %1020, %1017
  %1024 = phi i32 [ %1022, %1020 ], [ %1019, %1017 ]
  %1025 = mul i32 %973, %1024
  %1026 = add i32 %1025, %1001
  %1027 = zext i32 %1026 to i64
  %1028 = getelementptr inbounds double, ptr %972, i64 %1027
  %1029 = load double, ptr %1028, align 8, !tbaa !133
  %1030 = getelementptr inbounds %"struct.std::pair.263", ptr %993, i64 %1018
  %1031 = load i64, ptr %1030, align 4
  %1032 = trunc i64 %1031 to i32
  %1033 = load ptr, ptr %149, align 8
  %1034 = load ptr, ptr %142, align 8
  %1035 = load i32, ptr %141, align 8
  %1036 = mul i32 %1035, %1019
  br i1 %153, label %1125, label %1074

1037:                                             ; preds = %1124
  %1038 = load ptr, ptr %997, align 8, !tbaa !136
  %1039 = and i64 %1031, 4294967295
  %1040 = getelementptr inbounds double, ptr %1038, i64 %1039
  br label %1041

1041:                                             ; preds = %1124, %1037
  %1042 = phi ptr [ %1040, %1037 ], [ %1000, %1124 ]
  %1043 = load double, ptr %1042, align 8, !tbaa !133
  %1044 = fmul double %1029, %1043
  %1045 = getelementptr inbounds double, ptr %998, i64 %1018
  %1046 = load double, ptr %1045, align 8, !tbaa !133
  %1047 = call double @llvm.fmuladd.f64(double %1044, double %988, double %1046)
  store double %1047, ptr %1045, align 8, !tbaa !133
  %1048 = add nuw nsw i64 %1018, 1
  %1049 = icmp eq i64 %1048, %117
  br i1 %1049, label %1285, label %1017

1050:                                             ; preds = %1122, %1071
  %1051 = phi i64 [ %1072, %1071 ], [ %1123, %1122 ]
  %1052 = getelementptr inbounds %"struct.std::pair.263", ptr %993, i64 %1051
  %1053 = load i64, ptr %1052, align 4
  %1054 = trunc i64 %1053 to i32
  %1055 = icmp eq i32 %1054, %1032
  br i1 %1055, label %1056, label %1071

1056:                                             ; preds = %1050
  %1057 = trunc i64 %1051 to i32
  %1058 = mul i32 %973, %1057
  %1059 = add i32 %1058, %1001
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds double, ptr %972, i64 %1060
  %1062 = load double, ptr %1061, align 8, !tbaa !133
  %1063 = fmul double %1029, %1062
  %1064 = add i32 %1036, %1057
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds float, ptr %1034, i64 %1065
  %1067 = load float, ptr %1066, align 4, !tbaa !282
  %1068 = fpext float %1067 to double
  %1069 = call double @llvm.fmuladd.f64(double %1063, double %988, double %1068)
  %1070 = fptrunc double %1069 to float
  store float %1070, ptr %1066, align 4, !tbaa !282
  br label %1071

1071:                                             ; preds = %1056, %1050
  %1072 = add nuw nsw i64 %1051, 1
  %1073 = icmp eq i64 %1072, %117
  br i1 %1073, label %1124, label %1050, !llvm.loop !311

1074:                                             ; preds = %1023
  br i1 %991, label %1239, label %1075

1075:                                             ; preds = %1074
  br i1 %177, label %1122, label %1076

1076:                                             ; preds = %1075
  %1077 = xor i32 %1036, -1
  %1078 = icmp ult i32 %1077, %178
  %1079 = or i1 %1078, %179
  %1080 = or i1 %974, %1079
  %1081 = or i1 %1004, %1080
  br i1 %1081, label %1122, label %1082

1082:                                             ; preds = %1076
  %1083 = zext i32 %1036 to i64
  %1084 = shl nuw nsw i64 %1083, 2
  %1085 = getelementptr i8, ptr %1034, i64 %1084
  %1086 = getelementptr i8, ptr %1034, i64 %168
  %1087 = getelementptr i8, ptr %1086, i64 %1084
  %1088 = icmp ult ptr %993, %1087
  %1089 = icmp ult ptr %1085, %1002
  %1090 = and i1 %1088, %1089
  %1091 = icmp ult ptr %1085, %984
  %1092 = icmp ult ptr %982, %1087
  %1093 = and i1 %1091, %1092
  %1094 = or i1 %1090, %1093
  br i1 %1094, label %1122, label %1095

1095:                                             ; preds = %1082
  %1096 = insertelement <4 x i32> poison, i32 %1032, i64 0
  %1097 = shufflevector <4 x i32> %1096, <4 x i32> poison, <4 x i32> zeroinitializer
  %1098 = insertelement <4 x double> poison, double %1029, i64 0
  %1099 = shufflevector <4 x double> %1098, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1100

1100:                                             ; preds = %1100, %1095
  %1101 = phi i64 [ 0, %1095 ], [ %1119, %1100 ]
  %1102 = trunc i64 %1101 to i32
  %1103 = getelementptr inbounds %"struct.std::pair.263", ptr %993, i64 %1101
  %1104 = load <4 x i64>, ptr %1103, align 4, !alias.scope !312, !noalias !315
  %1105 = trunc <4 x i64> %1104 to <4 x i32>
  %1106 = icmp eq <4 x i32> %1097, %1105
  %1107 = add i64 %1101, %980
  %1108 = and i64 %1107, 4294967295
  %1109 = getelementptr double, ptr %972, i64 %1108
  %1110 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1109, i32 8, <4 x i1> %1106, <4 x double> poison), !tbaa !133, !alias.scope !317
  %1111 = fmul <4 x double> %1099, %1110
  %1112 = add i32 %1036, %1102
  %1113 = zext i32 %1112 to i64
  %1114 = getelementptr float, ptr %1034, i64 %1113
  %1115 = call <4 x float> @llvm.masked.load.v4f32.p0(ptr %1114, i32 4, <4 x i1> %1106, <4 x float> poison), !tbaa !282, !alias.scope !315, !noalias !317
  %1116 = fpext <4 x float> %1115 to <4 x double>
  %1117 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1111, <4 x double> %1006, <4 x double> %1116)
  %1118 = fptrunc <4 x double> %1117 to <4 x float>
  call void @llvm.masked.store.v4f32.p0(<4 x float> %1118, ptr %1114, i32 4, <4 x i1> %1106), !tbaa !282, !alias.scope !315, !noalias !317
  %1119 = add nuw i64 %1101, 4
  %1120 = icmp eq i64 %1119, %181
  br i1 %1120, label %1121, label %1100, !llvm.loop !319

1121:                                             ; preds = %1100
  br i1 %182, label %1124, label %1122

1122:                                             ; preds = %1082, %1076, %1075, %1121
  %1123 = phi i64 [ 0, %1082 ], [ 0, %1076 ], [ 0, %1075 ], [ %181, %1121 ]
  br label %1050

1124:                                             ; preds = %1071, %1262, %1203, %1206, %1265, %1121, %1183
  br i1 %995, label %1041, label %1037

1125:                                             ; preds = %1023
  br i1 %991, label %1265, label %1126

1126:                                             ; preds = %1125
  br i1 %183, label %1184, label %1127

1127:                                             ; preds = %1126
  %1128 = xor i32 %1036, -1
  %1129 = icmp ult i32 %1128, %184
  %1130 = or i1 %1129, %185
  %1131 = or i1 %1130, %975
  %1132 = or i1 %1008, %1131
  br i1 %1132, label %1184, label %1133

1133:                                             ; preds = %1127
  %1134 = insertelement <4 x double> poison, double %1029, i64 0
  %1135 = shufflevector <4 x double> %1134, <4 x double> poison, <4 x i32> zeroinitializer
  %1136 = insertelement <4 x double> poison, double %1029, i64 0
  %1137 = shufflevector <4 x double> %1136, <4 x double> poison, <4 x i32> zeroinitializer
  %1138 = insertelement <4 x double> poison, double %1029, i64 0
  %1139 = shufflevector <4 x double> %1138, <4 x double> poison, <4 x i32> zeroinitializer
  %1140 = insertelement <4 x double> poison, double %1029, i64 0
  %1141 = shufflevector <4 x double> %1140, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1142

1142:                                             ; preds = %1142, %1133
  %1143 = phi i64 [ 0, %1133 ], [ %1181, %1142 ]
  %1144 = trunc i64 %1143 to i32
  %1145 = add i64 %1143, %980
  %1146 = and i64 %1145, 4294967295
  %1147 = getelementptr inbounds double, ptr %972, i64 %1146
  %1148 = load <4 x double>, ptr %1147, align 8, !tbaa !133
  %1149 = getelementptr inbounds double, ptr %1147, i64 4
  %1150 = load <4 x double>, ptr %1149, align 8, !tbaa !133
  %1151 = getelementptr inbounds double, ptr %1147, i64 8
  %1152 = load <4 x double>, ptr %1151, align 8, !tbaa !133
  %1153 = getelementptr inbounds double, ptr %1147, i64 12
  %1154 = load <4 x double>, ptr %1153, align 8, !tbaa !133
  %1155 = fmul <4 x double> %1135, %1148
  %1156 = fmul <4 x double> %1137, %1150
  %1157 = fmul <4 x double> %1139, %1152
  %1158 = fmul <4 x double> %1141, %1154
  %1159 = add i32 %1036, %1144
  %1160 = zext i32 %1159 to i64
  %1161 = getelementptr inbounds float, ptr %1034, i64 %1160
  %1162 = load <4 x float>, ptr %1161, align 4, !tbaa !282
  %1163 = getelementptr inbounds float, ptr %1161, i64 4
  %1164 = load <4 x float>, ptr %1163, align 4, !tbaa !282
  %1165 = getelementptr inbounds float, ptr %1161, i64 8
  %1166 = load <4 x float>, ptr %1165, align 4, !tbaa !282
  %1167 = getelementptr inbounds float, ptr %1161, i64 12
  %1168 = load <4 x float>, ptr %1167, align 4, !tbaa !282
  %1169 = fpext <4 x float> %1162 to <4 x double>
  %1170 = fpext <4 x float> %1164 to <4 x double>
  %1171 = fpext <4 x float> %1166 to <4 x double>
  %1172 = fpext <4 x float> %1168 to <4 x double>
  %1173 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1155, <4 x double> %1010, <4 x double> %1169)
  %1174 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1156, <4 x double> %1012, <4 x double> %1170)
  %1175 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1157, <4 x double> %1014, <4 x double> %1171)
  %1176 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1158, <4 x double> %1016, <4 x double> %1172)
  %1177 = fptrunc <4 x double> %1173 to <4 x float>
  %1178 = fptrunc <4 x double> %1174 to <4 x float>
  %1179 = fptrunc <4 x double> %1175 to <4 x float>
  %1180 = fptrunc <4 x double> %1176 to <4 x float>
  store <4 x float> %1177, ptr %1161, align 4, !tbaa !282
  store <4 x float> %1178, ptr %1163, align 4, !tbaa !282
  store <4 x float> %1179, ptr %1165, align 4, !tbaa !282
  store <4 x float> %1180, ptr %1167, align 4, !tbaa !282
  %1181 = add nuw i64 %1143, 16
  %1182 = icmp eq i64 %1181, %187
  br i1 %1182, label %1183, label %1142, !llvm.loop !320

1183:                                             ; preds = %1142
  br i1 %188, label %1124, label %1184

1184:                                             ; preds = %1127, %1126, %1183
  %1185 = phi i64 [ 0, %1127 ], [ 0, %1126 ], [ %187, %1183 ]
  %1186 = xor i64 %1185, -1
  br i1 %190, label %1203, label %1187

1187:                                             ; preds = %1184
  %1188 = trunc i64 %1185 to i32
  %1189 = mul i32 %973, %1188
  %1190 = add i32 %1189, %1001
  %1191 = zext i32 %1190 to i64
  %1192 = getelementptr inbounds double, ptr %972, i64 %1191
  %1193 = load double, ptr %1192, align 8, !tbaa !133
  %1194 = fmul double %1029, %1193
  %1195 = add i32 %1036, %1188
  %1196 = zext i32 %1195 to i64
  %1197 = getelementptr inbounds float, ptr %1034, i64 %1196
  %1198 = load float, ptr %1197, align 4, !tbaa !282
  %1199 = fpext float %1198 to double
  %1200 = call double @llvm.fmuladd.f64(double %1194, double %988, double %1199)
  %1201 = fptrunc double %1200 to float
  store float %1201, ptr %1197, align 4, !tbaa !282
  %1202 = or i64 %1185, 1
  br label %1203

1203:                                             ; preds = %1187, %1184
  %1204 = phi i64 [ %1185, %1184 ], [ %1202, %1187 ]
  %1205 = icmp eq i64 %1186, %191
  br i1 %1205, label %1124, label %1206

1206:                                             ; preds = %1203, %1206
  %1207 = phi i64 [ %1237, %1206 ], [ %1204, %1203 ]
  %1208 = trunc i64 %1207 to i32
  %1209 = mul i32 %973, %1208
  %1210 = add i32 %1209, %1001
  %1211 = zext i32 %1210 to i64
  %1212 = getelementptr inbounds double, ptr %972, i64 %1211
  %1213 = load double, ptr %1212, align 8, !tbaa !133
  %1214 = fmul double %1029, %1213
  %1215 = add i32 %1036, %1208
  %1216 = zext i32 %1215 to i64
  %1217 = getelementptr inbounds float, ptr %1034, i64 %1216
  %1218 = load float, ptr %1217, align 4, !tbaa !282
  %1219 = fpext float %1218 to double
  %1220 = call double @llvm.fmuladd.f64(double %1214, double %988, double %1219)
  %1221 = fptrunc double %1220 to float
  store float %1221, ptr %1217, align 4, !tbaa !282
  %1222 = trunc i64 %1207 to i32
  %1223 = add i32 %1222, 1
  %1224 = mul i32 %973, %1223
  %1225 = add i32 %1224, %1001
  %1226 = zext i32 %1225 to i64
  %1227 = getelementptr inbounds double, ptr %972, i64 %1226
  %1228 = load double, ptr %1227, align 8, !tbaa !133
  %1229 = fmul double %1029, %1228
  %1230 = add i32 %1036, %1223
  %1231 = zext i32 %1230 to i64
  %1232 = getelementptr inbounds float, ptr %1034, i64 %1231
  %1233 = load float, ptr %1232, align 4, !tbaa !282
  %1234 = fpext float %1233 to double
  %1235 = call double @llvm.fmuladd.f64(double %1229, double %988, double %1234)
  %1236 = fptrunc double %1235 to float
  store float %1236, ptr %1232, align 4, !tbaa !282
  %1237 = add nuw nsw i64 %1207, 2
  %1238 = icmp eq i64 %1237, %117
  br i1 %1238, label %1124, label %1206, !llvm.loop !321

1239:                                             ; preds = %1074, %1262
  %1240 = phi i64 [ %1263, %1262 ], [ 0, %1074 ]
  %1241 = getelementptr inbounds %"struct.std::pair.263", ptr %993, i64 %1240
  %1242 = load i64, ptr %1241, align 4
  %1243 = trunc i64 %1242 to i32
  %1244 = icmp eq i32 %1243, %1032
  br i1 %1244, label %1245, label %1262

1245:                                             ; preds = %1239
  %1246 = getelementptr inbounds i32, ptr %1033, i64 %1240
  %1247 = load i32, ptr %1246, align 4, !tbaa !59
  %1248 = mul i32 %1247, %973
  %1249 = add i32 %1248, %1001
  %1250 = zext i32 %1249 to i64
  %1251 = getelementptr inbounds double, ptr %972, i64 %1250
  %1252 = load double, ptr %1251, align 8, !tbaa !133
  %1253 = fmul double %1029, %1252
  %1254 = trunc i64 %1240 to i32
  %1255 = add i32 %1036, %1254
  %1256 = zext i32 %1255 to i64
  %1257 = getelementptr inbounds float, ptr %1034, i64 %1256
  %1258 = load float, ptr %1257, align 4, !tbaa !282
  %1259 = fpext float %1258 to double
  %1260 = call double @llvm.fmuladd.f64(double %1253, double %988, double %1259)
  %1261 = fptrunc double %1260 to float
  store float %1261, ptr %1257, align 4, !tbaa !282
  br label %1262

1262:                                             ; preds = %1245, %1239
  %1263 = add nuw nsw i64 %1240, 1
  %1264 = icmp eq i64 %1263, %117
  br i1 %1264, label %1124, label %1239

1265:                                             ; preds = %1125, %1265
  %1266 = phi i64 [ %1283, %1265 ], [ 0, %1125 ]
  %1267 = getelementptr inbounds i32, ptr %1033, i64 %1266
  %1268 = load i32, ptr %1267, align 4, !tbaa !59
  %1269 = mul i32 %1268, %973
  %1270 = add i32 %1269, %1001
  %1271 = zext i32 %1270 to i64
  %1272 = getelementptr inbounds double, ptr %972, i64 %1271
  %1273 = load double, ptr %1272, align 8, !tbaa !133
  %1274 = fmul double %1029, %1273
  %1275 = trunc i64 %1266 to i32
  %1276 = add i32 %1036, %1275
  %1277 = zext i32 %1276 to i64
  %1278 = getelementptr inbounds float, ptr %1034, i64 %1277
  %1279 = load float, ptr %1278, align 4, !tbaa !282
  %1280 = fpext float %1279 to double
  %1281 = call double @llvm.fmuladd.f64(double %1274, double %988, double %1280)
  %1282 = fptrunc double %1281 to float
  store float %1282, ptr %1278, align 4, !tbaa !282
  %1283 = add nuw nsw i64 %1266, 1
  %1284 = icmp eq i64 %1283, %117
  br i1 %1284, label %1124, label %1265

1285:                                             ; preds = %1041, %979
  %1286 = add nuw nsw i64 %980, 1
  %1287 = icmp eq i64 %1286, %50
  br i1 %1287, label %1562, label %979

1288:                                             ; preds = %977, %1559
  %1289 = phi i64 [ 0, %977 ], [ %1560, %1559 ]
  %1290 = getelementptr inbounds double, ptr %978, i64 %1289
  %1291 = load double, ptr %1290, align 8, !tbaa !133
  br i1 %192, label %1559, label %1292

1292:                                             ; preds = %1288
  %1293 = load ptr, ptr %154, align 8, !tbaa !205
  %1294 = trunc i64 %1289 to i32
  %1295 = trunc i64 %1289 to i32
  %1296 = trunc i64 %1289 to i32
  br label %1297

1297:                                             ; preds = %1556, %1292
  %1298 = phi i64 [ %1557, %1556 ], [ 0, %1292 ]
  %1299 = getelementptr inbounds %"class.std::vector.126", ptr %1293, i64 %1298
  %1300 = load ptr, ptr %1299, align 8, !tbaa !54
  %1301 = load ptr, ptr %29, align 8
  %1302 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1301, i64 0, i32 2
  %1303 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1301, i64 0, i32 20
  %1304 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1301, i64 0, i32 19
  %1305 = load ptr, ptr %149, align 8
  %1306 = getelementptr inbounds i32, ptr %1305, i64 %1298
  %1307 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1301, i64 0, i32 12
  %1308 = load ptr, ptr %150, align 8
  %1309 = load i32, ptr %151, align 8
  %1310 = load ptr, ptr %18, align 8
  %1311 = getelementptr inbounds %"class.dealii::Vector", ptr %1310, i64 %1289, i32 3
  %1312 = load ptr, ptr %143, align 8
  %1313 = getelementptr inbounds double, ptr %1312, i64 %1298
  %1314 = load ptr, ptr %17, align 8
  %1315 = getelementptr inbounds double, ptr %1314, i64 %1289
  %1316 = trunc i64 %1298 to i32
  %1317 = trunc i64 %1298 to i32
  br label %1318

1318:                                             ; preds = %1297, %1435
  %1319 = phi i64 [ 0, %1297 ], [ %1436, %1435 ]
  %1320 = trunc i64 %1319 to i32
  %1321 = lshr i64 %1319, 6
  %1322 = and i64 %1321, 67108863
  %1323 = getelementptr inbounds i64, ptr %1300, i64 %1322
  %1324 = and i32 %1320, 63
  %1325 = and i64 %1319, 63
  %1326 = shl nuw i64 1, %1325
  %1327 = load i64, ptr %1323, align 8, !tbaa !56
  %1328 = and i64 %1327, %1326
  %1329 = icmp eq i64 %1328, 0
  br i1 %1329, label %1435, label %1330

1330:                                             ; preds = %1318
  %1331 = load i8, ptr %1302, align 4, !tbaa !148, !range !182, !noundef !183
  %1332 = icmp eq i8 %1331, 0
  br i1 %1332, label %1333, label %1371

1333:                                             ; preds = %1330
  %1334 = load ptr, ptr %1303, align 8, !tbaa !144
  %1335 = getelementptr inbounds i32, ptr %1334, i64 %1298
  %1336 = load i32, ptr %1335, align 4, !tbaa !59
  %1337 = icmp eq i32 %1336, 1
  br i1 %1337, label %1371, label %1338

1338:                                             ; preds = %1333
  %1339 = load ptr, ptr %1304, align 8, !tbaa !205
  %1340 = getelementptr inbounds %"class.std::vector.126", ptr %1339, i64 %1298
  %1341 = load ptr, ptr %1340, align 8, !tbaa !54
  %1342 = getelementptr inbounds i64, ptr %1341, i64 %1322
  %1343 = load i64, ptr %1342, align 8, !tbaa !56
  %1344 = and i64 %1343, %1326
  %1345 = icmp eq i64 %1344, 0
  br i1 %1345, label %1455, label %1346

1346:                                             ; preds = %1338
  %1347 = load i32, ptr %1306, align 4, !tbaa !59
  %1348 = icmp eq i64 %1319, 0
  br i1 %1348, label %1368, label %1349

1349:                                             ; preds = %1346, %1349
  %1350 = phi i64 [ %1357, %1349 ], [ 0, %1346 ]
  %1351 = phi i32 [ %1362, %1349 ], [ 0, %1346 ]
  %1352 = phi ptr [ %1361, %1349 ], [ %1341, %1346 ]
  %1353 = zext i32 %1351 to i64
  %1354 = load i64, ptr %1352, align 8, !tbaa !56
  %1355 = lshr i64 %1354, %1353
  %1356 = and i64 %1355, 1
  %1357 = add nuw nsw i64 %1356, %1350
  %1358 = add i32 %1351, 1
  %1359 = icmp eq i32 %1351, 63
  %1360 = zext i1 %1359 to i64
  %1361 = getelementptr inbounds i64, ptr %1352, i64 %1360
  %1362 = select i1 %1359, i32 0, i32 %1358
  %1363 = icmp ne ptr %1361, %1342
  %1364 = icmp ne i32 %1362, %1324
  %1365 = or i1 %1364, %1363
  br i1 %1365, label %1349, label %1366

1366:                                             ; preds = %1349
  %1367 = trunc i64 %1357 to i32
  br label %1368

1368:                                             ; preds = %1366, %1346
  %1369 = phi i32 [ 0, %1346 ], [ %1367, %1366 ]
  %1370 = add i32 %1369, %1347
  br label %1379

1371:                                             ; preds = %1333, %1330
  %1372 = load ptr, ptr %1307, align 8, !tbaa !184
  %1373 = getelementptr inbounds %"struct.std::pair.263", ptr %1372, i64 %1298
  %1374 = load i64, ptr %1373, align 4
  %1375 = and i64 %1374, 4294967295
  %1376 = icmp eq i64 %1319, %1375
  br i1 %1376, label %1377, label %1453

1377:                                             ; preds = %1371
  %1378 = load i32, ptr %1306, align 4, !tbaa !59
  br label %1379

1379:                                             ; preds = %1377, %1368
  %1380 = phi i32 [ %1370, %1368 ], [ %1378, %1377 ]
  %1381 = mul i32 %1309, %1380
  %1382 = add i32 %1381, %1294
  %1383 = zext i32 %1382 to i64
  %1384 = getelementptr inbounds double, ptr %1308, i64 %1383
  %1385 = load double, ptr %1384, align 8, !tbaa !133
  br label %1453

1386:                                             ; preds = %1457
  %1387 = load ptr, ptr %1311, align 8, !tbaa !136
  %1388 = getelementptr inbounds double, ptr %1387, i64 %1319
  br label %1429

1389:                                             ; preds = %1426
  %1390 = add nuw nsw i64 %1439, 1
  %1391 = icmp eq i64 %1390, %117
  br i1 %1391, label %1457, label %1438

1392:                                             ; preds = %1438, %1426
  %1393 = phi i32 [ 0, %1438 ], [ %1427, %1426 ]
  %1394 = lshr i32 %1393, 6
  %1395 = zext i32 %1394 to i64
  %1396 = getelementptr inbounds i64, ptr %1441, i64 %1395
  %1397 = and i32 %1393, 63
  %1398 = zext i32 %1397 to i64
  %1399 = shl nuw i64 1, %1398
  %1400 = load i64, ptr %1396, align 8, !tbaa !56
  %1401 = and i64 %1400, %1399
  %1402 = icmp eq i64 %1401, 0
  br i1 %1402, label %1426, label %1403

1403:                                             ; preds = %1392
  %1404 = load ptr, ptr %1307, align 8, !tbaa !184
  %1405 = getelementptr inbounds %"struct.std::pair.263", ptr %1404, i64 %1439
  %1406 = load i64, ptr %1405, align 4
  %1407 = trunc i64 %1406 to i32
  %1408 = icmp eq i32 %1393, %1407
  br i1 %1408, label %1409, label %1416

1409:                                             ; preds = %1403
  %1410 = load i32, ptr %1443, align 4, !tbaa !59
  %1411 = mul i32 %1445, %1410
  %1412 = add i32 %1411, %1295
  %1413 = zext i32 %1412 to i64
  %1414 = getelementptr inbounds double, ptr %1444, i64 %1413
  %1415 = load double, ptr %1414, align 8, !tbaa !133
  br label %1416

1416:                                             ; preds = %1409, %1403
  %1417 = phi double [ 0.000000e+00, %1403 ], [ %1415, %1409 ]
  %1418 = zext i32 %1393 to i64
  %1419 = icmp eq i64 %1319, %1418
  br i1 %1419, label %1420, label %1426

1420:                                             ; preds = %1416
  %1421 = fmul double %1454, %1417
  %1422 = load float, ptr %1452, align 4, !tbaa !282
  %1423 = fpext float %1422 to double
  %1424 = call double @llvm.fmuladd.f64(double %1421, double %1291, double %1423)
  %1425 = fptrunc double %1424 to float
  store float %1425, ptr %1452, align 4, !tbaa !282
  br label %1426

1426:                                             ; preds = %1420, %1416, %1392
  %1427 = add nuw i32 %1393, 1
  %1428 = icmp eq i32 %1427, %32
  br i1 %1428, label %1389, label %1392

1429:                                             ; preds = %1457, %1386
  %1430 = phi ptr [ %1388, %1386 ], [ %1315, %1457 ]
  %1431 = load double, ptr %1430, align 8, !tbaa !133
  %1432 = fmul double %1458, %1431
  %1433 = load double, ptr %1313, align 8, !tbaa !133
  %1434 = call double @llvm.fmuladd.f64(double %1432, double %1291, double %1433)
  store double %1434, ptr %1313, align 8, !tbaa !133
  br label %1435

1435:                                             ; preds = %1429, %1318
  %1436 = add nuw nsw i64 %1319, 1
  %1437 = icmp eq i64 %1436, %164
  br i1 %1437, label %1556, label %1318

1438:                                             ; preds = %1453, %1389
  %1439 = phi i64 [ %1390, %1389 ], [ 0, %1453 ]
  %1440 = getelementptr inbounds %"class.std::vector.126", ptr %1293, i64 %1439
  %1441 = load ptr, ptr %1440, align 8, !tbaa !54
  %1442 = load ptr, ptr %149, align 8
  %1443 = getelementptr inbounds i32, ptr %1442, i64 %1439
  %1444 = load ptr, ptr %150, align 8
  %1445 = load i32, ptr %151, align 8
  %1446 = load ptr, ptr %142, align 8
  %1447 = load i32, ptr %141, align 8
  %1448 = mul i32 %1447, %1316
  %1449 = trunc i64 %1439 to i32
  %1450 = add i32 %1448, %1449
  %1451 = zext i32 %1450 to i64
  %1452 = getelementptr inbounds float, ptr %1446, i64 %1451
  br label %1392

1453:                                             ; preds = %1371, %1379
  %1454 = phi double [ 0.000000e+00, %1371 ], [ %1385, %1379 ]
  br i1 %1332, label %1455, label %1438

1455:                                             ; preds = %1338, %1453
  %1456 = phi double [ %1454, %1453 ], [ 0.000000e+00, %1338 ]
  br label %1461

1457:                                             ; preds = %1389, %1553
  %1458 = phi double [ %1456, %1553 ], [ %1454, %1389 ]
  %1459 = load i32, ptr %144, align 8, !tbaa !145
  %1460 = icmp eq i32 %1459, 1
  br i1 %1460, label %1429, label %1386

1461:                                             ; preds = %1455, %1553
  %1462 = phi i64 [ 0, %1455 ], [ %1554, %1553 ]
  %1463 = getelementptr inbounds %"class.std::vector.126", ptr %1293, i64 %1462
  %1464 = load ptr, ptr %1463, align 8, !tbaa !54
  %1465 = load ptr, ptr %149, align 8
  %1466 = getelementptr inbounds i32, ptr %1465, i64 %1462
  %1467 = load ptr, ptr %150, align 8
  %1468 = load i32, ptr %151, align 8
  %1469 = load ptr, ptr %142, align 8
  %1470 = load i32, ptr %141, align 8
  %1471 = mul i32 %1470, %1317
  %1472 = trunc i64 %1462 to i32
  %1473 = add i32 %1471, %1472
  %1474 = zext i32 %1473 to i64
  %1475 = getelementptr inbounds float, ptr %1469, i64 %1474
  br label %1476

1476:                                             ; preds = %1550, %1461
  %1477 = phi i32 [ 0, %1461 ], [ %1551, %1550 ]
  %1478 = lshr i32 %1477, 6
  %1479 = zext i32 %1478 to i64
  %1480 = getelementptr inbounds i64, ptr %1464, i64 %1479
  %1481 = and i32 %1477, 63
  %1482 = zext i32 %1481 to i64
  %1483 = shl nuw i64 1, %1482
  %1484 = load i64, ptr %1480, align 8, !tbaa !56
  %1485 = and i64 %1484, %1483
  %1486 = icmp eq i64 %1485, 0
  br i1 %1486, label %1550, label %1487

1487:                                             ; preds = %1476
  %1488 = load ptr, ptr %1303, align 8, !tbaa !144
  %1489 = getelementptr inbounds i32, ptr %1488, i64 %1462
  %1490 = load i32, ptr %1489, align 4, !tbaa !59
  %1491 = icmp eq i32 %1490, 1
  br i1 %1491, label %1525, label %1492

1492:                                             ; preds = %1487
  %1493 = load ptr, ptr %1304, align 8, !tbaa !205
  %1494 = getelementptr inbounds %"class.std::vector.126", ptr %1493, i64 %1462
  %1495 = load ptr, ptr %1494, align 8, !tbaa !54
  %1496 = getelementptr inbounds i64, ptr %1495, i64 %1479
  %1497 = load i64, ptr %1496, align 8, !tbaa !56
  %1498 = and i64 %1497, %1483
  %1499 = icmp eq i64 %1498, 0
  br i1 %1499, label %1540, label %1500

1500:                                             ; preds = %1492
  %1501 = load i32, ptr %1466, align 4, !tbaa !59
  %1502 = icmp eq i32 %1477, 0
  br i1 %1502, label %1522, label %1503

1503:                                             ; preds = %1500, %1503
  %1504 = phi i64 [ %1511, %1503 ], [ 0, %1500 ]
  %1505 = phi i32 [ %1516, %1503 ], [ 0, %1500 ]
  %1506 = phi ptr [ %1515, %1503 ], [ %1495, %1500 ]
  %1507 = zext i32 %1505 to i64
  %1508 = load i64, ptr %1506, align 8, !tbaa !56
  %1509 = lshr i64 %1508, %1507
  %1510 = and i64 %1509, 1
  %1511 = add nuw nsw i64 %1510, %1504
  %1512 = add i32 %1505, 1
  %1513 = icmp eq i32 %1505, 63
  %1514 = zext i1 %1513 to i64
  %1515 = getelementptr inbounds i64, ptr %1506, i64 %1514
  %1516 = select i1 %1513, i32 0, i32 %1512
  %1517 = icmp ne ptr %1515, %1496
  %1518 = icmp ne i32 %1516, %1481
  %1519 = or i1 %1518, %1517
  br i1 %1519, label %1503, label %1520

1520:                                             ; preds = %1503
  %1521 = trunc i64 %1511 to i32
  br label %1522

1522:                                             ; preds = %1520, %1500
  %1523 = phi i32 [ 0, %1500 ], [ %1521, %1520 ]
  %1524 = add i32 %1523, %1501
  br label %1533

1525:                                             ; preds = %1487
  %1526 = load ptr, ptr %1307, align 8, !tbaa !184
  %1527 = getelementptr inbounds %"struct.std::pair.263", ptr %1526, i64 %1462
  %1528 = load i64, ptr %1527, align 4
  %1529 = trunc i64 %1528 to i32
  %1530 = icmp eq i32 %1477, %1529
  br i1 %1530, label %1531, label %1540

1531:                                             ; preds = %1525
  %1532 = load i32, ptr %1466, align 4, !tbaa !59
  br label %1533

1533:                                             ; preds = %1531, %1522
  %1534 = phi i32 [ %1524, %1522 ], [ %1532, %1531 ]
  %1535 = mul i32 %1468, %1534
  %1536 = add i32 %1535, %1296
  %1537 = zext i32 %1536 to i64
  %1538 = getelementptr inbounds double, ptr %1467, i64 %1537
  %1539 = load double, ptr %1538, align 8, !tbaa !133
  br label %1540

1540:                                             ; preds = %1533, %1525, %1492
  %1541 = phi double [ 0.000000e+00, %1525 ], [ 0.000000e+00, %1492 ], [ %1539, %1533 ]
  %1542 = zext i32 %1477 to i64
  %1543 = icmp eq i64 %1319, %1542
  br i1 %1543, label %1544, label %1550

1544:                                             ; preds = %1540
  %1545 = fmul double %1456, %1541
  %1546 = load float, ptr %1475, align 4, !tbaa !282
  %1547 = fpext float %1546 to double
  %1548 = call double @llvm.fmuladd.f64(double %1545, double %1291, double %1547)
  %1549 = fptrunc double %1548 to float
  store float %1549, ptr %1475, align 4, !tbaa !282
  br label %1550

1550:                                             ; preds = %1544, %1540, %1476
  %1551 = add nuw i32 %1477, 1
  %1552 = icmp eq i32 %1551, %32
  br i1 %1552, label %1553, label %1476

1553:                                             ; preds = %1550
  %1554 = add nuw nsw i64 %1462, 1
  %1555 = icmp eq i64 %1554, %117
  br i1 %1555, label %1457, label %1461

1556:                                             ; preds = %1435
  %1557 = add nuw nsw i64 %1298, 1
  %1558 = icmp eq i64 %1557, %117
  br i1 %1558, label %1559, label %1297

1559:                                             ; preds = %1556, %1288
  %1560 = add nuw nsw i64 %1289, 1
  %1561 = icmp eq i64 %1560, %50
  br i1 %1561, label %1562, label %1288

1562:                                             ; preds = %581, %961, %427, %1285, %1559, %436, %444, %286, %967, %976
  br i1 %155, label %1577, label %1563

1563:                                             ; preds = %1562, %1573
  %1564 = phi i64 [ %1575, %1573 ], [ 0, %1562 ]
  %1565 = phi i32 [ %1574, %1573 ], [ 0, %1562 ]
  %1566 = getelementptr inbounds i32, ptr %124, i64 %1564
  %1567 = load i32, ptr %1566, align 4, !tbaa !59
  %1568 = load ptr, ptr %142, align 8, !tbaa !280
  %1569 = load i32, ptr %141, align 8, !tbaa !59
  %1570 = mul i32 %1569, %1565
  %1571 = zext i32 %1570 to i64
  %1572 = getelementptr inbounds float, ptr %1568, i64 %1571
  invoke void @_ZN6dealii12SparseMatrixIfE3addIfEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36) %3, i32 noundef %1567, i32 noundef %160, ptr noundef nonnull %124, ptr noundef nonnull %1572, i1 noundef zeroext true, i1 noundef zeroext false)
          to label %1573 unwind label %1710

1573:                                             ; preds = %1563
  %1574 = add i32 %1565, 1
  %1575 = zext i32 %1574 to i64
  %1576 = icmp ugt i64 %159, %1575
  br i1 %1576, label %1563, label %1577

1577:                                             ; preds = %1573, %1562
  br i1 %36, label %1592, label %1578

1578:                                             ; preds = %1577
  %1579 = load ptr, ptr %143, align 8, !tbaa !136
  %1580 = load ptr, ptr %161, align 8, !tbaa !136
  br i1 %194, label %1581, label %1712

1581:                                             ; preds = %1712, %1578
  %1582 = phi i64 [ 0, %1578 ], [ %1732, %1712 ]
  br i1 %196, label %1592, label %1583

1583:                                             ; preds = %1581
  %1584 = getelementptr inbounds double, ptr %1579, i64 %1582
  %1585 = load double, ptr %1584, align 8, !tbaa !133
  %1586 = getelementptr inbounds i32, ptr %124, i64 %1582
  %1587 = load i32, ptr %1586, align 4, !tbaa !59
  %1588 = zext i32 %1587 to i64
  %1589 = getelementptr inbounds double, ptr %1580, i64 %1588
  %1590 = load double, ptr %1589, align 8, !tbaa !133
  %1591 = fadd double %1585, %1590
  store double %1591, ptr %1589, align 8, !tbaa !133
  br label %1592

1592:                                             ; preds = %1583, %1581, %1577
  %1593 = load ptr, ptr %162, align 8, !tbaa !62
  %1594 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1593, i64 0, i32 1
  %1595 = load ptr, ptr %1594, align 8, !tbaa !46
  %1596 = ptrtoint ptr %1595 to i64
  %1597 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1593, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1598 = load i32, ptr %21, align 8
  %1599 = load i32, ptr %130, align 4
  br label %1600

1600:                                             ; preds = %1688, %1592
  %1601 = phi i32 [ %1598, %1592 ], [ %1667, %1688 ]
  %1602 = phi i32 [ %1598, %1592 ], [ %1668, %1688 ]
  %1603 = phi i32 [ %1598, %1592 ], [ %1689, %1688 ]
  %1604 = phi i32 [ %1599, %1592 ], [ %1669, %1688 ]
  %1605 = add nsw i32 %1604, 1
  %1606 = sext i32 %1603 to i64
  %1607 = getelementptr inbounds ptr, ptr %1595, i64 %1606
  %1608 = load ptr, ptr %1607, align 8, !tbaa !33
  %1609 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1608, i64 0, i32 4
  %1610 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1608, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1611 = load ptr, ptr %1610, align 8, !tbaa !48
  %1612 = load ptr, ptr %1609, align 8, !tbaa !50
  %1613 = ptrtoint ptr %1611 to i64
  %1614 = ptrtoint ptr %1612 to i64
  %1615 = sub i64 %1613, %1614
  %1616 = sdiv exact i64 %1615, 24
  %1617 = trunc i64 %1616 to i32
  %1618 = icmp slt i32 %1605, %1617
  br i1 %1618, label %1666, label %1619

1619:                                             ; preds = %1600
  %1620 = add nsw i64 %1606, 1
  %1621 = trunc i64 %1620 to i32
  store i32 %1621, ptr %21, align 8, !tbaa !60
  %1622 = load ptr, ptr %1597, align 8, !tbaa !51
  %1623 = ptrtoint ptr %1622 to i64
  %1624 = sub i64 %1623, %1596
  %1625 = shl i64 %1624, 29
  %1626 = ashr i64 %1625, 32
  %1627 = icmp slt i64 %1620, %1626
  br i1 %1627, label %1628, label %1660

1628:                                             ; preds = %1619
  %1629 = getelementptr inbounds ptr, ptr %1595, i64 %1620
  %1630 = load ptr, ptr %1629, align 8, !tbaa !33
  %1631 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1630, i64 0, i32 4
  %1632 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1630, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1633 = load ptr, ptr %1632, align 8, !tbaa !48
  %1634 = load ptr, ptr %1631, align 8, !tbaa !50
  %1635 = ptrtoint ptr %1633 to i64
  %1636 = ptrtoint ptr %1634 to i64
  %1637 = sub i64 %1635, %1636
  %1638 = sdiv exact i64 %1637, 24
  %1639 = trunc i64 %1638 to i32
  %1640 = icmp sgt i32 %1639, 0
  br i1 %1640, label %1662, label %1654

1641:                                             ; preds = %1654
  %1642 = getelementptr inbounds ptr, ptr %1595, i64 %1656
  %1643 = load ptr, ptr %1642, align 8, !tbaa !33
  %1644 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1643, i64 0, i32 4
  %1645 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1643, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1646 = load ptr, ptr %1645, align 8, !tbaa !48
  %1647 = load ptr, ptr %1644, align 8, !tbaa !50
  %1648 = ptrtoint ptr %1646 to i64
  %1649 = ptrtoint ptr %1647 to i64
  %1650 = sub i64 %1648, %1649
  %1651 = sdiv exact i64 %1650, 24
  %1652 = trunc i64 %1651 to i32
  %1653 = icmp sgt i32 %1652, 0
  br i1 %1653, label %1661, label %1654, !llvm.loop !52

1654:                                             ; preds = %1628, %1641
  %1655 = phi i64 [ %1656, %1641 ], [ %1620, %1628 ]
  %1656 = add i64 %1655, 1
  %1657 = trunc i64 %1656 to i32
  %1658 = icmp eq i64 %1656, %1626
  br i1 %1658, label %1659, label %1641, !llvm.loop !52

1659:                                             ; preds = %1654
  store i32 %1657, ptr %21, align 8, !tbaa !60
  br label %1660

1660:                                             ; preds = %1659, %1619
  store i32 -1, ptr %21, align 8, !tbaa !60
  br label %1666

1661:                                             ; preds = %1641
  store i32 %1657, ptr %21, align 8, !tbaa !60
  br label %1662

1662:                                             ; preds = %1661, %1628
  %1663 = phi i32 [ %1621, %1628 ], [ %1657, %1661 ]
  %1664 = phi i64 [ %1620, %1628 ], [ %1656, %1661 ]
  %1665 = trunc i64 %1664 to i32
  br label %1666

1666:                                             ; preds = %1662, %1660, %1600
  %1667 = phi i32 [ %1601, %1600 ], [ -1, %1660 ], [ %1663, %1662 ]
  %1668 = phi i32 [ %1602, %1600 ], [ -1, %1660 ], [ %1665, %1662 ]
  %1669 = phi i32 [ %1605, %1600 ], [ -1, %1660 ], [ 0, %1662 ]
  %1670 = phi i32 [ %1603, %1600 ], [ -1, %1660 ], [ %1665, %1662 ]
  %1671 = or i32 %1670, %1669
  %1672 = icmp sgt i32 %1671, -1
  br i1 %1672, label %1673, label %1690

1673:                                             ; preds = %1666
  %1674 = zext i32 %1670 to i64
  %1675 = getelementptr inbounds ptr, ptr %1595, i64 %1674
  %1676 = load ptr, ptr %1675, align 8, !tbaa !33
  %1677 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1676, i64 0, i32 4, i32 0, i32 3
  %1678 = load ptr, ptr %1677, align 8, !tbaa !54
  %1679 = lshr i32 %1669, 6
  %1680 = zext i32 %1679 to i64
  %1681 = getelementptr inbounds i64, ptr %1678, i64 %1680
  %1682 = and i32 %1669, 63
  %1683 = zext i32 %1682 to i64
  %1684 = shl nuw i64 1, %1683
  %1685 = load i64, ptr %1681, align 8, !tbaa !56
  %1686 = and i64 %1685, %1684
  %1687 = icmp eq i64 %1686, 0
  br i1 %1687, label %1688, label %1690

1688:                                             ; preds = %1673, %1693
  %1689 = phi i32 [ %1670, %1673 ], [ %1668, %1693 ]
  br label %1600

1690:                                             ; preds = %1673, %1666
  store i32 %1669, ptr %130, align 4, !tbaa !61
  %1691 = or i32 %1669, %1668
  %1692 = icmp sgt i32 %1691, -1
  br i1 %1692, label %1693, label %1704

1693:                                             ; preds = %1690
  %1694 = zext i32 %1668 to i64
  %1695 = getelementptr inbounds ptr, ptr %1595, i64 %1694
  %1696 = load ptr, ptr %1695, align 8, !tbaa !33
  %1697 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1696, i64 0, i32 4, i32 0, i32 1
  %1698 = shl i32 %1669, 2
  %1699 = zext i32 %1698 to i64
  %1700 = load ptr, ptr %1697, align 8, !tbaa !57
  %1701 = getelementptr inbounds i32, ptr %1700, i64 %1699
  %1702 = load i32, ptr %1701, align 4, !tbaa !59
  %1703 = icmp eq i32 %1702, -1
  br i1 %1703, label %1704, label %1688

1704:                                             ; preds = %1690, %1693
  %1705 = load i32, ptr %131, align 4, !tbaa !61
  %1706 = icmp ne i32 %1669, %1705
  %1707 = load i32, ptr %129, align 8
  %1708 = icmp ne i32 %1667, %1707
  %1709 = select i1 %1706, i1 true, i1 %1708
  br i1 %1709, label %197, label %1735

1710:                                             ; preds = %1563
  %1711 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  br label %1814

1712:                                             ; preds = %1578, %1712
  %1713 = phi i64 [ %1732, %1712 ], [ 0, %1578 ]
  %1714 = phi i64 [ %1733, %1712 ], [ 0, %1578 ]
  %1715 = getelementptr inbounds double, ptr %1579, i64 %1713
  %1716 = load double, ptr %1715, align 8, !tbaa !133
  %1717 = getelementptr inbounds i32, ptr %124, i64 %1713
  %1718 = load i32, ptr %1717, align 4, !tbaa !59
  %1719 = zext i32 %1718 to i64
  %1720 = getelementptr inbounds double, ptr %1580, i64 %1719
  %1721 = load double, ptr %1720, align 8, !tbaa !133
  %1722 = fadd double %1716, %1721
  store double %1722, ptr %1720, align 8, !tbaa !133
  %1723 = or i64 %1713, 1
  %1724 = getelementptr inbounds double, ptr %1579, i64 %1723
  %1725 = load double, ptr %1724, align 8, !tbaa !133
  %1726 = getelementptr inbounds i32, ptr %124, i64 %1723
  %1727 = load i32, ptr %1726, align 4, !tbaa !59
  %1728 = zext i32 %1727 to i64
  %1729 = getelementptr inbounds double, ptr %1580, i64 %1728
  %1730 = load double, ptr %1729, align 8, !tbaa !133
  %1731 = fadd double %1725, %1730
  store double %1731, ptr %1729, align 8, !tbaa !133
  %1732 = add nuw nsw i64 %1713, 2
  %1733 = add i64 %1714, 2
  %1734 = icmp eq i64 %1733, %195
  br i1 %1734, label %1581, label %1712

1735:                                             ; preds = %1704, %123
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %1736 = icmp eq ptr %124, null
  br i1 %1736, label %1738, label %1737

1737:                                             ; preds = %1735
  call void @_ZdlPv(ptr noundef nonnull %124) #21
  br label %1738

1738:                                             ; preds = %1737, %1735
  %1739 = load ptr, ptr %18, align 8, !tbaa !224
  %1740 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1741 = load ptr, ptr %1740, align 8, !tbaa !226
  %1742 = icmp eq ptr %1739, %1741
  br i1 %1742, label %1752, label %1743

1743:                                             ; preds = %1738, %1747
  %1744 = phi ptr [ %1748, %1747 ], [ %1739, %1738 ]
  %1745 = load ptr, ptr %1744, align 8, !tbaa !41
  %1746 = load ptr, ptr %1745, align 8
  invoke void %1746(ptr noundef nonnull align 8 dereferenceable(88) %1744)
          to label %1747 unwind label %1756

1747:                                             ; preds = %1743
  %1748 = getelementptr inbounds %"class.dealii::Vector", ptr %1744, i64 1
  %1749 = icmp eq ptr %1748, %1741
  br i1 %1749, label %1750, label %1743

1750:                                             ; preds = %1747
  %1751 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1752

1752:                                             ; preds = %1750, %1738
  %1753 = phi ptr [ %1751, %1750 ], [ %1739, %1738 ]
  %1754 = icmp eq ptr %1753, null
  br i1 %1754, label %1761, label %1755

1755:                                             ; preds = %1752
  call void @_ZdlPv(ptr noundef nonnull %1753) #21
  br label %1761

1756:                                             ; preds = %1743
  %1757 = landingpad { ptr, i32 }
          cleanup
  %1758 = load ptr, ptr %18, align 8, !tbaa !224
  %1759 = icmp eq ptr %1758, null
  br i1 %1759, label %1840, label %1760

1760:                                             ; preds = %1756
  call void @_ZdlPv(ptr noundef nonnull %1758) #21
  br label %1840

1761:                                             ; preds = %1755, %1752
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1762 = load ptr, ptr %17, align 8, !tbaa !131
  %1763 = icmp eq ptr %1762, null
  br i1 %1763, label %1765, label %1764

1764:                                             ; preds = %1761
  call void @_ZdlPv(ptr noundef nonnull %1762) #21
  br label %1765

1765:                                             ; preds = %1764, %1761
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1766 = load ptr, ptr %14, align 8, !tbaa !224
  %1767 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %1768 = load ptr, ptr %1767, align 8, !tbaa !226
  %1769 = icmp eq ptr %1766, %1768
  br i1 %1769, label %1779, label %1770

1770:                                             ; preds = %1765, %1774
  %1771 = phi ptr [ %1775, %1774 ], [ %1766, %1765 ]
  %1772 = load ptr, ptr %1771, align 8, !tbaa !41
  %1773 = load ptr, ptr %1772, align 8
  invoke void %1773(ptr noundef nonnull align 8 dereferenceable(88) %1771)
          to label %1774 unwind label %1783

1774:                                             ; preds = %1770
  %1775 = getelementptr inbounds %"class.dealii::Vector", ptr %1771, i64 1
  %1776 = icmp eq ptr %1775, %1768
  br i1 %1776, label %1777, label %1770

1777:                                             ; preds = %1774
  %1778 = load ptr, ptr %14, align 8, !tbaa !224
  br label %1779

1779:                                             ; preds = %1777, %1765
  %1780 = phi ptr [ %1778, %1777 ], [ %1766, %1765 ]
  %1781 = icmp eq ptr %1780, null
  br i1 %1781, label %1788, label %1782

1782:                                             ; preds = %1779
  call void @_ZdlPv(ptr noundef nonnull %1780) #21
  br label %1788

1783:                                             ; preds = %1770
  %1784 = landingpad { ptr, i32 }
          cleanup
  %1785 = load ptr, ptr %14, align 8, !tbaa !224
  %1786 = icmp eq ptr %1785, null
  br i1 %1786, label %1869, label %1787

1787:                                             ; preds = %1783
  call void @_ZdlPv(ptr noundef nonnull %1785) #21
  br label %1869

1788:                                             ; preds = %1782, %1779
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1789 = load ptr, ptr %13, align 8, !tbaa !131
  %1790 = icmp eq ptr %1789, null
  br i1 %1790, label %1792, label %1791

1791:                                             ; preds = %1788
  call void @_ZdlPv(ptr noundef nonnull %1789) #21
  br label %1792

1792:                                             ; preds = %1791, %1788
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1793 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %1794 = load ptr, ptr %1793, align 8, !tbaa !136
  %1795 = icmp eq ptr %1794, null
  br i1 %1795, label %1797, label %1796

1796:                                             ; preds = %1792
  call void @_ZdaPv(ptr noundef nonnull %1794) #21
  store ptr null, ptr %1793, align 8, !tbaa !136
  br label %1797

1797:                                             ; preds = %1796, %1792
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1798 unwind label %252

1798:                                             ; preds = %1797
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EfEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1799 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %11, i64 0, i32 1
  %1800 = load ptr, ptr %1799, align 8, !tbaa !280
  %1801 = icmp eq ptr %1800, null
  br i1 %1801, label %1803, label %1802

1802:                                             ; preds = %1798
  call void @_ZdaPv(ptr noundef nonnull %1800) #21
  br label %1803

1803:                                             ; preds = %1802, %1798
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1804 unwind label %250

1804:                                             ; preds = %1803
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1805 = getelementptr inbounds %"class.dealii::FEValues", ptr %10, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1805)
          to label %1813 unwind label %1806

1806:                                             ; preds = %1804
  %1807 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1808 unwind label %1810

1808:                                             ; preds = %1806, %1897
  %1809 = phi { ptr, i32 } [ %1889, %1897 ], [ %1807, %1806 ]
  resume { ptr, i32 } %1809

1810:                                             ; preds = %1806
  %1811 = landingpad { ptr, i32 }
          catch ptr null
  %1812 = extractvalue { ptr, i32 } %1811, 0
  call void @__clang_call_terminate(ptr %1812) #22
  unreachable

1813:                                             ; preds = %1804
  call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %10) #19
  ret void

1814:                                             ; preds = %1710, %272
  %1815 = phi { ptr, i32 } [ %1711, %1710 ], [ %273, %272 ]
  call void @_ZdlPv(ptr noundef nonnull %124) #21
  br label %1816

1816:                                             ; preds = %1814, %272, %270
  %1817 = phi { ptr, i32 } [ %271, %270 ], [ %273, %272 ], [ %1815, %1814 ]
  %1818 = load ptr, ptr %18, align 8, !tbaa !224
  %1819 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1820 = load ptr, ptr %1819, align 8, !tbaa !226
  %1821 = icmp eq ptr %1818, %1820
  br i1 %1821, label %1831, label %1822

1822:                                             ; preds = %1816, %1826
  %1823 = phi ptr [ %1827, %1826 ], [ %1818, %1816 ]
  %1824 = load ptr, ptr %1823, align 8, !tbaa !41
  %1825 = load ptr, ptr %1824, align 8
  invoke void %1825(ptr noundef nonnull align 8 dereferenceable(88) %1823)
          to label %1826 unwind label %1835

1826:                                             ; preds = %1822
  %1827 = getelementptr inbounds %"class.dealii::Vector", ptr %1823, i64 1
  %1828 = icmp eq ptr %1827, %1820
  br i1 %1828, label %1829, label %1822

1829:                                             ; preds = %1826
  %1830 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1831

1831:                                             ; preds = %1829, %1816
  %1832 = phi ptr [ %1830, %1829 ], [ %1818, %1816 ]
  %1833 = icmp eq ptr %1832, null
  br i1 %1833, label %1840, label %1834

1834:                                             ; preds = %1831
  call void @_ZdlPv(ptr noundef nonnull %1832) #21
  br label %1840

1835:                                             ; preds = %1822
  %1836 = landingpad { ptr, i32 }
          catch ptr null
  %1837 = load ptr, ptr %18, align 8, !tbaa !224
  %1838 = icmp eq ptr %1837, null
  br i1 %1838, label %1900, label %1839

1839:                                             ; preds = %1835
  call void @_ZdlPv(ptr noundef nonnull %1837) #21
  br label %1900

1840:                                             ; preds = %1760, %1756, %1834, %1831, %268
  %1841 = phi { ptr, i32 } [ %269, %268 ], [ %1817, %1831 ], [ %1817, %1834 ], [ %1757, %1760 ], [ %1757, %1756 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1842 = load ptr, ptr %17, align 8, !tbaa !131
  %1843 = icmp eq ptr %1842, null
  br i1 %1843, label %1845, label %1844

1844:                                             ; preds = %1840
  call void @_ZdlPv(ptr noundef nonnull %1842) #21
  br label %1845

1845:                                             ; preds = %1844, %1840, %262
  %1846 = phi { ptr, i32 } [ %263, %262 ], [ %1841, %1840 ], [ %1841, %1844 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1847 = load ptr, ptr %14, align 8, !tbaa !224
  %1848 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %1849 = load ptr, ptr %1848, align 8, !tbaa !226
  %1850 = icmp eq ptr %1847, %1849
  br i1 %1850, label %1860, label %1851

1851:                                             ; preds = %1845, %1855
  %1852 = phi ptr [ %1856, %1855 ], [ %1847, %1845 ]
  %1853 = load ptr, ptr %1852, align 8, !tbaa !41
  %1854 = load ptr, ptr %1853, align 8
  invoke void %1854(ptr noundef nonnull align 8 dereferenceable(88) %1852)
          to label %1855 unwind label %1864

1855:                                             ; preds = %1851
  %1856 = getelementptr inbounds %"class.dealii::Vector", ptr %1852, i64 1
  %1857 = icmp eq ptr %1856, %1849
  br i1 %1857, label %1858, label %1851

1858:                                             ; preds = %1855
  %1859 = load ptr, ptr %14, align 8, !tbaa !224
  br label %1860

1860:                                             ; preds = %1858, %1845
  %1861 = phi ptr [ %1859, %1858 ], [ %1847, %1845 ]
  %1862 = icmp eq ptr %1861, null
  br i1 %1862, label %1869, label %1863

1863:                                             ; preds = %1860
  call void @_ZdlPv(ptr noundef nonnull %1861) #21
  br label %1869

1864:                                             ; preds = %1851
  %1865 = landingpad { ptr, i32 }
          catch ptr null
  %1866 = load ptr, ptr %14, align 8, !tbaa !224
  %1867 = icmp eq ptr %1866, null
  br i1 %1867, label %1900, label %1868

1868:                                             ; preds = %1864
  call void @_ZdlPv(ptr noundef nonnull %1866) #21
  br label %1900

1869:                                             ; preds = %1787, %1783, %1863, %1860, %260
  %1870 = phi { ptr, i32 } [ %261, %260 ], [ %1846, %1860 ], [ %1846, %1863 ], [ %1784, %1787 ], [ %1784, %1783 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1871 = load ptr, ptr %13, align 8, !tbaa !131
  %1872 = icmp eq ptr %1871, null
  br i1 %1872, label %1874, label %1873

1873:                                             ; preds = %1869
  call void @_ZdlPv(ptr noundef nonnull %1871) #21
  br label %1874

1874:                                             ; preds = %1873, %1869, %254
  %1875 = phi { ptr, i32 } [ %255, %254 ], [ %1870, %1869 ], [ %1870, %1873 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1876 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %1877 = load ptr, ptr %1876, align 8, !tbaa !136
  %1878 = icmp eq ptr %1877, null
  br i1 %1878, label %1880, label %1879

1879:                                             ; preds = %1874
  call void @_ZdaPv(ptr noundef nonnull %1877) #21
  store ptr null, ptr %1876, align 8, !tbaa !136
  br label %1880

1880:                                             ; preds = %1879, %1874
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1881 unwind label %1898

1881:                                             ; preds = %1880, %252, %44
  %1882 = phi { ptr, i32 } [ %253, %252 ], [ %45, %44 ], [ %1875, %1880 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EfEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1883 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %11, i64 0, i32 1
  %1884 = load ptr, ptr %1883, align 8, !tbaa !280
  %1885 = icmp eq ptr %1884, null
  br i1 %1885, label %1887, label %1886

1886:                                             ; preds = %1881
  call void @_ZdaPv(ptr noundef nonnull %1884) #21
  br label %1887

1887:                                             ; preds = %1886, %1881
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1888 unwind label %1898

1888:                                             ; preds = %1887, %250
  %1889 = phi { ptr, i32 } [ %251, %250 ], [ %1882, %1887 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1890 = getelementptr inbounds %"class.dealii::FEValues", ptr %10, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1890)
          to label %1891 unwind label %1892

1891:                                             ; preds = %1888
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1897 unwind label %1898

1892:                                             ; preds = %1888
  %1893 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1900 unwind label %1894

1894:                                             ; preds = %1892
  %1895 = landingpad { ptr, i32 }
          catch ptr null
  %1896 = extractvalue { ptr, i32 } %1895, 0
  call void @__clang_call_terminate(ptr %1896) #22
  unreachable

1897:                                             ; preds = %1891
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %10) #19
  br label %1808

1898:                                             ; preds = %1891, %1887, %1880, %266, %258
  %1899 = landingpad { ptr, i32 }
          catch ptr null
  br label %1900

1900:                                             ; preds = %1868, %1864, %1892, %1898, %1835, %1839
  %1901 = phi { ptr, i32 } [ %1836, %1839 ], [ %1836, %1835 ], [ %1865, %1868 ], [ %1865, %1864 ], [ %1899, %1898 ], [ %1893, %1892 ]
  %1902 = extractvalue { ptr, i32 } %1901, 0
  call void @__clang_call_terminate(ptr %1902) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(72) %2, ptr noundef nonnull align 8 dereferenceable(168) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 1 %5, ptr noundef nonnull align 1 %6, ptr noundef nonnull align 8 dereferenceable(88) %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %10) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.266", align 8
  %13 = alloca %"class.boost::_bi::bind_t.295", align 8
  %14 = alloca %"class.boost::function.41", align 8
  %15 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  store ptr null, ptr %14, align 8, !tbaa !25
  %16 = load ptr, ptr %1, align 8, !tbaa !25
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  store ptr %16, ptr %14, align 8, !tbaa !25
  %19 = load ptr, ptr %16, align 8, !tbaa !227
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %19(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %21, i32 noundef 0)
  br label %22

22:                                               ; preds = %11, %18
  call void @llvm.experimental.noalias.scope.decl(metadata !322)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17, !noalias !322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %25 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %15, i64 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !17, !alias.scope !322
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %15, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !17, !noalias !322
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false)
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !17, !alias.scope !322
  %31 = ptrtoint ptr %6 to i64
  %32 = ptrtoint ptr %7 to i64
  %33 = ptrtoint ptr %10 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIfEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSK_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSY_IS9_EENSY_ISD_EENSY_ISG_EENSY_ISK_EENSY_ISN_EESP_SS_NSY_ISU_EEEENS_3_bi6bind_tINS16_11unspecifiedET_NS16_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES19_S1B_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_(ptr nonnull sret(%"class.boost::_bi::bind_t.295") align 8 %13, ptr noundef nonnull %14, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, i64 %31, i64 %32, ptr noundef %8, ptr noundef nonnull %15, i64 %33)
          to label %34 unwind label %63

34:                                               ; preds = %22
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS4_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull %13, i32 noundef 0)
          to label %35 unwind label %65

35:                                               ; preds = %34
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %36 unwind label %67

36:                                               ; preds = %35
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  %38 = icmp eq ptr %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load ptr, ptr %37, align 8, !tbaa !231
  %41 = icmp eq ptr %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %40(ptr noundef nonnull align 8 dereferenceable(24) %43, ptr noundef nonnull align 8 dereferenceable(24) %43, i32 noundef 2)
          to label %44 unwind label %65

44:                                               ; preds = %42, %39
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %45

45:                                               ; preds = %44, %36
  %46 = load ptr, ptr %13, align 8, !tbaa !25
  %47 = icmp eq ptr %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = load ptr, ptr %46, align 8, !tbaa !307
  %50 = icmp eq ptr %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr noundef nonnull align 8 dereferenceable(24) %52, i32 noundef 2)
          to label %53 unwind label %63

53:                                               ; preds = %51, %48
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %54

54:                                               ; preds = %53, %45
  %55 = load ptr, ptr %14, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %55, align 8, !tbaa !307
  %59 = icmp eq ptr %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %58(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
  br label %62

62:                                               ; preds = %57, %60, %54
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  ret void

63:                                               ; preds = %51, %22
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %87

65:                                               ; preds = %42, %34
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %77

67:                                               ; preds = %35
  %68 = landingpad { ptr, i32 }
          cleanup
  %69 = load ptr, ptr %12, align 8, !tbaa !25
  %70 = icmp eq ptr %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = load ptr, ptr %69, align 8, !tbaa !231
  %73 = icmp eq ptr %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %72(ptr noundef nonnull align 8 dereferenceable(24) %75, ptr noundef nonnull align 8 dereferenceable(24) %75, i32 noundef 2)
          to label %76 unwind label %97

76:                                               ; preds = %74, %71
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %77

77:                                               ; preds = %76, %67, %65
  %78 = phi { ptr, i32 } [ %66, %65 ], [ %68, %67 ], [ %68, %76 ]
  %79 = load ptr, ptr %13, align 8, !tbaa !25
  %80 = icmp eq ptr %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = load ptr, ptr %79, align 8, !tbaa !307
  %83 = icmp eq ptr %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %82(ptr noundef nonnull align 8 dereferenceable(24) %85, ptr noundef nonnull align 8 dereferenceable(24) %85, i32 noundef 2)
          to label %86 unwind label %97

86:                                               ; preds = %84, %81
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %87

87:                                               ; preds = %86, %77, %63
  %88 = phi { ptr, i32 } [ %64, %63 ], [ %78, %77 ], [ %78, %86 ]
  %89 = load ptr, ptr %14, align 8, !tbaa !25
  %90 = icmp eq ptr %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = load ptr, ptr %89, align 8, !tbaa !307
  %93 = icmp eq ptr %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  invoke void %92(ptr noundef nonnull align 8 dereferenceable(24) %95, ptr noundef nonnull align 8 dereferenceable(24) %95, i32 noundef 2)
          to label %96 unwind label %97

96:                                               ; preds = %91, %94, %87
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  resume { ptr, i32 } %88

97:                                               ; preds = %94, %84, %74
  %98 = landingpad { ptr, i32 }
          catch ptr null
  %99 = extractvalue { ptr, i32 } %98, 0
  call void @__clang_call_terminate(ptr %99) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSG_(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_7MappingIXT_EXT1_EEERKNS_10DoFHandlerIXT_EXT1_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSK_(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 1 %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %7 = alloca %"class.std::vector.43", align 8
  %8 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %9 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %10 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %11 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %12 = alloca %"class.dealii::Threads::Thread", align 16
  %13 = alloca %"class.dealii::Threads::internal::fun_encapsulator.66", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %15 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #19
  %16 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %6, i64 0, i32 1
  store ptr %6, ptr %16, align 8, !tbaa !10
  store ptr %6, ptr %6, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %6, i64 0, i32 1
  store i64 0, ptr %17, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %8, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %18 unwind label %41

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %10, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %19 unwind label %43

19:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  store ptr %22, ptr %20, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %15)
          to label %23 unwind label %43

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #19
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  %27 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.boost::shared_ptr", ptr %12, i64 0, i32 1
  %31 = zext i32 %15 to i64
  br label %47

32:                                               ; preds = %101, %23
  %33 = load ptr, ptr %6, align 8, !tbaa !13
  %34 = icmp eq ptr %33, %6
  br i1 %34, label %120, label %35

35:                                               ; preds = %32, %38
  %36 = phi ptr [ %39, %38 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.std::_List_node", ptr %36, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %37)
          to label %38 unwind label %153

38:                                               ; preds = %35
  %39 = load ptr, ptr %36, align 8, !tbaa !13
  %40 = icmp eq ptr %39, %6
  br i1 %40, label %120, label %35

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %45

43:                                               ; preds = %19, %18
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  br label %160

47:                                               ; preds = %25, %101
  %48 = phi i64 [ 0, %25 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !327)
  store ptr null, ptr %13, align 8, !tbaa !25, !alias.scope !327
  %49 = load ptr, ptr @_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable, align 8, !tbaa !330, !noalias !327
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %52 unwind label %104

52:                                               ; preds = %51, %47
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE, ptr %26, align 8, !tbaa !30, !alias.scope !327
  store ptr @_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable, ptr %13, align 8, !tbaa !25, !alias.scope !327
  %53 = load ptr, ptr %7, align 8, !tbaa !332
  %54 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  store ptr %56, ptr %27, align 8, !tbaa !325
  %57 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48, i32 1
  %58 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %57, i64 16, i1 false)
  store ptr %59, ptr %29, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %12, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 1 %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %11)
          to label %60 unwind label %106

60:                                               ; preds = %52
  %61 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %62 unwind label %108

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::_List_node", ptr %61, i64 0, i32 1
  %64 = load <2 x ptr>, ptr %12, align 16, !tbaa !33
  store <2 x ptr> %64, ptr %63, align 8, !tbaa !33
  %65 = extractelement <2 x ptr> %64, i64 1
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %65, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !34
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %68, align 8, !tbaa !34
  br label %71

71:                                               ; preds = %67, %62
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %61, ptr noundef nonnull %6) #19
  %72 = load i64, ptr %17, align 8, !tbaa !36
  %73 = add i64 %72, 1
  store i64 %73, ptr %17, align 8, !tbaa !36
  %74 = load ptr, ptr %30, align 8, !tbaa !39
  %75 = icmp eq ptr %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !34
  %79 = add nsw i64 %78, -1
  store i64 %79, ptr %77, align 8, !tbaa !34
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = load ptr, ptr %74, align 8, !tbaa !41
  %83 = getelementptr inbounds ptr, ptr %82, i64 2
  %84 = load ptr, ptr %83, align 8
  invoke void %84(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %85 unwind label %106

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !43
  %88 = add nsw i64 %87, -1
  store i64 %88, ptr %86, align 8, !tbaa !43
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load ptr, ptr %74, align 8, !tbaa !41
  %92 = getelementptr inbounds ptr, ptr %91, i64 3
  %93 = load ptr, ptr %92, align 8
  invoke void %93(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %94 unwind label %106

94:                                               ; preds = %85, %76, %71, %90
  %95 = load ptr, ptr %13, align 8, !tbaa !25
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %95, align 8, !tbaa !330
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  invoke void %98(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %101 unwind label %104

101:                                              ; preds = %97, %100, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  %102 = add nuw nsw i64 %48, 1
  %103 = icmp eq i64 %102, %31
  br i1 %103, label %32, label %47

104:                                              ; preds = %100, %51
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %118

106:                                              ; preds = %90, %81, %52
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %110

108:                                              ; preds = %60
  %109 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %12)
          to label %110 unwind label %163

110:                                              ; preds = %108, %106
  %111 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ]
  %112 = load ptr, ptr %13, align 8, !tbaa !25
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load ptr, ptr %112, align 8, !tbaa !330
  %116 = icmp eq ptr %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  invoke void %115(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %118 unwind label %163

118:                                              ; preds = %114, %117, %110, %104
  %119 = phi { ptr, i32 } [ %105, %104 ], [ %111, %110 ], [ %111, %117 ], [ %111, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  br label %155

120:                                              ; preds = %38, %32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %121 = load ptr, ptr %7, align 8, !tbaa !332
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef nonnull %121) #21
  br label %124

124:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  %125 = load ptr, ptr %6, align 8, !tbaa !13
  %126 = icmp eq ptr %125, %6
  br i1 %126, label %152, label %127

127:                                              ; preds = %124, %150
  %128 = phi ptr [ %129, %150 ], [ %125, %124 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = getelementptr inbounds %"struct.std::_List_node", ptr %128, i64 0, i32 1, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !34
  %136 = add nsw i64 %135, -1
  store i64 %136, ptr %134, align 8, !tbaa !34
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load ptr, ptr %131, align 8, !tbaa !41
  %140 = getelementptr inbounds ptr, ptr %139, i64 2
  %141 = load ptr, ptr %140, align 8
  call void %141(ptr noundef nonnull align 8 dereferenceable(24) %131)
  %142 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !43
  %144 = add nsw i64 %143, -1
  store i64 %144, ptr %142, align 8, !tbaa !43
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %131, align 8, !tbaa !41
  %148 = getelementptr inbounds ptr, ptr %147, i64 3
  %149 = load ptr, ptr %148, align 8
  call void %149(ptr noundef nonnull align 8 dereferenceable(24) %131)
  br label %150

150:                                              ; preds = %146, %138, %133, %127
  call void @_ZdlPv(ptr noundef nonnull %128) #21
  %151 = icmp eq ptr %129, %6
  br i1 %151, label %152, label %127

152:                                              ; preds = %150, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  ret void

153:                                              ; preds = %35
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %118
  %156 = phi { ptr, i32 } [ %119, %118 ], [ %154, %153 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %157 = load ptr, ptr %7, align 8, !tbaa !332
  %158 = icmp eq ptr %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef nonnull %157) #21
  br label %160

160:                                              ; preds = %159, %155, %45
  %161 = phi { ptr, i32 } [ %46, %45 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %162 unwind label %163

162:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  resume { ptr, i32 } %161

163:                                              ; preds = %117, %160, %108
  %164 = landingpad { ptr, i32 }
          catch ptr null
  %165 = extractvalue { ptr, i32 } %164, 0
  call void @__clang_call_terminate(ptr %165) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr noalias sret(%"class.std::vector.43") align 8 %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %18

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %2, i64 0, i32 1
  %9 = load ptr, ptr %7, align 8, !tbaa !325
  %10 = load ptr, ptr %8, align 8, !tbaa !325
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %11 = tail call noalias noundef nonnull dereferenceable(48) ptr @_Znwm(i64 noundef 48) #20
  store ptr %11, ptr %0, align 8, !tbaa !332
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.std::pair.69", ptr %11, i64 1
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %13, ptr %14, align 8, !tbaa !334
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %1, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  store ptr %9, ptr %15, align 8, !tbaa !325
  %16 = getelementptr inbounds %"struct.std::pair.69", ptr %11, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %2, i64 16, i1 false)
  %17 = getelementptr inbounds %"struct.std::pair.69", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %10, ptr %17, align 8, !tbaa !325
  store ptr %13, ptr %12, align 8, !tbaa !335
  br label %330

18:                                               ; preds = %4
  %19 = load i32, ptr %1, align 8
  %20 = getelementptr inbounds i8, ptr %1, i64 4
  %21 = load i32, ptr %20, align 4
  %22 = load i32, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %2, i64 4
  %24 = load i32, ptr %23, align 4
  %25 = icmp ne i32 %21, %24
  %26 = icmp ne i32 %19, %22
  %27 = select i1 %25, i1 true, i1 %26
  br i1 %27, label %28, label %128

28:                                               ; preds = %18
  %29 = getelementptr inbounds i8, ptr %1, i64 8
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds %"class.dealii::Triangulation", ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !46
  %33 = ptrtoint ptr %32 to i64
  %34 = getelementptr inbounds %"class.dealii::Triangulation", ptr %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %35

35:                                               ; preds = %123, %28
  %36 = phi i32 [ %19, %28 ], [ %86, %123 ]
  %37 = phi i32 [ %21, %28 ], [ %88, %123 ]
  %38 = phi i32 [ 0, %28 ], [ %124, %123 ]
  br label %39

39:                                               ; preds = %107, %35
  %40 = phi i32 [ %36, %35 ], [ %86, %107 ]
  %41 = phi i32 [ %36, %35 ], [ %87, %107 ]
  %42 = phi i32 [ %36, %35 ], [ %108, %107 ]
  %43 = phi i32 [ %37, %35 ], [ %88, %107 ]
  %44 = add nsw i32 %43, 1
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds ptr, ptr %32, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !33
  %48 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %47, i64 0, i32 4
  %49 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %47, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !48
  %51 = load ptr, ptr %48, align 8, !tbaa !50
  %52 = ptrtoint ptr %50 to i64
  %53 = ptrtoint ptr %51 to i64
  %54 = sub i64 %52, %53
  %55 = sdiv exact i64 %54, 24
  %56 = trunc i64 %55 to i32
  %57 = icmp slt i32 %44, %56
  br i1 %57, label %85, label %58

58:                                               ; preds = %39
  %59 = add nsw i64 %45, 1
  %60 = load ptr, ptr %34, align 8, !tbaa !51
  %61 = ptrtoint ptr %60 to i64
  %62 = sub i64 %61, %33
  %63 = shl i64 %62, 29
  %64 = ashr i64 %63, 32
  %65 = icmp slt i64 %59, %64
  br i1 %65, label %66, label %85

66:                                               ; preds = %58, %80
  %67 = phi i64 [ %81, %80 ], [ %59, %58 ]
  %68 = getelementptr inbounds ptr, ptr %32, i64 %67
  %69 = load ptr, ptr %68, align 8, !tbaa !33
  %70 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %69, i64 0, i32 4
  %71 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %69, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !48
  %73 = load ptr, ptr %70, align 8, !tbaa !50
  %74 = ptrtoint ptr %72 to i64
  %75 = ptrtoint ptr %73 to i64
  %76 = sub i64 %74, %75
  %77 = sdiv exact i64 %76, 24
  %78 = trunc i64 %77 to i32
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %66
  %81 = add i64 %67, 1
  %82 = icmp eq i64 %81, %64
  br i1 %82, label %85, label %66, !llvm.loop !52

83:                                               ; preds = %66
  %84 = trunc i64 %67 to i32
  br label %85

85:                                               ; preds = %80, %83, %58, %39
  %86 = phi i32 [ %40, %39 ], [ %84, %83 ], [ -1, %58 ], [ -1, %80 ]
  %87 = phi i32 [ %41, %39 ], [ %84, %83 ], [ -1, %58 ], [ -1, %80 ]
  %88 = phi i32 [ %44, %39 ], [ 0, %83 ], [ -1, %58 ], [ -1, %80 ]
  %89 = phi i32 [ %42, %39 ], [ %84, %83 ], [ -1, %58 ], [ -1, %80 ]
  %90 = or i32 %89, %88
  %91 = icmp sgt i32 %90, -1
  br i1 %91, label %92, label %109

92:                                               ; preds = %85
  %93 = zext i32 %89 to i64
  %94 = getelementptr inbounds ptr, ptr %32, i64 %93
  %95 = load ptr, ptr %94, align 8, !tbaa !33
  %96 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %95, i64 0, i32 4, i32 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !54
  %98 = lshr i32 %88, 6
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i64, ptr %97, i64 %99
  %101 = and i32 %88, 63
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 1, %102
  %104 = load i64, ptr %100, align 8, !tbaa !56
  %105 = and i64 %104, %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %92, %112
  %108 = phi i32 [ %89, %92 ], [ %87, %112 ]
  br label %39

109:                                              ; preds = %92, %85
  %110 = or i32 %88, %87
  %111 = icmp sgt i32 %110, -1
  br i1 %111, label %112, label %123

112:                                              ; preds = %109
  %113 = zext i32 %87 to i64
  %114 = getelementptr inbounds ptr, ptr %32, i64 %113
  %115 = load ptr, ptr %114, align 8, !tbaa !33
  %116 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %115, i64 0, i32 4, i32 0, i32 1
  %117 = shl i32 %88, 2
  %118 = zext i32 %117 to i64
  %119 = load ptr, ptr %116, align 8, !tbaa !57
  %120 = getelementptr inbounds i32, ptr %119, i64 %118
  %121 = load i32, ptr %120, align 4, !tbaa !59
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %123, label %107

123:                                              ; preds = %112, %109
  %124 = add i32 %38, 1
  %125 = icmp ne i32 %88, %24
  %126 = icmp ne i32 %86, %22
  %127 = select i1 %125, i1 true, i1 %126
  br i1 %127, label %35, label %128

128:                                              ; preds = %123, %18
  %129 = phi i32 [ 0, %18 ], [ %124, %123 ]
  %130 = udiv i32 %129, %3
  %131 = urem i32 %129, %3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %132 = icmp ne i32 %3, 0
  tail call void @llvm.assume(i1 %132)
  %133 = zext i32 %3 to i64
  %134 = mul nuw nsw i64 %133, 48
  %135 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %134) #20
  store ptr %135, ptr %0, align 8, !tbaa !332
  %136 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %135, ptr %136, align 8, !tbaa !335
  %137 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 %133
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > >, std::allocator<std::pair<dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > >, dealii::TriaActiveIterator<dealii::DoFCellAccessor<dealii::hp::DoFHandler<3, 3> > > > > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %137, ptr %138, align 8, !tbaa !334
  %139 = and i64 %133, 1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %128
  store i32 -2, ptr %135, align 8
  %142 = getelementptr inbounds i8, ptr %135, i64 4
  store i32 -2, ptr %142, align 4
  %143 = getelementptr inbounds i8, ptr %135, i64 8
  %144 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %143, i8 0, i64 16, i1 false)
  store i32 -2, ptr %144, align 8
  %145 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %145, align 4
  %146 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %147 = add nsw i64 %133, -1
  %148 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %146, i8 0, i64 16, i1 false)
  br label %149

149:                                              ; preds = %141, %128
  %150 = phi ptr [ undef, %128 ], [ %148, %141 ]
  %151 = phi ptr [ %135, %128 ], [ %148, %141 ]
  %152 = phi i64 [ %133, %128 ], [ %147, %141 ]
  %153 = icmp eq i32 %3, 1
  br i1 %153, label %171, label %154

154:                                              ; preds = %149, %154
  %155 = phi ptr [ %169, %154 ], [ %151, %149 ]
  %156 = phi i64 [ %168, %154 ], [ %152, %149 ]
  store i32 -2, ptr %155, align 8
  %157 = getelementptr inbounds i8, ptr %155, i64 4
  store i32 -2, ptr %157, align 4
  %158 = getelementptr inbounds i8, ptr %155, i64 8
  %159 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %158, i8 0, i64 16, i1 false)
  store i32 -2, ptr %159, align 8
  %160 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %160, align 4
  %161 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %162 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %161, i8 0, i64 16, i1 false)
  store i32 -2, ptr %162, align 8
  %163 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %163, align 4
  %164 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %165 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 1, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %164, i8 0, i64 16, i1 false)
  store i32 -2, ptr %165, align 8
  %166 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 -2, ptr %166, align 4
  %167 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %168 = add nsw i64 %156, -2
  %169 = getelementptr inbounds %"struct.std::pair.69", ptr %155, i64 2
  %170 = icmp eq i64 %168, 0
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %167, i8 0, i64 16, i1 false)
  br i1 %170, label %171, label %154

171:                                              ; preds = %154, %149
  %172 = phi ptr [ %150, %149 ], [ %169, %154 ]
  store ptr %172, ptr %136, align 8, !tbaa !335
  store i32 %19, ptr %135, align 8, !tbaa !60
  %173 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %135, i64 0, i32 1
  store i32 %21, ptr %173, align 4, !tbaa !61
  %174 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %1, i64 0, i32 2
  %175 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %135, i64 0, i32 2
  %176 = load <2 x ptr>, ptr %174, align 8, !tbaa !33
  store <2 x ptr> %176, ptr %175, align 8, !tbaa !33
  br i1 %132, label %177, label %330

177:                                              ; preds = %171
  %178 = add i32 %3, -1
  %179 = sext i32 %130 to i64
  %180 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %2, i64 0, i32 2
  %181 = zext i32 %131 to i64
  %182 = zext i32 %178 to i64
  %183 = zext i32 %3 to i64
  %184 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 %182, i32 1
  %185 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %184, i64 0, i32 2
  br label %186

186:                                              ; preds = %177, %327
  %187 = phi i64 [ 0, %177 ], [ %328, %327 ]
  %188 = icmp eq i64 %187, %182
  br i1 %188, label %323, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 %187
  %191 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 %187, i32 1
  %192 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %191, i64 0, i32 1
  %193 = load <2 x i32>, ptr %190, align 8, !tbaa !59
  store <2 x i32> %193, ptr %191, align 8, !tbaa !59
  %194 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %190, i64 0, i32 2
  %195 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %191, i64 0, i32 2
  %196 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %191, i64 0, i32 1
  %197 = load <2 x ptr>, ptr %194, align 8, !tbaa !33
  store <2 x ptr> %197, ptr %195, align 8, !tbaa !33
  invoke void @_ZSt9__advanceIN6dealii18TriaActiveIteratorINS0_15DoFCellAccessorINS0_2hp10DoFHandlerILi3ELi3EEEEEEElEvRT_T0_St26bidirectional_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %191, i64 noundef %179)
          to label %198 unwind label %312

198:                                              ; preds = %189
  %199 = icmp ult i64 %187, %181
  %200 = load i32, ptr %191, align 8, !tbaa !60
  %201 = load i32, ptr %192, align 4
  %202 = load ptr, ptr %195, align 8, !tbaa !62
  br i1 %199, label %203, label %314

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.dealii::Triangulation", ptr %202, i64 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !46
  %206 = ptrtoint ptr %205 to i64
  %207 = getelementptr inbounds %"class.dealii::Triangulation", ptr %202, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %208

208:                                              ; preds = %296, %203
  %209 = phi i32 [ %200, %203 ], [ %275, %296 ]
  %210 = phi i32 [ %200, %203 ], [ %276, %296 ]
  %211 = phi i32 [ %200, %203 ], [ %297, %296 ]
  %212 = phi i32 [ %201, %203 ], [ %277, %296 ]
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %211 to i64
  %215 = getelementptr inbounds ptr, ptr %205, i64 %214
  %216 = load ptr, ptr %215, align 8, !tbaa !33
  %217 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %216, i64 0, i32 4
  %218 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %216, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %219 = load ptr, ptr %218, align 8, !tbaa !48
  %220 = load ptr, ptr %217, align 8, !tbaa !50
  %221 = ptrtoint ptr %219 to i64
  %222 = ptrtoint ptr %220 to i64
  %223 = sub i64 %221, %222
  %224 = sdiv exact i64 %223, 24
  %225 = trunc i64 %224 to i32
  %226 = icmp slt i32 %213, %225
  br i1 %226, label %274, label %227

227:                                              ; preds = %208
  %228 = add nsw i64 %214, 1
  %229 = trunc i64 %228 to i32
  store i32 %229, ptr %191, align 8, !tbaa !60
  %230 = load ptr, ptr %207, align 8, !tbaa !51
  %231 = ptrtoint ptr %230 to i64
  %232 = sub i64 %231, %206
  %233 = shl i64 %232, 29
  %234 = ashr i64 %233, 32
  %235 = icmp slt i64 %228, %234
  br i1 %235, label %236, label %268

236:                                              ; preds = %227
  %237 = getelementptr inbounds ptr, ptr %205, i64 %228
  %238 = load ptr, ptr %237, align 8, !tbaa !33
  %239 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %238, i64 0, i32 4
  %240 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %238, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %241 = load ptr, ptr %240, align 8, !tbaa !48
  %242 = load ptr, ptr %239, align 8, !tbaa !50
  %243 = ptrtoint ptr %241 to i64
  %244 = ptrtoint ptr %242 to i64
  %245 = sub i64 %243, %244
  %246 = sdiv exact i64 %245, 24
  %247 = trunc i64 %246 to i32
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %270, label %262

249:                                              ; preds = %262
  %250 = getelementptr inbounds ptr, ptr %205, i64 %264
  %251 = load ptr, ptr %250, align 8, !tbaa !33
  %252 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %251, i64 0, i32 4
  %253 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %251, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %254 = load ptr, ptr %253, align 8, !tbaa !48
  %255 = load ptr, ptr %252, align 8, !tbaa !50
  %256 = ptrtoint ptr %254 to i64
  %257 = ptrtoint ptr %255 to i64
  %258 = sub i64 %256, %257
  %259 = sdiv exact i64 %258, 24
  %260 = trunc i64 %259 to i32
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %269, label %262, !llvm.loop !52

262:                                              ; preds = %236, %249
  %263 = phi i64 [ %264, %249 ], [ %228, %236 ]
  %264 = add i64 %263, 1
  %265 = trunc i64 %264 to i32
  %266 = icmp eq i64 %264, %234
  br i1 %266, label %267, label %249, !llvm.loop !52

267:                                              ; preds = %262
  store i32 %265, ptr %191, align 8, !tbaa !60
  br label %268

268:                                              ; preds = %267, %227
  store i32 -1, ptr %191, align 8, !tbaa !60
  br label %274

269:                                              ; preds = %249
  store i32 %265, ptr %191, align 8, !tbaa !60
  br label %270

270:                                              ; preds = %269, %236
  %271 = phi i32 [ %229, %236 ], [ %265, %269 ]
  %272 = phi i64 [ %228, %236 ], [ %264, %269 ]
  %273 = trunc i64 %272 to i32
  br label %274

274:                                              ; preds = %270, %268, %208
  %275 = phi i32 [ %209, %208 ], [ -1, %268 ], [ %271, %270 ]
  %276 = phi i32 [ %210, %208 ], [ -1, %268 ], [ %273, %270 ]
  %277 = phi i32 [ %213, %208 ], [ -1, %268 ], [ 0, %270 ]
  %278 = phi i32 [ %211, %208 ], [ -1, %268 ], [ %273, %270 ]
  %279 = or i32 %278, %277
  %280 = icmp sgt i32 %279, -1
  br i1 %280, label %281, label %298

281:                                              ; preds = %274
  %282 = zext i32 %278 to i64
  %283 = getelementptr inbounds ptr, ptr %205, i64 %282
  %284 = load ptr, ptr %283, align 8, !tbaa !33
  %285 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %284, i64 0, i32 4, i32 0, i32 3
  %286 = load ptr, ptr %285, align 8, !tbaa !54
  %287 = lshr i32 %277, 6
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds i64, ptr %286, i64 %288
  %290 = and i32 %277, 63
  %291 = zext i32 %290 to i64
  %292 = shl nuw i64 1, %291
  %293 = load i64, ptr %289, align 8, !tbaa !56
  %294 = and i64 %293, %292
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %281, %301
  %297 = phi i32 [ %278, %281 ], [ %276, %301 ]
  br label %208

298:                                              ; preds = %281, %274
  store i32 %277, ptr %192, align 4, !tbaa !61
  %299 = or i32 %277, %276
  %300 = icmp sgt i32 %299, -1
  br i1 %300, label %301, label %314

301:                                              ; preds = %298
  %302 = zext i32 %276 to i64
  %303 = getelementptr inbounds ptr, ptr %205, i64 %302
  %304 = load ptr, ptr %303, align 8, !tbaa !33
  %305 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %304, i64 0, i32 4, i32 0, i32 1
  %306 = shl i32 %277, 2
  %307 = zext i32 %306 to i64
  %308 = load ptr, ptr %305, align 8, !tbaa !57
  %309 = getelementptr inbounds i32, ptr %308, i64 %307
  %310 = load i32, ptr %309, align 4, !tbaa !59
  %311 = icmp eq i32 %310, -1
  br i1 %311, label %314, label %296

312:                                              ; preds = %189
  %313 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %135) #21
  resume { ptr, i32 } %313

314:                                              ; preds = %301, %298, %198
  %315 = phi i32 [ %201, %198 ], [ %277, %298 ], [ %277, %301 ]
  %316 = phi i32 [ %200, %198 ], [ %275, %298 ], [ %275, %301 ]
  %317 = add nuw nsw i64 %187, 1
  %318 = getelementptr inbounds %"struct.std::pair.69", ptr %135, i64 %317
  store i32 %316, ptr %318, align 8, !tbaa !60
  %319 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %318, i64 0, i32 1
  store i32 %315, ptr %319, align 4, !tbaa !61
  %320 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %318, i64 0, i32 2
  store ptr %202, ptr %320, align 8, !tbaa !62
  %321 = load ptr, ptr %196, align 8, !tbaa !325
  %322 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %318, i64 0, i32 1
  store ptr %321, ptr %322, align 8, !tbaa !325
  br label %327

323:                                              ; preds = %186
  %324 = load <2 x i32>, ptr %2, align 8, !tbaa !59
  store <2 x i32> %324, ptr %184, align 8, !tbaa !59
  %325 = load <2 x ptr>, ptr %180, align 8, !tbaa !33
  store <2 x ptr> %325, ptr %185, align 8, !tbaa !33
  %326 = add nuw nsw i64 %187, 1
  br label %327

327:                                              ; preds = %323, %314
  %328 = phi i64 [ %326, %323 ], [ %317, %314 ]
  %329 = icmp eq i64 %328, %183
  br i1 %329, label %330, label %186

330:                                              ; preds = %327, %171, %6
  ret void
}

declare void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr sret(%"class.dealii::TriaActiveIterator.48") align 8, ptr noundef nonnull align 8 dereferenceable(224), i32 noundef) local_unnamed_addr #2

declare void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr sret(%"class.dealii::TriaRawIterator.50") align 8, ptr noundef nonnull align 8 dereferenceable(224)) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 1 %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 1 dereferenceable(1) %6) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca %"class.dealii::hp::FEValues", align 8
  %11 = alloca %"class.dealii::FullMatrix", align 8
  %12 = alloca %"class.std::vector.92", align 8
  %13 = alloca %"class.std::vector.258", align 8
  %14 = alloca %"class.std::vector.28", align 8
  %15 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %16 = alloca %"class.dealii::Vector", align 8
  %17 = icmp eq ptr %4, null
  %18 = select i1 %17, i32 33, i32 49
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %10) #19
  %19 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !336
  call void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %10, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(96) %20, ptr noundef nonnull align 8 dereferenceable(96) %2, i32 noundef %18)
  %21 = load ptr, ptr %19, align 8, !tbaa !336
  %22 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !338
  %24 = load ptr, ptr %23, align 8, !tbaa !340
  %25 = getelementptr inbounds i8, ptr %24, i64 116
  %26 = load i32, ptr %25, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %11, i32 noundef 0)
          to label %27 unwind label %502

27:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %15) #19
  %28 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %5, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %15, i64 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !325
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %15, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, ptr %32, align 4, !tbaa !61
  %35 = load i32, ptr %33, align 4, !tbaa !61
  %36 = icmp ne i32 %34, %35
  %37 = load i32, ptr %15, align 8
  %38 = load i32, ptr %31, align 8
  %39 = icmp ne i32 %37, %38
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  br label %1302

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4
  %44 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 1
  %45 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %46 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4, i32 0, i32 0, i64 1
  %47 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %48 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4, i32 0, i32 0, i64 2
  %49 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3
  %50 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3, i32 0, i32 0, i64 1
  %51 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 2
  %52 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 1
  %55 = icmp eq i32 %26, 0
  %56 = zext i32 %26 to i64
  %57 = shl nuw nsw i64 %56, 3
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 2
  %60 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %62 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %63 = icmp eq i32 %26, 1
  %64 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %66 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %15, i64 0, i32 2
  br label %67

67:                                               ; preds = %42, %1292
  invoke void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240) %10, ptr noundef nonnull align 8 dereferenceable(24) %15, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %68 unwind label %504

68:                                               ; preds = %67
  %69 = load ptr, ptr %44, align 8, !tbaa !342
  %70 = load i32, ptr %43, align 8, !tbaa !59
  %71 = load i32, ptr %45, align 8, !tbaa !59
  %72 = mul i32 %71, %70
  %73 = load i32, ptr %46, align 4, !tbaa !59
  %74 = add i32 %72, %73
  %75 = load i32, ptr %47, align 4, !tbaa !59
  %76 = mul i32 %74, %75
  %77 = load i32, ptr %48, align 8, !tbaa !59
  %78 = add i32 %76, %77
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %69, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !346
  %82 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 3
  %83 = load i32, ptr %82, align 8, !tbaa !65
  %84 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !127
  %86 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 6
  %87 = load ptr, ptr %86, align 8, !tbaa !63
  %88 = zext i32 %83 to i64
  %89 = shl nuw i64 %88, 32
  %90 = or i64 %89, %88
  store i64 %90, ptr %49, align 4
  %91 = mul i32 %83, %83
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %68
  %94 = load ptr, ptr %52, align 8, !tbaa !140
  %95 = icmp eq ptr %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZdaPv(ptr noundef nonnull %94) #21
  br label %97

97:                                               ; preds = %96, %93
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %52, i8 0, i64 20, i1 false)
  br label %120

98:                                               ; preds = %68
  %99 = load i32, ptr %51, align 8, !tbaa !348
  %100 = icmp ult i32 %99, %91
  %101 = load ptr, ptr %52, align 8, !tbaa !140
  br i1 %100, label %102, label %115

102:                                              ; preds = %98
  %103 = icmp eq ptr %101, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  call void @_ZdaPv(ptr noundef nonnull %101) #21
  %105 = load i32, ptr %49, align 4, !tbaa !59
  %106 = load i32, ptr %50, align 8, !tbaa !59
  %107 = mul i32 %106, %105
  br label %108

108:                                              ; preds = %104, %102
  %109 = phi i32 [ %107, %104 ], [ %91, %102 ]
  store i32 %91, ptr %51, align 8, !tbaa !348
  %110 = zext i32 %91 to i64
  %111 = shl nuw nsw i64 %110, 3
  %112 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %111) #20
          to label %113 unwind label %506

113:                                              ; preds = %108
  store ptr %112, ptr %52, align 8, !tbaa !140
  %114 = icmp eq i32 %109, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %113, %98
  %116 = phi ptr [ %112, %113 ], [ %101, %98 ]
  %117 = phi i32 [ %109, %113 ], [ %91, %98 ]
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 3
  call void @llvm.memset.p0.i64(ptr align 8 %116, i8 0, i64 %119, i1 false), !tbaa !133
  br label %120

120:                                              ; preds = %115, %113, %97
  %121 = zext i32 %85 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store double 0.000000e+00, ptr %9, align 8, !tbaa !133
  %122 = load ptr, ptr %53, align 8, !tbaa !33
  %123 = load ptr, ptr %12, align 8, !tbaa !131
  %124 = ptrtoint ptr %122 to i64
  %125 = ptrtoint ptr %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %127, %121
  br i1 %128, label %129, label %131

129:                                              ; preds = %120
  %130 = sub nsw i64 %121, %127
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr %122, i64 noundef %130, ptr noundef nonnull align 8 dereferenceable(8) %9)
          to label %137 unwind label %506

131:                                              ; preds = %120
  %132 = icmp ugt i64 %127, %121
  br i1 %132, label %133, label %137

133:                                              ; preds = %131
  %134 = getelementptr inbounds double, ptr %123, i64 %121
  %135 = icmp eq ptr %122, %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  store ptr %134, ptr %53, align 8, !tbaa !135
  br label %137

137:                                              ; preds = %136, %133, %131, %129
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %138 unwind label %506

138:                                              ; preds = %137
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %54, i8 0, i64 16, i1 false)
  br i1 %55, label %147, label %139

139:                                              ; preds = %138
  %140 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %57) #20
          to label %141 unwind label %142

141:                                              ; preds = %139
  store ptr %140, ptr %58, align 8, !tbaa !136
  store i32 %26, ptr %59, align 4, !tbaa !138
  store i32 %26, ptr %54, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %140, i8 0, i64 %57, i1 false), !tbaa !133
  br label %147

142:                                              ; preds = %139
  %143 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %1346 unwind label %144

144:                                              ; preds = %142
  %145 = landingpad { ptr, i32 }
          catch ptr null
  %146 = extractvalue { ptr, i32 } %145, 0
  call void @__clang_call_terminate(ptr %146) #22
  unreachable

147:                                              ; preds = %141, %138
  %148 = load ptr, ptr %60, align 8, !tbaa !33
  %149 = load ptr, ptr %13, align 8, !tbaa !224
  %150 = ptrtoint ptr %148 to i64
  %151 = ptrtoint ptr %149 to i64
  %152 = sub i64 %150, %151
  %153 = sdiv exact i64 %152, 88
  %154 = icmp ult i64 %153, %121
  br i1 %154, label %155, label %157

155:                                              ; preds = %147
  %156 = sub nsw i64 %121, %153
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %13, ptr %148, i64 noundef %156, ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %170 unwind label %510

157:                                              ; preds = %147
  %158 = icmp ugt i64 %153, %121
  br i1 %158, label %159, label %170

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.dealii::Vector", ptr %149, i64 %121
  %161 = icmp eq ptr %148, %160
  br i1 %161, label %170, label %162

162:                                              ; preds = %159, %166
  %163 = phi ptr [ %167, %166 ], [ %160, %159 ]
  %164 = load ptr, ptr %163, align 8, !tbaa !41
  %165 = load ptr, ptr %164, align 8
  invoke void %165(ptr noundef nonnull align 8 dereferenceable(88) %163)
          to label %166 unwind label %508

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.dealii::Vector", ptr %163, i64 1
  %168 = icmp eq ptr %167, %148
  br i1 %168, label %169, label %162

169:                                              ; preds = %166
  store ptr %160, ptr %60, align 8, !tbaa !226
  br label %170

170:                                              ; preds = %169, %159, %157, %155
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %171 = load ptr, ptr %58, align 8, !tbaa !136
  %172 = icmp eq ptr %171, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  call void @_ZdaPv(ptr noundef nonnull %171) #21
  store ptr null, ptr %58, align 8, !tbaa !136
  br label %174

174:                                              ; preds = %173, %170
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %175 unwind label %506

175:                                              ; preds = %174
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 0, ptr %8, align 4, !tbaa !59
  %176 = load ptr, ptr %61, align 8, !tbaa !33
  %177 = load ptr, ptr %14, align 8, !tbaa !144
  %178 = ptrtoint ptr %176 to i64
  %179 = ptrtoint ptr %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 2
  %182 = icmp ult i64 %181, %88
  br i1 %182, label %183, label %185

183:                                              ; preds = %175
  %184 = sub nsw i64 %88, %181
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %14, ptr %176, i64 noundef %184, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %191 unwind label %506

185:                                              ; preds = %175
  %186 = icmp ugt i64 %181, %88
  br i1 %186, label %187, label %191

187:                                              ; preds = %185
  %188 = getelementptr inbounds i32, ptr %177, i64 %88
  %189 = icmp eq ptr %176, %188
  br i1 %189, label %191, label %190

190:                                              ; preds = %187
  store ptr %188, ptr %61, align 8, !tbaa !349
  br label %191

191:                                              ; preds = %190, %187, %185, %183
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  %192 = load i32, ptr %49, align 4, !tbaa !59
  %193 = load i32, ptr %50, align 8, !tbaa !59
  %194 = mul i32 %193, %192
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %191
  %197 = load ptr, ptr %52, align 8, !tbaa !140
  %198 = zext i32 %194 to i64
  %199 = shl nuw nsw i64 %198, 3
  call void @llvm.memset.p0.i64(ptr align 8 %197, i8 0, i64 %199, i1 false), !tbaa !133
  br label %200

200:                                              ; preds = %191, %196
  %201 = load ptr, ptr %30, align 8, !tbaa !325
  %202 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %201, i64 0, i32 4
  %203 = load i32, ptr %15, align 8, !tbaa !60
  %204 = sext i32 %203 to i64
  %205 = load ptr, ptr %202, align 8, !tbaa !350
  %206 = getelementptr inbounds ptr, ptr %205, i64 %204
  %207 = load ptr, ptr %206, align 8, !tbaa !33
  %208 = load i32, ptr %32, align 4, !tbaa !61
  %209 = sext i32 %208 to i64
  %210 = load ptr, ptr %207, align 8, !tbaa !144
  %211 = getelementptr inbounds i32, ptr %210, i64 %209
  %212 = load i32, ptr %211, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %15, ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef %212)
          to label %213 unwind label %506

213:                                              ; preds = %200
  br i1 %17, label %214, label %239

214:                                              ; preds = %213
  %215 = icmp eq i32 %85, 0
  br i1 %215, label %1091, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds i8, ptr %81, i64 216
  %218 = load ptr, ptr %217, align 8, !tbaa !131
  %219 = icmp eq i32 %83, 0
  %220 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %221 = getelementptr inbounds i8, ptr %81, i64 144
  %222 = getelementptr inbounds i8, ptr %81, i64 160
  %223 = getelementptr inbounds i8, ptr %81, i64 480
  %224 = add nsw i64 %88, -1
  %225 = shl nuw nsw i64 %88, 3
  %226 = icmp ult i32 %83, 16
  %227 = trunc i64 %224 to i32
  %228 = icmp ugt i64 %224, 4294967295
  %229 = trunc i64 %224 to i32
  %230 = and i64 %88, 4294967288
  %231 = icmp eq i64 %230, %88
  %232 = and i64 %88, 1
  %233 = icmp eq i64 %232, 0
  %234 = sub nsw i64 0, %88
  %235 = and i64 %88, 1
  %236 = icmp eq i64 %224, 0
  %237 = and i64 %88, 4294967294
  %238 = icmp eq i64 %235, 0
  br label %799

239:                                              ; preds = %213
  %240 = load i32, ptr %62, align 8, !tbaa !145
  %241 = icmp eq i32 %240, 1
  %242 = getelementptr inbounds i8, ptr %81, i64 312
  %243 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %241, label %244, label %514

244:                                              ; preds = %239
  %245 = getelementptr inbounds ptr, ptr %243, i64 6
  %246 = load ptr, ptr %245, align 8
  invoke void %246(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %12, i32 noundef 0)
          to label %247 unwind label %506

247:                                              ; preds = %244
  %248 = icmp eq i32 %85, 0
  br i1 %248, label %1091, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds i8, ptr %81, i64 216
  %251 = load ptr, ptr %250, align 8, !tbaa !131
  %252 = icmp eq i32 %83, 0
  %253 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %254 = getelementptr inbounds i8, ptr %81, i64 144
  %255 = getelementptr inbounds i8, ptr %81, i64 160
  %256 = getelementptr inbounds i8, ptr %81, i64 480
  br i1 %252, label %1180, label %257

257:                                              ; preds = %249
  %258 = add nsw i64 %88, -1
  %259 = shl nuw nsw i64 %88, 3
  %260 = icmp ult i32 %83, 16
  %261 = trunc i64 %258 to i32
  %262 = icmp ugt i64 %258, 4294967295
  %263 = trunc i64 %258 to i32
  %264 = and i64 %88, 4294967292
  %265 = icmp eq i64 %264, %88
  br label %266

266:                                              ; preds = %257, %348
  %267 = phi i64 [ %349, %348 ], [ 0, %257 ]
  %268 = shl nuw nsw i64 %267, 3
  %269 = add nuw i64 %259, %268
  %270 = add nuw i64 %268, 8
  %271 = trunc i64 %267 to i32
  %272 = getelementptr inbounds double, ptr %251, i64 %267
  %273 = load double, ptr %272, align 8, !tbaa !133
  br i1 %63, label %351, label %344

274:                                              ; preds = %332
  %275 = add nuw nsw i64 %336, 1
  %276 = icmp eq i64 %275, %88
  br i1 %276, label %348, label %335

277:                                              ; preds = %335, %332
  %278 = phi i64 [ 0, %335 ], [ %333, %332 ]
  %279 = load i64, ptr %343, align 4
  %280 = getelementptr inbounds %"struct.std::pair.263", ptr %345, i64 %278
  %281 = load i64, ptr %280, align 4
  %282 = trunc i64 %279 to i32
  %283 = trunc i64 %281 to i32
  %284 = icmp eq i32 %282, %283
  br i1 %284, label %285, label %332

285:                                              ; preds = %277
  %286 = load ptr, ptr %86, align 8, !tbaa !63
  %287 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %286, i64 0, i32 2
  %288 = load i8, ptr %287, align 4, !tbaa !148, !range !182, !noundef !183
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %298, label %290

290:                                              ; preds = %285
  %291 = load ptr, ptr %254, align 8, !tbaa !140
  %292 = load i32, ptr %255, align 8, !tbaa !59
  %293 = mul i32 %292, %341
  %294 = add i32 %293, %346
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds double, ptr %291, i64 %295
  %297 = trunc i64 %278 to i32
  br label %311

298:                                              ; preds = %285
  %299 = load ptr, ptr %256, align 8, !tbaa !144
  %300 = getelementptr inbounds i32, ptr %299, i64 %336
  %301 = load i32, ptr %300, align 4, !tbaa !59
  %302 = load ptr, ptr %254, align 8, !tbaa !140
  %303 = load i32, ptr %255, align 8, !tbaa !59
  %304 = mul i32 %303, %301
  %305 = add i32 %304, %347
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds double, ptr %302, i64 %306
  %308 = getelementptr inbounds i32, ptr %299, i64 %278
  %309 = load i32, ptr %308, align 4, !tbaa !59
  %310 = trunc i64 %278 to i32
  br label %311

311:                                              ; preds = %298, %290
  %312 = phi i32 [ %310, %298 ], [ %297, %290 ]
  %313 = phi i32 [ %347, %298 ], [ %346, %290 ]
  %314 = phi ptr [ %307, %298 ], [ %296, %290 ]
  %315 = phi i32 [ %303, %298 ], [ %292, %290 ]
  %316 = phi ptr [ %302, %298 ], [ %291, %290 ]
  %317 = phi i32 [ %309, %298 ], [ %297, %290 ]
  %318 = load double, ptr %314, align 8, !tbaa !133
  %319 = mul i32 %317, %315
  %320 = add i32 %319, %313
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds double, ptr %316, i64 %321
  %323 = load double, ptr %322, align 8, !tbaa !133
  %324 = fmul double %318, %323
  %325 = fmul double %273, %324
  %326 = load double, ptr %338, align 8, !tbaa !133
  %327 = add i32 %342, %312
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds double, ptr %339, i64 %328
  %330 = load double, ptr %329, align 8, !tbaa !133
  %331 = call double @llvm.fmuladd.f64(double %325, double %326, double %330)
  store double %331, ptr %329, align 8, !tbaa !133
  br label %332

332:                                              ; preds = %311, %277
  %333 = add nuw nsw i64 %278, 1
  %334 = icmp eq i64 %333, %88
  br i1 %334, label %274, label %277

335:                                              ; preds = %344, %274
  %336 = phi i64 [ 0, %344 ], [ %275, %274 ]
  %337 = load ptr, ptr %12, align 8
  %338 = getelementptr inbounds double, ptr %337, i64 %267
  %339 = load ptr, ptr %52, align 8
  %340 = load i32, ptr %50, align 8
  %341 = trunc i64 %336 to i32
  %342 = mul i32 %340, %341
  %343 = getelementptr inbounds %"struct.std::pair.263", ptr %345, i64 %336
  br label %277

344:                                              ; preds = %266
  %345 = load ptr, ptr %253, align 8, !tbaa !184
  %346 = trunc i64 %267 to i32
  %347 = trunc i64 %267 to i32
  br label %335

348:                                              ; preds = %274, %443, %499
  %349 = add nuw nsw i64 %267, 1
  %350 = icmp eq i64 %349, %121
  br i1 %350, label %1091, label %266

351:                                              ; preds = %266
  %352 = load ptr, ptr %86, align 8, !tbaa !63
  %353 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %352, i64 0, i32 2
  %354 = load i8, ptr %353, align 4, !tbaa !148, !range !182, !noundef !183
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %459, label %446

356:                                              ; preds = %446, %443
  %357 = phi i64 [ 0, %446 ], [ %444, %443 ]
  %358 = mul i64 %357, %452
  %359 = add i64 %267, %358
  %360 = shl i64 %359, 3
  %361 = and i64 %360, 34359738360
  %362 = getelementptr i8, ptr %447, i64 %361
  %363 = getelementptr i8, ptr %453, i64 %361
  %364 = load ptr, ptr %12, align 8
  %365 = getelementptr double, ptr %364, i64 %267
  %366 = load ptr, ptr %52, align 8
  %367 = load i32, ptr %50, align 8
  %368 = trunc i64 %357 to i32
  %369 = mul i32 %367, %368
  %370 = mul i32 %448, %368
  %371 = add i32 %370, %449
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds double, ptr %447, i64 %372
  br i1 %260, label %422, label %374

374:                                              ; preds = %356
  %375 = xor i32 %369, -1
  %376 = icmp ult i32 %375, %261
  %377 = or i1 %376, %262
  %378 = or i1 %454, %377
  %379 = or i1 %456, %378
  br i1 %379, label %422, label %380

380:                                              ; preds = %374
  %381 = zext i32 %369 to i64
  %382 = shl nuw nsw i64 %381, 3
  %383 = getelementptr i8, ptr %366, i64 %382
  %384 = getelementptr i8, ptr %366, i64 %259
  %385 = getelementptr i8, ptr %384, i64 %382
  %386 = getelementptr i8, ptr %364, i64 %270
  %387 = icmp ult ptr %450, %385
  %388 = icmp ult ptr %383, %451
  %389 = and i1 %387, %388
  %390 = icmp ult ptr %362, %385
  %391 = icmp ult ptr %383, %363
  %392 = and i1 %390, %391
  %393 = or i1 %389, %392
  %394 = icmp ult ptr %365, %385
  %395 = icmp ult ptr %383, %386
  %396 = and i1 %394, %395
  %397 = or i1 %393, %396
  br i1 %397, label %422, label %398

398:                                              ; preds = %380
  %399 = load double, ptr %373, align 8, !tbaa !133, !alias.scope !352, !noalias !355
  %400 = insertelement <4 x double> poison, double %399, i64 0
  %401 = shufflevector <4 x double> %400, <4 x double> poison, <4 x i32> zeroinitializer
  %402 = load double, ptr %365, align 8, !tbaa !133, !alias.scope !357, !noalias !355
  %403 = insertelement <4 x double> poison, double %402, i64 0
  %404 = shufflevector <4 x double> %403, <4 x double> poison, <4 x i32> zeroinitializer
  br label %405

405:                                              ; preds = %405, %398
  %406 = phi i64 [ 0, %398 ], [ %419, %405 ]
  %407 = trunc i64 %406 to i32
  %408 = add i64 %406, %267
  %409 = and i64 %408, 4294967295
  %410 = getelementptr inbounds double, ptr %447, i64 %409
  %411 = load <4 x double>, ptr %410, align 8, !tbaa !133, !alias.scope !359, !noalias !355
  %412 = fmul <4 x double> %401, %411
  %413 = fmul <4 x double> %458, %412
  %414 = add i32 %369, %407
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds double, ptr %366, i64 %415
  %417 = load <4 x double>, ptr %416, align 8, !tbaa !133, !alias.scope !355
  %418 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %413, <4 x double> %404, <4 x double> %417)
  store <4 x double> %418, ptr %416, align 8, !tbaa !133, !alias.scope !355
  %419 = add nuw i64 %406, 4
  %420 = icmp eq i64 %419, %264
  br i1 %420, label %421, label %405, !llvm.loop !361

421:                                              ; preds = %405
  br i1 %265, label %443, label %422

422:                                              ; preds = %380, %374, %356, %421
  %423 = phi i64 [ 0, %380 ], [ 0, %374 ], [ 0, %356 ], [ %264, %421 ]
  br label %424

424:                                              ; preds = %422, %424
  %425 = phi i64 [ %441, %424 ], [ %423, %422 ]
  %426 = load double, ptr %373, align 8, !tbaa !133
  %427 = trunc i64 %425 to i32
  %428 = mul i32 %448, %427
  %429 = add i32 %428, %449
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds double, ptr %447, i64 %430
  %432 = load double, ptr %431, align 8, !tbaa !133
  %433 = fmul double %426, %432
  %434 = fmul double %273, %433
  %435 = load double, ptr %365, align 8, !tbaa !133
  %436 = add i32 %369, %427
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds double, ptr %366, i64 %437
  %439 = load double, ptr %438, align 8, !tbaa !133
  %440 = call double @llvm.fmuladd.f64(double %434, double %435, double %439)
  store double %440, ptr %438, align 8, !tbaa !133
  %441 = add nuw nsw i64 %425, 1
  %442 = icmp eq i64 %441, %88
  br i1 %442, label %443, label %424, !llvm.loop !362

443:                                              ; preds = %424, %421
  %444 = add nuw nsw i64 %357, 1
  %445 = icmp eq i64 %444, %88
  br i1 %445, label %348, label %356

446:                                              ; preds = %351
  %447 = load ptr, ptr %254, align 8, !tbaa !140
  %448 = load i32, ptr %255, align 8, !tbaa !59
  %449 = trunc i64 %267 to i32
  %450 = getelementptr i8, ptr %447, i64 %268
  %451 = getelementptr i8, ptr %447, i64 %269
  %452 = zext i32 %448 to i64
  %453 = getelementptr i8, ptr %447, i64 8
  %454 = icmp ne i32 %448, 1
  %455 = xor i32 %271, -1
  %456 = icmp ult i32 %455, %263
  %457 = insertelement <4 x double> poison, double %273, i64 0
  %458 = shufflevector <4 x double> %457, <4 x double> poison, <4 x i32> zeroinitializer
  br label %356

459:                                              ; preds = %351
  %460 = load ptr, ptr %256, align 8, !tbaa !144
  %461 = load ptr, ptr %254, align 8, !tbaa !140
  %462 = load i32, ptr %255, align 8, !tbaa !59
  %463 = trunc i64 %267 to i32
  br label %464

464:                                              ; preds = %499, %459
  %465 = phi i64 [ %500, %499 ], [ 0, %459 ]
  %466 = load ptr, ptr %12, align 8
  %467 = getelementptr inbounds double, ptr %466, i64 %267
  %468 = load ptr, ptr %52, align 8
  %469 = load i32, ptr %50, align 8
  %470 = trunc i64 %465 to i32
  %471 = mul i32 %469, %470
  %472 = getelementptr inbounds i32, ptr %460, i64 %465
  %473 = load i32, ptr %472, align 4, !tbaa !59
  %474 = mul i32 %462, %473
  %475 = add i32 %474, %463
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds double, ptr %461, i64 %476
  br label %478

478:                                              ; preds = %478, %464
  %479 = phi i64 [ %497, %478 ], [ 0, %464 ]
  %480 = getelementptr inbounds i32, ptr %460, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !59
  %482 = load double, ptr %477, align 8, !tbaa !133
  %483 = mul i32 %481, %462
  %484 = add i32 %483, %463
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds double, ptr %461, i64 %485
  %487 = load double, ptr %486, align 8, !tbaa !133
  %488 = fmul double %482, %487
  %489 = fmul double %273, %488
  %490 = load double, ptr %467, align 8, !tbaa !133
  %491 = trunc i64 %479 to i32
  %492 = add i32 %471, %491
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds double, ptr %468, i64 %493
  %495 = load double, ptr %494, align 8, !tbaa !133
  %496 = call double @llvm.fmuladd.f64(double %489, double %490, double %495)
  store double %496, ptr %494, align 8, !tbaa !133
  %497 = add nuw nsw i64 %479, 1
  %498 = icmp eq i64 %497, %88
  br i1 %498, label %499, label %478

499:                                              ; preds = %478
  %500 = add nuw nsw i64 %465, 1
  %501 = icmp eq i64 %500, %88
  br i1 %501, label %348, label %464

502:                                              ; preds = %1333, %7
  %503 = landingpad { ptr, i32 }
          cleanup
  br label %1386

504:                                              ; preds = %67
  %505 = landingpad { ptr, i32 }
          cleanup
  br label %1346

506:                                              ; preds = %200, %183, %174, %137, %129, %108, %514, %244
  %507 = landingpad { ptr, i32 }
          cleanup
  br label %1346

508:                                              ; preds = %162
  %509 = landingpad { ptr, i32 }
          cleanup
  br label %512

510:                                              ; preds = %155
  %511 = landingpad { ptr, i32 }
          cleanup
  br label %512

512:                                              ; preds = %510, %508
  %513 = phi { ptr, i32 } [ %509, %508 ], [ %511, %510 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %1346 unwind label %1398

514:                                              ; preds = %239
  %515 = getelementptr inbounds ptr, ptr %243, i64 7
  %516 = load ptr, ptr %515, align 8
  invoke void %516(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %13)
          to label %517 unwind label %506

517:                                              ; preds = %514
  %518 = icmp eq i32 %85, 0
  br i1 %518, label %1091, label %519

519:                                              ; preds = %517
  %520 = getelementptr inbounds i8, ptr %81, i64 216
  %521 = load ptr, ptr %520, align 8, !tbaa !131
  %522 = icmp eq i32 %83, 0
  %523 = getelementptr inbounds i8, ptr %81, i64 144
  %524 = getelementptr inbounds i8, ptr %81, i64 160
  %525 = getelementptr inbounds i8, ptr %81, i64 480
  br i1 %522, label %1180, label %526

526:                                              ; preds = %519
  %527 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %528 = load ptr, ptr %527, align 8, !tbaa !184
  br i1 %63, label %529, label %717

529:                                              ; preds = %526
  %530 = load ptr, ptr %86, align 8, !tbaa !63
  %531 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %530, i64 0, i32 2
  %532 = load i8, ptr %531, align 4, !tbaa !148, !range !182, !noundef !183
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %534, label %589

534:                                              ; preds = %529
  %535 = load ptr, ptr %525, align 8, !tbaa !144
  %536 = load ptr, ptr %523, align 8, !tbaa !140
  %537 = load i32, ptr %524, align 8, !tbaa !59
  br label %538

538:                                              ; preds = %586, %534
  %539 = phi i64 [ %587, %586 ], [ 0, %534 ]
  %540 = getelementptr inbounds double, ptr %521, i64 %539
  %541 = load double, ptr %540, align 8, !tbaa !133
  %542 = trunc i64 %539 to i32
  br label %543

543:                                              ; preds = %583, %538
  %544 = phi i64 [ %584, %583 ], [ 0, %538 ]
  %545 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %544
  %546 = load i64, ptr %545, align 4
  %547 = load ptr, ptr %13, align 8
  %548 = getelementptr inbounds %"class.dealii::Vector", ptr %547, i64 %539, i32 3
  %549 = and i64 %546, 4294967295
  %550 = load ptr, ptr %52, align 8
  %551 = load i32, ptr %50, align 8
  %552 = trunc i64 %544 to i32
  %553 = mul i32 %551, %552
  %554 = load ptr, ptr %548, align 8, !tbaa !136
  %555 = getelementptr inbounds double, ptr %554, i64 %549
  %556 = getelementptr inbounds i32, ptr %535, i64 %544
  %557 = load i32, ptr %556, align 4, !tbaa !59
  %558 = mul i32 %537, %557
  %559 = add i32 %558, %542
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds double, ptr %536, i64 %560
  br label %562

562:                                              ; preds = %562, %543
  %563 = phi i64 [ %581, %562 ], [ 0, %543 ]
  %564 = getelementptr inbounds i32, ptr %535, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !59
  %566 = load double, ptr %561, align 8, !tbaa !133
  %567 = mul i32 %565, %537
  %568 = add i32 %567, %542
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds double, ptr %536, i64 %569
  %571 = load double, ptr %570, align 8, !tbaa !133
  %572 = fmul double %566, %571
  %573 = fmul double %541, %572
  %574 = load double, ptr %555, align 8, !tbaa !133
  %575 = trunc i64 %563 to i32
  %576 = add i32 %553, %575
  %577 = zext i32 %576 to i64
  %578 = getelementptr inbounds double, ptr %550, i64 %577
  %579 = load double, ptr %578, align 8, !tbaa !133
  %580 = call double @llvm.fmuladd.f64(double %573, double %574, double %579)
  store double %580, ptr %578, align 8, !tbaa !133
  %581 = add nuw nsw i64 %563, 1
  %582 = icmp eq i64 %581, %88
  br i1 %582, label %583, label %562

583:                                              ; preds = %562
  %584 = add nuw nsw i64 %544, 1
  %585 = icmp eq i64 %584, %88
  br i1 %585, label %586, label %543

586:                                              ; preds = %583
  %587 = add nuw nsw i64 %539, 1
  %588 = icmp eq i64 %587, %121
  br i1 %588, label %1091, label %538

589:                                              ; preds = %529
  %590 = load ptr, ptr %523, align 8, !tbaa !140
  %591 = load i32, ptr %524, align 8, !tbaa !59
  %592 = add nsw i64 %88, -1
  %593 = shl nuw nsw i64 %88, 3
  %594 = zext i32 %591 to i64
  %595 = getelementptr i8, ptr %590, i64 8
  %596 = icmp ult i32 %83, 16
  %597 = icmp ne i32 %591, 1
  %598 = trunc i64 %592 to i32
  %599 = icmp ugt i64 %592, 4294967295
  %600 = trunc i64 %592 to i32
  %601 = and i64 %88, 4294967292
  %602 = icmp eq i64 %601, %88
  br label %603

603:                                              ; preds = %714, %589
  %604 = phi i64 [ %715, %714 ], [ 0, %589 ]
  %605 = shl nuw nsw i64 %604, 3
  %606 = getelementptr i8, ptr %590, i64 %605
  %607 = add nuw i64 %593, %605
  %608 = getelementptr i8, ptr %590, i64 %607
  %609 = trunc i64 %604 to i32
  %610 = getelementptr inbounds double, ptr %521, i64 %604
  %611 = load double, ptr %610, align 8, !tbaa !133
  %612 = trunc i64 %604 to i32
  %613 = xor i32 %609, -1
  %614 = icmp ult i32 %613, %600
  %615 = insertelement <4 x double> poison, double %611, i64 0
  %616 = shufflevector <4 x double> %615, <4 x double> poison, <4 x i32> zeroinitializer
  br label %617

617:                                              ; preds = %603, %711
  %618 = phi i64 [ 0, %603 ], [ %712, %711 ]
  %619 = mul i64 %618, %594
  %620 = add i64 %604, %619
  %621 = shl i64 %620, 3
  %622 = and i64 %621, 34359738360
  %623 = getelementptr i8, ptr %590, i64 %622
  %624 = getelementptr i8, ptr %595, i64 %622
  %625 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %618
  %626 = load i64, ptr %625, align 4
  %627 = load ptr, ptr %13, align 8
  %628 = getelementptr inbounds %"class.dealii::Vector", ptr %627, i64 %604, i32 3
  %629 = and i64 %626, 4294967295
  %630 = load ptr, ptr %52, align 8
  %631 = load i32, ptr %50, align 8
  %632 = trunc i64 %618 to i32
  %633 = mul i32 %631, %632
  %634 = load ptr, ptr %628, align 8, !tbaa !136
  %635 = getelementptr double, ptr %634, i64 %629
  %636 = mul i32 %591, %632
  %637 = add i32 %636, %612
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds double, ptr %590, i64 %638
  br i1 %596, label %690, label %640

640:                                              ; preds = %617
  %641 = xor i32 %633, -1
  %642 = icmp ult i32 %641, %598
  %643 = or i1 %642, %599
  %644 = or i1 %597, %643
  %645 = or i1 %614, %644
  br i1 %645, label %690, label %646

646:                                              ; preds = %640
  %647 = zext i32 %633 to i64
  %648 = shl nuw nsw i64 %647, 3
  %649 = getelementptr i8, ptr %630, i64 %648
  %650 = getelementptr i8, ptr %630, i64 %593
  %651 = getelementptr i8, ptr %650, i64 %648
  %652 = getelementptr i8, ptr %634, i64 8
  %653 = shl nuw nsw i64 %629, 3
  %654 = getelementptr i8, ptr %652, i64 %653
  %655 = icmp ult ptr %606, %651
  %656 = icmp ult ptr %649, %608
  %657 = and i1 %655, %656
  %658 = icmp ult ptr %623, %651
  %659 = icmp ult ptr %649, %624
  %660 = and i1 %658, %659
  %661 = or i1 %657, %660
  %662 = icmp ult ptr %635, %651
  %663 = icmp ult ptr %649, %654
  %664 = and i1 %662, %663
  %665 = or i1 %661, %664
  br i1 %665, label %690, label %666

666:                                              ; preds = %646
  %667 = load double, ptr %639, align 8, !tbaa !133, !alias.scope !363, !noalias !366
  %668 = insertelement <4 x double> poison, double %667, i64 0
  %669 = shufflevector <4 x double> %668, <4 x double> poison, <4 x i32> zeroinitializer
  %670 = load double, ptr %635, align 8, !tbaa !133, !alias.scope !368, !noalias !366
  %671 = insertelement <4 x double> poison, double %670, i64 0
  %672 = shufflevector <4 x double> %671, <4 x double> poison, <4 x i32> zeroinitializer
  br label %673

673:                                              ; preds = %673, %666
  %674 = phi i64 [ 0, %666 ], [ %687, %673 ]
  %675 = trunc i64 %674 to i32
  %676 = add i64 %674, %604
  %677 = and i64 %676, 4294967295
  %678 = getelementptr inbounds double, ptr %590, i64 %677
  %679 = load <4 x double>, ptr %678, align 8, !tbaa !133, !alias.scope !370, !noalias !366
  %680 = fmul <4 x double> %669, %679
  %681 = fmul <4 x double> %616, %680
  %682 = add i32 %633, %675
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds double, ptr %630, i64 %683
  %685 = load <4 x double>, ptr %684, align 8, !tbaa !133, !alias.scope !366
  %686 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %681, <4 x double> %672, <4 x double> %685)
  store <4 x double> %686, ptr %684, align 8, !tbaa !133, !alias.scope !366
  %687 = add nuw i64 %674, 4
  %688 = icmp eq i64 %687, %601
  br i1 %688, label %689, label %673, !llvm.loop !372

689:                                              ; preds = %673
  br i1 %602, label %711, label %690

690:                                              ; preds = %646, %640, %617, %689
  %691 = phi i64 [ 0, %646 ], [ 0, %640 ], [ 0, %617 ], [ %601, %689 ]
  br label %692

692:                                              ; preds = %690, %692
  %693 = phi i64 [ %709, %692 ], [ %691, %690 ]
  %694 = load double, ptr %639, align 8, !tbaa !133
  %695 = trunc i64 %693 to i32
  %696 = mul i32 %591, %695
  %697 = add i32 %696, %612
  %698 = zext i32 %697 to i64
  %699 = getelementptr inbounds double, ptr %590, i64 %698
  %700 = load double, ptr %699, align 8, !tbaa !133
  %701 = fmul double %694, %700
  %702 = fmul double %611, %701
  %703 = load double, ptr %635, align 8, !tbaa !133
  %704 = add i32 %633, %695
  %705 = zext i32 %704 to i64
  %706 = getelementptr inbounds double, ptr %630, i64 %705
  %707 = load double, ptr %706, align 8, !tbaa !133
  %708 = call double @llvm.fmuladd.f64(double %702, double %703, double %707)
  store double %708, ptr %706, align 8, !tbaa !133
  %709 = add nuw nsw i64 %693, 1
  %710 = icmp eq i64 %709, %88
  br i1 %710, label %711, label %692, !llvm.loop !373

711:                                              ; preds = %692, %689
  %712 = add nuw nsw i64 %618, 1
  %713 = icmp eq i64 %712, %88
  br i1 %713, label %714, label %617

714:                                              ; preds = %711
  %715 = add nuw nsw i64 %604, 1
  %716 = icmp eq i64 %715, %121
  br i1 %716, label %1091, label %603

717:                                              ; preds = %526, %796
  %718 = phi i64 [ %797, %796 ], [ 0, %526 ]
  %719 = getelementptr inbounds double, ptr %521, i64 %718
  %720 = load double, ptr %719, align 8, !tbaa !133
  %721 = trunc i64 %718 to i32
  %722 = trunc i64 %718 to i32
  br label %723

723:                                              ; preds = %717, %735
  %724 = phi i64 [ 0, %717 ], [ %736, %735 ]
  %725 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %724
  %726 = load i64, ptr %725, align 4
  %727 = trunc i64 %726 to i32
  %728 = load ptr, ptr %13, align 8
  %729 = getelementptr inbounds %"class.dealii::Vector", ptr %728, i64 %718, i32 3
  %730 = and i64 %726, 4294967295
  %731 = load ptr, ptr %52, align 8
  %732 = load i32, ptr %50, align 8
  %733 = trunc i64 %724 to i32
  %734 = mul i32 %732, %733
  br label %738

735:                                              ; preds = %793
  %736 = add nuw nsw i64 %724, 1
  %737 = icmp eq i64 %736, %88
  br i1 %737, label %796, label %723

738:                                              ; preds = %793, %723
  %739 = phi i64 [ %794, %793 ], [ 0, %723 ]
  %740 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %739
  %741 = load i64, ptr %740, align 4
  %742 = trunc i64 %741 to i32
  %743 = icmp eq i32 %742, %727
  br i1 %743, label %744, label %793

744:                                              ; preds = %738
  %745 = load ptr, ptr %86, align 8, !tbaa !63
  %746 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %745, i64 0, i32 2
  %747 = load i8, ptr %746, align 4, !tbaa !148, !range !182, !noundef !183
  %748 = icmp eq i8 %747, 0
  br i1 %748, label %757, label %749

749:                                              ; preds = %744
  %750 = load ptr, ptr %523, align 8, !tbaa !140
  %751 = load i32, ptr %524, align 8, !tbaa !59
  %752 = mul i32 %751, %733
  %753 = add i32 %752, %721
  %754 = zext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %750, i64 %754
  %756 = trunc i64 %739 to i32
  br label %770

757:                                              ; preds = %744
  %758 = load ptr, ptr %525, align 8, !tbaa !144
  %759 = getelementptr inbounds i32, ptr %758, i64 %724
  %760 = load i32, ptr %759, align 4, !tbaa !59
  %761 = load ptr, ptr %523, align 8, !tbaa !140
  %762 = load i32, ptr %524, align 8, !tbaa !59
  %763 = mul i32 %762, %760
  %764 = add i32 %763, %722
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds double, ptr %761, i64 %765
  %767 = getelementptr inbounds i32, ptr %758, i64 %739
  %768 = load i32, ptr %767, align 4, !tbaa !59
  %769 = trunc i64 %739 to i32
  br label %770

770:                                              ; preds = %757, %749
  %771 = phi i32 [ %769, %757 ], [ %756, %749 ]
  %772 = phi i32 [ %722, %757 ], [ %721, %749 ]
  %773 = phi ptr [ %766, %757 ], [ %755, %749 ]
  %774 = phi i32 [ %762, %757 ], [ %751, %749 ]
  %775 = phi ptr [ %761, %757 ], [ %750, %749 ]
  %776 = phi i32 [ %768, %757 ], [ %756, %749 ]
  %777 = load double, ptr %773, align 8, !tbaa !133
  %778 = mul i32 %776, %774
  %779 = add i32 %778, %772
  %780 = zext i32 %779 to i64
  %781 = getelementptr inbounds double, ptr %775, i64 %780
  %782 = load double, ptr %781, align 8, !tbaa !133
  %783 = fmul double %777, %782
  %784 = fmul double %720, %783
  %785 = load ptr, ptr %729, align 8, !tbaa !136
  %786 = getelementptr inbounds double, ptr %785, i64 %730
  %787 = load double, ptr %786, align 8, !tbaa !133
  %788 = add i32 %734, %771
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds double, ptr %731, i64 %789
  %791 = load double, ptr %790, align 8, !tbaa !133
  %792 = call double @llvm.fmuladd.f64(double %784, double %787, double %791)
  store double %792, ptr %790, align 8, !tbaa !133
  br label %793

793:                                              ; preds = %770, %738
  %794 = add nuw nsw i64 %739, 1
  %795 = icmp eq i64 %794, %88
  br i1 %795, label %735, label %738

796:                                              ; preds = %735
  %797 = add nuw nsw i64 %718, 1
  %798 = icmp eq i64 %797, %121
  br i1 %798, label %1091, label %717

799:                                              ; preds = %216, %1088
  %800 = phi i64 [ 0, %216 ], [ %1089, %1088 ]
  %801 = shl nuw nsw i64 %800, 3
  %802 = add nuw i64 %225, %801
  %803 = trunc i64 %800 to i32
  %804 = getelementptr inbounds double, ptr %218, i64 %800
  %805 = load double, ptr %804, align 8, !tbaa !133
  br i1 %219, label %1088, label %806

806:                                              ; preds = %799
  br i1 %63, label %807, label %1018

807:                                              ; preds = %806
  %808 = load ptr, ptr %86, align 8, !tbaa !63
  %809 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %808, i64 0, i32 2
  %810 = load i8, ptr %809, align 4, !tbaa !148, !range !182, !noundef !183
  %811 = icmp eq i8 %810, 0
  br i1 %811, label %812, label %887

812:                                              ; preds = %807
  %813 = load ptr, ptr %223, align 8, !tbaa !144
  %814 = load ptr, ptr %221, align 8, !tbaa !140
  %815 = load i32, ptr %222, align 8, !tbaa !59
  %816 = trunc i64 %800 to i32
  br label %817

817:                                              ; preds = %884, %812
  %818 = phi i64 [ %885, %884 ], [ 0, %812 ]
  %819 = load ptr, ptr %52, align 8
  %820 = load i32, ptr %50, align 8
  %821 = trunc i64 %818 to i32
  %822 = mul i32 %820, %821
  %823 = getelementptr inbounds i32, ptr %813, i64 %818
  %824 = load i32, ptr %823, align 4, !tbaa !59
  %825 = mul i32 %815, %824
  %826 = add i32 %825, %816
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds double, ptr %814, i64 %827
  br i1 %236, label %866, label %829

829:                                              ; preds = %817, %829
  %830 = phi i64 [ %863, %829 ], [ 0, %817 ]
  %831 = phi i64 [ %864, %829 ], [ 0, %817 ]
  %832 = getelementptr inbounds i32, ptr %813, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !59
  %834 = load double, ptr %828, align 8, !tbaa !133
  %835 = mul i32 %833, %815
  %836 = add i32 %835, %816
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds double, ptr %814, i64 %837
  %839 = load double, ptr %838, align 8, !tbaa !133
  %840 = fmul double %834, %839
  %841 = trunc i64 %830 to i32
  %842 = add i32 %822, %841
  %843 = zext i32 %842 to i64
  %844 = getelementptr inbounds double, ptr %819, i64 %843
  %845 = load double, ptr %844, align 8, !tbaa !133
  %846 = call double @llvm.fmuladd.f64(double %840, double %805, double %845)
  store double %846, ptr %844, align 8, !tbaa !133
  %847 = or i64 %830, 1
  %848 = getelementptr inbounds i32, ptr %813, i64 %847
  %849 = load i32, ptr %848, align 4, !tbaa !59
  %850 = load double, ptr %828, align 8, !tbaa !133
  %851 = mul i32 %849, %815
  %852 = add i32 %851, %816
  %853 = zext i32 %852 to i64
  %854 = getelementptr inbounds double, ptr %814, i64 %853
  %855 = load double, ptr %854, align 8, !tbaa !133
  %856 = fmul double %850, %855
  %857 = trunc i64 %847 to i32
  %858 = add i32 %822, %857
  %859 = zext i32 %858 to i64
  %860 = getelementptr inbounds double, ptr %819, i64 %859
  %861 = load double, ptr %860, align 8, !tbaa !133
  %862 = call double @llvm.fmuladd.f64(double %856, double %805, double %861)
  store double %862, ptr %860, align 8, !tbaa !133
  %863 = add nuw nsw i64 %830, 2
  %864 = add i64 %831, 2
  %865 = icmp eq i64 %864, %237
  br i1 %865, label %866, label %829

866:                                              ; preds = %829, %817
  %867 = phi i64 [ 0, %817 ], [ %863, %829 ]
  br i1 %238, label %884, label %868

868:                                              ; preds = %866
  %869 = getelementptr inbounds i32, ptr %813, i64 %867
  %870 = load i32, ptr %869, align 4, !tbaa !59
  %871 = load double, ptr %828, align 8, !tbaa !133
  %872 = mul i32 %870, %815
  %873 = add i32 %872, %816
  %874 = zext i32 %873 to i64
  %875 = getelementptr inbounds double, ptr %814, i64 %874
  %876 = load double, ptr %875, align 8, !tbaa !133
  %877 = fmul double %871, %876
  %878 = trunc i64 %867 to i32
  %879 = add i32 %822, %878
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds double, ptr %819, i64 %880
  %882 = load double, ptr %881, align 8, !tbaa !133
  %883 = call double @llvm.fmuladd.f64(double %877, double %805, double %882)
  store double %883, ptr %881, align 8, !tbaa !133
  br label %884

884:                                              ; preds = %866, %868
  %885 = add nuw nsw i64 %818, 1
  %886 = icmp eq i64 %885, %88
  br i1 %886, label %1088, label %817

887:                                              ; preds = %807
  %888 = load ptr, ptr %221, align 8, !tbaa !140
  %889 = load i32, ptr %222, align 8, !tbaa !59
  %890 = trunc i64 %800 to i32
  %891 = getelementptr i8, ptr %888, i64 %801
  %892 = getelementptr i8, ptr %888, i64 %802
  %893 = zext i32 %889 to i64
  %894 = getelementptr i8, ptr %888, i64 8
  %895 = icmp ne i32 %889, 1
  %896 = xor i32 %803, -1
  %897 = icmp ult i32 %896, %229
  %898 = insertelement <4 x double> poison, double %805, i64 0
  %899 = shufflevector <4 x double> %898, <4 x double> poison, <4 x i32> zeroinitializer
  %900 = insertelement <4 x double> poison, double %805, i64 0
  %901 = shufflevector <4 x double> %900, <4 x double> poison, <4 x i32> zeroinitializer
  br label %902

902:                                              ; preds = %1015, %887
  %903 = phi i64 [ %1016, %1015 ], [ 0, %887 ]
  %904 = mul i64 %903, %893
  %905 = add i64 %800, %904
  %906 = shl i64 %905, 3
  %907 = and i64 %906, 34359738360
  %908 = getelementptr i8, ptr %888, i64 %907
  %909 = getelementptr i8, ptr %894, i64 %907
  %910 = load ptr, ptr %52, align 8
  %911 = load i32, ptr %50, align 8
  %912 = trunc i64 %903 to i32
  %913 = mul i32 %911, %912
  %914 = mul i32 %889, %912
  %915 = add i32 %914, %890
  %916 = zext i32 %915 to i64
  %917 = getelementptr inbounds double, ptr %888, i64 %916
  br i1 %226, label %963, label %918

918:                                              ; preds = %902
  %919 = xor i32 %913, -1
  %920 = icmp ult i32 %919, %227
  %921 = or i1 %920, %228
  %922 = or i1 %895, %921
  %923 = or i1 %897, %922
  br i1 %923, label %963, label %924

924:                                              ; preds = %918
  %925 = zext i32 %913 to i64
  %926 = shl nuw nsw i64 %925, 3
  %927 = getelementptr i8, ptr %910, i64 %926
  %928 = getelementptr i8, ptr %910, i64 %225
  %929 = getelementptr i8, ptr %928, i64 %926
  %930 = icmp ult ptr %891, %929
  %931 = icmp ult ptr %927, %892
  %932 = and i1 %930, %931
  %933 = icmp ult ptr %908, %929
  %934 = icmp ult ptr %927, %909
  %935 = and i1 %933, %934
  %936 = or i1 %932, %935
  br i1 %936, label %963, label %937

937:                                              ; preds = %924
  %938 = load double, ptr %917, align 8, !tbaa !133, !alias.scope !374, !noalias !377
  %939 = insertelement <4 x double> poison, double %938, i64 0
  %940 = shufflevector <4 x double> %939, <4 x double> poison, <4 x i32> zeroinitializer
  br label %941

941:                                              ; preds = %941, %937
  %942 = phi i64 [ 0, %937 ], [ %960, %941 ]
  %943 = trunc i64 %942 to i32
  %944 = add i64 %942, %800
  %945 = and i64 %944, 4294967295
  %946 = getelementptr inbounds double, ptr %888, i64 %945
  %947 = load <4 x double>, ptr %946, align 8, !tbaa !133, !alias.scope !379, !noalias !377
  %948 = getelementptr inbounds double, ptr %946, i64 4
  %949 = load <4 x double>, ptr %948, align 8, !tbaa !133, !alias.scope !379, !noalias !377
  %950 = fmul <4 x double> %940, %947
  %951 = fmul <4 x double> %940, %949
  %952 = add i32 %913, %943
  %953 = zext i32 %952 to i64
  %954 = getelementptr inbounds double, ptr %910, i64 %953
  %955 = load <4 x double>, ptr %954, align 8, !tbaa !133, !alias.scope !377
  %956 = getelementptr inbounds double, ptr %954, i64 4
  %957 = load <4 x double>, ptr %956, align 8, !tbaa !133, !alias.scope !377
  %958 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %950, <4 x double> %899, <4 x double> %955)
  %959 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %951, <4 x double> %901, <4 x double> %957)
  store <4 x double> %958, ptr %954, align 8, !tbaa !133, !alias.scope !377
  store <4 x double> %959, ptr %956, align 8, !tbaa !133, !alias.scope !377
  %960 = add nuw i64 %942, 8
  %961 = icmp eq i64 %960, %230
  br i1 %961, label %962, label %941, !llvm.loop !381

962:                                              ; preds = %941
  br i1 %231, label %1015, label %963

963:                                              ; preds = %924, %918, %902, %962
  %964 = phi i64 [ 0, %924 ], [ 0, %918 ], [ 0, %902 ], [ %230, %962 ]
  %965 = xor i64 %964, -1
  br i1 %233, label %981, label %966

966:                                              ; preds = %963
  %967 = load double, ptr %917, align 8, !tbaa !133
  %968 = trunc i64 %964 to i32
  %969 = mul i32 %889, %968
  %970 = add i32 %969, %890
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds double, ptr %888, i64 %971
  %973 = load double, ptr %972, align 8, !tbaa !133
  %974 = fmul double %967, %973
  %975 = add i32 %913, %968
  %976 = zext i32 %975 to i64
  %977 = getelementptr inbounds double, ptr %910, i64 %976
  %978 = load double, ptr %977, align 8, !tbaa !133
  %979 = call double @llvm.fmuladd.f64(double %974, double %805, double %978)
  store double %979, ptr %977, align 8, !tbaa !133
  %980 = or i64 %964, 1
  br label %981

981:                                              ; preds = %966, %963
  %982 = phi i64 [ %964, %963 ], [ %980, %966 ]
  %983 = icmp eq i64 %965, %234
  br i1 %983, label %1015, label %984

984:                                              ; preds = %981, %984
  %985 = phi i64 [ %1013, %984 ], [ %982, %981 ]
  %986 = load double, ptr %917, align 8, !tbaa !133
  %987 = trunc i64 %985 to i32
  %988 = mul i32 %889, %987
  %989 = add i32 %988, %890
  %990 = zext i32 %989 to i64
  %991 = getelementptr inbounds double, ptr %888, i64 %990
  %992 = load double, ptr %991, align 8, !tbaa !133
  %993 = fmul double %986, %992
  %994 = add i32 %913, %987
  %995 = zext i32 %994 to i64
  %996 = getelementptr inbounds double, ptr %910, i64 %995
  %997 = load double, ptr %996, align 8, !tbaa !133
  %998 = call double @llvm.fmuladd.f64(double %993, double %805, double %997)
  store double %998, ptr %996, align 8, !tbaa !133
  %999 = load double, ptr %917, align 8, !tbaa !133
  %1000 = trunc i64 %985 to i32
  %1001 = add i32 %1000, 1
  %1002 = mul i32 %889, %1001
  %1003 = add i32 %1002, %890
  %1004 = zext i32 %1003 to i64
  %1005 = getelementptr inbounds double, ptr %888, i64 %1004
  %1006 = load double, ptr %1005, align 8, !tbaa !133
  %1007 = fmul double %999, %1006
  %1008 = add i32 %913, %1001
  %1009 = zext i32 %1008 to i64
  %1010 = getelementptr inbounds double, ptr %910, i64 %1009
  %1011 = load double, ptr %1010, align 8, !tbaa !133
  %1012 = call double @llvm.fmuladd.f64(double %1007, double %805, double %1011)
  store double %1012, ptr %1010, align 8, !tbaa !133
  %1013 = add nuw nsw i64 %985, 2
  %1014 = icmp eq i64 %1013, %88
  br i1 %1014, label %1015, label %984, !llvm.loop !382

1015:                                             ; preds = %981, %984, %962
  %1016 = add nuw nsw i64 %903, 1
  %1017 = icmp eq i64 %1016, %88
  br i1 %1017, label %1088, label %902

1018:                                             ; preds = %806
  %1019 = load ptr, ptr %220, align 8, !tbaa !184
  %1020 = trunc i64 %800 to i32
  %1021 = trunc i64 %800 to i32
  br label %1022

1022:                                             ; preds = %1085, %1018
  %1023 = phi i64 [ %1086, %1085 ], [ 0, %1018 ]
  %1024 = load ptr, ptr %52, align 8
  %1025 = load i32, ptr %50, align 8
  %1026 = trunc i64 %1023 to i32
  %1027 = mul i32 %1025, %1026
  %1028 = getelementptr inbounds %"struct.std::pair.263", ptr %1019, i64 %1023
  br label %1029

1029:                                             ; preds = %1022, %1082
  %1030 = phi i64 [ 0, %1022 ], [ %1083, %1082 ]
  %1031 = load i64, ptr %1028, align 4
  %1032 = getelementptr inbounds %"struct.std::pair.263", ptr %1019, i64 %1030
  %1033 = load i64, ptr %1032, align 4
  %1034 = trunc i64 %1031 to i32
  %1035 = trunc i64 %1033 to i32
  %1036 = icmp eq i32 %1034, %1035
  br i1 %1036, label %1037, label %1082

1037:                                             ; preds = %1029
  %1038 = load ptr, ptr %86, align 8, !tbaa !63
  %1039 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1038, i64 0, i32 2
  %1040 = load i8, ptr %1039, align 4, !tbaa !148, !range !182, !noundef !183
  %1041 = icmp eq i8 %1040, 0
  br i1 %1041, label %1050, label %1042

1042:                                             ; preds = %1037
  %1043 = load ptr, ptr %221, align 8, !tbaa !140
  %1044 = load i32, ptr %222, align 8, !tbaa !59
  %1045 = mul i32 %1044, %1026
  %1046 = add i32 %1045, %1020
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds double, ptr %1043, i64 %1047
  %1049 = trunc i64 %1030 to i32
  br label %1063

1050:                                             ; preds = %1037
  %1051 = load ptr, ptr %223, align 8, !tbaa !144
  %1052 = getelementptr inbounds i32, ptr %1051, i64 %1023
  %1053 = load i32, ptr %1052, align 4, !tbaa !59
  %1054 = load ptr, ptr %221, align 8, !tbaa !140
  %1055 = load i32, ptr %222, align 8, !tbaa !59
  %1056 = mul i32 %1055, %1053
  %1057 = add i32 %1056, %1021
  %1058 = zext i32 %1057 to i64
  %1059 = getelementptr inbounds double, ptr %1054, i64 %1058
  %1060 = getelementptr inbounds i32, ptr %1051, i64 %1030
  %1061 = load i32, ptr %1060, align 4, !tbaa !59
  %1062 = trunc i64 %1030 to i32
  br label %1063

1063:                                             ; preds = %1050, %1042
  %1064 = phi i32 [ %1062, %1050 ], [ %1049, %1042 ]
  %1065 = phi i32 [ %1021, %1050 ], [ %1020, %1042 ]
  %1066 = phi ptr [ %1059, %1050 ], [ %1048, %1042 ]
  %1067 = phi i32 [ %1055, %1050 ], [ %1044, %1042 ]
  %1068 = phi ptr [ %1054, %1050 ], [ %1043, %1042 ]
  %1069 = phi i32 [ %1061, %1050 ], [ %1049, %1042 ]
  %1070 = load double, ptr %1066, align 8, !tbaa !133
  %1071 = mul i32 %1069, %1067
  %1072 = add i32 %1071, %1065
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds double, ptr %1068, i64 %1073
  %1075 = load double, ptr %1074, align 8, !tbaa !133
  %1076 = fmul double %1070, %1075
  %1077 = add i32 %1027, %1064
  %1078 = zext i32 %1077 to i64
  %1079 = getelementptr inbounds double, ptr %1024, i64 %1078
  %1080 = load double, ptr %1079, align 8, !tbaa !133
  %1081 = call double @llvm.fmuladd.f64(double %1076, double %805, double %1080)
  store double %1081, ptr %1079, align 8, !tbaa !133
  br label %1082

1082:                                             ; preds = %1063, %1029
  %1083 = add nuw nsw i64 %1030, 1
  %1084 = icmp eq i64 %1083, %88
  br i1 %1084, label %1085, label %1029

1085:                                             ; preds = %1082
  %1086 = add nuw nsw i64 %1023, 1
  %1087 = icmp eq i64 %1086, %88
  br i1 %1087, label %1088, label %1022

1088:                                             ; preds = %1085, %1015, %884, %799
  %1089 = add nuw nsw i64 %800, 1
  %1090 = icmp eq i64 %1089, %121
  br i1 %1090, label %1091, label %799

1091:                                             ; preds = %796, %714, %586, %348, %1088, %517, %247, %214
  %1092 = icmp eq i32 %83, 0
  br i1 %1092, label %1180, label %1093

1093:                                             ; preds = %1091
  %1094 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  br i1 %63, label %1095, label %1133

1095:                                             ; preds = %1093, %1128
  %1096 = phi i64 [ %1129, %1128 ], [ 0, %1093 ]
  %1097 = trunc i64 %1096 to i32
  br label %1098

1098:                                             ; preds = %1125, %1095
  %1099 = phi i64 [ %1126, %1125 ], [ 0, %1095 ]
  %1100 = load ptr, ptr %52, align 8, !tbaa !140
  %1101 = load i32, ptr %50, align 8, !tbaa !59
  %1102 = mul i32 %1101, %1097
  %1103 = trunc i64 %1099 to i32
  %1104 = add i32 %1102, %1103
  %1105 = zext i32 %1104 to i64
  %1106 = getelementptr inbounds double, ptr %1100, i64 %1105
  %1107 = load double, ptr %1106, align 8, !tbaa !133
  %1108 = fcmp oeq double %1107, 0.000000e+00
  br i1 %1108, label %1125, label %1109

1109:                                             ; preds = %1098
  %1110 = load ptr, ptr %14, align 8, !tbaa !144
  %1111 = getelementptr inbounds i32, ptr %1110, i64 %1099
  %1112 = load i32, ptr %1111, align 4, !tbaa !59
  %1113 = getelementptr inbounds i32, ptr %1110, i64 %1096
  %1114 = load i32, ptr %1113, align 4, !tbaa !59
  %1115 = load ptr, ptr %64, align 8, !tbaa !383
  %1116 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1115, i32 noundef %1114, i32 noundef %1112)
          to label %1117 unwind label %1131

1117:                                             ; preds = %1109
  %1118 = icmp eq i32 %1116, -1
  br i1 %1118, label %1125, label %1119

1119:                                             ; preds = %1117
  %1120 = load ptr, ptr %65, align 8, !tbaa !385
  %1121 = zext i32 %1116 to i64
  %1122 = getelementptr inbounds double, ptr %1120, i64 %1121
  %1123 = load double, ptr %1122, align 8, !tbaa !133
  %1124 = fadd double %1107, %1123
  store double %1124, ptr %1122, align 8, !tbaa !133
  br label %1125

1125:                                             ; preds = %1119, %1117, %1098
  %1126 = add nuw nsw i64 %1099, 1
  %1127 = icmp eq i64 %1126, %88
  br i1 %1127, label %1128, label %1098

1128:                                             ; preds = %1125
  %1129 = add nuw nsw i64 %1096, 1
  %1130 = icmp eq i64 %1129, %88
  br i1 %1130, label %1180, label %1095

1131:                                             ; preds = %1109
  %1132 = landingpad { ptr, i32 }
          cleanup
  br label %1346

1133:                                             ; preds = %1093, %1175
  %1134 = phi i64 [ %1176, %1175 ], [ 0, %1093 ]
  %1135 = trunc i64 %1134 to i32
  br label %1136

1136:                                             ; preds = %1133, %1172
  %1137 = phi i64 [ 0, %1133 ], [ %1173, %1172 ]
  %1138 = load ptr, ptr %1094, align 8, !tbaa !184
  %1139 = getelementptr inbounds %"struct.std::pair.263", ptr %1138, i64 %1134
  %1140 = load i64, ptr %1139, align 4
  %1141 = getelementptr inbounds %"struct.std::pair.263", ptr %1138, i64 %1137
  %1142 = load i64, ptr %1141, align 4
  %1143 = trunc i64 %1140 to i32
  %1144 = trunc i64 %1142 to i32
  %1145 = icmp eq i32 %1143, %1144
  br i1 %1145, label %1146, label %1172

1146:                                             ; preds = %1136
  %1147 = load ptr, ptr %52, align 8, !tbaa !140
  %1148 = load i32, ptr %50, align 8, !tbaa !59
  %1149 = mul i32 %1148, %1135
  %1150 = trunc i64 %1137 to i32
  %1151 = add i32 %1149, %1150
  %1152 = zext i32 %1151 to i64
  %1153 = getelementptr inbounds double, ptr %1147, i64 %1152
  %1154 = load double, ptr %1153, align 8, !tbaa !133
  %1155 = fcmp oeq double %1154, 0.000000e+00
  br i1 %1155, label %1172, label %1156

1156:                                             ; preds = %1146
  %1157 = load ptr, ptr %14, align 8, !tbaa !144
  %1158 = getelementptr inbounds i32, ptr %1157, i64 %1137
  %1159 = load i32, ptr %1158, align 4, !tbaa !59
  %1160 = getelementptr inbounds i32, ptr %1157, i64 %1134
  %1161 = load i32, ptr %1160, align 4, !tbaa !59
  %1162 = load ptr, ptr %64, align 8, !tbaa !383
  %1163 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1162, i32 noundef %1161, i32 noundef %1159)
          to label %1164 unwind label %1178

1164:                                             ; preds = %1156
  %1165 = icmp eq i32 %1163, -1
  br i1 %1165, label %1172, label %1166

1166:                                             ; preds = %1164
  %1167 = load ptr, ptr %65, align 8, !tbaa !385
  %1168 = zext i32 %1163 to i64
  %1169 = getelementptr inbounds double, ptr %1167, i64 %1168
  %1170 = load double, ptr %1169, align 8, !tbaa !133
  %1171 = fadd double %1154, %1170
  store double %1171, ptr %1169, align 8, !tbaa !133
  br label %1172

1172:                                             ; preds = %1166, %1164, %1146, %1136
  %1173 = add nuw nsw i64 %1137, 1
  %1174 = icmp eq i64 %1173, %88
  br i1 %1174, label %1175, label %1136

1175:                                             ; preds = %1172
  %1176 = add nuw nsw i64 %1134, 1
  %1177 = icmp eq i64 %1176, %88
  br i1 %1177, label %1180, label %1133

1178:                                             ; preds = %1156
  %1179 = landingpad { ptr, i32 }
          cleanup
  br label %1346

1180:                                             ; preds = %1175, %1128, %249, %519, %1091
  %1181 = load ptr, ptr %66, align 8, !tbaa !62
  %1182 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1181, i64 0, i32 1
  %1183 = load ptr, ptr %1182, align 8, !tbaa !46
  %1184 = ptrtoint ptr %1183 to i64
  %1185 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1181, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1186 = load i32, ptr %15, align 8
  %1187 = load i32, ptr %32, align 4
  br label %1188

1188:                                             ; preds = %1276, %1180
  %1189 = phi i32 [ %1186, %1180 ], [ %1255, %1276 ]
  %1190 = phi i32 [ %1186, %1180 ], [ %1256, %1276 ]
  %1191 = phi i32 [ %1186, %1180 ], [ %1277, %1276 ]
  %1192 = phi i32 [ %1187, %1180 ], [ %1257, %1276 ]
  %1193 = add nsw i32 %1192, 1
  %1194 = sext i32 %1191 to i64
  %1195 = getelementptr inbounds ptr, ptr %1183, i64 %1194
  %1196 = load ptr, ptr %1195, align 8, !tbaa !33
  %1197 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1196, i64 0, i32 4
  %1198 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1196, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1199 = load ptr, ptr %1198, align 8, !tbaa !48
  %1200 = load ptr, ptr %1197, align 8, !tbaa !50
  %1201 = ptrtoint ptr %1199 to i64
  %1202 = ptrtoint ptr %1200 to i64
  %1203 = sub i64 %1201, %1202
  %1204 = sdiv exact i64 %1203, 24
  %1205 = trunc i64 %1204 to i32
  %1206 = icmp slt i32 %1193, %1205
  br i1 %1206, label %1254, label %1207

1207:                                             ; preds = %1188
  %1208 = add nsw i64 %1194, 1
  %1209 = trunc i64 %1208 to i32
  store i32 %1209, ptr %15, align 8, !tbaa !60
  %1210 = load ptr, ptr %1185, align 8, !tbaa !51
  %1211 = ptrtoint ptr %1210 to i64
  %1212 = sub i64 %1211, %1184
  %1213 = shl i64 %1212, 29
  %1214 = ashr i64 %1213, 32
  %1215 = icmp slt i64 %1208, %1214
  br i1 %1215, label %1216, label %1248

1216:                                             ; preds = %1207
  %1217 = getelementptr inbounds ptr, ptr %1183, i64 %1208
  %1218 = load ptr, ptr %1217, align 8, !tbaa !33
  %1219 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1218, i64 0, i32 4
  %1220 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1218, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1221 = load ptr, ptr %1220, align 8, !tbaa !48
  %1222 = load ptr, ptr %1219, align 8, !tbaa !50
  %1223 = ptrtoint ptr %1221 to i64
  %1224 = ptrtoint ptr %1222 to i64
  %1225 = sub i64 %1223, %1224
  %1226 = sdiv exact i64 %1225, 24
  %1227 = trunc i64 %1226 to i32
  %1228 = icmp sgt i32 %1227, 0
  br i1 %1228, label %1250, label %1242

1229:                                             ; preds = %1242
  %1230 = getelementptr inbounds ptr, ptr %1183, i64 %1244
  %1231 = load ptr, ptr %1230, align 8, !tbaa !33
  %1232 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1231, i64 0, i32 4
  %1233 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1231, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1234 = load ptr, ptr %1233, align 8, !tbaa !48
  %1235 = load ptr, ptr %1232, align 8, !tbaa !50
  %1236 = ptrtoint ptr %1234 to i64
  %1237 = ptrtoint ptr %1235 to i64
  %1238 = sub i64 %1236, %1237
  %1239 = sdiv exact i64 %1238, 24
  %1240 = trunc i64 %1239 to i32
  %1241 = icmp sgt i32 %1240, 0
  br i1 %1241, label %1249, label %1242, !llvm.loop !52

1242:                                             ; preds = %1216, %1229
  %1243 = phi i64 [ %1244, %1229 ], [ %1208, %1216 ]
  %1244 = add i64 %1243, 1
  %1245 = trunc i64 %1244 to i32
  %1246 = icmp eq i64 %1244, %1214
  br i1 %1246, label %1247, label %1229, !llvm.loop !52

1247:                                             ; preds = %1242
  store i32 %1245, ptr %15, align 8, !tbaa !60
  br label %1248

1248:                                             ; preds = %1247, %1207
  store i32 -1, ptr %15, align 8, !tbaa !60
  br label %1254

1249:                                             ; preds = %1229
  store i32 %1245, ptr %15, align 8, !tbaa !60
  br label %1250

1250:                                             ; preds = %1249, %1216
  %1251 = phi i32 [ %1209, %1216 ], [ %1245, %1249 ]
  %1252 = phi i64 [ %1208, %1216 ], [ %1244, %1249 ]
  %1253 = trunc i64 %1252 to i32
  br label %1254

1254:                                             ; preds = %1250, %1248, %1188
  %1255 = phi i32 [ %1189, %1188 ], [ -1, %1248 ], [ %1251, %1250 ]
  %1256 = phi i32 [ %1190, %1188 ], [ -1, %1248 ], [ %1253, %1250 ]
  %1257 = phi i32 [ %1193, %1188 ], [ -1, %1248 ], [ 0, %1250 ]
  %1258 = phi i32 [ %1191, %1188 ], [ -1, %1248 ], [ %1253, %1250 ]
  %1259 = or i32 %1258, %1257
  %1260 = icmp sgt i32 %1259, -1
  br i1 %1260, label %1261, label %1278

1261:                                             ; preds = %1254
  %1262 = zext i32 %1258 to i64
  %1263 = getelementptr inbounds ptr, ptr %1183, i64 %1262
  %1264 = load ptr, ptr %1263, align 8, !tbaa !33
  %1265 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1264, i64 0, i32 4, i32 0, i32 3
  %1266 = load ptr, ptr %1265, align 8, !tbaa !54
  %1267 = lshr i32 %1257, 6
  %1268 = zext i32 %1267 to i64
  %1269 = getelementptr inbounds i64, ptr %1266, i64 %1268
  %1270 = and i32 %1257, 63
  %1271 = zext i32 %1270 to i64
  %1272 = shl nuw i64 1, %1271
  %1273 = load i64, ptr %1269, align 8, !tbaa !56
  %1274 = and i64 %1273, %1272
  %1275 = icmp eq i64 %1274, 0
  br i1 %1275, label %1276, label %1278

1276:                                             ; preds = %1261, %1281
  %1277 = phi i32 [ %1258, %1261 ], [ %1256, %1281 ]
  br label %1188

1278:                                             ; preds = %1261, %1254
  store i32 %1257, ptr %32, align 4, !tbaa !61
  %1279 = or i32 %1257, %1256
  %1280 = icmp sgt i32 %1279, -1
  br i1 %1280, label %1281, label %1292

1281:                                             ; preds = %1278
  %1282 = zext i32 %1256 to i64
  %1283 = getelementptr inbounds ptr, ptr %1183, i64 %1282
  %1284 = load ptr, ptr %1283, align 8, !tbaa !33
  %1285 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1284, i64 0, i32 4, i32 0, i32 1
  %1286 = shl i32 %1257, 2
  %1287 = zext i32 %1286 to i64
  %1288 = load ptr, ptr %1285, align 8, !tbaa !57
  %1289 = getelementptr inbounds i32, ptr %1288, i64 %1287
  %1290 = load i32, ptr %1289, align 4, !tbaa !59
  %1291 = icmp eq i32 %1290, -1
  br i1 %1291, label %1292, label %1276

1292:                                             ; preds = %1278, %1281
  %1293 = load i32, ptr %33, align 4, !tbaa !61
  %1294 = icmp ne i32 %1257, %1293
  %1295 = load i32, ptr %31, align 8
  %1296 = icmp ne i32 %1255, %1295
  %1297 = select i1 %1294, i1 true, i1 %1296
  br i1 %1297, label %67, label %1298

1298:                                             ; preds = %1292
  %1299 = load ptr, ptr %14, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1300 = icmp eq ptr %1299, null
  br i1 %1300, label %1302, label %1301

1301:                                             ; preds = %1298
  call void @_ZdlPv(ptr noundef nonnull %1299) #21
  br label %1302

1302:                                             ; preds = %41, %1301, %1298
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1303 = load ptr, ptr %13, align 8, !tbaa !224
  %1304 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %1305 = load ptr, ptr %1304, align 8, !tbaa !226
  %1306 = icmp eq ptr %1303, %1305
  br i1 %1306, label %1316, label %1307

1307:                                             ; preds = %1302, %1311
  %1308 = phi ptr [ %1312, %1311 ], [ %1303, %1302 ]
  %1309 = load ptr, ptr %1308, align 8, !tbaa !41
  %1310 = load ptr, ptr %1309, align 8
  invoke void %1310(ptr noundef nonnull align 8 dereferenceable(88) %1308)
          to label %1311 unwind label %1320

1311:                                             ; preds = %1307
  %1312 = getelementptr inbounds %"class.dealii::Vector", ptr %1308, i64 1
  %1313 = icmp eq ptr %1312, %1305
  br i1 %1313, label %1314, label %1307

1314:                                             ; preds = %1311
  %1315 = load ptr, ptr %13, align 8, !tbaa !224
  br label %1316

1316:                                             ; preds = %1314, %1302
  %1317 = phi ptr [ %1315, %1314 ], [ %1303, %1302 ]
  %1318 = icmp eq ptr %1317, null
  br i1 %1318, label %1324, label %1319

1319:                                             ; preds = %1316
  call void @_ZdlPv(ptr noundef nonnull %1317) #21
  br label %1324

1320:                                             ; preds = %1307
  %1321 = landingpad { ptr, i32 }
          cleanup
  %1322 = load ptr, ptr %13, align 8, !tbaa !224
  %1323 = icmp eq ptr %1322, null
  br i1 %1323, label %1375, label %1372

1324:                                             ; preds = %1319, %1316
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  %1325 = load ptr, ptr %12, align 8, !tbaa !131
  %1326 = icmp eq ptr %1325, null
  br i1 %1326, label %1328, label %1327

1327:                                             ; preds = %1324
  call void @_ZdlPv(ptr noundef nonnull %1325) #21
  br label %1328

1328:                                             ; preds = %1327, %1324
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1329 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1330 = load ptr, ptr %1329, align 8, !tbaa !140
  %1331 = icmp eq ptr %1330, null
  br i1 %1331, label %1333, label %1332

1332:                                             ; preds = %1328
  call void @_ZdaPv(ptr noundef nonnull %1330) #21
  br label %1333

1333:                                             ; preds = %1332, %1328
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1334 unwind label %502

1334:                                             ; preds = %1333
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  %1335 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1335)
          to label %1344 unwind label %1336

1336:                                             ; preds = %1334
  %1337 = landingpad { ptr, i32 }
          cleanup
  %1338 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1338)
          to label %1339 unwind label %1341

1339:                                             ; preds = %1336, %1397
  %1340 = phi { ptr, i32 } [ %1387, %1397 ], [ %1337, %1336 ]
  resume { ptr, i32 } %1340

1341:                                             ; preds = %1336
  %1342 = landingpad { ptr, i32 }
          catch ptr null
  %1343 = extractvalue { ptr, i32 } %1342, 0
  call void @__clang_call_terminate(ptr %1343) #22
  unreachable

1344:                                             ; preds = %1334
  %1345 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  call void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1345)
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %10) #19
  ret void

1346:                                             ; preds = %1178, %1131, %506, %142, %512, %504
  %1347 = phi { ptr, i32 } [ %505, %504 ], [ %513, %512 ], [ %507, %506 ], [ %143, %142 ], [ %1179, %1178 ], [ %1132, %1131 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1348 = load ptr, ptr %14, align 8, !tbaa !144
  %1349 = icmp eq ptr %1348, null
  br i1 %1349, label %1351, label %1350

1350:                                             ; preds = %1346
  call void @_ZdlPv(ptr noundef nonnull %1348) #21
  br label %1351

1351:                                             ; preds = %1350, %1346
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1352 = load ptr, ptr %13, align 8, !tbaa !224
  %1353 = load ptr, ptr %60, align 8, !tbaa !226
  %1354 = icmp eq ptr %1352, %1353
  br i1 %1354, label %1364, label %1355

1355:                                             ; preds = %1351, %1359
  %1356 = phi ptr [ %1360, %1359 ], [ %1352, %1351 ]
  %1357 = load ptr, ptr %1356, align 8, !tbaa !41
  %1358 = load ptr, ptr %1357, align 8
  invoke void %1358(ptr noundef nonnull align 8 dereferenceable(88) %1356)
          to label %1359 unwind label %1367

1359:                                             ; preds = %1355
  %1360 = getelementptr inbounds %"class.dealii::Vector", ptr %1356, i64 1
  %1361 = icmp eq ptr %1360, %1353
  br i1 %1361, label %1362, label %1355

1362:                                             ; preds = %1359
  %1363 = load ptr, ptr %13, align 8, !tbaa !224
  br label %1364

1364:                                             ; preds = %1362, %1351
  %1365 = phi ptr [ %1363, %1362 ], [ %1352, %1351 ]
  %1366 = icmp eq ptr %1365, null
  br i1 %1366, label %1375, label %1372

1367:                                             ; preds = %1355
  %1368 = landingpad { ptr, i32 }
          catch ptr null
  %1369 = load ptr, ptr %13, align 8, !tbaa !224
  %1370 = icmp eq ptr %1369, null
  br i1 %1370, label %1400, label %1371

1371:                                             ; preds = %1367
  call void @_ZdlPv(ptr noundef nonnull %1369) #21
  br label %1400

1372:                                             ; preds = %1364, %1320
  %1373 = phi ptr [ %1322, %1320 ], [ %1365, %1364 ]
  %1374 = phi { ptr, i32 } [ %1321, %1320 ], [ %1347, %1364 ]
  call void @_ZdlPv(ptr noundef nonnull %1373) #21
  br label %1375

1375:                                             ; preds = %1372, %1364, %1320
  %1376 = phi { ptr, i32 } [ %1321, %1320 ], [ %1347, %1364 ], [ %1374, %1372 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  %1377 = load ptr, ptr %12, align 8, !tbaa !131
  %1378 = icmp eq ptr %1377, null
  br i1 %1378, label %1380, label %1379

1379:                                             ; preds = %1375
  call void @_ZdlPv(ptr noundef nonnull %1377) #21
  br label %1380

1380:                                             ; preds = %1379, %1375
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1381 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1382 = load ptr, ptr %1381, align 8, !tbaa !140
  %1383 = icmp eq ptr %1382, null
  br i1 %1383, label %1385, label %1384

1384:                                             ; preds = %1380
  call void @_ZdaPv(ptr noundef nonnull %1382) #21
  br label %1385

1385:                                             ; preds = %1384, %1380
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1386 unwind label %1398

1386:                                             ; preds = %1385, %502
  %1387 = phi { ptr, i32 } [ %503, %502 ], [ %1376, %1385 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  %1388 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1388)
          to label %1389 unwind label %1391

1389:                                             ; preds = %1386
  %1390 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1390)
          to label %1397 unwind label %1398

1391:                                             ; preds = %1386
  %1392 = landingpad { ptr, i32 }
          catch ptr null
  %1393 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1393)
          to label %1400 unwind label %1394

1394:                                             ; preds = %1391
  %1395 = landingpad { ptr, i32 }
          catch ptr null
  %1396 = extractvalue { ptr, i32 } %1395, 0
  call void @__clang_call_terminate(ptr %1396) #22
  unreachable

1397:                                             ; preds = %1389
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %10) #19
  br label %1339

1398:                                             ; preds = %1389, %1385, %512
  %1399 = landingpad { ptr, i32 }
          catch ptr null
  br label %1400

1400:                                             ; preds = %1398, %1391, %1367, %1371
  %1401 = phi { ptr, i32 } [ %1368, %1371 ], [ %1368, %1367 ], [ %1399, %1398 ], [ %1392, %1391 ]
  %1402 = extractvalue { ptr, i32 } %1401, 0
  call void @__clang_call_terminate(ptr %1402) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(224) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(36) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.266", align 8
  %11 = alloca %"class.boost::_bi::bind_t.371", align 8
  %12 = alloca %"class.boost::function.67", align 8
  %13 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  store ptr null, ptr %12, align 8, !tbaa !25
  %14 = load ptr, ptr %1, align 8, !tbaa !25
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  store ptr %14, ptr %12, align 8, !tbaa !25
  %17 = load ptr, ptr %14, align 8, !tbaa !227
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %17(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef 0)
  br label %20

20:                                               ; preds = %9, %16
  call void @llvm.experimental.noalias.scope.decl(metadata !387)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325, !noalias !387
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %13, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325, !alias.scope !387
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %13, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !325, !noalias !387
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %24, ptr noundef nonnull align 8 dereferenceable(16) %25, i64 16, i1 false)
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %27, ptr %28, align 8, !tbaa !325, !alias.scope !387
  %29 = ptrtoint ptr %8 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIdEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSV_ISA_EENSV_ISE_EENSV_ISH_EESM_SP_NSV_ISR_EEEENS_3_bi6bind_tINS11_11unspecifiedET_NS11_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES14_S16_S17_S18_S19_S1A_S1B_S1C_(ptr nonnull sret(%"class.boost::_bi::bind_t.371") align 8 %11, ptr noundef nonnull %12, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, ptr noundef %6, ptr noundef nonnull %13, i64 %29)
          to label %30 unwind label %59

30:                                               ; preds = %20
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS4_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull %11, i32 noundef 0)
          to label %31 unwind label %61

31:                                               ; preds = %30
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %32 unwind label %63

32:                                               ; preds = %31
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  %34 = icmp eq ptr %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = load ptr, ptr %33, align 8, !tbaa !231
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %36(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %39, i32 noundef 2)
          to label %40 unwind label %61

40:                                               ; preds = %38, %35
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %41

41:                                               ; preds = %40, %32
  %42 = load ptr, ptr %11, align 8, !tbaa !25
  %43 = icmp eq ptr %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load ptr, ptr %42, align 8, !tbaa !330
  %46 = icmp eq ptr %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(24) %48, ptr noundef nonnull align 8 dereferenceable(24) %48, i32 noundef 2)
          to label %49 unwind label %59

49:                                               ; preds = %47, %44
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %50

50:                                               ; preds = %49, %41
  %51 = load ptr, ptr %12, align 8, !tbaa !25
  %52 = icmp eq ptr %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr %51, align 8, !tbaa !330
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  ret void

59:                                               ; preds = %47, %20
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %83

61:                                               ; preds = %38, %30
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %73

63:                                               ; preds = %31
  %64 = landingpad { ptr, i32 }
          cleanup
  %65 = load ptr, ptr %10, align 8, !tbaa !25
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = load ptr, ptr %65, align 8, !tbaa !231
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %68(ptr noundef nonnull align 8 dereferenceable(24) %71, ptr noundef nonnull align 8 dereferenceable(24) %71, i32 noundef 2)
          to label %72 unwind label %93

72:                                               ; preds = %70, %67
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %73

73:                                               ; preds = %72, %63, %61
  %74 = phi { ptr, i32 } [ %62, %61 ], [ %64, %63 ], [ %64, %72 ]
  %75 = load ptr, ptr %11, align 8, !tbaa !25
  %76 = icmp eq ptr %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr %75, align 8, !tbaa !330
  %79 = icmp eq ptr %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %78(ptr noundef nonnull align 8 dereferenceable(24) %81, ptr noundef nonnull align 8 dereferenceable(24) %81, i32 noundef 2)
          to label %82 unwind label %93

82:                                               ; preds = %80, %77
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %83

83:                                               ; preds = %82, %73, %59
  %84 = phi { ptr, i32 } [ %60, %59 ], [ %74, %73 ], [ %74, %82 ]
  %85 = load ptr, ptr %12, align 8, !tbaa !25
  %86 = icmp eq ptr %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = load ptr, ptr %85, align 8, !tbaa !330
  %89 = icmp eq ptr %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %88(ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %91, i32 noundef 2)
          to label %92 unwind label %93

92:                                               ; preds = %87, %90, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  resume { ptr, i32 } %84

93:                                               ; preds = %90, %80, %70
  %94 = landingpad { ptr, i32 }
          catch ptr null
  %95 = extractvalue { ptr, i32 } %94, 0
  call void @__clang_call_terminate(ptr %95) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %9 = alloca %"class.std::vector.43", align 8
  %10 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %11 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %12 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %13 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %14 = alloca %"class.dealii::Threads::Thread", align 16
  %15 = alloca %"class.dealii::Threads::internal::fun_encapsulator.76", align 8
  %16 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %17 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %8, i64 0, i32 1
  store ptr %8, ptr %18, align 8, !tbaa !10
  store ptr %8, ptr %8, align 8, !tbaa !13
  %19 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %8, i64 0, i32 1
  store i64 0, ptr %19, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %10, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %20 unwind label %43

20:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %12, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %21 unwind label %45

21:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %12, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !325
  store ptr %24, ptr %22, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %9, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %17)
          to label %25 unwind label %45

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %16, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.boost::shared_ptr", ptr %14, i64 0, i32 1
  %33 = zext i32 %17 to i64
  br label %49

34:                                               ; preds = %103, %25
  %35 = load ptr, ptr %8, align 8, !tbaa !13
  %36 = icmp eq ptr %35, %8
  br i1 %36, label %122, label %37

37:                                               ; preds = %34, %40
  %38 = phi ptr [ %41, %40 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_List_node", ptr %38, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %39)
          to label %40 unwind label %155

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !13
  %42 = icmp eq ptr %41, %8
  br i1 %42, label %122, label %37

43:                                               ; preds = %7
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %21, %20
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %46, %45 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  br label %162

49:                                               ; preds = %27, %103
  %50 = phi i64 [ 0, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !390)
  store ptr null, ptr %15, align 8, !tbaa !25, !alias.scope !390
  %51 = load ptr, ptr @_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable, align 8, !tbaa !393, !noalias !390
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  invoke void %51(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %54 unwind label %106

54:                                               ; preds = %53, %49
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE, ptr %28, align 8, !tbaa !30, !alias.scope !390
  store ptr @_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable, ptr %15, align 8, !tbaa !25, !alias.scope !390
  %55 = load ptr, ptr %9, align 8, !tbaa !332
  %56 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50
  %57 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  store ptr %58, ptr %29, align 8, !tbaa !325
  %59 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50, i32 1
  %60 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  store ptr %61, ptr %31, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %14, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %62 unwind label %108

62:                                               ; preds = %54
  %63 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %64 unwind label %110

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_List_node", ptr %63, i64 0, i32 1
  %66 = load <2 x ptr>, ptr %14, align 16, !tbaa !33
  store <2 x ptr> %66, ptr %65, align 8, !tbaa !33
  %67 = extractelement <2 x ptr> %66, i64 1
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %67, i64 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !34
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %70, align 8, !tbaa !34
  br label %73

73:                                               ; preds = %69, %64
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull %8) #19
  %74 = load i64, ptr %19, align 8, !tbaa !36
  %75 = add i64 %74, 1
  store i64 %75, ptr %19, align 8, !tbaa !36
  %76 = load ptr, ptr %32, align 8, !tbaa !39
  %77 = icmp eq ptr %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = add nsw i64 %80, -1
  store i64 %81, ptr %79, align 8, !tbaa !34
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %78
  %84 = load ptr, ptr %76, align 8, !tbaa !41
  %85 = getelementptr inbounds ptr, ptr %84, i64 2
  %86 = load ptr, ptr %85, align 8
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %87 unwind label %108

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !43
  %90 = add nsw i64 %89, -1
  store i64 %90, ptr %88, align 8, !tbaa !43
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load ptr, ptr %76, align 8, !tbaa !41
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %96 unwind label %108

96:                                               ; preds = %87, %78, %73, %92
  %97 = load ptr, ptr %15, align 8, !tbaa !25
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load ptr, ptr %97, align 8, !tbaa !393
  %101 = icmp eq ptr %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  invoke void %100(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %103 unwind label %106

103:                                              ; preds = %99, %102, %96
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  %104 = add nuw nsw i64 %50, 1
  %105 = icmp eq i64 %104, %33
  br i1 %105, label %34, label %49

106:                                              ; preds = %102, %53
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %120

108:                                              ; preds = %92, %83, %54
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %112

110:                                              ; preds = %62
  %111 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %112 unwind label %165

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  %114 = load ptr, ptr %15, align 8, !tbaa !25
  %115 = icmp eq ptr %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !393
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  invoke void %117(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %120 unwind label %165

120:                                              ; preds = %116, %119, %112, %106
  %121 = phi { ptr, i32 } [ %107, %106 ], [ %113, %112 ], [ %113, %119 ], [ %113, %116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  br label %157

122:                                              ; preds = %40, %34
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %123 = load ptr, ptr %9, align 8, !tbaa !332
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZdlPv(ptr noundef nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  %127 = load ptr, ptr %8, align 8, !tbaa !13
  %128 = icmp eq ptr %127, %8
  br i1 %128, label %154, label %129

129:                                              ; preds = %126, %152
  %130 = phi ptr [ %131, %152 ], [ %127, %126 ]
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds %"struct.std::_List_node", ptr %130, i64 0, i32 1, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !34
  %138 = add nsw i64 %137, -1
  store i64 %138, ptr %136, align 8, !tbaa !34
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load ptr, ptr %133, align 8, !tbaa !41
  %142 = getelementptr inbounds ptr, ptr %141, i64 2
  %143 = load ptr, ptr %142, align 8
  call void %143(ptr noundef nonnull align 8 dereferenceable(24) %133)
  %144 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !43
  %146 = add nsw i64 %145, -1
  store i64 %146, ptr %144, align 8, !tbaa !43
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load ptr, ptr %133, align 8, !tbaa !41
  %150 = getelementptr inbounds ptr, ptr %149, i64 3
  %151 = load ptr, ptr %150, align 8
  call void %151(ptr noundef nonnull align 8 dereferenceable(24) %133)
  br label %152

152:                                              ; preds = %148, %140, %135, %129
  call void @_ZdlPv(ptr noundef nonnull %130) #21
  %153 = icmp eq ptr %131, %8
  br i1 %153, label %154, label %129

154:                                              ; preds = %152, %126
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  ret void

155:                                              ; preds = %37
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %157

157:                                              ; preds = %155, %120
  %158 = phi { ptr, i32 } [ %121, %120 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %159 = load ptr, ptr %9, align 8, !tbaa !332
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %159) #21
  br label %162

162:                                              ; preds = %161, %157, %47
  %163 = phi { ptr, i32 } [ %48, %47 ], [ %158, %157 ], [ %158, %161 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %164 unwind label %165

164:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  resume { ptr, i32 } %163

165:                                              ; preds = %119, %162, %110
  %166 = landingpad { ptr, i32 }
          catch ptr null
  %167 = extractvalue { ptr, i32 } %166, 0
  call void @__clang_call_terminate(ptr %167) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca %"class.dealii::hp::FEValues", align 8
  %14 = alloca %"class.dealii::FullMatrix", align 8
  %15 = alloca %"class.dealii::Vector", align 8
  %16 = alloca %"class.std::vector.92", align 8
  %17 = alloca %"class.std::vector.92", align 8
  %18 = alloca %"class.std::vector.258", align 8
  %19 = alloca %"class.std::vector.28", align 8
  %20 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %21 = alloca %"class.dealii::Vector", align 8
  %22 = icmp eq ptr %6, null
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %13) #19
  %23 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !336
  call void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %13, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(96) %24, ptr noundef nonnull align 8 dereferenceable(96) %2, i32 noundef 49)
  %25 = load ptr, ptr %23, align 8, !tbaa !336
  %26 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !338
  %28 = load ptr, ptr %27, align 8, !tbaa !340
  %29 = getelementptr inbounds i8, ptr %28, i64 116
  %30 = load i32, ptr %29, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %14) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %14, i32 noundef 0)
          to label %31 unwind label %314

31:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %32 unwind label %316

32:                                               ; preds = %31
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %33 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %16) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %17) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %19) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %19, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %20) #19
  %34 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %20, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %36 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %20, i64 0, i32 1
  store ptr %35, ptr %36, align 8, !tbaa !325
  %37 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %20, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, ptr %38, align 4, !tbaa !61
  %41 = load i32, ptr %39, align 4, !tbaa !61
  %42 = icmp ne i32 %40, %41
  %43 = load i32, ptr %20, align 8
  %44 = load i32, ptr %37, align 8
  %45 = icmp ne i32 %43, %44
  %46 = select i1 %42, i1 true, i1 %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  br label %1273

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4
  %50 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 1
  %51 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %52 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4, i32 0, i32 0, i64 1
  %53 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %54 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4, i32 0, i32 0, i64 2
  %55 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 3
  %56 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 3, i32 0, i32 0, i64 1
  %57 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 2
  %58 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 2
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %61 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %16, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 1
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 1
  %64 = icmp eq i32 %30, 0
  %65 = zext i32 %30 to i64
  %66 = shl nuw nsw i64 %65, 3
  %67 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 3
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 2
  %69 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %19, i64 0, i32 1
  %71 = getelementptr inbounds %"class.dealii::Function", ptr %6, i64 0, i32 2
  %72 = icmp eq i32 %30, 1
  %73 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %75 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %76 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %20, i64 0, i32 2
  br label %77

77:                                               ; preds = %48, %1240
  invoke void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240) %13, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %78 unwind label %318

78:                                               ; preds = %77
  %79 = load ptr, ptr %50, align 8, !tbaa !342
  %80 = load i32, ptr %49, align 8, !tbaa !59
  %81 = load i32, ptr %51, align 8, !tbaa !59
  %82 = mul i32 %81, %80
  %83 = load i32, ptr %52, align 4, !tbaa !59
  %84 = add i32 %82, %83
  %85 = load i32, ptr %53, align 4, !tbaa !59
  %86 = mul i32 %84, %85
  %87 = load i32, ptr %54, align 8, !tbaa !59
  %88 = add i32 %86, %87
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %79, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !346
  %92 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 3
  %93 = load i32, ptr %92, align 8, !tbaa !65
  %94 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 2
  %95 = load i32, ptr %94, align 4, !tbaa !127
  %96 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 6
  %97 = load ptr, ptr %96, align 8, !tbaa !63
  %98 = zext i32 %93 to i64
  %99 = shl nuw i64 %98, 32
  %100 = or i64 %99, %98
  store i64 %100, ptr %55, align 4
  %101 = mul i32 %93, %93
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %78
  %104 = load ptr, ptr %58, align 8, !tbaa !140
  %105 = icmp eq ptr %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  call void @_ZdaPv(ptr noundef nonnull %104) #21
  br label %107

107:                                              ; preds = %106, %103
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %58, i8 0, i64 20, i1 false)
  br label %130

108:                                              ; preds = %78
  %109 = load i32, ptr %57, align 8, !tbaa !348
  %110 = icmp ult i32 %109, %101
  %111 = load ptr, ptr %58, align 8, !tbaa !140
  br i1 %110, label %112, label %125

112:                                              ; preds = %108
  %113 = icmp eq ptr %111, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  call void @_ZdaPv(ptr noundef nonnull %111) #21
  %115 = load i32, ptr %55, align 4, !tbaa !59
  %116 = load i32, ptr %56, align 8, !tbaa !59
  %117 = mul i32 %116, %115
  br label %118

118:                                              ; preds = %114, %112
  %119 = phi i32 [ %117, %114 ], [ %101, %112 ]
  store i32 %101, ptr %57, align 8, !tbaa !348
  %120 = zext i32 %101 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %121) #20
          to label %123 unwind label %320

123:                                              ; preds = %118
  store ptr %122, ptr %58, align 8, !tbaa !140
  %124 = icmp eq i32 %119, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %123, %108
  %126 = phi ptr [ %122, %123 ], [ %111, %108 ]
  %127 = phi i32 [ %119, %123 ], [ %101, %108 ]
  %128 = zext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  call void @llvm.memset.p0.i64(ptr align 8 %126, i8 0, i64 %129, i1 false), !tbaa !133
  br label %130

130:                                              ; preds = %125, %123, %107
  %131 = icmp eq i32 %93, 0
  br i1 %131, label %132, label %137

132:                                              ; preds = %130
  %133 = load ptr, ptr %60, align 8, !tbaa !136
  %134 = icmp eq ptr %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_ZdaPv(ptr noundef nonnull %133) #21
  br label %136

136:                                              ; preds = %135, %132
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  br label %153

137:                                              ; preds = %130
  %138 = load i32, ptr %59, align 4, !tbaa !138
  %139 = icmp ult i32 %138, %93
  %140 = load ptr, ptr %60, align 8, !tbaa !136
  br i1 %139, label %143, label %141

141:                                              ; preds = %137
  %142 = shl nuw nsw i64 %98, 3
  br label %150

143:                                              ; preds = %137
  %144 = icmp eq ptr %140, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  call void @_ZdaPv(ptr noundef nonnull %140) #21
  br label %146

146:                                              ; preds = %145, %143
  %147 = shl nuw nsw i64 %98, 3
  %148 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %147) #20
          to label %149 unwind label %320

149:                                              ; preds = %146
  store ptr %148, ptr %60, align 8, !tbaa !136
  store i32 %93, ptr %59, align 4, !tbaa !138
  br label %150

150:                                              ; preds = %141, %149
  %151 = phi i64 [ %142, %141 ], [ %147, %149 ]
  %152 = phi ptr [ %140, %141 ], [ %148, %149 ]
  store i32 %93, ptr %33, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr align 8 %152, i8 0, i64 %151, i1 false), !tbaa !133
  br label %153

153:                                              ; preds = %150, %136
  %154 = load i32, ptr %94, align 4, !tbaa !127
  %155 = zext i32 %154 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12)
  store double 0.000000e+00, ptr %12, align 8, !tbaa !133
  %156 = load ptr, ptr %61, align 8, !tbaa !33
  %157 = load ptr, ptr %16, align 8, !tbaa !131
  %158 = ptrtoint ptr %156 to i64
  %159 = ptrtoint ptr %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 3
  %162 = icmp ult i64 %161, %155
  br i1 %162, label %163, label %165

163:                                              ; preds = %153
  %164 = sub nsw i64 %155, %161
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %16, ptr %156, i64 noundef %164, ptr noundef nonnull align 8 dereferenceable(8) %12)
          to label %171 unwind label %320

165:                                              ; preds = %153
  %166 = icmp ugt i64 %161, %155
  br i1 %166, label %167, label %171

167:                                              ; preds = %165
  %168 = getelementptr inbounds double, ptr %157, i64 %155
  %169 = icmp eq ptr %156, %168
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  store ptr %168, ptr %61, align 8, !tbaa !135
  br label %171

171:                                              ; preds = %170, %167, %165, %163
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12)
  %172 = zext i32 %95 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  store double 0.000000e+00, ptr %11, align 8, !tbaa !133
  %173 = load ptr, ptr %62, align 8, !tbaa !33
  %174 = load ptr, ptr %17, align 8, !tbaa !131
  %175 = ptrtoint ptr %173 to i64
  %176 = ptrtoint ptr %174 to i64
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %178, %172
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = sub nsw i64 %172, %178
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr %173, i64 noundef %181, ptr noundef nonnull align 8 dereferenceable(8) %11)
          to label %188 unwind label %320

182:                                              ; preds = %171
  %183 = icmp ugt i64 %178, %172
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = getelementptr inbounds double, ptr %174, i64 %172
  %186 = icmp eq ptr %173, %185
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  store ptr %185, ptr %62, align 8, !tbaa !135
  br label %188

188:                                              ; preds = %187, %184, %182, %180
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %189 unwind label %320

189:                                              ; preds = %188
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %21, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %63, i8 0, i64 16, i1 false)
  br i1 %64, label %198, label %190

190:                                              ; preds = %189
  %191 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %66) #20
          to label %192 unwind label %193

192:                                              ; preds = %190
  store ptr %191, ptr %67, align 8, !tbaa !136
  store i32 %30, ptr %68, align 4, !tbaa !138
  store i32 %30, ptr %63, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %191, i8 0, i64 %66, i1 false), !tbaa !133
  br label %198

193:                                              ; preds = %190
  %194 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %1327 unwind label %195

195:                                              ; preds = %193
  %196 = landingpad { ptr, i32 }
          catch ptr null
  %197 = extractvalue { ptr, i32 } %196, 0
  call void @__clang_call_terminate(ptr %197) #22
  unreachable

198:                                              ; preds = %192, %189
  %199 = load ptr, ptr %69, align 8, !tbaa !33
  %200 = load ptr, ptr %18, align 8, !tbaa !224
  %201 = ptrtoint ptr %199 to i64
  %202 = ptrtoint ptr %200 to i64
  %203 = sub i64 %201, %202
  %204 = sdiv exact i64 %203, 88
  %205 = icmp ult i64 %204, %172
  br i1 %205, label %206, label %208

206:                                              ; preds = %198
  %207 = sub nsw i64 %172, %204
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr %199, i64 noundef %207, ptr noundef nonnull align 8 dereferenceable(88) %21)
          to label %221 unwind label %324

208:                                              ; preds = %198
  %209 = icmp ugt i64 %204, %172
  br i1 %209, label %210, label %221

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.dealii::Vector", ptr %200, i64 %172
  %212 = icmp eq ptr %199, %211
  br i1 %212, label %221, label %213

213:                                              ; preds = %210, %217
  %214 = phi ptr [ %218, %217 ], [ %211, %210 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !41
  %216 = load ptr, ptr %215, align 8
  invoke void %216(ptr noundef nonnull align 8 dereferenceable(88) %214)
          to label %217 unwind label %322

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.dealii::Vector", ptr %214, i64 1
  %219 = icmp eq ptr %218, %199
  br i1 %219, label %220, label %213

220:                                              ; preds = %217
  store ptr %211, ptr %69, align 8, !tbaa !226
  br label %221

221:                                              ; preds = %220, %210, %208, %206
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %21, align 8, !tbaa !41
  %222 = load ptr, ptr %67, align 8, !tbaa !136
  %223 = icmp eq ptr %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  call void @_ZdaPv(ptr noundef nonnull %222) #21
  store ptr null, ptr %67, align 8, !tbaa !136
  br label %225

225:                                              ; preds = %224, %221
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %226 unwind label %320

226:                                              ; preds = %225
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4, !tbaa !59
  %227 = load ptr, ptr %70, align 8, !tbaa !33
  %228 = load ptr, ptr %19, align 8, !tbaa !144
  %229 = ptrtoint ptr %227 to i64
  %230 = ptrtoint ptr %228 to i64
  %231 = sub i64 %229, %230
  %232 = ashr exact i64 %231, 2
  %233 = icmp ult i64 %232, %98
  br i1 %233, label %234, label %236

234:                                              ; preds = %226
  %235 = sub nsw i64 %98, %232
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr %227, i64 noundef %235, ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %242 unwind label %320

236:                                              ; preds = %226
  %237 = icmp ugt i64 %232, %98
  br i1 %237, label %238, label %242

238:                                              ; preds = %236
  %239 = getelementptr inbounds i32, ptr %228, i64 %98
  %240 = icmp eq ptr %227, %239
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  store ptr %239, ptr %70, align 8, !tbaa !349
  br label %242

242:                                              ; preds = %241, %238, %236, %234
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  %243 = load i32, ptr %55, align 4, !tbaa !59
  %244 = load i32, ptr %56, align 8, !tbaa !59
  %245 = mul i32 %244, %243
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %251, label %247

247:                                              ; preds = %242
  %248 = load ptr, ptr %58, align 8, !tbaa !140
  %249 = zext i32 %245 to i64
  %250 = shl nuw nsw i64 %249, 3
  call void @llvm.memset.p0.i64(ptr align 8 %248, i8 0, i64 %250, i1 false), !tbaa !133
  br label %251

251:                                              ; preds = %247, %242
  %252 = load i32, ptr %33, align 8, !tbaa !139
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %251
  %255 = load ptr, ptr %60, align 8, !tbaa !136
  %256 = zext i32 %252 to i64
  %257 = shl nuw nsw i64 %256, 3
  call void @llvm.memset.p0.i64(ptr align 8 %255, i8 0, i64 %257, i1 false), !tbaa !133
  br label %258

258:                                              ; preds = %254, %251
  %259 = load ptr, ptr %36, align 8, !tbaa !325
  %260 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %259, i64 0, i32 4
  %261 = load i32, ptr %20, align 8, !tbaa !60
  %262 = sext i32 %261 to i64
  %263 = load ptr, ptr %260, align 8, !tbaa !350
  %264 = getelementptr inbounds ptr, ptr %263, i64 %262
  %265 = load ptr, ptr %264, align 8, !tbaa !33
  %266 = load i32, ptr %38, align 4, !tbaa !61
  %267 = sext i32 %266 to i64
  %268 = load ptr, ptr %265, align 8, !tbaa !144
  %269 = getelementptr inbounds i32, ptr %268, i64 %267
  %270 = load i32, ptr %269, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef %270)
          to label %271 unwind label %320

271:                                              ; preds = %258
  %272 = getelementptr inbounds i8, ptr %91, i64 312
  %273 = load ptr, ptr %4, align 8, !tbaa !41
  %274 = getelementptr inbounds ptr, ptr %273, i64 6
  %275 = load ptr, ptr %274, align 8
  invoke void %275(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %16, i32 noundef 0)
          to label %276 unwind label %320

276:                                              ; preds = %271
  br i1 %22, label %277, label %288

277:                                              ; preds = %276
  %278 = icmp eq i32 %95, 0
  br i1 %278, label %1019, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds i8, ptr %91, i64 216
  %281 = load ptr, ptr %280, align 8, !tbaa !131
  %282 = getelementptr inbounds i8, ptr %91, i64 480
  %283 = getelementptr inbounds i8, ptr %91, i64 144
  %284 = getelementptr inbounds i8, ptr %91, i64 160
  %285 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %286 = load ptr, ptr %16, align 8
  %287 = load ptr, ptr %60, align 8
  br label %881

288:                                              ; preds = %276
  %289 = load i32, ptr %71, align 8, !tbaa !145
  %290 = icmp eq i32 %289, 1
  %291 = load ptr, ptr %6, align 8, !tbaa !41
  br i1 %290, label %292, label %581

292:                                              ; preds = %288
  %293 = getelementptr inbounds ptr, ptr %291, i64 6
  %294 = load ptr, ptr %293, align 8
  invoke void %294(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %17, i32 noundef 0)
          to label %295 unwind label %320

295:                                              ; preds = %292
  %296 = icmp eq i32 %95, 0
  br i1 %296, label %1019, label %297

297:                                              ; preds = %295
  %298 = getelementptr inbounds i8, ptr %91, i64 216
  %299 = load ptr, ptr %298, align 8, !tbaa !131
  %300 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %301 = getelementptr inbounds i8, ptr %91, i64 144
  %302 = getelementptr inbounds i8, ptr %91, i64 160
  %303 = getelementptr inbounds i8, ptr %91, i64 480
  %304 = load ptr, ptr %16, align 8
  %305 = load ptr, ptr %60, align 8
  %306 = add nsw i64 %98, -1
  %307 = shl nuw nsw i64 %98, 3
  %308 = icmp ult i32 %93, 16
  %309 = trunc i64 %306 to i32
  %310 = icmp ugt i64 %306, 4294967295
  %311 = trunc i64 %306 to i32
  %312 = and i64 %98, 4294967292
  %313 = icmp eq i64 %312, %98
  br label %328

314:                                              ; preds = %1314, %9
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %1378

316:                                              ; preds = %1308, %31
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %1371

318:                                              ; preds = %77
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %1327

320:                                              ; preds = %258, %234, %225, %188, %180, %163, %146, %118, %581, %292, %271
  %321 = landingpad { ptr, i32 }
          cleanup
  br label %1327

322:                                              ; preds = %213
  %323 = landingpad { ptr, i32 }
          cleanup
  br label %326

324:                                              ; preds = %206
  %325 = landingpad { ptr, i32 }
          cleanup
  br label %326

326:                                              ; preds = %324, %322
  %327 = phi { ptr, i32 } [ %323, %322 ], [ %325, %324 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %21)
          to label %1327 unwind label %1390

328:                                              ; preds = %297, %515
  %329 = phi i64 [ 0, %297 ], [ %516, %515 ]
  %330 = shl nuw nsw i64 %329, 3
  %331 = add nuw i64 %307, %330
  %332 = add nuw i64 %330, 8
  %333 = trunc i64 %329 to i32
  %334 = getelementptr inbounds double, ptr %299, i64 %329
  %335 = load double, ptr %334, align 8, !tbaa !133
  br i1 %131, label %515, label %336

336:                                              ; preds = %328
  %337 = load ptr, ptr %96, align 8, !tbaa !63
  %338 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %337, i64 0, i32 2
  %339 = load i8, ptr %338, align 4, !tbaa !148, !range !182, !noundef !183
  %340 = icmp eq i8 %339, 0
  %341 = load ptr, ptr %301, align 8, !tbaa !140
  %342 = load i32, ptr %302, align 8, !tbaa !59
  %343 = getelementptr inbounds double, ptr %304, i64 %329
  br i1 %72, label %344, label %499

344:                                              ; preds = %336
  br i1 %340, label %345, label %392

345:                                              ; preds = %344
  %346 = load ptr, ptr %303, align 8, !tbaa !144
  %347 = trunc i64 %329 to i32
  br label %348

348:                                              ; preds = %362, %345
  %349 = phi i64 [ %369, %362 ], [ 0, %345 ]
  %350 = load ptr, ptr %17, align 8
  %351 = getelementptr inbounds double, ptr %350, i64 %329
  %352 = load ptr, ptr %58, align 8
  %353 = load i32, ptr %56, align 8
  %354 = trunc i64 %349 to i32
  %355 = mul i32 %353, %354
  %356 = getelementptr inbounds i32, ptr %346, i64 %349
  %357 = load i32, ptr %356, align 4, !tbaa !59
  %358 = mul i32 %342, %357
  %359 = add i32 %358, %347
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds double, ptr %341, i64 %360
  br label %371

362:                                              ; preds = %371
  %363 = load double, ptr %361, align 8, !tbaa !133
  %364 = load double, ptr %343, align 8, !tbaa !133
  %365 = fmul double %363, %364
  %366 = getelementptr inbounds double, ptr %305, i64 %349
  %367 = load double, ptr %366, align 8, !tbaa !133
  %368 = call double @llvm.fmuladd.f64(double %365, double %335, double %367)
  store double %368, ptr %366, align 8, !tbaa !133
  %369 = add nuw nsw i64 %349, 1
  %370 = icmp eq i64 %369, %98
  br i1 %370, label %515, label %348

371:                                              ; preds = %371, %348
  %372 = phi i64 [ %390, %371 ], [ 0, %348 ]
  %373 = getelementptr inbounds i32, ptr %346, i64 %372
  %374 = load i32, ptr %373, align 4, !tbaa !59
  %375 = load double, ptr %361, align 8, !tbaa !133
  %376 = mul i32 %374, %342
  %377 = add i32 %376, %347
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds double, ptr %341, i64 %378
  %380 = load double, ptr %379, align 8, !tbaa !133
  %381 = fmul double %375, %380
  %382 = fmul double %335, %381
  %383 = load double, ptr %351, align 8, !tbaa !133
  %384 = trunc i64 %372 to i32
  %385 = add i32 %355, %384
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds double, ptr %352, i64 %386
  %388 = load double, ptr %387, align 8, !tbaa !133
  %389 = call double @llvm.fmuladd.f64(double %382, double %383, double %388)
  store double %389, ptr %387, align 8, !tbaa !133
  %390 = add nuw nsw i64 %372, 1
  %391 = icmp eq i64 %390, %98
  br i1 %391, label %362, label %371

392:                                              ; preds = %344
  %393 = trunc i64 %329 to i32
  %394 = getelementptr i8, ptr %341, i64 %330
  %395 = getelementptr i8, ptr %341, i64 %331
  %396 = zext i32 %342 to i64
  %397 = getelementptr i8, ptr %341, i64 8
  %398 = icmp ne i32 %342, 1
  %399 = xor i32 %333, -1
  %400 = icmp ult i32 %399, %311
  %401 = insertelement <4 x double> poison, double %335, i64 0
  %402 = shufflevector <4 x double> %401, <4 x double> poison, <4 x i32> zeroinitializer
  br label %403

403:                                              ; preds = %471, %392
  %404 = phi i64 [ %478, %471 ], [ 0, %392 ]
  %405 = mul i64 %404, %396
  %406 = add i64 %329, %405
  %407 = shl i64 %406, 3
  %408 = and i64 %407, 34359738360
  %409 = getelementptr i8, ptr %341, i64 %408
  %410 = getelementptr i8, ptr %397, i64 %408
  %411 = load ptr, ptr %17, align 8
  %412 = getelementptr double, ptr %411, i64 %329
  %413 = load ptr, ptr %58, align 8
  %414 = load i32, ptr %56, align 8
  %415 = trunc i64 %404 to i32
  %416 = mul i32 %414, %415
  %417 = mul i32 %342, %415
  %418 = add i32 %417, %393
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds double, ptr %341, i64 %419
  br i1 %308, label %469, label %421

421:                                              ; preds = %403
  %422 = xor i32 %416, -1
  %423 = icmp ult i32 %422, %309
  %424 = or i1 %423, %310
  %425 = or i1 %398, %424
  %426 = or i1 %400, %425
  br i1 %426, label %469, label %427

427:                                              ; preds = %421
  %428 = zext i32 %416 to i64
  %429 = shl nuw nsw i64 %428, 3
  %430 = getelementptr i8, ptr %413, i64 %429
  %431 = getelementptr i8, ptr %413, i64 %307
  %432 = getelementptr i8, ptr %431, i64 %429
  %433 = getelementptr i8, ptr %411, i64 %332
  %434 = icmp ult ptr %394, %432
  %435 = icmp ult ptr %430, %395
  %436 = and i1 %434, %435
  %437 = icmp ult ptr %409, %432
  %438 = icmp ult ptr %430, %410
  %439 = and i1 %437, %438
  %440 = or i1 %436, %439
  %441 = icmp ult ptr %412, %432
  %442 = icmp ult ptr %430, %433
  %443 = and i1 %441, %442
  %444 = or i1 %440, %443
  br i1 %444, label %469, label %445

445:                                              ; preds = %427
  %446 = load double, ptr %420, align 8, !tbaa !133, !alias.scope !395, !noalias !398
  %447 = insertelement <4 x double> poison, double %446, i64 0
  %448 = shufflevector <4 x double> %447, <4 x double> poison, <4 x i32> zeroinitializer
  %449 = load double, ptr %412, align 8, !tbaa !133, !alias.scope !400, !noalias !398
  %450 = insertelement <4 x double> poison, double %449, i64 0
  %451 = shufflevector <4 x double> %450, <4 x double> poison, <4 x i32> zeroinitializer
  br label %452

452:                                              ; preds = %452, %445
  %453 = phi i64 [ 0, %445 ], [ %466, %452 ]
  %454 = trunc i64 %453 to i32
  %455 = add i64 %453, %329
  %456 = and i64 %455, 4294967295
  %457 = getelementptr inbounds double, ptr %341, i64 %456
  %458 = load <4 x double>, ptr %457, align 8, !tbaa !133, !alias.scope !402, !noalias !398
  %459 = fmul <4 x double> %448, %458
  %460 = fmul <4 x double> %402, %459
  %461 = add i32 %416, %454
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds double, ptr %413, i64 %462
  %464 = load <4 x double>, ptr %463, align 8, !tbaa !133, !alias.scope !398
  %465 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %460, <4 x double> %451, <4 x double> %464)
  store <4 x double> %465, ptr %463, align 8, !tbaa !133, !alias.scope !398
  %466 = add nuw i64 %453, 4
  %467 = icmp eq i64 %466, %312
  br i1 %467, label %468, label %452, !llvm.loop !404

468:                                              ; preds = %452
  br i1 %313, label %471, label %469

469:                                              ; preds = %427, %421, %403, %468
  %470 = phi i64 [ 0, %427 ], [ 0, %421 ], [ 0, %403 ], [ %312, %468 ]
  br label %480

471:                                              ; preds = %480, %468
  %472 = load double, ptr %420, align 8, !tbaa !133
  %473 = load double, ptr %343, align 8, !tbaa !133
  %474 = fmul double %472, %473
  %475 = getelementptr inbounds double, ptr %305, i64 %404
  %476 = load double, ptr %475, align 8, !tbaa !133
  %477 = call double @llvm.fmuladd.f64(double %474, double %335, double %476)
  store double %477, ptr %475, align 8, !tbaa !133
  %478 = add nuw nsw i64 %404, 1
  %479 = icmp eq i64 %478, %98
  br i1 %479, label %515, label %403

480:                                              ; preds = %469, %480
  %481 = phi i64 [ %497, %480 ], [ %470, %469 ]
  %482 = load double, ptr %420, align 8, !tbaa !133
  %483 = trunc i64 %481 to i32
  %484 = mul i32 %342, %483
  %485 = add i32 %484, %393
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds double, ptr %341, i64 %486
  %488 = load double, ptr %487, align 8, !tbaa !133
  %489 = fmul double %482, %488
  %490 = fmul double %335, %489
  %491 = load double, ptr %412, align 8, !tbaa !133
  %492 = add i32 %416, %483
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds double, ptr %413, i64 %493
  %495 = load double, ptr %494, align 8, !tbaa !133
  %496 = call double @llvm.fmuladd.f64(double %490, double %491, double %495)
  store double %496, ptr %494, align 8, !tbaa !133
  %497 = add nuw nsw i64 %481, 1
  %498 = icmp eq i64 %497, %98
  br i1 %498, label %471, label %480, !llvm.loop !405

499:                                              ; preds = %336
  %500 = load ptr, ptr %300, align 8, !tbaa !184
  %501 = trunc i64 %329 to i32
  %502 = trunc i64 %329 to i32
  %503 = trunc i64 %329 to i32
  br label %504

504:                                              ; preds = %499, %567
  %505 = phi i64 [ 0, %499 ], [ %579, %567 ]
  %506 = load ptr, ptr %17, align 8
  %507 = getelementptr inbounds double, ptr %506, i64 %329
  %508 = load ptr, ptr %58, align 8
  %509 = load i32, ptr %56, align 8
  %510 = trunc i64 %505 to i32
  %511 = mul i32 %509, %510
  %512 = getelementptr inbounds %"struct.std::pair.263", ptr %500, i64 %505
  %513 = mul i32 %342, %510
  %514 = add i32 %513, %501
  br label %523

515:                                              ; preds = %567, %471, %362, %328
  %516 = add nuw nsw i64 %329, 1
  %517 = icmp eq i64 %516, %172
  br i1 %517, label %1019, label %328

518:                                              ; preds = %564
  br i1 %340, label %519, label %567

519:                                              ; preds = %518
  %520 = load ptr, ptr %303, align 8, !tbaa !144
  %521 = getelementptr inbounds i32, ptr %520, i64 %505
  %522 = load i32, ptr %521, align 4, !tbaa !59
  br label %567

523:                                              ; preds = %504, %564
  %524 = phi i64 [ 0, %504 ], [ %565, %564 ]
  %525 = load i64, ptr %512, align 4
  %526 = getelementptr inbounds %"struct.std::pair.263", ptr %500, i64 %524
  %527 = load i64, ptr %526, align 4
  %528 = trunc i64 %525 to i32
  %529 = trunc i64 %527 to i32
  %530 = icmp eq i32 %528, %529
  br i1 %530, label %531, label %564

531:                                              ; preds = %523
  br i1 %340, label %534, label %532

532:                                              ; preds = %531
  %533 = trunc i64 %524 to i32
  br label %543

534:                                              ; preds = %531
  %535 = load ptr, ptr %303, align 8, !tbaa !144
  %536 = getelementptr inbounds i32, ptr %535, i64 %505
  %537 = load i32, ptr %536, align 4, !tbaa !59
  %538 = mul i32 %342, %537
  %539 = add i32 %538, %502
  %540 = getelementptr inbounds i32, ptr %535, i64 %524
  %541 = load i32, ptr %540, align 4, !tbaa !59
  %542 = trunc i64 %524 to i32
  br label %543

543:                                              ; preds = %534, %532
  %544 = phi i32 [ %542, %534 ], [ %533, %532 ]
  %545 = phi i32 [ %502, %534 ], [ %501, %532 ]
  %546 = phi i32 [ %539, %534 ], [ %514, %532 ]
  %547 = phi i32 [ %541, %534 ], [ %533, %532 ]
  %548 = zext i32 %546 to i64
  %549 = getelementptr inbounds double, ptr %341, i64 %548
  %550 = load double, ptr %549, align 8, !tbaa !133
  %551 = mul i32 %547, %342
  %552 = add i32 %551, %545
  %553 = zext i32 %552 to i64
  %554 = getelementptr inbounds double, ptr %341, i64 %553
  %555 = load double, ptr %554, align 8, !tbaa !133
  %556 = fmul double %550, %555
  %557 = fmul double %335, %556
  %558 = load double, ptr %507, align 8, !tbaa !133
  %559 = add i32 %511, %544
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds double, ptr %508, i64 %560
  %562 = load double, ptr %561, align 8, !tbaa !133
  %563 = call double @llvm.fmuladd.f64(double %557, double %558, double %562)
  store double %563, ptr %561, align 8, !tbaa !133
  br label %564

564:                                              ; preds = %523, %543
  %565 = add nuw nsw i64 %524, 1
  %566 = icmp eq i64 %565, %98
  br i1 %566, label %518, label %523

567:                                              ; preds = %519, %518
  %568 = phi i32 [ %522, %519 ], [ %510, %518 ]
  %569 = mul i32 %342, %568
  %570 = add i32 %569, %503
  %571 = zext i32 %570 to i64
  %572 = getelementptr inbounds double, ptr %341, i64 %571
  %573 = load double, ptr %572, align 8, !tbaa !133
  %574 = load double, ptr %343, align 8, !tbaa !133
  %575 = fmul double %573, %574
  %576 = getelementptr inbounds double, ptr %305, i64 %505
  %577 = load double, ptr %576, align 8, !tbaa !133
  %578 = call double @llvm.fmuladd.f64(double %575, double %335, double %577)
  store double %578, ptr %576, align 8, !tbaa !133
  %579 = add nuw nsw i64 %505, 1
  %580 = icmp eq i64 %579, %98
  br i1 %580, label %515, label %504

581:                                              ; preds = %288
  %582 = getelementptr inbounds ptr, ptr %291, i64 7
  %583 = load ptr, ptr %582, align 8
  invoke void %583(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %584 unwind label %320

584:                                              ; preds = %581
  %585 = icmp eq i32 %95, 0
  br i1 %585, label %1019, label %586

586:                                              ; preds = %584
  %587 = getelementptr inbounds i8, ptr %91, i64 216
  %588 = load ptr, ptr %587, align 8, !tbaa !131
  %589 = getelementptr inbounds i8, ptr %91, i64 480
  %590 = load ptr, ptr %16, align 8
  %591 = load ptr, ptr %60, align 8
  br i1 %131, label %1128, label %592

592:                                              ; preds = %586
  %593 = getelementptr inbounds i8, ptr %91, i64 160
  %594 = getelementptr inbounds i8, ptr %91, i64 144
  %595 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %596 = load ptr, ptr %595, align 8, !tbaa !184
  %597 = load ptr, ptr %96, align 8, !tbaa !63
  %598 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %597, i64 0, i32 2
  %599 = load i8, ptr %598, align 4, !tbaa !148, !range !182, !noundef !183
  %600 = icmp eq i8 %599, 0
  %601 = load ptr, ptr %594, align 8, !tbaa !140
  %602 = load i32, ptr %593, align 8, !tbaa !59
  br i1 %72, label %603, label %793

603:                                              ; preds = %592
  %604 = add nsw i64 %98, -1
  %605 = shl nuw nsw i64 %98, 3
  %606 = zext i32 %602 to i64
  %607 = getelementptr i8, ptr %601, i64 8
  %608 = icmp ult i32 %93, 16
  %609 = icmp ne i32 %602, 1
  %610 = trunc i64 %604 to i32
  %611 = icmp ugt i64 %604, 4294967295
  %612 = trunc i64 %604 to i32
  %613 = and i64 %98, 4294967292
  %614 = icmp eq i64 %613, %98
  br label %615

615:                                              ; preds = %603, %790
  %616 = phi i64 [ %791, %790 ], [ 0, %603 ]
  %617 = shl nuw nsw i64 %616, 3
  %618 = getelementptr i8, ptr %601, i64 %617
  %619 = add nuw i64 %605, %617
  %620 = getelementptr i8, ptr %601, i64 %619
  %621 = trunc i64 %616 to i32
  %622 = getelementptr inbounds double, ptr %588, i64 %616
  %623 = load double, ptr %622, align 8, !tbaa !133
  %624 = getelementptr inbounds double, ptr %590, i64 %616
  br i1 %600, label %625, label %677

625:                                              ; preds = %615
  %626 = load ptr, ptr %589, align 8, !tbaa !144
  %627 = trunc i64 %616 to i32
  br label %628

628:                                              ; preds = %647, %625
  %629 = phi i64 [ %654, %647 ], [ 0, %625 ]
  %630 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %629
  %631 = load i64, ptr %630, align 4
  %632 = load ptr, ptr %18, align 8
  %633 = getelementptr inbounds %"class.dealii::Vector", ptr %632, i64 %616, i32 3
  %634 = and i64 %631, 4294967295
  %635 = load ptr, ptr %58, align 8
  %636 = load i32, ptr %56, align 8
  %637 = trunc i64 %629 to i32
  %638 = mul i32 %636, %637
  %639 = load ptr, ptr %633, align 8, !tbaa !136
  %640 = getelementptr inbounds double, ptr %639, i64 %634
  %641 = getelementptr inbounds i32, ptr %626, i64 %629
  %642 = load i32, ptr %641, align 4, !tbaa !59
  %643 = mul i32 %602, %642
  %644 = add i32 %643, %627
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds double, ptr %601, i64 %645
  br label %656

647:                                              ; preds = %656
  %648 = load double, ptr %646, align 8, !tbaa !133
  %649 = load double, ptr %624, align 8, !tbaa !133
  %650 = fmul double %648, %649
  %651 = getelementptr inbounds double, ptr %591, i64 %629
  %652 = load double, ptr %651, align 8, !tbaa !133
  %653 = call double @llvm.fmuladd.f64(double %650, double %623, double %652)
  store double %653, ptr %651, align 8, !tbaa !133
  %654 = add nuw nsw i64 %629, 1
  %655 = icmp eq i64 %654, %98
  br i1 %655, label %790, label %628

656:                                              ; preds = %656, %628
  %657 = phi i64 [ %675, %656 ], [ 0, %628 ]
  %658 = getelementptr inbounds i32, ptr %626, i64 %657
  %659 = load i32, ptr %658, align 4, !tbaa !59
  %660 = load double, ptr %646, align 8, !tbaa !133
  %661 = mul i32 %659, %602
  %662 = add i32 %661, %627
  %663 = zext i32 %662 to i64
  %664 = getelementptr inbounds double, ptr %601, i64 %663
  %665 = load double, ptr %664, align 8, !tbaa !133
  %666 = fmul double %660, %665
  %667 = fmul double %623, %666
  %668 = load double, ptr %640, align 8, !tbaa !133
  %669 = trunc i64 %657 to i32
  %670 = add i32 %638, %669
  %671 = zext i32 %670 to i64
  %672 = getelementptr inbounds double, ptr %635, i64 %671
  %673 = load double, ptr %672, align 8, !tbaa !133
  %674 = call double @llvm.fmuladd.f64(double %667, double %668, double %673)
  store double %674, ptr %672, align 8, !tbaa !133
  %675 = add nuw nsw i64 %657, 1
  %676 = icmp eq i64 %675, %98
  br i1 %676, label %647, label %656

677:                                              ; preds = %615
  %678 = trunc i64 %616 to i32
  %679 = xor i32 %621, -1
  %680 = icmp ult i32 %679, %612
  %681 = insertelement <4 x double> poison, double %623, i64 0
  %682 = shufflevector <4 x double> %681, <4 x double> poison, <4 x i32> zeroinitializer
  br label %683

683:                                              ; preds = %758, %677
  %684 = phi i64 [ %769, %758 ], [ 0, %677 ]
  %685 = mul i64 %684, %606
  %686 = add i64 %616, %685
  %687 = shl i64 %686, 3
  %688 = and i64 %687, 34359738360
  %689 = getelementptr i8, ptr %601, i64 %688
  %690 = getelementptr i8, ptr %607, i64 %688
  %691 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %684
  %692 = load i64, ptr %691, align 4
  %693 = load ptr, ptr %18, align 8
  %694 = getelementptr inbounds %"class.dealii::Vector", ptr %693, i64 %616, i32 3
  %695 = and i64 %692, 4294967295
  %696 = load ptr, ptr %58, align 8
  %697 = load i32, ptr %56, align 8
  %698 = trunc i64 %684 to i32
  %699 = mul i32 %697, %698
  %700 = load ptr, ptr %694, align 8, !tbaa !136
  %701 = getelementptr double, ptr %700, i64 %695
  %702 = mul i32 %602, %698
  %703 = add i32 %702, %678
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds double, ptr %601, i64 %704
  br i1 %608, label %756, label %706

706:                                              ; preds = %683
  %707 = xor i32 %699, -1
  %708 = icmp ult i32 %707, %610
  %709 = or i1 %708, %611
  %710 = or i1 %609, %709
  %711 = or i1 %680, %710
  br i1 %711, label %756, label %712

712:                                              ; preds = %706
  %713 = zext i32 %699 to i64
  %714 = shl nuw nsw i64 %713, 3
  %715 = getelementptr i8, ptr %696, i64 %714
  %716 = getelementptr i8, ptr %696, i64 %605
  %717 = getelementptr i8, ptr %716, i64 %714
  %718 = getelementptr i8, ptr %700, i64 8
  %719 = shl nuw nsw i64 %695, 3
  %720 = getelementptr i8, ptr %718, i64 %719
  %721 = icmp ult ptr %618, %717
  %722 = icmp ult ptr %715, %620
  %723 = and i1 %721, %722
  %724 = icmp ult ptr %689, %717
  %725 = icmp ult ptr %715, %690
  %726 = and i1 %724, %725
  %727 = or i1 %723, %726
  %728 = icmp ult ptr %701, %717
  %729 = icmp ult ptr %715, %720
  %730 = and i1 %728, %729
  %731 = or i1 %727, %730
  br i1 %731, label %756, label %732

732:                                              ; preds = %712
  %733 = load double, ptr %705, align 8, !tbaa !133, !alias.scope !406, !noalias !409
  %734 = insertelement <4 x double> poison, double %733, i64 0
  %735 = shufflevector <4 x double> %734, <4 x double> poison, <4 x i32> zeroinitializer
  %736 = load double, ptr %701, align 8, !tbaa !133, !alias.scope !411, !noalias !409
  %737 = insertelement <4 x double> poison, double %736, i64 0
  %738 = shufflevector <4 x double> %737, <4 x double> poison, <4 x i32> zeroinitializer
  br label %739

739:                                              ; preds = %739, %732
  %740 = phi i64 [ 0, %732 ], [ %753, %739 ]
  %741 = trunc i64 %740 to i32
  %742 = add i64 %740, %616
  %743 = and i64 %742, 4294967295
  %744 = getelementptr inbounds double, ptr %601, i64 %743
  %745 = load <4 x double>, ptr %744, align 8, !tbaa !133, !alias.scope !413, !noalias !409
  %746 = fmul <4 x double> %735, %745
  %747 = fmul <4 x double> %682, %746
  %748 = add i32 %699, %741
  %749 = zext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %696, i64 %749
  %751 = load <4 x double>, ptr %750, align 8, !tbaa !133, !alias.scope !409
  %752 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %747, <4 x double> %738, <4 x double> %751)
  store <4 x double> %752, ptr %750, align 8, !tbaa !133, !alias.scope !409
  %753 = add nuw i64 %740, 4
  %754 = icmp eq i64 %753, %613
  br i1 %754, label %755, label %739, !llvm.loop !415

755:                                              ; preds = %739
  br i1 %614, label %758, label %756

756:                                              ; preds = %712, %706, %683, %755
  %757 = phi i64 [ 0, %712 ], [ 0, %706 ], [ 0, %683 ], [ %613, %755 ]
  br label %771

758:                                              ; preds = %771, %755
  %759 = mul i32 %602, %698
  %760 = add i32 %759, %678
  %761 = zext i32 %760 to i64
  %762 = getelementptr inbounds double, ptr %601, i64 %761
  %763 = load double, ptr %762, align 8, !tbaa !133
  %764 = load double, ptr %624, align 8, !tbaa !133
  %765 = fmul double %763, %764
  %766 = getelementptr inbounds double, ptr %591, i64 %684
  %767 = load double, ptr %766, align 8, !tbaa !133
  %768 = call double @llvm.fmuladd.f64(double %765, double %623, double %767)
  store double %768, ptr %766, align 8, !tbaa !133
  %769 = add nuw nsw i64 %684, 1
  %770 = icmp eq i64 %769, %98
  br i1 %770, label %790, label %683

771:                                              ; preds = %756, %771
  %772 = phi i64 [ %788, %771 ], [ %757, %756 ]
  %773 = load double, ptr %705, align 8, !tbaa !133
  %774 = trunc i64 %772 to i32
  %775 = mul i32 %602, %774
  %776 = add i32 %775, %678
  %777 = zext i32 %776 to i64
  %778 = getelementptr inbounds double, ptr %601, i64 %777
  %779 = load double, ptr %778, align 8, !tbaa !133
  %780 = fmul double %773, %779
  %781 = fmul double %623, %780
  %782 = load double, ptr %701, align 8, !tbaa !133
  %783 = add i32 %699, %774
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds double, ptr %696, i64 %784
  %786 = load double, ptr %785, align 8, !tbaa !133
  %787 = call double @llvm.fmuladd.f64(double %781, double %782, double %786)
  store double %787, ptr %785, align 8, !tbaa !133
  %788 = add nuw nsw i64 %772, 1
  %789 = icmp eq i64 %788, %98
  br i1 %789, label %758, label %771, !llvm.loop !416

790:                                              ; preds = %758, %647
  %791 = add nuw nsw i64 %616, 1
  %792 = icmp eq i64 %791, %172
  br i1 %792, label %1019, label %615

793:                                              ; preds = %592, %878
  %794 = phi i64 [ %879, %878 ], [ 0, %592 ]
  %795 = getelementptr inbounds double, ptr %588, i64 %794
  %796 = load double, ptr %795, align 8, !tbaa !133
  %797 = getelementptr inbounds double, ptr %590, i64 %794
  %798 = trunc i64 %794 to i32
  %799 = trunc i64 %794 to i32
  %800 = trunc i64 %794 to i32
  br label %801

801:                                              ; preds = %793, %820
  %802 = phi i64 [ 0, %793 ], [ %832, %820 ]
  %803 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %802
  %804 = load i64, ptr %803, align 4
  %805 = trunc i64 %804 to i32
  %806 = load ptr, ptr %18, align 8
  %807 = getelementptr inbounds %"class.dealii::Vector", ptr %806, i64 %794, i32 3
  %808 = and i64 %804, 4294967295
  %809 = load ptr, ptr %58, align 8
  %810 = load i32, ptr %56, align 8
  %811 = trunc i64 %802 to i32
  %812 = mul i32 %810, %811
  %813 = mul i32 %602, %811
  %814 = add i32 %813, %798
  br label %834

815:                                              ; preds = %875
  br i1 %600, label %816, label %820

816:                                              ; preds = %815
  %817 = load ptr, ptr %589, align 8, !tbaa !144
  %818 = getelementptr inbounds i32, ptr %817, i64 %802
  %819 = load i32, ptr %818, align 4, !tbaa !59
  br label %820

820:                                              ; preds = %816, %815
  %821 = phi i32 [ %819, %816 ], [ %811, %815 ]
  %822 = mul i32 %602, %821
  %823 = add i32 %822, %800
  %824 = zext i32 %823 to i64
  %825 = getelementptr inbounds double, ptr %601, i64 %824
  %826 = load double, ptr %825, align 8, !tbaa !133
  %827 = load double, ptr %797, align 8, !tbaa !133
  %828 = fmul double %826, %827
  %829 = getelementptr inbounds double, ptr %591, i64 %802
  %830 = load double, ptr %829, align 8, !tbaa !133
  %831 = call double @llvm.fmuladd.f64(double %828, double %796, double %830)
  store double %831, ptr %829, align 8, !tbaa !133
  %832 = add nuw nsw i64 %802, 1
  %833 = icmp eq i64 %832, %98
  br i1 %833, label %878, label %801

834:                                              ; preds = %875, %801
  %835 = phi i64 [ %876, %875 ], [ 0, %801 ]
  %836 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %835
  %837 = load i64, ptr %836, align 4
  %838 = trunc i64 %837 to i32
  %839 = icmp eq i32 %838, %805
  br i1 %839, label %840, label %875

840:                                              ; preds = %834
  br i1 %600, label %843, label %841

841:                                              ; preds = %840
  %842 = trunc i64 %835 to i32
  br label %852

843:                                              ; preds = %840
  %844 = load ptr, ptr %589, align 8, !tbaa !144
  %845 = getelementptr inbounds i32, ptr %844, i64 %802
  %846 = load i32, ptr %845, align 4, !tbaa !59
  %847 = mul i32 %602, %846
  %848 = add i32 %847, %799
  %849 = getelementptr inbounds i32, ptr %844, i64 %835
  %850 = load i32, ptr %849, align 4, !tbaa !59
  %851 = trunc i64 %835 to i32
  br label %852

852:                                              ; preds = %843, %841
  %853 = phi i32 [ %851, %843 ], [ %842, %841 ]
  %854 = phi i32 [ %799, %843 ], [ %798, %841 ]
  %855 = phi i32 [ %848, %843 ], [ %814, %841 ]
  %856 = phi i32 [ %850, %843 ], [ %842, %841 ]
  %857 = zext i32 %855 to i64
  %858 = getelementptr inbounds double, ptr %601, i64 %857
  %859 = load double, ptr %858, align 8, !tbaa !133
  %860 = mul i32 %856, %602
  %861 = add i32 %860, %854
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds double, ptr %601, i64 %862
  %864 = load double, ptr %863, align 8, !tbaa !133
  %865 = fmul double %859, %864
  %866 = fmul double %796, %865
  %867 = load ptr, ptr %807, align 8, !tbaa !136
  %868 = getelementptr inbounds double, ptr %867, i64 %808
  %869 = load double, ptr %868, align 8, !tbaa !133
  %870 = add i32 %812, %853
  %871 = zext i32 %870 to i64
  %872 = getelementptr inbounds double, ptr %809, i64 %871
  %873 = load double, ptr %872, align 8, !tbaa !133
  %874 = call double @llvm.fmuladd.f64(double %866, double %869, double %873)
  store double %874, ptr %872, align 8, !tbaa !133
  br label %875

875:                                              ; preds = %852, %834
  %876 = add nuw nsw i64 %835, 1
  %877 = icmp eq i64 %876, %98
  br i1 %877, label %815, label %834

878:                                              ; preds = %820
  %879 = add nuw nsw i64 %794, 1
  %880 = icmp eq i64 %879, %172
  br i1 %880, label %1019, label %793

881:                                              ; preds = %279, %1016
  %882 = phi i64 [ 0, %279 ], [ %1017, %1016 ]
  %883 = getelementptr inbounds double, ptr %281, i64 %882
  %884 = load double, ptr %883, align 8, !tbaa !133
  br i1 %131, label %1016, label %885

885:                                              ; preds = %881
  %886 = load ptr, ptr %96, align 8, !tbaa !63
  %887 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %886, i64 0, i32 2
  %888 = load i8, ptr %887, align 4, !tbaa !148, !range !182, !noundef !183
  %889 = icmp eq i8 %888, 0
  %890 = load ptr, ptr %283, align 8, !tbaa !140
  %891 = load i32, ptr %284, align 8, !tbaa !59
  %892 = getelementptr inbounds double, ptr %286, i64 %882
  %893 = trunc i64 %882 to i32
  br label %894

894:                                              ; preds = %939, %885
  %895 = phi i64 [ %945, %939 ], [ 0, %885 ]
  %896 = trunc i64 %895 to i32
  br i1 %889, label %897, label %901

897:                                              ; preds = %894
  %898 = load ptr, ptr %282, align 8, !tbaa !144
  %899 = getelementptr inbounds i32, ptr %898, i64 %895
  %900 = load i32, ptr %899, align 4, !tbaa !59
  br label %901

901:                                              ; preds = %897, %894
  %902 = phi i32 [ %900, %897 ], [ %896, %894 ]
  %903 = mul i32 %891, %902
  %904 = add i32 %903, %893
  %905 = zext i32 %904 to i64
  %906 = getelementptr inbounds double, ptr %890, i64 %905
  %907 = load double, ptr %906, align 8, !tbaa !133
  %908 = load ptr, ptr %58, align 8
  %909 = load i32, ptr %56, align 8
  %910 = mul i32 %909, %896
  br i1 %72, label %947, label %936

911:                                              ; preds = %977, %933
  %912 = phi i64 [ 0, %977 ], [ %934, %933 ]
  %913 = load i64, ptr %938, align 4
  %914 = getelementptr inbounds %"struct.std::pair.263", ptr %937, i64 %912
  %915 = load i64, ptr %914, align 4
  %916 = trunc i64 %913 to i32
  %917 = trunc i64 %915 to i32
  %918 = icmp eq i32 %916, %917
  br i1 %918, label %919, label %933

919:                                              ; preds = %911
  %920 = load double, ptr %981, align 8, !tbaa !133
  %921 = trunc i64 %912 to i32
  %922 = mul i32 %891, %921
  %923 = add i32 %922, %893
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds double, ptr %890, i64 %924
  %926 = load double, ptr %925, align 8, !tbaa !133
  %927 = fmul double %920, %926
  %928 = add i32 %910, %921
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds double, ptr %908, i64 %929
  %931 = load double, ptr %930, align 8, !tbaa !133
  %932 = call double @llvm.fmuladd.f64(double %927, double %884, double %931)
  store double %932, ptr %930, align 8, !tbaa !133
  br label %933

933:                                              ; preds = %919, %911
  %934 = add nuw nsw i64 %912, 1
  %935 = icmp eq i64 %934, %98
  br i1 %935, label %939, label %911

936:                                              ; preds = %901
  %937 = load ptr, ptr %285, align 8, !tbaa !184
  %938 = getelementptr inbounds %"struct.std::pair.263", ptr %937, i64 %895
  br i1 %889, label %982, label %977

939:                                              ; preds = %933, %1013, %956
  %940 = load double, ptr %892, align 8, !tbaa !133
  %941 = fmul double %907, %940
  %942 = getelementptr inbounds double, ptr %287, i64 %895
  %943 = load double, ptr %942, align 8, !tbaa !133
  %944 = call double @llvm.fmuladd.f64(double %941, double %884, double %943)
  store double %944, ptr %942, align 8, !tbaa !133
  %945 = add nuw nsw i64 %895, 1
  %946 = icmp eq i64 %945, %98
  br i1 %946, label %1016, label %894

947:                                              ; preds = %901, %956
  %948 = phi i64 [ %975, %956 ], [ 0, %901 ]
  %949 = trunc i64 %948 to i32
  br i1 %889, label %950, label %956

950:                                              ; preds = %947
  %951 = load ptr, ptr %282, align 8, !tbaa !144
  %952 = getelementptr inbounds i32, ptr %951, i64 %895
  %953 = load i32, ptr %952, align 4, !tbaa !59
  %954 = getelementptr inbounds i32, ptr %951, i64 %948
  %955 = load i32, ptr %954, align 4, !tbaa !59
  br label %956

956:                                              ; preds = %950, %947
  %957 = phi i32 [ %953, %950 ], [ %896, %947 ]
  %958 = phi i32 [ %955, %950 ], [ %949, %947 ]
  %959 = mul i32 %957, %891
  %960 = add i32 %959, %893
  %961 = zext i32 %960 to i64
  %962 = getelementptr inbounds double, ptr %890, i64 %961
  %963 = load double, ptr %962, align 8, !tbaa !133
  %964 = mul i32 %958, %891
  %965 = add i32 %964, %893
  %966 = zext i32 %965 to i64
  %967 = getelementptr inbounds double, ptr %890, i64 %966
  %968 = load double, ptr %967, align 8, !tbaa !133
  %969 = fmul double %963, %968
  %970 = add i32 %910, %949
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds double, ptr %908, i64 %971
  %973 = load double, ptr %972, align 8, !tbaa !133
  %974 = call double @llvm.fmuladd.f64(double %969, double %884, double %973)
  store double %974, ptr %972, align 8, !tbaa !133
  %975 = add nuw nsw i64 %948, 1
  %976 = icmp eq i64 %975, %98
  br i1 %976, label %939, label %947

977:                                              ; preds = %936
  %978 = mul i32 %891, %896
  %979 = add i32 %978, %893
  %980 = zext i32 %979 to i64
  %981 = getelementptr inbounds double, ptr %890, i64 %980
  br label %911

982:                                              ; preds = %936, %1013
  %983 = phi i64 [ %1014, %1013 ], [ 0, %936 ]
  %984 = load i64, ptr %938, align 4
  %985 = getelementptr inbounds %"struct.std::pair.263", ptr %937, i64 %983
  %986 = load i64, ptr %985, align 4
  %987 = trunc i64 %984 to i32
  %988 = trunc i64 %986 to i32
  %989 = icmp eq i32 %987, %988
  br i1 %989, label %990, label %1013

990:                                              ; preds = %982
  %991 = load ptr, ptr %282, align 8, !tbaa !144
  %992 = getelementptr inbounds i32, ptr %991, i64 %895
  %993 = load i32, ptr %992, align 4, !tbaa !59
  %994 = getelementptr inbounds i32, ptr %991, i64 %983
  %995 = load i32, ptr %994, align 4, !tbaa !59
  %996 = mul i32 %993, %891
  %997 = add i32 %996, %893
  %998 = zext i32 %997 to i64
  %999 = getelementptr inbounds double, ptr %890, i64 %998
  %1000 = load double, ptr %999, align 8, !tbaa !133
  %1001 = mul i32 %995, %891
  %1002 = add i32 %1001, %893
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds double, ptr %890, i64 %1003
  %1005 = load double, ptr %1004, align 8, !tbaa !133
  %1006 = fmul double %1000, %1005
  %1007 = trunc i64 %983 to i32
  %1008 = add i32 %910, %1007
  %1009 = zext i32 %1008 to i64
  %1010 = getelementptr inbounds double, ptr %908, i64 %1009
  %1011 = load double, ptr %1010, align 8, !tbaa !133
  %1012 = call double @llvm.fmuladd.f64(double %1006, double %884, double %1011)
  store double %1012, ptr %1010, align 8, !tbaa !133
  br label %1013

1013:                                             ; preds = %990, %982
  %1014 = add nuw nsw i64 %983, 1
  %1015 = icmp eq i64 %1014, %98
  br i1 %1015, label %939, label %982

1016:                                             ; preds = %939, %881
  %1017 = add nuw nsw i64 %882, 1
  %1018 = icmp eq i64 %1017, %172
  br i1 %1018, label %1019, label %881

1019:                                             ; preds = %878, %790, %515, %1016, %584, %295, %277
  br i1 %131, label %1128, label %1020

1020:                                             ; preds = %1019
  %1021 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  br i1 %72, label %1022, label %1060

1022:                                             ; preds = %1020, %1055
  %1023 = phi i64 [ %1056, %1055 ], [ 0, %1020 ]
  %1024 = trunc i64 %1023 to i32
  br label %1025

1025:                                             ; preds = %1052, %1022
  %1026 = phi i64 [ %1053, %1052 ], [ 0, %1022 ]
  %1027 = load ptr, ptr %58, align 8, !tbaa !140
  %1028 = load i32, ptr %56, align 8, !tbaa !59
  %1029 = mul i32 %1028, %1024
  %1030 = trunc i64 %1026 to i32
  %1031 = add i32 %1029, %1030
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds double, ptr %1027, i64 %1032
  %1034 = load double, ptr %1033, align 8, !tbaa !133
  %1035 = fcmp oeq double %1034, 0.000000e+00
  br i1 %1035, label %1052, label %1036

1036:                                             ; preds = %1025
  %1037 = load ptr, ptr %19, align 8, !tbaa !144
  %1038 = getelementptr inbounds i32, ptr %1037, i64 %1026
  %1039 = load i32, ptr %1038, align 4, !tbaa !59
  %1040 = getelementptr inbounds i32, ptr %1037, i64 %1023
  %1041 = load i32, ptr %1040, align 4, !tbaa !59
  %1042 = load ptr, ptr %73, align 8, !tbaa !383
  %1043 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1042, i32 noundef %1041, i32 noundef %1039)
          to label %1044 unwind label %1058

1044:                                             ; preds = %1036
  %1045 = icmp eq i32 %1043, -1
  br i1 %1045, label %1052, label %1046

1046:                                             ; preds = %1044
  %1047 = load ptr, ptr %74, align 8, !tbaa !385
  %1048 = zext i32 %1043 to i64
  %1049 = getelementptr inbounds double, ptr %1047, i64 %1048
  %1050 = load double, ptr %1049, align 8, !tbaa !133
  %1051 = fadd double %1034, %1050
  store double %1051, ptr %1049, align 8, !tbaa !133
  br label %1052

1052:                                             ; preds = %1046, %1044, %1025
  %1053 = add nuw nsw i64 %1026, 1
  %1054 = icmp eq i64 %1053, %98
  br i1 %1054, label %1055, label %1025

1055:                                             ; preds = %1052
  %1056 = add nuw nsw i64 %1023, 1
  %1057 = icmp eq i64 %1056, %98
  br i1 %1057, label %1107, label %1022

1058:                                             ; preds = %1036
  %1059 = landingpad { ptr, i32 }
          cleanup
  br label %1327

1060:                                             ; preds = %1020, %1102
  %1061 = phi i64 [ %1103, %1102 ], [ 0, %1020 ]
  %1062 = trunc i64 %1061 to i32
  br label %1063

1063:                                             ; preds = %1060, %1099
  %1064 = phi i64 [ 0, %1060 ], [ %1100, %1099 ]
  %1065 = load ptr, ptr %1021, align 8, !tbaa !184
  %1066 = getelementptr inbounds %"struct.std::pair.263", ptr %1065, i64 %1061
  %1067 = load i64, ptr %1066, align 4
  %1068 = getelementptr inbounds %"struct.std::pair.263", ptr %1065, i64 %1064
  %1069 = load i64, ptr %1068, align 4
  %1070 = trunc i64 %1067 to i32
  %1071 = trunc i64 %1069 to i32
  %1072 = icmp eq i32 %1070, %1071
  br i1 %1072, label %1073, label %1099

1073:                                             ; preds = %1063
  %1074 = load ptr, ptr %58, align 8, !tbaa !140
  %1075 = load i32, ptr %56, align 8, !tbaa !59
  %1076 = mul i32 %1075, %1062
  %1077 = trunc i64 %1064 to i32
  %1078 = add i32 %1076, %1077
  %1079 = zext i32 %1078 to i64
  %1080 = getelementptr inbounds double, ptr %1074, i64 %1079
  %1081 = load double, ptr %1080, align 8, !tbaa !133
  %1082 = fcmp oeq double %1081, 0.000000e+00
  br i1 %1082, label %1099, label %1083

1083:                                             ; preds = %1073
  %1084 = load ptr, ptr %19, align 8, !tbaa !144
  %1085 = getelementptr inbounds i32, ptr %1084, i64 %1064
  %1086 = load i32, ptr %1085, align 4, !tbaa !59
  %1087 = getelementptr inbounds i32, ptr %1084, i64 %1061
  %1088 = load i32, ptr %1087, align 4, !tbaa !59
  %1089 = load ptr, ptr %73, align 8, !tbaa !383
  %1090 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1089, i32 noundef %1088, i32 noundef %1086)
          to label %1091 unwind label %1105

1091:                                             ; preds = %1083
  %1092 = icmp eq i32 %1090, -1
  br i1 %1092, label %1099, label %1093

1093:                                             ; preds = %1091
  %1094 = load ptr, ptr %74, align 8, !tbaa !385
  %1095 = zext i32 %1090 to i64
  %1096 = getelementptr inbounds double, ptr %1094, i64 %1095
  %1097 = load double, ptr %1096, align 8, !tbaa !133
  %1098 = fadd double %1081, %1097
  store double %1098, ptr %1096, align 8, !tbaa !133
  br label %1099

1099:                                             ; preds = %1093, %1091, %1073, %1063
  %1100 = add nuw nsw i64 %1064, 1
  %1101 = icmp eq i64 %1100, %98
  br i1 %1101, label %1102, label %1063

1102:                                             ; preds = %1099
  %1103 = add nuw nsw i64 %1061, 1
  %1104 = icmp eq i64 %1103, %98
  br i1 %1104, label %1107, label %1060

1105:                                             ; preds = %1083
  %1106 = landingpad { ptr, i32 }
          cleanup
  br label %1327

1107:                                             ; preds = %1102, %1055
  br i1 %131, label %1128, label %1108

1108:                                             ; preds = %1107
  %1109 = load ptr, ptr %60, align 8, !tbaa !136
  %1110 = load ptr, ptr %19, align 8, !tbaa !144
  %1111 = load ptr, ptr %75, align 8, !tbaa !136
  %1112 = and i64 %98, 1
  %1113 = icmp eq i32 %93, 1
  br i1 %1113, label %1116, label %1114

1114:                                             ; preds = %1108
  %1115 = and i64 %98, 4294967294
  br label %1246

1116:                                             ; preds = %1246, %1108
  %1117 = phi i64 [ 0, %1108 ], [ %1266, %1246 ]
  %1118 = icmp eq i64 %1112, 0
  br i1 %1118, label %1128, label %1119

1119:                                             ; preds = %1116
  %1120 = getelementptr inbounds double, ptr %1109, i64 %1117
  %1121 = load double, ptr %1120, align 8, !tbaa !133
  %1122 = getelementptr inbounds i32, ptr %1110, i64 %1117
  %1123 = load i32, ptr %1122, align 4, !tbaa !59
  %1124 = zext i32 %1123 to i64
  %1125 = getelementptr inbounds double, ptr %1111, i64 %1124
  %1126 = load double, ptr %1125, align 8, !tbaa !133
  %1127 = fadd double %1121, %1126
  store double %1127, ptr %1125, align 8, !tbaa !133
  br label %1128

1128:                                             ; preds = %1119, %1116, %586, %1019, %1107
  %1129 = load ptr, ptr %76, align 8, !tbaa !62
  %1130 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1129, i64 0, i32 1
  %1131 = load ptr, ptr %1130, align 8, !tbaa !46
  %1132 = ptrtoint ptr %1131 to i64
  %1133 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1129, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1134 = load i32, ptr %20, align 8
  %1135 = load i32, ptr %38, align 4
  br label %1136

1136:                                             ; preds = %1224, %1128
  %1137 = phi i32 [ %1134, %1128 ], [ %1203, %1224 ]
  %1138 = phi i32 [ %1134, %1128 ], [ %1204, %1224 ]
  %1139 = phi i32 [ %1134, %1128 ], [ %1225, %1224 ]
  %1140 = phi i32 [ %1135, %1128 ], [ %1205, %1224 ]
  %1141 = add nsw i32 %1140, 1
  %1142 = sext i32 %1139 to i64
  %1143 = getelementptr inbounds ptr, ptr %1131, i64 %1142
  %1144 = load ptr, ptr %1143, align 8, !tbaa !33
  %1145 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1144, i64 0, i32 4
  %1146 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1144, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1147 = load ptr, ptr %1146, align 8, !tbaa !48
  %1148 = load ptr, ptr %1145, align 8, !tbaa !50
  %1149 = ptrtoint ptr %1147 to i64
  %1150 = ptrtoint ptr %1148 to i64
  %1151 = sub i64 %1149, %1150
  %1152 = sdiv exact i64 %1151, 24
  %1153 = trunc i64 %1152 to i32
  %1154 = icmp slt i32 %1141, %1153
  br i1 %1154, label %1202, label %1155

1155:                                             ; preds = %1136
  %1156 = add nsw i64 %1142, 1
  %1157 = trunc i64 %1156 to i32
  store i32 %1157, ptr %20, align 8, !tbaa !60
  %1158 = load ptr, ptr %1133, align 8, !tbaa !51
  %1159 = ptrtoint ptr %1158 to i64
  %1160 = sub i64 %1159, %1132
  %1161 = shl i64 %1160, 29
  %1162 = ashr i64 %1161, 32
  %1163 = icmp slt i64 %1156, %1162
  br i1 %1163, label %1164, label %1196

1164:                                             ; preds = %1155
  %1165 = getelementptr inbounds ptr, ptr %1131, i64 %1156
  %1166 = load ptr, ptr %1165, align 8, !tbaa !33
  %1167 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1166, i64 0, i32 4
  %1168 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1166, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1169 = load ptr, ptr %1168, align 8, !tbaa !48
  %1170 = load ptr, ptr %1167, align 8, !tbaa !50
  %1171 = ptrtoint ptr %1169 to i64
  %1172 = ptrtoint ptr %1170 to i64
  %1173 = sub i64 %1171, %1172
  %1174 = sdiv exact i64 %1173, 24
  %1175 = trunc i64 %1174 to i32
  %1176 = icmp sgt i32 %1175, 0
  br i1 %1176, label %1198, label %1190

1177:                                             ; preds = %1190
  %1178 = getelementptr inbounds ptr, ptr %1131, i64 %1192
  %1179 = load ptr, ptr %1178, align 8, !tbaa !33
  %1180 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1179, i64 0, i32 4
  %1181 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1179, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1182 = load ptr, ptr %1181, align 8, !tbaa !48
  %1183 = load ptr, ptr %1180, align 8, !tbaa !50
  %1184 = ptrtoint ptr %1182 to i64
  %1185 = ptrtoint ptr %1183 to i64
  %1186 = sub i64 %1184, %1185
  %1187 = sdiv exact i64 %1186, 24
  %1188 = trunc i64 %1187 to i32
  %1189 = icmp sgt i32 %1188, 0
  br i1 %1189, label %1197, label %1190, !llvm.loop !52

1190:                                             ; preds = %1164, %1177
  %1191 = phi i64 [ %1192, %1177 ], [ %1156, %1164 ]
  %1192 = add i64 %1191, 1
  %1193 = trunc i64 %1192 to i32
  %1194 = icmp eq i64 %1192, %1162
  br i1 %1194, label %1195, label %1177, !llvm.loop !52

1195:                                             ; preds = %1190
  store i32 %1193, ptr %20, align 8, !tbaa !60
  br label %1196

1196:                                             ; preds = %1195, %1155
  store i32 -1, ptr %20, align 8, !tbaa !60
  br label %1202

1197:                                             ; preds = %1177
  store i32 %1193, ptr %20, align 8, !tbaa !60
  br label %1198

1198:                                             ; preds = %1197, %1164
  %1199 = phi i32 [ %1157, %1164 ], [ %1193, %1197 ]
  %1200 = phi i64 [ %1156, %1164 ], [ %1192, %1197 ]
  %1201 = trunc i64 %1200 to i32
  br label %1202

1202:                                             ; preds = %1198, %1196, %1136
  %1203 = phi i32 [ %1137, %1136 ], [ -1, %1196 ], [ %1199, %1198 ]
  %1204 = phi i32 [ %1138, %1136 ], [ -1, %1196 ], [ %1201, %1198 ]
  %1205 = phi i32 [ %1141, %1136 ], [ -1, %1196 ], [ 0, %1198 ]
  %1206 = phi i32 [ %1139, %1136 ], [ -1, %1196 ], [ %1201, %1198 ]
  %1207 = or i32 %1206, %1205
  %1208 = icmp sgt i32 %1207, -1
  br i1 %1208, label %1209, label %1226

1209:                                             ; preds = %1202
  %1210 = zext i32 %1206 to i64
  %1211 = getelementptr inbounds ptr, ptr %1131, i64 %1210
  %1212 = load ptr, ptr %1211, align 8, !tbaa !33
  %1213 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1212, i64 0, i32 4, i32 0, i32 3
  %1214 = load ptr, ptr %1213, align 8, !tbaa !54
  %1215 = lshr i32 %1205, 6
  %1216 = zext i32 %1215 to i64
  %1217 = getelementptr inbounds i64, ptr %1214, i64 %1216
  %1218 = and i32 %1205, 63
  %1219 = zext i32 %1218 to i64
  %1220 = shl nuw i64 1, %1219
  %1221 = load i64, ptr %1217, align 8, !tbaa !56
  %1222 = and i64 %1221, %1220
  %1223 = icmp eq i64 %1222, 0
  br i1 %1223, label %1224, label %1226

1224:                                             ; preds = %1209, %1229
  %1225 = phi i32 [ %1206, %1209 ], [ %1204, %1229 ]
  br label %1136

1226:                                             ; preds = %1209, %1202
  store i32 %1205, ptr %38, align 4, !tbaa !61
  %1227 = or i32 %1205, %1204
  %1228 = icmp sgt i32 %1227, -1
  br i1 %1228, label %1229, label %1240

1229:                                             ; preds = %1226
  %1230 = zext i32 %1204 to i64
  %1231 = getelementptr inbounds ptr, ptr %1131, i64 %1230
  %1232 = load ptr, ptr %1231, align 8, !tbaa !33
  %1233 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1232, i64 0, i32 4, i32 0, i32 1
  %1234 = shl i32 %1205, 2
  %1235 = zext i32 %1234 to i64
  %1236 = load ptr, ptr %1233, align 8, !tbaa !57
  %1237 = getelementptr inbounds i32, ptr %1236, i64 %1235
  %1238 = load i32, ptr %1237, align 4, !tbaa !59
  %1239 = icmp eq i32 %1238, -1
  br i1 %1239, label %1240, label %1224

1240:                                             ; preds = %1226, %1229
  %1241 = load i32, ptr %39, align 4, !tbaa !61
  %1242 = icmp ne i32 %1205, %1241
  %1243 = load i32, ptr %37, align 8
  %1244 = icmp ne i32 %1203, %1243
  %1245 = select i1 %1242, i1 true, i1 %1244
  br i1 %1245, label %77, label %1269

1246:                                             ; preds = %1246, %1114
  %1247 = phi i64 [ 0, %1114 ], [ %1266, %1246 ]
  %1248 = phi i64 [ 0, %1114 ], [ %1267, %1246 ]
  %1249 = getelementptr inbounds double, ptr %1109, i64 %1247
  %1250 = load double, ptr %1249, align 8, !tbaa !133
  %1251 = getelementptr inbounds i32, ptr %1110, i64 %1247
  %1252 = load i32, ptr %1251, align 4, !tbaa !59
  %1253 = zext i32 %1252 to i64
  %1254 = getelementptr inbounds double, ptr %1111, i64 %1253
  %1255 = load double, ptr %1254, align 8, !tbaa !133
  %1256 = fadd double %1250, %1255
  store double %1256, ptr %1254, align 8, !tbaa !133
  %1257 = or i64 %1247, 1
  %1258 = getelementptr inbounds double, ptr %1109, i64 %1257
  %1259 = load double, ptr %1258, align 8, !tbaa !133
  %1260 = getelementptr inbounds i32, ptr %1110, i64 %1257
  %1261 = load i32, ptr %1260, align 4, !tbaa !59
  %1262 = zext i32 %1261 to i64
  %1263 = getelementptr inbounds double, ptr %1111, i64 %1262
  %1264 = load double, ptr %1263, align 8, !tbaa !133
  %1265 = fadd double %1259, %1264
  store double %1265, ptr %1263, align 8, !tbaa !133
  %1266 = add nuw nsw i64 %1247, 2
  %1267 = add i64 %1248, 2
  %1268 = icmp eq i64 %1267, %1115
  br i1 %1268, label %1116, label %1246

1269:                                             ; preds = %1240
  %1270 = load ptr, ptr %19, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %1271 = icmp eq ptr %1270, null
  br i1 %1271, label %1273, label %1272

1272:                                             ; preds = %1269
  call void @_ZdlPv(ptr noundef nonnull %1270) #21
  br label %1273

1273:                                             ; preds = %47, %1272, %1269
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %1274 = load ptr, ptr %18, align 8, !tbaa !224
  %1275 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1276 = load ptr, ptr %1275, align 8, !tbaa !226
  %1277 = icmp eq ptr %1274, %1276
  br i1 %1277, label %1287, label %1278

1278:                                             ; preds = %1273, %1282
  %1279 = phi ptr [ %1283, %1282 ], [ %1274, %1273 ]
  %1280 = load ptr, ptr %1279, align 8, !tbaa !41
  %1281 = load ptr, ptr %1280, align 8
  invoke void %1281(ptr noundef nonnull align 8 dereferenceable(88) %1279)
          to label %1282 unwind label %1291

1282:                                             ; preds = %1278
  %1283 = getelementptr inbounds %"class.dealii::Vector", ptr %1279, i64 1
  %1284 = icmp eq ptr %1283, %1276
  br i1 %1284, label %1285, label %1278

1285:                                             ; preds = %1282
  %1286 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1287

1287:                                             ; preds = %1285, %1273
  %1288 = phi ptr [ %1286, %1285 ], [ %1274, %1273 ]
  %1289 = icmp eq ptr %1288, null
  br i1 %1289, label %1295, label %1290

1290:                                             ; preds = %1287
  call void @_ZdlPv(ptr noundef nonnull %1288) #21
  br label %1295

1291:                                             ; preds = %1278
  %1292 = landingpad { ptr, i32 }
          cleanup
  %1293 = load ptr, ptr %18, align 8, !tbaa !224
  %1294 = icmp eq ptr %1293, null
  br i1 %1294, label %1356, label %1353

1295:                                             ; preds = %1290, %1287
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1296 = load ptr, ptr %17, align 8, !tbaa !131
  %1297 = icmp eq ptr %1296, null
  br i1 %1297, label %1299, label %1298

1298:                                             ; preds = %1295
  call void @_ZdlPv(ptr noundef nonnull %1296) #21
  br label %1299

1299:                                             ; preds = %1298, %1295
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1300 = load ptr, ptr %16, align 8, !tbaa !131
  %1301 = icmp eq ptr %1300, null
  br i1 %1301, label %1303, label %1302

1302:                                             ; preds = %1299
  call void @_ZdlPv(ptr noundef nonnull %1300) #21
  br label %1303

1303:                                             ; preds = %1302, %1299
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %1304 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %1305 = load ptr, ptr %1304, align 8, !tbaa !136
  %1306 = icmp eq ptr %1305, null
  br i1 %1306, label %1308, label %1307

1307:                                             ; preds = %1303
  call void @_ZdaPv(ptr noundef nonnull %1305) #21
  store ptr null, ptr %1304, align 8, !tbaa !136
  br label %1308

1308:                                             ; preds = %1307, %1303
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %1309 unwind label %316

1309:                                             ; preds = %1308
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !41
  %1310 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %1311 = load ptr, ptr %1310, align 8, !tbaa !140
  %1312 = icmp eq ptr %1311, null
  br i1 %1312, label %1314, label %1313

1313:                                             ; preds = %1309
  call void @_ZdaPv(ptr noundef nonnull %1311) #21
  br label %1314

1314:                                             ; preds = %1313, %1309
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %14)
          to label %1315 unwind label %314

1315:                                             ; preds = %1314
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %14) #19
  %1316 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1316)
          to label %1325 unwind label %1317

1317:                                             ; preds = %1315
  %1318 = landingpad { ptr, i32 }
          cleanup
  %1319 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1319)
          to label %1320 unwind label %1322

1320:                                             ; preds = %1317, %1389
  %1321 = phi { ptr, i32 } [ %1379, %1389 ], [ %1318, %1317 ]
  resume { ptr, i32 } %1321

1322:                                             ; preds = %1317
  %1323 = landingpad { ptr, i32 }
          catch ptr null
  %1324 = extractvalue { ptr, i32 } %1323, 0
  call void @__clang_call_terminate(ptr %1324) #22
  unreachable

1325:                                             ; preds = %1315
  %1326 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  call void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1326)
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %13) #19
  ret void

1327:                                             ; preds = %1105, %1058, %320, %193, %326, %318
  %1328 = phi { ptr, i32 } [ %319, %318 ], [ %327, %326 ], [ %321, %320 ], [ %194, %193 ], [ %1106, %1105 ], [ %1059, %1058 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %1329 = load ptr, ptr %19, align 8, !tbaa !144
  %1330 = icmp eq ptr %1329, null
  br i1 %1330, label %1332, label %1331

1331:                                             ; preds = %1327
  call void @_ZdlPv(ptr noundef nonnull %1329) #21
  br label %1332

1332:                                             ; preds = %1331, %1327
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %1333 = load ptr, ptr %18, align 8, !tbaa !224
  %1334 = load ptr, ptr %69, align 8, !tbaa !226
  %1335 = icmp eq ptr %1333, %1334
  br i1 %1335, label %1345, label %1336

1336:                                             ; preds = %1332, %1340
  %1337 = phi ptr [ %1341, %1340 ], [ %1333, %1332 ]
  %1338 = load ptr, ptr %1337, align 8, !tbaa !41
  %1339 = load ptr, ptr %1338, align 8
  invoke void %1339(ptr noundef nonnull align 8 dereferenceable(88) %1337)
          to label %1340 unwind label %1348

1340:                                             ; preds = %1336
  %1341 = getelementptr inbounds %"class.dealii::Vector", ptr %1337, i64 1
  %1342 = icmp eq ptr %1341, %1334
  br i1 %1342, label %1343, label %1336

1343:                                             ; preds = %1340
  %1344 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1345

1345:                                             ; preds = %1343, %1332
  %1346 = phi ptr [ %1344, %1343 ], [ %1333, %1332 ]
  %1347 = icmp eq ptr %1346, null
  br i1 %1347, label %1356, label %1353

1348:                                             ; preds = %1336
  %1349 = landingpad { ptr, i32 }
          catch ptr null
  %1350 = load ptr, ptr %18, align 8, !tbaa !224
  %1351 = icmp eq ptr %1350, null
  br i1 %1351, label %1392, label %1352

1352:                                             ; preds = %1348
  call void @_ZdlPv(ptr noundef nonnull %1350) #21
  br label %1392

1353:                                             ; preds = %1345, %1291
  %1354 = phi ptr [ %1293, %1291 ], [ %1346, %1345 ]
  %1355 = phi { ptr, i32 } [ %1292, %1291 ], [ %1328, %1345 ]
  call void @_ZdlPv(ptr noundef nonnull %1354) #21
  br label %1356

1356:                                             ; preds = %1353, %1345, %1291
  %1357 = phi { ptr, i32 } [ %1292, %1291 ], [ %1328, %1345 ], [ %1355, %1353 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1358 = load ptr, ptr %17, align 8, !tbaa !131
  %1359 = icmp eq ptr %1358, null
  br i1 %1359, label %1361, label %1360

1360:                                             ; preds = %1356
  call void @_ZdlPv(ptr noundef nonnull %1358) #21
  br label %1361

1361:                                             ; preds = %1360, %1356
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1362 = load ptr, ptr %16, align 8, !tbaa !131
  %1363 = icmp eq ptr %1362, null
  br i1 %1363, label %1365, label %1364

1364:                                             ; preds = %1361
  call void @_ZdlPv(ptr noundef nonnull %1362) #21
  br label %1365

1365:                                             ; preds = %1364, %1361
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %1366 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %1367 = load ptr, ptr %1366, align 8, !tbaa !136
  %1368 = icmp eq ptr %1367, null
  br i1 %1368, label %1370, label %1369

1369:                                             ; preds = %1365
  call void @_ZdaPv(ptr noundef nonnull %1367) #21
  store ptr null, ptr %1366, align 8, !tbaa !136
  br label %1370

1370:                                             ; preds = %1369, %1365
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %1371 unwind label %1390

1371:                                             ; preds = %1370, %316
  %1372 = phi { ptr, i32 } [ %317, %316 ], [ %1357, %1370 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !41
  %1373 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %1374 = load ptr, ptr %1373, align 8, !tbaa !140
  %1375 = icmp eq ptr %1374, null
  br i1 %1375, label %1377, label %1376

1376:                                             ; preds = %1371
  call void @_ZdaPv(ptr noundef nonnull %1374) #21
  br label %1377

1377:                                             ; preds = %1376, %1371
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %14)
          to label %1378 unwind label %1390

1378:                                             ; preds = %1377, %314
  %1379 = phi { ptr, i32 } [ %315, %314 ], [ %1372, %1377 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %14) #19
  %1380 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1380)
          to label %1381 unwind label %1383

1381:                                             ; preds = %1378
  %1382 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1382)
          to label %1389 unwind label %1390

1383:                                             ; preds = %1378
  %1384 = landingpad { ptr, i32 }
          catch ptr null
  %1385 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1385)
          to label %1392 unwind label %1386

1386:                                             ; preds = %1383
  %1387 = landingpad { ptr, i32 }
          catch ptr null
  %1388 = extractvalue { ptr, i32 } %1387, 0
  call void @__clang_call_terminate(ptr %1388) #22
  unreachable

1389:                                             ; preds = %1381
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %13) #19
  br label %1320

1390:                                             ; preds = %1381, %1377, %1370, %326
  %1391 = landingpad { ptr, i32 }
          catch ptr null
  br label %1392

1392:                                             ; preds = %1390, %1383, %1348, %1352
  %1393 = phi { ptr, i32 } [ %1349, %1352 ], [ %1349, %1348 ], [ %1391, %1390 ], [ %1384, %1383 ]
  %1394 = extractvalue { ptr, i32 } %1393, 0
  call void @__clang_call_terminate(ptr %1394) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull align 8 dereferenceable(224) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(36) %5, ptr noundef nonnull align 1 %6, ptr noundef nonnull align 8 dereferenceable(88) %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %10) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.266", align 8
  %13 = alloca %"class.boost::_bi::bind_t.384", align 8
  %14 = alloca %"class.boost::function.77", align 8
  %15 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  store ptr null, ptr %14, align 8, !tbaa !25
  %16 = load ptr, ptr %1, align 8, !tbaa !25
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  store ptr %16, ptr %14, align 8, !tbaa !25
  %19 = load ptr, ptr %16, align 8, !tbaa !227
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %19(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %21, i32 noundef 0)
  br label %22

22:                                               ; preds = %11, %18
  call void @llvm.experimental.noalias.scope.decl(metadata !417)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !325, !noalias !417
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %25 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %15, i64 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !325, !alias.scope !417
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %15, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !325, !noalias !417
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false)
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !325, !alias.scope !417
  %31 = ptrtoint ptr %6 to i64
  %32 = ptrtoint ptr %7 to i64
  %33 = ptrtoint ptr %10 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIdEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSL_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSZ_ISA_EENSZ_ISE_EENSZ_ISH_EENSZ_ISL_EENSZ_ISO_EESQ_ST_NSZ_ISV_EEEENS_3_bi6bind_tINS17_11unspecifiedET_NS17_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1A_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_S1K_(ptr nonnull sret(%"class.boost::_bi::bind_t.384") align 8 %13, ptr noundef nonnull %14, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, i64 %31, i64 %32, ptr noundef %8, ptr noundef nonnull %15, i64 %33)
          to label %34 unwind label %63

34:                                               ; preds = %22
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS4_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull %13, i32 noundef 0)
          to label %35 unwind label %65

35:                                               ; preds = %34
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %36 unwind label %67

36:                                               ; preds = %35
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  %38 = icmp eq ptr %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load ptr, ptr %37, align 8, !tbaa !231
  %41 = icmp eq ptr %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %40(ptr noundef nonnull align 8 dereferenceable(24) %43, ptr noundef nonnull align 8 dereferenceable(24) %43, i32 noundef 2)
          to label %44 unwind label %65

44:                                               ; preds = %42, %39
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %45

45:                                               ; preds = %44, %36
  %46 = load ptr, ptr %13, align 8, !tbaa !25
  %47 = icmp eq ptr %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = load ptr, ptr %46, align 8, !tbaa !393
  %50 = icmp eq ptr %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr noundef nonnull align 8 dereferenceable(24) %52, i32 noundef 2)
          to label %53 unwind label %63

53:                                               ; preds = %51, %48
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %54

54:                                               ; preds = %53, %45
  %55 = load ptr, ptr %14, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %55, align 8, !tbaa !393
  %59 = icmp eq ptr %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %58(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
  br label %62

62:                                               ; preds = %57, %60, %54
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  ret void

63:                                               ; preds = %51, %22
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %87

65:                                               ; preds = %42, %34
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %77

67:                                               ; preds = %35
  %68 = landingpad { ptr, i32 }
          cleanup
  %69 = load ptr, ptr %12, align 8, !tbaa !25
  %70 = icmp eq ptr %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = load ptr, ptr %69, align 8, !tbaa !231
  %73 = icmp eq ptr %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %72(ptr noundef nonnull align 8 dereferenceable(24) %75, ptr noundef nonnull align 8 dereferenceable(24) %75, i32 noundef 2)
          to label %76 unwind label %97

76:                                               ; preds = %74, %71
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %77

77:                                               ; preds = %76, %67, %65
  %78 = phi { ptr, i32 } [ %66, %65 ], [ %68, %67 ], [ %68, %76 ]
  %79 = load ptr, ptr %13, align 8, !tbaa !25
  %80 = icmp eq ptr %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = load ptr, ptr %79, align 8, !tbaa !393
  %83 = icmp eq ptr %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %82(ptr noundef nonnull align 8 dereferenceable(24) %85, ptr noundef nonnull align 8 dereferenceable(24) %85, i32 noundef 2)
          to label %86 unwind label %97

86:                                               ; preds = %84, %81
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %87

87:                                               ; preds = %86, %77, %63
  %88 = phi { ptr, i32 } [ %64, %63 ], [ %78, %77 ], [ %78, %86 ]
  %89 = load ptr, ptr %14, align 8, !tbaa !25
  %90 = icmp eq ptr %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = load ptr, ptr %89, align 8, !tbaa !393
  %93 = icmp eq ptr %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  invoke void %92(ptr noundef nonnull align 8 dereferenceable(24) %95, ptr noundef nonnull align 8 dereferenceable(24) %95, i32 noundef 2)
          to label %96 unwind label %97

96:                                               ; preds = %91, %94, %87
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  resume { ptr, i32 } %88

97:                                               ; preds = %94, %84, %74
  %98 = landingpad { ptr, i32 }
          catch ptr null
  %99 = extractvalue { ptr, i32 } %98, 0
  call void @__clang_call_terminate(ptr %99) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSH_(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EdLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %7 = alloca %"class.std::vector.43", align 8
  %8 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %9 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %10 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %11 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %12 = alloca %"class.dealii::Threads::Thread", align 16
  %13 = alloca %"class.dealii::Threads::internal::fun_encapsulator.79", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %15 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #19
  %16 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %6, i64 0, i32 1
  store ptr %6, ptr %16, align 8, !tbaa !10
  store ptr %6, ptr %6, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %6, i64 0, i32 1
  store i64 0, ptr %17, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %8, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %18 unwind label %41

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %10, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %19 unwind label %43

19:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  store ptr %22, ptr %20, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %15)
          to label %23 unwind label %43

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #19
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  %27 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.boost::shared_ptr", ptr %12, i64 0, i32 1
  %31 = zext i32 %15 to i64
  br label %47

32:                                               ; preds = %101, %23
  %33 = load ptr, ptr %6, align 8, !tbaa !13
  %34 = icmp eq ptr %33, %6
  br i1 %34, label %120, label %35

35:                                               ; preds = %32, %38
  %36 = phi ptr [ %39, %38 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.std::_List_node", ptr %36, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %37)
          to label %38 unwind label %153

38:                                               ; preds = %35
  %39 = load ptr, ptr %36, align 8, !tbaa !13
  %40 = icmp eq ptr %39, %6
  br i1 %40, label %120, label %35

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %45

43:                                               ; preds = %19, %18
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  br label %160

47:                                               ; preds = %25, %101
  %48 = phi i64 [ 0, %25 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !420)
  store ptr null, ptr %13, align 8, !tbaa !25, !alias.scope !420
  %49 = load ptr, ptr @_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable, align 8, !tbaa !423, !noalias !420
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %52 unwind label %104

52:                                               ; preds = %51, %47
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE, ptr %26, align 8, !tbaa !30, !alias.scope !420
  store ptr @_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable, ptr %13, align 8, !tbaa !25, !alias.scope !420
  %53 = load ptr, ptr %7, align 8, !tbaa !332
  %54 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  store ptr %56, ptr %27, align 8, !tbaa !325
  %57 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48, i32 1
  %58 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %57, i64 16, i1 false)
  store ptr %59, ptr %29, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %12, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef %4, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %11)
          to label %60 unwind label %106

60:                                               ; preds = %52
  %61 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %62 unwind label %108

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::_List_node", ptr %61, i64 0, i32 1
  %64 = load <2 x ptr>, ptr %12, align 16, !tbaa !33
  store <2 x ptr> %64, ptr %63, align 8, !tbaa !33
  %65 = extractelement <2 x ptr> %64, i64 1
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %65, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !34
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %68, align 8, !tbaa !34
  br label %71

71:                                               ; preds = %67, %62
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %61, ptr noundef nonnull %6) #19
  %72 = load i64, ptr %17, align 8, !tbaa !36
  %73 = add i64 %72, 1
  store i64 %73, ptr %17, align 8, !tbaa !36
  %74 = load ptr, ptr %30, align 8, !tbaa !39
  %75 = icmp eq ptr %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !34
  %79 = add nsw i64 %78, -1
  store i64 %79, ptr %77, align 8, !tbaa !34
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = load ptr, ptr %74, align 8, !tbaa !41
  %83 = getelementptr inbounds ptr, ptr %82, i64 2
  %84 = load ptr, ptr %83, align 8
  invoke void %84(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %85 unwind label %106

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !43
  %88 = add nsw i64 %87, -1
  store i64 %88, ptr %86, align 8, !tbaa !43
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load ptr, ptr %74, align 8, !tbaa !41
  %92 = getelementptr inbounds ptr, ptr %91, i64 3
  %93 = load ptr, ptr %92, align 8
  invoke void %93(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %94 unwind label %106

94:                                               ; preds = %85, %76, %71, %90
  %95 = load ptr, ptr %13, align 8, !tbaa !25
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %95, align 8, !tbaa !423
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  invoke void %98(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %101 unwind label %104

101:                                              ; preds = %97, %100, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  %102 = add nuw nsw i64 %48, 1
  %103 = icmp eq i64 %102, %31
  br i1 %103, label %32, label %47

104:                                              ; preds = %100, %51
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %118

106:                                              ; preds = %90, %81, %52
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %110

108:                                              ; preds = %60
  %109 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %12)
          to label %110 unwind label %163

110:                                              ; preds = %108, %106
  %111 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ]
  %112 = load ptr, ptr %13, align 8, !tbaa !25
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load ptr, ptr %112, align 8, !tbaa !423
  %116 = icmp eq ptr %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  invoke void %115(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %118 unwind label %163

118:                                              ; preds = %114, %117, %110, %104
  %119 = phi { ptr, i32 } [ %105, %104 ], [ %111, %110 ], [ %111, %117 ], [ %111, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  br label %155

120:                                              ; preds = %38, %32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %121 = load ptr, ptr %7, align 8, !tbaa !332
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef nonnull %121) #21
  br label %124

124:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  %125 = load ptr, ptr %6, align 8, !tbaa !13
  %126 = icmp eq ptr %125, %6
  br i1 %126, label %152, label %127

127:                                              ; preds = %124, %150
  %128 = phi ptr [ %129, %150 ], [ %125, %124 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = getelementptr inbounds %"struct.std::_List_node", ptr %128, i64 0, i32 1, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !34
  %136 = add nsw i64 %135, -1
  store i64 %136, ptr %134, align 8, !tbaa !34
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load ptr, ptr %131, align 8, !tbaa !41
  %140 = getelementptr inbounds ptr, ptr %139, i64 2
  %141 = load ptr, ptr %140, align 8
  call void %141(ptr noundef nonnull align 8 dereferenceable(24) %131)
  %142 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !43
  %144 = add nsw i64 %143, -1
  store i64 %144, ptr %142, align 8, !tbaa !43
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %131, align 8, !tbaa !41
  %148 = getelementptr inbounds ptr, ptr %147, i64 3
  %149 = load ptr, ptr %148, align 8
  call void %149(ptr noundef nonnull align 8 dereferenceable(24) %131)
  br label %150

150:                                              ; preds = %146, %138, %133, %127
  call void @_ZdlPv(ptr noundef nonnull %128) #21
  %151 = icmp eq ptr %129, %6
  br i1 %151, label %152, label %127

152:                                              ; preds = %150, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  ret void

153:                                              ; preds = %35
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %118
  %156 = phi { ptr, i32 } [ %119, %118 ], [ %154, %153 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %157 = load ptr, ptr %7, align 8, !tbaa !332
  %158 = icmp eq ptr %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef nonnull %157) #21
  br label %160

160:                                              ; preds = %159, %155, %45
  %161 = phi { ptr, i32 } [ %46, %45 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %162 unwind label %163

162:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  resume { ptr, i32 } %161

163:                                              ; preds = %117, %160, %108
  %164 = landingpad { ptr, i32 }
          catch ptr null
  %165 = extractvalue { ptr, i32 } %164, 0
  call void @__clang_call_terminate(ptr %165) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_1ILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 1 dereferenceable(1) %6) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca %"class.dealii::hp::FEValues", align 8
  %11 = alloca %"class.dealii::FullMatrix", align 8
  %12 = alloca %"class.std::vector.92", align 8
  %13 = alloca %"class.std::vector.258", align 8
  %14 = alloca %"class.std::vector.28", align 8
  %15 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %16 = alloca %"class.dealii::Vector", align 8
  %17 = icmp eq ptr %4, null
  %18 = select i1 %17, i32 33, i32 49
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %10) #19
  %19 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !336
  call void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %10, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(96) %20, ptr noundef nonnull align 8 dereferenceable(96) %2, i32 noundef %18)
  %21 = load ptr, ptr %19, align 8, !tbaa !336
  %22 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !338
  %24 = load ptr, ptr %23, align 8, !tbaa !340
  %25 = getelementptr inbounds i8, ptr %24, i64 116
  %26 = load i32, ptr %25, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %11, i32 noundef 0)
          to label %27 unwind label %502

27:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %15) #19
  %28 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %5, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %15, i64 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !325
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %15, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, ptr %32, align 4, !tbaa !61
  %35 = load i32, ptr %33, align 4, !tbaa !61
  %36 = icmp ne i32 %34, %35
  %37 = load i32, ptr %15, align 8
  %38 = load i32, ptr %31, align 8
  %39 = icmp ne i32 %37, %38
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  br label %1304

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4
  %44 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 1
  %45 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %46 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4, i32 0, i32 0, i64 1
  %47 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %48 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4, i32 0, i32 0, i64 2
  %49 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3
  %50 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3, i32 0, i32 0, i64 1
  %51 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 2
  %52 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 1
  %55 = icmp eq i32 %26, 0
  %56 = zext i32 %26 to i64
  %57 = shl nuw nsw i64 %56, 3
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 2
  %60 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %62 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %63 = icmp eq i32 %26, 1
  %64 = getelementptr inbounds %"class.dealii::SparseMatrix.39", ptr %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix.39", ptr %3, i64 0, i32 2
  %66 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %15, i64 0, i32 2
  br label %67

67:                                               ; preds = %42, %1294
  invoke void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240) %10, ptr noundef nonnull align 8 dereferenceable(24) %15, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %68 unwind label %504

68:                                               ; preds = %67
  %69 = load ptr, ptr %44, align 8, !tbaa !342
  %70 = load i32, ptr %43, align 8, !tbaa !59
  %71 = load i32, ptr %45, align 8, !tbaa !59
  %72 = mul i32 %71, %70
  %73 = load i32, ptr %46, align 4, !tbaa !59
  %74 = add i32 %72, %73
  %75 = load i32, ptr %47, align 4, !tbaa !59
  %76 = mul i32 %74, %75
  %77 = load i32, ptr %48, align 8, !tbaa !59
  %78 = add i32 %76, %77
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %69, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !346
  %82 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 3
  %83 = load i32, ptr %82, align 8, !tbaa !65
  %84 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !127
  %86 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 6
  %87 = load ptr, ptr %86, align 8, !tbaa !63
  %88 = zext i32 %83 to i64
  %89 = shl nuw i64 %88, 32
  %90 = or i64 %89, %88
  store i64 %90, ptr %49, align 4
  %91 = mul i32 %83, %83
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %68
  %94 = load ptr, ptr %52, align 8, !tbaa !140
  %95 = icmp eq ptr %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZdaPv(ptr noundef nonnull %94) #21
  br label %97

97:                                               ; preds = %96, %93
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %52, i8 0, i64 20, i1 false)
  br label %120

98:                                               ; preds = %68
  %99 = load i32, ptr %51, align 8, !tbaa !348
  %100 = icmp ult i32 %99, %91
  %101 = load ptr, ptr %52, align 8, !tbaa !140
  br i1 %100, label %102, label %115

102:                                              ; preds = %98
  %103 = icmp eq ptr %101, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  call void @_ZdaPv(ptr noundef nonnull %101) #21
  %105 = load i32, ptr %49, align 4, !tbaa !59
  %106 = load i32, ptr %50, align 8, !tbaa !59
  %107 = mul i32 %106, %105
  br label %108

108:                                              ; preds = %104, %102
  %109 = phi i32 [ %107, %104 ], [ %91, %102 ]
  store i32 %91, ptr %51, align 8, !tbaa !348
  %110 = zext i32 %91 to i64
  %111 = shl nuw nsw i64 %110, 3
  %112 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %111) #20
          to label %113 unwind label %506

113:                                              ; preds = %108
  store ptr %112, ptr %52, align 8, !tbaa !140
  %114 = icmp eq i32 %109, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %113, %98
  %116 = phi ptr [ %112, %113 ], [ %101, %98 ]
  %117 = phi i32 [ %109, %113 ], [ %91, %98 ]
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 3
  call void @llvm.memset.p0.i64(ptr align 8 %116, i8 0, i64 %119, i1 false), !tbaa !133
  br label %120

120:                                              ; preds = %115, %113, %97
  %121 = zext i32 %85 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store double 0.000000e+00, ptr %9, align 8, !tbaa !133
  %122 = load ptr, ptr %53, align 8, !tbaa !33
  %123 = load ptr, ptr %12, align 8, !tbaa !131
  %124 = ptrtoint ptr %122 to i64
  %125 = ptrtoint ptr %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %127, %121
  br i1 %128, label %129, label %131

129:                                              ; preds = %120
  %130 = sub nsw i64 %121, %127
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr %122, i64 noundef %130, ptr noundef nonnull align 8 dereferenceable(8) %9)
          to label %137 unwind label %506

131:                                              ; preds = %120
  %132 = icmp ugt i64 %127, %121
  br i1 %132, label %133, label %137

133:                                              ; preds = %131
  %134 = getelementptr inbounds double, ptr %123, i64 %121
  %135 = icmp eq ptr %122, %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  store ptr %134, ptr %53, align 8, !tbaa !135
  br label %137

137:                                              ; preds = %136, %133, %131, %129
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %138 unwind label %506

138:                                              ; preds = %137
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %54, i8 0, i64 16, i1 false)
  br i1 %55, label %147, label %139

139:                                              ; preds = %138
  %140 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %57) #20
          to label %141 unwind label %142

141:                                              ; preds = %139
  store ptr %140, ptr %58, align 8, !tbaa !136
  store i32 %26, ptr %59, align 4, !tbaa !138
  store i32 %26, ptr %54, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %140, i8 0, i64 %57, i1 false), !tbaa !133
  br label %147

142:                                              ; preds = %139
  %143 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %1348 unwind label %144

144:                                              ; preds = %142
  %145 = landingpad { ptr, i32 }
          catch ptr null
  %146 = extractvalue { ptr, i32 } %145, 0
  call void @__clang_call_terminate(ptr %146) #22
  unreachable

147:                                              ; preds = %141, %138
  %148 = load ptr, ptr %60, align 8, !tbaa !33
  %149 = load ptr, ptr %13, align 8, !tbaa !224
  %150 = ptrtoint ptr %148 to i64
  %151 = ptrtoint ptr %149 to i64
  %152 = sub i64 %150, %151
  %153 = sdiv exact i64 %152, 88
  %154 = icmp ult i64 %153, %121
  br i1 %154, label %155, label %157

155:                                              ; preds = %147
  %156 = sub nsw i64 %121, %153
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %13, ptr %148, i64 noundef %156, ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %170 unwind label %510

157:                                              ; preds = %147
  %158 = icmp ugt i64 %153, %121
  br i1 %158, label %159, label %170

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.dealii::Vector", ptr %149, i64 %121
  %161 = icmp eq ptr %148, %160
  br i1 %161, label %170, label %162

162:                                              ; preds = %159, %166
  %163 = phi ptr [ %167, %166 ], [ %160, %159 ]
  %164 = load ptr, ptr %163, align 8, !tbaa !41
  %165 = load ptr, ptr %164, align 8
  invoke void %165(ptr noundef nonnull align 8 dereferenceable(88) %163)
          to label %166 unwind label %508

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.dealii::Vector", ptr %163, i64 1
  %168 = icmp eq ptr %167, %148
  br i1 %168, label %169, label %162

169:                                              ; preds = %166
  store ptr %160, ptr %60, align 8, !tbaa !226
  br label %170

170:                                              ; preds = %169, %159, %157, %155
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %171 = load ptr, ptr %58, align 8, !tbaa !136
  %172 = icmp eq ptr %171, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  call void @_ZdaPv(ptr noundef nonnull %171) #21
  store ptr null, ptr %58, align 8, !tbaa !136
  br label %174

174:                                              ; preds = %173, %170
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %175 unwind label %506

175:                                              ; preds = %174
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 0, ptr %8, align 4, !tbaa !59
  %176 = load ptr, ptr %61, align 8, !tbaa !33
  %177 = load ptr, ptr %14, align 8, !tbaa !144
  %178 = ptrtoint ptr %176 to i64
  %179 = ptrtoint ptr %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 2
  %182 = icmp ult i64 %181, %88
  br i1 %182, label %183, label %185

183:                                              ; preds = %175
  %184 = sub nsw i64 %88, %181
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %14, ptr %176, i64 noundef %184, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %191 unwind label %506

185:                                              ; preds = %175
  %186 = icmp ugt i64 %181, %88
  br i1 %186, label %187, label %191

187:                                              ; preds = %185
  %188 = getelementptr inbounds i32, ptr %177, i64 %88
  %189 = icmp eq ptr %176, %188
  br i1 %189, label %191, label %190

190:                                              ; preds = %187
  store ptr %188, ptr %61, align 8, !tbaa !349
  br label %191

191:                                              ; preds = %190, %187, %185, %183
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  %192 = load i32, ptr %49, align 4, !tbaa !59
  %193 = load i32, ptr %50, align 8, !tbaa !59
  %194 = mul i32 %193, %192
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %191
  %197 = load ptr, ptr %52, align 8, !tbaa !140
  %198 = zext i32 %194 to i64
  %199 = shl nuw nsw i64 %198, 3
  call void @llvm.memset.p0.i64(ptr align 8 %197, i8 0, i64 %199, i1 false), !tbaa !133
  br label %200

200:                                              ; preds = %191, %196
  %201 = load ptr, ptr %30, align 8, !tbaa !325
  %202 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %201, i64 0, i32 4
  %203 = load i32, ptr %15, align 8, !tbaa !60
  %204 = sext i32 %203 to i64
  %205 = load ptr, ptr %202, align 8, !tbaa !350
  %206 = getelementptr inbounds ptr, ptr %205, i64 %204
  %207 = load ptr, ptr %206, align 8, !tbaa !33
  %208 = load i32, ptr %32, align 4, !tbaa !61
  %209 = sext i32 %208 to i64
  %210 = load ptr, ptr %207, align 8, !tbaa !144
  %211 = getelementptr inbounds i32, ptr %210, i64 %209
  %212 = load i32, ptr %211, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %15, ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef %212)
          to label %213 unwind label %506

213:                                              ; preds = %200
  br i1 %17, label %214, label %239

214:                                              ; preds = %213
  %215 = icmp eq i32 %85, 0
  br i1 %215, label %1091, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds i8, ptr %81, i64 216
  %218 = load ptr, ptr %217, align 8, !tbaa !131
  %219 = icmp eq i32 %83, 0
  %220 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %221 = getelementptr inbounds i8, ptr %81, i64 144
  %222 = getelementptr inbounds i8, ptr %81, i64 160
  %223 = getelementptr inbounds i8, ptr %81, i64 480
  %224 = add nsw i64 %88, -1
  %225 = shl nuw nsw i64 %88, 3
  %226 = icmp ult i32 %83, 16
  %227 = trunc i64 %224 to i32
  %228 = icmp ugt i64 %224, 4294967295
  %229 = trunc i64 %224 to i32
  %230 = and i64 %88, 4294967288
  %231 = icmp eq i64 %230, %88
  %232 = and i64 %88, 1
  %233 = icmp eq i64 %232, 0
  %234 = sub nsw i64 0, %88
  %235 = and i64 %88, 1
  %236 = icmp eq i64 %224, 0
  %237 = and i64 %88, 4294967294
  %238 = icmp eq i64 %235, 0
  br label %799

239:                                              ; preds = %213
  %240 = load i32, ptr %62, align 8, !tbaa !145
  %241 = icmp eq i32 %240, 1
  %242 = getelementptr inbounds i8, ptr %81, i64 312
  %243 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %241, label %244, label %514

244:                                              ; preds = %239
  %245 = getelementptr inbounds ptr, ptr %243, i64 6
  %246 = load ptr, ptr %245, align 8
  invoke void %246(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %12, i32 noundef 0)
          to label %247 unwind label %506

247:                                              ; preds = %244
  %248 = icmp eq i32 %85, 0
  br i1 %248, label %1091, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds i8, ptr %81, i64 216
  %251 = load ptr, ptr %250, align 8, !tbaa !131
  %252 = icmp eq i32 %83, 0
  %253 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %254 = getelementptr inbounds i8, ptr %81, i64 144
  %255 = getelementptr inbounds i8, ptr %81, i64 160
  %256 = getelementptr inbounds i8, ptr %81, i64 480
  br i1 %252, label %1182, label %257

257:                                              ; preds = %249
  %258 = add nsw i64 %88, -1
  %259 = shl nuw nsw i64 %88, 3
  %260 = icmp ult i32 %83, 16
  %261 = trunc i64 %258 to i32
  %262 = icmp ugt i64 %258, 4294967295
  %263 = trunc i64 %258 to i32
  %264 = and i64 %88, 4294967292
  %265 = icmp eq i64 %264, %88
  br label %266

266:                                              ; preds = %257, %348
  %267 = phi i64 [ %349, %348 ], [ 0, %257 ]
  %268 = shl nuw nsw i64 %267, 3
  %269 = add nuw i64 %259, %268
  %270 = add nuw i64 %268, 8
  %271 = trunc i64 %267 to i32
  %272 = getelementptr inbounds double, ptr %251, i64 %267
  %273 = load double, ptr %272, align 8, !tbaa !133
  br i1 %63, label %351, label %344

274:                                              ; preds = %332
  %275 = add nuw nsw i64 %336, 1
  %276 = icmp eq i64 %275, %88
  br i1 %276, label %348, label %335

277:                                              ; preds = %335, %332
  %278 = phi i64 [ 0, %335 ], [ %333, %332 ]
  %279 = load i64, ptr %343, align 4
  %280 = getelementptr inbounds %"struct.std::pair.263", ptr %345, i64 %278
  %281 = load i64, ptr %280, align 4
  %282 = trunc i64 %279 to i32
  %283 = trunc i64 %281 to i32
  %284 = icmp eq i32 %282, %283
  br i1 %284, label %285, label %332

285:                                              ; preds = %277
  %286 = load ptr, ptr %86, align 8, !tbaa !63
  %287 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %286, i64 0, i32 2
  %288 = load i8, ptr %287, align 4, !tbaa !148, !range !182, !noundef !183
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %298, label %290

290:                                              ; preds = %285
  %291 = load ptr, ptr %254, align 8, !tbaa !140
  %292 = load i32, ptr %255, align 8, !tbaa !59
  %293 = mul i32 %292, %341
  %294 = add i32 %293, %346
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds double, ptr %291, i64 %295
  %297 = trunc i64 %278 to i32
  br label %311

298:                                              ; preds = %285
  %299 = load ptr, ptr %256, align 8, !tbaa !144
  %300 = getelementptr inbounds i32, ptr %299, i64 %336
  %301 = load i32, ptr %300, align 4, !tbaa !59
  %302 = load ptr, ptr %254, align 8, !tbaa !140
  %303 = load i32, ptr %255, align 8, !tbaa !59
  %304 = mul i32 %303, %301
  %305 = add i32 %304, %347
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds double, ptr %302, i64 %306
  %308 = getelementptr inbounds i32, ptr %299, i64 %278
  %309 = load i32, ptr %308, align 4, !tbaa !59
  %310 = trunc i64 %278 to i32
  br label %311

311:                                              ; preds = %298, %290
  %312 = phi i32 [ %310, %298 ], [ %297, %290 ]
  %313 = phi i32 [ %347, %298 ], [ %346, %290 ]
  %314 = phi ptr [ %307, %298 ], [ %296, %290 ]
  %315 = phi i32 [ %303, %298 ], [ %292, %290 ]
  %316 = phi ptr [ %302, %298 ], [ %291, %290 ]
  %317 = phi i32 [ %309, %298 ], [ %297, %290 ]
  %318 = load double, ptr %314, align 8, !tbaa !133
  %319 = mul i32 %317, %315
  %320 = add i32 %319, %313
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds double, ptr %316, i64 %321
  %323 = load double, ptr %322, align 8, !tbaa !133
  %324 = fmul double %318, %323
  %325 = fmul double %273, %324
  %326 = load double, ptr %338, align 8, !tbaa !133
  %327 = add i32 %342, %312
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds double, ptr %339, i64 %328
  %330 = load double, ptr %329, align 8, !tbaa !133
  %331 = call double @llvm.fmuladd.f64(double %325, double %326, double %330)
  store double %331, ptr %329, align 8, !tbaa !133
  br label %332

332:                                              ; preds = %311, %277
  %333 = add nuw nsw i64 %278, 1
  %334 = icmp eq i64 %333, %88
  br i1 %334, label %274, label %277

335:                                              ; preds = %344, %274
  %336 = phi i64 [ 0, %344 ], [ %275, %274 ]
  %337 = load ptr, ptr %12, align 8
  %338 = getelementptr inbounds double, ptr %337, i64 %267
  %339 = load ptr, ptr %52, align 8
  %340 = load i32, ptr %50, align 8
  %341 = trunc i64 %336 to i32
  %342 = mul i32 %340, %341
  %343 = getelementptr inbounds %"struct.std::pair.263", ptr %345, i64 %336
  br label %277

344:                                              ; preds = %266
  %345 = load ptr, ptr %253, align 8, !tbaa !184
  %346 = trunc i64 %267 to i32
  %347 = trunc i64 %267 to i32
  br label %335

348:                                              ; preds = %274, %443, %499
  %349 = add nuw nsw i64 %267, 1
  %350 = icmp eq i64 %349, %121
  br i1 %350, label %1091, label %266

351:                                              ; preds = %266
  %352 = load ptr, ptr %86, align 8, !tbaa !63
  %353 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %352, i64 0, i32 2
  %354 = load i8, ptr %353, align 4, !tbaa !148, !range !182, !noundef !183
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %459, label %446

356:                                              ; preds = %446, %443
  %357 = phi i64 [ 0, %446 ], [ %444, %443 ]
  %358 = mul i64 %357, %452
  %359 = add i64 %267, %358
  %360 = shl i64 %359, 3
  %361 = and i64 %360, 34359738360
  %362 = getelementptr i8, ptr %447, i64 %361
  %363 = getelementptr i8, ptr %453, i64 %361
  %364 = load ptr, ptr %12, align 8
  %365 = getelementptr double, ptr %364, i64 %267
  %366 = load ptr, ptr %52, align 8
  %367 = load i32, ptr %50, align 8
  %368 = trunc i64 %357 to i32
  %369 = mul i32 %367, %368
  %370 = mul i32 %448, %368
  %371 = add i32 %370, %449
  %372 = zext i32 %371 to i64
  %373 = getelementptr inbounds double, ptr %447, i64 %372
  br i1 %260, label %422, label %374

374:                                              ; preds = %356
  %375 = xor i32 %369, -1
  %376 = icmp ult i32 %375, %261
  %377 = or i1 %376, %262
  %378 = or i1 %454, %377
  %379 = or i1 %456, %378
  br i1 %379, label %422, label %380

380:                                              ; preds = %374
  %381 = zext i32 %369 to i64
  %382 = shl nuw nsw i64 %381, 3
  %383 = getelementptr i8, ptr %366, i64 %382
  %384 = getelementptr i8, ptr %366, i64 %259
  %385 = getelementptr i8, ptr %384, i64 %382
  %386 = getelementptr i8, ptr %364, i64 %270
  %387 = icmp ult ptr %450, %385
  %388 = icmp ult ptr %383, %451
  %389 = and i1 %387, %388
  %390 = icmp ult ptr %362, %385
  %391 = icmp ult ptr %383, %363
  %392 = and i1 %390, %391
  %393 = or i1 %389, %392
  %394 = icmp ult ptr %365, %385
  %395 = icmp ult ptr %383, %386
  %396 = and i1 %394, %395
  %397 = or i1 %393, %396
  br i1 %397, label %422, label %398

398:                                              ; preds = %380
  %399 = load double, ptr %373, align 8, !tbaa !133, !alias.scope !425, !noalias !428
  %400 = insertelement <4 x double> poison, double %399, i64 0
  %401 = shufflevector <4 x double> %400, <4 x double> poison, <4 x i32> zeroinitializer
  %402 = load double, ptr %365, align 8, !tbaa !133, !alias.scope !430, !noalias !428
  %403 = insertelement <4 x double> poison, double %402, i64 0
  %404 = shufflevector <4 x double> %403, <4 x double> poison, <4 x i32> zeroinitializer
  br label %405

405:                                              ; preds = %405, %398
  %406 = phi i64 [ 0, %398 ], [ %419, %405 ]
  %407 = trunc i64 %406 to i32
  %408 = add i64 %406, %267
  %409 = and i64 %408, 4294967295
  %410 = getelementptr inbounds double, ptr %447, i64 %409
  %411 = load <4 x double>, ptr %410, align 8, !tbaa !133, !alias.scope !432, !noalias !428
  %412 = fmul <4 x double> %401, %411
  %413 = fmul <4 x double> %458, %412
  %414 = add i32 %369, %407
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds double, ptr %366, i64 %415
  %417 = load <4 x double>, ptr %416, align 8, !tbaa !133, !alias.scope !428
  %418 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %413, <4 x double> %404, <4 x double> %417)
  store <4 x double> %418, ptr %416, align 8, !tbaa !133, !alias.scope !428
  %419 = add nuw i64 %406, 4
  %420 = icmp eq i64 %419, %264
  br i1 %420, label %421, label %405, !llvm.loop !434

421:                                              ; preds = %405
  br i1 %265, label %443, label %422

422:                                              ; preds = %380, %374, %356, %421
  %423 = phi i64 [ 0, %380 ], [ 0, %374 ], [ 0, %356 ], [ %264, %421 ]
  br label %424

424:                                              ; preds = %422, %424
  %425 = phi i64 [ %441, %424 ], [ %423, %422 ]
  %426 = load double, ptr %373, align 8, !tbaa !133
  %427 = trunc i64 %425 to i32
  %428 = mul i32 %448, %427
  %429 = add i32 %428, %449
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds double, ptr %447, i64 %430
  %432 = load double, ptr %431, align 8, !tbaa !133
  %433 = fmul double %426, %432
  %434 = fmul double %273, %433
  %435 = load double, ptr %365, align 8, !tbaa !133
  %436 = add i32 %369, %427
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds double, ptr %366, i64 %437
  %439 = load double, ptr %438, align 8, !tbaa !133
  %440 = call double @llvm.fmuladd.f64(double %434, double %435, double %439)
  store double %440, ptr %438, align 8, !tbaa !133
  %441 = add nuw nsw i64 %425, 1
  %442 = icmp eq i64 %441, %88
  br i1 %442, label %443, label %424, !llvm.loop !435

443:                                              ; preds = %424, %421
  %444 = add nuw nsw i64 %357, 1
  %445 = icmp eq i64 %444, %88
  br i1 %445, label %348, label %356

446:                                              ; preds = %351
  %447 = load ptr, ptr %254, align 8, !tbaa !140
  %448 = load i32, ptr %255, align 8, !tbaa !59
  %449 = trunc i64 %267 to i32
  %450 = getelementptr i8, ptr %447, i64 %268
  %451 = getelementptr i8, ptr %447, i64 %269
  %452 = zext i32 %448 to i64
  %453 = getelementptr i8, ptr %447, i64 8
  %454 = icmp ne i32 %448, 1
  %455 = xor i32 %271, -1
  %456 = icmp ult i32 %455, %263
  %457 = insertelement <4 x double> poison, double %273, i64 0
  %458 = shufflevector <4 x double> %457, <4 x double> poison, <4 x i32> zeroinitializer
  br label %356

459:                                              ; preds = %351
  %460 = load ptr, ptr %256, align 8, !tbaa !144
  %461 = load ptr, ptr %254, align 8, !tbaa !140
  %462 = load i32, ptr %255, align 8, !tbaa !59
  %463 = trunc i64 %267 to i32
  br label %464

464:                                              ; preds = %499, %459
  %465 = phi i64 [ %500, %499 ], [ 0, %459 ]
  %466 = load ptr, ptr %12, align 8
  %467 = getelementptr inbounds double, ptr %466, i64 %267
  %468 = load ptr, ptr %52, align 8
  %469 = load i32, ptr %50, align 8
  %470 = trunc i64 %465 to i32
  %471 = mul i32 %469, %470
  %472 = getelementptr inbounds i32, ptr %460, i64 %465
  %473 = load i32, ptr %472, align 4, !tbaa !59
  %474 = mul i32 %462, %473
  %475 = add i32 %474, %463
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds double, ptr %461, i64 %476
  br label %478

478:                                              ; preds = %478, %464
  %479 = phi i64 [ %497, %478 ], [ 0, %464 ]
  %480 = getelementptr inbounds i32, ptr %460, i64 %479
  %481 = load i32, ptr %480, align 4, !tbaa !59
  %482 = load double, ptr %477, align 8, !tbaa !133
  %483 = mul i32 %481, %462
  %484 = add i32 %483, %463
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds double, ptr %461, i64 %485
  %487 = load double, ptr %486, align 8, !tbaa !133
  %488 = fmul double %482, %487
  %489 = fmul double %273, %488
  %490 = load double, ptr %467, align 8, !tbaa !133
  %491 = trunc i64 %479 to i32
  %492 = add i32 %471, %491
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds double, ptr %468, i64 %493
  %495 = load double, ptr %494, align 8, !tbaa !133
  %496 = call double @llvm.fmuladd.f64(double %489, double %490, double %495)
  store double %496, ptr %494, align 8, !tbaa !133
  %497 = add nuw nsw i64 %479, 1
  %498 = icmp eq i64 %497, %88
  br i1 %498, label %499, label %478

499:                                              ; preds = %478
  %500 = add nuw nsw i64 %465, 1
  %501 = icmp eq i64 %500, %88
  br i1 %501, label %348, label %464

502:                                              ; preds = %1335, %7
  %503 = landingpad { ptr, i32 }
          cleanup
  br label %1388

504:                                              ; preds = %67
  %505 = landingpad { ptr, i32 }
          cleanup
  br label %1348

506:                                              ; preds = %200, %183, %174, %137, %129, %108, %514, %244
  %507 = landingpad { ptr, i32 }
          cleanup
  br label %1348

508:                                              ; preds = %162
  %509 = landingpad { ptr, i32 }
          cleanup
  br label %512

510:                                              ; preds = %155
  %511 = landingpad { ptr, i32 }
          cleanup
  br label %512

512:                                              ; preds = %510, %508
  %513 = phi { ptr, i32 } [ %509, %508 ], [ %511, %510 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %1348 unwind label %1400

514:                                              ; preds = %239
  %515 = getelementptr inbounds ptr, ptr %243, i64 7
  %516 = load ptr, ptr %515, align 8
  invoke void %516(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %242, ptr noundef nonnull align 8 dereferenceable(24) %13)
          to label %517 unwind label %506

517:                                              ; preds = %514
  %518 = icmp eq i32 %85, 0
  br i1 %518, label %1091, label %519

519:                                              ; preds = %517
  %520 = getelementptr inbounds i8, ptr %81, i64 216
  %521 = load ptr, ptr %520, align 8, !tbaa !131
  %522 = icmp eq i32 %83, 0
  %523 = getelementptr inbounds i8, ptr %81, i64 144
  %524 = getelementptr inbounds i8, ptr %81, i64 160
  %525 = getelementptr inbounds i8, ptr %81, i64 480
  br i1 %522, label %1182, label %526

526:                                              ; preds = %519
  %527 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %528 = load ptr, ptr %527, align 8, !tbaa !184
  br i1 %63, label %529, label %717

529:                                              ; preds = %526
  %530 = load ptr, ptr %86, align 8, !tbaa !63
  %531 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %530, i64 0, i32 2
  %532 = load i8, ptr %531, align 4, !tbaa !148, !range !182, !noundef !183
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %534, label %589

534:                                              ; preds = %529
  %535 = load ptr, ptr %525, align 8, !tbaa !144
  %536 = load ptr, ptr %523, align 8, !tbaa !140
  %537 = load i32, ptr %524, align 8, !tbaa !59
  br label %538

538:                                              ; preds = %586, %534
  %539 = phi i64 [ %587, %586 ], [ 0, %534 ]
  %540 = getelementptr inbounds double, ptr %521, i64 %539
  %541 = load double, ptr %540, align 8, !tbaa !133
  %542 = trunc i64 %539 to i32
  br label %543

543:                                              ; preds = %583, %538
  %544 = phi i64 [ %584, %583 ], [ 0, %538 ]
  %545 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %544
  %546 = load i64, ptr %545, align 4
  %547 = load ptr, ptr %13, align 8
  %548 = getelementptr inbounds %"class.dealii::Vector", ptr %547, i64 %539, i32 3
  %549 = and i64 %546, 4294967295
  %550 = load ptr, ptr %52, align 8
  %551 = load i32, ptr %50, align 8
  %552 = trunc i64 %544 to i32
  %553 = mul i32 %551, %552
  %554 = load ptr, ptr %548, align 8, !tbaa !136
  %555 = getelementptr inbounds double, ptr %554, i64 %549
  %556 = getelementptr inbounds i32, ptr %535, i64 %544
  %557 = load i32, ptr %556, align 4, !tbaa !59
  %558 = mul i32 %537, %557
  %559 = add i32 %558, %542
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds double, ptr %536, i64 %560
  br label %562

562:                                              ; preds = %562, %543
  %563 = phi i64 [ %581, %562 ], [ 0, %543 ]
  %564 = getelementptr inbounds i32, ptr %535, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !59
  %566 = load double, ptr %561, align 8, !tbaa !133
  %567 = mul i32 %565, %537
  %568 = add i32 %567, %542
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds double, ptr %536, i64 %569
  %571 = load double, ptr %570, align 8, !tbaa !133
  %572 = fmul double %566, %571
  %573 = fmul double %541, %572
  %574 = load double, ptr %555, align 8, !tbaa !133
  %575 = trunc i64 %563 to i32
  %576 = add i32 %553, %575
  %577 = zext i32 %576 to i64
  %578 = getelementptr inbounds double, ptr %550, i64 %577
  %579 = load double, ptr %578, align 8, !tbaa !133
  %580 = call double @llvm.fmuladd.f64(double %573, double %574, double %579)
  store double %580, ptr %578, align 8, !tbaa !133
  %581 = add nuw nsw i64 %563, 1
  %582 = icmp eq i64 %581, %88
  br i1 %582, label %583, label %562

583:                                              ; preds = %562
  %584 = add nuw nsw i64 %544, 1
  %585 = icmp eq i64 %584, %88
  br i1 %585, label %586, label %543

586:                                              ; preds = %583
  %587 = add nuw nsw i64 %539, 1
  %588 = icmp eq i64 %587, %121
  br i1 %588, label %1091, label %538

589:                                              ; preds = %529
  %590 = load ptr, ptr %523, align 8, !tbaa !140
  %591 = load i32, ptr %524, align 8, !tbaa !59
  %592 = add nsw i64 %88, -1
  %593 = shl nuw nsw i64 %88, 3
  %594 = zext i32 %591 to i64
  %595 = getelementptr i8, ptr %590, i64 8
  %596 = icmp ult i32 %83, 16
  %597 = icmp ne i32 %591, 1
  %598 = trunc i64 %592 to i32
  %599 = icmp ugt i64 %592, 4294967295
  %600 = trunc i64 %592 to i32
  %601 = and i64 %88, 4294967292
  %602 = icmp eq i64 %601, %88
  br label %603

603:                                              ; preds = %714, %589
  %604 = phi i64 [ %715, %714 ], [ 0, %589 ]
  %605 = shl nuw nsw i64 %604, 3
  %606 = getelementptr i8, ptr %590, i64 %605
  %607 = add nuw i64 %593, %605
  %608 = getelementptr i8, ptr %590, i64 %607
  %609 = trunc i64 %604 to i32
  %610 = getelementptr inbounds double, ptr %521, i64 %604
  %611 = load double, ptr %610, align 8, !tbaa !133
  %612 = trunc i64 %604 to i32
  %613 = xor i32 %609, -1
  %614 = icmp ult i32 %613, %600
  %615 = insertelement <4 x double> poison, double %611, i64 0
  %616 = shufflevector <4 x double> %615, <4 x double> poison, <4 x i32> zeroinitializer
  br label %617

617:                                              ; preds = %603, %711
  %618 = phi i64 [ 0, %603 ], [ %712, %711 ]
  %619 = mul i64 %618, %594
  %620 = add i64 %604, %619
  %621 = shl i64 %620, 3
  %622 = and i64 %621, 34359738360
  %623 = getelementptr i8, ptr %590, i64 %622
  %624 = getelementptr i8, ptr %595, i64 %622
  %625 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %618
  %626 = load i64, ptr %625, align 4
  %627 = load ptr, ptr %13, align 8
  %628 = getelementptr inbounds %"class.dealii::Vector", ptr %627, i64 %604, i32 3
  %629 = and i64 %626, 4294967295
  %630 = load ptr, ptr %52, align 8
  %631 = load i32, ptr %50, align 8
  %632 = trunc i64 %618 to i32
  %633 = mul i32 %631, %632
  %634 = load ptr, ptr %628, align 8, !tbaa !136
  %635 = getelementptr double, ptr %634, i64 %629
  %636 = mul i32 %591, %632
  %637 = add i32 %636, %612
  %638 = zext i32 %637 to i64
  %639 = getelementptr inbounds double, ptr %590, i64 %638
  br i1 %596, label %690, label %640

640:                                              ; preds = %617
  %641 = xor i32 %633, -1
  %642 = icmp ult i32 %641, %598
  %643 = or i1 %642, %599
  %644 = or i1 %597, %643
  %645 = or i1 %614, %644
  br i1 %645, label %690, label %646

646:                                              ; preds = %640
  %647 = zext i32 %633 to i64
  %648 = shl nuw nsw i64 %647, 3
  %649 = getelementptr i8, ptr %630, i64 %648
  %650 = getelementptr i8, ptr %630, i64 %593
  %651 = getelementptr i8, ptr %650, i64 %648
  %652 = getelementptr i8, ptr %634, i64 8
  %653 = shl nuw nsw i64 %629, 3
  %654 = getelementptr i8, ptr %652, i64 %653
  %655 = icmp ult ptr %606, %651
  %656 = icmp ult ptr %649, %608
  %657 = and i1 %655, %656
  %658 = icmp ult ptr %623, %651
  %659 = icmp ult ptr %649, %624
  %660 = and i1 %658, %659
  %661 = or i1 %657, %660
  %662 = icmp ult ptr %635, %651
  %663 = icmp ult ptr %649, %654
  %664 = and i1 %662, %663
  %665 = or i1 %661, %664
  br i1 %665, label %690, label %666

666:                                              ; preds = %646
  %667 = load double, ptr %639, align 8, !tbaa !133, !alias.scope !436, !noalias !439
  %668 = insertelement <4 x double> poison, double %667, i64 0
  %669 = shufflevector <4 x double> %668, <4 x double> poison, <4 x i32> zeroinitializer
  %670 = load double, ptr %635, align 8, !tbaa !133, !alias.scope !441, !noalias !439
  %671 = insertelement <4 x double> poison, double %670, i64 0
  %672 = shufflevector <4 x double> %671, <4 x double> poison, <4 x i32> zeroinitializer
  br label %673

673:                                              ; preds = %673, %666
  %674 = phi i64 [ 0, %666 ], [ %687, %673 ]
  %675 = trunc i64 %674 to i32
  %676 = add i64 %674, %604
  %677 = and i64 %676, 4294967295
  %678 = getelementptr inbounds double, ptr %590, i64 %677
  %679 = load <4 x double>, ptr %678, align 8, !tbaa !133, !alias.scope !443, !noalias !439
  %680 = fmul <4 x double> %669, %679
  %681 = fmul <4 x double> %616, %680
  %682 = add i32 %633, %675
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds double, ptr %630, i64 %683
  %685 = load <4 x double>, ptr %684, align 8, !tbaa !133, !alias.scope !439
  %686 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %681, <4 x double> %672, <4 x double> %685)
  store <4 x double> %686, ptr %684, align 8, !tbaa !133, !alias.scope !439
  %687 = add nuw i64 %674, 4
  %688 = icmp eq i64 %687, %601
  br i1 %688, label %689, label %673, !llvm.loop !445

689:                                              ; preds = %673
  br i1 %602, label %711, label %690

690:                                              ; preds = %646, %640, %617, %689
  %691 = phi i64 [ 0, %646 ], [ 0, %640 ], [ 0, %617 ], [ %601, %689 ]
  br label %692

692:                                              ; preds = %690, %692
  %693 = phi i64 [ %709, %692 ], [ %691, %690 ]
  %694 = load double, ptr %639, align 8, !tbaa !133
  %695 = trunc i64 %693 to i32
  %696 = mul i32 %591, %695
  %697 = add i32 %696, %612
  %698 = zext i32 %697 to i64
  %699 = getelementptr inbounds double, ptr %590, i64 %698
  %700 = load double, ptr %699, align 8, !tbaa !133
  %701 = fmul double %694, %700
  %702 = fmul double %611, %701
  %703 = load double, ptr %635, align 8, !tbaa !133
  %704 = add i32 %633, %695
  %705 = zext i32 %704 to i64
  %706 = getelementptr inbounds double, ptr %630, i64 %705
  %707 = load double, ptr %706, align 8, !tbaa !133
  %708 = call double @llvm.fmuladd.f64(double %702, double %703, double %707)
  store double %708, ptr %706, align 8, !tbaa !133
  %709 = add nuw nsw i64 %693, 1
  %710 = icmp eq i64 %709, %88
  br i1 %710, label %711, label %692, !llvm.loop !446

711:                                              ; preds = %692, %689
  %712 = add nuw nsw i64 %618, 1
  %713 = icmp eq i64 %712, %88
  br i1 %713, label %714, label %617

714:                                              ; preds = %711
  %715 = add nuw nsw i64 %604, 1
  %716 = icmp eq i64 %715, %121
  br i1 %716, label %1091, label %603

717:                                              ; preds = %526, %796
  %718 = phi i64 [ %797, %796 ], [ 0, %526 ]
  %719 = getelementptr inbounds double, ptr %521, i64 %718
  %720 = load double, ptr %719, align 8, !tbaa !133
  %721 = trunc i64 %718 to i32
  %722 = trunc i64 %718 to i32
  br label %723

723:                                              ; preds = %717, %735
  %724 = phi i64 [ 0, %717 ], [ %736, %735 ]
  %725 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %724
  %726 = load i64, ptr %725, align 4
  %727 = trunc i64 %726 to i32
  %728 = load ptr, ptr %13, align 8
  %729 = getelementptr inbounds %"class.dealii::Vector", ptr %728, i64 %718, i32 3
  %730 = and i64 %726, 4294967295
  %731 = load ptr, ptr %52, align 8
  %732 = load i32, ptr %50, align 8
  %733 = trunc i64 %724 to i32
  %734 = mul i32 %732, %733
  br label %738

735:                                              ; preds = %793
  %736 = add nuw nsw i64 %724, 1
  %737 = icmp eq i64 %736, %88
  br i1 %737, label %796, label %723

738:                                              ; preds = %793, %723
  %739 = phi i64 [ %794, %793 ], [ 0, %723 ]
  %740 = getelementptr inbounds %"struct.std::pair.263", ptr %528, i64 %739
  %741 = load i64, ptr %740, align 4
  %742 = trunc i64 %741 to i32
  %743 = icmp eq i32 %742, %727
  br i1 %743, label %744, label %793

744:                                              ; preds = %738
  %745 = load ptr, ptr %86, align 8, !tbaa !63
  %746 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %745, i64 0, i32 2
  %747 = load i8, ptr %746, align 4, !tbaa !148, !range !182, !noundef !183
  %748 = icmp eq i8 %747, 0
  br i1 %748, label %757, label %749

749:                                              ; preds = %744
  %750 = load ptr, ptr %523, align 8, !tbaa !140
  %751 = load i32, ptr %524, align 8, !tbaa !59
  %752 = mul i32 %751, %733
  %753 = add i32 %752, %721
  %754 = zext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %750, i64 %754
  %756 = trunc i64 %739 to i32
  br label %770

757:                                              ; preds = %744
  %758 = load ptr, ptr %525, align 8, !tbaa !144
  %759 = getelementptr inbounds i32, ptr %758, i64 %724
  %760 = load i32, ptr %759, align 4, !tbaa !59
  %761 = load ptr, ptr %523, align 8, !tbaa !140
  %762 = load i32, ptr %524, align 8, !tbaa !59
  %763 = mul i32 %762, %760
  %764 = add i32 %763, %722
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds double, ptr %761, i64 %765
  %767 = getelementptr inbounds i32, ptr %758, i64 %739
  %768 = load i32, ptr %767, align 4, !tbaa !59
  %769 = trunc i64 %739 to i32
  br label %770

770:                                              ; preds = %757, %749
  %771 = phi i32 [ %769, %757 ], [ %756, %749 ]
  %772 = phi i32 [ %722, %757 ], [ %721, %749 ]
  %773 = phi ptr [ %766, %757 ], [ %755, %749 ]
  %774 = phi i32 [ %762, %757 ], [ %751, %749 ]
  %775 = phi ptr [ %761, %757 ], [ %750, %749 ]
  %776 = phi i32 [ %768, %757 ], [ %756, %749 ]
  %777 = load double, ptr %773, align 8, !tbaa !133
  %778 = mul i32 %776, %774
  %779 = add i32 %778, %772
  %780 = zext i32 %779 to i64
  %781 = getelementptr inbounds double, ptr %775, i64 %780
  %782 = load double, ptr %781, align 8, !tbaa !133
  %783 = fmul double %777, %782
  %784 = fmul double %720, %783
  %785 = load ptr, ptr %729, align 8, !tbaa !136
  %786 = getelementptr inbounds double, ptr %785, i64 %730
  %787 = load double, ptr %786, align 8, !tbaa !133
  %788 = add i32 %734, %771
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds double, ptr %731, i64 %789
  %791 = load double, ptr %790, align 8, !tbaa !133
  %792 = call double @llvm.fmuladd.f64(double %784, double %787, double %791)
  store double %792, ptr %790, align 8, !tbaa !133
  br label %793

793:                                              ; preds = %770, %738
  %794 = add nuw nsw i64 %739, 1
  %795 = icmp eq i64 %794, %88
  br i1 %795, label %735, label %738

796:                                              ; preds = %735
  %797 = add nuw nsw i64 %718, 1
  %798 = icmp eq i64 %797, %121
  br i1 %798, label %1091, label %717

799:                                              ; preds = %216, %1088
  %800 = phi i64 [ 0, %216 ], [ %1089, %1088 ]
  %801 = shl nuw nsw i64 %800, 3
  %802 = add nuw i64 %225, %801
  %803 = trunc i64 %800 to i32
  %804 = getelementptr inbounds double, ptr %218, i64 %800
  %805 = load double, ptr %804, align 8, !tbaa !133
  br i1 %219, label %1088, label %806

806:                                              ; preds = %799
  br i1 %63, label %807, label %1018

807:                                              ; preds = %806
  %808 = load ptr, ptr %86, align 8, !tbaa !63
  %809 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %808, i64 0, i32 2
  %810 = load i8, ptr %809, align 4, !tbaa !148, !range !182, !noundef !183
  %811 = icmp eq i8 %810, 0
  br i1 %811, label %812, label %887

812:                                              ; preds = %807
  %813 = load ptr, ptr %223, align 8, !tbaa !144
  %814 = load ptr, ptr %221, align 8, !tbaa !140
  %815 = load i32, ptr %222, align 8, !tbaa !59
  %816 = trunc i64 %800 to i32
  br label %817

817:                                              ; preds = %884, %812
  %818 = phi i64 [ %885, %884 ], [ 0, %812 ]
  %819 = load ptr, ptr %52, align 8
  %820 = load i32, ptr %50, align 8
  %821 = trunc i64 %818 to i32
  %822 = mul i32 %820, %821
  %823 = getelementptr inbounds i32, ptr %813, i64 %818
  %824 = load i32, ptr %823, align 4, !tbaa !59
  %825 = mul i32 %815, %824
  %826 = add i32 %825, %816
  %827 = zext i32 %826 to i64
  %828 = getelementptr inbounds double, ptr %814, i64 %827
  br i1 %236, label %866, label %829

829:                                              ; preds = %817, %829
  %830 = phi i64 [ %863, %829 ], [ 0, %817 ]
  %831 = phi i64 [ %864, %829 ], [ 0, %817 ]
  %832 = getelementptr inbounds i32, ptr %813, i64 %830
  %833 = load i32, ptr %832, align 4, !tbaa !59
  %834 = load double, ptr %828, align 8, !tbaa !133
  %835 = mul i32 %833, %815
  %836 = add i32 %835, %816
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds double, ptr %814, i64 %837
  %839 = load double, ptr %838, align 8, !tbaa !133
  %840 = fmul double %834, %839
  %841 = trunc i64 %830 to i32
  %842 = add i32 %822, %841
  %843 = zext i32 %842 to i64
  %844 = getelementptr inbounds double, ptr %819, i64 %843
  %845 = load double, ptr %844, align 8, !tbaa !133
  %846 = call double @llvm.fmuladd.f64(double %840, double %805, double %845)
  store double %846, ptr %844, align 8, !tbaa !133
  %847 = or i64 %830, 1
  %848 = getelementptr inbounds i32, ptr %813, i64 %847
  %849 = load i32, ptr %848, align 4, !tbaa !59
  %850 = load double, ptr %828, align 8, !tbaa !133
  %851 = mul i32 %849, %815
  %852 = add i32 %851, %816
  %853 = zext i32 %852 to i64
  %854 = getelementptr inbounds double, ptr %814, i64 %853
  %855 = load double, ptr %854, align 8, !tbaa !133
  %856 = fmul double %850, %855
  %857 = trunc i64 %847 to i32
  %858 = add i32 %822, %857
  %859 = zext i32 %858 to i64
  %860 = getelementptr inbounds double, ptr %819, i64 %859
  %861 = load double, ptr %860, align 8, !tbaa !133
  %862 = call double @llvm.fmuladd.f64(double %856, double %805, double %861)
  store double %862, ptr %860, align 8, !tbaa !133
  %863 = add nuw nsw i64 %830, 2
  %864 = add i64 %831, 2
  %865 = icmp eq i64 %864, %237
  br i1 %865, label %866, label %829

866:                                              ; preds = %829, %817
  %867 = phi i64 [ 0, %817 ], [ %863, %829 ]
  br i1 %238, label %884, label %868

868:                                              ; preds = %866
  %869 = getelementptr inbounds i32, ptr %813, i64 %867
  %870 = load i32, ptr %869, align 4, !tbaa !59
  %871 = load double, ptr %828, align 8, !tbaa !133
  %872 = mul i32 %870, %815
  %873 = add i32 %872, %816
  %874 = zext i32 %873 to i64
  %875 = getelementptr inbounds double, ptr %814, i64 %874
  %876 = load double, ptr %875, align 8, !tbaa !133
  %877 = fmul double %871, %876
  %878 = trunc i64 %867 to i32
  %879 = add i32 %822, %878
  %880 = zext i32 %879 to i64
  %881 = getelementptr inbounds double, ptr %819, i64 %880
  %882 = load double, ptr %881, align 8, !tbaa !133
  %883 = call double @llvm.fmuladd.f64(double %877, double %805, double %882)
  store double %883, ptr %881, align 8, !tbaa !133
  br label %884

884:                                              ; preds = %866, %868
  %885 = add nuw nsw i64 %818, 1
  %886 = icmp eq i64 %885, %88
  br i1 %886, label %1088, label %817

887:                                              ; preds = %807
  %888 = load ptr, ptr %221, align 8, !tbaa !140
  %889 = load i32, ptr %222, align 8, !tbaa !59
  %890 = trunc i64 %800 to i32
  %891 = getelementptr i8, ptr %888, i64 %801
  %892 = getelementptr i8, ptr %888, i64 %802
  %893 = zext i32 %889 to i64
  %894 = getelementptr i8, ptr %888, i64 8
  %895 = icmp ne i32 %889, 1
  %896 = xor i32 %803, -1
  %897 = icmp ult i32 %896, %229
  %898 = insertelement <4 x double> poison, double %805, i64 0
  %899 = shufflevector <4 x double> %898, <4 x double> poison, <4 x i32> zeroinitializer
  %900 = insertelement <4 x double> poison, double %805, i64 0
  %901 = shufflevector <4 x double> %900, <4 x double> poison, <4 x i32> zeroinitializer
  br label %902

902:                                              ; preds = %1015, %887
  %903 = phi i64 [ %1016, %1015 ], [ 0, %887 ]
  %904 = mul i64 %903, %893
  %905 = add i64 %800, %904
  %906 = shl i64 %905, 3
  %907 = and i64 %906, 34359738360
  %908 = getelementptr i8, ptr %888, i64 %907
  %909 = getelementptr i8, ptr %894, i64 %907
  %910 = load ptr, ptr %52, align 8
  %911 = load i32, ptr %50, align 8
  %912 = trunc i64 %903 to i32
  %913 = mul i32 %911, %912
  %914 = mul i32 %889, %912
  %915 = add i32 %914, %890
  %916 = zext i32 %915 to i64
  %917 = getelementptr inbounds double, ptr %888, i64 %916
  br i1 %226, label %963, label %918

918:                                              ; preds = %902
  %919 = xor i32 %913, -1
  %920 = icmp ult i32 %919, %227
  %921 = or i1 %920, %228
  %922 = or i1 %895, %921
  %923 = or i1 %897, %922
  br i1 %923, label %963, label %924

924:                                              ; preds = %918
  %925 = zext i32 %913 to i64
  %926 = shl nuw nsw i64 %925, 3
  %927 = getelementptr i8, ptr %910, i64 %926
  %928 = getelementptr i8, ptr %910, i64 %225
  %929 = getelementptr i8, ptr %928, i64 %926
  %930 = icmp ult ptr %891, %929
  %931 = icmp ult ptr %927, %892
  %932 = and i1 %930, %931
  %933 = icmp ult ptr %908, %929
  %934 = icmp ult ptr %927, %909
  %935 = and i1 %933, %934
  %936 = or i1 %932, %935
  br i1 %936, label %963, label %937

937:                                              ; preds = %924
  %938 = load double, ptr %917, align 8, !tbaa !133, !alias.scope !447, !noalias !450
  %939 = insertelement <4 x double> poison, double %938, i64 0
  %940 = shufflevector <4 x double> %939, <4 x double> poison, <4 x i32> zeroinitializer
  br label %941

941:                                              ; preds = %941, %937
  %942 = phi i64 [ 0, %937 ], [ %960, %941 ]
  %943 = trunc i64 %942 to i32
  %944 = add i64 %942, %800
  %945 = and i64 %944, 4294967295
  %946 = getelementptr inbounds double, ptr %888, i64 %945
  %947 = load <4 x double>, ptr %946, align 8, !tbaa !133, !alias.scope !452, !noalias !450
  %948 = getelementptr inbounds double, ptr %946, i64 4
  %949 = load <4 x double>, ptr %948, align 8, !tbaa !133, !alias.scope !452, !noalias !450
  %950 = fmul <4 x double> %940, %947
  %951 = fmul <4 x double> %940, %949
  %952 = add i32 %913, %943
  %953 = zext i32 %952 to i64
  %954 = getelementptr inbounds double, ptr %910, i64 %953
  %955 = load <4 x double>, ptr %954, align 8, !tbaa !133, !alias.scope !450
  %956 = getelementptr inbounds double, ptr %954, i64 4
  %957 = load <4 x double>, ptr %956, align 8, !tbaa !133, !alias.scope !450
  %958 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %950, <4 x double> %899, <4 x double> %955)
  %959 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %951, <4 x double> %901, <4 x double> %957)
  store <4 x double> %958, ptr %954, align 8, !tbaa !133, !alias.scope !450
  store <4 x double> %959, ptr %956, align 8, !tbaa !133, !alias.scope !450
  %960 = add nuw i64 %942, 8
  %961 = icmp eq i64 %960, %230
  br i1 %961, label %962, label %941, !llvm.loop !454

962:                                              ; preds = %941
  br i1 %231, label %1015, label %963

963:                                              ; preds = %924, %918, %902, %962
  %964 = phi i64 [ 0, %924 ], [ 0, %918 ], [ 0, %902 ], [ %230, %962 ]
  %965 = xor i64 %964, -1
  br i1 %233, label %981, label %966

966:                                              ; preds = %963
  %967 = load double, ptr %917, align 8, !tbaa !133
  %968 = trunc i64 %964 to i32
  %969 = mul i32 %889, %968
  %970 = add i32 %969, %890
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds double, ptr %888, i64 %971
  %973 = load double, ptr %972, align 8, !tbaa !133
  %974 = fmul double %967, %973
  %975 = add i32 %913, %968
  %976 = zext i32 %975 to i64
  %977 = getelementptr inbounds double, ptr %910, i64 %976
  %978 = load double, ptr %977, align 8, !tbaa !133
  %979 = call double @llvm.fmuladd.f64(double %974, double %805, double %978)
  store double %979, ptr %977, align 8, !tbaa !133
  %980 = or i64 %964, 1
  br label %981

981:                                              ; preds = %966, %963
  %982 = phi i64 [ %964, %963 ], [ %980, %966 ]
  %983 = icmp eq i64 %965, %234
  br i1 %983, label %1015, label %984

984:                                              ; preds = %981, %984
  %985 = phi i64 [ %1013, %984 ], [ %982, %981 ]
  %986 = load double, ptr %917, align 8, !tbaa !133
  %987 = trunc i64 %985 to i32
  %988 = mul i32 %889, %987
  %989 = add i32 %988, %890
  %990 = zext i32 %989 to i64
  %991 = getelementptr inbounds double, ptr %888, i64 %990
  %992 = load double, ptr %991, align 8, !tbaa !133
  %993 = fmul double %986, %992
  %994 = add i32 %913, %987
  %995 = zext i32 %994 to i64
  %996 = getelementptr inbounds double, ptr %910, i64 %995
  %997 = load double, ptr %996, align 8, !tbaa !133
  %998 = call double @llvm.fmuladd.f64(double %993, double %805, double %997)
  store double %998, ptr %996, align 8, !tbaa !133
  %999 = load double, ptr %917, align 8, !tbaa !133
  %1000 = trunc i64 %985 to i32
  %1001 = add i32 %1000, 1
  %1002 = mul i32 %889, %1001
  %1003 = add i32 %1002, %890
  %1004 = zext i32 %1003 to i64
  %1005 = getelementptr inbounds double, ptr %888, i64 %1004
  %1006 = load double, ptr %1005, align 8, !tbaa !133
  %1007 = fmul double %999, %1006
  %1008 = add i32 %913, %1001
  %1009 = zext i32 %1008 to i64
  %1010 = getelementptr inbounds double, ptr %910, i64 %1009
  %1011 = load double, ptr %1010, align 8, !tbaa !133
  %1012 = call double @llvm.fmuladd.f64(double %1007, double %805, double %1011)
  store double %1012, ptr %1010, align 8, !tbaa !133
  %1013 = add nuw nsw i64 %985, 2
  %1014 = icmp eq i64 %1013, %88
  br i1 %1014, label %1015, label %984, !llvm.loop !455

1015:                                             ; preds = %981, %984, %962
  %1016 = add nuw nsw i64 %903, 1
  %1017 = icmp eq i64 %1016, %88
  br i1 %1017, label %1088, label %902

1018:                                             ; preds = %806
  %1019 = load ptr, ptr %220, align 8, !tbaa !184
  %1020 = trunc i64 %800 to i32
  %1021 = trunc i64 %800 to i32
  br label %1022

1022:                                             ; preds = %1085, %1018
  %1023 = phi i64 [ %1086, %1085 ], [ 0, %1018 ]
  %1024 = load ptr, ptr %52, align 8
  %1025 = load i32, ptr %50, align 8
  %1026 = trunc i64 %1023 to i32
  %1027 = mul i32 %1025, %1026
  %1028 = getelementptr inbounds %"struct.std::pair.263", ptr %1019, i64 %1023
  br label %1029

1029:                                             ; preds = %1022, %1082
  %1030 = phi i64 [ 0, %1022 ], [ %1083, %1082 ]
  %1031 = load i64, ptr %1028, align 4
  %1032 = getelementptr inbounds %"struct.std::pair.263", ptr %1019, i64 %1030
  %1033 = load i64, ptr %1032, align 4
  %1034 = trunc i64 %1031 to i32
  %1035 = trunc i64 %1033 to i32
  %1036 = icmp eq i32 %1034, %1035
  br i1 %1036, label %1037, label %1082

1037:                                             ; preds = %1029
  %1038 = load ptr, ptr %86, align 8, !tbaa !63
  %1039 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1038, i64 0, i32 2
  %1040 = load i8, ptr %1039, align 4, !tbaa !148, !range !182, !noundef !183
  %1041 = icmp eq i8 %1040, 0
  br i1 %1041, label %1050, label %1042

1042:                                             ; preds = %1037
  %1043 = load ptr, ptr %221, align 8, !tbaa !140
  %1044 = load i32, ptr %222, align 8, !tbaa !59
  %1045 = mul i32 %1044, %1026
  %1046 = add i32 %1045, %1020
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds double, ptr %1043, i64 %1047
  %1049 = trunc i64 %1030 to i32
  br label %1063

1050:                                             ; preds = %1037
  %1051 = load ptr, ptr %223, align 8, !tbaa !144
  %1052 = getelementptr inbounds i32, ptr %1051, i64 %1023
  %1053 = load i32, ptr %1052, align 4, !tbaa !59
  %1054 = load ptr, ptr %221, align 8, !tbaa !140
  %1055 = load i32, ptr %222, align 8, !tbaa !59
  %1056 = mul i32 %1055, %1053
  %1057 = add i32 %1056, %1021
  %1058 = zext i32 %1057 to i64
  %1059 = getelementptr inbounds double, ptr %1054, i64 %1058
  %1060 = getelementptr inbounds i32, ptr %1051, i64 %1030
  %1061 = load i32, ptr %1060, align 4, !tbaa !59
  %1062 = trunc i64 %1030 to i32
  br label %1063

1063:                                             ; preds = %1050, %1042
  %1064 = phi i32 [ %1062, %1050 ], [ %1049, %1042 ]
  %1065 = phi i32 [ %1021, %1050 ], [ %1020, %1042 ]
  %1066 = phi ptr [ %1059, %1050 ], [ %1048, %1042 ]
  %1067 = phi i32 [ %1055, %1050 ], [ %1044, %1042 ]
  %1068 = phi ptr [ %1054, %1050 ], [ %1043, %1042 ]
  %1069 = phi i32 [ %1061, %1050 ], [ %1049, %1042 ]
  %1070 = load double, ptr %1066, align 8, !tbaa !133
  %1071 = mul i32 %1069, %1067
  %1072 = add i32 %1071, %1065
  %1073 = zext i32 %1072 to i64
  %1074 = getelementptr inbounds double, ptr %1068, i64 %1073
  %1075 = load double, ptr %1074, align 8, !tbaa !133
  %1076 = fmul double %1070, %1075
  %1077 = add i32 %1027, %1064
  %1078 = zext i32 %1077 to i64
  %1079 = getelementptr inbounds double, ptr %1024, i64 %1078
  %1080 = load double, ptr %1079, align 8, !tbaa !133
  %1081 = call double @llvm.fmuladd.f64(double %1076, double %805, double %1080)
  store double %1081, ptr %1079, align 8, !tbaa !133
  br label %1082

1082:                                             ; preds = %1063, %1029
  %1083 = add nuw nsw i64 %1030, 1
  %1084 = icmp eq i64 %1083, %88
  br i1 %1084, label %1085, label %1029

1085:                                             ; preds = %1082
  %1086 = add nuw nsw i64 %1023, 1
  %1087 = icmp eq i64 %1086, %88
  br i1 %1087, label %1088, label %1022

1088:                                             ; preds = %1085, %1015, %884, %799
  %1089 = add nuw nsw i64 %800, 1
  %1090 = icmp eq i64 %1089, %121
  br i1 %1090, label %1091, label %799

1091:                                             ; preds = %796, %714, %586, %348, %1088, %517, %247, %214
  %1092 = icmp eq i32 %83, 0
  br i1 %1092, label %1182, label %1093

1093:                                             ; preds = %1091
  %1094 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  br i1 %63, label %1095, label %1134

1095:                                             ; preds = %1093, %1129
  %1096 = phi i64 [ %1130, %1129 ], [ 0, %1093 ]
  %1097 = trunc i64 %1096 to i32
  br label %1098

1098:                                             ; preds = %1126, %1095
  %1099 = phi i64 [ %1127, %1126 ], [ 0, %1095 ]
  %1100 = load ptr, ptr %52, align 8, !tbaa !140
  %1101 = load i32, ptr %50, align 8, !tbaa !59
  %1102 = mul i32 %1101, %1097
  %1103 = trunc i64 %1099 to i32
  %1104 = add i32 %1102, %1103
  %1105 = zext i32 %1104 to i64
  %1106 = getelementptr inbounds double, ptr %1100, i64 %1105
  %1107 = load double, ptr %1106, align 8, !tbaa !133
  %1108 = fptrunc double %1107 to float
  %1109 = fcmp oeq float %1108, 0.000000e+00
  br i1 %1109, label %1126, label %1110

1110:                                             ; preds = %1098
  %1111 = load ptr, ptr %14, align 8, !tbaa !144
  %1112 = getelementptr inbounds i32, ptr %1111, i64 %1099
  %1113 = load i32, ptr %1112, align 4, !tbaa !59
  %1114 = getelementptr inbounds i32, ptr %1111, i64 %1096
  %1115 = load i32, ptr %1114, align 4, !tbaa !59
  %1116 = load ptr, ptr %64, align 8, !tbaa !383
  %1117 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1116, i32 noundef %1115, i32 noundef %1113)
          to label %1118 unwind label %1132

1118:                                             ; preds = %1110
  %1119 = icmp eq i32 %1117, -1
  br i1 %1119, label %1126, label %1120

1120:                                             ; preds = %1118
  %1121 = load ptr, ptr %65, align 8, !tbaa !456
  %1122 = zext i32 %1117 to i64
  %1123 = getelementptr inbounds float, ptr %1121, i64 %1122
  %1124 = load float, ptr %1123, align 4, !tbaa !282
  %1125 = fadd float %1124, %1108
  store float %1125, ptr %1123, align 4, !tbaa !282
  br label %1126

1126:                                             ; preds = %1120, %1118, %1098
  %1127 = add nuw nsw i64 %1099, 1
  %1128 = icmp eq i64 %1127, %88
  br i1 %1128, label %1129, label %1098

1129:                                             ; preds = %1126
  %1130 = add nuw nsw i64 %1096, 1
  %1131 = icmp eq i64 %1130, %88
  br i1 %1131, label %1182, label %1095

1132:                                             ; preds = %1110
  %1133 = landingpad { ptr, i32 }
          cleanup
  br label %1348

1134:                                             ; preds = %1093, %1177
  %1135 = phi i64 [ %1178, %1177 ], [ 0, %1093 ]
  %1136 = trunc i64 %1135 to i32
  br label %1137

1137:                                             ; preds = %1134, %1174
  %1138 = phi i64 [ 0, %1134 ], [ %1175, %1174 ]
  %1139 = load ptr, ptr %1094, align 8, !tbaa !184
  %1140 = getelementptr inbounds %"struct.std::pair.263", ptr %1139, i64 %1135
  %1141 = load i64, ptr %1140, align 4
  %1142 = getelementptr inbounds %"struct.std::pair.263", ptr %1139, i64 %1138
  %1143 = load i64, ptr %1142, align 4
  %1144 = trunc i64 %1141 to i32
  %1145 = trunc i64 %1143 to i32
  %1146 = icmp eq i32 %1144, %1145
  br i1 %1146, label %1147, label %1174

1147:                                             ; preds = %1137
  %1148 = load ptr, ptr %52, align 8, !tbaa !140
  %1149 = load i32, ptr %50, align 8, !tbaa !59
  %1150 = mul i32 %1149, %1136
  %1151 = trunc i64 %1138 to i32
  %1152 = add i32 %1150, %1151
  %1153 = zext i32 %1152 to i64
  %1154 = getelementptr inbounds double, ptr %1148, i64 %1153
  %1155 = load double, ptr %1154, align 8, !tbaa !133
  %1156 = fptrunc double %1155 to float
  %1157 = fcmp oeq float %1156, 0.000000e+00
  br i1 %1157, label %1174, label %1158

1158:                                             ; preds = %1147
  %1159 = load ptr, ptr %14, align 8, !tbaa !144
  %1160 = getelementptr inbounds i32, ptr %1159, i64 %1138
  %1161 = load i32, ptr %1160, align 4, !tbaa !59
  %1162 = getelementptr inbounds i32, ptr %1159, i64 %1135
  %1163 = load i32, ptr %1162, align 4, !tbaa !59
  %1164 = load ptr, ptr %64, align 8, !tbaa !383
  %1165 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1164, i32 noundef %1163, i32 noundef %1161)
          to label %1166 unwind label %1180

1166:                                             ; preds = %1158
  %1167 = icmp eq i32 %1165, -1
  br i1 %1167, label %1174, label %1168

1168:                                             ; preds = %1166
  %1169 = load ptr, ptr %65, align 8, !tbaa !456
  %1170 = zext i32 %1165 to i64
  %1171 = getelementptr inbounds float, ptr %1169, i64 %1170
  %1172 = load float, ptr %1171, align 4, !tbaa !282
  %1173 = fadd float %1172, %1156
  store float %1173, ptr %1171, align 4, !tbaa !282
  br label %1174

1174:                                             ; preds = %1168, %1166, %1147, %1137
  %1175 = add nuw nsw i64 %1138, 1
  %1176 = icmp eq i64 %1175, %88
  br i1 %1176, label %1177, label %1137

1177:                                             ; preds = %1174
  %1178 = add nuw nsw i64 %1135, 1
  %1179 = icmp eq i64 %1178, %88
  br i1 %1179, label %1182, label %1134

1180:                                             ; preds = %1158
  %1181 = landingpad { ptr, i32 }
          cleanup
  br label %1348

1182:                                             ; preds = %1177, %1129, %249, %519, %1091
  %1183 = load ptr, ptr %66, align 8, !tbaa !62
  %1184 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1183, i64 0, i32 1
  %1185 = load ptr, ptr %1184, align 8, !tbaa !46
  %1186 = ptrtoint ptr %1185 to i64
  %1187 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1183, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1188 = load i32, ptr %15, align 8
  %1189 = load i32, ptr %32, align 4
  br label %1190

1190:                                             ; preds = %1278, %1182
  %1191 = phi i32 [ %1188, %1182 ], [ %1257, %1278 ]
  %1192 = phi i32 [ %1188, %1182 ], [ %1258, %1278 ]
  %1193 = phi i32 [ %1188, %1182 ], [ %1279, %1278 ]
  %1194 = phi i32 [ %1189, %1182 ], [ %1259, %1278 ]
  %1195 = add nsw i32 %1194, 1
  %1196 = sext i32 %1193 to i64
  %1197 = getelementptr inbounds ptr, ptr %1185, i64 %1196
  %1198 = load ptr, ptr %1197, align 8, !tbaa !33
  %1199 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1198, i64 0, i32 4
  %1200 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1198, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1201 = load ptr, ptr %1200, align 8, !tbaa !48
  %1202 = load ptr, ptr %1199, align 8, !tbaa !50
  %1203 = ptrtoint ptr %1201 to i64
  %1204 = ptrtoint ptr %1202 to i64
  %1205 = sub i64 %1203, %1204
  %1206 = sdiv exact i64 %1205, 24
  %1207 = trunc i64 %1206 to i32
  %1208 = icmp slt i32 %1195, %1207
  br i1 %1208, label %1256, label %1209

1209:                                             ; preds = %1190
  %1210 = add nsw i64 %1196, 1
  %1211 = trunc i64 %1210 to i32
  store i32 %1211, ptr %15, align 8, !tbaa !60
  %1212 = load ptr, ptr %1187, align 8, !tbaa !51
  %1213 = ptrtoint ptr %1212 to i64
  %1214 = sub i64 %1213, %1186
  %1215 = shl i64 %1214, 29
  %1216 = ashr i64 %1215, 32
  %1217 = icmp slt i64 %1210, %1216
  br i1 %1217, label %1218, label %1250

1218:                                             ; preds = %1209
  %1219 = getelementptr inbounds ptr, ptr %1185, i64 %1210
  %1220 = load ptr, ptr %1219, align 8, !tbaa !33
  %1221 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1220, i64 0, i32 4
  %1222 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1220, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1223 = load ptr, ptr %1222, align 8, !tbaa !48
  %1224 = load ptr, ptr %1221, align 8, !tbaa !50
  %1225 = ptrtoint ptr %1223 to i64
  %1226 = ptrtoint ptr %1224 to i64
  %1227 = sub i64 %1225, %1226
  %1228 = sdiv exact i64 %1227, 24
  %1229 = trunc i64 %1228 to i32
  %1230 = icmp sgt i32 %1229, 0
  br i1 %1230, label %1252, label %1244

1231:                                             ; preds = %1244
  %1232 = getelementptr inbounds ptr, ptr %1185, i64 %1246
  %1233 = load ptr, ptr %1232, align 8, !tbaa !33
  %1234 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1233, i64 0, i32 4
  %1235 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1233, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1236 = load ptr, ptr %1235, align 8, !tbaa !48
  %1237 = load ptr, ptr %1234, align 8, !tbaa !50
  %1238 = ptrtoint ptr %1236 to i64
  %1239 = ptrtoint ptr %1237 to i64
  %1240 = sub i64 %1238, %1239
  %1241 = sdiv exact i64 %1240, 24
  %1242 = trunc i64 %1241 to i32
  %1243 = icmp sgt i32 %1242, 0
  br i1 %1243, label %1251, label %1244, !llvm.loop !52

1244:                                             ; preds = %1218, %1231
  %1245 = phi i64 [ %1246, %1231 ], [ %1210, %1218 ]
  %1246 = add i64 %1245, 1
  %1247 = trunc i64 %1246 to i32
  %1248 = icmp eq i64 %1246, %1216
  br i1 %1248, label %1249, label %1231, !llvm.loop !52

1249:                                             ; preds = %1244
  store i32 %1247, ptr %15, align 8, !tbaa !60
  br label %1250

1250:                                             ; preds = %1249, %1209
  store i32 -1, ptr %15, align 8, !tbaa !60
  br label %1256

1251:                                             ; preds = %1231
  store i32 %1247, ptr %15, align 8, !tbaa !60
  br label %1252

1252:                                             ; preds = %1251, %1218
  %1253 = phi i32 [ %1211, %1218 ], [ %1247, %1251 ]
  %1254 = phi i64 [ %1210, %1218 ], [ %1246, %1251 ]
  %1255 = trunc i64 %1254 to i32
  br label %1256

1256:                                             ; preds = %1252, %1250, %1190
  %1257 = phi i32 [ %1191, %1190 ], [ -1, %1250 ], [ %1253, %1252 ]
  %1258 = phi i32 [ %1192, %1190 ], [ -1, %1250 ], [ %1255, %1252 ]
  %1259 = phi i32 [ %1195, %1190 ], [ -1, %1250 ], [ 0, %1252 ]
  %1260 = phi i32 [ %1193, %1190 ], [ -1, %1250 ], [ %1255, %1252 ]
  %1261 = or i32 %1260, %1259
  %1262 = icmp sgt i32 %1261, -1
  br i1 %1262, label %1263, label %1280

1263:                                             ; preds = %1256
  %1264 = zext i32 %1260 to i64
  %1265 = getelementptr inbounds ptr, ptr %1185, i64 %1264
  %1266 = load ptr, ptr %1265, align 8, !tbaa !33
  %1267 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1266, i64 0, i32 4, i32 0, i32 3
  %1268 = load ptr, ptr %1267, align 8, !tbaa !54
  %1269 = lshr i32 %1259, 6
  %1270 = zext i32 %1269 to i64
  %1271 = getelementptr inbounds i64, ptr %1268, i64 %1270
  %1272 = and i32 %1259, 63
  %1273 = zext i32 %1272 to i64
  %1274 = shl nuw i64 1, %1273
  %1275 = load i64, ptr %1271, align 8, !tbaa !56
  %1276 = and i64 %1275, %1274
  %1277 = icmp eq i64 %1276, 0
  br i1 %1277, label %1278, label %1280

1278:                                             ; preds = %1263, %1283
  %1279 = phi i32 [ %1260, %1263 ], [ %1258, %1283 ]
  br label %1190

1280:                                             ; preds = %1263, %1256
  store i32 %1259, ptr %32, align 4, !tbaa !61
  %1281 = or i32 %1259, %1258
  %1282 = icmp sgt i32 %1281, -1
  br i1 %1282, label %1283, label %1294

1283:                                             ; preds = %1280
  %1284 = zext i32 %1258 to i64
  %1285 = getelementptr inbounds ptr, ptr %1185, i64 %1284
  %1286 = load ptr, ptr %1285, align 8, !tbaa !33
  %1287 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1286, i64 0, i32 4, i32 0, i32 1
  %1288 = shl i32 %1259, 2
  %1289 = zext i32 %1288 to i64
  %1290 = load ptr, ptr %1287, align 8, !tbaa !57
  %1291 = getelementptr inbounds i32, ptr %1290, i64 %1289
  %1292 = load i32, ptr %1291, align 4, !tbaa !59
  %1293 = icmp eq i32 %1292, -1
  br i1 %1293, label %1294, label %1278

1294:                                             ; preds = %1280, %1283
  %1295 = load i32, ptr %33, align 4, !tbaa !61
  %1296 = icmp ne i32 %1259, %1295
  %1297 = load i32, ptr %31, align 8
  %1298 = icmp ne i32 %1257, %1297
  %1299 = select i1 %1296, i1 true, i1 %1298
  br i1 %1299, label %67, label %1300

1300:                                             ; preds = %1294
  %1301 = load ptr, ptr %14, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1302 = icmp eq ptr %1301, null
  br i1 %1302, label %1304, label %1303

1303:                                             ; preds = %1300
  call void @_ZdlPv(ptr noundef nonnull %1301) #21
  br label %1304

1304:                                             ; preds = %41, %1303, %1300
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1305 = load ptr, ptr %13, align 8, !tbaa !224
  %1306 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %1307 = load ptr, ptr %1306, align 8, !tbaa !226
  %1308 = icmp eq ptr %1305, %1307
  br i1 %1308, label %1318, label %1309

1309:                                             ; preds = %1304, %1313
  %1310 = phi ptr [ %1314, %1313 ], [ %1305, %1304 ]
  %1311 = load ptr, ptr %1310, align 8, !tbaa !41
  %1312 = load ptr, ptr %1311, align 8
  invoke void %1312(ptr noundef nonnull align 8 dereferenceable(88) %1310)
          to label %1313 unwind label %1322

1313:                                             ; preds = %1309
  %1314 = getelementptr inbounds %"class.dealii::Vector", ptr %1310, i64 1
  %1315 = icmp eq ptr %1314, %1307
  br i1 %1315, label %1316, label %1309

1316:                                             ; preds = %1313
  %1317 = load ptr, ptr %13, align 8, !tbaa !224
  br label %1318

1318:                                             ; preds = %1316, %1304
  %1319 = phi ptr [ %1317, %1316 ], [ %1305, %1304 ]
  %1320 = icmp eq ptr %1319, null
  br i1 %1320, label %1326, label %1321

1321:                                             ; preds = %1318
  call void @_ZdlPv(ptr noundef nonnull %1319) #21
  br label %1326

1322:                                             ; preds = %1309
  %1323 = landingpad { ptr, i32 }
          cleanup
  %1324 = load ptr, ptr %13, align 8, !tbaa !224
  %1325 = icmp eq ptr %1324, null
  br i1 %1325, label %1377, label %1374

1326:                                             ; preds = %1321, %1318
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  %1327 = load ptr, ptr %12, align 8, !tbaa !131
  %1328 = icmp eq ptr %1327, null
  br i1 %1328, label %1330, label %1329

1329:                                             ; preds = %1326
  call void @_ZdlPv(ptr noundef nonnull %1327) #21
  br label %1330

1330:                                             ; preds = %1329, %1326
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1331 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1332 = load ptr, ptr %1331, align 8, !tbaa !140
  %1333 = icmp eq ptr %1332, null
  br i1 %1333, label %1335, label %1334

1334:                                             ; preds = %1330
  call void @_ZdaPv(ptr noundef nonnull %1332) #21
  br label %1335

1335:                                             ; preds = %1334, %1330
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1336 unwind label %502

1336:                                             ; preds = %1335
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  %1337 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1337)
          to label %1346 unwind label %1338

1338:                                             ; preds = %1336
  %1339 = landingpad { ptr, i32 }
          cleanup
  %1340 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1340)
          to label %1341 unwind label %1343

1341:                                             ; preds = %1338, %1399
  %1342 = phi { ptr, i32 } [ %1389, %1399 ], [ %1339, %1338 ]
  resume { ptr, i32 } %1342

1343:                                             ; preds = %1338
  %1344 = landingpad { ptr, i32 }
          catch ptr null
  %1345 = extractvalue { ptr, i32 } %1344, 0
  call void @__clang_call_terminate(ptr %1345) #22
  unreachable

1346:                                             ; preds = %1336
  %1347 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  call void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1347)
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %10) #19
  ret void

1348:                                             ; preds = %1180, %1132, %506, %142, %512, %504
  %1349 = phi { ptr, i32 } [ %505, %504 ], [ %513, %512 ], [ %507, %506 ], [ %143, %142 ], [ %1181, %1180 ], [ %1133, %1132 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1350 = load ptr, ptr %14, align 8, !tbaa !144
  %1351 = icmp eq ptr %1350, null
  br i1 %1351, label %1353, label %1352

1352:                                             ; preds = %1348
  call void @_ZdlPv(ptr noundef nonnull %1350) #21
  br label %1353

1353:                                             ; preds = %1352, %1348
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1354 = load ptr, ptr %13, align 8, !tbaa !224
  %1355 = load ptr, ptr %60, align 8, !tbaa !226
  %1356 = icmp eq ptr %1354, %1355
  br i1 %1356, label %1366, label %1357

1357:                                             ; preds = %1353, %1361
  %1358 = phi ptr [ %1362, %1361 ], [ %1354, %1353 ]
  %1359 = load ptr, ptr %1358, align 8, !tbaa !41
  %1360 = load ptr, ptr %1359, align 8
  invoke void %1360(ptr noundef nonnull align 8 dereferenceable(88) %1358)
          to label %1361 unwind label %1369

1361:                                             ; preds = %1357
  %1362 = getelementptr inbounds %"class.dealii::Vector", ptr %1358, i64 1
  %1363 = icmp eq ptr %1362, %1355
  br i1 %1363, label %1364, label %1357

1364:                                             ; preds = %1361
  %1365 = load ptr, ptr %13, align 8, !tbaa !224
  br label %1366

1366:                                             ; preds = %1364, %1353
  %1367 = phi ptr [ %1365, %1364 ], [ %1354, %1353 ]
  %1368 = icmp eq ptr %1367, null
  br i1 %1368, label %1377, label %1374

1369:                                             ; preds = %1357
  %1370 = landingpad { ptr, i32 }
          catch ptr null
  %1371 = load ptr, ptr %13, align 8, !tbaa !224
  %1372 = icmp eq ptr %1371, null
  br i1 %1372, label %1402, label %1373

1373:                                             ; preds = %1369
  call void @_ZdlPv(ptr noundef nonnull %1371) #21
  br label %1402

1374:                                             ; preds = %1366, %1322
  %1375 = phi ptr [ %1324, %1322 ], [ %1367, %1366 ]
  %1376 = phi { ptr, i32 } [ %1323, %1322 ], [ %1349, %1366 ]
  call void @_ZdlPv(ptr noundef nonnull %1375) #21
  br label %1377

1377:                                             ; preds = %1374, %1366, %1322
  %1378 = phi { ptr, i32 } [ %1323, %1322 ], [ %1349, %1366 ], [ %1376, %1374 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  %1379 = load ptr, ptr %12, align 8, !tbaa !131
  %1380 = icmp eq ptr %1379, null
  br i1 %1380, label %1382, label %1381

1381:                                             ; preds = %1377
  call void @_ZdlPv(ptr noundef nonnull %1379) #21
  br label %1382

1382:                                             ; preds = %1381, %1377
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1383 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1384 = load ptr, ptr %1383, align 8, !tbaa !140
  %1385 = icmp eq ptr %1384, null
  br i1 %1385, label %1387, label %1386

1386:                                             ; preds = %1382
  call void @_ZdaPv(ptr noundef nonnull %1384) #21
  br label %1387

1387:                                             ; preds = %1386, %1382
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1388 unwind label %1400

1388:                                             ; preds = %1387, %502
  %1389 = phi { ptr, i32 } [ %503, %502 ], [ %1378, %1387 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  %1390 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1390)
          to label %1391 unwind label %1393

1391:                                             ; preds = %1388
  %1392 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1392)
          to label %1399 unwind label %1400

1393:                                             ; preds = %1388
  %1394 = landingpad { ptr, i32 }
          catch ptr null
  %1395 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1395)
          to label %1402 unwind label %1396

1396:                                             ; preds = %1393
  %1397 = landingpad { ptr, i32 }
          catch ptr null
  %1398 = extractvalue { ptr, i32 } %1397, 0
  call void @__clang_call_terminate(ptr %1398) #22
  unreachable

1399:                                             ; preds = %1391
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %10) #19
  br label %1341

1400:                                             ; preds = %1391, %1387, %512
  %1401 = landingpad { ptr, i32 }
          catch ptr null
  br label %1402

1402:                                             ; preds = %1400, %1393, %1369, %1373
  %1403 = phi { ptr, i32 } [ %1370, %1373 ], [ %1370, %1369 ], [ %1401, %1400 ], [ %1394, %1393 ]
  %1404 = extractvalue { ptr, i32 } %1403, 0
  call void @__clang_call_terminate(ptr %1404) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull align 8 dereferenceable(224) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 1 %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.266", align 8
  %11 = alloca %"class.boost::_bi::bind_t.391", align 8
  %12 = alloca %"class.boost::function.80", align 8
  %13 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  store ptr null, ptr %12, align 8, !tbaa !25
  %14 = load ptr, ptr %1, align 8, !tbaa !25
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  store ptr %14, ptr %12, align 8, !tbaa !25
  %17 = load ptr, ptr %14, align 8, !tbaa !227
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %17(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef 0)
  br label %20

20:                                               ; preds = %9, %16
  call void @llvm.experimental.noalias.scope.decl(metadata !458)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325, !noalias !458
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %13, i64 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325, !alias.scope !458
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %13, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !325, !noalias !458
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %24, ptr noundef nonnull align 8 dereferenceable(16) %25, i64 16, i1 false)
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %27, ptr %28, align 8, !tbaa !325, !alias.scope !458
  %29 = ptrtoint ptr %8 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIfEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSV_ISA_EENSV_ISE_EENSV_ISH_EESM_SP_NSV_ISR_EEEENS_3_bi6bind_tINS11_11unspecifiedET_NS11_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES14_S16_S17_S18_S19_S1A_S1B_S1C_(ptr nonnull sret(%"class.boost::_bi::bind_t.391") align 8 %11, ptr noundef nonnull %12, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, ptr noundef %6, ptr noundef nonnull %13, i64 %29)
          to label %30 unwind label %59

30:                                               ; preds = %20
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS4_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull %11, i32 noundef 0)
          to label %31 unwind label %61

31:                                               ; preds = %30
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %32 unwind label %63

32:                                               ; preds = %31
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  %34 = icmp eq ptr %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = load ptr, ptr %33, align 8, !tbaa !231
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %36(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %39, i32 noundef 2)
          to label %40 unwind label %61

40:                                               ; preds = %38, %35
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %41

41:                                               ; preds = %40, %32
  %42 = load ptr, ptr %11, align 8, !tbaa !25
  %43 = icmp eq ptr %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = load ptr, ptr %42, align 8, !tbaa !423
  %46 = icmp eq ptr %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(24) %48, ptr noundef nonnull align 8 dereferenceable(24) %48, i32 noundef 2)
          to label %49 unwind label %59

49:                                               ; preds = %47, %44
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %50

50:                                               ; preds = %49, %41
  %51 = load ptr, ptr %12, align 8, !tbaa !25
  %52 = icmp eq ptr %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr %51, align 8, !tbaa !423
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %50
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  ret void

59:                                               ; preds = %47, %20
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %83

61:                                               ; preds = %38, %30
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %73

63:                                               ; preds = %31
  %64 = landingpad { ptr, i32 }
          cleanup
  %65 = load ptr, ptr %10, align 8, !tbaa !25
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = load ptr, ptr %65, align 8, !tbaa !231
  %69 = icmp eq ptr %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  invoke void %68(ptr noundef nonnull align 8 dereferenceable(24) %71, ptr noundef nonnull align 8 dereferenceable(24) %71, i32 noundef 2)
          to label %72 unwind label %93

72:                                               ; preds = %70, %67
  store ptr null, ptr %10, align 8, !tbaa !25
  br label %73

73:                                               ; preds = %72, %63, %61
  %74 = phi { ptr, i32 } [ %62, %61 ], [ %64, %63 ], [ %64, %72 ]
  %75 = load ptr, ptr %11, align 8, !tbaa !25
  %76 = icmp eq ptr %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = load ptr, ptr %75, align 8, !tbaa !423
  %79 = icmp eq ptr %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.boost::function_base", ptr %11, i64 0, i32 1
  invoke void %78(ptr noundef nonnull align 8 dereferenceable(24) %81, ptr noundef nonnull align 8 dereferenceable(24) %81, i32 noundef 2)
          to label %82 unwind label %93

82:                                               ; preds = %80, %77
  store ptr null, ptr %11, align 8, !tbaa !25
  br label %83

83:                                               ; preds = %82, %73, %59
  %84 = phi { ptr, i32 } [ %60, %59 ], [ %74, %73 ], [ %74, %82 ]
  %85 = load ptr, ptr %12, align 8, !tbaa !25
  %86 = icmp eq ptr %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = load ptr, ptr %85, align 8, !tbaa !423
  %89 = icmp eq ptr %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %88(ptr noundef nonnull align 8 dereferenceable(24) %91, ptr noundef nonnull align 8 dereferenceable(24) %91, i32 noundef 2)
          to label %92 unwind label %93

92:                                               ; preds = %87, %90, %83
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  resume { ptr, i32 } %84

93:                                               ; preds = %90, %80, %70
  %94 = landingpad { ptr, i32 }
          catch ptr null
  %95 = extractvalue { ptr, i32 } %94, 0
  call void @__clang_call_terminate(ptr %95) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EEPKNS_8FunctionIXT1_EEE(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef %3)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %9 = alloca %"class.std::vector.43", align 8
  %10 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %11 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %12 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %13 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %14 = alloca %"class.dealii::Threads::Thread", align 16
  %15 = alloca %"class.dealii::Threads::internal::fun_encapsulator.82", align 8
  %16 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %17 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %8, i64 0, i32 1
  store ptr %8, ptr %18, align 8, !tbaa !10
  store ptr %8, ptr %8, align 8, !tbaa !13
  %19 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %8, i64 0, i32 1
  store i64 0, ptr %19, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %10, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %20 unwind label %43

20:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %12, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %21 unwind label %45

21:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %12, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !325
  store ptr %24, ptr %22, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %9, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %17)
          to label %25 unwind label %45

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %16, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.boost::shared_ptr", ptr %14, i64 0, i32 1
  %33 = zext i32 %17 to i64
  br label %49

34:                                               ; preds = %103, %25
  %35 = load ptr, ptr %8, align 8, !tbaa !13
  %36 = icmp eq ptr %35, %8
  br i1 %36, label %122, label %37

37:                                               ; preds = %34, %40
  %38 = phi ptr [ %41, %40 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_List_node", ptr %38, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %39)
          to label %40 unwind label %155

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !13
  %42 = icmp eq ptr %41, %8
  br i1 %42, label %122, label %37

43:                                               ; preds = %7
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %21, %20
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %46, %45 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  br label %162

49:                                               ; preds = %27, %103
  %50 = phi i64 [ 0, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !461)
  store ptr null, ptr %15, align 8, !tbaa !25, !alias.scope !461
  %51 = load ptr, ptr @_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable, align 8, !tbaa !464, !noalias !461
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  invoke void %51(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %54 unwind label %106

54:                                               ; preds = %53, %49
  store ptr @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE, ptr %28, align 8, !tbaa !30, !alias.scope !461
  store ptr @_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable, ptr %15, align 8, !tbaa !25, !alias.scope !461
  %55 = load ptr, ptr %9, align 8, !tbaa !332
  %56 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50
  %57 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  store ptr %58, ptr %29, align 8, !tbaa !325
  %59 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50, i32 1
  %60 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  store ptr %61, ptr %31, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %14, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %62 unwind label %108

62:                                               ; preds = %54
  %63 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %64 unwind label %110

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_List_node", ptr %63, i64 0, i32 1
  %66 = load <2 x ptr>, ptr %14, align 16, !tbaa !33
  store <2 x ptr> %66, ptr %65, align 8, !tbaa !33
  %67 = extractelement <2 x ptr> %66, i64 1
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %67, i64 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !34
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %70, align 8, !tbaa !34
  br label %73

73:                                               ; preds = %69, %64
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull %8) #19
  %74 = load i64, ptr %19, align 8, !tbaa !36
  %75 = add i64 %74, 1
  store i64 %75, ptr %19, align 8, !tbaa !36
  %76 = load ptr, ptr %32, align 8, !tbaa !39
  %77 = icmp eq ptr %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = add nsw i64 %80, -1
  store i64 %81, ptr %79, align 8, !tbaa !34
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %78
  %84 = load ptr, ptr %76, align 8, !tbaa !41
  %85 = getelementptr inbounds ptr, ptr %84, i64 2
  %86 = load ptr, ptr %85, align 8
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %87 unwind label %108

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !43
  %90 = add nsw i64 %89, -1
  store i64 %90, ptr %88, align 8, !tbaa !43
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load ptr, ptr %76, align 8, !tbaa !41
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %96 unwind label %108

96:                                               ; preds = %87, %78, %73, %92
  %97 = load ptr, ptr %15, align 8, !tbaa !25
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load ptr, ptr %97, align 8, !tbaa !464
  %101 = icmp eq ptr %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  invoke void %100(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %103 unwind label %106

103:                                              ; preds = %99, %102, %96
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  %104 = add nuw nsw i64 %50, 1
  %105 = icmp eq i64 %104, %33
  br i1 %105, label %34, label %49

106:                                              ; preds = %102, %53
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %120

108:                                              ; preds = %92, %83, %54
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %112

110:                                              ; preds = %62
  %111 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %112 unwind label %165

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  %114 = load ptr, ptr %15, align 8, !tbaa !25
  %115 = icmp eq ptr %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !464
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  invoke void %117(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %120 unwind label %165

120:                                              ; preds = %116, %119, %112, %106
  %121 = phi { ptr, i32 } [ %107, %106 ], [ %113, %112 ], [ %113, %119 ], [ %113, %116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  br label %157

122:                                              ; preds = %40, %34
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %123 = load ptr, ptr %9, align 8, !tbaa !332
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZdlPv(ptr noundef nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  %127 = load ptr, ptr %8, align 8, !tbaa !13
  %128 = icmp eq ptr %127, %8
  br i1 %128, label %154, label %129

129:                                              ; preds = %126, %152
  %130 = phi ptr [ %131, %152 ], [ %127, %126 ]
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds %"struct.std::_List_node", ptr %130, i64 0, i32 1, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !34
  %138 = add nsw i64 %137, -1
  store i64 %138, ptr %136, align 8, !tbaa !34
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load ptr, ptr %133, align 8, !tbaa !41
  %142 = getelementptr inbounds ptr, ptr %141, i64 2
  %143 = load ptr, ptr %142, align 8
  call void %143(ptr noundef nonnull align 8 dereferenceable(24) %133)
  %144 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !43
  %146 = add nsw i64 %145, -1
  store i64 %146, ptr %144, align 8, !tbaa !43
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load ptr, ptr %133, align 8, !tbaa !41
  %150 = getelementptr inbounds ptr, ptr %149, i64 3
  %151 = load ptr, ptr %150, align 8
  call void %151(ptr noundef nonnull align 8 dereferenceable(24) %133)
  br label %152

152:                                              ; preds = %148, %140, %135, %129
  call void @_ZdlPv(ptr noundef nonnull %130) #21
  %153 = icmp eq ptr %131, %8
  br i1 %153, label %154, label %129

154:                                              ; preds = %152, %126
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  ret void

155:                                              ; preds = %37
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %157

157:                                              ; preds = %155, %120
  %158 = phi { ptr, i32 } [ %121, %120 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %159 = load ptr, ptr %9, align 8, !tbaa !332
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %159) #21
  br label %162

162:                                              ; preds = %161, %157, %47
  %163 = phi { ptr, i32 } [ %48, %47 ], [ %158, %157 ], [ %158, %161 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %164 unwind label %165

164:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  resume { ptr, i32 } %163

165:                                              ; preds = %119, %162, %110
  %166 = landingpad { ptr, i32 }
          catch ptr null
  %167 = extractvalue { ptr, i32 } %166, 0
  call void @__clang_call_terminate(ptr %167) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator20create_mass_matrix_2ILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca %"class.dealii::hp::FEValues", align 8
  %14 = alloca %"class.dealii::FullMatrix", align 8
  %15 = alloca %"class.dealii::Vector", align 8
  %16 = alloca %"class.std::vector.92", align 8
  %17 = alloca %"class.std::vector.92", align 8
  %18 = alloca %"class.std::vector.258", align 8
  %19 = alloca %"class.std::vector.28", align 8
  %20 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %21 = alloca %"class.dealii::Vector", align 8
  %22 = icmp eq ptr %6, null
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %13) #19
  %23 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !336
  call void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %13, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(96) %24, ptr noundef nonnull align 8 dereferenceable(96) %2, i32 noundef 49)
  %25 = load ptr, ptr %23, align 8, !tbaa !336
  %26 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !338
  %28 = load ptr, ptr %27, align 8, !tbaa !340
  %29 = getelementptr inbounds i8, ptr %28, i64 116
  %30 = load i32, ptr %29, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %14) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %14, i32 noundef 0)
          to label %31 unwind label %314

31:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %32 unwind label %316

32:                                               ; preds = %31
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %33 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %16) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %17) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %19) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %19, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %20) #19
  %34 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %20, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %36 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %20, i64 0, i32 1
  store ptr %35, ptr %36, align 8, !tbaa !325
  %37 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %20, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, ptr %38, align 4, !tbaa !61
  %41 = load i32, ptr %39, align 4, !tbaa !61
  %42 = icmp ne i32 %40, %41
  %43 = load i32, ptr %20, align 8
  %44 = load i32, ptr %37, align 8
  %45 = icmp ne i32 %43, %44
  %46 = select i1 %42, i1 true, i1 %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  br label %1275

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4
  %50 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 1
  %51 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %52 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4, i32 0, i32 0, i64 1
  %53 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %54 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4, i32 0, i32 0, i64 2
  %55 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 3
  %56 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 3, i32 0, i32 0, i64 1
  %57 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 2
  %58 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 2
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %61 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %16, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 1
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 1
  %64 = icmp eq i32 %30, 0
  %65 = zext i32 %30 to i64
  %66 = shl nuw nsw i64 %65, 3
  %67 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 3
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 2
  %69 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %19, i64 0, i32 1
  %71 = getelementptr inbounds %"class.dealii::Function", ptr %6, i64 0, i32 2
  %72 = icmp eq i32 %30, 1
  %73 = getelementptr inbounds %"class.dealii::SparseMatrix.39", ptr %3, i64 0, i32 1
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix.39", ptr %3, i64 0, i32 2
  %75 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %76 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %20, i64 0, i32 2
  br label %77

77:                                               ; preds = %48, %1242
  invoke void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240) %13, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %78 unwind label %318

78:                                               ; preds = %77
  %79 = load ptr, ptr %50, align 8, !tbaa !342
  %80 = load i32, ptr %49, align 8, !tbaa !59
  %81 = load i32, ptr %51, align 8, !tbaa !59
  %82 = mul i32 %81, %80
  %83 = load i32, ptr %52, align 4, !tbaa !59
  %84 = add i32 %82, %83
  %85 = load i32, ptr %53, align 4, !tbaa !59
  %86 = mul i32 %84, %85
  %87 = load i32, ptr %54, align 8, !tbaa !59
  %88 = add i32 %86, %87
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %79, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !346
  %92 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 3
  %93 = load i32, ptr %92, align 8, !tbaa !65
  %94 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 2
  %95 = load i32, ptr %94, align 4, !tbaa !127
  %96 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 6
  %97 = load ptr, ptr %96, align 8, !tbaa !63
  %98 = zext i32 %93 to i64
  %99 = shl nuw i64 %98, 32
  %100 = or i64 %99, %98
  store i64 %100, ptr %55, align 4
  %101 = mul i32 %93, %93
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %78
  %104 = load ptr, ptr %58, align 8, !tbaa !140
  %105 = icmp eq ptr %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  call void @_ZdaPv(ptr noundef nonnull %104) #21
  br label %107

107:                                              ; preds = %106, %103
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %58, i8 0, i64 20, i1 false)
  br label %130

108:                                              ; preds = %78
  %109 = load i32, ptr %57, align 8, !tbaa !348
  %110 = icmp ult i32 %109, %101
  %111 = load ptr, ptr %58, align 8, !tbaa !140
  br i1 %110, label %112, label %125

112:                                              ; preds = %108
  %113 = icmp eq ptr %111, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  call void @_ZdaPv(ptr noundef nonnull %111) #21
  %115 = load i32, ptr %55, align 4, !tbaa !59
  %116 = load i32, ptr %56, align 8, !tbaa !59
  %117 = mul i32 %116, %115
  br label %118

118:                                              ; preds = %114, %112
  %119 = phi i32 [ %117, %114 ], [ %101, %112 ]
  store i32 %101, ptr %57, align 8, !tbaa !348
  %120 = zext i32 %101 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %121) #20
          to label %123 unwind label %320

123:                                              ; preds = %118
  store ptr %122, ptr %58, align 8, !tbaa !140
  %124 = icmp eq i32 %119, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %123, %108
  %126 = phi ptr [ %122, %123 ], [ %111, %108 ]
  %127 = phi i32 [ %119, %123 ], [ %101, %108 ]
  %128 = zext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  call void @llvm.memset.p0.i64(ptr align 8 %126, i8 0, i64 %129, i1 false), !tbaa !133
  br label %130

130:                                              ; preds = %125, %123, %107
  %131 = icmp eq i32 %93, 0
  br i1 %131, label %132, label %137

132:                                              ; preds = %130
  %133 = load ptr, ptr %60, align 8, !tbaa !136
  %134 = icmp eq ptr %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_ZdaPv(ptr noundef nonnull %133) #21
  br label %136

136:                                              ; preds = %135, %132
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  br label %153

137:                                              ; preds = %130
  %138 = load i32, ptr %59, align 4, !tbaa !138
  %139 = icmp ult i32 %138, %93
  %140 = load ptr, ptr %60, align 8, !tbaa !136
  br i1 %139, label %143, label %141

141:                                              ; preds = %137
  %142 = shl nuw nsw i64 %98, 3
  br label %150

143:                                              ; preds = %137
  %144 = icmp eq ptr %140, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  call void @_ZdaPv(ptr noundef nonnull %140) #21
  br label %146

146:                                              ; preds = %145, %143
  %147 = shl nuw nsw i64 %98, 3
  %148 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %147) #20
          to label %149 unwind label %320

149:                                              ; preds = %146
  store ptr %148, ptr %60, align 8, !tbaa !136
  store i32 %93, ptr %59, align 4, !tbaa !138
  br label %150

150:                                              ; preds = %141, %149
  %151 = phi i64 [ %142, %141 ], [ %147, %149 ]
  %152 = phi ptr [ %140, %141 ], [ %148, %149 ]
  store i32 %93, ptr %33, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr align 8 %152, i8 0, i64 %151, i1 false), !tbaa !133
  br label %153

153:                                              ; preds = %150, %136
  %154 = load i32, ptr %94, align 4, !tbaa !127
  %155 = zext i32 %154 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12)
  store double 0.000000e+00, ptr %12, align 8, !tbaa !133
  %156 = load ptr, ptr %61, align 8, !tbaa !33
  %157 = load ptr, ptr %16, align 8, !tbaa !131
  %158 = ptrtoint ptr %156 to i64
  %159 = ptrtoint ptr %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 3
  %162 = icmp ult i64 %161, %155
  br i1 %162, label %163, label %165

163:                                              ; preds = %153
  %164 = sub nsw i64 %155, %161
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %16, ptr %156, i64 noundef %164, ptr noundef nonnull align 8 dereferenceable(8) %12)
          to label %171 unwind label %320

165:                                              ; preds = %153
  %166 = icmp ugt i64 %161, %155
  br i1 %166, label %167, label %171

167:                                              ; preds = %165
  %168 = getelementptr inbounds double, ptr %157, i64 %155
  %169 = icmp eq ptr %156, %168
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  store ptr %168, ptr %61, align 8, !tbaa !135
  br label %171

171:                                              ; preds = %170, %167, %165, %163
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12)
  %172 = zext i32 %95 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  store double 0.000000e+00, ptr %11, align 8, !tbaa !133
  %173 = load ptr, ptr %62, align 8, !tbaa !33
  %174 = load ptr, ptr %17, align 8, !tbaa !131
  %175 = ptrtoint ptr %173 to i64
  %176 = ptrtoint ptr %174 to i64
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %178, %172
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = sub nsw i64 %172, %178
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr %173, i64 noundef %181, ptr noundef nonnull align 8 dereferenceable(8) %11)
          to label %188 unwind label %320

182:                                              ; preds = %171
  %183 = icmp ugt i64 %178, %172
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = getelementptr inbounds double, ptr %174, i64 %172
  %186 = icmp eq ptr %173, %185
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  store ptr %185, ptr %62, align 8, !tbaa !135
  br label %188

188:                                              ; preds = %187, %184, %182, %180
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %189 unwind label %320

189:                                              ; preds = %188
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %21, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %63, i8 0, i64 16, i1 false)
  br i1 %64, label %198, label %190

190:                                              ; preds = %189
  %191 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %66) #20
          to label %192 unwind label %193

192:                                              ; preds = %190
  store ptr %191, ptr %67, align 8, !tbaa !136
  store i32 %30, ptr %68, align 4, !tbaa !138
  store i32 %30, ptr %63, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %191, i8 0, i64 %66, i1 false), !tbaa !133
  br label %198

193:                                              ; preds = %190
  %194 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %1329 unwind label %195

195:                                              ; preds = %193
  %196 = landingpad { ptr, i32 }
          catch ptr null
  %197 = extractvalue { ptr, i32 } %196, 0
  call void @__clang_call_terminate(ptr %197) #22
  unreachable

198:                                              ; preds = %192, %189
  %199 = load ptr, ptr %69, align 8, !tbaa !33
  %200 = load ptr, ptr %18, align 8, !tbaa !224
  %201 = ptrtoint ptr %199 to i64
  %202 = ptrtoint ptr %200 to i64
  %203 = sub i64 %201, %202
  %204 = sdiv exact i64 %203, 88
  %205 = icmp ult i64 %204, %172
  br i1 %205, label %206, label %208

206:                                              ; preds = %198
  %207 = sub nsw i64 %172, %204
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr %199, i64 noundef %207, ptr noundef nonnull align 8 dereferenceable(88) %21)
          to label %221 unwind label %324

208:                                              ; preds = %198
  %209 = icmp ugt i64 %204, %172
  br i1 %209, label %210, label %221

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.dealii::Vector", ptr %200, i64 %172
  %212 = icmp eq ptr %199, %211
  br i1 %212, label %221, label %213

213:                                              ; preds = %210, %217
  %214 = phi ptr [ %218, %217 ], [ %211, %210 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !41
  %216 = load ptr, ptr %215, align 8
  invoke void %216(ptr noundef nonnull align 8 dereferenceable(88) %214)
          to label %217 unwind label %322

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.dealii::Vector", ptr %214, i64 1
  %219 = icmp eq ptr %218, %199
  br i1 %219, label %220, label %213

220:                                              ; preds = %217
  store ptr %211, ptr %69, align 8, !tbaa !226
  br label %221

221:                                              ; preds = %220, %210, %208, %206
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %21, align 8, !tbaa !41
  %222 = load ptr, ptr %67, align 8, !tbaa !136
  %223 = icmp eq ptr %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  call void @_ZdaPv(ptr noundef nonnull %222) #21
  store ptr null, ptr %67, align 8, !tbaa !136
  br label %225

225:                                              ; preds = %224, %221
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %226 unwind label %320

226:                                              ; preds = %225
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4, !tbaa !59
  %227 = load ptr, ptr %70, align 8, !tbaa !33
  %228 = load ptr, ptr %19, align 8, !tbaa !144
  %229 = ptrtoint ptr %227 to i64
  %230 = ptrtoint ptr %228 to i64
  %231 = sub i64 %229, %230
  %232 = ashr exact i64 %231, 2
  %233 = icmp ult i64 %232, %98
  br i1 %233, label %234, label %236

234:                                              ; preds = %226
  %235 = sub nsw i64 %98, %232
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr %227, i64 noundef %235, ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %242 unwind label %320

236:                                              ; preds = %226
  %237 = icmp ugt i64 %232, %98
  br i1 %237, label %238, label %242

238:                                              ; preds = %236
  %239 = getelementptr inbounds i32, ptr %228, i64 %98
  %240 = icmp eq ptr %227, %239
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  store ptr %239, ptr %70, align 8, !tbaa !349
  br label %242

242:                                              ; preds = %241, %238, %236, %234
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  %243 = load i32, ptr %55, align 4, !tbaa !59
  %244 = load i32, ptr %56, align 8, !tbaa !59
  %245 = mul i32 %244, %243
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %251, label %247

247:                                              ; preds = %242
  %248 = load ptr, ptr %58, align 8, !tbaa !140
  %249 = zext i32 %245 to i64
  %250 = shl nuw nsw i64 %249, 3
  call void @llvm.memset.p0.i64(ptr align 8 %248, i8 0, i64 %250, i1 false), !tbaa !133
  br label %251

251:                                              ; preds = %247, %242
  %252 = load i32, ptr %33, align 8, !tbaa !139
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %251
  %255 = load ptr, ptr %60, align 8, !tbaa !136
  %256 = zext i32 %252 to i64
  %257 = shl nuw nsw i64 %256, 3
  call void @llvm.memset.p0.i64(ptr align 8 %255, i8 0, i64 %257, i1 false), !tbaa !133
  br label %258

258:                                              ; preds = %254, %251
  %259 = load ptr, ptr %36, align 8, !tbaa !325
  %260 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %259, i64 0, i32 4
  %261 = load i32, ptr %20, align 8, !tbaa !60
  %262 = sext i32 %261 to i64
  %263 = load ptr, ptr %260, align 8, !tbaa !350
  %264 = getelementptr inbounds ptr, ptr %263, i64 %262
  %265 = load ptr, ptr %264, align 8, !tbaa !33
  %266 = load i32, ptr %38, align 4, !tbaa !61
  %267 = sext i32 %266 to i64
  %268 = load ptr, ptr %265, align 8, !tbaa !144
  %269 = getelementptr inbounds i32, ptr %268, i64 %267
  %270 = load i32, ptr %269, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef %270)
          to label %271 unwind label %320

271:                                              ; preds = %258
  %272 = getelementptr inbounds i8, ptr %91, i64 312
  %273 = load ptr, ptr %4, align 8, !tbaa !41
  %274 = getelementptr inbounds ptr, ptr %273, i64 6
  %275 = load ptr, ptr %274, align 8
  invoke void %275(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %16, i32 noundef 0)
          to label %276 unwind label %320

276:                                              ; preds = %271
  br i1 %22, label %277, label %288

277:                                              ; preds = %276
  %278 = icmp eq i32 %95, 0
  br i1 %278, label %1019, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds i8, ptr %91, i64 216
  %281 = load ptr, ptr %280, align 8, !tbaa !131
  %282 = getelementptr inbounds i8, ptr %91, i64 480
  %283 = getelementptr inbounds i8, ptr %91, i64 144
  %284 = getelementptr inbounds i8, ptr %91, i64 160
  %285 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %286 = load ptr, ptr %16, align 8
  %287 = load ptr, ptr %60, align 8
  br label %881

288:                                              ; preds = %276
  %289 = load i32, ptr %71, align 8, !tbaa !145
  %290 = icmp eq i32 %289, 1
  %291 = load ptr, ptr %6, align 8, !tbaa !41
  br i1 %290, label %292, label %581

292:                                              ; preds = %288
  %293 = getelementptr inbounds ptr, ptr %291, i64 6
  %294 = load ptr, ptr %293, align 8
  invoke void %294(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %17, i32 noundef 0)
          to label %295 unwind label %320

295:                                              ; preds = %292
  %296 = icmp eq i32 %95, 0
  br i1 %296, label %1019, label %297

297:                                              ; preds = %295
  %298 = getelementptr inbounds i8, ptr %91, i64 216
  %299 = load ptr, ptr %298, align 8, !tbaa !131
  %300 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %301 = getelementptr inbounds i8, ptr %91, i64 144
  %302 = getelementptr inbounds i8, ptr %91, i64 160
  %303 = getelementptr inbounds i8, ptr %91, i64 480
  %304 = load ptr, ptr %16, align 8
  %305 = load ptr, ptr %60, align 8
  %306 = add nsw i64 %98, -1
  %307 = shl nuw nsw i64 %98, 3
  %308 = icmp ult i32 %93, 16
  %309 = trunc i64 %306 to i32
  %310 = icmp ugt i64 %306, 4294967295
  %311 = trunc i64 %306 to i32
  %312 = and i64 %98, 4294967292
  %313 = icmp eq i64 %312, %98
  br label %328

314:                                              ; preds = %1316, %9
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %1380

316:                                              ; preds = %1310, %31
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %1373

318:                                              ; preds = %77
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %1329

320:                                              ; preds = %258, %234, %225, %188, %180, %163, %146, %118, %581, %292, %271
  %321 = landingpad { ptr, i32 }
          cleanup
  br label %1329

322:                                              ; preds = %213
  %323 = landingpad { ptr, i32 }
          cleanup
  br label %326

324:                                              ; preds = %206
  %325 = landingpad { ptr, i32 }
          cleanup
  br label %326

326:                                              ; preds = %324, %322
  %327 = phi { ptr, i32 } [ %323, %322 ], [ %325, %324 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %21)
          to label %1329 unwind label %1392

328:                                              ; preds = %297, %515
  %329 = phi i64 [ 0, %297 ], [ %516, %515 ]
  %330 = shl nuw nsw i64 %329, 3
  %331 = add nuw i64 %307, %330
  %332 = add nuw i64 %330, 8
  %333 = trunc i64 %329 to i32
  %334 = getelementptr inbounds double, ptr %299, i64 %329
  %335 = load double, ptr %334, align 8, !tbaa !133
  br i1 %131, label %515, label %336

336:                                              ; preds = %328
  %337 = load ptr, ptr %96, align 8, !tbaa !63
  %338 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %337, i64 0, i32 2
  %339 = load i8, ptr %338, align 4, !tbaa !148, !range !182, !noundef !183
  %340 = icmp eq i8 %339, 0
  %341 = load ptr, ptr %301, align 8, !tbaa !140
  %342 = load i32, ptr %302, align 8, !tbaa !59
  %343 = getelementptr inbounds double, ptr %304, i64 %329
  br i1 %72, label %344, label %499

344:                                              ; preds = %336
  br i1 %340, label %345, label %392

345:                                              ; preds = %344
  %346 = load ptr, ptr %303, align 8, !tbaa !144
  %347 = trunc i64 %329 to i32
  br label %348

348:                                              ; preds = %362, %345
  %349 = phi i64 [ %369, %362 ], [ 0, %345 ]
  %350 = load ptr, ptr %17, align 8
  %351 = getelementptr inbounds double, ptr %350, i64 %329
  %352 = load ptr, ptr %58, align 8
  %353 = load i32, ptr %56, align 8
  %354 = trunc i64 %349 to i32
  %355 = mul i32 %353, %354
  %356 = getelementptr inbounds i32, ptr %346, i64 %349
  %357 = load i32, ptr %356, align 4, !tbaa !59
  %358 = mul i32 %342, %357
  %359 = add i32 %358, %347
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds double, ptr %341, i64 %360
  br label %371

362:                                              ; preds = %371
  %363 = load double, ptr %361, align 8, !tbaa !133
  %364 = load double, ptr %343, align 8, !tbaa !133
  %365 = fmul double %363, %364
  %366 = getelementptr inbounds double, ptr %305, i64 %349
  %367 = load double, ptr %366, align 8, !tbaa !133
  %368 = call double @llvm.fmuladd.f64(double %365, double %335, double %367)
  store double %368, ptr %366, align 8, !tbaa !133
  %369 = add nuw nsw i64 %349, 1
  %370 = icmp eq i64 %369, %98
  br i1 %370, label %515, label %348

371:                                              ; preds = %371, %348
  %372 = phi i64 [ %390, %371 ], [ 0, %348 ]
  %373 = getelementptr inbounds i32, ptr %346, i64 %372
  %374 = load i32, ptr %373, align 4, !tbaa !59
  %375 = load double, ptr %361, align 8, !tbaa !133
  %376 = mul i32 %374, %342
  %377 = add i32 %376, %347
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds double, ptr %341, i64 %378
  %380 = load double, ptr %379, align 8, !tbaa !133
  %381 = fmul double %375, %380
  %382 = fmul double %335, %381
  %383 = load double, ptr %351, align 8, !tbaa !133
  %384 = trunc i64 %372 to i32
  %385 = add i32 %355, %384
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds double, ptr %352, i64 %386
  %388 = load double, ptr %387, align 8, !tbaa !133
  %389 = call double @llvm.fmuladd.f64(double %382, double %383, double %388)
  store double %389, ptr %387, align 8, !tbaa !133
  %390 = add nuw nsw i64 %372, 1
  %391 = icmp eq i64 %390, %98
  br i1 %391, label %362, label %371

392:                                              ; preds = %344
  %393 = trunc i64 %329 to i32
  %394 = getelementptr i8, ptr %341, i64 %330
  %395 = getelementptr i8, ptr %341, i64 %331
  %396 = zext i32 %342 to i64
  %397 = getelementptr i8, ptr %341, i64 8
  %398 = icmp ne i32 %342, 1
  %399 = xor i32 %333, -1
  %400 = icmp ult i32 %399, %311
  %401 = insertelement <4 x double> poison, double %335, i64 0
  %402 = shufflevector <4 x double> %401, <4 x double> poison, <4 x i32> zeroinitializer
  br label %403

403:                                              ; preds = %471, %392
  %404 = phi i64 [ %478, %471 ], [ 0, %392 ]
  %405 = mul i64 %404, %396
  %406 = add i64 %329, %405
  %407 = shl i64 %406, 3
  %408 = and i64 %407, 34359738360
  %409 = getelementptr i8, ptr %341, i64 %408
  %410 = getelementptr i8, ptr %397, i64 %408
  %411 = load ptr, ptr %17, align 8
  %412 = getelementptr double, ptr %411, i64 %329
  %413 = load ptr, ptr %58, align 8
  %414 = load i32, ptr %56, align 8
  %415 = trunc i64 %404 to i32
  %416 = mul i32 %414, %415
  %417 = mul i32 %342, %415
  %418 = add i32 %417, %393
  %419 = zext i32 %418 to i64
  %420 = getelementptr inbounds double, ptr %341, i64 %419
  br i1 %308, label %469, label %421

421:                                              ; preds = %403
  %422 = xor i32 %416, -1
  %423 = icmp ult i32 %422, %309
  %424 = or i1 %423, %310
  %425 = or i1 %398, %424
  %426 = or i1 %400, %425
  br i1 %426, label %469, label %427

427:                                              ; preds = %421
  %428 = zext i32 %416 to i64
  %429 = shl nuw nsw i64 %428, 3
  %430 = getelementptr i8, ptr %413, i64 %429
  %431 = getelementptr i8, ptr %413, i64 %307
  %432 = getelementptr i8, ptr %431, i64 %429
  %433 = getelementptr i8, ptr %411, i64 %332
  %434 = icmp ult ptr %394, %432
  %435 = icmp ult ptr %430, %395
  %436 = and i1 %434, %435
  %437 = icmp ult ptr %409, %432
  %438 = icmp ult ptr %430, %410
  %439 = and i1 %437, %438
  %440 = or i1 %436, %439
  %441 = icmp ult ptr %412, %432
  %442 = icmp ult ptr %430, %433
  %443 = and i1 %441, %442
  %444 = or i1 %440, %443
  br i1 %444, label %469, label %445

445:                                              ; preds = %427
  %446 = load double, ptr %420, align 8, !tbaa !133, !alias.scope !466, !noalias !469
  %447 = insertelement <4 x double> poison, double %446, i64 0
  %448 = shufflevector <4 x double> %447, <4 x double> poison, <4 x i32> zeroinitializer
  %449 = load double, ptr %412, align 8, !tbaa !133, !alias.scope !471, !noalias !469
  %450 = insertelement <4 x double> poison, double %449, i64 0
  %451 = shufflevector <4 x double> %450, <4 x double> poison, <4 x i32> zeroinitializer
  br label %452

452:                                              ; preds = %452, %445
  %453 = phi i64 [ 0, %445 ], [ %466, %452 ]
  %454 = trunc i64 %453 to i32
  %455 = add i64 %453, %329
  %456 = and i64 %455, 4294967295
  %457 = getelementptr inbounds double, ptr %341, i64 %456
  %458 = load <4 x double>, ptr %457, align 8, !tbaa !133, !alias.scope !473, !noalias !469
  %459 = fmul <4 x double> %448, %458
  %460 = fmul <4 x double> %402, %459
  %461 = add i32 %416, %454
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds double, ptr %413, i64 %462
  %464 = load <4 x double>, ptr %463, align 8, !tbaa !133, !alias.scope !469
  %465 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %460, <4 x double> %451, <4 x double> %464)
  store <4 x double> %465, ptr %463, align 8, !tbaa !133, !alias.scope !469
  %466 = add nuw i64 %453, 4
  %467 = icmp eq i64 %466, %312
  br i1 %467, label %468, label %452, !llvm.loop !475

468:                                              ; preds = %452
  br i1 %313, label %471, label %469

469:                                              ; preds = %427, %421, %403, %468
  %470 = phi i64 [ 0, %427 ], [ 0, %421 ], [ 0, %403 ], [ %312, %468 ]
  br label %480

471:                                              ; preds = %480, %468
  %472 = load double, ptr %420, align 8, !tbaa !133
  %473 = load double, ptr %343, align 8, !tbaa !133
  %474 = fmul double %472, %473
  %475 = getelementptr inbounds double, ptr %305, i64 %404
  %476 = load double, ptr %475, align 8, !tbaa !133
  %477 = call double @llvm.fmuladd.f64(double %474, double %335, double %476)
  store double %477, ptr %475, align 8, !tbaa !133
  %478 = add nuw nsw i64 %404, 1
  %479 = icmp eq i64 %478, %98
  br i1 %479, label %515, label %403

480:                                              ; preds = %469, %480
  %481 = phi i64 [ %497, %480 ], [ %470, %469 ]
  %482 = load double, ptr %420, align 8, !tbaa !133
  %483 = trunc i64 %481 to i32
  %484 = mul i32 %342, %483
  %485 = add i32 %484, %393
  %486 = zext i32 %485 to i64
  %487 = getelementptr inbounds double, ptr %341, i64 %486
  %488 = load double, ptr %487, align 8, !tbaa !133
  %489 = fmul double %482, %488
  %490 = fmul double %335, %489
  %491 = load double, ptr %412, align 8, !tbaa !133
  %492 = add i32 %416, %483
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds double, ptr %413, i64 %493
  %495 = load double, ptr %494, align 8, !tbaa !133
  %496 = call double @llvm.fmuladd.f64(double %490, double %491, double %495)
  store double %496, ptr %494, align 8, !tbaa !133
  %497 = add nuw nsw i64 %481, 1
  %498 = icmp eq i64 %497, %98
  br i1 %498, label %471, label %480, !llvm.loop !476

499:                                              ; preds = %336
  %500 = load ptr, ptr %300, align 8, !tbaa !184
  %501 = trunc i64 %329 to i32
  %502 = trunc i64 %329 to i32
  %503 = trunc i64 %329 to i32
  br label %504

504:                                              ; preds = %499, %567
  %505 = phi i64 [ 0, %499 ], [ %579, %567 ]
  %506 = load ptr, ptr %17, align 8
  %507 = getelementptr inbounds double, ptr %506, i64 %329
  %508 = load ptr, ptr %58, align 8
  %509 = load i32, ptr %56, align 8
  %510 = trunc i64 %505 to i32
  %511 = mul i32 %509, %510
  %512 = getelementptr inbounds %"struct.std::pair.263", ptr %500, i64 %505
  %513 = mul i32 %342, %510
  %514 = add i32 %513, %501
  br label %523

515:                                              ; preds = %567, %471, %362, %328
  %516 = add nuw nsw i64 %329, 1
  %517 = icmp eq i64 %516, %172
  br i1 %517, label %1019, label %328

518:                                              ; preds = %564
  br i1 %340, label %519, label %567

519:                                              ; preds = %518
  %520 = load ptr, ptr %303, align 8, !tbaa !144
  %521 = getelementptr inbounds i32, ptr %520, i64 %505
  %522 = load i32, ptr %521, align 4, !tbaa !59
  br label %567

523:                                              ; preds = %504, %564
  %524 = phi i64 [ 0, %504 ], [ %565, %564 ]
  %525 = load i64, ptr %512, align 4
  %526 = getelementptr inbounds %"struct.std::pair.263", ptr %500, i64 %524
  %527 = load i64, ptr %526, align 4
  %528 = trunc i64 %525 to i32
  %529 = trunc i64 %527 to i32
  %530 = icmp eq i32 %528, %529
  br i1 %530, label %531, label %564

531:                                              ; preds = %523
  br i1 %340, label %534, label %532

532:                                              ; preds = %531
  %533 = trunc i64 %524 to i32
  br label %543

534:                                              ; preds = %531
  %535 = load ptr, ptr %303, align 8, !tbaa !144
  %536 = getelementptr inbounds i32, ptr %535, i64 %505
  %537 = load i32, ptr %536, align 4, !tbaa !59
  %538 = mul i32 %342, %537
  %539 = add i32 %538, %502
  %540 = getelementptr inbounds i32, ptr %535, i64 %524
  %541 = load i32, ptr %540, align 4, !tbaa !59
  %542 = trunc i64 %524 to i32
  br label %543

543:                                              ; preds = %534, %532
  %544 = phi i32 [ %542, %534 ], [ %533, %532 ]
  %545 = phi i32 [ %502, %534 ], [ %501, %532 ]
  %546 = phi i32 [ %539, %534 ], [ %514, %532 ]
  %547 = phi i32 [ %541, %534 ], [ %533, %532 ]
  %548 = zext i32 %546 to i64
  %549 = getelementptr inbounds double, ptr %341, i64 %548
  %550 = load double, ptr %549, align 8, !tbaa !133
  %551 = mul i32 %547, %342
  %552 = add i32 %551, %545
  %553 = zext i32 %552 to i64
  %554 = getelementptr inbounds double, ptr %341, i64 %553
  %555 = load double, ptr %554, align 8, !tbaa !133
  %556 = fmul double %550, %555
  %557 = fmul double %335, %556
  %558 = load double, ptr %507, align 8, !tbaa !133
  %559 = add i32 %511, %544
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds double, ptr %508, i64 %560
  %562 = load double, ptr %561, align 8, !tbaa !133
  %563 = call double @llvm.fmuladd.f64(double %557, double %558, double %562)
  store double %563, ptr %561, align 8, !tbaa !133
  br label %564

564:                                              ; preds = %523, %543
  %565 = add nuw nsw i64 %524, 1
  %566 = icmp eq i64 %565, %98
  br i1 %566, label %518, label %523

567:                                              ; preds = %519, %518
  %568 = phi i32 [ %522, %519 ], [ %510, %518 ]
  %569 = mul i32 %342, %568
  %570 = add i32 %569, %503
  %571 = zext i32 %570 to i64
  %572 = getelementptr inbounds double, ptr %341, i64 %571
  %573 = load double, ptr %572, align 8, !tbaa !133
  %574 = load double, ptr %343, align 8, !tbaa !133
  %575 = fmul double %573, %574
  %576 = getelementptr inbounds double, ptr %305, i64 %505
  %577 = load double, ptr %576, align 8, !tbaa !133
  %578 = call double @llvm.fmuladd.f64(double %575, double %335, double %577)
  store double %578, ptr %576, align 8, !tbaa !133
  %579 = add nuw nsw i64 %505, 1
  %580 = icmp eq i64 %579, %98
  br i1 %580, label %515, label %504

581:                                              ; preds = %288
  %582 = getelementptr inbounds ptr, ptr %291, i64 7
  %583 = load ptr, ptr %582, align 8
  invoke void %583(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %584 unwind label %320

584:                                              ; preds = %581
  %585 = icmp eq i32 %95, 0
  br i1 %585, label %1019, label %586

586:                                              ; preds = %584
  %587 = getelementptr inbounds i8, ptr %91, i64 216
  %588 = load ptr, ptr %587, align 8, !tbaa !131
  %589 = getelementptr inbounds i8, ptr %91, i64 480
  %590 = load ptr, ptr %16, align 8
  %591 = load ptr, ptr %60, align 8
  br i1 %131, label %1130, label %592

592:                                              ; preds = %586
  %593 = getelementptr inbounds i8, ptr %91, i64 160
  %594 = getelementptr inbounds i8, ptr %91, i64 144
  %595 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %596 = load ptr, ptr %595, align 8, !tbaa !184
  %597 = load ptr, ptr %96, align 8, !tbaa !63
  %598 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %597, i64 0, i32 2
  %599 = load i8, ptr %598, align 4, !tbaa !148, !range !182, !noundef !183
  %600 = icmp eq i8 %599, 0
  %601 = load ptr, ptr %594, align 8, !tbaa !140
  %602 = load i32, ptr %593, align 8, !tbaa !59
  br i1 %72, label %603, label %793

603:                                              ; preds = %592
  %604 = add nsw i64 %98, -1
  %605 = shl nuw nsw i64 %98, 3
  %606 = zext i32 %602 to i64
  %607 = getelementptr i8, ptr %601, i64 8
  %608 = icmp ult i32 %93, 16
  %609 = icmp ne i32 %602, 1
  %610 = trunc i64 %604 to i32
  %611 = icmp ugt i64 %604, 4294967295
  %612 = trunc i64 %604 to i32
  %613 = and i64 %98, 4294967292
  %614 = icmp eq i64 %613, %98
  br label %615

615:                                              ; preds = %603, %790
  %616 = phi i64 [ %791, %790 ], [ 0, %603 ]
  %617 = shl nuw nsw i64 %616, 3
  %618 = getelementptr i8, ptr %601, i64 %617
  %619 = add nuw i64 %605, %617
  %620 = getelementptr i8, ptr %601, i64 %619
  %621 = trunc i64 %616 to i32
  %622 = getelementptr inbounds double, ptr %588, i64 %616
  %623 = load double, ptr %622, align 8, !tbaa !133
  %624 = getelementptr inbounds double, ptr %590, i64 %616
  br i1 %600, label %625, label %677

625:                                              ; preds = %615
  %626 = load ptr, ptr %589, align 8, !tbaa !144
  %627 = trunc i64 %616 to i32
  br label %628

628:                                              ; preds = %647, %625
  %629 = phi i64 [ %654, %647 ], [ 0, %625 ]
  %630 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %629
  %631 = load i64, ptr %630, align 4
  %632 = load ptr, ptr %18, align 8
  %633 = getelementptr inbounds %"class.dealii::Vector", ptr %632, i64 %616, i32 3
  %634 = and i64 %631, 4294967295
  %635 = load ptr, ptr %58, align 8
  %636 = load i32, ptr %56, align 8
  %637 = trunc i64 %629 to i32
  %638 = mul i32 %636, %637
  %639 = load ptr, ptr %633, align 8, !tbaa !136
  %640 = getelementptr inbounds double, ptr %639, i64 %634
  %641 = getelementptr inbounds i32, ptr %626, i64 %629
  %642 = load i32, ptr %641, align 4, !tbaa !59
  %643 = mul i32 %602, %642
  %644 = add i32 %643, %627
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds double, ptr %601, i64 %645
  br label %656

647:                                              ; preds = %656
  %648 = load double, ptr %646, align 8, !tbaa !133
  %649 = load double, ptr %624, align 8, !tbaa !133
  %650 = fmul double %648, %649
  %651 = getelementptr inbounds double, ptr %591, i64 %629
  %652 = load double, ptr %651, align 8, !tbaa !133
  %653 = call double @llvm.fmuladd.f64(double %650, double %623, double %652)
  store double %653, ptr %651, align 8, !tbaa !133
  %654 = add nuw nsw i64 %629, 1
  %655 = icmp eq i64 %654, %98
  br i1 %655, label %790, label %628

656:                                              ; preds = %656, %628
  %657 = phi i64 [ %675, %656 ], [ 0, %628 ]
  %658 = getelementptr inbounds i32, ptr %626, i64 %657
  %659 = load i32, ptr %658, align 4, !tbaa !59
  %660 = load double, ptr %646, align 8, !tbaa !133
  %661 = mul i32 %659, %602
  %662 = add i32 %661, %627
  %663 = zext i32 %662 to i64
  %664 = getelementptr inbounds double, ptr %601, i64 %663
  %665 = load double, ptr %664, align 8, !tbaa !133
  %666 = fmul double %660, %665
  %667 = fmul double %623, %666
  %668 = load double, ptr %640, align 8, !tbaa !133
  %669 = trunc i64 %657 to i32
  %670 = add i32 %638, %669
  %671 = zext i32 %670 to i64
  %672 = getelementptr inbounds double, ptr %635, i64 %671
  %673 = load double, ptr %672, align 8, !tbaa !133
  %674 = call double @llvm.fmuladd.f64(double %667, double %668, double %673)
  store double %674, ptr %672, align 8, !tbaa !133
  %675 = add nuw nsw i64 %657, 1
  %676 = icmp eq i64 %675, %98
  br i1 %676, label %647, label %656

677:                                              ; preds = %615
  %678 = trunc i64 %616 to i32
  %679 = xor i32 %621, -1
  %680 = icmp ult i32 %679, %612
  %681 = insertelement <4 x double> poison, double %623, i64 0
  %682 = shufflevector <4 x double> %681, <4 x double> poison, <4 x i32> zeroinitializer
  br label %683

683:                                              ; preds = %758, %677
  %684 = phi i64 [ %769, %758 ], [ 0, %677 ]
  %685 = mul i64 %684, %606
  %686 = add i64 %616, %685
  %687 = shl i64 %686, 3
  %688 = and i64 %687, 34359738360
  %689 = getelementptr i8, ptr %601, i64 %688
  %690 = getelementptr i8, ptr %607, i64 %688
  %691 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %684
  %692 = load i64, ptr %691, align 4
  %693 = load ptr, ptr %18, align 8
  %694 = getelementptr inbounds %"class.dealii::Vector", ptr %693, i64 %616, i32 3
  %695 = and i64 %692, 4294967295
  %696 = load ptr, ptr %58, align 8
  %697 = load i32, ptr %56, align 8
  %698 = trunc i64 %684 to i32
  %699 = mul i32 %697, %698
  %700 = load ptr, ptr %694, align 8, !tbaa !136
  %701 = getelementptr double, ptr %700, i64 %695
  %702 = mul i32 %602, %698
  %703 = add i32 %702, %678
  %704 = zext i32 %703 to i64
  %705 = getelementptr inbounds double, ptr %601, i64 %704
  br i1 %608, label %756, label %706

706:                                              ; preds = %683
  %707 = xor i32 %699, -1
  %708 = icmp ult i32 %707, %610
  %709 = or i1 %708, %611
  %710 = or i1 %609, %709
  %711 = or i1 %680, %710
  br i1 %711, label %756, label %712

712:                                              ; preds = %706
  %713 = zext i32 %699 to i64
  %714 = shl nuw nsw i64 %713, 3
  %715 = getelementptr i8, ptr %696, i64 %714
  %716 = getelementptr i8, ptr %696, i64 %605
  %717 = getelementptr i8, ptr %716, i64 %714
  %718 = getelementptr i8, ptr %700, i64 8
  %719 = shl nuw nsw i64 %695, 3
  %720 = getelementptr i8, ptr %718, i64 %719
  %721 = icmp ult ptr %618, %717
  %722 = icmp ult ptr %715, %620
  %723 = and i1 %721, %722
  %724 = icmp ult ptr %689, %717
  %725 = icmp ult ptr %715, %690
  %726 = and i1 %724, %725
  %727 = or i1 %723, %726
  %728 = icmp ult ptr %701, %717
  %729 = icmp ult ptr %715, %720
  %730 = and i1 %728, %729
  %731 = or i1 %727, %730
  br i1 %731, label %756, label %732

732:                                              ; preds = %712
  %733 = load double, ptr %705, align 8, !tbaa !133, !alias.scope !477, !noalias !480
  %734 = insertelement <4 x double> poison, double %733, i64 0
  %735 = shufflevector <4 x double> %734, <4 x double> poison, <4 x i32> zeroinitializer
  %736 = load double, ptr %701, align 8, !tbaa !133, !alias.scope !482, !noalias !480
  %737 = insertelement <4 x double> poison, double %736, i64 0
  %738 = shufflevector <4 x double> %737, <4 x double> poison, <4 x i32> zeroinitializer
  br label %739

739:                                              ; preds = %739, %732
  %740 = phi i64 [ 0, %732 ], [ %753, %739 ]
  %741 = trunc i64 %740 to i32
  %742 = add i64 %740, %616
  %743 = and i64 %742, 4294967295
  %744 = getelementptr inbounds double, ptr %601, i64 %743
  %745 = load <4 x double>, ptr %744, align 8, !tbaa !133, !alias.scope !484, !noalias !480
  %746 = fmul <4 x double> %735, %745
  %747 = fmul <4 x double> %682, %746
  %748 = add i32 %699, %741
  %749 = zext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %696, i64 %749
  %751 = load <4 x double>, ptr %750, align 8, !tbaa !133, !alias.scope !480
  %752 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %747, <4 x double> %738, <4 x double> %751)
  store <4 x double> %752, ptr %750, align 8, !tbaa !133, !alias.scope !480
  %753 = add nuw i64 %740, 4
  %754 = icmp eq i64 %753, %613
  br i1 %754, label %755, label %739, !llvm.loop !486

755:                                              ; preds = %739
  br i1 %614, label %758, label %756

756:                                              ; preds = %712, %706, %683, %755
  %757 = phi i64 [ 0, %712 ], [ 0, %706 ], [ 0, %683 ], [ %613, %755 ]
  br label %771

758:                                              ; preds = %771, %755
  %759 = mul i32 %602, %698
  %760 = add i32 %759, %678
  %761 = zext i32 %760 to i64
  %762 = getelementptr inbounds double, ptr %601, i64 %761
  %763 = load double, ptr %762, align 8, !tbaa !133
  %764 = load double, ptr %624, align 8, !tbaa !133
  %765 = fmul double %763, %764
  %766 = getelementptr inbounds double, ptr %591, i64 %684
  %767 = load double, ptr %766, align 8, !tbaa !133
  %768 = call double @llvm.fmuladd.f64(double %765, double %623, double %767)
  store double %768, ptr %766, align 8, !tbaa !133
  %769 = add nuw nsw i64 %684, 1
  %770 = icmp eq i64 %769, %98
  br i1 %770, label %790, label %683

771:                                              ; preds = %756, %771
  %772 = phi i64 [ %788, %771 ], [ %757, %756 ]
  %773 = load double, ptr %705, align 8, !tbaa !133
  %774 = trunc i64 %772 to i32
  %775 = mul i32 %602, %774
  %776 = add i32 %775, %678
  %777 = zext i32 %776 to i64
  %778 = getelementptr inbounds double, ptr %601, i64 %777
  %779 = load double, ptr %778, align 8, !tbaa !133
  %780 = fmul double %773, %779
  %781 = fmul double %623, %780
  %782 = load double, ptr %701, align 8, !tbaa !133
  %783 = add i32 %699, %774
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds double, ptr %696, i64 %784
  %786 = load double, ptr %785, align 8, !tbaa !133
  %787 = call double @llvm.fmuladd.f64(double %781, double %782, double %786)
  store double %787, ptr %785, align 8, !tbaa !133
  %788 = add nuw nsw i64 %772, 1
  %789 = icmp eq i64 %788, %98
  br i1 %789, label %758, label %771, !llvm.loop !487

790:                                              ; preds = %758, %647
  %791 = add nuw nsw i64 %616, 1
  %792 = icmp eq i64 %791, %172
  br i1 %792, label %1019, label %615

793:                                              ; preds = %592, %878
  %794 = phi i64 [ %879, %878 ], [ 0, %592 ]
  %795 = getelementptr inbounds double, ptr %588, i64 %794
  %796 = load double, ptr %795, align 8, !tbaa !133
  %797 = getelementptr inbounds double, ptr %590, i64 %794
  %798 = trunc i64 %794 to i32
  %799 = trunc i64 %794 to i32
  %800 = trunc i64 %794 to i32
  br label %801

801:                                              ; preds = %793, %820
  %802 = phi i64 [ 0, %793 ], [ %832, %820 ]
  %803 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %802
  %804 = load i64, ptr %803, align 4
  %805 = trunc i64 %804 to i32
  %806 = load ptr, ptr %18, align 8
  %807 = getelementptr inbounds %"class.dealii::Vector", ptr %806, i64 %794, i32 3
  %808 = and i64 %804, 4294967295
  %809 = load ptr, ptr %58, align 8
  %810 = load i32, ptr %56, align 8
  %811 = trunc i64 %802 to i32
  %812 = mul i32 %810, %811
  %813 = mul i32 %602, %811
  %814 = add i32 %813, %798
  br label %834

815:                                              ; preds = %875
  br i1 %600, label %816, label %820

816:                                              ; preds = %815
  %817 = load ptr, ptr %589, align 8, !tbaa !144
  %818 = getelementptr inbounds i32, ptr %817, i64 %802
  %819 = load i32, ptr %818, align 4, !tbaa !59
  br label %820

820:                                              ; preds = %816, %815
  %821 = phi i32 [ %819, %816 ], [ %811, %815 ]
  %822 = mul i32 %602, %821
  %823 = add i32 %822, %800
  %824 = zext i32 %823 to i64
  %825 = getelementptr inbounds double, ptr %601, i64 %824
  %826 = load double, ptr %825, align 8, !tbaa !133
  %827 = load double, ptr %797, align 8, !tbaa !133
  %828 = fmul double %826, %827
  %829 = getelementptr inbounds double, ptr %591, i64 %802
  %830 = load double, ptr %829, align 8, !tbaa !133
  %831 = call double @llvm.fmuladd.f64(double %828, double %796, double %830)
  store double %831, ptr %829, align 8, !tbaa !133
  %832 = add nuw nsw i64 %802, 1
  %833 = icmp eq i64 %832, %98
  br i1 %833, label %878, label %801

834:                                              ; preds = %875, %801
  %835 = phi i64 [ %876, %875 ], [ 0, %801 ]
  %836 = getelementptr inbounds %"struct.std::pair.263", ptr %596, i64 %835
  %837 = load i64, ptr %836, align 4
  %838 = trunc i64 %837 to i32
  %839 = icmp eq i32 %838, %805
  br i1 %839, label %840, label %875

840:                                              ; preds = %834
  br i1 %600, label %843, label %841

841:                                              ; preds = %840
  %842 = trunc i64 %835 to i32
  br label %852

843:                                              ; preds = %840
  %844 = load ptr, ptr %589, align 8, !tbaa !144
  %845 = getelementptr inbounds i32, ptr %844, i64 %802
  %846 = load i32, ptr %845, align 4, !tbaa !59
  %847 = mul i32 %602, %846
  %848 = add i32 %847, %799
  %849 = getelementptr inbounds i32, ptr %844, i64 %835
  %850 = load i32, ptr %849, align 4, !tbaa !59
  %851 = trunc i64 %835 to i32
  br label %852

852:                                              ; preds = %843, %841
  %853 = phi i32 [ %851, %843 ], [ %842, %841 ]
  %854 = phi i32 [ %799, %843 ], [ %798, %841 ]
  %855 = phi i32 [ %848, %843 ], [ %814, %841 ]
  %856 = phi i32 [ %850, %843 ], [ %842, %841 ]
  %857 = zext i32 %855 to i64
  %858 = getelementptr inbounds double, ptr %601, i64 %857
  %859 = load double, ptr %858, align 8, !tbaa !133
  %860 = mul i32 %856, %602
  %861 = add i32 %860, %854
  %862 = zext i32 %861 to i64
  %863 = getelementptr inbounds double, ptr %601, i64 %862
  %864 = load double, ptr %863, align 8, !tbaa !133
  %865 = fmul double %859, %864
  %866 = fmul double %796, %865
  %867 = load ptr, ptr %807, align 8, !tbaa !136
  %868 = getelementptr inbounds double, ptr %867, i64 %808
  %869 = load double, ptr %868, align 8, !tbaa !133
  %870 = add i32 %812, %853
  %871 = zext i32 %870 to i64
  %872 = getelementptr inbounds double, ptr %809, i64 %871
  %873 = load double, ptr %872, align 8, !tbaa !133
  %874 = call double @llvm.fmuladd.f64(double %866, double %869, double %873)
  store double %874, ptr %872, align 8, !tbaa !133
  br label %875

875:                                              ; preds = %852, %834
  %876 = add nuw nsw i64 %835, 1
  %877 = icmp eq i64 %876, %98
  br i1 %877, label %815, label %834

878:                                              ; preds = %820
  %879 = add nuw nsw i64 %794, 1
  %880 = icmp eq i64 %879, %172
  br i1 %880, label %1019, label %793

881:                                              ; preds = %279, %1016
  %882 = phi i64 [ 0, %279 ], [ %1017, %1016 ]
  %883 = getelementptr inbounds double, ptr %281, i64 %882
  %884 = load double, ptr %883, align 8, !tbaa !133
  br i1 %131, label %1016, label %885

885:                                              ; preds = %881
  %886 = load ptr, ptr %96, align 8, !tbaa !63
  %887 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %886, i64 0, i32 2
  %888 = load i8, ptr %887, align 4, !tbaa !148, !range !182, !noundef !183
  %889 = icmp eq i8 %888, 0
  %890 = load ptr, ptr %283, align 8, !tbaa !140
  %891 = load i32, ptr %284, align 8, !tbaa !59
  %892 = getelementptr inbounds double, ptr %286, i64 %882
  %893 = trunc i64 %882 to i32
  br label %894

894:                                              ; preds = %939, %885
  %895 = phi i64 [ %945, %939 ], [ 0, %885 ]
  %896 = trunc i64 %895 to i32
  br i1 %889, label %897, label %901

897:                                              ; preds = %894
  %898 = load ptr, ptr %282, align 8, !tbaa !144
  %899 = getelementptr inbounds i32, ptr %898, i64 %895
  %900 = load i32, ptr %899, align 4, !tbaa !59
  br label %901

901:                                              ; preds = %897, %894
  %902 = phi i32 [ %900, %897 ], [ %896, %894 ]
  %903 = mul i32 %891, %902
  %904 = add i32 %903, %893
  %905 = zext i32 %904 to i64
  %906 = getelementptr inbounds double, ptr %890, i64 %905
  %907 = load double, ptr %906, align 8, !tbaa !133
  %908 = load ptr, ptr %58, align 8
  %909 = load i32, ptr %56, align 8
  %910 = mul i32 %909, %896
  br i1 %72, label %947, label %936

911:                                              ; preds = %977, %933
  %912 = phi i64 [ 0, %977 ], [ %934, %933 ]
  %913 = load i64, ptr %938, align 4
  %914 = getelementptr inbounds %"struct.std::pair.263", ptr %937, i64 %912
  %915 = load i64, ptr %914, align 4
  %916 = trunc i64 %913 to i32
  %917 = trunc i64 %915 to i32
  %918 = icmp eq i32 %916, %917
  br i1 %918, label %919, label %933

919:                                              ; preds = %911
  %920 = load double, ptr %981, align 8, !tbaa !133
  %921 = trunc i64 %912 to i32
  %922 = mul i32 %891, %921
  %923 = add i32 %922, %893
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds double, ptr %890, i64 %924
  %926 = load double, ptr %925, align 8, !tbaa !133
  %927 = fmul double %920, %926
  %928 = add i32 %910, %921
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds double, ptr %908, i64 %929
  %931 = load double, ptr %930, align 8, !tbaa !133
  %932 = call double @llvm.fmuladd.f64(double %927, double %884, double %931)
  store double %932, ptr %930, align 8, !tbaa !133
  br label %933

933:                                              ; preds = %919, %911
  %934 = add nuw nsw i64 %912, 1
  %935 = icmp eq i64 %934, %98
  br i1 %935, label %939, label %911

936:                                              ; preds = %901
  %937 = load ptr, ptr %285, align 8, !tbaa !184
  %938 = getelementptr inbounds %"struct.std::pair.263", ptr %937, i64 %895
  br i1 %889, label %982, label %977

939:                                              ; preds = %933, %1013, %956
  %940 = load double, ptr %892, align 8, !tbaa !133
  %941 = fmul double %907, %940
  %942 = getelementptr inbounds double, ptr %287, i64 %895
  %943 = load double, ptr %942, align 8, !tbaa !133
  %944 = call double @llvm.fmuladd.f64(double %941, double %884, double %943)
  store double %944, ptr %942, align 8, !tbaa !133
  %945 = add nuw nsw i64 %895, 1
  %946 = icmp eq i64 %945, %98
  br i1 %946, label %1016, label %894

947:                                              ; preds = %901, %956
  %948 = phi i64 [ %975, %956 ], [ 0, %901 ]
  %949 = trunc i64 %948 to i32
  br i1 %889, label %950, label %956

950:                                              ; preds = %947
  %951 = load ptr, ptr %282, align 8, !tbaa !144
  %952 = getelementptr inbounds i32, ptr %951, i64 %895
  %953 = load i32, ptr %952, align 4, !tbaa !59
  %954 = getelementptr inbounds i32, ptr %951, i64 %948
  %955 = load i32, ptr %954, align 4, !tbaa !59
  br label %956

956:                                              ; preds = %950, %947
  %957 = phi i32 [ %953, %950 ], [ %896, %947 ]
  %958 = phi i32 [ %955, %950 ], [ %949, %947 ]
  %959 = mul i32 %957, %891
  %960 = add i32 %959, %893
  %961 = zext i32 %960 to i64
  %962 = getelementptr inbounds double, ptr %890, i64 %961
  %963 = load double, ptr %962, align 8, !tbaa !133
  %964 = mul i32 %958, %891
  %965 = add i32 %964, %893
  %966 = zext i32 %965 to i64
  %967 = getelementptr inbounds double, ptr %890, i64 %966
  %968 = load double, ptr %967, align 8, !tbaa !133
  %969 = fmul double %963, %968
  %970 = add i32 %910, %949
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds double, ptr %908, i64 %971
  %973 = load double, ptr %972, align 8, !tbaa !133
  %974 = call double @llvm.fmuladd.f64(double %969, double %884, double %973)
  store double %974, ptr %972, align 8, !tbaa !133
  %975 = add nuw nsw i64 %948, 1
  %976 = icmp eq i64 %975, %98
  br i1 %976, label %939, label %947

977:                                              ; preds = %936
  %978 = mul i32 %891, %896
  %979 = add i32 %978, %893
  %980 = zext i32 %979 to i64
  %981 = getelementptr inbounds double, ptr %890, i64 %980
  br label %911

982:                                              ; preds = %936, %1013
  %983 = phi i64 [ %1014, %1013 ], [ 0, %936 ]
  %984 = load i64, ptr %938, align 4
  %985 = getelementptr inbounds %"struct.std::pair.263", ptr %937, i64 %983
  %986 = load i64, ptr %985, align 4
  %987 = trunc i64 %984 to i32
  %988 = trunc i64 %986 to i32
  %989 = icmp eq i32 %987, %988
  br i1 %989, label %990, label %1013

990:                                              ; preds = %982
  %991 = load ptr, ptr %282, align 8, !tbaa !144
  %992 = getelementptr inbounds i32, ptr %991, i64 %895
  %993 = load i32, ptr %992, align 4, !tbaa !59
  %994 = getelementptr inbounds i32, ptr %991, i64 %983
  %995 = load i32, ptr %994, align 4, !tbaa !59
  %996 = mul i32 %993, %891
  %997 = add i32 %996, %893
  %998 = zext i32 %997 to i64
  %999 = getelementptr inbounds double, ptr %890, i64 %998
  %1000 = load double, ptr %999, align 8, !tbaa !133
  %1001 = mul i32 %995, %891
  %1002 = add i32 %1001, %893
  %1003 = zext i32 %1002 to i64
  %1004 = getelementptr inbounds double, ptr %890, i64 %1003
  %1005 = load double, ptr %1004, align 8, !tbaa !133
  %1006 = fmul double %1000, %1005
  %1007 = trunc i64 %983 to i32
  %1008 = add i32 %910, %1007
  %1009 = zext i32 %1008 to i64
  %1010 = getelementptr inbounds double, ptr %908, i64 %1009
  %1011 = load double, ptr %1010, align 8, !tbaa !133
  %1012 = call double @llvm.fmuladd.f64(double %1006, double %884, double %1011)
  store double %1012, ptr %1010, align 8, !tbaa !133
  br label %1013

1013:                                             ; preds = %990, %982
  %1014 = add nuw nsw i64 %983, 1
  %1015 = icmp eq i64 %1014, %98
  br i1 %1015, label %939, label %982

1016:                                             ; preds = %939, %881
  %1017 = add nuw nsw i64 %882, 1
  %1018 = icmp eq i64 %1017, %172
  br i1 %1018, label %1019, label %881

1019:                                             ; preds = %878, %790, %515, %1016, %584, %295, %277
  br i1 %131, label %1130, label %1020

1020:                                             ; preds = %1019
  %1021 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  br i1 %72, label %1022, label %1061

1022:                                             ; preds = %1020, %1056
  %1023 = phi i64 [ %1057, %1056 ], [ 0, %1020 ]
  %1024 = trunc i64 %1023 to i32
  br label %1025

1025:                                             ; preds = %1053, %1022
  %1026 = phi i64 [ %1054, %1053 ], [ 0, %1022 ]
  %1027 = load ptr, ptr %58, align 8, !tbaa !140
  %1028 = load i32, ptr %56, align 8, !tbaa !59
  %1029 = mul i32 %1028, %1024
  %1030 = trunc i64 %1026 to i32
  %1031 = add i32 %1029, %1030
  %1032 = zext i32 %1031 to i64
  %1033 = getelementptr inbounds double, ptr %1027, i64 %1032
  %1034 = load double, ptr %1033, align 8, !tbaa !133
  %1035 = fptrunc double %1034 to float
  %1036 = fcmp oeq float %1035, 0.000000e+00
  br i1 %1036, label %1053, label %1037

1037:                                             ; preds = %1025
  %1038 = load ptr, ptr %19, align 8, !tbaa !144
  %1039 = getelementptr inbounds i32, ptr %1038, i64 %1026
  %1040 = load i32, ptr %1039, align 4, !tbaa !59
  %1041 = getelementptr inbounds i32, ptr %1038, i64 %1023
  %1042 = load i32, ptr %1041, align 4, !tbaa !59
  %1043 = load ptr, ptr %73, align 8, !tbaa !383
  %1044 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1043, i32 noundef %1042, i32 noundef %1040)
          to label %1045 unwind label %1059

1045:                                             ; preds = %1037
  %1046 = icmp eq i32 %1044, -1
  br i1 %1046, label %1053, label %1047

1047:                                             ; preds = %1045
  %1048 = load ptr, ptr %74, align 8, !tbaa !456
  %1049 = zext i32 %1044 to i64
  %1050 = getelementptr inbounds float, ptr %1048, i64 %1049
  %1051 = load float, ptr %1050, align 4, !tbaa !282
  %1052 = fadd float %1051, %1035
  store float %1052, ptr %1050, align 4, !tbaa !282
  br label %1053

1053:                                             ; preds = %1047, %1045, %1025
  %1054 = add nuw nsw i64 %1026, 1
  %1055 = icmp eq i64 %1054, %98
  br i1 %1055, label %1056, label %1025

1056:                                             ; preds = %1053
  %1057 = add nuw nsw i64 %1023, 1
  %1058 = icmp eq i64 %1057, %98
  br i1 %1058, label %1109, label %1022

1059:                                             ; preds = %1037
  %1060 = landingpad { ptr, i32 }
          cleanup
  br label %1329

1061:                                             ; preds = %1020, %1104
  %1062 = phi i64 [ %1105, %1104 ], [ 0, %1020 ]
  %1063 = trunc i64 %1062 to i32
  br label %1064

1064:                                             ; preds = %1061, %1101
  %1065 = phi i64 [ 0, %1061 ], [ %1102, %1101 ]
  %1066 = load ptr, ptr %1021, align 8, !tbaa !184
  %1067 = getelementptr inbounds %"struct.std::pair.263", ptr %1066, i64 %1062
  %1068 = load i64, ptr %1067, align 4
  %1069 = getelementptr inbounds %"struct.std::pair.263", ptr %1066, i64 %1065
  %1070 = load i64, ptr %1069, align 4
  %1071 = trunc i64 %1068 to i32
  %1072 = trunc i64 %1070 to i32
  %1073 = icmp eq i32 %1071, %1072
  br i1 %1073, label %1074, label %1101

1074:                                             ; preds = %1064
  %1075 = load ptr, ptr %58, align 8, !tbaa !140
  %1076 = load i32, ptr %56, align 8, !tbaa !59
  %1077 = mul i32 %1076, %1063
  %1078 = trunc i64 %1065 to i32
  %1079 = add i32 %1077, %1078
  %1080 = zext i32 %1079 to i64
  %1081 = getelementptr inbounds double, ptr %1075, i64 %1080
  %1082 = load double, ptr %1081, align 8, !tbaa !133
  %1083 = fptrunc double %1082 to float
  %1084 = fcmp oeq float %1083, 0.000000e+00
  br i1 %1084, label %1101, label %1085

1085:                                             ; preds = %1074
  %1086 = load ptr, ptr %19, align 8, !tbaa !144
  %1087 = getelementptr inbounds i32, ptr %1086, i64 %1065
  %1088 = load i32, ptr %1087, align 4, !tbaa !59
  %1089 = getelementptr inbounds i32, ptr %1086, i64 %1062
  %1090 = load i32, ptr %1089, align 4, !tbaa !59
  %1091 = load ptr, ptr %73, align 8, !tbaa !383
  %1092 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1091, i32 noundef %1090, i32 noundef %1088)
          to label %1093 unwind label %1107

1093:                                             ; preds = %1085
  %1094 = icmp eq i32 %1092, -1
  br i1 %1094, label %1101, label %1095

1095:                                             ; preds = %1093
  %1096 = load ptr, ptr %74, align 8, !tbaa !456
  %1097 = zext i32 %1092 to i64
  %1098 = getelementptr inbounds float, ptr %1096, i64 %1097
  %1099 = load float, ptr %1098, align 4, !tbaa !282
  %1100 = fadd float %1099, %1083
  store float %1100, ptr %1098, align 4, !tbaa !282
  br label %1101

1101:                                             ; preds = %1095, %1093, %1074, %1064
  %1102 = add nuw nsw i64 %1065, 1
  %1103 = icmp eq i64 %1102, %98
  br i1 %1103, label %1104, label %1064

1104:                                             ; preds = %1101
  %1105 = add nuw nsw i64 %1062, 1
  %1106 = icmp eq i64 %1105, %98
  br i1 %1106, label %1109, label %1061

1107:                                             ; preds = %1085
  %1108 = landingpad { ptr, i32 }
          cleanup
  br label %1329

1109:                                             ; preds = %1104, %1056
  br i1 %131, label %1130, label %1110

1110:                                             ; preds = %1109
  %1111 = load ptr, ptr %60, align 8, !tbaa !136
  %1112 = load ptr, ptr %19, align 8, !tbaa !144
  %1113 = load ptr, ptr %75, align 8, !tbaa !136
  %1114 = and i64 %98, 1
  %1115 = icmp eq i32 %93, 1
  br i1 %1115, label %1118, label %1116

1116:                                             ; preds = %1110
  %1117 = and i64 %98, 4294967294
  br label %1248

1118:                                             ; preds = %1248, %1110
  %1119 = phi i64 [ 0, %1110 ], [ %1268, %1248 ]
  %1120 = icmp eq i64 %1114, 0
  br i1 %1120, label %1130, label %1121

1121:                                             ; preds = %1118
  %1122 = getelementptr inbounds double, ptr %1111, i64 %1119
  %1123 = load double, ptr %1122, align 8, !tbaa !133
  %1124 = getelementptr inbounds i32, ptr %1112, i64 %1119
  %1125 = load i32, ptr %1124, align 4, !tbaa !59
  %1126 = zext i32 %1125 to i64
  %1127 = getelementptr inbounds double, ptr %1113, i64 %1126
  %1128 = load double, ptr %1127, align 8, !tbaa !133
  %1129 = fadd double %1123, %1128
  store double %1129, ptr %1127, align 8, !tbaa !133
  br label %1130

1130:                                             ; preds = %1121, %1118, %586, %1019, %1109
  %1131 = load ptr, ptr %76, align 8, !tbaa !62
  %1132 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1131, i64 0, i32 1
  %1133 = load ptr, ptr %1132, align 8, !tbaa !46
  %1134 = ptrtoint ptr %1133 to i64
  %1135 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1131, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1136 = load i32, ptr %20, align 8
  %1137 = load i32, ptr %38, align 4
  br label %1138

1138:                                             ; preds = %1226, %1130
  %1139 = phi i32 [ %1136, %1130 ], [ %1205, %1226 ]
  %1140 = phi i32 [ %1136, %1130 ], [ %1206, %1226 ]
  %1141 = phi i32 [ %1136, %1130 ], [ %1227, %1226 ]
  %1142 = phi i32 [ %1137, %1130 ], [ %1207, %1226 ]
  %1143 = add nsw i32 %1142, 1
  %1144 = sext i32 %1141 to i64
  %1145 = getelementptr inbounds ptr, ptr %1133, i64 %1144
  %1146 = load ptr, ptr %1145, align 8, !tbaa !33
  %1147 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1146, i64 0, i32 4
  %1148 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1146, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1149 = load ptr, ptr %1148, align 8, !tbaa !48
  %1150 = load ptr, ptr %1147, align 8, !tbaa !50
  %1151 = ptrtoint ptr %1149 to i64
  %1152 = ptrtoint ptr %1150 to i64
  %1153 = sub i64 %1151, %1152
  %1154 = sdiv exact i64 %1153, 24
  %1155 = trunc i64 %1154 to i32
  %1156 = icmp slt i32 %1143, %1155
  br i1 %1156, label %1204, label %1157

1157:                                             ; preds = %1138
  %1158 = add nsw i64 %1144, 1
  %1159 = trunc i64 %1158 to i32
  store i32 %1159, ptr %20, align 8, !tbaa !60
  %1160 = load ptr, ptr %1135, align 8, !tbaa !51
  %1161 = ptrtoint ptr %1160 to i64
  %1162 = sub i64 %1161, %1134
  %1163 = shl i64 %1162, 29
  %1164 = ashr i64 %1163, 32
  %1165 = icmp slt i64 %1158, %1164
  br i1 %1165, label %1166, label %1198

1166:                                             ; preds = %1157
  %1167 = getelementptr inbounds ptr, ptr %1133, i64 %1158
  %1168 = load ptr, ptr %1167, align 8, !tbaa !33
  %1169 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1168, i64 0, i32 4
  %1170 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1168, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1171 = load ptr, ptr %1170, align 8, !tbaa !48
  %1172 = load ptr, ptr %1169, align 8, !tbaa !50
  %1173 = ptrtoint ptr %1171 to i64
  %1174 = ptrtoint ptr %1172 to i64
  %1175 = sub i64 %1173, %1174
  %1176 = sdiv exact i64 %1175, 24
  %1177 = trunc i64 %1176 to i32
  %1178 = icmp sgt i32 %1177, 0
  br i1 %1178, label %1200, label %1192

1179:                                             ; preds = %1192
  %1180 = getelementptr inbounds ptr, ptr %1133, i64 %1194
  %1181 = load ptr, ptr %1180, align 8, !tbaa !33
  %1182 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1181, i64 0, i32 4
  %1183 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1181, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1184 = load ptr, ptr %1183, align 8, !tbaa !48
  %1185 = load ptr, ptr %1182, align 8, !tbaa !50
  %1186 = ptrtoint ptr %1184 to i64
  %1187 = ptrtoint ptr %1185 to i64
  %1188 = sub i64 %1186, %1187
  %1189 = sdiv exact i64 %1188, 24
  %1190 = trunc i64 %1189 to i32
  %1191 = icmp sgt i32 %1190, 0
  br i1 %1191, label %1199, label %1192, !llvm.loop !52

1192:                                             ; preds = %1166, %1179
  %1193 = phi i64 [ %1194, %1179 ], [ %1158, %1166 ]
  %1194 = add i64 %1193, 1
  %1195 = trunc i64 %1194 to i32
  %1196 = icmp eq i64 %1194, %1164
  br i1 %1196, label %1197, label %1179, !llvm.loop !52

1197:                                             ; preds = %1192
  store i32 %1195, ptr %20, align 8, !tbaa !60
  br label %1198

1198:                                             ; preds = %1197, %1157
  store i32 -1, ptr %20, align 8, !tbaa !60
  br label %1204

1199:                                             ; preds = %1179
  store i32 %1195, ptr %20, align 8, !tbaa !60
  br label %1200

1200:                                             ; preds = %1199, %1166
  %1201 = phi i32 [ %1159, %1166 ], [ %1195, %1199 ]
  %1202 = phi i64 [ %1158, %1166 ], [ %1194, %1199 ]
  %1203 = trunc i64 %1202 to i32
  br label %1204

1204:                                             ; preds = %1200, %1198, %1138
  %1205 = phi i32 [ %1139, %1138 ], [ -1, %1198 ], [ %1201, %1200 ]
  %1206 = phi i32 [ %1140, %1138 ], [ -1, %1198 ], [ %1203, %1200 ]
  %1207 = phi i32 [ %1143, %1138 ], [ -1, %1198 ], [ 0, %1200 ]
  %1208 = phi i32 [ %1141, %1138 ], [ -1, %1198 ], [ %1203, %1200 ]
  %1209 = or i32 %1208, %1207
  %1210 = icmp sgt i32 %1209, -1
  br i1 %1210, label %1211, label %1228

1211:                                             ; preds = %1204
  %1212 = zext i32 %1208 to i64
  %1213 = getelementptr inbounds ptr, ptr %1133, i64 %1212
  %1214 = load ptr, ptr %1213, align 8, !tbaa !33
  %1215 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1214, i64 0, i32 4, i32 0, i32 3
  %1216 = load ptr, ptr %1215, align 8, !tbaa !54
  %1217 = lshr i32 %1207, 6
  %1218 = zext i32 %1217 to i64
  %1219 = getelementptr inbounds i64, ptr %1216, i64 %1218
  %1220 = and i32 %1207, 63
  %1221 = zext i32 %1220 to i64
  %1222 = shl nuw i64 1, %1221
  %1223 = load i64, ptr %1219, align 8, !tbaa !56
  %1224 = and i64 %1223, %1222
  %1225 = icmp eq i64 %1224, 0
  br i1 %1225, label %1226, label %1228

1226:                                             ; preds = %1211, %1231
  %1227 = phi i32 [ %1208, %1211 ], [ %1206, %1231 ]
  br label %1138

1228:                                             ; preds = %1211, %1204
  store i32 %1207, ptr %38, align 4, !tbaa !61
  %1229 = or i32 %1207, %1206
  %1230 = icmp sgt i32 %1229, -1
  br i1 %1230, label %1231, label %1242

1231:                                             ; preds = %1228
  %1232 = zext i32 %1206 to i64
  %1233 = getelementptr inbounds ptr, ptr %1133, i64 %1232
  %1234 = load ptr, ptr %1233, align 8, !tbaa !33
  %1235 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1234, i64 0, i32 4, i32 0, i32 1
  %1236 = shl i32 %1207, 2
  %1237 = zext i32 %1236 to i64
  %1238 = load ptr, ptr %1235, align 8, !tbaa !57
  %1239 = getelementptr inbounds i32, ptr %1238, i64 %1237
  %1240 = load i32, ptr %1239, align 4, !tbaa !59
  %1241 = icmp eq i32 %1240, -1
  br i1 %1241, label %1242, label %1226

1242:                                             ; preds = %1228, %1231
  %1243 = load i32, ptr %39, align 4, !tbaa !61
  %1244 = icmp ne i32 %1207, %1243
  %1245 = load i32, ptr %37, align 8
  %1246 = icmp ne i32 %1205, %1245
  %1247 = select i1 %1244, i1 true, i1 %1246
  br i1 %1247, label %77, label %1271

1248:                                             ; preds = %1248, %1116
  %1249 = phi i64 [ 0, %1116 ], [ %1268, %1248 ]
  %1250 = phi i64 [ 0, %1116 ], [ %1269, %1248 ]
  %1251 = getelementptr inbounds double, ptr %1111, i64 %1249
  %1252 = load double, ptr %1251, align 8, !tbaa !133
  %1253 = getelementptr inbounds i32, ptr %1112, i64 %1249
  %1254 = load i32, ptr %1253, align 4, !tbaa !59
  %1255 = zext i32 %1254 to i64
  %1256 = getelementptr inbounds double, ptr %1113, i64 %1255
  %1257 = load double, ptr %1256, align 8, !tbaa !133
  %1258 = fadd double %1252, %1257
  store double %1258, ptr %1256, align 8, !tbaa !133
  %1259 = or i64 %1249, 1
  %1260 = getelementptr inbounds double, ptr %1111, i64 %1259
  %1261 = load double, ptr %1260, align 8, !tbaa !133
  %1262 = getelementptr inbounds i32, ptr %1112, i64 %1259
  %1263 = load i32, ptr %1262, align 4, !tbaa !59
  %1264 = zext i32 %1263 to i64
  %1265 = getelementptr inbounds double, ptr %1113, i64 %1264
  %1266 = load double, ptr %1265, align 8, !tbaa !133
  %1267 = fadd double %1261, %1266
  store double %1267, ptr %1265, align 8, !tbaa !133
  %1268 = add nuw nsw i64 %1249, 2
  %1269 = add i64 %1250, 2
  %1270 = icmp eq i64 %1269, %1117
  br i1 %1270, label %1118, label %1248

1271:                                             ; preds = %1242
  %1272 = load ptr, ptr %19, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %1273 = icmp eq ptr %1272, null
  br i1 %1273, label %1275, label %1274

1274:                                             ; preds = %1271
  call void @_ZdlPv(ptr noundef nonnull %1272) #21
  br label %1275

1275:                                             ; preds = %47, %1274, %1271
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %1276 = load ptr, ptr %18, align 8, !tbaa !224
  %1277 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1278 = load ptr, ptr %1277, align 8, !tbaa !226
  %1279 = icmp eq ptr %1276, %1278
  br i1 %1279, label %1289, label %1280

1280:                                             ; preds = %1275, %1284
  %1281 = phi ptr [ %1285, %1284 ], [ %1276, %1275 ]
  %1282 = load ptr, ptr %1281, align 8, !tbaa !41
  %1283 = load ptr, ptr %1282, align 8
  invoke void %1283(ptr noundef nonnull align 8 dereferenceable(88) %1281)
          to label %1284 unwind label %1293

1284:                                             ; preds = %1280
  %1285 = getelementptr inbounds %"class.dealii::Vector", ptr %1281, i64 1
  %1286 = icmp eq ptr %1285, %1278
  br i1 %1286, label %1287, label %1280

1287:                                             ; preds = %1284
  %1288 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1289

1289:                                             ; preds = %1287, %1275
  %1290 = phi ptr [ %1288, %1287 ], [ %1276, %1275 ]
  %1291 = icmp eq ptr %1290, null
  br i1 %1291, label %1297, label %1292

1292:                                             ; preds = %1289
  call void @_ZdlPv(ptr noundef nonnull %1290) #21
  br label %1297

1293:                                             ; preds = %1280
  %1294 = landingpad { ptr, i32 }
          cleanup
  %1295 = load ptr, ptr %18, align 8, !tbaa !224
  %1296 = icmp eq ptr %1295, null
  br i1 %1296, label %1358, label %1355

1297:                                             ; preds = %1292, %1289
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1298 = load ptr, ptr %17, align 8, !tbaa !131
  %1299 = icmp eq ptr %1298, null
  br i1 %1299, label %1301, label %1300

1300:                                             ; preds = %1297
  call void @_ZdlPv(ptr noundef nonnull %1298) #21
  br label %1301

1301:                                             ; preds = %1300, %1297
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1302 = load ptr, ptr %16, align 8, !tbaa !131
  %1303 = icmp eq ptr %1302, null
  br i1 %1303, label %1305, label %1304

1304:                                             ; preds = %1301
  call void @_ZdlPv(ptr noundef nonnull %1302) #21
  br label %1305

1305:                                             ; preds = %1304, %1301
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %1306 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %1307 = load ptr, ptr %1306, align 8, !tbaa !136
  %1308 = icmp eq ptr %1307, null
  br i1 %1308, label %1310, label %1309

1309:                                             ; preds = %1305
  call void @_ZdaPv(ptr noundef nonnull %1307) #21
  store ptr null, ptr %1306, align 8, !tbaa !136
  br label %1310

1310:                                             ; preds = %1309, %1305
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %1311 unwind label %316

1311:                                             ; preds = %1310
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !41
  %1312 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %1313 = load ptr, ptr %1312, align 8, !tbaa !140
  %1314 = icmp eq ptr %1313, null
  br i1 %1314, label %1316, label %1315

1315:                                             ; preds = %1311
  call void @_ZdaPv(ptr noundef nonnull %1313) #21
  br label %1316

1316:                                             ; preds = %1315, %1311
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %14)
          to label %1317 unwind label %314

1317:                                             ; preds = %1316
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %14) #19
  %1318 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1318)
          to label %1327 unwind label %1319

1319:                                             ; preds = %1317
  %1320 = landingpad { ptr, i32 }
          cleanup
  %1321 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1321)
          to label %1322 unwind label %1324

1322:                                             ; preds = %1319, %1391
  %1323 = phi { ptr, i32 } [ %1381, %1391 ], [ %1320, %1319 ]
  resume { ptr, i32 } %1323

1324:                                             ; preds = %1319
  %1325 = landingpad { ptr, i32 }
          catch ptr null
  %1326 = extractvalue { ptr, i32 } %1325, 0
  call void @__clang_call_terminate(ptr %1326) #22
  unreachable

1327:                                             ; preds = %1317
  %1328 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  call void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1328)
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %13) #19
  ret void

1329:                                             ; preds = %1107, %1059, %320, %193, %326, %318
  %1330 = phi { ptr, i32 } [ %319, %318 ], [ %327, %326 ], [ %321, %320 ], [ %194, %193 ], [ %1108, %1107 ], [ %1060, %1059 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %1331 = load ptr, ptr %19, align 8, !tbaa !144
  %1332 = icmp eq ptr %1331, null
  br i1 %1332, label %1334, label %1333

1333:                                             ; preds = %1329
  call void @_ZdlPv(ptr noundef nonnull %1331) #21
  br label %1334

1334:                                             ; preds = %1333, %1329
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %1335 = load ptr, ptr %18, align 8, !tbaa !224
  %1336 = load ptr, ptr %69, align 8, !tbaa !226
  %1337 = icmp eq ptr %1335, %1336
  br i1 %1337, label %1347, label %1338

1338:                                             ; preds = %1334, %1342
  %1339 = phi ptr [ %1343, %1342 ], [ %1335, %1334 ]
  %1340 = load ptr, ptr %1339, align 8, !tbaa !41
  %1341 = load ptr, ptr %1340, align 8
  invoke void %1341(ptr noundef nonnull align 8 dereferenceable(88) %1339)
          to label %1342 unwind label %1350

1342:                                             ; preds = %1338
  %1343 = getelementptr inbounds %"class.dealii::Vector", ptr %1339, i64 1
  %1344 = icmp eq ptr %1343, %1336
  br i1 %1344, label %1345, label %1338

1345:                                             ; preds = %1342
  %1346 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1347

1347:                                             ; preds = %1345, %1334
  %1348 = phi ptr [ %1346, %1345 ], [ %1335, %1334 ]
  %1349 = icmp eq ptr %1348, null
  br i1 %1349, label %1358, label %1355

1350:                                             ; preds = %1338
  %1351 = landingpad { ptr, i32 }
          catch ptr null
  %1352 = load ptr, ptr %18, align 8, !tbaa !224
  %1353 = icmp eq ptr %1352, null
  br i1 %1353, label %1394, label %1354

1354:                                             ; preds = %1350
  call void @_ZdlPv(ptr noundef nonnull %1352) #21
  br label %1394

1355:                                             ; preds = %1347, %1293
  %1356 = phi ptr [ %1295, %1293 ], [ %1348, %1347 ]
  %1357 = phi { ptr, i32 } [ %1294, %1293 ], [ %1330, %1347 ]
  call void @_ZdlPv(ptr noundef nonnull %1356) #21
  br label %1358

1358:                                             ; preds = %1355, %1347, %1293
  %1359 = phi { ptr, i32 } [ %1294, %1293 ], [ %1330, %1347 ], [ %1357, %1355 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1360 = load ptr, ptr %17, align 8, !tbaa !131
  %1361 = icmp eq ptr %1360, null
  br i1 %1361, label %1363, label %1362

1362:                                             ; preds = %1358
  call void @_ZdlPv(ptr noundef nonnull %1360) #21
  br label %1363

1363:                                             ; preds = %1362, %1358
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1364 = load ptr, ptr %16, align 8, !tbaa !131
  %1365 = icmp eq ptr %1364, null
  br i1 %1365, label %1367, label %1366

1366:                                             ; preds = %1363
  call void @_ZdlPv(ptr noundef nonnull %1364) #21
  br label %1367

1367:                                             ; preds = %1366, %1363
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %1368 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %1369 = load ptr, ptr %1368, align 8, !tbaa !136
  %1370 = icmp eq ptr %1369, null
  br i1 %1370, label %1372, label %1371

1371:                                             ; preds = %1367
  call void @_ZdaPv(ptr noundef nonnull %1369) #21
  store ptr null, ptr %1368, align 8, !tbaa !136
  br label %1372

1372:                                             ; preds = %1371, %1367
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %1373 unwind label %1392

1373:                                             ; preds = %1372, %316
  %1374 = phi { ptr, i32 } [ %317, %316 ], [ %1359, %1372 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !41
  %1375 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %1376 = load ptr, ptr %1375, align 8, !tbaa !140
  %1377 = icmp eq ptr %1376, null
  br i1 %1377, label %1379, label %1378

1378:                                             ; preds = %1373
  call void @_ZdaPv(ptr noundef nonnull %1376) #21
  br label %1379

1379:                                             ; preds = %1378, %1373
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %14)
          to label %1380 unwind label %1392

1380:                                             ; preds = %1379, %314
  %1381 = phi { ptr, i32 } [ %315, %314 ], [ %1374, %1379 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %14) #19
  %1382 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1382)
          to label %1383 unwind label %1385

1383:                                             ; preds = %1380
  %1384 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1384)
          to label %1391 unwind label %1392

1385:                                             ; preds = %1380
  %1386 = landingpad { ptr, i32 }
          catch ptr null
  %1387 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1387)
          to label %1394 unwind label %1388

1388:                                             ; preds = %1385
  %1389 = landingpad { ptr, i32 }
          catch ptr null
  %1390 = extractvalue { ptr, i32 } %1389, 0
  call void @__clang_call_terminate(ptr %1390) #22
  unreachable

1391:                                             ; preds = %1383
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %13) #19
  br label %1322

1392:                                             ; preds = %1383, %1379, %1372, %326
  %1393 = landingpad { ptr, i32 }
          catch ptr null
  br label %1394

1394:                                             ; preds = %1392, %1385, %1350, %1354
  %1395 = phi { ptr, i32 } [ %1351, %1354 ], [ %1351, %1350 ], [ %1393, %1392 ], [ %1386, %1385 ]
  %1396 = extractvalue { ptr, i32 } %1395, 0
  call void @__clang_call_terminate(ptr %1396) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull align 8 dereferenceable(224) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 1 %5, ptr noundef nonnull align 1 %6, ptr noundef nonnull align 8 dereferenceable(88) %7, ptr noundef %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %10) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.266", align 8
  %13 = alloca %"class.boost::_bi::bind_t.397", align 8
  %14 = alloca %"class.boost::function.83", align 8
  %15 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  store ptr null, ptr %14, align 8, !tbaa !25
  %16 = load ptr, ptr %1, align 8, !tbaa !25
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  store ptr %16, ptr %14, align 8, !tbaa !25
  %19 = load ptr, ptr %16, align 8, !tbaa !227
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %19(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %21, i32 noundef 0)
  br label %22

22:                                               ; preds = %11, %18
  call void @llvm.experimental.noalias.scope.decl(metadata !488)
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !325, !noalias !488
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %25 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %15, i64 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !325, !alias.scope !488
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %15, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !325, !noalias !488
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(16) %27, i64 16, i1 false)
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !325, !alias.scope !488
  %31 = ptrtoint ptr %6 to i64
  %32 = ptrtoint ptr %7 to i64
  %33 = ptrtoint ptr %10 to i64
  invoke void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIfEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSL_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSZ_ISA_EENSZ_ISE_EENSZ_ISH_EENSZ_ISL_EENSZ_ISO_EESQ_ST_NSZ_ISV_EEEENS_3_bi6bind_tINS17_11unspecifiedET_NS17_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1A_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_S1K_(ptr nonnull sret(%"class.boost::_bi::bind_t.397") align 8 %13, ptr noundef nonnull %14, ptr nonnull %2, ptr nonnull %3, ptr nonnull %4, ptr nonnull %5, i64 %31, i64 %32, ptr noundef %8, ptr noundef nonnull %15, i64 %33)
          to label %34 unwind label %63

34:                                               ; preds = %22
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS4_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull %13, i32 noundef 0)
          to label %35 unwind label %65

35:                                               ; preds = %34
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %36 unwind label %67

36:                                               ; preds = %35
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  %38 = icmp eq ptr %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load ptr, ptr %37, align 8, !tbaa !231
  %41 = icmp eq ptr %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %40(ptr noundef nonnull align 8 dereferenceable(24) %43, ptr noundef nonnull align 8 dereferenceable(24) %43, i32 noundef 2)
          to label %44 unwind label %65

44:                                               ; preds = %42, %39
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %45

45:                                               ; preds = %44, %36
  %46 = load ptr, ptr %13, align 8, !tbaa !25
  %47 = icmp eq ptr %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = load ptr, ptr %46, align 8, !tbaa !464
  %50 = icmp eq ptr %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %52, ptr noundef nonnull align 8 dereferenceable(24) %52, i32 noundef 2)
          to label %53 unwind label %63

53:                                               ; preds = %51, %48
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %54

54:                                               ; preds = %53, %45
  %55 = load ptr, ptr %14, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %55, align 8, !tbaa !464
  %59 = icmp eq ptr %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  call void %58(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
  br label %62

62:                                               ; preds = %57, %60, %54
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  ret void

63:                                               ; preds = %51, %22
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %87

65:                                               ; preds = %42, %34
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %77

67:                                               ; preds = %35
  %68 = landingpad { ptr, i32 }
          cleanup
  %69 = load ptr, ptr %12, align 8, !tbaa !25
  %70 = icmp eq ptr %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = load ptr, ptr %69, align 8, !tbaa !231
  %73 = icmp eq ptr %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %72(ptr noundef nonnull align 8 dereferenceable(24) %75, ptr noundef nonnull align 8 dereferenceable(24) %75, i32 noundef 2)
          to label %76 unwind label %97

76:                                               ; preds = %74, %71
  store ptr null, ptr %12, align 8, !tbaa !25
  br label %77

77:                                               ; preds = %76, %67, %65
  %78 = phi { ptr, i32 } [ %66, %65 ], [ %68, %67 ], [ %68, %76 ]
  %79 = load ptr, ptr %13, align 8, !tbaa !25
  %80 = icmp eq ptr %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %77
  %82 = load ptr, ptr %79, align 8, !tbaa !464
  %83 = icmp eq ptr %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  invoke void %82(ptr noundef nonnull align 8 dereferenceable(24) %85, ptr noundef nonnull align 8 dereferenceable(24) %85, i32 noundef 2)
          to label %86 unwind label %97

86:                                               ; preds = %84, %81
  store ptr null, ptr %13, align 8, !tbaa !25
  br label %87

87:                                               ; preds = %86, %77, %63
  %88 = phi { ptr, i32 } [ %64, %63 ], [ %78, %77 ], [ %78, %86 ]
  %89 = load ptr, ptr %14, align 8, !tbaa !25
  %90 = icmp eq ptr %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = load ptr, ptr %89, align 8, !tbaa !464
  %93 = icmp eq ptr %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.boost::function_base", ptr %14, i64 0, i32 1
  invoke void %92(ptr noundef nonnull align 8 dereferenceable(24) %95, ptr noundef nonnull align 8 dereferenceable(24) %95, i32 noundef 2)
          to label %96 unwind label %97

96:                                               ; preds = %91, %94, %87
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  resume { ptr, i32 } %88

97:                                               ; preds = %94, %84, %74
  %98 = landingpad { ptr, i32 }
          catch ptr null
  %99 = extractvalue { ptr, i32 } %98, 0
  call void @__clang_call_terminate(ptr %99) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSH_(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator18create_mass_matrixILi3EfLi3EEEvRKNS_2hp17MappingCollectionIXT_EXT1_EEERKNS2_10DoFHandlerIXT_EXT1_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIT0_EERKNS_8FunctionIXT1_EEERNS_6VectorIdEEPSL_(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESN_(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef %7) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.std::vector.28", align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !33
  %12 = load ptr, ptr %7, align 8, !tbaa !33
  %13 = ptrtoint ptr %11 to i64
  %14 = ptrtoint ptr %12 to i64
  %15 = sub i64 %13, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq ptr %11, %12
  br i1 %17, label %23, label %18

18:                                               ; preds = %8
  %19 = icmp ugt i64 %15, 9223372036854775804
  br i1 %19, label %20, label %21, !prof !491

20:                                               ; preds = %18
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #23
  unreachable

21:                                               ; preds = %18
  %22 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #20
  br label %23

23:                                               ; preds = %21, %8
  %24 = phi ptr [ null, %8 ], [ %22, %21 ]
  store ptr %24, ptr %9, align 8, !tbaa !144
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %9, i64 0, i32 1
  %26 = getelementptr inbounds i32, ptr %24, i64 %16
  %27 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %9, i64 0, i32 2
  store ptr %26, ptr %27, align 8, !tbaa !492
  %28 = icmp sgt i64 %15, 4
  br i1 %28, label %29, label %30, !prof !493

29:                                               ; preds = %23
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %24, ptr align 4 %12, i64 %15, i1 false)
  br label %34

30:                                               ; preds = %23
  %31 = icmp eq i64 %15, 4
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = load i32, ptr %12, align 4, !tbaa !59
  store i32 %33, ptr %24, align 4, !tbaa !59
  br label %34

34:                                               ; preds = %29, %30, %32
  store ptr %26, ptr %25, align 8, !tbaa !349
  invoke void @_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESR_(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull %9)
          to label %35 unwind label %40

35:                                               ; preds = %34
  %36 = load ptr, ptr %9, align 8, !tbaa !144
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @_ZdlPv(ptr noundef nonnull %36) #21
  br label %39

39:                                               ; preds = %35, %38
  ret void

40:                                               ; preds = %34
  %41 = landingpad { ptr, i32 }
          cleanup
  %42 = load ptr, ptr %9, align 8, !tbaa !144
  %43 = icmp eq ptr %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  call void @_ZdlPv(ptr noundef nonnull %42) #21
  br label %45

45:                                               ; preds = %44, %40
  resume { ptr, i32 } %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESR_(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef %8) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca i32, align 4
  %11 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %12 = alloca %"class.std::vector", align 8
  %13 = alloca %"class.dealii::TriaActiveIterator", align 8
  %14 = alloca %"class.dealii::TriaActiveIterator", align 8
  %15 = alloca %"class.dealii::TriaRawIterator", align 8
  %16 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %17 = alloca %"class.dealii::Threads::Thread", align 16
  %18 = alloca %"class.dealii::Threads::internal::fun_encapsulator.138", align 8
  %19 = alloca %"class.boost::tuples::tuple", align 8
  %20 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %21 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !63
  %23 = getelementptr inbounds i8, ptr %22, i64 116
  %24 = load i32, ptr %23, align 4, !tbaa !128
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !349
  %27 = load ptr, ptr %8, align 8, !tbaa !144
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %46

29:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #19
  store i32 0, ptr %10, align 4, !tbaa !59
  %30 = icmp eq i32 %24, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  br label %34

33:                                               ; preds = %42, %29
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #19
  br label %46

34:                                               ; preds = %31, %42
  %35 = phi i32 [ 0, %31 ], [ %44, %42 ]
  %36 = load ptr, ptr %25, align 8, !tbaa !33
  %37 = load ptr, ptr %32, align 8, !tbaa !492
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  store i32 %35, ptr %36, align 4, !tbaa !59
  %40 = getelementptr inbounds i32, ptr %36, i64 1
  store ptr %40, ptr %25, align 8, !tbaa !349
  br label %42

41:                                               ; preds = %34
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %36, ptr noundef nonnull align 4 dereferenceable(4) %10)
  br label %42

42:                                               ; preds = %39, %41
  %43 = load i32, ptr %10, align 4, !tbaa !59
  %44 = add i32 %43, 1
  store i32 %44, ptr %10, align 4, !tbaa !59
  %45 = icmp ult i32 %44, %24
  br i1 %45, label %34, label %33

46:                                               ; preds = %9, %33
  %47 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  %48 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %11, i64 0, i32 1
  store ptr %11, ptr %48, align 8, !tbaa !10
  store ptr %11, ptr %11, align 8, !tbaa !13
  %49 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %11, i64 0, i32 1
  store i64 0, ptr %49, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %13, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %50 unwind label %75

50:                                               ; preds = %46
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %15) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %15, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %51 unwind label %77

51:                                               ; preds = %50
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  %53 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %15, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !17
  store ptr %54, ptr %52, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %12, ptr noundef nonnull align 8 dereferenceable(24) %13, ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef %47)
          to label %55 unwind label %77

55:                                               ; preds = %51
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #19
  %56 = icmp eq i32 %47, 0
  br i1 %56, label %66, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %18, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.boost::tuples::cons", ptr %19, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.boost::tuples::cons", ptr %19, i64 0, i32 1, i32 1
  %61 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %20, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %20, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.boost::shared_ptr", ptr %17, i64 0, i32 1
  %65 = zext i32 %47 to i64
  br label %81

66:                                               ; preds = %135, %55
  %67 = load ptr, ptr %11, align 8, !tbaa !13
  %68 = icmp eq ptr %67, %11
  br i1 %68, label %154, label %69

69:                                               ; preds = %66, %72
  %70 = phi ptr [ %73, %72 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"struct.std::_List_node", ptr %70, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %71)
          to label %72 unwind label %187

72:                                               ; preds = %69
  %73 = load ptr, ptr %70, align 8, !tbaa !13
  %74 = icmp eq ptr %73, %11
  br i1 %74, label %154, label %69

75:                                               ; preds = %46
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %79

77:                                               ; preds = %51, %50
  %78 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi { ptr, i32 } [ %78, %77 ], [ %76, %75 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  br label %194

81:                                               ; preds = %57, %135
  %82 = phi i64 [ 0, %57 ], [ %136, %135 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %17) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !494)
  store ptr null, ptr %18, align 8, !tbaa !25, !alias.scope !494
  %83 = load ptr, ptr @_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSH_SK_SY_S11_S15_SP_S17_S1A_S1D_EEEvT_E13stored_vtable, align 8, !tbaa !497, !noalias !494
  %84 = icmp eq ptr %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  invoke void %83(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
          to label %86 unwind label %138

86:                                               ; preds = %81, %85
  store ptr @_ZN6dealii13MatrixCreator29create_boundary_mass_matrix_1ILi3ELi3EEEvN5boost6tuples5tupleIRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEENS3_9null_typeESH_SH_SH_SH_SH_SH_EERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEERKSW_NS0_13IteratorRangeISA_EERNS_7Threads16DummyThreadMutexE, ptr %58, align 8, !tbaa !30, !alias.scope !494
  store ptr @_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSH_SK_SY_S11_S15_SP_S17_S1A_S1D_EEEvT_E13stored_vtable, ptr %18, align 8, !tbaa !25, !alias.scope !494
  store ptr %0, ptr %19, align 8, !tbaa !33
  store ptr %1, ptr %59, align 8, !tbaa !33
  store ptr %2, ptr %60, align 8, !tbaa !33
  %87 = load ptr, ptr %12, align 8, !tbaa !31
  %88 = getelementptr inbounds %"struct.std::pair", ptr %87, i64 %82
  %89 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %20, ptr noundef nonnull align 8 dereferenceable(16) %88, i64 16, i1 false)
  store ptr %90, ptr %61, align 8, !tbaa !17
  %91 = getelementptr inbounds %"struct.std::pair", ptr %87, i64 %82, i32 1
  %92 = getelementptr inbounds %"struct.std::pair", ptr %87, i64 %82, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %62, ptr noundef nonnull align 8 dereferenceable(16) %91, i64 16, i1 false)
  store ptr %93, ptr %63, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleINS5_IRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi2EEENS4_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexESI_EELi9EEclESJ_SM_S10_S13_S17_SR_S19_S1C_S1E_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %17, ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef nonnull byval(%"class.boost::tuples::tuple") align 8 %19, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull %20, ptr noundef nonnull align 1 dereferenceable(1) %16)
          to label %94 unwind label %140

94:                                               ; preds = %86
  %95 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %96 unwind label %142

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"struct.std::_List_node", ptr %95, i64 0, i32 1
  %98 = load <2 x ptr>, ptr %17, align 16, !tbaa !33
  store <2 x ptr> %98, ptr %97, align 8, !tbaa !33
  %99 = extractelement <2 x ptr> %98, i64 1
  %100 = icmp eq ptr %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %99, i64 0, i32 1
  %103 = load i64, ptr %102, align 8, !tbaa !34
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr %102, align 8, !tbaa !34
  br label %105

105:                                              ; preds = %101, %96
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %95, ptr noundef nonnull %11) #19
  %106 = load i64, ptr %49, align 8, !tbaa !36
  %107 = add i64 %106, 1
  store i64 %107, ptr %49, align 8, !tbaa !36
  %108 = load ptr, ptr %64, align 8, !tbaa !39
  %109 = icmp eq ptr %108, null
  br i1 %109, label %128, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %108, i64 0, i32 1
  %112 = load i64, ptr %111, align 8, !tbaa !34
  %113 = add nsw i64 %112, -1
  store i64 %113, ptr %111, align 8, !tbaa !34
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %128

115:                                              ; preds = %110
  %116 = load ptr, ptr %108, align 8, !tbaa !41
  %117 = getelementptr inbounds ptr, ptr %116, i64 2
  %118 = load ptr, ptr %117, align 8
  invoke void %118(ptr noundef nonnull align 8 dereferenceable(24) %108)
          to label %119 unwind label %140

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %108, i64 0, i32 2
  %121 = load i64, ptr %120, align 8, !tbaa !43
  %122 = add nsw i64 %121, -1
  store i64 %122, ptr %120, align 8, !tbaa !43
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %119
  %125 = load ptr, ptr %108, align 8, !tbaa !41
  %126 = getelementptr inbounds ptr, ptr %125, i64 3
  %127 = load ptr, ptr %126, align 8
  invoke void %127(ptr noundef nonnull align 8 dereferenceable(24) %108)
          to label %128 unwind label %140

128:                                              ; preds = %119, %110, %105, %124
  %129 = load ptr, ptr %18, align 8, !tbaa !25
  %130 = icmp eq ptr %129, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %128
  %132 = load ptr, ptr %129, align 8, !tbaa !497
  %133 = icmp eq ptr %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  invoke void %132(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
          to label %135 unwind label %138

135:                                              ; preds = %131, %134, %128
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #19
  %136 = add nuw nsw i64 %82, 1
  %137 = icmp eq i64 %136, %65
  br i1 %137, label %66, label %81

138:                                              ; preds = %134, %85
  %139 = landingpad { ptr, i32 }
          cleanup
  br label %152

140:                                              ; preds = %124, %115, %86
  %141 = landingpad { ptr, i32 }
          cleanup
  br label %144

142:                                              ; preds = %94
  %143 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %17)
          to label %144 unwind label %197

144:                                              ; preds = %142, %140
  %145 = phi { ptr, i32 } [ %141, %140 ], [ %143, %142 ]
  %146 = load ptr, ptr %18, align 8, !tbaa !25
  %147 = icmp eq ptr %146, null
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = load ptr, ptr %146, align 8, !tbaa !497
  %150 = icmp eq ptr %149, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %148
  invoke void %149(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
          to label %152 unwind label %197

152:                                              ; preds = %148, %151, %144, %138
  %153 = phi { ptr, i32 } [ %139, %138 ], [ %145, %144 ], [ %145, %151 ], [ %145, %148 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #19
  br label %189

154:                                              ; preds = %72, %66
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  %155 = load ptr, ptr %12, align 8, !tbaa !31
  %156 = icmp eq ptr %155, null
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  call void @_ZdlPv(ptr noundef nonnull %155) #21
  br label %158

158:                                              ; preds = %157, %154
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  %159 = load ptr, ptr %11, align 8, !tbaa !13
  %160 = icmp eq ptr %159, %11
  br i1 %160, label %186, label %161

161:                                              ; preds = %158, %184
  %162 = phi ptr [ %163, %184 ], [ %159, %158 ]
  %163 = load ptr, ptr %162, align 8, !tbaa !13
  %164 = getelementptr inbounds %"struct.std::_List_node", ptr %162, i64 0, i32 1, i32 0, i32 1
  %165 = load ptr, ptr %164, align 8, !tbaa !39
  %166 = icmp eq ptr %165, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %165, i64 0, i32 1
  %169 = load i64, ptr %168, align 8, !tbaa !34
  %170 = add nsw i64 %169, -1
  store i64 %170, ptr %168, align 8, !tbaa !34
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = load ptr, ptr %165, align 8, !tbaa !41
  %174 = getelementptr inbounds ptr, ptr %173, i64 2
  %175 = load ptr, ptr %174, align 8
  call void %175(ptr noundef nonnull align 8 dereferenceable(24) %165)
  %176 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %165, i64 0, i32 2
  %177 = load i64, ptr %176, align 8, !tbaa !43
  %178 = add nsw i64 %177, -1
  store i64 %178, ptr %176, align 8, !tbaa !43
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %184

180:                                              ; preds = %172
  %181 = load ptr, ptr %165, align 8, !tbaa !41
  %182 = getelementptr inbounds ptr, ptr %181, i64 3
  %183 = load ptr, ptr %182, align 8
  call void %183(ptr noundef nonnull align 8 dereferenceable(24) %165)
  br label %184

184:                                              ; preds = %180, %172, %167, %161
  call void @_ZdlPv(ptr noundef nonnull %162) #21
  %185 = icmp eq ptr %163, %11
  br i1 %185, label %186, label %161

186:                                              ; preds = %184, %158
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  ret void

187:                                              ; preds = %69
  %188 = landingpad { ptr, i32 }
          cleanup
  br label %189

189:                                              ; preds = %187, %152
  %190 = phi { ptr, i32 } [ %153, %152 ], [ %188, %187 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  %191 = load ptr, ptr %12, align 8, !tbaa !31
  %192 = icmp eq ptr %191, null
  br i1 %192, label %194, label %193

193:                                              ; preds = %189
  call void @_ZdlPv(ptr noundef nonnull %191) #21
  br label %194

194:                                              ; preds = %193, %189, %79
  %195 = phi { ptr, i32 } [ %80, %79 ], [ %190, %189 ], [ %190, %193 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %11)
          to label %196 unwind label %197

196:                                              ; preds = %194
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  resume { ptr, i32 } %195

197:                                              ; preds = %151, %194, %142
  %198 = landingpad { ptr, i32 }
          catch ptr null
  %199 = extractvalue { ptr, i32 } %198, 0
  call void @__clang_call_terminate(ptr %199) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator29create_boundary_mass_matrix_1ILi3ELi3EEEvN5boost6tuples5tupleIRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXmiT_Li1EEEENS3_9null_typeESH_SH_SH_SH_SH_SH_EERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEERKSW_NS0_13IteratorRangeISA_EERNS_7Threads16DummyThreadMutexE(ptr noundef byval(%"class.boost::tuples::tuple") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::FullMatrix", align 8
  %11 = alloca %"class.dealii::Vector", align 8
  %12 = alloca %"class.dealii::FEFaceValues", align 8
  %13 = alloca %"class.std::vector.92", align 8
  %14 = alloca %"class.std::vector.258", align 8
  %15 = alloca %"class.dealii::Vector", align 8
  %16 = alloca %"class.std::allocator.260", align 1
  %17 = alloca %"class.std::vector.92", align 8
  %18 = alloca %"class.std::vector.258", align 8
  %19 = alloca %"class.dealii::Vector", align 8
  %20 = alloca %"class.std::allocator.260", align 1
  %21 = alloca %"class.std::vector.28", align 8
  %22 = alloca %"class.dealii::TriaActiveIterator", align 8
  %23 = alloca %"class.std::vector.92", align 8
  %24 = alloca %"class.dealii::TriaIterator.411", align 8
  %25 = load ptr, ptr %0, align 8, !tbaa !499
  %26 = getelementptr inbounds %"struct.boost::tuples::cons", ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !503
  %28 = getelementptr inbounds %"struct.boost::tuples::cons", ptr %0, i64 0, i32 1, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !504
  %30 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %27, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !63
  %32 = getelementptr inbounds i8, ptr %31, i64 116
  %33 = load i32, ptr %32, align 4, !tbaa !128
  %34 = getelementptr inbounds i8, ptr %2, i64 24
  %35 = load ptr, ptr %34, align 8, !tbaa !505
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %35, i64 0, i32 1, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !506
  %38 = getelementptr inbounds %"class.dealii::Function", ptr %37, i64 0, i32 2
  %39 = load i32, ptr %38, align 8, !tbaa !145
  %40 = icmp eq i32 %33, 1
  %41 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %31, i64 0, i32 2
  %42 = load i8, ptr %41, align 4, !tbaa !148, !range !182, !noundef !183
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds i8, ptr %31, i64 112
  %45 = load i32, ptr %44, align 8, !tbaa !141
  %46 = getelementptr inbounds i8, ptr %31, i64 108
  %47 = load i32, ptr %46, align 4, !tbaa !508
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10) #19
  call void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %10, i32 noundef %45, i32 noundef %45)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %11) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %48 unwind label %368

48:                                               ; preds = %9
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %49 = getelementptr inbounds %"class.dealii::Vector", ptr %11, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, i8 0, i64 16, i1 false)
  %50 = icmp eq i32 %45, 0
  br i1 %50, label %63, label %51

51:                                               ; preds = %48
  %52 = zext i32 %45 to i64
  %53 = shl nuw nsw i64 %52, 3
  %54 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %53) #20
          to label %55 unwind label %58

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.dealii::Vector", ptr %11, i64 0, i32 3
  %57 = getelementptr inbounds %"class.dealii::Vector", ptr %11, i64 0, i32 2
  store ptr %54, ptr %56, align 8, !tbaa !136
  store i32 %45, ptr %57, align 4, !tbaa !138
  store i32 %45, ptr %49, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %54, i8 0, i64 %53, i1 false), !tbaa !133
  br label %63

58:                                               ; preds = %51
  %59 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1753 unwind label %60

60:                                               ; preds = %58
  %61 = landingpad { ptr, i32 }
          catch ptr null
  %62 = extractvalue { ptr, i32 } %61, 0
  call void @__clang_call_terminate(ptr %62) #22
  unreachable

63:                                               ; preds = %55, %48
  call void @llvm.lifetime.start.p0(i64 784, ptr nonnull %12) #19
  invoke void @_ZN6dealii12FEFaceValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi2EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(784) %12, ptr noundef nonnull align 8 dereferenceable(72) %25, ptr noundef nonnull align 8 dereferenceable(728) %31, ptr noundef nonnull align 8 dereferenceable(128) %29, i32 noundef 113)
          to label %64 unwind label %370

64:                                               ; preds = %63
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  %65 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %12, i64 0, i32 2
  %66 = load i32, ptr %65, align 4, !tbaa !127
  %67 = zext i32 %66 to i64
  %68 = icmp eq i32 %66, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %101

70:                                               ; preds = %64
  %71 = shl nuw nsw i64 %67, 3
  %72 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %71) #20
          to label %73 unwind label %372

73:                                               ; preds = %70
  store ptr %72, ptr %13, align 8, !tbaa !131
  %74 = getelementptr inbounds double, ptr %72, i64 %67
  %75 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 2
  store ptr %74, ptr %75, align 8, !tbaa !132
  %76 = add nuw nsw i64 %67, 2305843009213693951
  %77 = and i64 %76, 2305843009213693951
  %78 = add nuw nsw i64 %77, 1
  %79 = icmp ult i64 %77, 15
  br i1 %79, label %95, label %80

80:                                               ; preds = %73
  %81 = and i64 %78, 4611686018427387888
  %82 = shl i64 %81, 3
  %83 = getelementptr i8, ptr %72, i64 %82
  br label %84

84:                                               ; preds = %84, %80
  %85 = phi i64 [ 0, %80 ], [ %91, %84 ]
  %86 = shl i64 %85, 3
  %87 = getelementptr i8, ptr %72, i64 %86
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %87, align 8, !tbaa !133
  %88 = getelementptr double, ptr %87, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %88, align 8, !tbaa !133
  %89 = getelementptr double, ptr %87, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %89, align 8, !tbaa !133
  %90 = getelementptr double, ptr %87, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %90, align 8, !tbaa !133
  %91 = add nuw i64 %85, 16
  %92 = icmp eq i64 %91, %81
  br i1 %92, label %93, label %84, !llvm.loop !509

93:                                               ; preds = %84
  %94 = icmp eq i64 %78, %81
  br i1 %94, label %101, label %95

95:                                               ; preds = %73, %93
  %96 = phi ptr [ %72, %73 ], [ %83, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi ptr [ %99, %97 ], [ %96, %95 ]
  store double 1.000000e+00, ptr %98, align 8, !tbaa !133
  %99 = getelementptr inbounds double, ptr %98, i64 1
  %100 = icmp eq ptr %99, %74
  br i1 %100, label %101, label %97, !llvm.loop !510

101:                                              ; preds = %97, %93, %69
  %102 = phi ptr [ null, %69 ], [ %74, %93 ], [ %74, %97 ]
  %103 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 1
  store ptr %102, ptr %103, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %104 unwind label %374

104:                                              ; preds = %101
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %105 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %105, i8 0, i64 16, i1 false)
  %106 = icmp eq i32 %33, 0
  br i1 %106, label %119, label %107

107:                                              ; preds = %104
  %108 = zext i32 %33 to i64
  %109 = shl nuw nsw i64 %108, 3
  %110 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %109) #20
          to label %111 unwind label %114

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %113 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 2
  store ptr %110, ptr %112, align 8, !tbaa !136
  store i32 %33, ptr %113, align 4, !tbaa !138
  store i32 %33, ptr %105, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %110, i8 0, i64 %109, i1 false), !tbaa !133
  br label %119

114:                                              ; preds = %107
  %115 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %378 unwind label %116

116:                                              ; preds = %114
  %117 = landingpad { ptr, i32 }
          catch ptr null
  %118 = extractvalue { ptr, i32 } %117, 0
  call void @__clang_call_terminate(ptr %118) #22
  unreachable

119:                                              ; preds = %111, %104
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %14, i64 noundef %67, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef nonnull align 1 dereferenceable(1) %16)
          to label %120 unwind label %376

120:                                              ; preds = %119
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %121 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %122 = load ptr, ptr %121, align 8, !tbaa !136
  %123 = icmp eq ptr %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %120
  call void @_ZdaPv(ptr noundef nonnull %122) #21
  store ptr null, ptr %121, align 8, !tbaa !136
  br label %125

125:                                              ; preds = %124, %120
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %126 unwind label %374

126:                                              ; preds = %125
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  %127 = icmp eq ptr %5, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.dealii::Function", ptr %5, i64 0, i32 2
  %130 = load i32, ptr %129, align 8, !tbaa !145
  %131 = icmp ne i32 %130, 1
  br label %132

132:                                              ; preds = %128, %126
  %133 = phi i1 [ false, %126 ], [ %131, %128 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %17) #19
  %134 = load i32, ptr %65, align 4, !tbaa !127
  %135 = zext i32 %134 to i64
  %136 = icmp eq i32 %134, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  br label %144

138:                                              ; preds = %132
  %139 = shl nuw nsw i64 %135, 3
  %140 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %139) #20
          to label %141 unwind label %380

141:                                              ; preds = %138
  store ptr %140, ptr %17, align 8, !tbaa !131
  %142 = getelementptr inbounds double, ptr %140, i64 %135
  %143 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 2
  store ptr %142, ptr %143, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %140, i8 0, i64 %139, i1 false), !tbaa !133
  br label %144

144:                                              ; preds = %141, %137
  %145 = phi ptr [ null, %137 ], [ %142, %141 ]
  %146 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 1
  store ptr %145, ptr %146, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %19) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %147 unwind label %382

147:                                              ; preds = %144
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !41
  %148 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %148, i8 0, i64 16, i1 false)
  %149 = icmp eq i32 %39, 0
  br i1 %149, label %162, label %150

150:                                              ; preds = %147
  %151 = zext i32 %39 to i64
  %152 = shl nuw nsw i64 %151, 3
  %153 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %152) #20
          to label %154 unwind label %157

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 3
  %156 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 2
  store ptr %153, ptr %155, align 8, !tbaa !136
  store i32 %39, ptr %156, align 4, !tbaa !138
  store i32 %39, ptr %148, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %153, i8 0, i64 %152, i1 false), !tbaa !133
  br label %162

157:                                              ; preds = %150
  %158 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %386 unwind label %159

159:                                              ; preds = %157
  %160 = landingpad { ptr, i32 }
          catch ptr null
  %161 = extractvalue { ptr, i32 } %160, 0
  call void @__clang_call_terminate(ptr %161) #22
  unreachable

162:                                              ; preds = %154, %147
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %20) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %18, i64 noundef %135, ptr noundef nonnull align 8 dereferenceable(88) %19, ptr noundef nonnull align 1 dereferenceable(1) %20)
          to label %163 unwind label %384

163:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %19, align 8, !tbaa !41
  %164 = getelementptr inbounds %"class.dealii::Vector", ptr %19, i64 0, i32 3
  %165 = load ptr, ptr %164, align 8, !tbaa !136
  %166 = icmp eq ptr %165, null
  br i1 %166, label %168, label %167

167:                                              ; preds = %163
  call void @_ZdaPv(ptr noundef nonnull %165) #21
  store ptr null, ptr %164, align 8, !tbaa !136
  br label %168

168:                                              ; preds = %167, %163
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %19)
          to label %169 unwind label %382

169:                                              ; preds = %168
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %19) #19
  %170 = zext i32 %45 to i64
  br i1 %50, label %175, label %171

171:                                              ; preds = %169
  %172 = shl nuw nsw i64 %170, 2
  %173 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %172) #20
          to label %174 unwind label %388

174:                                              ; preds = %171
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %173, i8 0, i64 %172, i1 false), !tbaa !59
  br label %175

175:                                              ; preds = %174, %169
  %176 = phi ptr [ null, %169 ], [ %173, %174 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %21) #19
  %177 = zext i32 %47 to i64
  %178 = icmp eq i32 %47, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %175
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %21, i8 0, i64 24, i1 false)
  br label %186

180:                                              ; preds = %175
  %181 = shl nuw nsw i64 %177, 2
  %182 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %181) #20
          to label %183 unwind label %390

183:                                              ; preds = %180
  store ptr %182, ptr %21, align 8, !tbaa !144
  %184 = getelementptr inbounds i32, ptr %182, i64 %177
  %185 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %21, i64 0, i32 2
  store ptr %184, ptr %185, align 8, !tbaa !492
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %182, i8 0, i64 %181, i1 false), !tbaa !59
  br label %186

186:                                              ; preds = %183, %179
  %187 = phi ptr [ null, %179 ], [ %184, %183 ]
  %188 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %21, i64 0, i32 1
  store ptr %187, ptr %188, align 8, !tbaa !349
  br i1 %50, label %200, label %189

189:                                              ; preds = %186
  %190 = add nuw nsw i64 %170, 63
  %191 = lshr i64 %190, 3
  %192 = and i64 %191, 1073741816
  %193 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %192) #20
          to label %194 unwind label %198

194:                                              ; preds = %189
  %195 = lshr i64 %190, 6
  %196 = getelementptr inbounds i64, ptr %193, i64 %195
  %197 = shl nuw nsw i64 %195, 3
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %193, i8 0, i64 %197, i1 false)
  br label %200

198:                                              ; preds = %189
  %199 = landingpad { ptr, i32 }
          cleanup
  br label %1670

200:                                              ; preds = %194, %186
  %201 = phi ptr [ null, %186 ], [ %193, %194 ]
  %202 = phi ptr [ null, %186 ], [ %196, %194 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %22) #19
  %203 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %204 = load ptr, ptr %203, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %205 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %22, i64 0, i32 1
  store ptr %204, ptr %205, align 8, !tbaa !17
  %206 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %207 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %22, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %209 = load i32, ptr %207, align 4, !tbaa !61
  %210 = load i32, ptr %208, align 4, !tbaa !61
  %211 = icmp ne i32 %209, %210
  %212 = load i32, ptr %22, align 8
  %213 = load i32, ptr %206, align 8
  %214 = icmp ne i32 %212, %213
  %215 = select i1 %211, i1 true, i1 %214
  br i1 %215, label %216, label %1569

216:                                              ; preds = %200
  %217 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %22, i64 0, i32 2
  %218 = getelementptr inbounds i8, ptr %2, i64 16
  %219 = getelementptr inbounds i8, ptr %2, i64 8
  %220 = getelementptr inbounds %"class.dealii::TableBase", ptr %10, i64 0, i32 3
  %221 = getelementptr inbounds %"class.dealii::TableBase", ptr %10, i64 0, i32 3, i32 0, i32 0, i64 1
  %222 = getelementptr inbounds %"class.dealii::TableBase", ptr %10, i64 0, i32 1
  %223 = getelementptr inbounds %"class.dealii::Vector", ptr %11, i64 0, i32 3
  %224 = getelementptr inbounds i8, ptr %12, i64 312
  %225 = zext i32 %33 to i64
  %226 = shl nuw nsw i64 %225, 3
  %227 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %23, i64 0, i32 2
  %228 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %23, i64 0, i32 1
  %229 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %31, i64 0, i32 17
  %230 = getelementptr inbounds i8, ptr %12, i64 336
  %231 = getelementptr inbounds i8, ptr %12, i64 216
  %232 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %12, i64 0, i32 3
  %233 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %31, i64 0, i32 12
  %234 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %12, i64 0, i32 6
  %235 = getelementptr inbounds i8, ptr %12, i64 144
  %236 = getelementptr inbounds i8, ptr %12, i64 160
  %237 = getelementptr inbounds i8, ptr %12, i64 480
  %238 = getelementptr inbounds %"class.dealii::TriaAccessorBase.318", ptr %24, i64 0, i32 1
  %239 = getelementptr inbounds %"class.dealii::DoFAccessor.410", ptr %24, i64 0, i32 1
  %240 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %241 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %242 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  %243 = add nuw nsw i64 %225, 2305843009213693951
  %244 = and i64 %243, 2305843009213693951
  %245 = add nuw nsw i64 %244, 1
  %246 = icmp ult i64 %244, 15
  %247 = and i64 %245, 4611686018427387888
  %248 = shl i64 %247, 3
  %249 = icmp eq i64 %245, %247
  br label %392

250:                                              ; preds = %1564
  %251 = load ptr, ptr %217, align 8, !tbaa !62
  %252 = getelementptr inbounds %"class.dealii::Triangulation", ptr %251, i64 0, i32 1
  %253 = load ptr, ptr %252, align 8, !tbaa !46
  %254 = ptrtoint ptr %253 to i64
  %255 = getelementptr inbounds %"class.dealii::Triangulation", ptr %251, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %256 = load i32, ptr %22, align 8
  %257 = load i32, ptr %207, align 4
  br label %258

258:                                              ; preds = %346, %250
  %259 = phi i32 [ %256, %250 ], [ %325, %346 ]
  %260 = phi i32 [ %256, %250 ], [ %326, %346 ]
  %261 = phi i32 [ %256, %250 ], [ %347, %346 ]
  %262 = phi i32 [ %257, %250 ], [ %327, %346 ]
  %263 = add nsw i32 %262, 1
  %264 = sext i32 %261 to i64
  %265 = getelementptr inbounds ptr, ptr %253, i64 %264
  %266 = load ptr, ptr %265, align 8, !tbaa !33
  %267 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %266, i64 0, i32 4
  %268 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %266, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %269 = load ptr, ptr %268, align 8, !tbaa !48
  %270 = load ptr, ptr %267, align 8, !tbaa !50
  %271 = ptrtoint ptr %269 to i64
  %272 = ptrtoint ptr %270 to i64
  %273 = sub i64 %271, %272
  %274 = sdiv exact i64 %273, 24
  %275 = trunc i64 %274 to i32
  %276 = icmp slt i32 %263, %275
  br i1 %276, label %324, label %277

277:                                              ; preds = %258
  %278 = add nsw i64 %264, 1
  %279 = trunc i64 %278 to i32
  store i32 %279, ptr %22, align 8, !tbaa !60
  %280 = load ptr, ptr %255, align 8, !tbaa !51
  %281 = ptrtoint ptr %280 to i64
  %282 = sub i64 %281, %254
  %283 = shl i64 %282, 29
  %284 = ashr i64 %283, 32
  %285 = icmp slt i64 %278, %284
  br i1 %285, label %286, label %318

286:                                              ; preds = %277
  %287 = getelementptr inbounds ptr, ptr %253, i64 %278
  %288 = load ptr, ptr %287, align 8, !tbaa !33
  %289 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %288, i64 0, i32 4
  %290 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %288, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %291 = load ptr, ptr %290, align 8, !tbaa !48
  %292 = load ptr, ptr %289, align 8, !tbaa !50
  %293 = ptrtoint ptr %291 to i64
  %294 = ptrtoint ptr %292 to i64
  %295 = sub i64 %293, %294
  %296 = sdiv exact i64 %295, 24
  %297 = trunc i64 %296 to i32
  %298 = icmp sgt i32 %297, 0
  br i1 %298, label %320, label %312

299:                                              ; preds = %312
  %300 = getelementptr inbounds ptr, ptr %253, i64 %314
  %301 = load ptr, ptr %300, align 8, !tbaa !33
  %302 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %301, i64 0, i32 4
  %303 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %301, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %304 = load ptr, ptr %303, align 8, !tbaa !48
  %305 = load ptr, ptr %302, align 8, !tbaa !50
  %306 = ptrtoint ptr %304 to i64
  %307 = ptrtoint ptr %305 to i64
  %308 = sub i64 %306, %307
  %309 = sdiv exact i64 %308, 24
  %310 = trunc i64 %309 to i32
  %311 = icmp sgt i32 %310, 0
  br i1 %311, label %319, label %312, !llvm.loop !52

312:                                              ; preds = %286, %299
  %313 = phi i64 [ %314, %299 ], [ %278, %286 ]
  %314 = add i64 %313, 1
  %315 = trunc i64 %314 to i32
  %316 = icmp eq i64 %314, %284
  br i1 %316, label %317, label %299, !llvm.loop !52

317:                                              ; preds = %312
  store i32 %315, ptr %22, align 8, !tbaa !60
  br label %318

318:                                              ; preds = %317, %277
  store i32 -1, ptr %22, align 8, !tbaa !60
  br label %324

319:                                              ; preds = %299
  store i32 %315, ptr %22, align 8, !tbaa !60
  br label %320

320:                                              ; preds = %319, %286
  %321 = phi i32 [ %279, %286 ], [ %315, %319 ]
  %322 = phi i64 [ %278, %286 ], [ %314, %319 ]
  %323 = trunc i64 %322 to i32
  br label %324

324:                                              ; preds = %320, %318, %258
  %325 = phi i32 [ %259, %258 ], [ -1, %318 ], [ %321, %320 ]
  %326 = phi i32 [ %260, %258 ], [ -1, %318 ], [ %323, %320 ]
  %327 = phi i32 [ %263, %258 ], [ -1, %318 ], [ 0, %320 ]
  %328 = phi i32 [ %261, %258 ], [ -1, %318 ], [ %323, %320 ]
  %329 = or i32 %328, %327
  %330 = icmp sgt i32 %329, -1
  br i1 %330, label %331, label %348

331:                                              ; preds = %324
  %332 = zext i32 %328 to i64
  %333 = getelementptr inbounds ptr, ptr %253, i64 %332
  %334 = load ptr, ptr %333, align 8, !tbaa !33
  %335 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %334, i64 0, i32 4, i32 0, i32 3
  %336 = load ptr, ptr %335, align 8, !tbaa !54
  %337 = lshr i32 %327, 6
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds i64, ptr %336, i64 %338
  %340 = and i32 %327, 63
  %341 = zext i32 %340 to i64
  %342 = shl nuw i64 1, %341
  %343 = load i64, ptr %339, align 8, !tbaa !56
  %344 = and i64 %343, %342
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %348

346:                                              ; preds = %331, %351
  %347 = phi i32 [ %328, %331 ], [ %326, %351 ]
  br label %258

348:                                              ; preds = %331, %324
  store i32 %327, ptr %207, align 4, !tbaa !61
  %349 = or i32 %327, %326
  %350 = icmp sgt i32 %349, -1
  br i1 %350, label %351, label %362

351:                                              ; preds = %348
  %352 = zext i32 %326 to i64
  %353 = getelementptr inbounds ptr, ptr %253, i64 %352
  %354 = load ptr, ptr %353, align 8, !tbaa !33
  %355 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %354, i64 0, i32 4, i32 0, i32 1
  %356 = shl i32 %327, 2
  %357 = zext i32 %356 to i64
  %358 = load ptr, ptr %355, align 8, !tbaa !57
  %359 = getelementptr inbounds i32, ptr %358, i64 %357
  %360 = load i32, ptr %359, align 4, !tbaa !59
  %361 = icmp eq i32 %360, -1
  br i1 %361, label %362, label %346

362:                                              ; preds = %348, %351
  %363 = load i32, ptr %208, align 4, !tbaa !61
  %364 = icmp ne i32 %327, %363
  %365 = load i32, ptr %206, align 8
  %366 = icmp ne i32 %325, %365
  %367 = select i1 %364, i1 true, i1 %366
  br i1 %367, label %1567, label %1569

368:                                              ; preds = %1652, %9
  %369 = landingpad { ptr, i32 }
          cleanup
  br label %1753

370:                                              ; preds = %1641, %63
  %371 = landingpad { ptr, i32 }
          cleanup
  br label %1746

372:                                              ; preds = %70
  %373 = landingpad { ptr, i32 }
          cleanup
  br label %1737

374:                                              ; preds = %125, %101
  %375 = landingpad { ptr, i32 }
          cleanup
  br label %378

376:                                              ; preds = %119
  %377 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %15)
          to label %378 unwind label %1761

378:                                              ; preds = %374, %114, %376
  %379 = phi { ptr, i32 } [ %377, %376 ], [ %375, %374 ], [ %115, %114 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  br label %1732

380:                                              ; preds = %138
  %381 = landingpad { ptr, i32 }
          cleanup
  br label %1708

382:                                              ; preds = %168, %144
  %383 = landingpad { ptr, i32 }
          cleanup
  br label %386

384:                                              ; preds = %162
  %385 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %20) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %19)
          to label %386 unwind label %1761

386:                                              ; preds = %382, %157, %384
  %387 = phi { ptr, i32 } [ %385, %384 ], [ %383, %382 ], [ %158, %157 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %19) #19
  br label %1703

388:                                              ; preds = %171
  %389 = landingpad { ptr, i32 }
          cleanup
  br label %1679

390:                                              ; preds = %180
  %391 = landingpad { ptr, i32 }
          cleanup
  br label %1675

392:                                              ; preds = %1567, %216
  %393 = phi i64 [ 0, %216 ], [ %1568, %1567 ]
  %394 = load ptr, ptr %217, align 8, !tbaa !62, !noalias !511
  %395 = getelementptr inbounds %"class.dealii::Triangulation", ptr %394, i64 0, i32 1
  %396 = load i32, ptr %22, align 8, !tbaa !60, !noalias !511
  %397 = sext i32 %396 to i64
  %398 = load ptr, ptr %395, align 8, !tbaa !46, !noalias !511
  %399 = getelementptr inbounds ptr, ptr %398, i64 %397
  %400 = load ptr, ptr %399, align 8, !tbaa !33, !noalias !511
  %401 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %400, i64 0, i32 4
  %402 = load i32, ptr %207, align 4, !tbaa !61, !noalias !511
  %403 = sext i32 %402 to i64
  %404 = load ptr, ptr %401, align 8, !tbaa !50, !noalias !511
  %405 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %404, i64 %403
  %406 = getelementptr inbounds [6 x i32], ptr %405, i64 0, i64 %393
  %407 = load i32, ptr %406, align 4, !tbaa !59, !noalias !511
  %408 = getelementptr inbounds %"class.dealii::Triangulation", ptr %394, i64 0, i32 2
  %409 = load ptr, ptr %408, align 8, !tbaa !514
  %410 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.329", ptr %409, i64 0, i32 5
  %411 = sext i32 %407 to i64
  %412 = load ptr, ptr %410, align 8, !tbaa !526
  %413 = getelementptr inbounds i8, ptr %412, i64 %411
  %414 = load i8, ptr %413, align 1, !tbaa !30
  %415 = load ptr, ptr %218, align 8, !tbaa !528
  %416 = icmp eq ptr %415, null
  br i1 %416, label %1564, label %417

417:                                              ; preds = %392, %417
  %418 = phi ptr [ %427, %417 ], [ %415, %392 ]
  %419 = phi ptr [ %425, %417 ], [ %219, %392 ]
  %420 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %418, i64 0, i32 1
  %421 = load i8, ptr %420, align 1, !tbaa !30
  %422 = icmp ult i8 %421, %414
  %423 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %418, i64 0, i32 3
  %424 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %418, i64 0, i32 2
  %425 = select i1 %422, ptr %419, ptr %418
  %426 = select i1 %422, ptr %423, ptr %424
  %427 = load ptr, ptr %426, align 8, !tbaa !33
  %428 = icmp eq ptr %427, null
  br i1 %428, label %429, label %417

429:                                              ; preds = %417
  %430 = icmp eq ptr %425, %219
  br i1 %430, label %1564, label %431

431:                                              ; preds = %429
  %432 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %425, i64 0, i32 1
  %433 = load i8, ptr %432, align 1, !tbaa !30
  %434 = icmp ult i8 %414, %433
  br i1 %434, label %1564, label %435

435:                                              ; preds = %431
  %436 = load i32, ptr %220, align 4, !tbaa !59
  %437 = load i32, ptr %221, align 8, !tbaa !59
  %438 = mul i32 %437, %436
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %444, label %440

440:                                              ; preds = %435
  %441 = load ptr, ptr %222, align 8, !tbaa !140
  %442 = zext i32 %438 to i64
  %443 = shl nuw nsw i64 %442, 3
  call void @llvm.memset.p0.i64(ptr align 8 %441, i8 0, i64 %443, i1 false), !tbaa !133
  br label %444

444:                                              ; preds = %440, %435
  %445 = load i32, ptr %49, align 8, !tbaa !139
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %451, label %447

447:                                              ; preds = %444
  %448 = load ptr, ptr %223, align 8, !tbaa !136
  %449 = zext i32 %445 to i64
  %450 = shl nuw nsw i64 %449, 3
  call void @llvm.memset.p0.i64(ptr align 8 %448, i8 0, i64 %450, i1 false), !tbaa !133
  br label %451

451:                                              ; preds = %447, %444
  %452 = trunc i64 %393 to i32
  invoke void @_ZN6dealii12FEFaceValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEj(ptr noundef nonnull align 8 dereferenceable(784) %12, ptr noundef nonnull align 8 dereferenceable(24) %22, i32 noundef %452)
          to label %453 unwind label %511

453:                                              ; preds = %451
  %454 = load ptr, ptr %217, align 8, !tbaa !62, !noalias !183
  %455 = getelementptr inbounds %"class.dealii::Triangulation", ptr %454, i64 0, i32 1
  %456 = load i32, ptr %22, align 8, !tbaa !60, !noalias !183
  %457 = sext i32 %456 to i64
  %458 = load ptr, ptr %455, align 8, !tbaa !46, !noalias !183
  %459 = getelementptr inbounds ptr, ptr %458, i64 %457
  %460 = load ptr, ptr %459, align 8, !tbaa !33, !noalias !183
  %461 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %460, i64 0, i32 4
  %462 = load i32, ptr %207, align 4, !tbaa !61, !noalias !183
  %463 = sext i32 %462 to i64
  %464 = load ptr, ptr %461, align 8, !tbaa !50, !noalias !183
  %465 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %464, i64 %463
  %466 = getelementptr inbounds [6 x i32], ptr %465, i64 0, i64 %393
  %467 = load i32, ptr %466, align 4, !tbaa !59, !noalias !183
  %468 = getelementptr inbounds %"class.dealii::Triangulation", ptr %454, i64 0, i32 2
  %469 = load ptr, ptr %468, align 8, !tbaa !514
  %470 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.329", ptr %469, i64 0, i32 5
  %471 = sext i32 %467 to i64
  %472 = load ptr, ptr %470, align 8, !tbaa !526
  %473 = getelementptr inbounds i8, ptr %472, i64 %471
  %474 = load i8, ptr %473, align 1, !tbaa !30
  %475 = load ptr, ptr %218, align 8, !tbaa !528
  %476 = icmp eq ptr %475, null
  br i1 %40, label %1086, label %477

477:                                              ; preds = %453
  br i1 %476, label %497, label %478

478:                                              ; preds = %477, %478
  %479 = phi ptr [ %488, %478 ], [ %475, %477 ]
  %480 = phi ptr [ %486, %478 ], [ %219, %477 ]
  %481 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %479, i64 0, i32 1
  %482 = load i8, ptr %481, align 1, !tbaa !30
  %483 = icmp ult i8 %482, %474
  %484 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %479, i64 0, i32 3
  %485 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %479, i64 0, i32 2
  %486 = select i1 %483, ptr %480, ptr %479
  %487 = select i1 %483, ptr %484, ptr %485
  %488 = load ptr, ptr %487, align 8, !tbaa !33
  %489 = icmp eq ptr %488, null
  br i1 %489, label %490, label %478

490:                                              ; preds = %478
  %491 = icmp eq ptr %486, %219
  br i1 %491, label %497, label %492

492:                                              ; preds = %490
  %493 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %486, i64 0, i32 1
  %494 = load i8, ptr %493, align 1, !tbaa !30
  %495 = icmp ult i8 %474, %494
  %496 = select i1 %495, ptr %219, ptr %486
  br label %497

497:                                              ; preds = %477, %490, %492
  %498 = phi ptr [ %219, %490 ], [ %219, %477 ], [ %496, %492 ]
  %499 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %498, i64 0, i32 1, i32 1
  %500 = load ptr, ptr %499, align 8, !tbaa !506
  %501 = load ptr, ptr %500, align 8, !tbaa !41
  %502 = getelementptr inbounds ptr, ptr %501, i64 7
  %503 = load ptr, ptr %502, align 8
  invoke void %503(ptr noundef nonnull align 8 dereferenceable(92) %500, ptr noundef nonnull align 8 dereferenceable(24) %224, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %504 unwind label %513

504:                                              ; preds = %497
  br i1 %133, label %505, label %515

505:                                              ; preds = %504
  %506 = load ptr, ptr %5, align 8, !tbaa !41
  %507 = getelementptr inbounds ptr, ptr %506, i64 7
  %508 = load ptr, ptr %507, align 8
  invoke void %508(ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(24) %224, ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %509 unwind label %511

509:                                              ; preds = %505
  %510 = load i32, ptr %65, align 4, !tbaa !127
  br label %575

511:                                              ; preds = %1114, %516, %505, %451
  %512 = landingpad { ptr, i32 }
          cleanup
  br label %1659

513:                                              ; preds = %497
  %514 = landingpad { ptr, i32 }
          cleanup
  br label %1659

515:                                              ; preds = %504
  br i1 %127, label %520, label %516

516:                                              ; preds = %515
  %517 = load ptr, ptr %5, align 8, !tbaa !41
  %518 = getelementptr inbounds ptr, ptr %517, i64 6
  %519 = load ptr, ptr %518, align 8
  invoke void %519(ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(24) %224, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %520 unwind label %511

520:                                              ; preds = %516, %515
  %521 = load i32, ptr %65, align 4, !tbaa !127
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %575, label %523

523:                                              ; preds = %520
  %524 = load ptr, ptr %13, align 8, !tbaa !131
  %525 = load ptr, ptr %14, align 8, !tbaa !224
  %526 = zext i32 %521 to i64
  br label %527

527:                                              ; preds = %523, %572
  %528 = phi i64 [ 0, %523 ], [ %573, %572 ]
  %529 = getelementptr inbounds double, ptr %524, i64 %528
  %530 = load double, ptr %529, align 8, !tbaa !133
  %531 = getelementptr inbounds %"class.dealii::Vector", ptr %525, i64 %528, i32 1
  %532 = load i32, ptr %531, align 8, !tbaa !139
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %572, label %534

534:                                              ; preds = %527
  %535 = getelementptr inbounds %"class.dealii::Vector", ptr %525, i64 %528, i32 3
  %536 = load ptr, ptr %535, align 8, !tbaa !136
  %537 = zext i32 %532 to i64
  %538 = getelementptr inbounds double, ptr %536, i64 %537
  %539 = add nuw nsw i64 %537, 2305843009213693951
  %540 = and i64 %539, 2305843009213693951
  %541 = add nuw nsw i64 %540, 1
  %542 = icmp ult i64 %540, 15
  br i1 %542, label %566, label %543

543:                                              ; preds = %534
  %544 = and i64 %541, 4611686018427387888
  %545 = shl i64 %544, 3
  %546 = getelementptr i8, ptr %536, i64 %545
  %547 = insertelement <4 x double> poison, double %530, i64 0
  %548 = shufflevector <4 x double> %547, <4 x double> poison, <4 x i32> zeroinitializer
  %549 = insertelement <4 x double> poison, double %530, i64 0
  %550 = shufflevector <4 x double> %549, <4 x double> poison, <4 x i32> zeroinitializer
  %551 = insertelement <4 x double> poison, double %530, i64 0
  %552 = shufflevector <4 x double> %551, <4 x double> poison, <4 x i32> zeroinitializer
  %553 = insertelement <4 x double> poison, double %530, i64 0
  %554 = shufflevector <4 x double> %553, <4 x double> poison, <4 x i32> zeroinitializer
  br label %555

555:                                              ; preds = %555, %543
  %556 = phi i64 [ 0, %543 ], [ %562, %555 ]
  %557 = shl i64 %556, 3
  %558 = getelementptr i8, ptr %536, i64 %557
  store <4 x double> %548, ptr %558, align 8, !tbaa !133
  %559 = getelementptr double, ptr %558, i64 4
  store <4 x double> %550, ptr %559, align 8, !tbaa !133
  %560 = getelementptr double, ptr %558, i64 8
  store <4 x double> %552, ptr %560, align 8, !tbaa !133
  %561 = getelementptr double, ptr %558, i64 12
  store <4 x double> %554, ptr %561, align 8, !tbaa !133
  %562 = add nuw i64 %556, 16
  %563 = icmp eq i64 %562, %544
  br i1 %563, label %564, label %555, !llvm.loop !529

564:                                              ; preds = %555
  %565 = icmp eq i64 %541, %544
  br i1 %565, label %572, label %566

566:                                              ; preds = %534, %564
  %567 = phi ptr [ %536, %534 ], [ %546, %564 ]
  br label %568

568:                                              ; preds = %566, %568
  %569 = phi ptr [ %570, %568 ], [ %567, %566 ]
  store double %530, ptr %569, align 8, !tbaa !133
  %570 = getelementptr inbounds double, ptr %569, i64 1
  %571 = icmp eq ptr %570, %538
  br i1 %571, label %572, label %568, !llvm.loop !530

572:                                              ; preds = %568, %564, %527
  %573 = add nuw nsw i64 %528, 1
  %574 = icmp eq i64 %573, %526
  br i1 %574, label %575, label %527

575:                                              ; preds = %572, %509, %520
  %576 = phi i32 [ %510, %509 ], [ 0, %520 ], [ %521, %572 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %23) #19
  br i1 %106, label %577, label %578

577:                                              ; preds = %575
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false)
  br label %600

578:                                              ; preds = %575
  %579 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %226) #20
          to label %580 unwind label %631

580:                                              ; preds = %578
  store ptr %579, ptr %23, align 8, !tbaa !131
  %581 = getelementptr inbounds double, ptr %579, i64 %225
  store ptr %581, ptr %227, align 8, !tbaa !132
  br i1 %246, label %594, label %582

582:                                              ; preds = %580
  %583 = getelementptr i8, ptr %579, i64 %248
  br label %584

584:                                              ; preds = %584, %582
  %585 = phi i64 [ 0, %582 ], [ %591, %584 ]
  %586 = shl i64 %585, 3
  %587 = getelementptr i8, ptr %579, i64 %586
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %587, align 8, !tbaa !133
  %588 = getelementptr double, ptr %587, i64 4
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %588, align 8, !tbaa !133
  %589 = getelementptr double, ptr %587, i64 8
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %589, align 8, !tbaa !133
  %590 = getelementptr double, ptr %587, i64 12
  store <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, ptr %590, align 8, !tbaa !133
  %591 = add nuw i64 %585, 16
  %592 = icmp eq i64 %591, %247
  br i1 %592, label %593, label %584, !llvm.loop !531

593:                                              ; preds = %584
  br i1 %249, label %600, label %594

594:                                              ; preds = %580, %593
  %595 = phi ptr [ %579, %580 ], [ %583, %593 ]
  br label %596

596:                                              ; preds = %594, %596
  %597 = phi ptr [ %598, %596 ], [ %595, %594 ]
  store double 1.000000e+00, ptr %597, align 8, !tbaa !133
  %598 = getelementptr inbounds double, ptr %597, i64 1
  %599 = icmp eq ptr %598, %581
  br i1 %599, label %600, label %596, !llvm.loop !532

600:                                              ; preds = %596, %593, %577
  %601 = phi ptr [ null, %577 ], [ %581, %593 ], [ %581, %596 ]
  store ptr %601, ptr %228, align 8, !tbaa !135
  %602 = zext i32 %576 to i64
  %603 = icmp eq i32 %576, 0
  br i1 %603, label %607, label %604

604:                                              ; preds = %600
  %605 = mul nuw nsw i64 %602, 24
  %606 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %605) #20
          to label %607 unwind label %633

607:                                              ; preds = %604, %600
  %608 = phi ptr [ null, %600 ], [ %606, %604 ]
  %609 = invoke noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIdSaIdEEmS2_ET_S4_T0_RKT1_(ptr noundef %608, i64 noundef %602, ptr noundef nonnull align 8 dereferenceable(24) %23)
          to label %614 unwind label %610

610:                                              ; preds = %607
  %611 = landingpad { ptr, i32 }
          cleanup
  %612 = icmp eq ptr %608, null
  br i1 %612, label %635, label %613

613:                                              ; preds = %610
  call void @_ZdlPv(ptr noundef nonnull %608) #21
  br label %635

614:                                              ; preds = %607
  %615 = load ptr, ptr %23, align 8, !tbaa !131
  %616 = icmp eq ptr %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %614
  call void @_ZdlPv(ptr noundef nonnull %615) #21
  br label %618

618:                                              ; preds = %617, %614
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #19
  br i1 %106, label %621, label %619

619:                                              ; preds = %618
  %620 = load ptr, ptr %229, align 8, !tbaa !533
  br label %642

621:                                              ; preds = %707, %618
  %622 = load i32, ptr %65, align 4, !tbaa !127
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %710, label %624

624:                                              ; preds = %621
  %625 = load ptr, ptr %231, align 8, !tbaa !131
  %626 = load i32, ptr %232, align 8, !tbaa !65
  %627 = icmp eq i32 %626, 0
  %628 = zext i32 %622 to i64
  %629 = zext i32 %626 to i64
  %630 = zext i32 %626 to i64
  br label %723

631:                                              ; preds = %578
  %632 = landingpad { ptr, i32 }
          cleanup
  br label %640

633:                                              ; preds = %604
  %634 = landingpad { ptr, i32 }
          cleanup
  br label %635

635:                                              ; preds = %610, %613, %633
  %636 = phi { ptr, i32 } [ %634, %633 ], [ %611, %613 ], [ %611, %610 ]
  %637 = load ptr, ptr %23, align 8, !tbaa !131
  %638 = icmp eq ptr %637, null
  br i1 %638, label %640, label %639

639:                                              ; preds = %635
  call void @_ZdlPv(ptr noundef nonnull %637) #21
  br label %640

640:                                              ; preds = %639, %635, %631
  %641 = phi { ptr, i32 } [ %632, %631 ], [ %636, %635 ], [ %636, %639 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #19
  br label %1659

642:                                              ; preds = %619, %707
  %643 = phi ptr [ %620, %619 ], [ %653, %707 ]
  %644 = phi i64 [ 0, %619 ], [ %708, %707 ]
  %645 = getelementptr inbounds %"struct.std::pair.420", ptr %643, i64 %644
  %646 = load i64, ptr %645, align 4
  %647 = trunc i64 %646 to i32
  %648 = load ptr, ptr %31, align 8, !tbaa !41
  %649 = getelementptr inbounds ptr, ptr %648, i64 19
  %650 = load ptr, ptr %649, align 8
  %651 = invoke noundef nonnull align 8 dereferenceable(728) ptr %650(ptr noundef nonnull align 8 dereferenceable(728) %31, i32 noundef %647)
          to label %652 unwind label %675

652:                                              ; preds = %642
  %653 = load ptr, ptr %229, align 8, !tbaa !533
  %654 = getelementptr inbounds %"struct.std::pair.420", ptr %653, i64 %644
  %655 = load i64, ptr %654, align 4
  %656 = lshr i64 %655, 32
  %657 = getelementptr inbounds i8, ptr %651, i64 128
  %658 = load i32, ptr %657, align 8, !tbaa !534
  %659 = and i32 %658, 6
  %660 = icmp ne i32 %659, 6
  %661 = and i32 %658, 4
  %662 = icmp ne i32 %661, 0
  %663 = and i1 %660, %662
  br i1 %663, label %664, label %707

664:                                              ; preds = %652
  %665 = load i32, ptr %65, align 4, !tbaa !127
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %707, label %667

667:                                              ; preds = %664
  %668 = load ptr, ptr %230, align 8, !tbaa !535
  %669 = getelementptr inbounds [3 x double], ptr %668, i64 0, i64 %656
  %670 = zext i32 %665 to i64
  %671 = and i64 %670, 1
  %672 = icmp eq i32 %665, 1
  br i1 %672, label %697, label %673

673:                                              ; preds = %667
  %674 = and i64 %670, 4294967294
  br label %678

675:                                              ; preds = %642
  %676 = landingpad { ptr, i32 }
          cleanup
  %677 = icmp eq ptr %608, %609
  br i1 %677, label %1083, label %1075

678:                                              ; preds = %678, %673
  %679 = phi i64 [ 0, %673 ], [ %694, %678 ]
  %680 = phi i64 [ 0, %673 ], [ %695, %678 ]
  %681 = getelementptr inbounds %"class.dealii::Point", ptr %669, i64 %679
  %682 = load double, ptr %681, align 8, !tbaa !133
  %683 = fmul double %682, %682
  %684 = getelementptr inbounds %"class.std::vector.92", ptr %608, i64 %679
  %685 = load ptr, ptr %684, align 8, !tbaa !131
  %686 = getelementptr inbounds double, ptr %685, i64 %644
  store double %683, ptr %686, align 8, !tbaa !133
  %687 = or i64 %679, 1
  %688 = getelementptr inbounds %"class.dealii::Point", ptr %669, i64 %687
  %689 = load double, ptr %688, align 8, !tbaa !133
  %690 = fmul double %689, %689
  %691 = getelementptr inbounds %"class.std::vector.92", ptr %608, i64 %687
  %692 = load ptr, ptr %691, align 8, !tbaa !131
  %693 = getelementptr inbounds double, ptr %692, i64 %644
  store double %690, ptr %693, align 8, !tbaa !133
  %694 = add nuw nsw i64 %679, 2
  %695 = add i64 %680, 2
  %696 = icmp eq i64 %695, %674
  br i1 %696, label %697, label %678

697:                                              ; preds = %678, %667
  %698 = phi i64 [ 0, %667 ], [ %694, %678 ]
  %699 = icmp eq i64 %671, 0
  br i1 %699, label %707, label %700

700:                                              ; preds = %697
  %701 = getelementptr inbounds %"class.dealii::Point", ptr %669, i64 %698
  %702 = load double, ptr %701, align 8, !tbaa !133
  %703 = fmul double %702, %702
  %704 = getelementptr inbounds %"class.std::vector.92", ptr %608, i64 %698
  %705 = load ptr, ptr %704, align 8, !tbaa !131
  %706 = getelementptr inbounds double, ptr %705, i64 %644
  store double %703, ptr %706, align 8, !tbaa !133
  br label %707

707:                                              ; preds = %700, %697, %664, %652
  %708 = add nuw nsw i64 %644, 1
  %709 = icmp eq i64 %708, %225
  br i1 %709, label %621, label %642

710:                                              ; preds = %987, %621
  %711 = icmp eq ptr %608, %609
  br i1 %711, label %720, label %712

712:                                              ; preds = %710, %717
  %713 = phi ptr [ %718, %717 ], [ %608, %710 ]
  %714 = load ptr, ptr %713, align 8, !tbaa !131
  %715 = icmp eq ptr %714, null
  br i1 %715, label %717, label %716

716:                                              ; preds = %712
  call void @_ZdlPv(ptr noundef nonnull %714) #21
  br label %717

717:                                              ; preds = %716, %712
  %718 = getelementptr inbounds %"class.std::vector.92", ptr %713, i64 1
  %719 = icmp eq ptr %718, %609
  br i1 %719, label %720, label %712

720:                                              ; preds = %717, %710
  %721 = icmp eq ptr %608, null
  br i1 %721, label %1336, label %722

722:                                              ; preds = %720
  call void @_ZdlPv(ptr noundef nonnull %608) #21
  br label %1336

723:                                              ; preds = %624, %987
  %724 = phi i64 [ 0, %624 ], [ %988, %987 ]
  %725 = getelementptr inbounds double, ptr %625, i64 %724
  %726 = load double, ptr %725, align 8, !tbaa !133
  br i1 %627, label %987, label %727

727:                                              ; preds = %723
  %728 = load ptr, ptr %237, align 8
  %729 = load ptr, ptr %235, align 8
  %730 = load i32, ptr %236, align 8
  %731 = load ptr, ptr %6, align 8
  %732 = load ptr, ptr %223, align 8
  %733 = load ptr, ptr %234, align 8
  %734 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %733, i64 0, i32 2
  %735 = getelementptr inbounds %"class.std::vector.92", ptr %608, i64 %724
  %736 = load ptr, ptr %14, align 8
  %737 = getelementptr inbounds %"class.dealii::Vector", ptr %736, i64 %724, i32 3
  %738 = load ptr, ptr %222, align 8
  %739 = load i32, ptr %221, align 8
  %740 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %733, i64 0, i32 20
  %741 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %733, i64 0, i32 19
  %742 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %733, i64 0, i32 12
  %743 = load ptr, ptr %18, align 8
  %744 = getelementptr inbounds %"class.dealii::Vector", ptr %743, i64 %724, i32 3
  br i1 %43, label %745, label %980

745:                                              ; preds = %727
  br i1 %106, label %987, label %746

746:                                              ; preds = %745
  %747 = load i8, ptr %734, align 4, !tbaa !148, !range !182, !noundef !183
  %748 = icmp eq i8 %747, 0
  %749 = load ptr, ptr %735, align 8, !tbaa !131
  %750 = load ptr, ptr %737, align 8, !tbaa !136
  %751 = load ptr, ptr %744, align 8, !tbaa !136
  %752 = trunc i64 %724 to i32
  %753 = trunc i64 %724 to i32
  %754 = trunc i64 %724 to i32
  br label %755

755:                                              ; preds = %977, %746
  %756 = phi i64 [ %978, %977 ], [ 0, %746 ]
  %757 = trunc i64 %756 to i32
  %758 = mul i32 %739, %757
  %759 = load ptr, ptr %237, align 8
  %760 = getelementptr inbounds i32, ptr %759, i64 %756
  %761 = load ptr, ptr %235, align 8
  %762 = load i32, ptr %236, align 8
  %763 = getelementptr inbounds double, ptr %732, i64 %756
  br label %962

764:                                              ; preds = %946
  br i1 %748, label %765, label %802

765:                                              ; preds = %764
  %766 = load ptr, ptr %740, align 8, !tbaa !144
  %767 = getelementptr inbounds i32, ptr %766, i64 %756
  %768 = load i32, ptr %767, align 4, !tbaa !59
  %769 = icmp eq i32 %768, 1
  br i1 %769, label %802, label %770

770:                                              ; preds = %765
  %771 = load ptr, ptr %741, align 8, !tbaa !205
  %772 = getelementptr inbounds %"class.std::vector.126", ptr %771, i64 %756
  %773 = load ptr, ptr %772, align 8, !tbaa !54
  %774 = getelementptr inbounds i64, ptr %773, i64 %968
  %775 = load i64, ptr %774, align 8, !tbaa !56
  %776 = and i64 %775, %971
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %817, label %778

778:                                              ; preds = %770
  %779 = load i32, ptr %760, align 4, !tbaa !59
  br i1 %973, label %799, label %780

780:                                              ; preds = %778, %780
  %781 = phi i64 [ %788, %780 ], [ 0, %778 ]
  %782 = phi i32 [ %793, %780 ], [ 0, %778 ]
  %783 = phi ptr [ %792, %780 ], [ %773, %778 ]
  %784 = zext i32 %782 to i64
  %785 = load i64, ptr %783, align 8, !tbaa !56
  %786 = lshr i64 %785, %784
  %787 = and i64 %786, 1
  %788 = add nuw nsw i64 %787, %781
  %789 = add i32 %782, 1
  %790 = icmp eq i32 %782, 63
  %791 = zext i1 %790 to i64
  %792 = getelementptr inbounds i64, ptr %783, i64 %791
  %793 = select i1 %790, i32 0, i32 %789
  %794 = icmp ne ptr %792, %774
  %795 = icmp ne i32 %793, %969
  %796 = or i1 %795, %794
  br i1 %796, label %780, label %797

797:                                              ; preds = %780
  %798 = trunc i64 %788 to i32
  br label %799

799:                                              ; preds = %797, %778
  %800 = phi i32 [ 0, %778 ], [ %798, %797 ]
  %801 = add i32 %800, %779
  br label %810

802:                                              ; preds = %764, %765
  %803 = load ptr, ptr %742, align 8, !tbaa !184
  %804 = getelementptr inbounds %"struct.std::pair.263", ptr %803, i64 %756
  %805 = load i64, ptr %804, align 4
  %806 = and i64 %805, 4294967295
  %807 = icmp eq i64 %963, %806
  br i1 %807, label %808, label %817

808:                                              ; preds = %802
  %809 = load i32, ptr %760, align 4, !tbaa !59
  br label %810

810:                                              ; preds = %808, %799
  %811 = phi i32 [ %801, %799 ], [ %809, %808 ]
  %812 = mul i32 %762, %811
  %813 = add i32 %812, %754
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds double, ptr %761, i64 %814
  %816 = load double, ptr %815, align 8, !tbaa !133
  br label %817

817:                                              ; preds = %810, %802, %770
  %818 = phi double [ 0.000000e+00, %802 ], [ 0.000000e+00, %770 ], [ %816, %810 ]
  %819 = getelementptr inbounds i32, ptr %731, i64 %963
  %820 = load i32, ptr %819, align 4, !tbaa !59
  %821 = zext i32 %820 to i64
  %822 = getelementptr inbounds double, ptr %751, i64 %821
  %823 = load double, ptr %822, align 8, !tbaa !133
  %824 = fmul double %818, %823
  %825 = load double, ptr %964, align 8, !tbaa !133
  %826 = fmul double %824, %825
  %827 = load double, ptr %763, align 8, !tbaa !133
  %828 = call double @llvm.fmuladd.f64(double %826, double %726, double %827)
  store double %828, ptr %763, align 8, !tbaa !133
  %829 = add nuw nsw i64 %963, 1
  %830 = icmp eq i64 %829, %225
  br i1 %830, label %977, label %962

831:                                              ; preds = %962, %946
  %832 = phi i64 [ 0, %962 ], [ %960, %946 ]
  br i1 %748, label %833, label %871

833:                                              ; preds = %831
  %834 = load ptr, ptr %740, align 8, !tbaa !144
  %835 = getelementptr inbounds i32, ptr %834, i64 %832
  %836 = load i32, ptr %835, align 4, !tbaa !59
  %837 = icmp eq i32 %836, 1
  br i1 %837, label %871, label %838

838:                                              ; preds = %833
  %839 = load ptr, ptr %741, align 8, !tbaa !205
  %840 = getelementptr inbounds %"class.std::vector.126", ptr %839, i64 %832
  %841 = load ptr, ptr %840, align 8, !tbaa !54
  %842 = getelementptr inbounds i64, ptr %841, i64 %968
  %843 = load i64, ptr %842, align 8, !tbaa !56
  %844 = and i64 %843, %971
  %845 = icmp eq i64 %844, 0
  br i1 %845, label %891, label %846

846:                                              ; preds = %838
  %847 = getelementptr inbounds i32, ptr %972, i64 %832
  %848 = load i32, ptr %847, align 4, !tbaa !59
  br i1 %973, label %868, label %849

849:                                              ; preds = %846, %849
  %850 = phi i64 [ %857, %849 ], [ 0, %846 ]
  %851 = phi i32 [ %862, %849 ], [ 0, %846 ]
  %852 = phi ptr [ %861, %849 ], [ %841, %846 ]
  %853 = zext i32 %851 to i64
  %854 = load i64, ptr %852, align 8, !tbaa !56
  %855 = lshr i64 %854, %853
  %856 = and i64 %855, 1
  %857 = add nuw nsw i64 %856, %850
  %858 = add i32 %851, 1
  %859 = icmp eq i32 %851, 63
  %860 = zext i1 %859 to i64
  %861 = getelementptr inbounds i64, ptr %852, i64 %860
  %862 = select i1 %859, i32 0, i32 %858
  %863 = icmp ne ptr %861, %842
  %864 = icmp ne i32 %862, %969
  %865 = or i1 %864, %863
  br i1 %865, label %849, label %866

866:                                              ; preds = %849
  %867 = trunc i64 %857 to i32
  br label %868

868:                                              ; preds = %866, %846
  %869 = phi i32 [ 0, %846 ], [ %867, %866 ]
  %870 = add i32 %869, %848
  br label %880

871:                                              ; preds = %831, %833
  %872 = load ptr, ptr %742, align 8, !tbaa !184
  %873 = getelementptr inbounds %"struct.std::pair.263", ptr %872, i64 %832
  %874 = load i64, ptr %873, align 4
  %875 = and i64 %874, 4294967295
  %876 = icmp eq i64 %963, %875
  br i1 %876, label %877, label %887

877:                                              ; preds = %871
  %878 = getelementptr inbounds i32, ptr %972, i64 %832
  %879 = load i32, ptr %878, align 4, !tbaa !59
  br label %880

880:                                              ; preds = %877, %868
  %881 = phi i32 [ %870, %868 ], [ %879, %877 ]
  %882 = mul i32 %975, %881
  %883 = add i32 %882, %752
  %884 = zext i32 %883 to i64
  %885 = getelementptr inbounds double, ptr %974, i64 %884
  %886 = load double, ptr %885, align 8, !tbaa !133
  br label %887

887:                                              ; preds = %880, %871
  %888 = phi double [ 0.000000e+00, %871 ], [ %886, %880 ]
  br i1 %748, label %889, label %929

889:                                              ; preds = %887
  %890 = load ptr, ptr %740, align 8, !tbaa !144
  br label %891

891:                                              ; preds = %889, %838
  %892 = phi ptr [ %890, %889 ], [ %834, %838 ]
  %893 = phi double [ %888, %889 ], [ 0.000000e+00, %838 ]
  %894 = getelementptr inbounds i32, ptr %892, i64 %756
  %895 = load i32, ptr %894, align 4, !tbaa !59
  %896 = icmp eq i32 %895, 1
  br i1 %896, label %929, label %897

897:                                              ; preds = %891
  %898 = load ptr, ptr %741, align 8, !tbaa !205
  %899 = getelementptr inbounds %"class.std::vector.126", ptr %898, i64 %756
  %900 = load ptr, ptr %899, align 8, !tbaa !54
  %901 = getelementptr inbounds i64, ptr %900, i64 %968
  %902 = load i64, ptr %901, align 8, !tbaa !56
  %903 = and i64 %902, %971
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %946, label %905

905:                                              ; preds = %897
  %906 = load i32, ptr %976, align 4, !tbaa !59
  br i1 %973, label %926, label %907

907:                                              ; preds = %905, %907
  %908 = phi i64 [ %915, %907 ], [ 0, %905 ]
  %909 = phi i32 [ %920, %907 ], [ 0, %905 ]
  %910 = phi ptr [ %919, %907 ], [ %900, %905 ]
  %911 = zext i32 %909 to i64
  %912 = load i64, ptr %910, align 8, !tbaa !56
  %913 = lshr i64 %912, %911
  %914 = and i64 %913, 1
  %915 = add nuw nsw i64 %914, %908
  %916 = add i32 %909, 1
  %917 = icmp eq i32 %909, 63
  %918 = zext i1 %917 to i64
  %919 = getelementptr inbounds i64, ptr %910, i64 %918
  %920 = select i1 %917, i32 0, i32 %916
  %921 = icmp ne ptr %919, %901
  %922 = icmp ne i32 %920, %969
  %923 = or i1 %922, %921
  br i1 %923, label %907, label %924

924:                                              ; preds = %907
  %925 = trunc i64 %915 to i32
  br label %926

926:                                              ; preds = %924, %905
  %927 = phi i32 [ 0, %905 ], [ %925, %924 ]
  %928 = add i32 %927, %906
  br label %938

929:                                              ; preds = %887, %891
  %930 = phi double [ %893, %891 ], [ %888, %887 ]
  %931 = load ptr, ptr %742, align 8, !tbaa !184
  %932 = getelementptr inbounds %"struct.std::pair.263", ptr %931, i64 %756
  %933 = load i64, ptr %932, align 4
  %934 = and i64 %933, 4294967295
  %935 = icmp eq i64 %963, %934
  br i1 %935, label %936, label %946

936:                                              ; preds = %929
  %937 = load i32, ptr %976, align 4, !tbaa !59
  br label %938

938:                                              ; preds = %936, %926
  %939 = phi double [ %893, %926 ], [ %930, %936 ]
  %940 = phi i32 [ %928, %926 ], [ %937, %936 ]
  %941 = mul i32 %975, %940
  %942 = add i32 %941, %753
  %943 = zext i32 %942 to i64
  %944 = getelementptr inbounds double, ptr %974, i64 %943
  %945 = load double, ptr %944, align 8, !tbaa !133
  br label %946

946:                                              ; preds = %938, %929, %897
  %947 = phi double [ %930, %929 ], [ %893, %897 ], [ %939, %938 ]
  %948 = phi double [ 0.000000e+00, %929 ], [ 0.000000e+00, %897 ], [ %945, %938 ]
  %949 = fmul double %947, %948
  %950 = load double, ptr %964, align 8, !tbaa !133
  %951 = fmul double %949, %950
  %952 = fmul double %726, %951
  %953 = load double, ptr %965, align 8, !tbaa !133
  %954 = trunc i64 %832 to i32
  %955 = add i32 %758, %954
  %956 = zext i32 %955 to i64
  %957 = getelementptr inbounds double, ptr %738, i64 %956
  %958 = load double, ptr %957, align 8, !tbaa !133
  %959 = call double @llvm.fmuladd.f64(double %952, double %953, double %958)
  store double %959, ptr %957, align 8, !tbaa !133
  %960 = add nuw nsw i64 %832, 1
  %961 = icmp eq i64 %960, %630
  br i1 %961, label %764, label %831

962:                                              ; preds = %755, %817
  %963 = phi i64 [ 0, %755 ], [ %829, %817 ]
  %964 = getelementptr inbounds double, ptr %749, i64 %963
  %965 = getelementptr inbounds double, ptr %750, i64 %963
  %966 = trunc i64 %963 to i32
  %967 = lshr i64 %963, 6
  %968 = and i64 %967, 67108863
  %969 = and i32 %966, 63
  %970 = and i64 %963, 63
  %971 = shl nuw i64 1, %970
  %972 = load ptr, ptr %237, align 8
  %973 = icmp eq i64 %963, 0
  %974 = load ptr, ptr %235, align 8
  %975 = load i32, ptr %236, align 8
  %976 = getelementptr inbounds i32, ptr %972, i64 %756
  br label %831

977:                                              ; preds = %817
  %978 = add nuw nsw i64 %756, 1
  %979 = icmp eq i64 %978, %630
  br i1 %979, label %987, label %755

980:                                              ; preds = %727
  %981 = load ptr, ptr %233, align 8, !tbaa !184
  %982 = load i8, ptr %734, align 4, !tbaa !148, !range !182, !noundef !183
  %983 = icmp eq i8 %982, 0
  %984 = load ptr, ptr %744, align 8, !tbaa !136
  %985 = trunc i64 %724 to i32
  %986 = trunc i64 %724 to i32
  br label %990

987:                                              ; preds = %1055, %977, %745, %723
  %988 = add nuw nsw i64 %724, 1
  %989 = icmp eq i64 %988, %628
  br i1 %989, label %710, label %723

990:                                              ; preds = %980, %1055
  %991 = phi i64 [ 0, %980 ], [ %1073, %1055 ]
  %992 = getelementptr inbounds %"struct.std::pair.263", ptr %981, i64 %991
  %993 = load ptr, ptr %234, align 8
  %994 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %993, i64 0, i32 2
  %995 = load ptr, ptr %235, align 8
  %996 = load i32, ptr %236, align 8
  %997 = load ptr, ptr %237, align 8
  %998 = getelementptr inbounds i32, ptr %997, i64 %991
  %999 = load ptr, ptr %14, align 8
  %1000 = getelementptr inbounds %"class.dealii::Vector", ptr %999, i64 %724, i32 3
  %1001 = load ptr, ptr %222, align 8
  %1002 = load i32, ptr %221, align 8
  %1003 = trunc i64 %991 to i32
  %1004 = mul i32 %1002, %1003
  br label %1009

1005:                                             ; preds = %1052
  br i1 %983, label %1006, label %1055

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds i32, ptr %728, i64 %991
  %1008 = load i32, ptr %1007, align 4, !tbaa !59
  br label %1055

1009:                                             ; preds = %990, %1052
  %1010 = phi i64 [ 0, %990 ], [ %1053, %1052 ]
  %1011 = getelementptr inbounds %"struct.std::pair.263", ptr %981, i64 %1010
  %1012 = load i64, ptr %1011, align 4
  %1013 = load i64, ptr %992, align 4
  %1014 = trunc i64 %1012 to i32
  %1015 = trunc i64 %1013 to i32
  %1016 = icmp eq i32 %1014, %1015
  br i1 %1016, label %1017, label %1052

1017:                                             ; preds = %1009
  %1018 = load i8, ptr %994, align 4, !tbaa !148, !range !182, !noundef !183
  %1019 = icmp eq i8 %1018, 0
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1017
  %1021 = trunc i64 %1010 to i32
  br label %1027

1022:                                             ; preds = %1017
  %1023 = getelementptr inbounds i32, ptr %997, i64 %1010
  %1024 = load i32, ptr %1023, align 4, !tbaa !59
  %1025 = load i32, ptr %998, align 4, !tbaa !59
  %1026 = trunc i64 %1010 to i32
  br label %1027

1027:                                             ; preds = %1020, %1022
  %1028 = phi i32 [ %1021, %1020 ], [ %1026, %1022 ]
  %1029 = phi i32 [ %1021, %1020 ], [ %1024, %1022 ]
  %1030 = phi i32 [ %1003, %1020 ], [ %1025, %1022 ]
  %1031 = mul i32 %996, %1029
  %1032 = add i32 %1031, %985
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds double, ptr %995, i64 %1033
  %1035 = load double, ptr %1034, align 8, !tbaa !133
  %1036 = mul i32 %1030, %996
  %1037 = add i32 %1036, %985
  %1038 = zext i32 %1037 to i64
  %1039 = getelementptr inbounds double, ptr %995, i64 %1038
  %1040 = load double, ptr %1039, align 8, !tbaa !133
  %1041 = fmul double %726, %1035
  %1042 = fmul double %1041, %1040
  %1043 = load ptr, ptr %1000, align 8, !tbaa !136
  %1044 = and i64 %1013, 4294967295
  %1045 = getelementptr inbounds double, ptr %1043, i64 %1044
  %1046 = load double, ptr %1045, align 8, !tbaa !133
  %1047 = add i32 %1004, %1028
  %1048 = zext i32 %1047 to i64
  %1049 = getelementptr inbounds double, ptr %1001, i64 %1048
  %1050 = load double, ptr %1049, align 8, !tbaa !133
  %1051 = call double @llvm.fmuladd.f64(double %1042, double %1046, double %1050)
  store double %1051, ptr %1049, align 8, !tbaa !133
  br label %1052

1052:                                             ; preds = %1009, %1027
  %1053 = add nuw nsw i64 %1010, 1
  %1054 = icmp eq i64 %1053, %629
  br i1 %1054, label %1005, label %1009

1055:                                             ; preds = %1005, %1006
  %1056 = phi i32 [ %1008, %1006 ], [ %1003, %1005 ]
  %1057 = mul i32 %730, %1056
  %1058 = add i32 %1057, %986
  %1059 = zext i32 %1058 to i64
  %1060 = getelementptr inbounds double, ptr %729, i64 %1059
  %1061 = load double, ptr %1060, align 8, !tbaa !133
  %1062 = load i64, ptr %992, align 4
  %1063 = and i64 %1062, 4294967295
  %1064 = getelementptr inbounds i32, ptr %731, i64 %1063
  %1065 = load i32, ptr %1064, align 4, !tbaa !59
  %1066 = zext i32 %1065 to i64
  %1067 = getelementptr inbounds double, ptr %984, i64 %1066
  %1068 = load double, ptr %1067, align 8, !tbaa !133
  %1069 = fmul double %1061, %1068
  %1070 = getelementptr inbounds double, ptr %732, i64 %991
  %1071 = load double, ptr %1070, align 8, !tbaa !133
  %1072 = call double @llvm.fmuladd.f64(double %1069, double %726, double %1071)
  store double %1072, ptr %1070, align 8, !tbaa !133
  %1073 = add nuw nsw i64 %991, 1
  %1074 = icmp eq i64 %1073, %629
  br i1 %1074, label %987, label %990

1075:                                             ; preds = %675, %1080
  %1076 = phi ptr [ %1081, %1080 ], [ %608, %675 ]
  %1077 = load ptr, ptr %1076, align 8, !tbaa !131
  %1078 = icmp eq ptr %1077, null
  br i1 %1078, label %1080, label %1079

1079:                                             ; preds = %1075
  call void @_ZdlPv(ptr noundef nonnull %1077) #21
  br label %1080

1080:                                             ; preds = %1079, %1075
  %1081 = getelementptr inbounds %"class.std::vector.92", ptr %1076, i64 1
  %1082 = icmp eq ptr %1081, %609
  br i1 %1082, label %1083, label %1075

1083:                                             ; preds = %1080, %675
  %1084 = icmp eq ptr %608, null
  br i1 %1084, label %1659, label %1085

1085:                                             ; preds = %1083
  call void @_ZdlPv(ptr noundef nonnull %608) #21
  br label %1659

1086:                                             ; preds = %453
  br i1 %476, label %1106, label %1087

1087:                                             ; preds = %1086, %1087
  %1088 = phi ptr [ %1097, %1087 ], [ %475, %1086 ]
  %1089 = phi ptr [ %1095, %1087 ], [ %219, %1086 ]
  %1090 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1088, i64 0, i32 1
  %1091 = load i8, ptr %1090, align 1, !tbaa !30
  %1092 = icmp ult i8 %1091, %474
  %1093 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1088, i64 0, i32 3
  %1094 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1088, i64 0, i32 2
  %1095 = select i1 %1092, ptr %1089, ptr %1088
  %1096 = select i1 %1092, ptr %1093, ptr %1094
  %1097 = load ptr, ptr %1096, align 8, !tbaa !33
  %1098 = icmp eq ptr %1097, null
  br i1 %1098, label %1099, label %1087

1099:                                             ; preds = %1087
  %1100 = icmp eq ptr %1095, %219
  br i1 %1100, label %1106, label %1101

1101:                                             ; preds = %1099
  %1102 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1095, i64 0, i32 1
  %1103 = load i8, ptr %1102, align 1, !tbaa !30
  %1104 = icmp ult i8 %474, %1103
  %1105 = select i1 %1104, ptr %219, ptr %1095
  br label %1106

1106:                                             ; preds = %1086, %1099, %1101
  %1107 = phi ptr [ %219, %1099 ], [ %219, %1086 ], [ %1105, %1101 ]
  %1108 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1107, i64 0, i32 1, i32 1
  %1109 = load ptr, ptr %1108, align 8, !tbaa !506
  %1110 = load ptr, ptr %1109, align 8, !tbaa !41
  %1111 = getelementptr inbounds ptr, ptr %1110, i64 6
  %1112 = load ptr, ptr %1111, align 8
  invoke void %1112(ptr noundef nonnull align 8 dereferenceable(92) %1109, ptr noundef nonnull align 8 dereferenceable(24) %224, ptr noundef nonnull align 8 dereferenceable(24) %17, i32 noundef 0)
          to label %1113 unwind label %1118

1113:                                             ; preds = %1106
  br i1 %127, label %1120, label %1114

1114:                                             ; preds = %1113
  %1115 = load ptr, ptr %5, align 8, !tbaa !41
  %1116 = getelementptr inbounds ptr, ptr %1115, i64 6
  %1117 = load ptr, ptr %1116, align 8
  invoke void %1117(ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(24) %224, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %1120 unwind label %511

1118:                                             ; preds = %1106
  %1119 = landingpad { ptr, i32 }
          cleanup
  br label %1659

1120:                                             ; preds = %1114, %1113
  %1121 = load i32, ptr %65, align 4, !tbaa !127
  %1122 = icmp eq i32 %1121, 0
  br i1 %1122, label %1336, label %1123

1123:                                             ; preds = %1120
  %1124 = load ptr, ptr %231, align 8, !tbaa !131
  %1125 = load i32, ptr %232, align 8, !tbaa !65
  %1126 = icmp eq i32 %1125, 0
  %1127 = load ptr, ptr %234, align 8
  %1128 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1127, i64 0, i32 2
  %1129 = load ptr, ptr %235, align 8
  %1130 = load i32, ptr %236, align 8
  %1131 = load ptr, ptr %13, align 8
  %1132 = load ptr, ptr %222, align 8
  %1133 = load i32, ptr %221, align 8
  %1134 = load ptr, ptr %17, align 8
  %1135 = load ptr, ptr %223, align 8
  %1136 = zext i32 %1121 to i64
  %1137 = zext i32 %1125 to i64
  %1138 = zext i32 %1125 to i64
  %1139 = add nsw i64 %1137, -1
  %1140 = shl nuw nsw i64 %1137, 3
  %1141 = getelementptr i8, ptr %1132, i64 %1140
  %1142 = icmp ult i32 %1125, 12
  %1143 = icmp ne i32 %1130, 1
  %1144 = trunc i64 %1139 to i32
  %1145 = icmp ugt i64 %1139, 4294967295
  %1146 = trunc i64 %1139 to i32
  %1147 = and i64 %1137, 4294967292
  %1148 = icmp eq i64 %1147, %1137
  %1149 = and i64 %1137, 1
  %1150 = icmp eq i64 %1149, 0
  %1151 = sub nsw i64 0, %1137
  br label %1152

1152:                                             ; preds = %1123, %1216
  %1153 = phi i64 [ 0, %1123 ], [ %1217, %1216 ]
  %1154 = shl nuw nsw i64 %1153, 3
  %1155 = getelementptr i8, ptr %1131, i64 %1154
  %1156 = add nuw i64 %1154, 8
  %1157 = getelementptr i8, ptr %1131, i64 %1156
  %1158 = getelementptr i8, ptr %1129, i64 %1154
  %1159 = add nuw i64 %1140, %1154
  %1160 = getelementptr i8, ptr %1129, i64 %1159
  %1161 = trunc i64 %1153 to i32
  %1162 = getelementptr inbounds double, ptr %1124, i64 %1153
  %1163 = load double, ptr %1162, align 8, !tbaa !133
  br i1 %1126, label %1216, label %1164

1164:                                             ; preds = %1152
  %1165 = load i8, ptr %1128, align 4, !tbaa !148, !range !182, !noundef !183
  %1166 = icmp eq i8 %1165, 0
  %1167 = load ptr, ptr %237, align 8
  %1168 = getelementptr inbounds double, ptr %1131, i64 %1153
  %1169 = getelementptr inbounds double, ptr %1134, i64 %1153
  %1170 = trunc i64 %1153 to i32
  br i1 %1166, label %1176, label %1171

1171:                                             ; preds = %1164
  %1172 = xor i32 %1161, -1
  %1173 = icmp ult i32 %1172, %1146
  %1174 = insertelement <4 x double> poison, double %1163, i64 0
  %1175 = shufflevector <4 x double> %1174, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1219

1176:                                             ; preds = %1164, %1208
  %1177 = phi i64 [ %1214, %1208 ], [ 0, %1164 ]
  %1178 = getelementptr inbounds i32, ptr %1167, i64 %1177
  %1179 = load i32, ptr %1178, align 4, !tbaa !59
  %1180 = mul i32 %1130, %1179
  %1181 = add i32 %1180, %1170
  %1182 = zext i32 %1181 to i64
  %1183 = getelementptr inbounds double, ptr %1129, i64 %1182
  %1184 = load double, ptr %1183, align 8, !tbaa !133
  %1185 = trunc i64 %1177 to i32
  %1186 = mul i32 %1133, %1185
  %1187 = load ptr, ptr %237, align 8
  br label %1188

1188:                                             ; preds = %1188, %1176
  %1189 = phi i64 [ %1206, %1188 ], [ 0, %1176 ]
  %1190 = getelementptr inbounds i32, ptr %1187, i64 %1189
  %1191 = load i32, ptr %1190, align 4, !tbaa !59
  %1192 = mul i32 %1191, %1130
  %1193 = add i32 %1192, %1170
  %1194 = zext i32 %1193 to i64
  %1195 = getelementptr inbounds double, ptr %1129, i64 %1194
  %1196 = load double, ptr %1195, align 8, !tbaa !133
  %1197 = fmul double %1184, %1196
  %1198 = fmul double %1163, %1197
  %1199 = load double, ptr %1168, align 8, !tbaa !133
  %1200 = trunc i64 %1189 to i32
  %1201 = add i32 %1186, %1200
  %1202 = zext i32 %1201 to i64
  %1203 = getelementptr inbounds double, ptr %1132, i64 %1202
  %1204 = load double, ptr %1203, align 8, !tbaa !133
  %1205 = call double @llvm.fmuladd.f64(double %1198, double %1199, double %1204)
  store double %1205, ptr %1203, align 8, !tbaa !133
  %1206 = add nuw nsw i64 %1189, 1
  %1207 = icmp eq i64 %1206, %1138
  br i1 %1207, label %1208, label %1188

1208:                                             ; preds = %1188
  %1209 = load double, ptr %1169, align 8, !tbaa !133
  %1210 = fmul double %1184, %1209
  %1211 = getelementptr inbounds double, ptr %1135, i64 %1177
  %1212 = load double, ptr %1211, align 8, !tbaa !133
  %1213 = call double @llvm.fmuladd.f64(double %1210, double %1163, double %1212)
  store double %1213, ptr %1211, align 8, !tbaa !133
  %1214 = add nuw nsw i64 %1177, 1
  %1215 = icmp eq i64 %1214, %1138
  br i1 %1215, label %1216, label %1176

1216:                                             ; preds = %1295, %1208, %1152
  %1217 = add nuw nsw i64 %1153, 1
  %1218 = icmp eq i64 %1217, %1136
  br i1 %1218, label %1336, label %1152

1219:                                             ; preds = %1171, %1295
  %1220 = phi i64 [ %1301, %1295 ], [ 0, %1171 ]
  %1221 = trunc i64 %1220 to i32
  %1222 = mul i32 %1133, %1221
  %1223 = zext i32 %1222 to i64
  %1224 = shl nuw nsw i64 %1223, 3
  %1225 = getelementptr i8, ptr %1132, i64 %1224
  %1226 = getelementptr i8, ptr %1141, i64 %1224
  %1227 = trunc i64 %1220 to i32
  %1228 = mul i32 %1130, %1227
  %1229 = add i32 %1228, %1170
  %1230 = zext i32 %1229 to i64
  %1231 = getelementptr inbounds double, ptr %1129, i64 %1230
  %1232 = load double, ptr %1231, align 8, !tbaa !133
  %1233 = mul i32 %1133, %1227
  br i1 %1142, label %1273, label %1234

1234:                                             ; preds = %1219
  %1235 = trunc i64 %1220 to i32
  %1236 = mul i32 %1133, %1235
  %1237 = xor i32 %1236, -1
  %1238 = icmp ult i32 %1237, %1144
  %1239 = or i1 %1238, %1145
  %1240 = or i1 %1143, %1239
  %1241 = or i1 %1173, %1240
  br i1 %1241, label %1273, label %1242

1242:                                             ; preds = %1234
  %1243 = icmp ult ptr %1155, %1226
  %1244 = icmp ult ptr %1225, %1157
  %1245 = and i1 %1243, %1244
  %1246 = icmp ult ptr %1225, %1160
  %1247 = icmp ult ptr %1158, %1226
  %1248 = and i1 %1246, %1247
  %1249 = or i1 %1245, %1248
  br i1 %1249, label %1273, label %1250

1250:                                             ; preds = %1242
  %1251 = insertelement <4 x double> poison, double %1232, i64 0
  %1252 = shufflevector <4 x double> %1251, <4 x double> poison, <4 x i32> zeroinitializer
  %1253 = load double, ptr %1168, align 8, !tbaa !133, !alias.scope !536, !noalias !539
  %1254 = insertelement <4 x double> poison, double %1253, i64 0
  %1255 = shufflevector <4 x double> %1254, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1256

1256:                                             ; preds = %1256, %1250
  %1257 = phi i64 [ 0, %1250 ], [ %1270, %1256 ]
  %1258 = trunc i64 %1257 to i32
  %1259 = add i64 %1257, %1153
  %1260 = and i64 %1259, 4294967295
  %1261 = getelementptr inbounds double, ptr %1129, i64 %1260
  %1262 = load <4 x double>, ptr %1261, align 8, !tbaa !133, !alias.scope !541
  %1263 = fmul <4 x double> %1252, %1262
  %1264 = fmul <4 x double> %1175, %1263
  %1265 = add i32 %1233, %1258
  %1266 = zext i32 %1265 to i64
  %1267 = getelementptr inbounds double, ptr %1132, i64 %1266
  %1268 = load <4 x double>, ptr %1267, align 8, !tbaa !133, !alias.scope !539, !noalias !541
  %1269 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1264, <4 x double> %1255, <4 x double> %1268)
  store <4 x double> %1269, ptr %1267, align 8, !tbaa !133, !alias.scope !539, !noalias !541
  %1270 = add nuw i64 %1257, 4
  %1271 = icmp eq i64 %1270, %1147
  br i1 %1271, label %1272, label %1256, !llvm.loop !543

1272:                                             ; preds = %1256
  br i1 %1148, label %1295, label %1273

1273:                                             ; preds = %1242, %1234, %1219, %1272
  %1274 = phi i64 [ 0, %1242 ], [ 0, %1234 ], [ 0, %1219 ], [ %1147, %1272 ]
  %1275 = xor i64 %1274, -1
  br i1 %1150, label %1292, label %1276

1276:                                             ; preds = %1273
  %1277 = trunc i64 %1274 to i32
  %1278 = mul i32 %1130, %1277
  %1279 = add i32 %1278, %1170
  %1280 = zext i32 %1279 to i64
  %1281 = getelementptr inbounds double, ptr %1129, i64 %1280
  %1282 = load double, ptr %1281, align 8, !tbaa !133
  %1283 = fmul double %1232, %1282
  %1284 = fmul double %1163, %1283
  %1285 = load double, ptr %1168, align 8, !tbaa !133
  %1286 = add i32 %1233, %1277
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds double, ptr %1132, i64 %1287
  %1289 = load double, ptr %1288, align 8, !tbaa !133
  %1290 = call double @llvm.fmuladd.f64(double %1284, double %1285, double %1289)
  store double %1290, ptr %1288, align 8, !tbaa !133
  %1291 = or i64 %1274, 1
  br label %1292

1292:                                             ; preds = %1276, %1273
  %1293 = phi i64 [ %1274, %1273 ], [ %1291, %1276 ]
  %1294 = icmp eq i64 %1275, %1151
  br i1 %1294, label %1295, label %1303

1295:                                             ; preds = %1292, %1303, %1272
  %1296 = load double, ptr %1169, align 8, !tbaa !133
  %1297 = fmul double %1232, %1296
  %1298 = getelementptr inbounds double, ptr %1135, i64 %1220
  %1299 = load double, ptr %1298, align 8, !tbaa !133
  %1300 = call double @llvm.fmuladd.f64(double %1297, double %1163, double %1299)
  store double %1300, ptr %1298, align 8, !tbaa !133
  %1301 = add nuw nsw i64 %1220, 1
  %1302 = icmp eq i64 %1301, %1137
  br i1 %1302, label %1216, label %1219

1303:                                             ; preds = %1292, %1303
  %1304 = phi i64 [ %1334, %1303 ], [ %1293, %1292 ]
  %1305 = trunc i64 %1304 to i32
  %1306 = mul i32 %1130, %1305
  %1307 = add i32 %1306, %1170
  %1308 = zext i32 %1307 to i64
  %1309 = getelementptr inbounds double, ptr %1129, i64 %1308
  %1310 = load double, ptr %1309, align 8, !tbaa !133
  %1311 = fmul double %1232, %1310
  %1312 = fmul double %1163, %1311
  %1313 = load double, ptr %1168, align 8, !tbaa !133
  %1314 = add i32 %1233, %1305
  %1315 = zext i32 %1314 to i64
  %1316 = getelementptr inbounds double, ptr %1132, i64 %1315
  %1317 = load double, ptr %1316, align 8, !tbaa !133
  %1318 = call double @llvm.fmuladd.f64(double %1312, double %1313, double %1317)
  store double %1318, ptr %1316, align 8, !tbaa !133
  %1319 = trunc i64 %1304 to i32
  %1320 = add i32 %1319, 1
  %1321 = mul i32 %1130, %1320
  %1322 = add i32 %1321, %1170
  %1323 = zext i32 %1322 to i64
  %1324 = getelementptr inbounds double, ptr %1129, i64 %1323
  %1325 = load double, ptr %1324, align 8, !tbaa !133
  %1326 = fmul double %1232, %1325
  %1327 = fmul double %1163, %1326
  %1328 = load double, ptr %1168, align 8, !tbaa !133
  %1329 = add i32 %1233, %1320
  %1330 = zext i32 %1329 to i64
  %1331 = getelementptr inbounds double, ptr %1132, i64 %1330
  %1332 = load double, ptr %1331, align 8, !tbaa !133
  %1333 = call double @llvm.fmuladd.f64(double %1327, double %1328, double %1332)
  store double %1333, ptr %1331, align 8, !tbaa !133
  %1334 = add nuw nsw i64 %1304, 2
  %1335 = icmp eq i64 %1334, %1137
  br i1 %1335, label %1295, label %1303, !llvm.loop !544

1336:                                             ; preds = %1216, %1120, %722, %720
  %1337 = load ptr, ptr %205, align 8, !tbaa !17
  %1338 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1337, i64 0, i32 2
  %1339 = load ptr, ptr %1338, align 8, !tbaa !63
  %1340 = getelementptr inbounds i8, ptr %1339, i64 112
  %1341 = load i32, ptr %1340, align 8, !tbaa !141
  %1342 = icmp eq i32 %1341, 0
  %1343 = load i32, ptr %22, align 8, !tbaa !60
  %1344 = load i32, ptr %207, align 4, !tbaa !61
  br i1 %1342, label %1345, label %1347

1345:                                             ; preds = %1336
  %1346 = sext i32 %1343 to i64
  br label %1367

1347:                                             ; preds = %1336
  %1348 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1337, i64 0, i32 3
  %1349 = load ptr, ptr %1348, align 8, !tbaa !142
  %1350 = sext i32 %1343 to i64
  %1351 = getelementptr inbounds ptr, ptr %1349, i64 %1350
  %1352 = load ptr, ptr %1351, align 8, !tbaa !33
  %1353 = load ptr, ptr %1352, align 8, !tbaa !144
  %1354 = mul i32 %1344, %1341
  %1355 = zext i32 %1354 to i64
  %1356 = getelementptr inbounds i32, ptr %1353, i64 %1355
  br label %1357

1357:                                             ; preds = %1357, %1347
  %1358 = phi i64 [ 0, %1347 ], [ %1362, %1357 ]
  %1359 = phi ptr [ %1356, %1347 ], [ %1363, %1357 ]
  %1360 = load i32, ptr %1359, align 4, !tbaa !59
  %1361 = getelementptr inbounds i32, ptr %176, i64 %1358
  store i32 %1360, ptr %1361, align 4, !tbaa !59
  %1362 = add nuw nsw i64 %1358, 1
  %1363 = getelementptr inbounds i32, ptr %1359, i64 1
  %1364 = load i32, ptr %1340, align 8, !tbaa !141
  %1365 = zext i32 %1364 to i64
  %1366 = icmp ult i64 %1362, %1365
  br i1 %1366, label %1357, label %1367

1367:                                             ; preds = %1357, %1345
  %1368 = phi i64 [ %1346, %1345 ], [ %1350, %1357 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %24) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !545)
  %1369 = load ptr, ptr %217, align 8, !tbaa !62, !noalias !545
  %1370 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1369, i64 0, i32 1
  %1371 = load ptr, ptr %1370, align 8, !tbaa !46, !noalias !545
  %1372 = getelementptr inbounds ptr, ptr %1371, i64 %1368
  %1373 = load ptr, ptr %1372, align 8, !tbaa !33, !noalias !545
  %1374 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1373, i64 0, i32 4
  %1375 = sext i32 %1344 to i64
  %1376 = load ptr, ptr %1374, align 8, !tbaa !50, !noalias !545
  %1377 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %1376, i64 %1375
  %1378 = getelementptr inbounds [6 x i32], ptr %1377, i64 0, i64 %393
  %1379 = load i32, ptr %1378, align 4, !tbaa !59, !noalias !545
  store i32 %1379, ptr %24, align 8, !tbaa !548, !alias.scope !545
  store ptr %1369, ptr %238, align 8, !tbaa !550, !alias.scope !545
  store ptr %1337, ptr %239, align 8, !tbaa !551, !alias.scope !545
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi2ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %24, ptr noundef nonnull align 8 dereferenceable(24) %21, i32 noundef 0)
          to label %1380 unwind label %1390

1380:                                             ; preds = %1367
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %24) #19
  br i1 %50, label %1564, label %1381

1381:                                             ; preds = %1380
  %1382 = load ptr, ptr %21, align 8, !tbaa !33
  %1383 = load ptr, ptr %188, align 8, !tbaa !33
  %1384 = ptrtoint ptr %1383 to i64
  %1385 = ptrtoint ptr %1382 to i64
  %1386 = sub i64 %1384, %1385
  %1387 = icmp sgt i64 %1386, 15
  %1388 = lshr i64 %1386, 4
  br label %1392

1389:                                             ; preds = %1475
  br i1 %50, label %1564, label %1480

1390:                                             ; preds = %1367
  %1391 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %24) #19
  br label %1659

1392:                                             ; preds = %1381, %1475
  %1393 = phi i64 [ 0, %1381 ], [ %1478, %1475 ]
  %1394 = getelementptr inbounds i32, ptr %176, i64 %1393
  br i1 %1387, label %1395, label %1421

1395:                                             ; preds = %1392
  %1396 = load i32, ptr %1394, align 4, !tbaa !59
  br label %1397

1397:                                             ; preds = %1414, %1395
  %1398 = phi i64 [ %1388, %1395 ], [ %1416, %1414 ]
  %1399 = phi ptr [ %1382, %1395 ], [ %1415, %1414 ]
  %1400 = load i32, ptr %1399, align 4, !tbaa !59
  %1401 = icmp eq i32 %1400, %1396
  br i1 %1401, label %1459, label %1402

1402:                                             ; preds = %1397
  %1403 = getelementptr inbounds i32, ptr %1399, i64 1
  %1404 = load i32, ptr %1403, align 4, !tbaa !59
  %1405 = icmp eq i32 %1404, %1396
  br i1 %1405, label %1457, label %1406

1406:                                             ; preds = %1402
  %1407 = getelementptr inbounds i32, ptr %1399, i64 2
  %1408 = load i32, ptr %1407, align 4, !tbaa !59
  %1409 = icmp eq i32 %1408, %1396
  br i1 %1409, label %1455, label %1410

1410:                                             ; preds = %1406
  %1411 = getelementptr inbounds i32, ptr %1399, i64 3
  %1412 = load i32, ptr %1411, align 4, !tbaa !59
  %1413 = icmp eq i32 %1412, %1396
  br i1 %1413, label %1453, label %1414

1414:                                             ; preds = %1410
  %1415 = getelementptr inbounds i32, ptr %1399, i64 4
  %1416 = add nsw i64 %1398, -1
  %1417 = icmp sgt i64 %1398, 1
  br i1 %1417, label %1397, label %1418

1418:                                             ; preds = %1414
  %1419 = ptrtoint ptr %1415 to i64
  %1420 = sub i64 %1384, %1419
  br label %1421

1421:                                             ; preds = %1418, %1392
  %1422 = phi i64 [ %1420, %1418 ], [ %1386, %1392 ]
  %1423 = phi ptr [ %1415, %1418 ], [ %1382, %1392 ]
  %1424 = ashr exact i64 %1422, 2
  switch i64 %1424, label %1425 [
    i64 3, label %1434
    i64 2, label %1432
    i64 1, label %1430
  ]

1425:                                             ; preds = %1421
  %1426 = lshr i64 %1393, 6
  %1427 = getelementptr inbounds i64, ptr %201, i64 %1426
  %1428 = and i64 %1393, 63
  %1429 = shl nuw i64 1, %1428
  br label %1469

1430:                                             ; preds = %1421
  %1431 = load i32, ptr %1394, align 4, !tbaa !59
  br label %1447

1432:                                             ; preds = %1421
  %1433 = load i32, ptr %1394, align 4, !tbaa !59
  br label %1440

1434:                                             ; preds = %1421
  %1435 = load i32, ptr %1423, align 4, !tbaa !59
  %1436 = load i32, ptr %1394, align 4, !tbaa !59
  %1437 = icmp eq i32 %1435, %1436
  br i1 %1437, label %1459, label %1438

1438:                                             ; preds = %1434
  %1439 = getelementptr inbounds i32, ptr %1423, i64 1
  br label %1440

1440:                                             ; preds = %1438, %1432
  %1441 = phi i32 [ %1433, %1432 ], [ %1436, %1438 ]
  %1442 = phi ptr [ %1423, %1432 ], [ %1439, %1438 ]
  %1443 = load i32, ptr %1442, align 4, !tbaa !59
  %1444 = icmp eq i32 %1443, %1441
  br i1 %1444, label %1459, label %1445

1445:                                             ; preds = %1440
  %1446 = getelementptr inbounds i32, ptr %1442, i64 1
  br label %1447

1447:                                             ; preds = %1445, %1430
  %1448 = phi i32 [ %1431, %1430 ], [ %1441, %1445 ]
  %1449 = phi ptr [ %1423, %1430 ], [ %1446, %1445 ]
  %1450 = load i32, ptr %1449, align 4, !tbaa !59
  %1451 = icmp eq i32 %1450, %1448
  %1452 = select i1 %1451, ptr %1449, ptr %1383
  br label %1459

1453:                                             ; preds = %1410
  %1454 = getelementptr inbounds i32, ptr %1399, i64 3
  br label %1459

1455:                                             ; preds = %1406
  %1456 = getelementptr inbounds i32, ptr %1399, i64 2
  br label %1459

1457:                                             ; preds = %1402
  %1458 = getelementptr inbounds i32, ptr %1399, i64 1
  br label %1459

1459:                                             ; preds = %1397, %1453, %1455, %1457, %1447, %1440, %1434
  %1460 = phi ptr [ %1423, %1434 ], [ %1442, %1440 ], [ %1452, %1447 ], [ %1454, %1453 ], [ %1456, %1455 ], [ %1458, %1457 ], [ %1399, %1397 ]
  %1461 = icmp eq ptr %1460, %1383
  %1462 = lshr i64 %1393, 6
  %1463 = getelementptr inbounds i64, ptr %201, i64 %1462
  %1464 = and i64 %1393, 63
  %1465 = shl nuw i64 1, %1464
  br i1 %1461, label %1469, label %1466

1466:                                             ; preds = %1459
  %1467 = load i64, ptr %1463, align 8, !tbaa !56
  %1468 = or i64 %1467, %1465
  br label %1475

1469:                                             ; preds = %1425, %1459
  %1470 = phi i64 [ %1429, %1425 ], [ %1465, %1459 ]
  %1471 = phi ptr [ %1427, %1425 ], [ %1463, %1459 ]
  %1472 = xor i64 %1470, -1
  %1473 = load i64, ptr %1471, align 8, !tbaa !56
  %1474 = and i64 %1473, %1472
  br label %1475

1475:                                             ; preds = %1466, %1469
  %1476 = phi ptr [ %1471, %1469 ], [ %1463, %1466 ]
  %1477 = phi i64 [ %1474, %1469 ], [ %1468, %1466 ]
  store i64 %1477, ptr %1476, align 8, !tbaa !56
  %1478 = add nuw nsw i64 %1393, 1
  %1479 = icmp eq i64 %1478, %170
  br i1 %1479, label %1389, label %1392

1480:                                             ; preds = %1389, %1561
  %1481 = phi i64 [ %1562, %1561 ], [ 0, %1389 ]
  %1482 = trunc i64 %1481 to i32
  %1483 = lshr i64 %1481, 6
  %1484 = and i64 %1483, 67108863
  %1485 = getelementptr inbounds i64, ptr %201, i64 %1484
  %1486 = and i64 %1481, 63
  %1487 = shl nuw i64 1, %1486
  %1488 = load i64, ptr %1485, align 8, !tbaa !56
  %1489 = and i64 %1488, %1487
  %1490 = icmp eq i64 %1489, 0
  br i1 %1490, label %1561, label %1491

1491:                                             ; preds = %1480
  %1492 = getelementptr inbounds i32, ptr %176, i64 %1481
  %1493 = load i32, ptr %1492, align 4, !tbaa !59
  %1494 = zext i32 %1493 to i64
  %1495 = load ptr, ptr %4, align 8, !tbaa !144
  %1496 = getelementptr inbounds i32, ptr %1495, i64 %1494
  %1497 = load i32, ptr %1496, align 4, !tbaa !59
  %1498 = icmp eq i32 %1497, -1
  br i1 %1498, label %1561, label %1513

1499:                                             ; preds = %1558
  %1500 = load ptr, ptr %223, align 8, !tbaa !136
  %1501 = getelementptr inbounds double, ptr %1500, i64 %1481
  %1502 = load double, ptr %1501, align 8, !tbaa !133
  %1503 = load i32, ptr %1492, align 4, !tbaa !59
  %1504 = zext i32 %1503 to i64
  %1505 = load ptr, ptr %4, align 8, !tbaa !144
  %1506 = getelementptr inbounds i32, ptr %1505, i64 %1504
  %1507 = load i32, ptr %1506, align 4, !tbaa !59
  %1508 = load ptr, ptr %242, align 8, !tbaa !136
  %1509 = zext i32 %1507 to i64
  %1510 = getelementptr inbounds double, ptr %1508, i64 %1509
  %1511 = load double, ptr %1510, align 8, !tbaa !133
  %1512 = fadd double %1502, %1511
  store double %1512, ptr %1510, align 8, !tbaa !133
  br label %1561

1513:                                             ; preds = %1491, %1558
  %1514 = phi i64 [ %1559, %1558 ], [ 0, %1491 ]
  %1515 = trunc i64 %1514 to i32
  %1516 = lshr i64 %1514, 6
  %1517 = and i64 %1516, 67108863
  %1518 = getelementptr inbounds i64, ptr %201, i64 %1517
  %1519 = and i64 %1514, 63
  %1520 = shl nuw i64 1, %1519
  %1521 = load i64, ptr %1518, align 8, !tbaa !56
  %1522 = and i64 %1521, %1520
  %1523 = icmp eq i64 %1522, 0
  br i1 %1523, label %1558, label %1524

1524:                                             ; preds = %1513
  %1525 = getelementptr inbounds i32, ptr %176, i64 %1514
  %1526 = load i32, ptr %1525, align 4, !tbaa !59
  %1527 = zext i32 %1526 to i64
  %1528 = load ptr, ptr %4, align 8, !tbaa !144
  %1529 = getelementptr inbounds i32, ptr %1528, i64 %1527
  %1530 = load i32, ptr %1529, align 4, !tbaa !59
  %1531 = icmp eq i32 %1530, -1
  br i1 %1531, label %1558, label %1532

1532:                                             ; preds = %1524
  %1533 = load ptr, ptr %222, align 8, !tbaa !140
  %1534 = load i32, ptr %221, align 8, !tbaa !59
  %1535 = mul i32 %1534, %1482
  %1536 = add i32 %1535, %1515
  %1537 = zext i32 %1536 to i64
  %1538 = getelementptr inbounds double, ptr %1533, i64 %1537
  %1539 = load double, ptr %1538, align 8, !tbaa !133
  %1540 = fcmp oeq double %1539, 0.000000e+00
  br i1 %1540, label %1558, label %1541

1541:                                             ; preds = %1532
  %1542 = load i32, ptr %1492, align 4, !tbaa !59
  %1543 = zext i32 %1542 to i64
  %1544 = getelementptr inbounds i32, ptr %1528, i64 %1543
  %1545 = load i32, ptr %1544, align 4, !tbaa !59
  %1546 = load ptr, ptr %240, align 8, !tbaa !383
  %1547 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %1546, i32 noundef %1545, i32 noundef %1530)
          to label %1548 unwind label %1556

1548:                                             ; preds = %1541
  %1549 = icmp eq i32 %1547, -1
  br i1 %1549, label %1558, label %1550

1550:                                             ; preds = %1548
  %1551 = load ptr, ptr %241, align 8, !tbaa !385
  %1552 = zext i32 %1547 to i64
  %1553 = getelementptr inbounds double, ptr %1551, i64 %1552
  %1554 = load double, ptr %1553, align 8, !tbaa !133
  %1555 = fadd double %1539, %1554
  store double %1555, ptr %1553, align 8, !tbaa !133
  br label %1558

1556:                                             ; preds = %1541
  %1557 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #19
  br label %1662

1558:                                             ; preds = %1513, %1550, %1548, %1532, %1524
  %1559 = add nuw nsw i64 %1514, 1
  %1560 = icmp eq i64 %1559, %170
  br i1 %1560, label %1499, label %1513

1561:                                             ; preds = %1480, %1491, %1499
  %1562 = add nuw nsw i64 %1481, 1
  %1563 = icmp eq i64 %1562, %170
  br i1 %1563, label %1564, label %1480

1564:                                             ; preds = %1561, %1380, %1389, %392, %429, %431
  %1565 = add nuw nsw i64 %393, 1
  %1566 = icmp eq i64 %1565, 6
  br i1 %1566, label %250, label %1567

1567:                                             ; preds = %1564, %362
  %1568 = phi i64 [ %1565, %1564 ], [ 0, %362 ]
  br label %392

1569:                                             ; preds = %362, %200
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #19
  %1570 = icmp eq ptr %201, null
  br i1 %1570, label %1578, label %1571

1571:                                             ; preds = %1569
  %1572 = ptrtoint ptr %202 to i64
  %1573 = ptrtoint ptr %201 to i64
  %1574 = sub i64 %1572, %1573
  %1575 = ashr exact i64 %1574, 3
  %1576 = sub nsw i64 0, %1575
  %1577 = getelementptr inbounds i64, ptr %202, i64 %1576
  call void @_ZdlPv(ptr noundef %1577) #21
  br label %1578

1578:                                             ; preds = %1571, %1569
  %1579 = load ptr, ptr %21, align 8, !tbaa !144
  %1580 = icmp eq ptr %1579, null
  br i1 %1580, label %1582, label %1581

1581:                                             ; preds = %1578
  call void @_ZdlPv(ptr noundef nonnull %1579) #21
  br label %1582

1582:                                             ; preds = %1581, %1578
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %1583 = icmp eq ptr %176, null
  br i1 %1583, label %1585, label %1584

1584:                                             ; preds = %1582
  call void @_ZdlPv(ptr noundef nonnull %176) #21
  br label %1585

1585:                                             ; preds = %1584, %1582
  %1586 = load ptr, ptr %18, align 8, !tbaa !224
  %1587 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1588 = load ptr, ptr %1587, align 8, !tbaa !226
  %1589 = icmp eq ptr %1586, %1588
  br i1 %1589, label %1599, label %1590

1590:                                             ; preds = %1585, %1594
  %1591 = phi ptr [ %1595, %1594 ], [ %1586, %1585 ]
  %1592 = load ptr, ptr %1591, align 8, !tbaa !41
  %1593 = load ptr, ptr %1592, align 8
  invoke void %1593(ptr noundef nonnull align 8 dereferenceable(88) %1591)
          to label %1594 unwind label %1603

1594:                                             ; preds = %1590
  %1595 = getelementptr inbounds %"class.dealii::Vector", ptr %1591, i64 1
  %1596 = icmp eq ptr %1595, %1588
  br i1 %1596, label %1597, label %1590

1597:                                             ; preds = %1594
  %1598 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1599

1599:                                             ; preds = %1597, %1585
  %1600 = phi ptr [ %1598, %1597 ], [ %1586, %1585 ]
  %1601 = icmp eq ptr %1600, null
  br i1 %1601, label %1608, label %1602

1602:                                             ; preds = %1599
  call void @_ZdlPv(ptr noundef nonnull %1600) #21
  br label %1608

1603:                                             ; preds = %1590
  %1604 = landingpad { ptr, i32 }
          cleanup
  %1605 = load ptr, ptr %18, align 8, !tbaa !224
  %1606 = icmp eq ptr %1605, null
  br i1 %1606, label %1703, label %1607

1607:                                             ; preds = %1603
  call void @_ZdlPv(ptr noundef nonnull %1605) #21
  br label %1703

1608:                                             ; preds = %1602, %1599
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1609 = load ptr, ptr %17, align 8, !tbaa !131
  %1610 = icmp eq ptr %1609, null
  br i1 %1610, label %1612, label %1611

1611:                                             ; preds = %1608
  call void @_ZdlPv(ptr noundef nonnull %1609) #21
  br label %1612

1612:                                             ; preds = %1611, %1608
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1613 = load ptr, ptr %14, align 8, !tbaa !224
  %1614 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %1615 = load ptr, ptr %1614, align 8, !tbaa !226
  %1616 = icmp eq ptr %1613, %1615
  br i1 %1616, label %1626, label %1617

1617:                                             ; preds = %1612, %1621
  %1618 = phi ptr [ %1622, %1621 ], [ %1613, %1612 ]
  %1619 = load ptr, ptr %1618, align 8, !tbaa !41
  %1620 = load ptr, ptr %1619, align 8
  invoke void %1620(ptr noundef nonnull align 8 dereferenceable(88) %1618)
          to label %1621 unwind label %1630

1621:                                             ; preds = %1617
  %1622 = getelementptr inbounds %"class.dealii::Vector", ptr %1618, i64 1
  %1623 = icmp eq ptr %1622, %1615
  br i1 %1623, label %1624, label %1617

1624:                                             ; preds = %1621
  %1625 = load ptr, ptr %14, align 8, !tbaa !224
  br label %1626

1626:                                             ; preds = %1624, %1612
  %1627 = phi ptr [ %1625, %1624 ], [ %1613, %1612 ]
  %1628 = icmp eq ptr %1627, null
  br i1 %1628, label %1635, label %1629

1629:                                             ; preds = %1626
  call void @_ZdlPv(ptr noundef nonnull %1627) #21
  br label %1635

1630:                                             ; preds = %1617
  %1631 = landingpad { ptr, i32 }
          cleanup
  %1632 = load ptr, ptr %14, align 8, !tbaa !224
  %1633 = icmp eq ptr %1632, null
  br i1 %1633, label %1732, label %1634

1634:                                             ; preds = %1630
  call void @_ZdlPv(ptr noundef nonnull %1632) #21
  br label %1732

1635:                                             ; preds = %1629, %1626
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1636 = load ptr, ptr %13, align 8, !tbaa !131
  %1637 = icmp eq ptr %1636, null
  br i1 %1637, label %1639, label %1638

1638:                                             ; preds = %1635
  call void @_ZdlPv(ptr noundef nonnull %1636) #21
  br label %1639

1639:                                             ; preds = %1638, %1635
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii16FEFaceValuesBaseILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1640 = getelementptr inbounds %"class.dealii::FEFaceValuesBase", ptr %12, i64 0, i32 2
  invoke void @_ZN6dealii10QuadratureILi2EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1640)
          to label %1641 unwind label %1642

1641:                                             ; preds = %1639
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %12)
          to label %1647 unwind label %370

1642:                                             ; preds = %1639
  %1643 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %12)
          to label %1746 unwind label %1644

1644:                                             ; preds = %1642
  %1645 = landingpad { ptr, i32 }
          catch ptr null
  %1646 = extractvalue { ptr, i32 } %1645, 0
  call void @__clang_call_terminate(ptr %1646) #22
  unreachable

1647:                                             ; preds = %1641
  call void @llvm.lifetime.end.p0(i64 784, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1648 = getelementptr inbounds %"class.dealii::Vector", ptr %11, i64 0, i32 3
  %1649 = load ptr, ptr %1648, align 8, !tbaa !136
  %1650 = icmp eq ptr %1649, null
  br i1 %1650, label %1652, label %1651

1651:                                             ; preds = %1647
  call void @_ZdaPv(ptr noundef nonnull %1649) #21
  store ptr null, ptr %1648, align 8, !tbaa !136
  br label %1652

1652:                                             ; preds = %1651, %1647
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1653 unwind label %368

1653:                                             ; preds = %1652
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1654 = getelementptr inbounds %"class.dealii::TableBase", ptr %10, i64 0, i32 1
  %1655 = load ptr, ptr %1654, align 8, !tbaa !140
  %1656 = icmp eq ptr %1655, null
  br i1 %1656, label %1658, label %1657

1657:                                             ; preds = %1653
  call void @_ZdaPv(ptr noundef nonnull %1655) #21
  br label %1658

1658:                                             ; preds = %1653, %1657
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10) #19
  ret void

1659:                                             ; preds = %640, %1083, %1085, %511, %513, %1118, %1390
  %1660 = phi { ptr, i32 } [ %1391, %1390 ], [ %512, %511 ], [ %514, %513 ], [ %1119, %1118 ], [ %641, %640 ], [ %676, %1083 ], [ %676, %1085 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #19
  %1661 = icmp eq ptr %201, null
  br i1 %1661, label %1670, label %1662

1662:                                             ; preds = %1556, %1659
  %1663 = phi { ptr, i32 } [ %1557, %1556 ], [ %1660, %1659 ]
  %1664 = ptrtoint ptr %202 to i64
  %1665 = ptrtoint ptr %201 to i64
  %1666 = sub i64 %1664, %1665
  %1667 = ashr exact i64 %1666, 3
  %1668 = sub nsw i64 0, %1667
  %1669 = getelementptr inbounds i64, ptr %202, i64 %1668
  call void @_ZdlPv(ptr noundef %1669) #21
  br label %1670

1670:                                             ; preds = %1662, %1659, %198
  %1671 = phi { ptr, i32 } [ %199, %198 ], [ %1660, %1659 ], [ %1663, %1662 ]
  %1672 = load ptr, ptr %21, align 8, !tbaa !144
  %1673 = icmp eq ptr %1672, null
  br i1 %1673, label %1675, label %1674

1674:                                             ; preds = %1670
  call void @_ZdlPv(ptr noundef nonnull %1672) #21
  br label %1675

1675:                                             ; preds = %1674, %1670, %390
  %1676 = phi { ptr, i32 } [ %391, %390 ], [ %1671, %1670 ], [ %1671, %1674 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %1677 = icmp eq ptr %176, null
  br i1 %1677, label %1679, label %1678

1678:                                             ; preds = %1675
  call void @_ZdlPv(ptr noundef nonnull %176) #21
  br label %1679

1679:                                             ; preds = %1678, %1675, %388
  %1680 = phi { ptr, i32 } [ %389, %388 ], [ %1676, %1675 ], [ %1676, %1678 ]
  %1681 = load ptr, ptr %18, align 8, !tbaa !224
  %1682 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1683 = load ptr, ptr %1682, align 8, !tbaa !226
  %1684 = icmp eq ptr %1681, %1683
  br i1 %1684, label %1694, label %1685

1685:                                             ; preds = %1679, %1689
  %1686 = phi ptr [ %1690, %1689 ], [ %1681, %1679 ]
  %1687 = load ptr, ptr %1686, align 8, !tbaa !41
  %1688 = load ptr, ptr %1687, align 8
  invoke void %1688(ptr noundef nonnull align 8 dereferenceable(88) %1686)
          to label %1689 unwind label %1698

1689:                                             ; preds = %1685
  %1690 = getelementptr inbounds %"class.dealii::Vector", ptr %1686, i64 1
  %1691 = icmp eq ptr %1690, %1683
  br i1 %1691, label %1692, label %1685

1692:                                             ; preds = %1689
  %1693 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1694

1694:                                             ; preds = %1692, %1679
  %1695 = phi ptr [ %1693, %1692 ], [ %1681, %1679 ]
  %1696 = icmp eq ptr %1695, null
  br i1 %1696, label %1703, label %1697

1697:                                             ; preds = %1694
  call void @_ZdlPv(ptr noundef nonnull %1695) #21
  br label %1703

1698:                                             ; preds = %1685
  %1699 = landingpad { ptr, i32 }
          catch ptr null
  %1700 = load ptr, ptr %18, align 8, !tbaa !224
  %1701 = icmp eq ptr %1700, null
  br i1 %1701, label %1763, label %1702

1702:                                             ; preds = %1698
  call void @_ZdlPv(ptr noundef nonnull %1700) #21
  br label %1763

1703:                                             ; preds = %1607, %1603, %1697, %1694, %386
  %1704 = phi { ptr, i32 } [ %387, %386 ], [ %1680, %1694 ], [ %1680, %1697 ], [ %1604, %1607 ], [ %1604, %1603 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1705 = load ptr, ptr %17, align 8, !tbaa !131
  %1706 = icmp eq ptr %1705, null
  br i1 %1706, label %1708, label %1707

1707:                                             ; preds = %1703
  call void @_ZdlPv(ptr noundef nonnull %1705) #21
  br label %1708

1708:                                             ; preds = %1707, %1703, %380
  %1709 = phi { ptr, i32 } [ %381, %380 ], [ %1704, %1703 ], [ %1704, %1707 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1710 = load ptr, ptr %14, align 8, !tbaa !224
  %1711 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %1712 = load ptr, ptr %1711, align 8, !tbaa !226
  %1713 = icmp eq ptr %1710, %1712
  br i1 %1713, label %1723, label %1714

1714:                                             ; preds = %1708, %1718
  %1715 = phi ptr [ %1719, %1718 ], [ %1710, %1708 ]
  %1716 = load ptr, ptr %1715, align 8, !tbaa !41
  %1717 = load ptr, ptr %1716, align 8
  invoke void %1717(ptr noundef nonnull align 8 dereferenceable(88) %1715)
          to label %1718 unwind label %1727

1718:                                             ; preds = %1714
  %1719 = getelementptr inbounds %"class.dealii::Vector", ptr %1715, i64 1
  %1720 = icmp eq ptr %1719, %1712
  br i1 %1720, label %1721, label %1714

1721:                                             ; preds = %1718
  %1722 = load ptr, ptr %14, align 8, !tbaa !224
  br label %1723

1723:                                             ; preds = %1721, %1708
  %1724 = phi ptr [ %1722, %1721 ], [ %1710, %1708 ]
  %1725 = icmp eq ptr %1724, null
  br i1 %1725, label %1732, label %1726

1726:                                             ; preds = %1723
  call void @_ZdlPv(ptr noundef nonnull %1724) #21
  br label %1732

1727:                                             ; preds = %1714
  %1728 = landingpad { ptr, i32 }
          catch ptr null
  %1729 = load ptr, ptr %14, align 8, !tbaa !224
  %1730 = icmp eq ptr %1729, null
  br i1 %1730, label %1763, label %1731

1731:                                             ; preds = %1727
  call void @_ZdlPv(ptr noundef nonnull %1729) #21
  br label %1763

1732:                                             ; preds = %1634, %1630, %1726, %1723, %378
  %1733 = phi { ptr, i32 } [ %379, %378 ], [ %1709, %1723 ], [ %1709, %1726 ], [ %1631, %1634 ], [ %1631, %1630 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1734 = load ptr, ptr %13, align 8, !tbaa !131
  %1735 = icmp eq ptr %1734, null
  br i1 %1735, label %1737, label %1736

1736:                                             ; preds = %1732
  call void @_ZdlPv(ptr noundef nonnull %1734) #21
  br label %1737

1737:                                             ; preds = %1736, %1732, %372
  %1738 = phi { ptr, i32 } [ %373, %372 ], [ %1733, %1732 ], [ %1733, %1736 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii16FEFaceValuesBaseILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1739 = getelementptr inbounds %"class.dealii::FEFaceValuesBase", ptr %12, i64 0, i32 2
  invoke void @_ZN6dealii10QuadratureILi2EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1739)
          to label %1740 unwind label %1741

1740:                                             ; preds = %1737
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %12)
          to label %1746 unwind label %1761

1741:                                             ; preds = %1737
  %1742 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %12)
          to label %1763 unwind label %1743

1743:                                             ; preds = %1741
  %1744 = landingpad { ptr, i32 }
          catch ptr null
  %1745 = extractvalue { ptr, i32 } %1744, 0
  call void @__clang_call_terminate(ptr %1745) #22
  unreachable

1746:                                             ; preds = %1740, %1642, %370
  %1747 = phi { ptr, i32 } [ %371, %370 ], [ %1643, %1642 ], [ %1738, %1740 ]
  call void @llvm.lifetime.end.p0(i64 784, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1748 = getelementptr inbounds %"class.dealii::Vector", ptr %11, i64 0, i32 3
  %1749 = load ptr, ptr %1748, align 8, !tbaa !136
  %1750 = icmp eq ptr %1749, null
  br i1 %1750, label %1752, label %1751

1751:                                             ; preds = %1746
  call void @_ZdaPv(ptr noundef nonnull %1749) #21
  store ptr null, ptr %1748, align 8, !tbaa !136
  br label %1752

1752:                                             ; preds = %1751, %1746
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1753 unwind label %1761

1753:                                             ; preds = %1752, %368, %58
  %1754 = phi { ptr, i32 } [ %369, %368 ], [ %59, %58 ], [ %1747, %1752 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1755 = getelementptr inbounds %"class.dealii::TableBase", ptr %10, i64 0, i32 1
  %1756 = load ptr, ptr %1755, align 8, !tbaa !140
  %1757 = icmp eq ptr %1756, null
  br i1 %1757, label %1759, label %1758

1758:                                             ; preds = %1753
  call void @_ZdaPv(ptr noundef nonnull %1756) #21
  br label %1759

1759:                                             ; preds = %1758, %1753
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %10)
          to label %1760 unwind label %1761

1760:                                             ; preds = %1759
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10) #19
  resume { ptr, i32 } %1754

1761:                                             ; preds = %1759, %1752, %1740, %384, %376
  %1762 = landingpad { ptr, i32 }
          catch ptr null
  br label %1763

1763:                                             ; preds = %1731, %1727, %1741, %1761, %1698, %1702
  %1764 = phi { ptr, i32 } [ %1699, %1702 ], [ %1699, %1698 ], [ %1728, %1731 ], [ %1728, %1727 ], [ %1762, %1761 ], [ %1742, %1741 ]
  %1765 = extractvalue { ptr, i32 } %1764, 0
  call void @__clang_call_terminate(ptr %1765) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleINS5_IRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi2EEENS4_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexESI_EELi9EEclESJ_SM_S10_S13_S17_SR_S19_S1C_S1E_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef byval(%"class.boost::tuples::tuple") align 8 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %10) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.139", align 8
  %13 = alloca %"class.dealii::TriaAccessorBase", align 8
  %14 = alloca %"class.dealii::TriaAccessorBase", align 8
  %15 = alloca %"class.boost::function.266", align 8
  %16 = alloca %"class.boost::_bi::bind_t.429", align 8
  %17 = alloca %"class.boost::function.139", align 8
  %18 = alloca %"class.dealii::TriaAccessorBase", align 8
  %19 = alloca %"class.dealii::TriaAccessorBase", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  store ptr null, ptr %17, align 8, !tbaa !25
  %20 = load ptr, ptr %1, align 8, !tbaa !25
  %21 = icmp eq ptr %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %11
  store ptr %20, ptr %17, align 8, !tbaa !25
  %23 = load ptr, ptr %20, align 8, !tbaa !227
  %24 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %25 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  call void %23(ptr noundef nonnull align 8 dereferenceable(24) %24, ptr noundef nonnull align 8 dereferenceable(24) %25, i32 noundef 0)
  %26 = load ptr, ptr %17, align 8, !tbaa !25, !noalias !554
  br label %27

27:                                               ; preds = %22, %11
  %28 = phi ptr [ %26, %22 ], [ null, %11 ]
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !17, !noalias !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !17, !noalias !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %31, i64 16, i1 false)
  %34 = ptrtoint ptr %10 to i64
  call void @llvm.experimental.noalias.scope.decl(metadata !554)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12)
  store ptr null, ptr %12, align 8, !tbaa !25, !noalias !554
  %35 = icmp eq ptr %28, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %27
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %31, i64 16, i1 false)
  store ptr null, ptr %16, align 8, !tbaa !25, !alias.scope !554
  br label %49

37:                                               ; preds = %27
  store ptr %28, ptr %12, align 8, !tbaa !25, !noalias !554
  %38 = load ptr, ptr %28, align 8, !tbaa !227, !noalias !554
  %39 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  %40 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %38(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %40, i32 noundef 0)
          to label %41 unwind label %109

41:                                               ; preds = %37
  %42 = load ptr, ptr %12, align 8, !tbaa !25, !noalias !554
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false), !noalias !554
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false), !noalias !554
  store ptr null, ptr %16, align 8, !tbaa !25, !alias.scope !554
  %43 = icmp eq ptr %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  store ptr %42, ptr %16, align 8, !tbaa !25, !alias.scope !554
  %45 = load ptr, ptr %42, align 8, !tbaa !227, !noalias !554
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %16, i64 0, i32 1
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(24) %40, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 0)
          to label %47 unwind label %69

47:                                               ; preds = %44
  %48 = load ptr, ptr %12, align 8, !tbaa !25, !noalias !554
  br label %49

49:                                               ; preds = %36, %47, %41
  %50 = phi ptr [ %48, %47 ], [ null, %41 ], [ null, %36 ]
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %52, align 8, !alias.scope !554
  %53 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %53, align 8, !alias.scope !554
  %54 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %54, align 8, !alias.scope !554
  %55 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %6, ptr %55, align 8, !alias.scope !554
  %56 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %7, ptr %56, align 8, !alias.scope !554
  %57 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %8, ptr %57, align 8, !alias.scope !554
  %58 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %58, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false)
  %59 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %59, align 8, !tbaa !17, !alias.scope !554
  %60 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %60, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %61 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %33, ptr %61, align 8, !tbaa !17, !alias.scope !554
  %62 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %16, i64 0, i32 1, i32 0, i32 1
  store i64 %34, ptr %62, align 8, !tbaa !33, !alias.scope !554
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %63 = icmp eq ptr %50, null
  br i1 %63, label %80, label %64

64:                                               ; preds = %49
  %65 = load ptr, ptr %50, align 8, !tbaa !497
  %66 = icmp eq ptr %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %65(ptr noundef nonnull align 8 dereferenceable(24) %68, ptr noundef nonnull align 8 dereferenceable(24) %68, i32 noundef 2)
          to label %80 unwind label %109

69:                                               ; preds = %44
  %70 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %71 = load ptr, ptr %12, align 8, !tbaa !25, !noalias !554
  %72 = icmp eq ptr %71, null
  br i1 %72, label %133, label %73

73:                                               ; preds = %69
  %74 = load ptr, ptr %71, align 8, !tbaa !497
  %75 = icmp eq ptr %74, null
  br i1 %75, label %133, label %76

76:                                               ; preds = %73
  invoke void %74(ptr noundef nonnull align 8 dereferenceable(24) %40, ptr noundef nonnull align 8 dereferenceable(24) %40, i32 noundef 2)
          to label %133 unwind label %77

77:                                               ; preds = %76
  %78 = landingpad { ptr, i32 }
          catch ptr null
  %79 = extractvalue { ptr, i32 } %78, 0
  call void @__clang_call_terminate(ptr %79) #22
  unreachable

80:                                               ; preds = %64, %49, %67
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12)
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS4_5list9INS4_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS20_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull %16, i32 noundef 0)
          to label %81 unwind label %111

81:                                               ; preds = %80
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %15)
          to label %82 unwind label %113

82:                                               ; preds = %81
  %83 = load ptr, ptr %15, align 8, !tbaa !25
  %84 = icmp eq ptr %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load ptr, ptr %83, align 8, !tbaa !231
  %87 = icmp eq ptr %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %89, ptr noundef nonnull align 8 dereferenceable(24) %89, i32 noundef 2)
          to label %90 unwind label %111

90:                                               ; preds = %88, %85
  store ptr null, ptr %15, align 8, !tbaa !25
  br label %91

91:                                               ; preds = %90, %82
  %92 = load ptr, ptr %16, align 8, !tbaa !25
  %93 = icmp eq ptr %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = load ptr, ptr %92, align 8, !tbaa !497
  %96 = icmp eq ptr %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.boost::function_base", ptr %16, i64 0, i32 1
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %98, ptr noundef nonnull align 8 dereferenceable(24) %98, i32 noundef 2)
          to label %99 unwind label %109

99:                                               ; preds = %97, %94
  store ptr null, ptr %16, align 8, !tbaa !25
  br label %100

100:                                              ; preds = %99, %91
  %101 = load ptr, ptr %17, align 8, !tbaa !25
  %102 = icmp eq ptr %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = load ptr, ptr %101, align 8, !tbaa !497
  %105 = icmp eq ptr %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  call void %104(ptr noundef nonnull align 8 dereferenceable(24) %107, ptr noundef nonnull align 8 dereferenceable(24) %107, i32 noundef 2)
  br label %108

108:                                              ; preds = %103, %106, %100
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  ret void

109:                                              ; preds = %97, %67, %37
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %133

111:                                              ; preds = %88, %80
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %123

113:                                              ; preds = %81
  %114 = landingpad { ptr, i32 }
          cleanup
  %115 = load ptr, ptr %15, align 8, !tbaa !25
  %116 = icmp eq ptr %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = load ptr, ptr %115, align 8, !tbaa !231
  %119 = icmp eq ptr %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  invoke void %118(ptr noundef nonnull align 8 dereferenceable(24) %121, ptr noundef nonnull align 8 dereferenceable(24) %121, i32 noundef 2)
          to label %122 unwind label %143

122:                                              ; preds = %120, %117
  store ptr null, ptr %15, align 8, !tbaa !25
  br label %123

123:                                              ; preds = %122, %113, %111
  %124 = phi { ptr, i32 } [ %112, %111 ], [ %114, %113 ], [ %114, %122 ]
  %125 = load ptr, ptr %16, align 8, !tbaa !25
  %126 = icmp eq ptr %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = load ptr, ptr %125, align 8, !tbaa !497
  %129 = icmp eq ptr %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.boost::function_base", ptr %16, i64 0, i32 1
  invoke void %128(ptr noundef nonnull align 8 dereferenceable(24) %131, ptr noundef nonnull align 8 dereferenceable(24) %131, i32 noundef 2)
          to label %132 unwind label %143

132:                                              ; preds = %130, %127
  store ptr null, ptr %16, align 8, !tbaa !25
  br label %133

133:                                              ; preds = %132, %123, %109, %76, %73, %69
  %134 = phi { ptr, i32 } [ %110, %109 ], [ %70, %76 ], [ %70, %73 ], [ %70, %69 ], [ %124, %123 ], [ %124, %132 ]
  %135 = load ptr, ptr %17, align 8, !tbaa !25
  %136 = icmp eq ptr %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = load ptr, ptr %135, align 8, !tbaa !497
  %139 = icmp eq ptr %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  invoke void %138(ptr noundef nonnull align 8 dereferenceable(24) %141, ptr noundef nonnull align 8 dereferenceable(24) %141, i32 noundef 2)
          to label %142 unwind label %143

142:                                              ; preds = %137, %140, %133
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  resume { ptr, i32 } %134

143:                                              ; preds = %140, %130, %120
  %144 = landingpad { ptr, i32 }
          catch ptr null
  %145 = extractvalue { ptr, i32 } %144, 0
  call void @__clang_call_terminate(ptr %145) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESS_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 8 dereferenceable(96) %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef %8) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca i32, align 4
  %11 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %12 = alloca %"class.std::vector.43", align 8
  %13 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %14 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %15 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %16 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %17 = alloca %"class.dealii::Threads::Thread", align 16
  %18 = alloca %"class.dealii::Threads::internal::fun_encapsulator.150", align 8
  %19 = alloca %"class.boost::tuples::tuple.146", align 8
  %20 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %21 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !336
  %23 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !338
  %25 = load ptr, ptr %24, align 8, !tbaa !340
  %26 = getelementptr inbounds i8, ptr %25, i64 116
  %27 = load i32, ptr %26, align 4, !tbaa !128
  %28 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %8, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !349
  %30 = load ptr, ptr %8, align 8, !tbaa !144
  %31 = icmp eq ptr %29, %30
  br i1 %31, label %32, label %49

32:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #19
  store i32 0, ptr %10, align 4, !tbaa !59
  %33 = icmp eq i32 %27, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %8, i64 0, i32 2
  br label %37

36:                                               ; preds = %45, %32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #19
  br label %49

37:                                               ; preds = %34, %45
  %38 = phi i32 [ 0, %34 ], [ %47, %45 ]
  %39 = load ptr, ptr %28, align 8, !tbaa !33
  %40 = load ptr, ptr %35, align 8, !tbaa !492
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  store i32 %38, ptr %39, align 4, !tbaa !59
  %43 = getelementptr inbounds i32, ptr %39, i64 1
  store ptr %43, ptr %28, align 8, !tbaa !349
  br label %45

44:                                               ; preds = %37
  call void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr %39, ptr noundef nonnull align 4 dereferenceable(4) %10)
  br label %45

45:                                               ; preds = %42, %44
  %46 = load i32, ptr %10, align 4, !tbaa !59
  %47 = add i32 %46, 1
  store i32 %47, ptr %10, align 4, !tbaa !59
  %48 = icmp ult i32 %47, %27
  br i1 %48, label %37, label %36

49:                                               ; preds = %9, %36
  %50 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  %51 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %11, i64 0, i32 1
  store ptr %11, ptr %51, align 8, !tbaa !10
  store ptr %11, ptr %11, align 8, !tbaa !13
  %52 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %11, i64 0, i32 1
  store i64 0, ptr %52, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %13, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %53 unwind label %78

53:                                               ; preds = %49
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %15) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %15, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %54 unwind label %80

54:                                               ; preds = %53
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %15, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !325
  store ptr %57, ptr %55, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %12, ptr noundef nonnull align 8 dereferenceable(24) %13, ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef %50)
          to label %58 unwind label %80

58:                                               ; preds = %54
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %16) #19
  %59 = icmp eq i32 %50, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.boost::function_base", ptr %18, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.boost::tuples::cons.147", ptr %19, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.boost::tuples::cons.147", ptr %19, i64 0, i32 1, i32 1
  %64 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %20, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %20, i64 0, i32 1
  %66 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %20, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.boost::shared_ptr", ptr %17, i64 0, i32 1
  %68 = zext i32 %50 to i64
  br label %84

69:                                               ; preds = %138, %58
  %70 = load ptr, ptr %11, align 8, !tbaa !13
  %71 = icmp eq ptr %70, %11
  br i1 %71, label %157, label %72

72:                                               ; preds = %69, %75
  %73 = phi ptr [ %76, %75 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"struct.std::_List_node", ptr %73, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %74)
          to label %75 unwind label %190

75:                                               ; preds = %72
  %76 = load ptr, ptr %73, align 8, !tbaa !13
  %77 = icmp eq ptr %76, %11
  br i1 %77, label %157, label %72

78:                                               ; preds = %49
  %79 = landingpad { ptr, i32 }
          cleanup
  br label %82

80:                                               ; preds = %54, %53
  %81 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  br label %82

82:                                               ; preds = %80, %78
  %83 = phi { ptr, i32 } [ %81, %80 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  br label %197

84:                                               ; preds = %60, %138
  %85 = phi i64 [ 0, %60 ], [ %139, %138 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %17) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %18) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !560)
  store ptr null, ptr %18, align 8, !tbaa !25, !alias.scope !560
  %86 = load ptr, ptr @_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_EEEvT_E13stored_vtable, align 8, !tbaa !563, !noalias !560
  %87 = icmp eq ptr %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %84
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
          to label %89 unwind label %141

89:                                               ; preds = %84, %88
  store ptr @_ZN6dealii13MatrixCreator29create_boundary_mass_matrix_1ILi3ELi3EEEvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS5_10DoFHandlerIXT_EXT0_EEERKNS5_11QCollectionIXmiT_Li1EEEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEERKSX_NS0_13IteratorRangeISB_EERNS_7Threads16DummyThreadMutexE, ptr %61, align 8, !tbaa !30, !alias.scope !560
  store ptr @_ZZN5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEE9assign_toIPFvSI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_EEEvT_E13stored_vtable, ptr %18, align 8, !tbaa !25, !alias.scope !560
  store ptr %0, ptr %19, align 8, !tbaa !33
  store ptr %1, ptr %62, align 8, !tbaa !33
  store ptr %2, ptr %63, align 8, !tbaa !33
  %90 = load ptr, ptr %12, align 8, !tbaa !332
  %91 = getelementptr inbounds %"struct.std::pair.69", ptr %90, i64 %85
  %92 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %91, i64 0, i32 1
  %93 = load ptr, ptr %92, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %20, ptr noundef nonnull align 8 dereferenceable(16) %91, i64 16, i1 false)
  store ptr %93, ptr %64, align 8, !tbaa !325
  %94 = getelementptr inbounds %"struct.std::pair.69", ptr %90, i64 %85, i32 1
  %95 = getelementptr inbounds %"struct.std::pair.69", ptr %90, i64 %85, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load ptr, ptr %95, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %65, ptr noundef nonnull align 8 dereferenceable(16) %94, i64 16, i1 false)
  store ptr %96, ptr %66, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleINS5_IRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexESJ_EELi9EEclESK_SN_S11_S14_S18_SS_S1A_S1D_S1F_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %17, ptr noundef nonnull align 8 dereferenceable(32) %18, ptr noundef nonnull byval(%"class.boost::tuples::tuple.146") align 8 %19, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull %20, ptr noundef nonnull align 1 dereferenceable(1) %16)
          to label %97 unwind label %143

97:                                               ; preds = %89
  %98 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %99 unwind label %145

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"struct.std::_List_node", ptr %98, i64 0, i32 1
  %101 = load <2 x ptr>, ptr %17, align 16, !tbaa !33
  store <2 x ptr> %101, ptr %100, align 8, !tbaa !33
  %102 = extractelement <2 x ptr> %101, i64 1
  %103 = icmp eq ptr %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %102, i64 0, i32 1
  %106 = load i64, ptr %105, align 8, !tbaa !34
  %107 = add nsw i64 %106, 1
  store i64 %107, ptr %105, align 8, !tbaa !34
  br label %108

108:                                              ; preds = %104, %99
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %98, ptr noundef nonnull %11) #19
  %109 = load i64, ptr %52, align 8, !tbaa !36
  %110 = add i64 %109, 1
  store i64 %110, ptr %52, align 8, !tbaa !36
  %111 = load ptr, ptr %67, align 8, !tbaa !39
  %112 = icmp eq ptr %111, null
  br i1 %112, label %131, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %111, i64 0, i32 1
  %115 = load i64, ptr %114, align 8, !tbaa !34
  %116 = add nsw i64 %115, -1
  store i64 %116, ptr %114, align 8, !tbaa !34
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %131

118:                                              ; preds = %113
  %119 = load ptr, ptr %111, align 8, !tbaa !41
  %120 = getelementptr inbounds ptr, ptr %119, i64 2
  %121 = load ptr, ptr %120, align 8
  invoke void %121(ptr noundef nonnull align 8 dereferenceable(24) %111)
          to label %122 unwind label %143

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %111, i64 0, i32 2
  %124 = load i64, ptr %123, align 8, !tbaa !43
  %125 = add nsw i64 %124, -1
  store i64 %125, ptr %123, align 8, !tbaa !43
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %122
  %128 = load ptr, ptr %111, align 8, !tbaa !41
  %129 = getelementptr inbounds ptr, ptr %128, i64 3
  %130 = load ptr, ptr %129, align 8
  invoke void %130(ptr noundef nonnull align 8 dereferenceable(24) %111)
          to label %131 unwind label %143

131:                                              ; preds = %122, %113, %108, %127
  %132 = load ptr, ptr %18, align 8, !tbaa !25
  %133 = icmp eq ptr %132, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %131
  %135 = load ptr, ptr %132, align 8, !tbaa !563
  %136 = icmp eq ptr %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  invoke void %135(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
          to label %138 unwind label %141

138:                                              ; preds = %134, %137, %131
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #19
  %139 = add nuw nsw i64 %85, 1
  %140 = icmp eq i64 %139, %68
  br i1 %140, label %69, label %84

141:                                              ; preds = %137, %88
  %142 = landingpad { ptr, i32 }
          cleanup
  br label %155

143:                                              ; preds = %127, %118, %89
  %144 = landingpad { ptr, i32 }
          cleanup
  br label %147

145:                                              ; preds = %97
  %146 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %17)
          to label %147 unwind label %200

147:                                              ; preds = %145, %143
  %148 = phi { ptr, i32 } [ %144, %143 ], [ %146, %145 ]
  %149 = load ptr, ptr %18, align 8, !tbaa !25
  %150 = icmp eq ptr %149, null
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = load ptr, ptr %149, align 8, !tbaa !563
  %153 = icmp eq ptr %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  invoke void %152(ptr noundef nonnull align 8 dereferenceable(24) %61, ptr noundef nonnull align 8 dereferenceable(24) %61, i32 noundef 2)
          to label %155 unwind label %200

155:                                              ; preds = %151, %154, %147, %141
  %156 = phi { ptr, i32 } [ %142, %141 ], [ %148, %147 ], [ %148, %154 ], [ %148, %151 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %18) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #19
  br label %192

157:                                              ; preds = %75, %69
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  %158 = load ptr, ptr %12, align 8, !tbaa !332
  %159 = icmp eq ptr %158, null
  br i1 %159, label %161, label %160

160:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %158) #21
  br label %161

161:                                              ; preds = %160, %157
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  %162 = load ptr, ptr %11, align 8, !tbaa !13
  %163 = icmp eq ptr %162, %11
  br i1 %163, label %189, label %164

164:                                              ; preds = %161, %187
  %165 = phi ptr [ %166, %187 ], [ %162, %161 ]
  %166 = load ptr, ptr %165, align 8, !tbaa !13
  %167 = getelementptr inbounds %"struct.std::_List_node", ptr %165, i64 0, i32 1, i32 0, i32 1
  %168 = load ptr, ptr %167, align 8, !tbaa !39
  %169 = icmp eq ptr %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %168, i64 0, i32 1
  %172 = load i64, ptr %171, align 8, !tbaa !34
  %173 = add nsw i64 %172, -1
  store i64 %173, ptr %171, align 8, !tbaa !34
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %170
  %176 = load ptr, ptr %168, align 8, !tbaa !41
  %177 = getelementptr inbounds ptr, ptr %176, i64 2
  %178 = load ptr, ptr %177, align 8
  call void %178(ptr noundef nonnull align 8 dereferenceable(24) %168)
  %179 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %168, i64 0, i32 2
  %180 = load i64, ptr %179, align 8, !tbaa !43
  %181 = add nsw i64 %180, -1
  store i64 %181, ptr %179, align 8, !tbaa !43
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %175
  %184 = load ptr, ptr %168, align 8, !tbaa !41
  %185 = getelementptr inbounds ptr, ptr %184, i64 3
  %186 = load ptr, ptr %185, align 8
  call void %186(ptr noundef nonnull align 8 dereferenceable(24) %168)
  br label %187

187:                                              ; preds = %183, %175, %170, %164
  call void @_ZdlPv(ptr noundef nonnull %165) #21
  %188 = icmp eq ptr %166, %11
  br i1 %188, label %189, label %164

189:                                              ; preds = %187, %161
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  ret void

190:                                              ; preds = %72
  %191 = landingpad { ptr, i32 }
          cleanup
  br label %192

192:                                              ; preds = %190, %155
  %193 = phi { ptr, i32 } [ %156, %155 ], [ %191, %190 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %16) #19
  %194 = load ptr, ptr %12, align 8, !tbaa !332
  %195 = icmp eq ptr %194, null
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  call void @_ZdlPv(ptr noundef nonnull %194) #21
  br label %197

197:                                              ; preds = %196, %192, %82
  %198 = phi { ptr, i32 } [ %83, %82 ], [ %193, %192 ], [ %193, %196 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %11)
          to label %199 unwind label %200

199:                                              ; preds = %197
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  resume { ptr, i32 } %198

200:                                              ; preds = %154, %197, %145
  %201 = landingpad { ptr, i32 }
          catch ptr null
  %202 = extractvalue { ptr, i32 } %201, 0
  call void @__clang_call_terminate(ptr %202) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator29create_boundary_mass_matrix_1ILi3ELi3EEEvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS5_10DoFHandlerIXT_EXT0_EEERKNS5_11QCollectionIXmiT_Li1EEEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEERKSX_NS0_13IteratorRangeISB_EERNS_7Threads16DummyThreadMutexE(ptr noundef byval(%"class.boost::tuples::tuple.146") align 8 %0, ptr noundef nonnull align 8 dereferenceable(36) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(88) %3, ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca %"class.dealii::FullMatrix", align 8
  %16 = alloca %"class.dealii::Vector", align 8
  %17 = alloca %"class.dealii::hp::FEFaceValues", align 8
  %18 = alloca %"class.std::vector.92", align 8
  %19 = alloca %"class.std::vector.258", align 8
  %20 = alloca %"class.std::vector.92", align 8
  %21 = alloca %"class.std::vector.258", align 8
  %22 = alloca %"class.std::vector.28", align 8
  %23 = alloca %"class.std::vector.28", align 8
  %24 = alloca %"class.std::vector.126", align 8
  %25 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %26 = alloca %"class.dealii::Vector", align 8
  %27 = alloca %"class.dealii::Vector", align 8
  %28 = alloca %"class.dealii::TriaIterator.319", align 8
  %29 = load ptr, ptr %0, align 8, !tbaa !565
  %30 = getelementptr inbounds %"struct.boost::tuples::cons.147", ptr %0, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !569
  %32 = getelementptr inbounds %"struct.boost::tuples::cons.147", ptr %0, i64 0, i32 1, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !570
  %34 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %31, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !336
  %36 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !338
  %38 = load ptr, ptr %37, align 8, !tbaa !340
  %39 = getelementptr inbounds i8, ptr %38, i64 116
  %40 = load i32, ptr %39, align 4, !tbaa !128
  %41 = getelementptr inbounds i8, ptr %2, i64 24
  %42 = load ptr, ptr %41, align 8, !tbaa !505
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %42, i64 0, i32 1, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !506
  %45 = getelementptr inbounds %"class.dealii::Function", ptr %44, i64 0, i32 2
  %46 = load i32, ptr %45, align 8, !tbaa !145
  %47 = icmp eq i32 %40, 1
  %48 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !571
  %50 = ptrtoint ptr %49 to i64
  %51 = ptrtoint ptr %37 to i64
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 4
  %54 = icmp eq ptr %49, %37
  br i1 %54, label %79, label %55

55:                                               ; preds = %9, %55
  %56 = phi i64 [ %65, %55 ], [ 0, %9 ]
  %57 = phi i32 [ %64, %55 ], [ 0, %9 ]
  %58 = phi i32 [ %63, %55 ], [ 0, %9 ]
  %59 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %37, i64 %56
  %60 = load ptr, ptr %59, align 8, !tbaa !340
  %61 = getelementptr inbounds i8, ptr %60, i64 112
  %62 = load i32, ptr %61, align 8, !tbaa !141
  %63 = tail call i32 @llvm.umax.i32(i32 %62, i32 %58)
  %64 = add i32 %57, 1
  %65 = zext i32 %64 to i64
  %66 = icmp ugt i64 %53, %65
  br i1 %66, label %55, label %67

67:                                               ; preds = %55, %67
  %68 = phi i64 [ %77, %67 ], [ 0, %55 ]
  %69 = phi i32 [ %76, %67 ], [ 0, %55 ]
  %70 = phi i32 [ %75, %67 ], [ 0, %55 ]
  %71 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %37, i64 %68
  %72 = load ptr, ptr %71, align 8, !tbaa !340
  %73 = getelementptr inbounds i8, ptr %72, i64 108
  %74 = load i32, ptr %73, align 4, !tbaa !508
  %75 = tail call i32 @llvm.umax.i32(i32 %74, i32 %70)
  %76 = add i32 %69, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %53, %77
  br i1 %78, label %67, label %79

79:                                               ; preds = %67, %9
  %80 = phi i32 [ 0, %9 ], [ %63, %67 ]
  %81 = phi i32 [ 0, %9 ], [ %75, %67 ]
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %15) #19
  call void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %15, i32 noundef %80, i32 noundef %80)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %16) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %82 unwind label %320

82:                                               ; preds = %79
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %83 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %83, i8 0, i64 16, i1 false)
  %84 = icmp eq i32 %80, 0
  br i1 %84, label %97, label %85

85:                                               ; preds = %82
  %86 = zext i32 %80 to i64
  %87 = shl nuw nsw i64 %86, 3
  %88 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %87) #20
          to label %89 unwind label %92

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %91 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 2
  store ptr %88, ptr %90, align 8, !tbaa !136
  store i32 %80, ptr %91, align 4, !tbaa !138
  store i32 %80, ptr %83, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %88, i8 0, i64 %87, i1 false), !tbaa !133
  br label %97

92:                                               ; preds = %85
  %93 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %2255 unwind label %94

94:                                               ; preds = %92
  %95 = landingpad { ptr, i32 }
          catch ptr null
  %96 = extractvalue { ptr, i32 } %95, 0
  call void @__clang_call_terminate(ptr %96) #22
  unreachable

97:                                               ; preds = %89, %82
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %17) #19
  invoke void @_ZN6dealii2hp12FEFaceValuesILi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi2EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %17, ptr noundef nonnull align 8 dereferenceable(96) %29, ptr noundef nonnull align 8 dereferenceable(96) %35, ptr noundef nonnull align 8 dereferenceable(96) %33, i32 noundef 49)
          to label %98 unwind label %322

98:                                               ; preds = %97
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %19) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %19, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %20) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %20, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %21) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %21, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %22) #19
  %99 = zext i32 %80 to i64
  br i1 %84, label %100, label %101

100:                                              ; preds = %98
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %22, i8 0, i64 24, i1 false)
  br label %107

101:                                              ; preds = %98
  %102 = shl nuw nsw i64 %99, 2
  %103 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %102) #20
          to label %104 unwind label %324

104:                                              ; preds = %101
  store ptr %103, ptr %22, align 8, !tbaa !144
  %105 = getelementptr inbounds i32, ptr %103, i64 %99
  %106 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %22, i64 0, i32 2
  store ptr %105, ptr %106, align 8, !tbaa !492
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %103, i8 0, i64 %102, i1 false), !tbaa !59
  br label %107

107:                                              ; preds = %104, %100
  %108 = phi ptr [ null, %100 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %22, i64 0, i32 1
  store ptr %108, ptr %109, align 8, !tbaa !349
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %23) #19
  %110 = zext i32 %81 to i64
  %111 = icmp eq i32 %81, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false)
  br label %119

113:                                              ; preds = %107
  %114 = shl nuw nsw i64 %110, 2
  %115 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %114) #20
          to label %116 unwind label %326

116:                                              ; preds = %113
  store ptr %115, ptr %23, align 8, !tbaa !144
  %117 = getelementptr inbounds i32, ptr %115, i64 %110
  %118 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %23, i64 0, i32 2
  store ptr %117, ptr %118, align 8, !tbaa !492
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %115, i8 0, i64 %114, i1 false), !tbaa !59
  br label %119

119:                                              ; preds = %116, %112
  %120 = phi ptr [ null, %112 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %23, i64 0, i32 1
  store ptr %120, ptr %121, align 8, !tbaa !349
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %24) #19
  store ptr null, ptr %24, align 8, !tbaa !54
  %122 = getelementptr inbounds %"struct.std::_Bit_iterator_base", ptr %24, i64 0, i32 1
  store i32 0, ptr %122, align 8, !tbaa !572
  %123 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %24, i64 0, i32 1
  store ptr null, ptr %123, align 8, !tbaa !54
  %124 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %24, i64 0, i32 1, i32 0, i32 1
  store i32 0, ptr %124, align 8, !tbaa !572
  %125 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %24, i64 0, i32 2
  store ptr null, ptr %125, align 8, !tbaa !573
  br i1 %84, label %140, label %126

126:                                              ; preds = %119
  %127 = add nuw nsw i64 %99, 63
  %128 = lshr i64 %127, 3
  %129 = and i64 %128, 1073741816
  %130 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %129) #20
          to label %131 unwind label %138

131:                                              ; preds = %126
  %132 = lshr i64 %127, 6
  %133 = getelementptr inbounds i64, ptr %130, i64 %132
  store ptr %133, ptr %125, align 8, !tbaa !573
  store ptr %130, ptr %24, align 8
  store i32 0, ptr %122, align 8
  %134 = lshr i64 %99, 6
  %135 = getelementptr inbounds i64, ptr %130, i64 %134
  %136 = and i32 %80, 63
  store ptr %135, ptr %123, align 8
  store i32 %136, ptr %124, align 8
  %137 = shl nuw nsw i64 %132, 3
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %130, i8 0, i64 %137, i1 false)
  br label %140

138:                                              ; preds = %126
  %139 = landingpad { ptr, i32 }
          cleanup
  br label %2167

140:                                              ; preds = %131, %119
  %141 = phi ptr [ %130, %131 ], [ null, %119 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %25) #19
  %142 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %143 = load ptr, ptr %142, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %25, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %144 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %25, i64 0, i32 1
  store ptr %143, ptr %144, align 8, !tbaa !325
  %145 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %146 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %25, i64 0, i32 1
  %147 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = load i32, ptr %146, align 4
  %149 = load i32, ptr %147, align 4, !tbaa !61
  %150 = icmp ne i32 %148, %149
  %151 = load i32, ptr %25, align 8
  %152 = load i32, ptr %145, align 8
  %153 = icmp ne i32 %151, %152
  %154 = select i1 %150, i1 true, i1 %153
  br i1 %154, label %155, label %2062

155:                                              ; preds = %140
  %156 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %25, i64 0, i32 2
  %157 = getelementptr inbounds i8, ptr %2, i64 16
  %158 = getelementptr inbounds i8, ptr %2, i64 8
  %159 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 4
  %160 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 3, i32 0, i32 1
  %161 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %162 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 4, i32 0, i32 0, i64 1
  %163 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %164 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 4, i32 0, i32 0, i64 2
  %165 = getelementptr inbounds %"class.dealii::TableBase", ptr %15, i64 0, i32 3
  %166 = getelementptr inbounds %"class.dealii::TableBase", ptr %15, i64 0, i32 3, i32 0, i32 0, i64 1
  %167 = getelementptr inbounds %"class.dealii::TableBase", ptr %15, i64 0, i32 2
  %168 = getelementptr inbounds %"class.dealii::TableBase", ptr %15, i64 0, i32 1
  %169 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 2
  %170 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %171 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 0, i32 1
  %172 = icmp eq i32 %46, 0
  %173 = zext i32 %46 to i64
  %174 = shl nuw nsw i64 %173, 3
  %175 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 0, i32 3
  %176 = getelementptr inbounds %"class.dealii::Vector", ptr %26, i64 0, i32 2
  %177 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %21, i64 0, i32 1
  %178 = icmp eq ptr %5, null
  %179 = getelementptr inbounds %"class.dealii::Function", ptr %5, i64 0, i32 2
  %180 = getelementptr inbounds %"class.dealii::Vector", ptr %27, i64 0, i32 1
  %181 = icmp eq i32 %40, 0
  %182 = zext i32 %40 to i64
  %183 = shl nuw nsw i64 %182, 3
  %184 = getelementptr inbounds %"class.dealii::Vector", ptr %27, i64 0, i32 3
  %185 = getelementptr inbounds %"class.dealii::Vector", ptr %27, i64 0, i32 2
  %186 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %19, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %188 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %20, i64 0, i32 1
  %189 = getelementptr inbounds %"class.dealii::TriaAccessorBase.318", ptr %28, i64 0, i32 1
  %190 = getelementptr inbounds %"class.dealii::DoFAccessor.316", ptr %28, i64 0, i32 1
  %191 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 1
  %192 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %1, i64 0, i32 2
  %193 = getelementptr inbounds %"class.dealii::Vector", ptr %3, i64 0, i32 3
  br label %194

194:                                              ; preds = %155, %314
  %195 = phi i32 [ %151, %155 ], [ %277, %314 ]
  %196 = phi i32 [ %148, %155 ], [ %279, %314 ]
  %197 = load ptr, ptr %157, align 8, !tbaa !528
  %198 = icmp eq ptr %197, null
  br i1 %198, label %202, label %328

199:                                              ; preds = %2057
  %200 = load i32, ptr %25, align 8
  %201 = load i32, ptr %146, align 4
  br label %202

202:                                              ; preds = %194, %199
  %203 = phi i32 [ %200, %199 ], [ %195, %194 ]
  %204 = phi i32 [ %201, %199 ], [ %196, %194 ]
  %205 = load ptr, ptr %156, align 8, !tbaa !62
  %206 = getelementptr inbounds %"class.dealii::Triangulation", ptr %205, i64 0, i32 1
  %207 = load ptr, ptr %206, align 8, !tbaa !46
  %208 = ptrtoint ptr %207 to i64
  %209 = getelementptr inbounds %"class.dealii::Triangulation", ptr %205, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %210

210:                                              ; preds = %298, %202
  %211 = phi i32 [ %203, %202 ], [ %277, %298 ]
  %212 = phi i32 [ %203, %202 ], [ %278, %298 ]
  %213 = phi i32 [ %203, %202 ], [ %299, %298 ]
  %214 = phi i32 [ %204, %202 ], [ %279, %298 ]
  %215 = add nsw i32 %214, 1
  %216 = sext i32 %213 to i64
  %217 = getelementptr inbounds ptr, ptr %207, i64 %216
  %218 = load ptr, ptr %217, align 8, !tbaa !33
  %219 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %218, i64 0, i32 4
  %220 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %218, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = load ptr, ptr %220, align 8, !tbaa !48
  %222 = load ptr, ptr %219, align 8, !tbaa !50
  %223 = ptrtoint ptr %221 to i64
  %224 = ptrtoint ptr %222 to i64
  %225 = sub i64 %223, %224
  %226 = sdiv exact i64 %225, 24
  %227 = trunc i64 %226 to i32
  %228 = icmp slt i32 %215, %227
  br i1 %228, label %276, label %229

229:                                              ; preds = %210
  %230 = add nsw i64 %216, 1
  %231 = trunc i64 %230 to i32
  store i32 %231, ptr %25, align 8, !tbaa !60
  %232 = load ptr, ptr %209, align 8, !tbaa !51
  %233 = ptrtoint ptr %232 to i64
  %234 = sub i64 %233, %208
  %235 = shl i64 %234, 29
  %236 = ashr i64 %235, 32
  %237 = icmp slt i64 %230, %236
  br i1 %237, label %238, label %270

238:                                              ; preds = %229
  %239 = getelementptr inbounds ptr, ptr %207, i64 %230
  %240 = load ptr, ptr %239, align 8, !tbaa !33
  %241 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %240, i64 0, i32 4
  %242 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %240, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = load ptr, ptr %242, align 8, !tbaa !48
  %244 = load ptr, ptr %241, align 8, !tbaa !50
  %245 = ptrtoint ptr %243 to i64
  %246 = ptrtoint ptr %244 to i64
  %247 = sub i64 %245, %246
  %248 = sdiv exact i64 %247, 24
  %249 = trunc i64 %248 to i32
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %272, label %264

251:                                              ; preds = %264
  %252 = getelementptr inbounds ptr, ptr %207, i64 %266
  %253 = load ptr, ptr %252, align 8, !tbaa !33
  %254 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %253, i64 0, i32 4
  %255 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %253, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %256 = load ptr, ptr %255, align 8, !tbaa !48
  %257 = load ptr, ptr %254, align 8, !tbaa !50
  %258 = ptrtoint ptr %256 to i64
  %259 = ptrtoint ptr %257 to i64
  %260 = sub i64 %258, %259
  %261 = sdiv exact i64 %260, 24
  %262 = trunc i64 %261 to i32
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %271, label %264, !llvm.loop !52

264:                                              ; preds = %238, %251
  %265 = phi i64 [ %266, %251 ], [ %230, %238 ]
  %266 = add i64 %265, 1
  %267 = trunc i64 %266 to i32
  %268 = icmp eq i64 %266, %236
  br i1 %268, label %269, label %251, !llvm.loop !52

269:                                              ; preds = %264
  store i32 %267, ptr %25, align 8, !tbaa !60
  br label %270

270:                                              ; preds = %269, %229
  store i32 -1, ptr %25, align 8, !tbaa !60
  br label %276

271:                                              ; preds = %251
  store i32 %267, ptr %25, align 8, !tbaa !60
  br label %272

272:                                              ; preds = %271, %238
  %273 = phi i32 [ %231, %238 ], [ %267, %271 ]
  %274 = phi i64 [ %230, %238 ], [ %266, %271 ]
  %275 = trunc i64 %274 to i32
  br label %276

276:                                              ; preds = %272, %270, %210
  %277 = phi i32 [ %211, %210 ], [ -1, %270 ], [ %273, %272 ]
  %278 = phi i32 [ %212, %210 ], [ -1, %270 ], [ %275, %272 ]
  %279 = phi i32 [ %215, %210 ], [ -1, %270 ], [ 0, %272 ]
  %280 = phi i32 [ %213, %210 ], [ -1, %270 ], [ %275, %272 ]
  %281 = or i32 %280, %279
  %282 = icmp sgt i32 %281, -1
  br i1 %282, label %283, label %300

283:                                              ; preds = %276
  %284 = zext i32 %280 to i64
  %285 = getelementptr inbounds ptr, ptr %207, i64 %284
  %286 = load ptr, ptr %285, align 8, !tbaa !33
  %287 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %286, i64 0, i32 4, i32 0, i32 3
  %288 = load ptr, ptr %287, align 8, !tbaa !54
  %289 = lshr i32 %279, 6
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds i64, ptr %288, i64 %290
  %292 = and i32 %279, 63
  %293 = zext i32 %292 to i64
  %294 = shl nuw i64 1, %293
  %295 = load i64, ptr %291, align 8, !tbaa !56
  %296 = and i64 %295, %294
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %283, %303
  %299 = phi i32 [ %280, %283 ], [ %278, %303 ]
  br label %210

300:                                              ; preds = %283, %276
  store i32 %279, ptr %146, align 4, !tbaa !61
  %301 = or i32 %279, %278
  %302 = icmp sgt i32 %301, -1
  br i1 %302, label %303, label %314

303:                                              ; preds = %300
  %304 = zext i32 %278 to i64
  %305 = getelementptr inbounds ptr, ptr %207, i64 %304
  %306 = load ptr, ptr %305, align 8, !tbaa !33
  %307 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %306, i64 0, i32 4, i32 0, i32 1
  %308 = shl i32 %279, 2
  %309 = zext i32 %308 to i64
  %310 = load ptr, ptr %307, align 8, !tbaa !57
  %311 = getelementptr inbounds i32, ptr %310, i64 %309
  %312 = load i32, ptr %311, align 4, !tbaa !59
  %313 = icmp eq i32 %312, -1
  br i1 %313, label %314, label %298

314:                                              ; preds = %300, %303
  %315 = load i32, ptr %147, align 4, !tbaa !61
  %316 = icmp ne i32 %279, %315
  %317 = load i32, ptr %145, align 8
  %318 = icmp ne i32 %277, %317
  %319 = select i1 %316, i1 true, i1 %318
  br i1 %319, label %194, label %2060

320:                                              ; preds = %2148, %79
  %321 = landingpad { ptr, i32 }
          cleanup
  br label %2255

322:                                              ; preds = %2135, %97
  %323 = landingpad { ptr, i32 }
          cleanup
  br label %2248

324:                                              ; preds = %101
  %325 = landingpad { ptr, i32 }
          cleanup
  br label %2177

326:                                              ; preds = %113
  %327 = landingpad { ptr, i32 }
          cleanup
  br label %2172

328:                                              ; preds = %194, %2057
  %329 = phi i64 [ %2058, %2057 ], [ 0, %194 ]
  %330 = load ptr, ptr %156, align 8, !tbaa !62, !noalias !574
  %331 = getelementptr inbounds %"class.dealii::Triangulation", ptr %330, i64 0, i32 1
  %332 = load i32, ptr %25, align 8, !tbaa !60
  %333 = sext i32 %332 to i64
  %334 = load ptr, ptr %331, align 8, !tbaa !46, !noalias !574
  %335 = getelementptr inbounds ptr, ptr %334, i64 %333
  %336 = load ptr, ptr %335, align 8, !tbaa !33, !noalias !574
  %337 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %336, i64 0, i32 4
  %338 = load i32, ptr %146, align 4
  %339 = sext i32 %338 to i64
  %340 = load ptr, ptr %337, align 8, !tbaa !50, !noalias !574
  %341 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %340, i64 %339
  %342 = getelementptr inbounds [6 x i32], ptr %341, i64 0, i64 %329
  %343 = load i32, ptr %342, align 4, !tbaa !59, !noalias !574
  %344 = getelementptr inbounds %"class.dealii::Triangulation", ptr %330, i64 0, i32 2
  %345 = load ptr, ptr %344, align 8, !tbaa !514
  %346 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.329", ptr %345, i64 0, i32 5
  %347 = sext i32 %343 to i64
  %348 = load ptr, ptr %346, align 8, !tbaa !526
  %349 = getelementptr inbounds i8, ptr %348, i64 %347
  %350 = load i8, ptr %349, align 1, !tbaa !30
  %351 = load ptr, ptr %157, align 8, !tbaa !528
  %352 = icmp eq ptr %351, null
  br i1 %352, label %2057, label %353

353:                                              ; preds = %328, %353
  %354 = phi ptr [ %363, %353 ], [ %351, %328 ]
  %355 = phi ptr [ %361, %353 ], [ %158, %328 ]
  %356 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %354, i64 0, i32 1
  %357 = load i8, ptr %356, align 1, !tbaa !30
  %358 = icmp ult i8 %357, %350
  %359 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %354, i64 0, i32 3
  %360 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %354, i64 0, i32 2
  %361 = select i1 %358, ptr %355, ptr %354
  %362 = select i1 %358, ptr %359, ptr %360
  %363 = load ptr, ptr %362, align 8, !tbaa !33
  %364 = icmp eq ptr %363, null
  br i1 %364, label %365, label %353

365:                                              ; preds = %353
  %366 = icmp eq ptr %361, %158
  br i1 %366, label %2057, label %367

367:                                              ; preds = %365
  %368 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %361, i64 0, i32 1
  %369 = load i8, ptr %368, align 1, !tbaa !30
  %370 = icmp ult i8 %350, %369
  br i1 %370, label %2057, label %371

371:                                              ; preds = %367
  %372 = trunc i64 %329 to i32
  invoke void @_ZN6dealii2hp12FEFaceValuesILi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjjj(ptr noundef nonnull align 8 dereferenceable(240) %17, ptr noundef nonnull align 8 dereferenceable(24) %25, i32 noundef %372, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %373 unwind label %646

373:                                              ; preds = %371
  %374 = load ptr, ptr %160, align 8, !tbaa !577
  %375 = load i32, ptr %159, align 8, !tbaa !59
  %376 = load i32, ptr %161, align 8, !tbaa !59
  %377 = mul i32 %376, %375
  %378 = load i32, ptr %162, align 4, !tbaa !59
  %379 = add i32 %377, %378
  %380 = load i32, ptr %163, align 4, !tbaa !59
  %381 = mul i32 %379, %380
  %382 = load i32, ptr %164, align 8, !tbaa !59
  %383 = add i32 %381, %382
  %384 = zext i32 %383 to i64
  %385 = getelementptr inbounds %"class.boost::shared_ptr.447", ptr %374, i64 %384
  %386 = load ptr, ptr %385, align 8, !tbaa !579
  %387 = load ptr, ptr %144, align 8, !tbaa !325
  %388 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %387, i64 0, i32 3
  %389 = load ptr, ptr %388, align 8, !tbaa !336
  %390 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %387, i64 0, i32 4
  %391 = load i32, ptr %25, align 8, !tbaa !60
  %392 = sext i32 %391 to i64
  %393 = load ptr, ptr %390, align 8, !tbaa !350
  %394 = getelementptr inbounds ptr, ptr %393, i64 %392
  %395 = load ptr, ptr %394, align 8, !tbaa !33
  %396 = load i32, ptr %146, align 4, !tbaa !61
  %397 = sext i32 %396 to i64
  %398 = load ptr, ptr %395, align 8, !tbaa !144
  %399 = getelementptr inbounds i32, ptr %398, i64 %397
  %400 = load i32, ptr %399, align 4, !tbaa !59
  %401 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %389, i64 0, i32 1
  %402 = zext i32 %400 to i64
  %403 = load ptr, ptr %401, align 8, !tbaa !338
  %404 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %403, i64 %402
  %405 = load ptr, ptr %404, align 8, !tbaa !340
  %406 = getelementptr inbounds i8, ptr %405, i64 112
  %407 = load i32, ptr %406, align 8, !tbaa !141
  %408 = getelementptr inbounds i8, ptr %405, i64 108
  %409 = load i32, ptr %408, align 4, !tbaa !508
  %410 = zext i32 %407 to i64
  %411 = shl nuw i64 %410, 32
  %412 = or i64 %411, %410
  store i64 %412, ptr %165, align 4
  %413 = mul i32 %407, %407
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %420

415:                                              ; preds = %373
  %416 = load ptr, ptr %168, align 8, !tbaa !140
  %417 = icmp eq ptr %416, null
  br i1 %417, label %419, label %418

418:                                              ; preds = %415
  call void @_ZdaPv(ptr noundef nonnull %416) #21
  br label %419

419:                                              ; preds = %418, %415
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %168, i8 0, i64 20, i1 false)
  br label %442

420:                                              ; preds = %373
  %421 = load i32, ptr %167, align 8, !tbaa !348
  %422 = icmp ult i32 %421, %413
  %423 = load ptr, ptr %168, align 8, !tbaa !140
  br i1 %422, label %424, label %437

424:                                              ; preds = %420
  %425 = icmp eq ptr %423, null
  br i1 %425, label %430, label %426

426:                                              ; preds = %424
  call void @_ZdaPv(ptr noundef nonnull %423) #21
  %427 = load i32, ptr %165, align 4, !tbaa !59
  %428 = load i32, ptr %166, align 8, !tbaa !59
  %429 = mul i32 %428, %427
  br label %430

430:                                              ; preds = %426, %424
  %431 = phi i32 [ %429, %426 ], [ %413, %424 ]
  store i32 %413, ptr %167, align 8, !tbaa !348
  %432 = zext i32 %413 to i64
  %433 = shl nuw nsw i64 %432, 3
  %434 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %433) #20
          to label %435 unwind label %648

435:                                              ; preds = %430
  store ptr %434, ptr %168, align 8, !tbaa !140
  %436 = icmp eq i32 %431, 0
  br i1 %436, label %442, label %437

437:                                              ; preds = %435, %420
  %438 = phi ptr [ %434, %435 ], [ %423, %420 ]
  %439 = phi i32 [ %431, %435 ], [ %413, %420 ]
  %440 = zext i32 %439 to i64
  %441 = shl nuw nsw i64 %440, 3
  call void @llvm.memset.p0.i64(ptr align 8 %438, i8 0, i64 %441, i1 false), !tbaa !133
  br label %442

442:                                              ; preds = %437, %435, %419
  %443 = icmp eq i32 %407, 0
  br i1 %443, label %444, label %449

444:                                              ; preds = %442
  %445 = load ptr, ptr %170, align 8, !tbaa !136
  %446 = icmp eq ptr %445, null
  br i1 %446, label %448, label %447

447:                                              ; preds = %444
  call void @_ZdaPv(ptr noundef nonnull %445) #21
  br label %448

448:                                              ; preds = %447, %444
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %83, i8 0, i64 16, i1 false)
  br label %465

449:                                              ; preds = %442
  %450 = load i32, ptr %169, align 4, !tbaa !138
  %451 = icmp ult i32 %450, %407
  %452 = load ptr, ptr %170, align 8, !tbaa !136
  br i1 %451, label %455, label %453

453:                                              ; preds = %449
  %454 = shl nuw nsw i64 %410, 3
  br label %462

455:                                              ; preds = %449
  %456 = icmp eq ptr %452, null
  br i1 %456, label %458, label %457

457:                                              ; preds = %455
  call void @_ZdaPv(ptr noundef nonnull %452) #21
  br label %458

458:                                              ; preds = %457, %455
  %459 = shl nuw nsw i64 %410, 3
  %460 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %459) #20
          to label %461 unwind label %648

461:                                              ; preds = %458
  store ptr %460, ptr %170, align 8, !tbaa !136
  store i32 %407, ptr %169, align 4, !tbaa !138
  br label %462

462:                                              ; preds = %453, %461
  %463 = phi i64 [ %454, %453 ], [ %459, %461 ]
  %464 = phi ptr [ %452, %453 ], [ %460, %461 ]
  store i32 %407, ptr %83, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr align 8 %464, i8 0, i64 %463, i1 false), !tbaa !133
  br label %465

465:                                              ; preds = %462, %448
  %466 = phi ptr [ %464, %462 ], [ null, %448 ]
  %467 = load i32, ptr %165, align 4, !tbaa !59
  %468 = load i32, ptr %166, align 8, !tbaa !59
  %469 = mul i32 %468, %467
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %475, label %471

471:                                              ; preds = %465
  %472 = load ptr, ptr %168, align 8, !tbaa !140
  %473 = zext i32 %469 to i64
  %474 = shl nuw nsw i64 %473, 3
  call void @llvm.memset.p0.i64(ptr align 8 %472, i8 0, i64 %474, i1 false), !tbaa !133
  br label %475

475:                                              ; preds = %471, %465
  %476 = icmp eq i32 %407, 0
  br i1 %476, label %480, label %477

477:                                              ; preds = %475
  %478 = zext i32 %407 to i64
  %479 = shl nuw nsw i64 %478, 3
  call void @llvm.memset.p0.i64(ptr align 8 %466, i8 0, i64 %479, i1 false), !tbaa !133
  br label %480

480:                                              ; preds = %477, %475
  %481 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 2
  %482 = load i32, ptr %481, align 4, !tbaa !127
  br i1 %47, label %1188, label %483

483:                                              ; preds = %480
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %26)
          to label %484 unwind label %648

484:                                              ; preds = %483
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %26, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %171, i8 0, i64 16, i1 false)
  br i1 %172, label %493, label %485

485:                                              ; preds = %484
  %486 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %174) #20
          to label %487 unwind label %488

487:                                              ; preds = %485
  store ptr %486, ptr %175, align 8, !tbaa !136
  store i32 %46, ptr %176, align 4, !tbaa !138
  store i32 %46, ptr %171, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %486, i8 0, i64 %174, i1 false), !tbaa !133
  br label %493

488:                                              ; preds = %485
  %489 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %26)
          to label %2155 unwind label %490

490:                                              ; preds = %488
  %491 = landingpad { ptr, i32 }
          catch ptr null
  %492 = extractvalue { ptr, i32 } %491, 0
  call void @__clang_call_terminate(ptr %492) #22
  unreachable

493:                                              ; preds = %487, %484
  %494 = zext i32 %482 to i64
  %495 = load ptr, ptr %177, align 8, !tbaa !33
  %496 = load ptr, ptr %21, align 8, !tbaa !224
  %497 = ptrtoint ptr %495 to i64
  %498 = ptrtoint ptr %496 to i64
  %499 = sub i64 %497, %498
  %500 = sdiv exact i64 %499, 88
  %501 = icmp ult i64 %500, %494
  br i1 %501, label %502, label %504

502:                                              ; preds = %493
  %503 = sub nsw i64 %494, %500
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %21, ptr %495, i64 noundef %503, ptr noundef nonnull align 8 dereferenceable(88) %26)
          to label %517 unwind label %652

504:                                              ; preds = %493
  %505 = icmp ugt i64 %500, %494
  br i1 %505, label %506, label %517

506:                                              ; preds = %504
  %507 = getelementptr inbounds %"class.dealii::Vector", ptr %496, i64 %494
  %508 = icmp eq ptr %495, %507
  br i1 %508, label %517, label %509

509:                                              ; preds = %506, %513
  %510 = phi ptr [ %514, %513 ], [ %507, %506 ]
  %511 = load ptr, ptr %510, align 8, !tbaa !41
  %512 = load ptr, ptr %511, align 8
  invoke void %512(ptr noundef nonnull align 8 dereferenceable(88) %510)
          to label %513 unwind label %650

513:                                              ; preds = %509
  %514 = getelementptr inbounds %"class.dealii::Vector", ptr %510, i64 1
  %515 = icmp eq ptr %514, %495
  br i1 %515, label %516, label %509

516:                                              ; preds = %513
  store ptr %507, ptr %177, align 8, !tbaa !226
  br label %517

517:                                              ; preds = %516, %506, %504, %502
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %26, align 8, !tbaa !41
  %518 = load ptr, ptr %175, align 8, !tbaa !136
  %519 = icmp eq ptr %518, null
  br i1 %519, label %521, label %520

520:                                              ; preds = %517
  call void @_ZdaPv(ptr noundef nonnull %518) #21
  store ptr null, ptr %175, align 8, !tbaa !136
  br label %521

521:                                              ; preds = %520, %517
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %26)
          to label %522 unwind label %648

522:                                              ; preds = %521
  %523 = load ptr, ptr %156, align 8, !tbaa !62, !noalias !581
  %524 = getelementptr inbounds %"class.dealii::Triangulation", ptr %523, i64 0, i32 1
  %525 = load i32, ptr %25, align 8, !tbaa !60, !noalias !581
  %526 = sext i32 %525 to i64
  %527 = load ptr, ptr %524, align 8, !tbaa !46, !noalias !581
  %528 = getelementptr inbounds ptr, ptr %527, i64 %526
  %529 = load ptr, ptr %528, align 8, !tbaa !33, !noalias !581
  %530 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %529, i64 0, i32 4
  %531 = load i32, ptr %146, align 4, !tbaa !61, !noalias !581
  %532 = sext i32 %531 to i64
  %533 = load ptr, ptr %530, align 8, !tbaa !50, !noalias !581
  %534 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %533, i64 %532
  %535 = getelementptr inbounds [6 x i32], ptr %534, i64 0, i64 %329
  %536 = load i32, ptr %535, align 4, !tbaa !59, !noalias !581
  %537 = getelementptr inbounds %"class.dealii::Triangulation", ptr %523, i64 0, i32 2
  %538 = load ptr, ptr %537, align 8, !tbaa !514
  %539 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.329", ptr %538, i64 0, i32 5
  %540 = sext i32 %536 to i64
  %541 = load ptr, ptr %539, align 8, !tbaa !526
  %542 = getelementptr inbounds i8, ptr %541, i64 %540
  %543 = load i8, ptr %542, align 1, !tbaa !30
  %544 = load ptr, ptr %157, align 8, !tbaa !528
  %545 = icmp eq ptr %544, null
  br i1 %545, label %565, label %546

546:                                              ; preds = %522, %546
  %547 = phi ptr [ %556, %546 ], [ %544, %522 ]
  %548 = phi ptr [ %554, %546 ], [ %158, %522 ]
  %549 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %547, i64 0, i32 1
  %550 = load i8, ptr %549, align 1, !tbaa !30
  %551 = icmp ult i8 %550, %543
  %552 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %547, i64 0, i32 3
  %553 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %547, i64 0, i32 2
  %554 = select i1 %551, ptr %548, ptr %547
  %555 = select i1 %551, ptr %552, ptr %553
  %556 = load ptr, ptr %555, align 8, !tbaa !33
  %557 = icmp eq ptr %556, null
  br i1 %557, label %558, label %546

558:                                              ; preds = %546
  %559 = icmp eq ptr %554, %158
  br i1 %559, label %565, label %560

560:                                              ; preds = %558
  %561 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %554, i64 0, i32 1
  %562 = load i8, ptr %561, align 1, !tbaa !30
  %563 = icmp ult i8 %543, %562
  %564 = select i1 %563, ptr %158, ptr %554
  br label %565

565:                                              ; preds = %522, %558, %560
  %566 = phi ptr [ %158, %558 ], [ %158, %522 ], [ %564, %560 ]
  %567 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %566, i64 0, i32 1, i32 1
  %568 = load ptr, ptr %567, align 8, !tbaa !506
  %569 = getelementptr inbounds i8, ptr %386, i64 312
  %570 = load ptr, ptr %568, align 8, !tbaa !41
  %571 = getelementptr inbounds ptr, ptr %570, i64 7
  %572 = load ptr, ptr %571, align 8
  invoke void %572(ptr noundef nonnull align 8 dereferenceable(92) %568, ptr noundef nonnull align 8 dereferenceable(24) %569, ptr noundef nonnull align 8 dereferenceable(24) %21)
          to label %573 unwind label %656

573:                                              ; preds = %565
  br i1 %178, label %574, label %601

574:                                              ; preds = %573
  %575 = load i32, ptr %481, align 4, !tbaa !127
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %1773, label %577

577:                                              ; preds = %574
  %578 = getelementptr inbounds i8, ptr %386, i64 216
  %579 = load ptr, ptr %578, align 8, !tbaa !131
  %580 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 3
  %581 = load i32, ptr %580, align 8, !tbaa !65
  %582 = icmp eq i32 %581, 0
  %583 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 6
  %584 = getelementptr inbounds i8, ptr %386, i64 480
  %585 = getelementptr inbounds i8, ptr %386, i64 144
  %586 = getelementptr inbounds i8, ptr %386, i64 160
  %587 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %405, i64 0, i32 12
  %588 = load ptr, ptr %21, align 8
  %589 = load ptr, ptr %170, align 8
  %590 = zext i32 %575 to i64
  %591 = zext i32 %581 to i64
  %592 = zext i32 %581 to i64
  %593 = add nsw i64 %591, -1
  %594 = shl nuw nsw i64 %591, 3
  %595 = icmp ult i32 %581, 28
  %596 = trunc i64 %593 to i32
  %597 = icmp ugt i64 %593, 4294967295
  %598 = trunc i64 %593 to i32
  %599 = and i64 %591, 4294967292
  %600 = icmp eq i64 %599, %591
  br label %997

601:                                              ; preds = %573
  %602 = load i32, ptr %179, align 8, !tbaa !145
  %603 = icmp eq i32 %602, 1
  %604 = load i32, ptr %481, align 4, !tbaa !127
  br i1 %603, label %605, label %792

605:                                              ; preds = %601
  %606 = zext i32 %604 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14)
  store double 0.000000e+00, ptr %14, align 8, !tbaa !133
  %607 = load ptr, ptr %187, align 8, !tbaa !33
  %608 = load ptr, ptr %18, align 8, !tbaa !131
  %609 = ptrtoint ptr %607 to i64
  %610 = ptrtoint ptr %608 to i64
  %611 = sub i64 %609, %610
  %612 = ashr exact i64 %611, 3
  %613 = icmp ult i64 %612, %606
  br i1 %613, label %614, label %616

614:                                              ; preds = %605
  %615 = sub nsw i64 %606, %612
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr %607, i64 noundef %615, ptr noundef nonnull align 8 dereferenceable(8) %14)
          to label %622 unwind label %648

616:                                              ; preds = %605
  %617 = icmp ugt i64 %612, %606
  br i1 %617, label %618, label %622

618:                                              ; preds = %616
  %619 = getelementptr inbounds double, ptr %608, i64 %606
  %620 = icmp eq ptr %607, %619
  br i1 %620, label %622, label %621

621:                                              ; preds = %618
  store ptr %619, ptr %187, align 8, !tbaa !135
  br label %622

622:                                              ; preds = %621, %618, %616, %614
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14)
  %623 = load ptr, ptr %5, align 8, !tbaa !41
  %624 = getelementptr inbounds ptr, ptr %623, i64 6
  %625 = load ptr, ptr %624, align 8
  invoke void %625(ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(24) %569, ptr noundef nonnull align 8 dereferenceable(24) %18, i32 noundef 0)
          to label %626 unwind label %648

626:                                              ; preds = %622
  %627 = load i32, ptr %481, align 4, !tbaa !127
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %1773, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds i8, ptr %386, i64 216
  %631 = load ptr, ptr %630, align 8, !tbaa !131
  %632 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 3
  %633 = load i32, ptr %632, align 8, !tbaa !65
  %634 = icmp eq i32 %633, 0
  %635 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 6
  %636 = getelementptr inbounds i8, ptr %386, i64 480
  %637 = getelementptr inbounds i8, ptr %386, i64 144
  %638 = getelementptr inbounds i8, ptr %386, i64 160
  %639 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %405, i64 0, i32 12
  %640 = load ptr, ptr %21, align 8
  %641 = load ptr, ptr %6, align 8
  %642 = load ptr, ptr %170, align 8
  %643 = zext i32 %627 to i64
  %644 = zext i32 %633 to i64
  %645 = zext i32 %633 to i64
  br label %658

646:                                              ; preds = %371
  %647 = landingpad { ptr, i32 }
          cleanup
  br label %2155

648:                                              ; preds = %1823, %1821, %1798, %1781, %1302, %1197, %830, %792, %614, %521, %483, %458, %430, %1310, %831, %622
  %649 = landingpad { ptr, i32 }
          cleanup
  br label %2155

650:                                              ; preds = %509
  %651 = landingpad { ptr, i32 }
          cleanup
  br label %654

652:                                              ; preds = %502
  %653 = landingpad { ptr, i32 }
          cleanup
  br label %654

654:                                              ; preds = %652, %650
  %655 = phi { ptr, i32 } [ %651, %650 ], [ %653, %652 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %26)
          to label %2155 unwind label %2263

656:                                              ; preds = %565
  %657 = landingpad { ptr, i32 }
          cleanup
  br label %2155

658:                                              ; preds = %629, %735
  %659 = phi i64 [ 0, %629 ], [ %736, %735 ]
  %660 = getelementptr inbounds double, ptr %631, i64 %659
  %661 = load double, ptr %660, align 8, !tbaa !133
  br i1 %634, label %735, label %662

662:                                              ; preds = %658
  %663 = load ptr, ptr %635, align 8, !tbaa !63
  %664 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %663, i64 0, i32 2
  %665 = load i8, ptr %664, align 4, !tbaa !148, !range !182, !noundef !183
  %666 = icmp eq i8 %665, 0
  %667 = load ptr, ptr %637, align 8, !tbaa !140
  %668 = load i32, ptr %638, align 8, !tbaa !59
  %669 = load ptr, ptr %639, align 8, !tbaa !184
  %670 = getelementptr inbounds %"class.dealii::Vector", ptr %640, i64 %659, i32 3
  %671 = load ptr, ptr %670, align 8, !tbaa !136
  br i1 %666, label %674, label %672

672:                                              ; preds = %662
  %673 = trunc i64 %659 to i32
  br label %738

674:                                              ; preds = %662
  %675 = load ptr, ptr %636, align 8, !tbaa !144
  %676 = trunc i64 %659 to i32
  br label %677

677:                                              ; preds = %721, %674
  %678 = phi i64 [ %733, %721 ], [ 0, %674 ]
  %679 = getelementptr inbounds i32, ptr %675, i64 %678
  %680 = load i32, ptr %679, align 4, !tbaa !59
  %681 = mul i32 %668, %680
  %682 = add i32 %681, %676
  %683 = zext i32 %682 to i64
  %684 = getelementptr inbounds double, ptr %667, i64 %683
  %685 = load double, ptr %684, align 8, !tbaa !133
  %686 = getelementptr inbounds %"struct.std::pair.263", ptr %669, i64 %678
  %687 = load ptr, ptr %18, align 8
  %688 = getelementptr inbounds double, ptr %687, i64 %659
  %689 = load ptr, ptr %168, align 8
  %690 = load i32, ptr %166, align 8
  %691 = trunc i64 %678 to i32
  %692 = mul i32 %690, %691
  br label %693

693:                                              ; preds = %718, %677
  %694 = phi i64 [ %719, %718 ], [ 0, %677 ]
  %695 = load i64, ptr %686, align 4
  %696 = getelementptr inbounds %"struct.std::pair.263", ptr %669, i64 %694
  %697 = load i64, ptr %696, align 4
  %698 = trunc i64 %695 to i32
  %699 = trunc i64 %697 to i32
  %700 = icmp eq i32 %698, %699
  br i1 %700, label %701, label %718

701:                                              ; preds = %693
  %702 = getelementptr inbounds i32, ptr %675, i64 %694
  %703 = load i32, ptr %702, align 4, !tbaa !59
  %704 = mul i32 %703, %668
  %705 = add i32 %704, %676
  %706 = zext i32 %705 to i64
  %707 = getelementptr inbounds double, ptr %667, i64 %706
  %708 = load double, ptr %707, align 8, !tbaa !133
  %709 = fmul double %685, %708
  %710 = fmul double %661, %709
  %711 = load double, ptr %688, align 8, !tbaa !133
  %712 = trunc i64 %694 to i32
  %713 = add i32 %692, %712
  %714 = zext i32 %713 to i64
  %715 = getelementptr inbounds double, ptr %689, i64 %714
  %716 = load double, ptr %715, align 8, !tbaa !133
  %717 = call double @llvm.fmuladd.f64(double %710, double %711, double %716)
  store double %717, ptr %715, align 8, !tbaa !133
  br label %718

718:                                              ; preds = %701, %693
  %719 = add nuw nsw i64 %694, 1
  %720 = icmp eq i64 %719, %645
  br i1 %720, label %721, label %693

721:                                              ; preds = %718
  %722 = load i64, ptr %686, align 4
  %723 = and i64 %722, 4294967295
  %724 = getelementptr inbounds i32, ptr %641, i64 %723
  %725 = load i32, ptr %724, align 4, !tbaa !59
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds double, ptr %671, i64 %726
  %728 = load double, ptr %727, align 8, !tbaa !133
  %729 = fmul double %685, %728
  %730 = getelementptr inbounds double, ptr %642, i64 %678
  %731 = load double, ptr %730, align 8, !tbaa !133
  %732 = call double @llvm.fmuladd.f64(double %729, double %661, double %731)
  store double %732, ptr %730, align 8, !tbaa !133
  %733 = add nuw nsw i64 %678, 1
  %734 = icmp eq i64 %733, %645
  br i1 %734, label %735, label %677

735:                                              ; preds = %778, %721, %658
  %736 = add nuw nsw i64 %659, 1
  %737 = icmp eq i64 %736, %643
  br i1 %737, label %1773, label %658

738:                                              ; preds = %672, %778
  %739 = phi i64 [ 0, %672 ], [ %790, %778 ]
  %740 = trunc i64 %739 to i32
  %741 = mul i32 %668, %740
  %742 = add i32 %741, %673
  %743 = zext i32 %742 to i64
  %744 = getelementptr inbounds double, ptr %667, i64 %743
  %745 = load double, ptr %744, align 8, !tbaa !133
  %746 = getelementptr inbounds %"struct.std::pair.263", ptr %669, i64 %739
  %747 = load ptr, ptr %18, align 8
  %748 = getelementptr inbounds double, ptr %747, i64 %659
  %749 = load ptr, ptr %168, align 8
  %750 = load i32, ptr %166, align 8
  %751 = mul i32 %750, %740
  br label %752

752:                                              ; preds = %738, %775
  %753 = phi i64 [ 0, %738 ], [ %776, %775 ]
  %754 = load i64, ptr %746, align 4
  %755 = getelementptr inbounds %"struct.std::pair.263", ptr %669, i64 %753
  %756 = load i64, ptr %755, align 4
  %757 = trunc i64 %754 to i32
  %758 = trunc i64 %756 to i32
  %759 = icmp eq i32 %757, %758
  br i1 %759, label %760, label %775

760:                                              ; preds = %752
  %761 = trunc i64 %753 to i32
  %762 = mul i32 %668, %761
  %763 = add i32 %762, %673
  %764 = zext i32 %763 to i64
  %765 = getelementptr inbounds double, ptr %667, i64 %764
  %766 = load double, ptr %765, align 8, !tbaa !133
  %767 = fmul double %745, %766
  %768 = fmul double %661, %767
  %769 = load double, ptr %748, align 8, !tbaa !133
  %770 = add i32 %751, %761
  %771 = zext i32 %770 to i64
  %772 = getelementptr inbounds double, ptr %749, i64 %771
  %773 = load double, ptr %772, align 8, !tbaa !133
  %774 = call double @llvm.fmuladd.f64(double %768, double %769, double %773)
  store double %774, ptr %772, align 8, !tbaa !133
  br label %775

775:                                              ; preds = %760, %752
  %776 = add nuw nsw i64 %753, 1
  %777 = icmp eq i64 %776, %644
  br i1 %777, label %778, label %752

778:                                              ; preds = %775
  %779 = load i64, ptr %746, align 4
  %780 = and i64 %779, 4294967295
  %781 = getelementptr inbounds i32, ptr %641, i64 %780
  %782 = load i32, ptr %781, align 4, !tbaa !59
  %783 = zext i32 %782 to i64
  %784 = getelementptr inbounds double, ptr %671, i64 %783
  %785 = load double, ptr %784, align 8, !tbaa !133
  %786 = fmul double %745, %785
  %787 = getelementptr inbounds double, ptr %642, i64 %739
  %788 = load double, ptr %787, align 8, !tbaa !133
  %789 = call double @llvm.fmuladd.f64(double %786, double %661, double %788)
  store double %789, ptr %787, align 8, !tbaa !133
  %790 = add nuw nsw i64 %739, 1
  %791 = icmp eq i64 %790, %644
  br i1 %791, label %735, label %738

792:                                              ; preds = %601
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %27)
          to label %793 unwind label %648

793:                                              ; preds = %792
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %27, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %180, i8 0, i64 16, i1 false)
  br i1 %181, label %802, label %794

794:                                              ; preds = %793
  %795 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %183) #20
          to label %796 unwind label %797

796:                                              ; preds = %794
  store ptr %795, ptr %184, align 8, !tbaa !136
  store i32 %40, ptr %185, align 4, !tbaa !138
  store i32 %40, ptr %180, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %795, i8 0, i64 %183, i1 false), !tbaa !133
  br label %802

797:                                              ; preds = %794
  %798 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %27)
          to label %2155 unwind label %799

799:                                              ; preds = %797
  %800 = landingpad { ptr, i32 }
          catch ptr null
  %801 = extractvalue { ptr, i32 } %800, 0
  call void @__clang_call_terminate(ptr %801) #22
  unreachable

802:                                              ; preds = %796, %793
  %803 = zext i32 %604 to i64
  %804 = load ptr, ptr %186, align 8, !tbaa !33
  %805 = load ptr, ptr %19, align 8, !tbaa !224
  %806 = ptrtoint ptr %804 to i64
  %807 = ptrtoint ptr %805 to i64
  %808 = sub i64 %806, %807
  %809 = sdiv exact i64 %808, 88
  %810 = icmp ult i64 %809, %803
  br i1 %810, label %811, label %813

811:                                              ; preds = %802
  %812 = sub nsw i64 %803, %809
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr %804, i64 noundef %812, ptr noundef nonnull align 8 dereferenceable(88) %27)
          to label %826 unwind label %857

813:                                              ; preds = %802
  %814 = icmp ugt i64 %809, %803
  br i1 %814, label %815, label %826

815:                                              ; preds = %813
  %816 = getelementptr inbounds %"class.dealii::Vector", ptr %805, i64 %803
  %817 = icmp eq ptr %804, %816
  br i1 %817, label %826, label %818

818:                                              ; preds = %815, %822
  %819 = phi ptr [ %823, %822 ], [ %816, %815 ]
  %820 = load ptr, ptr %819, align 8, !tbaa !41
  %821 = load ptr, ptr %820, align 8
  invoke void %821(ptr noundef nonnull align 8 dereferenceable(88) %819)
          to label %822 unwind label %855

822:                                              ; preds = %818
  %823 = getelementptr inbounds %"class.dealii::Vector", ptr %819, i64 1
  %824 = icmp eq ptr %823, %804
  br i1 %824, label %825, label %818

825:                                              ; preds = %822
  store ptr %816, ptr %186, align 8, !tbaa !226
  br label %826

826:                                              ; preds = %825, %815, %813, %811
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %27, align 8, !tbaa !41
  %827 = load ptr, ptr %184, align 8, !tbaa !136
  %828 = icmp eq ptr %827, null
  br i1 %828, label %830, label %829

829:                                              ; preds = %826
  call void @_ZdaPv(ptr noundef nonnull %827) #21
  store ptr null, ptr %184, align 8, !tbaa !136
  br label %830

830:                                              ; preds = %829, %826
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %27)
          to label %831 unwind label %648

831:                                              ; preds = %830
  %832 = load ptr, ptr %5, align 8, !tbaa !41
  %833 = getelementptr inbounds ptr, ptr %832, i64 7
  %834 = load ptr, ptr %833, align 8
  invoke void %834(ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(24) %569, ptr noundef nonnull align 8 dereferenceable(24) %19)
          to label %835 unwind label %648

835:                                              ; preds = %831
  %836 = load i32, ptr %481, align 4, !tbaa !127
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %1773, label %838

838:                                              ; preds = %835
  %839 = getelementptr inbounds i8, ptr %386, i64 216
  %840 = load ptr, ptr %839, align 8, !tbaa !131
  %841 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 3
  %842 = load i32, ptr %841, align 8, !tbaa !65
  %843 = icmp eq i32 %842, 0
  %844 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 6
  %845 = getelementptr inbounds i8, ptr %386, i64 480
  %846 = getelementptr inbounds i8, ptr %386, i64 144
  %847 = getelementptr inbounds i8, ptr %386, i64 160
  %848 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %405, i64 0, i32 12
  %849 = load ptr, ptr %21, align 8
  %850 = load ptr, ptr %6, align 8
  %851 = load ptr, ptr %170, align 8
  %852 = zext i32 %836 to i64
  %853 = zext i32 %842 to i64
  %854 = zext i32 %842 to i64
  br label %861

855:                                              ; preds = %818
  %856 = landingpad { ptr, i32 }
          cleanup
  br label %859

857:                                              ; preds = %811
  %858 = landingpad { ptr, i32 }
          cleanup
  br label %859

859:                                              ; preds = %857, %855
  %860 = phi { ptr, i32 } [ %856, %855 ], [ %858, %857 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %27)
          to label %2155 unwind label %2263

861:                                              ; preds = %838, %939
  %862 = phi i64 [ 0, %838 ], [ %940, %939 ]
  %863 = getelementptr inbounds double, ptr %840, i64 %862
  %864 = load double, ptr %863, align 8, !tbaa !133
  br i1 %843, label %939, label %865

865:                                              ; preds = %861
  %866 = load ptr, ptr %844, align 8, !tbaa !63
  %867 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %866, i64 0, i32 2
  %868 = load i8, ptr %867, align 4, !tbaa !148, !range !182, !noundef !183
  %869 = icmp eq i8 %868, 0
  %870 = load ptr, ptr %846, align 8, !tbaa !140
  %871 = load i32, ptr %847, align 8, !tbaa !59
  %872 = load ptr, ptr %848, align 8, !tbaa !184
  %873 = getelementptr inbounds %"class.dealii::Vector", ptr %849, i64 %862, i32 3
  %874 = load ptr, ptr %873, align 8, !tbaa !136
  br i1 %869, label %877, label %875

875:                                              ; preds = %865
  %876 = trunc i64 %862 to i32
  br label %942

877:                                              ; preds = %865
  %878 = load ptr, ptr %845, align 8, !tbaa !144
  %879 = trunc i64 %862 to i32
  br label %880

880:                                              ; preds = %927, %877
  %881 = phi i64 [ %937, %927 ], [ 0, %877 ]
  %882 = getelementptr inbounds i32, ptr %878, i64 %881
  %883 = load i32, ptr %882, align 4, !tbaa !59
  %884 = mul i32 %871, %883
  %885 = add i32 %884, %879
  %886 = zext i32 %885 to i64
  %887 = getelementptr inbounds double, ptr %870, i64 %886
  %888 = load double, ptr %887, align 8, !tbaa !133
  %889 = getelementptr inbounds %"struct.std::pair.263", ptr %872, i64 %881
  %890 = load i64, ptr %889, align 4
  %891 = trunc i64 %890 to i32
  %892 = load ptr, ptr %19, align 8
  %893 = getelementptr inbounds %"class.dealii::Vector", ptr %892, i64 %862, i32 3
  %894 = and i64 %890, 4294967295
  %895 = load ptr, ptr %168, align 8
  %896 = load i32, ptr %166, align 8
  %897 = trunc i64 %881 to i32
  %898 = mul i32 %896, %897
  br label %899

899:                                              ; preds = %924, %880
  %900 = phi i64 [ %925, %924 ], [ 0, %880 ]
  %901 = getelementptr inbounds %"struct.std::pair.263", ptr %872, i64 %900
  %902 = load i64, ptr %901, align 4
  %903 = trunc i64 %902 to i32
  %904 = icmp eq i32 %903, %891
  br i1 %904, label %905, label %924

905:                                              ; preds = %899
  %906 = getelementptr inbounds i32, ptr %878, i64 %900
  %907 = load i32, ptr %906, align 4, !tbaa !59
  %908 = mul i32 %907, %871
  %909 = add i32 %908, %879
  %910 = zext i32 %909 to i64
  %911 = getelementptr inbounds double, ptr %870, i64 %910
  %912 = load double, ptr %911, align 8, !tbaa !133
  %913 = fmul double %888, %912
  %914 = fmul double %864, %913
  %915 = load ptr, ptr %893, align 8, !tbaa !136
  %916 = getelementptr inbounds double, ptr %915, i64 %894
  %917 = load double, ptr %916, align 8, !tbaa !133
  %918 = trunc i64 %900 to i32
  %919 = add i32 %898, %918
  %920 = zext i32 %919 to i64
  %921 = getelementptr inbounds double, ptr %895, i64 %920
  %922 = load double, ptr %921, align 8, !tbaa !133
  %923 = call double @llvm.fmuladd.f64(double %914, double %917, double %922)
  store double %923, ptr %921, align 8, !tbaa !133
  br label %924

924:                                              ; preds = %905, %899
  %925 = add nuw nsw i64 %900, 1
  %926 = icmp eq i64 %925, %854
  br i1 %926, label %927, label %899

927:                                              ; preds = %924
  %928 = getelementptr inbounds i32, ptr %850, i64 %894
  %929 = load i32, ptr %928, align 4, !tbaa !59
  %930 = zext i32 %929 to i64
  %931 = getelementptr inbounds double, ptr %874, i64 %930
  %932 = load double, ptr %931, align 8, !tbaa !133
  %933 = fmul double %888, %932
  %934 = getelementptr inbounds double, ptr %851, i64 %881
  %935 = load double, ptr %934, align 8, !tbaa !133
  %936 = call double @llvm.fmuladd.f64(double %933, double %864, double %935)
  store double %936, ptr %934, align 8, !tbaa !133
  %937 = add nuw nsw i64 %881, 1
  %938 = icmp eq i64 %937, %854
  br i1 %938, label %939, label %880

939:                                              ; preds = %959, %927, %861
  %940 = add nuw nsw i64 %862, 1
  %941 = icmp eq i64 %940, %852
  br i1 %941, label %1773, label %861

942:                                              ; preds = %875, %959
  %943 = phi i64 [ 0, %875 ], [ %969, %959 ]
  %944 = trunc i64 %943 to i32
  %945 = mul i32 %871, %944
  %946 = add i32 %945, %876
  %947 = zext i32 %946 to i64
  %948 = getelementptr inbounds double, ptr %870, i64 %947
  %949 = load double, ptr %948, align 8, !tbaa !133
  %950 = getelementptr inbounds %"struct.std::pair.263", ptr %872, i64 %943
  %951 = load i64, ptr %950, align 4
  %952 = trunc i64 %951 to i32
  %953 = load ptr, ptr %19, align 8
  %954 = getelementptr inbounds %"class.dealii::Vector", ptr %953, i64 %862, i32 3
  %955 = and i64 %951, 4294967295
  %956 = load ptr, ptr %168, align 8
  %957 = load i32, ptr %166, align 8
  %958 = mul i32 %957, %944
  br label %971

959:                                              ; preds = %994
  %960 = getelementptr inbounds i32, ptr %850, i64 %955
  %961 = load i32, ptr %960, align 4, !tbaa !59
  %962 = zext i32 %961 to i64
  %963 = getelementptr inbounds double, ptr %874, i64 %962
  %964 = load double, ptr %963, align 8, !tbaa !133
  %965 = fmul double %949, %964
  %966 = getelementptr inbounds double, ptr %851, i64 %943
  %967 = load double, ptr %966, align 8, !tbaa !133
  %968 = call double @llvm.fmuladd.f64(double %965, double %864, double %967)
  store double %968, ptr %966, align 8, !tbaa !133
  %969 = add nuw nsw i64 %943, 1
  %970 = icmp eq i64 %969, %853
  br i1 %970, label %939, label %942

971:                                              ; preds = %942, %994
  %972 = phi i64 [ 0, %942 ], [ %995, %994 ]
  %973 = getelementptr inbounds %"struct.std::pair.263", ptr %872, i64 %972
  %974 = load i64, ptr %973, align 4
  %975 = trunc i64 %974 to i32
  %976 = icmp eq i32 %975, %952
  br i1 %976, label %977, label %994

977:                                              ; preds = %971
  %978 = trunc i64 %972 to i32
  %979 = mul i32 %871, %978
  %980 = add i32 %979, %876
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds double, ptr %870, i64 %981
  %983 = load double, ptr %982, align 8, !tbaa !133
  %984 = fmul double %949, %983
  %985 = fmul double %864, %984
  %986 = load ptr, ptr %954, align 8, !tbaa !136
  %987 = getelementptr inbounds double, ptr %986, i64 %955
  %988 = load double, ptr %987, align 8, !tbaa !133
  %989 = add i32 %958, %978
  %990 = zext i32 %989 to i64
  %991 = getelementptr inbounds double, ptr %956, i64 %990
  %992 = load double, ptr %991, align 8, !tbaa !133
  %993 = call double @llvm.fmuladd.f64(double %985, double %988, double %992)
  store double %993, ptr %991, align 8, !tbaa !133
  br label %994

994:                                              ; preds = %977, %971
  %995 = add nuw nsw i64 %972, 1
  %996 = icmp eq i64 %995, %853
  br i1 %996, label %959, label %971

997:                                              ; preds = %577, %1078
  %998 = phi i64 [ 0, %577 ], [ %1079, %1078 ]
  %999 = shl nuw nsw i64 %998, 3
  %1000 = add nuw i64 %594, %999
  %1001 = trunc i64 %998 to i32
  %1002 = getelementptr inbounds double, ptr %579, i64 %998
  %1003 = load double, ptr %1002, align 8, !tbaa !133
  br i1 %582, label %1078, label %1004

1004:                                             ; preds = %997
  %1005 = load ptr, ptr %583, align 8, !tbaa !63
  %1006 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1005, i64 0, i32 2
  %1007 = load i8, ptr %1006, align 4, !tbaa !148, !range !182, !noundef !183
  %1008 = icmp eq i8 %1007, 0
  %1009 = load ptr, ptr %585, align 8, !tbaa !140
  %1010 = load i32, ptr %586, align 8, !tbaa !59
  %1011 = load ptr, ptr %587, align 8, !tbaa !184
  %1012 = getelementptr inbounds %"class.dealii::Vector", ptr %588, i64 %998, i32 3
  %1013 = load ptr, ptr %1012, align 8, !tbaa !136
  br i1 %1008, label %1024, label %1014

1014:                                             ; preds = %1004
  %1015 = trunc i64 %998 to i32
  %1016 = getelementptr i8, ptr %1011, i64 %594
  %1017 = getelementptr i8, ptr %1009, i64 %999
  %1018 = getelementptr i8, ptr %1009, i64 %1000
  %1019 = icmp ne i32 %1010, 1
  %1020 = xor i32 %1001, -1
  %1021 = icmp ult i32 %1020, %598
  %1022 = insertelement <4 x double> poison, double %1003, i64 0
  %1023 = shufflevector <4 x double> %1022, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1081

1024:                                             ; preds = %1004
  %1025 = load ptr, ptr %584, align 8, !tbaa !144
  %1026 = trunc i64 %998 to i32
  br label %1027

1027:                                             ; preds = %1067, %1024
  %1028 = phi i64 [ %1076, %1067 ], [ 0, %1024 ]
  %1029 = getelementptr inbounds i32, ptr %1025, i64 %1028
  %1030 = load i32, ptr %1029, align 4, !tbaa !59
  %1031 = mul i32 %1010, %1030
  %1032 = add i32 %1031, %1026
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds double, ptr %1009, i64 %1033
  %1035 = load double, ptr %1034, align 8, !tbaa !133
  %1036 = getelementptr inbounds %"struct.std::pair.263", ptr %1011, i64 %1028
  %1037 = load ptr, ptr %168, align 8
  %1038 = load i32, ptr %166, align 8
  %1039 = trunc i64 %1028 to i32
  %1040 = mul i32 %1038, %1039
  br label %1041

1041:                                             ; preds = %1064, %1027
  %1042 = phi i64 [ %1065, %1064 ], [ 0, %1027 ]
  %1043 = load i64, ptr %1036, align 4
  %1044 = getelementptr inbounds %"struct.std::pair.263", ptr %1011, i64 %1042
  %1045 = load i64, ptr %1044, align 4
  %1046 = trunc i64 %1043 to i32
  %1047 = trunc i64 %1045 to i32
  %1048 = icmp eq i32 %1046, %1047
  br i1 %1048, label %1049, label %1064

1049:                                             ; preds = %1041
  %1050 = getelementptr inbounds i32, ptr %1025, i64 %1042
  %1051 = load i32, ptr %1050, align 4, !tbaa !59
  %1052 = mul i32 %1051, %1010
  %1053 = add i32 %1052, %1026
  %1054 = zext i32 %1053 to i64
  %1055 = getelementptr inbounds double, ptr %1009, i64 %1054
  %1056 = load double, ptr %1055, align 8, !tbaa !133
  %1057 = fmul double %1035, %1056
  %1058 = trunc i64 %1042 to i32
  %1059 = add i32 %1040, %1058
  %1060 = zext i32 %1059 to i64
  %1061 = getelementptr inbounds double, ptr %1037, i64 %1060
  %1062 = load double, ptr %1061, align 8, !tbaa !133
  %1063 = call double @llvm.fmuladd.f64(double %1057, double %1003, double %1062)
  store double %1063, ptr %1061, align 8, !tbaa !133
  br label %1064

1064:                                             ; preds = %1049, %1041
  %1065 = add nuw nsw i64 %1042, 1
  %1066 = icmp eq i64 %1065, %592
  br i1 %1066, label %1067, label %1041

1067:                                             ; preds = %1064
  %1068 = load i64, ptr %1036, align 4
  %1069 = and i64 %1068, 4294967295
  %1070 = getelementptr inbounds double, ptr %1013, i64 %1069
  %1071 = load double, ptr %1070, align 8, !tbaa !133
  %1072 = fmul double %1035, %1071
  %1073 = getelementptr inbounds double, ptr %589, i64 %1028
  %1074 = load double, ptr %1073, align 8, !tbaa !133
  %1075 = call double @llvm.fmuladd.f64(double %1072, double %1003, double %1074)
  store double %1075, ptr %1073, align 8, !tbaa !133
  %1076 = add nuw nsw i64 %1028, 1
  %1077 = icmp eq i64 %1076, %592
  br i1 %1077, label %1078, label %1027

1078:                                             ; preds = %1177, %1067, %997
  %1079 = add nuw nsw i64 %998, 1
  %1080 = icmp eq i64 %1079, %590
  br i1 %1080, label %1773, label %997

1081:                                             ; preds = %1014, %1177
  %1082 = phi i64 [ 0, %1014 ], [ %1186, %1177 ]
  %1083 = trunc i64 %1082 to i32
  %1084 = shl nuw nsw i64 %1082, 3
  %1085 = getelementptr i8, ptr %1011, i64 %1084
  %1086 = add nuw i64 %1084, 8
  %1087 = getelementptr i8, ptr %1011, i64 %1086
  %1088 = trunc i64 %1082 to i32
  %1089 = mul i32 %1010, %1088
  %1090 = add i32 %1089, %1015
  %1091 = zext i32 %1090 to i64
  %1092 = getelementptr inbounds double, ptr %1009, i64 %1091
  %1093 = load double, ptr %1092, align 8, !tbaa !133
  %1094 = getelementptr inbounds %"struct.std::pair.263", ptr %1011, i64 %1082
  %1095 = load ptr, ptr %168, align 8
  %1096 = load i32, ptr %166, align 8
  %1097 = mul i32 %1096, %1088
  br i1 %595, label %1151, label %1098

1098:                                             ; preds = %1081
  %1099 = trunc i64 %1082 to i32
  %1100 = mul i32 %1096, %1099
  %1101 = xor i32 %1100, -1
  %1102 = icmp ult i32 %1101, %596
  %1103 = or i1 %1102, %597
  %1104 = or i1 %1019, %1103
  %1105 = or i1 %1021, %1104
  br i1 %1105, label %1151, label %1106

1106:                                             ; preds = %1098
  %1107 = mul i32 %1096, %1083
  %1108 = zext i32 %1107 to i64
  %1109 = shl nuw nsw i64 %1108, 3
  %1110 = getelementptr i8, ptr %1095, i64 %1109
  %1111 = getelementptr i8, ptr %1095, i64 %594
  %1112 = getelementptr i8, ptr %1111, i64 %1109
  %1113 = icmp ult ptr %1011, %1112
  %1114 = icmp ult ptr %1110, %1016
  %1115 = and i1 %1113, %1114
  %1116 = icmp ult ptr %1085, %1112
  %1117 = icmp ult ptr %1110, %1087
  %1118 = and i1 %1116, %1117
  %1119 = or i1 %1115, %1118
  %1120 = icmp ult ptr %1110, %1018
  %1121 = icmp ult ptr %1017, %1112
  %1122 = and i1 %1120, %1121
  %1123 = or i1 %1119, %1122
  br i1 %1123, label %1151, label %1124

1124:                                             ; preds = %1106
  %1125 = insertelement <4 x double> poison, double %1093, i64 0
  %1126 = shufflevector <4 x double> %1125, <4 x double> poison, <4 x i32> zeroinitializer
  %1127 = load i64, ptr %1094, align 4, !alias.scope !584, !noalias !587
  %1128 = trunc i64 %1127 to i32
  %1129 = insertelement <4 x i32> undef, i32 %1128, i64 0
  %1130 = shufflevector <4 x i32> %1129, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %1131

1131:                                             ; preds = %1131, %1124
  %1132 = phi i64 [ 0, %1124 ], [ %1148, %1131 ]
  %1133 = trunc i64 %1132 to i32
  %1134 = getelementptr inbounds %"struct.std::pair.263", ptr %1011, i64 %1132
  %1135 = load <4 x i64>, ptr %1134, align 4, !alias.scope !589, !noalias !587
  %1136 = trunc <4 x i64> %1135 to <4 x i32>
  %1137 = icmp eq <4 x i32> %1130, %1136
  %1138 = add i64 %1132, %998
  %1139 = and i64 %1138, 4294967295
  %1140 = getelementptr double, ptr %1009, i64 %1139
  %1141 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1140, i32 8, <4 x i1> %1137, <4 x double> poison), !tbaa !133, !alias.scope !591
  %1142 = fmul <4 x double> %1126, %1141
  %1143 = add i32 %1097, %1133
  %1144 = zext i32 %1143 to i64
  %1145 = getelementptr double, ptr %1095, i64 %1144
  %1146 = call <4 x double> @llvm.masked.load.v4f64.p0(ptr %1145, i32 8, <4 x i1> %1137, <4 x double> poison), !tbaa !133, !alias.scope !587, !noalias !591
  %1147 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1142, <4 x double> %1023, <4 x double> %1146)
  call void @llvm.masked.store.v4f64.p0(<4 x double> %1147, ptr %1145, i32 8, <4 x i1> %1137), !tbaa !133, !alias.scope !587, !noalias !591
  %1148 = add nuw i64 %1132, 4
  %1149 = icmp eq i64 %1148, %599
  br i1 %1149, label %1150, label %1131, !llvm.loop !593

1150:                                             ; preds = %1131
  br i1 %600, label %1177, label %1151

1151:                                             ; preds = %1106, %1098, %1081, %1150
  %1152 = phi i64 [ 0, %1106 ], [ 0, %1098 ], [ 0, %1081 ], [ %599, %1150 ]
  br label %1153

1153:                                             ; preds = %1151, %1174
  %1154 = phi i64 [ %1175, %1174 ], [ %1152, %1151 ]
  %1155 = load i64, ptr %1094, align 4
  %1156 = getelementptr inbounds %"struct.std::pair.263", ptr %1011, i64 %1154
  %1157 = load i64, ptr %1156, align 4
  %1158 = trunc i64 %1155 to i32
  %1159 = trunc i64 %1157 to i32
  %1160 = icmp eq i32 %1158, %1159
  br i1 %1160, label %1161, label %1174

1161:                                             ; preds = %1153
  %1162 = trunc i64 %1154 to i32
  %1163 = mul i32 %1010, %1162
  %1164 = add i32 %1163, %1015
  %1165 = zext i32 %1164 to i64
  %1166 = getelementptr inbounds double, ptr %1009, i64 %1165
  %1167 = load double, ptr %1166, align 8, !tbaa !133
  %1168 = fmul double %1093, %1167
  %1169 = add i32 %1097, %1162
  %1170 = zext i32 %1169 to i64
  %1171 = getelementptr inbounds double, ptr %1095, i64 %1170
  %1172 = load double, ptr %1171, align 8, !tbaa !133
  %1173 = call double @llvm.fmuladd.f64(double %1168, double %1003, double %1172)
  store double %1173, ptr %1171, align 8, !tbaa !133
  br label %1174

1174:                                             ; preds = %1161, %1153
  %1175 = add nuw nsw i64 %1154, 1
  %1176 = icmp eq i64 %1175, %591
  br i1 %1176, label %1177, label %1153, !llvm.loop !594

1177:                                             ; preds = %1174, %1150
  %1178 = load i64, ptr %1094, align 4
  %1179 = and i64 %1178, 4294967295
  %1180 = getelementptr inbounds double, ptr %1013, i64 %1179
  %1181 = load double, ptr %1180, align 8, !tbaa !133
  %1182 = fmul double %1093, %1181
  %1183 = getelementptr inbounds double, ptr %589, i64 %1082
  %1184 = load double, ptr %1183, align 8, !tbaa !133
  %1185 = call double @llvm.fmuladd.f64(double %1182, double %1003, double %1184)
  store double %1185, ptr %1183, align 8, !tbaa !133
  %1186 = add nuw nsw i64 %1082, 1
  %1187 = icmp eq i64 %1186, %591
  br i1 %1187, label %1078, label %1081

1188:                                             ; preds = %480
  %1189 = zext i32 %482 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13)
  store double 0.000000e+00, ptr %13, align 8, !tbaa !133
  %1190 = load ptr, ptr %188, align 8, !tbaa !33
  %1191 = load ptr, ptr %20, align 8, !tbaa !131
  %1192 = ptrtoint ptr %1190 to i64
  %1193 = ptrtoint ptr %1191 to i64
  %1194 = sub i64 %1192, %1193
  %1195 = ashr exact i64 %1194, 3
  %1196 = icmp ult i64 %1195, %1189
  br i1 %1196, label %1197, label %1199

1197:                                             ; preds = %1188
  %1198 = sub nsw i64 %1189, %1195
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr %1190, i64 noundef %1198, ptr noundef nonnull align 8 dereferenceable(8) %13)
          to label %1205 unwind label %648

1199:                                             ; preds = %1188
  %1200 = icmp ugt i64 %1195, %1189
  br i1 %1200, label %1201, label %1205

1201:                                             ; preds = %1199
  %1202 = getelementptr inbounds double, ptr %1191, i64 %1189
  %1203 = icmp eq ptr %1190, %1202
  br i1 %1203, label %1205, label %1204

1204:                                             ; preds = %1201
  store ptr %1202, ptr %188, align 8, !tbaa !135
  br label %1205

1205:                                             ; preds = %1204, %1201, %1199, %1197
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13)
  %1206 = load ptr, ptr %156, align 8, !tbaa !62, !noalias !595
  %1207 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1206, i64 0, i32 1
  %1208 = load i32, ptr %25, align 8, !tbaa !60, !noalias !595
  %1209 = sext i32 %1208 to i64
  %1210 = load ptr, ptr %1207, align 8, !tbaa !46, !noalias !595
  %1211 = getelementptr inbounds ptr, ptr %1210, i64 %1209
  %1212 = load ptr, ptr %1211, align 8, !tbaa !33, !noalias !595
  %1213 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1212, i64 0, i32 4
  %1214 = load i32, ptr %146, align 4, !tbaa !61, !noalias !595
  %1215 = sext i32 %1214 to i64
  %1216 = load ptr, ptr %1213, align 8, !tbaa !50, !noalias !595
  %1217 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %1216, i64 %1215
  %1218 = getelementptr inbounds [6 x i32], ptr %1217, i64 0, i64 %329
  %1219 = load i32, ptr %1218, align 4, !tbaa !59, !noalias !595
  %1220 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1206, i64 0, i32 2
  %1221 = load ptr, ptr %1220, align 8, !tbaa !514
  %1222 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjects.329", ptr %1221, i64 0, i32 5
  %1223 = sext i32 %1219 to i64
  %1224 = load ptr, ptr %1222, align 8, !tbaa !526
  %1225 = getelementptr inbounds i8, ptr %1224, i64 %1223
  %1226 = load i8, ptr %1225, align 1, !tbaa !30
  %1227 = load ptr, ptr %157, align 8, !tbaa !528
  %1228 = icmp eq ptr %1227, null
  br i1 %1228, label %1248, label %1229

1229:                                             ; preds = %1205, %1229
  %1230 = phi ptr [ %1239, %1229 ], [ %1227, %1205 ]
  %1231 = phi ptr [ %1237, %1229 ], [ %158, %1205 ]
  %1232 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1230, i64 0, i32 1
  %1233 = load i8, ptr %1232, align 1, !tbaa !30
  %1234 = icmp ult i8 %1233, %1226
  %1235 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1230, i64 0, i32 3
  %1236 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", ptr %1230, i64 0, i32 2
  %1237 = select i1 %1234, ptr %1231, ptr %1230
  %1238 = select i1 %1234, ptr %1235, ptr %1236
  %1239 = load ptr, ptr %1238, align 8, !tbaa !33
  %1240 = icmp eq ptr %1239, null
  br i1 %1240, label %1241, label %1229

1241:                                             ; preds = %1229
  %1242 = icmp eq ptr %1237, %158
  br i1 %1242, label %1248, label %1243

1243:                                             ; preds = %1241
  %1244 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1237, i64 0, i32 1
  %1245 = load i8, ptr %1244, align 1, !tbaa !30
  %1246 = icmp ult i8 %1226, %1245
  %1247 = select i1 %1246, ptr %158, ptr %1237
  br label %1248

1248:                                             ; preds = %1205, %1241, %1243
  %1249 = phi ptr [ %158, %1241 ], [ %158, %1205 ], [ %1247, %1243 ]
  %1250 = getelementptr inbounds %"struct.std::_Rb_tree_node", ptr %1249, i64 0, i32 1, i32 1
  %1251 = load ptr, ptr %1250, align 8, !tbaa !506
  %1252 = getelementptr inbounds i8, ptr %386, i64 312
  %1253 = load ptr, ptr %1251, align 8, !tbaa !41
  %1254 = getelementptr inbounds ptr, ptr %1253, i64 6
  %1255 = load ptr, ptr %1254, align 8
  invoke void %1255(ptr noundef nonnull align 8 dereferenceable(92) %1251, ptr noundef nonnull align 8 dereferenceable(24) %1252, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef 0)
          to label %1256 unwind label %1347

1256:                                             ; preds = %1248
  %1257 = load i32, ptr %481, align 4, !tbaa !127
  br i1 %178, label %1258, label %1293

1258:                                             ; preds = %1256
  %1259 = icmp eq i32 %1257, 0
  br i1 %1259, label %1773, label %1260

1260:                                             ; preds = %1258
  %1261 = getelementptr inbounds i8, ptr %386, i64 216
  %1262 = load ptr, ptr %1261, align 8, !tbaa !131
  %1263 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 3
  %1264 = load i32, ptr %1263, align 8, !tbaa !65
  %1265 = icmp eq i32 %1264, 0
  %1266 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 6
  %1267 = getelementptr inbounds i8, ptr %386, i64 480
  %1268 = getelementptr inbounds i8, ptr %386, i64 144
  %1269 = getelementptr inbounds i8, ptr %386, i64 160
  %1270 = load ptr, ptr %168, align 8
  %1271 = load i32, ptr %166, align 8
  %1272 = load ptr, ptr %20, align 8
  %1273 = load ptr, ptr %170, align 8
  %1274 = zext i32 %1257 to i64
  %1275 = zext i32 %1264 to i64
  %1276 = zext i32 %1264 to i64
  %1277 = add nsw i64 %1275, -1
  %1278 = shl nuw nsw i64 %1275, 3
  %1279 = getelementptr i8, ptr %1270, i64 %1278
  %1280 = icmp ult i32 %1264, 16
  %1281 = trunc i64 %1277 to i32
  %1282 = icmp ugt i64 %1277, 4294967295
  %1283 = trunc i64 %1277 to i32
  %1284 = and i64 %1275, 4294967280
  %1285 = icmp eq i64 %1284, %1275
  %1286 = and i64 %1275, 1
  %1287 = icmp eq i64 %1286, 0
  %1288 = sub nsw i64 0, %1275
  %1289 = and i64 %1275, 1
  %1290 = icmp eq i64 %1277, 0
  %1291 = and i64 %1275, 4294967294
  %1292 = icmp eq i64 %1289, 0
  br label %1539

1293:                                             ; preds = %1256
  %1294 = zext i32 %1257 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12)
  store double 0.000000e+00, ptr %12, align 8, !tbaa !133
  %1295 = load ptr, ptr %187, align 8, !tbaa !33
  %1296 = load ptr, ptr %18, align 8, !tbaa !131
  %1297 = ptrtoint ptr %1295 to i64
  %1298 = ptrtoint ptr %1296 to i64
  %1299 = sub i64 %1297, %1298
  %1300 = ashr exact i64 %1299, 3
  %1301 = icmp ult i64 %1300, %1294
  br i1 %1301, label %1302, label %1304

1302:                                             ; preds = %1293
  %1303 = sub nsw i64 %1294, %1300
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr %1295, i64 noundef %1303, ptr noundef nonnull align 8 dereferenceable(8) %12)
          to label %1310 unwind label %648

1304:                                             ; preds = %1293
  %1305 = icmp ugt i64 %1300, %1294
  br i1 %1305, label %1306, label %1310

1306:                                             ; preds = %1304
  %1307 = getelementptr inbounds double, ptr %1296, i64 %1294
  %1308 = icmp eq ptr %1295, %1307
  br i1 %1308, label %1310, label %1309

1309:                                             ; preds = %1306
  store ptr %1307, ptr %187, align 8, !tbaa !135
  br label %1310

1310:                                             ; preds = %1309, %1306, %1304, %1302
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12)
  %1311 = load ptr, ptr %5, align 8, !tbaa !41
  %1312 = getelementptr inbounds ptr, ptr %1311, i64 6
  %1313 = load ptr, ptr %1312, align 8
  invoke void %1313(ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(24) %1252, ptr noundef nonnull align 8 dereferenceable(24) %18, i32 noundef 0)
          to label %1314 unwind label %648

1314:                                             ; preds = %1310
  %1315 = load i32, ptr %481, align 4, !tbaa !127
  %1316 = icmp eq i32 %1315, 0
  br i1 %1316, label %1773, label %1317

1317:                                             ; preds = %1314
  %1318 = getelementptr inbounds i8, ptr %386, i64 216
  %1319 = load ptr, ptr %1318, align 8, !tbaa !131
  %1320 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 3
  %1321 = load i32, ptr %1320, align 8, !tbaa !65
  %1322 = icmp eq i32 %1321, 0
  %1323 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %386, i64 0, i32 6
  %1324 = getelementptr inbounds i8, ptr %386, i64 480
  %1325 = getelementptr inbounds i8, ptr %386, i64 144
  %1326 = getelementptr inbounds i8, ptr %386, i64 160
  %1327 = load ptr, ptr %18, align 8
  %1328 = load ptr, ptr %168, align 8
  %1329 = load i32, ptr %166, align 8
  %1330 = load ptr, ptr %20, align 8
  %1331 = load ptr, ptr %170, align 8
  %1332 = zext i32 %1315 to i64
  %1333 = zext i32 %1321 to i64
  %1334 = zext i32 %1321 to i64
  %1335 = add nsw i64 %1333, -1
  %1336 = shl nuw nsw i64 %1333, 3
  %1337 = getelementptr i8, ptr %1328, i64 %1336
  %1338 = icmp ult i32 %1321, 12
  %1339 = trunc i64 %1335 to i32
  %1340 = icmp ugt i64 %1335, 4294967295
  %1341 = trunc i64 %1335 to i32
  %1342 = and i64 %1333, 4294967292
  %1343 = icmp eq i64 %1342, %1333
  %1344 = and i64 %1333, 1
  %1345 = icmp eq i64 %1344, 0
  %1346 = sub nsw i64 0, %1333
  br label %1349

1347:                                             ; preds = %1248
  %1348 = landingpad { ptr, i32 }
          cleanup
  br label %2155

1349:                                             ; preds = %1317, %1419
  %1350 = phi i64 [ 0, %1317 ], [ %1420, %1419 ]
  %1351 = shl nuw nsw i64 %1350, 3
  %1352 = getelementptr i8, ptr %1327, i64 %1351
  %1353 = add nuw i64 %1351, 8
  %1354 = getelementptr i8, ptr %1327, i64 %1353
  %1355 = add nuw i64 %1336, %1351
  %1356 = trunc i64 %1350 to i32
  %1357 = getelementptr inbounds double, ptr %1319, i64 %1350
  %1358 = load double, ptr %1357, align 8, !tbaa !133
  br i1 %1322, label %1419, label %1359

1359:                                             ; preds = %1349
  %1360 = load ptr, ptr %1323, align 8, !tbaa !63
  %1361 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1360, i64 0, i32 2
  %1362 = load i8, ptr %1361, align 4, !tbaa !148, !range !182, !noundef !183
  %1363 = icmp eq i8 %1362, 0
  %1364 = load ptr, ptr %1325, align 8, !tbaa !140
  %1365 = load i32, ptr %1326, align 8, !tbaa !59
  %1366 = getelementptr inbounds double, ptr %1327, i64 %1350
  %1367 = getelementptr inbounds double, ptr %1330, i64 %1350
  br i1 %1363, label %1377, label %1368

1368:                                             ; preds = %1359
  %1369 = trunc i64 %1350 to i32
  %1370 = getelementptr i8, ptr %1364, i64 %1351
  %1371 = getelementptr i8, ptr %1364, i64 %1355
  %1372 = icmp ne i32 %1365, 1
  %1373 = xor i32 %1356, -1
  %1374 = icmp ult i32 %1373, %1341
  %1375 = insertelement <4 x double> poison, double %1358, i64 0
  %1376 = shufflevector <4 x double> %1375, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1422

1377:                                             ; preds = %1359
  %1378 = load ptr, ptr %1324, align 8, !tbaa !144
  %1379 = trunc i64 %1350 to i32
  br label %1380

1380:                                             ; preds = %1411, %1377
  %1381 = phi i64 [ %1417, %1411 ], [ 0, %1377 ]
  %1382 = getelementptr inbounds i32, ptr %1378, i64 %1381
  %1383 = load i32, ptr %1382, align 4, !tbaa !59
  %1384 = mul i32 %1365, %1383
  %1385 = add i32 %1384, %1379
  %1386 = zext i32 %1385 to i64
  %1387 = getelementptr inbounds double, ptr %1364, i64 %1386
  %1388 = load double, ptr %1387, align 8, !tbaa !133
  %1389 = trunc i64 %1381 to i32
  %1390 = mul i32 %1329, %1389
  br label %1391

1391:                                             ; preds = %1391, %1380
  %1392 = phi i64 [ %1409, %1391 ], [ 0, %1380 ]
  %1393 = getelementptr inbounds i32, ptr %1378, i64 %1392
  %1394 = load i32, ptr %1393, align 4, !tbaa !59
  %1395 = mul i32 %1394, %1365
  %1396 = add i32 %1395, %1379
  %1397 = zext i32 %1396 to i64
  %1398 = getelementptr inbounds double, ptr %1364, i64 %1397
  %1399 = load double, ptr %1398, align 8, !tbaa !133
  %1400 = fmul double %1388, %1399
  %1401 = fmul double %1358, %1400
  %1402 = load double, ptr %1366, align 8, !tbaa !133
  %1403 = trunc i64 %1392 to i32
  %1404 = add i32 %1390, %1403
  %1405 = zext i32 %1404 to i64
  %1406 = getelementptr inbounds double, ptr %1328, i64 %1405
  %1407 = load double, ptr %1406, align 8, !tbaa !133
  %1408 = call double @llvm.fmuladd.f64(double %1401, double %1402, double %1407)
  store double %1408, ptr %1406, align 8, !tbaa !133
  %1409 = add nuw nsw i64 %1392, 1
  %1410 = icmp eq i64 %1409, %1334
  br i1 %1410, label %1411, label %1391

1411:                                             ; preds = %1391
  %1412 = load double, ptr %1367, align 8, !tbaa !133
  %1413 = fmul double %1388, %1412
  %1414 = getelementptr inbounds double, ptr %1331, i64 %1381
  %1415 = load double, ptr %1414, align 8, !tbaa !133
  %1416 = call double @llvm.fmuladd.f64(double %1413, double %1358, double %1415)
  store double %1416, ptr %1414, align 8, !tbaa !133
  %1417 = add nuw nsw i64 %1381, 1
  %1418 = icmp eq i64 %1417, %1334
  br i1 %1418, label %1419, label %1380

1419:                                             ; preds = %1498, %1411, %1349
  %1420 = add nuw nsw i64 %1350, 1
  %1421 = icmp eq i64 %1420, %1332
  br i1 %1421, label %1773, label %1349

1422:                                             ; preds = %1368, %1498
  %1423 = phi i64 [ 0, %1368 ], [ %1504, %1498 ]
  %1424 = trunc i64 %1423 to i32
  %1425 = mul i32 %1329, %1424
  %1426 = zext i32 %1425 to i64
  %1427 = shl nuw nsw i64 %1426, 3
  %1428 = getelementptr i8, ptr %1328, i64 %1427
  %1429 = getelementptr i8, ptr %1337, i64 %1427
  %1430 = trunc i64 %1423 to i32
  %1431 = mul i32 %1365, %1430
  %1432 = add i32 %1431, %1369
  %1433 = zext i32 %1432 to i64
  %1434 = getelementptr inbounds double, ptr %1364, i64 %1433
  %1435 = load double, ptr %1434, align 8, !tbaa !133
  %1436 = mul i32 %1329, %1430
  br i1 %1338, label %1476, label %1437

1437:                                             ; preds = %1422
  %1438 = trunc i64 %1423 to i32
  %1439 = mul i32 %1329, %1438
  %1440 = xor i32 %1439, -1
  %1441 = icmp ult i32 %1440, %1339
  %1442 = or i1 %1441, %1340
  %1443 = or i1 %1372, %1442
  %1444 = or i1 %1374, %1443
  br i1 %1444, label %1476, label %1445

1445:                                             ; preds = %1437
  %1446 = icmp ult ptr %1352, %1429
  %1447 = icmp ult ptr %1428, %1354
  %1448 = and i1 %1446, %1447
  %1449 = icmp ult ptr %1428, %1371
  %1450 = icmp ult ptr %1370, %1429
  %1451 = and i1 %1449, %1450
  %1452 = or i1 %1448, %1451
  br i1 %1452, label %1476, label %1453

1453:                                             ; preds = %1445
  %1454 = insertelement <4 x double> poison, double %1435, i64 0
  %1455 = shufflevector <4 x double> %1454, <4 x double> poison, <4 x i32> zeroinitializer
  %1456 = load double, ptr %1366, align 8, !tbaa !133, !alias.scope !598, !noalias !601
  %1457 = insertelement <4 x double> poison, double %1456, i64 0
  %1458 = shufflevector <4 x double> %1457, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1459

1459:                                             ; preds = %1459, %1453
  %1460 = phi i64 [ 0, %1453 ], [ %1473, %1459 ]
  %1461 = trunc i64 %1460 to i32
  %1462 = add i64 %1460, %1350
  %1463 = and i64 %1462, 4294967295
  %1464 = getelementptr inbounds double, ptr %1364, i64 %1463
  %1465 = load <4 x double>, ptr %1464, align 8, !tbaa !133, !alias.scope !603
  %1466 = fmul <4 x double> %1455, %1465
  %1467 = fmul <4 x double> %1376, %1466
  %1468 = add i32 %1436, %1461
  %1469 = zext i32 %1468 to i64
  %1470 = getelementptr inbounds double, ptr %1328, i64 %1469
  %1471 = load <4 x double>, ptr %1470, align 8, !tbaa !133, !alias.scope !601, !noalias !603
  %1472 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1467, <4 x double> %1458, <4 x double> %1471)
  store <4 x double> %1472, ptr %1470, align 8, !tbaa !133, !alias.scope !601, !noalias !603
  %1473 = add nuw i64 %1460, 4
  %1474 = icmp eq i64 %1473, %1342
  br i1 %1474, label %1475, label %1459, !llvm.loop !605

1475:                                             ; preds = %1459
  br i1 %1343, label %1498, label %1476

1476:                                             ; preds = %1445, %1437, %1422, %1475
  %1477 = phi i64 [ 0, %1445 ], [ 0, %1437 ], [ 0, %1422 ], [ %1342, %1475 ]
  %1478 = xor i64 %1477, -1
  br i1 %1345, label %1495, label %1479

1479:                                             ; preds = %1476
  %1480 = trunc i64 %1477 to i32
  %1481 = mul i32 %1365, %1480
  %1482 = add i32 %1481, %1369
  %1483 = zext i32 %1482 to i64
  %1484 = getelementptr inbounds double, ptr %1364, i64 %1483
  %1485 = load double, ptr %1484, align 8, !tbaa !133
  %1486 = fmul double %1435, %1485
  %1487 = fmul double %1358, %1486
  %1488 = load double, ptr %1366, align 8, !tbaa !133
  %1489 = add i32 %1436, %1480
  %1490 = zext i32 %1489 to i64
  %1491 = getelementptr inbounds double, ptr %1328, i64 %1490
  %1492 = load double, ptr %1491, align 8, !tbaa !133
  %1493 = call double @llvm.fmuladd.f64(double %1487, double %1488, double %1492)
  store double %1493, ptr %1491, align 8, !tbaa !133
  %1494 = or i64 %1477, 1
  br label %1495

1495:                                             ; preds = %1479, %1476
  %1496 = phi i64 [ %1477, %1476 ], [ %1494, %1479 ]
  %1497 = icmp eq i64 %1478, %1346
  br i1 %1497, label %1498, label %1506

1498:                                             ; preds = %1495, %1506, %1475
  %1499 = load double, ptr %1367, align 8, !tbaa !133
  %1500 = fmul double %1435, %1499
  %1501 = getelementptr inbounds double, ptr %1331, i64 %1423
  %1502 = load double, ptr %1501, align 8, !tbaa !133
  %1503 = call double @llvm.fmuladd.f64(double %1500, double %1358, double %1502)
  store double %1503, ptr %1501, align 8, !tbaa !133
  %1504 = add nuw nsw i64 %1423, 1
  %1505 = icmp eq i64 %1504, %1333
  br i1 %1505, label %1419, label %1422

1506:                                             ; preds = %1495, %1506
  %1507 = phi i64 [ %1537, %1506 ], [ %1496, %1495 ]
  %1508 = trunc i64 %1507 to i32
  %1509 = mul i32 %1365, %1508
  %1510 = add i32 %1509, %1369
  %1511 = zext i32 %1510 to i64
  %1512 = getelementptr inbounds double, ptr %1364, i64 %1511
  %1513 = load double, ptr %1512, align 8, !tbaa !133
  %1514 = fmul double %1435, %1513
  %1515 = fmul double %1358, %1514
  %1516 = load double, ptr %1366, align 8, !tbaa !133
  %1517 = add i32 %1436, %1508
  %1518 = zext i32 %1517 to i64
  %1519 = getelementptr inbounds double, ptr %1328, i64 %1518
  %1520 = load double, ptr %1519, align 8, !tbaa !133
  %1521 = call double @llvm.fmuladd.f64(double %1515, double %1516, double %1520)
  store double %1521, ptr %1519, align 8, !tbaa !133
  %1522 = trunc i64 %1507 to i32
  %1523 = add i32 %1522, 1
  %1524 = mul i32 %1365, %1523
  %1525 = add i32 %1524, %1369
  %1526 = zext i32 %1525 to i64
  %1527 = getelementptr inbounds double, ptr %1364, i64 %1526
  %1528 = load double, ptr %1527, align 8, !tbaa !133
  %1529 = fmul double %1435, %1528
  %1530 = fmul double %1358, %1529
  %1531 = load double, ptr %1366, align 8, !tbaa !133
  %1532 = add i32 %1436, %1523
  %1533 = zext i32 %1532 to i64
  %1534 = getelementptr inbounds double, ptr %1328, i64 %1533
  %1535 = load double, ptr %1534, align 8, !tbaa !133
  %1536 = call double @llvm.fmuladd.f64(double %1530, double %1531, double %1535)
  store double %1536, ptr %1534, align 8, !tbaa !133
  %1537 = add nuw nsw i64 %1507, 2
  %1538 = icmp eq i64 %1537, %1333
  br i1 %1538, label %1498, label %1506, !llvm.loop !606

1539:                                             ; preds = %1260, %1643
  %1540 = phi i64 [ 0, %1260 ], [ %1644, %1643 ]
  %1541 = shl nuw nsw i64 %1540, 3
  %1542 = add nuw i64 %1278, %1541
  %1543 = trunc i64 %1540 to i32
  %1544 = getelementptr inbounds double, ptr %1262, i64 %1540
  %1545 = load double, ptr %1544, align 8, !tbaa !133
  br i1 %1265, label %1643, label %1546

1546:                                             ; preds = %1539
  %1547 = load ptr, ptr %1266, align 8, !tbaa !63
  %1548 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %1547, i64 0, i32 2
  %1549 = load i8, ptr %1548, align 4, !tbaa !148, !range !182, !noundef !183
  %1550 = icmp eq i8 %1549, 0
  %1551 = load ptr, ptr %1268, align 8, !tbaa !140
  %1552 = load i32, ptr %1269, align 8, !tbaa !59
  %1553 = getelementptr inbounds double, ptr %1272, i64 %1540
  br i1 %1550, label %1569, label %1554

1554:                                             ; preds = %1546
  %1555 = trunc i64 %1540 to i32
  %1556 = getelementptr i8, ptr %1551, i64 %1541
  %1557 = getelementptr i8, ptr %1551, i64 %1542
  %1558 = icmp ne i32 %1552, 1
  %1559 = xor i32 %1543, -1
  %1560 = icmp ult i32 %1559, %1283
  %1561 = insertelement <4 x double> poison, double %1545, i64 0
  %1562 = shufflevector <4 x double> %1561, <4 x double> poison, <4 x i32> zeroinitializer
  %1563 = insertelement <4 x double> poison, double %1545, i64 0
  %1564 = shufflevector <4 x double> %1563, <4 x double> poison, <4 x i32> zeroinitializer
  %1565 = insertelement <4 x double> poison, double %1545, i64 0
  %1566 = shufflevector <4 x double> %1565, <4 x double> poison, <4 x i32> zeroinitializer
  %1567 = insertelement <4 x double> poison, double %1545, i64 0
  %1568 = shufflevector <4 x double> %1567, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1646

1569:                                             ; preds = %1546
  %1570 = load ptr, ptr %1267, align 8, !tbaa !144
  %1571 = trunc i64 %1540 to i32
  br label %1572

1572:                                             ; preds = %1635, %1569
  %1573 = phi i64 [ %1641, %1635 ], [ 0, %1569 ]
  %1574 = getelementptr inbounds i32, ptr %1570, i64 %1573
  %1575 = load i32, ptr %1574, align 4, !tbaa !59
  %1576 = mul i32 %1552, %1575
  %1577 = add i32 %1576, %1571
  %1578 = zext i32 %1577 to i64
  %1579 = getelementptr inbounds double, ptr %1551, i64 %1578
  %1580 = load double, ptr %1579, align 8, !tbaa !133
  %1581 = trunc i64 %1573 to i32
  %1582 = mul i32 %1271, %1581
  br i1 %1290, label %1618, label %1583

1583:                                             ; preds = %1572, %1583
  %1584 = phi i64 [ %1615, %1583 ], [ 0, %1572 ]
  %1585 = phi i64 [ %1616, %1583 ], [ 0, %1572 ]
  %1586 = getelementptr inbounds i32, ptr %1570, i64 %1584
  %1587 = load i32, ptr %1586, align 4, !tbaa !59
  %1588 = mul i32 %1587, %1552
  %1589 = add i32 %1588, %1571
  %1590 = zext i32 %1589 to i64
  %1591 = getelementptr inbounds double, ptr %1551, i64 %1590
  %1592 = load double, ptr %1591, align 8, !tbaa !133
  %1593 = fmul double %1580, %1592
  %1594 = trunc i64 %1584 to i32
  %1595 = add i32 %1582, %1594
  %1596 = zext i32 %1595 to i64
  %1597 = getelementptr inbounds double, ptr %1270, i64 %1596
  %1598 = load double, ptr %1597, align 8, !tbaa !133
  %1599 = call double @llvm.fmuladd.f64(double %1593, double %1545, double %1598)
  store double %1599, ptr %1597, align 8, !tbaa !133
  %1600 = or i64 %1584, 1
  %1601 = getelementptr inbounds i32, ptr %1570, i64 %1600
  %1602 = load i32, ptr %1601, align 4, !tbaa !59
  %1603 = mul i32 %1602, %1552
  %1604 = add i32 %1603, %1571
  %1605 = zext i32 %1604 to i64
  %1606 = getelementptr inbounds double, ptr %1551, i64 %1605
  %1607 = load double, ptr %1606, align 8, !tbaa !133
  %1608 = fmul double %1580, %1607
  %1609 = trunc i64 %1600 to i32
  %1610 = add i32 %1582, %1609
  %1611 = zext i32 %1610 to i64
  %1612 = getelementptr inbounds double, ptr %1270, i64 %1611
  %1613 = load double, ptr %1612, align 8, !tbaa !133
  %1614 = call double @llvm.fmuladd.f64(double %1608, double %1545, double %1613)
  store double %1614, ptr %1612, align 8, !tbaa !133
  %1615 = add nuw nsw i64 %1584, 2
  %1616 = add i64 %1585, 2
  %1617 = icmp eq i64 %1616, %1291
  br i1 %1617, label %1618, label %1583

1618:                                             ; preds = %1583, %1572
  %1619 = phi i64 [ 0, %1572 ], [ %1615, %1583 ]
  br i1 %1292, label %1635, label %1620

1620:                                             ; preds = %1618
  %1621 = getelementptr inbounds i32, ptr %1570, i64 %1619
  %1622 = load i32, ptr %1621, align 4, !tbaa !59
  %1623 = mul i32 %1622, %1552
  %1624 = add i32 %1623, %1571
  %1625 = zext i32 %1624 to i64
  %1626 = getelementptr inbounds double, ptr %1551, i64 %1625
  %1627 = load double, ptr %1626, align 8, !tbaa !133
  %1628 = fmul double %1580, %1627
  %1629 = trunc i64 %1619 to i32
  %1630 = add i32 %1582, %1629
  %1631 = zext i32 %1630 to i64
  %1632 = getelementptr inbounds double, ptr %1270, i64 %1631
  %1633 = load double, ptr %1632, align 8, !tbaa !133
  %1634 = call double @llvm.fmuladd.f64(double %1628, double %1545, double %1633)
  store double %1634, ptr %1632, align 8, !tbaa !133
  br label %1635

1635:                                             ; preds = %1618, %1620
  %1636 = load double, ptr %1553, align 8, !tbaa !133
  %1637 = fmul double %1580, %1636
  %1638 = getelementptr inbounds double, ptr %1273, i64 %1573
  %1639 = load double, ptr %1638, align 8, !tbaa !133
  %1640 = call double @llvm.fmuladd.f64(double %1637, double %1545, double %1639)
  store double %1640, ptr %1638, align 8, !tbaa !133
  %1641 = add nuw nsw i64 %1573, 1
  %1642 = icmp eq i64 %1641, %1276
  br i1 %1642, label %1643, label %1572

1643:                                             ; preds = %1736, %1635, %1539
  %1644 = add nuw nsw i64 %1540, 1
  %1645 = icmp eq i64 %1644, %1274
  br i1 %1645, label %1773, label %1539

1646:                                             ; preds = %1554, %1736
  %1647 = phi i64 [ 0, %1554 ], [ %1742, %1736 ]
  %1648 = trunc i64 %1647 to i32
  %1649 = mul i32 %1271, %1648
  %1650 = zext i32 %1649 to i64
  %1651 = shl nuw nsw i64 %1650, 3
  %1652 = getelementptr i8, ptr %1270, i64 %1651
  %1653 = getelementptr i8, ptr %1279, i64 %1651
  %1654 = trunc i64 %1647 to i32
  %1655 = mul i32 %1552, %1654
  %1656 = add i32 %1655, %1555
  %1657 = zext i32 %1656 to i64
  %1658 = getelementptr inbounds double, ptr %1551, i64 %1657
  %1659 = load double, ptr %1658, align 8, !tbaa !133
  %1660 = mul i32 %1271, %1654
  br i1 %1280, label %1716, label %1661

1661:                                             ; preds = %1646
  %1662 = trunc i64 %1647 to i32
  %1663 = mul i32 %1271, %1662
  %1664 = xor i32 %1663, -1
  %1665 = icmp ult i32 %1664, %1281
  %1666 = or i1 %1665, %1282
  %1667 = or i1 %1558, %1666
  %1668 = or i1 %1560, %1667
  br i1 %1668, label %1716, label %1669

1669:                                             ; preds = %1661
  %1670 = icmp ult ptr %1652, %1557
  %1671 = icmp ult ptr %1556, %1653
  %1672 = and i1 %1670, %1671
  br i1 %1672, label %1716, label %1673

1673:                                             ; preds = %1669
  %1674 = insertelement <4 x double> poison, double %1659, i64 0
  %1675 = shufflevector <4 x double> %1674, <4 x double> poison, <4 x i32> zeroinitializer
  %1676 = insertelement <4 x double> poison, double %1659, i64 0
  %1677 = shufflevector <4 x double> %1676, <4 x double> poison, <4 x i32> zeroinitializer
  %1678 = insertelement <4 x double> poison, double %1659, i64 0
  %1679 = shufflevector <4 x double> %1678, <4 x double> poison, <4 x i32> zeroinitializer
  %1680 = insertelement <4 x double> poison, double %1659, i64 0
  %1681 = shufflevector <4 x double> %1680, <4 x double> poison, <4 x i32> zeroinitializer
  br label %1682

1682:                                             ; preds = %1682, %1673
  %1683 = phi i64 [ 0, %1673 ], [ %1713, %1682 ]
  %1684 = trunc i64 %1683 to i32
  %1685 = add i64 %1683, %1540
  %1686 = and i64 %1685, 4294967295
  %1687 = getelementptr inbounds double, ptr %1551, i64 %1686
  %1688 = load <4 x double>, ptr %1687, align 8, !tbaa !133, !alias.scope !607
  %1689 = getelementptr inbounds double, ptr %1687, i64 4
  %1690 = load <4 x double>, ptr %1689, align 8, !tbaa !133, !alias.scope !607
  %1691 = getelementptr inbounds double, ptr %1687, i64 8
  %1692 = load <4 x double>, ptr %1691, align 8, !tbaa !133, !alias.scope !607
  %1693 = getelementptr inbounds double, ptr %1687, i64 12
  %1694 = load <4 x double>, ptr %1693, align 8, !tbaa !133, !alias.scope !607
  %1695 = fmul <4 x double> %1675, %1688
  %1696 = fmul <4 x double> %1677, %1690
  %1697 = fmul <4 x double> %1679, %1692
  %1698 = fmul <4 x double> %1681, %1694
  %1699 = add i32 %1660, %1684
  %1700 = zext i32 %1699 to i64
  %1701 = getelementptr inbounds double, ptr %1270, i64 %1700
  %1702 = load <4 x double>, ptr %1701, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  %1703 = getelementptr inbounds double, ptr %1701, i64 4
  %1704 = load <4 x double>, ptr %1703, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  %1705 = getelementptr inbounds double, ptr %1701, i64 8
  %1706 = load <4 x double>, ptr %1705, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  %1707 = getelementptr inbounds double, ptr %1701, i64 12
  %1708 = load <4 x double>, ptr %1707, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  %1709 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1695, <4 x double> %1562, <4 x double> %1702)
  %1710 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1696, <4 x double> %1564, <4 x double> %1704)
  %1711 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1697, <4 x double> %1566, <4 x double> %1706)
  %1712 = call <4 x double> @llvm.fmuladd.v4f64(<4 x double> %1698, <4 x double> %1568, <4 x double> %1708)
  store <4 x double> %1709, ptr %1701, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  store <4 x double> %1710, ptr %1703, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  store <4 x double> %1711, ptr %1705, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  store <4 x double> %1712, ptr %1707, align 8, !tbaa !133, !alias.scope !610, !noalias !607
  %1713 = add nuw i64 %1683, 16
  %1714 = icmp eq i64 %1713, %1284
  br i1 %1714, label %1715, label %1682, !llvm.loop !612

1715:                                             ; preds = %1682
  br i1 %1285, label %1736, label %1716

1716:                                             ; preds = %1669, %1661, %1646, %1715
  %1717 = phi i64 [ 0, %1669 ], [ 0, %1661 ], [ 0, %1646 ], [ %1284, %1715 ]
  %1718 = xor i64 %1717, -1
  br i1 %1287, label %1733, label %1719

1719:                                             ; preds = %1716
  %1720 = trunc i64 %1717 to i32
  %1721 = mul i32 %1552, %1720
  %1722 = add i32 %1721, %1555
  %1723 = zext i32 %1722 to i64
  %1724 = getelementptr inbounds double, ptr %1551, i64 %1723
  %1725 = load double, ptr %1724, align 8, !tbaa !133
  %1726 = fmul double %1659, %1725
  %1727 = add i32 %1660, %1720
  %1728 = zext i32 %1727 to i64
  %1729 = getelementptr inbounds double, ptr %1270, i64 %1728
  %1730 = load double, ptr %1729, align 8, !tbaa !133
  %1731 = call double @llvm.fmuladd.f64(double %1726, double %1545, double %1730)
  store double %1731, ptr %1729, align 8, !tbaa !133
  %1732 = or i64 %1717, 1
  br label %1733

1733:                                             ; preds = %1719, %1716
  %1734 = phi i64 [ %1717, %1716 ], [ %1732, %1719 ]
  %1735 = icmp eq i64 %1718, %1288
  br i1 %1735, label %1736, label %1744

1736:                                             ; preds = %1733, %1744, %1715
  %1737 = load double, ptr %1553, align 8, !tbaa !133
  %1738 = fmul double %1659, %1737
  %1739 = getelementptr inbounds double, ptr %1273, i64 %1647
  %1740 = load double, ptr %1739, align 8, !tbaa !133
  %1741 = call double @llvm.fmuladd.f64(double %1738, double %1545, double %1740)
  store double %1741, ptr %1739, align 8, !tbaa !133
  %1742 = add nuw nsw i64 %1647, 1
  %1743 = icmp eq i64 %1742, %1275
  br i1 %1743, label %1643, label %1646

1744:                                             ; preds = %1733, %1744
  %1745 = phi i64 [ %1771, %1744 ], [ %1734, %1733 ]
  %1746 = trunc i64 %1745 to i32
  %1747 = mul i32 %1552, %1746
  %1748 = add i32 %1747, %1555
  %1749 = zext i32 %1748 to i64
  %1750 = getelementptr inbounds double, ptr %1551, i64 %1749
  %1751 = load double, ptr %1750, align 8, !tbaa !133
  %1752 = fmul double %1659, %1751
  %1753 = add i32 %1660, %1746
  %1754 = zext i32 %1753 to i64
  %1755 = getelementptr inbounds double, ptr %1270, i64 %1754
  %1756 = load double, ptr %1755, align 8, !tbaa !133
  %1757 = call double @llvm.fmuladd.f64(double %1752, double %1545, double %1756)
  store double %1757, ptr %1755, align 8, !tbaa !133
  %1758 = trunc i64 %1745 to i32
  %1759 = add i32 %1758, 1
  %1760 = mul i32 %1552, %1759
  %1761 = add i32 %1760, %1555
  %1762 = zext i32 %1761 to i64
  %1763 = getelementptr inbounds double, ptr %1551, i64 %1762
  %1764 = load double, ptr %1763, align 8, !tbaa !133
  %1765 = fmul double %1659, %1764
  %1766 = add i32 %1660, %1759
  %1767 = zext i32 %1766 to i64
  %1768 = getelementptr inbounds double, ptr %1270, i64 %1767
  %1769 = load double, ptr %1768, align 8, !tbaa !133
  %1770 = call double @llvm.fmuladd.f64(double %1765, double %1545, double %1769)
  store double %1770, ptr %1768, align 8, !tbaa !133
  %1771 = add nuw nsw i64 %1745, 2
  %1772 = icmp eq i64 %1771, %1275
  br i1 %1772, label %1736, label %1744, !llvm.loop !613

1773:                                             ; preds = %939, %735, %1078, %1419, %1643, %835, %626, %574, %1314, %1258
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11)
  store i32 0, ptr %11, align 4, !tbaa !59
  %1774 = load ptr, ptr %109, align 8, !tbaa !33
  %1775 = load ptr, ptr %22, align 8, !tbaa !144
  %1776 = ptrtoint ptr %1774 to i64
  %1777 = ptrtoint ptr %1775 to i64
  %1778 = sub i64 %1776, %1777
  %1779 = ashr exact i64 %1778, 2
  %1780 = icmp ult i64 %1779, %410
  br i1 %1780, label %1781, label %1783

1781:                                             ; preds = %1773
  %1782 = sub nsw i64 %410, %1779
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %22, ptr %1774, i64 noundef %1782, ptr noundef nonnull align 4 dereferenceable(4) %11)
          to label %1789 unwind label %648

1783:                                             ; preds = %1773
  %1784 = icmp ugt i64 %1779, %410
  br i1 %1784, label %1785, label %1789

1785:                                             ; preds = %1783
  %1786 = getelementptr inbounds i32, ptr %1775, i64 %410
  %1787 = icmp eq ptr %1774, %1786
  br i1 %1787, label %1789, label %1788

1788:                                             ; preds = %1785
  store ptr %1786, ptr %109, align 8, !tbaa !349
  br label %1789

1789:                                             ; preds = %1788, %1785, %1783, %1781
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11)
  %1790 = zext i32 %409 to i64
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4, !tbaa !59
  %1791 = load ptr, ptr %121, align 8, !tbaa !33
  %1792 = load ptr, ptr %23, align 8, !tbaa !144
  %1793 = ptrtoint ptr %1791 to i64
  %1794 = ptrtoint ptr %1792 to i64
  %1795 = sub i64 %1793, %1794
  %1796 = ashr exact i64 %1795, 2
  %1797 = icmp ult i64 %1796, %1790
  br i1 %1797, label %1798, label %1800

1798:                                             ; preds = %1789
  %1799 = sub nsw i64 %1790, %1796
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %23, ptr %1791, i64 noundef %1799, ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %1806 unwind label %648

1800:                                             ; preds = %1789
  %1801 = icmp ugt i64 %1796, %1790
  br i1 %1801, label %1802, label %1806

1802:                                             ; preds = %1800
  %1803 = getelementptr inbounds i32, ptr %1792, i64 %1790
  %1804 = icmp eq ptr %1791, %1803
  br i1 %1804, label %1806, label %1805

1805:                                             ; preds = %1802
  store ptr %1803, ptr %121, align 8, !tbaa !349
  br label %1806

1806:                                             ; preds = %1805, %1802, %1800, %1798
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  %1807 = load ptr, ptr %123, align 8
  %1808 = load i32, ptr %124, align 8
  %1809 = load ptr, ptr %24, align 8, !tbaa !54
  %1810 = ptrtoint ptr %1807 to i64
  %1811 = ptrtoint ptr %1809 to i64
  %1812 = sub i64 %1810, %1811
  %1813 = shl nsw i64 %1812, 3
  %1814 = zext i32 %1808 to i64
  %1815 = add nsw i64 %1813, %1814
  %1816 = icmp ugt i64 %1815, %410
  br i1 %1816, label %1817, label %1821

1817:                                             ; preds = %1806
  %1818 = lshr i64 %410, 6
  %1819 = getelementptr inbounds i64, ptr %1809, i64 %1818
  %1820 = and i32 %407, 63
  store ptr %1819, ptr %123, align 8
  store i32 %1820, ptr %124, align 8
  br label %1823

1821:                                             ; preds = %1806
  %1822 = sub i64 %410, %1815
  invoke void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(ptr noundef nonnull align 8 dereferenceable(40) %24, ptr %1807, i32 %1808, i64 noundef %1822, i1 noundef zeroext false)
          to label %1823 unwind label %648

1823:                                             ; preds = %1821, %1817
  %1824 = load ptr, ptr %144, align 8, !tbaa !325
  %1825 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1824, i64 0, i32 4
  %1826 = load i32, ptr %25, align 8, !tbaa !60
  %1827 = sext i32 %1826 to i64
  %1828 = load ptr, ptr %1825, align 8, !tbaa !350
  %1829 = getelementptr inbounds ptr, ptr %1828, i64 %1827
  %1830 = load ptr, ptr %1829, align 8, !tbaa !33
  %1831 = load i32, ptr %146, align 4, !tbaa !61
  %1832 = sext i32 %1831 to i64
  %1833 = load ptr, ptr %1830, align 8, !tbaa !144
  %1834 = getelementptr inbounds i32, ptr %1833, i64 %1832
  %1835 = load i32, ptr %1834, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %25, ptr noundef nonnull align 8 dereferenceable(24) %22, i32 noundef %1835)
          to label %1836 unwind label %648

1836:                                             ; preds = %1823
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %28) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !614)
  %1837 = load ptr, ptr %156, align 8, !tbaa !62, !noalias !614
  %1838 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1837, i64 0, i32 1
  %1839 = load i32, ptr %25, align 8, !tbaa !60
  %1840 = sext i32 %1839 to i64
  %1841 = load ptr, ptr %1838, align 8, !tbaa !46, !noalias !614
  %1842 = getelementptr inbounds ptr, ptr %1841, i64 %1840
  %1843 = load ptr, ptr %1842, align 8, !tbaa !33, !noalias !614
  %1844 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1843, i64 0, i32 4
  %1845 = load i32, ptr %146, align 4, !tbaa !61
  %1846 = sext i32 %1845 to i64
  %1847 = load ptr, ptr %1844, align 8, !tbaa !50, !noalias !614
  %1848 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %1847, i64 %1846
  %1849 = getelementptr inbounds [6 x i32], ptr %1848, i64 0, i64 %329
  %1850 = load i32, ptr %1849, align 4, !tbaa !59, !noalias !614
  %1851 = load ptr, ptr %144, align 8, !tbaa !325
  store i32 %1850, ptr %28, align 8, !tbaa !548, !alias.scope !614
  store ptr %1837, ptr %189, align 8, !tbaa !550, !alias.scope !614
  store ptr %1851, ptr %190, align 8, !tbaa !617, !alias.scope !614
  %1852 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1851, i64 0, i32 4
  %1853 = load ptr, ptr %1852, align 8, !tbaa !350
  %1854 = getelementptr inbounds ptr, ptr %1853, i64 %1840
  %1855 = load ptr, ptr %1854, align 8, !tbaa !33
  %1856 = load ptr, ptr %1855, align 8, !tbaa !144
  %1857 = getelementptr inbounds i32, ptr %1856, i64 %1846
  %1858 = load i32, ptr %1857, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi2ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %23, i32 noundef %1858)
          to label %1859 unwind label %1871

1859:                                             ; preds = %1836
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %28) #19
  br i1 %443, label %2057, label %1860

1860:                                             ; preds = %1859
  %1861 = load ptr, ptr %23, align 8, !tbaa !33
  %1862 = load ptr, ptr %121, align 8, !tbaa !33
  %1863 = load ptr, ptr %22, align 8, !tbaa !144
  %1864 = ptrtoint ptr %1862 to i64
  %1865 = ptrtoint ptr %1861 to i64
  %1866 = sub i64 %1864, %1865
  %1867 = icmp sgt i64 %1866, 15
  %1868 = lshr i64 %1866, 4
  %1869 = load ptr, ptr %24, align 8, !tbaa !54
  br label %1873

1870:                                             ; preds = %1956
  br i1 %443, label %2057, label %1968

1871:                                             ; preds = %1836
  %1872 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %28) #19
  br label %2155

1873:                                             ; preds = %1860, %1956
  %1874 = phi i64 [ 0, %1860 ], [ %1959, %1956 ]
  %1875 = getelementptr inbounds i32, ptr %1863, i64 %1874
  br i1 %1867, label %1876, label %1902

1876:                                             ; preds = %1873
  %1877 = load i32, ptr %1875, align 4, !tbaa !59
  br label %1878

1878:                                             ; preds = %1895, %1876
  %1879 = phi i64 [ %1868, %1876 ], [ %1897, %1895 ]
  %1880 = phi ptr [ %1861, %1876 ], [ %1896, %1895 ]
  %1881 = load i32, ptr %1880, align 4, !tbaa !59
  %1882 = icmp eq i32 %1881, %1877
  br i1 %1882, label %1940, label %1883

1883:                                             ; preds = %1878
  %1884 = getelementptr inbounds i32, ptr %1880, i64 1
  %1885 = load i32, ptr %1884, align 4, !tbaa !59
  %1886 = icmp eq i32 %1885, %1877
  br i1 %1886, label %1938, label %1887

1887:                                             ; preds = %1883
  %1888 = getelementptr inbounds i32, ptr %1880, i64 2
  %1889 = load i32, ptr %1888, align 4, !tbaa !59
  %1890 = icmp eq i32 %1889, %1877
  br i1 %1890, label %1936, label %1891

1891:                                             ; preds = %1887
  %1892 = getelementptr inbounds i32, ptr %1880, i64 3
  %1893 = load i32, ptr %1892, align 4, !tbaa !59
  %1894 = icmp eq i32 %1893, %1877
  br i1 %1894, label %1934, label %1895

1895:                                             ; preds = %1891
  %1896 = getelementptr inbounds i32, ptr %1880, i64 4
  %1897 = add nsw i64 %1879, -1
  %1898 = icmp sgt i64 %1879, 1
  br i1 %1898, label %1878, label %1899

1899:                                             ; preds = %1895
  %1900 = ptrtoint ptr %1896 to i64
  %1901 = sub i64 %1864, %1900
  br label %1902

1902:                                             ; preds = %1899, %1873
  %1903 = phi i64 [ %1901, %1899 ], [ %1866, %1873 ]
  %1904 = phi ptr [ %1896, %1899 ], [ %1861, %1873 ]
  %1905 = ashr exact i64 %1903, 2
  switch i64 %1905, label %1906 [
    i64 3, label %1915
    i64 2, label %1913
    i64 1, label %1911
  ]

1906:                                             ; preds = %1902
  %1907 = lshr i64 %1874, 6
  %1908 = getelementptr inbounds i64, ptr %1869, i64 %1907
  %1909 = and i64 %1874, 63
  %1910 = shl nuw i64 1, %1909
  br label %1950

1911:                                             ; preds = %1902
  %1912 = load i32, ptr %1875, align 4, !tbaa !59
  br label %1928

1913:                                             ; preds = %1902
  %1914 = load i32, ptr %1875, align 4, !tbaa !59
  br label %1921

1915:                                             ; preds = %1902
  %1916 = load i32, ptr %1904, align 4, !tbaa !59
  %1917 = load i32, ptr %1875, align 4, !tbaa !59
  %1918 = icmp eq i32 %1916, %1917
  br i1 %1918, label %1940, label %1919

1919:                                             ; preds = %1915
  %1920 = getelementptr inbounds i32, ptr %1904, i64 1
  br label %1921

1921:                                             ; preds = %1919, %1913
  %1922 = phi i32 [ %1914, %1913 ], [ %1917, %1919 ]
  %1923 = phi ptr [ %1904, %1913 ], [ %1920, %1919 ]
  %1924 = load i32, ptr %1923, align 4, !tbaa !59
  %1925 = icmp eq i32 %1924, %1922
  br i1 %1925, label %1940, label %1926

1926:                                             ; preds = %1921
  %1927 = getelementptr inbounds i32, ptr %1923, i64 1
  br label %1928

1928:                                             ; preds = %1926, %1911
  %1929 = phi i32 [ %1912, %1911 ], [ %1922, %1926 ]
  %1930 = phi ptr [ %1904, %1911 ], [ %1927, %1926 ]
  %1931 = load i32, ptr %1930, align 4, !tbaa !59
  %1932 = icmp eq i32 %1931, %1929
  %1933 = select i1 %1932, ptr %1930, ptr %1862
  br label %1940

1934:                                             ; preds = %1891
  %1935 = getelementptr inbounds i32, ptr %1880, i64 3
  br label %1940

1936:                                             ; preds = %1887
  %1937 = getelementptr inbounds i32, ptr %1880, i64 2
  br label %1940

1938:                                             ; preds = %1883
  %1939 = getelementptr inbounds i32, ptr %1880, i64 1
  br label %1940

1940:                                             ; preds = %1878, %1934, %1936, %1938, %1928, %1921, %1915
  %1941 = phi ptr [ %1904, %1915 ], [ %1923, %1921 ], [ %1933, %1928 ], [ %1935, %1934 ], [ %1937, %1936 ], [ %1939, %1938 ], [ %1880, %1878 ]
  %1942 = icmp eq ptr %1941, %1862
  %1943 = lshr i64 %1874, 6
  %1944 = getelementptr inbounds i64, ptr %1869, i64 %1943
  %1945 = and i64 %1874, 63
  %1946 = shl nuw i64 1, %1945
  br i1 %1942, label %1950, label %1947

1947:                                             ; preds = %1940
  %1948 = load i64, ptr %1944, align 8, !tbaa !56
  %1949 = or i64 %1948, %1946
  br label %1956

1950:                                             ; preds = %1906, %1940
  %1951 = phi i64 [ %1910, %1906 ], [ %1946, %1940 ]
  %1952 = phi ptr [ %1908, %1906 ], [ %1944, %1940 ]
  %1953 = xor i64 %1951, -1
  %1954 = load i64, ptr %1952, align 8, !tbaa !56
  %1955 = and i64 %1954, %1953
  br label %1956

1956:                                             ; preds = %1947, %1950
  %1957 = phi ptr [ %1952, %1950 ], [ %1944, %1947 ]
  %1958 = phi i64 [ %1955, %1950 ], [ %1949, %1947 ]
  store i64 %1958, ptr %1957, align 8, !tbaa !56
  %1959 = add nuw nsw i64 %1874, 1
  %1960 = icmp eq i64 %1959, %410
  br i1 %1960, label %1870, label %1873

1961:                                             ; preds = %1975
  br i1 %443, label %2057, label %1962

1962:                                             ; preds = %1961
  %1963 = load ptr, ptr %24, align 8, !tbaa !54
  %1964 = load ptr, ptr %170, align 8
  %1965 = load ptr, ptr %22, align 8
  %1966 = load ptr, ptr %4, align 8
  %1967 = load ptr, ptr %193, align 8
  br label %2032

1968:                                             ; preds = %1870, %1975
  %1969 = phi i64 [ %1976, %1975 ], [ 0, %1870 ]
  %1970 = trunc i64 %1969 to i32
  %1971 = lshr i64 %1969, 6
  %1972 = and i64 %1971, 67108863
  %1973 = and i64 %1969, 63
  %1974 = shl nuw i64 1, %1973
  br label %1978

1975:                                             ; preds = %2029
  %1976 = add nuw nsw i64 %1969, 1
  %1977 = icmp eq i64 %1976, %410
  br i1 %1977, label %1961, label %1968

1978:                                             ; preds = %1968, %2029
  %1979 = phi i64 [ 0, %1968 ], [ %2030, %2029 ]
  %1980 = load ptr, ptr %24, align 8, !tbaa !54
  %1981 = getelementptr inbounds i64, ptr %1980, i64 %1972
  %1982 = load i64, ptr %1981, align 8, !tbaa !56
  %1983 = and i64 %1982, %1974
  %1984 = icmp eq i64 %1983, 0
  br i1 %1984, label %2029, label %1985

1985:                                             ; preds = %1978
  %1986 = lshr i64 %1979, 6
  %1987 = and i64 %1986, 67108863
  %1988 = getelementptr inbounds i64, ptr %1980, i64 %1987
  %1989 = and i64 %1979, 63
  %1990 = shl nuw i64 1, %1989
  %1991 = load i64, ptr %1988, align 8, !tbaa !56
  %1992 = and i64 %1991, %1990
  %1993 = icmp eq i64 %1992, 0
  br i1 %1993, label %2029, label %1994

1994:                                             ; preds = %1985
  %1995 = trunc i64 %1979 to i32
  %1996 = load ptr, ptr %168, align 8, !tbaa !140
  %1997 = load i32, ptr %166, align 8, !tbaa !59
  %1998 = mul i32 %1997, %1970
  %1999 = add i32 %1998, %1995
  %2000 = zext i32 %1999 to i64
  %2001 = getelementptr inbounds double, ptr %1996, i64 %2000
  %2002 = load double, ptr %2001, align 8, !tbaa !133
  %2003 = fcmp oeq double %2002, 0.000000e+00
  br i1 %2003, label %2029, label %2004

2004:                                             ; preds = %1994
  %2005 = load ptr, ptr %4, align 8, !tbaa !144
  %2006 = load ptr, ptr %22, align 8, !tbaa !144
  %2007 = getelementptr inbounds i32, ptr %2006, i64 %1979
  %2008 = load i32, ptr %2007, align 4, !tbaa !59
  %2009 = zext i32 %2008 to i64
  %2010 = getelementptr inbounds i32, ptr %2005, i64 %2009
  %2011 = load i32, ptr %2010, align 4, !tbaa !59
  %2012 = getelementptr inbounds i32, ptr %2006, i64 %1969
  %2013 = load i32, ptr %2012, align 4, !tbaa !59
  %2014 = zext i32 %2013 to i64
  %2015 = getelementptr inbounds i32, ptr %2005, i64 %2014
  %2016 = load i32, ptr %2015, align 4, !tbaa !59
  %2017 = load ptr, ptr %191, align 8, !tbaa !383
  %2018 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %2017, i32 noundef %2016, i32 noundef %2011)
          to label %2019 unwind label %2027

2019:                                             ; preds = %2004
  %2020 = icmp eq i32 %2018, -1
  br i1 %2020, label %2029, label %2021

2021:                                             ; preds = %2019
  %2022 = load ptr, ptr %192, align 8, !tbaa !385
  %2023 = zext i32 %2018 to i64
  %2024 = getelementptr inbounds double, ptr %2022, i64 %2023
  %2025 = load double, ptr %2024, align 8, !tbaa !133
  %2026 = fadd double %2002, %2025
  store double %2026, ptr %2024, align 8, !tbaa !133
  br label %2029

2027:                                             ; preds = %2004
  %2028 = landingpad { ptr, i32 }
          cleanup
  br label %2155

2029:                                             ; preds = %1978, %2021, %2019, %1994, %1985
  %2030 = add nuw nsw i64 %1979, 1
  %2031 = icmp eq i64 %2030, %410
  br i1 %2031, label %1975, label %1978

2032:                                             ; preds = %1962, %2054
  %2033 = phi i64 [ 0, %1962 ], [ %2055, %2054 ]
  %2034 = lshr i64 %2033, 6
  %2035 = and i64 %2034, 67108863
  %2036 = getelementptr inbounds i64, ptr %1963, i64 %2035
  %2037 = and i64 %2033, 63
  %2038 = shl nuw i64 1, %2037
  %2039 = load i64, ptr %2036, align 8, !tbaa !56
  %2040 = and i64 %2039, %2038
  %2041 = icmp eq i64 %2040, 0
  br i1 %2041, label %2054, label %2042

2042:                                             ; preds = %2032
  %2043 = getelementptr inbounds double, ptr %1964, i64 %2033
  %2044 = load double, ptr %2043, align 8, !tbaa !133
  %2045 = getelementptr inbounds i32, ptr %1965, i64 %2033
  %2046 = load i32, ptr %2045, align 4, !tbaa !59
  %2047 = zext i32 %2046 to i64
  %2048 = getelementptr inbounds i32, ptr %1966, i64 %2047
  %2049 = load i32, ptr %2048, align 4, !tbaa !59
  %2050 = zext i32 %2049 to i64
  %2051 = getelementptr inbounds double, ptr %1967, i64 %2050
  %2052 = load double, ptr %2051, align 8, !tbaa !133
  %2053 = fadd double %2044, %2052
  store double %2053, ptr %2051, align 8, !tbaa !133
  br label %2054

2054:                                             ; preds = %2042, %2032
  %2055 = add nuw nsw i64 %2033, 1
  %2056 = icmp eq i64 %2055, %410
  br i1 %2056, label %2057, label %2032

2057:                                             ; preds = %2054, %1859, %1870, %1961, %328, %365, %367
  %2058 = add nuw nsw i64 %329, 1
  %2059 = icmp eq i64 %2058, 6
  br i1 %2059, label %199, label %328, !llvm.loop !619

2060:                                             ; preds = %314
  %2061 = load ptr, ptr %24, align 8, !tbaa !54
  br label %2062

2062:                                             ; preds = %2060, %140
  %2063 = phi ptr [ %2061, %2060 ], [ %141, %140 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %25) #19
  %2064 = icmp eq ptr %2063, null
  br i1 %2064, label %2073, label %2065

2065:                                             ; preds = %2062
  %2066 = load ptr, ptr %125, align 8, !tbaa !573
  %2067 = ptrtoint ptr %2066 to i64
  %2068 = ptrtoint ptr %2063 to i64
  %2069 = sub i64 %2067, %2068
  %2070 = ashr exact i64 %2069, 3
  %2071 = sub nsw i64 0, %2070
  %2072 = getelementptr inbounds i64, ptr %2066, i64 %2071
  call void @_ZdlPv(ptr noundef %2072) #21
  store ptr null, ptr %24, align 8
  store i32 0, ptr %122, align 8
  store ptr null, ptr %123, align 8
  br label %2073

2073:                                             ; preds = %2065, %2062
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %24) #19
  %2074 = load ptr, ptr %23, align 8, !tbaa !144
  %2075 = icmp eq ptr %2074, null
  br i1 %2075, label %2077, label %2076

2076:                                             ; preds = %2073
  call void @_ZdlPv(ptr noundef nonnull %2074) #21
  br label %2077

2077:                                             ; preds = %2076, %2073
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #19
  %2078 = load ptr, ptr %22, align 8, !tbaa !144
  %2079 = icmp eq ptr %2078, null
  br i1 %2079, label %2081, label %2080

2080:                                             ; preds = %2077
  call void @_ZdlPv(ptr noundef nonnull %2078) #21
  br label %2081

2081:                                             ; preds = %2080, %2077
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #19
  %2082 = load ptr, ptr %21, align 8, !tbaa !224
  %2083 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %21, i64 0, i32 1
  %2084 = load ptr, ptr %2083, align 8, !tbaa !226
  %2085 = icmp eq ptr %2082, %2084
  br i1 %2085, label %2095, label %2086

2086:                                             ; preds = %2081, %2090
  %2087 = phi ptr [ %2091, %2090 ], [ %2082, %2081 ]
  %2088 = load ptr, ptr %2087, align 8, !tbaa !41
  %2089 = load ptr, ptr %2088, align 8
  invoke void %2089(ptr noundef nonnull align 8 dereferenceable(88) %2087)
          to label %2090 unwind label %2099

2090:                                             ; preds = %2086
  %2091 = getelementptr inbounds %"class.dealii::Vector", ptr %2087, i64 1
  %2092 = icmp eq ptr %2091, %2084
  br i1 %2092, label %2093, label %2086

2093:                                             ; preds = %2090
  %2094 = load ptr, ptr %21, align 8, !tbaa !224
  br label %2095

2095:                                             ; preds = %2093, %2081
  %2096 = phi ptr [ %2094, %2093 ], [ %2082, %2081 ]
  %2097 = icmp eq ptr %2096, null
  br i1 %2097, label %2103, label %2098

2098:                                             ; preds = %2095
  call void @_ZdlPv(ptr noundef nonnull %2096) #21
  br label %2103

2099:                                             ; preds = %2086
  %2100 = landingpad { ptr, i32 }
          cleanup
  %2101 = load ptr, ptr %21, align 8, !tbaa !224
  %2102 = icmp eq ptr %2101, null
  br i1 %2102, label %2203, label %2200

2103:                                             ; preds = %2098, %2095
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %2104 = load ptr, ptr %20, align 8, !tbaa !131
  %2105 = icmp eq ptr %2104, null
  br i1 %2105, label %2107, label %2106

2106:                                             ; preds = %2103
  call void @_ZdlPv(ptr noundef nonnull %2104) #21
  br label %2107

2107:                                             ; preds = %2106, %2103
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %2108 = load ptr, ptr %19, align 8, !tbaa !224
  %2109 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %19, i64 0, i32 1
  %2110 = load ptr, ptr %2109, align 8, !tbaa !226
  %2111 = icmp eq ptr %2108, %2110
  br i1 %2111, label %2121, label %2112

2112:                                             ; preds = %2107, %2116
  %2113 = phi ptr [ %2117, %2116 ], [ %2108, %2107 ]
  %2114 = load ptr, ptr %2113, align 8, !tbaa !41
  %2115 = load ptr, ptr %2114, align 8
  invoke void %2115(ptr noundef nonnull align 8 dereferenceable(88) %2113)
          to label %2116 unwind label %2125

2116:                                             ; preds = %2112
  %2117 = getelementptr inbounds %"class.dealii::Vector", ptr %2113, i64 1
  %2118 = icmp eq ptr %2117, %2110
  br i1 %2118, label %2119, label %2112

2119:                                             ; preds = %2116
  %2120 = load ptr, ptr %19, align 8, !tbaa !224
  br label %2121

2121:                                             ; preds = %2119, %2107
  %2122 = phi ptr [ %2120, %2119 ], [ %2108, %2107 ]
  %2123 = icmp eq ptr %2122, null
  br i1 %2123, label %2129, label %2124

2124:                                             ; preds = %2121
  call void @_ZdlPv(ptr noundef nonnull %2122) #21
  br label %2129

2125:                                             ; preds = %2112
  %2126 = landingpad { ptr, i32 }
          cleanup
  %2127 = load ptr, ptr %19, align 8, !tbaa !224
  %2128 = icmp eq ptr %2127, null
  br i1 %2128, label %2233, label %2230

2129:                                             ; preds = %2124, %2121
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %2130 = load ptr, ptr %18, align 8, !tbaa !131
  %2131 = icmp eq ptr %2130, null
  br i1 %2131, label %2133, label %2132

2132:                                             ; preds = %2129
  call void @_ZdlPv(ptr noundef nonnull %2130) #21
  br label %2133

2133:                                             ; preds = %2132, %2129
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %2134 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %2134)
          to label %2135 unwind label %2137

2135:                                             ; preds = %2133
  %2136 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %2136)
          to label %2143 unwind label %322

2137:                                             ; preds = %2133
  %2138 = landingpad { ptr, i32 }
          cleanup
  %2139 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %2139)
          to label %2248 unwind label %2140

2140:                                             ; preds = %2137
  %2141 = landingpad { ptr, i32 }
          catch ptr null
  %2142 = extractvalue { ptr, i32 } %2141, 0
  call void @__clang_call_terminate(ptr %2142) #22
  unreachable

2143:                                             ; preds = %2135
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %17) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %2144 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %2145 = load ptr, ptr %2144, align 8, !tbaa !136
  %2146 = icmp eq ptr %2145, null
  br i1 %2146, label %2148, label %2147

2147:                                             ; preds = %2143
  call void @_ZdaPv(ptr noundef nonnull %2145) #21
  store ptr null, ptr %2144, align 8, !tbaa !136
  br label %2148

2148:                                             ; preds = %2147, %2143
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %2149 unwind label %320

2149:                                             ; preds = %2148
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %2150 = getelementptr inbounds %"class.dealii::TableBase", ptr %15, i64 0, i32 1
  %2151 = load ptr, ptr %2150, align 8, !tbaa !140
  %2152 = icmp eq ptr %2151, null
  br i1 %2152, label %2154, label %2153

2153:                                             ; preds = %2149
  call void @_ZdaPv(ptr noundef nonnull %2151) #21
  br label %2154

2154:                                             ; preds = %2149, %2153
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %15) #19
  ret void

2155:                                             ; preds = %2027, %797, %488, %648, %646, %859, %654, %1871, %1347, %656
  %2156 = phi { ptr, i32 } [ %647, %646 ], [ %1872, %1871 ], [ %860, %859 ], [ %657, %656 ], [ %655, %654 ], [ %1348, %1347 ], [ %489, %488 ], [ %649, %648 ], [ %798, %797 ], [ %2028, %2027 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %25) #19
  %2157 = load ptr, ptr %24, align 8, !tbaa !54
  %2158 = icmp eq ptr %2157, null
  br i1 %2158, label %2167, label %2159

2159:                                             ; preds = %2155
  %2160 = load ptr, ptr %125, align 8, !tbaa !573
  %2161 = ptrtoint ptr %2160 to i64
  %2162 = ptrtoint ptr %2157 to i64
  %2163 = sub i64 %2161, %2162
  %2164 = ashr exact i64 %2163, 3
  %2165 = sub nsw i64 0, %2164
  %2166 = getelementptr inbounds i64, ptr %2160, i64 %2165
  call void @_ZdlPv(ptr noundef %2166) #21
  store ptr null, ptr %24, align 8
  store i32 0, ptr %122, align 8
  store ptr null, ptr %123, align 8
  br label %2167

2167:                                             ; preds = %2159, %2155, %138
  %2168 = phi { ptr, i32 } [ %139, %138 ], [ %2156, %2155 ], [ %2156, %2159 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %24) #19
  %2169 = load ptr, ptr %23, align 8, !tbaa !144
  %2170 = icmp eq ptr %2169, null
  br i1 %2170, label %2172, label %2171

2171:                                             ; preds = %2167
  call void @_ZdlPv(ptr noundef nonnull %2169) #21
  br label %2172

2172:                                             ; preds = %2171, %2167, %326
  %2173 = phi { ptr, i32 } [ %327, %326 ], [ %2168, %2167 ], [ %2168, %2171 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %23) #19
  %2174 = load ptr, ptr %22, align 8, !tbaa !144
  %2175 = icmp eq ptr %2174, null
  br i1 %2175, label %2177, label %2176

2176:                                             ; preds = %2172
  call void @_ZdlPv(ptr noundef nonnull %2174) #21
  br label %2177

2177:                                             ; preds = %2176, %2172, %324
  %2178 = phi { ptr, i32 } [ %325, %324 ], [ %2173, %2172 ], [ %2173, %2176 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %22) #19
  %2179 = load ptr, ptr %21, align 8, !tbaa !224
  %2180 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %21, i64 0, i32 1
  %2181 = load ptr, ptr %2180, align 8, !tbaa !226
  %2182 = icmp eq ptr %2179, %2181
  br i1 %2182, label %2192, label %2183

2183:                                             ; preds = %2177, %2187
  %2184 = phi ptr [ %2188, %2187 ], [ %2179, %2177 ]
  %2185 = load ptr, ptr %2184, align 8, !tbaa !41
  %2186 = load ptr, ptr %2185, align 8
  invoke void %2186(ptr noundef nonnull align 8 dereferenceable(88) %2184)
          to label %2187 unwind label %2195

2187:                                             ; preds = %2183
  %2188 = getelementptr inbounds %"class.dealii::Vector", ptr %2184, i64 1
  %2189 = icmp eq ptr %2188, %2181
  br i1 %2189, label %2190, label %2183

2190:                                             ; preds = %2187
  %2191 = load ptr, ptr %21, align 8, !tbaa !224
  br label %2192

2192:                                             ; preds = %2190, %2177
  %2193 = phi ptr [ %2191, %2190 ], [ %2179, %2177 ]
  %2194 = icmp eq ptr %2193, null
  br i1 %2194, label %2203, label %2200

2195:                                             ; preds = %2183
  %2196 = landingpad { ptr, i32 }
          catch ptr null
  %2197 = load ptr, ptr %21, align 8, !tbaa !224
  %2198 = icmp eq ptr %2197, null
  br i1 %2198, label %2265, label %2199

2199:                                             ; preds = %2195
  call void @_ZdlPv(ptr noundef nonnull %2197) #21
  br label %2265

2200:                                             ; preds = %2192, %2099
  %2201 = phi ptr [ %2101, %2099 ], [ %2193, %2192 ]
  %2202 = phi { ptr, i32 } [ %2100, %2099 ], [ %2178, %2192 ]
  call void @_ZdlPv(ptr noundef nonnull %2201) #21
  br label %2203

2203:                                             ; preds = %2200, %2192, %2099
  %2204 = phi { ptr, i32 } [ %2100, %2099 ], [ %2178, %2192 ], [ %2202, %2200 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %21) #19
  %2205 = load ptr, ptr %20, align 8, !tbaa !131
  %2206 = icmp eq ptr %2205, null
  br i1 %2206, label %2208, label %2207

2207:                                             ; preds = %2203
  call void @_ZdlPv(ptr noundef nonnull %2205) #21
  br label %2208

2208:                                             ; preds = %2207, %2203
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %2209 = load ptr, ptr %19, align 8, !tbaa !224
  %2210 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %19, i64 0, i32 1
  %2211 = load ptr, ptr %2210, align 8, !tbaa !226
  %2212 = icmp eq ptr %2209, %2211
  br i1 %2212, label %2222, label %2213

2213:                                             ; preds = %2208, %2217
  %2214 = phi ptr [ %2218, %2217 ], [ %2209, %2208 ]
  %2215 = load ptr, ptr %2214, align 8, !tbaa !41
  %2216 = load ptr, ptr %2215, align 8
  invoke void %2216(ptr noundef nonnull align 8 dereferenceable(88) %2214)
          to label %2217 unwind label %2225

2217:                                             ; preds = %2213
  %2218 = getelementptr inbounds %"class.dealii::Vector", ptr %2214, i64 1
  %2219 = icmp eq ptr %2218, %2211
  br i1 %2219, label %2220, label %2213

2220:                                             ; preds = %2217
  %2221 = load ptr, ptr %19, align 8, !tbaa !224
  br label %2222

2222:                                             ; preds = %2220, %2208
  %2223 = phi ptr [ %2221, %2220 ], [ %2209, %2208 ]
  %2224 = icmp eq ptr %2223, null
  br i1 %2224, label %2233, label %2230

2225:                                             ; preds = %2213
  %2226 = landingpad { ptr, i32 }
          catch ptr null
  %2227 = load ptr, ptr %19, align 8, !tbaa !224
  %2228 = icmp eq ptr %2227, null
  br i1 %2228, label %2265, label %2229

2229:                                             ; preds = %2225
  call void @_ZdlPv(ptr noundef nonnull %2227) #21
  br label %2265

2230:                                             ; preds = %2222, %2125
  %2231 = phi ptr [ %2127, %2125 ], [ %2223, %2222 ]
  %2232 = phi { ptr, i32 } [ %2126, %2125 ], [ %2204, %2222 ]
  call void @_ZdlPv(ptr noundef nonnull %2231) #21
  br label %2233

2233:                                             ; preds = %2230, %2222, %2125
  %2234 = phi { ptr, i32 } [ %2126, %2125 ], [ %2204, %2222 ], [ %2232, %2230 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %2235 = load ptr, ptr %18, align 8, !tbaa !131
  %2236 = icmp eq ptr %2235, null
  br i1 %2236, label %2238, label %2237

2237:                                             ; preds = %2233
  call void @_ZdlPv(ptr noundef nonnull %2235) #21
  br label %2238

2238:                                             ; preds = %2237, %2233
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %2239 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %2239)
          to label %2240 unwind label %2242

2240:                                             ; preds = %2238
  %2241 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %2241)
          to label %2248 unwind label %2263

2242:                                             ; preds = %2238
  %2243 = landingpad { ptr, i32 }
          catch ptr null
  %2244 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase.444", ptr %17, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %2244)
          to label %2265 unwind label %2245

2245:                                             ; preds = %2242
  %2246 = landingpad { ptr, i32 }
          catch ptr null
  %2247 = extractvalue { ptr, i32 } %2246, 0
  call void @__clang_call_terminate(ptr %2247) #22
  unreachable

2248:                                             ; preds = %2240, %2137, %322
  %2249 = phi { ptr, i32 } [ %323, %322 ], [ %2138, %2137 ], [ %2234, %2240 ]
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %17) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %2250 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %2251 = load ptr, ptr %2250, align 8, !tbaa !136
  %2252 = icmp eq ptr %2251, null
  br i1 %2252, label %2254, label %2253

2253:                                             ; preds = %2248
  call void @_ZdaPv(ptr noundef nonnull %2251) #21
  store ptr null, ptr %2250, align 8, !tbaa !136
  br label %2254

2254:                                             ; preds = %2253, %2248
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %2255 unwind label %2263

2255:                                             ; preds = %2254, %320, %92
  %2256 = phi { ptr, i32 } [ %321, %320 ], [ %93, %92 ], [ %2249, %2254 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %2257 = getelementptr inbounds %"class.dealii::TableBase", ptr %15, i64 0, i32 1
  %2258 = load ptr, ptr %2257, align 8, !tbaa !140
  %2259 = icmp eq ptr %2258, null
  br i1 %2259, label %2261, label %2260

2260:                                             ; preds = %2255
  call void @_ZdaPv(ptr noundef nonnull %2258) #21
  br label %2261

2261:                                             ; preds = %2260, %2255
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %2262 unwind label %2263

2262:                                             ; preds = %2261
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %15) #19
  resume { ptr, i32 } %2256

2263:                                             ; preds = %2261, %2254, %2240, %859, %654
  %2264 = landingpad { ptr, i32 }
          catch ptr null
  br label %2265

2265:                                             ; preds = %2229, %2225, %2242, %2263, %2195, %2199
  %2266 = phi { ptr, i32 } [ %2196, %2199 ], [ %2196, %2195 ], [ %2226, %2229 ], [ %2226, %2225 ], [ %2264, %2263 ], [ %2243, %2242 ]
  %2267 = extractvalue { ptr, i32 } %2266, 0
  call void @__clang_call_terminate(ptr %2267) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleINS5_IRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexESJ_EELi9EEclESK_SN_S11_S14_S18_SS_S1A_S1D_S1F_(ptr noalias sret(%"class.dealii::Threads::Thread") align 8 %0, ptr noundef nonnull align 8 dereferenceable(32) %1, ptr noundef byval(%"class.boost::tuples::tuple.146") align 8 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %9, ptr noundef nonnull align 1 dereferenceable(1) %10) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.151", align 8
  %13 = alloca %"class.dealii::TriaAccessorBase", align 8
  %14 = alloca %"class.dealii::TriaAccessorBase", align 8
  %15 = alloca %"class.boost::function.266", align 8
  %16 = alloca %"class.boost::_bi::bind_t.449", align 8
  %17 = alloca %"class.boost::function.151", align 8
  %18 = alloca %"class.dealii::TriaAccessorBase", align 8
  %19 = alloca %"class.dealii::TriaAccessorBase", align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  store ptr null, ptr %17, align 8, !tbaa !25
  %20 = load ptr, ptr %1, align 8, !tbaa !25
  %21 = icmp eq ptr %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %11
  store ptr %20, ptr %17, align 8, !tbaa !25
  %23 = load ptr, ptr %20, align 8, !tbaa !227
  %24 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %25 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  call void %23(ptr noundef nonnull align 8 dereferenceable(24) %24, ptr noundef nonnull align 8 dereferenceable(24) %25, i32 noundef 0)
  %26 = load ptr, ptr %17, align 8, !tbaa !25, !noalias !621
  br label %27

27:                                               ; preds = %22, %11
  %28 = phi ptr [ %26, %22 ], [ null, %11 ]
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !325, !noalias !624
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !325, !noalias !624
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %31, i64 16, i1 false)
  %34 = ptrtoint ptr %10 to i64
  call void @llvm.experimental.noalias.scope.decl(metadata !621)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12)
  store ptr null, ptr %12, align 8, !tbaa !25, !noalias !621
  %35 = icmp eq ptr %28, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %27
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %31, i64 16, i1 false)
  store ptr null, ptr %16, align 8, !tbaa !25, !alias.scope !621
  br label %49

37:                                               ; preds = %27
  store ptr %28, ptr %12, align 8, !tbaa !25, !noalias !621
  %38 = load ptr, ptr %28, align 8, !tbaa !227, !noalias !621
  %39 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  %40 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %38(ptr noundef nonnull align 8 dereferenceable(24) %39, ptr noundef nonnull align 8 dereferenceable(24) %40, i32 noundef 0)
          to label %41 unwind label %109

41:                                               ; preds = %37
  %42 = load ptr, ptr %12, align 8, !tbaa !25, !noalias !621
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false), !noalias !621
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false), !noalias !621
  store ptr null, ptr %16, align 8, !tbaa !25, !alias.scope !621
  %43 = icmp eq ptr %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  store ptr %42, ptr %16, align 8, !tbaa !25, !alias.scope !621
  %45 = load ptr, ptr %42, align 8, !tbaa !227, !noalias !621
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %16, i64 0, i32 1
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(24) %40, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 0)
          to label %47 unwind label %69

47:                                               ; preds = %44
  %48 = load ptr, ptr %12, align 8, !tbaa !25, !noalias !621
  br label %49

49:                                               ; preds = %36, %47, %41
  %50 = phi ptr [ %48, %47 ], [ null, %41 ], [ null, %36 ]
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %52, align 8, !alias.scope !621
  %53 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %53, align 8, !alias.scope !621
  %54 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %54, align 8, !alias.scope !621
  %55 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %6, ptr %55, align 8, !alias.scope !621
  %56 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %7, ptr %56, align 8, !alias.scope !621
  %57 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %8, ptr %57, align 8, !alias.scope !621
  %58 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %58, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false)
  %59 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %59, align 8, !tbaa !325, !alias.scope !621
  %60 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %60, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %61 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %33, ptr %61, align 8, !tbaa !325, !alias.scope !621
  %62 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %16, i64 0, i32 1, i32 0, i32 1
  store i64 %34, ptr %62, align 8, !tbaa !33, !alias.scope !621
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %63 = icmp eq ptr %50, null
  br i1 %63, label %80, label %64

64:                                               ; preds = %49
  %65 = load ptr, ptr %50, align 8, !tbaa !563
  %66 = icmp eq ptr %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  invoke void %65(ptr noundef nonnull align 8 dereferenceable(24) %68, ptr noundef nonnull align 8 dereferenceable(24) %68, i32 noundef 2)
          to label %80 unwind label %109

69:                                               ; preds = %44
  %70 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %71 = load ptr, ptr %12, align 8, !tbaa !25, !noalias !621
  %72 = icmp eq ptr %71, null
  br i1 %72, label %133, label %73

73:                                               ; preds = %69
  %74 = load ptr, ptr %71, align 8, !tbaa !563
  %75 = icmp eq ptr %74, null
  br i1 %75, label %133, label %76

76:                                               ; preds = %73
  invoke void %74(ptr noundef nonnull align 8 dereferenceable(24) %40, ptr noundef nonnull align 8 dereferenceable(24) %40, i32 noundef 2)
          to label %133 unwind label %77

77:                                               ; preds = %76
  %78 = landingpad { ptr, i32 }
          catch ptr null
  %79 = extractvalue { ptr, i32 } %78, 0
  call void @__clang_call_terminate(ptr %79) #22
  unreachable

80:                                               ; preds = %64, %49, %67
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12)
  invoke void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS4_5list9INS4_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS21_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull %16, i32 noundef 0)
          to label %81 unwind label %111

81:                                               ; preds = %80
  invoke void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %15)
          to label %82 unwind label %113

82:                                               ; preds = %81
  %83 = load ptr, ptr %15, align 8, !tbaa !25
  %84 = icmp eq ptr %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load ptr, ptr %83, align 8, !tbaa !231
  %87 = icmp eq ptr %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %89, ptr noundef nonnull align 8 dereferenceable(24) %89, i32 noundef 2)
          to label %90 unwind label %111

90:                                               ; preds = %88, %85
  store ptr null, ptr %15, align 8, !tbaa !25
  br label %91

91:                                               ; preds = %90, %82
  %92 = load ptr, ptr %16, align 8, !tbaa !25
  %93 = icmp eq ptr %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = load ptr, ptr %92, align 8, !tbaa !563
  %96 = icmp eq ptr %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.boost::function_base", ptr %16, i64 0, i32 1
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %98, ptr noundef nonnull align 8 dereferenceable(24) %98, i32 noundef 2)
          to label %99 unwind label %109

99:                                               ; preds = %97, %94
  store ptr null, ptr %16, align 8, !tbaa !25
  br label %100

100:                                              ; preds = %99, %91
  %101 = load ptr, ptr %17, align 8, !tbaa !25
  %102 = icmp eq ptr %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = load ptr, ptr %101, align 8, !tbaa !563
  %105 = icmp eq ptr %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  call void %104(ptr noundef nonnull align 8 dereferenceable(24) %107, ptr noundef nonnull align 8 dereferenceable(24) %107, i32 noundef 2)
  br label %108

108:                                              ; preds = %103, %106, %100
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  ret void

109:                                              ; preds = %97, %67, %37
  %110 = landingpad { ptr, i32 }
          cleanup
  br label %133

111:                                              ; preds = %88, %80
  %112 = landingpad { ptr, i32 }
          cleanup
  br label %123

113:                                              ; preds = %81
  %114 = landingpad { ptr, i32 }
          cleanup
  %115 = load ptr, ptr %15, align 8, !tbaa !25
  %116 = icmp eq ptr %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = load ptr, ptr %115, align 8, !tbaa !231
  %119 = icmp eq ptr %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  invoke void %118(ptr noundef nonnull align 8 dereferenceable(24) %121, ptr noundef nonnull align 8 dereferenceable(24) %121, i32 noundef 2)
          to label %122 unwind label %143

122:                                              ; preds = %120, %117
  store ptr null, ptr %15, align 8, !tbaa !25
  br label %123

123:                                              ; preds = %122, %113, %111
  %124 = phi { ptr, i32 } [ %112, %111 ], [ %114, %113 ], [ %114, %122 ]
  %125 = load ptr, ptr %16, align 8, !tbaa !25
  %126 = icmp eq ptr %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = load ptr, ptr %125, align 8, !tbaa !563
  %129 = icmp eq ptr %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.boost::function_base", ptr %16, i64 0, i32 1
  invoke void %128(ptr noundef nonnull align 8 dereferenceable(24) %131, ptr noundef nonnull align 8 dereferenceable(24) %131, i32 noundef 2)
          to label %132 unwind label %143

132:                                              ; preds = %130, %127
  store ptr null, ptr %16, align 8, !tbaa !25
  br label %133

133:                                              ; preds = %132, %123, %109, %76, %73, %69
  %134 = phi { ptr, i32 } [ %110, %109 ], [ %70, %76 ], [ %70, %73 ], [ %70, %69 ], [ %124, %123 ], [ %124, %132 ]
  %135 = load ptr, ptr %17, align 8, !tbaa !25
  %136 = icmp eq ptr %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = load ptr, ptr %135, align 8, !tbaa !563
  %139 = icmp eq ptr %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.boost::function_base", ptr %17, i64 0, i32 1
  invoke void %138(ptr noundef nonnull align 8 dereferenceable(24) %141, ptr noundef nonnull align 8 dereferenceable(24) %141, i32 noundef 2)
          to label %142 unwind label %143

142:                                              ; preds = %137, %140, %133
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  resume { ptr, i32 } %134

143:                                              ; preds = %140, %130, %120
  %144 = landingpad { ptr, i32 }
          catch ptr null
  %145 = extractvalue { ptr, i32 } %144, 0
  call void @__clang_call_terminate(ptr %145) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_2hp10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESO_(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef %7) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca %"class.std::vector.28", align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !33
  %12 = load ptr, ptr %7, align 8, !tbaa !33
  %13 = ptrtoint ptr %11 to i64
  %14 = ptrtoint ptr %12 to i64
  %15 = sub i64 %13, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq ptr %11, %12
  br i1 %17, label %23, label %18

18:                                               ; preds = %8
  %19 = icmp ugt i64 %15, 9223372036854775804
  br i1 %19, label %20, label %21, !prof !491

20:                                               ; preds = %18
  tail call void @_ZSt28__throw_bad_array_new_lengthv() #23
  unreachable

21:                                               ; preds = %18
  %22 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #20
  br label %23

23:                                               ; preds = %21, %8
  %24 = phi ptr [ null, %8 ], [ %22, %21 ]
  store ptr %24, ptr %9, align 8, !tbaa !144
  %25 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %9, i64 0, i32 1
  %26 = getelementptr inbounds i32, ptr %24, i64 %16
  %27 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %9, i64 0, i32 2
  store ptr %26, ptr %27, align 8, !tbaa !492
  %28 = icmp sgt i64 %15, 4
  br i1 %28, label %29, label %30, !prof !493

29:                                               ; preds = %23
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %24, ptr align 4 %12, i64 %15, i1 false)
  br label %34

30:                                               ; preds = %23
  %31 = icmp eq i64 %15, 4
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = load i32, ptr %12, align 4, !tbaa !59
  store i32 %33, ptr %24, align 4, !tbaa !59
  br label %34

34:                                               ; preds = %29, %30, %32
  store ptr %26, ptr %25, align 8, !tbaa !349
  invoke void @_ZN6dealii13MatrixCreator27create_boundary_mass_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXmiT_Li1EEEERNS_12SparseMatrixIdEERKNS_11FunctionMapIXT0_EE4typeERNS_6VectorIdEERSt6vectorIjSaIjEEPKNS_8FunctionIXT0_EEESS_(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull %9)
          to label %35 unwind label %40

35:                                               ; preds = %34
  %36 = load ptr, ptr %9, align 8, !tbaa !144
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @_ZdlPv(ptr noundef nonnull %36) #21
  br label %39

39:                                               ; preds = %35, %38
  ret void

40:                                               ; preds = %34
  %41 = landingpad { ptr, i32 }
          cleanup
  %42 = load ptr, ptr %9, align 8, !tbaa !144
  %43 = icmp eq ptr %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  call void @_ZdlPv(ptr noundef nonnull %42) #21
  br label %45

45:                                               ; preds = %44, %40
  resume { ptr, i32 } %41
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %7 = alloca %"class.std::vector", align 8
  %8 = alloca %"class.dealii::TriaActiveIterator", align 8
  %9 = alloca %"class.dealii::TriaActiveIterator", align 8
  %10 = alloca %"class.dealii::TriaRawIterator", align 8
  %11 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %12 = alloca %"class.dealii::Threads::Thread", align 16
  %13 = alloca %"class.dealii::Threads::internal::fun_encapsulator", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %15 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #19
  %16 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %6, i64 0, i32 1
  store ptr %6, ptr %16, align 8, !tbaa !10
  store ptr %6, ptr %6, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %6, i64 0, i32 1
  store i64 0, ptr %17, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %8, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %18 unwind label %41

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %10, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %19 unwind label %43

19:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  store ptr %22, ptr %20, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %15)
          to label %23 unwind label %43

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #19
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  %27 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.boost::shared_ptr", ptr %12, i64 0, i32 1
  %31 = zext i32 %15 to i64
  br label %47

32:                                               ; preds = %101, %23
  %33 = load ptr, ptr %6, align 8, !tbaa !13
  %34 = icmp eq ptr %33, %6
  br i1 %34, label %120, label %35

35:                                               ; preds = %32, %38
  %36 = phi ptr [ %39, %38 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.std::_List_node", ptr %36, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %37)
          to label %38 unwind label %153

38:                                               ; preds = %35
  %39 = load ptr, ptr %36, align 8, !tbaa !13
  %40 = icmp eq ptr %39, %6
  br i1 %40, label %120, label %35

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %45

43:                                               ; preds = %19, %18
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  br label %160

47:                                               ; preds = %25, %101
  %48 = phi i64 [ 0, %25 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !627)
  store ptr null, ptr %13, align 8, !tbaa !25, !alias.scope !627
  %49 = load ptr, ptr @_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable, align 8, !tbaa !27, !noalias !627
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %52 unwind label %104

52:                                               ; preds = %51, %47
  store ptr @_ZN6dealii13MatrixCreator23create_laplace_matrix_1ILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE, ptr %26, align 8, !tbaa !30, !alias.scope !627
  store ptr @_ZZN5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SQ_EEEvT_E13stored_vtable, ptr %13, align 8, !tbaa !25, !alias.scope !627
  %53 = load ptr, ptr %7, align 8, !tbaa !31
  %54 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  store ptr %56, ptr %27, align 8, !tbaa !17
  %57 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48, i32 1
  %58 = getelementptr inbounds %"struct.std::pair", ptr %53, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %57, i64 16, i1 false)
  store ptr %59, ptr %29, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeESU_SU_EELi7EEclES9_SD_SH_SK_SO_SR_ST_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %12, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %11)
          to label %60 unwind label %106

60:                                               ; preds = %52
  %61 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %62 unwind label %108

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::_List_node", ptr %61, i64 0, i32 1
  %64 = load <2 x ptr>, ptr %12, align 16, !tbaa !33
  store <2 x ptr> %64, ptr %63, align 8, !tbaa !33
  %65 = extractelement <2 x ptr> %64, i64 1
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %65, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !34
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %68, align 8, !tbaa !34
  br label %71

71:                                               ; preds = %67, %62
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %61, ptr noundef nonnull %6) #19
  %72 = load i64, ptr %17, align 8, !tbaa !36
  %73 = add i64 %72, 1
  store i64 %73, ptr %17, align 8, !tbaa !36
  %74 = load ptr, ptr %30, align 8, !tbaa !39
  %75 = icmp eq ptr %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !34
  %79 = add nsw i64 %78, -1
  store i64 %79, ptr %77, align 8, !tbaa !34
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = load ptr, ptr %74, align 8, !tbaa !41
  %83 = getelementptr inbounds ptr, ptr %82, i64 2
  %84 = load ptr, ptr %83, align 8
  invoke void %84(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %85 unwind label %106

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !43
  %88 = add nsw i64 %87, -1
  store i64 %88, ptr %86, align 8, !tbaa !43
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load ptr, ptr %74, align 8, !tbaa !41
  %92 = getelementptr inbounds ptr, ptr %91, i64 3
  %93 = load ptr, ptr %92, align 8
  invoke void %93(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %94 unwind label %106

94:                                               ; preds = %85, %76, %71, %90
  %95 = load ptr, ptr %13, align 8, !tbaa !25
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %95, align 8, !tbaa !27
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  invoke void %98(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %101 unwind label %104

101:                                              ; preds = %97, %100, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  %102 = add nuw nsw i64 %48, 1
  %103 = icmp eq i64 %102, %31
  br i1 %103, label %32, label %47

104:                                              ; preds = %100, %51
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %118

106:                                              ; preds = %90, %81, %52
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %110

108:                                              ; preds = %60
  %109 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %12)
          to label %110 unwind label %163

110:                                              ; preds = %108, %106
  %111 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ]
  %112 = load ptr, ptr %13, align 8, !tbaa !25
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load ptr, ptr %112, align 8, !tbaa !27
  %116 = icmp eq ptr %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  invoke void %115(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %118 unwind label %163

118:                                              ; preds = %114, %117, %110, %104
  %119 = phi { ptr, i32 } [ %105, %104 ], [ %111, %110 ], [ %111, %117 ], [ %111, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  br label %155

120:                                              ; preds = %38, %32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %121 = load ptr, ptr %7, align 8, !tbaa !31
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef nonnull %121) #21
  br label %124

124:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  %125 = load ptr, ptr %6, align 8, !tbaa !13
  %126 = icmp eq ptr %125, %6
  br i1 %126, label %152, label %127

127:                                              ; preds = %124, %150
  %128 = phi ptr [ %129, %150 ], [ %125, %124 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = getelementptr inbounds %"struct.std::_List_node", ptr %128, i64 0, i32 1, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !34
  %136 = add nsw i64 %135, -1
  store i64 %136, ptr %134, align 8, !tbaa !34
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load ptr, ptr %131, align 8, !tbaa !41
  %140 = getelementptr inbounds ptr, ptr %139, i64 2
  %141 = load ptr, ptr %140, align 8
  call void %141(ptr noundef nonnull align 8 dereferenceable(24) %131)
  %142 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !43
  %144 = add nsw i64 %143, -1
  store i64 %144, ptr %142, align 8, !tbaa !43
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %131, align 8, !tbaa !41
  %148 = getelementptr inbounds ptr, ptr %147, i64 3
  %149 = load ptr, ptr %148, align 8
  call void %149(ptr noundef nonnull align 8 dereferenceable(24) %131)
  br label %150

150:                                              ; preds = %146, %138, %133, %127
  call void @_ZdlPv(ptr noundef nonnull %128) #21
  %151 = icmp eq ptr %129, %6
  br i1 %151, label %152, label %127

152:                                              ; preds = %150, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  ret void

153:                                              ; preds = %35
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %118
  %156 = phi { ptr, i32 } [ %119, %118 ], [ %154, %153 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %157 = load ptr, ptr %7, align 8, !tbaa !31
  %158 = icmp eq ptr %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef nonnull %157) #21
  br label %160

160:                                              ; preds = %159, %155, %45
  %161 = phi { ptr, i32 } [ %46, %45 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %162 unwind label %163

162:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  resume { ptr, i32 } %161

163:                                              ; preds = %117, %160, %108
  %164 = landingpad { ptr, i32 }
          catch ptr null
  %165 = extractvalue { ptr, i32 } %164, 0
  call void @__clang_call_terminate(ptr %165) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator23create_laplace_matrix_1ILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEENS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 1 dereferenceable(1) %6) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::FEValues", align 8
  %9 = alloca %"class.dealii::FullMatrix", align 8
  %10 = alloca %"class.std::vector.92", align 8
  %11 = alloca %"class.std::vector.258", align 8
  %12 = alloca %"class.dealii::Vector", align 8
  %13 = alloca %"class.std::allocator.260", align 1
  %14 = alloca %"class.dealii::TriaActiveIterator", align 8
  %15 = icmp eq ptr %4, null
  %16 = select i1 %15, i32 34, i32 50
  call void @llvm.lifetime.start.p0(i64 776, ptr nonnull %8) #19
  %17 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !63
  call void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776) %8, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(728) %18, ptr noundef nonnull align 8 dereferenceable(128) %2, i32 noundef %16)
  %19 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 3
  %20 = load i32, ptr %19, align 8, !tbaa !65
  %21 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !127
  %23 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %8, i64 0, i32 6
  %24 = load ptr, ptr %23, align 8, !tbaa !63
  %25 = getelementptr inbounds i8, ptr %24, i64 116
  %26 = load i32, ptr %25, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %9, i32 noundef %20, i32 noundef %20)
          to label %27 unwind label %371

27:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  %28 = zext i32 %22 to i64
  %29 = icmp eq i32 %22, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %37

31:                                               ; preds = %27
  %32 = shl nuw nsw i64 %28, 3
  %33 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %32) #20
          to label %34 unwind label %373

34:                                               ; preds = %31
  store ptr %33, ptr %10, align 8, !tbaa !131
  %35 = getelementptr inbounds double, ptr %33, i64 %28
  %36 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 2
  store ptr %35, ptr %36, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %33, i8 0, i64 %32, i1 false), !tbaa !133
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi ptr [ null, %30 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 1
  store ptr %38, ptr %39, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %12) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %40 unwind label %375

40:                                               ; preds = %37
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %41 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, i8 0, i64 16, i1 false)
  %42 = icmp eq i32 %26, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %40
  %44 = zext i32 %26 to i64
  %45 = shl nuw nsw i64 %44, 3
  %46 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %45) #20
          to label %47 unwind label %50

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %49 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 2
  store ptr %46, ptr %48, align 8, !tbaa !136
  store i32 %26, ptr %49, align 4, !tbaa !138
  store i32 %26, ptr %41, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %46, i8 0, i64 %45, i1 false), !tbaa !133
  br label %55

50:                                               ; preds = %43
  %51 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %379 unwind label %52

52:                                               ; preds = %50
  %53 = landingpad { ptr, i32 }
          catch ptr null
  %54 = extractvalue { ptr, i32 } %53, 0
  call void @__clang_call_terminate(ptr %54) #22
  unreachable

55:                                               ; preds = %47, %40
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %11, i64 noundef %28, ptr noundef nonnull align 8 dereferenceable(88) %12, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %56 unwind label %377

56:                                               ; preds = %55
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %57 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !136
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  call void @_ZdaPv(ptr noundef nonnull %58) #21
  store ptr null, ptr %57, align 8, !tbaa !136
  br label %61

61:                                               ; preds = %60, %56
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %62 unwind label %375

62:                                               ; preds = %61
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  %63 = zext i32 %20 to i64
  %64 = icmp eq i32 %20, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = shl nuw nsw i64 %63, 2
  %67 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %66) #20
          to label %68 unwind label %381

68:                                               ; preds = %65
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %67, i8 0, i64 %66, i1 false), !tbaa !59
  br label %69

69:                                               ; preds = %68, %62
  %70 = phi ptr [ null, %62 ], [ %67, %68 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  %71 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %5, i64 0, i32 1
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %73 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  store ptr %72, ptr %73, align 8, !tbaa !17
  %74 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %5, i64 0, i32 1
  %75 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %14, i64 0, i32 1
  %76 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i32, ptr %75, align 4, !tbaa !61
  %78 = load i32, ptr %76, align 4, !tbaa !61
  %79 = icmp ne i32 %77, %78
  %80 = load i32, ptr %14, align 8
  %81 = load i32, ptr %74, align 8
  %82 = icmp ne i32 %80, %81
  %83 = select i1 %79, i1 true, i1 %82
  br i1 %83, label %84, label %977

84:                                               ; preds = %69
  %85 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 3
  %86 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 3, i32 0, i32 0, i64 1
  %87 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 1
  %88 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %89 = getelementptr inbounds i8, ptr %8, i64 312
  %90 = getelementptr inbounds i8, ptr %8, i64 216
  %91 = getelementptr inbounds i8, ptr %8, i64 480
  %92 = getelementptr inbounds i8, ptr %8, i64 168
  %93 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %24, i64 0, i32 12
  %94 = icmp eq i32 %26, 1
  %95 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %96 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %97 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %14, i64 0, i32 2
  br label %98

98:                                               ; preds = %84, %969
  invoke void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776) %8, ptr noundef nonnull align 8 dereferenceable(24) %14)
          to label %99 unwind label %383

99:                                               ; preds = %98
  %100 = load i32, ptr %85, align 4, !tbaa !59
  %101 = load i32, ptr %86, align 8, !tbaa !59
  %102 = mul i32 %101, %100
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %108, label %104

104:                                              ; preds = %99
  %105 = load ptr, ptr %87, align 8, !tbaa !140
  %106 = zext i32 %102 to i64
  %107 = shl nuw nsw i64 %106, 3
  call void @llvm.memset.p0.i64(ptr align 8 %105, i8 0, i64 %107, i1 false), !tbaa !133
  br label %108

108:                                              ; preds = %99, %104
  %109 = load ptr, ptr %73, align 8, !tbaa !17
  %110 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %109, i64 0, i32 2
  %111 = load ptr, ptr %110, align 8, !tbaa !63
  %112 = getelementptr inbounds i8, ptr %111, i64 112
  %113 = load i32, ptr %112, align 8, !tbaa !141
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %109, i64 0, i32 3
  %117 = load ptr, ptr %116, align 8, !tbaa !142
  %118 = load i32, ptr %14, align 8, !tbaa !60
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds ptr, ptr %117, i64 %119
  %121 = load ptr, ptr %120, align 8, !tbaa !33
  %122 = load ptr, ptr %121, align 8, !tbaa !144
  %123 = load i32, ptr %75, align 4, !tbaa !61
  %124 = mul i32 %123, %113
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i32, ptr %122, i64 %125
  br label %127

127:                                              ; preds = %127, %115
  %128 = phi i64 [ 0, %115 ], [ %132, %127 ]
  %129 = phi ptr [ %126, %115 ], [ %133, %127 ]
  %130 = load i32, ptr %129, align 4, !tbaa !59
  %131 = getelementptr inbounds i32, ptr %70, i64 %128
  store i32 %130, ptr %131, align 4, !tbaa !59
  %132 = add nuw nsw i64 %128, 1
  %133 = getelementptr inbounds i32, ptr %129, i64 1
  %134 = load i32, ptr %112, align 8, !tbaa !141
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %132, %135
  br i1 %136, label %127, label %137

137:                                              ; preds = %127, %108
  br i1 %15, label %138, label %144

138:                                              ; preds = %137
  br i1 %29, label %772, label %139

139:                                              ; preds = %138
  %140 = load ptr, ptr %90, align 8, !tbaa !131
  %141 = load ptr, ptr %23, align 8
  %142 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %141, i64 0, i32 2
  %143 = load ptr, ptr %92, align 8
  br label %622

144:                                              ; preds = %137
  %145 = load i32, ptr %88, align 8, !tbaa !145
  %146 = icmp eq i32 %145, 1
  %147 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %146, label %148, label %386

148:                                              ; preds = %144
  %149 = getelementptr inbounds ptr, ptr %147, i64 6
  %150 = load ptr, ptr %149, align 8
  invoke void %150(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %89, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
          to label %151 unwind label %383

151:                                              ; preds = %148
  br i1 %29, label %772, label %152

152:                                              ; preds = %151
  %153 = load ptr, ptr %90, align 8, !tbaa !131
  %154 = load ptr, ptr %92, align 8
  br i1 %64, label %857, label %155

155:                                              ; preds = %152
  %156 = load ptr, ptr %23, align 8
  %157 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %156, i64 0, i32 2
  %158 = load i8, ptr %157, align 4, !tbaa !148, !range !182, !noundef !183
  %159 = icmp eq i8 %158, 0
  br label %160

160:                                              ; preds = %276, %155
  %161 = phi i64 [ %277, %276 ], [ 0, %155 ]
  %162 = getelementptr inbounds double, ptr %153, i64 %161
  %163 = load double, ptr %162, align 8, !tbaa !133
  %164 = load ptr, ptr %91, align 8
  br i1 %94, label %279, label %216

165:                                              ; preds = %216, %179
  %166 = phi i64 [ %180, %179 ], [ 0, %216 ]
  %167 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %166
  %168 = load ptr, ptr %167, align 8, !tbaa !630
  %169 = getelementptr inbounds %"class.dealii::Tensor", ptr %168, i64 %161
  %170 = getelementptr inbounds [3 x double], ptr %169, i64 0, i64 1
  %171 = getelementptr inbounds [3 x double], ptr %169, i64 0, i64 2
  %172 = load ptr, ptr %10, align 8
  %173 = getelementptr inbounds double, ptr %172, i64 %161
  %174 = load ptr, ptr %87, align 8
  %175 = load i32, ptr %86, align 8
  %176 = trunc i64 %166 to i32
  %177 = mul i32 %175, %176
  %178 = getelementptr inbounds %"struct.std::pair.263", ptr %217, i64 %166
  br label %182

179:                                              ; preds = %213
  %180 = add nuw nsw i64 %166, 1
  %181 = icmp eq i64 %180, %63
  br i1 %181, label %276, label %165

182:                                              ; preds = %213, %165
  %183 = phi i64 [ %214, %213 ], [ 0, %165 ]
  %184 = load i64, ptr %178, align 4
  %185 = getelementptr inbounds %"struct.std::pair.263", ptr %217, i64 %183
  %186 = load i64, ptr %185, align 4
  %187 = trunc i64 %184 to i32
  %188 = trunc i64 %186 to i32
  %189 = icmp eq i32 %187, %188
  br i1 %189, label %190, label %213

190:                                              ; preds = %182
  %191 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %183
  %192 = load ptr, ptr %191, align 8, !tbaa !630
  %193 = getelementptr inbounds %"class.dealii::Tensor", ptr %192, i64 %161
  %194 = load double, ptr %193, align 8, !tbaa !133
  %195 = load double, ptr %169, align 8, !tbaa !133
  %196 = getelementptr inbounds [3 x double], ptr %193, i64 0, i64 1
  %197 = load double, ptr %196, align 8, !tbaa !133
  %198 = load double, ptr %170, align 8, !tbaa !133
  %199 = fmul double %197, %198
  %200 = call double @llvm.fmuladd.f64(double %194, double %195, double %199)
  %201 = getelementptr inbounds [3 x double], ptr %193, i64 0, i64 2
  %202 = load double, ptr %201, align 8, !tbaa !133
  %203 = load double, ptr %171, align 8, !tbaa !133
  %204 = call double @llvm.fmuladd.f64(double %202, double %203, double %200)
  %205 = fmul double %163, %204
  %206 = load double, ptr %173, align 8, !tbaa !133
  %207 = trunc i64 %183 to i32
  %208 = add i32 %177, %207
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds double, ptr %174, i64 %209
  %211 = load double, ptr %210, align 8, !tbaa !133
  %212 = call double @llvm.fmuladd.f64(double %205, double %206, double %211)
  store double %212, ptr %210, align 8, !tbaa !133
  br label %213

213:                                              ; preds = %190, %182
  %214 = add nuw nsw i64 %183, 1
  %215 = icmp eq i64 %214, %63
  br i1 %215, label %179, label %182

216:                                              ; preds = %160
  %217 = load ptr, ptr %93, align 8, !tbaa !184
  br i1 %159, label %218, label %165

218:                                              ; preds = %216, %273
  %219 = phi i64 [ %274, %273 ], [ 0, %216 ]
  %220 = getelementptr inbounds i32, ptr %164, i64 %219
  %221 = load i32, ptr %220, align 4, !tbaa !59
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %222
  %224 = load ptr, ptr %223, align 8, !tbaa !630
  %225 = getelementptr inbounds %"class.dealii::Tensor", ptr %224, i64 %161
  %226 = load ptr, ptr %91, align 8
  %227 = getelementptr inbounds [3 x double], ptr %225, i64 0, i64 1
  %228 = getelementptr inbounds [3 x double], ptr %225, i64 0, i64 2
  %229 = load ptr, ptr %10, align 8
  %230 = getelementptr inbounds double, ptr %229, i64 %161
  %231 = load ptr, ptr %87, align 8
  %232 = load i32, ptr %86, align 8
  %233 = trunc i64 %219 to i32
  %234 = mul i32 %232, %233
  %235 = getelementptr inbounds %"struct.std::pair.263", ptr %217, i64 %219
  br label %236

236:                                              ; preds = %270, %218
  %237 = phi i64 [ %271, %270 ], [ 0, %218 ]
  %238 = load i64, ptr %235, align 4
  %239 = getelementptr inbounds %"struct.std::pair.263", ptr %217, i64 %237
  %240 = load i64, ptr %239, align 4
  %241 = trunc i64 %238 to i32
  %242 = trunc i64 %240 to i32
  %243 = icmp eq i32 %241, %242
  br i1 %243, label %244, label %270

244:                                              ; preds = %236
  %245 = getelementptr inbounds i32, ptr %226, i64 %237
  %246 = load i32, ptr %245, align 4, !tbaa !59
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %247
  %249 = load ptr, ptr %248, align 8, !tbaa !630
  %250 = getelementptr inbounds %"class.dealii::Tensor", ptr %249, i64 %161
  %251 = load double, ptr %250, align 8, !tbaa !133
  %252 = load double, ptr %225, align 8, !tbaa !133
  %253 = getelementptr inbounds [3 x double], ptr %250, i64 0, i64 1
  %254 = load double, ptr %253, align 8, !tbaa !133
  %255 = load double, ptr %227, align 8, !tbaa !133
  %256 = fmul double %254, %255
  %257 = call double @llvm.fmuladd.f64(double %251, double %252, double %256)
  %258 = getelementptr inbounds [3 x double], ptr %250, i64 0, i64 2
  %259 = load double, ptr %258, align 8, !tbaa !133
  %260 = load double, ptr %228, align 8, !tbaa !133
  %261 = call double @llvm.fmuladd.f64(double %259, double %260, double %257)
  %262 = fmul double %163, %261
  %263 = load double, ptr %230, align 8, !tbaa !133
  %264 = trunc i64 %237 to i32
  %265 = add i32 %234, %264
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds double, ptr %231, i64 %266
  %268 = load double, ptr %267, align 8, !tbaa !133
  %269 = call double @llvm.fmuladd.f64(double %262, double %263, double %268)
  store double %269, ptr %267, align 8, !tbaa !133
  br label %270

270:                                              ; preds = %244, %236
  %271 = add nuw nsw i64 %237, 1
  %272 = icmp eq i64 %271, %63
  br i1 %272, label %273, label %236

273:                                              ; preds = %270
  %274 = add nuw nsw i64 %219, 1
  %275 = icmp eq i64 %274, %63
  br i1 %275, label %276, label %218

276:                                              ; preds = %179, %273, %319, %368
  %277 = add nuw nsw i64 %161, 1
  %278 = icmp eq i64 %277, %28
  br i1 %278, label %772, label %160

279:                                              ; preds = %160
  br i1 %159, label %322, label %280

280:                                              ; preds = %279, %319
  %281 = phi i64 [ %320, %319 ], [ 0, %279 ]
  %282 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %281
  %283 = load ptr, ptr %282, align 8, !tbaa !630
  %284 = getelementptr inbounds %"class.dealii::Tensor", ptr %283, i64 %161
  %285 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 1
  %286 = getelementptr inbounds [3 x double], ptr %284, i64 0, i64 2
  %287 = load ptr, ptr %10, align 8
  %288 = getelementptr inbounds double, ptr %287, i64 %161
  %289 = load ptr, ptr %87, align 8
  %290 = load i32, ptr %86, align 8
  %291 = trunc i64 %281 to i32
  %292 = mul i32 %290, %291
  br label %293

293:                                              ; preds = %293, %280
  %294 = phi i64 [ %317, %293 ], [ 0, %280 ]
  %295 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %294
  %296 = load ptr, ptr %295, align 8, !tbaa !630
  %297 = getelementptr inbounds %"class.dealii::Tensor", ptr %296, i64 %161
  %298 = load double, ptr %297, align 8, !tbaa !133
  %299 = load double, ptr %284, align 8, !tbaa !133
  %300 = getelementptr inbounds [3 x double], ptr %297, i64 0, i64 1
  %301 = load double, ptr %300, align 8, !tbaa !133
  %302 = load double, ptr %285, align 8, !tbaa !133
  %303 = fmul double %301, %302
  %304 = call double @llvm.fmuladd.f64(double %298, double %299, double %303)
  %305 = getelementptr inbounds [3 x double], ptr %297, i64 0, i64 2
  %306 = load double, ptr %305, align 8, !tbaa !133
  %307 = load double, ptr %286, align 8, !tbaa !133
  %308 = call double @llvm.fmuladd.f64(double %306, double %307, double %304)
  %309 = fmul double %163, %308
  %310 = load double, ptr %288, align 8, !tbaa !133
  %311 = trunc i64 %294 to i32
  %312 = add i32 %292, %311
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds double, ptr %289, i64 %313
  %315 = load double, ptr %314, align 8, !tbaa !133
  %316 = call double @llvm.fmuladd.f64(double %309, double %310, double %315)
  store double %316, ptr %314, align 8, !tbaa !133
  %317 = add nuw nsw i64 %294, 1
  %318 = icmp eq i64 %317, %63
  br i1 %318, label %319, label %293

319:                                              ; preds = %293
  %320 = add nuw nsw i64 %281, 1
  %321 = icmp eq i64 %320, %63
  br i1 %321, label %276, label %280

322:                                              ; preds = %279, %368
  %323 = phi i64 [ %369, %368 ], [ 0, %279 ]
  %324 = getelementptr inbounds i32, ptr %164, i64 %323
  %325 = load i32, ptr %324, align 4, !tbaa !59
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %326
  %328 = load ptr, ptr %327, align 8, !tbaa !630
  %329 = getelementptr inbounds %"class.dealii::Tensor", ptr %328, i64 %161
  %330 = load ptr, ptr %91, align 8
  %331 = getelementptr inbounds [3 x double], ptr %329, i64 0, i64 1
  %332 = getelementptr inbounds [3 x double], ptr %329, i64 0, i64 2
  %333 = load ptr, ptr %10, align 8
  %334 = getelementptr inbounds double, ptr %333, i64 %161
  %335 = load ptr, ptr %87, align 8
  %336 = load i32, ptr %86, align 8
  %337 = trunc i64 %323 to i32
  %338 = mul i32 %336, %337
  br label %339

339:                                              ; preds = %339, %322
  %340 = phi i64 [ %366, %339 ], [ 0, %322 ]
  %341 = getelementptr inbounds i32, ptr %330, i64 %340
  %342 = load i32, ptr %341, align 4, !tbaa !59
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds %"class.std::vector.241", ptr %154, i64 %343
  %345 = load ptr, ptr %344, align 8, !tbaa !630
  %346 = getelementptr inbounds %"class.dealii::Tensor", ptr %345, i64 %161
  %347 = load double, ptr %346, align 8, !tbaa !133
  %348 = load double, ptr %329, align 8, !tbaa !133
  %349 = getelementptr inbounds [3 x double], ptr %346, i64 0, i64 1
  %350 = load double, ptr %349, align 8, !tbaa !133
  %351 = load double, ptr %331, align 8, !tbaa !133
  %352 = fmul double %350, %351
  %353 = call double @llvm.fmuladd.f64(double %347, double %348, double %352)
  %354 = getelementptr inbounds [3 x double], ptr %346, i64 0, i64 2
  %355 = load double, ptr %354, align 8, !tbaa !133
  %356 = load double, ptr %332, align 8, !tbaa !133
  %357 = call double @llvm.fmuladd.f64(double %355, double %356, double %353)
  %358 = fmul double %163, %357
  %359 = load double, ptr %334, align 8, !tbaa !133
  %360 = trunc i64 %340 to i32
  %361 = add i32 %338, %360
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds double, ptr %335, i64 %362
  %364 = load double, ptr %363, align 8, !tbaa !133
  %365 = call double @llvm.fmuladd.f64(double %358, double %359, double %364)
  store double %365, ptr %363, align 8, !tbaa !133
  %366 = add nuw nsw i64 %340, 1
  %367 = icmp eq i64 %366, %63
  br i1 %367, label %368, label %339

368:                                              ; preds = %339
  %369 = add nuw nsw i64 %323, 1
  %370 = icmp eq i64 %369, %63
  br i1 %370, label %276, label %322

371:                                              ; preds = %1012, %7
  %372 = landingpad { ptr, i32 }
          cleanup
  br label %1061

373:                                              ; preds = %31
  %374 = landingpad { ptr, i32 }
          cleanup
  br label %1054

375:                                              ; preds = %61, %37
  %376 = landingpad { ptr, i32 }
          cleanup
  br label %379

377:                                              ; preds = %55
  %378 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %12)
          to label %379 unwind label %1071

379:                                              ; preds = %375, %50, %377
  %380 = phi { ptr, i32 } [ %378, %377 ], [ %376, %375 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  br label %1049

381:                                              ; preds = %65
  %382 = landingpad { ptr, i32 }
          cleanup
  br label %1025

383:                                              ; preds = %386, %148, %98
  %384 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %385 = icmp eq ptr %70, null
  br i1 %385, label %1025, label %1023

386:                                              ; preds = %144
  %387 = getelementptr inbounds ptr, ptr %147, i64 7
  %388 = load ptr, ptr %387, align 8
  invoke void %388(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %89, ptr noundef nonnull align 8 dereferenceable(24) %11)
          to label %389 unwind label %383

389:                                              ; preds = %386
  br i1 %29, label %772, label %390

390:                                              ; preds = %389
  %391 = load ptr, ptr %90, align 8, !tbaa !131
  %392 = load ptr, ptr %92, align 8
  br i1 %64, label %857, label %393

393:                                              ; preds = %390
  %394 = load ptr, ptr %23, align 8
  %395 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %394, i64 0, i32 2
  %396 = load i8, ptr %395, align 4, !tbaa !148, !range !182, !noundef !183
  %397 = icmp eq i8 %396, 0
  %398 = load ptr, ptr %93, align 8, !tbaa !184
  br i1 %94, label %399, label %516

399:                                              ; preds = %393
  br i1 %397, label %400, label %462

400:                                              ; preds = %399, %459
  %401 = phi i64 [ %460, %459 ], [ 0, %399 ]
  %402 = getelementptr inbounds double, ptr %391, i64 %401
  %403 = load double, ptr %402, align 8, !tbaa !133
  %404 = load ptr, ptr %91, align 8
  br label %405

405:                                              ; preds = %456, %400
  %406 = phi i64 [ %457, %456 ], [ 0, %400 ]
  %407 = getelementptr inbounds i32, ptr %404, i64 %406
  %408 = load i32, ptr %407, align 4, !tbaa !59
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %409
  %411 = load ptr, ptr %410, align 8, !tbaa !630
  %412 = getelementptr inbounds %"class.dealii::Tensor", ptr %411, i64 %401
  %413 = getelementptr inbounds %"struct.std::pair.263", ptr %398, i64 %406
  %414 = load i64, ptr %413, align 4
  %415 = load ptr, ptr %91, align 8
  %416 = getelementptr inbounds [3 x double], ptr %412, i64 0, i64 1
  %417 = getelementptr inbounds [3 x double], ptr %412, i64 0, i64 2
  %418 = load ptr, ptr %11, align 8
  %419 = getelementptr inbounds %"class.dealii::Vector", ptr %418, i64 %401, i32 3
  %420 = and i64 %414, 4294967295
  %421 = load ptr, ptr %87, align 8
  %422 = load i32, ptr %86, align 8
  %423 = trunc i64 %406 to i32
  %424 = mul i32 %422, %423
  %425 = load ptr, ptr %419, align 8, !tbaa !136
  %426 = getelementptr inbounds double, ptr %425, i64 %420
  br label %427

427:                                              ; preds = %427, %405
  %428 = phi i64 [ %454, %427 ], [ 0, %405 ]
  %429 = getelementptr inbounds i32, ptr %415, i64 %428
  %430 = load i32, ptr %429, align 4, !tbaa !59
  %431 = zext i32 %430 to i64
  %432 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %431
  %433 = load ptr, ptr %432, align 8, !tbaa !630
  %434 = getelementptr inbounds %"class.dealii::Tensor", ptr %433, i64 %401
  %435 = load double, ptr %434, align 8, !tbaa !133
  %436 = load double, ptr %412, align 8, !tbaa !133
  %437 = getelementptr inbounds [3 x double], ptr %434, i64 0, i64 1
  %438 = load double, ptr %437, align 8, !tbaa !133
  %439 = load double, ptr %416, align 8, !tbaa !133
  %440 = fmul double %438, %439
  %441 = call double @llvm.fmuladd.f64(double %435, double %436, double %440)
  %442 = getelementptr inbounds [3 x double], ptr %434, i64 0, i64 2
  %443 = load double, ptr %442, align 8, !tbaa !133
  %444 = load double, ptr %417, align 8, !tbaa !133
  %445 = call double @llvm.fmuladd.f64(double %443, double %444, double %441)
  %446 = fmul double %403, %445
  %447 = load double, ptr %426, align 8, !tbaa !133
  %448 = trunc i64 %428 to i32
  %449 = add i32 %424, %448
  %450 = zext i32 %449 to i64
  %451 = getelementptr inbounds double, ptr %421, i64 %450
  %452 = load double, ptr %451, align 8, !tbaa !133
  %453 = call double @llvm.fmuladd.f64(double %446, double %447, double %452)
  store double %453, ptr %451, align 8, !tbaa !133
  %454 = add nuw nsw i64 %428, 1
  %455 = icmp eq i64 %454, %63
  br i1 %455, label %456, label %427

456:                                              ; preds = %427
  %457 = add nuw nsw i64 %406, 1
  %458 = icmp eq i64 %457, %63
  br i1 %458, label %459, label %405

459:                                              ; preds = %456
  %460 = add nuw nsw i64 %401, 1
  %461 = icmp eq i64 %460, %28
  br i1 %461, label %772, label %400

462:                                              ; preds = %399, %513
  %463 = phi i64 [ %514, %513 ], [ 0, %399 ]
  %464 = getelementptr inbounds double, ptr %391, i64 %463
  %465 = load double, ptr %464, align 8, !tbaa !133
  br label %466

466:                                              ; preds = %462, %510
  %467 = phi i64 [ 0, %462 ], [ %511, %510 ]
  %468 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %467
  %469 = load ptr, ptr %468, align 8, !tbaa !630
  %470 = getelementptr inbounds %"class.dealii::Tensor", ptr %469, i64 %463
  %471 = getelementptr inbounds %"struct.std::pair.263", ptr %398, i64 %467
  %472 = load i64, ptr %471, align 4
  %473 = getelementptr inbounds [3 x double], ptr %470, i64 0, i64 1
  %474 = getelementptr inbounds [3 x double], ptr %470, i64 0, i64 2
  %475 = load ptr, ptr %11, align 8
  %476 = getelementptr inbounds %"class.dealii::Vector", ptr %475, i64 %463, i32 3
  %477 = and i64 %472, 4294967295
  %478 = load ptr, ptr %87, align 8
  %479 = load i32, ptr %86, align 8
  %480 = trunc i64 %467 to i32
  %481 = mul i32 %479, %480
  %482 = load ptr, ptr %476, align 8, !tbaa !136
  %483 = getelementptr inbounds double, ptr %482, i64 %477
  br label %484

484:                                              ; preds = %484, %466
  %485 = phi i64 [ %508, %484 ], [ 0, %466 ]
  %486 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %485
  %487 = load ptr, ptr %486, align 8, !tbaa !630
  %488 = getelementptr inbounds %"class.dealii::Tensor", ptr %487, i64 %463
  %489 = load double, ptr %488, align 8, !tbaa !133
  %490 = load double, ptr %470, align 8, !tbaa !133
  %491 = getelementptr inbounds [3 x double], ptr %488, i64 0, i64 1
  %492 = load double, ptr %491, align 8, !tbaa !133
  %493 = load double, ptr %473, align 8, !tbaa !133
  %494 = fmul double %492, %493
  %495 = call double @llvm.fmuladd.f64(double %489, double %490, double %494)
  %496 = getelementptr inbounds [3 x double], ptr %488, i64 0, i64 2
  %497 = load double, ptr %496, align 8, !tbaa !133
  %498 = load double, ptr %474, align 8, !tbaa !133
  %499 = call double @llvm.fmuladd.f64(double %497, double %498, double %495)
  %500 = fmul double %465, %499
  %501 = load double, ptr %483, align 8, !tbaa !133
  %502 = trunc i64 %485 to i32
  %503 = add i32 %481, %502
  %504 = zext i32 %503 to i64
  %505 = getelementptr inbounds double, ptr %478, i64 %504
  %506 = load double, ptr %505, align 8, !tbaa !133
  %507 = call double @llvm.fmuladd.f64(double %500, double %501, double %506)
  store double %507, ptr %505, align 8, !tbaa !133
  %508 = add nuw nsw i64 %485, 1
  %509 = icmp eq i64 %508, %63
  br i1 %509, label %510, label %484

510:                                              ; preds = %484
  %511 = add nuw nsw i64 %467, 1
  %512 = icmp eq i64 %511, %63
  br i1 %512, label %513, label %466

513:                                              ; preds = %510
  %514 = add nuw nsw i64 %463, 1
  %515 = icmp eq i64 %514, %28
  br i1 %515, label %772, label %462

516:                                              ; preds = %393, %619
  %517 = phi i64 [ %620, %619 ], [ 0, %393 ]
  %518 = getelementptr inbounds double, ptr %391, i64 %517
  %519 = load double, ptr %518, align 8, !tbaa !133
  %520 = load ptr, ptr %91, align 8
  br label %521

521:                                              ; preds = %516, %582
  %522 = phi i64 [ 0, %516 ], [ %583, %582 ]
  %523 = trunc i64 %522 to i32
  br i1 %397, label %524, label %527

524:                                              ; preds = %521
  %525 = getelementptr inbounds i32, ptr %520, i64 %522
  %526 = load i32, ptr %525, align 4, !tbaa !59
  br label %527

527:                                              ; preds = %524, %521
  %528 = phi i32 [ %526, %524 ], [ %523, %521 ]
  %529 = zext i32 %528 to i64
  %530 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %529
  %531 = load ptr, ptr %530, align 8, !tbaa !630
  %532 = getelementptr inbounds %"class.dealii::Tensor", ptr %531, i64 %517
  %533 = getelementptr inbounds %"struct.std::pair.263", ptr %398, i64 %522
  %534 = load i64, ptr %533, align 4
  %535 = trunc i64 %534 to i32
  %536 = load ptr, ptr %91, align 8
  %537 = getelementptr inbounds [3 x double], ptr %532, i64 0, i64 1
  %538 = getelementptr inbounds [3 x double], ptr %532, i64 0, i64 2
  %539 = load ptr, ptr %11, align 8
  %540 = getelementptr inbounds %"class.dealii::Vector", ptr %539, i64 %517, i32 3
  %541 = and i64 %534, 4294967295
  %542 = load ptr, ptr %87, align 8
  %543 = load i32, ptr %86, align 8
  %544 = mul i32 %543, %523
  br i1 %397, label %545, label %585

545:                                              ; preds = %527, %579
  %546 = phi i64 [ %580, %579 ], [ 0, %527 ]
  %547 = getelementptr inbounds %"struct.std::pair.263", ptr %398, i64 %546
  %548 = load i64, ptr %547, align 4
  %549 = trunc i64 %548 to i32
  %550 = icmp eq i32 %549, %535
  br i1 %550, label %551, label %579

551:                                              ; preds = %545
  %552 = getelementptr inbounds i32, ptr %536, i64 %546
  %553 = load i32, ptr %552, align 4, !tbaa !59
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %554
  %556 = load ptr, ptr %555, align 8, !tbaa !630
  %557 = getelementptr inbounds %"class.dealii::Tensor", ptr %556, i64 %517
  %558 = load double, ptr %557, align 8, !tbaa !133
  %559 = load double, ptr %532, align 8, !tbaa !133
  %560 = getelementptr inbounds [3 x double], ptr %557, i64 0, i64 1
  %561 = load double, ptr %560, align 8, !tbaa !133
  %562 = load double, ptr %537, align 8, !tbaa !133
  %563 = fmul double %561, %562
  %564 = call double @llvm.fmuladd.f64(double %558, double %559, double %563)
  %565 = getelementptr inbounds [3 x double], ptr %557, i64 0, i64 2
  %566 = load double, ptr %565, align 8, !tbaa !133
  %567 = load double, ptr %538, align 8, !tbaa !133
  %568 = call double @llvm.fmuladd.f64(double %566, double %567, double %564)
  %569 = fmul double %519, %568
  %570 = load ptr, ptr %540, align 8, !tbaa !136
  %571 = getelementptr inbounds double, ptr %570, i64 %541
  %572 = load double, ptr %571, align 8, !tbaa !133
  %573 = trunc i64 %546 to i32
  %574 = add i32 %544, %573
  %575 = zext i32 %574 to i64
  %576 = getelementptr inbounds double, ptr %542, i64 %575
  %577 = load double, ptr %576, align 8, !tbaa !133
  %578 = call double @llvm.fmuladd.f64(double %569, double %572, double %577)
  store double %578, ptr %576, align 8, !tbaa !133
  br label %579

579:                                              ; preds = %551, %545
  %580 = add nuw nsw i64 %546, 1
  %581 = icmp eq i64 %580, %63
  br i1 %581, label %582, label %545

582:                                              ; preds = %616, %579
  %583 = add nuw nsw i64 %522, 1
  %584 = icmp eq i64 %583, %63
  br i1 %584, label %619, label %521

585:                                              ; preds = %527, %616
  %586 = phi i64 [ %617, %616 ], [ 0, %527 ]
  %587 = getelementptr inbounds %"struct.std::pair.263", ptr %398, i64 %586
  %588 = load i64, ptr %587, align 4
  %589 = trunc i64 %588 to i32
  %590 = icmp eq i32 %589, %535
  br i1 %590, label %591, label %616

591:                                              ; preds = %585
  %592 = getelementptr inbounds %"class.std::vector.241", ptr %392, i64 %586
  %593 = load ptr, ptr %592, align 8, !tbaa !630
  %594 = getelementptr inbounds %"class.dealii::Tensor", ptr %593, i64 %517
  %595 = load double, ptr %594, align 8, !tbaa !133
  %596 = load double, ptr %532, align 8, !tbaa !133
  %597 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 1
  %598 = load double, ptr %597, align 8, !tbaa !133
  %599 = load double, ptr %537, align 8, !tbaa !133
  %600 = fmul double %598, %599
  %601 = call double @llvm.fmuladd.f64(double %595, double %596, double %600)
  %602 = getelementptr inbounds [3 x double], ptr %594, i64 0, i64 2
  %603 = load double, ptr %602, align 8, !tbaa !133
  %604 = load double, ptr %538, align 8, !tbaa !133
  %605 = call double @llvm.fmuladd.f64(double %603, double %604, double %601)
  %606 = fmul double %519, %605
  %607 = load ptr, ptr %540, align 8, !tbaa !136
  %608 = getelementptr inbounds double, ptr %607, i64 %541
  %609 = load double, ptr %608, align 8, !tbaa !133
  %610 = trunc i64 %586 to i32
  %611 = add i32 %544, %610
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds double, ptr %542, i64 %612
  %614 = load double, ptr %613, align 8, !tbaa !133
  %615 = call double @llvm.fmuladd.f64(double %606, double %609, double %614)
  store double %615, ptr %613, align 8, !tbaa !133
  br label %616

616:                                              ; preds = %591, %585
  %617 = add nuw nsw i64 %586, 1
  %618 = icmp eq i64 %617, %63
  br i1 %618, label %582, label %585

619:                                              ; preds = %582
  %620 = add nuw nsw i64 %517, 1
  %621 = icmp eq i64 %620, %28
  br i1 %621, label %772, label %516

622:                                              ; preds = %139, %769
  %623 = phi i64 [ 0, %139 ], [ %770, %769 ]
  %624 = getelementptr inbounds double, ptr %140, i64 %623
  %625 = load double, ptr %624, align 8, !tbaa !133
  br i1 %64, label %769, label %626

626:                                              ; preds = %622
  %627 = load i8, ptr %142, align 4, !tbaa !148, !range !182, !noundef !183
  %628 = icmp eq i8 %627, 0
  %629 = load ptr, ptr %91, align 8
  br i1 %94, label %630, label %708

630:                                              ; preds = %626, %678
  %631 = phi i64 [ %679, %678 ], [ 0, %626 ]
  %632 = trunc i64 %631 to i32
  br i1 %628, label %642, label %633

633:                                              ; preds = %630
  %634 = and i64 %631, 4294967295
  %635 = getelementptr inbounds %"class.std::vector.241", ptr %143, i64 %634
  %636 = load ptr, ptr %635, align 8, !tbaa !630
  %637 = getelementptr inbounds %"class.dealii::Tensor", ptr %636, i64 %623
  %638 = getelementptr inbounds [3 x double], ptr %637, i64 0, i64 1
  %639 = getelementptr inbounds [3 x double], ptr %637, i64 0, i64 2
  %640 = load ptr, ptr %87, align 8
  %641 = mul i32 %101, %632
  br label %654

642:                                              ; preds = %630
  %643 = getelementptr inbounds i32, ptr %629, i64 %631
  %644 = load i32, ptr %643, align 4, !tbaa !59
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds %"class.std::vector.241", ptr %143, i64 %645
  %647 = load ptr, ptr %646, align 8, !tbaa !630
  %648 = getelementptr inbounds %"class.dealii::Tensor", ptr %647, i64 %623
  %649 = load ptr, ptr %91, align 8
  %650 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 1
  %651 = getelementptr inbounds [3 x double], ptr %648, i64 0, i64 2
  %652 = load ptr, ptr %87, align 8
  %653 = mul i32 %101, %632
  br label %681

654:                                              ; preds = %633, %654
  %655 = phi i64 [ 0, %633 ], [ %676, %654 ]
  %656 = getelementptr inbounds %"class.std::vector.241", ptr %143, i64 %655
  %657 = load ptr, ptr %656, align 8, !tbaa !630
  %658 = getelementptr inbounds %"class.dealii::Tensor", ptr %657, i64 %623
  %659 = load double, ptr %658, align 8, !tbaa !133
  %660 = load double, ptr %637, align 8, !tbaa !133
  %661 = getelementptr inbounds [3 x double], ptr %658, i64 0, i64 1
  %662 = load double, ptr %661, align 8, !tbaa !133
  %663 = load double, ptr %638, align 8, !tbaa !133
  %664 = fmul double %662, %663
  %665 = call double @llvm.fmuladd.f64(double %659, double %660, double %664)
  %666 = getelementptr inbounds [3 x double], ptr %658, i64 0, i64 2
  %667 = load double, ptr %666, align 8, !tbaa !133
  %668 = load double, ptr %639, align 8, !tbaa !133
  %669 = call double @llvm.fmuladd.f64(double %667, double %668, double %665)
  %670 = trunc i64 %655 to i32
  %671 = add i32 %641, %670
  %672 = zext i32 %671 to i64
  %673 = getelementptr inbounds double, ptr %640, i64 %672
  %674 = load double, ptr %673, align 8, !tbaa !133
  %675 = call double @llvm.fmuladd.f64(double %669, double %625, double %674)
  store double %675, ptr %673, align 8, !tbaa !133
  %676 = add nuw nsw i64 %655, 1
  %677 = icmp eq i64 %676, %63
  br i1 %677, label %678, label %654

678:                                              ; preds = %654, %681
  %679 = add nuw nsw i64 %631, 1
  %680 = icmp eq i64 %679, %63
  br i1 %680, label %769, label %630

681:                                              ; preds = %642, %681
  %682 = phi i64 [ 0, %642 ], [ %706, %681 ]
  %683 = getelementptr inbounds i32, ptr %649, i64 %682
  %684 = load i32, ptr %683, align 4, !tbaa !59
  %685 = zext i32 %684 to i64
  %686 = getelementptr inbounds %"class.std::vector.241", ptr %143, i64 %685
  %687 = load ptr, ptr %686, align 8, !tbaa !630
  %688 = getelementptr inbounds %"class.dealii::Tensor", ptr %687, i64 %623
  %689 = load double, ptr %688, align 8, !tbaa !133
  %690 = load double, ptr %648, align 8, !tbaa !133
  %691 = getelementptr inbounds [3 x double], ptr %688, i64 0, i64 1
  %692 = load double, ptr %691, align 8, !tbaa !133
  %693 = load double, ptr %650, align 8, !tbaa !133
  %694 = fmul double %692, %693
  %695 = call double @llvm.fmuladd.f64(double %689, double %690, double %694)
  %696 = getelementptr inbounds [3 x double], ptr %688, i64 0, i64 2
  %697 = load double, ptr %696, align 8, !tbaa !133
  %698 = load double, ptr %651, align 8, !tbaa !133
  %699 = call double @llvm.fmuladd.f64(double %697, double %698, double %695)
  %700 = trunc i64 %682 to i32
  %701 = add i32 %653, %700
  %702 = zext i32 %701 to i64
  %703 = getelementptr inbounds double, ptr %652, i64 %702
  %704 = load double, ptr %703, align 8, !tbaa !133
  %705 = call double @llvm.fmuladd.f64(double %699, double %625, double %704)
  store double %705, ptr %703, align 8, !tbaa !133
  %706 = add nuw nsw i64 %682, 1
  %707 = icmp eq i64 %706, %63
  br i1 %707, label %678, label %681

708:                                              ; preds = %626
  %709 = load ptr, ptr %93, align 8, !tbaa !184
  br label %710

710:                                              ; preds = %766, %708
  %711 = phi i64 [ %767, %766 ], [ 0, %708 ]
  %712 = trunc i64 %711 to i32
  br i1 %628, label %713, label %716

713:                                              ; preds = %710
  %714 = getelementptr inbounds i32, ptr %629, i64 %711
  %715 = load i32, ptr %714, align 4, !tbaa !59
  br label %716

716:                                              ; preds = %713, %710
  %717 = phi i32 [ %715, %713 ], [ %712, %710 ]
  %718 = zext i32 %717 to i64
  %719 = getelementptr inbounds %"class.std::vector.241", ptr %143, i64 %718
  %720 = load ptr, ptr %719, align 8, !tbaa !630
  %721 = getelementptr inbounds %"class.dealii::Tensor", ptr %720, i64 %623
  %722 = load ptr, ptr %91, align 8
  %723 = getelementptr inbounds [3 x double], ptr %721, i64 0, i64 1
  %724 = getelementptr inbounds [3 x double], ptr %721, i64 0, i64 2
  %725 = load ptr, ptr %87, align 8
  %726 = mul i32 %101, %712
  %727 = getelementptr inbounds %"struct.std::pair.263", ptr %709, i64 %711
  br label %728

728:                                              ; preds = %716, %763
  %729 = phi i64 [ 0, %716 ], [ %764, %763 ]
  %730 = trunc i64 %729 to i32
  br i1 %628, label %731, label %734

731:                                              ; preds = %728
  %732 = getelementptr inbounds i32, ptr %722, i64 %729
  %733 = load i32, ptr %732, align 4, !tbaa !59
  br label %734

734:                                              ; preds = %731, %728
  %735 = phi i32 [ %733, %731 ], [ %730, %728 ]
  %736 = load i64, ptr %727, align 4
  %737 = getelementptr inbounds %"struct.std::pair.263", ptr %709, i64 %729
  %738 = load i64, ptr %737, align 4
  %739 = trunc i64 %736 to i32
  %740 = trunc i64 %738 to i32
  %741 = icmp eq i32 %739, %740
  br i1 %741, label %742, label %763

742:                                              ; preds = %734
  %743 = zext i32 %735 to i64
  %744 = getelementptr inbounds %"class.std::vector.241", ptr %143, i64 %743
  %745 = load ptr, ptr %744, align 8, !tbaa !630
  %746 = getelementptr inbounds %"class.dealii::Tensor", ptr %745, i64 %623
  %747 = load double, ptr %746, align 8, !tbaa !133
  %748 = load double, ptr %721, align 8, !tbaa !133
  %749 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 1
  %750 = load double, ptr %749, align 8, !tbaa !133
  %751 = load double, ptr %723, align 8, !tbaa !133
  %752 = fmul double %750, %751
  %753 = call double @llvm.fmuladd.f64(double %747, double %748, double %752)
  %754 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 2
  %755 = load double, ptr %754, align 8, !tbaa !133
  %756 = load double, ptr %724, align 8, !tbaa !133
  %757 = call double @llvm.fmuladd.f64(double %755, double %756, double %753)
  %758 = add i32 %726, %730
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds double, ptr %725, i64 %759
  %761 = load double, ptr %760, align 8, !tbaa !133
  %762 = call double @llvm.fmuladd.f64(double %757, double %625, double %761)
  store double %762, ptr %760, align 8, !tbaa !133
  br label %763

763:                                              ; preds = %742, %734
  %764 = add nuw nsw i64 %729, 1
  %765 = icmp eq i64 %764, %63
  br i1 %765, label %766, label %728

766:                                              ; preds = %763
  %767 = add nuw nsw i64 %711, 1
  %768 = icmp eq i64 %767, %63
  br i1 %768, label %769, label %710

769:                                              ; preds = %766, %678, %622
  %770 = add nuw nsw i64 %623, 1
  %771 = icmp eq i64 %770, %28
  br i1 %771, label %772, label %622

772:                                              ; preds = %619, %513, %459, %276, %769, %389, %151, %138
  br i1 %64, label %857, label %773

773:                                              ; preds = %772
  br i1 %94, label %774, label %811

774:                                              ; preds = %773, %806
  %775 = phi i64 [ %807, %806 ], [ 0, %773 ]
  %776 = getelementptr inbounds i32, ptr %70, i64 %775
  %777 = trunc i64 %775 to i32
  br label %778

778:                                              ; preds = %803, %774
  %779 = phi i64 [ %804, %803 ], [ 0, %774 ]
  %780 = load ptr, ptr %87, align 8, !tbaa !140
  %781 = load i32, ptr %86, align 8, !tbaa !59
  %782 = mul i32 %781, %777
  %783 = trunc i64 %779 to i32
  %784 = add i32 %782, %783
  %785 = zext i32 %784 to i64
  %786 = getelementptr inbounds double, ptr %780, i64 %785
  %787 = load double, ptr %786, align 8, !tbaa !133
  %788 = fcmp oeq double %787, 0.000000e+00
  br i1 %788, label %803, label %789

789:                                              ; preds = %778
  %790 = getelementptr inbounds i32, ptr %70, i64 %779
  %791 = load i32, ptr %790, align 4, !tbaa !59
  %792 = load i32, ptr %776, align 4, !tbaa !59
  %793 = load ptr, ptr %95, align 8, !tbaa !383
  %794 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %793, i32 noundef %792, i32 noundef %791)
          to label %795 unwind label %809

795:                                              ; preds = %789
  %796 = icmp eq i32 %794, -1
  br i1 %796, label %803, label %797

797:                                              ; preds = %795
  %798 = load ptr, ptr %96, align 8, !tbaa !385
  %799 = zext i32 %794 to i64
  %800 = getelementptr inbounds double, ptr %798, i64 %799
  %801 = load double, ptr %800, align 8, !tbaa !133
  %802 = fadd double %787, %801
  store double %802, ptr %800, align 8, !tbaa !133
  br label %803

803:                                              ; preds = %797, %795, %778
  %804 = add nuw nsw i64 %779, 1
  %805 = icmp eq i64 %804, %63
  br i1 %805, label %806, label %778

806:                                              ; preds = %803
  %807 = add nuw nsw i64 %775, 1
  %808 = icmp eq i64 %807, %63
  br i1 %808, label %857, label %774

809:                                              ; preds = %789
  %810 = landingpad { ptr, i32 }
          cleanup
  br label %975

811:                                              ; preds = %773, %852
  %812 = phi i64 [ %853, %852 ], [ 0, %773 ]
  %813 = getelementptr inbounds i32, ptr %70, i64 %812
  %814 = trunc i64 %812 to i32
  br label %815

815:                                              ; preds = %811, %849
  %816 = phi i64 [ 0, %811 ], [ %850, %849 ]
  %817 = load ptr, ptr %93, align 8, !tbaa !184
  %818 = getelementptr inbounds %"struct.std::pair.263", ptr %817, i64 %812
  %819 = load i64, ptr %818, align 4
  %820 = getelementptr inbounds %"struct.std::pair.263", ptr %817, i64 %816
  %821 = load i64, ptr %820, align 4
  %822 = trunc i64 %819 to i32
  %823 = trunc i64 %821 to i32
  %824 = icmp eq i32 %822, %823
  br i1 %824, label %825, label %849

825:                                              ; preds = %815
  %826 = load ptr, ptr %87, align 8, !tbaa !140
  %827 = load i32, ptr %86, align 8, !tbaa !59
  %828 = mul i32 %827, %814
  %829 = trunc i64 %816 to i32
  %830 = add i32 %828, %829
  %831 = zext i32 %830 to i64
  %832 = getelementptr inbounds double, ptr %826, i64 %831
  %833 = load double, ptr %832, align 8, !tbaa !133
  %834 = fcmp oeq double %833, 0.000000e+00
  br i1 %834, label %849, label %835

835:                                              ; preds = %825
  %836 = getelementptr inbounds i32, ptr %70, i64 %816
  %837 = load i32, ptr %836, align 4, !tbaa !59
  %838 = load i32, ptr %813, align 4, !tbaa !59
  %839 = load ptr, ptr %95, align 8, !tbaa !383
  %840 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %839, i32 noundef %838, i32 noundef %837)
          to label %841 unwind label %855

841:                                              ; preds = %835
  %842 = icmp eq i32 %840, -1
  br i1 %842, label %849, label %843

843:                                              ; preds = %841
  %844 = load ptr, ptr %96, align 8, !tbaa !385
  %845 = zext i32 %840 to i64
  %846 = getelementptr inbounds double, ptr %844, i64 %845
  %847 = load double, ptr %846, align 8, !tbaa !133
  %848 = fadd double %833, %847
  store double %848, ptr %846, align 8, !tbaa !133
  br label %849

849:                                              ; preds = %843, %841, %825, %815
  %850 = add nuw nsw i64 %816, 1
  %851 = icmp eq i64 %850, %63
  br i1 %851, label %852, label %815

852:                                              ; preds = %849
  %853 = add nuw nsw i64 %812, 1
  %854 = icmp eq i64 %853, %63
  br i1 %854, label %857, label %811

855:                                              ; preds = %835
  %856 = landingpad { ptr, i32 }
          cleanup
  br label %975

857:                                              ; preds = %852, %806, %152, %390, %772
  %858 = load ptr, ptr %97, align 8, !tbaa !62
  %859 = getelementptr inbounds %"class.dealii::Triangulation", ptr %858, i64 0, i32 1
  %860 = load ptr, ptr %859, align 8, !tbaa !46
  %861 = ptrtoint ptr %860 to i64
  %862 = getelementptr inbounds %"class.dealii::Triangulation", ptr %858, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %863 = load i32, ptr %14, align 8
  %864 = load i32, ptr %75, align 4
  br label %865

865:                                              ; preds = %953, %857
  %866 = phi i32 [ %863, %857 ], [ %932, %953 ]
  %867 = phi i32 [ %863, %857 ], [ %933, %953 ]
  %868 = phi i32 [ %863, %857 ], [ %954, %953 ]
  %869 = phi i32 [ %864, %857 ], [ %934, %953 ]
  %870 = add nsw i32 %869, 1
  %871 = sext i32 %868 to i64
  %872 = getelementptr inbounds ptr, ptr %860, i64 %871
  %873 = load ptr, ptr %872, align 8, !tbaa !33
  %874 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %873, i64 0, i32 4
  %875 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %873, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %876 = load ptr, ptr %875, align 8, !tbaa !48
  %877 = load ptr, ptr %874, align 8, !tbaa !50
  %878 = ptrtoint ptr %876 to i64
  %879 = ptrtoint ptr %877 to i64
  %880 = sub i64 %878, %879
  %881 = sdiv exact i64 %880, 24
  %882 = trunc i64 %881 to i32
  %883 = icmp slt i32 %870, %882
  br i1 %883, label %931, label %884

884:                                              ; preds = %865
  %885 = add nsw i64 %871, 1
  %886 = trunc i64 %885 to i32
  store i32 %886, ptr %14, align 8, !tbaa !60
  %887 = load ptr, ptr %862, align 8, !tbaa !51
  %888 = ptrtoint ptr %887 to i64
  %889 = sub i64 %888, %861
  %890 = shl i64 %889, 29
  %891 = ashr i64 %890, 32
  %892 = icmp slt i64 %885, %891
  br i1 %892, label %893, label %925

893:                                              ; preds = %884
  %894 = getelementptr inbounds ptr, ptr %860, i64 %885
  %895 = load ptr, ptr %894, align 8, !tbaa !33
  %896 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %895, i64 0, i32 4
  %897 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %895, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %898 = load ptr, ptr %897, align 8, !tbaa !48
  %899 = load ptr, ptr %896, align 8, !tbaa !50
  %900 = ptrtoint ptr %898 to i64
  %901 = ptrtoint ptr %899 to i64
  %902 = sub i64 %900, %901
  %903 = sdiv exact i64 %902, 24
  %904 = trunc i64 %903 to i32
  %905 = icmp sgt i32 %904, 0
  br i1 %905, label %927, label %919

906:                                              ; preds = %919
  %907 = getelementptr inbounds ptr, ptr %860, i64 %921
  %908 = load ptr, ptr %907, align 8, !tbaa !33
  %909 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %908, i64 0, i32 4
  %910 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %908, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %911 = load ptr, ptr %910, align 8, !tbaa !48
  %912 = load ptr, ptr %909, align 8, !tbaa !50
  %913 = ptrtoint ptr %911 to i64
  %914 = ptrtoint ptr %912 to i64
  %915 = sub i64 %913, %914
  %916 = sdiv exact i64 %915, 24
  %917 = trunc i64 %916 to i32
  %918 = icmp sgt i32 %917, 0
  br i1 %918, label %926, label %919, !llvm.loop !52

919:                                              ; preds = %893, %906
  %920 = phi i64 [ %921, %906 ], [ %885, %893 ]
  %921 = add i64 %920, 1
  %922 = trunc i64 %921 to i32
  %923 = icmp eq i64 %921, %891
  br i1 %923, label %924, label %906, !llvm.loop !52

924:                                              ; preds = %919
  store i32 %922, ptr %14, align 8, !tbaa !60
  br label %925

925:                                              ; preds = %924, %884
  store i32 -1, ptr %14, align 8, !tbaa !60
  br label %931

926:                                              ; preds = %906
  store i32 %922, ptr %14, align 8, !tbaa !60
  br label %927

927:                                              ; preds = %926, %893
  %928 = phi i32 [ %886, %893 ], [ %922, %926 ]
  %929 = phi i64 [ %885, %893 ], [ %921, %926 ]
  %930 = trunc i64 %929 to i32
  br label %931

931:                                              ; preds = %927, %925, %865
  %932 = phi i32 [ %866, %865 ], [ -1, %925 ], [ %928, %927 ]
  %933 = phi i32 [ %867, %865 ], [ -1, %925 ], [ %930, %927 ]
  %934 = phi i32 [ %870, %865 ], [ -1, %925 ], [ 0, %927 ]
  %935 = phi i32 [ %868, %865 ], [ -1, %925 ], [ %930, %927 ]
  %936 = or i32 %935, %934
  %937 = icmp sgt i32 %936, -1
  br i1 %937, label %938, label %955

938:                                              ; preds = %931
  %939 = zext i32 %935 to i64
  %940 = getelementptr inbounds ptr, ptr %860, i64 %939
  %941 = load ptr, ptr %940, align 8, !tbaa !33
  %942 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %941, i64 0, i32 4, i32 0, i32 3
  %943 = load ptr, ptr %942, align 8, !tbaa !54
  %944 = lshr i32 %934, 6
  %945 = zext i32 %944 to i64
  %946 = getelementptr inbounds i64, ptr %943, i64 %945
  %947 = and i32 %934, 63
  %948 = zext i32 %947 to i64
  %949 = shl nuw i64 1, %948
  %950 = load i64, ptr %946, align 8, !tbaa !56
  %951 = and i64 %950, %949
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %953, label %955

953:                                              ; preds = %938, %958
  %954 = phi i32 [ %935, %938 ], [ %933, %958 ]
  br label %865

955:                                              ; preds = %938, %931
  store i32 %934, ptr %75, align 4, !tbaa !61
  %956 = or i32 %934, %933
  %957 = icmp sgt i32 %956, -1
  br i1 %957, label %958, label %969

958:                                              ; preds = %955
  %959 = zext i32 %933 to i64
  %960 = getelementptr inbounds ptr, ptr %860, i64 %959
  %961 = load ptr, ptr %960, align 8, !tbaa !33
  %962 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %961, i64 0, i32 4, i32 0, i32 1
  %963 = shl i32 %934, 2
  %964 = zext i32 %963 to i64
  %965 = load ptr, ptr %962, align 8, !tbaa !57
  %966 = getelementptr inbounds i32, ptr %965, i64 %964
  %967 = load i32, ptr %966, align 4, !tbaa !59
  %968 = icmp eq i32 %967, -1
  br i1 %968, label %969, label %953

969:                                              ; preds = %955, %958
  %970 = load i32, ptr %76, align 4, !tbaa !61
  %971 = icmp ne i32 %934, %970
  %972 = load i32, ptr %74, align 8
  %973 = icmp ne i32 %932, %972
  %974 = select i1 %971, i1 true, i1 %973
  br i1 %974, label %98, label %977

975:                                              ; preds = %809, %855
  %976 = phi { ptr, i32 } [ %856, %855 ], [ %810, %809 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  br label %1023

977:                                              ; preds = %969, %69
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %978 = icmp eq ptr %70, null
  br i1 %978, label %980, label %979

979:                                              ; preds = %977
  call void @_ZdlPv(ptr noundef nonnull %70) #21
  br label %980

980:                                              ; preds = %979, %977
  %981 = load ptr, ptr %11, align 8, !tbaa !224
  %982 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %983 = load ptr, ptr %982, align 8, !tbaa !226
  %984 = icmp eq ptr %981, %983
  br i1 %984, label %994, label %985

985:                                              ; preds = %980, %989
  %986 = phi ptr [ %990, %989 ], [ %981, %980 ]
  %987 = load ptr, ptr %986, align 8, !tbaa !41
  %988 = load ptr, ptr %987, align 8
  invoke void %988(ptr noundef nonnull align 8 dereferenceable(88) %986)
          to label %989 unwind label %998

989:                                              ; preds = %985
  %990 = getelementptr inbounds %"class.dealii::Vector", ptr %986, i64 1
  %991 = icmp eq ptr %990, %983
  br i1 %991, label %992, label %985

992:                                              ; preds = %989
  %993 = load ptr, ptr %11, align 8, !tbaa !224
  br label %994

994:                                              ; preds = %992, %980
  %995 = phi ptr [ %993, %992 ], [ %981, %980 ]
  %996 = icmp eq ptr %995, null
  br i1 %996, label %1003, label %997

997:                                              ; preds = %994
  call void @_ZdlPv(ptr noundef nonnull %995) #21
  br label %1003

998:                                              ; preds = %985
  %999 = landingpad { ptr, i32 }
          cleanup
  %1000 = load ptr, ptr %11, align 8, !tbaa !224
  %1001 = icmp eq ptr %1000, null
  br i1 %1001, label %1049, label %1002

1002:                                             ; preds = %998
  call void @_ZdlPv(ptr noundef nonnull %1000) #21
  br label %1049

1003:                                             ; preds = %997, %994
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  %1004 = load ptr, ptr %10, align 8, !tbaa !131
  %1005 = icmp eq ptr %1004, null
  br i1 %1005, label %1007, label %1006

1006:                                             ; preds = %1003
  call void @_ZdlPv(ptr noundef nonnull %1004) #21
  br label %1007

1007:                                             ; preds = %1006, %1003
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !41
  %1008 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 1
  %1009 = load ptr, ptr %1008, align 8, !tbaa !140
  %1010 = icmp eq ptr %1009, null
  br i1 %1010, label %1012, label %1011

1011:                                             ; preds = %1007
  call void @_ZdaPv(ptr noundef nonnull %1009) #21
  br label %1012

1012:                                             ; preds = %1011, %1007
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %9)
          to label %1013 unwind label %371

1013:                                             ; preds = %1012
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !41
  %1014 = getelementptr inbounds %"class.dealii::FEValues", ptr %8, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1014)
          to label %1022 unwind label %1015

1015:                                             ; preds = %1013
  %1016 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1017 unwind label %1019

1017:                                             ; preds = %1015, %1070
  %1018 = phi { ptr, i32 } [ %1062, %1070 ], [ %1016, %1015 ]
  resume { ptr, i32 } %1018

1019:                                             ; preds = %1015
  %1020 = landingpad { ptr, i32 }
          catch ptr null
  %1021 = extractvalue { ptr, i32 } %1020, 0
  call void @__clang_call_terminate(ptr %1021) #22
  unreachable

1022:                                             ; preds = %1013
  call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %8) #19
  ret void

1023:                                             ; preds = %975, %383
  %1024 = phi { ptr, i32 } [ %976, %975 ], [ %384, %383 ]
  call void @_ZdlPv(ptr noundef nonnull %70) #21
  br label %1025

1025:                                             ; preds = %1023, %383, %381
  %1026 = phi { ptr, i32 } [ %382, %381 ], [ %384, %383 ], [ %1024, %1023 ]
  %1027 = load ptr, ptr %11, align 8, !tbaa !224
  %1028 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %11, i64 0, i32 1
  %1029 = load ptr, ptr %1028, align 8, !tbaa !226
  %1030 = icmp eq ptr %1027, %1029
  br i1 %1030, label %1040, label %1031

1031:                                             ; preds = %1025, %1035
  %1032 = phi ptr [ %1036, %1035 ], [ %1027, %1025 ]
  %1033 = load ptr, ptr %1032, align 8, !tbaa !41
  %1034 = load ptr, ptr %1033, align 8
  invoke void %1034(ptr noundef nonnull align 8 dereferenceable(88) %1032)
          to label %1035 unwind label %1044

1035:                                             ; preds = %1031
  %1036 = getelementptr inbounds %"class.dealii::Vector", ptr %1032, i64 1
  %1037 = icmp eq ptr %1036, %1029
  br i1 %1037, label %1038, label %1031

1038:                                             ; preds = %1035
  %1039 = load ptr, ptr %11, align 8, !tbaa !224
  br label %1040

1040:                                             ; preds = %1038, %1025
  %1041 = phi ptr [ %1039, %1038 ], [ %1027, %1025 ]
  %1042 = icmp eq ptr %1041, null
  br i1 %1042, label %1049, label %1043

1043:                                             ; preds = %1040
  call void @_ZdlPv(ptr noundef nonnull %1041) #21
  br label %1049

1044:                                             ; preds = %1031
  %1045 = landingpad { ptr, i32 }
          catch ptr null
  %1046 = load ptr, ptr %11, align 8, !tbaa !224
  %1047 = icmp eq ptr %1046, null
  br i1 %1047, label %1073, label %1048

1048:                                             ; preds = %1044
  call void @_ZdlPv(ptr noundef nonnull %1046) #21
  br label %1073

1049:                                             ; preds = %1002, %998, %1043, %1040, %379
  %1050 = phi { ptr, i32 } [ %380, %379 ], [ %1026, %1040 ], [ %1026, %1043 ], [ %999, %1002 ], [ %999, %998 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  %1051 = load ptr, ptr %10, align 8, !tbaa !131
  %1052 = icmp eq ptr %1051, null
  br i1 %1052, label %1054, label %1053

1053:                                             ; preds = %1049
  call void @_ZdlPv(ptr noundef nonnull %1051) #21
  br label %1054

1054:                                             ; preds = %1053, %1049, %373
  %1055 = phi { ptr, i32 } [ %374, %373 ], [ %1050, %1049 ], [ %1050, %1053 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %9, align 8, !tbaa !41
  %1056 = getelementptr inbounds %"class.dealii::TableBase", ptr %9, i64 0, i32 1
  %1057 = load ptr, ptr %1056, align 8, !tbaa !140
  %1058 = icmp eq ptr %1057, null
  br i1 %1058, label %1060, label %1059

1059:                                             ; preds = %1054
  call void @_ZdaPv(ptr noundef nonnull %1057) #21
  br label %1060

1060:                                             ; preds = %1059, %1054
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %9)
          to label %1061 unwind label %1071

1061:                                             ; preds = %1060, %371
  %1062 = phi { ptr, i32 } [ %372, %371 ], [ %1055, %1060 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %8, align 8, !tbaa !41
  %1063 = getelementptr inbounds %"class.dealii::FEValues", ptr %8, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1063)
          to label %1064 unwind label %1065

1064:                                             ; preds = %1061
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1070 unwind label %1071

1065:                                             ; preds = %1061
  %1066 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %8)
          to label %1073 unwind label %1067

1067:                                             ; preds = %1065
  %1068 = landingpad { ptr, i32 }
          catch ptr null
  %1069 = extractvalue { ptr, i32 } %1068, 0
  call void @__clang_call_terminate(ptr %1069) #22
  unreachable

1070:                                             ; preds = %1064
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %8) #19
  br label %1017

1071:                                             ; preds = %1064, %1060, %377
  %1072 = landingpad { ptr, i32 }
          catch ptr null
  br label %1073

1073:                                             ; preds = %1071, %1065, %1044, %1048
  %1074 = phi { ptr, i32 } [ %1045, %1048 ], [ %1045, %1044 ], [ %1072, %1071 ], [ %1066, %1065 ]
  %1075 = extractvalue { ptr, i32 } %1074, 0
  call void @__clang_call_terminate(ptr %1075) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSJ_(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %9 = alloca %"class.std::vector", align 8
  %10 = alloca %"class.dealii::TriaActiveIterator", align 8
  %11 = alloca %"class.dealii::TriaActiveIterator", align 8
  %12 = alloca %"class.dealii::TriaRawIterator", align 8
  %13 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %14 = alloca %"class.dealii::Threads::Thread", align 16
  %15 = alloca %"class.dealii::Threads::internal::fun_encapsulator.34", align 8
  %16 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %17 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %8, i64 0, i32 1
  store ptr %8, ptr %18, align 8, !tbaa !10
  store ptr %8, ptr %8, align 8, !tbaa !13
  %19 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %8, i64 0, i32 1
  store i64 0, ptr %19, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator") align 8 %10, ptr noundef nonnull align 8 dereferenceable(168) %1, i32 noundef 0)
          to label %20 unwind label %43

20:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZNK6dealii10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator") align 8 %12, ptr noundef nonnull align 8 dereferenceable(168) %1)
          to label %21 unwind label %45

21:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %12, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  store ptr %24, ptr %22, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SA_ESaISB_EERKSA_SF_j(ptr nonnull sret(%"class.std::vector") align 8 %9, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %17)
          to label %25 unwind label %45

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %16, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.boost::shared_ptr", ptr %14, i64 0, i32 1
  %33 = zext i32 %17 to i64
  br label %49

34:                                               ; preds = %103, %25
  %35 = load ptr, ptr %8, align 8, !tbaa !13
  %36 = icmp eq ptr %35, %8
  br i1 %36, label %122, label %37

37:                                               ; preds = %34, %40
  %38 = phi ptr [ %41, %40 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_List_node", ptr %38, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %39)
          to label %40 unwind label %155

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !13
  %42 = icmp eq ptr %41, %8
  br i1 %42, label %122, label %37

43:                                               ; preds = %7
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %21, %20
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %46, %45 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  br label %162

49:                                               ; preds = %27, %103
  %50 = phi i64 [ 0, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !631)
  store ptr null, ptr %15, align 8, !tbaa !25, !alias.scope !631
  %51 = load ptr, ptr @_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable, align 8, !tbaa !236, !noalias !631
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  invoke void %51(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %54 unwind label %106

54:                                               ; preds = %53, %49
  store ptr @_ZN6dealii13MatrixCreator23create_laplace_matrix_2ILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSJ_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE, ptr %28, align 8, !tbaa !30, !alias.scope !631
  store ptr @_ZZN5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS5_S9_SD_SG_SK_SN_SO_SR_SU_EEEvT_E13stored_vtable, ptr %15, align 8, !tbaa !25, !alias.scope !631
  %55 = load ptr, ptr %9, align 8, !tbaa !31
  %56 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50
  %57 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  store ptr %58, ptr %29, align 8, !tbaa !17
  %59 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50, i32 1
  %60 = getelementptr inbounds %"struct.std::pair", ptr %55, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  store ptr %61, ptr %31, align 8, !tbaa !17
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSN_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclES9_SD_SH_SK_SO_SR_SS_SV_SX_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %14, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %62 unwind label %108

62:                                               ; preds = %54
  %63 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %64 unwind label %110

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_List_node", ptr %63, i64 0, i32 1
  %66 = load <2 x ptr>, ptr %14, align 16, !tbaa !33
  store <2 x ptr> %66, ptr %65, align 8, !tbaa !33
  %67 = extractelement <2 x ptr> %66, i64 1
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %67, i64 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !34
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %70, align 8, !tbaa !34
  br label %73

73:                                               ; preds = %69, %64
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull %8) #19
  %74 = load i64, ptr %19, align 8, !tbaa !36
  %75 = add i64 %74, 1
  store i64 %75, ptr %19, align 8, !tbaa !36
  %76 = load ptr, ptr %32, align 8, !tbaa !39
  %77 = icmp eq ptr %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = add nsw i64 %80, -1
  store i64 %81, ptr %79, align 8, !tbaa !34
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %78
  %84 = load ptr, ptr %76, align 8, !tbaa !41
  %85 = getelementptr inbounds ptr, ptr %84, i64 2
  %86 = load ptr, ptr %85, align 8
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %87 unwind label %108

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !43
  %90 = add nsw i64 %89, -1
  store i64 %90, ptr %88, align 8, !tbaa !43
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load ptr, ptr %76, align 8, !tbaa !41
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %96 unwind label %108

96:                                               ; preds = %87, %78, %73, %92
  %97 = load ptr, ptr %15, align 8, !tbaa !25
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load ptr, ptr %97, align 8, !tbaa !236
  %101 = icmp eq ptr %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  invoke void %100(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %103 unwind label %106

103:                                              ; preds = %99, %102, %96
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  %104 = add nuw nsw i64 %50, 1
  %105 = icmp eq i64 %104, %33
  br i1 %105, label %34, label %49

106:                                              ; preds = %102, %53
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %120

108:                                              ; preds = %92, %83, %54
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %112

110:                                              ; preds = %62
  %111 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %112 unwind label %165

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  %114 = load ptr, ptr %15, align 8, !tbaa !25
  %115 = icmp eq ptr %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !236
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  invoke void %117(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %120 unwind label %165

120:                                              ; preds = %116, %119, %112, %106
  %121 = phi { ptr, i32 } [ %107, %106 ], [ %113, %112 ], [ %113, %119 ], [ %113, %116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  br label %157

122:                                              ; preds = %40, %34
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %123 = load ptr, ptr %9, align 8, !tbaa !31
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZdlPv(ptr noundef nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  %127 = load ptr, ptr %8, align 8, !tbaa !13
  %128 = icmp eq ptr %127, %8
  br i1 %128, label %154, label %129

129:                                              ; preds = %126, %152
  %130 = phi ptr [ %131, %152 ], [ %127, %126 ]
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds %"struct.std::_List_node", ptr %130, i64 0, i32 1, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !34
  %138 = add nsw i64 %137, -1
  store i64 %138, ptr %136, align 8, !tbaa !34
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load ptr, ptr %133, align 8, !tbaa !41
  %142 = getelementptr inbounds ptr, ptr %141, i64 2
  %143 = load ptr, ptr %142, align 8
  call void %143(ptr noundef nonnull align 8 dereferenceable(24) %133)
  %144 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !43
  %146 = add nsw i64 %145, -1
  store i64 %146, ptr %144, align 8, !tbaa !43
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load ptr, ptr %133, align 8, !tbaa !41
  %150 = getelementptr inbounds ptr, ptr %149, i64 3
  %151 = load ptr, ptr %150, align 8
  call void %151(ptr noundef nonnull align 8 dereferenceable(24) %133)
  br label %152

152:                                              ; preds = %148, %140, %135, %129
  call void @_ZdlPv(ptr noundef nonnull %130) #21
  %153 = icmp eq ptr %131, %8
  br i1 %153, label %154, label %129

154:                                              ; preds = %152, %126
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  ret void

155:                                              ; preds = %37
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %157

157:                                              ; preds = %155, %120
  %158 = phi { ptr, i32 } [ %121, %120 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %159 = load ptr, ptr %9, align 8, !tbaa !31
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %159) #21
  br label %162

162:                                              ; preds = %161, %157, %47
  %163 = phi { ptr, i32 } [ %48, %47 ], [ %158, %157 ], [ %158, %161 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %164 unwind label %165

164:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  resume { ptr, i32 } %163

165:                                              ; preds = %119, %162, %110
  %166 = landingpad { ptr, i32 }
          catch ptr null
  %167 = extractvalue { ptr, i32 } %166, 0
  call void @__clang_call_terminate(ptr %167) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator23create_laplace_matrix_2ILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSJ_NS0_13IteratorRangeIS7_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(168) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.dealii::FEValues", align 8
  %11 = alloca %"class.dealii::FullMatrix", align 8
  %12 = alloca %"class.dealii::Vector", align 8
  %13 = alloca %"class.std::vector.92", align 8
  %14 = alloca %"class.std::vector.92", align 8
  %15 = alloca %"class.std::vector.258", align 8
  %16 = alloca %"class.dealii::Vector", align 8
  %17 = alloca %"class.std::allocator.260", align 1
  %18 = alloca %"class.dealii::TriaActiveIterator", align 8
  %19 = icmp eq ptr %6, null
  call void @llvm.lifetime.start.p0(i64 776, ptr nonnull %10) #19
  %20 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %1, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !63
  call void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776) %10, ptr noundef nonnull align 8 dereferenceable(72) %0, ptr noundef nonnull align 8 dereferenceable(728) %21, ptr noundef nonnull align 8 dereferenceable(128) %2, i32 noundef 51)
  %22 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 3
  %23 = load i32, ptr %22, align 8, !tbaa !65
  %24 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !127
  %26 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %10, i64 0, i32 6
  %27 = load ptr, ptr %26, align 8, !tbaa !63
  %28 = getelementptr inbounds i8, ptr %27, i64 116
  %29 = load i32, ptr %28, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92) %11, i32 noundef %23, i32 noundef %23)
          to label %30 unwind label %398

30:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %12) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %31 unwind label %400

31:                                               ; preds = %30
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %32 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %32, i8 0, i64 16, i1 false)
  %33 = icmp eq i32 %23, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %31
  %35 = zext i32 %23 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %36) #20
          to label %38 unwind label %41

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %40 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 2
  store ptr %37, ptr %39, align 8, !tbaa !136
  store i32 %23, ptr %40, align 4, !tbaa !138
  store i32 %23, ptr %32, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %37, i8 0, i64 %36, i1 false), !tbaa !133
  br label %46

41:                                               ; preds = %34
  %42 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1135 unwind label %43

43:                                               ; preds = %41
  %44 = landingpad { ptr, i32 }
          catch ptr null
  %45 = extractvalue { ptr, i32 } %44, 0
  call void @__clang_call_terminate(ptr %45) #22
  unreachable

46:                                               ; preds = %38, %31
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  %47 = load i32, ptr %24, align 4, !tbaa !127
  %48 = zext i32 %47 to i64
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  br label %57

51:                                               ; preds = %46
  %52 = shl nuw nsw i64 %48, 3
  %53 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %52) #20
          to label %54 unwind label %402

54:                                               ; preds = %51
  store ptr %53, ptr %13, align 8, !tbaa !131
  %55 = getelementptr inbounds double, ptr %53, i64 %48
  %56 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 2
  store ptr %55, ptr %56, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %53, i8 0, i64 %52, i1 false), !tbaa !133
  br label %57

57:                                               ; preds = %54, %50
  %58 = phi ptr [ null, %50 ], [ %55, %54 ]
  %59 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %13, i64 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  %60 = zext i32 %25 to i64
  %61 = icmp eq i32 %25, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %57
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %69

63:                                               ; preds = %57
  %64 = shl nuw nsw i64 %60, 3
  %65 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %64) #20
          to label %66 unwind label %404

66:                                               ; preds = %63
  store ptr %65, ptr %14, align 8, !tbaa !131
  %67 = getelementptr inbounds double, ptr %65, i64 %60
  %68 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %14, i64 0, i32 2
  store ptr %67, ptr %68, align 8, !tbaa !132
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %65, i8 0, i64 %64, i1 false), !tbaa !133
  br label %69

69:                                               ; preds = %66, %62
  %70 = phi ptr [ null, %62 ], [ %67, %66 ]
  %71 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %14, i64 0, i32 1
  store ptr %70, ptr %71, align 8, !tbaa !135
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %15) #19
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %16) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %72 unwind label %406

72:                                               ; preds = %69
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %73 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %73, i8 0, i64 16, i1 false)
  %74 = icmp eq i32 %29, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = zext i32 %29 to i64
  %77 = shl nuw nsw i64 %76, 3
  %78 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %77) #20
          to label %79 unwind label %82

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %81 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 2
  store ptr %78, ptr %80, align 8, !tbaa !136
  store i32 %29, ptr %81, align 4, !tbaa !138
  store i32 %29, ptr %73, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %78, i8 0, i64 %77, i1 false), !tbaa !133
  br label %87

82:                                               ; preds = %75
  %83 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %410 unwind label %84

84:                                               ; preds = %82
  %85 = landingpad { ptr, i32 }
          catch ptr null
  %86 = extractvalue { ptr, i32 } %85, 0
  call void @__clang_call_terminate(ptr %86) #22
  unreachable

87:                                               ; preds = %79, %72
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %17) #19
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %15, i64 noundef %60, ptr noundef nonnull align 8 dereferenceable(88) %16, ptr noundef nonnull align 1 dereferenceable(1) %17)
          to label %88 unwind label %408

88:                                               ; preds = %87
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %89 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !136
  %91 = icmp eq ptr %90, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  call void @_ZdaPv(ptr noundef nonnull %90) #21
  store ptr null, ptr %89, align 8, !tbaa !136
  br label %93

93:                                               ; preds = %92, %88
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %94 unwind label %406

94:                                               ; preds = %93
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %16) #19
  %95 = zext i32 %23 to i64
  br i1 %33, label %100, label %96

96:                                               ; preds = %94
  %97 = shl nuw nsw i64 %95, 2
  %98 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %97) #20
          to label %99 unwind label %412

99:                                               ; preds = %96
  call void @llvm.memset.p0.i64(ptr nonnull align 4 %98, i8 0, i64 %97, i1 false), !tbaa !59
  br label %100

100:                                              ; preds = %99, %94
  %101 = phi ptr [ null, %94 ], [ %98, %99 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  %102 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %104 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %18, i64 0, i32 1
  store ptr %103, ptr %104, align 8, !tbaa !17
  %105 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %106 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %18, i64 0, i32 1
  %107 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i32, ptr %106, align 4, !tbaa !61
  %109 = load i32, ptr %107, align 4, !tbaa !61
  %110 = icmp ne i32 %108, %109
  %111 = load i32, ptr %18, align 8
  %112 = load i32, ptr %105, align 8
  %113 = icmp ne i32 %111, %112
  %114 = select i1 %110, i1 true, i1 %113
  br i1 %114, label %115, label %1036

115:                                              ; preds = %100
  %116 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3
  %117 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3, i32 0, i32 0, i64 1
  %118 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %119 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %120 = getelementptr inbounds i8, ptr %10, i64 312
  %121 = getelementptr inbounds %"class.dealii::Function", ptr %6, i64 0, i32 2
  %122 = getelementptr inbounds i8, ptr %10, i64 216
  %123 = getelementptr inbounds i8, ptr %10, i64 144
  %124 = getelementptr inbounds i8, ptr %10, i64 160
  %125 = getelementptr inbounds i8, ptr %10, i64 480
  %126 = getelementptr inbounds i8, ptr %10, i64 168
  %127 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %27, i64 0, i32 12
  %128 = icmp eq i32 %29, 1
  %129 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %130 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %131 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %132 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %18, i64 0, i32 2
  %133 = and i64 %95, 1
  %134 = icmp eq i32 %23, 1
  %135 = and i64 %95, 4294967294
  %136 = icmp eq i64 %133, 0
  br label %137

137:                                              ; preds = %115, %1007
  invoke void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776) %10, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %138 unwind label %414

138:                                              ; preds = %137
  %139 = load i32, ptr %116, align 4, !tbaa !59
  %140 = load i32, ptr %117, align 8, !tbaa !59
  %141 = mul i32 %140, %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %138
  %144 = load ptr, ptr %118, align 8, !tbaa !140
  %145 = zext i32 %141 to i64
  %146 = shl nuw nsw i64 %145, 3
  call void @llvm.memset.p0.i64(ptr align 8 %144, i8 0, i64 %146, i1 false), !tbaa !133
  br label %147

147:                                              ; preds = %143, %138
  %148 = load i32, ptr %32, align 8, !tbaa !139
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %147
  %151 = load ptr, ptr %119, align 8, !tbaa !136
  %152 = zext i32 %148 to i64
  %153 = shl nuw nsw i64 %152, 3
  call void @llvm.memset.p0.i64(ptr align 8 %151, i8 0, i64 %153, i1 false), !tbaa !133
  br label %154

154:                                              ; preds = %150, %147
  %155 = load ptr, ptr %104, align 8, !tbaa !17
  %156 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %155, i64 0, i32 2
  %157 = load ptr, ptr %156, align 8, !tbaa !63
  %158 = getelementptr inbounds i8, ptr %157, i64 112
  %159 = load i32, ptr %158, align 8, !tbaa !141
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %183, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %155, i64 0, i32 3
  %163 = load ptr, ptr %162, align 8, !tbaa !142
  %164 = load i32, ptr %18, align 8, !tbaa !60
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds ptr, ptr %163, i64 %165
  %167 = load ptr, ptr %166, align 8, !tbaa !33
  %168 = load ptr, ptr %167, align 8, !tbaa !144
  %169 = load i32, ptr %106, align 4, !tbaa !61
  %170 = mul i32 %169, %159
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i32, ptr %168, i64 %171
  br label %173

173:                                              ; preds = %173, %161
  %174 = phi i64 [ 0, %161 ], [ %178, %173 ]
  %175 = phi ptr [ %172, %161 ], [ %179, %173 ]
  %176 = load i32, ptr %175, align 4, !tbaa !59
  %177 = getelementptr inbounds i32, ptr %101, i64 %174
  store i32 %176, ptr %177, align 4, !tbaa !59
  %178 = add nuw nsw i64 %174, 1
  %179 = getelementptr inbounds i32, ptr %175, i64 1
  %180 = load i32, ptr %158, align 8, !tbaa !141
  %181 = zext i32 %180 to i64
  %182 = icmp ult i64 %178, %181
  br i1 %182, label %173, label %183

183:                                              ; preds = %173, %154
  %184 = load ptr, ptr %4, align 8, !tbaa !41
  %185 = getelementptr inbounds ptr, ptr %184, i64 6
  %186 = load ptr, ptr %185, align 8
  invoke void %186(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %120, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %187 unwind label %414

187:                                              ; preds = %183
  br i1 %19, label %188, label %196

188:                                              ; preds = %187
  br i1 %61, label %793, label %189

189:                                              ; preds = %188
  %190 = load ptr, ptr %122, align 8, !tbaa !131
  %191 = load ptr, ptr %26, align 8
  %192 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %191, i64 0, i32 2
  %193 = load ptr, ptr %126, align 8
  %194 = load ptr, ptr %13, align 8
  %195 = load ptr, ptr %119, align 8
  br label %651

196:                                              ; preds = %187
  %197 = load i32, ptr %121, align 8, !tbaa !145
  %198 = icmp eq i32 %197, 1
  %199 = load ptr, ptr %6, align 8, !tbaa !41
  br i1 %198, label %200, label %417

200:                                              ; preds = %196
  %201 = getelementptr inbounds ptr, ptr %199, i64 6
  %202 = load ptr, ptr %201, align 8
  invoke void %202(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %120, ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef 0)
          to label %203 unwind label %414

203:                                              ; preds = %200
  br i1 %61, label %793, label %204

204:                                              ; preds = %203
  %205 = load ptr, ptr %122, align 8, !tbaa !131
  %206 = load ptr, ptr %126, align 8
  %207 = load ptr, ptr %13, align 8
  %208 = load ptr, ptr %119, align 8
  br i1 %33, label %895, label %209

209:                                              ; preds = %204
  %210 = load ptr, ptr %26, align 8
  %211 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %210, i64 0, i32 2
  %212 = load i8, ptr %211, align 4, !tbaa !148, !range !182, !noundef !183
  %213 = icmp eq i8 %212, 0
  br label %214

214:                                              ; preds = %395, %209
  %215 = phi i64 [ %396, %395 ], [ 0, %209 ]
  %216 = getelementptr inbounds double, ptr %205, i64 %215
  %217 = load double, ptr %216, align 8, !tbaa !133
  %218 = load ptr, ptr %123, align 8
  %219 = load i32, ptr %124, align 8
  %220 = load ptr, ptr %125, align 8
  %221 = getelementptr inbounds double, ptr %207, i64 %215
  br i1 %128, label %222, label %315

222:                                              ; preds = %214
  %223 = trunc i64 %215 to i32
  br label %224

224:                                              ; preds = %222, %307
  %225 = phi i64 [ 0, %222 ], [ %313, %307 ]
  br i1 %213, label %228, label %226

226:                                              ; preds = %224
  %227 = trunc i64 %225 to i32
  br label %232

228:                                              ; preds = %224
  %229 = getelementptr inbounds i32, ptr %220, i64 %225
  %230 = load i32, ptr %229, align 4, !tbaa !59
  %231 = trunc i64 %225 to i32
  br label %232

232:                                              ; preds = %228, %226
  %233 = phi i32 [ %231, %228 ], [ %227, %226 ]
  %234 = phi i32 [ %230, %228 ], [ %227, %226 ]
  %235 = mul i32 %219, %234
  %236 = add i32 %235, %223
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds double, ptr %218, i64 %237
  %239 = load double, ptr %238, align 8, !tbaa !133
  %240 = zext i32 %234 to i64
  %241 = getelementptr inbounds %"class.std::vector.241", ptr %206, i64 %240
  %242 = load ptr, ptr %241, align 8, !tbaa !630
  %243 = getelementptr inbounds %"class.dealii::Tensor", ptr %242, i64 %215
  %244 = load ptr, ptr %125, align 8
  %245 = getelementptr inbounds [3 x double], ptr %243, i64 0, i64 1
  %246 = getelementptr inbounds [3 x double], ptr %243, i64 0, i64 2
  %247 = load ptr, ptr %14, align 8
  %248 = getelementptr inbounds double, ptr %247, i64 %215
  %249 = load ptr, ptr %118, align 8
  %250 = load i32, ptr %117, align 8
  %251 = mul i32 %250, %233
  br i1 %213, label %252, label %281

252:                                              ; preds = %232, %252
  %253 = phi i64 [ %279, %252 ], [ 0, %232 ]
  %254 = getelementptr inbounds i32, ptr %244, i64 %253
  %255 = load i32, ptr %254, align 4, !tbaa !59
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"class.std::vector.241", ptr %206, i64 %256
  %258 = load ptr, ptr %257, align 8, !tbaa !630
  %259 = getelementptr inbounds %"class.dealii::Tensor", ptr %258, i64 %215
  %260 = load double, ptr %259, align 8, !tbaa !133
  %261 = load double, ptr %243, align 8, !tbaa !133
  %262 = getelementptr inbounds [3 x double], ptr %259, i64 0, i64 1
  %263 = load double, ptr %262, align 8, !tbaa !133
  %264 = load double, ptr %245, align 8, !tbaa !133
  %265 = fmul double %263, %264
  %266 = call double @llvm.fmuladd.f64(double %260, double %261, double %265)
  %267 = getelementptr inbounds [3 x double], ptr %259, i64 0, i64 2
  %268 = load double, ptr %267, align 8, !tbaa !133
  %269 = load double, ptr %246, align 8, !tbaa !133
  %270 = call double @llvm.fmuladd.f64(double %268, double %269, double %266)
  %271 = fmul double %217, %270
  %272 = load double, ptr %248, align 8, !tbaa !133
  %273 = trunc i64 %253 to i32
  %274 = add i32 %251, %273
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds double, ptr %249, i64 %275
  %277 = load double, ptr %276, align 8, !tbaa !133
  %278 = call double @llvm.fmuladd.f64(double %271, double %272, double %277)
  store double %278, ptr %276, align 8, !tbaa !133
  %279 = add nuw nsw i64 %253, 1
  %280 = icmp eq i64 %279, %95
  br i1 %280, label %307, label %252

281:                                              ; preds = %232, %281
  %282 = phi i64 [ %305, %281 ], [ 0, %232 ]
  %283 = getelementptr inbounds %"class.std::vector.241", ptr %206, i64 %282
  %284 = load ptr, ptr %283, align 8, !tbaa !630
  %285 = getelementptr inbounds %"class.dealii::Tensor", ptr %284, i64 %215
  %286 = load double, ptr %285, align 8, !tbaa !133
  %287 = load double, ptr %243, align 8, !tbaa !133
  %288 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 1
  %289 = load double, ptr %288, align 8, !tbaa !133
  %290 = load double, ptr %245, align 8, !tbaa !133
  %291 = fmul double %289, %290
  %292 = call double @llvm.fmuladd.f64(double %286, double %287, double %291)
  %293 = getelementptr inbounds [3 x double], ptr %285, i64 0, i64 2
  %294 = load double, ptr %293, align 8, !tbaa !133
  %295 = load double, ptr %246, align 8, !tbaa !133
  %296 = call double @llvm.fmuladd.f64(double %294, double %295, double %292)
  %297 = fmul double %217, %296
  %298 = load double, ptr %248, align 8, !tbaa !133
  %299 = trunc i64 %282 to i32
  %300 = add i32 %251, %299
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds double, ptr %249, i64 %301
  %303 = load double, ptr %302, align 8, !tbaa !133
  %304 = call double @llvm.fmuladd.f64(double %297, double %298, double %303)
  store double %304, ptr %302, align 8, !tbaa !133
  %305 = add nuw nsw i64 %282, 1
  %306 = icmp eq i64 %305, %95
  br i1 %306, label %307, label %281

307:                                              ; preds = %281, %252
  %308 = load double, ptr %221, align 8, !tbaa !133
  %309 = fmul double %239, %308
  %310 = getelementptr inbounds double, ptr %208, i64 %225
  %311 = load double, ptr %310, align 8, !tbaa !133
  %312 = call double @llvm.fmuladd.f64(double %309, double %217, double %311)
  store double %312, ptr %310, align 8, !tbaa !133
  %313 = add nuw nsw i64 %225, 1
  %314 = icmp eq i64 %313, %95
  br i1 %314, label %395, label %224

315:                                              ; preds = %214
  %316 = load ptr, ptr %127, align 8, !tbaa !184
  %317 = trunc i64 %215 to i32
  br label %318

318:                                              ; preds = %387, %315
  %319 = phi i64 [ %393, %387 ], [ 0, %315 ]
  br i1 %213, label %322, label %320

320:                                              ; preds = %318
  %321 = trunc i64 %319 to i32
  br label %326

322:                                              ; preds = %318
  %323 = getelementptr inbounds i32, ptr %220, i64 %319
  %324 = load i32, ptr %323, align 4, !tbaa !59
  %325 = trunc i64 %319 to i32
  br label %326

326:                                              ; preds = %322, %320
  %327 = phi i32 [ %325, %322 ], [ %321, %320 ]
  %328 = phi i32 [ %324, %322 ], [ %321, %320 ]
  %329 = mul i32 %219, %328
  %330 = add i32 %329, %317
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds double, ptr %218, i64 %331
  %333 = load double, ptr %332, align 8, !tbaa !133
  %334 = zext i32 %328 to i64
  %335 = getelementptr inbounds %"class.std::vector.241", ptr %206, i64 %334
  %336 = load ptr, ptr %335, align 8, !tbaa !630
  %337 = getelementptr inbounds %"class.dealii::Tensor", ptr %336, i64 %215
  %338 = load ptr, ptr %125, align 8
  %339 = getelementptr inbounds [3 x double], ptr %337, i64 0, i64 1
  %340 = getelementptr inbounds [3 x double], ptr %337, i64 0, i64 2
  %341 = load ptr, ptr %14, align 8
  %342 = getelementptr inbounds double, ptr %341, i64 %215
  %343 = load ptr, ptr %118, align 8
  %344 = load i32, ptr %117, align 8
  %345 = mul i32 %344, %327
  %346 = getelementptr inbounds %"struct.std::pair.263", ptr %316, i64 %319
  br label %347

347:                                              ; preds = %326, %384
  %348 = phi i64 [ 0, %326 ], [ %385, %384 ]
  %349 = trunc i64 %348 to i32
  br i1 %213, label %350, label %353

350:                                              ; preds = %347
  %351 = getelementptr inbounds i32, ptr %338, i64 %348
  %352 = load i32, ptr %351, align 4, !tbaa !59
  br label %353

353:                                              ; preds = %350, %347
  %354 = phi i32 [ %352, %350 ], [ %349, %347 ]
  %355 = load i64, ptr %346, align 4
  %356 = getelementptr inbounds %"struct.std::pair.263", ptr %316, i64 %348
  %357 = load i64, ptr %356, align 4
  %358 = trunc i64 %355 to i32
  %359 = trunc i64 %357 to i32
  %360 = icmp eq i32 %358, %359
  br i1 %360, label %361, label %384

361:                                              ; preds = %353
  %362 = zext i32 %354 to i64
  %363 = getelementptr inbounds %"class.std::vector.241", ptr %206, i64 %362
  %364 = load ptr, ptr %363, align 8, !tbaa !630
  %365 = getelementptr inbounds %"class.dealii::Tensor", ptr %364, i64 %215
  %366 = load double, ptr %365, align 8, !tbaa !133
  %367 = load double, ptr %337, align 8, !tbaa !133
  %368 = getelementptr inbounds [3 x double], ptr %365, i64 0, i64 1
  %369 = load double, ptr %368, align 8, !tbaa !133
  %370 = load double, ptr %339, align 8, !tbaa !133
  %371 = fmul double %369, %370
  %372 = call double @llvm.fmuladd.f64(double %366, double %367, double %371)
  %373 = getelementptr inbounds [3 x double], ptr %365, i64 0, i64 2
  %374 = load double, ptr %373, align 8, !tbaa !133
  %375 = load double, ptr %340, align 8, !tbaa !133
  %376 = call double @llvm.fmuladd.f64(double %374, double %375, double %372)
  %377 = fmul double %217, %376
  %378 = load double, ptr %342, align 8, !tbaa !133
  %379 = add i32 %345, %349
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds double, ptr %343, i64 %380
  %382 = load double, ptr %381, align 8, !tbaa !133
  %383 = call double @llvm.fmuladd.f64(double %377, double %378, double %382)
  store double %383, ptr %381, align 8, !tbaa !133
  br label %384

384:                                              ; preds = %361, %353
  %385 = add nuw nsw i64 %348, 1
  %386 = icmp eq i64 %385, %95
  br i1 %386, label %387, label %347

387:                                              ; preds = %384
  %388 = load double, ptr %221, align 8, !tbaa !133
  %389 = fmul double %333, %388
  %390 = getelementptr inbounds double, ptr %208, i64 %319
  %391 = load double, ptr %390, align 8, !tbaa !133
  %392 = call double @llvm.fmuladd.f64(double %389, double %217, double %391)
  store double %392, ptr %390, align 8, !tbaa !133
  %393 = add nuw nsw i64 %319, 1
  %394 = icmp eq i64 %393, %95
  br i1 %394, label %395, label %318

395:                                              ; preds = %387, %307
  %396 = add nuw nsw i64 %215, 1
  %397 = icmp eq i64 %396, %60
  br i1 %397, label %793, label %214

398:                                              ; preds = %1081, %9
  %399 = landingpad { ptr, i32 }
          cleanup
  br label %1142

400:                                              ; preds = %1075, %30
  %401 = landingpad { ptr, i32 }
          cleanup
  br label %1135

402:                                              ; preds = %51
  %403 = landingpad { ptr, i32 }
          cleanup
  br label %1128

404:                                              ; preds = %63
  %405 = landingpad { ptr, i32 }
          cleanup
  br label %1123

406:                                              ; preds = %93, %69
  %407 = landingpad { ptr, i32 }
          cleanup
  br label %410

408:                                              ; preds = %87
  %409 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %17) #19
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %410 unwind label %1152

410:                                              ; preds = %406, %82, %408
  %411 = phi { ptr, i32 } [ %409, %408 ], [ %407, %406 ], [ %83, %82 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %16) #19
  br label %1118

412:                                              ; preds = %96
  %413 = landingpad { ptr, i32 }
          cleanup
  br label %1094

414:                                              ; preds = %417, %200, %183, %137
  %415 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %416 = icmp eq ptr %101, null
  br i1 %416, label %1094, label %1092

417:                                              ; preds = %196
  %418 = getelementptr inbounds ptr, ptr %199, i64 7
  %419 = load ptr, ptr %418, align 8
  invoke void %419(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %120, ptr noundef nonnull align 8 dereferenceable(24) %15)
          to label %420 unwind label %414

420:                                              ; preds = %417
  br i1 %61, label %793, label %421

421:                                              ; preds = %420
  %422 = load ptr, ptr %122, align 8, !tbaa !131
  %423 = load ptr, ptr %126, align 8
  %424 = load ptr, ptr %13, align 8
  %425 = load ptr, ptr %119, align 8
  br i1 %33, label %895, label %426

426:                                              ; preds = %421
  %427 = load ptr, ptr %26, align 8
  %428 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %427, i64 0, i32 2
  %429 = load i8, ptr %428, align 4, !tbaa !148, !range !182, !noundef !183
  %430 = icmp eq i8 %429, 0
  %431 = load ptr, ptr %127, align 8, !tbaa !184
  br label %432

432:                                              ; preds = %552, %426
  %433 = phi i64 [ %553, %552 ], [ 0, %426 ]
  %434 = getelementptr inbounds double, ptr %422, i64 %433
  %435 = load double, ptr %434, align 8, !tbaa !133
  %436 = load ptr, ptr %123, align 8
  %437 = load i32, ptr %124, align 8
  %438 = load ptr, ptr %125, align 8
  %439 = getelementptr inbounds double, ptr %424, i64 %433
  %440 = trunc i64 %433 to i32
  br i1 %128, label %555, label %441

441:                                              ; preds = %432, %510
  %442 = phi i64 [ %516, %510 ], [ 0, %432 ]
  br i1 %430, label %445, label %443

443:                                              ; preds = %441
  %444 = trunc i64 %442 to i32
  br label %449

445:                                              ; preds = %441
  %446 = getelementptr inbounds i32, ptr %438, i64 %442
  %447 = load i32, ptr %446, align 4, !tbaa !59
  %448 = trunc i64 %442 to i32
  br label %449

449:                                              ; preds = %445, %443
  %450 = phi i32 [ %448, %445 ], [ %444, %443 ]
  %451 = phi i32 [ %447, %445 ], [ %444, %443 ]
  %452 = mul i32 %437, %451
  %453 = add i32 %452, %440
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds double, ptr %436, i64 %454
  %456 = load double, ptr %455, align 8, !tbaa !133
  %457 = zext i32 %451 to i64
  %458 = getelementptr inbounds %"class.std::vector.241", ptr %423, i64 %457
  %459 = load ptr, ptr %458, align 8, !tbaa !630
  %460 = getelementptr inbounds %"class.dealii::Tensor", ptr %459, i64 %433
  %461 = getelementptr inbounds %"struct.std::pair.263", ptr %431, i64 %442
  %462 = load i64, ptr %461, align 4
  %463 = trunc i64 %462 to i32
  %464 = load ptr, ptr %125, align 8
  %465 = getelementptr inbounds [3 x double], ptr %460, i64 0, i64 1
  %466 = getelementptr inbounds [3 x double], ptr %460, i64 0, i64 2
  %467 = load ptr, ptr %15, align 8
  %468 = getelementptr inbounds %"class.dealii::Vector", ptr %467, i64 %433, i32 3
  %469 = and i64 %462, 4294967295
  %470 = load ptr, ptr %118, align 8
  %471 = load i32, ptr %117, align 8
  %472 = mul i32 %471, %450
  br i1 %430, label %473, label %518

473:                                              ; preds = %449, %507
  %474 = phi i64 [ %508, %507 ], [ 0, %449 ]
  %475 = getelementptr inbounds %"struct.std::pair.263", ptr %431, i64 %474
  %476 = load i64, ptr %475, align 4
  %477 = trunc i64 %476 to i32
  %478 = icmp eq i32 %477, %463
  br i1 %478, label %479, label %507

479:                                              ; preds = %473
  %480 = getelementptr inbounds i32, ptr %464, i64 %474
  %481 = load i32, ptr %480, align 4, !tbaa !59
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds %"class.std::vector.241", ptr %423, i64 %482
  %484 = load ptr, ptr %483, align 8, !tbaa !630
  %485 = getelementptr inbounds %"class.dealii::Tensor", ptr %484, i64 %433
  %486 = load double, ptr %485, align 8, !tbaa !133
  %487 = load double, ptr %460, align 8, !tbaa !133
  %488 = getelementptr inbounds [3 x double], ptr %485, i64 0, i64 1
  %489 = load double, ptr %488, align 8, !tbaa !133
  %490 = load double, ptr %465, align 8, !tbaa !133
  %491 = fmul double %489, %490
  %492 = call double @llvm.fmuladd.f64(double %486, double %487, double %491)
  %493 = getelementptr inbounds [3 x double], ptr %485, i64 0, i64 2
  %494 = load double, ptr %493, align 8, !tbaa !133
  %495 = load double, ptr %466, align 8, !tbaa !133
  %496 = call double @llvm.fmuladd.f64(double %494, double %495, double %492)
  %497 = fmul double %435, %496
  %498 = load ptr, ptr %468, align 8, !tbaa !136
  %499 = getelementptr inbounds double, ptr %498, i64 %469
  %500 = load double, ptr %499, align 8, !tbaa !133
  %501 = trunc i64 %474 to i32
  %502 = add i32 %472, %501
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds double, ptr %470, i64 %503
  %505 = load double, ptr %504, align 8, !tbaa !133
  %506 = call double @llvm.fmuladd.f64(double %497, double %500, double %505)
  store double %506, ptr %504, align 8, !tbaa !133
  br label %507

507:                                              ; preds = %479, %473
  %508 = add nuw nsw i64 %474, 1
  %509 = icmp eq i64 %508, %95
  br i1 %509, label %510, label %473

510:                                              ; preds = %549, %507
  %511 = load double, ptr %439, align 8, !tbaa !133
  %512 = fmul double %456, %511
  %513 = getelementptr inbounds double, ptr %425, i64 %442
  %514 = load double, ptr %513, align 8, !tbaa !133
  %515 = call double @llvm.fmuladd.f64(double %512, double %435, double %514)
  store double %515, ptr %513, align 8, !tbaa !133
  %516 = add nuw nsw i64 %442, 1
  %517 = icmp eq i64 %516, %95
  br i1 %517, label %552, label %441

518:                                              ; preds = %449, %549
  %519 = phi i64 [ %550, %549 ], [ 0, %449 ]
  %520 = getelementptr inbounds %"struct.std::pair.263", ptr %431, i64 %519
  %521 = load i64, ptr %520, align 4
  %522 = trunc i64 %521 to i32
  %523 = icmp eq i32 %522, %463
  br i1 %523, label %524, label %549

524:                                              ; preds = %518
  %525 = getelementptr inbounds %"class.std::vector.241", ptr %423, i64 %519
  %526 = load ptr, ptr %525, align 8, !tbaa !630
  %527 = getelementptr inbounds %"class.dealii::Tensor", ptr %526, i64 %433
  %528 = load double, ptr %527, align 8, !tbaa !133
  %529 = load double, ptr %460, align 8, !tbaa !133
  %530 = getelementptr inbounds [3 x double], ptr %527, i64 0, i64 1
  %531 = load double, ptr %530, align 8, !tbaa !133
  %532 = load double, ptr %465, align 8, !tbaa !133
  %533 = fmul double %531, %532
  %534 = call double @llvm.fmuladd.f64(double %528, double %529, double %533)
  %535 = getelementptr inbounds [3 x double], ptr %527, i64 0, i64 2
  %536 = load double, ptr %535, align 8, !tbaa !133
  %537 = load double, ptr %466, align 8, !tbaa !133
  %538 = call double @llvm.fmuladd.f64(double %536, double %537, double %534)
  %539 = fmul double %435, %538
  %540 = load ptr, ptr %468, align 8, !tbaa !136
  %541 = getelementptr inbounds double, ptr %540, i64 %469
  %542 = load double, ptr %541, align 8, !tbaa !133
  %543 = trunc i64 %519 to i32
  %544 = add i32 %472, %543
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds double, ptr %470, i64 %545
  %547 = load double, ptr %546, align 8, !tbaa !133
  %548 = call double @llvm.fmuladd.f64(double %539, double %542, double %547)
  store double %548, ptr %546, align 8, !tbaa !133
  br label %549

549:                                              ; preds = %524, %518
  %550 = add nuw nsw i64 %519, 1
  %551 = icmp eq i64 %550, %95
  br i1 %551, label %510, label %518

552:                                              ; preds = %510, %614
  %553 = add nuw nsw i64 %433, 1
  %554 = icmp eq i64 %553, %60
  br i1 %554, label %793, label %432

555:                                              ; preds = %432, %614
  %556 = phi i64 [ %620, %614 ], [ 0, %432 ]
  br i1 %430, label %559, label %557

557:                                              ; preds = %555
  %558 = trunc i64 %556 to i32
  br label %563

559:                                              ; preds = %555
  %560 = getelementptr inbounds i32, ptr %438, i64 %556
  %561 = load i32, ptr %560, align 4, !tbaa !59
  %562 = trunc i64 %556 to i32
  br label %563

563:                                              ; preds = %559, %557
  %564 = phi i32 [ %562, %559 ], [ %558, %557 ]
  %565 = phi i32 [ %561, %559 ], [ %558, %557 ]
  %566 = mul i32 %437, %565
  %567 = add i32 %566, %440
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds double, ptr %436, i64 %568
  %570 = load double, ptr %569, align 8, !tbaa !133
  %571 = zext i32 %565 to i64
  %572 = getelementptr inbounds %"class.std::vector.241", ptr %423, i64 %571
  %573 = load ptr, ptr %572, align 8, !tbaa !630
  %574 = getelementptr inbounds %"class.dealii::Tensor", ptr %573, i64 %433
  %575 = getelementptr inbounds %"struct.std::pair.263", ptr %431, i64 %556
  %576 = load i64, ptr %575, align 4
  %577 = load ptr, ptr %125, align 8
  %578 = getelementptr inbounds [3 x double], ptr %574, i64 0, i64 1
  %579 = getelementptr inbounds [3 x double], ptr %574, i64 0, i64 2
  %580 = load ptr, ptr %15, align 8
  %581 = getelementptr inbounds %"class.dealii::Vector", ptr %580, i64 %433, i32 3
  %582 = and i64 %576, 4294967295
  %583 = load ptr, ptr %118, align 8
  %584 = load i32, ptr %117, align 8
  %585 = mul i32 %584, %564
  %586 = load ptr, ptr %581, align 8, !tbaa !136
  %587 = getelementptr inbounds double, ptr %586, i64 %582
  br i1 %430, label %622, label %588

588:                                              ; preds = %563, %588
  %589 = phi i64 [ %612, %588 ], [ 0, %563 ]
  %590 = getelementptr inbounds %"class.std::vector.241", ptr %423, i64 %589
  %591 = load ptr, ptr %590, align 8, !tbaa !630
  %592 = getelementptr inbounds %"class.dealii::Tensor", ptr %591, i64 %433
  %593 = load double, ptr %592, align 8, !tbaa !133
  %594 = load double, ptr %574, align 8, !tbaa !133
  %595 = getelementptr inbounds [3 x double], ptr %592, i64 0, i64 1
  %596 = load double, ptr %595, align 8, !tbaa !133
  %597 = load double, ptr %578, align 8, !tbaa !133
  %598 = fmul double %596, %597
  %599 = call double @llvm.fmuladd.f64(double %593, double %594, double %598)
  %600 = getelementptr inbounds [3 x double], ptr %592, i64 0, i64 2
  %601 = load double, ptr %600, align 8, !tbaa !133
  %602 = load double, ptr %579, align 8, !tbaa !133
  %603 = call double @llvm.fmuladd.f64(double %601, double %602, double %599)
  %604 = fmul double %435, %603
  %605 = load double, ptr %587, align 8, !tbaa !133
  %606 = trunc i64 %589 to i32
  %607 = add i32 %585, %606
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds double, ptr %583, i64 %608
  %610 = load double, ptr %609, align 8, !tbaa !133
  %611 = call double @llvm.fmuladd.f64(double %604, double %605, double %610)
  store double %611, ptr %609, align 8, !tbaa !133
  %612 = add nuw nsw i64 %589, 1
  %613 = icmp eq i64 %612, %95
  br i1 %613, label %614, label %588

614:                                              ; preds = %588, %622
  %615 = load double, ptr %439, align 8, !tbaa !133
  %616 = fmul double %570, %615
  %617 = getelementptr inbounds double, ptr %425, i64 %556
  %618 = load double, ptr %617, align 8, !tbaa !133
  %619 = call double @llvm.fmuladd.f64(double %616, double %435, double %618)
  store double %619, ptr %617, align 8, !tbaa !133
  %620 = add nuw nsw i64 %556, 1
  %621 = icmp eq i64 %620, %95
  br i1 %621, label %552, label %555

622:                                              ; preds = %563, %622
  %623 = phi i64 [ %649, %622 ], [ 0, %563 ]
  %624 = getelementptr inbounds i32, ptr %577, i64 %623
  %625 = load i32, ptr %624, align 4, !tbaa !59
  %626 = zext i32 %625 to i64
  %627 = getelementptr inbounds %"class.std::vector.241", ptr %423, i64 %626
  %628 = load ptr, ptr %627, align 8, !tbaa !630
  %629 = getelementptr inbounds %"class.dealii::Tensor", ptr %628, i64 %433
  %630 = load double, ptr %629, align 8, !tbaa !133
  %631 = load double, ptr %574, align 8, !tbaa !133
  %632 = getelementptr inbounds [3 x double], ptr %629, i64 0, i64 1
  %633 = load double, ptr %632, align 8, !tbaa !133
  %634 = load double, ptr %578, align 8, !tbaa !133
  %635 = fmul double %633, %634
  %636 = call double @llvm.fmuladd.f64(double %630, double %631, double %635)
  %637 = getelementptr inbounds [3 x double], ptr %629, i64 0, i64 2
  %638 = load double, ptr %637, align 8, !tbaa !133
  %639 = load double, ptr %579, align 8, !tbaa !133
  %640 = call double @llvm.fmuladd.f64(double %638, double %639, double %636)
  %641 = fmul double %435, %640
  %642 = load double, ptr %587, align 8, !tbaa !133
  %643 = trunc i64 %623 to i32
  %644 = add i32 %585, %643
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds double, ptr %583, i64 %645
  %647 = load double, ptr %646, align 8, !tbaa !133
  %648 = call double @llvm.fmuladd.f64(double %641, double %642, double %647)
  store double %648, ptr %646, align 8, !tbaa !133
  %649 = add nuw nsw i64 %623, 1
  %650 = icmp eq i64 %649, %95
  br i1 %650, label %614, label %622

651:                                              ; preds = %189, %790
  %652 = phi i64 [ 0, %189 ], [ %791, %790 ]
  %653 = getelementptr inbounds double, ptr %190, i64 %652
  %654 = load double, ptr %653, align 8, !tbaa !133
  br i1 %33, label %790, label %655

655:                                              ; preds = %651
  %656 = load i8, ptr %192, align 4, !tbaa !148, !range !182, !noundef !183
  %657 = icmp eq i8 %656, 0
  %658 = load ptr, ptr %123, align 8
  %659 = load i32, ptr %124, align 8
  %660 = load ptr, ptr %125, align 8
  %661 = getelementptr inbounds double, ptr %194, i64 %652
  %662 = trunc i64 %652 to i32
  br label %663

663:                                              ; preds = %730, %655
  %664 = phi i64 [ %736, %730 ], [ 0, %655 ]
  br i1 %657, label %667, label %665

665:                                              ; preds = %663
  %666 = trunc i64 %664 to i32
  br label %671

667:                                              ; preds = %663
  %668 = getelementptr inbounds i32, ptr %660, i64 %664
  %669 = load i32, ptr %668, align 4, !tbaa !59
  %670 = trunc i64 %664 to i32
  br label %671

671:                                              ; preds = %667, %665
  %672 = phi i32 [ %670, %667 ], [ %666, %665 ]
  %673 = phi i32 [ %669, %667 ], [ %666, %665 ]
  %674 = mul i32 %659, %673
  %675 = add i32 %674, %662
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds double, ptr %658, i64 %676
  %678 = load double, ptr %677, align 8, !tbaa !133
  %679 = zext i32 %673 to i64
  %680 = getelementptr inbounds %"class.std::vector.241", ptr %193, i64 %679
  %681 = load ptr, ptr %680, align 8, !tbaa !630
  %682 = getelementptr inbounds %"class.dealii::Tensor", ptr %681, i64 %652
  %683 = load ptr, ptr %125, align 8
  %684 = getelementptr inbounds [3 x double], ptr %682, i64 0, i64 1
  %685 = getelementptr inbounds [3 x double], ptr %682, i64 0, i64 2
  %686 = load ptr, ptr %118, align 8
  %687 = load i32, ptr %117, align 8
  %688 = mul i32 %687, %672
  br i1 %128, label %738, label %727

689:                                              ; preds = %727, %724
  %690 = phi i64 [ 0, %727 ], [ %725, %724 ]
  %691 = trunc i64 %690 to i32
  br i1 %657, label %692, label %695

692:                                              ; preds = %689
  %693 = getelementptr inbounds i32, ptr %683, i64 %690
  %694 = load i32, ptr %693, align 4, !tbaa !59
  br label %695

695:                                              ; preds = %692, %689
  %696 = phi i32 [ %694, %692 ], [ %691, %689 ]
  %697 = load i64, ptr %729, align 4
  %698 = getelementptr inbounds %"struct.std::pair.263", ptr %728, i64 %690
  %699 = load i64, ptr %698, align 4
  %700 = trunc i64 %697 to i32
  %701 = trunc i64 %699 to i32
  %702 = icmp eq i32 %700, %701
  br i1 %702, label %703, label %724

703:                                              ; preds = %695
  %704 = zext i32 %696 to i64
  %705 = getelementptr inbounds %"class.std::vector.241", ptr %193, i64 %704
  %706 = load ptr, ptr %705, align 8, !tbaa !630
  %707 = getelementptr inbounds %"class.dealii::Tensor", ptr %706, i64 %652
  %708 = load double, ptr %707, align 8, !tbaa !133
  %709 = load double, ptr %682, align 8, !tbaa !133
  %710 = getelementptr inbounds [3 x double], ptr %707, i64 0, i64 1
  %711 = load double, ptr %710, align 8, !tbaa !133
  %712 = load double, ptr %684, align 8, !tbaa !133
  %713 = fmul double %711, %712
  %714 = call double @llvm.fmuladd.f64(double %708, double %709, double %713)
  %715 = getelementptr inbounds [3 x double], ptr %707, i64 0, i64 2
  %716 = load double, ptr %715, align 8, !tbaa !133
  %717 = load double, ptr %685, align 8, !tbaa !133
  %718 = call double @llvm.fmuladd.f64(double %716, double %717, double %714)
  %719 = add i32 %688, %691
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds double, ptr %686, i64 %720
  %722 = load double, ptr %721, align 8, !tbaa !133
  %723 = call double @llvm.fmuladd.f64(double %718, double %654, double %722)
  store double %723, ptr %721, align 8, !tbaa !133
  br label %724

724:                                              ; preds = %703, %695
  %725 = add nuw nsw i64 %690, 1
  %726 = icmp eq i64 %725, %95
  br i1 %726, label %730, label %689

727:                                              ; preds = %671
  %728 = load ptr, ptr %127, align 8, !tbaa !184
  %729 = getelementptr inbounds %"struct.std::pair.263", ptr %728, i64 %664
  br label %689

730:                                              ; preds = %724, %739, %763
  %731 = load double, ptr %661, align 8, !tbaa !133
  %732 = fmul double %678, %731
  %733 = getelementptr inbounds double, ptr %195, i64 %664
  %734 = load double, ptr %733, align 8, !tbaa !133
  %735 = call double @llvm.fmuladd.f64(double %732, double %654, double %734)
  store double %735, ptr %733, align 8, !tbaa !133
  %736 = add nuw nsw i64 %664, 1
  %737 = icmp eq i64 %736, %95
  br i1 %737, label %790, label %663

738:                                              ; preds = %671
  br i1 %657, label %763, label %739

739:                                              ; preds = %738, %739
  %740 = phi i64 [ %761, %739 ], [ 0, %738 ]
  %741 = getelementptr inbounds %"class.std::vector.241", ptr %193, i64 %740
  %742 = load ptr, ptr %741, align 8, !tbaa !630
  %743 = getelementptr inbounds %"class.dealii::Tensor", ptr %742, i64 %652
  %744 = load double, ptr %743, align 8, !tbaa !133
  %745 = load double, ptr %682, align 8, !tbaa !133
  %746 = getelementptr inbounds [3 x double], ptr %743, i64 0, i64 1
  %747 = load double, ptr %746, align 8, !tbaa !133
  %748 = load double, ptr %684, align 8, !tbaa !133
  %749 = fmul double %747, %748
  %750 = call double @llvm.fmuladd.f64(double %744, double %745, double %749)
  %751 = getelementptr inbounds [3 x double], ptr %743, i64 0, i64 2
  %752 = load double, ptr %751, align 8, !tbaa !133
  %753 = load double, ptr %685, align 8, !tbaa !133
  %754 = call double @llvm.fmuladd.f64(double %752, double %753, double %750)
  %755 = trunc i64 %740 to i32
  %756 = add i32 %688, %755
  %757 = zext i32 %756 to i64
  %758 = getelementptr inbounds double, ptr %686, i64 %757
  %759 = load double, ptr %758, align 8, !tbaa !133
  %760 = call double @llvm.fmuladd.f64(double %754, double %654, double %759)
  store double %760, ptr %758, align 8, !tbaa !133
  %761 = add nuw nsw i64 %740, 1
  %762 = icmp eq i64 %761, %95
  br i1 %762, label %730, label %739

763:                                              ; preds = %738, %763
  %764 = phi i64 [ %788, %763 ], [ 0, %738 ]
  %765 = getelementptr inbounds i32, ptr %683, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !59
  %767 = zext i32 %766 to i64
  %768 = getelementptr inbounds %"class.std::vector.241", ptr %193, i64 %767
  %769 = load ptr, ptr %768, align 8, !tbaa !630
  %770 = getelementptr inbounds %"class.dealii::Tensor", ptr %769, i64 %652
  %771 = load double, ptr %770, align 8, !tbaa !133
  %772 = load double, ptr %682, align 8, !tbaa !133
  %773 = getelementptr inbounds [3 x double], ptr %770, i64 0, i64 1
  %774 = load double, ptr %773, align 8, !tbaa !133
  %775 = load double, ptr %684, align 8, !tbaa !133
  %776 = fmul double %774, %775
  %777 = call double @llvm.fmuladd.f64(double %771, double %772, double %776)
  %778 = getelementptr inbounds [3 x double], ptr %770, i64 0, i64 2
  %779 = load double, ptr %778, align 8, !tbaa !133
  %780 = load double, ptr %685, align 8, !tbaa !133
  %781 = call double @llvm.fmuladd.f64(double %779, double %780, double %777)
  %782 = trunc i64 %764 to i32
  %783 = add i32 %688, %782
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds double, ptr %686, i64 %784
  %786 = load double, ptr %785, align 8, !tbaa !133
  %787 = call double @llvm.fmuladd.f64(double %781, double %654, double %786)
  store double %787, ptr %785, align 8, !tbaa !133
  %788 = add nuw nsw i64 %764, 1
  %789 = icmp eq i64 %788, %95
  br i1 %789, label %730, label %763

790:                                              ; preds = %730, %651
  %791 = add nuw nsw i64 %652, 1
  %792 = icmp eq i64 %791, %60
  br i1 %792, label %793, label %651

793:                                              ; preds = %552, %395, %790, %420, %203, %188
  br i1 %33, label %895, label %794

794:                                              ; preds = %793
  br i1 %128, label %795, label %832

795:                                              ; preds = %794, %827
  %796 = phi i64 [ %828, %827 ], [ 0, %794 ]
  %797 = getelementptr inbounds i32, ptr %101, i64 %796
  %798 = trunc i64 %796 to i32
  br label %799

799:                                              ; preds = %824, %795
  %800 = phi i64 [ %825, %824 ], [ 0, %795 ]
  %801 = load ptr, ptr %118, align 8, !tbaa !140
  %802 = load i32, ptr %117, align 8, !tbaa !59
  %803 = mul i32 %802, %798
  %804 = trunc i64 %800 to i32
  %805 = add i32 %803, %804
  %806 = zext i32 %805 to i64
  %807 = getelementptr inbounds double, ptr %801, i64 %806
  %808 = load double, ptr %807, align 8, !tbaa !133
  %809 = fcmp oeq double %808, 0.000000e+00
  br i1 %809, label %824, label %810

810:                                              ; preds = %799
  %811 = getelementptr inbounds i32, ptr %101, i64 %800
  %812 = load i32, ptr %811, align 4, !tbaa !59
  %813 = load i32, ptr %797, align 4, !tbaa !59
  %814 = load ptr, ptr %129, align 8, !tbaa !383
  %815 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %814, i32 noundef %813, i32 noundef %812)
          to label %816 unwind label %830

816:                                              ; preds = %810
  %817 = icmp eq i32 %815, -1
  br i1 %817, label %824, label %818

818:                                              ; preds = %816
  %819 = load ptr, ptr %130, align 8, !tbaa !385
  %820 = zext i32 %815 to i64
  %821 = getelementptr inbounds double, ptr %819, i64 %820
  %822 = load double, ptr %821, align 8, !tbaa !133
  %823 = fadd double %808, %822
  store double %823, ptr %821, align 8, !tbaa !133
  br label %824

824:                                              ; preds = %818, %816, %799
  %825 = add nuw nsw i64 %800, 1
  %826 = icmp eq i64 %825, %95
  br i1 %826, label %827, label %799

827:                                              ; preds = %824
  %828 = add nuw nsw i64 %796, 1
  %829 = icmp eq i64 %828, %95
  br i1 %829, label %878, label %795

830:                                              ; preds = %810
  %831 = landingpad { ptr, i32 }
          cleanup
  br label %882

832:                                              ; preds = %794, %873
  %833 = phi i64 [ %874, %873 ], [ 0, %794 ]
  %834 = getelementptr inbounds i32, ptr %101, i64 %833
  %835 = trunc i64 %833 to i32
  br label %836

836:                                              ; preds = %832, %870
  %837 = phi i64 [ 0, %832 ], [ %871, %870 ]
  %838 = load ptr, ptr %127, align 8, !tbaa !184
  %839 = getelementptr inbounds %"struct.std::pair.263", ptr %838, i64 %833
  %840 = load i64, ptr %839, align 4
  %841 = getelementptr inbounds %"struct.std::pair.263", ptr %838, i64 %837
  %842 = load i64, ptr %841, align 4
  %843 = trunc i64 %840 to i32
  %844 = trunc i64 %842 to i32
  %845 = icmp eq i32 %843, %844
  br i1 %845, label %846, label %870

846:                                              ; preds = %836
  %847 = load ptr, ptr %118, align 8, !tbaa !140
  %848 = load i32, ptr %117, align 8, !tbaa !59
  %849 = mul i32 %848, %835
  %850 = trunc i64 %837 to i32
  %851 = add i32 %849, %850
  %852 = zext i32 %851 to i64
  %853 = getelementptr inbounds double, ptr %847, i64 %852
  %854 = load double, ptr %853, align 8, !tbaa !133
  %855 = fcmp oeq double %854, 0.000000e+00
  br i1 %855, label %870, label %856

856:                                              ; preds = %846
  %857 = getelementptr inbounds i32, ptr %101, i64 %837
  %858 = load i32, ptr %857, align 4, !tbaa !59
  %859 = load i32, ptr %834, align 4, !tbaa !59
  %860 = load ptr, ptr %129, align 8, !tbaa !383
  %861 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %860, i32 noundef %859, i32 noundef %858)
          to label %862 unwind label %876

862:                                              ; preds = %856
  %863 = icmp eq i32 %861, -1
  br i1 %863, label %870, label %864

864:                                              ; preds = %862
  %865 = load ptr, ptr %130, align 8, !tbaa !385
  %866 = zext i32 %861 to i64
  %867 = getelementptr inbounds double, ptr %865, i64 %866
  %868 = load double, ptr %867, align 8, !tbaa !133
  %869 = fadd double %854, %868
  store double %869, ptr %867, align 8, !tbaa !133
  br label %870

870:                                              ; preds = %864, %862, %846, %836
  %871 = add nuw nsw i64 %837, 1
  %872 = icmp eq i64 %871, %95
  br i1 %872, label %873, label %836

873:                                              ; preds = %870
  %874 = add nuw nsw i64 %833, 1
  %875 = icmp eq i64 %874, %95
  br i1 %875, label %878, label %832

876:                                              ; preds = %856
  %877 = landingpad { ptr, i32 }
          cleanup
  br label %882

878:                                              ; preds = %873, %827
  br i1 %33, label %895, label %879

879:                                              ; preds = %878
  %880 = load ptr, ptr %119, align 8, !tbaa !136
  %881 = load ptr, ptr %131, align 8, !tbaa !136
  br i1 %134, label %884, label %1013

882:                                              ; preds = %830, %876
  %883 = phi { ptr, i32 } [ %877, %876 ], [ %831, %830 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  br label %1092

884:                                              ; preds = %1013, %879
  %885 = phi i64 [ 0, %879 ], [ %1033, %1013 ]
  br i1 %136, label %895, label %886

886:                                              ; preds = %884
  %887 = getelementptr inbounds double, ptr %880, i64 %885
  %888 = load double, ptr %887, align 8, !tbaa !133
  %889 = getelementptr inbounds i32, ptr %101, i64 %885
  %890 = load i32, ptr %889, align 4, !tbaa !59
  %891 = zext i32 %890 to i64
  %892 = getelementptr inbounds double, ptr %881, i64 %891
  %893 = load double, ptr %892, align 8, !tbaa !133
  %894 = fadd double %888, %893
  store double %894, ptr %892, align 8, !tbaa !133
  br label %895

895:                                              ; preds = %886, %884, %204, %421, %793, %878
  %896 = load ptr, ptr %132, align 8, !tbaa !62
  %897 = getelementptr inbounds %"class.dealii::Triangulation", ptr %896, i64 0, i32 1
  %898 = load ptr, ptr %897, align 8, !tbaa !46
  %899 = ptrtoint ptr %898 to i64
  %900 = getelementptr inbounds %"class.dealii::Triangulation", ptr %896, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %901 = load i32, ptr %18, align 8
  %902 = load i32, ptr %106, align 4
  br label %903

903:                                              ; preds = %991, %895
  %904 = phi i32 [ %901, %895 ], [ %970, %991 ]
  %905 = phi i32 [ %901, %895 ], [ %971, %991 ]
  %906 = phi i32 [ %901, %895 ], [ %992, %991 ]
  %907 = phi i32 [ %902, %895 ], [ %972, %991 ]
  %908 = add nsw i32 %907, 1
  %909 = sext i32 %906 to i64
  %910 = getelementptr inbounds ptr, ptr %898, i64 %909
  %911 = load ptr, ptr %910, align 8, !tbaa !33
  %912 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %911, i64 0, i32 4
  %913 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %911, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %914 = load ptr, ptr %913, align 8, !tbaa !48
  %915 = load ptr, ptr %912, align 8, !tbaa !50
  %916 = ptrtoint ptr %914 to i64
  %917 = ptrtoint ptr %915 to i64
  %918 = sub i64 %916, %917
  %919 = sdiv exact i64 %918, 24
  %920 = trunc i64 %919 to i32
  %921 = icmp slt i32 %908, %920
  br i1 %921, label %969, label %922

922:                                              ; preds = %903
  %923 = add nsw i64 %909, 1
  %924 = trunc i64 %923 to i32
  store i32 %924, ptr %18, align 8, !tbaa !60
  %925 = load ptr, ptr %900, align 8, !tbaa !51
  %926 = ptrtoint ptr %925 to i64
  %927 = sub i64 %926, %899
  %928 = shl i64 %927, 29
  %929 = ashr i64 %928, 32
  %930 = icmp slt i64 %923, %929
  br i1 %930, label %931, label %963

931:                                              ; preds = %922
  %932 = getelementptr inbounds ptr, ptr %898, i64 %923
  %933 = load ptr, ptr %932, align 8, !tbaa !33
  %934 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %933, i64 0, i32 4
  %935 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %933, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %936 = load ptr, ptr %935, align 8, !tbaa !48
  %937 = load ptr, ptr %934, align 8, !tbaa !50
  %938 = ptrtoint ptr %936 to i64
  %939 = ptrtoint ptr %937 to i64
  %940 = sub i64 %938, %939
  %941 = sdiv exact i64 %940, 24
  %942 = trunc i64 %941 to i32
  %943 = icmp sgt i32 %942, 0
  br i1 %943, label %965, label %957

944:                                              ; preds = %957
  %945 = getelementptr inbounds ptr, ptr %898, i64 %959
  %946 = load ptr, ptr %945, align 8, !tbaa !33
  %947 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %946, i64 0, i32 4
  %948 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %946, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %949 = load ptr, ptr %948, align 8, !tbaa !48
  %950 = load ptr, ptr %947, align 8, !tbaa !50
  %951 = ptrtoint ptr %949 to i64
  %952 = ptrtoint ptr %950 to i64
  %953 = sub i64 %951, %952
  %954 = sdiv exact i64 %953, 24
  %955 = trunc i64 %954 to i32
  %956 = icmp sgt i32 %955, 0
  br i1 %956, label %964, label %957, !llvm.loop !52

957:                                              ; preds = %931, %944
  %958 = phi i64 [ %959, %944 ], [ %923, %931 ]
  %959 = add i64 %958, 1
  %960 = trunc i64 %959 to i32
  %961 = icmp eq i64 %959, %929
  br i1 %961, label %962, label %944, !llvm.loop !52

962:                                              ; preds = %957
  store i32 %960, ptr %18, align 8, !tbaa !60
  br label %963

963:                                              ; preds = %962, %922
  store i32 -1, ptr %18, align 8, !tbaa !60
  br label %969

964:                                              ; preds = %944
  store i32 %960, ptr %18, align 8, !tbaa !60
  br label %965

965:                                              ; preds = %964, %931
  %966 = phi i32 [ %924, %931 ], [ %960, %964 ]
  %967 = phi i64 [ %923, %931 ], [ %959, %964 ]
  %968 = trunc i64 %967 to i32
  br label %969

969:                                              ; preds = %965, %963, %903
  %970 = phi i32 [ %904, %903 ], [ -1, %963 ], [ %966, %965 ]
  %971 = phi i32 [ %905, %903 ], [ -1, %963 ], [ %968, %965 ]
  %972 = phi i32 [ %908, %903 ], [ -1, %963 ], [ 0, %965 ]
  %973 = phi i32 [ %906, %903 ], [ -1, %963 ], [ %968, %965 ]
  %974 = or i32 %973, %972
  %975 = icmp sgt i32 %974, -1
  br i1 %975, label %976, label %993

976:                                              ; preds = %969
  %977 = zext i32 %973 to i64
  %978 = getelementptr inbounds ptr, ptr %898, i64 %977
  %979 = load ptr, ptr %978, align 8, !tbaa !33
  %980 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %979, i64 0, i32 4, i32 0, i32 3
  %981 = load ptr, ptr %980, align 8, !tbaa !54
  %982 = lshr i32 %972, 6
  %983 = zext i32 %982 to i64
  %984 = getelementptr inbounds i64, ptr %981, i64 %983
  %985 = and i32 %972, 63
  %986 = zext i32 %985 to i64
  %987 = shl nuw i64 1, %986
  %988 = load i64, ptr %984, align 8, !tbaa !56
  %989 = and i64 %988, %987
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %993

991:                                              ; preds = %976, %996
  %992 = phi i32 [ %973, %976 ], [ %971, %996 ]
  br label %903

993:                                              ; preds = %976, %969
  store i32 %972, ptr %106, align 4, !tbaa !61
  %994 = or i32 %972, %971
  %995 = icmp sgt i32 %994, -1
  br i1 %995, label %996, label %1007

996:                                              ; preds = %993
  %997 = zext i32 %971 to i64
  %998 = getelementptr inbounds ptr, ptr %898, i64 %997
  %999 = load ptr, ptr %998, align 8, !tbaa !33
  %1000 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %999, i64 0, i32 4, i32 0, i32 1
  %1001 = shl i32 %972, 2
  %1002 = zext i32 %1001 to i64
  %1003 = load ptr, ptr %1000, align 8, !tbaa !57
  %1004 = getelementptr inbounds i32, ptr %1003, i64 %1002
  %1005 = load i32, ptr %1004, align 4, !tbaa !59
  %1006 = icmp eq i32 %1005, -1
  br i1 %1006, label %1007, label %991

1007:                                             ; preds = %993, %996
  %1008 = load i32, ptr %107, align 4, !tbaa !61
  %1009 = icmp ne i32 %972, %1008
  %1010 = load i32, ptr %105, align 8
  %1011 = icmp ne i32 %970, %1010
  %1012 = select i1 %1009, i1 true, i1 %1011
  br i1 %1012, label %137, label %1036

1013:                                             ; preds = %879, %1013
  %1014 = phi i64 [ %1033, %1013 ], [ 0, %879 ]
  %1015 = phi i64 [ %1034, %1013 ], [ 0, %879 ]
  %1016 = getelementptr inbounds double, ptr %880, i64 %1014
  %1017 = load double, ptr %1016, align 8, !tbaa !133
  %1018 = getelementptr inbounds i32, ptr %101, i64 %1014
  %1019 = load i32, ptr %1018, align 4, !tbaa !59
  %1020 = zext i32 %1019 to i64
  %1021 = getelementptr inbounds double, ptr %881, i64 %1020
  %1022 = load double, ptr %1021, align 8, !tbaa !133
  %1023 = fadd double %1017, %1022
  store double %1023, ptr %1021, align 8, !tbaa !133
  %1024 = or i64 %1014, 1
  %1025 = getelementptr inbounds double, ptr %880, i64 %1024
  %1026 = load double, ptr %1025, align 8, !tbaa !133
  %1027 = getelementptr inbounds i32, ptr %101, i64 %1024
  %1028 = load i32, ptr %1027, align 4, !tbaa !59
  %1029 = zext i32 %1028 to i64
  %1030 = getelementptr inbounds double, ptr %881, i64 %1029
  %1031 = load double, ptr %1030, align 8, !tbaa !133
  %1032 = fadd double %1026, %1031
  store double %1032, ptr %1030, align 8, !tbaa !133
  %1033 = add nuw nsw i64 %1014, 2
  %1034 = add i64 %1015, 2
  %1035 = icmp eq i64 %1034, %135
  br i1 %1035, label %884, label %1013

1036:                                             ; preds = %1007, %100
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1037 = icmp eq ptr %101, null
  br i1 %1037, label %1039, label %1038

1038:                                             ; preds = %1036
  call void @_ZdlPv(ptr noundef nonnull %101) #21
  br label %1039

1039:                                             ; preds = %1038, %1036
  %1040 = load ptr, ptr %15, align 8, !tbaa !224
  %1041 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %15, i64 0, i32 1
  %1042 = load ptr, ptr %1041, align 8, !tbaa !226
  %1043 = icmp eq ptr %1040, %1042
  br i1 %1043, label %1053, label %1044

1044:                                             ; preds = %1039, %1048
  %1045 = phi ptr [ %1049, %1048 ], [ %1040, %1039 ]
  %1046 = load ptr, ptr %1045, align 8, !tbaa !41
  %1047 = load ptr, ptr %1046, align 8
  invoke void %1047(ptr noundef nonnull align 8 dereferenceable(88) %1045)
          to label %1048 unwind label %1057

1048:                                             ; preds = %1044
  %1049 = getelementptr inbounds %"class.dealii::Vector", ptr %1045, i64 1
  %1050 = icmp eq ptr %1049, %1042
  br i1 %1050, label %1051, label %1044

1051:                                             ; preds = %1048
  %1052 = load ptr, ptr %15, align 8, !tbaa !224
  br label %1053

1053:                                             ; preds = %1051, %1039
  %1054 = phi ptr [ %1052, %1051 ], [ %1040, %1039 ]
  %1055 = icmp eq ptr %1054, null
  br i1 %1055, label %1062, label %1056

1056:                                             ; preds = %1053
  call void @_ZdlPv(ptr noundef nonnull %1054) #21
  br label %1062

1057:                                             ; preds = %1044
  %1058 = landingpad { ptr, i32 }
          cleanup
  %1059 = load ptr, ptr %15, align 8, !tbaa !224
  %1060 = icmp eq ptr %1059, null
  br i1 %1060, label %1118, label %1061

1061:                                             ; preds = %1057
  call void @_ZdlPv(ptr noundef nonnull %1059) #21
  br label %1118

1062:                                             ; preds = %1056, %1053
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1063 = load ptr, ptr %14, align 8, !tbaa !131
  %1064 = icmp eq ptr %1063, null
  br i1 %1064, label %1066, label %1065

1065:                                             ; preds = %1062
  call void @_ZdlPv(ptr noundef nonnull %1063) #21
  br label %1066

1066:                                             ; preds = %1065, %1062
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1067 = load ptr, ptr %13, align 8, !tbaa !131
  %1068 = icmp eq ptr %1067, null
  br i1 %1068, label %1070, label %1069

1069:                                             ; preds = %1066
  call void @_ZdlPv(ptr noundef nonnull %1067) #21
  br label %1070

1070:                                             ; preds = %1069, %1066
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1071 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %1072 = load ptr, ptr %1071, align 8, !tbaa !136
  %1073 = icmp eq ptr %1072, null
  br i1 %1073, label %1075, label %1074

1074:                                             ; preds = %1070
  call void @_ZdaPv(ptr noundef nonnull %1072) #21
  store ptr null, ptr %1071, align 8, !tbaa !136
  br label %1075

1075:                                             ; preds = %1074, %1070
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1076 unwind label %400

1076:                                             ; preds = %1075
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1077 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1078 = load ptr, ptr %1077, align 8, !tbaa !140
  %1079 = icmp eq ptr %1078, null
  br i1 %1079, label %1081, label %1080

1080:                                             ; preds = %1076
  call void @_ZdaPv(ptr noundef nonnull %1078) #21
  br label %1081

1081:                                             ; preds = %1080, %1076
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1082 unwind label %398

1082:                                             ; preds = %1081
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1083 = getelementptr inbounds %"class.dealii::FEValues", ptr %10, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1083)
          to label %1091 unwind label %1084

1084:                                             ; preds = %1082
  %1085 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1086 unwind label %1088

1086:                                             ; preds = %1084, %1151
  %1087 = phi { ptr, i32 } [ %1143, %1151 ], [ %1085, %1084 ]
  resume { ptr, i32 } %1087

1088:                                             ; preds = %1084
  %1089 = landingpad { ptr, i32 }
          catch ptr null
  %1090 = extractvalue { ptr, i32 } %1089, 0
  call void @__clang_call_terminate(ptr %1090) #22
  unreachable

1091:                                             ; preds = %1082
  call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %10) #19
  ret void

1092:                                             ; preds = %882, %414
  %1093 = phi { ptr, i32 } [ %883, %882 ], [ %415, %414 ]
  call void @_ZdlPv(ptr noundef nonnull %101) #21
  br label %1094

1094:                                             ; preds = %1092, %414, %412
  %1095 = phi { ptr, i32 } [ %413, %412 ], [ %415, %414 ], [ %1093, %1092 ]
  %1096 = load ptr, ptr %15, align 8, !tbaa !224
  %1097 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %15, i64 0, i32 1
  %1098 = load ptr, ptr %1097, align 8, !tbaa !226
  %1099 = icmp eq ptr %1096, %1098
  br i1 %1099, label %1109, label %1100

1100:                                             ; preds = %1094, %1104
  %1101 = phi ptr [ %1105, %1104 ], [ %1096, %1094 ]
  %1102 = load ptr, ptr %1101, align 8, !tbaa !41
  %1103 = load ptr, ptr %1102, align 8
  invoke void %1103(ptr noundef nonnull align 8 dereferenceable(88) %1101)
          to label %1104 unwind label %1113

1104:                                             ; preds = %1100
  %1105 = getelementptr inbounds %"class.dealii::Vector", ptr %1101, i64 1
  %1106 = icmp eq ptr %1105, %1098
  br i1 %1106, label %1107, label %1100

1107:                                             ; preds = %1104
  %1108 = load ptr, ptr %15, align 8, !tbaa !224
  br label %1109

1109:                                             ; preds = %1107, %1094
  %1110 = phi ptr [ %1108, %1107 ], [ %1096, %1094 ]
  %1111 = icmp eq ptr %1110, null
  br i1 %1111, label %1118, label %1112

1112:                                             ; preds = %1109
  call void @_ZdlPv(ptr noundef nonnull %1110) #21
  br label %1118

1113:                                             ; preds = %1100
  %1114 = landingpad { ptr, i32 }
          catch ptr null
  %1115 = load ptr, ptr %15, align 8, !tbaa !224
  %1116 = icmp eq ptr %1115, null
  br i1 %1116, label %1154, label %1117

1117:                                             ; preds = %1113
  call void @_ZdlPv(ptr noundef nonnull %1115) #21
  br label %1154

1118:                                             ; preds = %1061, %1057, %1112, %1109, %410
  %1119 = phi { ptr, i32 } [ %411, %410 ], [ %1095, %1109 ], [ %1095, %1112 ], [ %1058, %1061 ], [ %1058, %1057 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1120 = load ptr, ptr %14, align 8, !tbaa !131
  %1121 = icmp eq ptr %1120, null
  br i1 %1121, label %1123, label %1122

1122:                                             ; preds = %1118
  call void @_ZdlPv(ptr noundef nonnull %1120) #21
  br label %1123

1123:                                             ; preds = %1122, %1118, %404
  %1124 = phi { ptr, i32 } [ %405, %404 ], [ %1119, %1118 ], [ %1119, %1122 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1125 = load ptr, ptr %13, align 8, !tbaa !131
  %1126 = icmp eq ptr %1125, null
  br i1 %1126, label %1128, label %1127

1127:                                             ; preds = %1123
  call void @_ZdlPv(ptr noundef nonnull %1125) #21
  br label %1128

1128:                                             ; preds = %1127, %1123, %402
  %1129 = phi { ptr, i32 } [ %403, %402 ], [ %1124, %1123 ], [ %1124, %1127 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %12, align 8, !tbaa !41
  %1130 = getelementptr inbounds %"class.dealii::Vector", ptr %12, i64 0, i32 3
  %1131 = load ptr, ptr %1130, align 8, !tbaa !136
  %1132 = icmp eq ptr %1131, null
  br i1 %1132, label %1134, label %1133

1133:                                             ; preds = %1128
  call void @_ZdaPv(ptr noundef nonnull %1131) #21
  store ptr null, ptr %1130, align 8, !tbaa !136
  br label %1134

1134:                                             ; preds = %1133, %1128
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %12)
          to label %1135 unwind label %1152

1135:                                             ; preds = %1134, %400, %41
  %1136 = phi { ptr, i32 } [ %401, %400 ], [ %42, %41 ], [ %1129, %1134 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1137 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1138 = load ptr, ptr %1137, align 8, !tbaa !140
  %1139 = icmp eq ptr %1138, null
  br i1 %1139, label %1141, label %1140

1140:                                             ; preds = %1135
  call void @_ZdaPv(ptr noundef nonnull %1138) #21
  br label %1141

1141:                                             ; preds = %1140, %1135
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1142 unwind label %1152

1142:                                             ; preds = %1141, %398
  %1143 = phi { ptr, i32 } [ %399, %398 ], [ %1136, %1141 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %10, align 8, !tbaa !41
  %1144 = getelementptr inbounds %"class.dealii::FEValues", ptr %10, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %1144)
          to label %1145 unwind label %1146

1145:                                             ; preds = %1142
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1151 unwind label %1152

1146:                                             ; preds = %1142
  %1147 = landingpad { ptr, i32 }
          catch ptr null
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %10)
          to label %1154 unwind label %1148

1148:                                             ; preds = %1146
  %1149 = landingpad { ptr, i32 }
          catch ptr null
  %1150 = extractvalue { ptr, i32 } %1149, 0
  call void @__clang_call_terminate(ptr %1150) #22
  unreachable

1151:                                             ; preds = %1145
  call void @llvm.lifetime.end.p0(i64 776, ptr nonnull %10) #19
  br label %1086

1152:                                             ; preds = %1145, %1141, %1134, %408
  %1153 = landingpad { ptr, i32 }
          catch ptr null
  br label %1154

1154:                                             ; preds = %1152, %1146, %1113, %1117
  %1155 = phi { ptr, i32 } [ %1114, %1117 ], [ %1114, %1113 ], [ %1153, %1152 ], [ %1147, %1146 ]
  %1156 = extractvalue { ptr, i32 } %1155, 0
  call void @__clang_call_terminate(ptr %1156) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSF_(ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_7MappingIXT_EXT0_EEERKNS_10DoFHandlerIXT_EXT0_EEERKNS_10QuadratureIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSJ_(ptr noundef nonnull align 8 dereferenceable(72) @_ZN6dealii15StaticMappingQ1ILi3ELi3EE7mappingE, ptr noundef nonnull align 8 dereferenceable(168) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef %3)
  ret void
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %6 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %7 = alloca %"class.std::vector.43", align 8
  %8 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %9 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %10 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %11 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %12 = alloca %"class.dealii::Threads::Thread", align 16
  %13 = alloca %"class.dealii::Threads::internal::fun_encapsulator.66", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %15 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #19
  %16 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %6, i64 0, i32 1
  store ptr %6, ptr %16, align 8, !tbaa !10
  store ptr %6, ptr %6, align 8, !tbaa !13
  %17 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %6, i64 0, i32 1
  store i64 0, ptr %17, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %8, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %18 unwind label %41

18:                                               ; preds = %5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %10, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %19 unwind label %43

19:                                               ; preds = %18
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %10, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %10, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  store ptr %22, ptr %20, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %7, ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %15)
          to label %23 unwind label %43

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %11) #19
  %24 = icmp eq i32 %15, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %13, i64 0, i32 1
  %27 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.boost::shared_ptr", ptr %12, i64 0, i32 1
  %31 = zext i32 %15 to i64
  br label %47

32:                                               ; preds = %101, %23
  %33 = load ptr, ptr %6, align 8, !tbaa !13
  %34 = icmp eq ptr %33, %6
  br i1 %34, label %120, label %35

35:                                               ; preds = %32, %38
  %36 = phi ptr [ %39, %38 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"struct.std::_List_node", ptr %36, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %37)
          to label %38 unwind label %153

38:                                               ; preds = %35
  %39 = load ptr, ptr %36, align 8, !tbaa !13
  %40 = icmp eq ptr %39, %6
  br i1 %40, label %120, label %35

41:                                               ; preds = %5
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %45

43:                                               ; preds = %19, %18
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi { ptr, i32 } [ %44, %43 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  br label %160

47:                                               ; preds = %25, %101
  %48 = phi i64 [ 0, %25 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !634)
  store ptr null, ptr %13, align 8, !tbaa !25, !alias.scope !634
  %49 = load ptr, ptr @_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable, align 8, !tbaa !330, !noalias !634
  %50 = icmp eq ptr %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  invoke void %49(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %52 unwind label %104

52:                                               ; preds = %51, %47
  store ptr @_ZN6dealii13MatrixCreator23create_laplace_matrix_1ILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE, ptr %26, align 8, !tbaa !30, !alias.scope !634
  store ptr @_ZZN5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SR_EEEvT_E13stored_vtable, ptr %13, align 8, !tbaa !25, !alias.scope !634
  %53 = load ptr, ptr %7, align 8, !tbaa !332
  %54 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48
  %55 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  store ptr %56, ptr %27, align 8, !tbaa !325
  %57 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48, i32 1
  %58 = getelementptr inbounds %"struct.std::pair.69", ptr %53, i64 %48, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %57, i64 16, i1 false)
  store ptr %59, ptr %29, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeESV_SV_EELi7EEclESA_SE_SI_SL_SP_SS_SU_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %12, ptr noundef nonnull align 8 dereferenceable(32) %13, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %11)
          to label %60 unwind label %106

60:                                               ; preds = %52
  %61 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %62 unwind label %108

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"struct.std::_List_node", ptr %61, i64 0, i32 1
  %64 = load <2 x ptr>, ptr %12, align 16, !tbaa !33
  store <2 x ptr> %64, ptr %63, align 8, !tbaa !33
  %65 = extractelement <2 x ptr> %64, i64 1
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %65, i64 0, i32 1
  %69 = load i64, ptr %68, align 8, !tbaa !34
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %68, align 8, !tbaa !34
  br label %71

71:                                               ; preds = %67, %62
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %61, ptr noundef nonnull %6) #19
  %72 = load i64, ptr %17, align 8, !tbaa !36
  %73 = add i64 %72, 1
  store i64 %73, ptr %17, align 8, !tbaa !36
  %74 = load ptr, ptr %30, align 8, !tbaa !39
  %75 = icmp eq ptr %74, null
  br i1 %75, label %94, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 1
  %78 = load i64, ptr %77, align 8, !tbaa !34
  %79 = add nsw i64 %78, -1
  store i64 %79, ptr %77, align 8, !tbaa !34
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %76
  %82 = load ptr, ptr %74, align 8, !tbaa !41
  %83 = getelementptr inbounds ptr, ptr %82, i64 2
  %84 = load ptr, ptr %83, align 8
  invoke void %84(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %85 unwind label %106

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %74, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !43
  %88 = add nsw i64 %87, -1
  store i64 %88, ptr %86, align 8, !tbaa !43
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = load ptr, ptr %74, align 8, !tbaa !41
  %92 = getelementptr inbounds ptr, ptr %91, i64 3
  %93 = load ptr, ptr %92, align 8
  invoke void %93(ptr noundef nonnull align 8 dereferenceable(24) %74)
          to label %94 unwind label %106

94:                                               ; preds = %85, %76, %71, %90
  %95 = load ptr, ptr %13, align 8, !tbaa !25
  %96 = icmp eq ptr %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %94
  %98 = load ptr, ptr %95, align 8, !tbaa !330
  %99 = icmp eq ptr %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  invoke void %98(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %101 unwind label %104

101:                                              ; preds = %97, %100, %94
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  %102 = add nuw nsw i64 %48, 1
  %103 = icmp eq i64 %102, %31
  br i1 %103, label %32, label %47

104:                                              ; preds = %100, %51
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %118

106:                                              ; preds = %90, %81, %52
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %110

108:                                              ; preds = %60
  %109 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %12)
          to label %110 unwind label %163

110:                                              ; preds = %108, %106
  %111 = phi { ptr, i32 } [ %107, %106 ], [ %109, %108 ]
  %112 = load ptr, ptr %13, align 8, !tbaa !25
  %113 = icmp eq ptr %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load ptr, ptr %112, align 8, !tbaa !330
  %116 = icmp eq ptr %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  invoke void %115(ptr noundef nonnull align 8 dereferenceable(24) %26, ptr noundef nonnull align 8 dereferenceable(24) %26, i32 noundef 2)
          to label %118 unwind label %163

118:                                              ; preds = %114, %117, %110, %104
  %119 = phi { ptr, i32 } [ %105, %104 ], [ %111, %110 ], [ %111, %117 ], [ %111, %114 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #19
  br label %155

120:                                              ; preds = %38, %32
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %121 = load ptr, ptr %7, align 8, !tbaa !332
  %122 = icmp eq ptr %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  call void @_ZdlPv(ptr noundef nonnull %121) #21
  br label %124

124:                                              ; preds = %123, %120
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  %125 = load ptr, ptr %6, align 8, !tbaa !13
  %126 = icmp eq ptr %125, %6
  br i1 %126, label %152, label %127

127:                                              ; preds = %124, %150
  %128 = phi ptr [ %129, %150 ], [ %125, %124 ]
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = getelementptr inbounds %"struct.std::_List_node", ptr %128, i64 0, i32 1, i32 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !39
  %132 = icmp eq ptr %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 1
  %135 = load i64, ptr %134, align 8, !tbaa !34
  %136 = add nsw i64 %135, -1
  store i64 %136, ptr %134, align 8, !tbaa !34
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = load ptr, ptr %131, align 8, !tbaa !41
  %140 = getelementptr inbounds ptr, ptr %139, i64 2
  %141 = load ptr, ptr %140, align 8
  call void %141(ptr noundef nonnull align 8 dereferenceable(24) %131)
  %142 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %131, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !43
  %144 = add nsw i64 %143, -1
  store i64 %144, ptr %142, align 8, !tbaa !43
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %131, align 8, !tbaa !41
  %148 = getelementptr inbounds ptr, ptr %147, i64 3
  %149 = load ptr, ptr %148, align 8
  call void %149(ptr noundef nonnull align 8 dereferenceable(24) %131)
  br label %150

150:                                              ; preds = %146, %138, %133, %127
  call void @_ZdlPv(ptr noundef nonnull %128) #21
  %151 = icmp eq ptr %129, %6
  br i1 %151, label %152, label %127

152:                                              ; preds = %150, %124
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  ret void

153:                                              ; preds = %35
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %118
  %156 = phi { ptr, i32 } [ %119, %118 ], [ %154, %153 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %11) #19
  %157 = load ptr, ptr %7, align 8, !tbaa !332
  %158 = icmp eq ptr %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %155
  call void @_ZdlPv(ptr noundef nonnull %157) #21
  br label %160

160:                                              ; preds = %159, %155, %45
  %161 = phi { ptr, i32 } [ %46, %45 ], [ %156, %155 ], [ %156, %159 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %6)
          to label %162 unwind label %163

162:                                              ; preds = %160
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #19
  resume { ptr, i32 } %161

163:                                              ; preds = %117, %160, %108
  %164 = landingpad { ptr, i32 }
          catch ptr null
  %165 = extractvalue { ptr, i32 } %164, 0
  call void @__clang_call_terminate(ptr %165) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator23create_laplace_matrix_1ILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEEPKNS_8FunctionIXT0_EEENS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull align 1 dereferenceable(1) %6) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca %"class.dealii::hp::FEValues", align 8
  %11 = alloca %"class.dealii::FullMatrix", align 8
  %12 = alloca %"class.std::vector.92", align 8
  %13 = alloca %"class.std::vector.258", align 8
  %14 = alloca %"class.std::vector.28", align 8
  %15 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %16 = alloca %"class.dealii::Vector", align 8
  %17 = icmp eq ptr %4, null
  %18 = select i1 %17, i32 34, i32 50
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %10) #19
  %19 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %20 = load ptr, ptr %19, align 8, !tbaa !336
  call void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %10, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(96) %20, ptr noundef nonnull align 8 dereferenceable(96) %2, i32 noundef %18)
  %21 = load ptr, ptr %19, align 8, !tbaa !336
  %22 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !338
  %24 = load ptr, ptr %23, align 8, !tbaa !340
  %25 = getelementptr inbounds i8, ptr %24, i64 116
  %26 = load i32, ptr %25, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %11, i32 noundef 0)
          to label %27 unwind label %240

27:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %13) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %14) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %15) #19
  %28 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %5, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %15, ptr noundef nonnull align 8 dereferenceable(16) %5, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %15, i64 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !325
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %15, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, ptr %32, align 4, !tbaa !61
  %35 = load i32, ptr %33, align 4, !tbaa !61
  %36 = icmp ne i32 %34, %35
  %37 = load i32, ptr %15, align 8
  %38 = load i32, ptr %31, align 8
  %39 = icmp ne i32 %37, %38
  %40 = select i1 %36, i1 true, i1 %39
  br i1 %40, label %42, label %41

41:                                               ; preds = %27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  br label %1057

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4
  %44 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 1
  %45 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %46 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4, i32 0, i32 0, i64 1
  %47 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %48 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 4, i32 0, i32 0, i64 2
  %49 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3
  %50 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 3, i32 0, i32 0, i64 1
  %51 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 2
  %52 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 1
  %55 = icmp eq i32 %26, 0
  %56 = zext i32 %26 to i64
  %57 = shl nuw nsw i64 %56, 3
  %58 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 3
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %16, i64 0, i32 2
  %60 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %14, i64 0, i32 1
  %62 = getelementptr inbounds %"class.dealii::Function", ptr %4, i64 0, i32 2
  %63 = icmp eq i32 %26, 1
  %64 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %65 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %66 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %15, i64 0, i32 2
  br label %67

67:                                               ; preds = %42, %1047
  invoke void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240) %10, ptr noundef nonnull align 8 dereferenceable(24) %15, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %68 unwind label %242

68:                                               ; preds = %67
  %69 = load ptr, ptr %44, align 8, !tbaa !342
  %70 = load i32, ptr %43, align 8, !tbaa !59
  %71 = load i32, ptr %45, align 8, !tbaa !59
  %72 = mul i32 %71, %70
  %73 = load i32, ptr %46, align 4, !tbaa !59
  %74 = add i32 %72, %73
  %75 = load i32, ptr %47, align 4, !tbaa !59
  %76 = mul i32 %74, %75
  %77 = load i32, ptr %48, align 8, !tbaa !59
  %78 = add i32 %76, %77
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %69, i64 %79
  %81 = load ptr, ptr %80, align 8, !tbaa !346
  %82 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 3
  %83 = load i32, ptr %82, align 8, !tbaa !65
  %84 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !127
  %86 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %81, i64 0, i32 6
  %87 = load ptr, ptr %86, align 8, !tbaa !63
  %88 = zext i32 %83 to i64
  %89 = shl nuw i64 %88, 32
  %90 = or i64 %89, %88
  store i64 %90, ptr %49, align 4
  %91 = mul i32 %83, %83
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %68
  %94 = load ptr, ptr %52, align 8, !tbaa !140
  %95 = icmp eq ptr %94, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call void @_ZdaPv(ptr noundef nonnull %94) #21
  br label %97

97:                                               ; preds = %96, %93
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %52, i8 0, i64 20, i1 false)
  br label %120

98:                                               ; preds = %68
  %99 = load i32, ptr %51, align 8, !tbaa !348
  %100 = icmp ult i32 %99, %91
  %101 = load ptr, ptr %52, align 8, !tbaa !140
  br i1 %100, label %102, label %115

102:                                              ; preds = %98
  %103 = icmp eq ptr %101, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  call void @_ZdaPv(ptr noundef nonnull %101) #21
  %105 = load i32, ptr %49, align 4, !tbaa !59
  %106 = load i32, ptr %50, align 8, !tbaa !59
  %107 = mul i32 %106, %105
  br label %108

108:                                              ; preds = %104, %102
  %109 = phi i32 [ %107, %104 ], [ %91, %102 ]
  store i32 %91, ptr %51, align 8, !tbaa !348
  %110 = zext i32 %91 to i64
  %111 = shl nuw nsw i64 %110, 3
  %112 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %111) #20
          to label %113 unwind label %244

113:                                              ; preds = %108
  store ptr %112, ptr %52, align 8, !tbaa !140
  %114 = icmp eq i32 %109, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %113, %98
  %116 = phi ptr [ %112, %113 ], [ %101, %98 ]
  %117 = phi i32 [ %109, %113 ], [ %91, %98 ]
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 3
  call void @llvm.memset.p0.i64(ptr align 8 %116, i8 0, i64 %119, i1 false), !tbaa !133
  br label %120

120:                                              ; preds = %115, %113, %97
  %121 = zext i32 %85 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  store double 0.000000e+00, ptr %9, align 8, !tbaa !133
  %122 = load ptr, ptr %53, align 8, !tbaa !33
  %123 = load ptr, ptr %12, align 8, !tbaa !131
  %124 = ptrtoint ptr %122 to i64
  %125 = ptrtoint ptr %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %127, %121
  br i1 %128, label %129, label %131

129:                                              ; preds = %120
  %130 = sub nsw i64 %121, %127
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr %122, i64 noundef %130, ptr noundef nonnull align 8 dereferenceable(8) %9)
          to label %137 unwind label %244

131:                                              ; preds = %120
  %132 = icmp ugt i64 %127, %121
  br i1 %132, label %133, label %137

133:                                              ; preds = %131
  %134 = getelementptr inbounds double, ptr %123, i64 %121
  %135 = icmp eq ptr %122, %134
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  store ptr %134, ptr %53, align 8, !tbaa !135
  br label %137

137:                                              ; preds = %136, %133, %131, %129
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %138 unwind label %244

138:                                              ; preds = %137
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %54, i8 0, i64 16, i1 false)
  br i1 %55, label %147, label %139

139:                                              ; preds = %138
  %140 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %57) #20
          to label %141 unwind label %142

141:                                              ; preds = %139
  store ptr %140, ptr %58, align 8, !tbaa !136
  store i32 %26, ptr %59, align 4, !tbaa !138
  store i32 %26, ptr %54, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %140, i8 0, i64 %57, i1 false), !tbaa !133
  br label %147

142:                                              ; preds = %139
  %143 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %1101 unwind label %144

144:                                              ; preds = %142
  %145 = landingpad { ptr, i32 }
          catch ptr null
  %146 = extractvalue { ptr, i32 } %145, 0
  call void @__clang_call_terminate(ptr %146) #22
  unreachable

147:                                              ; preds = %141, %138
  %148 = load ptr, ptr %60, align 8, !tbaa !33
  %149 = load ptr, ptr %13, align 8, !tbaa !224
  %150 = ptrtoint ptr %148 to i64
  %151 = ptrtoint ptr %149 to i64
  %152 = sub i64 %150, %151
  %153 = sdiv exact i64 %152, 88
  %154 = icmp ult i64 %153, %121
  br i1 %154, label %155, label %157

155:                                              ; preds = %147
  %156 = sub nsw i64 %121, %153
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %13, ptr %148, i64 noundef %156, ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %170 unwind label %248

157:                                              ; preds = %147
  %158 = icmp ugt i64 %153, %121
  br i1 %158, label %159, label %170

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.dealii::Vector", ptr %149, i64 %121
  %161 = icmp eq ptr %148, %160
  br i1 %161, label %170, label %162

162:                                              ; preds = %159, %166
  %163 = phi ptr [ %167, %166 ], [ %160, %159 ]
  %164 = load ptr, ptr %163, align 8, !tbaa !41
  %165 = load ptr, ptr %164, align 8
  invoke void %165(ptr noundef nonnull align 8 dereferenceable(88) %163)
          to label %166 unwind label %246

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.dealii::Vector", ptr %163, i64 1
  %168 = icmp eq ptr %167, %148
  br i1 %168, label %169, label %162

169:                                              ; preds = %166
  store ptr %160, ptr %60, align 8, !tbaa !226
  br label %170

170:                                              ; preds = %169, %159, %157, %155
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %16, align 8, !tbaa !41
  %171 = load ptr, ptr %58, align 8, !tbaa !136
  %172 = icmp eq ptr %171, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  call void @_ZdaPv(ptr noundef nonnull %171) #21
  store ptr null, ptr %58, align 8, !tbaa !136
  br label %174

174:                                              ; preds = %173, %170
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %16)
          to label %175 unwind label %244

175:                                              ; preds = %174
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 0, ptr %8, align 4, !tbaa !59
  %176 = load ptr, ptr %61, align 8, !tbaa !33
  %177 = load ptr, ptr %14, align 8, !tbaa !144
  %178 = ptrtoint ptr %176 to i64
  %179 = ptrtoint ptr %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 2
  %182 = icmp ult i64 %181, %88
  br i1 %182, label %183, label %185

183:                                              ; preds = %175
  %184 = sub nsw i64 %88, %181
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %14, ptr %176, i64 noundef %184, ptr noundef nonnull align 4 dereferenceable(4) %8)
          to label %191 unwind label %244

185:                                              ; preds = %175
  %186 = icmp ugt i64 %181, %88
  br i1 %186, label %187, label %191

187:                                              ; preds = %185
  %188 = getelementptr inbounds i32, ptr %177, i64 %88
  %189 = icmp eq ptr %176, %188
  br i1 %189, label %191, label %190

190:                                              ; preds = %187
  store ptr %188, ptr %61, align 8, !tbaa !349
  br label %191

191:                                              ; preds = %190, %187, %185, %183
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  %192 = load i32, ptr %49, align 4, !tbaa !59
  %193 = load i32, ptr %50, align 8, !tbaa !59
  %194 = mul i32 %193, %192
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %191
  %197 = load ptr, ptr %52, align 8, !tbaa !140
  %198 = zext i32 %194 to i64
  %199 = shl nuw nsw i64 %198, 3
  call void @llvm.memset.p0.i64(ptr align 8 %197, i8 0, i64 %199, i1 false), !tbaa !133
  br label %200

200:                                              ; preds = %191, %196
  %201 = load ptr, ptr %30, align 8, !tbaa !325
  %202 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %201, i64 0, i32 4
  %203 = load i32, ptr %15, align 8, !tbaa !60
  %204 = sext i32 %203 to i64
  %205 = load ptr, ptr %202, align 8, !tbaa !350
  %206 = getelementptr inbounds ptr, ptr %205, i64 %204
  %207 = load ptr, ptr %206, align 8, !tbaa !33
  %208 = load i32, ptr %32, align 4, !tbaa !61
  %209 = sext i32 %208 to i64
  %210 = load ptr, ptr %207, align 8, !tbaa !144
  %211 = getelementptr inbounds i32, ptr %210, i64 %209
  %212 = load i32, ptr %211, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %15, ptr noundef nonnull align 8 dereferenceable(24) %14, i32 noundef %212)
          to label %213 unwind label %244

213:                                              ; preds = %200
  br i1 %17, label %214, label %223

214:                                              ; preds = %213
  %215 = icmp eq i32 %85, 0
  br i1 %215, label %846, label %216

216:                                              ; preds = %214
  %217 = getelementptr inbounds i8, ptr %81, i64 216
  %218 = load ptr, ptr %217, align 8, !tbaa !131
  %219 = icmp eq i32 %83, 0
  %220 = getelementptr inbounds i8, ptr %81, i64 480
  %221 = getelementptr inbounds i8, ptr %81, i64 168
  %222 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  br label %689

223:                                              ; preds = %213
  %224 = load i32, ptr %62, align 8, !tbaa !145
  %225 = icmp eq i32 %224, 1
  %226 = getelementptr inbounds i8, ptr %81, i64 312
  %227 = load ptr, ptr %4, align 8, !tbaa !41
  br i1 %225, label %228, label %425

228:                                              ; preds = %223
  %229 = getelementptr inbounds ptr, ptr %227, i64 6
  %230 = load ptr, ptr %229, align 8
  invoke void %230(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %226, ptr noundef nonnull align 8 dereferenceable(24) %12, i32 noundef 0)
          to label %231 unwind label %244

231:                                              ; preds = %228
  %232 = icmp eq i32 %85, 0
  br i1 %232, label %846, label %233

233:                                              ; preds = %231
  %234 = getelementptr inbounds i8, ptr %81, i64 216
  %235 = load ptr, ptr %234, align 8, !tbaa !131
  %236 = icmp eq i32 %83, 0
  %237 = getelementptr inbounds i8, ptr %81, i64 480
  %238 = getelementptr inbounds i8, ptr %81, i64 168
  %239 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  br label %252

240:                                              ; preds = %1088, %7
  %241 = landingpad { ptr, i32 }
          cleanup
  br label %1141

242:                                              ; preds = %67
  %243 = landingpad { ptr, i32 }
          cleanup
  br label %1101

244:                                              ; preds = %200, %183, %174, %137, %129, %108, %425, %228
  %245 = landingpad { ptr, i32 }
          cleanup
  br label %1101

246:                                              ; preds = %162
  %247 = landingpad { ptr, i32 }
          cleanup
  br label %250

248:                                              ; preds = %155
  %249 = landingpad { ptr, i32 }
          cleanup
  br label %250

250:                                              ; preds = %248, %246
  %251 = phi { ptr, i32 } [ %247, %246 ], [ %249, %248 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %16)
          to label %1101 unwind label %1153

252:                                              ; preds = %233, %357
  %253 = phi i64 [ 0, %233 ], [ %358, %357 ]
  %254 = getelementptr inbounds double, ptr %235, i64 %253
  %255 = load double, ptr %254, align 8, !tbaa !133
  br i1 %236, label %357, label %256

256:                                              ; preds = %252
  %257 = load ptr, ptr %86, align 8, !tbaa !63
  %258 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %257, i64 0, i32 2
  %259 = load i8, ptr %258, align 4, !tbaa !148, !range !182, !noundef !183
  %260 = icmp eq i8 %259, 0
  %261 = load ptr, ptr %238, align 8, !tbaa !637
  br i1 %63, label %262, label %355

262:                                              ; preds = %256
  br i1 %260, label %263, label %313

263:                                              ; preds = %262
  %264 = load ptr, ptr %237, align 8, !tbaa !144
  br label %265

265:                                              ; preds = %310, %263
  %266 = phi i64 [ %311, %310 ], [ 0, %263 ]
  %267 = getelementptr inbounds i32, ptr %264, i64 %266
  %268 = load i32, ptr %267, align 4, !tbaa !59
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds %"class.std::vector.241", ptr %261, i64 %269
  %271 = load ptr, ptr %270, align 8, !tbaa !630
  %272 = getelementptr inbounds %"class.dealii::Tensor", ptr %271, i64 %253
  %273 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 1
  %274 = getelementptr inbounds [3 x double], ptr %272, i64 0, i64 2
  %275 = load ptr, ptr %12, align 8
  %276 = getelementptr inbounds double, ptr %275, i64 %253
  %277 = load ptr, ptr %52, align 8
  %278 = load i32, ptr %50, align 8
  %279 = trunc i64 %266 to i32
  %280 = mul i32 %278, %279
  br label %281

281:                                              ; preds = %281, %265
  %282 = phi i64 [ %308, %281 ], [ 0, %265 ]
  %283 = getelementptr inbounds i32, ptr %264, i64 %282
  %284 = load i32, ptr %283, align 4, !tbaa !59
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds %"class.std::vector.241", ptr %261, i64 %285
  %287 = load ptr, ptr %286, align 8, !tbaa !630
  %288 = getelementptr inbounds %"class.dealii::Tensor", ptr %287, i64 %253
  %289 = load double, ptr %288, align 8, !tbaa !133
  %290 = load double, ptr %272, align 8, !tbaa !133
  %291 = getelementptr inbounds [3 x double], ptr %288, i64 0, i64 1
  %292 = load double, ptr %291, align 8, !tbaa !133
  %293 = load double, ptr %273, align 8, !tbaa !133
  %294 = fmul double %292, %293
  %295 = call double @llvm.fmuladd.f64(double %289, double %290, double %294)
  %296 = getelementptr inbounds [3 x double], ptr %288, i64 0, i64 2
  %297 = load double, ptr %296, align 8, !tbaa !133
  %298 = load double, ptr %274, align 8, !tbaa !133
  %299 = call double @llvm.fmuladd.f64(double %297, double %298, double %295)
  %300 = fmul double %255, %299
  %301 = load double, ptr %276, align 8, !tbaa !133
  %302 = trunc i64 %282 to i32
  %303 = add i32 %280, %302
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds double, ptr %277, i64 %304
  %306 = load double, ptr %305, align 8, !tbaa !133
  %307 = call double @llvm.fmuladd.f64(double %300, double %301, double %306)
  store double %307, ptr %305, align 8, !tbaa !133
  %308 = add nuw nsw i64 %282, 1
  %309 = icmp eq i64 %308, %88
  br i1 %309, label %310, label %281

310:                                              ; preds = %281
  %311 = add nuw nsw i64 %266, 1
  %312 = icmp eq i64 %311, %88
  br i1 %312, label %357, label %265

313:                                              ; preds = %262, %352
  %314 = phi i64 [ %353, %352 ], [ 0, %262 ]
  %315 = getelementptr inbounds %"class.std::vector.241", ptr %261, i64 %314
  %316 = load ptr, ptr %315, align 8, !tbaa !630
  %317 = getelementptr inbounds %"class.dealii::Tensor", ptr %316, i64 %253
  %318 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 1
  %319 = getelementptr inbounds [3 x double], ptr %317, i64 0, i64 2
  %320 = load ptr, ptr %12, align 8
  %321 = getelementptr inbounds double, ptr %320, i64 %253
  %322 = load ptr, ptr %52, align 8
  %323 = load i32, ptr %50, align 8
  %324 = trunc i64 %314 to i32
  %325 = mul i32 %323, %324
  br label %326

326:                                              ; preds = %326, %313
  %327 = phi i64 [ %350, %326 ], [ 0, %313 ]
  %328 = getelementptr inbounds %"class.std::vector.241", ptr %261, i64 %327
  %329 = load ptr, ptr %328, align 8, !tbaa !630
  %330 = getelementptr inbounds %"class.dealii::Tensor", ptr %329, i64 %253
  %331 = load double, ptr %330, align 8, !tbaa !133
  %332 = load double, ptr %317, align 8, !tbaa !133
  %333 = getelementptr inbounds [3 x double], ptr %330, i64 0, i64 1
  %334 = load double, ptr %333, align 8, !tbaa !133
  %335 = load double, ptr %318, align 8, !tbaa !133
  %336 = fmul double %334, %335
  %337 = call double @llvm.fmuladd.f64(double %331, double %332, double %336)
  %338 = getelementptr inbounds [3 x double], ptr %330, i64 0, i64 2
  %339 = load double, ptr %338, align 8, !tbaa !133
  %340 = load double, ptr %319, align 8, !tbaa !133
  %341 = call double @llvm.fmuladd.f64(double %339, double %340, double %337)
  %342 = fmul double %255, %341
  %343 = load double, ptr %321, align 8, !tbaa !133
  %344 = trunc i64 %327 to i32
  %345 = add i32 %325, %344
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds double, ptr %322, i64 %346
  %348 = load double, ptr %347, align 8, !tbaa !133
  %349 = call double @llvm.fmuladd.f64(double %342, double %343, double %348)
  store double %349, ptr %347, align 8, !tbaa !133
  %350 = add nuw nsw i64 %327, 1
  %351 = icmp eq i64 %350, %88
  br i1 %351, label %352, label %326

352:                                              ; preds = %326
  %353 = add nuw nsw i64 %314, 1
  %354 = icmp eq i64 %353, %88
  br i1 %354, label %357, label %313

355:                                              ; preds = %256
  %356 = load ptr, ptr %239, align 8, !tbaa !184
  br label %360

357:                                              ; preds = %381, %352, %310, %252
  %358 = add nuw nsw i64 %253, 1
  %359 = icmp eq i64 %358, %121
  br i1 %359, label %846, label %252

360:                                              ; preds = %355, %381
  %361 = phi i64 [ 0, %355 ], [ %382, %381 ]
  %362 = trunc i64 %361 to i32
  br i1 %260, label %363, label %367

363:                                              ; preds = %360
  %364 = load ptr, ptr %237, align 8, !tbaa !144
  %365 = getelementptr inbounds i32, ptr %364, i64 %361
  %366 = load i32, ptr %365, align 4, !tbaa !59
  br label %367

367:                                              ; preds = %360, %363
  %368 = phi i32 [ %366, %363 ], [ %362, %360 ]
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %"class.std::vector.241", ptr %261, i64 %369
  %371 = load ptr, ptr %370, align 8, !tbaa !630
  %372 = getelementptr inbounds %"class.dealii::Tensor", ptr %371, i64 %253
  %373 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 1
  %374 = getelementptr inbounds [3 x double], ptr %372, i64 0, i64 2
  %375 = load ptr, ptr %12, align 8
  %376 = getelementptr inbounds double, ptr %375, i64 %253
  %377 = load ptr, ptr %52, align 8
  %378 = load i32, ptr %50, align 8
  %379 = mul i32 %378, %362
  %380 = getelementptr inbounds %"struct.std::pair.263", ptr %356, i64 %361
  br label %384

381:                                              ; preds = %422
  %382 = add nuw nsw i64 %361, 1
  %383 = icmp eq i64 %382, %88
  br i1 %383, label %357, label %360

384:                                              ; preds = %367, %422
  %385 = phi i64 [ 0, %367 ], [ %423, %422 ]
  %386 = trunc i64 %385 to i32
  br i1 %260, label %387, label %391

387:                                              ; preds = %384
  %388 = load ptr, ptr %237, align 8, !tbaa !144
  %389 = getelementptr inbounds i32, ptr %388, i64 %385
  %390 = load i32, ptr %389, align 4, !tbaa !59
  br label %391

391:                                              ; preds = %387, %384
  %392 = phi i32 [ %390, %387 ], [ %386, %384 ]
  %393 = load i64, ptr %380, align 4
  %394 = getelementptr inbounds %"struct.std::pair.263", ptr %356, i64 %385
  %395 = load i64, ptr %394, align 4
  %396 = trunc i64 %393 to i32
  %397 = trunc i64 %395 to i32
  %398 = icmp eq i32 %396, %397
  br i1 %398, label %399, label %422

399:                                              ; preds = %391
  %400 = zext i32 %392 to i64
  %401 = getelementptr inbounds %"class.std::vector.241", ptr %261, i64 %400
  %402 = load ptr, ptr %401, align 8, !tbaa !630
  %403 = getelementptr inbounds %"class.dealii::Tensor", ptr %402, i64 %253
  %404 = load double, ptr %403, align 8, !tbaa !133
  %405 = load double, ptr %372, align 8, !tbaa !133
  %406 = getelementptr inbounds [3 x double], ptr %403, i64 0, i64 1
  %407 = load double, ptr %406, align 8, !tbaa !133
  %408 = load double, ptr %373, align 8, !tbaa !133
  %409 = fmul double %407, %408
  %410 = call double @llvm.fmuladd.f64(double %404, double %405, double %409)
  %411 = getelementptr inbounds [3 x double], ptr %403, i64 0, i64 2
  %412 = load double, ptr %411, align 8, !tbaa !133
  %413 = load double, ptr %374, align 8, !tbaa !133
  %414 = call double @llvm.fmuladd.f64(double %412, double %413, double %410)
  %415 = fmul double %255, %414
  %416 = load double, ptr %376, align 8, !tbaa !133
  %417 = add i32 %379, %386
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds double, ptr %377, i64 %418
  %420 = load double, ptr %419, align 8, !tbaa !133
  %421 = call double @llvm.fmuladd.f64(double %415, double %416, double %420)
  store double %421, ptr %419, align 8, !tbaa !133
  br label %422

422:                                              ; preds = %399, %391
  %423 = add nuw nsw i64 %385, 1
  %424 = icmp eq i64 %423, %88
  br i1 %424, label %381, label %384

425:                                              ; preds = %223
  %426 = getelementptr inbounds ptr, ptr %227, i64 7
  %427 = load ptr, ptr %426, align 8
  invoke void %427(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %226, ptr noundef nonnull align 8 dereferenceable(24) %13)
          to label %428 unwind label %244

428:                                              ; preds = %425
  %429 = icmp eq i32 %85, 0
  br i1 %429, label %846, label %430

430:                                              ; preds = %428
  %431 = getelementptr inbounds i8, ptr %81, i64 216
  %432 = load ptr, ptr %431, align 8, !tbaa !131
  %433 = icmp eq i32 %83, 0
  %434 = getelementptr inbounds i8, ptr %81, i64 480
  br i1 %433, label %935, label %435

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  %437 = getelementptr inbounds i8, ptr %81, i64 168
  %438 = load ptr, ptr %86, align 8, !tbaa !63
  %439 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %438, i64 0, i32 2
  %440 = load i8, ptr %439, align 4, !tbaa !148, !range !182, !noundef !183
  %441 = icmp eq i8 %440, 0
  %442 = load ptr, ptr %437, align 8, !tbaa !637
  %443 = load ptr, ptr %436, align 8, !tbaa !184
  br i1 %441, label %444, label %573

444:                                              ; preds = %435
  %445 = load ptr, ptr %434, align 8, !tbaa !144
  br i1 %63, label %446, label %506

446:                                              ; preds = %444, %503
  %447 = phi i64 [ %504, %503 ], [ 0, %444 ]
  %448 = getelementptr inbounds double, ptr %432, i64 %447
  %449 = load double, ptr %448, align 8, !tbaa !133
  br label %450

450:                                              ; preds = %500, %446
  %451 = phi i64 [ %501, %500 ], [ 0, %446 ]
  %452 = getelementptr inbounds i32, ptr %445, i64 %451
  %453 = load i32, ptr %452, align 4, !tbaa !59
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %454
  %456 = load ptr, ptr %455, align 8, !tbaa !630
  %457 = getelementptr inbounds %"class.dealii::Tensor", ptr %456, i64 %447
  %458 = getelementptr inbounds %"struct.std::pair.263", ptr %443, i64 %451
  %459 = load i64, ptr %458, align 4
  %460 = getelementptr inbounds [3 x double], ptr %457, i64 0, i64 1
  %461 = getelementptr inbounds [3 x double], ptr %457, i64 0, i64 2
  %462 = load ptr, ptr %13, align 8
  %463 = getelementptr inbounds %"class.dealii::Vector", ptr %462, i64 %447, i32 3
  %464 = and i64 %459, 4294967295
  %465 = load ptr, ptr %52, align 8
  %466 = load i32, ptr %50, align 8
  %467 = trunc i64 %451 to i32
  %468 = mul i32 %466, %467
  %469 = load ptr, ptr %463, align 8, !tbaa !136
  %470 = getelementptr inbounds double, ptr %469, i64 %464
  br label %471

471:                                              ; preds = %471, %450
  %472 = phi i64 [ %498, %471 ], [ 0, %450 ]
  %473 = getelementptr inbounds i32, ptr %445, i64 %472
  %474 = load i32, ptr %473, align 4, !tbaa !59
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %475
  %477 = load ptr, ptr %476, align 8, !tbaa !630
  %478 = getelementptr inbounds %"class.dealii::Tensor", ptr %477, i64 %447
  %479 = load double, ptr %478, align 8, !tbaa !133
  %480 = load double, ptr %457, align 8, !tbaa !133
  %481 = getelementptr inbounds [3 x double], ptr %478, i64 0, i64 1
  %482 = load double, ptr %481, align 8, !tbaa !133
  %483 = load double, ptr %460, align 8, !tbaa !133
  %484 = fmul double %482, %483
  %485 = call double @llvm.fmuladd.f64(double %479, double %480, double %484)
  %486 = getelementptr inbounds [3 x double], ptr %478, i64 0, i64 2
  %487 = load double, ptr %486, align 8, !tbaa !133
  %488 = load double, ptr %461, align 8, !tbaa !133
  %489 = call double @llvm.fmuladd.f64(double %487, double %488, double %485)
  %490 = fmul double %449, %489
  %491 = load double, ptr %470, align 8, !tbaa !133
  %492 = trunc i64 %472 to i32
  %493 = add i32 %468, %492
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds double, ptr %465, i64 %494
  %496 = load double, ptr %495, align 8, !tbaa !133
  %497 = call double @llvm.fmuladd.f64(double %490, double %491, double %496)
  store double %497, ptr %495, align 8, !tbaa !133
  %498 = add nuw nsw i64 %472, 1
  %499 = icmp eq i64 %498, %88
  br i1 %499, label %500, label %471

500:                                              ; preds = %471
  %501 = add nuw nsw i64 %451, 1
  %502 = icmp eq i64 %501, %88
  br i1 %502, label %503, label %450

503:                                              ; preds = %500
  %504 = add nuw nsw i64 %447, 1
  %505 = icmp eq i64 %504, %121
  br i1 %505, label %846, label %446

506:                                              ; preds = %444, %570
  %507 = phi i64 [ %571, %570 ], [ 0, %444 ]
  %508 = getelementptr inbounds double, ptr %432, i64 %507
  %509 = load double, ptr %508, align 8, !tbaa !133
  br label %510

510:                                              ; preds = %506, %567
  %511 = phi i64 [ 0, %506 ], [ %568, %567 ]
  %512 = getelementptr inbounds i32, ptr %445, i64 %511
  %513 = load i32, ptr %512, align 4, !tbaa !59
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %514
  %516 = load ptr, ptr %515, align 8, !tbaa !630
  %517 = getelementptr inbounds %"class.dealii::Tensor", ptr %516, i64 %507
  %518 = getelementptr inbounds %"struct.std::pair.263", ptr %443, i64 %511
  %519 = load i64, ptr %518, align 4
  %520 = trunc i64 %519 to i32
  %521 = getelementptr inbounds [3 x double], ptr %517, i64 0, i64 1
  %522 = getelementptr inbounds [3 x double], ptr %517, i64 0, i64 2
  %523 = load ptr, ptr %13, align 8
  %524 = getelementptr inbounds %"class.dealii::Vector", ptr %523, i64 %507, i32 3
  %525 = and i64 %519, 4294967295
  %526 = load ptr, ptr %52, align 8
  %527 = load i32, ptr %50, align 8
  %528 = trunc i64 %511 to i32
  %529 = mul i32 %527, %528
  br label %530

530:                                              ; preds = %564, %510
  %531 = phi i64 [ %565, %564 ], [ 0, %510 ]
  %532 = getelementptr inbounds %"struct.std::pair.263", ptr %443, i64 %531
  %533 = load i64, ptr %532, align 4
  %534 = trunc i64 %533 to i32
  %535 = icmp eq i32 %534, %520
  br i1 %535, label %536, label %564

536:                                              ; preds = %530
  %537 = getelementptr inbounds i32, ptr %445, i64 %531
  %538 = load i32, ptr %537, align 4, !tbaa !59
  %539 = zext i32 %538 to i64
  %540 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %539
  %541 = load ptr, ptr %540, align 8, !tbaa !630
  %542 = getelementptr inbounds %"class.dealii::Tensor", ptr %541, i64 %507
  %543 = load double, ptr %542, align 8, !tbaa !133
  %544 = load double, ptr %517, align 8, !tbaa !133
  %545 = getelementptr inbounds [3 x double], ptr %542, i64 0, i64 1
  %546 = load double, ptr %545, align 8, !tbaa !133
  %547 = load double, ptr %521, align 8, !tbaa !133
  %548 = fmul double %546, %547
  %549 = call double @llvm.fmuladd.f64(double %543, double %544, double %548)
  %550 = getelementptr inbounds [3 x double], ptr %542, i64 0, i64 2
  %551 = load double, ptr %550, align 8, !tbaa !133
  %552 = load double, ptr %522, align 8, !tbaa !133
  %553 = call double @llvm.fmuladd.f64(double %551, double %552, double %549)
  %554 = fmul double %509, %553
  %555 = load ptr, ptr %524, align 8, !tbaa !136
  %556 = getelementptr inbounds double, ptr %555, i64 %525
  %557 = load double, ptr %556, align 8, !tbaa !133
  %558 = trunc i64 %531 to i32
  %559 = add i32 %529, %558
  %560 = zext i32 %559 to i64
  %561 = getelementptr inbounds double, ptr %526, i64 %560
  %562 = load double, ptr %561, align 8, !tbaa !133
  %563 = call double @llvm.fmuladd.f64(double %554, double %557, double %562)
  store double %563, ptr %561, align 8, !tbaa !133
  br label %564

564:                                              ; preds = %536, %530
  %565 = add nuw nsw i64 %531, 1
  %566 = icmp eq i64 %565, %88
  br i1 %566, label %567, label %530

567:                                              ; preds = %564
  %568 = add nuw nsw i64 %511, 1
  %569 = icmp eq i64 %568, %88
  br i1 %569, label %570, label %510

570:                                              ; preds = %567
  %571 = add nuw nsw i64 %507, 1
  %572 = icmp eq i64 %571, %121
  br i1 %572, label %846, label %506

573:                                              ; preds = %435
  br i1 %63, label %574, label %628

574:                                              ; preds = %573, %625
  %575 = phi i64 [ %626, %625 ], [ 0, %573 ]
  %576 = getelementptr inbounds double, ptr %432, i64 %575
  %577 = load double, ptr %576, align 8, !tbaa !133
  br label %578

578:                                              ; preds = %622, %574
  %579 = phi i64 [ %623, %622 ], [ 0, %574 ]
  %580 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %579
  %581 = load ptr, ptr %580, align 8, !tbaa !630
  %582 = getelementptr inbounds %"class.dealii::Tensor", ptr %581, i64 %575
  %583 = getelementptr inbounds %"struct.std::pair.263", ptr %443, i64 %579
  %584 = load i64, ptr %583, align 4
  %585 = getelementptr inbounds [3 x double], ptr %582, i64 0, i64 1
  %586 = getelementptr inbounds [3 x double], ptr %582, i64 0, i64 2
  %587 = load ptr, ptr %13, align 8
  %588 = getelementptr inbounds %"class.dealii::Vector", ptr %587, i64 %575, i32 3
  %589 = and i64 %584, 4294967295
  %590 = load ptr, ptr %52, align 8
  %591 = load i32, ptr %50, align 8
  %592 = trunc i64 %579 to i32
  %593 = mul i32 %591, %592
  %594 = load ptr, ptr %588, align 8, !tbaa !136
  %595 = getelementptr inbounds double, ptr %594, i64 %589
  br label %596

596:                                              ; preds = %596, %578
  %597 = phi i64 [ %620, %596 ], [ 0, %578 ]
  %598 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %597
  %599 = load ptr, ptr %598, align 8, !tbaa !630
  %600 = getelementptr inbounds %"class.dealii::Tensor", ptr %599, i64 %575
  %601 = load double, ptr %600, align 8, !tbaa !133
  %602 = load double, ptr %582, align 8, !tbaa !133
  %603 = getelementptr inbounds [3 x double], ptr %600, i64 0, i64 1
  %604 = load double, ptr %603, align 8, !tbaa !133
  %605 = load double, ptr %585, align 8, !tbaa !133
  %606 = fmul double %604, %605
  %607 = call double @llvm.fmuladd.f64(double %601, double %602, double %606)
  %608 = getelementptr inbounds [3 x double], ptr %600, i64 0, i64 2
  %609 = load double, ptr %608, align 8, !tbaa !133
  %610 = load double, ptr %586, align 8, !tbaa !133
  %611 = call double @llvm.fmuladd.f64(double %609, double %610, double %607)
  %612 = fmul double %577, %611
  %613 = load double, ptr %595, align 8, !tbaa !133
  %614 = trunc i64 %597 to i32
  %615 = add i32 %593, %614
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds double, ptr %590, i64 %616
  %618 = load double, ptr %617, align 8, !tbaa !133
  %619 = call double @llvm.fmuladd.f64(double %612, double %613, double %618)
  store double %619, ptr %617, align 8, !tbaa !133
  %620 = add nuw nsw i64 %597, 1
  %621 = icmp eq i64 %620, %88
  br i1 %621, label %622, label %596

622:                                              ; preds = %596
  %623 = add nuw nsw i64 %579, 1
  %624 = icmp eq i64 %623, %88
  br i1 %624, label %625, label %578

625:                                              ; preds = %622
  %626 = add nuw nsw i64 %575, 1
  %627 = icmp eq i64 %626, %121
  br i1 %627, label %846, label %574

628:                                              ; preds = %573, %686
  %629 = phi i64 [ %687, %686 ], [ 0, %573 ]
  %630 = getelementptr inbounds double, ptr %432, i64 %629
  %631 = load double, ptr %630, align 8, !tbaa !133
  br label %632

632:                                              ; preds = %628, %649
  %633 = phi i64 [ 0, %628 ], [ %650, %649 ]
  %634 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %633
  %635 = load ptr, ptr %634, align 8, !tbaa !630
  %636 = getelementptr inbounds %"class.dealii::Tensor", ptr %635, i64 %629
  %637 = getelementptr inbounds %"struct.std::pair.263", ptr %443, i64 %633
  %638 = load i64, ptr %637, align 4
  %639 = trunc i64 %638 to i32
  %640 = getelementptr inbounds [3 x double], ptr %636, i64 0, i64 1
  %641 = getelementptr inbounds [3 x double], ptr %636, i64 0, i64 2
  %642 = load ptr, ptr %13, align 8
  %643 = getelementptr inbounds %"class.dealii::Vector", ptr %642, i64 %629, i32 3
  %644 = and i64 %638, 4294967295
  %645 = load ptr, ptr %52, align 8
  %646 = load i32, ptr %50, align 8
  %647 = trunc i64 %633 to i32
  %648 = mul i32 %646, %647
  br label %652

649:                                              ; preds = %683
  %650 = add nuw nsw i64 %633, 1
  %651 = icmp eq i64 %650, %88
  br i1 %651, label %686, label %632

652:                                              ; preds = %683, %632
  %653 = phi i64 [ %684, %683 ], [ 0, %632 ]
  %654 = getelementptr inbounds %"struct.std::pair.263", ptr %443, i64 %653
  %655 = load i64, ptr %654, align 4
  %656 = trunc i64 %655 to i32
  %657 = icmp eq i32 %656, %639
  br i1 %657, label %658, label %683

658:                                              ; preds = %652
  %659 = getelementptr inbounds %"class.std::vector.241", ptr %442, i64 %653
  %660 = load ptr, ptr %659, align 8, !tbaa !630
  %661 = getelementptr inbounds %"class.dealii::Tensor", ptr %660, i64 %629
  %662 = load double, ptr %661, align 8, !tbaa !133
  %663 = load double, ptr %636, align 8, !tbaa !133
  %664 = getelementptr inbounds [3 x double], ptr %661, i64 0, i64 1
  %665 = load double, ptr %664, align 8, !tbaa !133
  %666 = load double, ptr %640, align 8, !tbaa !133
  %667 = fmul double %665, %666
  %668 = call double @llvm.fmuladd.f64(double %662, double %663, double %667)
  %669 = getelementptr inbounds [3 x double], ptr %661, i64 0, i64 2
  %670 = load double, ptr %669, align 8, !tbaa !133
  %671 = load double, ptr %641, align 8, !tbaa !133
  %672 = call double @llvm.fmuladd.f64(double %670, double %671, double %668)
  %673 = fmul double %631, %672
  %674 = load ptr, ptr %643, align 8, !tbaa !136
  %675 = getelementptr inbounds double, ptr %674, i64 %644
  %676 = load double, ptr %675, align 8, !tbaa !133
  %677 = trunc i64 %653 to i32
  %678 = add i32 %648, %677
  %679 = zext i32 %678 to i64
  %680 = getelementptr inbounds double, ptr %645, i64 %679
  %681 = load double, ptr %680, align 8, !tbaa !133
  %682 = call double @llvm.fmuladd.f64(double %673, double %676, double %681)
  store double %682, ptr %680, align 8, !tbaa !133
  br label %683

683:                                              ; preds = %658, %652
  %684 = add nuw nsw i64 %653, 1
  %685 = icmp eq i64 %684, %88
  br i1 %685, label %649, label %652

686:                                              ; preds = %649
  %687 = add nuw nsw i64 %629, 1
  %688 = icmp eq i64 %687, %121
  br i1 %688, label %846, label %628

689:                                              ; preds = %216, %843
  %690 = phi i64 [ 0, %216 ], [ %844, %843 ]
  %691 = getelementptr inbounds double, ptr %218, i64 %690
  %692 = load double, ptr %691, align 8, !tbaa !133
  br i1 %219, label %843, label %693

693:                                              ; preds = %689
  %694 = load ptr, ptr %86, align 8, !tbaa !63
  %695 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %694, i64 0, i32 2
  %696 = load i8, ptr %695, align 4, !tbaa !148, !range !182, !noundef !183
  %697 = icmp eq i8 %696, 0
  %698 = load ptr, ptr %221, align 8, !tbaa !637
  br i1 %63, label %699, label %780

699:                                              ; preds = %693, %736
  %700 = phi i64 [ %737, %736 ], [ 0, %693 ]
  %701 = trunc i64 %700 to i32
  br i1 %697, label %739, label %702

702:                                              ; preds = %699
  %703 = and i64 %700, 4294967295
  %704 = getelementptr inbounds %"class.std::vector.241", ptr %698, i64 %703
  %705 = load ptr, ptr %704, align 8, !tbaa !630
  %706 = getelementptr inbounds %"class.dealii::Tensor", ptr %705, i64 %690
  %707 = getelementptr inbounds [3 x double], ptr %706, i64 0, i64 1
  %708 = getelementptr inbounds [3 x double], ptr %706, i64 0, i64 2
  %709 = load ptr, ptr %52, align 8
  %710 = load i32, ptr %50, align 8
  %711 = mul i32 %710, %701
  br label %712

712:                                              ; preds = %702, %712
  %713 = phi i64 [ 0, %702 ], [ %734, %712 ]
  %714 = getelementptr inbounds %"class.std::vector.241", ptr %698, i64 %713
  %715 = load ptr, ptr %714, align 8, !tbaa !630
  %716 = getelementptr inbounds %"class.dealii::Tensor", ptr %715, i64 %690
  %717 = load double, ptr %716, align 8, !tbaa !133
  %718 = load double, ptr %706, align 8, !tbaa !133
  %719 = getelementptr inbounds [3 x double], ptr %716, i64 0, i64 1
  %720 = load double, ptr %719, align 8, !tbaa !133
  %721 = load double, ptr %707, align 8, !tbaa !133
  %722 = fmul double %720, %721
  %723 = call double @llvm.fmuladd.f64(double %717, double %718, double %722)
  %724 = getelementptr inbounds [3 x double], ptr %716, i64 0, i64 2
  %725 = load double, ptr %724, align 8, !tbaa !133
  %726 = load double, ptr %708, align 8, !tbaa !133
  %727 = call double @llvm.fmuladd.f64(double %725, double %726, double %723)
  %728 = trunc i64 %713 to i32
  %729 = add i32 %711, %728
  %730 = zext i32 %729 to i64
  %731 = getelementptr inbounds double, ptr %709, i64 %730
  %732 = load double, ptr %731, align 8, !tbaa !133
  %733 = call double @llvm.fmuladd.f64(double %727, double %692, double %732)
  store double %733, ptr %731, align 8, !tbaa !133
  %734 = add nuw nsw i64 %713, 1
  %735 = icmp eq i64 %734, %88
  br i1 %735, label %736, label %712

736:                                              ; preds = %712, %753
  %737 = add nuw nsw i64 %700, 1
  %738 = icmp eq i64 %737, %88
  br i1 %738, label %843, label %699

739:                                              ; preds = %699
  %740 = load ptr, ptr %220, align 8, !tbaa !144
  %741 = getelementptr inbounds i32, ptr %740, i64 %700
  %742 = load i32, ptr %741, align 4, !tbaa !59
  %743 = zext i32 %742 to i64
  %744 = getelementptr inbounds %"class.std::vector.241", ptr %698, i64 %743
  %745 = load ptr, ptr %744, align 8, !tbaa !630
  %746 = getelementptr inbounds %"class.dealii::Tensor", ptr %745, i64 %690
  %747 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 1
  %748 = getelementptr inbounds [3 x double], ptr %746, i64 0, i64 2
  %749 = load ptr, ptr %52, align 8
  %750 = load i32, ptr %50, align 8
  %751 = mul i32 %750, %701
  %752 = load ptr, ptr %220, align 8, !tbaa !144
  br label %753

753:                                              ; preds = %753, %739
  %754 = phi i64 [ %778, %753 ], [ 0, %739 ]
  %755 = getelementptr inbounds i32, ptr %752, i64 %754
  %756 = load i32, ptr %755, align 4, !tbaa !59
  %757 = zext i32 %756 to i64
  %758 = getelementptr inbounds %"class.std::vector.241", ptr %698, i64 %757
  %759 = load ptr, ptr %758, align 8, !tbaa !630
  %760 = getelementptr inbounds %"class.dealii::Tensor", ptr %759, i64 %690
  %761 = load double, ptr %760, align 8, !tbaa !133
  %762 = load double, ptr %746, align 8, !tbaa !133
  %763 = getelementptr inbounds [3 x double], ptr %760, i64 0, i64 1
  %764 = load double, ptr %763, align 8, !tbaa !133
  %765 = load double, ptr %747, align 8, !tbaa !133
  %766 = fmul double %764, %765
  %767 = call double @llvm.fmuladd.f64(double %761, double %762, double %766)
  %768 = getelementptr inbounds [3 x double], ptr %760, i64 0, i64 2
  %769 = load double, ptr %768, align 8, !tbaa !133
  %770 = load double, ptr %748, align 8, !tbaa !133
  %771 = call double @llvm.fmuladd.f64(double %769, double %770, double %767)
  %772 = trunc i64 %754 to i32
  %773 = add i32 %751, %772
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds double, ptr %749, i64 %774
  %776 = load double, ptr %775, align 8, !tbaa !133
  %777 = call double @llvm.fmuladd.f64(double %771, double %692, double %776)
  store double %777, ptr %775, align 8, !tbaa !133
  %778 = add nuw nsw i64 %754, 1
  %779 = icmp eq i64 %778, %88
  br i1 %779, label %736, label %753

780:                                              ; preds = %693
  %781 = load ptr, ptr %222, align 8, !tbaa !184
  br label %782

782:                                              ; preds = %840, %780
  %783 = phi i64 [ %841, %840 ], [ 0, %780 ]
  %784 = trunc i64 %783 to i32
  br i1 %697, label %785, label %789

785:                                              ; preds = %782
  %786 = load ptr, ptr %220, align 8, !tbaa !144
  %787 = getelementptr inbounds i32, ptr %786, i64 %783
  %788 = load i32, ptr %787, align 4, !tbaa !59
  br label %789

789:                                              ; preds = %785, %782
  %790 = phi i32 [ %788, %785 ], [ %784, %782 ]
  %791 = zext i32 %790 to i64
  %792 = getelementptr inbounds %"class.std::vector.241", ptr %698, i64 %791
  %793 = load ptr, ptr %792, align 8, !tbaa !630
  %794 = getelementptr inbounds %"class.dealii::Tensor", ptr %793, i64 %690
  %795 = getelementptr inbounds [3 x double], ptr %794, i64 0, i64 1
  %796 = getelementptr inbounds [3 x double], ptr %794, i64 0, i64 2
  %797 = load ptr, ptr %52, align 8
  %798 = load i32, ptr %50, align 8
  %799 = mul i32 %798, %784
  %800 = getelementptr inbounds %"struct.std::pair.263", ptr %781, i64 %783
  br label %801

801:                                              ; preds = %789, %837
  %802 = phi i64 [ 0, %789 ], [ %838, %837 ]
  %803 = trunc i64 %802 to i32
  br i1 %697, label %804, label %808

804:                                              ; preds = %801
  %805 = load ptr, ptr %220, align 8, !tbaa !144
  %806 = getelementptr inbounds i32, ptr %805, i64 %802
  %807 = load i32, ptr %806, align 4, !tbaa !59
  br label %808

808:                                              ; preds = %804, %801
  %809 = phi i32 [ %807, %804 ], [ %803, %801 ]
  %810 = load i64, ptr %800, align 4
  %811 = getelementptr inbounds %"struct.std::pair.263", ptr %781, i64 %802
  %812 = load i64, ptr %811, align 4
  %813 = trunc i64 %810 to i32
  %814 = trunc i64 %812 to i32
  %815 = icmp eq i32 %813, %814
  br i1 %815, label %816, label %837

816:                                              ; preds = %808
  %817 = zext i32 %809 to i64
  %818 = getelementptr inbounds %"class.std::vector.241", ptr %698, i64 %817
  %819 = load ptr, ptr %818, align 8, !tbaa !630
  %820 = getelementptr inbounds %"class.dealii::Tensor", ptr %819, i64 %690
  %821 = load double, ptr %820, align 8, !tbaa !133
  %822 = load double, ptr %794, align 8, !tbaa !133
  %823 = getelementptr inbounds [3 x double], ptr %820, i64 0, i64 1
  %824 = load double, ptr %823, align 8, !tbaa !133
  %825 = load double, ptr %795, align 8, !tbaa !133
  %826 = fmul double %824, %825
  %827 = call double @llvm.fmuladd.f64(double %821, double %822, double %826)
  %828 = getelementptr inbounds [3 x double], ptr %820, i64 0, i64 2
  %829 = load double, ptr %828, align 8, !tbaa !133
  %830 = load double, ptr %796, align 8, !tbaa !133
  %831 = call double @llvm.fmuladd.f64(double %829, double %830, double %827)
  %832 = add i32 %799, %803
  %833 = zext i32 %832 to i64
  %834 = getelementptr inbounds double, ptr %797, i64 %833
  %835 = load double, ptr %834, align 8, !tbaa !133
  %836 = call double @llvm.fmuladd.f64(double %831, double %692, double %835)
  store double %836, ptr %834, align 8, !tbaa !133
  br label %837

837:                                              ; preds = %816, %808
  %838 = add nuw nsw i64 %802, 1
  %839 = icmp eq i64 %838, %88
  br i1 %839, label %840, label %801

840:                                              ; preds = %837
  %841 = add nuw nsw i64 %783, 1
  %842 = icmp eq i64 %841, %88
  br i1 %842, label %843, label %782

843:                                              ; preds = %840, %736, %689
  %844 = add nuw nsw i64 %690, 1
  %845 = icmp eq i64 %844, %121
  br i1 %845, label %846, label %689

846:                                              ; preds = %686, %625, %570, %503, %357, %843, %428, %231, %214
  %847 = icmp eq i32 %83, 0
  br i1 %847, label %935, label %848

848:                                              ; preds = %846
  %849 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %87, i64 0, i32 12
  br i1 %63, label %850, label %888

850:                                              ; preds = %848, %883
  %851 = phi i64 [ %884, %883 ], [ 0, %848 ]
  %852 = trunc i64 %851 to i32
  br label %853

853:                                              ; preds = %880, %850
  %854 = phi i64 [ %881, %880 ], [ 0, %850 ]
  %855 = load ptr, ptr %52, align 8, !tbaa !140
  %856 = load i32, ptr %50, align 8, !tbaa !59
  %857 = mul i32 %856, %852
  %858 = trunc i64 %854 to i32
  %859 = add i32 %857, %858
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds double, ptr %855, i64 %860
  %862 = load double, ptr %861, align 8, !tbaa !133
  %863 = fcmp oeq double %862, 0.000000e+00
  br i1 %863, label %880, label %864

864:                                              ; preds = %853
  %865 = load ptr, ptr %14, align 8, !tbaa !144
  %866 = getelementptr inbounds i32, ptr %865, i64 %854
  %867 = load i32, ptr %866, align 4, !tbaa !59
  %868 = getelementptr inbounds i32, ptr %865, i64 %851
  %869 = load i32, ptr %868, align 4, !tbaa !59
  %870 = load ptr, ptr %64, align 8, !tbaa !383
  %871 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %870, i32 noundef %869, i32 noundef %867)
          to label %872 unwind label %886

872:                                              ; preds = %864
  %873 = icmp eq i32 %871, -1
  br i1 %873, label %880, label %874

874:                                              ; preds = %872
  %875 = load ptr, ptr %65, align 8, !tbaa !385
  %876 = zext i32 %871 to i64
  %877 = getelementptr inbounds double, ptr %875, i64 %876
  %878 = load double, ptr %877, align 8, !tbaa !133
  %879 = fadd double %862, %878
  store double %879, ptr %877, align 8, !tbaa !133
  br label %880

880:                                              ; preds = %874, %872, %853
  %881 = add nuw nsw i64 %854, 1
  %882 = icmp eq i64 %881, %88
  br i1 %882, label %883, label %853

883:                                              ; preds = %880
  %884 = add nuw nsw i64 %851, 1
  %885 = icmp eq i64 %884, %88
  br i1 %885, label %935, label %850

886:                                              ; preds = %864
  %887 = landingpad { ptr, i32 }
          cleanup
  br label %1101

888:                                              ; preds = %848, %930
  %889 = phi i64 [ %931, %930 ], [ 0, %848 ]
  %890 = trunc i64 %889 to i32
  br label %891

891:                                              ; preds = %888, %927
  %892 = phi i64 [ 0, %888 ], [ %928, %927 ]
  %893 = load ptr, ptr %849, align 8, !tbaa !184
  %894 = getelementptr inbounds %"struct.std::pair.263", ptr %893, i64 %889
  %895 = load i64, ptr %894, align 4
  %896 = getelementptr inbounds %"struct.std::pair.263", ptr %893, i64 %892
  %897 = load i64, ptr %896, align 4
  %898 = trunc i64 %895 to i32
  %899 = trunc i64 %897 to i32
  %900 = icmp eq i32 %898, %899
  br i1 %900, label %901, label %927

901:                                              ; preds = %891
  %902 = load ptr, ptr %52, align 8, !tbaa !140
  %903 = load i32, ptr %50, align 8, !tbaa !59
  %904 = mul i32 %903, %890
  %905 = trunc i64 %892 to i32
  %906 = add i32 %904, %905
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds double, ptr %902, i64 %907
  %909 = load double, ptr %908, align 8, !tbaa !133
  %910 = fcmp oeq double %909, 0.000000e+00
  br i1 %910, label %927, label %911

911:                                              ; preds = %901
  %912 = load ptr, ptr %14, align 8, !tbaa !144
  %913 = getelementptr inbounds i32, ptr %912, i64 %892
  %914 = load i32, ptr %913, align 4, !tbaa !59
  %915 = getelementptr inbounds i32, ptr %912, i64 %889
  %916 = load i32, ptr %915, align 4, !tbaa !59
  %917 = load ptr, ptr %64, align 8, !tbaa !383
  %918 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %917, i32 noundef %916, i32 noundef %914)
          to label %919 unwind label %933

919:                                              ; preds = %911
  %920 = icmp eq i32 %918, -1
  br i1 %920, label %927, label %921

921:                                              ; preds = %919
  %922 = load ptr, ptr %65, align 8, !tbaa !385
  %923 = zext i32 %918 to i64
  %924 = getelementptr inbounds double, ptr %922, i64 %923
  %925 = load double, ptr %924, align 8, !tbaa !133
  %926 = fadd double %909, %925
  store double %926, ptr %924, align 8, !tbaa !133
  br label %927

927:                                              ; preds = %921, %919, %901, %891
  %928 = add nuw nsw i64 %892, 1
  %929 = icmp eq i64 %928, %88
  br i1 %929, label %930, label %891

930:                                              ; preds = %927
  %931 = add nuw nsw i64 %889, 1
  %932 = icmp eq i64 %931, %88
  br i1 %932, label %935, label %888

933:                                              ; preds = %911
  %934 = landingpad { ptr, i32 }
          cleanup
  br label %1101

935:                                              ; preds = %930, %883, %430, %846
  %936 = load ptr, ptr %66, align 8, !tbaa !62
  %937 = getelementptr inbounds %"class.dealii::Triangulation", ptr %936, i64 0, i32 1
  %938 = load ptr, ptr %937, align 8, !tbaa !46
  %939 = ptrtoint ptr %938 to i64
  %940 = getelementptr inbounds %"class.dealii::Triangulation", ptr %936, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %941 = load i32, ptr %15, align 8
  %942 = load i32, ptr %32, align 4
  br label %943

943:                                              ; preds = %1031, %935
  %944 = phi i32 [ %941, %935 ], [ %1010, %1031 ]
  %945 = phi i32 [ %941, %935 ], [ %1011, %1031 ]
  %946 = phi i32 [ %941, %935 ], [ %1032, %1031 ]
  %947 = phi i32 [ %942, %935 ], [ %1012, %1031 ]
  %948 = add nsw i32 %947, 1
  %949 = sext i32 %946 to i64
  %950 = getelementptr inbounds ptr, ptr %938, i64 %949
  %951 = load ptr, ptr %950, align 8, !tbaa !33
  %952 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %951, i64 0, i32 4
  %953 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %951, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %954 = load ptr, ptr %953, align 8, !tbaa !48
  %955 = load ptr, ptr %952, align 8, !tbaa !50
  %956 = ptrtoint ptr %954 to i64
  %957 = ptrtoint ptr %955 to i64
  %958 = sub i64 %956, %957
  %959 = sdiv exact i64 %958, 24
  %960 = trunc i64 %959 to i32
  %961 = icmp slt i32 %948, %960
  br i1 %961, label %1009, label %962

962:                                              ; preds = %943
  %963 = add nsw i64 %949, 1
  %964 = trunc i64 %963 to i32
  store i32 %964, ptr %15, align 8, !tbaa !60
  %965 = load ptr, ptr %940, align 8, !tbaa !51
  %966 = ptrtoint ptr %965 to i64
  %967 = sub i64 %966, %939
  %968 = shl i64 %967, 29
  %969 = ashr i64 %968, 32
  %970 = icmp slt i64 %963, %969
  br i1 %970, label %971, label %1003

971:                                              ; preds = %962
  %972 = getelementptr inbounds ptr, ptr %938, i64 %963
  %973 = load ptr, ptr %972, align 8, !tbaa !33
  %974 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %973, i64 0, i32 4
  %975 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %973, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %976 = load ptr, ptr %975, align 8, !tbaa !48
  %977 = load ptr, ptr %974, align 8, !tbaa !50
  %978 = ptrtoint ptr %976 to i64
  %979 = ptrtoint ptr %977 to i64
  %980 = sub i64 %978, %979
  %981 = sdiv exact i64 %980, 24
  %982 = trunc i64 %981 to i32
  %983 = icmp sgt i32 %982, 0
  br i1 %983, label %1005, label %997

984:                                              ; preds = %997
  %985 = getelementptr inbounds ptr, ptr %938, i64 %999
  %986 = load ptr, ptr %985, align 8, !tbaa !33
  %987 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %986, i64 0, i32 4
  %988 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %986, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %989 = load ptr, ptr %988, align 8, !tbaa !48
  %990 = load ptr, ptr %987, align 8, !tbaa !50
  %991 = ptrtoint ptr %989 to i64
  %992 = ptrtoint ptr %990 to i64
  %993 = sub i64 %991, %992
  %994 = sdiv exact i64 %993, 24
  %995 = trunc i64 %994 to i32
  %996 = icmp sgt i32 %995, 0
  br i1 %996, label %1004, label %997, !llvm.loop !52

997:                                              ; preds = %971, %984
  %998 = phi i64 [ %999, %984 ], [ %963, %971 ]
  %999 = add i64 %998, 1
  %1000 = trunc i64 %999 to i32
  %1001 = icmp eq i64 %999, %969
  br i1 %1001, label %1002, label %984, !llvm.loop !52

1002:                                             ; preds = %997
  store i32 %1000, ptr %15, align 8, !tbaa !60
  br label %1003

1003:                                             ; preds = %1002, %962
  store i32 -1, ptr %15, align 8, !tbaa !60
  br label %1009

1004:                                             ; preds = %984
  store i32 %1000, ptr %15, align 8, !tbaa !60
  br label %1005

1005:                                             ; preds = %1004, %971
  %1006 = phi i32 [ %964, %971 ], [ %1000, %1004 ]
  %1007 = phi i64 [ %963, %971 ], [ %999, %1004 ]
  %1008 = trunc i64 %1007 to i32
  br label %1009

1009:                                             ; preds = %1005, %1003, %943
  %1010 = phi i32 [ %944, %943 ], [ -1, %1003 ], [ %1006, %1005 ]
  %1011 = phi i32 [ %945, %943 ], [ -1, %1003 ], [ %1008, %1005 ]
  %1012 = phi i32 [ %948, %943 ], [ -1, %1003 ], [ 0, %1005 ]
  %1013 = phi i32 [ %946, %943 ], [ -1, %1003 ], [ %1008, %1005 ]
  %1014 = or i32 %1013, %1012
  %1015 = icmp sgt i32 %1014, -1
  br i1 %1015, label %1016, label %1033

1016:                                             ; preds = %1009
  %1017 = zext i32 %1013 to i64
  %1018 = getelementptr inbounds ptr, ptr %938, i64 %1017
  %1019 = load ptr, ptr %1018, align 8, !tbaa !33
  %1020 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1019, i64 0, i32 4, i32 0, i32 3
  %1021 = load ptr, ptr %1020, align 8, !tbaa !54
  %1022 = lshr i32 %1012, 6
  %1023 = zext i32 %1022 to i64
  %1024 = getelementptr inbounds i64, ptr %1021, i64 %1023
  %1025 = and i32 %1012, 63
  %1026 = zext i32 %1025 to i64
  %1027 = shl nuw i64 1, %1026
  %1028 = load i64, ptr %1024, align 8, !tbaa !56
  %1029 = and i64 %1028, %1027
  %1030 = icmp eq i64 %1029, 0
  br i1 %1030, label %1031, label %1033

1031:                                             ; preds = %1016, %1036
  %1032 = phi i32 [ %1013, %1016 ], [ %1011, %1036 ]
  br label %943

1033:                                             ; preds = %1016, %1009
  store i32 %1012, ptr %32, align 4, !tbaa !61
  %1034 = or i32 %1012, %1011
  %1035 = icmp sgt i32 %1034, -1
  br i1 %1035, label %1036, label %1047

1036:                                             ; preds = %1033
  %1037 = zext i32 %1011 to i64
  %1038 = getelementptr inbounds ptr, ptr %938, i64 %1037
  %1039 = load ptr, ptr %1038, align 8, !tbaa !33
  %1040 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1039, i64 0, i32 4, i32 0, i32 1
  %1041 = shl i32 %1012, 2
  %1042 = zext i32 %1041 to i64
  %1043 = load ptr, ptr %1040, align 8, !tbaa !57
  %1044 = getelementptr inbounds i32, ptr %1043, i64 %1042
  %1045 = load i32, ptr %1044, align 4, !tbaa !59
  %1046 = icmp eq i32 %1045, -1
  br i1 %1046, label %1047, label %1031

1047:                                             ; preds = %1033, %1036
  %1048 = load i32, ptr %33, align 4, !tbaa !61
  %1049 = icmp ne i32 %1012, %1048
  %1050 = load i32, ptr %31, align 8
  %1051 = icmp ne i32 %1010, %1050
  %1052 = select i1 %1049, i1 true, i1 %1051
  br i1 %1052, label %67, label %1053

1053:                                             ; preds = %1047
  %1054 = load ptr, ptr %14, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1055 = icmp eq ptr %1054, null
  br i1 %1055, label %1057, label %1056

1056:                                             ; preds = %1053
  call void @_ZdlPv(ptr noundef nonnull %1054) #21
  br label %1057

1057:                                             ; preds = %41, %1056, %1053
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1058 = load ptr, ptr %13, align 8, !tbaa !224
  %1059 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %13, i64 0, i32 1
  %1060 = load ptr, ptr %1059, align 8, !tbaa !226
  %1061 = icmp eq ptr %1058, %1060
  br i1 %1061, label %1071, label %1062

1062:                                             ; preds = %1057, %1066
  %1063 = phi ptr [ %1067, %1066 ], [ %1058, %1057 ]
  %1064 = load ptr, ptr %1063, align 8, !tbaa !41
  %1065 = load ptr, ptr %1064, align 8
  invoke void %1065(ptr noundef nonnull align 8 dereferenceable(88) %1063)
          to label %1066 unwind label %1075

1066:                                             ; preds = %1062
  %1067 = getelementptr inbounds %"class.dealii::Vector", ptr %1063, i64 1
  %1068 = icmp eq ptr %1067, %1060
  br i1 %1068, label %1069, label %1062

1069:                                             ; preds = %1066
  %1070 = load ptr, ptr %13, align 8, !tbaa !224
  br label %1071

1071:                                             ; preds = %1069, %1057
  %1072 = phi ptr [ %1070, %1069 ], [ %1058, %1057 ]
  %1073 = icmp eq ptr %1072, null
  br i1 %1073, label %1079, label %1074

1074:                                             ; preds = %1071
  call void @_ZdlPv(ptr noundef nonnull %1072) #21
  br label %1079

1075:                                             ; preds = %1062
  %1076 = landingpad { ptr, i32 }
          cleanup
  %1077 = load ptr, ptr %13, align 8, !tbaa !224
  %1078 = icmp eq ptr %1077, null
  br i1 %1078, label %1130, label %1127

1079:                                             ; preds = %1074, %1071
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  %1080 = load ptr, ptr %12, align 8, !tbaa !131
  %1081 = icmp eq ptr %1080, null
  br i1 %1081, label %1083, label %1082

1082:                                             ; preds = %1079
  call void @_ZdlPv(ptr noundef nonnull %1080) #21
  br label %1083

1083:                                             ; preds = %1082, %1079
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1084 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1085 = load ptr, ptr %1084, align 8, !tbaa !140
  %1086 = icmp eq ptr %1085, null
  br i1 %1086, label %1088, label %1087

1087:                                             ; preds = %1083
  call void @_ZdaPv(ptr noundef nonnull %1085) #21
  br label %1088

1088:                                             ; preds = %1087, %1083
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1089 unwind label %240

1089:                                             ; preds = %1088
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  %1090 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1090)
          to label %1099 unwind label %1091

1091:                                             ; preds = %1089
  %1092 = landingpad { ptr, i32 }
          cleanup
  %1093 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1093)
          to label %1094 unwind label %1096

1094:                                             ; preds = %1091, %1152
  %1095 = phi { ptr, i32 } [ %1142, %1152 ], [ %1092, %1091 ]
  resume { ptr, i32 } %1095

1096:                                             ; preds = %1091
  %1097 = landingpad { ptr, i32 }
          catch ptr null
  %1098 = extractvalue { ptr, i32 } %1097, 0
  call void @__clang_call_terminate(ptr %1098) #22
  unreachable

1099:                                             ; preds = %1089
  %1100 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  call void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1100)
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %10) #19
  ret void

1101:                                             ; preds = %933, %886, %244, %142, %250, %242
  %1102 = phi { ptr, i32 } [ %243, %242 ], [ %251, %250 ], [ %245, %244 ], [ %143, %142 ], [ %934, %933 ], [ %887, %886 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %15) #19
  %1103 = load ptr, ptr %14, align 8, !tbaa !144
  %1104 = icmp eq ptr %1103, null
  br i1 %1104, label %1106, label %1105

1105:                                             ; preds = %1101
  call void @_ZdlPv(ptr noundef nonnull %1103) #21
  br label %1106

1106:                                             ; preds = %1105, %1101
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %14) #19
  %1107 = load ptr, ptr %13, align 8, !tbaa !224
  %1108 = load ptr, ptr %60, align 8, !tbaa !226
  %1109 = icmp eq ptr %1107, %1108
  br i1 %1109, label %1119, label %1110

1110:                                             ; preds = %1106, %1114
  %1111 = phi ptr [ %1115, %1114 ], [ %1107, %1106 ]
  %1112 = load ptr, ptr %1111, align 8, !tbaa !41
  %1113 = load ptr, ptr %1112, align 8
  invoke void %1113(ptr noundef nonnull align 8 dereferenceable(88) %1111)
          to label %1114 unwind label %1122

1114:                                             ; preds = %1110
  %1115 = getelementptr inbounds %"class.dealii::Vector", ptr %1111, i64 1
  %1116 = icmp eq ptr %1115, %1108
  br i1 %1116, label %1117, label %1110

1117:                                             ; preds = %1114
  %1118 = load ptr, ptr %13, align 8, !tbaa !224
  br label %1119

1119:                                             ; preds = %1117, %1106
  %1120 = phi ptr [ %1118, %1117 ], [ %1107, %1106 ]
  %1121 = icmp eq ptr %1120, null
  br i1 %1121, label %1130, label %1127

1122:                                             ; preds = %1110
  %1123 = landingpad { ptr, i32 }
          catch ptr null
  %1124 = load ptr, ptr %13, align 8, !tbaa !224
  %1125 = icmp eq ptr %1124, null
  br i1 %1125, label %1155, label %1126

1126:                                             ; preds = %1122
  call void @_ZdlPv(ptr noundef nonnull %1124) #21
  br label %1155

1127:                                             ; preds = %1119, %1075
  %1128 = phi ptr [ %1077, %1075 ], [ %1120, %1119 ]
  %1129 = phi { ptr, i32 } [ %1076, %1075 ], [ %1102, %1119 ]
  call void @_ZdlPv(ptr noundef nonnull %1128) #21
  br label %1130

1130:                                             ; preds = %1127, %1119, %1075
  %1131 = phi { ptr, i32 } [ %1076, %1075 ], [ %1102, %1119 ], [ %1129, %1127 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %13) #19
  %1132 = load ptr, ptr %12, align 8, !tbaa !131
  %1133 = icmp eq ptr %1132, null
  br i1 %1133, label %1135, label %1134

1134:                                             ; preds = %1130
  call void @_ZdlPv(ptr noundef nonnull %1132) #21
  br label %1135

1135:                                             ; preds = %1134, %1130
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  %1136 = getelementptr inbounds %"class.dealii::TableBase", ptr %11, i64 0, i32 1
  %1137 = load ptr, ptr %1136, align 8, !tbaa !140
  %1138 = icmp eq ptr %1137, null
  br i1 %1138, label %1140, label %1139

1139:                                             ; preds = %1135
  call void @_ZdaPv(ptr noundef nonnull %1137) #21
  br label %1140

1140:                                             ; preds = %1139, %1135
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %11)
          to label %1141 unwind label %1153

1141:                                             ; preds = %1140, %240
  %1142 = phi { ptr, i32 } [ %241, %240 ], [ %1131, %1140 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11) #19
  %1143 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1143)
          to label %1144 unwind label %1146

1144:                                             ; preds = %1141
  %1145 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1145)
          to label %1152 unwind label %1153

1146:                                             ; preds = %1141
  %1147 = landingpad { ptr, i32 }
          catch ptr null
  %1148 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %10, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1148)
          to label %1155 unwind label %1149

1149:                                             ; preds = %1146
  %1150 = landingpad { ptr, i32 }
          catch ptr null
  %1151 = extractvalue { ptr, i32 } %1150, 0
  call void @__clang_call_terminate(ptr %1151) #22
  unreachable

1152:                                             ; preds = %1144
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %10) #19
  br label %1094

1153:                                             ; preds = %1144, %1140, %250
  %1154 = landingpad { ptr, i32 }
          catch ptr null
  br label %1155

1155:                                             ; preds = %1153, %1146, %1122, %1126
  %1156 = phi { ptr, i32 } [ %1123, %1126 ], [ %1123, %1122 ], [ %1154, %1153 ], [ %1147, %1146 ]
  %1157 = extractvalue { ptr, i32 } %1156, 0
  call void @__clang_call_terminate(ptr %1157) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSK_(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %8 = alloca %"class.dealii::Threads::ThreadGroup", align 8
  %9 = alloca %"class.std::vector.43", align 8
  %10 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %11 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %12 = alloca %"class.dealii::TriaRawIterator.50", align 8
  %13 = alloca %"class.dealii::Threads::DummyThreadMutex", align 1
  %14 = alloca %"class.dealii::Threads::Thread", align 16
  %15 = alloca %"class.dealii::Threads::internal::fun_encapsulator.76", align 8
  %16 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %17 = load i32, ptr getelementptr inbounds (%"class.dealii::MultithreadInfo", ptr @_ZN6dealii16multithread_infoE, i64 0, i32 1), align 4, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #19
  %18 = getelementptr inbounds %"struct.std::__detail::_List_node_base", ptr %8, i64 0, i32 1
  store ptr %8, ptr %18, align 8, !tbaa !10
  store ptr %8, ptr %8, align 8, !tbaa !13
  %19 = getelementptr inbounds %"struct.std::__detail::_List_node_header", ptr %8, i64 0, i32 1
  store i64 0, ptr %19, align 8, !tbaa !14
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE12begin_activeEj(ptr nonnull sret(%"class.dealii::TriaActiveIterator.48") align 8 %10, ptr noundef nonnull align 8 dereferenceable(224) %1, i32 noundef 0)
          to label %20 unwind label %43

20:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %12) #19
  invoke void @_ZNK6dealii2hp10DoFHandlerILi3ELi3EE3endEv(ptr nonnull sret(%"class.dealii::TriaRawIterator.50") align 8 %12, ptr noundef nonnull align 8 dereferenceable(224) %1)
          to label %21 unwind label %45

21:                                               ; preds = %20
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  %23 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %12, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !325
  store ptr %24, ptr %22, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads11split_rangeINS_18TriaActiveIteratorINS_15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEEEEEEESt6vectorISt4pairIT_SB_ESaISC_EERKSB_SG_j(ptr nonnull sret(%"class.std::vector.43") align 8 %9, ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %17)
          to label %25 unwind label %45

25:                                               ; preds = %21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #19
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.boost::function_base", ptr %15, i64 0, i32 1
  %29 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %16, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %16, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.boost::shared_ptr", ptr %14, i64 0, i32 1
  %33 = zext i32 %17 to i64
  br label %49

34:                                               ; preds = %103, %25
  %35 = load ptr, ptr %8, align 8, !tbaa !13
  %36 = icmp eq ptr %35, %8
  br i1 %36, label %122, label %37

37:                                               ; preds = %34, %40
  %38 = phi ptr [ %41, %40 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"struct.std::_List_node", ptr %38, i64 0, i32 1
  invoke void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %39)
          to label %40 unwind label %155

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !13
  %42 = icmp eq ptr %41, %8
  br i1 %42, label %122, label %37

43:                                               ; preds = %7
  %44 = landingpad { ptr, i32 }
          cleanup
  br label %47

45:                                               ; preds = %21, %20
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %12) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #19
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi { ptr, i32 } [ %46, %45 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #19
  br label %162

49:                                               ; preds = %27, %103
  %50 = phi i64 [ 0, %27 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.experimental.noalias.scope.decl(metadata !638)
  store ptr null, ptr %15, align 8, !tbaa !25, !alias.scope !638
  %51 = load ptr, ptr @_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable, align 8, !tbaa !393, !noalias !638
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  invoke void %51(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %54 unwind label %106

54:                                               ; preds = %53, %49
  store ptr @_ZN6dealii13MatrixCreator23create_laplace_matrix_2ILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE, ptr %28, align 8, !tbaa !30, !alias.scope !638
  store ptr @_ZZN5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEE9assign_toIPFvS6_SA_SE_SH_SL_SO_SP_SS_SV_EEEvT_E13stored_vtable, ptr %15, align 8, !tbaa !25, !alias.scope !638
  %55 = load ptr, ptr %9, align 8, !tbaa !332
  %56 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50
  %57 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  store ptr %58, ptr %29, align 8, !tbaa !325
  %59 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50, i32 1
  %60 = getelementptr inbounds %"struct.std::pair.69", ptr %55, i64 %50, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !325
  call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %30, ptr noundef nonnull align 8 dereferenceable(16) %59, i64 16, i1 false)
  store ptr %61, ptr %31, align 8, !tbaa !325
  invoke void @_ZN6dealii7Threads8internal16fun_encapsulatorIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSO_NS_13MatrixCreator13IteratorRangeISC_EERNS0_16DummyThreadMutexENS4_9null_typeEEELi9EEclESA_SE_SI_SL_SP_SS_ST_SW_SY_(ptr nonnull sret(%"class.dealii::Threads::Thread") align 8 %14, ptr noundef nonnull align 8 dereferenceable(32) %15, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef nonnull %16, ptr noundef nonnull align 1 dereferenceable(1) %13)
          to label %62 unwind label %108

62:                                               ; preds = %54
  %63 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %64 unwind label %110

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.std::_List_node", ptr %63, i64 0, i32 1
  %66 = load <2 x ptr>, ptr %14, align 16, !tbaa !33
  store <2 x ptr> %66, ptr %65, align 8, !tbaa !33
  %67 = extractelement <2 x ptr> %66, i64 1
  %68 = icmp eq ptr %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %67, i64 0, i32 1
  %71 = load i64, ptr %70, align 8, !tbaa !34
  %72 = add nsw i64 %71, 1
  store i64 %72, ptr %70, align 8, !tbaa !34
  br label %73

73:                                               ; preds = %69, %64
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16) %63, ptr noundef nonnull %8) #19
  %74 = load i64, ptr %19, align 8, !tbaa !36
  %75 = add i64 %74, 1
  store i64 %75, ptr %19, align 8, !tbaa !36
  %76 = load ptr, ptr %32, align 8, !tbaa !39
  %77 = icmp eq ptr %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 1
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = add nsw i64 %80, -1
  store i64 %81, ptr %79, align 8, !tbaa !34
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %78
  %84 = load ptr, ptr %76, align 8, !tbaa !41
  %85 = getelementptr inbounds ptr, ptr %84, i64 2
  %86 = load ptr, ptr %85, align 8
  invoke void %86(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %87 unwind label %108

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %76, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !43
  %90 = add nsw i64 %89, -1
  store i64 %90, ptr %88, align 8, !tbaa !43
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load ptr, ptr %76, align 8, !tbaa !41
  %94 = getelementptr inbounds ptr, ptr %93, i64 3
  %95 = load ptr, ptr %94, align 8
  invoke void %95(ptr noundef nonnull align 8 dereferenceable(24) %76)
          to label %96 unwind label %108

96:                                               ; preds = %87, %78, %73, %92
  %97 = load ptr, ptr %15, align 8, !tbaa !25
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load ptr, ptr %97, align 8, !tbaa !393
  %101 = icmp eq ptr %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  invoke void %100(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %103 unwind label %106

103:                                              ; preds = %99, %102, %96
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  %104 = add nuw nsw i64 %50, 1
  %105 = icmp eq i64 %104, %33
  br i1 %105, label %34, label %49

106:                                              ; preds = %102, %53
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %120

108:                                              ; preds = %92, %83, %54
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %112

110:                                              ; preds = %62
  %111 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii7Threads6ThreadIvED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14)
          to label %112 unwind label %165

112:                                              ; preds = %110, %108
  %113 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ]
  %114 = load ptr, ptr %15, align 8, !tbaa !25
  %115 = icmp eq ptr %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load ptr, ptr %114, align 8, !tbaa !393
  %118 = icmp eq ptr %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  invoke void %117(ptr noundef nonnull align 8 dereferenceable(24) %28, ptr noundef nonnull align 8 dereferenceable(24) %28, i32 noundef 2)
          to label %120 unwind label %165

120:                                              ; preds = %116, %119, %112, %106
  %121 = phi { ptr, i32 } [ %107, %106 ], [ %113, %112 ], [ %113, %119 ], [ %113, %116 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %15) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #19
  br label %157

122:                                              ; preds = %40, %34
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %123 = load ptr, ptr %9, align 8, !tbaa !332
  %124 = icmp eq ptr %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZdlPv(ptr noundef nonnull %123) #21
  br label %126

126:                                              ; preds = %125, %122
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  %127 = load ptr, ptr %8, align 8, !tbaa !13
  %128 = icmp eq ptr %127, %8
  br i1 %128, label %154, label %129

129:                                              ; preds = %126, %152
  %130 = phi ptr [ %131, %152 ], [ %127, %126 ]
  %131 = load ptr, ptr %130, align 8, !tbaa !13
  %132 = getelementptr inbounds %"struct.std::_List_node", ptr %130, i64 0, i32 1, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8, !tbaa !39
  %134 = icmp eq ptr %133, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 1
  %137 = load i64, ptr %136, align 8, !tbaa !34
  %138 = add nsw i64 %137, -1
  store i64 %138, ptr %136, align 8, !tbaa !34
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load ptr, ptr %133, align 8, !tbaa !41
  %142 = getelementptr inbounds ptr, ptr %141, i64 2
  %143 = load ptr, ptr %142, align 8
  call void %143(ptr noundef nonnull align 8 dereferenceable(24) %133)
  %144 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %133, i64 0, i32 2
  %145 = load i64, ptr %144, align 8, !tbaa !43
  %146 = add nsw i64 %145, -1
  store i64 %146, ptr %144, align 8, !tbaa !43
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load ptr, ptr %133, align 8, !tbaa !41
  %150 = getelementptr inbounds ptr, ptr %149, i64 3
  %151 = load ptr, ptr %150, align 8
  call void %151(ptr noundef nonnull align 8 dereferenceable(24) %133)
  br label %152

152:                                              ; preds = %148, %140, %135, %129
  call void @_ZdlPv(ptr noundef nonnull %130) #21
  %153 = icmp eq ptr %131, %8
  br i1 %153, label %154, label %129

154:                                              ; preds = %152, %126
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  ret void

155:                                              ; preds = %37
  %156 = landingpad { ptr, i32 }
          cleanup
  br label %157

157:                                              ; preds = %155, %120
  %158 = phi { ptr, i32 } [ %121, %120 ], [ %156, %155 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #19
  %159 = load ptr, ptr %9, align 8, !tbaa !332
  %160 = icmp eq ptr %159, null
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  call void @_ZdlPv(ptr noundef nonnull %159) #21
  br label %162

162:                                              ; preds = %161, %157, %47
  %163 = phi { ptr, i32 } [ %48, %47 ], [ %158, %157 ], [ %158, %161 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #19
  invoke void @_ZN6dealii7Threads11ThreadGroupIvED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %8)
          to label %164 unwind label %165

164:                                              ; preds = %162
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #19
  resume { ptr, i32 } %163

165:                                              ; preds = %119, %162, %110
  %166 = landingpad { ptr, i32 }
          catch ptr null
  %167 = extractvalue { ptr, i32 } %166, 0
  call void @__clang_call_terminate(ptr %167) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii13MatrixCreator23create_laplace_matrix_2ILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSK_NS0_13IteratorRangeIS8_EERNS_7Threads16DummyThreadMutexE(ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(224) %1, ptr noundef nonnull align 1 %2, ptr noundef nonnull align 8 dereferenceable(36) %3, ptr noundef nonnull align 1 %4, ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef %6, ptr noundef %7, ptr noundef nonnull align 1 dereferenceable(1) %8) #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca %"class.dealii::hp::FEValues", align 8
  %14 = alloca %"class.dealii::FullMatrix", align 8
  %15 = alloca %"class.dealii::Vector", align 8
  %16 = alloca %"class.std::vector.92", align 8
  %17 = alloca %"class.std::vector.92", align 8
  %18 = alloca %"class.std::vector.258", align 8
  %19 = alloca %"class.std::vector.28", align 8
  %20 = alloca %"class.dealii::TriaActiveIterator.48", align 8
  %21 = alloca %"class.dealii::Vector", align 8
  %22 = icmp eq ptr %6, null
  call void @llvm.lifetime.start.p0(i64 240, ptr nonnull %13) #19
  %23 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %1, i64 0, i32 3
  %24 = load ptr, ptr %23, align 8, !tbaa !336
  call void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240) %13, ptr noundef nonnull align 8 dereferenceable(96) %0, ptr noundef nonnull align 8 dereferenceable(96) %24, ptr noundef nonnull align 8 dereferenceable(96) %2, i32 noundef 51)
  %25 = load ptr, ptr %23, align 8, !tbaa !336
  %26 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !338
  %28 = load ptr, ptr %27, align 8, !tbaa !340
  %29 = getelementptr inbounds i8, ptr %28, i64 116
  %30 = load i32, ptr %29, align 4, !tbaa !128
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %14) #19
  invoke void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92) %14, i32 noundef 0)
          to label %31 unwind label %308

31:                                               ; preds = %9
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %15) #19
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %32 unwind label %310

32:                                               ; preds = %31
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %33 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %16) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %16, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %17) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %17, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %18) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %19) #19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %19, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %20) #19
  %34 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %20, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %36 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %20, i64 0, i32 1
  store ptr %35, ptr %36, align 8, !tbaa !325
  %37 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %38 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %20, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, ptr %38, align 4, !tbaa !61
  %41 = load i32, ptr %39, align 4, !tbaa !61
  %42 = icmp ne i32 %40, %41
  %43 = load i32, ptr %20, align 8
  %44 = load i32, ptr %37, align 8
  %45 = icmp ne i32 %43, %44
  %46 = select i1 %42, i1 true, i1 %45
  br i1 %46, label %48, label %47

47:                                               ; preds = %32
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  br label %1170

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4
  %50 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 1
  %51 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 1
  %52 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4, i32 0, i32 0, i64 1
  %53 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3, i32 0, i32 3, i32 0, i32 0, i64 2
  %54 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 4, i32 0, i32 0, i64 2
  %55 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 3
  %56 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 3, i32 0, i32 0, i64 1
  %57 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 2
  %58 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %59 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 2
  %60 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %61 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %16, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %17, i64 0, i32 1
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 1
  %64 = icmp eq i32 %30, 0
  %65 = zext i32 %30 to i64
  %66 = shl nuw nsw i64 %65, 3
  %67 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 3
  %68 = getelementptr inbounds %"class.dealii::Vector", ptr %21, i64 0, i32 2
  %69 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %19, i64 0, i32 1
  %71 = getelementptr inbounds %"class.dealii::Function", ptr %6, i64 0, i32 2
  %72 = icmp eq i32 %30, 1
  %73 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 1
  %74 = getelementptr inbounds %"class.dealii::SparseMatrix", ptr %3, i64 0, i32 2
  %75 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %76 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %20, i64 0, i32 2
  br label %77

77:                                               ; preds = %48, %1137
  invoke void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240) %13, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef -1, i32 noundef -1, i32 noundef -1)
          to label %78 unwind label %312

78:                                               ; preds = %77
  %79 = load ptr, ptr %50, align 8, !tbaa !342
  %80 = load i32, ptr %49, align 8, !tbaa !59
  %81 = load i32, ptr %51, align 8, !tbaa !59
  %82 = mul i32 %81, %80
  %83 = load i32, ptr %52, align 4, !tbaa !59
  %84 = add i32 %82, %83
  %85 = load i32, ptr %53, align 4, !tbaa !59
  %86 = mul i32 %84, %85
  %87 = load i32, ptr %54, align 8, !tbaa !59
  %88 = add i32 %86, %87
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %79, i64 %89
  %91 = load ptr, ptr %90, align 8, !tbaa !346
  %92 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 3
  %93 = load i32, ptr %92, align 8, !tbaa !65
  %94 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 2
  %95 = load i32, ptr %94, align 4, !tbaa !127
  %96 = getelementptr inbounds %"class.dealii::FEValuesBase", ptr %91, i64 0, i32 6
  %97 = load ptr, ptr %96, align 8, !tbaa !63
  %98 = zext i32 %93 to i64
  %99 = shl nuw i64 %98, 32
  %100 = or i64 %99, %98
  store i64 %100, ptr %55, align 4
  %101 = mul i32 %93, %93
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %78
  %104 = load ptr, ptr %58, align 8, !tbaa !140
  %105 = icmp eq ptr %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  call void @_ZdaPv(ptr noundef nonnull %104) #21
  br label %107

107:                                              ; preds = %106, %103
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %58, i8 0, i64 20, i1 false)
  br label %130

108:                                              ; preds = %78
  %109 = load i32, ptr %57, align 8, !tbaa !348
  %110 = icmp ult i32 %109, %101
  %111 = load ptr, ptr %58, align 8, !tbaa !140
  br i1 %110, label %112, label %125

112:                                              ; preds = %108
  %113 = icmp eq ptr %111, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  call void @_ZdaPv(ptr noundef nonnull %111) #21
  %115 = load i32, ptr %55, align 4, !tbaa !59
  %116 = load i32, ptr %56, align 8, !tbaa !59
  %117 = mul i32 %116, %115
  br label %118

118:                                              ; preds = %114, %112
  %119 = phi i32 [ %117, %114 ], [ %101, %112 ]
  store i32 %101, ptr %57, align 8, !tbaa !348
  %120 = zext i32 %101 to i64
  %121 = shl nuw nsw i64 %120, 3
  %122 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %121) #20
          to label %123 unwind label %314

123:                                              ; preds = %118
  store ptr %122, ptr %58, align 8, !tbaa !140
  %124 = icmp eq i32 %119, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %123, %108
  %126 = phi ptr [ %122, %123 ], [ %111, %108 ]
  %127 = phi i32 [ %119, %123 ], [ %101, %108 ]
  %128 = zext i32 %127 to i64
  %129 = shl nuw nsw i64 %128, 3
  call void @llvm.memset.p0.i64(ptr align 8 %126, i8 0, i64 %129, i1 false), !tbaa !133
  br label %130

130:                                              ; preds = %125, %123, %107
  %131 = icmp eq i32 %93, 0
  br i1 %131, label %132, label %137

132:                                              ; preds = %130
  %133 = load ptr, ptr %60, align 8, !tbaa !136
  %134 = icmp eq ptr %133, null
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_ZdaPv(ptr noundef nonnull %133) #21
  br label %136

136:                                              ; preds = %135, %132
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  br label %153

137:                                              ; preds = %130
  %138 = load i32, ptr %59, align 4, !tbaa !138
  %139 = icmp ult i32 %138, %93
  %140 = load ptr, ptr %60, align 8, !tbaa !136
  br i1 %139, label %143, label %141

141:                                              ; preds = %137
  %142 = shl nuw nsw i64 %98, 3
  br label %150

143:                                              ; preds = %137
  %144 = icmp eq ptr %140, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  call void @_ZdaPv(ptr noundef nonnull %140) #21
  br label %146

146:                                              ; preds = %145, %143
  %147 = shl nuw nsw i64 %98, 3
  %148 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %147) #20
          to label %149 unwind label %314

149:                                              ; preds = %146
  store ptr %148, ptr %60, align 8, !tbaa !136
  store i32 %93, ptr %59, align 4, !tbaa !138
  br label %150

150:                                              ; preds = %141, %149
  %151 = phi i64 [ %142, %141 ], [ %147, %149 ]
  %152 = phi ptr [ %140, %141 ], [ %148, %149 ]
  store i32 %93, ptr %33, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr align 8 %152, i8 0, i64 %151, i1 false), !tbaa !133
  br label %153

153:                                              ; preds = %150, %136
  %154 = load i32, ptr %94, align 4, !tbaa !127
  %155 = zext i32 %154 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12)
  store double 0.000000e+00, ptr %12, align 8, !tbaa !133
  %156 = load ptr, ptr %61, align 8, !tbaa !33
  %157 = load ptr, ptr %16, align 8, !tbaa !131
  %158 = ptrtoint ptr %156 to i64
  %159 = ptrtoint ptr %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 3
  %162 = icmp ult i64 %161, %155
  br i1 %162, label %163, label %165

163:                                              ; preds = %153
  %164 = sub nsw i64 %155, %161
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %16, ptr %156, i64 noundef %164, ptr noundef nonnull align 8 dereferenceable(8) %12)
          to label %171 unwind label %314

165:                                              ; preds = %153
  %166 = icmp ugt i64 %161, %155
  br i1 %166, label %167, label %171

167:                                              ; preds = %165
  %168 = getelementptr inbounds double, ptr %157, i64 %155
  %169 = icmp eq ptr %156, %168
  br i1 %169, label %171, label %170

170:                                              ; preds = %167
  store ptr %168, ptr %61, align 8, !tbaa !135
  br label %171

171:                                              ; preds = %170, %167, %165, %163
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12)
  %172 = zext i32 %95 to i64
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  store double 0.000000e+00, ptr %11, align 8, !tbaa !133
  %173 = load ptr, ptr %62, align 8, !tbaa !33
  %174 = load ptr, ptr %17, align 8, !tbaa !131
  %175 = ptrtoint ptr %173 to i64
  %176 = ptrtoint ptr %174 to i64
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %178, %172
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = sub nsw i64 %172, %178
  invoke void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr %173, i64 noundef %181, ptr noundef nonnull align 8 dereferenceable(8) %11)
          to label %188 unwind label %314

182:                                              ; preds = %171
  %183 = icmp ugt i64 %178, %172
  br i1 %183, label %184, label %188

184:                                              ; preds = %182
  %185 = getelementptr inbounds double, ptr %174, i64 %172
  %186 = icmp eq ptr %173, %185
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  store ptr %185, ptr %62, align 8, !tbaa !135
  br label %188

188:                                              ; preds = %187, %184, %182, %180
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  invoke void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %189 unwind label %314

189:                                              ; preds = %188
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %21, align 8, !tbaa !41
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %63, i8 0, i64 16, i1 false)
  br i1 %64, label %198, label %190

190:                                              ; preds = %189
  %191 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %66) #20
          to label %192 unwind label %193

192:                                              ; preds = %190
  store ptr %191, ptr %67, align 8, !tbaa !136
  store i32 %30, ptr %68, align 4, !tbaa !138
  store i32 %30, ptr %63, align 8, !tbaa !139
  call void @llvm.memset.p0.i64(ptr nonnull align 8 %191, i8 0, i64 %66, i1 false), !tbaa !133
  br label %198

193:                                              ; preds = %190
  %194 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %1224 unwind label %195

195:                                              ; preds = %193
  %196 = landingpad { ptr, i32 }
          catch ptr null
  %197 = extractvalue { ptr, i32 } %196, 0
  call void @__clang_call_terminate(ptr %197) #22
  unreachable

198:                                              ; preds = %192, %189
  %199 = load ptr, ptr %69, align 8, !tbaa !33
  %200 = load ptr, ptr %18, align 8, !tbaa !224
  %201 = ptrtoint ptr %199 to i64
  %202 = ptrtoint ptr %200 to i64
  %203 = sub i64 %201, %202
  %204 = sdiv exact i64 %203, 88
  %205 = icmp ult i64 %204, %172
  br i1 %205, label %206, label %208

206:                                              ; preds = %198
  %207 = sub nsw i64 %172, %204
  invoke void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %18, ptr %199, i64 noundef %207, ptr noundef nonnull align 8 dereferenceable(88) %21)
          to label %221 unwind label %318

208:                                              ; preds = %198
  %209 = icmp ugt i64 %204, %172
  br i1 %209, label %210, label %221

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.dealii::Vector", ptr %200, i64 %172
  %212 = icmp eq ptr %199, %211
  br i1 %212, label %221, label %213

213:                                              ; preds = %210, %217
  %214 = phi ptr [ %218, %217 ], [ %211, %210 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !41
  %216 = load ptr, ptr %215, align 8
  invoke void %216(ptr noundef nonnull align 8 dereferenceable(88) %214)
          to label %217 unwind label %316

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.dealii::Vector", ptr %214, i64 1
  %219 = icmp eq ptr %218, %199
  br i1 %219, label %220, label %213

220:                                              ; preds = %217
  store ptr %211, ptr %69, align 8, !tbaa !226
  br label %221

221:                                              ; preds = %220, %210, %208, %206
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %21, align 8, !tbaa !41
  %222 = load ptr, ptr %67, align 8, !tbaa !136
  %223 = icmp eq ptr %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %221
  call void @_ZdaPv(ptr noundef nonnull %222) #21
  store ptr null, ptr %67, align 8, !tbaa !136
  br label %225

225:                                              ; preds = %224, %221
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %21)
          to label %226 unwind label %314

226:                                              ; preds = %225
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4, !tbaa !59
  %227 = load ptr, ptr %70, align 8, !tbaa !33
  %228 = load ptr, ptr %19, align 8, !tbaa !144
  %229 = ptrtoint ptr %227 to i64
  %230 = ptrtoint ptr %228 to i64
  %231 = sub i64 %229, %230
  %232 = ashr exact i64 %231, 2
  %233 = icmp ult i64 %232, %98
  br i1 %233, label %234, label %236

234:                                              ; preds = %226
  %235 = sub nsw i64 %98, %232
  invoke void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr %227, i64 noundef %235, ptr noundef nonnull align 4 dereferenceable(4) %10)
          to label %242 unwind label %314

236:                                              ; preds = %226
  %237 = icmp ugt i64 %232, %98
  br i1 %237, label %238, label %242

238:                                              ; preds = %236
  %239 = getelementptr inbounds i32, ptr %228, i64 %98
  %240 = icmp eq ptr %227, %239
  br i1 %240, label %242, label %241

241:                                              ; preds = %238
  store ptr %239, ptr %70, align 8, !tbaa !349
  br label %242

242:                                              ; preds = %241, %238, %236, %234
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  %243 = load i32, ptr %55, align 4, !tbaa !59
  %244 = load i32, ptr %56, align 8, !tbaa !59
  %245 = mul i32 %244, %243
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %251, label %247

247:                                              ; preds = %242
  %248 = load ptr, ptr %58, align 8, !tbaa !140
  %249 = zext i32 %245 to i64
  %250 = shl nuw nsw i64 %249, 3
  call void @llvm.memset.p0.i64(ptr align 8 %248, i8 0, i64 %250, i1 false), !tbaa !133
  br label %251

251:                                              ; preds = %247, %242
  %252 = load i32, ptr %33, align 8, !tbaa !139
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %251
  %255 = load ptr, ptr %60, align 8, !tbaa !136
  %256 = zext i32 %252 to i64
  %257 = shl nuw nsw i64 %256, 3
  call void @llvm.memset.p0.i64(ptr align 8 %255, i8 0, i64 %257, i1 false), !tbaa !133
  br label %258

258:                                              ; preds = %254, %251
  %259 = load ptr, ptr %36, align 8, !tbaa !325
  %260 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %259, i64 0, i32 4
  %261 = load i32, ptr %20, align 8, !tbaa !60
  %262 = sext i32 %261 to i64
  %263 = load ptr, ptr %260, align 8, !tbaa !350
  %264 = getelementptr inbounds ptr, ptr %263, i64 %262
  %265 = load ptr, ptr %264, align 8, !tbaa !33
  %266 = load i32, ptr %38, align 4, !tbaa !61
  %267 = sext i32 %266 to i64
  %268 = load ptr, ptr %265, align 8, !tbaa !144
  %269 = getelementptr inbounds i32, ptr %268, i64 %267
  %270 = load i32, ptr %269, align 4, !tbaa !59
  invoke void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %20, ptr noundef nonnull align 8 dereferenceable(24) %19, i32 noundef %270)
          to label %271 unwind label %314

271:                                              ; preds = %258
  %272 = getelementptr inbounds i8, ptr %91, i64 312
  %273 = load ptr, ptr %4, align 8, !tbaa !41
  %274 = getelementptr inbounds ptr, ptr %273, i64 6
  %275 = load ptr, ptr %274, align 8
  invoke void %275(ptr noundef nonnull align 8 dereferenceable(92) %4, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %16, i32 noundef 0)
          to label %276 unwind label %314

276:                                              ; preds = %271
  br i1 %22, label %277, label %289

277:                                              ; preds = %276
  %278 = icmp eq i32 %95, 0
  br i1 %278, label %916, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds i8, ptr %91, i64 216
  %281 = load ptr, ptr %280, align 8, !tbaa !131
  %282 = getelementptr inbounds i8, ptr %91, i64 144
  %283 = getelementptr inbounds i8, ptr %91, i64 160
  %284 = getelementptr inbounds i8, ptr %91, i64 480
  %285 = getelementptr inbounds i8, ptr %91, i64 168
  %286 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %287 = load ptr, ptr %16, align 8
  %288 = load ptr, ptr %60, align 8
  br label %761

289:                                              ; preds = %276
  %290 = load i32, ptr %71, align 8, !tbaa !145
  %291 = icmp eq i32 %290, 1
  %292 = load ptr, ptr %6, align 8, !tbaa !41
  br i1 %291, label %293, label %460

293:                                              ; preds = %289
  %294 = getelementptr inbounds ptr, ptr %292, i64 6
  %295 = load ptr, ptr %294, align 8
  invoke void %295(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %17, i32 noundef 0)
          to label %296 unwind label %314

296:                                              ; preds = %293
  %297 = icmp eq i32 %95, 0
  br i1 %297, label %916, label %298

298:                                              ; preds = %296
  %299 = getelementptr inbounds i8, ptr %91, i64 216
  %300 = load ptr, ptr %299, align 8, !tbaa !131
  %301 = getelementptr inbounds i8, ptr %91, i64 144
  %302 = getelementptr inbounds i8, ptr %91, i64 160
  %303 = getelementptr inbounds i8, ptr %91, i64 480
  %304 = getelementptr inbounds i8, ptr %91, i64 168
  %305 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %306 = load ptr, ptr %16, align 8
  %307 = load ptr, ptr %60, align 8
  br label %322

308:                                              ; preds = %1211, %9
  %309 = landingpad { ptr, i32 }
          cleanup
  br label %1275

310:                                              ; preds = %1205, %31
  %311 = landingpad { ptr, i32 }
          cleanup
  br label %1268

312:                                              ; preds = %77
  %313 = landingpad { ptr, i32 }
          cleanup
  br label %1224

314:                                              ; preds = %258, %234, %225, %188, %180, %163, %146, %118, %460, %293, %271
  %315 = landingpad { ptr, i32 }
          cleanup
  br label %1224

316:                                              ; preds = %213
  %317 = landingpad { ptr, i32 }
          cleanup
  br label %320

318:                                              ; preds = %206
  %319 = landingpad { ptr, i32 }
          cleanup
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi { ptr, i32 } [ %317, %316 ], [ %319, %318 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %21)
          to label %1224 unwind label %1287

322:                                              ; preds = %298, %457
  %323 = phi i64 [ 0, %298 ], [ %458, %457 ]
  %324 = getelementptr inbounds double, ptr %300, i64 %323
  %325 = load double, ptr %324, align 8, !tbaa !133
  br i1 %131, label %457, label %326

326:                                              ; preds = %322
  %327 = load ptr, ptr %96, align 8, !tbaa !63
  %328 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %327, i64 0, i32 2
  %329 = load i8, ptr %328, align 4, !tbaa !148, !range !182, !noundef !183
  %330 = icmp eq i8 %329, 0
  %331 = load ptr, ptr %304, align 8, !tbaa !637
  %332 = getelementptr inbounds double, ptr %306, i64 %323
  %333 = trunc i64 %323 to i32
  %334 = trunc i64 %323 to i32
  br label %335

335:                                              ; preds = %416, %326
  %336 = phi i64 [ %422, %416 ], [ 0, %326 ]
  br i1 %330, label %345, label %337

337:                                              ; preds = %335
  %338 = load ptr, ptr %301, align 8, !tbaa !140
  %339 = load i32, ptr %302, align 8, !tbaa !59
  %340 = trunc i64 %336 to i32
  %341 = mul i32 %339, %340
  %342 = add i32 %341, %333
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds double, ptr %338, i64 %343
  br label %356

345:                                              ; preds = %335
  %346 = load ptr, ptr %303, align 8, !tbaa !144
  %347 = getelementptr inbounds i32, ptr %346, i64 %336
  %348 = load i32, ptr %347, align 4, !tbaa !59
  %349 = load ptr, ptr %301, align 8, !tbaa !140
  %350 = load i32, ptr %302, align 8, !tbaa !59
  %351 = mul i32 %350, %348
  %352 = add i32 %351, %334
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds double, ptr %349, i64 %353
  %355 = trunc i64 %336 to i32
  br label %356

356:                                              ; preds = %345, %337
  %357 = phi i32 [ %355, %345 ], [ %340, %337 ]
  %358 = phi ptr [ %354, %345 ], [ %344, %337 ]
  %359 = phi i32 [ %348, %345 ], [ %340, %337 ]
  %360 = load double, ptr %358, align 8, !tbaa !133
  %361 = zext i32 %359 to i64
  %362 = getelementptr inbounds %"class.std::vector.241", ptr %331, i64 %361
  %363 = load ptr, ptr %362, align 8, !tbaa !630
  %364 = getelementptr inbounds %"class.dealii::Tensor", ptr %363, i64 %323
  %365 = getelementptr inbounds [3 x double], ptr %364, i64 0, i64 1
  %366 = getelementptr inbounds [3 x double], ptr %364, i64 0, i64 2
  %367 = load ptr, ptr %17, align 8
  %368 = getelementptr inbounds double, ptr %367, i64 %323
  %369 = load ptr, ptr %58, align 8
  %370 = load i32, ptr %56, align 8
  %371 = mul i32 %370, %357
  br i1 %72, label %424, label %413

372:                                              ; preds = %413, %410
  %373 = phi i64 [ 0, %413 ], [ %411, %410 ]
  %374 = trunc i64 %373 to i32
  br i1 %330, label %375, label %379

375:                                              ; preds = %372
  %376 = load ptr, ptr %303, align 8, !tbaa !144
  %377 = getelementptr inbounds i32, ptr %376, i64 %373
  %378 = load i32, ptr %377, align 4, !tbaa !59
  br label %379

379:                                              ; preds = %375, %372
  %380 = phi i32 [ %378, %375 ], [ %374, %372 ]
  %381 = load i64, ptr %415, align 4
  %382 = getelementptr inbounds %"struct.std::pair.263", ptr %414, i64 %373
  %383 = load i64, ptr %382, align 4
  %384 = trunc i64 %381 to i32
  %385 = trunc i64 %383 to i32
  %386 = icmp eq i32 %384, %385
  br i1 %386, label %387, label %410

387:                                              ; preds = %379
  %388 = zext i32 %380 to i64
  %389 = getelementptr inbounds %"class.std::vector.241", ptr %331, i64 %388
  %390 = load ptr, ptr %389, align 8, !tbaa !630
  %391 = getelementptr inbounds %"class.dealii::Tensor", ptr %390, i64 %323
  %392 = load double, ptr %391, align 8, !tbaa !133
  %393 = load double, ptr %364, align 8, !tbaa !133
  %394 = getelementptr inbounds [3 x double], ptr %391, i64 0, i64 1
  %395 = load double, ptr %394, align 8, !tbaa !133
  %396 = load double, ptr %365, align 8, !tbaa !133
  %397 = fmul double %395, %396
  %398 = call double @llvm.fmuladd.f64(double %392, double %393, double %397)
  %399 = getelementptr inbounds [3 x double], ptr %391, i64 0, i64 2
  %400 = load double, ptr %399, align 8, !tbaa !133
  %401 = load double, ptr %366, align 8, !tbaa !133
  %402 = call double @llvm.fmuladd.f64(double %400, double %401, double %398)
  %403 = fmul double %325, %402
  %404 = load double, ptr %368, align 8, !tbaa !133
  %405 = add i32 %371, %374
  %406 = zext i32 %405 to i64
  %407 = getelementptr inbounds double, ptr %369, i64 %406
  %408 = load double, ptr %407, align 8, !tbaa !133
  %409 = call double @llvm.fmuladd.f64(double %403, double %404, double %408)
  store double %409, ptr %407, align 8, !tbaa !133
  br label %410

410:                                              ; preds = %387, %379
  %411 = add nuw nsw i64 %373, 1
  %412 = icmp eq i64 %411, %98
  br i1 %412, label %416, label %372

413:                                              ; preds = %356
  %414 = load ptr, ptr %305, align 8, !tbaa !184
  %415 = getelementptr inbounds %"struct.std::pair.263", ptr %414, i64 %336
  br label %372

416:                                              ; preds = %410, %431
  %417 = load double, ptr %332, align 8, !tbaa !133
  %418 = fmul double %360, %417
  %419 = getelementptr inbounds double, ptr %307, i64 %336
  %420 = load double, ptr %419, align 8, !tbaa !133
  %421 = call double @llvm.fmuladd.f64(double %418, double %325, double %420)
  store double %421, ptr %419, align 8, !tbaa !133
  %422 = add nuw nsw i64 %336, 1
  %423 = icmp eq i64 %422, %98
  br i1 %423, label %457, label %335

424:                                              ; preds = %356, %431
  %425 = phi i64 [ %455, %431 ], [ 0, %356 ]
  %426 = trunc i64 %425 to i32
  br i1 %330, label %427, label %431

427:                                              ; preds = %424
  %428 = load ptr, ptr %303, align 8, !tbaa !144
  %429 = getelementptr inbounds i32, ptr %428, i64 %425
  %430 = load i32, ptr %429, align 4, !tbaa !59
  br label %431

431:                                              ; preds = %427, %424
  %432 = phi i32 [ %430, %427 ], [ %426, %424 ]
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds %"class.std::vector.241", ptr %331, i64 %433
  %435 = load ptr, ptr %434, align 8, !tbaa !630
  %436 = getelementptr inbounds %"class.dealii::Tensor", ptr %435, i64 %323
  %437 = load double, ptr %436, align 8, !tbaa !133
  %438 = load double, ptr %364, align 8, !tbaa !133
  %439 = getelementptr inbounds [3 x double], ptr %436, i64 0, i64 1
  %440 = load double, ptr %439, align 8, !tbaa !133
  %441 = load double, ptr %365, align 8, !tbaa !133
  %442 = fmul double %440, %441
  %443 = call double @llvm.fmuladd.f64(double %437, double %438, double %442)
  %444 = getelementptr inbounds [3 x double], ptr %436, i64 0, i64 2
  %445 = load double, ptr %444, align 8, !tbaa !133
  %446 = load double, ptr %366, align 8, !tbaa !133
  %447 = call double @llvm.fmuladd.f64(double %445, double %446, double %443)
  %448 = fmul double %325, %447
  %449 = load double, ptr %368, align 8, !tbaa !133
  %450 = add i32 %371, %426
  %451 = zext i32 %450 to i64
  %452 = getelementptr inbounds double, ptr %369, i64 %451
  %453 = load double, ptr %452, align 8, !tbaa !133
  %454 = call double @llvm.fmuladd.f64(double %448, double %449, double %453)
  store double %454, ptr %452, align 8, !tbaa !133
  %455 = add nuw nsw i64 %425, 1
  %456 = icmp eq i64 %455, %98
  br i1 %456, label %416, label %424

457:                                              ; preds = %416, %322
  %458 = add nuw nsw i64 %323, 1
  %459 = icmp eq i64 %458, %172
  br i1 %459, label %916, label %322

460:                                              ; preds = %289
  %461 = getelementptr inbounds ptr, ptr %292, i64 7
  %462 = load ptr, ptr %461, align 8
  invoke void %462(ptr noundef nonnull align 8 dereferenceable(92) %6, ptr noundef nonnull align 8 dereferenceable(24) %272, ptr noundef nonnull align 8 dereferenceable(24) %18)
          to label %463 unwind label %314

463:                                              ; preds = %460
  %464 = icmp eq i32 %95, 0
  br i1 %464, label %916, label %465

465:                                              ; preds = %463
  %466 = getelementptr inbounds i8, ptr %91, i64 216
  %467 = load ptr, ptr %466, align 8, !tbaa !131
  %468 = getelementptr inbounds i8, ptr %91, i64 144
  %469 = getelementptr inbounds i8, ptr %91, i64 160
  %470 = getelementptr inbounds i8, ptr %91, i64 480
  %471 = load ptr, ptr %16, align 8
  %472 = load ptr, ptr %60, align 8
  br i1 %131, label %1025, label %473

473:                                              ; preds = %465
  %474 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  %475 = getelementptr inbounds i8, ptr %91, i64 168
  %476 = load ptr, ptr %96, align 8, !tbaa !63
  %477 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %476, i64 0, i32 2
  %478 = load i8, ptr %477, align 4, !tbaa !148, !range !182, !noundef !183
  %479 = icmp eq i8 %478, 0
  %480 = load ptr, ptr %475, align 8, !tbaa !637
  %481 = load ptr, ptr %474, align 8, !tbaa !184
  br i1 %479, label %482, label %628

482:                                              ; preds = %473
  %483 = load ptr, ptr %470, align 8, !tbaa !144
  %484 = load ptr, ptr %468, align 8, !tbaa !140
  %485 = load i32, ptr %469, align 8, !tbaa !59
  br label %486

486:                                              ; preds = %625, %482
  %487 = phi i64 [ %626, %625 ], [ 0, %482 ]
  %488 = getelementptr inbounds double, ptr %467, i64 %487
  %489 = load double, ptr %488, align 8, !tbaa !133
  %490 = getelementptr inbounds double, ptr %471, i64 %487
  %491 = trunc i64 %487 to i32
  br i1 %72, label %492, label %555

492:                                              ; preds = %486, %547
  %493 = phi i64 [ %553, %547 ], [ 0, %486 ]
  %494 = getelementptr inbounds i32, ptr %483, i64 %493
  %495 = load i32, ptr %494, align 4, !tbaa !59
  %496 = mul i32 %485, %495
  %497 = add i32 %496, %491
  %498 = zext i32 %497 to i64
  %499 = getelementptr inbounds double, ptr %484, i64 %498
  %500 = load double, ptr %499, align 8, !tbaa !133
  %501 = zext i32 %495 to i64
  %502 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %501
  %503 = load ptr, ptr %502, align 8, !tbaa !630
  %504 = getelementptr inbounds %"class.dealii::Tensor", ptr %503, i64 %487
  %505 = getelementptr inbounds %"struct.std::pair.263", ptr %481, i64 %493
  %506 = load i64, ptr %505, align 4
  %507 = getelementptr inbounds [3 x double], ptr %504, i64 0, i64 1
  %508 = getelementptr inbounds [3 x double], ptr %504, i64 0, i64 2
  %509 = load ptr, ptr %18, align 8
  %510 = getelementptr inbounds %"class.dealii::Vector", ptr %509, i64 %487, i32 3
  %511 = and i64 %506, 4294967295
  %512 = load ptr, ptr %58, align 8
  %513 = load i32, ptr %56, align 8
  %514 = trunc i64 %493 to i32
  %515 = mul i32 %513, %514
  %516 = load ptr, ptr %510, align 8, !tbaa !136
  %517 = getelementptr inbounds double, ptr %516, i64 %511
  br label %518

518:                                              ; preds = %518, %492
  %519 = phi i64 [ %545, %518 ], [ 0, %492 ]
  %520 = getelementptr inbounds i32, ptr %483, i64 %519
  %521 = load i32, ptr %520, align 4, !tbaa !59
  %522 = zext i32 %521 to i64
  %523 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %522
  %524 = load ptr, ptr %523, align 8, !tbaa !630
  %525 = getelementptr inbounds %"class.dealii::Tensor", ptr %524, i64 %487
  %526 = load double, ptr %525, align 8, !tbaa !133
  %527 = load double, ptr %504, align 8, !tbaa !133
  %528 = getelementptr inbounds [3 x double], ptr %525, i64 0, i64 1
  %529 = load double, ptr %528, align 8, !tbaa !133
  %530 = load double, ptr %507, align 8, !tbaa !133
  %531 = fmul double %529, %530
  %532 = call double @llvm.fmuladd.f64(double %526, double %527, double %531)
  %533 = getelementptr inbounds [3 x double], ptr %525, i64 0, i64 2
  %534 = load double, ptr %533, align 8, !tbaa !133
  %535 = load double, ptr %508, align 8, !tbaa !133
  %536 = call double @llvm.fmuladd.f64(double %534, double %535, double %532)
  %537 = fmul double %489, %536
  %538 = load double, ptr %517, align 8, !tbaa !133
  %539 = trunc i64 %519 to i32
  %540 = add i32 %515, %539
  %541 = zext i32 %540 to i64
  %542 = getelementptr inbounds double, ptr %512, i64 %541
  %543 = load double, ptr %542, align 8, !tbaa !133
  %544 = call double @llvm.fmuladd.f64(double %537, double %538, double %543)
  store double %544, ptr %542, align 8, !tbaa !133
  %545 = add nuw nsw i64 %519, 1
  %546 = icmp eq i64 %545, %98
  br i1 %546, label %547, label %518

547:                                              ; preds = %518
  %548 = load double, ptr %490, align 8, !tbaa !133
  %549 = fmul double %500, %548
  %550 = getelementptr inbounds double, ptr %472, i64 %493
  %551 = load double, ptr %550, align 8, !tbaa !133
  %552 = call double @llvm.fmuladd.f64(double %549, double %489, double %551)
  store double %552, ptr %550, align 8, !tbaa !133
  %553 = add nuw nsw i64 %493, 1
  %554 = icmp eq i64 %553, %98
  br i1 %554, label %625, label %492

555:                                              ; preds = %486, %617
  %556 = phi i64 [ %623, %617 ], [ 0, %486 ]
  %557 = getelementptr inbounds i32, ptr %483, i64 %556
  %558 = load i32, ptr %557, align 4, !tbaa !59
  %559 = mul i32 %485, %558
  %560 = add i32 %559, %491
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds double, ptr %484, i64 %561
  %563 = load double, ptr %562, align 8, !tbaa !133
  %564 = zext i32 %558 to i64
  %565 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %564
  %566 = load ptr, ptr %565, align 8, !tbaa !630
  %567 = getelementptr inbounds %"class.dealii::Tensor", ptr %566, i64 %487
  %568 = getelementptr inbounds %"struct.std::pair.263", ptr %481, i64 %556
  %569 = load i64, ptr %568, align 4
  %570 = trunc i64 %569 to i32
  %571 = getelementptr inbounds [3 x double], ptr %567, i64 0, i64 1
  %572 = getelementptr inbounds [3 x double], ptr %567, i64 0, i64 2
  %573 = load ptr, ptr %18, align 8
  %574 = getelementptr inbounds %"class.dealii::Vector", ptr %573, i64 %487, i32 3
  %575 = and i64 %569, 4294967295
  %576 = load ptr, ptr %58, align 8
  %577 = load i32, ptr %56, align 8
  %578 = trunc i64 %556 to i32
  %579 = mul i32 %577, %578
  br label %580

580:                                              ; preds = %555, %614
  %581 = phi i64 [ 0, %555 ], [ %615, %614 ]
  %582 = getelementptr inbounds %"struct.std::pair.263", ptr %481, i64 %581
  %583 = load i64, ptr %582, align 4
  %584 = trunc i64 %583 to i32
  %585 = icmp eq i32 %584, %570
  br i1 %585, label %586, label %614

586:                                              ; preds = %580
  %587 = getelementptr inbounds i32, ptr %483, i64 %581
  %588 = load i32, ptr %587, align 4, !tbaa !59
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %589
  %591 = load ptr, ptr %590, align 8, !tbaa !630
  %592 = getelementptr inbounds %"class.dealii::Tensor", ptr %591, i64 %487
  %593 = load double, ptr %592, align 8, !tbaa !133
  %594 = load double, ptr %567, align 8, !tbaa !133
  %595 = getelementptr inbounds [3 x double], ptr %592, i64 0, i64 1
  %596 = load double, ptr %595, align 8, !tbaa !133
  %597 = load double, ptr %571, align 8, !tbaa !133
  %598 = fmul double %596, %597
  %599 = call double @llvm.fmuladd.f64(double %593, double %594, double %598)
  %600 = getelementptr inbounds [3 x double], ptr %592, i64 0, i64 2
  %601 = load double, ptr %600, align 8, !tbaa !133
  %602 = load double, ptr %572, align 8, !tbaa !133
  %603 = call double @llvm.fmuladd.f64(double %601, double %602, double %599)
  %604 = fmul double %489, %603
  %605 = load ptr, ptr %574, align 8, !tbaa !136
  %606 = getelementptr inbounds double, ptr %605, i64 %575
  %607 = load double, ptr %606, align 8, !tbaa !133
  %608 = trunc i64 %581 to i32
  %609 = add i32 %579, %608
  %610 = zext i32 %609 to i64
  %611 = getelementptr inbounds double, ptr %576, i64 %610
  %612 = load double, ptr %611, align 8, !tbaa !133
  %613 = call double @llvm.fmuladd.f64(double %604, double %607, double %612)
  store double %613, ptr %611, align 8, !tbaa !133
  br label %614

614:                                              ; preds = %586, %580
  %615 = add nuw nsw i64 %581, 1
  %616 = icmp eq i64 %615, %98
  br i1 %616, label %617, label %580

617:                                              ; preds = %614
  %618 = load double, ptr %490, align 8, !tbaa !133
  %619 = fmul double %563, %618
  %620 = getelementptr inbounds double, ptr %472, i64 %556
  %621 = load double, ptr %620, align 8, !tbaa !133
  %622 = call double @llvm.fmuladd.f64(double %619, double %489, double %621)
  store double %622, ptr %620, align 8, !tbaa !133
  %623 = add nuw nsw i64 %556, 1
  %624 = icmp eq i64 %623, %98
  br i1 %624, label %625, label %555

625:                                              ; preds = %617, %547
  %626 = add nuw nsw i64 %487, 1
  %627 = icmp eq i64 %626, %172
  br i1 %627, label %916, label %486

628:                                              ; preds = %473
  %629 = load ptr, ptr %468, align 8, !tbaa !140
  %630 = load i32, ptr %469, align 8, !tbaa !59
  br label %631

631:                                              ; preds = %701, %628
  %632 = phi i64 [ %702, %701 ], [ 0, %628 ]
  %633 = getelementptr inbounds double, ptr %467, i64 %632
  %634 = load double, ptr %633, align 8, !tbaa !133
  %635 = getelementptr inbounds double, ptr %471, i64 %632
  %636 = trunc i64 %632 to i32
  br i1 %72, label %704, label %637

637:                                              ; preds = %631, %659
  %638 = phi i64 [ %665, %659 ], [ 0, %631 ]
  %639 = trunc i64 %638 to i32
  %640 = mul i32 %630, %639
  %641 = add i32 %640, %636
  %642 = zext i32 %641 to i64
  %643 = getelementptr inbounds double, ptr %629, i64 %642
  %644 = load double, ptr %643, align 8, !tbaa !133
  %645 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %638
  %646 = load ptr, ptr %645, align 8, !tbaa !630
  %647 = getelementptr inbounds %"class.dealii::Tensor", ptr %646, i64 %632
  %648 = getelementptr inbounds %"struct.std::pair.263", ptr %481, i64 %638
  %649 = load i64, ptr %648, align 4
  %650 = trunc i64 %649 to i32
  %651 = getelementptr inbounds [3 x double], ptr %647, i64 0, i64 1
  %652 = getelementptr inbounds [3 x double], ptr %647, i64 0, i64 2
  %653 = load ptr, ptr %18, align 8
  %654 = getelementptr inbounds %"class.dealii::Vector", ptr %653, i64 %632, i32 3
  %655 = and i64 %649, 4294967295
  %656 = load ptr, ptr %58, align 8
  %657 = load i32, ptr %56, align 8
  %658 = mul i32 %657, %639
  br label %667

659:                                              ; preds = %698
  %660 = load double, ptr %635, align 8, !tbaa !133
  %661 = fmul double %644, %660
  %662 = getelementptr inbounds double, ptr %472, i64 %638
  %663 = load double, ptr %662, align 8, !tbaa !133
  %664 = call double @llvm.fmuladd.f64(double %661, double %634, double %663)
  store double %664, ptr %662, align 8, !tbaa !133
  %665 = add nuw nsw i64 %638, 1
  %666 = icmp eq i64 %665, %98
  br i1 %666, label %701, label %637

667:                                              ; preds = %698, %637
  %668 = phi i64 [ %699, %698 ], [ 0, %637 ]
  %669 = getelementptr inbounds %"struct.std::pair.263", ptr %481, i64 %668
  %670 = load i64, ptr %669, align 4
  %671 = trunc i64 %670 to i32
  %672 = icmp eq i32 %671, %650
  br i1 %672, label %673, label %698

673:                                              ; preds = %667
  %674 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %668
  %675 = load ptr, ptr %674, align 8, !tbaa !630
  %676 = getelementptr inbounds %"class.dealii::Tensor", ptr %675, i64 %632
  %677 = load double, ptr %676, align 8, !tbaa !133
  %678 = load double, ptr %647, align 8, !tbaa !133
  %679 = getelementptr inbounds [3 x double], ptr %676, i64 0, i64 1
  %680 = load double, ptr %679, align 8, !tbaa !133
  %681 = load double, ptr %651, align 8, !tbaa !133
  %682 = fmul double %680, %681
  %683 = call double @llvm.fmuladd.f64(double %677, double %678, double %682)
  %684 = getelementptr inbounds [3 x double], ptr %676, i64 0, i64 2
  %685 = load double, ptr %684, align 8, !tbaa !133
  %686 = load double, ptr %652, align 8, !tbaa !133
  %687 = call double @llvm.fmuladd.f64(double %685, double %686, double %683)
  %688 = fmul double %634, %687
  %689 = load ptr, ptr %654, align 8, !tbaa !136
  %690 = getelementptr inbounds double, ptr %689, i64 %655
  %691 = load double, ptr %690, align 8, !tbaa !133
  %692 = trunc i64 %668 to i32
  %693 = add i32 %658, %692
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds double, ptr %656, i64 %694
  %696 = load double, ptr %695, align 8, !tbaa !133
  %697 = call double @llvm.fmuladd.f64(double %688, double %691, double %696)
  store double %697, ptr %695, align 8, !tbaa !133
  br label %698

698:                                              ; preds = %673, %667
  %699 = add nuw nsw i64 %668, 1
  %700 = icmp eq i64 %699, %98
  br i1 %700, label %659, label %667

701:                                              ; preds = %659, %753
  %702 = add nuw nsw i64 %632, 1
  %703 = icmp eq i64 %702, %172
  br i1 %703, label %916, label %631

704:                                              ; preds = %631, %753
  %705 = phi i64 [ %759, %753 ], [ 0, %631 ]
  %706 = trunc i64 %705 to i32
  %707 = mul i32 %630, %706
  %708 = add i32 %707, %636
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds double, ptr %629, i64 %709
  %711 = load double, ptr %710, align 8, !tbaa !133
  %712 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %705
  %713 = load ptr, ptr %712, align 8, !tbaa !630
  %714 = getelementptr inbounds %"class.dealii::Tensor", ptr %713, i64 %632
  %715 = getelementptr inbounds %"struct.std::pair.263", ptr %481, i64 %705
  %716 = load i64, ptr %715, align 4
  %717 = getelementptr inbounds [3 x double], ptr %714, i64 0, i64 1
  %718 = getelementptr inbounds [3 x double], ptr %714, i64 0, i64 2
  %719 = load ptr, ptr %18, align 8
  %720 = getelementptr inbounds %"class.dealii::Vector", ptr %719, i64 %632, i32 3
  %721 = and i64 %716, 4294967295
  %722 = load ptr, ptr %58, align 8
  %723 = load i32, ptr %56, align 8
  %724 = mul i32 %723, %706
  %725 = load ptr, ptr %720, align 8, !tbaa !136
  %726 = getelementptr inbounds double, ptr %725, i64 %721
  br label %727

727:                                              ; preds = %727, %704
  %728 = phi i64 [ %751, %727 ], [ 0, %704 ]
  %729 = getelementptr inbounds %"class.std::vector.241", ptr %480, i64 %728
  %730 = load ptr, ptr %729, align 8, !tbaa !630
  %731 = getelementptr inbounds %"class.dealii::Tensor", ptr %730, i64 %632
  %732 = load double, ptr %731, align 8, !tbaa !133
  %733 = load double, ptr %714, align 8, !tbaa !133
  %734 = getelementptr inbounds [3 x double], ptr %731, i64 0, i64 1
  %735 = load double, ptr %734, align 8, !tbaa !133
  %736 = load double, ptr %717, align 8, !tbaa !133
  %737 = fmul double %735, %736
  %738 = call double @llvm.fmuladd.f64(double %732, double %733, double %737)
  %739 = getelementptr inbounds [3 x double], ptr %731, i64 0, i64 2
  %740 = load double, ptr %739, align 8, !tbaa !133
  %741 = load double, ptr %718, align 8, !tbaa !133
  %742 = call double @llvm.fmuladd.f64(double %740, double %741, double %738)
  %743 = fmul double %634, %742
  %744 = load double, ptr %726, align 8, !tbaa !133
  %745 = trunc i64 %728 to i32
  %746 = add i32 %724, %745
  %747 = zext i32 %746 to i64
  %748 = getelementptr inbounds double, ptr %722, i64 %747
  %749 = load double, ptr %748, align 8, !tbaa !133
  %750 = call double @llvm.fmuladd.f64(double %743, double %744, double %749)
  store double %750, ptr %748, align 8, !tbaa !133
  %751 = add nuw nsw i64 %728, 1
  %752 = icmp eq i64 %751, %98
  br i1 %752, label %753, label %727

753:                                              ; preds = %727
  %754 = load double, ptr %635, align 8, !tbaa !133
  %755 = fmul double %711, %754
  %756 = getelementptr inbounds double, ptr %472, i64 %705
  %757 = load double, ptr %756, align 8, !tbaa !133
  %758 = call double @llvm.fmuladd.f64(double %755, double %634, double %757)
  store double %758, ptr %756, align 8, !tbaa !133
  %759 = add nuw nsw i64 %705, 1
  %760 = icmp eq i64 %759, %98
  br i1 %760, label %701, label %704

761:                                              ; preds = %279, %913
  %762 = phi i64 [ 0, %279 ], [ %914, %913 ]
  %763 = getelementptr inbounds double, ptr %281, i64 %762
  %764 = load double, ptr %763, align 8, !tbaa !133
  br i1 %131, label %913, label %765

765:                                              ; preds = %761
  %766 = load ptr, ptr %96, align 8, !tbaa !63
  %767 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %766, i64 0, i32 2
  %768 = load i8, ptr %767, align 4, !tbaa !148, !range !182, !noundef !183
  %769 = icmp eq i8 %768, 0
  %770 = load ptr, ptr %285, align 8, !tbaa !637
  %771 = getelementptr inbounds double, ptr %287, i64 %762
  %772 = trunc i64 %762 to i32
  %773 = trunc i64 %762 to i32
  br label %774

774:                                              ; preds = %851, %765
  %775 = phi i64 [ %857, %851 ], [ 0, %765 ]
  br i1 %769, label %784, label %776

776:                                              ; preds = %774
  %777 = load ptr, ptr %282, align 8, !tbaa !140
  %778 = load i32, ptr %283, align 8, !tbaa !59
  %779 = trunc i64 %775 to i32
  %780 = mul i32 %778, %779
  %781 = add i32 %780, %772
  %782 = zext i32 %781 to i64
  %783 = getelementptr inbounds double, ptr %777, i64 %782
  br label %795

784:                                              ; preds = %774
  %785 = load ptr, ptr %284, align 8, !tbaa !144
  %786 = getelementptr inbounds i32, ptr %785, i64 %775
  %787 = load i32, ptr %786, align 4, !tbaa !59
  %788 = load ptr, ptr %282, align 8, !tbaa !140
  %789 = load i32, ptr %283, align 8, !tbaa !59
  %790 = mul i32 %789, %787
  %791 = add i32 %790, %773
  %792 = zext i32 %791 to i64
  %793 = getelementptr inbounds double, ptr %788, i64 %792
  %794 = trunc i64 %775 to i32
  br label %795

795:                                              ; preds = %784, %776
  %796 = phi i32 [ %794, %784 ], [ %779, %776 ]
  %797 = phi ptr [ %793, %784 ], [ %783, %776 ]
  %798 = phi i32 [ %787, %784 ], [ %779, %776 ]
  %799 = load double, ptr %797, align 8, !tbaa !133
  %800 = zext i32 %798 to i64
  %801 = getelementptr inbounds %"class.std::vector.241", ptr %770, i64 %800
  %802 = load ptr, ptr %801, align 8, !tbaa !630
  %803 = getelementptr inbounds %"class.dealii::Tensor", ptr %802, i64 %762
  %804 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 1
  %805 = getelementptr inbounds [3 x double], ptr %803, i64 0, i64 2
  %806 = load ptr, ptr %58, align 8
  %807 = load i32, ptr %56, align 8
  %808 = mul i32 %807, %796
  br i1 %72, label %859, label %848

809:                                              ; preds = %848, %845
  %810 = phi i64 [ 0, %848 ], [ %846, %845 ]
  %811 = trunc i64 %810 to i32
  br i1 %769, label %812, label %816

812:                                              ; preds = %809
  %813 = load ptr, ptr %284, align 8, !tbaa !144
  %814 = getelementptr inbounds i32, ptr %813, i64 %810
  %815 = load i32, ptr %814, align 4, !tbaa !59
  br label %816

816:                                              ; preds = %812, %809
  %817 = phi i32 [ %815, %812 ], [ %811, %809 ]
  %818 = load i64, ptr %850, align 4
  %819 = getelementptr inbounds %"struct.std::pair.263", ptr %849, i64 %810
  %820 = load i64, ptr %819, align 4
  %821 = trunc i64 %818 to i32
  %822 = trunc i64 %820 to i32
  %823 = icmp eq i32 %821, %822
  br i1 %823, label %824, label %845

824:                                              ; preds = %816
  %825 = zext i32 %817 to i64
  %826 = getelementptr inbounds %"class.std::vector.241", ptr %770, i64 %825
  %827 = load ptr, ptr %826, align 8, !tbaa !630
  %828 = getelementptr inbounds %"class.dealii::Tensor", ptr %827, i64 %762
  %829 = load double, ptr %828, align 8, !tbaa !133
  %830 = load double, ptr %803, align 8, !tbaa !133
  %831 = getelementptr inbounds [3 x double], ptr %828, i64 0, i64 1
  %832 = load double, ptr %831, align 8, !tbaa !133
  %833 = load double, ptr %804, align 8, !tbaa !133
  %834 = fmul double %832, %833
  %835 = call double @llvm.fmuladd.f64(double %829, double %830, double %834)
  %836 = getelementptr inbounds [3 x double], ptr %828, i64 0, i64 2
  %837 = load double, ptr %836, align 8, !tbaa !133
  %838 = load double, ptr %805, align 8, !tbaa !133
  %839 = call double @llvm.fmuladd.f64(double %837, double %838, double %835)
  %840 = add i32 %808, %811
  %841 = zext i32 %840 to i64
  %842 = getelementptr inbounds double, ptr %806, i64 %841
  %843 = load double, ptr %842, align 8, !tbaa !133
  %844 = call double @llvm.fmuladd.f64(double %839, double %764, double %843)
  store double %844, ptr %842, align 8, !tbaa !133
  br label %845

845:                                              ; preds = %824, %816
  %846 = add nuw nsw i64 %810, 1
  %847 = icmp eq i64 %846, %98
  br i1 %847, label %851, label %809

848:                                              ; preds = %795
  %849 = load ptr, ptr %286, align 8, !tbaa !184
  %850 = getelementptr inbounds %"struct.std::pair.263", ptr %849, i64 %775
  br label %809

851:                                              ; preds = %845, %860, %886
  %852 = load double, ptr %771, align 8, !tbaa !133
  %853 = fmul double %799, %852
  %854 = getelementptr inbounds double, ptr %288, i64 %775
  %855 = load double, ptr %854, align 8, !tbaa !133
  %856 = call double @llvm.fmuladd.f64(double %853, double %764, double %855)
  store double %856, ptr %854, align 8, !tbaa !133
  %857 = add nuw nsw i64 %775, 1
  %858 = icmp eq i64 %857, %98
  br i1 %858, label %913, label %774

859:                                              ; preds = %795
  br i1 %769, label %884, label %860

860:                                              ; preds = %859, %860
  %861 = phi i64 [ %882, %860 ], [ 0, %859 ]
  %862 = getelementptr inbounds %"class.std::vector.241", ptr %770, i64 %861
  %863 = load ptr, ptr %862, align 8, !tbaa !630
  %864 = getelementptr inbounds %"class.dealii::Tensor", ptr %863, i64 %762
  %865 = load double, ptr %864, align 8, !tbaa !133
  %866 = load double, ptr %803, align 8, !tbaa !133
  %867 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 1
  %868 = load double, ptr %867, align 8, !tbaa !133
  %869 = load double, ptr %804, align 8, !tbaa !133
  %870 = fmul double %868, %869
  %871 = call double @llvm.fmuladd.f64(double %865, double %866, double %870)
  %872 = getelementptr inbounds [3 x double], ptr %864, i64 0, i64 2
  %873 = load double, ptr %872, align 8, !tbaa !133
  %874 = load double, ptr %805, align 8, !tbaa !133
  %875 = call double @llvm.fmuladd.f64(double %873, double %874, double %871)
  %876 = trunc i64 %861 to i32
  %877 = add i32 %808, %876
  %878 = zext i32 %877 to i64
  %879 = getelementptr inbounds double, ptr %806, i64 %878
  %880 = load double, ptr %879, align 8, !tbaa !133
  %881 = call double @llvm.fmuladd.f64(double %875, double %764, double %880)
  store double %881, ptr %879, align 8, !tbaa !133
  %882 = add nuw nsw i64 %861, 1
  %883 = icmp eq i64 %882, %98
  br i1 %883, label %851, label %860

884:                                              ; preds = %859
  %885 = load ptr, ptr %284, align 8, !tbaa !144
  br label %886

886:                                              ; preds = %886, %884
  %887 = phi i64 [ %911, %886 ], [ 0, %884 ]
  %888 = getelementptr inbounds i32, ptr %885, i64 %887
  %889 = load i32, ptr %888, align 4, !tbaa !59
  %890 = zext i32 %889 to i64
  %891 = getelementptr inbounds %"class.std::vector.241", ptr %770, i64 %890
  %892 = load ptr, ptr %891, align 8, !tbaa !630
  %893 = getelementptr inbounds %"class.dealii::Tensor", ptr %892, i64 %762
  %894 = load double, ptr %893, align 8, !tbaa !133
  %895 = load double, ptr %803, align 8, !tbaa !133
  %896 = getelementptr inbounds [3 x double], ptr %893, i64 0, i64 1
  %897 = load double, ptr %896, align 8, !tbaa !133
  %898 = load double, ptr %804, align 8, !tbaa !133
  %899 = fmul double %897, %898
  %900 = call double @llvm.fmuladd.f64(double %894, double %895, double %899)
  %901 = getelementptr inbounds [3 x double], ptr %893, i64 0, i64 2
  %902 = load double, ptr %901, align 8, !tbaa !133
  %903 = load double, ptr %805, align 8, !tbaa !133
  %904 = call double @llvm.fmuladd.f64(double %902, double %903, double %900)
  %905 = trunc i64 %887 to i32
  %906 = add i32 %808, %905
  %907 = zext i32 %906 to i64
  %908 = getelementptr inbounds double, ptr %806, i64 %907
  %909 = load double, ptr %908, align 8, !tbaa !133
  %910 = call double @llvm.fmuladd.f64(double %904, double %764, double %909)
  store double %910, ptr %908, align 8, !tbaa !133
  %911 = add nuw nsw i64 %887, 1
  %912 = icmp eq i64 %911, %98
  br i1 %912, label %851, label %886

913:                                              ; preds = %851, %761
  %914 = add nuw nsw i64 %762, 1
  %915 = icmp eq i64 %914, %172
  br i1 %915, label %916, label %761

916:                                              ; preds = %701, %625, %457, %913, %463, %296, %277
  br i1 %131, label %1025, label %917

917:                                              ; preds = %916
  %918 = getelementptr inbounds %"class.dealii::FiniteElement", ptr %97, i64 0, i32 12
  br i1 %72, label %919, label %957

919:                                              ; preds = %917, %952
  %920 = phi i64 [ %953, %952 ], [ 0, %917 ]
  %921 = trunc i64 %920 to i32
  br label %922

922:                                              ; preds = %949, %919
  %923 = phi i64 [ %950, %949 ], [ 0, %919 ]
  %924 = load ptr, ptr %58, align 8, !tbaa !140
  %925 = load i32, ptr %56, align 8, !tbaa !59
  %926 = mul i32 %925, %921
  %927 = trunc i64 %923 to i32
  %928 = add i32 %926, %927
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds double, ptr %924, i64 %929
  %931 = load double, ptr %930, align 8, !tbaa !133
  %932 = fcmp oeq double %931, 0.000000e+00
  br i1 %932, label %949, label %933

933:                                              ; preds = %922
  %934 = load ptr, ptr %19, align 8, !tbaa !144
  %935 = getelementptr inbounds i32, ptr %934, i64 %923
  %936 = load i32, ptr %935, align 4, !tbaa !59
  %937 = getelementptr inbounds i32, ptr %934, i64 %920
  %938 = load i32, ptr %937, align 4, !tbaa !59
  %939 = load ptr, ptr %73, align 8, !tbaa !383
  %940 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %939, i32 noundef %938, i32 noundef %936)
          to label %941 unwind label %955

941:                                              ; preds = %933
  %942 = icmp eq i32 %940, -1
  br i1 %942, label %949, label %943

943:                                              ; preds = %941
  %944 = load ptr, ptr %74, align 8, !tbaa !385
  %945 = zext i32 %940 to i64
  %946 = getelementptr inbounds double, ptr %944, i64 %945
  %947 = load double, ptr %946, align 8, !tbaa !133
  %948 = fadd double %931, %947
  store double %948, ptr %946, align 8, !tbaa !133
  br label %949

949:                                              ; preds = %943, %941, %922
  %950 = add nuw nsw i64 %923, 1
  %951 = icmp eq i64 %950, %98
  br i1 %951, label %952, label %922

952:                                              ; preds = %949
  %953 = add nuw nsw i64 %920, 1
  %954 = icmp eq i64 %953, %98
  br i1 %954, label %1004, label %919

955:                                              ; preds = %933
  %956 = landingpad { ptr, i32 }
          cleanup
  br label %1224

957:                                              ; preds = %917, %999
  %958 = phi i64 [ %1000, %999 ], [ 0, %917 ]
  %959 = trunc i64 %958 to i32
  br label %960

960:                                              ; preds = %957, %996
  %961 = phi i64 [ 0, %957 ], [ %997, %996 ]
  %962 = load ptr, ptr %918, align 8, !tbaa !184
  %963 = getelementptr inbounds %"struct.std::pair.263", ptr %962, i64 %958
  %964 = load i64, ptr %963, align 4
  %965 = getelementptr inbounds %"struct.std::pair.263", ptr %962, i64 %961
  %966 = load i64, ptr %965, align 4
  %967 = trunc i64 %964 to i32
  %968 = trunc i64 %966 to i32
  %969 = icmp eq i32 %967, %968
  br i1 %969, label %970, label %996

970:                                              ; preds = %960
  %971 = load ptr, ptr %58, align 8, !tbaa !140
  %972 = load i32, ptr %56, align 8, !tbaa !59
  %973 = mul i32 %972, %959
  %974 = trunc i64 %961 to i32
  %975 = add i32 %973, %974
  %976 = zext i32 %975 to i64
  %977 = getelementptr inbounds double, ptr %971, i64 %976
  %978 = load double, ptr %977, align 8, !tbaa !133
  %979 = fcmp oeq double %978, 0.000000e+00
  br i1 %979, label %996, label %980

980:                                              ; preds = %970
  %981 = load ptr, ptr %19, align 8, !tbaa !144
  %982 = getelementptr inbounds i32, ptr %981, i64 %961
  %983 = load i32, ptr %982, align 4, !tbaa !59
  %984 = getelementptr inbounds i32, ptr %981, i64 %958
  %985 = load i32, ptr %984, align 4, !tbaa !59
  %986 = load ptr, ptr %73, align 8, !tbaa !383
  %987 = invoke noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122) %986, i32 noundef %985, i32 noundef %983)
          to label %988 unwind label %1002

988:                                              ; preds = %980
  %989 = icmp eq i32 %987, -1
  br i1 %989, label %996, label %990

990:                                              ; preds = %988
  %991 = load ptr, ptr %74, align 8, !tbaa !385
  %992 = zext i32 %987 to i64
  %993 = getelementptr inbounds double, ptr %991, i64 %992
  %994 = load double, ptr %993, align 8, !tbaa !133
  %995 = fadd double %978, %994
  store double %995, ptr %993, align 8, !tbaa !133
  br label %996

996:                                              ; preds = %990, %988, %970, %960
  %997 = add nuw nsw i64 %961, 1
  %998 = icmp eq i64 %997, %98
  br i1 %998, label %999, label %960

999:                                              ; preds = %996
  %1000 = add nuw nsw i64 %958, 1
  %1001 = icmp eq i64 %1000, %98
  br i1 %1001, label %1004, label %957

1002:                                             ; preds = %980
  %1003 = landingpad { ptr, i32 }
          cleanup
  br label %1224

1004:                                             ; preds = %999, %952
  br i1 %131, label %1025, label %1005

1005:                                             ; preds = %1004
  %1006 = load ptr, ptr %60, align 8, !tbaa !136
  %1007 = load ptr, ptr %19, align 8, !tbaa !144
  %1008 = load ptr, ptr %75, align 8, !tbaa !136
  %1009 = and i64 %98, 1
  %1010 = icmp eq i32 %93, 1
  br i1 %1010, label %1013, label %1011

1011:                                             ; preds = %1005
  %1012 = and i64 %98, 4294967294
  br label %1143

1013:                                             ; preds = %1143, %1005
  %1014 = phi i64 [ 0, %1005 ], [ %1163, %1143 ]
  %1015 = icmp eq i64 %1009, 0
  br i1 %1015, label %1025, label %1016

1016:                                             ; preds = %1013
  %1017 = getelementptr inbounds double, ptr %1006, i64 %1014
  %1018 = load double, ptr %1017, align 8, !tbaa !133
  %1019 = getelementptr inbounds i32, ptr %1007, i64 %1014
  %1020 = load i32, ptr %1019, align 4, !tbaa !59
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds double, ptr %1008, i64 %1021
  %1023 = load double, ptr %1022, align 8, !tbaa !133
  %1024 = fadd double %1018, %1023
  store double %1024, ptr %1022, align 8, !tbaa !133
  br label %1025

1025:                                             ; preds = %1016, %1013, %465, %916, %1004
  %1026 = load ptr, ptr %76, align 8, !tbaa !62
  %1027 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1026, i64 0, i32 1
  %1028 = load ptr, ptr %1027, align 8, !tbaa !46
  %1029 = ptrtoint ptr %1028 to i64
  %1030 = getelementptr inbounds %"class.dealii::Triangulation", ptr %1026, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1031 = load i32, ptr %20, align 8
  %1032 = load i32, ptr %38, align 4
  br label %1033

1033:                                             ; preds = %1121, %1025
  %1034 = phi i32 [ %1031, %1025 ], [ %1100, %1121 ]
  %1035 = phi i32 [ %1031, %1025 ], [ %1101, %1121 ]
  %1036 = phi i32 [ %1031, %1025 ], [ %1122, %1121 ]
  %1037 = phi i32 [ %1032, %1025 ], [ %1102, %1121 ]
  %1038 = add nsw i32 %1037, 1
  %1039 = sext i32 %1036 to i64
  %1040 = getelementptr inbounds ptr, ptr %1028, i64 %1039
  %1041 = load ptr, ptr %1040, align 8, !tbaa !33
  %1042 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1041, i64 0, i32 4
  %1043 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1041, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1044 = load ptr, ptr %1043, align 8, !tbaa !48
  %1045 = load ptr, ptr %1042, align 8, !tbaa !50
  %1046 = ptrtoint ptr %1044 to i64
  %1047 = ptrtoint ptr %1045 to i64
  %1048 = sub i64 %1046, %1047
  %1049 = sdiv exact i64 %1048, 24
  %1050 = trunc i64 %1049 to i32
  %1051 = icmp slt i32 %1038, %1050
  br i1 %1051, label %1099, label %1052

1052:                                             ; preds = %1033
  %1053 = add nsw i64 %1039, 1
  %1054 = trunc i64 %1053 to i32
  store i32 %1054, ptr %20, align 8, !tbaa !60
  %1055 = load ptr, ptr %1030, align 8, !tbaa !51
  %1056 = ptrtoint ptr %1055 to i64
  %1057 = sub i64 %1056, %1029
  %1058 = shl i64 %1057, 29
  %1059 = ashr i64 %1058, 32
  %1060 = icmp slt i64 %1053, %1059
  br i1 %1060, label %1061, label %1093

1061:                                             ; preds = %1052
  %1062 = getelementptr inbounds ptr, ptr %1028, i64 %1053
  %1063 = load ptr, ptr %1062, align 8, !tbaa !33
  %1064 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1063, i64 0, i32 4
  %1065 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1063, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1066 = load ptr, ptr %1065, align 8, !tbaa !48
  %1067 = load ptr, ptr %1064, align 8, !tbaa !50
  %1068 = ptrtoint ptr %1066 to i64
  %1069 = ptrtoint ptr %1067 to i64
  %1070 = sub i64 %1068, %1069
  %1071 = sdiv exact i64 %1070, 24
  %1072 = trunc i64 %1071 to i32
  %1073 = icmp sgt i32 %1072, 0
  br i1 %1073, label %1095, label %1087

1074:                                             ; preds = %1087
  %1075 = getelementptr inbounds ptr, ptr %1028, i64 %1089
  %1076 = load ptr, ptr %1075, align 8, !tbaa !33
  %1077 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1076, i64 0, i32 4
  %1078 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1076, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1079 = load ptr, ptr %1078, align 8, !tbaa !48
  %1080 = load ptr, ptr %1077, align 8, !tbaa !50
  %1081 = ptrtoint ptr %1079 to i64
  %1082 = ptrtoint ptr %1080 to i64
  %1083 = sub i64 %1081, %1082
  %1084 = sdiv exact i64 %1083, 24
  %1085 = trunc i64 %1084 to i32
  %1086 = icmp sgt i32 %1085, 0
  br i1 %1086, label %1094, label %1087, !llvm.loop !52

1087:                                             ; preds = %1061, %1074
  %1088 = phi i64 [ %1089, %1074 ], [ %1053, %1061 ]
  %1089 = add i64 %1088, 1
  %1090 = trunc i64 %1089 to i32
  %1091 = icmp eq i64 %1089, %1059
  br i1 %1091, label %1092, label %1074, !llvm.loop !52

1092:                                             ; preds = %1087
  store i32 %1090, ptr %20, align 8, !tbaa !60
  br label %1093

1093:                                             ; preds = %1092, %1052
  store i32 -1, ptr %20, align 8, !tbaa !60
  br label %1099

1094:                                             ; preds = %1074
  store i32 %1090, ptr %20, align 8, !tbaa !60
  br label %1095

1095:                                             ; preds = %1094, %1061
  %1096 = phi i32 [ %1054, %1061 ], [ %1090, %1094 ]
  %1097 = phi i64 [ %1053, %1061 ], [ %1089, %1094 ]
  %1098 = trunc i64 %1097 to i32
  br label %1099

1099:                                             ; preds = %1095, %1093, %1033
  %1100 = phi i32 [ %1034, %1033 ], [ -1, %1093 ], [ %1096, %1095 ]
  %1101 = phi i32 [ %1035, %1033 ], [ -1, %1093 ], [ %1098, %1095 ]
  %1102 = phi i32 [ %1038, %1033 ], [ -1, %1093 ], [ 0, %1095 ]
  %1103 = phi i32 [ %1036, %1033 ], [ -1, %1093 ], [ %1098, %1095 ]
  %1104 = or i32 %1103, %1102
  %1105 = icmp sgt i32 %1104, -1
  br i1 %1105, label %1106, label %1123

1106:                                             ; preds = %1099
  %1107 = zext i32 %1103 to i64
  %1108 = getelementptr inbounds ptr, ptr %1028, i64 %1107
  %1109 = load ptr, ptr %1108, align 8, !tbaa !33
  %1110 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1109, i64 0, i32 4, i32 0, i32 3
  %1111 = load ptr, ptr %1110, align 8, !tbaa !54
  %1112 = lshr i32 %1102, 6
  %1113 = zext i32 %1112 to i64
  %1114 = getelementptr inbounds i64, ptr %1111, i64 %1113
  %1115 = and i32 %1102, 63
  %1116 = zext i32 %1115 to i64
  %1117 = shl nuw i64 1, %1116
  %1118 = load i64, ptr %1114, align 8, !tbaa !56
  %1119 = and i64 %1118, %1117
  %1120 = icmp eq i64 %1119, 0
  br i1 %1120, label %1121, label %1123

1121:                                             ; preds = %1106, %1126
  %1122 = phi i32 [ %1103, %1106 ], [ %1101, %1126 ]
  br label %1033

1123:                                             ; preds = %1106, %1099
  store i32 %1102, ptr %38, align 4, !tbaa !61
  %1124 = or i32 %1102, %1101
  %1125 = icmp sgt i32 %1124, -1
  br i1 %1125, label %1126, label %1137

1126:                                             ; preds = %1123
  %1127 = zext i32 %1101 to i64
  %1128 = getelementptr inbounds ptr, ptr %1028, i64 %1127
  %1129 = load ptr, ptr %1128, align 8, !tbaa !33
  %1130 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %1129, i64 0, i32 4, i32 0, i32 1
  %1131 = shl i32 %1102, 2
  %1132 = zext i32 %1131 to i64
  %1133 = load ptr, ptr %1130, align 8, !tbaa !57
  %1134 = getelementptr inbounds i32, ptr %1133, i64 %1132
  %1135 = load i32, ptr %1134, align 4, !tbaa !59
  %1136 = icmp eq i32 %1135, -1
  br i1 %1136, label %1137, label %1121

1137:                                             ; preds = %1123, %1126
  %1138 = load i32, ptr %39, align 4, !tbaa !61
  %1139 = icmp ne i32 %1102, %1138
  %1140 = load i32, ptr %37, align 8
  %1141 = icmp ne i32 %1100, %1140
  %1142 = select i1 %1139, i1 true, i1 %1141
  br i1 %1142, label %77, label %1166

1143:                                             ; preds = %1143, %1011
  %1144 = phi i64 [ 0, %1011 ], [ %1163, %1143 ]
  %1145 = phi i64 [ 0, %1011 ], [ %1164, %1143 ]
  %1146 = getelementptr inbounds double, ptr %1006, i64 %1144
  %1147 = load double, ptr %1146, align 8, !tbaa !133
  %1148 = getelementptr inbounds i32, ptr %1007, i64 %1144
  %1149 = load i32, ptr %1148, align 4, !tbaa !59
  %1150 = zext i32 %1149 to i64
  %1151 = getelementptr inbounds double, ptr %1008, i64 %1150
  %1152 = load double, ptr %1151, align 8, !tbaa !133
  %1153 = fadd double %1147, %1152
  store double %1153, ptr %1151, align 8, !tbaa !133
  %1154 = or i64 %1144, 1
  %1155 = getelementptr inbounds double, ptr %1006, i64 %1154
  %1156 = load double, ptr %1155, align 8, !tbaa !133
  %1157 = getelementptr inbounds i32, ptr %1007, i64 %1154
  %1158 = load i32, ptr %1157, align 4, !tbaa !59
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds double, ptr %1008, i64 %1159
  %1161 = load double, ptr %1160, align 8, !tbaa !133
  %1162 = fadd double %1156, %1161
  store double %1162, ptr %1160, align 8, !tbaa !133
  %1163 = add nuw nsw i64 %1144, 2
  %1164 = add i64 %1145, 2
  %1165 = icmp eq i64 %1164, %1012
  br i1 %1165, label %1013, label %1143

1166:                                             ; preds = %1137
  %1167 = load ptr, ptr %19, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %1168 = icmp eq ptr %1167, null
  br i1 %1168, label %1170, label %1169

1169:                                             ; preds = %1166
  call void @_ZdlPv(ptr noundef nonnull %1167) #21
  br label %1170

1170:                                             ; preds = %47, %1169, %1166
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %1171 = load ptr, ptr %18, align 8, !tbaa !224
  %1172 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %18, i64 0, i32 1
  %1173 = load ptr, ptr %1172, align 8, !tbaa !226
  %1174 = icmp eq ptr %1171, %1173
  br i1 %1174, label %1184, label %1175

1175:                                             ; preds = %1170, %1179
  %1176 = phi ptr [ %1180, %1179 ], [ %1171, %1170 ]
  %1177 = load ptr, ptr %1176, align 8, !tbaa !41
  %1178 = load ptr, ptr %1177, align 8
  invoke void %1178(ptr noundef nonnull align 8 dereferenceable(88) %1176)
          to label %1179 unwind label %1188

1179:                                             ; preds = %1175
  %1180 = getelementptr inbounds %"class.dealii::Vector", ptr %1176, i64 1
  %1181 = icmp eq ptr %1180, %1173
  br i1 %1181, label %1182, label %1175

1182:                                             ; preds = %1179
  %1183 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1184

1184:                                             ; preds = %1182, %1170
  %1185 = phi ptr [ %1183, %1182 ], [ %1171, %1170 ]
  %1186 = icmp eq ptr %1185, null
  br i1 %1186, label %1192, label %1187

1187:                                             ; preds = %1184
  call void @_ZdlPv(ptr noundef nonnull %1185) #21
  br label %1192

1188:                                             ; preds = %1175
  %1189 = landingpad { ptr, i32 }
          cleanup
  %1190 = load ptr, ptr %18, align 8, !tbaa !224
  %1191 = icmp eq ptr %1190, null
  br i1 %1191, label %1253, label %1250

1192:                                             ; preds = %1187, %1184
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1193 = load ptr, ptr %17, align 8, !tbaa !131
  %1194 = icmp eq ptr %1193, null
  br i1 %1194, label %1196, label %1195

1195:                                             ; preds = %1192
  call void @_ZdlPv(ptr noundef nonnull %1193) #21
  br label %1196

1196:                                             ; preds = %1195, %1192
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1197 = load ptr, ptr %16, align 8, !tbaa !131
  %1198 = icmp eq ptr %1197, null
  br i1 %1198, label %1200, label %1199

1199:                                             ; preds = %1196
  call void @_ZdlPv(ptr noundef nonnull %1197) #21
  br label %1200

1200:                                             ; preds = %1199, %1196
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %1201 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %1202 = load ptr, ptr %1201, align 8, !tbaa !136
  %1203 = icmp eq ptr %1202, null
  br i1 %1203, label %1205, label %1204

1204:                                             ; preds = %1200
  call void @_ZdaPv(ptr noundef nonnull %1202) #21
  store ptr null, ptr %1201, align 8, !tbaa !136
  br label %1205

1205:                                             ; preds = %1204, %1200
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %1206 unwind label %310

1206:                                             ; preds = %1205
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !41
  %1207 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %1208 = load ptr, ptr %1207, align 8, !tbaa !140
  %1209 = icmp eq ptr %1208, null
  br i1 %1209, label %1211, label %1210

1210:                                             ; preds = %1206
  call void @_ZdaPv(ptr noundef nonnull %1208) #21
  br label %1211

1211:                                             ; preds = %1210, %1206
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %14)
          to label %1212 unwind label %308

1212:                                             ; preds = %1211
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %14) #19
  %1213 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1213)
          to label %1222 unwind label %1214

1214:                                             ; preds = %1212
  %1215 = landingpad { ptr, i32 }
          cleanup
  %1216 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1216)
          to label %1217 unwind label %1219

1217:                                             ; preds = %1214, %1286
  %1218 = phi { ptr, i32 } [ %1276, %1286 ], [ %1215, %1214 ]
  resume { ptr, i32 } %1218

1219:                                             ; preds = %1214
  %1220 = landingpad { ptr, i32 }
          catch ptr null
  %1221 = extractvalue { ptr, i32 } %1220, 0
  call void @__clang_call_terminate(ptr %1221) #22
  unreachable

1222:                                             ; preds = %1212
  %1223 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  call void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1223)
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %13) #19
  ret void

1224:                                             ; preds = %1002, %955, %314, %193, %320, %312
  %1225 = phi { ptr, i32 } [ %313, %312 ], [ %321, %320 ], [ %315, %314 ], [ %194, %193 ], [ %1003, %1002 ], [ %956, %955 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %20) #19
  %1226 = load ptr, ptr %19, align 8, !tbaa !144
  %1227 = icmp eq ptr %1226, null
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1224
  call void @_ZdlPv(ptr noundef nonnull %1226) #21
  br label %1229

1229:                                             ; preds = %1228, %1224
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %19) #19
  %1230 = load ptr, ptr %18, align 8, !tbaa !224
  %1231 = load ptr, ptr %69, align 8, !tbaa !226
  %1232 = icmp eq ptr %1230, %1231
  br i1 %1232, label %1242, label %1233

1233:                                             ; preds = %1229, %1237
  %1234 = phi ptr [ %1238, %1237 ], [ %1230, %1229 ]
  %1235 = load ptr, ptr %1234, align 8, !tbaa !41
  %1236 = load ptr, ptr %1235, align 8
  invoke void %1236(ptr noundef nonnull align 8 dereferenceable(88) %1234)
          to label %1237 unwind label %1245

1237:                                             ; preds = %1233
  %1238 = getelementptr inbounds %"class.dealii::Vector", ptr %1234, i64 1
  %1239 = icmp eq ptr %1238, %1231
  br i1 %1239, label %1240, label %1233

1240:                                             ; preds = %1237
  %1241 = load ptr, ptr %18, align 8, !tbaa !224
  br label %1242

1242:                                             ; preds = %1240, %1229
  %1243 = phi ptr [ %1241, %1240 ], [ %1230, %1229 ]
  %1244 = icmp eq ptr %1243, null
  br i1 %1244, label %1253, label %1250

1245:                                             ; preds = %1233
  %1246 = landingpad { ptr, i32 }
          catch ptr null
  %1247 = load ptr, ptr %18, align 8, !tbaa !224
  %1248 = icmp eq ptr %1247, null
  br i1 %1248, label %1289, label %1249

1249:                                             ; preds = %1245
  call void @_ZdlPv(ptr noundef nonnull %1247) #21
  br label %1289

1250:                                             ; preds = %1242, %1188
  %1251 = phi ptr [ %1190, %1188 ], [ %1243, %1242 ]
  %1252 = phi { ptr, i32 } [ %1189, %1188 ], [ %1225, %1242 ]
  call void @_ZdlPv(ptr noundef nonnull %1251) #21
  br label %1253

1253:                                             ; preds = %1250, %1242, %1188
  %1254 = phi { ptr, i32 } [ %1189, %1188 ], [ %1225, %1242 ], [ %1252, %1250 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %18) #19
  %1255 = load ptr, ptr %17, align 8, !tbaa !131
  %1256 = icmp eq ptr %1255, null
  br i1 %1256, label %1258, label %1257

1257:                                             ; preds = %1253
  call void @_ZdlPv(ptr noundef nonnull %1255) #21
  br label %1258

1258:                                             ; preds = %1257, %1253
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %17) #19
  %1259 = load ptr, ptr %16, align 8, !tbaa !131
  %1260 = icmp eq ptr %1259, null
  br i1 %1260, label %1262, label %1261

1261:                                             ; preds = %1258
  call void @_ZdlPv(ptr noundef nonnull %1259) #21
  br label %1262

1262:                                             ; preds = %1261, %1258
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %16) #19
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %15, align 8, !tbaa !41
  %1263 = getelementptr inbounds %"class.dealii::Vector", ptr %15, i64 0, i32 3
  %1264 = load ptr, ptr %1263, align 8, !tbaa !136
  %1265 = icmp eq ptr %1264, null
  br i1 %1265, label %1267, label %1266

1266:                                             ; preds = %1262
  call void @_ZdaPv(ptr noundef nonnull %1264) #21
  store ptr null, ptr %1263, align 8, !tbaa !136
  br label %1267

1267:                                             ; preds = %1266, %1262
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %15)
          to label %1268 unwind label %1287

1268:                                             ; preds = %1267, %310
  %1269 = phi { ptr, i32 } [ %311, %310 ], [ %1254, %1267 ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %15) #19
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %14, align 8, !tbaa !41
  %1270 = getelementptr inbounds %"class.dealii::TableBase", ptr %14, i64 0, i32 1
  %1271 = load ptr, ptr %1270, align 8, !tbaa !140
  %1272 = icmp eq ptr %1271, null
  br i1 %1272, label %1274, label %1273

1273:                                             ; preds = %1268
  call void @_ZdaPv(ptr noundef nonnull %1271) #21
  br label %1274

1274:                                             ; preds = %1273, %1268
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %14)
          to label %1275 unwind label %1287

1275:                                             ; preds = %1274, %308
  %1276 = phi { ptr, i32 } [ %309, %308 ], [ %1269, %1274 ]
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %14) #19
  %1277 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 3
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1277)
          to label %1278 unwind label %1280

1278:                                             ; preds = %1275
  %1279 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1279)
          to label %1286 unwind label %1287

1280:                                             ; preds = %1275
  %1281 = landingpad { ptr, i32 }
          catch ptr null
  %1282 = getelementptr inbounds %"class.dealii::internal::hp::FEValuesBase", ptr %13, i64 0, i32 2
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %1282)
          to label %1289 unwind label %1283

1283:                                             ; preds = %1280
  %1284 = landingpad { ptr, i32 }
          catch ptr null
  %1285 = extractvalue { ptr, i32 } %1284, 0
  call void @__clang_call_terminate(ptr %1285) #22
  unreachable

1286:                                             ; preds = %1278
  call void @llvm.lifetime.end.p0(i64 240, ptr nonnull %13) #19
  br label %1217

1287:                                             ; preds = %1278, %1274, %1267, %320
  %1288 = landingpad { ptr, i32 }
          catch ptr null
  br label %1289

1289:                                             ; preds = %1287, %1280, %1245, %1249
  %1290 = phi { ptr, i32 } [ %1246, %1249 ], [ %1246, %1245 ], [ %1288, %1287 ], [ %1281, %1280 ]
  %1291 = extractvalue { ptr, i32 } %1290, 0
  call void @__clang_call_terminate(ptr %1291) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define weak_odr dso_local void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSG_(ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN6dealii13MatrixCreator21create_laplace_matrixILi3ELi3EEEvRKNS_2hp17MappingCollectionIXT_EXT0_EEERKNS2_10DoFHandlerIXT_EXT0_EEERKNS2_11QCollectionIXT_EEERNS_12SparseMatrixIdEERKNS_8FunctionIXT0_EEERNS_6VectorIdEEPSK_(ptr noundef nonnull align 8 dereferenceable(96) @_ZN6dealii2hp15StaticMappingQ1ILi3ELi3EE18mapping_collectionE, ptr noundef nonnull align 8 dereferenceable(224) %0, ptr noundef nonnull align 1 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 1 %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef %5)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost10shared_ptrIN6dealii7Threads8internal16ThreadDescriptorIvEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::shared_ptr", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !39
  %4 = icmp eq ptr %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !34
  %8 = add nsw i64 %7, -1
  store i64 %8, ptr %6, align 8, !tbaa !34
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = load ptr, ptr %3, align 8, !tbaa !41
  %12 = getelementptr inbounds ptr, ptr %11, i64 2
  %13 = load ptr, ptr %12, align 8
  tail call void %13(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %14 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 2
  %15 = load i64, ptr %14, align 8, !tbaa !43
  %16 = add nsw i64 %15, -1
  store i64 %16, ptr %14, align 8, !tbaa !43
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = load ptr, ptr %3, align 8, !tbaa !41
  %20 = getelementptr inbounds ptr, ptr %19, i64 3
  %21 = load ptr, ptr %20, align 8
  tail call void %21(ptr noundef nonnull align 8 dereferenceable(24) %3)
  br label %22

22:                                               ; preds = %1, %5, %10, %18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIjSaIjEE17_M_realloc_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, ptr noundef nonnull align 4 dereferenceable(4) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !349
  %6 = load ptr, ptr %0, align 8, !tbaa !33
  %7 = ptrtoint ptr %5 to i64
  %8 = ptrtoint ptr %6 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 9223372036854775804
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str) #23
  unreachable

12:                                               ; preds = %3
  %13 = ashr exact i64 %9, 2
  %14 = tail call i64 @llvm.umax.i64(i64 %13, i64 1)
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %13
  %17 = icmp ugt i64 %15, 2305843009213693951
  %18 = or i1 %16, %17
  %19 = select i1 %18, i64 2305843009213693951, i64 %15
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %20, %8
  %22 = ashr exact i64 %21, 2
  %23 = icmp eq i64 %19, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = shl nuw nsw i64 %19, 2
  %26 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %25) #20
  br label %27

27:                                               ; preds = %24, %12
  %28 = phi ptr [ %26, %24 ], [ null, %12 ]
  %29 = getelementptr inbounds i32, ptr %28, i64 %22
  %30 = load i32, ptr %2, align 4, !tbaa !59
  store i32 %30, ptr %29, align 4, !tbaa !59
  %31 = icmp sgt i64 %21, 4
  br i1 %31, label %32, label %33, !prof !493

32:                                               ; preds = %27
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %28, ptr align 4 %6, i64 %21, i1 false)
  br label %37

33:                                               ; preds = %27
  %34 = icmp eq i64 %21, 4
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = load i32, ptr %6, align 4, !tbaa !59
  store i32 %36, ptr %28, align 4, !tbaa !59
  br label %37

37:                                               ; preds = %35, %33, %32
  %38 = getelementptr inbounds i32, ptr %29, i64 1
  %39 = sub i64 %7, %20
  %40 = icmp sgt i64 %39, 4
  br i1 %40, label %41, label %42, !prof !493

41:                                               ; preds = %37
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %38, ptr align 4 %1, i64 %39, i1 false)
  br label %46

42:                                               ; preds = %37
  %43 = icmp eq i64 %39, 4
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = load i32, ptr %1, align 4, !tbaa !59
  store i32 %45, ptr %38, align 4, !tbaa !59
  br label %46

46:                                               ; preds = %44, %42, %41
  %47 = icmp eq ptr %6, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  tail call void @_ZdlPv(ptr noundef nonnull %6) #21
  br label %49

49:                                               ; preds = %46, %48
  %50 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %51 = ashr exact i64 %39, 2
  %52 = getelementptr inbounds i32, ptr %38, i64 %51
  store ptr %28, ptr %0, align 8, !tbaa !144
  store ptr %52, ptr %4, align 8, !tbaa !349
  %53 = getelementptr inbounds i32, ptr %28, i64 %19
  store ptr %53, ptr %50, align 8, !tbaa !492
  ret void
}

declare void @__cxa_rethrow() local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZSt28__throw_bad_array_new_lengthv() local_unnamed_addr #6

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #8

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZSt9__advanceIN6dealii18TriaActiveIteratorINS0_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEElEvRT_T0_St26bidirectional_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) local_unnamed_addr #3 comdat {
  %3 = icmp sgt i64 %1, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %200, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %"class.dealii::Triangulation", ptr %9, i64 0, i32 1
  %11 = load i32, ptr %7, align 4, !tbaa !61
  %12 = load i32, ptr %0, align 8, !tbaa !60
  br label %117

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !62
  %17 = getelementptr inbounds %"class.dealii::Triangulation", ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !46
  %19 = ptrtoint ptr %18 to i64
  %20 = getelementptr inbounds %"class.dealii::Triangulation", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, ptr %0, align 8, !tbaa !60
  %22 = load i32, ptr %14, align 4
  br label %23

23:                                               ; preds = %13, %115
  %24 = phi i32 [ %22, %13 ], [ %80, %115 ]
  %25 = phi i64 [ %1, %13 ], [ %27, %115 ]
  %26 = phi i32 [ %21, %13 ], [ %78, %115 ]
  %27 = add nsw i64 %25, -1
  br label %28

28:                                               ; preds = %99, %23
  %29 = phi i32 [ %26, %23 ], [ %78, %99 ]
  %30 = phi i32 [ %26, %23 ], [ %79, %99 ]
  %31 = phi i32 [ %26, %23 ], [ %100, %99 ]
  %32 = phi i32 [ %24, %23 ], [ %80, %99 ]
  %33 = add nsw i32 %32, 1
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds ptr, ptr %18, i64 %34
  %36 = load ptr, ptr %35, align 8, !tbaa !33
  %37 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %36, i64 0, i32 4
  %38 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %36, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !48
  %40 = load ptr, ptr %37, align 8, !tbaa !50
  %41 = ptrtoint ptr %39 to i64
  %42 = ptrtoint ptr %40 to i64
  %43 = sub i64 %41, %42
  %44 = sdiv exact i64 %43, 24
  %45 = trunc i64 %44 to i32
  %46 = icmp slt i32 %33, %45
  br i1 %46, label %77, label %47

47:                                               ; preds = %28
  %48 = add nsw i64 %34, 1
  %49 = trunc i64 %48 to i32
  store i32 %49, ptr %0, align 8, !tbaa !60
  %50 = load ptr, ptr %20, align 8, !tbaa !51
  %51 = ptrtoint ptr %50 to i64
  %52 = sub i64 %51, %19
  %53 = shl i64 %52, 29
  %54 = ashr i64 %53, 32
  %55 = icmp slt i64 %48, %54
  br i1 %55, label %56, label %74

56:                                               ; preds = %47, %70
  %57 = phi i64 [ %71, %70 ], [ %48, %47 ]
  %58 = getelementptr inbounds ptr, ptr %18, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !33
  %60 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %59, i64 0, i32 4
  %61 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %59, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !48
  %63 = load ptr, ptr %60, align 8, !tbaa !50
  %64 = ptrtoint ptr %62 to i64
  %65 = ptrtoint ptr %63 to i64
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, 24
  %68 = trunc i64 %67 to i32
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %56
  %71 = add i64 %57, 1
  %72 = trunc i64 %71 to i32
  store i32 %72, ptr %0, align 8, !tbaa !60
  %73 = icmp eq i64 %71, %54
  br i1 %73, label %74, label %56, !llvm.loop !52

74:                                               ; preds = %70, %47
  store i32 -1, ptr %0, align 8, !tbaa !60
  br label %77

75:                                               ; preds = %56
  %76 = trunc i64 %57 to i32
  br label %77

77:                                               ; preds = %75, %74, %28
  %78 = phi i32 [ %29, %28 ], [ -1, %74 ], [ %76, %75 ]
  %79 = phi i32 [ %30, %28 ], [ -1, %74 ], [ %76, %75 ]
  %80 = phi i32 [ %33, %28 ], [ -1, %74 ], [ 0, %75 ]
  %81 = phi i32 [ %31, %28 ], [ -1, %74 ], [ %76, %75 ]
  %82 = or i32 %81, %80
  %83 = icmp sgt i32 %82, -1
  br i1 %83, label %84, label %101

84:                                               ; preds = %77
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds ptr, ptr %18, i64 %85
  %87 = load ptr, ptr %86, align 8, !tbaa !33
  %88 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %87, i64 0, i32 4, i32 0, i32 3
  %89 = load ptr, ptr %88, align 8, !tbaa !54
  %90 = lshr i32 %80, 6
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i64, ptr %89, i64 %91
  %93 = and i32 %80, 63
  %94 = zext i32 %93 to i64
  %95 = shl nuw i64 1, %94
  %96 = load i64, ptr %92, align 8, !tbaa !56
  %97 = and i64 %96, %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %84, %104
  %100 = phi i32 [ %81, %84 ], [ %79, %104 ]
  br label %28

101:                                              ; preds = %84, %77
  store i32 %80, ptr %14, align 4, !tbaa !61
  %102 = or i32 %80, %79
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %115

104:                                              ; preds = %101
  %105 = zext i32 %79 to i64
  %106 = getelementptr inbounds ptr, ptr %18, i64 %105
  %107 = load ptr, ptr %106, align 8, !tbaa !33
  %108 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %107, i64 0, i32 4, i32 0, i32 1
  %109 = shl i32 %80, 2
  %110 = zext i32 %109 to i64
  %111 = load ptr, ptr %108, align 8, !tbaa !57
  %112 = getelementptr inbounds i32, ptr %111, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !59
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %99

115:                                              ; preds = %101, %104
  %116 = icmp eq i64 %27, 0
  br i1 %116, label %200, label %23

117:                                              ; preds = %6, %198
  %118 = phi i32 [ %12, %6 ], [ %159, %198 ]
  %119 = phi i32 [ %11, %6 ], [ %162, %198 ]
  %120 = phi i64 [ %1, %6 ], [ %121, %198 ]
  %121 = add nsw i64 %120, 1
  br label %122

122:                                              ; preds = %181, %117
  %123 = phi i32 [ %118, %117 ], [ %159, %181 ]
  %124 = phi i32 [ %118, %117 ], [ %160, %181 ]
  %125 = phi i32 [ %118, %117 ], [ %182, %181 ]
  %126 = phi i32 [ %119, %117 ], [ %162, %181 ]
  %127 = add i32 %126, -1
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %129, label %153

129:                                              ; preds = %122
  %130 = sext i32 %125 to i64
  br label %131

131:                                              ; preds = %135, %129
  %132 = phi i64 [ %130, %129 ], [ %136, %135 ]
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  store i64 -1, ptr %0, align 8
  br label %158

135:                                              ; preds = %131
  %136 = add nsw i64 %132, -1
  %137 = load ptr, ptr %10, align 8, !tbaa !46
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8, !tbaa !33
  %140 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %139, i64 0, i32 4
  %141 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %139, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !48
  %143 = load ptr, ptr %140, align 8, !tbaa !50
  %144 = ptrtoint ptr %142 to i64
  %145 = ptrtoint ptr %143 to i64
  %146 = sub i64 %144, %145
  %147 = sdiv exact i64 %146, 24
  %148 = trunc i64 %147 to i32
  %149 = add i32 %148, -1
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %131, label %151

151:                                              ; preds = %135
  %152 = trunc i64 %136 to i32
  store i32 %152, ptr %0, align 8, !tbaa !60
  br label %153

153:                                              ; preds = %151, %122
  %154 = phi i32 [ %152, %151 ], [ %123, %122 ]
  %155 = phi i32 [ %152, %151 ], [ %124, %122 ]
  %156 = phi i32 [ %152, %151 ], [ %125, %122 ]
  %157 = phi i32 [ %149, %151 ], [ %127, %122 ]
  store i32 %157, ptr %7, align 4, !tbaa !61
  br label %158

158:                                              ; preds = %153, %134
  %159 = phi i32 [ -1, %134 ], [ %154, %153 ]
  %160 = phi i32 [ -1, %134 ], [ %155, %153 ]
  %161 = phi i32 [ -1, %134 ], [ %156, %153 ]
  %162 = phi i32 [ -1, %134 ], [ %157, %153 ]
  %163 = or i32 %162, %161
  %164 = icmp sgt i32 %163, -1
  br i1 %164, label %165, label %183

165:                                              ; preds = %158
  %166 = zext i32 %161 to i64
  %167 = load ptr, ptr %10, align 8, !tbaa !46
  %168 = getelementptr inbounds ptr, ptr %167, i64 %166
  %169 = load ptr, ptr %168, align 8, !tbaa !33
  %170 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %169, i64 0, i32 4, i32 0, i32 3
  %171 = load ptr, ptr %170, align 8, !tbaa !54
  %172 = lshr i32 %162, 6
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i64, ptr %171, i64 %173
  %175 = and i32 %162, 63
  %176 = zext i32 %175 to i64
  %177 = shl nuw i64 1, %176
  %178 = load i64, ptr %174, align 8, !tbaa !56
  %179 = and i64 %178, %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %165, %186
  %182 = phi i32 [ %161, %165 ], [ %160, %186 ]
  br label %122

183:                                              ; preds = %165, %158
  %184 = or i32 %162, %160
  %185 = icmp sgt i32 %184, -1
  br i1 %185, label %186, label %198

186:                                              ; preds = %183
  %187 = zext i32 %160 to i64
  %188 = load ptr, ptr %10, align 8, !tbaa !46
  %189 = getelementptr inbounds ptr, ptr %188, i64 %187
  %190 = load ptr, ptr %189, align 8, !tbaa !33
  %191 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %190, i64 0, i32 4, i32 0, i32 1
  %192 = shl i32 %162, 2
  %193 = zext i32 %192 to i64
  %194 = load ptr, ptr %191, align 8, !tbaa !57
  %195 = getelementptr inbounds i32, ptr %194, i64 %193
  %196 = load i32, ptr %195, align 4, !tbaa !59
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %198, label %181

198:                                              ; preds = %183, %186
  %199 = icmp eq i64 %121, 0
  br i1 %199, label %200, label %117

200:                                              ; preds = %198, %115, %4
  ret void
}

declare void @_ZN6dealii8FEValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(776), ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(128), i32 noundef) unnamed_addr #2

declare void @_ZN6dealii10FullMatrixIdEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92), i32 noundef, i32 noundef) unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EEC2EmRKS2_RKS3_(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(88) %2, ptr noundef nonnull align 1 dereferenceable(1) %3) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp ugt i64 %1, 104811045873349725
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.9) #23
  unreachable

7:                                                ; preds = %4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  %8 = icmp eq i64 %1, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false)
  br label %47

11:                                               ; preds = %7
  %12 = mul nuw nsw i64 %1, 88
  %13 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %12) #20
  store ptr %13, ptr %0, align 8, !tbaa !224
  %14 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  store ptr %13, ptr %14, align 8, !tbaa !226
  %15 = getelementptr inbounds %"class.dealii::Vector", ptr %13, i64 %1
  %16 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !641
  br label %17

17:                                               ; preds = %11, %20
  %18 = phi ptr [ %22, %20 ], [ %13, %11 ]
  %19 = phi i64 [ %21, %20 ], [ %1, %11 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %18, ptr noundef nonnull align 8 dereferenceable(88) %2)
          to label %20 unwind label %24

20:                                               ; preds = %17
  %21 = add i64 %19, -1
  %22 = getelementptr inbounds %"class.dealii::Vector", ptr %18, i64 1
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %17

24:                                               ; preds = %17
  %25 = landingpad { ptr, i32 }
          catch ptr null
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = tail call ptr @__cxa_begin_catch(ptr %26) #19
  %28 = icmp eq ptr %18, %13
  br i1 %28, label %36, label %29

29:                                               ; preds = %24, %33
  %30 = phi ptr [ %34, %33 ], [ %13, %24 ]
  %31 = load ptr, ptr %30, align 8, !tbaa !41
  %32 = load ptr, ptr %31, align 8
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(88) %30)
          to label %33 unwind label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.dealii::Vector", ptr %30, i64 1
  %35 = icmp eq ptr %34, %18
  br i1 %35, label %36, label %29

36:                                               ; preds = %33, %24
  invoke void @__cxa_rethrow() #23
          to label %46 unwind label %39

37:                                               ; preds = %29
  %38 = landingpad { ptr, i32 }
          cleanup
  br label %41

39:                                               ; preds = %36
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi { ptr, i32 } [ %38, %37 ], [ %40, %39 ]
  invoke void @__cxa_end_catch()
          to label %50 unwind label %43

43:                                               ; preds = %41
  %44 = landingpad { ptr, i32 }
          catch ptr null
  %45 = extractvalue { ptr, i32 } %44, 0
  tail call void @__clang_call_terminate(ptr %45) #22
  unreachable

46:                                               ; preds = %36
  unreachable

47:                                               ; preds = %20, %9
  %48 = phi ptr [ %10, %9 ], [ %14, %20 ]
  %49 = phi ptr [ null, %9 ], [ %22, %20 ]
  store ptr %49, ptr %48, align 8, !tbaa !226
  ret void

50:                                               ; preds = %41
  %51 = load ptr, ptr %0, align 8, !tbaa !224
  %52 = icmp eq ptr %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  tail call void @_ZdlPv(ptr noundef nonnull %51) #21
  br label %54

54:                                               ; preds = %53, %50
  resume { ptr, i32 } %42
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #3 comdat align 2 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !136
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #21
  store ptr null, ptr %2, align 8, !tbaa !136
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

declare void @_ZN6dealii8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEE(ptr noundef nonnull align 8 dereferenceable(776), ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #9

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii8FEValuesILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(776) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::FEValues", ptr %0, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2)
          to label %3 unwind label %4

3:                                                ; preds = %1
  tail call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
  ret void

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
          to label %6 unwind label %7

6:                                                ; preds = %4
  resume { ptr, i32 } %5

7:                                                ; preds = %4
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  tail call void @__clang_call_terminate(ptr %9) #22
  unreachable
}

declare void @_ZN6dealii11SubscriptorC2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #2

declare void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72)) unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdED0Ev(ptr noundef nonnull align 8 dereferenceable(88) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !136
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #21
  store ptr null, ptr %2, align 8, !tbaa !136
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdE6reinitEjb(ptr noundef nonnull align 8 dereferenceable(88) %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #3 comdat align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !136
  %8 = icmp eq ptr %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZdaPv(ptr noundef nonnull %7) #21
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !138
  %15 = icmp ult i32 %14, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !136
  %19 = icmp eq ptr %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZdaPv(ptr noundef nonnull %18) #21
  br label %21

21:                                               ; preds = %20, %16
  %22 = zext i32 %1 to i64
  %23 = shl nuw nsw i64 %22, 3
  %24 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %23) #20
  store ptr %24, ptr %17, align 8, !tbaa !136
  store i32 %1, ptr %13, align 4, !tbaa !138
  br label %25

25:                                               ; preds = %21, %12
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  store i32 %1, ptr %26, align 8, !tbaa !139
  br i1 %2, label %32, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !136
  %30 = zext i32 %1 to i64
  %31 = shl nuw nsw i64 %30, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %29, i8 0, i64 %31, i1 false), !tbaa !133
  br label %32

32:                                               ; preds = %27, %10, %25
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii6VectorIdE4swapERS1_(ptr noundef nonnull align 8 dereferenceable(88) %0, ptr noundef nonnull align 8 dereferenceable(88) %1) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 1
  %5 = load i32, ptr %3, align 8, !tbaa !59
  %6 = load i32, ptr %4, align 8, !tbaa !59
  store i32 %6, ptr %3, align 8, !tbaa !59
  store i32 %5, ptr %4, align 8, !tbaa !59
  %7 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 2
  %9 = load i32, ptr %7, align 4, !tbaa !59
  %10 = load i32, ptr %8, align 4, !tbaa !59
  store i32 %10, ptr %7, align 4, !tbaa !59
  store i32 %9, ptr %8, align 4, !tbaa !59
  %11 = getelementptr inbounds %"class.dealii::Vector", ptr %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %11, align 8, !tbaa !33
  %14 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %14, ptr %11, align 8, !tbaa !33
  store ptr %13, ptr %12, align 8, !tbaa !33
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #5

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #7

declare void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(88)) unnamed_addr #2

declare void @_ZN6dealii12SparseMatrixIdE3addIdEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36), i32 noundef, i32 noundef, ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EdED2Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #3 comdat align 2 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::TableBase", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !140
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EdED0Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EdEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::TableBase", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !140
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %9
}

declare void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #2

declare void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648)) unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii8FEValuesILi3ELi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(776) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii8FEValuesILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::FEValues", ptr %0, i64 0, i32 1
  invoke void @_ZN6dealii10QuadratureILi3EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2)
          to label %3 unwind label %4

3:                                                ; preds = %1
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
          to label %9 unwind label %10

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
          to label %12 unwind label %6

6:                                                ; preds = %4
  %7 = landingpad { ptr, i32 }
          catch ptr null
  %8 = extractvalue { ptr, i32 } %7, 0
  tail call void @__clang_call_terminate(ptr %8) #22
  unreachable

9:                                                ; preds = %3
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

10:                                               ; preds = %3
  %11 = landingpad { ptr, i32 }
          cleanup
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi { ptr, i32 } [ %11, %10 ], [ %5, %4 ]
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %13
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSW_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(199) @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SS_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SS_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) #0 comdat align 2 {
  %9 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  %11 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %6, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  store ptr %12, ptr %13, align 8, !tbaa !17
  %14 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  call void %10(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %9, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIdEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSU_IS9_EENSU_ISD_EENSU_ISG_EESL_SO_NSU_ISQ_EEEENS_3_bi6bind_tINS10_11unspecifiedET_NS10_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES13_S15_S16_S17_S18_S19_S1A_S1B_(ptr noalias sret(%"class.boost::_bi::bind_t") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, ptr noundef %6, ptr noundef %7, i64 %8) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function", align 8
  %11 = alloca %"class.dealii::TriaAccessorBase", align 8
  %12 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %10, align 8, !tbaa !25
  %13 = load ptr, ptr %1, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  store ptr %13, ptr %10, align 8, !tbaa !25
  %16 = load ptr, ptr %13, align 8, !tbaa !227
  %17 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %16(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr noundef nonnull align 8 dereferenceable(24) %18, i32 noundef 0)
  %19 = load ptr, ptr %10, align 8, !tbaa !25
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi ptr [ null, %9 ], [ %19, %15 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %24, i64 16, i1 false)
  store ptr null, ptr %0, align 8, !tbaa !25
  %27 = icmp eq ptr %21, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  store ptr %21, ptr %0, align 8, !tbaa !25
  %29 = load ptr, ptr %21, align 8, !tbaa !227
  %30 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  %31 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %29(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %31, i32 noundef 0)
          to label %32 unwind label %53

32:                                               ; preds = %28
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  br label %34

34:                                               ; preds = %32, %20
  %35 = phi ptr [ %33, %32 ], [ null, %20 ]
  %36 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1
  store ptr %2, ptr %36, align 8
  %37 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %37, align 8
  %38 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %38, align 8
  %39 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %39, align 8
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %6, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, ptr noundef nonnull align 8 dereferenceable(16) %11, i64 16, i1 false)
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %42, align 8, !tbaa !17
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %26, ptr %44, align 8, !tbaa !17
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %8, ptr %45, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %46 = icmp eq ptr %35, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %34
  %48 = load ptr, ptr %35, align 8, !tbaa !27
  %49 = icmp eq ptr %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(24) %51, i32 noundef 2)
  br label %52

52:                                               ; preds = %47, %50, %34
  ret void

53:                                               ; preds = %28
  %54 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %55 = load ptr, ptr %10, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = load ptr, ptr %55, align 8, !tbaa !27
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  invoke void %58(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %30, i32 noundef 2)
          to label %61 unwind label %62

61:                                               ; preds = %57, %60, %53
  resume { ptr, i32 } %54

62:                                               ; preds = %60
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  call void @__clang_call_terminate(ptr %64) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS4_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !27
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !27
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads6ThreadIvEC2ERKN5boost8functionIFvvEEE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(32) %1) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = tail call noalias noundef nonnull dereferenceable(1) ptr @_Znwm(i64 noundef 1) #20
  store i8 0, ptr %3, align 1
  store ptr %3, ptr %0, align 8, !tbaa !644
  %4 = getelementptr inbounds %"class.boost::shared_ptr", ptr %0, i64 0, i32 1
  store ptr null, ptr %4, align 8, !tbaa !39
  %5 = invoke noalias noundef nonnull dereferenceable(32) ptr @_Znwm(i64 noundef 32) #20
          to label %18 unwind label %6

6:                                                ; preds = %2
  %7 = landingpad { ptr, i32 }
          catch ptr null
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = tail call ptr @__cxa_begin_catch(ptr %8) #19
  tail call void @_ZdlPv(ptr noundef nonnull %3) #21
  invoke void @__cxa_rethrow() #23
          to label %17 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %12 unwind label %14

12:                                               ; preds = %23, %10
  %13 = phi { ptr, i32 } [ %11, %10 ], [ %24, %23 ]
  resume { ptr, i32 } %13

14:                                               ; preds = %10
  %15 = landingpad { ptr, i32 }
          catch ptr null
  %16 = extractvalue { ptr, i32 } %15, 0
  tail call void @__clang_call_terminate(ptr %16) #22
  unreachable

17:                                               ; preds = %6
  unreachable

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %5, i64 0, i32 1
  store i64 1, ptr %19, align 8, !tbaa !34
  %20 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %5, i64 0, i32 2
  store i64 1, ptr %20, align 8, !tbaa !43
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTVN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !41
  %21 = getelementptr inbounds %"class.boost::detail::sp_counted_impl_p", ptr %5, i64 0, i32 1
  store ptr %3, ptr %21, align 8, !tbaa !646
  store ptr %5, ptr %4, align 8, !tbaa !39
  invoke void @_ZNK5boost9function0IvEclEv(ptr noundef nonnull align 8 dereferenceable(32) %1)
          to label %22 unwind label %23

22:                                               ; preds = %18
  ret void

23:                                               ; preds = %18
  %24 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN5boost10shared_ptrIN6dealii7Threads8internal16ThreadDescriptorIvEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0)
          to label %12 unwind label %25

25:                                               ; preds = %23
  %26 = landingpad { ptr, i32 }
          catch ptr null
  %27 = extractvalue { ptr, i32 } %26, 0
  tail call void @__clang_call_terminate(ptr %27) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !27
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !27
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %11, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !27
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !27
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE6manageERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE7managerERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !648
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !650
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !652
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !654
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !33
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %2, i64 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !656
  call void @_ZNK5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SQ_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(72) %5, ptr noundef nonnull align 8 dereferenceable(168) %7, ptr noundef nonnull align 8 dereferenceable(128) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef %13, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %24)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !27
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !27
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE7managerERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %15, ptr noundef nonnull align 8 dereferenceable(40) %16, i64 40, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !27
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(366) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SQ_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.boost::bad_function_call", align 8
  %12 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %13 = load ptr, ptr %0, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %45

15:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %16, ptr %10, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #19
  store i64 29, ptr %9, align 8, !tbaa !56
  %17 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
  store ptr %17, ptr %10, align 8, !tbaa !660
  %18 = load i64, ptr %9, align 8, !tbaa !56
  store i64 %18, ptr %16, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %17, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 %18, ptr %19, align 8, !tbaa !662
  %20 = load ptr, ptr %10, align 8, !tbaa !660
  %21 = getelementptr inbounds i8, ptr %20, i64 %18
  store i8 0, ptr %21, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %22 unwind label %29

22:                                               ; preds = %15
  %23 = load ptr, ptr %10, align 8, !tbaa !660
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i64, ptr %19, align 8, !tbaa !662
  %27 = icmp ult i64 %26, 16
  call void @llvm.assume(i1 %27)
  br label %40

28:                                               ; preds = %22
  call void @_ZdlPv(ptr noundef %23) #21
  br label %40

29:                                               ; preds = %15
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = load ptr, ptr %10, align 8, !tbaa !660
  %32 = icmp eq ptr %31, %16
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load i64, ptr %19, align 8, !tbaa !662
  %35 = icmp ult i64 %34, 16
  call void @llvm.assume(i1 %35)
  br label %39

36:                                               ; preds = %29
  call void @_ZdlPv(ptr noundef %31) #21
  br label %39

37:                                               ; preds = %43, %39
  %38 = phi { ptr, i32 } [ %30, %39 ], [ %44, %43 ]
  resume { ptr, i32 } %38

39:                                               ; preds = %36, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  br label %37

40:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %11)
          to label %41 unwind label %43

41:                                               ; preds = %40
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  %42 = load ptr, ptr %0, align 8, !tbaa !25
  br label %45

43:                                               ; preds = %40
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  br label %37

45:                                               ; preds = %41, %8
  %46 = phi ptr [ %42, %41 ], [ %13, %8 ]
  %47 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable7", ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !663
  %49 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %6, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %12, i64 0, i32 1
  store ptr %51, ptr %52, align 8, !tbaa !17
  %53 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %53, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %56, ptr %57, align 8, !tbaa !17
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %49, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %12, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %0) local_unnamed_addr #3 comdat personality ptr @__gxx_personality_v0 {
  %2 = alloca %"struct.boost::exception_detail::error_info_injector", align 8
  %3 = tail call ptr @__cxa_allocate_exception(i64 64) #19
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %2) #19
  call void @_ZNSt13runtime_errorC2ERKS_(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  %4 = getelementptr inbounds i8, ptr %2, i64 16
  %5 = getelementptr inbounds i8, ptr %2, i64 24
  %6 = getelementptr inbounds i8, ptr %2, i64 48
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, i8 0, i64 24, i1 false), !alias.scope !664
  store i32 -1, ptr %6, align 8, !tbaa !667, !alias.scope !664
  store ptr getelementptr inbounds ({ [5 x ptr], [4 x ptr] }, ptr @_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41, !alias.scope !664
  store ptr getelementptr inbounds ({ [5 x ptr], [4 x ptr] }, ptr @_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE, i64 0, inrange i32 1, i64 2), ptr %4, align 8, !tbaa !41, !alias.scope !664
  call void @llvm.experimental.noalias.scope.decl(metadata !670)
  call void @_ZNSt13runtime_errorC2ERKS_(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(16) %2) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41, !alias.scope !670
  %7 = getelementptr inbounds i8, ptr %3, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !41, !alias.scope !670
  %8 = getelementptr inbounds i8, ptr %3, i64 24
  %9 = load ptr, ptr %5, align 8, !tbaa !673, !noalias !670
  store ptr %9, ptr %8, align 8, !tbaa !673, !alias.scope !670
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = getelementptr inbounds i8, ptr %3, i64 32
  %13 = getelementptr inbounds i8, ptr %2, i64 32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %12, ptr noundef nonnull align 8 dereferenceable(20) %13, i64 20, i1 false)
  %14 = getelementptr inbounds i8, ptr %3, i64 56
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41, !alias.scope !670
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 1, i64 2), ptr %7, align 8, !tbaa !41, !alias.scope !670
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 2, i64 2), ptr %14, align 8, !tbaa !41, !alias.scope !670
  store ptr null, ptr %8, align 8, !tbaa !673, !alias.scope !670
  br label %49

15:                                               ; preds = %1
  %16 = load ptr, ptr %9, align 8, !tbaa !41
  %17 = getelementptr inbounds ptr, ptr %16, i64 3
  %18 = load ptr, ptr %17, align 8
  invoke void %18(ptr noundef nonnull align 8 dereferenceable(8) %9)
          to label %21 unwind label %19

19:                                               ; preds = %15
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %54

21:                                               ; preds = %15
  %22 = load ptr, ptr %8, align 8, !tbaa !673, !alias.scope !670
  %23 = load ptr, ptr %5, align 8, !tbaa !673, !noalias !670
  %24 = getelementptr inbounds i8, ptr %3, i64 32
  %25 = getelementptr inbounds i8, ptr %2, i64 32
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %24, ptr noundef nonnull align 8 dereferenceable(20) %25, i64 20, i1 false)
  %26 = getelementptr inbounds i8, ptr %3, i64 56
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41, !alias.scope !670
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 1, i64 2), ptr %7, align 8, !tbaa !41, !alias.scope !670
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 2, i64 2), ptr %26, align 8, !tbaa !41, !alias.scope !670
  %27 = icmp eq ptr %22, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = load ptr, ptr %22, align 8, !tbaa !41
  %30 = getelementptr inbounds ptr, ptr %29, i64 4
  %31 = load ptr, ptr %30, align 8
  invoke void %31(ptr noundef nonnull align 8 dereferenceable(8) %22)
          to label %32 unwind label %38

32:                                               ; preds = %28, %21
  store ptr %23, ptr %8, align 8, !tbaa !673, !alias.scope !670
  %33 = icmp eq ptr %23, null
  br i1 %33, label %49, label %34

34:                                               ; preds = %32
  %35 = load ptr, ptr %23, align 8, !tbaa !41
  %36 = getelementptr inbounds ptr, ptr %35, i64 3
  %37 = load ptr, ptr %36, align 8
  invoke void %37(ptr noundef nonnull align 8 dereferenceable(8) %23)
          to label %49 unwind label %38

38:                                               ; preds = %34, %28
  %39 = landingpad { ptr, i32 }
          cleanup
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !41, !alias.scope !670
  %40 = load ptr, ptr %8, align 8, !tbaa !673, !alias.scope !670
  %41 = icmp eq ptr %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !41
  %44 = getelementptr inbounds ptr, ptr %43, i64 4
  %45 = load ptr, ptr %44, align 8
  invoke void %45(ptr noundef nonnull align 8 dereferenceable(8) %40)
          to label %54 unwind label %46

46:                                               ; preds = %42
  %47 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__cxa_call_unexpected(ptr %48) #22
  unreachable

49:                                               ; preds = %34, %32, %11
  %50 = phi ptr [ %12, %11 ], [ %24, %32 ], [ %24, %34 ]
  %51 = phi ptr [ %13, %11 ], [ %25, %32 ], [ %25, %34 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %50, ptr noundef nonnull align 8 dereferenceable(20) %51, i64 20, i1 false)
  invoke void @__cxa_throw(ptr nonnull %3, ptr nonnull @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, ptr nonnull @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev) #23
          to label %58 unwind label %52

52:                                               ; preds = %49
  %53 = landingpad { ptr, i32 }
          cleanup
  call void @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev(ptr noundef nonnull align 8 dereferenceable(52) %2) #19
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %2) #19
  br label %56

54:                                               ; preds = %42, %38, %19
  %55 = phi { ptr, i32 } [ %20, %19 ], [ %39, %38 ], [ %39, %42 ]
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %3) #19
  call void @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev(ptr noundef nonnull align 8 dereferenceable(52) %2) #19
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %2) #19
  call void @__cxa_free_exception(ptr nonnull %3) #19
  br label %56

56:                                               ; preds = %52, %54
  %57 = phi { ptr, i32 } [ %53, %52 ], [ %55, %54 ]
  resume { ptr, i32 } %57

58:                                               ; preds = %49
  unreachable
}

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #11

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 24
  %4 = load ptr, ptr %3, align 8, !tbaa !673
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !41
  %8 = getelementptr inbounds ptr, ptr %7, i64 4
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %13 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__cxa_call_unexpected(ptr %12) #22
  unreachable

13:                                               ; preds = %1, %6
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  ret void
}

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev(ptr noundef nonnull align 8 dereferenceable(52) %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 24
  %4 = load ptr, ptr %3, align 8, !tbaa !673
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !41
  %8 = getelementptr inbounds ptr, ptr %7, i64 4
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %13 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__cxa_call_unexpected(ptr %12) #22
  unreachable

13:                                               ; preds = %1, %6
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  ret void
}

declare void @__cxa_free_exception(ptr) local_unnamed_addr

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 24
  %4 = load ptr, ptr %3, align 8, !tbaa !673
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !41
  %8 = getelementptr inbounds ptr, ptr %7, i64 4
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %13 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__cxa_call_unexpected(ptr %12) #22
  unreachable

13:                                               ; preds = %1, %6
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void
}

; Function Attrs: nounwind
declare noundef ptr @_ZNKSt13runtime_error4whatEv(ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #11

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = tail call noalias noundef nonnull dereferenceable(64) ptr @_Znwm(i64 noundef 64) #20
  tail call void @_ZNSt13runtime_errorC2ERKS_(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %2, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41
  %4 = getelementptr inbounds i8, ptr %2, i64 24
  %5 = getelementptr inbounds i8, ptr %0, i64 24
  %6 = load ptr, ptr %5, align 8, !tbaa !673
  store ptr %6, ptr %4, align 8, !tbaa !673
  %7 = icmp eq ptr %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = load ptr, ptr %6, align 8, !tbaa !41
  %10 = getelementptr inbounds ptr, ptr %9, i64 3
  %11 = load ptr, ptr %10, align 8
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(8) %6)
          to label %14 unwind label %12

12:                                               ; preds = %8
  %13 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %2) #19
  tail call void @_ZdlPv(ptr noundef nonnull %2) #21
  resume { ptr, i32 } %13

14:                                               ; preds = %8, %1
  %15 = getelementptr inbounds i8, ptr %2, i64 32
  %16 = getelementptr inbounds i8, ptr %0, i64 32
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %15, ptr noundef nonnull align 8 dereferenceable(20) %16, i64 20, i1 false)
  %17 = getelementptr inbounds i8, ptr %2, i64 56
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 1, i64 2), ptr %3, align 8, !tbaa !41
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 2, i64 2), ptr %17, align 8, !tbaa !41
  ret ptr %17
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(ptr noundef nonnull align 8 dereferenceable(64) %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 64) #19
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC2ERKS5_(ptr noundef nonnull align 8 dereferenceable(64) %2, ptr noundef nonnull align 8 dereferenceable(64) %0)
          to label %3 unwind label %4

3:                                                ; preds = %1
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, ptr nonnull @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev) #23
  unreachable

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %2) #19
  resume { ptr, i32 } %5
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(ptr noundef %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8, !tbaa !673
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !41
  %7 = getelementptr inbounds ptr, ptr %6, i64 4
  %8 = load ptr, ptr %7, align 8
  invoke void %8(ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %12 unwind label %9

9:                                                ; preds = %5
  %10 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %11 = extractvalue { ptr, i32 } %10, 0
  tail call void @__cxa_call_unexpected(ptr %11) #22
  unreachable

12:                                               ; preds = %1, %5
  %13 = getelementptr inbounds i8, ptr %0, i64 -16
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZThn16_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(ptr noundef %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8, !tbaa !673
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !41
  %7 = getelementptr inbounds ptr, ptr %6, i64 4
  %8 = load ptr, ptr %7, align 8
  invoke void %8(ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %12 unwind label %9

9:                                                ; preds = %5
  %10 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %11 = extractvalue { ptr, i32 } %10, 0
  tail call void @__cxa_call_unexpected(ptr %11) #22
  unreachable

12:                                               ; preds = %1, %5
  %13 = getelementptr inbounds i8, ptr %0, i64 -16
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  tail call void @_ZdlPv(ptr noundef nonnull %13) #21
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZThn56_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 -56
  %3 = tail call noalias noundef nonnull dereferenceable(64) ptr @_Znwm(i64 noundef 64) #20
  tail call void @_ZNSt13runtime_errorC2ERKS_(ptr noundef nonnull align 8 dereferenceable(16) %3, ptr noundef nonnull align 8 dereferenceable(16) %2) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41
  %4 = getelementptr inbounds i8, ptr %3, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !41
  %5 = getelementptr inbounds i8, ptr %3, i64 24
  %6 = getelementptr inbounds i8, ptr %0, i64 -32
  %7 = load ptr, ptr %6, align 8, !tbaa !673
  store ptr %7, ptr %5, align 8, !tbaa !673
  %8 = icmp eq ptr %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = load ptr, ptr %7, align 8, !tbaa !41
  %11 = getelementptr inbounds ptr, ptr %10, i64 3
  %12 = load ptr, ptr %11, align 8
  invoke void %12(ptr noundef nonnull align 8 dereferenceable(8) %7)
          to label %15 unwind label %13

13:                                               ; preds = %9
  %14 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %3) #19
  tail call void @_ZdlPv(ptr noundef nonnull %3) #21
  resume { ptr, i32 } %14

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds i8, ptr %3, i64 32
  %17 = getelementptr inbounds i8, ptr %0, i64 -24
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %16, ptr noundef nonnull align 8 dereferenceable(20) %17, i64 20, i1 false)
  %18 = getelementptr inbounds i8, ptr %3, i64 56
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 1, i64 2), ptr %4, align 8, !tbaa !41
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 2, i64 2), ptr %18, align 8, !tbaa !41
  ret ptr %18
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZThn56_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(ptr noundef %0) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 -56
  %3 = tail call ptr @__cxa_allocate_exception(i64 64) #19
  invoke void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC2ERKS5_(ptr noundef nonnull align 8 dereferenceable(64) %3, ptr noundef nonnull align 8 dereferenceable(64) %2)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(ptr nonnull %3, ptr nonnull @_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, ptr nonnull @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev) #23
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_free_exception(ptr %3) #19
  resume { ptr, i32 } %6
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZThn56_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(ptr noundef %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 -40
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 -32
  %4 = load ptr, ptr %3, align 8, !tbaa !673
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !41
  %8 = getelementptr inbounds ptr, ptr %7, i64 4
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %13 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__cxa_call_unexpected(ptr %12) #22
  unreachable

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds i8, ptr %0, i64 -56
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14) #19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZThn56_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(ptr noundef %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 -40
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 -32
  %4 = load ptr, ptr %3, align 8, !tbaa !673
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !41
  %8 = getelementptr inbounds ptr, ptr %7, i64 4
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %13 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__cxa_call_unexpected(ptr %12) #22
  unreachable

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds i8, ptr %0, i64 -56
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %14) #19
  tail call void @_ZdlPv(ptr noundef nonnull %14) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(ptr noundef nonnull align 8 dereferenceable(52) %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 24
  %4 = load ptr, ptr %3, align 8, !tbaa !673
  %5 = icmp eq ptr %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !41
  %8 = getelementptr inbounds ptr, ptr %7, i64 4
  %9 = load ptr, ptr %8, align 8
  invoke void %9(ptr noundef nonnull align 8 dereferenceable(8) %4)
          to label %13 unwind label %10

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  tail call void @__cxa_call_unexpected(ptr %12) #22
  unreachable

13:                                               ; preds = %1, %6
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(ptr noundef %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8, !tbaa !673
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !41
  %7 = getelementptr inbounds ptr, ptr %6, i64 4
  %8 = load ptr, ptr %7, align 8
  invoke void %8(ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %12 unwind label %9

9:                                                ; preds = %5
  %10 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %11 = extractvalue { ptr, i32 } %10, 0
  tail call void @__cxa_call_unexpected(ptr %11) #22
  unreachable

12:                                               ; preds = %1, %5
  %13 = getelementptr inbounds i8, ptr %0, i64 -16
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZThn16_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(ptr noundef %0) unnamed_addr #12 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8, !tbaa !673
  %4 = icmp eq ptr %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 8, !tbaa !41
  %7 = getelementptr inbounds ptr, ptr %6, i64 4
  %8 = load ptr, ptr %7, align 8
  invoke void %8(ptr noundef nonnull align 8 dereferenceable(8) %3)
          to label %12 unwind label %9

9:                                                ; preds = %5
  %10 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %11 = extractvalue { ptr, i32 } %10, 0
  tail call void @__cxa_call_unexpected(ptr %11) #22
  unreachable

12:                                               ; preds = %1, %5
  %13 = getelementptr inbounds i8, ptr %0, i64 -16
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  tail call void @_ZdlPv(ptr noundef nonnull %13) #21
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorC2ERKS_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(16)) unnamed_addr #11

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost17bad_function_callD0Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #13 comdat align 2 {
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @__cxa_call_unexpected(ptr) local_unnamed_addr

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEC2ERKS5_(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %1) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZNSt13runtime_errorC2ERKS_(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN5boost9exceptionE, i64 0, inrange i32 0, i64 2), ptr %3, align 8, !tbaa !41
  %4 = getelementptr inbounds i8, ptr %0, i64 24
  %5 = getelementptr inbounds i8, ptr %1, i64 24
  %6 = load ptr, ptr %5, align 8, !tbaa !673
  store ptr %6, ptr %4, align 8, !tbaa !673
  %7 = icmp eq ptr %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = load ptr, ptr %6, align 8, !tbaa !41
  %10 = getelementptr inbounds ptr, ptr %9, i64 3
  %11 = load ptr, ptr %10, align 8
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(8) %6)
          to label %14 unwind label %12

12:                                               ; preds = %8
  %13 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) #19
  resume { ptr, i32 } %13

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds i8, ptr %0, i64 32
  %16 = getelementptr inbounds i8, ptr %1, i64 32
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %15, ptr noundef nonnull align 8 dereferenceable(20) %16, i64 20, i1 false)
  %17 = getelementptr inbounds i8, ptr %0, i64 56
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 1, i64 2), ptr %3, align 8, !tbaa !41
  store ptr getelementptr inbounds ({ [7 x ptr], [4 x ptr], [6 x ptr] }, ptr @_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE, i64 0, inrange i32 2, i64 2), ptr %17, align 8, !tbaa !41
  ret void
}

declare void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef nonnull align 8 dereferenceable(32)) unnamed_addr #2

declare noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32), ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !17
  %37 = load ptr, ptr %23, align 8, !tbaa !17
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %47, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !17
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !27
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !27
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #14

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail15sp_counted_baseD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #12 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEED0Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEE7disposeEv(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::detail::sp_counted_impl_p", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !646
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %3) #21
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail15sp_counted_base7destroyEv(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #0 comdat align 2 {
  %2 = load ptr, ptr %0, align 8, !tbaa !41
  %3 = getelementptr inbounds ptr, ptr %2, i64 1
  %4 = load ptr, ptr %3, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(24) %0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEE11get_deleterERKSt9type_info(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(16) %1) unnamed_addr #12 comdat align 2 {
  ret ptr null
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function0IvEclEv(ptr noundef nonnull align 8 dereferenceable(32) %0) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca %"class.boost::bad_function_call", align 8
  %5 = load ptr, ptr %0, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %37

7:                                                ; preds = %1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #19
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 2
  store ptr %8, ptr %3, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #19
  store i64 29, ptr %2, align 8, !tbaa !56
  %9 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(8) %2, i64 noundef 0)
  store ptr %9, ptr %3, align 8, !tbaa !660
  %10 = load i64, ptr %2, align 8, !tbaa !56
  store i64 %10, ptr %8, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %9, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %3, i64 0, i32 1
  store i64 %10, ptr %11, align 8, !tbaa !662
  %12 = load ptr, ptr %3, align 8, !tbaa !660
  %13 = getelementptr inbounds i8, ptr %12, i64 %10
  store i8 0, ptr %13, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %4, ptr noundef nonnull align 8 dereferenceable(32) %3)
          to label %14 unwind label %21

14:                                               ; preds = %7
  %15 = load ptr, ptr %3, align 8, !tbaa !660
  %16 = icmp eq ptr %15, %8
  br i1 %16, label %17, label %20

17:                                               ; preds = %14
  %18 = load i64, ptr %11, align 8, !tbaa !662
  %19 = icmp ult i64 %18, 16
  call void @llvm.assume(i1 %19)
  br label %32

20:                                               ; preds = %14
  call void @_ZdlPv(ptr noundef %15) #21
  br label %32

21:                                               ; preds = %7
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = load ptr, ptr %3, align 8, !tbaa !660
  %24 = icmp eq ptr %23, %8
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = load i64, ptr %11, align 8, !tbaa !662
  %27 = icmp ult i64 %26, 16
  call void @llvm.assume(i1 %27)
  br label %31

28:                                               ; preds = %21
  call void @_ZdlPv(ptr noundef %23) #21
  br label %31

29:                                               ; preds = %35, %31
  %30 = phi { ptr, i32 } [ %22, %31 ], [ %36, %35 ]
  resume { ptr, i32 } %30

31:                                               ; preds = %28, %25
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #19
  br label %29

32:                                               ; preds = %17, %20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %4, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %4)
          to label %33 unwind label %35

33:                                               ; preds = %32
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #19
  %34 = load ptr, ptr %0, align 8, !tbaa !25
  br label %37

35:                                               ; preds = %32
  %36 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %4) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #19
  br label %29

37:                                               ; preds = %33, %1
  %38 = phi ptr [ %34, %33 ], [ %5, %1 ]
  %39 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable0", ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !674
  %41 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  call void %40(ptr noundef nonnull align 8 dereferenceable(24) %41)
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(ptr noundef nonnull align 8 dereferenceable(16), ptr noundef) local_unnamed_addr #11

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK6dealii7Threads6ThreadIvE4joinEv(ptr noundef nonnull align 8 dereferenceable(16) %0) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = alloca %"class.dealii::Threads::Thread<>::ExcNoThread", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !644
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %2, i8 0, i64 64, i1 false)
  call void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60) %2)
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii7Threads6ThreadIvE11ExcNoThreadE, i64 0, inrange i32 0, i64 2), ptr %2, align 8, !tbaa !41
  invoke void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60) %2, ptr noundef nonnull @.str.12, i32 noundef 1504, ptr noundef nonnull @.str.13, ptr noundef nonnull @.str.14, ptr noundef nonnull @.str.15)
          to label %6 unwind label %12

6:                                                ; preds = %5
  %7 = call ptr @__cxa_allocate_exception(i64 64) #19
  invoke void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60) %7, ptr noundef nonnull align 8 dereferenceable(60) %2)
          to label %8 unwind label %10

8:                                                ; preds = %6
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii7Threads6ThreadIvE11ExcNoThreadE, i64 0, inrange i32 0, i64 2), ptr %7, align 8, !tbaa !41
  invoke void @__cxa_throw(ptr nonnull %7, ptr nonnull @_ZTIN6dealii7Threads6ThreadIvE11ExcNoThreadE, ptr nonnull @_ZN6dealii13ExceptionBaseD2Ev) #23
          to label %9 unwind label %12

9:                                                ; preds = %8
  unreachable

10:                                               ; preds = %6
  %11 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_free_exception(ptr %7) #19
  br label %14

12:                                               ; preds = %8, %5
  %13 = landingpad { ptr, i32 }
          cleanup
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi { ptr, i32 } [ %13, %12 ], [ %11, %10 ]
  call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %2) #19
  resume { ptr, i32 } %15

16:                                               ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #11

declare void @_ZN6dealii13ExceptionBase10set_fieldsEPKciS2_S2_S2_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @_ZN6dealii13ExceptionBaseC2ERKS0_(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #2

; Function Attrs: inlinehint nounwind sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii7Threads6ThreadIvE11ExcNoThreadD0Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) unnamed_addr #13 comdat align 2 {
  tail call void @_ZN6dealii13ExceptionBaseD2Ev(ptr noundef nonnull align 8 dereferenceable(60) %0) #19
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void
}

; Function Attrs: nounwind
declare noundef ptr @_ZNK6dealii13ExceptionBase4whatEv(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #11

declare void @_ZNK6dealii13ExceptionBase10print_infoERSo(ptr noundef nonnull align 8 dereferenceable(60), ptr noundef nonnull align 8 dereferenceable(8)) unnamed_addr #2

declare void @_ZN6dealii13ExceptionBaseC2Ev(ptr noundef nonnull align 8 dereferenceable(60)) unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS10_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(218) @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SQ_ST_SW_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SQ_ST_SW_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) #0 comdat align 2 {
  %11 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %12 = load ptr, ptr %0, align 8, !tbaa !30
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %8, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %11, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !17
  call void %12(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %11, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIdEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSK_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSY_IS9_EENSY_ISD_EENSY_ISG_EENSY_ISK_EENSY_ISN_EESP_SS_NSY_ISU_EEEENS_3_bi6bind_tINS16_11unspecifiedET_NS16_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES19_S1B_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_(ptr noalias sret(%"class.boost::_bi::bind_t.276") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, i64 %6, i64 %7, ptr noundef %8, ptr noundef %9, i64 %10) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.35", align 8
  %13 = alloca %"class.dealii::TriaAccessorBase", align 8
  %14 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %12, align 8, !tbaa !25
  %15 = load ptr, ptr %1, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  store ptr %15, ptr %12, align 8, !tbaa !25
  %18 = load ptr, ptr %15, align 8, !tbaa !227
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %18(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef 0)
  %21 = load ptr, ptr %12, align 8, !tbaa !25
  br label %22

22:                                               ; preds = %11, %17
  %23 = phi ptr [ null, %11 ], [ %21, %17 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  %24 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %26, i64 16, i1 false)
  %29 = inttoptr i64 %6 to ptr
  %30 = inttoptr i64 %7 to ptr
  store ptr null, ptr %0, align 8, !tbaa !25
  %31 = icmp eq ptr %23, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %22
  store ptr %23, ptr %0, align 8, !tbaa !25
  %33 = load ptr, ptr %23, align 8, !tbaa !227
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %33(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 0)
          to label %36 unwind label %59

36:                                               ; preds = %32
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  br label %38

38:                                               ; preds = %36, %22
  %39 = phi ptr [ %37, %36 ], [ null, %22 ]
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1
  store ptr %2, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %41, align 8
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %42, align 8
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %43, align 8
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %44, align 8
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %45, align 8
  %46 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %8, ptr %46, align 8
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %47, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %48, align 8, !tbaa !17
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %28, ptr %50, align 8, !tbaa !17
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %10, ptr %51, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %52 = icmp eq ptr %39, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %38
  %54 = load ptr, ptr %39, align 8, !tbaa !236
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %38
  ret void

59:                                               ; preds = %32
  %60 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %61 = load ptr, ptr %12, align 8, !tbaa !25
  %62 = icmp eq ptr %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %61, align 8, !tbaa !236
  %65 = icmp eq ptr %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  invoke void %64(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
          to label %67 unwind label %68

67:                                               ; preds = %63, %66, %59
  resume { ptr, i32 } %60

68:                                               ; preds = %66
  %69 = landingpad { ptr, i32 }
          catch ptr null
  %70 = extractvalue { ptr, i32 } %69, 0
  call void @__clang_call_terminate(ptr %70) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS4_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.276", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !236
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !236
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.276", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !236
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !236
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.276", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %11, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !236
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !236
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE6manageERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE7managerERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !648
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !650
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !652
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !654
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !675
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !677
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !33
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %2, i64 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %3, i64 0, i32 1, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !656
  call void @_ZNK5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SO_SR_SU_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(72) %5, ptr noundef nonnull align 8 dereferenceable(168) %7, ptr noundef nonnull align 8 dereferenceable(128) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef nonnull align 8 dereferenceable(92) %13, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef %17, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %28)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.276", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !236
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !236
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE7managerERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %15, ptr noundef nonnull align 8 dereferenceable(56) %16, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !236
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(412) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SO_SR_SU_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.boost::bad_function_call", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %15 = load ptr, ptr %0, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %47

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %18, ptr %12, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #19
  store i64 29, ptr %11, align 8, !tbaa !56
  %19 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
  store ptr %19, ptr %12, align 8, !tbaa !660
  %20 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %20, ptr %18, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %19, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !662
  %22 = load ptr, ptr %12, align 8, !tbaa !660
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %24 unwind label %31

24:                                               ; preds = %17
  %25 = load ptr, ptr %12, align 8, !tbaa !660
  %26 = icmp eq ptr %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i64, ptr %21, align 8, !tbaa !662
  %29 = icmp ult i64 %28, 16
  call void @llvm.assume(i1 %29)
  br label %42

30:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #21
  br label %42

31:                                               ; preds = %17
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %12, align 8, !tbaa !660
  %34 = icmp eq ptr %33, %18
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load i64, ptr %21, align 8, !tbaa !662
  %37 = icmp ult i64 %36, 16
  call void @llvm.assume(i1 %37)
  br label %41

38:                                               ; preds = %31
  call void @_ZdlPv(ptr noundef %33) #21
  br label %41

39:                                               ; preds = %45, %41
  %40 = phi { ptr, i32 } [ %32, %41 ], [ %46, %45 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %38, %35
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  br label %39

42:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %43 unwind label %45

43:                                               ; preds = %42
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  %44 = load ptr, ptr %0, align 8, !tbaa !25
  br label %47

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  br label %39

47:                                               ; preds = %43, %10
  %48 = phi ptr [ %44, %43 ], [ %15, %10 ]
  %49 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable9", ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !679
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %8, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !17
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !17
  call void %50(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.276", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !17
  %37 = load ptr, ptr %23, align 8, !tbaa !17
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %47, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !17
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.276", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !236
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !236
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

declare void @_ZN6dealii10FullMatrixIfEC1Ejj(ptr noundef nonnull align 8 dereferenceable(92), i32 noundef, i32 noundef) unnamed_addr #2

declare void @_ZN6dealii12SparseMatrixIfE3addIfEEvjjPKjPKT_bb(ptr noundef nonnull align 8 dereferenceable(36), i32 noundef, i32 noundef, ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EfED2Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #3 comdat align 2 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !280
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi2EfED0Ev(ptr noundef nonnull align 8 dereferenceable(92) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi2EfEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::TableBase.284", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !280
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(ptr noundef nonnull %3) #21
  br label %6

6:                                                ; preds = %5, %1
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %7 unwind label %8

7:                                                ; preds = %6
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

8:                                                ; preds = %6
  %9 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %9
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSW_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(199) @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SS_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SS_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) #0 comdat align 2 {
  %9 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  %11 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %6, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  store ptr %12, ptr %13, align 8, !tbaa !17
  %14 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  call void %10(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %9, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIfEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSU_IS9_EENSU_ISD_EENSU_ISG_EESL_SO_NSU_ISQ_EEEENS_3_bi6bind_tINS10_11unspecifiedET_NS10_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES13_S15_S16_S17_S18_S19_S1A_S1B_(ptr noalias sret(%"class.boost::_bi::bind_t.288") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, ptr noundef %6, ptr noundef %7, i64 %8) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.37", align 8
  %11 = alloca %"class.dealii::TriaAccessorBase", align 8
  %12 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %10, align 8, !tbaa !25
  %13 = load ptr, ptr %1, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  store ptr %13, ptr %10, align 8, !tbaa !25
  %16 = load ptr, ptr %13, align 8, !tbaa !227
  %17 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %16(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr noundef nonnull align 8 dereferenceable(24) %18, i32 noundef 0)
  %19 = load ptr, ptr %10, align 8, !tbaa !25
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi ptr [ null, %9 ], [ %19, %15 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %7, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %24, i64 16, i1 false)
  store ptr null, ptr %0, align 8, !tbaa !25
  %27 = icmp eq ptr %21, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  store ptr %21, ptr %0, align 8, !tbaa !25
  %29 = load ptr, ptr %21, align 8, !tbaa !227
  %30 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  %31 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %29(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %31, i32 noundef 0)
          to label %32 unwind label %53

32:                                               ; preds = %28
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  br label %34

34:                                               ; preds = %32, %20
  %35 = phi ptr [ %33, %32 ], [ null, %20 ]
  %36 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1
  store ptr %2, ptr %36, align 8
  %37 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %37, align 8
  %38 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %38, align 8
  %39 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %39, align 8
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %6, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, ptr noundef nonnull align 8 dereferenceable(16) %11, i64 16, i1 false)
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %42, align 8, !tbaa !17
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %26, ptr %44, align 8, !tbaa !17
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %8, ptr %45, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %46 = icmp eq ptr %35, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %34
  %48 = load ptr, ptr %35, align 8, !tbaa !278
  %49 = icmp eq ptr %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(24) %51, i32 noundef 2)
  br label %52

52:                                               ; preds = %47, %50, %34
  ret void

53:                                               ; preds = %28
  %54 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %55 = load ptr, ptr %10, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = load ptr, ptr %55, align 8, !tbaa !278
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  invoke void %58(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %30, i32 noundef 2)
          to label %61 unwind label %62

61:                                               ; preds = %57, %60, %53
  resume { ptr, i32 } %54

62:                                               ; preds = %60
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  call void @__clang_call_terminate(ptr %64) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS4_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.288", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !278
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !278
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1B_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.288", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !278
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !278
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.288", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %11, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !278
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !278
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE6manageERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE7managerERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !648
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !650
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !652
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !680
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !33
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %2, i64 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !656
  call void @_ZNK5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SQ_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(72) %5, ptr noundef nonnull align 8 dereferenceable(168) %7, ptr noundef nonnull align 8 dereferenceable(128) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef %13, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %24)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.288", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !278
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !278
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISA_EENS10_ISE_EENS10_ISI_EENS10_ISL_EENS3_5valueISQ_EENS15_IST_EENS10_ISV_EEEEEEE7managerERKNS1_15function_bufferERS1C_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %15, ptr noundef nonnull align 8 dereferenceable(40) %16, i64 40, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !278
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(366) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS7_EENSX_ISB_EENSX_ISF_EENSX_ISI_EENS0_5valueISN_EENS12_ISQ_EENSX_ISS_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function7IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SQ_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.boost::bad_function_call", align 8
  %12 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %13 = load ptr, ptr %0, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %45

15:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %16, ptr %10, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #19
  store i64 29, ptr %9, align 8, !tbaa !56
  %17 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
  store ptr %17, ptr %10, align 8, !tbaa !660
  %18 = load i64, ptr %9, align 8, !tbaa !56
  store i64 %18, ptr %16, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %17, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 %18, ptr %19, align 8, !tbaa !662
  %20 = load ptr, ptr %10, align 8, !tbaa !660
  %21 = getelementptr inbounds i8, ptr %20, i64 %18
  store i8 0, ptr %21, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %22 unwind label %29

22:                                               ; preds = %15
  %23 = load ptr, ptr %10, align 8, !tbaa !660
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i64, ptr %19, align 8, !tbaa !662
  %27 = icmp ult i64 %26, 16
  call void @llvm.assume(i1 %27)
  br label %40

28:                                               ; preds = %22
  call void @_ZdlPv(ptr noundef %23) #21
  br label %40

29:                                               ; preds = %15
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = load ptr, ptr %10, align 8, !tbaa !660
  %32 = icmp eq ptr %31, %16
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load i64, ptr %19, align 8, !tbaa !662
  %35 = icmp ult i64 %34, 16
  call void @llvm.assume(i1 %35)
  br label %39

36:                                               ; preds = %29
  call void @_ZdlPv(ptr noundef %31) #21
  br label %39

37:                                               ; preds = %43, %39
  %38 = phi { ptr, i32 } [ %30, %39 ], [ %44, %43 ]
  resume { ptr, i32 } %38

39:                                               ; preds = %36, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  br label %37

40:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %11)
          to label %41 unwind label %43

41:                                               ; preds = %40
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  %42 = load ptr, ptr %0, align 8, !tbaa !25
  br label %45

43:                                               ; preds = %40
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  br label %37

45:                                               ; preds = %41, %8
  %46 = phi ptr [ %42, %41 ], [ %13, %8 ]
  %47 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable7.175", ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !682
  %49 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %6, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %12, i64 0, i32 1
  store ptr %51, ptr %52, align 8, !tbaa !17
  %53 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %53, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %56, ptr %57, align 8, !tbaa !17
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %49, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %12, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISC_EENS12_ISG_EENS12_ISK_EENS12_ISN_EENS5_5valueISS_EENS17_ISV_EENS12_ISX_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.288", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !17
  %37 = load ptr, ptr %23, align 8, !tbaa !17
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %47, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !17
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.288", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !278
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !278
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS10_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(218) @_ZTSPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSH_NS_13MatrixCreator13IteratorRangeIS5_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEvS7_SB_SF_SI_SM_SP_SQ_ST_SW_E6invokeERNS1_15function_bufferES7_SB_SF_SI_SM_SP_SQ_ST_SW_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) #0 comdat align 2 {
  %11 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %12 = load ptr, ptr %0, align 8, !tbaa !30
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %8, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %11, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !17
  call void %12(ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %11, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi3EEERNS2_12SparseMatrixIfEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSK_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS5_EENSY_IS9_EENSY_ISD_EENSY_ISG_EENSY_ISK_EENSY_ISN_EESP_SS_NSY_ISU_EEEENS_3_bi6bind_tINS16_11unspecifiedET_NS16_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES19_S1B_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_(ptr noalias sret(%"class.boost::_bi::bind_t.295") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, i64 %6, i64 %7, ptr noundef %8, ptr noundef %9, i64 %10) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.41", align 8
  %13 = alloca %"class.dealii::TriaAccessorBase", align 8
  %14 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %12, align 8, !tbaa !25
  %15 = load ptr, ptr %1, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  store ptr %15, ptr %12, align 8, !tbaa !25
  %18 = load ptr, ptr %15, align 8, !tbaa !227
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %18(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef 0)
  %21 = load ptr, ptr %12, align 8, !tbaa !25
  br label %22

22:                                               ; preds = %11, %17
  %23 = phi ptr [ null, %11 ], [ %21, %17 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  %24 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %9, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %26, i64 16, i1 false)
  %29 = inttoptr i64 %6 to ptr
  %30 = inttoptr i64 %7 to ptr
  store ptr null, ptr %0, align 8, !tbaa !25
  %31 = icmp eq ptr %23, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %22
  store ptr %23, ptr %0, align 8, !tbaa !25
  %33 = load ptr, ptr %23, align 8, !tbaa !227
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %33(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 0)
          to label %36 unwind label %59

36:                                               ; preds = %32
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  br label %38

38:                                               ; preds = %36, %22
  %39 = phi ptr [ %37, %36 ], [ null, %22 ]
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1
  store ptr %2, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %41, align 8
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %42, align 8
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %43, align 8
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %44, align 8
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %45, align 8
  %46 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %8, ptr %46, align 8
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %47, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %48, align 8, !tbaa !17
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %28, ptr %50, align 8, !tbaa !17
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %10, ptr %51, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %52 = icmp eq ptr %39, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %38
  %54 = load ptr, ptr %39, align 8, !tbaa !307
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %38
  ret void

59:                                               ; preds = %32
  %60 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %61 = load ptr, ptr %12, align 8, !tbaa !25
  %62 = icmp eq ptr %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %61, align 8, !tbaa !307
  %65 = icmp eq ptr %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  invoke void %64(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
          to label %67 unwind label %68

67:                                               ; preds = %63, %66, %59
  resume { ptr, i32 } %60

68:                                               ; preds = %66
  %69 = landingpad { ptr, i32 }
          catch ptr null
  %70 = extractvalue { ptr, i32 } %69, 0
  call void @__clang_call_terminate(ptr %70) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS4_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.295", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !307
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !307
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1H_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.295", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !307
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !307
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.295", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %11, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !307
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !307
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE6manageERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE7managerERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !648
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !650
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !652
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !680
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !675
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !677
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !33
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %2, i64 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %3, i64 0, i32 1, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !656
  call void @_ZNK5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SO_SR_SU_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(72) %5, ptr noundef nonnull align 8 dereferenceable(168) %7, ptr noundef nonnull align 8 dereferenceable(128) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef nonnull align 8 dereferenceable(92) %13, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef %17, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %28)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.295", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !307
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !307
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_10QuadratureILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSP_NS7_13MatrixCreator13IteratorRangeISD_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISA_EENS14_ISE_EENS14_ISI_EENS14_ISL_EENS14_ISP_EENS14_ISS_EENS3_5valueISU_EENS1B_ISX_EENS14_ISZ_EEEEEEE7managerERKNS1_15function_bufferERS1I_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %15, ptr noundef nonnull align 8 dereferenceable(56) %16, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !307
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(412) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSM_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS7_EENS11_ISB_EENS11_ISF_EENS11_ISI_EENS11_ISM_EENS11_ISP_EENS0_5valueISR_EENS18_ISU_EENS11_ISW_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function9IvRKN6dealii7MappingILi3ELi3EEERKNS1_10DoFHandlerILi3ELi3EEERKNS1_10QuadratureILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSJ_NS1_13MatrixCreator13IteratorRangeIS7_EERNS1_7Threads16DummyThreadMutexEEclES5_S9_SD_SG_SK_SN_SO_SR_SU_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.boost::bad_function_call", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %15 = load ptr, ptr %0, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %47

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %18, ptr %12, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #19
  store i64 29, ptr %11, align 8, !tbaa !56
  %19 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
  store ptr %19, ptr %12, align 8, !tbaa !660
  %20 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %20, ptr %18, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %19, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !662
  %22 = load ptr, ptr %12, align 8, !tbaa !660
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %24 unwind label %31

24:                                               ; preds = %17
  %25 = load ptr, ptr %12, align 8, !tbaa !660
  %26 = icmp eq ptr %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i64, ptr %21, align 8, !tbaa !662
  %29 = icmp ult i64 %28, 16
  call void @llvm.assume(i1 %29)
  br label %42

30:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #21
  br label %42

31:                                               ; preds = %17
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %12, align 8, !tbaa !660
  %34 = icmp eq ptr %33, %18
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load i64, ptr %21, align 8, !tbaa !662
  %37 = icmp ult i64 %36, 16
  call void @llvm.assume(i1 %37)
  br label %41

38:                                               ; preds = %31
  call void @_ZdlPv(ptr noundef %33) #21
  br label %41

39:                                               ; preds = %45, %41
  %40 = phi { ptr, i32 } [ %32, %41 ], [ %46, %45 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %38, %35
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  br label %39

42:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %43 unwind label %45

43:                                               ; preds = %42
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  %44 = load ptr, ptr %0, align 8, !tbaa !25
  br label %47

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  br label %39

47:                                               ; preds = %43, %10
  %48 = phi ptr [ %44, %43 ], [ %15, %10 ]
  %49 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable9.176", ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !683
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %8, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !17
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !17
  call void %50(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(72) %1, ptr noundef nonnull align 8 dereferenceable(168) %2, ptr noundef nonnull align 8 dereferenceable(128) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSR_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISC_EENS16_ISG_EENS16_ISK_EENS16_ISN_EENS16_ISR_EENS16_ISU_EENS5_5valueISW_EENS1D_ISZ_EENS16_IS11_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.295", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !17
  %37 = load ptr, ptr %23, align 8, !tbaa !17
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %47, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !17
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.295", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !307
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !307
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZSt9__advanceIN6dealii18TriaActiveIteratorINS0_15DoFCellAccessorINS0_2hp10DoFHandlerILi3ELi3EEEEEEElEvRT_T0_St26bidirectional_iterator_tag(ptr noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %1) local_unnamed_addr #3 comdat {
  %3 = icmp sgt i64 %1, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %200, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %"class.dealii::Triangulation", ptr %9, i64 0, i32 1
  %11 = load i32, ptr %7, align 4, !tbaa !61
  %12 = load i32, ptr %0, align 8, !tbaa !60
  br label %117

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !62
  %17 = getelementptr inbounds %"class.dealii::Triangulation", ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !46
  %19 = ptrtoint ptr %18 to i64
  %20 = getelementptr inbounds %"class.dealii::Triangulation", ptr %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, ptr %0, align 8, !tbaa !60
  %22 = load i32, ptr %14, align 4
  br label %23

23:                                               ; preds = %13, %115
  %24 = phi i32 [ %22, %13 ], [ %80, %115 ]
  %25 = phi i64 [ %1, %13 ], [ %27, %115 ]
  %26 = phi i32 [ %21, %13 ], [ %78, %115 ]
  %27 = add nsw i64 %25, -1
  br label %28

28:                                               ; preds = %99, %23
  %29 = phi i32 [ %26, %23 ], [ %78, %99 ]
  %30 = phi i32 [ %26, %23 ], [ %79, %99 ]
  %31 = phi i32 [ %26, %23 ], [ %100, %99 ]
  %32 = phi i32 [ %24, %23 ], [ %80, %99 ]
  %33 = add nsw i32 %32, 1
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds ptr, ptr %18, i64 %34
  %36 = load ptr, ptr %35, align 8, !tbaa !33
  %37 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %36, i64 0, i32 4
  %38 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %36, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !48
  %40 = load ptr, ptr %37, align 8, !tbaa !50
  %41 = ptrtoint ptr %39 to i64
  %42 = ptrtoint ptr %40 to i64
  %43 = sub i64 %41, %42
  %44 = sdiv exact i64 %43, 24
  %45 = trunc i64 %44 to i32
  %46 = icmp slt i32 %33, %45
  br i1 %46, label %77, label %47

47:                                               ; preds = %28
  %48 = add nsw i64 %34, 1
  %49 = trunc i64 %48 to i32
  store i32 %49, ptr %0, align 8, !tbaa !60
  %50 = load ptr, ptr %20, align 8, !tbaa !51
  %51 = ptrtoint ptr %50 to i64
  %52 = sub i64 %51, %19
  %53 = shl i64 %52, 29
  %54 = ashr i64 %53, 32
  %55 = icmp slt i64 %48, %54
  br i1 %55, label %56, label %74

56:                                               ; preds = %47, %70
  %57 = phi i64 [ %71, %70 ], [ %48, %47 ]
  %58 = getelementptr inbounds ptr, ptr %18, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !33
  %60 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %59, i64 0, i32 4
  %61 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %59, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !48
  %63 = load ptr, ptr %60, align 8, !tbaa !50
  %64 = ptrtoint ptr %62 to i64
  %65 = ptrtoint ptr %63 to i64
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, 24
  %68 = trunc i64 %67 to i32
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %56
  %71 = add i64 %57, 1
  %72 = trunc i64 %71 to i32
  store i32 %72, ptr %0, align 8, !tbaa !60
  %73 = icmp eq i64 %71, %54
  br i1 %73, label %74, label %56, !llvm.loop !52

74:                                               ; preds = %70, %47
  store i32 -1, ptr %0, align 8, !tbaa !60
  br label %77

75:                                               ; preds = %56
  %76 = trunc i64 %57 to i32
  br label %77

77:                                               ; preds = %75, %74, %28
  %78 = phi i32 [ %29, %28 ], [ -1, %74 ], [ %76, %75 ]
  %79 = phi i32 [ %30, %28 ], [ -1, %74 ], [ %76, %75 ]
  %80 = phi i32 [ %33, %28 ], [ -1, %74 ], [ 0, %75 ]
  %81 = phi i32 [ %31, %28 ], [ -1, %74 ], [ %76, %75 ]
  %82 = or i32 %81, %80
  %83 = icmp sgt i32 %82, -1
  br i1 %83, label %84, label %101

84:                                               ; preds = %77
  %85 = zext i32 %81 to i64
  %86 = getelementptr inbounds ptr, ptr %18, i64 %85
  %87 = load ptr, ptr %86, align 8, !tbaa !33
  %88 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %87, i64 0, i32 4, i32 0, i32 3
  %89 = load ptr, ptr %88, align 8, !tbaa !54
  %90 = lshr i32 %80, 6
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i64, ptr %89, i64 %91
  %93 = and i32 %80, 63
  %94 = zext i32 %93 to i64
  %95 = shl nuw i64 1, %94
  %96 = load i64, ptr %92, align 8, !tbaa !56
  %97 = and i64 %96, %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %84, %104
  %100 = phi i32 [ %81, %84 ], [ %79, %104 ]
  br label %28

101:                                              ; preds = %84, %77
  store i32 %80, ptr %14, align 4, !tbaa !61
  %102 = or i32 %80, %79
  %103 = icmp sgt i32 %102, -1
  br i1 %103, label %104, label %115

104:                                              ; preds = %101
  %105 = zext i32 %79 to i64
  %106 = getelementptr inbounds ptr, ptr %18, i64 %105
  %107 = load ptr, ptr %106, align 8, !tbaa !33
  %108 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %107, i64 0, i32 4, i32 0, i32 1
  %109 = shl i32 %80, 2
  %110 = zext i32 %109 to i64
  %111 = load ptr, ptr %108, align 8, !tbaa !57
  %112 = getelementptr inbounds i32, ptr %111, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !59
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %99

115:                                              ; preds = %101, %104
  %116 = icmp eq i64 %27, 0
  br i1 %116, label %200, label %23

117:                                              ; preds = %6, %198
  %118 = phi i32 [ %12, %6 ], [ %159, %198 ]
  %119 = phi i32 [ %11, %6 ], [ %162, %198 ]
  %120 = phi i64 [ %1, %6 ], [ %121, %198 ]
  %121 = add nsw i64 %120, 1
  br label %122

122:                                              ; preds = %181, %117
  %123 = phi i32 [ %118, %117 ], [ %159, %181 ]
  %124 = phi i32 [ %118, %117 ], [ %160, %181 ]
  %125 = phi i32 [ %118, %117 ], [ %182, %181 ]
  %126 = phi i32 [ %119, %117 ], [ %162, %181 ]
  %127 = add i32 %126, -1
  %128 = icmp slt i32 %127, 0
  br i1 %128, label %129, label %153

129:                                              ; preds = %122
  %130 = sext i32 %125 to i64
  br label %131

131:                                              ; preds = %135, %129
  %132 = phi i64 [ %130, %129 ], [ %136, %135 ]
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  store i64 -1, ptr %0, align 8
  br label %158

135:                                              ; preds = %131
  %136 = add nsw i64 %132, -1
  %137 = load ptr, ptr %10, align 8, !tbaa !46
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8, !tbaa !33
  %140 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %139, i64 0, i32 4
  %141 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %139, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load ptr, ptr %141, align 8, !tbaa !48
  %143 = load ptr, ptr %140, align 8, !tbaa !50
  %144 = ptrtoint ptr %142 to i64
  %145 = ptrtoint ptr %143 to i64
  %146 = sub i64 %144, %145
  %147 = sdiv exact i64 %146, 24
  %148 = trunc i64 %147 to i32
  %149 = add i32 %148, -1
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %131, label %151

151:                                              ; preds = %135
  %152 = trunc i64 %136 to i32
  store i32 %152, ptr %0, align 8, !tbaa !60
  br label %153

153:                                              ; preds = %151, %122
  %154 = phi i32 [ %152, %151 ], [ %123, %122 ]
  %155 = phi i32 [ %152, %151 ], [ %124, %122 ]
  %156 = phi i32 [ %152, %151 ], [ %125, %122 ]
  %157 = phi i32 [ %149, %151 ], [ %127, %122 ]
  store i32 %157, ptr %7, align 4, !tbaa !61
  br label %158

158:                                              ; preds = %153, %134
  %159 = phi i32 [ -1, %134 ], [ %154, %153 ]
  %160 = phi i32 [ -1, %134 ], [ %155, %153 ]
  %161 = phi i32 [ -1, %134 ], [ %156, %153 ]
  %162 = phi i32 [ -1, %134 ], [ %157, %153 ]
  %163 = or i32 %162, %161
  %164 = icmp sgt i32 %163, -1
  br i1 %164, label %165, label %183

165:                                              ; preds = %158
  %166 = zext i32 %161 to i64
  %167 = load ptr, ptr %10, align 8, !tbaa !46
  %168 = getelementptr inbounds ptr, ptr %167, i64 %166
  %169 = load ptr, ptr %168, align 8, !tbaa !33
  %170 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %169, i64 0, i32 4, i32 0, i32 3
  %171 = load ptr, ptr %170, align 8, !tbaa !54
  %172 = lshr i32 %162, 6
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds i64, ptr %171, i64 %173
  %175 = and i32 %162, 63
  %176 = zext i32 %175 to i64
  %177 = shl nuw i64 1, %176
  %178 = load i64, ptr %174, align 8, !tbaa !56
  %179 = and i64 %178, %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %165, %186
  %182 = phi i32 [ %161, %165 ], [ %160, %186 ]
  br label %122

183:                                              ; preds = %165, %158
  %184 = or i32 %162, %160
  %185 = icmp sgt i32 %184, -1
  br i1 %185, label %186, label %198

186:                                              ; preds = %183
  %187 = zext i32 %160 to i64
  %188 = load ptr, ptr %10, align 8, !tbaa !46
  %189 = getelementptr inbounds ptr, ptr %188, i64 %187
  %190 = load ptr, ptr %189, align 8, !tbaa !33
  %191 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %190, i64 0, i32 4, i32 0, i32 1
  %192 = shl i32 %162, 2
  %193 = zext i32 %192 to i64
  %194 = load ptr, ptr %191, align 8, !tbaa !57
  %195 = getelementptr inbounds i32, ptr %194, i64 %193
  %196 = load i32, ptr %195, align 4, !tbaa !59
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %198, label %181

198:                                              ; preds = %183, %186
  %199 = icmp eq i64 %121, 0
  br i1 %199, label %200, label %117

200:                                              ; preds = %198, %115, %4
  ret void
}

declare void @_ZN6dealii2hp8FEValuesILi3ELi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi3EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240), ptr noundef nonnull align 8 dereferenceable(96), ptr noundef nonnull align 8 dereferenceable(96), ptr noundef nonnull align 8 dereferenceable(96), i32 noundef) unnamed_addr #2

declare void @_ZN6dealii10FullMatrixIdEC1Ej(ptr noundef nonnull align 8 dereferenceable(92), i32 noundef) unnamed_addr #2

declare void @_ZN6dealii2hp8FEValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjj(ptr noundef nonnull align 8 dereferenceable(240), ptr noundef nonnull align 8 dereferenceable(24), i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPdS1_EEmRKd(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(8) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %251, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !132
  %9 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !33
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %169, label %16

16:                                               ; preds = %6
  %17 = load double, ptr %3, align 8, !tbaa !133
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %12, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %82

22:                                               ; preds = %16
  %23 = sub i64 0, %2
  %24 = getelementptr inbounds double, ptr %10, i64 %23
  %25 = ptrtoint ptr %24 to i64
  %26 = shl i64 %2, 3
  %27 = icmp sgt i64 %26, 8
  br i1 %27, label %28, label %29, !prof !493

28:                                               ; preds = %22
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %10, ptr nonnull align 8 %24, i64 %26, i1 false)
  br label %33

29:                                               ; preds = %22
  %30 = icmp eq i64 %26, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = load double, ptr %24, align 8, !tbaa !133
  store double %32, ptr %10, align 8, !tbaa !133
  br label %33

33:                                               ; preds = %28, %29, %31
  %34 = load ptr, ptr %9, align 8, !tbaa !135
  %35 = getelementptr inbounds double, ptr %34, i64 %2
  store ptr %35, ptr %9, align 8, !tbaa !135
  %36 = sub i64 %25, %18
  %37 = icmp sgt i64 %36, 8
  br i1 %37, label %38, label %42, !prof !493

38:                                               ; preds = %33
  %39 = lshr exact i64 %36, 3
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds double, ptr %10, i64 %40
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %41, ptr align 8 %1, i64 %36, i1 false)
  br label %47

42:                                               ; preds = %33
  %43 = icmp eq i64 %36, 8
  br i1 %43, label %44, label %47

44:                                               ; preds = %42
  %45 = getelementptr inbounds double, ptr %10, i64 -1
  %46 = load double, ptr %1, align 8, !tbaa !133
  store double %46, ptr %45, align 8, !tbaa !133
  br label %47

47:                                               ; preds = %38, %42, %44
  %48 = getelementptr inbounds double, ptr %1, i64 %2
  %49 = add i64 %2, 2305843009213693951
  %50 = and i64 %49, 2305843009213693951
  %51 = add nuw nsw i64 %50, 1
  %52 = icmp ult i64 %50, 15
  br i1 %52, label %76, label %53

53:                                               ; preds = %47
  %54 = and i64 %51, 4611686018427387888
  %55 = shl i64 %54, 3
  %56 = getelementptr i8, ptr %1, i64 %55
  %57 = insertelement <4 x double> poison, double %17, i64 0
  %58 = shufflevector <4 x double> %57, <4 x double> poison, <4 x i32> zeroinitializer
  %59 = insertelement <4 x double> poison, double %17, i64 0
  %60 = shufflevector <4 x double> %59, <4 x double> poison, <4 x i32> zeroinitializer
  %61 = insertelement <4 x double> poison, double %17, i64 0
  %62 = shufflevector <4 x double> %61, <4 x double> poison, <4 x i32> zeroinitializer
  %63 = insertelement <4 x double> poison, double %17, i64 0
  %64 = shufflevector <4 x double> %63, <4 x double> poison, <4 x i32> zeroinitializer
  br label %65

65:                                               ; preds = %65, %53
  %66 = phi i64 [ 0, %53 ], [ %72, %65 ]
  %67 = shl i64 %66, 3
  %68 = getelementptr i8, ptr %1, i64 %67
  store <4 x double> %58, ptr %68, align 8, !tbaa !133
  %69 = getelementptr double, ptr %68, i64 4
  store <4 x double> %60, ptr %69, align 8, !tbaa !133
  %70 = getelementptr double, ptr %68, i64 8
  store <4 x double> %62, ptr %70, align 8, !tbaa !133
  %71 = getelementptr double, ptr %68, i64 12
  store <4 x double> %64, ptr %71, align 8, !tbaa !133
  %72 = add nuw i64 %66, 16
  %73 = icmp eq i64 %72, %54
  br i1 %73, label %74, label %65, !llvm.loop !684

74:                                               ; preds = %65
  %75 = icmp eq i64 %51, %54
  br i1 %75, label %251, label %76

76:                                               ; preds = %47, %74
  %77 = phi ptr [ %1, %47 ], [ %56, %74 ]
  br label %78

78:                                               ; preds = %76, %78
  %79 = phi ptr [ %80, %78 ], [ %77, %76 ]
  store double %17, ptr %79, align 8, !tbaa !133
  %80 = getelementptr inbounds double, ptr %79, i64 1
  %81 = icmp eq ptr %80, %48
  br i1 %81, label %251, label %78, !llvm.loop !685

82:                                               ; preds = %16
  %83 = icmp eq i64 %20, %2
  br i1 %83, label %122, label %84

84:                                               ; preds = %82
  %85 = sub i64 %2, %20
  %86 = getelementptr inbounds double, ptr %10, i64 %85
  %87 = shl nsw i64 %2, 3
  %88 = add i64 %87, -8
  %89 = sub i64 %88, %19
  %90 = lshr i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %89, 120
  br i1 %92, label %116, label %93

93:                                               ; preds = %84
  %94 = and i64 %91, 4611686018427387888
  %95 = shl i64 %94, 3
  %96 = getelementptr i8, ptr %10, i64 %95
  %97 = insertelement <4 x double> poison, double %17, i64 0
  %98 = shufflevector <4 x double> %97, <4 x double> poison, <4 x i32> zeroinitializer
  %99 = insertelement <4 x double> poison, double %17, i64 0
  %100 = shufflevector <4 x double> %99, <4 x double> poison, <4 x i32> zeroinitializer
  %101 = insertelement <4 x double> poison, double %17, i64 0
  %102 = shufflevector <4 x double> %101, <4 x double> poison, <4 x i32> zeroinitializer
  %103 = insertelement <4 x double> poison, double %17, i64 0
  %104 = shufflevector <4 x double> %103, <4 x double> poison, <4 x i32> zeroinitializer
  br label %105

105:                                              ; preds = %105, %93
  %106 = phi i64 [ 0, %93 ], [ %112, %105 ]
  %107 = shl i64 %106, 3
  %108 = getelementptr i8, ptr %10, i64 %107
  store <4 x double> %98, ptr %108, align 8, !tbaa !133
  %109 = getelementptr double, ptr %108, i64 4
  store <4 x double> %100, ptr %109, align 8, !tbaa !133
  %110 = getelementptr double, ptr %108, i64 8
  store <4 x double> %102, ptr %110, align 8, !tbaa !133
  %111 = getelementptr double, ptr %108, i64 12
  store <4 x double> %104, ptr %111, align 8, !tbaa !133
  %112 = add nuw i64 %106, 16
  %113 = icmp eq i64 %112, %94
  br i1 %113, label %114, label %105, !llvm.loop !686

114:                                              ; preds = %105
  %115 = icmp eq i64 %91, %94
  br i1 %115, label %122, label %116

116:                                              ; preds = %84, %114
  %117 = phi ptr [ %10, %84 ], [ %96, %114 ]
  br label %118

118:                                              ; preds = %116, %118
  %119 = phi ptr [ %120, %118 ], [ %117, %116 ]
  store double %17, ptr %119, align 8, !tbaa !133
  %120 = getelementptr inbounds double, ptr %119, i64 1
  %121 = icmp eq ptr %120, %86
  br i1 %121, label %122, label %118, !llvm.loop !687

122:                                              ; preds = %118, %114, %82
  %123 = phi ptr [ %10, %82 ], [ %86, %114 ], [ %86, %118 ]
  store ptr %123, ptr %9, align 8, !tbaa !135
  %124 = icmp sgt i64 %19, 8
  br i1 %124, label %125, label %126, !prof !493

125:                                              ; preds = %122
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %123, ptr align 8 %1, i64 %19, i1 false)
  br label %130

126:                                              ; preds = %122
  %127 = icmp eq i64 %19, 8
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = load double, ptr %1, align 8, !tbaa !133
  store double %129, ptr %123, align 8, !tbaa !133
  br label %130

130:                                              ; preds = %125, %126, %128
  %131 = load ptr, ptr %9, align 8, !tbaa !135
  %132 = getelementptr inbounds double, ptr %131, i64 %20
  store ptr %132, ptr %9, align 8, !tbaa !135
  %133 = icmp eq ptr %10, %1
  br i1 %133, label %251, label %134

134:                                              ; preds = %130
  %135 = add i64 %12, -8
  %136 = sub i64 %135, %18
  %137 = lshr i64 %136, 3
  %138 = add nuw nsw i64 %137, 1
  %139 = icmp ult i64 %136, 120
  br i1 %139, label %163, label %140

140:                                              ; preds = %134
  %141 = and i64 %138, 4611686018427387888
  %142 = shl i64 %141, 3
  %143 = getelementptr i8, ptr %1, i64 %142
  %144 = insertelement <4 x double> poison, double %17, i64 0
  %145 = shufflevector <4 x double> %144, <4 x double> poison, <4 x i32> zeroinitializer
  %146 = insertelement <4 x double> poison, double %17, i64 0
  %147 = shufflevector <4 x double> %146, <4 x double> poison, <4 x i32> zeroinitializer
  %148 = insertelement <4 x double> poison, double %17, i64 0
  %149 = shufflevector <4 x double> %148, <4 x double> poison, <4 x i32> zeroinitializer
  %150 = insertelement <4 x double> poison, double %17, i64 0
  %151 = shufflevector <4 x double> %150, <4 x double> poison, <4 x i32> zeroinitializer
  br label %152

152:                                              ; preds = %152, %140
  %153 = phi i64 [ 0, %140 ], [ %159, %152 ]
  %154 = shl i64 %153, 3
  %155 = getelementptr i8, ptr %1, i64 %154
  store <4 x double> %145, ptr %155, align 8, !tbaa !133
  %156 = getelementptr double, ptr %155, i64 4
  store <4 x double> %147, ptr %156, align 8, !tbaa !133
  %157 = getelementptr double, ptr %155, i64 8
  store <4 x double> %149, ptr %157, align 8, !tbaa !133
  %158 = getelementptr double, ptr %155, i64 12
  store <4 x double> %151, ptr %158, align 8, !tbaa !133
  %159 = add nuw i64 %153, 16
  %160 = icmp eq i64 %159, %141
  br i1 %160, label %161, label %152, !llvm.loop !688

161:                                              ; preds = %152
  %162 = icmp eq i64 %138, %141
  br i1 %162, label %251, label %163

163:                                              ; preds = %134, %161
  %164 = phi ptr [ %1, %134 ], [ %143, %161 ]
  br label %165

165:                                              ; preds = %163, %165
  %166 = phi ptr [ %167, %165 ], [ %164, %163 ]
  store double %17, ptr %166, align 8, !tbaa !133
  %167 = getelementptr inbounds double, ptr %166, i64 1
  %168 = icmp eq ptr %167, %10
  br i1 %168, label %251, label %165, !llvm.loop !689

169:                                              ; preds = %6
  %170 = load ptr, ptr %0, align 8, !tbaa !131
  %171 = ptrtoint ptr %170 to i64
  %172 = sub i64 %12, %171
  %173 = ashr exact i64 %172, 3
  %174 = sub nsw i64 1152921504606846975, %173
  %175 = icmp ult i64 %174, %2
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.16) #23
  unreachable

177:                                              ; preds = %169
  %178 = tail call i64 @llvm.umax.i64(i64 %173, i64 %2)
  %179 = add i64 %178, %173
  %180 = icmp ult i64 %179, %173
  %181 = icmp ugt i64 %179, 1152921504606846975
  %182 = or i1 %180, %181
  %183 = select i1 %182, i64 1152921504606846975, i64 %179
  %184 = ptrtoint ptr %1 to i64
  %185 = sub i64 %184, %171
  %186 = ashr exact i64 %185, 3
  %187 = icmp eq i64 %183, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %177
  %189 = shl nuw nsw i64 %183, 3
  %190 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %189) #20
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi ptr [ %190, %188 ], [ null, %177 ]
  %193 = getelementptr inbounds double, ptr %192, i64 %186
  %194 = getelementptr inbounds double, ptr %193, i64 %2
  %195 = load double, ptr %3, align 8, !tbaa !133
  %196 = add i64 %2, 2305843009213693951
  %197 = and i64 %196, 2305843009213693951
  %198 = add nuw nsw i64 %197, 1
  %199 = icmp ult i64 %197, 15
  br i1 %199, label %223, label %200

200:                                              ; preds = %191
  %201 = and i64 %198, 4611686018427387888
  %202 = shl i64 %201, 3
  %203 = getelementptr i8, ptr %193, i64 %202
  %204 = insertelement <4 x double> poison, double %195, i64 0
  %205 = shufflevector <4 x double> %204, <4 x double> poison, <4 x i32> zeroinitializer
  %206 = insertelement <4 x double> poison, double %195, i64 0
  %207 = shufflevector <4 x double> %206, <4 x double> poison, <4 x i32> zeroinitializer
  %208 = insertelement <4 x double> poison, double %195, i64 0
  %209 = shufflevector <4 x double> %208, <4 x double> poison, <4 x i32> zeroinitializer
  %210 = insertelement <4 x double> poison, double %195, i64 0
  %211 = shufflevector <4 x double> %210, <4 x double> poison, <4 x i32> zeroinitializer
  br label %212

212:                                              ; preds = %212, %200
  %213 = phi i64 [ 0, %200 ], [ %219, %212 ]
  %214 = shl i64 %213, 3
  %215 = getelementptr i8, ptr %193, i64 %214
  store <4 x double> %205, ptr %215, align 8, !tbaa !133
  %216 = getelementptr double, ptr %215, i64 4
  store <4 x double> %207, ptr %216, align 8, !tbaa !133
  %217 = getelementptr double, ptr %215, i64 8
  store <4 x double> %209, ptr %217, align 8, !tbaa !133
  %218 = getelementptr double, ptr %215, i64 12
  store <4 x double> %211, ptr %218, align 8, !tbaa !133
  %219 = add nuw i64 %213, 16
  %220 = icmp eq i64 %219, %201
  br i1 %220, label %221, label %212, !llvm.loop !690

221:                                              ; preds = %212
  %222 = icmp eq i64 %198, %201
  br i1 %222, label %229, label %223

223:                                              ; preds = %191, %221
  %224 = phi ptr [ %193, %191 ], [ %203, %221 ]
  br label %225

225:                                              ; preds = %223, %225
  %226 = phi ptr [ %227, %225 ], [ %224, %223 ]
  store double %195, ptr %226, align 8, !tbaa !133
  %227 = getelementptr inbounds double, ptr %226, i64 1
  %228 = icmp eq ptr %227, %194
  br i1 %228, label %229, label %225, !llvm.loop !691

229:                                              ; preds = %225, %221
  %230 = icmp sgt i64 %185, 8
  br i1 %230, label %231, label %232, !prof !493

231:                                              ; preds = %229
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %192, ptr align 8 %170, i64 %185, i1 false)
  br label %236

232:                                              ; preds = %229
  %233 = icmp eq i64 %185, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %232
  %235 = load double, ptr %170, align 8, !tbaa !133
  store double %235, ptr %192, align 8, !tbaa !133
  br label %236

236:                                              ; preds = %234, %232, %231
  %237 = sub i64 %12, %184
  %238 = icmp sgt i64 %237, 8
  br i1 %238, label %239, label %240, !prof !493

239:                                              ; preds = %236
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %194, ptr align 8 %1, i64 %237, i1 false)
  br label %244

240:                                              ; preds = %236
  %241 = icmp eq i64 %237, 8
  br i1 %241, label %242, label %244

242:                                              ; preds = %240
  %243 = load double, ptr %1, align 8, !tbaa !133
  store double %243, ptr %194, align 8, !tbaa !133
  br label %244

244:                                              ; preds = %242, %240, %239
  %245 = ashr exact i64 %237, 3
  %246 = getelementptr inbounds double, ptr %194, i64 %245
  %247 = icmp eq ptr %170, null
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  tail call void @_ZdlPv(ptr noundef nonnull %170) #21
  br label %249

249:                                              ; preds = %244, %248
  store ptr %192, ptr %0, align 8, !tbaa !131
  store ptr %246, ptr %9, align 8, !tbaa !135
  %250 = getelementptr inbounds double, ptr %192, i64 %183
  store ptr %250, ptr %7, align 8, !tbaa !132
  br label %251

251:                                              ; preds = %165, %78, %161, %74, %130, %249, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN6dealii6VectorIdEESaIS2_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS2_S4_EEmRKS2_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 8 dereferenceable(88) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = alloca %"class.dealii::Vector", align 8
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %353, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !641
  %10 = getelementptr inbounds %"struct.std::_Vector_base<dealii::Vector<double>, std::allocator<dealii::Vector<double> > >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !226
  %12 = ptrtoint ptr %9 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 88
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %179, label %17

17:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %5) #19
  call void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %5, ptr noundef nonnull align 8 dereferenceable(88) %3)
  %18 = load ptr, ptr %10, align 8, !tbaa !33
  %19 = ptrtoint ptr %18 to i64
  %20 = ptrtoint ptr %1 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 88
  %23 = icmp ugt i64 %22, %2
  br i1 %23, label %24, label %93

24:                                               ; preds = %17
  %25 = sub i64 0, %2
  %26 = getelementptr inbounds %"class.dealii::Vector", ptr %18, i64 %25
  %27 = mul i64 %2, -88
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %61, label %29

29:                                               ; preds = %24, %32
  %30 = phi ptr [ %34, %32 ], [ %18, %24 ]
  %31 = phi ptr [ %33, %32 ], [ %26, %24 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %30, ptr noundef nonnull align 8 dereferenceable(88) %31)
          to label %32 unwind label %36

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.dealii::Vector", ptr %31, i64 1
  %34 = getelementptr inbounds %"class.dealii::Vector", ptr %30, i64 1
  %35 = icmp eq ptr %33, %18
  br i1 %35, label %59, label %29

36:                                               ; preds = %29
  %37 = landingpad { ptr, i32 }
          catch ptr null
  %38 = extractvalue { ptr, i32 } %37, 0
  %39 = call ptr @__cxa_begin_catch(ptr %38) #19
  %40 = icmp eq ptr %30, %18
  br i1 %40, label %48, label %41

41:                                               ; preds = %36, %45
  %42 = phi ptr [ %46, %45 ], [ %18, %36 ]
  %43 = load ptr, ptr %42, align 8, !tbaa !41
  %44 = load ptr, ptr %43, align 8
  invoke void %44(ptr noundef nonnull align 8 dereferenceable(88) %42)
          to label %45 unwind label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.dealii::Vector", ptr %42, i64 1
  %47 = icmp eq ptr %46, %30
  br i1 %47, label %48, label %41

48:                                               ; preds = %45, %36
  invoke void @__cxa_rethrow() #23
          to label %58 unwind label %51

49:                                               ; preds = %41
  %50 = landingpad { ptr, i32 }
          cleanup
  br label %53

51:                                               ; preds = %48
  %52 = landingpad { ptr, i32 }
          cleanup
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi { ptr, i32 } [ %50, %49 ], [ %52, %51 ]
  invoke void @__cxa_end_catch()
          to label %176 unwind label %55

55:                                               ; preds = %53
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  call void @__clang_call_terminate(ptr %57) #22
  unreachable

58:                                               ; preds = %48
  unreachable

59:                                               ; preds = %32
  %60 = load ptr, ptr %10, align 8, !tbaa !226
  br label %61

61:                                               ; preds = %59, %24
  %62 = phi ptr [ %60, %59 ], [ %18, %24 ]
  %63 = getelementptr inbounds %"class.dealii::Vector", ptr %62, i64 %2
  store ptr %63, ptr %10, align 8, !tbaa !226
  %64 = ptrtoint ptr %26 to i64
  %65 = sub i64 %64, %20
  %66 = icmp sgt i64 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %61
  %68 = udiv exact i64 %65, 88
  br label %69

69:                                               ; preds = %76, %67
  %70 = phi i64 [ %77, %76 ], [ %68, %67 ]
  %71 = phi ptr [ %74, %76 ], [ %18, %67 ]
  %72 = phi ptr [ %73, %76 ], [ %26, %67 ]
  %73 = getelementptr inbounds %"class.dealii::Vector", ptr %72, i64 -1
  %74 = getelementptr inbounds %"class.dealii::Vector", ptr %71, i64 -1
  %75 = invoke noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %74, ptr noundef nonnull align 8 dereferenceable(88) %73)
          to label %76 unwind label %89

76:                                               ; preds = %69
  %77 = add nsw i64 %70, -1
  %78 = icmp ugt i64 %70, 1
  br i1 %78, label %69, label %79

79:                                               ; preds = %76, %61
  %80 = getelementptr inbounds %"class.dealii::Vector", ptr %1, i64 %2
  br label %81

81:                                               ; preds = %79, %84
  %82 = phi ptr [ %85, %84 ], [ %1, %79 ]
  %83 = invoke noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %82, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %84 unwind label %87

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.dealii::Vector", ptr %82, i64 1
  %86 = icmp eq ptr %85, %80
  br i1 %86, label %170, label %81

87:                                               ; preds = %81
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %176

89:                                               ; preds = %69
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %176

91:                                               ; preds = %164
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %176

93:                                               ; preds = %17
  %94 = sub i64 %2, %22
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %126, label %96

96:                                               ; preds = %93, %99
  %97 = phi ptr [ %101, %99 ], [ %18, %93 ]
  %98 = phi i64 [ %100, %99 ], [ %94, %93 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %97, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %99 unwind label %103

99:                                               ; preds = %96
  %100 = add i64 %98, -1
  %101 = getelementptr inbounds %"class.dealii::Vector", ptr %97, i64 1
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %126, label %96

103:                                              ; preds = %96
  %104 = landingpad { ptr, i32 }
          catch ptr null
  %105 = extractvalue { ptr, i32 } %104, 0
  %106 = call ptr @__cxa_begin_catch(ptr %105) #19
  %107 = icmp eq ptr %97, %18
  br i1 %107, label %115, label %108

108:                                              ; preds = %103, %112
  %109 = phi ptr [ %113, %112 ], [ %18, %103 ]
  %110 = load ptr, ptr %109, align 8, !tbaa !41
  %111 = load ptr, ptr %110, align 8
  invoke void %111(ptr noundef nonnull align 8 dereferenceable(88) %109)
          to label %112 unwind label %116

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.dealii::Vector", ptr %109, i64 1
  %114 = icmp eq ptr %113, %97
  br i1 %114, label %115, label %108

115:                                              ; preds = %112, %103
  invoke void @__cxa_rethrow() #23
          to label %125 unwind label %118

116:                                              ; preds = %108
  %117 = landingpad { ptr, i32 }
          cleanup
  br label %120

118:                                              ; preds = %115
  %119 = landingpad { ptr, i32 }
          cleanup
  br label %120

120:                                              ; preds = %118, %116
  %121 = phi { ptr, i32 } [ %117, %116 ], [ %119, %118 ]
  invoke void @__cxa_end_catch()
          to label %176 unwind label %122

122:                                              ; preds = %120
  %123 = landingpad { ptr, i32 }
          catch ptr null
  %124 = extractvalue { ptr, i32 } %123, 0
  call void @__clang_call_terminate(ptr %124) #22
  unreachable

125:                                              ; preds = %115
  unreachable

126:                                              ; preds = %99, %93
  %127 = phi ptr [ %18, %93 ], [ %101, %99 ]
  store ptr %127, ptr %10, align 8, !tbaa !226
  %128 = icmp eq ptr %18, %1
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.dealii::Vector", ptr %127, i64 %22
  store ptr %130, ptr %10, align 8, !tbaa !226
  br label %170

131:                                              ; preds = %126, %134
  %132 = phi ptr [ %136, %134 ], [ %127, %126 ]
  %133 = phi ptr [ %135, %134 ], [ %1, %126 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %132, ptr noundef nonnull align 8 dereferenceable(88) %133)
          to label %134 unwind label %138

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.dealii::Vector", ptr %133, i64 1
  %136 = getelementptr inbounds %"class.dealii::Vector", ptr %132, i64 1
  %137 = icmp eq ptr %135, %18
  br i1 %137, label %161, label %131

138:                                              ; preds = %131
  %139 = landingpad { ptr, i32 }
          catch ptr null
  %140 = extractvalue { ptr, i32 } %139, 0
  %141 = call ptr @__cxa_begin_catch(ptr %140) #19
  %142 = icmp eq ptr %132, %127
  br i1 %142, label %150, label %143

143:                                              ; preds = %138, %147
  %144 = phi ptr [ %148, %147 ], [ %127, %138 ]
  %145 = load ptr, ptr %144, align 8, !tbaa !41
  %146 = load ptr, ptr %145, align 8
  invoke void %146(ptr noundef nonnull align 8 dereferenceable(88) %144)
          to label %147 unwind label %151

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.dealii::Vector", ptr %144, i64 1
  %149 = icmp eq ptr %148, %132
  br i1 %149, label %150, label %143

150:                                              ; preds = %147, %138
  invoke void @__cxa_rethrow() #23
          to label %160 unwind label %153

151:                                              ; preds = %143
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %155

153:                                              ; preds = %150
  %154 = landingpad { ptr, i32 }
          cleanup
  br label %155

155:                                              ; preds = %153, %151
  %156 = phi { ptr, i32 } [ %152, %151 ], [ %154, %153 ]
  invoke void @__cxa_end_catch()
          to label %176 unwind label %157

157:                                              ; preds = %155
  %158 = landingpad { ptr, i32 }
          catch ptr null
  %159 = extractvalue { ptr, i32 } %158, 0
  call void @__clang_call_terminate(ptr %159) #22
  unreachable

160:                                              ; preds = %150
  unreachable

161:                                              ; preds = %134
  %162 = load ptr, ptr %10, align 8, !tbaa !226
  %163 = getelementptr inbounds %"class.dealii::Vector", ptr %162, i64 %22
  store ptr %163, ptr %10, align 8, !tbaa !226
  br label %164

164:                                              ; preds = %161, %167
  %165 = phi ptr [ %168, %167 ], [ %1, %161 ]
  %166 = invoke noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %165, ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %167 unwind label %91

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.dealii::Vector", ptr %165, i64 1
  %169 = icmp eq ptr %168, %18
  br i1 %169, label %170, label %164

170:                                              ; preds = %167, %84, %129
  store ptr getelementptr inbounds ({ [6 x ptr] }, ptr @_ZTVN6dealii6VectorIdEE, i64 0, inrange i32 0, i64 2), ptr %5, align 8, !tbaa !41
  %171 = getelementptr inbounds %"class.dealii::Vector", ptr %5, i64 0, i32 3
  %172 = load ptr, ptr %171, align 8, !tbaa !136
  %173 = icmp eq ptr %172, null
  br i1 %173, label %175, label %174

174:                                              ; preds = %170
  call void @_ZdaPv(ptr noundef nonnull %172) #21
  store ptr null, ptr %171, align 8, !tbaa !136
  br label %175

175:                                              ; preds = %170, %174
  call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %5)
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #19
  br label %353

176:                                              ; preds = %87, %91, %89, %155, %120, %53
  %177 = phi { ptr, i32 } [ %54, %53 ], [ %121, %120 ], [ %156, %155 ], [ %88, %87 ], [ %90, %89 ], [ %92, %91 ]
  invoke void @_ZN6dealii6VectorIdED2Ev(ptr noundef nonnull align 8 dereferenceable(88) %5)
          to label %178 unwind label %356

178:                                              ; preds = %176
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %5) #19
  br label %354

179:                                              ; preds = %7
  %180 = load ptr, ptr %0, align 8, !tbaa !224
  %181 = ptrtoint ptr %180 to i64
  %182 = sub i64 %13, %181
  %183 = sdiv exact i64 %182, 88
  %184 = sub nsw i64 104811045873349725, %183
  %185 = icmp ult i64 %184, %2
  br i1 %185, label %186, label %187

186:                                              ; preds = %179
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.16) #23
  unreachable

187:                                              ; preds = %179
  %188 = tail call i64 @llvm.umax.i64(i64 %183, i64 %2)
  %189 = add i64 %188, %183
  %190 = icmp ult i64 %189, %183
  %191 = icmp ugt i64 %189, 104811045873349725
  %192 = or i1 %190, %191
  %193 = select i1 %192, i64 104811045873349725, i64 %189
  %194 = ptrtoint ptr %1 to i64
  %195 = sub i64 %194, %181
  %196 = sdiv exact i64 %195, 88
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %187
  %199 = mul nuw nsw i64 %193, 88
  %200 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %199) #20
  br label %201

201:                                              ; preds = %187, %198
  %202 = phi ptr [ %200, %198 ], [ null, %187 ]
  %203 = getelementptr inbounds %"class.dealii::Vector", ptr %202, i64 %196
  br label %204

204:                                              ; preds = %201, %207
  %205 = phi ptr [ %209, %207 ], [ %203, %201 ]
  %206 = phi i64 [ %208, %207 ], [ %2, %201 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %205, ptr noundef nonnull align 8 dereferenceable(88) %3)
          to label %207 unwind label %211

207:                                              ; preds = %204
  %208 = add i64 %206, -1
  %209 = getelementptr inbounds %"class.dealii::Vector", ptr %205, i64 1
  %210 = icmp eq i64 %208, 0
  br i1 %210, label %234, label %204

211:                                              ; preds = %204
  %212 = landingpad { ptr, i32 }
          catch ptr null
  %213 = extractvalue { ptr, i32 } %212, 0
  %214 = tail call ptr @__cxa_begin_catch(ptr %213) #19
  %215 = icmp eq ptr %205, %203
  br i1 %215, label %223, label %216

216:                                              ; preds = %211, %220
  %217 = phi ptr [ %221, %220 ], [ %203, %211 ]
  %218 = load ptr, ptr %217, align 8, !tbaa !41
  %219 = load ptr, ptr %218, align 8
  invoke void %219(ptr noundef nonnull align 8 dereferenceable(88) %217)
          to label %220 unwind label %224

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.dealii::Vector", ptr %217, i64 1
  %222 = icmp eq ptr %221, %205
  br i1 %222, label %223, label %216

223:                                              ; preds = %220, %211
  invoke void @__cxa_rethrow() #23
          to label %233 unwind label %226

224:                                              ; preds = %216
  %225 = landingpad { ptr, i32 }
          catch ptr null
  br label %228

226:                                              ; preds = %223
  %227 = landingpad { ptr, i32 }
          catch ptr null
  br label %228

228:                                              ; preds = %226, %224
  %229 = phi { ptr, i32 } [ %225, %224 ], [ %227, %226 ]
  invoke void @__cxa_end_catch()
          to label %317 unwind label %230

230:                                              ; preds = %228
  %231 = landingpad { ptr, i32 }
          catch ptr null
  %232 = extractvalue { ptr, i32 } %231, 0
  tail call void @__clang_call_terminate(ptr %232) #22
  unreachable

233:                                              ; preds = %223
  unreachable

234:                                              ; preds = %207
  %235 = icmp eq ptr %180, %1
  br i1 %235, label %269, label %236

236:                                              ; preds = %234, %239
  %237 = phi ptr [ %241, %239 ], [ %202, %234 ]
  %238 = phi ptr [ %240, %239 ], [ %180, %234 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %237, ptr noundef nonnull align 8 dereferenceable(88) %238)
          to label %239 unwind label %243

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.dealii::Vector", ptr %238, i64 1
  %241 = getelementptr inbounds %"class.dealii::Vector", ptr %237, i64 1
  %242 = icmp eq ptr %240, %1
  br i1 %242, label %269, label %236

243:                                              ; preds = %236
  %244 = landingpad { ptr, i32 }
          catch ptr null
  %245 = extractvalue { ptr, i32 } %244, 0
  %246 = tail call ptr @__cxa_begin_catch(ptr %245) #19
  %247 = icmp eq ptr %237, %202
  br i1 %247, label %255, label %248

248:                                              ; preds = %243, %252
  %249 = phi ptr [ %253, %252 ], [ %202, %243 ]
  %250 = load ptr, ptr %249, align 8, !tbaa !41
  %251 = load ptr, ptr %250, align 8
  invoke void %251(ptr noundef nonnull align 8 dereferenceable(88) %249)
          to label %252 unwind label %256

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.dealii::Vector", ptr %249, i64 1
  %254 = icmp eq ptr %253, %237
  br i1 %254, label %255, label %248

255:                                              ; preds = %252, %243
  invoke void @__cxa_rethrow() #23
          to label %268 unwind label %258

256:                                              ; preds = %248
  %257 = landingpad { ptr, i32 }
          catch ptr null
  br label %260

258:                                              ; preds = %255
  %259 = landingpad { ptr, i32 }
          catch ptr null
  br label %260

260:                                              ; preds = %258, %256
  %261 = phi { ptr, i32 } [ %257, %256 ], [ %259, %258 ]
  invoke void @__cxa_end_catch()
          to label %262 unwind label %265

262:                                              ; preds = %260
  %263 = extractvalue { ptr, i32 } %261, 0
  %264 = tail call ptr @__cxa_begin_catch(ptr %263) #19
  br label %323

265:                                              ; preds = %260
  %266 = landingpad { ptr, i32 }
          catch ptr null
  %267 = extractvalue { ptr, i32 } %266, 0
  tail call void @__clang_call_terminate(ptr %267) #22
  unreachable

268:                                              ; preds = %255
  unreachable

269:                                              ; preds = %239, %234
  %270 = phi ptr [ %202, %234 ], [ %241, %239 ]
  %271 = getelementptr inbounds %"class.dealii::Vector", ptr %270, i64 %2
  %272 = icmp eq ptr %11, %1
  br i1 %272, label %303, label %273

273:                                              ; preds = %269, %276
  %274 = phi ptr [ %278, %276 ], [ %271, %269 ]
  %275 = phi ptr [ %277, %276 ], [ %1, %269 ]
  invoke void @_ZN6dealii6VectorIdEC1ERKS1_(ptr noundef nonnull align 8 dereferenceable(88) %274, ptr noundef nonnull align 8 dereferenceable(88) %275)
          to label %276 unwind label %280

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.dealii::Vector", ptr %275, i64 1
  %278 = getelementptr inbounds %"class.dealii::Vector", ptr %274, i64 1
  %279 = icmp eq ptr %277, %11
  br i1 %279, label %303, label %273

280:                                              ; preds = %273
  %281 = landingpad { ptr, i32 }
          catch ptr null
  %282 = extractvalue { ptr, i32 } %281, 0
  %283 = tail call ptr @__cxa_begin_catch(ptr %282) #19
  %284 = icmp eq ptr %274, %271
  br i1 %284, label %292, label %285

285:                                              ; preds = %280, %289
  %286 = phi ptr [ %290, %289 ], [ %271, %280 ]
  %287 = load ptr, ptr %286, align 8, !tbaa !41
  %288 = load ptr, ptr %287, align 8
  invoke void %288(ptr noundef nonnull align 8 dereferenceable(88) %286)
          to label %289 unwind label %293

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.dealii::Vector", ptr %286, i64 1
  %291 = icmp eq ptr %290, %274
  br i1 %291, label %292, label %285

292:                                              ; preds = %289, %280
  invoke void @__cxa_rethrow() #23
          to label %302 unwind label %295

293:                                              ; preds = %285
  %294 = landingpad { ptr, i32 }
          catch ptr null
  br label %297

295:                                              ; preds = %292
  %296 = landingpad { ptr, i32 }
          catch ptr null
  br label %297

297:                                              ; preds = %295, %293
  %298 = phi { ptr, i32 } [ %294, %293 ], [ %296, %295 ]
  invoke void @__cxa_end_catch()
          to label %317 unwind label %299

299:                                              ; preds = %297
  %300 = landingpad { ptr, i32 }
          catch ptr null
  %301 = extractvalue { ptr, i32 } %300, 0
  tail call void @__clang_call_terminate(ptr %301) #22
  unreachable

302:                                              ; preds = %292
  unreachable

303:                                              ; preds = %276, %269
  %304 = phi ptr [ %271, %269 ], [ %278, %276 ]
  %305 = icmp eq ptr %180, %11
  br i1 %305, label %312, label %306

306:                                              ; preds = %303, %306
  %307 = phi ptr [ %310, %306 ], [ %180, %303 ]
  %308 = load ptr, ptr %307, align 8, !tbaa !41
  %309 = load ptr, ptr %308, align 8
  tail call void %309(ptr noundef nonnull align 8 dereferenceable(88) %307)
  %310 = getelementptr inbounds %"class.dealii::Vector", ptr %307, i64 1
  %311 = icmp eq ptr %310, %11
  br i1 %311, label %312, label %306

312:                                              ; preds = %306, %303
  %313 = icmp eq ptr %180, null
  br i1 %313, label %315, label %314

314:                                              ; preds = %312
  tail call void @_ZdlPv(ptr noundef nonnull %180) #21
  br label %315

315:                                              ; preds = %312, %314
  store ptr %202, ptr %0, align 8, !tbaa !224
  store ptr %304, ptr %10, align 8, !tbaa !226
  %316 = getelementptr inbounds %"class.dealii::Vector", ptr %202, i64 %193
  store ptr %316, ptr %8, align 8, !tbaa !641
  br label %353

317:                                              ; preds = %297, %228
  %318 = phi ptr [ %202, %228 ], [ %271, %297 ]
  %319 = phi { ptr, i32 } [ %229, %228 ], [ %298, %297 ]
  %320 = extractvalue { ptr, i32 } %319, 0
  %321 = tail call ptr @__cxa_begin_catch(ptr %320) #19
  %322 = icmp eq ptr %318, null
  br i1 %322, label %323, label %340

323:                                              ; preds = %262, %317
  %324 = getelementptr inbounds %"class.dealii::Vector", ptr %203, i64 %2
  br label %325

325:                                              ; preds = %323, %329
  %326 = phi ptr [ %330, %329 ], [ %203, %323 ]
  %327 = load ptr, ptr %326, align 8, !tbaa !41
  %328 = load ptr, ptr %327, align 8
  invoke void %328(ptr noundef nonnull align 8 dereferenceable(88) %326)
          to label %329 unwind label %332

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.dealii::Vector", ptr %326, i64 1
  %331 = icmp eq ptr %330, %324
  br i1 %331, label %349, label %325

332:                                              ; preds = %325
  %333 = landingpad { ptr, i32 }
          cleanup
  br label %338

334:                                              ; preds = %342
  %335 = landingpad { ptr, i32 }
          cleanup
  br label %338

336:                                              ; preds = %352
  %337 = landingpad { ptr, i32 }
          cleanup
  br label %338

338:                                              ; preds = %334, %336, %332
  %339 = phi { ptr, i32 } [ %333, %332 ], [ %335, %334 ], [ %337, %336 ]
  invoke void @__cxa_end_catch()
          to label %354 unwind label %356

340:                                              ; preds = %317
  %341 = icmp eq ptr %202, %318
  br i1 %341, label %349, label %342

342:                                              ; preds = %340, %346
  %343 = phi ptr [ %347, %346 ], [ %202, %340 ]
  %344 = load ptr, ptr %343, align 8, !tbaa !41
  %345 = load ptr, ptr %344, align 8
  invoke void %345(ptr noundef nonnull align 8 dereferenceable(88) %343)
          to label %346 unwind label %334

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"class.dealii::Vector", ptr %343, i64 1
  %348 = icmp eq ptr %347, %318
  br i1 %348, label %349, label %342

349:                                              ; preds = %346, %329, %340
  %350 = icmp eq ptr %202, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %349
  tail call void @_ZdlPv(ptr noundef nonnull %202) #21
  br label %352

352:                                              ; preds = %351, %349
  invoke void @__cxa_rethrow() #23
          to label %359 unwind label %336

353:                                              ; preds = %175, %315, %4
  ret void

354:                                              ; preds = %338, %178
  %355 = phi { ptr, i32 } [ %177, %178 ], [ %339, %338 ]
  resume { ptr, i32 } %355

356:                                              ; preds = %338, %176
  %357 = landingpad { ptr, i32 }
          catch ptr null
  %358 = extractvalue { ptr, i32 } %357, 0
  call void @__clang_call_terminate(ptr %358) #22
  unreachable

359:                                              ; preds = %352
  unreachable
}

declare noundef nonnull align 8 dereferenceable(88) ptr @_ZN6dealii6VectorIdEaSERKS1_(ptr noundef nonnull align 8 dereferenceable(88), ptr noundef nonnull align 8 dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr %1, i64 noundef %2, ptr noundef nonnull align 4 dereferenceable(4) %3) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %251, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 2
  %8 = load ptr, ptr %7, align 8, !tbaa !492
  %9 = getelementptr inbounds %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl_data", ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !33
  %11 = ptrtoint ptr %8 to i64
  %12 = ptrtoint ptr %10 to i64
  %13 = sub i64 %11, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %169, label %16

16:                                               ; preds = %6
  %17 = load i32, ptr %3, align 4, !tbaa !59
  %18 = ptrtoint ptr %1 to i64
  %19 = sub i64 %12, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %20, %2
  br i1 %21, label %22, label %82

22:                                               ; preds = %16
  %23 = sub i64 0, %2
  %24 = getelementptr inbounds i32, ptr %10, i64 %23
  %25 = ptrtoint ptr %24 to i64
  %26 = shl i64 %2, 2
  %27 = icmp sgt i64 %26, 4
  br i1 %27, label %28, label %29, !prof !493

28:                                               ; preds = %22
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %10, ptr nonnull align 4 %24, i64 %26, i1 false)
  br label %33

29:                                               ; preds = %22
  %30 = icmp eq i64 %26, 4
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = load i32, ptr %24, align 4, !tbaa !59
  store i32 %32, ptr %10, align 4, !tbaa !59
  br label %33

33:                                               ; preds = %28, %29, %31
  %34 = load ptr, ptr %9, align 8, !tbaa !349
  %35 = getelementptr inbounds i32, ptr %34, i64 %2
  store ptr %35, ptr %9, align 8, !tbaa !349
  %36 = sub i64 %25, %18
  %37 = icmp sgt i64 %36, 4
  br i1 %37, label %38, label %42, !prof !493

38:                                               ; preds = %33
  %39 = lshr exact i64 %36, 2
  %40 = sub nsw i64 0, %39
  %41 = getelementptr inbounds i32, ptr %10, i64 %40
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %41, ptr align 4 %1, i64 %36, i1 false)
  br label %47

42:                                               ; preds = %33
  %43 = icmp eq i64 %36, 4
  br i1 %43, label %44, label %47

44:                                               ; preds = %42
  %45 = getelementptr inbounds i32, ptr %10, i64 -1
  %46 = load i32, ptr %1, align 4, !tbaa !59
  store i32 %46, ptr %45, align 4, !tbaa !59
  br label %47

47:                                               ; preds = %38, %42, %44
  %48 = getelementptr inbounds i32, ptr %1, i64 %2
  %49 = add i64 %2, 4611686018427387903
  %50 = and i64 %49, 4611686018427387903
  %51 = add nuw nsw i64 %50, 1
  %52 = icmp ult i64 %50, 31
  br i1 %52, label %76, label %53

53:                                               ; preds = %47
  %54 = and i64 %51, 9223372036854775776
  %55 = shl i64 %54, 2
  %56 = getelementptr i8, ptr %1, i64 %55
  %57 = insertelement <8 x i32> poison, i32 %17, i64 0
  %58 = shufflevector <8 x i32> %57, <8 x i32> poison, <8 x i32> zeroinitializer
  %59 = insertelement <8 x i32> poison, i32 %17, i64 0
  %60 = shufflevector <8 x i32> %59, <8 x i32> poison, <8 x i32> zeroinitializer
  %61 = insertelement <8 x i32> poison, i32 %17, i64 0
  %62 = shufflevector <8 x i32> %61, <8 x i32> poison, <8 x i32> zeroinitializer
  %63 = insertelement <8 x i32> poison, i32 %17, i64 0
  %64 = shufflevector <8 x i32> %63, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %65

65:                                               ; preds = %65, %53
  %66 = phi i64 [ 0, %53 ], [ %72, %65 ]
  %67 = shl i64 %66, 2
  %68 = getelementptr i8, ptr %1, i64 %67
  store <8 x i32> %58, ptr %68, align 4, !tbaa !59
  %69 = getelementptr i32, ptr %68, i64 8
  store <8 x i32> %60, ptr %69, align 4, !tbaa !59
  %70 = getelementptr i32, ptr %68, i64 16
  store <8 x i32> %62, ptr %70, align 4, !tbaa !59
  %71 = getelementptr i32, ptr %68, i64 24
  store <8 x i32> %64, ptr %71, align 4, !tbaa !59
  %72 = add nuw i64 %66, 32
  %73 = icmp eq i64 %72, %54
  br i1 %73, label %74, label %65, !llvm.loop !692

74:                                               ; preds = %65
  %75 = icmp eq i64 %51, %54
  br i1 %75, label %251, label %76

76:                                               ; preds = %47, %74
  %77 = phi ptr [ %1, %47 ], [ %56, %74 ]
  br label %78

78:                                               ; preds = %76, %78
  %79 = phi ptr [ %80, %78 ], [ %77, %76 ]
  store i32 %17, ptr %79, align 4, !tbaa !59
  %80 = getelementptr inbounds i32, ptr %79, i64 1
  %81 = icmp eq ptr %80, %48
  br i1 %81, label %251, label %78, !llvm.loop !693

82:                                               ; preds = %16
  %83 = icmp eq i64 %20, %2
  br i1 %83, label %122, label %84

84:                                               ; preds = %82
  %85 = sub i64 %2, %20
  %86 = getelementptr inbounds i32, ptr %10, i64 %85
  %87 = shl nsw i64 %2, 2
  %88 = add i64 %87, -4
  %89 = sub i64 %88, %19
  %90 = lshr i64 %89, 2
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %89, 124
  br i1 %92, label %116, label %93

93:                                               ; preds = %84
  %94 = and i64 %91, 9223372036854775776
  %95 = shl i64 %94, 2
  %96 = getelementptr i8, ptr %10, i64 %95
  %97 = insertelement <8 x i32> poison, i32 %17, i64 0
  %98 = shufflevector <8 x i32> %97, <8 x i32> poison, <8 x i32> zeroinitializer
  %99 = insertelement <8 x i32> poison, i32 %17, i64 0
  %100 = shufflevector <8 x i32> %99, <8 x i32> poison, <8 x i32> zeroinitializer
  %101 = insertelement <8 x i32> poison, i32 %17, i64 0
  %102 = shufflevector <8 x i32> %101, <8 x i32> poison, <8 x i32> zeroinitializer
  %103 = insertelement <8 x i32> poison, i32 %17, i64 0
  %104 = shufflevector <8 x i32> %103, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %105

105:                                              ; preds = %105, %93
  %106 = phi i64 [ 0, %93 ], [ %112, %105 ]
  %107 = shl i64 %106, 2
  %108 = getelementptr i8, ptr %10, i64 %107
  store <8 x i32> %98, ptr %108, align 4, !tbaa !59
  %109 = getelementptr i32, ptr %108, i64 8
  store <8 x i32> %100, ptr %109, align 4, !tbaa !59
  %110 = getelementptr i32, ptr %108, i64 16
  store <8 x i32> %102, ptr %110, align 4, !tbaa !59
  %111 = getelementptr i32, ptr %108, i64 24
  store <8 x i32> %104, ptr %111, align 4, !tbaa !59
  %112 = add nuw i64 %106, 32
  %113 = icmp eq i64 %112, %94
  br i1 %113, label %114, label %105, !llvm.loop !694

114:                                              ; preds = %105
  %115 = icmp eq i64 %91, %94
  br i1 %115, label %122, label %116

116:                                              ; preds = %84, %114
  %117 = phi ptr [ %10, %84 ], [ %96, %114 ]
  br label %118

118:                                              ; preds = %116, %118
  %119 = phi ptr [ %120, %118 ], [ %117, %116 ]
  store i32 %17, ptr %119, align 4, !tbaa !59
  %120 = getelementptr inbounds i32, ptr %119, i64 1
  %121 = icmp eq ptr %120, %86
  br i1 %121, label %122, label %118, !llvm.loop !695

122:                                              ; preds = %118, %114, %82
  %123 = phi ptr [ %10, %82 ], [ %86, %114 ], [ %86, %118 ]
  store ptr %123, ptr %9, align 8, !tbaa !349
  %124 = icmp sgt i64 %19, 4
  br i1 %124, label %125, label %126, !prof !493

125:                                              ; preds = %122
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %123, ptr align 4 %1, i64 %19, i1 false)
  br label %130

126:                                              ; preds = %122
  %127 = icmp eq i64 %19, 4
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = load i32, ptr %1, align 4, !tbaa !59
  store i32 %129, ptr %123, align 4, !tbaa !59
  br label %130

130:                                              ; preds = %125, %126, %128
  %131 = load ptr, ptr %9, align 8, !tbaa !349
  %132 = getelementptr inbounds i32, ptr %131, i64 %20
  store ptr %132, ptr %9, align 8, !tbaa !349
  %133 = icmp eq ptr %10, %1
  br i1 %133, label %251, label %134

134:                                              ; preds = %130
  %135 = add i64 %12, -4
  %136 = sub i64 %135, %18
  %137 = lshr i64 %136, 2
  %138 = add nuw nsw i64 %137, 1
  %139 = icmp ult i64 %136, 124
  br i1 %139, label %163, label %140

140:                                              ; preds = %134
  %141 = and i64 %138, 9223372036854775776
  %142 = shl i64 %141, 2
  %143 = getelementptr i8, ptr %1, i64 %142
  %144 = insertelement <8 x i32> poison, i32 %17, i64 0
  %145 = shufflevector <8 x i32> %144, <8 x i32> poison, <8 x i32> zeroinitializer
  %146 = insertelement <8 x i32> poison, i32 %17, i64 0
  %147 = shufflevector <8 x i32> %146, <8 x i32> poison, <8 x i32> zeroinitializer
  %148 = insertelement <8 x i32> poison, i32 %17, i64 0
  %149 = shufflevector <8 x i32> %148, <8 x i32> poison, <8 x i32> zeroinitializer
  %150 = insertelement <8 x i32> poison, i32 %17, i64 0
  %151 = shufflevector <8 x i32> %150, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %152

152:                                              ; preds = %152, %140
  %153 = phi i64 [ 0, %140 ], [ %159, %152 ]
  %154 = shl i64 %153, 2
  %155 = getelementptr i8, ptr %1, i64 %154
  store <8 x i32> %145, ptr %155, align 4, !tbaa !59
  %156 = getelementptr i32, ptr %155, i64 8
  store <8 x i32> %147, ptr %156, align 4, !tbaa !59
  %157 = getelementptr i32, ptr %155, i64 16
  store <8 x i32> %149, ptr %157, align 4, !tbaa !59
  %158 = getelementptr i32, ptr %155, i64 24
  store <8 x i32> %151, ptr %158, align 4, !tbaa !59
  %159 = add nuw i64 %153, 32
  %160 = icmp eq i64 %159, %141
  br i1 %160, label %161, label %152, !llvm.loop !696

161:                                              ; preds = %152
  %162 = icmp eq i64 %138, %141
  br i1 %162, label %251, label %163

163:                                              ; preds = %134, %161
  %164 = phi ptr [ %1, %134 ], [ %143, %161 ]
  br label %165

165:                                              ; preds = %163, %165
  %166 = phi ptr [ %167, %165 ], [ %164, %163 ]
  store i32 %17, ptr %166, align 4, !tbaa !59
  %167 = getelementptr inbounds i32, ptr %166, i64 1
  %168 = icmp eq ptr %167, %10
  br i1 %168, label %251, label %165, !llvm.loop !697

169:                                              ; preds = %6
  %170 = load ptr, ptr %0, align 8, !tbaa !144
  %171 = ptrtoint ptr %170 to i64
  %172 = sub i64 %12, %171
  %173 = ashr exact i64 %172, 2
  %174 = sub nsw i64 2305843009213693951, %173
  %175 = icmp ult i64 %174, %2
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.16) #23
  unreachable

177:                                              ; preds = %169
  %178 = tail call i64 @llvm.umax.i64(i64 %173, i64 %2)
  %179 = add i64 %178, %173
  %180 = icmp ult i64 %179, %173
  %181 = icmp ugt i64 %179, 2305843009213693951
  %182 = or i1 %180, %181
  %183 = select i1 %182, i64 2305843009213693951, i64 %179
  %184 = ptrtoint ptr %1 to i64
  %185 = sub i64 %184, %171
  %186 = ashr exact i64 %185, 2
  %187 = icmp eq i64 %183, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %177
  %189 = shl nuw nsw i64 %183, 2
  %190 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %189) #20
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi ptr [ %190, %188 ], [ null, %177 ]
  %193 = getelementptr inbounds i32, ptr %192, i64 %186
  %194 = getelementptr inbounds i32, ptr %193, i64 %2
  %195 = load i32, ptr %3, align 4, !tbaa !59
  %196 = add i64 %2, 4611686018427387903
  %197 = and i64 %196, 4611686018427387903
  %198 = add nuw nsw i64 %197, 1
  %199 = icmp ult i64 %197, 31
  br i1 %199, label %223, label %200

200:                                              ; preds = %191
  %201 = and i64 %198, 9223372036854775776
  %202 = shl i64 %201, 2
  %203 = getelementptr i8, ptr %193, i64 %202
  %204 = insertelement <8 x i32> poison, i32 %195, i64 0
  %205 = shufflevector <8 x i32> %204, <8 x i32> poison, <8 x i32> zeroinitializer
  %206 = insertelement <8 x i32> poison, i32 %195, i64 0
  %207 = shufflevector <8 x i32> %206, <8 x i32> poison, <8 x i32> zeroinitializer
  %208 = insertelement <8 x i32> poison, i32 %195, i64 0
  %209 = shufflevector <8 x i32> %208, <8 x i32> poison, <8 x i32> zeroinitializer
  %210 = insertelement <8 x i32> poison, i32 %195, i64 0
  %211 = shufflevector <8 x i32> %210, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %212

212:                                              ; preds = %212, %200
  %213 = phi i64 [ 0, %200 ], [ %219, %212 ]
  %214 = shl i64 %213, 2
  %215 = getelementptr i8, ptr %193, i64 %214
  store <8 x i32> %205, ptr %215, align 4, !tbaa !59
  %216 = getelementptr i32, ptr %215, i64 8
  store <8 x i32> %207, ptr %216, align 4, !tbaa !59
  %217 = getelementptr i32, ptr %215, i64 16
  store <8 x i32> %209, ptr %217, align 4, !tbaa !59
  %218 = getelementptr i32, ptr %215, i64 24
  store <8 x i32> %211, ptr %218, align 4, !tbaa !59
  %219 = add nuw i64 %213, 32
  %220 = icmp eq i64 %219, %201
  br i1 %220, label %221, label %212, !llvm.loop !698

221:                                              ; preds = %212
  %222 = icmp eq i64 %198, %201
  br i1 %222, label %229, label %223

223:                                              ; preds = %191, %221
  %224 = phi ptr [ %193, %191 ], [ %203, %221 ]
  br label %225

225:                                              ; preds = %223, %225
  %226 = phi ptr [ %227, %225 ], [ %224, %223 ]
  store i32 %195, ptr %226, align 4, !tbaa !59
  %227 = getelementptr inbounds i32, ptr %226, i64 1
  %228 = icmp eq ptr %227, %194
  br i1 %228, label %229, label %225, !llvm.loop !699

229:                                              ; preds = %225, %221
  %230 = icmp sgt i64 %185, 4
  br i1 %230, label %231, label %232, !prof !493

231:                                              ; preds = %229
  tail call void @llvm.memmove.p0.p0.i64(ptr align 4 %192, ptr align 4 %170, i64 %185, i1 false)
  br label %236

232:                                              ; preds = %229
  %233 = icmp eq i64 %185, 4
  br i1 %233, label %234, label %236

234:                                              ; preds = %232
  %235 = load i32, ptr %170, align 4, !tbaa !59
  store i32 %235, ptr %192, align 4, !tbaa !59
  br label %236

236:                                              ; preds = %234, %232, %231
  %237 = sub i64 %12, %184
  %238 = icmp sgt i64 %237, 4
  br i1 %238, label %239, label %240, !prof !493

239:                                              ; preds = %236
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 4 %194, ptr align 4 %1, i64 %237, i1 false)
  br label %244

240:                                              ; preds = %236
  %241 = icmp eq i64 %237, 4
  br i1 %241, label %242, label %244

242:                                              ; preds = %240
  %243 = load i32, ptr %1, align 4, !tbaa !59
  store i32 %243, ptr %194, align 4, !tbaa !59
  br label %244

244:                                              ; preds = %242, %240, %239
  %245 = ashr exact i64 %237, 2
  %246 = getelementptr inbounds i32, ptr %194, i64 %245
  %247 = icmp eq ptr %170, null
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  tail call void @_ZdlPv(ptr noundef nonnull %170) #21
  br label %249

249:                                              ; preds = %244, %248
  store ptr %192, ptr %0, align 8, !tbaa !144
  store ptr %246, ptr %9, align 8, !tbaa !349
  %250 = getelementptr inbounds i32, ptr %192, i64 %183
  store ptr %250, ptr %7, align 8, !tbaa !492
  br label %251

251:                                              ; preds = %165, %78, %161, %74, %130, %249, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi3ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !325
  %6 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !336
  %8 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %7, i64 0, i32 1
  %9 = zext i32 %2 to i64
  %10 = load ptr, ptr %8, align 8, !tbaa !338
  %11 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8, !tbaa !340
  %13 = getelementptr inbounds i8, ptr %12, i64 72
  %14 = load i32, ptr %13, align 8, !tbaa !700
  %15 = getelementptr inbounds i8, ptr %12, i64 76
  %16 = load i32, ptr %15, align 4, !tbaa !701
  %17 = getelementptr inbounds i8, ptr %12, i64 80
  %18 = load i32, ptr %17, align 8, !tbaa !702
  %19 = getelementptr inbounds i8, ptr %12, i64 84
  %20 = load i32, ptr %19, align 4, !tbaa !703
  %21 = load ptr, ptr %1, align 8, !tbaa !33
  %22 = icmp eq i32 %14, 0
  %23 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.dealii::TriaAccessorBase", ptr %0, i64 0, i32 1
  br i1 %22, label %150, label %25

25:                                               ; preds = %3
  %26 = zext i32 %14 to i64
  br label %27

27:                                               ; preds = %25, %147
  %28 = phi i32 [ %148, %147 ], [ 0, %25 ]
  %29 = phi ptr [ %144, %147 ], [ %21, %25 ]
  %30 = lshr i32 %28, 2
  %31 = add nuw nsw i32 %30, 4
  %32 = zext i32 %31 to i64
  %33 = and i32 %28, 3
  br label %34

34:                                               ; preds = %27, %139
  %35 = phi i64 [ 0, %27 ], [ %145, %139 ]
  %36 = phi ptr [ %29, %27 ], [ %144, %139 ]
  %37 = load ptr, ptr %4, align 8, !tbaa !325
  %38 = load ptr, ptr %23, align 8, !tbaa !62
  %39 = getelementptr inbounds %"class.dealii::Triangulation", ptr %38, i64 0, i32 1
  %40 = load i32, ptr %0, align 8, !tbaa !60
  %41 = sext i32 %40 to i64
  %42 = load ptr, ptr %39, align 8, !tbaa !46
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8, !tbaa !33
  %45 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %44, i64 0, i32 4
  %46 = load i32, ptr %24, align 4, !tbaa !61
  %47 = sext i32 %46 to i64
  %48 = load ptr, ptr %45, align 8, !tbaa !50, !noalias !704
  %49 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %48, i64 %47
  %50 = getelementptr inbounds [6 x i32], ptr %49, i64 0, i64 %32
  %51 = load i32, ptr %50, align 4, !tbaa !59, !noalias !704
  %52 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %44, i64 0, i32 4, i32 1
  %53 = mul i32 %46, 6
  %54 = add i32 %53, %31
  %55 = load ptr, ptr %52, align 8, !tbaa !54
  %56 = lshr i32 %54, 6
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i64, ptr %55, i64 %57
  %59 = and i32 %54, 63
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 1, %60
  %62 = load i64, ptr %58, align 8, !tbaa !56
  %63 = and i64 %61, %62
  %64 = icmp ne i64 %63, 0
  %65 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %44, i64 0, i32 4, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !54
  %67 = getelementptr inbounds i64, ptr %66, i64 %57
  %68 = load i64, ptr %67, align 8, !tbaa !56
  %69 = and i64 %68, %61
  %70 = icmp ne i64 %69, 0
  %71 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %44, i64 0, i32 4, i32 3
  %72 = load ptr, ptr %71, align 8, !tbaa !54
  %73 = getelementptr inbounds i64, ptr %72, i64 %57
  %74 = load i64, ptr %73, align 8, !tbaa !56
  %75 = and i64 %74, %61
  %76 = icmp ne i64 %75, 0
  %77 = tail call noundef i32 @_ZN6dealii12GeometryInfoILi3EE28standard_to_real_face_vertexEjbbb(i32 noundef %33, i1 noundef zeroext %64, i1 noundef zeroext %70, i1 noundef zeroext %76)
  %78 = and i32 %77, 1
  %79 = getelementptr inbounds %"class.dealii::Triangulation", ptr %38, i64 0, i32 2
  %80 = load ptr, ptr %79, align 8, !tbaa !514
  %81 = sext i32 %51 to i64
  %82 = load ptr, ptr %80, align 8, !tbaa !707, !noalias !709
  %83 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %82, i64 %81
  %84 = zext i32 %78 to i64
  %85 = getelementptr inbounds [4 x i32], ptr %83, i64 0, i64 %84
  %86 = load i32, ptr %85, align 4, !tbaa !59, !noalias !709
  %87 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %80, i64 0, i32 1
  %88 = shl i32 %51, 2
  %89 = load ptr, ptr %87, align 8, !tbaa !54
  %90 = lshr i32 %88, 6
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i64, ptr %89, i64 %91
  %93 = and i32 %88, 60
  %94 = or i32 %78, %93
  %95 = zext i32 %94 to i64
  %96 = load i64, ptr %92, align 8, !tbaa !56
  %97 = lshr i64 %96, %95
  %98 = and i64 %97, 1
  %99 = lshr i32 %77, 1
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %98, i64 %100
  %102 = load i32, ptr %101, align 4, !tbaa !59
  %103 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaFaces", ptr %80, i64 0, i32 1
  %104 = sext i32 %86 to i64
  %105 = load ptr, ptr %103, align 8, !tbaa !712
  %106 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %105, i64 %104
  %107 = zext i32 %102 to i64
  %108 = getelementptr inbounds [2 x i32], ptr %106, i64 0, i64 %107
  %109 = load i32, ptr %108, align 4, !tbaa !59
  %110 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %37, i64 0, i32 8
  %111 = zext i32 %109 to i64
  %112 = load ptr, ptr %110, align 8, !tbaa !144
  %113 = getelementptr inbounds i32, ptr %112, i64 %111
  %114 = load i32, ptr %113, align 4, !tbaa !59
  %115 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %37, i64 0, i32 7
  %116 = zext i32 %114 to i64
  %117 = load ptr, ptr %115, align 8, !tbaa !144
  %118 = getelementptr inbounds i32, ptr %117, i64 %116
  %119 = load i32, ptr %118, align 4, !tbaa !59
  %120 = icmp eq i32 %119, %2
  br i1 %120, label %139, label %121

121:                                              ; preds = %34
  %122 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %37, i64 0, i32 3
  %123 = load ptr, ptr %122, align 8, !tbaa !336
  %124 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %123, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !338
  br label %126

126:                                              ; preds = %126, %121
  %127 = phi i32 [ %119, %121 ], [ %137, %126 ]
  %128 = phi ptr [ %118, %121 ], [ %136, %126 ]
  %129 = zext i32 %127 to i64
  %130 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %125, i64 %129
  %131 = load ptr, ptr %130, align 8, !tbaa !340
  %132 = getelementptr inbounds i8, ptr %131, i64 72
  %133 = load i32, ptr %132, align 8, !tbaa !700
  %134 = add i32 %133, 1
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds i32, ptr %128, i64 %135
  %137 = load i32, ptr %136, align 4, !tbaa !59
  %138 = icmp eq i32 %137, %2
  br i1 %138, label %139, label %126

139:                                              ; preds = %126, %34
  %140 = phi ptr [ %118, %34 ], [ %136, %126 ]
  %141 = getelementptr inbounds i32, ptr %140, i64 1
  %142 = getelementptr inbounds i32, ptr %141, i64 %35
  %143 = load i32, ptr %142, align 4, !tbaa !59
  %144 = getelementptr inbounds i32, ptr %36, i64 1
  store i32 %143, ptr %36, align 4, !tbaa !59
  %145 = add nuw nsw i64 %35, 1
  %146 = icmp eq i64 %145, %26
  br i1 %146, label %147, label %34

147:                                              ; preds = %139
  %148 = add nuw nsw i32 %28, 1
  %149 = icmp eq i32 %148, 8
  br i1 %149, label %150, label %27

150:                                              ; preds = %147, %3
  %151 = phi ptr [ %21, %3 ], [ %144, %147 ]
  %152 = icmp eq i32 %16, 0
  br i1 %152, label %359, label %153

153:                                              ; preds = %150, %356
  %154 = phi i64 [ %357, %356 ], [ 0, %150 ]
  %155 = phi ptr [ %353, %356 ], [ %151, %150 ]
  %156 = getelementptr inbounds [12 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation10line_indexILi3ELi3EEEjRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table, i64 0, i64 %154
  %157 = load i32, ptr %156, align 8, !tbaa !59, !noalias !714
  %158 = getelementptr inbounds [12 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation10line_indexILi3ELi3EEEjRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table, i64 0, i64 %154, i64 1
  %159 = load i32, ptr %158, align 4, !tbaa !59, !noalias !714
  %160 = zext i32 %157 to i64
  %161 = getelementptr inbounds [12 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table, i64 0, i64 %154
  %162 = getelementptr inbounds [12 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE12lookup_table, i64 0, i64 %154, i64 1
  br label %163

163:                                              ; preds = %153, %347
  %164 = phi i32 [ 0, %153 ], [ %354, %347 ]
  %165 = phi ptr [ %155, %153 ], [ %353, %347 ]
  %166 = load ptr, ptr %23, align 8, !tbaa !62, !noalias !714
  %167 = getelementptr inbounds %"class.dealii::Triangulation", ptr %166, i64 0, i32 1
  %168 = load i32, ptr %0, align 8, !tbaa !60, !noalias !714
  %169 = sext i32 %168 to i64
  %170 = load ptr, ptr %167, align 8, !tbaa !46, !noalias !714
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  %172 = load ptr, ptr %171, align 8, !tbaa !33, !noalias !714
  %173 = load i32, ptr %24, align 4, !tbaa !61, !noalias !714
  %174 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %172, i64 0, i32 4, i32 1
  %175 = mul i32 %173, 6
  %176 = add i32 %175, %157
  %177 = load ptr, ptr %174, align 8, !tbaa !54, !noalias !714
  %178 = lshr i32 %176, 6
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds i64, ptr %177, i64 %179
  %181 = and i32 %176, 63
  %182 = zext i32 %181 to i64
  %183 = shl nuw i64 1, %182
  %184 = load i64, ptr %180, align 8, !tbaa !56, !noalias !714
  %185 = and i64 %183, %184
  %186 = icmp ne i64 %185, 0
  %187 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %172, i64 0, i32 4, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !54, !noalias !714
  %189 = getelementptr inbounds i64, ptr %188, i64 %179
  %190 = load i64, ptr %189, align 8, !tbaa !56, !noalias !714
  %191 = and i64 %183, %190
  %192 = icmp ne i64 %191, 0
  %193 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %172, i64 0, i32 4, i32 3
  %194 = load ptr, ptr %193, align 8, !tbaa !54, !noalias !714
  %195 = getelementptr inbounds i64, ptr %194, i64 %179
  %196 = load i64, ptr %195, align 8, !tbaa !56, !noalias !714
  %197 = and i64 %196, %183
  %198 = icmp ne i64 %197, 0
  %199 = tail call noundef i32 @_ZN6dealii12GeometryInfoILi3EE26standard_to_real_face_lineEjbbb(i32 noundef %159, i1 noundef zeroext %186, i1 noundef zeroext %192, i1 noundef zeroext %198), !noalias !714
  %200 = load ptr, ptr %23, align 8, !tbaa !62
  %201 = getelementptr inbounds %"class.dealii::Triangulation", ptr %200, i64 0, i32 1
  %202 = load i32, ptr %0, align 8, !tbaa !60
  %203 = sext i32 %202 to i64
  %204 = load ptr, ptr %201, align 8, !tbaa !46
  %205 = getelementptr inbounds ptr, ptr %204, i64 %203
  %206 = load ptr, ptr %205, align 8, !tbaa !33
  %207 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %206, i64 0, i32 4
  %208 = load i32, ptr %24, align 4, !tbaa !61
  %209 = sext i32 %208 to i64
  %210 = load ptr, ptr %207, align 8, !tbaa !50, !noalias !717
  %211 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %210, i64 %209
  %212 = getelementptr inbounds [6 x i32], ptr %211, i64 0, i64 %160
  %213 = load i32, ptr %212, align 4, !tbaa !59, !noalias !717
  %214 = getelementptr inbounds %"class.dealii::Triangulation", ptr %200, i64 0, i32 2
  %215 = load ptr, ptr %214, align 8, !tbaa !514, !noalias !714
  %216 = sext i32 %213 to i64
  %217 = load ptr, ptr %215, align 8, !tbaa !707, !noalias !714
  %218 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %217, i64 %216
  %219 = zext i32 %199 to i64
  %220 = getelementptr inbounds [4 x i32], ptr %218, i64 0, i64 %219
  %221 = load i32, ptr %220, align 4, !tbaa !59, !noalias !714
  %222 = load ptr, ptr %4, align 8, !tbaa !325
  %223 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %222, i64 0, i32 3
  %224 = load ptr, ptr %223, align 8, !tbaa !336
  %225 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %224, i64 0, i32 1
  %226 = load ptr, ptr %225, align 8, !tbaa !338
  %227 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %226, i64 %9
  %228 = load ptr, ptr %227, align 8, !tbaa !340
  %229 = load i32, ptr %161, align 8, !tbaa !59
  %230 = load i32, ptr %162, align 4, !tbaa !59
  %231 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %206, i64 0, i32 4, i32 1
  %232 = mul i32 %208, 6
  %233 = add i32 %229, %232
  %234 = load ptr, ptr %231, align 8, !tbaa !54
  %235 = lshr i32 %233, 6
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i64, ptr %234, i64 %236
  %238 = and i32 %233, 63
  %239 = zext i32 %238 to i64
  %240 = shl nuw i64 1, %239
  %241 = load i64, ptr %237, align 8, !tbaa !56
  %242 = and i64 %240, %241
  %243 = icmp ne i64 %242, 0
  %244 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %206, i64 0, i32 4, i32 2
  %245 = load ptr, ptr %244, align 8, !tbaa !54
  %246 = getelementptr inbounds i64, ptr %245, i64 %236
  %247 = load i64, ptr %246, align 8, !tbaa !56
  %248 = and i64 %247, %240
  %249 = icmp ne i64 %248, 0
  %250 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %206, i64 0, i32 4, i32 3
  %251 = load ptr, ptr %250, align 8, !tbaa !54
  %252 = getelementptr inbounds i64, ptr %251, i64 %236
  %253 = load i64, ptr %252, align 8, !tbaa !56
  %254 = and i64 %253, %240
  %255 = icmp ne i64 %254, 0
  %256 = tail call noundef i32 @_ZN6dealii12GeometryInfoILi3EE26standard_to_real_face_lineEjbbb(i32 noundef %230, i1 noundef zeroext %243, i1 noundef zeroext %249, i1 noundef zeroext %255)
  %257 = load ptr, ptr %23, align 8, !tbaa !62
  %258 = getelementptr inbounds %"class.dealii::Triangulation", ptr %257, i64 0, i32 1
  %259 = load i32, ptr %0, align 8, !tbaa !60
  %260 = sext i32 %259 to i64
  %261 = load ptr, ptr %258, align 8, !tbaa !46
  %262 = getelementptr inbounds ptr, ptr %261, i64 %260
  %263 = load ptr, ptr %262, align 8, !tbaa !33
  %264 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %263, i64 0, i32 4
  %265 = load i32, ptr %24, align 4, !tbaa !61
  %266 = sext i32 %265 to i64
  %267 = load ptr, ptr %264, align 8, !tbaa !50, !noalias !720
  %268 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %267, i64 %266
  %269 = zext i32 %229 to i64
  %270 = getelementptr inbounds [6 x i32], ptr %268, i64 0, i64 %269
  %271 = load i32, ptr %270, align 4, !tbaa !59, !noalias !720
  %272 = getelementptr inbounds %"class.dealii::Triangulation", ptr %257, i64 0, i32 2
  %273 = load ptr, ptr %272, align 8, !tbaa !514
  %274 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %273, i64 0, i32 1
  %275 = shl i32 %271, 2
  %276 = add i32 %275, %256
  %277 = load ptr, ptr %274, align 8, !tbaa !54
  %278 = lshr i32 %276, 6
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds i64, ptr %277, i64 %279
  %281 = and i32 %276, 63
  %282 = zext i32 %281 to i64
  %283 = shl nuw i64 1, %282
  %284 = load i64, ptr %280, align 8, !tbaa !56
  %285 = and i64 %283, %284
  %286 = icmp ne i64 %285, 0
  %287 = lshr i32 %230, 1
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %263, i64 0, i32 4, i32 1
  %290 = mul i32 %265, 6
  %291 = add i32 %290, %229
  %292 = load ptr, ptr %289, align 8, !tbaa !54
  %293 = lshr i32 %291, 6
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds i64, ptr %292, i64 %294
  %296 = and i32 %291, 63
  %297 = zext i32 %296 to i64
  %298 = load i64, ptr %295, align 8, !tbaa !56
  %299 = lshr i64 %298, %297
  %300 = and i64 %299, 1
  %301 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %263, i64 0, i32 4, i32 2
  %302 = load ptr, ptr %301, align 8, !tbaa !54
  %303 = getelementptr inbounds i64, ptr %302, i64 %294
  %304 = load i64, ptr %303, align 8, !tbaa !56
  %305 = lshr i64 %304, %297
  %306 = and i64 %305, 1
  %307 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %263, i64 0, i32 4, i32 3
  %308 = load ptr, ptr %307, align 8, !tbaa !54
  %309 = getelementptr inbounds i64, ptr %308, i64 %294
  %310 = load i64, ptr %309, align 8, !tbaa !56
  %311 = lshr i64 %310, %297
  %312 = and i64 %311, 1
  %313 = getelementptr inbounds [2 x [2 x [2 x [2 x i8]]]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation16line_orientationILi3ELi3EEEbRKNS_12TriaAccessorILi3EXT_EXT0_EEEjE10bool_table, i64 0, i64 %288, i64 %300, i64 %306, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !723, !range !182, !noundef !183
  %315 = zext i1 %286 to i8
  %316 = icmp eq i8 %314, %315
  %317 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %228, i32 noundef %164, i1 noundef zeroext %316)
  %318 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %222, i64 0, i32 5
  %319 = load ptr, ptr %318, align 8, !tbaa !724
  %320 = zext i32 %221 to i64
  %321 = load ptr, ptr %319, align 8, !tbaa !144
  %322 = getelementptr inbounds i32, ptr %321, i64 %320
  %323 = load i32, ptr %322, align 4, !tbaa !59
  %324 = getelementptr inbounds %"class.dealii::internal::hp::DoFObjects", ptr %319, i64 0, i32 1
  %325 = zext i32 %323 to i64
  %326 = load ptr, ptr %324, align 8, !tbaa !144
  %327 = getelementptr inbounds i32, ptr %326, i64 %325
  %328 = load i32, ptr %327, align 4, !tbaa !59
  %329 = icmp eq i32 %328, %2
  br i1 %329, label %347, label %330

330:                                              ; preds = %163
  %331 = load ptr, ptr %223, align 8, !tbaa !336
  %332 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %331, i64 0, i32 1
  %333 = load ptr, ptr %332, align 8, !tbaa !338
  br label %334

334:                                              ; preds = %334, %330
  %335 = phi i32 [ %328, %330 ], [ %345, %334 ]
  %336 = phi ptr [ %327, %330 ], [ %344, %334 ]
  %337 = zext i32 %335 to i64
  %338 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %333, i64 %337
  %339 = load ptr, ptr %338, align 8, !tbaa !340
  %340 = getelementptr inbounds i8, ptr %339, i64 76
  %341 = load i32, ptr %340, align 4, !tbaa !701
  %342 = add i32 %341, 1
  %343 = zext i32 %342 to i64
  %344 = getelementptr inbounds i32, ptr %336, i64 %343
  %345 = load i32, ptr %344, align 4, !tbaa !59
  %346 = icmp eq i32 %345, %2
  br i1 %346, label %347, label %334

347:                                              ; preds = %334, %163
  %348 = phi ptr [ %327, %163 ], [ %344, %334 ]
  %349 = getelementptr inbounds i32, ptr %348, i64 1
  %350 = zext i32 %317 to i64
  %351 = getelementptr inbounds i32, ptr %349, i64 %350
  %352 = load i32, ptr %351, align 4, !tbaa !59
  %353 = getelementptr inbounds i32, ptr %165, i64 1
  store i32 %352, ptr %165, align 4, !tbaa !59
  %354 = add nuw i32 %164, 1
  %355 = icmp eq i32 %354, %16
  br i1 %355, label %356, label %163

356:                                              ; preds = %347
  %357 = add nuw nsw i64 %154, 1
  %358 = icmp eq i64 %357, 12
  br i1 %358, label %359, label %153

359:                                              ; preds = %356, %150
  %360 = phi ptr [ %151, %150 ], [ %353, %356 ]
  %361 = icmp eq i32 %18, 0
  br i1 %361, label %458, label %362

362:                                              ; preds = %359, %455
  %363 = phi i64 [ %456, %455 ], [ 0, %359 ]
  %364 = phi ptr [ %452, %455 ], [ %360, %359 ]
  %365 = trunc i64 %363 to i32
  br label %366

366:                                              ; preds = %362, %446
  %367 = phi i32 [ 0, %362 ], [ %453, %446 ]
  %368 = phi ptr [ %364, %362 ], [ %452, %446 ]
  %369 = load ptr, ptr %23, align 8, !tbaa !62
  %370 = getelementptr inbounds %"class.dealii::Triangulation", ptr %369, i64 0, i32 1
  %371 = load i32, ptr %0, align 8, !tbaa !60
  %372 = sext i32 %371 to i64
  %373 = load ptr, ptr %370, align 8, !tbaa !46
  %374 = getelementptr inbounds ptr, ptr %373, i64 %372
  %375 = load ptr, ptr %374, align 8, !tbaa !33
  %376 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %375, i64 0, i32 4
  %377 = load i32, ptr %24, align 4, !tbaa !61
  %378 = sext i32 %377 to i64
  %379 = load ptr, ptr %376, align 8, !tbaa !50, !noalias !735
  %380 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject", ptr %379, i64 %378
  %381 = getelementptr inbounds [6 x i32], ptr %380, i64 0, i64 %363
  %382 = load i32, ptr %381, align 4, !tbaa !59, !noalias !735
  %383 = load ptr, ptr %4, align 8, !tbaa !325
  %384 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %383, i64 0, i32 3
  %385 = load ptr, ptr %384, align 8, !tbaa !336
  %386 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %385, i64 0, i32 1
  %387 = load ptr, ptr %386, align 8, !tbaa !338
  %388 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %387, i64 %9
  %389 = load ptr, ptr %388, align 8, !tbaa !340
  %390 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %375, i64 0, i32 4, i32 1
  %391 = mul i32 %377, 6
  %392 = add i32 %391, %365
  %393 = load ptr, ptr %390, align 8, !tbaa !54
  %394 = lshr i32 %392, 6
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds i64, ptr %393, i64 %395
  %397 = and i32 %392, 63
  %398 = zext i32 %397 to i64
  %399 = shl nuw i64 1, %398
  %400 = load i64, ptr %396, align 8, !tbaa !56
  %401 = and i64 %400, %399
  %402 = icmp ne i64 %401, 0
  %403 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %375, i64 0, i32 4, i32 2
  %404 = load ptr, ptr %403, align 8, !tbaa !54
  %405 = getelementptr inbounds i64, ptr %404, i64 %395
  %406 = load i64, ptr %405, align 8, !tbaa !56
  %407 = and i64 %406, %399
  %408 = icmp ne i64 %407, 0
  %409 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaLevel", ptr %375, i64 0, i32 4, i32 3
  %410 = load ptr, ptr %409, align 8, !tbaa !54
  %411 = getelementptr inbounds i64, ptr %410, i64 %395
  %412 = load i64, ptr %411, align 8, !tbaa !56
  %413 = and i64 %412, %399
  %414 = icmp ne i64 %413, 0
  %415 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_quad_dof_index_for_face_orientationEjbbb(ptr noundef nonnull align 8 dereferenceable(728) %389, i32 noundef %367, i1 noundef zeroext %402, i1 noundef zeroext %408, i1 noundef zeroext %414)
  %416 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %383, i64 0, i32 5
  %417 = load ptr, ptr %416, align 8, !tbaa !724
  %418 = getelementptr inbounds %"class.dealii::internal::hp::DoFFaces", ptr %417, i64 0, i32 1
  %419 = zext i32 %382 to i64
  %420 = load ptr, ptr %418, align 8, !tbaa !144
  %421 = getelementptr inbounds i32, ptr %420, i64 %419
  %422 = load i32, ptr %421, align 4, !tbaa !59
  %423 = getelementptr inbounds %"class.dealii::internal::hp::DoFFaces", ptr %417, i64 0, i32 1, i32 1
  %424 = zext i32 %422 to i64
  %425 = load ptr, ptr %423, align 8, !tbaa !144
  %426 = getelementptr inbounds i32, ptr %425, i64 %424
  %427 = load i32, ptr %426, align 4, !tbaa !59
  %428 = icmp eq i32 %427, %2
  br i1 %428, label %446, label %429

429:                                              ; preds = %366
  %430 = load ptr, ptr %384, align 8, !tbaa !336
  %431 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %430, i64 0, i32 1
  %432 = load ptr, ptr %431, align 8, !tbaa !338
  br label %433

433:                                              ; preds = %433, %429
  %434 = phi i32 [ %427, %429 ], [ %444, %433 ]
  %435 = phi ptr [ %426, %429 ], [ %443, %433 ]
  %436 = zext i32 %434 to i64
  %437 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %432, i64 %436
  %438 = load ptr, ptr %437, align 8, !tbaa !340
  %439 = getelementptr inbounds i8, ptr %438, i64 80
  %440 = load i32, ptr %439, align 4, !tbaa !702
  %441 = add i32 %440, 1
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds i32, ptr %435, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !59
  %445 = icmp eq i32 %444, %2
  br i1 %445, label %446, label %433

446:                                              ; preds = %433, %366
  %447 = phi ptr [ %426, %366 ], [ %443, %433 ]
  %448 = getelementptr inbounds i32, ptr %447, i64 1
  %449 = zext i32 %415 to i64
  %450 = getelementptr inbounds i32, ptr %448, i64 %449
  %451 = load i32, ptr %450, align 4, !tbaa !59
  %452 = getelementptr inbounds i32, ptr %368, i64 1
  store i32 %451, ptr %368, align 4, !tbaa !59
  %453 = add nuw i32 %367, 1
  %454 = icmp eq i32 %453, %18
  br i1 %454, label %455, label %366

455:                                              ; preds = %446
  %456 = add nuw nsw i64 %363, 1
  %457 = icmp eq i64 %456, 6
  br i1 %457, label %458, label %362

458:                                              ; preds = %455, %359
  %459 = phi ptr [ %360, %359 ], [ %452, %455 ]
  %460 = icmp eq i32 %20, 0
  br i1 %460, label %490, label %461

461:                                              ; preds = %458
  %462 = load ptr, ptr %4, align 8, !tbaa !325
  %463 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %462, i64 0, i32 4
  %464 = load ptr, ptr %463, align 8, !tbaa !350
  %465 = and i32 %20, 1
  %466 = icmp eq i32 %20, 1
  br i1 %466, label %469, label %467

467:                                              ; preds = %461
  %468 = and i32 %20, -2
  br label %491

469:                                              ; preds = %491, %461
  %470 = phi i32 [ 0, %461 ], [ %530, %491 ]
  %471 = phi ptr [ %459, %461 ], [ %529, %491 ]
  %472 = icmp eq i32 %465, 0
  br i1 %472, label %490, label %473

473:                                              ; preds = %469
  %474 = load i32, ptr %0, align 8, !tbaa !60
  %475 = load i32, ptr %24, align 4, !tbaa !61
  %476 = zext i32 %474 to i64
  %477 = getelementptr inbounds ptr, ptr %464, i64 %476
  %478 = load ptr, ptr %477, align 8, !tbaa !33
  %479 = getelementptr inbounds %"class.dealii::internal::hp::DoFLevel", ptr %478, i64 0, i32 1
  %480 = getelementptr inbounds %"class.dealii::internal::hp::DoFLevel", ptr %478, i64 0, i32 1, i32 1
  %481 = zext i32 %475 to i64
  %482 = load ptr, ptr %479, align 8, !tbaa !144
  %483 = getelementptr inbounds i32, ptr %482, i64 %481
  %484 = load i32, ptr %483, align 4, !tbaa !59
  %485 = add i32 %484, %470
  %486 = zext i32 %485 to i64
  %487 = load ptr, ptr %480, align 8, !tbaa !144
  %488 = getelementptr inbounds i32, ptr %487, i64 %486
  %489 = load i32, ptr %488, align 4, !tbaa !59
  store i32 %489, ptr %471, align 4, !tbaa !59
  br label %490

490:                                              ; preds = %473, %469, %458
  ret void

491:                                              ; preds = %491, %467
  %492 = phi i32 [ 0, %467 ], [ %530, %491 ]
  %493 = phi ptr [ %459, %467 ], [ %529, %491 ]
  %494 = phi i32 [ 0, %467 ], [ %531, %491 ]
  %495 = load i32, ptr %0, align 8, !tbaa !60
  %496 = load i32, ptr %24, align 4, !tbaa !61
  %497 = zext i32 %495 to i64
  %498 = getelementptr inbounds ptr, ptr %464, i64 %497
  %499 = load ptr, ptr %498, align 8, !tbaa !33
  %500 = getelementptr inbounds %"class.dealii::internal::hp::DoFLevel", ptr %499, i64 0, i32 1
  %501 = getelementptr inbounds %"class.dealii::internal::hp::DoFLevel", ptr %499, i64 0, i32 1, i32 1
  %502 = zext i32 %496 to i64
  %503 = load ptr, ptr %500, align 8, !tbaa !144
  %504 = getelementptr inbounds i32, ptr %503, i64 %502
  %505 = load i32, ptr %504, align 4, !tbaa !59
  %506 = add i32 %505, %492
  %507 = zext i32 %506 to i64
  %508 = load ptr, ptr %501, align 8, !tbaa !144
  %509 = getelementptr inbounds i32, ptr %508, i64 %507
  %510 = load i32, ptr %509, align 4, !tbaa !59
  %511 = getelementptr inbounds i32, ptr %493, i64 1
  store i32 %510, ptr %493, align 4, !tbaa !59
  %512 = or i32 %492, 1
  %513 = load i32, ptr %0, align 8, !tbaa !60
  %514 = load i32, ptr %24, align 4, !tbaa !61
  %515 = zext i32 %513 to i64
  %516 = getelementptr inbounds ptr, ptr %464, i64 %515
  %517 = load ptr, ptr %516, align 8, !tbaa !33
  %518 = getelementptr inbounds %"class.dealii::internal::hp::DoFLevel", ptr %517, i64 0, i32 1
  %519 = getelementptr inbounds %"class.dealii::internal::hp::DoFLevel", ptr %517, i64 0, i32 1, i32 1
  %520 = zext i32 %514 to i64
  %521 = load ptr, ptr %518, align 8, !tbaa !144
  %522 = getelementptr inbounds i32, ptr %521, i64 %520
  %523 = load i32, ptr %522, align 4, !tbaa !59
  %524 = add i32 %523, %512
  %525 = zext i32 %524 to i64
  %526 = load ptr, ptr %519, align 8, !tbaa !144
  %527 = getelementptr inbounds i32, ptr %526, i64 %525
  %528 = load i32, ptr %527, align 4, !tbaa !59
  %529 = getelementptr inbounds i32, ptr %493, i64 2
  store i32 %528, ptr %511, align 4, !tbaa !59
  %530 = add nuw i32 %492, 2
  %531 = add i32 %494, 2
  %532 = icmp eq i32 %531, %468
  br i1 %532, label %469, label %491
}

declare noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728), i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

declare noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_quad_dof_index_for_face_orientationEjbbb(ptr noundef nonnull align 8 dereferenceable(728), i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

declare noundef i32 @_ZN6dealii12GeometryInfoILi3EE28standard_to_real_face_vertexEjbbb(i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

declare noundef i32 @_ZN6dealii12GeometryInfoILi3EE26standard_to_real_face_lineEjbbb(i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

declare noundef i32 @_ZNK6dealii15SparsityPatternclEjj(ptr noundef nonnull align 8 dereferenceable(122), i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii2hp11QCollectionILi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::hp::QCollection", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !738
  %4 = getelementptr inbounds %"class.dealii::hp::QCollection", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !740
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %35, label %7

7:                                                ; preds = %1, %30
  %8 = phi ptr [ %31, %30 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.boost::shared_ptr.370", ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !39
  %11 = icmp eq ptr %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %10, i64 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = add nsw i64 %14, -1
  store i64 %15, ptr %13, align 8, !tbaa !34
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %12
  %18 = load ptr, ptr %10, align 8, !tbaa !41
  %19 = getelementptr inbounds ptr, ptr %18, i64 2
  %20 = load ptr, ptr %19, align 8
  invoke void %20(ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %21 unwind label %39

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %10, i64 0, i32 2
  %23 = load i64, ptr %22, align 8, !tbaa !43
  %24 = add nsw i64 %23, -1
  store i64 %24, ptr %22, align 8, !tbaa !43
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load ptr, ptr %10, align 8, !tbaa !41
  %28 = getelementptr inbounds ptr, ptr %27, i64 3
  %29 = load ptr, ptr %28, align 8
  invoke void %29(ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %30 unwind label %39

30:                                               ; preds = %26, %21, %12, %7
  %31 = getelementptr inbounds %"class.boost::shared_ptr.370", ptr %8, i64 1
  %32 = icmp eq ptr %31, %5
  br i1 %32, label %33, label %7

33:                                               ; preds = %30
  %34 = load ptr, ptr %2, align 8, !tbaa !738
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi ptr [ %34, %33 ], [ %3, %1 ]
  %37 = icmp eq ptr %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %36) #21
  br label %44

39:                                               ; preds = %26, %17
  %40 = landingpad { ptr, i32 }
          cleanup
  %41 = load ptr, ptr %2, align 8, !tbaa !738
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  tail call void @_ZdlPv(ptr noundef nonnull %41) #21
  br label %45

44:                                               ; preds = %38, %35
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void

45:                                               ; preds = %39, %43
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %46 unwind label %47

46:                                               ; preds = %45
  resume { ptr, i32 } %40

47:                                               ; preds = %45
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  tail call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost10shared_ptrIN6dealii8FEValuesILi3ELi3EEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !39
  %4 = icmp eq ptr %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !34
  %8 = add nsw i64 %7, -1
  store i64 %8, ptr %6, align 8, !tbaa !34
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = load ptr, ptr %3, align 8, !tbaa !41
  %12 = getelementptr inbounds ptr, ptr %11, i64 2
  %13 = load ptr, ptr %12, align 8
  tail call void %13(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %14 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 2
  %15 = load i64, ptr %14, align 8, !tbaa !43
  %16 = add nsw i64 %15, -1
  store i64 %16, ptr %14, align 8, !tbaa !43
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = load ptr, ptr %3, align 8, !tbaa !41
  %20 = getelementptr inbounds ptr, ptr %19, i64 3
  %21 = load ptr, ptr %20, align 8
  tail call void %21(ptr noundef nonnull align 8 dereferenceable(24) %3)
  br label %22

22:                                               ; preds = %1, %5, %10, %18
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::TableBase.304", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !342
  %4 = icmp eq ptr %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, ptr %3, i64 -8
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %3, i64 %7
  br label %11

11:                                               ; preds = %9, %35
  %12 = phi ptr [ %13, %35 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %12, i64 -1
  %14 = getelementptr %"class.boost::shared_ptr.307", ptr %12, i64 -1, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !39
  %16 = icmp eq ptr %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %15, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !34
  %20 = add nsw i64 %19, -1
  store i64 %20, ptr %18, align 8, !tbaa !34
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = load ptr, ptr %15, align 8, !tbaa !41
  %24 = getelementptr inbounds ptr, ptr %23, i64 2
  %25 = load ptr, ptr %24, align 8
  invoke void %25(ptr noundef nonnull align 8 dereferenceable(24) %15)
          to label %26 unwind label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %15, i64 0, i32 2
  %28 = load i64, ptr %27, align 8, !tbaa !43
  %29 = add nsw i64 %28, -1
  store i64 %29, ptr %27, align 8, !tbaa !43
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = load ptr, ptr %15, align 8, !tbaa !41
  %33 = getelementptr inbounds ptr, ptr %32, i64 3
  %34 = load ptr, ptr %33, align 8
  invoke void %34(ptr noundef nonnull align 8 dereferenceable(24) %15)
          to label %35 unwind label %38

35:                                               ; preds = %26, %17, %11, %31
  %36 = icmp eq ptr %13, %3
  br i1 %36, label %37, label %11

37:                                               ; preds = %35, %5
  tail call void @_ZdaPv(ptr noundef nonnull %6) #21
  br label %47

38:                                               ; preds = %31, %22
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = icmp eq ptr %3, %13
  br i1 %40, label %46, label %41

41:                                               ; preds = %38, %44
  %42 = phi ptr [ %43, %44 ], [ %13, %38 ]
  %43 = getelementptr inbounds %"class.boost::shared_ptr.307", ptr %42, i64 -1
  invoke void @_ZN5boost10shared_ptrIN6dealii8FEValuesILi3ELi3EEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %43)
          to label %44 unwind label %49

44:                                               ; preds = %41
  %45 = icmp eq ptr %43, %3
  br i1 %45, label %46, label %41

46:                                               ; preds = %44, %38
  tail call void @_ZdaPv(ptr noundef nonnull %6) #21
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %48 unwind label %51

47:                                               ; preds = %37, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void

48:                                               ; preds = %46
  resume { ptr, i32 } %39

49:                                               ; preds = %41
  %50 = landingpad { ptr, i32 }
          catch ptr null
  br label %53

51:                                               ; preds = %46
  %52 = landingpad { ptr, i32 }
          catch ptr null
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi { ptr, i32 } [ %50, %49 ], [ %52, %51 ]
  %55 = extractvalue { ptr, i32 } %54, 0
  tail call void @__clang_call_terminate(ptr %55) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED0Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0)
          to label %2 unwind label %3

2:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %4
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii2hp11QCollectionILi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  invoke void @_ZN6dealii2hp11QCollectionILi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0)
          to label %2 unwind label %3

2:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %4
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSX_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(216) @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_ST_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_ST_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) #0 comdat align 2 {
  %9 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  %11 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %6, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  store ptr %12, ptr %13, align 8, !tbaa !325
  %14 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  call void %10(ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %9, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIdEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSV_ISA_EENSV_ISE_EENSV_ISH_EESM_SP_NSV_ISR_EEEENS_3_bi6bind_tINS11_11unspecifiedET_NS11_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES14_S16_S17_S18_S19_S1A_S1B_S1C_(ptr noalias sret(%"class.boost::_bi::bind_t.371") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, ptr noundef %6, ptr noundef %7, i64 %8) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.67", align 8
  %11 = alloca %"class.dealii::TriaAccessorBase", align 8
  %12 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %10, align 8, !tbaa !25
  %13 = load ptr, ptr %1, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  store ptr %13, ptr %10, align 8, !tbaa !25
  %16 = load ptr, ptr %13, align 8, !tbaa !227
  %17 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %16(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr noundef nonnull align 8 dereferenceable(24) %18, i32 noundef 0)
  %19 = load ptr, ptr %10, align 8, !tbaa !25
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi ptr [ null, %9 ], [ %19, %15 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %24, i64 16, i1 false)
  store ptr null, ptr %0, align 8, !tbaa !25
  %27 = icmp eq ptr %21, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  store ptr %21, ptr %0, align 8, !tbaa !25
  %29 = load ptr, ptr %21, align 8, !tbaa !227
  %30 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  %31 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %29(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %31, i32 noundef 0)
          to label %32 unwind label %53

32:                                               ; preds = %28
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  br label %34

34:                                               ; preds = %32, %20
  %35 = phi ptr [ %33, %32 ], [ null, %20 ]
  %36 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1
  store ptr %2, ptr %36, align 8
  %37 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %37, align 8
  %38 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %38, align 8
  %39 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %39, align 8
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %6, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, ptr noundef nonnull align 8 dereferenceable(16) %11, i64 16, i1 false)
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %42, align 8, !tbaa !325
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %26, ptr %44, align 8, !tbaa !325
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %8, ptr %45, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %46 = icmp eq ptr %35, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %34
  %48 = load ptr, ptr %35, align 8, !tbaa !330
  %49 = icmp eq ptr %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(24) %51, i32 noundef 2)
  br label %52

52:                                               ; preds = %47, %50, %34
  ret void

53:                                               ; preds = %28
  %54 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %55 = load ptr, ptr %10, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = load ptr, ptr %55, align 8, !tbaa !330
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  invoke void %58(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %30, i32 noundef 2)
          to label %61 unwind label %62

61:                                               ; preds = %57, %60, %53
  resume { ptr, i32 } %54

62:                                               ; preds = %60
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  call void @__clang_call_terminate(ptr %64) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS4_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.371", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !330
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !330
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.371", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !330
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !330
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.371", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %11, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !330
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !330
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE6manageERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE7managerERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !741
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !743
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !745
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !654
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !33
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %2, i64 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !656
  call void @_ZNK5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SR_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef nonnull align 8 dereferenceable(224) %7, ptr noundef nonnull align 8 dereferenceable(96) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef %13, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %24)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.371", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !330
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !330
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE7managerERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %15, ptr noundef nonnull align 8 dereferenceable(40) %16, i64 40, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !330
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(381) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SR_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.boost::bad_function_call", align 8
  %12 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %13 = load ptr, ptr %0, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %45

15:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %16, ptr %10, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #19
  store i64 29, ptr %9, align 8, !tbaa !56
  %17 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
  store ptr %17, ptr %10, align 8, !tbaa !660
  %18 = load i64, ptr %9, align 8, !tbaa !56
  store i64 %18, ptr %16, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %17, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 %18, ptr %19, align 8, !tbaa !662
  %20 = load ptr, ptr %10, align 8, !tbaa !660
  %21 = getelementptr inbounds i8, ptr %20, i64 %18
  store i8 0, ptr %21, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %22 unwind label %29

22:                                               ; preds = %15
  %23 = load ptr, ptr %10, align 8, !tbaa !660
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i64, ptr %19, align 8, !tbaa !662
  %27 = icmp ult i64 %26, 16
  call void @llvm.assume(i1 %27)
  br label %40

28:                                               ; preds = %22
  call void @_ZdlPv(ptr noundef %23) #21
  br label %40

29:                                               ; preds = %15
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = load ptr, ptr %10, align 8, !tbaa !660
  %32 = icmp eq ptr %31, %16
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load i64, ptr %19, align 8, !tbaa !662
  %35 = icmp ult i64 %34, 16
  call void @llvm.assume(i1 %35)
  br label %39

36:                                               ; preds = %29
  call void @_ZdlPv(ptr noundef %31) #21
  br label %39

37:                                               ; preds = %43, %39
  %38 = phi { ptr, i32 } [ %30, %39 ], [ %44, %43 ]
  resume { ptr, i32 } %38

39:                                               ; preds = %36, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  br label %37

40:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %11)
          to label %41 unwind label %43

41:                                               ; preds = %40
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  %42 = load ptr, ptr %0, align 8, !tbaa !25
  br label %45

43:                                               ; preds = %40
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  br label %37

45:                                               ; preds = %41, %8
  %46 = phi ptr [ %42, %41 ], [ %13, %8 ]
  %47 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable7.177", ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !747
  %49 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %6, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %12, i64 0, i32 1
  store ptr %51, ptr %52, align 8, !tbaa !325
  %53 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %53, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %56, ptr %57, align 8, !tbaa !325
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %49, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %12, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.371", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !325
  %37 = load ptr, ptr %23, align 8, !tbaa !325
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %47, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !325
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !325
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.371", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !330
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !330
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS11_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(235) @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_SR_SU_SX_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_SR_SU_SX_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) #0 comdat align 2 {
  %11 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %12 = load ptr, ptr %0, align 8, !tbaa !30
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %8, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !325
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %11, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !325
  call void %12(ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %11, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIdEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSL_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSZ_ISA_EENSZ_ISE_EENSZ_ISH_EENSZ_ISL_EENSZ_ISO_EESQ_ST_NSZ_ISV_EEEENS_3_bi6bind_tINS17_11unspecifiedET_NS17_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1A_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_S1K_(ptr noalias sret(%"class.boost::_bi::bind_t.384") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, i64 %6, i64 %7, ptr noundef %8, ptr noundef %9, i64 %10) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.77", align 8
  %13 = alloca %"class.dealii::TriaAccessorBase", align 8
  %14 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %12, align 8, !tbaa !25
  %15 = load ptr, ptr %1, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  store ptr %15, ptr %12, align 8, !tbaa !25
  %18 = load ptr, ptr %15, align 8, !tbaa !227
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %18(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef 0)
  %21 = load ptr, ptr %12, align 8, !tbaa !25
  br label %22

22:                                               ; preds = %11, %17
  %23 = phi ptr [ null, %11 ], [ %21, %17 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  %24 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %26, i64 16, i1 false)
  %29 = inttoptr i64 %6 to ptr
  %30 = inttoptr i64 %7 to ptr
  store ptr null, ptr %0, align 8, !tbaa !25
  %31 = icmp eq ptr %23, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %22
  store ptr %23, ptr %0, align 8, !tbaa !25
  %33 = load ptr, ptr %23, align 8, !tbaa !227
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %33(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 0)
          to label %36 unwind label %59

36:                                               ; preds = %32
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  br label %38

38:                                               ; preds = %36, %22
  %39 = phi ptr [ %37, %36 ], [ null, %22 ]
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1
  store ptr %2, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %41, align 8
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %42, align 8
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %43, align 8
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %44, align 8
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %45, align 8
  %46 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %8, ptr %46, align 8
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %47, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %48, align 8, !tbaa !325
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %28, ptr %50, align 8, !tbaa !325
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %10, ptr %51, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %52 = icmp eq ptr %39, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %38
  %54 = load ptr, ptr %39, align 8, !tbaa !393
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %38
  ret void

59:                                               ; preds = %32
  %60 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %61 = load ptr, ptr %12, align 8, !tbaa !25
  %62 = icmp eq ptr %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %61, align 8, !tbaa !393
  %65 = icmp eq ptr %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  invoke void %64(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
          to label %67 unwind label %68

67:                                               ; preds = %63, %66, %59
  resume { ptr, i32 } %60

68:                                               ; preds = %66
  %69 = landingpad { ptr, i32 }
          catch ptr null
  %70 = extractvalue { ptr, i32 } %69, 0
  call void @__clang_call_terminate(ptr %70) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS4_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.384", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !393
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !393
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.384", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !393
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !393
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.384", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %11, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !393
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !393
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE7managerERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !741
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !743
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !745
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !654
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !675
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !677
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !33
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %2, i64 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %3, i64 0, i32 1, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !656
  call void @_ZNK5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SP_SS_SV_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef nonnull align 8 dereferenceable(224) %7, ptr noundef nonnull align 8 dereferenceable(96) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef nonnull align 8 dereferenceable(92) %13, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef %17, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %28)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.384", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !393
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !393
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIdEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE7managerERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %15, ptr noundef nonnull align 8 dereferenceable(56) %16, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !393
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(427) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIdEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIdEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SP_SS_SV_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.boost::bad_function_call", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %15 = load ptr, ptr %0, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %47

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %18, ptr %12, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #19
  store i64 29, ptr %11, align 8, !tbaa !56
  %19 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
  store ptr %19, ptr %12, align 8, !tbaa !660
  %20 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %20, ptr %18, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %19, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !662
  %22 = load ptr, ptr %12, align 8, !tbaa !660
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %24 unwind label %31

24:                                               ; preds = %17
  %25 = load ptr, ptr %12, align 8, !tbaa !660
  %26 = icmp eq ptr %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i64, ptr %21, align 8, !tbaa !662
  %29 = icmp ult i64 %28, 16
  call void @llvm.assume(i1 %29)
  br label %42

30:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #21
  br label %42

31:                                               ; preds = %17
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %12, align 8, !tbaa !660
  %34 = icmp eq ptr %33, %18
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load i64, ptr %21, align 8, !tbaa !662
  %37 = icmp ult i64 %36, 16
  call void @llvm.assume(i1 %37)
  br label %41

38:                                               ; preds = %31
  call void @_ZdlPv(ptr noundef %33) #21
  br label %41

39:                                               ; preds = %45, %41
  %40 = phi { ptr, i32 } [ %32, %41 ], [ %46, %45 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %38, %35
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  br label %39

42:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %43 unwind label %45

43:                                               ; preds = %42
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  %44 = load ptr, ptr %0, align 8, !tbaa !25
  br label %47

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  br label %39

47:                                               ; preds = %43, %10
  %48 = phi ptr [ %44, %43 ], [ %15, %10 ]
  %49 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable9.178", ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !748
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %8, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !325
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !325
  call void %50(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIdEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.384", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !325
  %37 = load ptr, ptr %23, align 8, !tbaa !325
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %47, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !325
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !325
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.384", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !393
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !393
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERSX_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(216) @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker7IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_ST_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_ST_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) #0 comdat align 2 {
  %9 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  %11 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %6, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  store ptr %12, ptr %13, align 8, !tbaa !325
  %14 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  call void %10(ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %9, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIfEEPKNS2_8FunctionILi3EEENS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSV_ISA_EENSV_ISE_EENSV_ISH_EESM_SP_NSV_ISR_EEEENS_3_bi6bind_tINS11_11unspecifiedET_NS11_9list_av_7IT0_T1_T2_T3_T4_T5_T6_E4typeEEES14_S16_S17_S18_S19_S1A_S1B_S1C_(ptr noalias sret(%"class.boost::_bi::bind_t.391") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, ptr noundef %6, ptr noundef %7, i64 %8) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %10 = alloca %"class.boost::function.80", align 8
  %11 = alloca %"class.dealii::TriaAccessorBase", align 8
  %12 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %10, align 8, !tbaa !25
  %13 = load ptr, ptr %1, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  store ptr %13, ptr %10, align 8, !tbaa !25
  %16 = load ptr, ptr %13, align 8, !tbaa !227
  %17 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %16(ptr noundef nonnull align 8 dereferenceable(24) %17, ptr noundef nonnull align 8 dereferenceable(24) %18, i32 noundef 0)
  %19 = load ptr, ptr %10, align 8, !tbaa !25
  br label %20

20:                                               ; preds = %9, %15
  %21 = phi ptr [ null, %9 ], [ %19, %15 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12)
  %22 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %7, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %7, i64 16, i1 false)
  %24 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %24, i64 16, i1 false)
  store ptr null, ptr %0, align 8, !tbaa !25
  %27 = icmp eq ptr %21, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  store ptr %21, ptr %0, align 8, !tbaa !25
  %29 = load ptr, ptr %21, align 8, !tbaa !227
  %30 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  %31 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %29(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %31, i32 noundef 0)
          to label %32 unwind label %53

32:                                               ; preds = %28
  %33 = load ptr, ptr %10, align 8, !tbaa !25
  br label %34

34:                                               ; preds = %32, %20
  %35 = phi ptr [ %33, %32 ], [ null, %20 ]
  %36 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1
  store ptr %2, ptr %36, align 8
  %37 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %37, align 8
  %38 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %38, align 8
  %39 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %39, align 8
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %6, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %41, ptr noundef nonnull align 8 dereferenceable(16) %11, i64 16, i1 false)
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %23, ptr %42, align 8, !tbaa !325
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, ptr noundef nonnull align 8 dereferenceable(16) %12, i64 16, i1 false)
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %26, ptr %44, align 8, !tbaa !325
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %8, ptr %45, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %46 = icmp eq ptr %35, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %34
  %48 = load ptr, ptr %35, align 8, !tbaa !423
  %49 = icmp eq ptr %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %10, i64 0, i32 1
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(24) %51, i32 noundef 2)
  br label %52

52:                                               ; preds = %47, %50, %34
  ret void

53:                                               ; preds = %28
  %54 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12)
  %55 = load ptr, ptr %10, align 8, !tbaa !25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = load ptr, ptr %55, align 8, !tbaa !423
  %59 = icmp eq ptr %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  invoke void %58(ptr noundef nonnull align 8 dereferenceable(24) %30, ptr noundef nonnull align 8 dereferenceable(24) %30, i32 noundef 2)
          to label %61 unwind label %62

61:                                               ; preds = %57, %60, %53
  resume { ptr, i32 } %54

62:                                               ; preds = %60
  %63 = landingpad { ptr, i32 }
          catch ptr null
  %64 = extractvalue { ptr, i32 } %63, 0
  call void @__clang_call_terminate(ptr %64) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS4_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.391", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !423
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !423
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1C_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.391", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !423
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !423
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.391", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %11, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !423
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !423
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE6manageERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE7managerERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !741
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !743
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !745
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !680
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !33
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %2, i64 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !656
  call void @_ZNK5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SR_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef nonnull align 8 dereferenceable(224) %7, ptr noundef nonnull align 8 dereferenceable(96) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef %13, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %24)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.391", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !423
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !423
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEEPKNS7_8FunctionILi3EEENS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list7INS_17reference_wrapperISB_EENS11_ISF_EENS11_ISJ_EENS11_ISM_EENS3_5valueISR_EENS16_ISU_EENS11_ISW_EEEEEEE7managerERKNS1_15function_bufferERS1D_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %15, ptr noundef nonnull align 8 dereferenceable(40) %16, i64 40, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !423
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(381) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEEPKNS4_8FunctionILi3EEENS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list7INS_17reference_wrapperIS8_EENSY_ISC_EENSY_ISG_EENSY_ISJ_EENS0_5valueISO_EENS13_ISR_EENSY_IST_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEEPKNS1_8FunctionILi3EEENS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SR_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef %6, ptr noundef nonnull align 1 dereferenceable(1) %7) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  %11 = alloca %"class.boost::bad_function_call", align 8
  %12 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %13 = load ptr, ptr %0, align 8, !tbaa !25
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %45

15:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %10) #19
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 2
  store ptr %16, ptr %10, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #19
  store i64 29, ptr %9, align 8, !tbaa !56
  %17 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %10, ptr noundef nonnull align 8 dereferenceable(8) %9, i64 noundef 0)
  store ptr %17, ptr %10, align 8, !tbaa !660
  %18 = load i64, ptr %9, align 8, !tbaa !56
  store i64 %18, ptr %16, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %17, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %10, i64 0, i32 1
  store i64 %18, ptr %19, align 8, !tbaa !662
  %20 = load ptr, ptr %10, align 8, !tbaa !660
  %21 = getelementptr inbounds i8, ptr %20, i64 %18
  store i8 0, ptr %21, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(32) %10)
          to label %22 unwind label %29

22:                                               ; preds = %15
  %23 = load ptr, ptr %10, align 8, !tbaa !660
  %24 = icmp eq ptr %23, %16
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i64, ptr %19, align 8, !tbaa !662
  %27 = icmp ult i64 %26, 16
  call void @llvm.assume(i1 %27)
  br label %40

28:                                               ; preds = %22
  call void @_ZdlPv(ptr noundef %23) #21
  br label %40

29:                                               ; preds = %15
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = load ptr, ptr %10, align 8, !tbaa !660
  %32 = icmp eq ptr %31, %16
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = load i64, ptr %19, align 8, !tbaa !662
  %35 = icmp ult i64 %34, 16
  call void @llvm.assume(i1 %35)
  br label %39

36:                                               ; preds = %29
  call void @_ZdlPv(ptr noundef %31) #21
  br label %39

37:                                               ; preds = %43, %39
  %38 = phi { ptr, i32 } [ %30, %39 ], [ %44, %43 ]
  resume { ptr, i32 } %38

39:                                               ; preds = %36, %33
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  br label %37

40:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %10) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %11, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %11)
          to label %41 unwind label %43

41:                                               ; preds = %40
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  %42 = load ptr, ptr %0, align 8, !tbaa !25
  br label %45

43:                                               ; preds = %40
  %44 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #19
  br label %37

45:                                               ; preds = %41, %8
  %46 = phi ptr [ %42, %41 ], [ %13, %8 ]
  %47 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable7.179", ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !749
  %49 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %6, i64 0, i32 1
  %51 = load ptr, ptr %50, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %12, ptr noundef nonnull align 8 dereferenceable(16) %6, i64 16, i1 false)
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %12, i64 0, i32 1
  store ptr %51, ptr %52, align 8, !tbaa !325
  %53 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %12, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load ptr, ptr %55, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %53, ptr noundef nonnull align 8 dereferenceable(16) %54, i64 16, i1 false)
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %56, ptr %57, align 8, !tbaa !325
  call void %48(ptr noundef nonnull align 8 dereferenceable(24) %49, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef %5, ptr noundef nonnull %12, ptr noundef nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEEPKNS9_8FunctionILi3EEENS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list7INS_17reference_wrapperISD_EENS13_ISH_EENS13_ISL_EENS13_ISO_EENS5_5valueIST_EENS18_ISW_EENS13_ISY_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.391", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %12, ptr noundef nonnull align 8 dereferenceable(40) %13, i64 40, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(128) ptr @_Znwm(i64 noundef 128) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !325
  %37 = load ptr, ptr %23, align 8, !tbaa !325
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %47, ptr noundef nonnull align 8 dereferenceable(40) %12, i64 40, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !325
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !325
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.391", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !423
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !423
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS11_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(235) @_ZTSPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS0_10DoFHandlerILi3ELi3EEERKNS0_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSI_NS_13MatrixCreator13IteratorRangeIS6_EERNS_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker9IPFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEvS8_SC_SG_SJ_SN_SQ_SR_SU_SX_E6invokeERNS1_15function_bufferES8_SC_SG_SJ_SN_SQ_SR_SU_SX_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) #0 comdat align 2 {
  %11 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %12 = load ptr, ptr %0, align 8, !tbaa !30
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %8, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !325
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %11, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !325
  call void %12(ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %11, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost4bindINS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi3EEERNS2_12SparseMatrixIfEERKNS2_8FunctionILi3EEERNS2_6VectorIdEEPSL_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEEEENS_17reference_wrapperIS6_EENSZ_ISA_EENSZ_ISE_EENSZ_ISH_EENSZ_ISL_EENSZ_ISO_EESQ_ST_NSZ_ISV_EEEENS_3_bi6bind_tINS17_11unspecifiedET_NS17_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1A_S1C_S1D_S1E_S1F_S1G_S1H_S1I_S1J_S1K_(ptr noalias sret(%"class.boost::_bi::bind_t.397") align 8 %0, ptr noundef %1, ptr %2, ptr %3, ptr %4, ptr %5, i64 %6, i64 %7, ptr noundef %8, ptr noundef %9, i64 %10) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %12 = alloca %"class.boost::function.83", align 8
  %13 = alloca %"class.dealii::TriaAccessorBase", align 8
  %14 = alloca %"class.dealii::TriaAccessorBase", align 8
  store ptr null, ptr %12, align 8, !tbaa !25
  %15 = load ptr, ptr %1, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  store ptr %15, ptr %12, align 8, !tbaa !25
  %18 = load ptr, ptr %15, align 8, !tbaa !227
  %19 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %18(ptr noundef nonnull align 8 dereferenceable(24) %19, ptr noundef nonnull align 8 dereferenceable(24) %20, i32 noundef 0)
  %21 = load ptr, ptr %12, align 8, !tbaa !25
  br label %22

22:                                               ; preds = %11, %17
  %23 = phi ptr [ null, %11 ], [ %21, %17 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14)
  %24 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %9, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %9, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %26, i64 16, i1 false)
  %29 = inttoptr i64 %6 to ptr
  %30 = inttoptr i64 %7 to ptr
  store ptr null, ptr %0, align 8, !tbaa !25
  %31 = icmp eq ptr %23, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %22
  store ptr %23, ptr %0, align 8, !tbaa !25
  %33 = load ptr, ptr %23, align 8, !tbaa !227
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  invoke void %33(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 0)
          to label %36 unwind label %59

36:                                               ; preds = %32
  %37 = load ptr, ptr %12, align 8, !tbaa !25
  br label %38

38:                                               ; preds = %36, %22
  %39 = phi ptr [ %37, %36 ], [ null, %22 ]
  %40 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1
  store ptr %2, ptr %40, align 8
  %41 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %3, ptr %41, align 8
  %42 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %4, ptr %42, align 8
  %43 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %5, ptr %43, align 8
  %44 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %29, ptr %44, align 8
  %45 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %30, ptr %45, align 8
  %46 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store ptr %8, ptr %46, align 8
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %47, ptr noundef nonnull align 8 dereferenceable(16) %13, i64 16, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %48, align 8, !tbaa !325
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %49, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %28, ptr %50, align 8, !tbaa !325
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %0, i64 0, i32 1, i32 0, i32 1
  store i64 %10, ptr %51, align 8, !tbaa !33
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %52 = icmp eq ptr %39, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %38
  %54 = load ptr, ptr %39, align 8, !tbaa !464
  %55 = icmp eq ptr %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.boost::function_base", ptr %12, i64 0, i32 1
  call void %54(ptr noundef nonnull align 8 dereferenceable(24) %57, ptr noundef nonnull align 8 dereferenceable(24) %57, i32 noundef 2)
  br label %58

58:                                               ; preds = %53, %56, %38
  ret void

59:                                               ; preds = %32
  %60 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14)
  %61 = load ptr, ptr %12, align 8, !tbaa !25
  %62 = icmp eq ptr %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = load ptr, ptr %61, align 8, !tbaa !464
  %65 = icmp eq ptr %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  invoke void %64(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
          to label %67 unwind label %68

67:                                               ; preds = %63, %66, %59
  resume { ptr, i32 } %60

68:                                               ; preds = %66
  %69 = landingpad { ptr, i32 }
          catch ptr null
  %70 = extractvalue { ptr, i32 } %69, 0
  call void @__clang_call_terminate(ptr %70) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS4_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS4_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.397", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !464
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !464
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS1I_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.397", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !464
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !464
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.397", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %11, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !464
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !464
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE7managerERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = load ptr, ptr %4, align 8, !tbaa !741
  %6 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !743
  %8 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !745
  %10 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !680
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !675
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !677
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !33
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %2, i64 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %3, i64 0, i32 1, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !656
  call void @_ZNK5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SP_SS_SV_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull align 8 dereferenceable(96) %5, ptr noundef nonnull align 8 dereferenceable(224) %7, ptr noundef nonnull align 8 dereferenceable(96) %9, ptr noundef nonnull align 8 dereferenceable(36) %11, ptr noundef nonnull align 8 dereferenceable(92) %13, ptr noundef nonnull align 8 dereferenceable(88) %15, ptr noundef %17, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %28)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.397", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !464
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !464
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS8_10DoFHandlerILi3ELi3EEERKNS8_11QCollectionILi3EEERNS7_12SparseMatrixIfEERKNS7_8FunctionILi3EEERNS7_6VectorIdEEPSQ_NS7_13MatrixCreator13IteratorRangeISE_EERNS7_7Threads16DummyThreadMutexEEEENS3_5list9INS_17reference_wrapperISB_EENS15_ISF_EENS15_ISJ_EENS15_ISM_EENS15_ISQ_EENS15_IST_EENS3_5valueISV_EENS1C_ISY_EENS15_IS10_EEEEEEE7managerERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %15, ptr noundef nonnull align 8 dereferenceable(56) %16, i64 56, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !464
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(427) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi3EEERNS4_12SparseMatrixIfEERKNS4_8FunctionILi3EEERNS4_6VectorIdEEPSN_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEENS0_5list9INS_17reference_wrapperIS8_EENS12_ISC_EENS12_ISG_EENS12_ISJ_EENS12_ISN_EENS12_ISQ_EENS0_5valueISS_EENS19_ISV_EENS12_ISX_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS1_12SparseMatrixIfEERKNS1_8FunctionILi3EEERNS1_6VectorIdEEPSK_NS1_13MatrixCreator13IteratorRangeIS8_EERNS1_7Threads16DummyThreadMutexEEclES6_SA_SE_SH_SL_SO_SP_SS_SV_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.boost::bad_function_call", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %15 = load ptr, ptr %0, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %47

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %18, ptr %12, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #19
  store i64 29, ptr %11, align 8, !tbaa !56
  %19 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
  store ptr %19, ptr %12, align 8, !tbaa !660
  %20 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %20, ptr %18, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %19, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !662
  %22 = load ptr, ptr %12, align 8, !tbaa !660
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %24 unwind label %31

24:                                               ; preds = %17
  %25 = load ptr, ptr %12, align 8, !tbaa !660
  %26 = icmp eq ptr %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i64, ptr %21, align 8, !tbaa !662
  %29 = icmp ult i64 %28, 16
  call void @llvm.assume(i1 %29)
  br label %42

30:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #21
  br label %42

31:                                               ; preds = %17
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %12, align 8, !tbaa !660
  %34 = icmp eq ptr %33, %18
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load i64, ptr %21, align 8, !tbaa !662
  %37 = icmp ult i64 %36, 16
  call void @llvm.assume(i1 %37)
  br label %41

38:                                               ; preds = %31
  call void @_ZdlPv(ptr noundef %33) #21
  br label %41

39:                                               ; preds = %45, %41
  %40 = phi { ptr, i32 } [ %32, %41 ], [ %46, %45 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %38, %35
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  br label %39

42:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %43 unwind label %45

43:                                               ; preds = %42
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  %44 = load ptr, ptr %0, align 8, !tbaa !25
  br label %47

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  br label %39

47:                                               ; preds = %43, %10
  %48 = phi ptr [ %44, %43 ], [ %15, %10 ]
  %49 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable9.180", ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !750
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %8, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !325
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !325
  call void %50(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull align 8 dereferenceable(96) %1, ptr noundef nonnull align 8 dereferenceable(224) %2, ptr noundef nonnull align 8 dereferenceable(96) %3, ptr noundef nonnull align 8 dereferenceable(36) %4, ptr noundef nonnull align 8 dereferenceable(92) %5, ptr noundef nonnull align 8 dereferenceable(88) %6, ptr noundef %7, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi3EEERNS9_12SparseMatrixIfEERKNS9_8FunctionILi3EEERNS9_6VectorIdEEPSS_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS5_5list9INS_17reference_wrapperISD_EENS17_ISH_EENS17_ISL_EENS17_ISO_EENS17_ISS_EENS17_ISV_EENS5_5valueISX_EENS1E_IS10_EENS17_IS12_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.397", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %12, ptr noundef nonnull align 8 dereferenceable(56) %13, i64 56, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(144) ptr @_Znwm(i64 noundef 144) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !325
  %37 = load ptr, ptr %23, align 8, !tbaa !325
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %47, ptr noundef nonnull align 8 dereferenceable(56) %12, i64 56, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !325
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !325
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.397", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !464
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !464
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

declare void @_ZN6dealii12FEFaceValuesILi3ELi3EEC1ERKNS_7MappingILi3ELi3EEERKNS_13FiniteElementILi3ELi3EEERKNS_10QuadratureILi2EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(784), ptr noundef nonnull align 8 dereferenceable(72), ptr noundef nonnull align 8 dereferenceable(728), ptr noundef nonnull align 8 dereferenceable(128), i32 noundef) unnamed_addr #2

declare void @_ZN6dealii12FEFaceValuesILi3ELi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEEEEEj(ptr noundef nonnull align 8 dereferenceable(784), ptr noundef nonnull align 8 dereferenceable(24), i32 noundef) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef ptr @_ZSt18__do_uninit_fill_nIPSt6vectorIdSaIdEEmS2_ET_S4_T0_RKT1_(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat personality ptr @__gxx_personality_v0 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %64, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %2, align 8, !tbaa !131
  br label %8

8:                                                ; preds = %5, %40
  %9 = phi ptr [ %7, %5 ], [ %29, %40 ]
  %10 = phi ptr [ %0, %5 ], [ %44, %40 ]
  %11 = phi i64 [ %1, %5 ], [ %43, %40 ]
  %12 = load ptr, ptr %6, align 8, !tbaa !135
  %13 = ptrtoint ptr %12 to i64
  %14 = ptrtoint ptr %9 to i64
  %15 = sub i64 %13, %14
  %16 = ashr exact i64 %15, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  %17 = icmp eq ptr %12, %9
  br i1 %17, label %24, label %18

18:                                               ; preds = %8
  %19 = icmp ugt i64 %15, 9223372036854775800
  br i1 %19, label %20, label %22, !prof !491

20:                                               ; preds = %18
  invoke void @_ZSt28__throw_bad_array_new_lengthv() #23
          to label %21 unwind label %48

21:                                               ; preds = %20
  unreachable

22:                                               ; preds = %18
  %23 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef %15) #20
          to label %24 unwind label %46

24:                                               ; preds = %22, %8
  %25 = phi ptr [ null, %8 ], [ %23, %22 ]
  store ptr %25, ptr %10, align 8, !tbaa !131
  %26 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !135
  %27 = getelementptr inbounds double, ptr %25, i64 %16
  %28 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl_data", ptr %10, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !132
  %29 = load ptr, ptr %2, align 8, !tbaa !33
  %30 = load ptr, ptr %6, align 8, !tbaa !33
  %31 = ptrtoint ptr %30 to i64
  %32 = ptrtoint ptr %29 to i64
  %33 = sub i64 %31, %32
  %34 = icmp sgt i64 %33, 8
  br i1 %34, label %35, label %36, !prof !493

35:                                               ; preds = %24
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %25, ptr align 8 %29, i64 %33, i1 false)
  br label %40

36:                                               ; preds = %24
  %37 = icmp eq i64 %33, 8
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = load double, ptr %29, align 8, !tbaa !133
  store double %39, ptr %25, align 8, !tbaa !133
  br label %40

40:                                               ; preds = %38, %36, %35
  %41 = ashr exact i64 %33, 3
  %42 = getelementptr inbounds double, ptr %25, i64 %41
  store ptr %42, ptr %26, align 8, !tbaa !135
  %43 = add i64 %11, -1
  %44 = getelementptr inbounds %"class.std::vector.92", ptr %10, i64 1
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %64, label %8

46:                                               ; preds = %22
  %47 = landingpad { ptr, i32 }
          catch ptr null
  br label %50

48:                                               ; preds = %20
  %49 = landingpad { ptr, i32 }
          catch ptr null
  br label %50

50:                                               ; preds = %48, %46
  %51 = phi { ptr, i32 } [ %47, %46 ], [ %49, %48 ]
  %52 = extractvalue { ptr, i32 } %51, 0
  %53 = tail call ptr @__cxa_begin_catch(ptr %52) #19
  %54 = icmp eq ptr %10, %0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50, %60
  %56 = phi ptr [ %61, %60 ], [ %0, %50 ]
  %57 = load ptr, ptr %56, align 8, !tbaa !131
  %58 = icmp eq ptr %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void @_ZdlPv(ptr noundef nonnull %57) #21
  br label %60

60:                                               ; preds = %59, %55
  %61 = getelementptr inbounds %"class.std::vector.92", ptr %56, i64 1
  %62 = icmp eq ptr %61, %10
  br i1 %62, label %63, label %55

63:                                               ; preds = %60, %50
  invoke void @__cxa_rethrow() #23
          to label %72 unwind label %66

64:                                               ; preds = %40, %3
  %65 = phi ptr [ %0, %3 ], [ %44, %40 ]
  ret ptr %65

66:                                               ; preds = %63
  %67 = landingpad { ptr, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %68 unwind label %69

68:                                               ; preds = %66
  resume { ptr, i32 } %67

69:                                               ; preds = %66
  %70 = landingpad { ptr, i32 }
          catch ptr null
  %71 = extractvalue { ptr, i32 } %70, 0
  tail call void @__clang_call_terminate(ptr %71) #22
  unreachable

72:                                               ; preds = %63
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi2ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.dealii::DoFAccessor.410", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !551
  %6 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !63
  %8 = getelementptr inbounds i8, ptr %7, i64 72
  %9 = load i32, ptr %8, align 8, !tbaa !700
  %10 = getelementptr inbounds i8, ptr %7, i64 76
  %11 = load i32, ptr %10, align 4, !tbaa !701
  %12 = getelementptr inbounds i8, ptr %7, i64 80
  %13 = load i32, ptr %12, align 8, !tbaa !702
  %14 = load ptr, ptr %1, align 8, !tbaa !33
  %15 = icmp eq i32 %9, 0
  br i1 %15, label %160, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %5, i64 0, i32 6
  %18 = getelementptr inbounds %"class.dealii::TriaAccessorBase.318", ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %"class.dealii::Triangulation", ptr %19, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !514
  %22 = load ptr, ptr %21, align 8, !tbaa !707, !noalias !751
  %23 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !54
  %25 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaFaces", ptr %21, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !712
  %27 = load ptr, ptr %17, align 8, !tbaa !144
  br label %28

28:                                               ; preds = %16, %28
  %29 = phi i32 [ 0, %16 ], [ %58, %28 ]
  %30 = phi ptr [ %14, %16 ], [ %57, %28 ]
  %31 = load i32, ptr %0, align 8, !tbaa !548
  %32 = sext i32 %31 to i64
  %33 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %22, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !59, !noalias !751
  %35 = shl i32 %31, 2
  %36 = lshr i32 %35, 6
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, ptr %24, i64 %37
  %39 = and i32 %35, 60
  %40 = zext i32 %39 to i64
  %41 = load i64, ptr %38, align 8, !tbaa !56
  %42 = lshr i64 %41, %40
  %43 = and i64 %42, 1
  %44 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %43, i64 0
  %45 = load i32, ptr %44, align 8, !tbaa !59
  %46 = sext i32 %34 to i64
  %47 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %26, i64 %46
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds [2 x i32], ptr %47, i64 0, i64 %48
  %50 = load i32, ptr %49, align 4, !tbaa !59
  %51 = load i32, ptr %8, align 8, !tbaa !700
  %52 = mul i32 %51, %50
  %53 = add i32 %52, %29
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i32, ptr %27, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !59
  %57 = getelementptr inbounds i32, ptr %30, i64 1
  store i32 %56, ptr %30, align 4, !tbaa !59
  %58 = add nuw i32 %29, 1
  %59 = icmp eq i32 %58, %9
  br i1 %59, label %60, label %28

60:                                               ; preds = %28
  %61 = getelementptr [4 x i32], ptr %22, i64 0, i64 1
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i32 [ 0, %60 ], [ %93, %62 ]
  %64 = phi ptr [ %57, %60 ], [ %92, %62 ]
  %65 = load i32, ptr %0, align 8, !tbaa !548
  %66 = sext i32 %65 to i64
  %67 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %61, i64 %66
  %68 = load i32, ptr %67, align 4, !tbaa !59, !noalias !751
  %69 = shl i32 %65, 2
  %70 = lshr i32 %69, 6
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i64, ptr %24, i64 %71
  %73 = and i32 %69, 60
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  %76 = load i64, ptr %72, align 8, !tbaa !56
  %77 = lshr i64 %76, %75
  %78 = and i64 %77, 1
  %79 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %78, i64 0
  %80 = load i32, ptr %79, align 8, !tbaa !59
  %81 = sext i32 %68 to i64
  %82 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %26, i64 %81
  %83 = zext i32 %80 to i64
  %84 = getelementptr inbounds [2 x i32], ptr %82, i64 0, i64 %83
  %85 = load i32, ptr %84, align 4, !tbaa !59
  %86 = load i32, ptr %8, align 8, !tbaa !700
  %87 = mul i32 %86, %85
  %88 = add i32 %87, %63
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %27, i64 %89
  %91 = load i32, ptr %90, align 4, !tbaa !59
  %92 = getelementptr inbounds i32, ptr %64, i64 1
  store i32 %91, ptr %64, align 4, !tbaa !59
  %93 = add nuw i32 %63, 1
  %94 = icmp eq i32 %93, %9
  br i1 %94, label %95, label %62

95:                                               ; preds = %62, %95
  %96 = phi i32 [ %125, %95 ], [ 0, %62 ]
  %97 = phi ptr [ %124, %95 ], [ %92, %62 ]
  %98 = load i32, ptr %0, align 8, !tbaa !548
  %99 = sext i32 %98 to i64
  %100 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %22, i64 %99
  %101 = load i32, ptr %100, align 4, !tbaa !59, !noalias !751
  %102 = shl i32 %98, 2
  %103 = lshr i32 %102, 6
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds i64, ptr %24, i64 %104
  %106 = and i32 %102, 60
  %107 = zext i32 %106 to i64
  %108 = load i64, ptr %105, align 8, !tbaa !56
  %109 = lshr i64 %108, %107
  %110 = and i64 %109, 1
  %111 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %110, i64 1
  %112 = load i32, ptr %111, align 4, !tbaa !59
  %113 = sext i32 %101 to i64
  %114 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %26, i64 %113
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds [2 x i32], ptr %114, i64 0, i64 %115
  %117 = load i32, ptr %116, align 4, !tbaa !59
  %118 = load i32, ptr %8, align 8, !tbaa !700
  %119 = mul i32 %118, %117
  %120 = add i32 %119, %96
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i32, ptr %27, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !59
  %124 = getelementptr inbounds i32, ptr %97, i64 1
  store i32 %123, ptr %97, align 4, !tbaa !59
  %125 = add nuw i32 %96, 1
  %126 = icmp eq i32 %125, %9
  br i1 %126, label %127, label %95

127:                                              ; preds = %95, %127
  %128 = phi i32 [ %158, %127 ], [ 0, %95 ]
  %129 = phi ptr [ %157, %127 ], [ %124, %95 ]
  %130 = load i32, ptr %0, align 8, !tbaa !548
  %131 = sext i32 %130 to i64
  %132 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %61, i64 %131
  %133 = load i32, ptr %132, align 4, !tbaa !59, !noalias !751
  %134 = shl i32 %130, 2
  %135 = lshr i32 %134, 6
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i64, ptr %24, i64 %136
  %138 = and i32 %134, 60
  %139 = or i32 %138, 1
  %140 = zext i32 %139 to i64
  %141 = load i64, ptr %137, align 8, !tbaa !56
  %142 = lshr i64 %141, %140
  %143 = and i64 %142, 1
  %144 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %143, i64 1
  %145 = load i32, ptr %144, align 4, !tbaa !59
  %146 = sext i32 %133 to i64
  %147 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %26, i64 %146
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds [2 x i32], ptr %147, i64 0, i64 %148
  %150 = load i32, ptr %149, align 4, !tbaa !59
  %151 = load i32, ptr %8, align 8, !tbaa !700
  %152 = mul i32 %151, %150
  %153 = add i32 %152, %128
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i32, ptr %27, i64 %154
  %156 = load i32, ptr %155, align 4, !tbaa !59
  %157 = getelementptr inbounds i32, ptr %129, i64 1
  store i32 %156, ptr %129, align 4, !tbaa !59
  %158 = add nuw i32 %128, 1
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %127

160:                                              ; preds = %127, %3
  %161 = phi ptr [ %14, %3 ], [ %157, %127 ]
  %162 = icmp eq i32 %11, 0
  %163 = getelementptr inbounds %"class.dealii::TriaAccessorBase.318", ptr %0, i64 0, i32 1
  br i1 %162, label %331, label %164

164:                                              ; preds = %160, %164
  %165 = phi i32 [ %203, %164 ], [ 0, %160 ]
  %166 = phi ptr [ %202, %164 ], [ %161, %160 ]
  %167 = load ptr, ptr %163, align 8, !tbaa !550
  %168 = getelementptr inbounds %"class.dealii::Triangulation", ptr %167, i64 0, i32 2
  %169 = load ptr, ptr %168, align 8, !tbaa !514
  %170 = load i32, ptr %0, align 8, !tbaa !548
  %171 = sext i32 %170 to i64
  %172 = load ptr, ptr %169, align 8, !tbaa !707, !noalias !754
  %173 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %172, i64 %171
  %174 = load i32, ptr %173, align 4, !tbaa !59, !noalias !754
  %175 = load ptr, ptr %4, align 8, !tbaa !551
  %176 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %175, i64 0, i32 2
  %177 = load ptr, ptr %176, align 8, !tbaa !63
  %178 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %169, i64 0, i32 1
  %179 = shl i32 %170, 2
  %180 = load ptr, ptr %178, align 8, !tbaa !54
  %181 = lshr i32 %179, 6
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i64, ptr %180, i64 %182
  %184 = and i32 %179, 60
  %185 = zext i32 %184 to i64
  %186 = shl nuw nsw i64 1, %185
  %187 = load i64, ptr %183, align 8, !tbaa !56
  %188 = and i64 %187, %186
  %189 = icmp ne i64 %188, 0
  %190 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %177, i32 noundef %165, i1 noundef zeroext %189)
  %191 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %175, i64 0, i32 4
  %192 = load ptr, ptr %191, align 8, !tbaa !757
  %193 = load ptr, ptr %176, align 8, !tbaa !63
  %194 = getelementptr inbounds i8, ptr %193, i64 76
  %195 = load i32, ptr %194, align 4, !tbaa !701
  %196 = mul i32 %195, %174
  %197 = add i32 %196, %190
  %198 = zext i32 %197 to i64
  %199 = load ptr, ptr %192, align 8, !tbaa !144
  %200 = getelementptr inbounds i32, ptr %199, i64 %198
  %201 = load i32, ptr %200, align 4, !tbaa !59
  %202 = getelementptr inbounds i32, ptr %166, i64 1
  store i32 %201, ptr %166, align 4, !tbaa !59
  %203 = add nuw i32 %165, 1
  %204 = icmp eq i32 %203, %11
  br i1 %204, label %205, label %164

205:                                              ; preds = %164, %205
  %206 = phi i32 [ %245, %205 ], [ 0, %164 ]
  %207 = phi ptr [ %244, %205 ], [ %202, %164 ]
  %208 = load ptr, ptr %163, align 8, !tbaa !550
  %209 = getelementptr inbounds %"class.dealii::Triangulation", ptr %208, i64 0, i32 2
  %210 = load ptr, ptr %209, align 8, !tbaa !514
  %211 = load i32, ptr %0, align 8, !tbaa !548
  %212 = sext i32 %211 to i64
  %213 = load ptr, ptr %210, align 8, !tbaa !707, !noalias !754
  %214 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %213, i64 %212, i32 0, i64 1
  %215 = load i32, ptr %214, align 4, !tbaa !59, !noalias !754
  %216 = load ptr, ptr %4, align 8, !tbaa !551
  %217 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %216, i64 0, i32 2
  %218 = load ptr, ptr %217, align 8, !tbaa !63
  %219 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %210, i64 0, i32 1
  %220 = shl i32 %211, 2
  %221 = load ptr, ptr %219, align 8, !tbaa !54
  %222 = lshr i32 %220, 6
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds i64, ptr %221, i64 %223
  %225 = and i32 %220, 60
  %226 = or i32 %225, 1
  %227 = zext i32 %226 to i64
  %228 = shl nuw i64 1, %227
  %229 = load i64, ptr %224, align 8, !tbaa !56
  %230 = and i64 %229, %228
  %231 = icmp ne i64 %230, 0
  %232 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %218, i32 noundef %206, i1 noundef zeroext %231)
  %233 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %216, i64 0, i32 4
  %234 = load ptr, ptr %233, align 8, !tbaa !757
  %235 = load ptr, ptr %217, align 8, !tbaa !63
  %236 = getelementptr inbounds i8, ptr %235, i64 76
  %237 = load i32, ptr %236, align 4, !tbaa !701
  %238 = mul i32 %237, %215
  %239 = add i32 %238, %232
  %240 = zext i32 %239 to i64
  %241 = load ptr, ptr %234, align 8, !tbaa !144
  %242 = getelementptr inbounds i32, ptr %241, i64 %240
  %243 = load i32, ptr %242, align 4, !tbaa !59
  %244 = getelementptr inbounds i32, ptr %207, i64 1
  store i32 %243, ptr %207, align 4, !tbaa !59
  %245 = add nuw i32 %206, 1
  %246 = icmp eq i32 %245, %11
  br i1 %246, label %247, label %205

247:                                              ; preds = %205, %247
  %248 = phi i32 [ %287, %247 ], [ 0, %205 ]
  %249 = phi ptr [ %286, %247 ], [ %244, %205 ]
  %250 = load ptr, ptr %163, align 8, !tbaa !550
  %251 = getelementptr inbounds %"class.dealii::Triangulation", ptr %250, i64 0, i32 2
  %252 = load ptr, ptr %251, align 8, !tbaa !514
  %253 = load i32, ptr %0, align 8, !tbaa !548
  %254 = sext i32 %253 to i64
  %255 = load ptr, ptr %252, align 8, !tbaa !707, !noalias !754
  %256 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %255, i64 %254, i32 0, i64 2
  %257 = load i32, ptr %256, align 4, !tbaa !59, !noalias !754
  %258 = load ptr, ptr %4, align 8, !tbaa !551
  %259 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %258, i64 0, i32 2
  %260 = load ptr, ptr %259, align 8, !tbaa !63
  %261 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %252, i64 0, i32 1
  %262 = shl i32 %253, 2
  %263 = load ptr, ptr %261, align 8, !tbaa !54
  %264 = lshr i32 %262, 6
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds i64, ptr %263, i64 %265
  %267 = and i32 %262, 60
  %268 = or i32 %267, 2
  %269 = zext i32 %268 to i64
  %270 = shl nuw i64 1, %269
  %271 = load i64, ptr %266, align 8, !tbaa !56
  %272 = and i64 %271, %270
  %273 = icmp ne i64 %272, 0
  %274 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %260, i32 noundef %248, i1 noundef zeroext %273)
  %275 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %258, i64 0, i32 4
  %276 = load ptr, ptr %275, align 8, !tbaa !757
  %277 = load ptr, ptr %259, align 8, !tbaa !63
  %278 = getelementptr inbounds i8, ptr %277, i64 76
  %279 = load i32, ptr %278, align 4, !tbaa !701
  %280 = mul i32 %279, %257
  %281 = add i32 %280, %274
  %282 = zext i32 %281 to i64
  %283 = load ptr, ptr %276, align 8, !tbaa !144
  %284 = getelementptr inbounds i32, ptr %283, i64 %282
  %285 = load i32, ptr %284, align 4, !tbaa !59
  %286 = getelementptr inbounds i32, ptr %249, i64 1
  store i32 %285, ptr %249, align 4, !tbaa !59
  %287 = add nuw i32 %248, 1
  %288 = icmp eq i32 %287, %11
  br i1 %288, label %289, label %247

289:                                              ; preds = %247, %289
  %290 = phi i32 [ %329, %289 ], [ 0, %247 ]
  %291 = phi ptr [ %328, %289 ], [ %286, %247 ]
  %292 = load ptr, ptr %163, align 8, !tbaa !550
  %293 = getelementptr inbounds %"class.dealii::Triangulation", ptr %292, i64 0, i32 2
  %294 = load ptr, ptr %293, align 8, !tbaa !514
  %295 = load i32, ptr %0, align 8, !tbaa !548
  %296 = sext i32 %295 to i64
  %297 = load ptr, ptr %294, align 8, !tbaa !707, !noalias !754
  %298 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %297, i64 %296, i32 0, i64 3
  %299 = load i32, ptr %298, align 4, !tbaa !59, !noalias !754
  %300 = load ptr, ptr %4, align 8, !tbaa !551
  %301 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %300, i64 0, i32 2
  %302 = load ptr, ptr %301, align 8, !tbaa !63
  %303 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %294, i64 0, i32 1
  %304 = shl i32 %295, 2
  %305 = load ptr, ptr %303, align 8, !tbaa !54
  %306 = lshr i32 %304, 6
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds i64, ptr %305, i64 %307
  %309 = and i32 %304, 60
  %310 = or i32 %309, 3
  %311 = zext i32 %310 to i64
  %312 = shl nuw i64 1, %311
  %313 = load i64, ptr %308, align 8, !tbaa !56
  %314 = and i64 %313, %312
  %315 = icmp ne i64 %314, 0
  %316 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %302, i32 noundef %290, i1 noundef zeroext %315)
  %317 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %300, i64 0, i32 4
  %318 = load ptr, ptr %317, align 8, !tbaa !757
  %319 = load ptr, ptr %301, align 8, !tbaa !63
  %320 = getelementptr inbounds i8, ptr %319, i64 76
  %321 = load i32, ptr %320, align 4, !tbaa !701
  %322 = mul i32 %321, %299
  %323 = add i32 %322, %316
  %324 = zext i32 %323 to i64
  %325 = load ptr, ptr %318, align 8, !tbaa !144
  %326 = getelementptr inbounds i32, ptr %325, i64 %324
  %327 = load i32, ptr %326, align 4, !tbaa !59
  %328 = getelementptr inbounds i32, ptr %291, i64 1
  store i32 %327, ptr %291, align 4, !tbaa !59
  %329 = add nuw i32 %290, 1
  %330 = icmp eq i32 %329, %11
  br i1 %330, label %331, label %289

331:                                              ; preds = %289, %160
  %332 = phi ptr [ %161, %160 ], [ %328, %289 ]
  %333 = icmp eq i32 %13, 0
  br i1 %333, label %359, label %334

334:                                              ; preds = %331
  %335 = load ptr, ptr %4, align 8, !tbaa !551
  %336 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %335, i64 0, i32 4
  %337 = load ptr, ptr %336, align 8, !tbaa !757
  %338 = getelementptr inbounds %"class.dealii::internal::DoFHandler::DoFFaces", ptr %337, i64 0, i32 1
  %339 = getelementptr inbounds %"class.dealii::DoFHandler", ptr %335, i64 0, i32 2
  %340 = load ptr, ptr %339, align 8, !tbaa !63
  %341 = getelementptr inbounds i8, ptr %340, i64 80
  %342 = load ptr, ptr %338, align 8, !tbaa !144
  %343 = and i32 %13, 1
  %344 = icmp eq i32 %13, 1
  br i1 %344, label %347, label %345

345:                                              ; preds = %334
  %346 = and i32 %13, -2
  br label %360

347:                                              ; preds = %360, %334
  %348 = phi i32 [ 0, %334 ], [ %381, %360 ]
  %349 = phi ptr [ %332, %334 ], [ %380, %360 ]
  %350 = icmp eq i32 %343, 0
  br i1 %350, label %359, label %351

351:                                              ; preds = %347
  %352 = load i32, ptr %0, align 8, !tbaa !548
  %353 = load i32, ptr %341, align 4, !tbaa !702
  %354 = mul i32 %353, %352
  %355 = add i32 %354, %348
  %356 = zext i32 %355 to i64
  %357 = getelementptr inbounds i32, ptr %342, i64 %356
  %358 = load i32, ptr %357, align 4, !tbaa !59
  store i32 %358, ptr %349, align 4, !tbaa !59
  br label %359

359:                                              ; preds = %351, %347, %331
  ret void

360:                                              ; preds = %360, %345
  %361 = phi i32 [ 0, %345 ], [ %381, %360 ]
  %362 = phi ptr [ %332, %345 ], [ %380, %360 ]
  %363 = phi i32 [ 0, %345 ], [ %382, %360 ]
  %364 = load i32, ptr %0, align 8, !tbaa !548
  %365 = load i32, ptr %341, align 4, !tbaa !702
  %366 = mul i32 %365, %364
  %367 = add i32 %366, %361
  %368 = zext i32 %367 to i64
  %369 = getelementptr inbounds i32, ptr %342, i64 %368
  %370 = load i32, ptr %369, align 4, !tbaa !59
  %371 = getelementptr inbounds i32, ptr %362, i64 1
  store i32 %370, ptr %362, align 4, !tbaa !59
  %372 = or i32 %361, 1
  %373 = load i32, ptr %0, align 8, !tbaa !548
  %374 = load i32, ptr %341, align 4, !tbaa !702
  %375 = mul i32 %374, %373
  %376 = add i32 %375, %372
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds i32, ptr %342, i64 %377
  %379 = load i32, ptr %378, align 4, !tbaa !59
  %380 = getelementptr inbounds i32, ptr %362, i64 2
  store i32 %379, ptr %371, align 4, !tbaa !59
  %381 = add nuw i32 %361, 2
  %382 = add i32 %363, 2
  %383 = icmp eq i32 %382, %346
  br i1 %383, label %347, label %360
}

declare void @_ZN6dealii10QuadratureILi2EED1Ev(ptr noundef nonnull align 8 dereferenceable(128)) unnamed_addr #2

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii16FEFaceValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(784) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii16FEFaceValuesBaseILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::FEFaceValuesBase", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii10QuadratureILi2EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2)
          to label %3 unwind label %4

3:                                                ; preds = %1
  tail call void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
  ret void

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
          to label %6 unwind label %7

6:                                                ; preds = %4
  resume { ptr, i32 } %5

7:                                                ; preds = %4
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  tail call void @__clang_call_terminate(ptr %9) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii16FEFaceValuesBaseILi3ELi3EED0Ev(ptr noundef nonnull align 8 dereferenceable(784) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii16FEFaceValuesBaseILi3ELi3EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::FEFaceValuesBase", ptr %0, i64 0, i32 2
  invoke void @_ZN6dealii10QuadratureILi2EED1Ev(ptr noundef nonnull align 8 dereferenceable(128) %2)
          to label %3 unwind label %4

3:                                                ; preds = %1
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
          to label %9 unwind label %10

4:                                                ; preds = %1
  %5 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN6dealii12FEValuesBaseILi3ELi3EED2Ev(ptr noundef nonnull align 8 dereferenceable(648) %0)
          to label %12 unwind label %6

6:                                                ; preds = %4
  %7 = landingpad { ptr, i32 }
          catch ptr null
  %8 = extractvalue { ptr, i32 } %7, 0
  tail call void @__clang_call_terminate(ptr %8) #22
  unreachable

9:                                                ; preds = %3
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

10:                                               ; preds = %3
  %11 = landingpad { ptr, i32 }
          cleanup
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi { ptr, i32 } [ %11, %10 ], [ %5, %4 ]
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %13
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS1J_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(343) @_ZTSPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvN5boost6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_10QuadratureILi2EEENS0_9null_typeESF_SF_SF_SF_SF_SF_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSO_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESO_RKS13_NS2_13MatrixCreator13IteratorRangeIS8_EERNS2_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker9IPFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEvSJ_SM_S10_S13_S17_SR_S19_S1C_S1F_E6invokeERNS1_15function_bufferESJ_SM_S10_S13_S17_SR_S19_S1C_S1F_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef byval(%"class.boost::tuples::tuple") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) #0 comdat align 2 {
  %11 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %12 = load ptr, ptr %0, align 8, !tbaa !30
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %8, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %11, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !17
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %11, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !17
  call void %12(ptr noundef nonnull byval(%"class.boost::tuples::tuple") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull %11, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS4_5list9INS4_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS20_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.429", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS20_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !497
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !497
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS20_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.429", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !497
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !497
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.429", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %11, ptr noundef nonnull align 8 dereferenceable(72) %12, i64 72, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNSB_10DoFHandlerILi3ELi3EEERKNSB_10QuadratureILi2EEENS9_9null_typeESO_SO_SO_SO_SO_SO_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSX_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESX_RKS1C_NSB_13MatrixCreator13IteratorRangeISH_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISP_EENS_17reference_wrapperISR_EENS1R_IS15_EENS1R_IS18_EENS1R_IS1C_EENS1P_ISX_EENS1R_IS1E_EENS1P_IS1I_EENS1R_IS1K_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !497
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !497
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEE6manageERKNS1_15function_bufferERS21_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEE7managerERKNS1_15function_bufferERS21_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !654
  %7 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !762
  %9 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !677
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !764
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !33
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !766
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %2, i64 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !17
  %21 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %22, i64 16, i1 false)
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !17
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %3, i64 0, i32 1, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !656
  call void @_ZNK5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEclESH_SK_SY_S11_S15_SP_S17_S1A_S1D_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull byval(%"class.boost::tuples::tuple") align 8 %4, ptr noundef nonnull align 8 dereferenceable(36) %6, ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(88) %10, ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef %14, ptr noundef nonnull align 8 dereferenceable(24) %16, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %27)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNSB_10DoFHandlerILi3ELi3EEERKNSB_10QuadratureILi2EEENS9_9null_typeESO_SO_SO_SO_SO_SO_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSX_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESX_RKS1C_NSB_13MatrixCreator13IteratorRangeISH_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISP_EENS_17reference_wrapperISR_EENS1R_IS15_EENS1R_IS18_EENS1R_IS1C_EENS1P_ISX_EENS1R_IS1E_EENS1P_IS1I_EENS1R_IS1K_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.429", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNSB_10DoFHandlerILi3ELi3EEERKNSB_10QuadratureILi2EEENS9_9null_typeESO_SO_SO_SO_SO_SO_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSX_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESX_RKS1C_NSB_13MatrixCreator13IteratorRangeISH_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISP_EENS_17reference_wrapperISR_EENS1R_IS15_EENS1R_IS18_EENS1R_IS1C_EENS1P_ISX_EENS1R_IS1E_EENS1P_IS1I_EENS1R_IS1K_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !497
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !497
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS9_10DoFHandlerILi3ELi3EEERKNS9_10QuadratureILi2EEENS7_9null_typeESM_SM_SM_SM_SM_SM_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSV_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESV_RKS1A_NS9_13MatrixCreator13IteratorRangeISF_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISN_EENS_17reference_wrapperISP_EENS1P_IS13_EENS1P_IS16_EENS1P_IS1A_EENS1N_ISV_EENS1P_IS1C_EENS1N_IS1G_EENS1P_IS1I_EEEEEEE7managerERKNS1_15function_bufferERS21_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(160) ptr @_Znwm(i64 noundef 160) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %15, ptr noundef nonnull align 8 dereferenceable(72) %16, i64 72, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !17
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !17
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !497
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(532) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_10QuadratureILi2EEENS4_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS6_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS6_13MatrixCreator13IteratorRangeISC_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISK_EENS_17reference_wrapperISM_EENS1M_IS10_EENS1M_IS13_EENS1M_IS17_EENS1K_ISS_EENS1M_IS19_EENS1K_IS1D_EENS1M_IS1F_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi2EEENS1_9null_typeESG_SG_SG_SG_SG_SG_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEclESH_SK_SY_S11_S15_SP_S17_S1A_S1D_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef byval(%"class.boost::tuples::tuple") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.boost::bad_function_call", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange", align 8
  %15 = load ptr, ptr %0, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %47

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %18, ptr %12, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #19
  store i64 29, ptr %11, align 8, !tbaa !56
  %19 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
  store ptr %19, ptr %12, align 8, !tbaa !660
  %20 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %20, ptr %18, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %19, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !662
  %22 = load ptr, ptr %12, align 8, !tbaa !660
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %24 unwind label %31

24:                                               ; preds = %17
  %25 = load ptr, ptr %12, align 8, !tbaa !660
  %26 = icmp eq ptr %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i64, ptr %21, align 8, !tbaa !662
  %29 = icmp ult i64 %28, 16
  call void @llvm.assume(i1 %29)
  br label %42

30:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #21
  br label %42

31:                                               ; preds = %17
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %12, align 8, !tbaa !660
  %34 = icmp eq ptr %33, %18
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load i64, ptr %21, align 8, !tbaa !662
  %37 = icmp ult i64 %36, 16
  call void @llvm.assume(i1 %37)
  br label %41

38:                                               ; preds = %31
  call void @_ZdlPv(ptr noundef %33) #21
  br label %41

39:                                               ; preds = %45, %41
  %40 = phi { ptr, i32 } [ %32, %41 ], [ %46, %45 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %38, %35
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  br label %39

42:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %43 unwind label %45

43:                                               ; preds = %42
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  %44 = load ptr, ptr %0, align 8, !tbaa !25
  br label %47

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  br label %39

47:                                               ; preds = %43, %10
  %48 = phi ptr [ %44, %43 ], [ %15, %10 ]
  %49 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable9.181", ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !768
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %8, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.dealii::DoFAccessor", ptr %14, i64 0, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !17
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !17
  call void %50(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull byval(%"class.boost::tuples::tuple") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNSB_10DoFHandlerILi3ELi3EEERKNSB_10QuadratureILi2EEENS9_9null_typeESO_SO_SO_SO_SO_SO_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSX_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESX_RKS1C_NSB_13MatrixCreator13IteratorRangeISH_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISP_EENS_17reference_wrapperISR_EENS1R_IS15_EENS1R_IS18_EENS1R_IS1C_EENS1P_ISX_EENS1R_IS1E_EENS1P_IS1I_EENS1R_IS1K_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.429", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !17
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(160) ptr @_Znwm(i64 noundef 160) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !17
  %37 = load ptr, ptr %23, align 8, !tbaa !17
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %47, ptr noundef nonnull align 8 dereferenceable(72) %12, i64 72, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !17
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !17
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.429", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !497
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !497
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

declare void @_ZN6dealii2hp12FEFaceValuesILi3EEC1ERKNS0_17MappingCollectionILi3ELi3EEERKNS0_12FECollectionILi3ELi3EEERKNS0_11QCollectionILi2EEENS_11UpdateFlagsE(ptr noundef nonnull align 8 dereferenceable(240), ptr noundef nonnull align 8 dereferenceable(96), ptr noundef nonnull align 8 dereferenceable(96), ptr noundef nonnull align 8 dereferenceable(96), i32 noundef) unnamed_addr #2

declare void @_ZN6dealii2hp12FEFaceValuesILi3EE6reinitERKNS_12TriaIteratorINS_15DoFCellAccessorINS0_10DoFHandlerILi3ELi3EEEEEEEjjjj(ptr noundef nonnull align 8 dereferenceable(240), ptr noundef nonnull align 8 dereferenceable(24), i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr %1, i32 %2, i64 noundef %3, i1 noundef zeroext %4) local_unnamed_addr #0 comdat align 2 {
  %6 = sext i1 %4 to i8
  %7 = icmp eq i64 %3, 0
  br i1 %7, label %349, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !573
  %11 = load ptr, ptr %0, align 8, !tbaa !54
  %12 = ptrtoint ptr %10 to i64
  %13 = ptrtoint ptr %11 to i64
  %14 = sub i64 %12, %13
  %15 = shl nsw i64 %14, 3
  %16 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data", ptr %0, i64 0, i32 1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = ptrtoint ptr %17 to i64
  %21 = sub i64 %20, %13
  %22 = shl nsw i64 %21, 3
  %23 = zext i32 %19 to i64
  %24 = add nsw i64 %22, %23
  %25 = sub i64 %15, %24
  %26 = icmp ult i64 %25, %3
  br i1 %26, label %157, label %27

27:                                               ; preds = %8
  %28 = ptrtoint ptr %1 to i64
  %29 = sub i64 %20, %28
  %30 = shl nsw i64 %29, 3
  %31 = zext i32 %2 to i64
  %32 = sub nsw i64 %23, %31
  %33 = add i64 %32, %30
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %35, label %80

35:                                               ; preds = %27
  %36 = add nsw i64 %23, %3
  %37 = srem i64 %36, 64
  %38 = icmp slt i64 %37, 0
  %39 = add nsw i64 %37, 64
  %40 = select i1 %38, i64 %39, i64 %37
  %41 = trunc i64 %40 to i32
  %42 = sdiv i64 %36, 64
  %43 = getelementptr inbounds i64, ptr %17, i64 %42
  %44 = ashr i64 %37, 63
  %45 = getelementptr inbounds i64, ptr %43, i64 %44
  br label %46

46:                                               ; preds = %35, %76
  %47 = phi i64 [ %78, %76 ], [ %33, %35 ]
  %48 = phi i32 [ %56, %76 ], [ %19, %35 ]
  %49 = phi ptr [ %55, %76 ], [ %17, %35 ]
  %50 = phi i32 [ %63, %76 ], [ %41, %35 ]
  %51 = phi ptr [ %62, %76 ], [ %45, %35 ]
  %52 = add i32 %48, -1
  %53 = icmp eq i32 %48, 0
  %54 = sext i1 %53 to i64
  %55 = getelementptr inbounds i64, ptr %49, i64 %54
  %56 = select i1 %53, i32 63, i32 %52
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 1, %57
  %59 = add i32 %50, -1
  %60 = icmp eq i32 %50, 0
  %61 = sext i1 %60 to i64
  %62 = getelementptr inbounds i64, ptr %51, i64 %61
  %63 = select i1 %60, i32 63, i32 %59
  %64 = zext i32 %63 to i64
  %65 = shl nuw i64 1, %64
  %66 = load i64, ptr %55, align 8, !tbaa !56
  %67 = and i64 %66, %58
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %46
  %70 = load i64, ptr %62, align 8, !tbaa !56
  %71 = or i64 %70, %65
  br label %76

72:                                               ; preds = %46
  %73 = xor i64 %65, -1
  %74 = load i64, ptr %62, align 8, !tbaa !56
  %75 = and i64 %74, %73
  br label %76

76:                                               ; preds = %72, %69
  %77 = phi i64 [ %71, %69 ], [ %75, %72 ]
  store i64 %77, ptr %62, align 8, !tbaa !56
  %78 = add nsw i64 %47, -1
  %79 = icmp sgt i64 %47, 1
  br i1 %79, label %46, label %80

80:                                               ; preds = %76, %27
  %81 = add nsw i64 %31, %3
  %82 = sdiv i64 %81, 64
  %83 = getelementptr inbounds i64, ptr %1, i64 %82
  %84 = srem i64 %81, 64
  %85 = icmp slt i64 %84, 0
  %86 = add nsw i64 %84, 64
  %87 = ashr i64 %84, 63
  %88 = getelementptr inbounds i64, ptr %83, i64 %87
  %89 = select i1 %85, i64 %86, i64 %84
  %90 = trunc i64 %89 to i32
  %91 = icmp eq ptr %88, %1
  br i1 %91, label %126, label %92

92:                                               ; preds = %80
  %93 = icmp eq i32 %2, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds i64, ptr %1, i64 1
  %96 = shl nsw i64 -1, %31
  br i1 %4, label %97, label %100

97:                                               ; preds = %94
  %98 = load i64, ptr %1, align 8, !tbaa !56
  %99 = or i64 %98, %96
  br label %104

100:                                              ; preds = %94
  %101 = xor i64 %96, -1
  %102 = load i64, ptr %1, align 8, !tbaa !56
  %103 = and i64 %102, %101
  br label %104

104:                                              ; preds = %100, %97
  %105 = phi i64 [ %103, %100 ], [ %99, %97 ]
  store i64 %105, ptr %1, align 8, !tbaa !56
  %106 = ptrtoint ptr %95 to i64
  br label %107

107:                                              ; preds = %104, %92
  %108 = phi i64 [ %106, %104 ], [ %28, %92 ]
  %109 = phi ptr [ %95, %104 ], [ %1, %92 ]
  %110 = ptrtoint ptr %88 to i64
  %111 = sub i64 %110, %108
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %109, i8 %6, i64 %111, i1 false)
  %112 = icmp eq i32 %90, 0
  br i1 %112, label %143, label %113

113:                                              ; preds = %107
  %114 = sub nsw i64 64, %89
  %115 = and i64 %114, 4294967295
  %116 = lshr i64 -1, %115
  br i1 %4, label %117, label %120

117:                                              ; preds = %113
  %118 = load i64, ptr %88, align 8, !tbaa !56
  %119 = or i64 %118, %116
  br label %124

120:                                              ; preds = %113
  %121 = xor i64 %116, -1
  %122 = load i64, ptr %88, align 8, !tbaa !56
  %123 = and i64 %122, %121
  br label %124

124:                                              ; preds = %120, %117
  %125 = phi i64 [ %123, %120 ], [ %119, %117 ]
  store i64 %125, ptr %88, align 8, !tbaa !56
  br label %143

126:                                              ; preds = %80
  %127 = icmp eq i32 %90, %2
  br i1 %127, label %143, label %128

128:                                              ; preds = %126
  %129 = shl nsw i64 -1, %31
  %130 = sub nsw i64 64, %89
  %131 = and i64 %130, 4294967295
  %132 = lshr i64 -1, %131
  %133 = and i64 %132, %129
  br i1 %4, label %134, label %137

134:                                              ; preds = %128
  %135 = load i64, ptr %1, align 8, !tbaa !56
  %136 = or i64 %135, %133
  br label %141

137:                                              ; preds = %128
  %138 = xor i64 %133, -1
  %139 = load i64, ptr %1, align 8, !tbaa !56
  %140 = and i64 %139, %138
  br label %141

141:                                              ; preds = %137, %134
  %142 = phi i64 [ %140, %137 ], [ %136, %134 ]
  store i64 %142, ptr %1, align 8, !tbaa !56
  br label %143

143:                                              ; preds = %107, %124, %126, %141
  %144 = load i32, ptr %18, align 8, !tbaa !572
  %145 = zext i32 %144 to i64
  %146 = add nsw i64 %145, %3
  %147 = sdiv i64 %146, 64
  %148 = load ptr, ptr %16, align 8, !tbaa !54
  %149 = getelementptr inbounds i64, ptr %148, i64 %147
  %150 = srem i64 %146, 64
  %151 = icmp slt i64 %150, 0
  %152 = add nsw i64 %150, 64
  %153 = ashr i64 %150, 63
  %154 = getelementptr inbounds i64, ptr %149, i64 %153
  %155 = select i1 %151, i64 %152, i64 %150
  store ptr %154, ptr %16, align 8, !tbaa !54
  %156 = trunc i64 %155 to i32
  br label %347

157:                                              ; preds = %8
  %158 = sub i64 9223372036854775744, %24
  %159 = icmp ult i64 %158, %3
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.17) #23
  unreachable

161:                                              ; preds = %157
  %162 = tail call i64 @llvm.umax.i64(i64 %24, i64 %3)
  %163 = add i64 %162, %24
  %164 = icmp ult i64 %163, %24
  %165 = icmp ugt i64 %163, 9223372036854775744
  %166 = or i1 %164, %165
  %167 = add i64 %163, 63
  %168 = select i1 %166, i64 9223372036854775807, i64 %167
  %169 = lshr i64 %168, 3
  %170 = and i64 %169, 2305843009213693944
  %171 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %170) #20
  %172 = ptrtoint ptr %1 to i64
  %173 = sub i64 %172, %13
  %174 = icmp sgt i64 %173, 8
  br i1 %174, label %175, label %176, !prof !493

175:                                              ; preds = %161
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %171, ptr align 8 %11, i64 %173, i1 false)
  br label %180

176:                                              ; preds = %161
  %177 = icmp eq i64 %173, 8
  br i1 %177, label %178, label %180

178:                                              ; preds = %176
  %179 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %179, ptr %171, align 8, !tbaa !56
  br label %180

180:                                              ; preds = %178, %176, %175
  %181 = ashr exact i64 %173, 3
  %182 = getelementptr inbounds i64, ptr %171, i64 %181
  %183 = icmp eq i32 %2, 0
  br i1 %183, label %220, label %184

184:                                              ; preds = %180
  %185 = zext i32 %2 to i64
  br label %186

186:                                              ; preds = %206, %184
  %187 = phi i64 [ %218, %206 ], [ %185, %184 ]
  %188 = phi i32 [ %212, %206 ], [ 0, %184 ]
  %189 = phi ptr [ %211, %206 ], [ %1, %184 ]
  %190 = phi ptr [ %217, %206 ], [ %182, %184 ]
  %191 = phi i32 [ %215, %206 ], [ 0, %184 ]
  %192 = zext i32 %188 to i64
  %193 = shl nuw i64 1, %192
  %194 = load i64, ptr %189, align 8, !tbaa !56
  %195 = and i64 %194, %193
  %196 = icmp eq i64 %195, 0
  %197 = zext i32 %191 to i64
  %198 = shl nuw i64 1, %197
  br i1 %196, label %202, label %199

199:                                              ; preds = %186
  %200 = load i64, ptr %190, align 8, !tbaa !56
  %201 = or i64 %200, %198
  br label %206

202:                                              ; preds = %186
  %203 = xor i64 %198, -1
  %204 = load i64, ptr %190, align 8, !tbaa !56
  %205 = and i64 %204, %203
  br label %206

206:                                              ; preds = %202, %199
  %207 = phi i64 [ %205, %202 ], [ %201, %199 ]
  store i64 %207, ptr %190, align 8, !tbaa !56
  %208 = add i32 %188, 1
  %209 = icmp eq i32 %188, 63
  %210 = zext i1 %209 to i64
  %211 = getelementptr inbounds i64, ptr %189, i64 %210
  %212 = select i1 %209, i32 0, i32 %208
  %213 = add i32 %191, 1
  %214 = icmp eq i32 %191, 63
  %215 = select i1 %214, i32 0, i32 %213
  %216 = zext i1 %214 to i64
  %217 = getelementptr inbounds i64, ptr %190, i64 %216
  %218 = add nsw i64 %187, -1
  %219 = icmp sgt i64 %187, 1
  br i1 %219, label %186, label %220

220:                                              ; preds = %206, %180
  %221 = phi i32 [ 0, %180 ], [ %215, %206 ]
  %222 = phi ptr [ %182, %180 ], [ %217, %206 ]
  %223 = zext i32 %221 to i64
  %224 = add nsw i64 %223, %3
  %225 = sdiv i64 %224, 64
  %226 = getelementptr inbounds i64, ptr %222, i64 %225
  %227 = srem i64 %224, 64
  %228 = icmp slt i64 %227, 0
  %229 = add nsw i64 %227, 64
  %230 = ashr i64 %227, 63
  %231 = getelementptr inbounds i64, ptr %226, i64 %230
  %232 = select i1 %228, i64 %229, i64 %227
  %233 = trunc i64 %232 to i32
  %234 = icmp eq ptr %222, %231
  br i1 %234, label %268, label %235

235:                                              ; preds = %220
  %236 = icmp eq i32 %221, 0
  br i1 %236, label %249, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds i64, ptr %222, i64 1
  %239 = shl nsw i64 -1, %223
  br i1 %4, label %240, label %243

240:                                              ; preds = %237
  %241 = load i64, ptr %222, align 8, !tbaa !56
  %242 = or i64 %241, %239
  br label %247

243:                                              ; preds = %237
  %244 = xor i64 %239, -1
  %245 = load i64, ptr %222, align 8, !tbaa !56
  %246 = and i64 %245, %244
  br label %247

247:                                              ; preds = %243, %240
  %248 = phi i64 [ %246, %243 ], [ %242, %240 ]
  store i64 %248, ptr %222, align 8, !tbaa !56
  br label %249

249:                                              ; preds = %247, %235
  %250 = phi ptr [ %238, %247 ], [ %222, %235 ]
  %251 = ptrtoint ptr %231 to i64
  %252 = ptrtoint ptr %250 to i64
  %253 = sub i64 %251, %252
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %250, i8 %6, i64 %253, i1 false)
  %254 = icmp eq i32 %233, 0
  br i1 %254, label %285, label %255

255:                                              ; preds = %249
  %256 = sub nsw i64 64, %232
  %257 = and i64 %256, 4294967295
  %258 = lshr i64 -1, %257
  br i1 %4, label %259, label %262

259:                                              ; preds = %255
  %260 = load i64, ptr %231, align 8, !tbaa !56
  %261 = or i64 %260, %258
  br label %266

262:                                              ; preds = %255
  %263 = xor i64 %258, -1
  %264 = load i64, ptr %231, align 8, !tbaa !56
  %265 = and i64 %264, %263
  br label %266

266:                                              ; preds = %262, %259
  %267 = phi i64 [ %265, %262 ], [ %261, %259 ]
  store i64 %267, ptr %231, align 8, !tbaa !56
  br label %285

268:                                              ; preds = %220
  %269 = icmp eq i32 %221, %233
  br i1 %269, label %285, label %270

270:                                              ; preds = %268
  %271 = shl nsw i64 -1, %223
  %272 = sub nsw i64 64, %232
  %273 = and i64 %272, 4294967295
  %274 = lshr i64 -1, %273
  %275 = and i64 %274, %271
  br i1 %4, label %276, label %279

276:                                              ; preds = %270
  %277 = load i64, ptr %222, align 8, !tbaa !56
  %278 = or i64 %277, %275
  br label %283

279:                                              ; preds = %270
  %280 = xor i64 %275, -1
  %281 = load i64, ptr %222, align 8, !tbaa !56
  %282 = and i64 %281, %280
  br label %283

283:                                              ; preds = %279, %276
  %284 = phi i64 [ %282, %279 ], [ %278, %276 ]
  store i64 %284, ptr %222, align 8, !tbaa !56
  br label %285

285:                                              ; preds = %249, %266, %268, %283
  %286 = load ptr, ptr %16, align 8
  %287 = load i32, ptr %18, align 8
  %288 = ptrtoint ptr %286 to i64
  %289 = sub i64 %288, %172
  %290 = shl nsw i64 %289, 3
  %291 = zext i32 %287 to i64
  %292 = zext i32 %2 to i64
  %293 = sub nsw i64 %291, %292
  %294 = add i64 %293, %290
  %295 = icmp sgt i64 %294, 0
  br i1 %295, label %296, label %330

296:                                              ; preds = %285, %316
  %297 = phi i64 [ %328, %316 ], [ %294, %285 ]
  %298 = phi i32 [ %322, %316 ], [ %2, %285 ]
  %299 = phi ptr [ %321, %316 ], [ %1, %285 ]
  %300 = phi i32 [ %327, %316 ], [ %233, %285 ]
  %301 = phi ptr [ %326, %316 ], [ %231, %285 ]
  %302 = zext i32 %298 to i64
  %303 = shl nuw i64 1, %302
  %304 = zext i32 %300 to i64
  %305 = shl nuw i64 1, %304
  %306 = load i64, ptr %299, align 8, !tbaa !56
  %307 = and i64 %306, %303
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %296
  %310 = load i64, ptr %301, align 8, !tbaa !56
  %311 = or i64 %310, %305
  br label %316

312:                                              ; preds = %296
  %313 = xor i64 %305, -1
  %314 = load i64, ptr %301, align 8, !tbaa !56
  %315 = and i64 %314, %313
  br label %316

316:                                              ; preds = %312, %309
  %317 = phi i64 [ %311, %309 ], [ %315, %312 ]
  store i64 %317, ptr %301, align 8, !tbaa !56
  %318 = add i32 %298, 1
  %319 = icmp eq i32 %298, 63
  %320 = zext i1 %319 to i64
  %321 = getelementptr inbounds i64, ptr %299, i64 %320
  %322 = select i1 %319, i32 0, i32 %318
  %323 = add i32 %300, 1
  %324 = icmp eq i32 %300, 63
  %325 = zext i1 %324 to i64
  %326 = getelementptr inbounds i64, ptr %301, i64 %325
  %327 = select i1 %324, i32 0, i32 %323
  %328 = add nsw i64 %297, -1
  %329 = icmp sgt i64 %297, 1
  br i1 %329, label %296, label %330

330:                                              ; preds = %316, %285
  %331 = phi ptr [ %231, %285 ], [ %326, %316 ]
  %332 = phi i32 [ %233, %285 ], [ %327, %316 ]
  %333 = load ptr, ptr %0, align 8, !tbaa !54
  %334 = icmp eq ptr %333, null
  br i1 %334, label %343, label %335

335:                                              ; preds = %330
  %336 = load ptr, ptr %9, align 8, !tbaa !573
  %337 = ptrtoint ptr %336 to i64
  %338 = ptrtoint ptr %333 to i64
  %339 = sub i64 %337, %338
  %340 = ashr exact i64 %339, 3
  %341 = sub nsw i64 0, %340
  %342 = getelementptr inbounds i64, ptr %336, i64 %341
  tail call void @_ZdlPv(ptr noundef %342) #21
  br label %343

343:                                              ; preds = %330, %335
  %344 = lshr i64 %168, 6
  %345 = getelementptr inbounds i64, ptr %171, i64 %344
  store ptr %345, ptr %9, align 8, !tbaa !573
  store ptr %171, ptr %0, align 8
  %346 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 0, ptr %346, align 8
  store ptr %331, ptr %16, align 8
  br label %347

347:                                              ; preds = %143, %343
  %348 = phi i32 [ %332, %343 ], [ %156, %143 ]
  store i32 %348, ptr %18, align 8
  br label %349

349:                                              ; preds = %347, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii8internal11DoFAccessor15get_dof_indicesINS_2hp10DoFHandlerILi3ELi3EEEEEvRKNS_11DoFAccessorILi2ET_EERSt6vectorIjSaIjEEj(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.dealii::DoFAccessor.316", ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !617
  %6 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !336
  %8 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %7, i64 0, i32 1
  %9 = zext i32 %2 to i64
  %10 = load ptr, ptr %8, align 8, !tbaa !338
  %11 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8, !tbaa !340
  %13 = getelementptr inbounds i8, ptr %12, i64 72
  %14 = load i32, ptr %13, align 8, !tbaa !700
  %15 = getelementptr inbounds i8, ptr %12, i64 76
  %16 = load i32, ptr %15, align 4, !tbaa !701
  %17 = getelementptr inbounds i8, ptr %12, i64 80
  %18 = load i32, ptr %17, align 8, !tbaa !702
  %19 = load ptr, ptr %1, align 8, !tbaa !33
  %20 = icmp eq i32 %14, 0
  br i1 %20, label %244, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %5, i64 0, i32 7
  %23 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %5, i64 0, i32 8
  %24 = getelementptr inbounds %"class.dealii::TriaAccessorBase.318", ptr %0, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %"class.dealii::Triangulation", ptr %25, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !514
  %28 = load ptr, ptr %27, align 8, !tbaa !707, !noalias !769
  %29 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %27, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !54
  %31 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaFaces", ptr %27, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !712
  %33 = load ptr, ptr %23, align 8, !tbaa !144
  %34 = load ptr, ptr %22, align 8, !tbaa !144
  %35 = zext i32 %14 to i64
  br label %36

36:                                               ; preds = %21, %79
  %37 = phi i64 [ 0, %21 ], [ %85, %79 ]
  %38 = phi ptr [ %19, %21 ], [ %84, %79 ]
  %39 = load i32, ptr %0, align 8, !tbaa !548
  %40 = sext i32 %39 to i64
  %41 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %28, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !59, !noalias !769
  %43 = shl i32 %39, 2
  %44 = lshr i32 %43, 6
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i64, ptr %30, i64 %45
  %47 = and i32 %43, 60
  %48 = zext i32 %47 to i64
  %49 = load i64, ptr %46, align 8, !tbaa !56
  %50 = lshr i64 %49, %48
  %51 = and i64 %50, 1
  %52 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %51, i64 0
  %53 = load i32, ptr %52, align 8, !tbaa !59
  %54 = sext i32 %42 to i64
  %55 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %32, i64 %54
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds [2 x i32], ptr %55, i64 0, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !59
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i32, ptr %33, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !59
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i32, ptr %34, i64 %62
  %64 = load i32, ptr %63, align 4, !tbaa !59
  %65 = icmp eq i32 %64, %2
  br i1 %65, label %79, label %66

66:                                               ; preds = %36, %66
  %67 = phi i32 [ %77, %66 ], [ %64, %36 ]
  %68 = phi ptr [ %76, %66 ], [ %63, %36 ]
  %69 = zext i32 %67 to i64
  %70 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %10, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !340
  %72 = getelementptr inbounds i8, ptr %71, i64 72
  %73 = load i32, ptr %72, align 8, !tbaa !700
  %74 = add i32 %73, 1
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i32, ptr %68, i64 %75
  %77 = load i32, ptr %76, align 4, !tbaa !59
  %78 = icmp eq i32 %77, %2
  br i1 %78, label %79, label %66

79:                                               ; preds = %66, %36
  %80 = phi ptr [ %63, %36 ], [ %76, %66 ]
  %81 = getelementptr inbounds i32, ptr %80, i64 1
  %82 = getelementptr inbounds i32, ptr %81, i64 %37
  %83 = load i32, ptr %82, align 4, !tbaa !59
  %84 = getelementptr inbounds i32, ptr %38, i64 1
  store i32 %83, ptr %38, align 4, !tbaa !59
  %85 = add nuw nsw i64 %37, 1
  %86 = icmp eq i64 %85, %35
  br i1 %86, label %87, label %36

87:                                               ; preds = %79
  %88 = getelementptr [4 x i32], ptr %28, i64 0, i64 1
  br label %89

89:                                               ; preds = %133, %87
  %90 = phi i64 [ 0, %87 ], [ %139, %133 ]
  %91 = phi ptr [ %84, %87 ], [ %138, %133 ]
  %92 = load i32, ptr %0, align 8, !tbaa !548
  %93 = sext i32 %92 to i64
  %94 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %88, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !59, !noalias !769
  %96 = shl i32 %92, 2
  %97 = lshr i32 %96, 6
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i64, ptr %30, i64 %98
  %100 = and i32 %96, 60
  %101 = or i32 %100, 1
  %102 = zext i32 %101 to i64
  %103 = load i64, ptr %99, align 8, !tbaa !56
  %104 = lshr i64 %103, %102
  %105 = and i64 %104, 1
  %106 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %105, i64 0
  %107 = load i32, ptr %106, align 8, !tbaa !59
  %108 = sext i32 %95 to i64
  %109 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %32, i64 %108
  %110 = zext i32 %107 to i64
  %111 = getelementptr inbounds [2 x i32], ptr %109, i64 0, i64 %110
  %112 = load i32, ptr %111, align 4, !tbaa !59
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i32, ptr %33, i64 %113
  %115 = load i32, ptr %114, align 4, !tbaa !59
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i32, ptr %34, i64 %116
  %118 = load i32, ptr %117, align 4, !tbaa !59
  %119 = icmp eq i32 %118, %2
  br i1 %119, label %133, label %120

120:                                              ; preds = %89, %120
  %121 = phi i32 [ %131, %120 ], [ %118, %89 ]
  %122 = phi ptr [ %130, %120 ], [ %117, %89 ]
  %123 = zext i32 %121 to i64
  %124 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %10, i64 %123
  %125 = load ptr, ptr %124, align 8, !tbaa !340
  %126 = getelementptr inbounds i8, ptr %125, i64 72
  %127 = load i32, ptr %126, align 8, !tbaa !700
  %128 = add i32 %127, 1
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i32, ptr %122, i64 %129
  %131 = load i32, ptr %130, align 4, !tbaa !59
  %132 = icmp eq i32 %131, %2
  br i1 %132, label %133, label %120

133:                                              ; preds = %120, %89
  %134 = phi ptr [ %117, %89 ], [ %130, %120 ]
  %135 = getelementptr inbounds i32, ptr %134, i64 1
  %136 = getelementptr inbounds i32, ptr %135, i64 %90
  %137 = load i32, ptr %136, align 4, !tbaa !59
  %138 = getelementptr inbounds i32, ptr %91, i64 1
  store i32 %137, ptr %91, align 4, !tbaa !59
  %139 = add nuw nsw i64 %90, 1
  %140 = icmp eq i64 %139, %35
  br i1 %140, label %141, label %89

141:                                              ; preds = %133, %184
  %142 = phi i64 [ %190, %184 ], [ 0, %133 ]
  %143 = phi ptr [ %189, %184 ], [ %138, %133 ]
  %144 = load i32, ptr %0, align 8, !tbaa !548
  %145 = sext i32 %144 to i64
  %146 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %28, i64 %145
  %147 = load i32, ptr %146, align 4, !tbaa !59, !noalias !769
  %148 = shl i32 %144, 2
  %149 = lshr i32 %148, 6
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i64, ptr %30, i64 %150
  %152 = and i32 %148, 60
  %153 = zext i32 %152 to i64
  %154 = load i64, ptr %151, align 8, !tbaa !56
  %155 = lshr i64 %154, %153
  %156 = and i64 %155, 1
  %157 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %156, i64 1
  %158 = load i32, ptr %157, align 4, !tbaa !59
  %159 = sext i32 %147 to i64
  %160 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %32, i64 %159
  %161 = zext i32 %158 to i64
  %162 = getelementptr inbounds [2 x i32], ptr %160, i64 0, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !59
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds i32, ptr %33, i64 %164
  %166 = load i32, ptr %165, align 4, !tbaa !59
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i32, ptr %34, i64 %167
  %169 = load i32, ptr %168, align 4, !tbaa !59
  %170 = icmp eq i32 %169, %2
  br i1 %170, label %184, label %171

171:                                              ; preds = %141, %171
  %172 = phi i32 [ %182, %171 ], [ %169, %141 ]
  %173 = phi ptr [ %181, %171 ], [ %168, %141 ]
  %174 = zext i32 %172 to i64
  %175 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %10, i64 %174
  %176 = load ptr, ptr %175, align 8, !tbaa !340
  %177 = getelementptr inbounds i8, ptr %176, i64 72
  %178 = load i32, ptr %177, align 8, !tbaa !700
  %179 = add i32 %178, 1
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i32, ptr %173, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !59
  %183 = icmp eq i32 %182, %2
  br i1 %183, label %184, label %171

184:                                              ; preds = %171, %141
  %185 = phi ptr [ %168, %141 ], [ %181, %171 ]
  %186 = getelementptr inbounds i32, ptr %185, i64 1
  %187 = getelementptr inbounds i32, ptr %186, i64 %142
  %188 = load i32, ptr %187, align 4, !tbaa !59
  %189 = getelementptr inbounds i32, ptr %143, i64 1
  store i32 %188, ptr %143, align 4, !tbaa !59
  %190 = add nuw nsw i64 %142, 1
  %191 = icmp eq i64 %190, %35
  br i1 %191, label %192, label %141

192:                                              ; preds = %184, %236
  %193 = phi i64 [ %242, %236 ], [ 0, %184 ]
  %194 = phi ptr [ %241, %236 ], [ %189, %184 ]
  %195 = load i32, ptr %0, align 8, !tbaa !548
  %196 = sext i32 %195 to i64
  %197 = getelementptr %"class.dealii::internal::Triangulation::TriaObject.346", ptr %88, i64 %196
  %198 = load i32, ptr %197, align 4, !tbaa !59, !noalias !769
  %199 = shl i32 %195, 2
  %200 = lshr i32 %199, 6
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i64, ptr %30, i64 %201
  %203 = and i32 %199, 60
  %204 = or i32 %203, 1
  %205 = zext i32 %204 to i64
  %206 = load i64, ptr %202, align 8, !tbaa !56
  %207 = lshr i64 %206, %205
  %208 = and i64 %207, 1
  %209 = getelementptr inbounds [2 x [2 x i32]], ptr @_ZZN6dealii8internal12TriaAccessor14Implementation12vertex_indexILi3ELi3EEEjRKNS_12TriaAccessorILi2EXT_EXT0_EEEjE12switch_table, i64 0, i64 %208, i64 1
  %210 = load i32, ptr %209, align 4, !tbaa !59
  %211 = sext i32 %198 to i64
  %212 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.364", ptr %32, i64 %211
  %213 = zext i32 %210 to i64
  %214 = getelementptr inbounds [2 x i32], ptr %212, i64 0, i64 %213
  %215 = load i32, ptr %214, align 4, !tbaa !59
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds i32, ptr %33, i64 %216
  %218 = load i32, ptr %217, align 4, !tbaa !59
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i32, ptr %34, i64 %219
  %221 = load i32, ptr %220, align 4, !tbaa !59
  %222 = icmp eq i32 %221, %2
  br i1 %222, label %236, label %223

223:                                              ; preds = %192, %223
  %224 = phi i32 [ %234, %223 ], [ %221, %192 ]
  %225 = phi ptr [ %233, %223 ], [ %220, %192 ]
  %226 = zext i32 %224 to i64
  %227 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %10, i64 %226
  %228 = load ptr, ptr %227, align 8, !tbaa !340
  %229 = getelementptr inbounds i8, ptr %228, i64 72
  %230 = load i32, ptr %229, align 8, !tbaa !700
  %231 = add i32 %230, 1
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds i32, ptr %225, i64 %232
  %234 = load i32, ptr %233, align 4, !tbaa !59
  %235 = icmp eq i32 %234, %2
  br i1 %235, label %236, label %223

236:                                              ; preds = %223, %192
  %237 = phi ptr [ %220, %192 ], [ %233, %223 ]
  %238 = getelementptr inbounds i32, ptr %237, i64 1
  %239 = getelementptr inbounds i32, ptr %238, i64 %193
  %240 = load i32, ptr %239, align 4, !tbaa !59
  %241 = getelementptr inbounds i32, ptr %194, i64 1
  store i32 %240, ptr %194, align 4, !tbaa !59
  %242 = add nuw nsw i64 %193, 1
  %243 = icmp eq i64 %242, %35
  br i1 %243, label %244, label %192

244:                                              ; preds = %236, %3
  %245 = phi ptr [ %19, %3 ], [ %241, %236 ]
  %246 = icmp eq i32 %16, 0
  %247 = getelementptr inbounds %"class.dealii::TriaAccessorBase.318", ptr %0, i64 0, i32 1
  br i1 %246, label %527, label %248

248:                                              ; preds = %244, %308
  %249 = phi i32 [ %315, %308 ], [ 0, %244 ]
  %250 = phi ptr [ %314, %308 ], [ %245, %244 ]
  %251 = load ptr, ptr %247, align 8, !tbaa !550
  %252 = getelementptr inbounds %"class.dealii::Triangulation", ptr %251, i64 0, i32 2
  %253 = load ptr, ptr %252, align 8, !tbaa !514
  %254 = load i32, ptr %0, align 8, !tbaa !548
  %255 = sext i32 %254 to i64
  %256 = load ptr, ptr %253, align 8, !tbaa !707, !noalias !772
  %257 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %256, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !59, !noalias !772
  %259 = load ptr, ptr %4, align 8, !tbaa !617
  %260 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %259, i64 0, i32 3
  %261 = load ptr, ptr %260, align 8, !tbaa !336
  %262 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %261, i64 0, i32 1
  %263 = load ptr, ptr %262, align 8, !tbaa !338
  %264 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %263, i64 %9
  %265 = load ptr, ptr %264, align 8, !tbaa !340
  %266 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %253, i64 0, i32 1
  %267 = shl i32 %254, 2
  %268 = load ptr, ptr %266, align 8, !tbaa !54
  %269 = lshr i32 %267, 6
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i64, ptr %268, i64 %270
  %272 = and i32 %267, 60
  %273 = zext i32 %272 to i64
  %274 = shl nuw nsw i64 1, %273
  %275 = load i64, ptr %271, align 8, !tbaa !56
  %276 = and i64 %275, %274
  %277 = icmp ne i64 %276, 0
  %278 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %265, i32 noundef %249, i1 noundef zeroext %277)
  %279 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %259, i64 0, i32 5
  %280 = load ptr, ptr %279, align 8, !tbaa !724
  %281 = zext i32 %258 to i64
  %282 = load ptr, ptr %280, align 8, !tbaa !144
  %283 = getelementptr inbounds i32, ptr %282, i64 %281
  %284 = load i32, ptr %283, align 4, !tbaa !59
  %285 = getelementptr inbounds %"class.dealii::internal::hp::DoFObjects", ptr %280, i64 0, i32 1
  %286 = zext i32 %284 to i64
  %287 = load ptr, ptr %285, align 8, !tbaa !144
  %288 = getelementptr inbounds i32, ptr %287, i64 %286
  %289 = load i32, ptr %288, align 4, !tbaa !59
  %290 = icmp eq i32 %289, %2
  br i1 %290, label %308, label %291

291:                                              ; preds = %248
  %292 = load ptr, ptr %260, align 8, !tbaa !336
  %293 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %292, i64 0, i32 1
  %294 = load ptr, ptr %293, align 8, !tbaa !338
  br label %295

295:                                              ; preds = %295, %291
  %296 = phi i32 [ %289, %291 ], [ %306, %295 ]
  %297 = phi ptr [ %288, %291 ], [ %305, %295 ]
  %298 = zext i32 %296 to i64
  %299 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %294, i64 %298
  %300 = load ptr, ptr %299, align 8, !tbaa !340
  %301 = getelementptr inbounds i8, ptr %300, i64 76
  %302 = load i32, ptr %301, align 4, !tbaa !701
  %303 = add i32 %302, 1
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds i32, ptr %297, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !59
  %307 = icmp eq i32 %306, %2
  br i1 %307, label %308, label %295

308:                                              ; preds = %295, %248
  %309 = phi ptr [ %288, %248 ], [ %305, %295 ]
  %310 = getelementptr inbounds i32, ptr %309, i64 1
  %311 = zext i32 %278 to i64
  %312 = getelementptr inbounds i32, ptr %310, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !59
  %314 = getelementptr inbounds i32, ptr %250, i64 1
  store i32 %313, ptr %250, align 4, !tbaa !59
  %315 = add nuw i32 %249, 1
  %316 = icmp eq i32 %315, %16
  br i1 %316, label %317, label %248

317:                                              ; preds = %308, %378
  %318 = phi i32 [ %385, %378 ], [ 0, %308 ]
  %319 = phi ptr [ %384, %378 ], [ %314, %308 ]
  %320 = load ptr, ptr %247, align 8, !tbaa !550
  %321 = getelementptr inbounds %"class.dealii::Triangulation", ptr %320, i64 0, i32 2
  %322 = load ptr, ptr %321, align 8, !tbaa !514
  %323 = load i32, ptr %0, align 8, !tbaa !548
  %324 = sext i32 %323 to i64
  %325 = load ptr, ptr %322, align 8, !tbaa !707, !noalias !772
  %326 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %325, i64 %324, i32 0, i64 1
  %327 = load i32, ptr %326, align 4, !tbaa !59, !noalias !772
  %328 = load ptr, ptr %4, align 8, !tbaa !617
  %329 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %328, i64 0, i32 3
  %330 = load ptr, ptr %329, align 8, !tbaa !336
  %331 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %330, i64 0, i32 1
  %332 = load ptr, ptr %331, align 8, !tbaa !338
  %333 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %332, i64 %9
  %334 = load ptr, ptr %333, align 8, !tbaa !340
  %335 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %322, i64 0, i32 1
  %336 = shl i32 %323, 2
  %337 = load ptr, ptr %335, align 8, !tbaa !54
  %338 = lshr i32 %336, 6
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds i64, ptr %337, i64 %339
  %341 = and i32 %336, 60
  %342 = or i32 %341, 1
  %343 = zext i32 %342 to i64
  %344 = shl nuw i64 1, %343
  %345 = load i64, ptr %340, align 8, !tbaa !56
  %346 = and i64 %345, %344
  %347 = icmp ne i64 %346, 0
  %348 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %334, i32 noundef %318, i1 noundef zeroext %347)
  %349 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %328, i64 0, i32 5
  %350 = load ptr, ptr %349, align 8, !tbaa !724
  %351 = zext i32 %327 to i64
  %352 = load ptr, ptr %350, align 8, !tbaa !144
  %353 = getelementptr inbounds i32, ptr %352, i64 %351
  %354 = load i32, ptr %353, align 4, !tbaa !59
  %355 = getelementptr inbounds %"class.dealii::internal::hp::DoFObjects", ptr %350, i64 0, i32 1
  %356 = zext i32 %354 to i64
  %357 = load ptr, ptr %355, align 8, !tbaa !144
  %358 = getelementptr inbounds i32, ptr %357, i64 %356
  %359 = load i32, ptr %358, align 4, !tbaa !59
  %360 = icmp eq i32 %359, %2
  br i1 %360, label %378, label %361

361:                                              ; preds = %317
  %362 = load ptr, ptr %329, align 8, !tbaa !336
  %363 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %362, i64 0, i32 1
  %364 = load ptr, ptr %363, align 8, !tbaa !338
  br label %365

365:                                              ; preds = %365, %361
  %366 = phi i32 [ %359, %361 ], [ %376, %365 ]
  %367 = phi ptr [ %358, %361 ], [ %375, %365 ]
  %368 = zext i32 %366 to i64
  %369 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %364, i64 %368
  %370 = load ptr, ptr %369, align 8, !tbaa !340
  %371 = getelementptr inbounds i8, ptr %370, i64 76
  %372 = load i32, ptr %371, align 4, !tbaa !701
  %373 = add i32 %372, 1
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds i32, ptr %367, i64 %374
  %376 = load i32, ptr %375, align 4, !tbaa !59
  %377 = icmp eq i32 %376, %2
  br i1 %377, label %378, label %365

378:                                              ; preds = %365, %317
  %379 = phi ptr [ %358, %317 ], [ %375, %365 ]
  %380 = getelementptr inbounds i32, ptr %379, i64 1
  %381 = zext i32 %348 to i64
  %382 = getelementptr inbounds i32, ptr %380, i64 %381
  %383 = load i32, ptr %382, align 4, !tbaa !59
  %384 = getelementptr inbounds i32, ptr %319, i64 1
  store i32 %383, ptr %319, align 4, !tbaa !59
  %385 = add nuw i32 %318, 1
  %386 = icmp eq i32 %385, %16
  br i1 %386, label %387, label %317

387:                                              ; preds = %378, %448
  %388 = phi i32 [ %455, %448 ], [ 0, %378 ]
  %389 = phi ptr [ %454, %448 ], [ %384, %378 ]
  %390 = load ptr, ptr %247, align 8, !tbaa !550
  %391 = getelementptr inbounds %"class.dealii::Triangulation", ptr %390, i64 0, i32 2
  %392 = load ptr, ptr %391, align 8, !tbaa !514
  %393 = load i32, ptr %0, align 8, !tbaa !548
  %394 = sext i32 %393 to i64
  %395 = load ptr, ptr %392, align 8, !tbaa !707, !noalias !772
  %396 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %395, i64 %394, i32 0, i64 2
  %397 = load i32, ptr %396, align 4, !tbaa !59, !noalias !772
  %398 = load ptr, ptr %4, align 8, !tbaa !617
  %399 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %398, i64 0, i32 3
  %400 = load ptr, ptr %399, align 8, !tbaa !336
  %401 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %400, i64 0, i32 1
  %402 = load ptr, ptr %401, align 8, !tbaa !338
  %403 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %402, i64 %9
  %404 = load ptr, ptr %403, align 8, !tbaa !340
  %405 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %392, i64 0, i32 1
  %406 = shl i32 %393, 2
  %407 = load ptr, ptr %405, align 8, !tbaa !54
  %408 = lshr i32 %406, 6
  %409 = zext i32 %408 to i64
  %410 = getelementptr inbounds i64, ptr %407, i64 %409
  %411 = and i32 %406, 60
  %412 = or i32 %411, 2
  %413 = zext i32 %412 to i64
  %414 = shl nuw i64 1, %413
  %415 = load i64, ptr %410, align 8, !tbaa !56
  %416 = and i64 %415, %414
  %417 = icmp ne i64 %416, 0
  %418 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %404, i32 noundef %388, i1 noundef zeroext %417)
  %419 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %398, i64 0, i32 5
  %420 = load ptr, ptr %419, align 8, !tbaa !724
  %421 = zext i32 %397 to i64
  %422 = load ptr, ptr %420, align 8, !tbaa !144
  %423 = getelementptr inbounds i32, ptr %422, i64 %421
  %424 = load i32, ptr %423, align 4, !tbaa !59
  %425 = getelementptr inbounds %"class.dealii::internal::hp::DoFObjects", ptr %420, i64 0, i32 1
  %426 = zext i32 %424 to i64
  %427 = load ptr, ptr %425, align 8, !tbaa !144
  %428 = getelementptr inbounds i32, ptr %427, i64 %426
  %429 = load i32, ptr %428, align 4, !tbaa !59
  %430 = icmp eq i32 %429, %2
  br i1 %430, label %448, label %431

431:                                              ; preds = %387
  %432 = load ptr, ptr %399, align 8, !tbaa !336
  %433 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %432, i64 0, i32 1
  %434 = load ptr, ptr %433, align 8, !tbaa !338
  br label %435

435:                                              ; preds = %435, %431
  %436 = phi i32 [ %429, %431 ], [ %446, %435 ]
  %437 = phi ptr [ %428, %431 ], [ %445, %435 ]
  %438 = zext i32 %436 to i64
  %439 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %434, i64 %438
  %440 = load ptr, ptr %439, align 8, !tbaa !340
  %441 = getelementptr inbounds i8, ptr %440, i64 76
  %442 = load i32, ptr %441, align 4, !tbaa !701
  %443 = add i32 %442, 1
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds i32, ptr %437, i64 %444
  %446 = load i32, ptr %445, align 4, !tbaa !59
  %447 = icmp eq i32 %446, %2
  br i1 %447, label %448, label %435

448:                                              ; preds = %435, %387
  %449 = phi ptr [ %428, %387 ], [ %445, %435 ]
  %450 = getelementptr inbounds i32, ptr %449, i64 1
  %451 = zext i32 %418 to i64
  %452 = getelementptr inbounds i32, ptr %450, i64 %451
  %453 = load i32, ptr %452, align 4, !tbaa !59
  %454 = getelementptr inbounds i32, ptr %389, i64 1
  store i32 %453, ptr %389, align 4, !tbaa !59
  %455 = add nuw i32 %388, 1
  %456 = icmp eq i32 %455, %16
  br i1 %456, label %457, label %387

457:                                              ; preds = %448, %518
  %458 = phi i32 [ %525, %518 ], [ 0, %448 ]
  %459 = phi ptr [ %524, %518 ], [ %454, %448 ]
  %460 = load ptr, ptr %247, align 8, !tbaa !550
  %461 = getelementptr inbounds %"class.dealii::Triangulation", ptr %460, i64 0, i32 2
  %462 = load ptr, ptr %461, align 8, !tbaa !514
  %463 = load i32, ptr %0, align 8, !tbaa !548
  %464 = sext i32 %463 to i64
  %465 = load ptr, ptr %462, align 8, !tbaa !707, !noalias !772
  %466 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObject.346", ptr %465, i64 %464, i32 0, i64 3
  %467 = load i32, ptr %466, align 4, !tbaa !59, !noalias !772
  %468 = load ptr, ptr %4, align 8, !tbaa !617
  %469 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %468, i64 0, i32 3
  %470 = load ptr, ptr %469, align 8, !tbaa !336
  %471 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %470, i64 0, i32 1
  %472 = load ptr, ptr %471, align 8, !tbaa !338
  %473 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %472, i64 %9
  %474 = load ptr, ptr %473, align 8, !tbaa !340
  %475 = getelementptr inbounds %"class.dealii::internal::Triangulation::TriaObjectsQuad3D", ptr %462, i64 0, i32 1
  %476 = shl i32 %463, 2
  %477 = load ptr, ptr %475, align 8, !tbaa !54
  %478 = lshr i32 %476, 6
  %479 = zext i32 %478 to i64
  %480 = getelementptr inbounds i64, ptr %477, i64 %479
  %481 = and i32 %476, 60
  %482 = or i32 %481, 3
  %483 = zext i32 %482 to i64
  %484 = shl nuw i64 1, %483
  %485 = load i64, ptr %480, align 8, !tbaa !56
  %486 = and i64 %485, %484
  %487 = icmp ne i64 %486, 0
  %488 = tail call noundef i32 @_ZNK6dealii13FiniteElementILi3ELi3EE42adjust_line_dof_index_for_line_orientationEjb(ptr noundef nonnull align 8 dereferenceable(728) %474, i32 noundef %458, i1 noundef zeroext %487)
  %489 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %468, i64 0, i32 5
  %490 = load ptr, ptr %489, align 8, !tbaa !724
  %491 = zext i32 %467 to i64
  %492 = load ptr, ptr %490, align 8, !tbaa !144
  %493 = getelementptr inbounds i32, ptr %492, i64 %491
  %494 = load i32, ptr %493, align 4, !tbaa !59
  %495 = getelementptr inbounds %"class.dealii::internal::hp::DoFObjects", ptr %490, i64 0, i32 1
  %496 = zext i32 %494 to i64
  %497 = load ptr, ptr %495, align 8, !tbaa !144
  %498 = getelementptr inbounds i32, ptr %497, i64 %496
  %499 = load i32, ptr %498, align 4, !tbaa !59
  %500 = icmp eq i32 %499, %2
  br i1 %500, label %518, label %501

501:                                              ; preds = %457
  %502 = load ptr, ptr %469, align 8, !tbaa !336
  %503 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %502, i64 0, i32 1
  %504 = load ptr, ptr %503, align 8, !tbaa !338
  br label %505

505:                                              ; preds = %505, %501
  %506 = phi i32 [ %499, %501 ], [ %516, %505 ]
  %507 = phi ptr [ %498, %501 ], [ %515, %505 ]
  %508 = zext i32 %506 to i64
  %509 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %504, i64 %508
  %510 = load ptr, ptr %509, align 8, !tbaa !340
  %511 = getelementptr inbounds i8, ptr %510, i64 76
  %512 = load i32, ptr %511, align 4, !tbaa !701
  %513 = add i32 %512, 1
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds i32, ptr %507, i64 %514
  %516 = load i32, ptr %515, align 4, !tbaa !59
  %517 = icmp eq i32 %516, %2
  br i1 %517, label %518, label %505

518:                                              ; preds = %505, %457
  %519 = phi ptr [ %498, %457 ], [ %515, %505 ]
  %520 = getelementptr inbounds i32, ptr %519, i64 1
  %521 = zext i32 %488 to i64
  %522 = getelementptr inbounds i32, ptr %520, i64 %521
  %523 = load i32, ptr %522, align 4, !tbaa !59
  %524 = getelementptr inbounds i32, ptr %459, i64 1
  store i32 %523, ptr %459, align 4, !tbaa !59
  %525 = add nuw i32 %458, 1
  %526 = icmp eq i32 %525, %16
  br i1 %526, label %527, label %457

527:                                              ; preds = %518, %244
  %528 = phi ptr [ %245, %244 ], [ %524, %518 ]
  %529 = icmp eq i32 %18, 0
  br i1 %529, label %540, label %530

530:                                              ; preds = %527
  %531 = load ptr, ptr %4, align 8, !tbaa !617
  %532 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %531, i64 0, i32 5
  %533 = load ptr, ptr %532, align 8, !tbaa !724
  %534 = getelementptr inbounds %"class.dealii::internal::hp::DoFFaces", ptr %533, i64 0, i32 1
  %535 = load ptr, ptr %534, align 8, !tbaa !144
  %536 = getelementptr inbounds %"class.dealii::internal::hp::DoFFaces", ptr %533, i64 0, i32 1, i32 1
  %537 = load ptr, ptr %536, align 8, !tbaa !144
  %538 = getelementptr inbounds %"class.dealii::hp::DoFHandler", ptr %531, i64 0, i32 3
  %539 = zext i32 %18 to i64
  br label %541

540:                                              ; preds = %569, %527
  ret void

541:                                              ; preds = %530, %569
  %542 = phi i64 [ 0, %530 ], [ %575, %569 ]
  %543 = phi ptr [ %528, %530 ], [ %574, %569 ]
  %544 = load i32, ptr %0, align 8, !tbaa !548
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds i32, ptr %535, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !59
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds i32, ptr %537, i64 %548
  %550 = load i32, ptr %549, align 4, !tbaa !59
  %551 = icmp eq i32 %550, %2
  br i1 %551, label %569, label %552

552:                                              ; preds = %541
  %553 = load ptr, ptr %538, align 8, !tbaa !336
  %554 = getelementptr inbounds %"class.dealii::hp::FECollection", ptr %553, i64 0, i32 1
  %555 = load ptr, ptr %554, align 8, !tbaa !338
  br label %556

556:                                              ; preds = %556, %552
  %557 = phi i32 [ %550, %552 ], [ %567, %556 ]
  %558 = phi ptr [ %549, %552 ], [ %566, %556 ]
  %559 = zext i32 %557 to i64
  %560 = getelementptr inbounds %"class.boost::shared_ptr.322", ptr %555, i64 %559
  %561 = load ptr, ptr %560, align 8, !tbaa !340
  %562 = getelementptr inbounds i8, ptr %561, i64 80
  %563 = load i32, ptr %562, align 4, !tbaa !702
  %564 = add i32 %563, 1
  %565 = zext i32 %564 to i64
  %566 = getelementptr inbounds i32, ptr %558, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !59
  %568 = icmp eq i32 %567, %2
  br i1 %568, label %569, label %556

569:                                              ; preds = %556, %541
  %570 = phi ptr [ %549, %541 ], [ %566, %556 ]
  %571 = getelementptr inbounds i32, ptr %570, i64 1
  %572 = getelementptr inbounds i32, ptr %571, i64 %542
  %573 = load i32, ptr %572, align 4, !tbaa !59
  %574 = getelementptr inbounds i32, ptr %543, i64 1
  store i32 %573, ptr %543, align 4, !tbaa !59
  %575 = add nuw nsw i64 %542, 1
  %576 = icmp eq i64 %575, %539
  br i1 %576, label %540, label %541
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii2hp11QCollectionILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii2hp11QCollectionILi2EEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::hp::QCollection.153", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !775
  %4 = getelementptr inbounds %"class.dealii::hp::QCollection.153", ptr %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !777
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %35, label %7

7:                                                ; preds = %1, %30
  %8 = phi ptr [ %31, %30 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.boost::shared_ptr.448", ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !39
  %11 = icmp eq ptr %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %10, i64 0, i32 1
  %14 = load i64, ptr %13, align 8, !tbaa !34
  %15 = add nsw i64 %14, -1
  store i64 %15, ptr %13, align 8, !tbaa !34
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %12
  %18 = load ptr, ptr %10, align 8, !tbaa !41
  %19 = getelementptr inbounds ptr, ptr %18, i64 2
  %20 = load ptr, ptr %19, align 8
  invoke void %20(ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %21 unwind label %39

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %10, i64 0, i32 2
  %23 = load i64, ptr %22, align 8, !tbaa !43
  %24 = add nsw i64 %23, -1
  store i64 %24, ptr %22, align 8, !tbaa !43
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = load ptr, ptr %10, align 8, !tbaa !41
  %28 = getelementptr inbounds ptr, ptr %27, i64 3
  %29 = load ptr, ptr %28, align 8
  invoke void %29(ptr noundef nonnull align 8 dereferenceable(24) %10)
          to label %30 unwind label %39

30:                                               ; preds = %26, %21, %12, %7
  %31 = getelementptr inbounds %"class.boost::shared_ptr.448", ptr %8, i64 1
  %32 = icmp eq ptr %31, %5
  br i1 %32, label %33, label %7

33:                                               ; preds = %30
  %34 = load ptr, ptr %2, align 8, !tbaa !775
  br label %35

35:                                               ; preds = %33, %1
  %36 = phi ptr [ %34, %33 ], [ %3, %1 ]
  %37 = icmp eq ptr %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  tail call void @_ZdlPv(ptr noundef nonnull %36) #21
  br label %44

39:                                               ; preds = %26, %17
  %40 = landingpad { ptr, i32 }
          cleanup
  %41 = load ptr, ptr %2, align 8, !tbaa !775
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  tail call void @_ZdlPv(ptr noundef nonnull %41) #21
  br label %45

44:                                               ; preds = %38, %35
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void

45:                                               ; preds = %39, %43
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %46 unwind label %47

46:                                               ; preds = %45
  resume { ptr, i32 } %40

47:                                               ; preds = %45
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  tail call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost10shared_ptrIN6dealii12FEFaceValuesILi3ELi3EEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.boost::shared_ptr.447", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !39
  %4 = icmp eq ptr %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 1
  %7 = load i64, ptr %6, align 8, !tbaa !34
  %8 = add nsw i64 %7, -1
  store i64 %8, ptr %6, align 8, !tbaa !34
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = load ptr, ptr %3, align 8, !tbaa !41
  %12 = getelementptr inbounds ptr, ptr %11, i64 2
  %13 = load ptr, ptr %12, align 8
  tail call void %13(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %14 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %3, i64 0, i32 2
  %15 = load i64, ptr %14, align 8, !tbaa !43
  %16 = add nsw i64 %15, -1
  store i64 %16, ptr %14, align 8, !tbaa !43
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = load ptr, ptr %3, align 8, !tbaa !41
  %20 = getelementptr inbounds ptr, ptr %19, i64 3
  %21 = load ptr, ptr %20, align 8
  tail call void %21(ptr noundef nonnull align 8 dereferenceable(24) %3)
  br label %22

22:                                               ; preds = %1, %5, %10, %18
  ret void
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  store ptr getelementptr inbounds ({ [4 x ptr] }, ptr @_ZTVN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE, i64 0, inrange i32 0, i64 2), ptr %0, align 8, !tbaa !41
  %2 = getelementptr inbounds %"class.dealii::TableBase.446", ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !577
  %4 = icmp eq ptr %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, ptr %3, i64 -8
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.boost::shared_ptr.447", ptr %3, i64 %7
  br label %11

11:                                               ; preds = %9, %35
  %12 = phi ptr [ %13, %35 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.boost::shared_ptr.447", ptr %12, i64 -1
  %14 = getelementptr %"class.boost::shared_ptr.447", ptr %12, i64 -1, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !39
  %16 = icmp eq ptr %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %15, i64 0, i32 1
  %19 = load i64, ptr %18, align 8, !tbaa !34
  %20 = add nsw i64 %19, -1
  store i64 %20, ptr %18, align 8, !tbaa !34
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = load ptr, ptr %15, align 8, !tbaa !41
  %24 = getelementptr inbounds ptr, ptr %23, i64 2
  %25 = load ptr, ptr %24, align 8
  invoke void %25(ptr noundef nonnull align 8 dereferenceable(24) %15)
          to label %26 unwind label %38

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.boost::detail::sp_counted_base", ptr %15, i64 0, i32 2
  %28 = load i64, ptr %27, align 8, !tbaa !43
  %29 = add nsw i64 %28, -1
  store i64 %29, ptr %27, align 8, !tbaa !43
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = load ptr, ptr %15, align 8, !tbaa !41
  %33 = getelementptr inbounds ptr, ptr %32, i64 3
  %34 = load ptr, ptr %33, align 8
  invoke void %34(ptr noundef nonnull align 8 dereferenceable(24) %15)
          to label %35 unwind label %38

35:                                               ; preds = %26, %17, %11, %31
  %36 = icmp eq ptr %13, %3
  br i1 %36, label %37, label %11

37:                                               ; preds = %35, %5
  tail call void @_ZdaPv(ptr noundef nonnull %6) #21
  br label %47

38:                                               ; preds = %31, %22
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = icmp eq ptr %3, %13
  br i1 %40, label %46, label %41

41:                                               ; preds = %38, %44
  %42 = phi ptr [ %43, %44 ], [ %13, %38 ]
  %43 = getelementptr inbounds %"class.boost::shared_ptr.447", ptr %42, i64 -1
  invoke void @_ZN5boost10shared_ptrIN6dealii12FEFaceValuesILi3ELi3EEEED2Ev(ptr noundef nonnull align 8 dereferenceable(16) %43)
          to label %44 unwind label %49

44:                                               ; preds = %41
  %45 = icmp eq ptr %43, %3
  br i1 %45, label %46, label %41

46:                                               ; preds = %44, %38
  tail call void @_ZdaPv(ptr noundef nonnull %6) #21
  invoke void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
          to label %48 unwind label %51

47:                                               ; preds = %37, %1
  tail call void @_ZN6dealii11SubscriptorD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %0)
  ret void

48:                                               ; preds = %46
  resume { ptr, i32 } %39

49:                                               ; preds = %41
  %50 = landingpad { ptr, i32 }
          catch ptr null
  br label %53

51:                                               ; preds = %46
  %52 = landingpad { ptr, i32 }
          catch ptr null
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi { ptr, i32 } [ %50, %49 ], [ %52, %51 ]
  %55 = extractvalue { ptr, i32 } %54, 0
  tail call void @__clang_call_terminate(ptr %55) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED0Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  invoke void @_ZN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0)
          to label %2 unwind label %3

2:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %4
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN6dealii2hp11QCollectionILi2EED0Ev(ptr noundef nonnull align 8 dereferenceable(96) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  invoke void @_ZN6dealii2hp11QCollectionILi2EED2Ev(ptr noundef nonnull align 8 dereferenceable(96) %0)
          to label %2 unwind label %3

2:                                                ; preds = %1
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  ret void

3:                                                ; preds = %1
  %4 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %0) #21
  resume { ptr, i32 } %4
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerIPFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEE6manageERKNS1_15function_bufferERS1K_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  switch i32 %2, label %23 [
    i32 4, label %4
    i32 0, label %7
    i32 1, label %9
    i32 2, label %11
    i32 3, label %12
  ]

4:                                                ; preds = %3
  store ptr @_ZTIPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %5 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %5, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %6, align 1, !tbaa !30
  br label %26

7:                                                ; preds = %3
  %8 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %8, ptr %1, align 8, !tbaa !30
  br label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %10, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %26

11:                                               ; preds = %3
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %26

12:                                               ; preds = %3
  %13 = load ptr, ptr %1, align 8, !tbaa !30
  %14 = getelementptr inbounds %"class.std::type_info", ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !642
  %16 = load i8, ptr %15, align 1, !tbaa !30
  %17 = icmp eq i8 %16, 42
  %18 = zext i1 %17 to i64
  %19 = getelementptr inbounds i8, ptr %15, i64 %18
  %20 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(358) @_ZTSPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE) #24
  %21 = icmp eq i32 %20, 0
  %22 = select i1 %21, ptr %0, ptr null
  store ptr %22, ptr %1, align 8, !tbaa !30
  br label %26

23:                                               ; preds = %3
  store ptr @_ZTIPFvN5boost6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_11QCollectionILi2EEENS0_9null_typeESG_SG_SG_SG_SG_SG_EERNS2_12SparseMatrixIdEERKSt3mapIhPKNS2_8FunctionILi3EEESt4lessIhESaISt4pairIKhSP_EEERNS2_6VectorIdEERSt6vectorIjSaIjEESP_RKS14_NS2_13MatrixCreator13IteratorRangeIS9_EERNS2_7Threads16DummyThreadMutexEE, ptr %1, align 8, !tbaa !30
  %24 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %24, align 8, !tbaa !30
  %25 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %25, align 1, !tbaa !30
  br label %26

26:                                               ; preds = %23, %12, %11, %9, %7, %4
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function22void_function_invoker9IPFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEvSK_SN_S11_S14_S18_SS_S1A_S1D_S1G_E6invokeERNS1_15function_bufferESK_SN_S11_S14_S18_SS_S1A_S1D_S1G_(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef byval(%"class.boost::tuples::tuple.146") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) #0 comdat align 2 {
  %11 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %12 = load ptr, ptr %0, align 8, !tbaa !30
  %13 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %8, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %11, i64 0, i32 1
  store ptr %14, ptr %15, align 8, !tbaa !325
  %16 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %11, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !325
  call void %12(ptr noundef nonnull byval(%"class.boost::tuples::tuple.146") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull %11, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost8functionIFvvEEC2INS_3_bi6bind_tINS4_11unspecifiedENS0_IFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS4_5list9INS4_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS21_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.449", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS21_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4, i32 noundef 0)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !563
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !563
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvEC2INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEET_NS_11enable_if_cIXsr5boost11type_traits7ice_notIXsr11is_integralIS21_EE5valueEEE5valueEiE4typeE(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.449", align 8
  store ptr null, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  invoke void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull %4)
          to label %27 unwind label %36

27:                                               ; preds = %11
  %28 = load ptr, ptr %4, align 8, !tbaa !25
  %29 = icmp eq ptr %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !563
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %31(ptr noundef nonnull align 8 dereferenceable(24) %34, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 2)
  br label %35

35:                                               ; preds = %30, %33, %27
  ret void

36:                                               ; preds = %11
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = load ptr, ptr %4, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr %38, align 8, !tbaa !563
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %46

45:                                               ; preds = %40, %43, %36
  resume { ptr, i32 } %37

46:                                               ; preds = %43
  %47 = landingpad { ptr, i32 }
          catch ptr null
  %48 = extractvalue { ptr, i32 } %47, 0
  call void @__clang_call_terminate(ptr %48) #22
  unreachable
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef %1) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = alloca %"class.boost::_bi::bind_t.449", align 8
  store ptr null, ptr %3, align 8, !tbaa !25
  %4 = load ptr, ptr %1, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  store ptr %4, ptr %3, align 8, !tbaa !25
  %7 = load ptr, ptr %4, align 8, !tbaa !227
  %8 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef nonnull align 8 dereferenceable(24) %9, i32 noundef 0)
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %11, ptr noundef nonnull align 8 dereferenceable(72) %12, i64 72, i1 false)
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %16, ptr %17, align 8, !tbaa !325
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %18, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %21, ptr %22, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !tbaa !33
  store i64 %25, ptr %23, align 8, !tbaa !33
  %26 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSC_10DoFHandlerILi3ELi3EEERKNSC_11QCollectionILi2EEENS9_9null_typeESP_SP_SP_SP_SP_SP_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSY_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESY_RKS1D_NSB_13MatrixCreator13IteratorRangeISI_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISQ_EENS_17reference_wrapperISS_EENS1S_IS16_EENS1S_IS19_EENS1S_IS1D_EENS1Q_ISY_EENS1S_IS1F_EENS1Q_IS1J_EENS1S_IS1L_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_E13stored_vtable, ptr noundef nonnull %3, ptr noundef nonnull align 8 dereferenceable(24) %26)
          to label %28 unwind label %38

28:                                               ; preds = %10
  %29 = load ptr, ptr %3, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !563
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  %37 = select i1 %27, ptr @_ZZN5boost9function0IvE9assign_toINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEEEvT_E13stored_vtable, ptr null
  store ptr %37, ptr %0, align 8, !tbaa !25
  ret void

38:                                               ; preds = %10
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load ptr, ptr %3, align 8, !tbaa !25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load ptr, ptr %40, align 8, !tbaa !563
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.boost::function_base", ptr %3, i64 0, i32 1
  invoke void %43(ptr noundef nonnull align 8 dereferenceable(24) %46, ptr noundef nonnull align 8 dereferenceable(24) %46, i32 noundef 2)
          to label %47 unwind label %48

47:                                               ; preds = %42, %45, %38
  resume { ptr, i32 } %39

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          catch ptr null
  %50 = extractvalue { ptr, i32 } %49, 0
  call void @__clang_call_terminate(ptr %50) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEE6manageERKNS1_15function_bufferERS22_NS1_30functor_manager_operation_typeE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) #3 comdat align 2 {
  %4 = icmp eq i32 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE, ptr %1, align 8, !tbaa !30
  %6 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %7, align 1, !tbaa !30
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEE7managerERKNS1_15function_bufferERS22_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2)
  br label %9

9:                                                ; preds = %8, %5
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function26void_function_obj_invoker0INS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEvE6invokeERNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(24) %0) #0 comdat align 2 {
  %2 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %3 = load ptr, ptr %0, align 8, !tbaa !30
  %4 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %2)
  %5 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !654
  %7 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !762
  %9 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !677
  %11 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !764
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !33
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !766
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %2, ptr noundef nonnull align 8 dereferenceable(16) %17, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %2, i64 0, i32 1
  store ptr %19, ptr %20, align 8, !tbaa !325
  %21 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) %22, i64 16, i1 false)
  %25 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %24, ptr %25, align 8, !tbaa !325
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %3, i64 0, i32 1, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !656
  call void @_ZNK5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEclESI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_(ptr noundef nonnull align 8 dereferenceable(32) %3, ptr noundef nonnull byval(%"class.boost::tuples::tuple.146") align 8 %4, ptr noundef nonnull align 8 dereferenceable(36) %6, ptr noundef nonnull align 8 dereferenceable(48) %8, ptr noundef nonnull align 8 dereferenceable(88) %10, ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef %14, ptr noundef nonnull align 8 dereferenceable(24) %16, ptr noundef nonnull %2, ptr noundef nonnull align 1 dereferenceable(1) %27)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %2)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSC_10DoFHandlerILi3ELi3EEERKNSC_11QCollectionILi2EEENS9_9null_typeESP_SP_SP_SP_SP_SP_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSY_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESY_RKS1D_NSB_13MatrixCreator13IteratorRangeISI_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISQ_EENS_17reference_wrapperISS_EENS1S_IS16_EENS1S_IS19_EENS1S_IS1D_EENS1Q_ISY_EENS1S_IS1F_EENS1Q_IS1J_EENS1S_IS1L_EEEEEEEEbT_RNS1_15function_bufferE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.449", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSC_10DoFHandlerILi3ELi3EEERKNSC_11QCollectionILi2EEENS9_9null_typeESP_SP_SP_SP_SP_SP_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSY_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESY_RKS1D_NSB_13MatrixCreator13IteratorRangeISI_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISQ_EENS_17reference_wrapperISS_EENS1S_IS16_EENS1S_IS19_EENS1S_IS1D_EENS1Q_ISY_EENS1S_IS1F_EENS1Q_IS1J_EENS1S_IS1L_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull %4, ptr noundef nonnull align 8 dereferenceable(24) %2)
          to label %28 unwind label %37

28:                                               ; preds = %11
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = load ptr, ptr %29, align 8, !tbaa !563
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %32(ptr noundef nonnull align 8 dereferenceable(24) %35, ptr noundef nonnull align 8 dereferenceable(24) %35, i32 noundef 2)
  br label %36

36:                                               ; preds = %31, %34, %28
  ret i1 %27

37:                                               ; preds = %11
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = load ptr, ptr %39, align 8, !tbaa !563
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(24) %45, ptr noundef nonnull align 8 dereferenceable(24) %45, i32 noundef 2)
          to label %46 unwind label %47

46:                                               ; preds = %41, %44, %37
  resume { ptr, i32 } %38

47:                                               ; preds = %44
  %48 = landingpad { ptr, i32 }
          catch ptr null
  %49 = extractvalue { ptr, i32 } %48, 0
  call void @__clang_call_terminate(ptr %49) #22
  unreachable
}

; Function Attrs: inlinehint sspstrong uwtable
define linkonce_odr dso_local void @_ZN5boost6detail8function15functor_managerINS_3_bi6bind_tINS3_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSA_10DoFHandlerILi3ELi3EEERKNSA_11QCollectionILi2EEENS7_9null_typeESN_SN_SN_SN_SN_SN_EERNS9_12SparseMatrixIdEERKSt3mapIhPKNS9_8FunctionILi3EEESt4lessIhESaISt4pairIKhSW_EEERNS9_6VectorIdEERSt6vectorIjSaIjEESW_RKS1B_NS9_13MatrixCreator13IteratorRangeISG_EERNS9_7Threads16DummyThreadMutexEEEENS3_5list9INS3_5valueISO_EENS_17reference_wrapperISQ_EENS1Q_IS14_EENS1Q_IS17_EENS1Q_IS1B_EENS1O_ISW_EENS1Q_IS1D_EENS1O_IS1H_EENS1Q_IS1J_EEEEEEE7managerERKNS1_15function_bufferERS22_NS1_30functor_manager_operation_typeEN4mpl_5bool_ILb0EEE(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %2) local_unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  switch i32 %2, label %62 [
    i32 0, label %4
    i32 1, label %32
    i32 2, label %34
    i32 3, label %50
  ]

4:                                                ; preds = %3
  %5 = load ptr, ptr %0, align 8, !tbaa !30
  %6 = tail call noalias noundef nonnull dereferenceable(160) ptr @_Znwm(i64 noundef 160) #20
  store ptr null, ptr %6, align 8, !tbaa !25
  %7 = load ptr, ptr %5, align 8, !tbaa !25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  store ptr %7, ptr %6, align 8, !tbaa !25
  %10 = load ptr, ptr %5, align 8, !tbaa !25
  %11 = load ptr, ptr %10, align 8, !tbaa !227
  %12 = getelementptr inbounds %"class.boost::function_base", ptr %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::function_base", ptr %6, i64 0, i32 1
  invoke void %11(ptr noundef nonnull align 8 dereferenceable(24) %12, ptr noundef nonnull align 8 dereferenceable(24) %13, i32 noundef 0)
          to label %14 unwind label %30

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %6, i64 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %5, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %15, ptr noundef nonnull align 8 dereferenceable(72) %16, i64 72, i1 false)
  %17 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) %18, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %20, ptr %21, align 8, !tbaa !325
  %22 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !325
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %6, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %25, ptr %26, align 8, !tbaa !325
  %27 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %6, i64 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %5, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, ptr %28, align 8, !tbaa !33
  store i64 %29, ptr %27, align 8, !tbaa !33
  store ptr %6, ptr %1, align 8, !tbaa !30
  br label %65

30:                                               ; preds = %9
  %31 = landingpad { ptr, i32 }
          cleanup
  br label %66

32:                                               ; preds = %3
  %33 = load ptr, ptr %0, align 8, !tbaa !30
  store ptr %33, ptr %1, align 8, !tbaa !30
  store ptr null, ptr %0, align 8, !tbaa !30
  br label %65

34:                                               ; preds = %3
  %35 = load ptr, ptr %1, align 8, !tbaa !30
  %36 = icmp eq ptr %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %35, align 8, !tbaa !25
  %39 = icmp eq ptr %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load ptr, ptr %38, align 8, !tbaa !563
  %42 = icmp eq ptr %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.boost::function_base", ptr %35, i64 0, i32 1
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(24) %44, ptr noundef nonnull align 8 dereferenceable(24) %44, i32 noundef 2)
          to label %45 unwind label %48

45:                                               ; preds = %43, %40
  store ptr null, ptr %35, align 8, !tbaa !25
  br label %46

46:                                               ; preds = %45, %37
  tail call void @_ZdlPv(ptr noundef nonnull %35) #21
  br label %47

47:                                               ; preds = %46, %34
  store ptr null, ptr %1, align 8, !tbaa !30
  br label %65

48:                                               ; preds = %43
  %49 = landingpad { ptr, i32 }
          cleanup
  br label %66

50:                                               ; preds = %3
  %51 = load ptr, ptr %1, align 8, !tbaa !30
  %52 = getelementptr inbounds %"class.std::type_info", ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !642
  %54 = load i8, ptr %53, align 1, !tbaa !30
  %55 = icmp eq i8 %54, 42
  %56 = zext i1 %55 to i64
  %57 = getelementptr inbounds i8, ptr %53, i64 %56
  %58 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %57, ptr noundef nonnull dereferenceable(547) @_ZTSN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE) #24
  %59 = icmp eq i32 %58, 0
  %60 = load ptr, ptr %0, align 8
  %61 = select i1 %59, ptr %60, ptr null
  store ptr %61, ptr %1, align 8, !tbaa !30
  br label %65

62:                                               ; preds = %3
  store ptr @_ZTIN5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS7_10DoFHandlerILi3ELi3EEERKNS7_11QCollectionILi2EEENS4_9null_typeESK_SK_SK_SK_SK_SK_EERNS6_12SparseMatrixIdEERKSt3mapIhPKNS6_8FunctionILi3EEESt4lessIhESaISt4pairIKhST_EEERNS6_6VectorIdEERSt6vectorIjSaIjEEST_RKS18_NS6_13MatrixCreator13IteratorRangeISD_EERNS6_7Threads16DummyThreadMutexEEEENS0_5list9INS0_5valueISL_EENS_17reference_wrapperISN_EENS1N_IS11_EENS1N_IS14_EENS1N_IS18_EENS1L_IST_EENS1N_IS1A_EENS1L_IS1E_EENS1N_IS1G_EEEEEE, ptr %1, align 8, !tbaa !30
  %63 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 1
  store i8 0, ptr %63, align 8, !tbaa !30
  %64 = getelementptr inbounds %"struct.boost::detail::function::function_buffer::type_t", ptr %1, i64 0, i32 2
  store i8 0, ptr %64, align 1, !tbaa !30
  br label %65

65:                                               ; preds = %32, %50, %62, %47, %14
  ret void

66:                                               ; preds = %48, %30
  %67 = phi ptr [ %35, %48 ], [ %6, %30 ]
  %68 = phi { ptr, i32 } [ %49, %48 ], [ %31, %30 ]
  tail call void @_ZdlPv(ptr noundef nonnull %67) #21
  resume { ptr, i32 } %68
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local void @_ZNK5boost9function9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi2EEENS1_9null_typeESH_SH_SH_SH_SH_SH_EERNS3_12SparseMatrixIdEERKSt3mapIhPKNS3_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS3_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEclESI_SL_SZ_S12_S16_SQ_S18_S1B_S1E_(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef byval(%"class.boost::tuples::tuple.146") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef %8, ptr noundef nonnull align 1 dereferenceable(1) %9) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__cxx11::basic_string", align 8
  %13 = alloca %"class.boost::bad_function_call", align 8
  %14 = alloca %"struct.dealii::MatrixCreator::IteratorRange.65", align 8
  %15 = load ptr, ptr %0, align 8, !tbaa !25
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %47

17:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %13) #19
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %12) #19
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 2
  store ptr %18, ptr %12, align 8, !tbaa !658
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #19
  store i64 29, ptr %11, align 8, !tbaa !56
  %19 = call noundef ptr @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(ptr noundef nonnull align 8 dereferenceable(32) %12, ptr noundef nonnull align 8 dereferenceable(8) %11, i64 noundef 0)
  store ptr %19, ptr %12, align 8, !tbaa !660
  %20 = load i64, ptr %11, align 8, !tbaa !56
  store i64 %20, ptr %18, align 8, !tbaa !30
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(29) %19, ptr noundef nonnull align 1 dereferenceable(29) @.str.10, i64 29, i1 false)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", ptr %12, i64 0, i32 1
  store i64 %20, ptr %21, align 8, !tbaa !662
  %22 = load ptr, ptr %12, align 8, !tbaa !660
  %23 = getelementptr inbounds i8, ptr %22, i64 %20
  store i8 0, ptr %23, align 1, !tbaa !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #19
  invoke void @_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(ptr noundef nonnull align 8 dereferenceable(16) %13, ptr noundef nonnull align 8 dereferenceable(32) %12)
          to label %24 unwind label %31

24:                                               ; preds = %17
  %25 = load ptr, ptr %12, align 8, !tbaa !660
  %26 = icmp eq ptr %25, %18
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i64, ptr %21, align 8, !tbaa !662
  %29 = icmp ult i64 %28, 16
  call void @llvm.assume(i1 %29)
  br label %42

30:                                               ; preds = %24
  call void @_ZdlPv(ptr noundef %25) #21
  br label %42

31:                                               ; preds = %17
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = load ptr, ptr %12, align 8, !tbaa !660
  %34 = icmp eq ptr %33, %18
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load i64, ptr %21, align 8, !tbaa !662
  %37 = icmp ult i64 %36, 16
  call void @llvm.assume(i1 %37)
  br label %41

38:                                               ; preds = %31
  call void @_ZdlPv(ptr noundef %33) #21
  br label %41

39:                                               ; preds = %45, %41
  %40 = phi { ptr, i32 } [ %32, %41 ], [ %46, %45 ]
  resume { ptr, i32 } %40

41:                                               ; preds = %38, %35
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  br label %39

42:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %12) #19
  store ptr getelementptr inbounds ({ [5 x ptr] }, ptr @_ZTVN5boost17bad_function_callE, i64 0, inrange i32 0, i64 2), ptr %13, align 8, !tbaa !41
  invoke void @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(ptr noundef nonnull align 8 dereferenceable(16) %13)
          to label %43 unwind label %45

43:                                               ; preds = %42
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  %44 = load ptr, ptr %0, align 8, !tbaa !25
  br label %47

45:                                               ; preds = %42
  %46 = landingpad { ptr, i32 }
          cleanup
  call void @_ZNSt13runtime_errorD2Ev(ptr noundef nonnull align 8 dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %13) #19
  br label %39

47:                                               ; preds = %43, %10
  %48 = phi ptr [ %44, %43 ], [ %15, %10 ]
  %49 = getelementptr inbounds %"struct.boost::detail::function::basic_vtable9.182", ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !778
  %51 = getelementptr inbounds %"class.boost::function_base", ptr %0, i64 0, i32 1
  %52 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %8, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %8, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.dealii::DoFAccessor.53", ptr %14, i64 0, i32 1
  store ptr %53, ptr %54, align 8, !tbaa !325
  %55 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %55, ptr noundef nonnull align 8 dereferenceable(16) %56, i64 16, i1 false)
  %59 = getelementptr inbounds %"struct.dealii::MatrixCreator::IteratorRange.65", ptr %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %58, ptr %59, align 8, !tbaa !325
  call void %50(ptr noundef nonnull align 8 dereferenceable(24) %51, ptr noundef nonnull byval(%"class.boost::tuples::tuple.146") align 8 %1, ptr noundef nonnull align 8 dereferenceable(36) %2, ptr noundef nonnull align 8 dereferenceable(48) %3, ptr noundef nonnull align 8 dereferenceable(88) %4, ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %6, ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull %14, ptr noundef nonnull align 1 dereferenceable(1) %9)
  ret void
}

; Function Attrs: sspstrong uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN5boost6detail8function13basic_vtable0IvE9assign_toINS_3_bi6bind_tINS5_11unspecifiedENS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNSC_10DoFHandlerILi3ELi3EEERKNSC_11QCollectionILi2EEENS9_9null_typeESP_SP_SP_SP_SP_SP_EERNSB_12SparseMatrixIdEERKSt3mapIhPKNSB_8FunctionILi3EEESt4lessIhESaISt4pairIKhSY_EEERNSB_6VectorIdEERSt6vectorIjSaIjEESY_RKS1D_NSB_13MatrixCreator13IteratorRangeISI_EERNSB_7Threads16DummyThreadMutexEEEENS5_5list9INS5_5valueISQ_EENS_17reference_wrapperISS_EENS1S_IS16_EENS1S_IS19_EENS1S_IS1D_EENS1Q_ISY_EENS1S_IS1F_EENS1Q_IS1J_EENS1S_IS1L_EEEEEEEEbT_RNS1_15function_bufferENS1_16function_obj_tagE(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef %1, ptr noundef nonnull align 8 dereferenceable(24) %2) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
  %4 = alloca %"class.boost::_bi::bind_t.449", align 8
  store ptr null, ptr %4, align 8, !tbaa !25
  %5 = load ptr, ptr %1, align 8, !tbaa !25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  store ptr %5, ptr %4, align 8, !tbaa !25
  %8 = load ptr, ptr %5, align 8, !tbaa !227
  %9 = getelementptr inbounds %"class.boost::function_base", ptr %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %8(ptr noundef nonnull align 8 dereferenceable(24) %9, ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 0)
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %12, ptr noundef nonnull align 8 dereferenceable(72) %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, ptr noundef nonnull align 8 dereferenceable(16) %15, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %17, ptr %18, align 8, !tbaa !325
  %19 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %20 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %19, ptr noundef nonnull align 8 dereferenceable(16) %20, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %22, ptr %23, align 8, !tbaa !325
  %24 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %4, i64 0, i32 1, i32 0, i32 1
  %25 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %1, i64 0, i32 1, i32 0, i32 1
  %26 = load i64, ptr %25, align 8, !tbaa !33
  store i64 %26, ptr %24, align 8, !tbaa !33
  %27 = invoke noalias noundef nonnull dereferenceable(160) ptr @_Znwm(i64 noundef 160) #20
          to label %28 unwind label %59

28:                                               ; preds = %11
  store ptr null, ptr %27, align 8, !tbaa !25
  %29 = load ptr, ptr %4, align 8, !tbaa !25
  %30 = icmp eq ptr %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  store ptr %29, ptr %27, align 8, !tbaa !25
  %32 = load ptr, ptr %29, align 8, !tbaa !227
  %33 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  %34 = getelementptr inbounds %"class.boost::function_base", ptr %27, i64 0, i32 1
  invoke void %32(ptr noundef nonnull align 8 dereferenceable(24) %33, ptr noundef nonnull align 8 dereferenceable(24) %34, i32 noundef 0)
          to label %35 unwind label %40

35:                                               ; preds = %31
  %36 = load ptr, ptr %18, align 8, !tbaa !325
  %37 = load ptr, ptr %23, align 8, !tbaa !325
  %38 = load i64, ptr %24, align 8, !tbaa !33
  %39 = load ptr, ptr %4, align 8, !tbaa !25
  br label %42

40:                                               ; preds = %31
  %41 = landingpad { ptr, i32 }
          cleanup
  call void @_ZdlPv(ptr noundef nonnull %27) #21
  br label %61

42:                                               ; preds = %35, %28
  %43 = phi ptr [ %39, %35 ], [ null, %28 ]
  %44 = phi i64 [ %38, %35 ], [ %26, %28 ]
  %45 = phi ptr [ %37, %35 ], [ %22, %28 ]
  %46 = phi ptr [ %36, %35 ], [ %17, %28 ]
  %47 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %27, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %47, ptr noundef nonnull align 8 dereferenceable(72) %12, i64 72, i1 false)
  %48 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %48, ptr noundef nonnull align 8 dereferenceable(16) %14, i64 16, i1 false)
  %49 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %46, ptr %49, align 8, !tbaa !325
  %50 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %50, ptr noundef nonnull align 8 dereferenceable(16) %19, i64 16, i1 false)
  %51 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %27, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  store ptr %45, ptr %51, align 8, !tbaa !325
  %52 = getelementptr inbounds %"class.boost::_bi::bind_t.449", ptr %27, i64 0, i32 1, i32 0, i32 1
  store i64 %44, ptr %52, align 8, !tbaa !33
  store ptr %27, ptr %2, align 8, !tbaa !30
  %53 = icmp eq ptr %43, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %42
  %55 = load ptr, ptr %43, align 8, !tbaa !563
  %56 = icmp eq ptr %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  call void %55(ptr noundef nonnull align 8 dereferenceable(24) %58, ptr noundef nonnull align 8 dereferenceable(24) %58, i32 noundef 2)
  br label %70

59:                                               ; preds = %11
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %61

61:                                               ; preds = %40, %59
  %62 = phi { ptr, i32 } [ %60, %59 ], [ %41, %40 ]
  %63 = load ptr, ptr %4, align 8, !tbaa !25
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = load ptr, ptr %63, align 8, !tbaa !563
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.boost::function_base", ptr %4, i64 0, i32 1
  invoke void %66(ptr noundef nonnull align 8 dereferenceable(24) %69, ptr noundef nonnull align 8 dereferenceable(24) %69, i32 noundef 2)
          to label %71 unwind label %72

70:                                               ; preds = %54, %57, %42
  ret i1 true

71:                                               ; preds = %65, %68, %61
  resume { ptr, i32 } %62

72:                                               ; preds = %68
  %73 = landingpad { ptr, i32 }
          catch ptr null
  %74 = extractvalue { ptr, i32 } %73, 0
  call void @__clang_call_terminate(ptr %74) #22
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #15

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x double> @llvm.fmuladd.v4f64(<4 x double>, <4 x double>, <4 x double>) #16

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x double> @llvm.masked.load.v4f64.p0(ptr nocapture, i32 immarg, <4 x i1>, <4 x double>) #17

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.masked.store.v4f64.p0(<4 x double>, ptr nocapture, i32 immarg, <4 x i1>) #18

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x float> @llvm.masked.load.v4f32.p0(ptr nocapture, i32 immarg, <4 x i1>, <4 x float>) #17

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.masked.store.v4f32.p0(<4 x float>, ptr nocapture, i32 immarg, <4 x i1>) #18

attributes #0 = { sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #3 = { inlinehint sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #4 = { noinline noreturn nounwind sspstrong uwtable "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #5 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #6 = { noreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #8 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #9 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #10 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #11 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #12 = { nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #13 = { inlinehint nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #14 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #15 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #16 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #17 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #18 = { nocallback nofree nosync nounwind willreturn memory(argmem: write) }
attributes #19 = { nounwind }
attributes #20 = { builtin allocsize(0) }
attributes #21 = { builtin nounwind }
attributes #22 = { noreturn nounwind }
attributes #23 = { noreturn }
attributes #24 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !7, i64 4}
!6 = !{!"_ZTSN6dealii15MultithreadInfoE", !7, i64 0, !7, i64 4}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!11, !12, i64 8}
!11 = !{!"_ZTSNSt8__detail15_List_node_baseE", !12, i64 0, !12, i64 8}
!12 = !{!"any pointer", !8, i64 0}
!13 = !{!11, !12, i64 0}
!14 = !{!15, !16, i64 16}
!15 = !{!"_ZTSNSt8__detail17_List_node_headerE", !11, i64 0, !16, i64 16}
!16 = !{!"long", !8, i64 0}
!17 = !{!18, !12, i64 16}
!18 = !{!"_ZTSN6dealii11DoFAccessorILi3ENS_10DoFHandlerILi3ELi3EEEEE", !19, i64 0, !12, i64 16}
!19 = !{!"_ZTSN6dealii12CellAccessorILi3ELi3EEE", !20, i64 0}
!20 = !{!"_ZTSN6dealii12TriaAccessorILi3ELi3ELi3EEE", !21, i64 0}
!21 = !{!"_ZTSN6dealii16TriaAccessorBaseILi3ELi3ELi3EEE", !7, i64 0, !7, i64 4, !12, i64 8}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSU_9null_typeES13_S13_EELi7EEEPFSS_SW_SX_SY_SZ_S10_S11_S12_E: argument 0"}
!24 = distinct !{!24, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSU_9null_typeES13_S13_EELi7EEEPFSS_SW_SX_SY_SZ_S10_S11_S12_E"}
!25 = !{!26, !12, i64 0}
!26 = !{!"_ZTSN5boost13function_baseE", !12, i64 0, !8, i64 8}
!27 = !{!28, !12, i64 0}
!28 = !{!"_ZTSN5boost6detail8function13basic_vtable7IvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!29 = !{!"_ZTSN5boost6detail8function11vtable_baseE", !12, i64 0}
!30 = !{!8, !8, i64 0}
!31 = !{!32, !12, i64 0}
!32 = !{!"_ZTSNSt12_Vector_baseISt4pairIN6dealii18TriaActiveIteratorINS1_15DoFCellAccessorINS1_10DoFHandlerILi3ELi3EEEEEEES7_ESaIS8_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!33 = !{!12, !12, i64 0}
!34 = !{!35, !16, i64 8}
!35 = !{!"_ZTSN5boost6detail15sp_counted_baseE", !16, i64 8, !16, i64 16}
!36 = !{!37, !16, i64 16}
!37 = !{!"_ZTSNSt7__cxx1110_List_baseIN6dealii7Threads6ThreadIvEESaIS4_EEE", !38, i64 0}
!38 = !{!"_ZTSNSt7__cxx1110_List_baseIN6dealii7Threads6ThreadIvEESaIS4_EE10_List_implE", !15, i64 0}
!39 = !{!40, !12, i64 0}
!40 = !{!"_ZTSN5boost6detail12shared_countE", !12, i64 0}
!41 = !{!42, !42, i64 0}
!42 = !{!"vtable pointer", !9, i64 0}
!43 = !{!35, !16, i64 16}
!44 = !{!32, !12, i64 16}
!45 = !{!32, !12, i64 8}
!46 = !{!47, !12, i64 0}
!47 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!48 = !{!49, !12, i64 8}
!49 = !{!"_ZTSNSt12_Vector_baseIN6dealii8internal13Triangulation10TriaObjectILi3EEESaIS4_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!50 = !{!49, !12, i64 0}
!51 = !{!47, !12, i64 8}
!52 = distinct !{!52, !53}
!53 = !{!"llvm.loop.peeled.count", i32 1}
!54 = !{!55, !12, i64 0}
!55 = !{!"_ZTSSt18_Bit_iterator_base", !12, i64 0, !7, i64 8}
!56 = !{!16, !16, i64 0}
!57 = !{!58, !12, i64 0}
!58 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!59 = !{!7, !7, i64 0}
!60 = !{!21, !7, i64 0}
!61 = !{!21, !7, i64 4}
!62 = !{!21, !12, i64 8}
!63 = !{!64, !12, i64 0}
!64 = !{!"_ZTSN6dealii12SmartPointerIKNS_13FiniteElementILi3ELi3EEEEE", !12, i64 0, !12, i64 8}
!65 = !{!66, !7, i64 512}
!66 = !{!"_ZTSN6dealii12FEValuesBaseILi3ELi3EEE", !67, i64 0, !76, i64 72, !7, i64 508, !7, i64 512, !114, i64 520, !115, i64 528, !64, i64 544, !116, i64 560, !116, i64 576, !117, i64 592, !118, i64 600}
!67 = !{!"_ZTSN6dealii11SubscriptorE", !7, i64 8, !68, i64 16, !12, i64 64}
!68 = !{!"_ZTSSt3mapIPKcjSt4lessIS1_ESaISt4pairIKS1_jEEE", !69, i64 0}
!69 = !{!"_ZTSSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE", !70, i64 0}
!70 = !{!"_ZTSNSt8_Rb_treeIPKcSt4pairIKS1_jESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEE", !71, i64 0, !73, i64 8}
!71 = !{!"_ZTSSt20_Rb_tree_key_compareISt4lessIPKcEE", !72, i64 0}
!72 = !{!"_ZTSSt4lessIPKcE"}
!73 = !{!"_ZTSSt15_Rb_tree_header", !74, i64 0, !16, i64 32}
!74 = !{!"_ZTSSt18_Rb_tree_node_base", !75, i64 0, !12, i64 8, !12, i64 16, !12, i64 24}
!75 = !{!"_ZTSSt14_Rb_tree_color", !8, i64 0}
!76 = !{!"_ZTSN6dealii12FEValuesDataILi3ELi3EEE", !77, i64 0, !81, i64 96, !85, i64 120, !89, i64 144, !93, i64 168, !97, i64 192, !93, i64 216, !101, i64 240, !101, i64 264, !101, i64 288, !105, i64 312, !101, i64 336, !85, i64 360, !85, i64 384, !109, i64 408, !113, i64 432}
!77 = !{!"_ZTSN6dealii5TableILi2EdEE", !78, i64 0}
!78 = !{!"_ZTSN6dealii9TableBaseILi2EdEE", !67, i64 0, !12, i64 72, !7, i64 80, !79, i64 84}
!79 = !{!"_ZTSN6dealii12TableIndicesILi2EEE", !80, i64 0}
!80 = !{!"_ZTSN6dealii16TableIndicesBaseILi2EEE", !8, i64 0}
!81 = !{!"_ZTSSt6vectorIS_IN6dealii6TensorILi1ELi3EEESaIS2_EESaIS4_EE", !82, i64 0}
!82 = !{!"_ZTSSt12_Vector_baseISt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EESaIS5_EE", !83, i64 0}
!83 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EESaIS5_EE12_Vector_implE", !84, i64 0}
!84 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii6TensorILi1ELi3EEESaIS3_EESaIS5_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!85 = !{!"_ZTSSt6vectorIS_IN6dealii6TensorILi2ELi3EEESaIS2_EESaIS4_EE", !86, i64 0}
!86 = !{!"_ZTSSt12_Vector_baseISt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EESaIS5_EE", !87, i64 0}
!87 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EESaIS5_EE12_Vector_implE", !88, i64 0}
!88 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii6TensorILi2ELi3EEESaIS3_EESaIS5_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!89 = !{!"_ZTSSt6vectorIdSaIdEE", !90, i64 0}
!90 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !91, i64 0}
!91 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !92, i64 0}
!92 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!93 = !{!"_ZTSSt6vectorIN6dealii6TensorILi2ELi3EEESaIS2_EE", !94, i64 0}
!94 = !{!"_ZTSSt12_Vector_baseIN6dealii6TensorILi2ELi3EEESaIS2_EE", !95, i64 0}
!95 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi2ELi3EEESaIS2_EE12_Vector_implE", !96, i64 0}
!96 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi2ELi3EEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!97 = !{!"_ZTSSt6vectorIN6dealii6TensorILi3ELi3EEESaIS2_EE", !98, i64 0}
!98 = !{!"_ZTSSt12_Vector_baseIN6dealii6TensorILi3ELi3EEESaIS2_EE", !99, i64 0}
!99 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi3ELi3EEESaIS2_EE12_Vector_implE", !100, i64 0}
!100 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi3ELi3EEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!101 = !{!"_ZTSSt6vectorIN6dealii5PointILi3EEESaIS2_EE", !102, i64 0}
!102 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE", !103, i64 0}
!103 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE12_Vector_implE", !104, i64 0}
!104 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi3EEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!105 = !{!"_ZTSSt6vectorIN6dealii6TensorILi1ELi3EEESaIS2_EE", !106, i64 0}
!106 = !{!"_ZTSSt12_Vector_baseIN6dealii6TensorILi1ELi3EEESaIS2_EE", !107, i64 0}
!107 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi1ELi3EEESaIS2_EE12_Vector_implE", !108, i64 0}
!108 = !{!"_ZTSNSt12_Vector_baseIN6dealii6TensorILi1ELi3EEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!109 = !{!"_ZTSSt6vectorIjSaIjEE", !110, i64 0}
!110 = !{!"_ZTSSt12_Vector_baseIjSaIjEE", !111, i64 0}
!111 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE12_Vector_implE", !112, i64 0}
!112 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!113 = !{!"_ZTSN6dealii11UpdateFlagsE", !8, i64 0}
!114 = !{!"_ZTSSt8auto_ptrIKN6dealii12FEValuesBaseILi3ELi3EE16CellIteratorBaseEE", !12, i64 0}
!115 = !{!"_ZTSN6dealii12SmartPointerIKNS_7MappingILi3ELi3EEEEE", !12, i64 0, !12, i64 8}
!116 = !{!"_ZTSN6dealii12SmartPointerINS_7MappingILi3ELi3EE16InternalDataBaseEEE", !12, i64 0, !12, i64 8}
!117 = !{!"_ZTSN6dealii14CellSimilarity10SimilarityE", !8, i64 0}
!118 = !{!"_ZTSN6dealii8internal13FEValuesViews5CacheILi3ELi3EEE", !119, i64 0, !123, i64 24}
!119 = !{!"_ZTSSt6vectorIN6dealii13FEValuesViews6ScalarILi3ELi3EEESaIS3_EE", !120, i64 0}
!120 = !{!"_ZTSSt12_Vector_baseIN6dealii13FEValuesViews6ScalarILi3ELi3EEESaIS3_EE", !121, i64 0}
!121 = !{!"_ZTSNSt12_Vector_baseIN6dealii13FEValuesViews6ScalarILi3ELi3EEESaIS3_EE12_Vector_implE", !122, i64 0}
!122 = !{!"_ZTSNSt12_Vector_baseIN6dealii13FEValuesViews6ScalarILi3ELi3EEESaIS3_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!123 = !{!"_ZTSSt6vectorIN6dealii13FEValuesViews6VectorILi3ELi3EEESaIS3_EE", !124, i64 0}
!124 = !{!"_ZTSSt12_Vector_baseIN6dealii13FEValuesViews6VectorILi3ELi3EEESaIS3_EE", !125, i64 0}
!125 = !{!"_ZTSNSt12_Vector_baseIN6dealii13FEValuesViews6VectorILi3ELi3EEESaIS3_EE12_Vector_implE", !126, i64 0}
!126 = !{!"_ZTSNSt12_Vector_baseIN6dealii13FEValuesViews6VectorILi3ELi3EEESaIS3_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!127 = !{!66, !7, i64 508}
!128 = !{!129, !7, i64 44}
!129 = !{!"_ZTSN6dealii17FiniteElementDataILi3EEE", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !130, i64 56}
!130 = !{!"_ZTSN6dealii17FiniteElementDataILi3EE10ConformityE", !8, i64 0}
!131 = !{!92, !12, i64 0}
!132 = !{!92, !12, i64 16}
!133 = !{!134, !134, i64 0}
!134 = !{!"double", !8, i64 0}
!135 = !{!92, !12, i64 8}
!136 = !{!137, !12, i64 80}
!137 = !{!"_ZTSN6dealii6VectorIdEE", !67, i64 0, !7, i64 72, !7, i64 76, !12, i64 80}
!138 = !{!137, !7, i64 76}
!139 = !{!137, !7, i64 72}
!140 = !{!78, !12, i64 72}
!141 = !{!129, !7, i64 40}
!142 = !{!143, !12, i64 0}
!143 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal10DoFHandler8DoFLevelILi3EEESaIS5_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!144 = !{!112, !12, i64 0}
!145 = !{!146, !7, i64 88}
!146 = !{!"_ZTSN6dealii8FunctionILi3EEE", !147, i64 0, !67, i64 16, !7, i64 88}
!147 = !{!"_ZTSN6dealii12FunctionTimeE", !134, i64 8}
!148 = !{!149, !150, i64 132}
!149 = !{!"_ZTSN6dealii13FiniteElementILi3ELi3EEE", !67, i64 0, !129, i64 72, !150, i64 132, !151, i64 136, !151, i64 160, !155, i64 184, !101, i64 280, !156, i64 304, !101, i64 328, !156, i64 352, !160, i64 376, !162, i64 472, !165, i64 496, !165, i64 520, !169, i64 544, !169, i64 568, !109, i64 592, !169, i64 616, !173, i64 640, !178, i64 680, !109, i64 704}
!150 = !{!"bool", !8, i64 0}
!151 = !{!"_ZTSSt6vectorIS_IN6dealii10FullMatrixIdEESaIS2_EESaIS4_EE", !152, i64 0}
!152 = !{!"_ZTSSt12_Vector_baseISt6vectorIN6dealii10FullMatrixIdEESaIS3_EESaIS5_EE", !153, i64 0}
!153 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii10FullMatrixIdEESaIS3_EESaIS5_EE12_Vector_implE", !154, i64 0}
!154 = !{!"_ZTSNSt12_Vector_baseISt6vectorIN6dealii10FullMatrixIdEESaIS3_EESaIS5_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!155 = !{!"_ZTSN6dealii10FullMatrixIdEE", !77, i64 0}
!156 = !{!"_ZTSSt6vectorIN6dealii5PointILi2EEESaIS2_EE", !157, i64 0}
!157 = !{!"_ZTSSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE", !158, i64 0}
!158 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE12_Vector_implE", !159, i64 0}
!159 = !{!"_ZTSNSt12_Vector_baseIN6dealii5PointILi2EEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!160 = !{!"_ZTSN6dealii5TableILi2EiEE", !161, i64 0}
!161 = !{!"_ZTSN6dealii9TableBaseILi2EiEE", !67, i64 0, !12, i64 72, !7, i64 80, !79, i64 84}
!162 = !{!"_ZTSSt6vectorIiSaIiEE", !163, i64 0}
!163 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !164, i64 0}
!164 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !58, i64 0}
!165 = !{!"_ZTSSt6vectorISt4pairIjjESaIS1_EE", !166, i64 0}
!166 = !{!"_ZTSSt12_Vector_baseISt4pairIjjESaIS1_EE", !167, i64 0}
!167 = !{!"_ZTSNSt12_Vector_baseISt4pairIjjESaIS1_EE12_Vector_implE", !168, i64 0}
!168 = !{!"_ZTSNSt12_Vector_baseISt4pairIjjESaIS1_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!169 = !{!"_ZTSSt6vectorISt4pairIS0_IjjEjESaIS2_EE", !170, i64 0}
!170 = !{!"_ZTSSt12_Vector_baseISt4pairIS0_IjjEjESaIS2_EE", !171, i64 0}
!171 = !{!"_ZTSNSt12_Vector_baseISt4pairIS0_IjjEjESaIS2_EE12_Vector_implE", !172, i64 0}
!172 = !{!"_ZTSNSt12_Vector_baseISt4pairIS0_IjjEjESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!173 = !{!"_ZTSSt6vectorIbSaIbEE", !174, i64 0}
!174 = !{!"_ZTSSt13_Bvector_baseISaIbEE", !175, i64 0}
!175 = !{!"_ZTSNSt13_Bvector_baseISaIbEE13_Bvector_implE", !176, i64 0}
!176 = !{!"_ZTSNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataE", !177, i64 0, !177, i64 16, !12, i64 32}
!177 = !{!"_ZTSSt13_Bit_iterator", !55, i64 0}
!178 = !{!"_ZTSSt6vectorIS_IbSaIbEESaIS1_EE", !179, i64 0}
!179 = !{!"_ZTSSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE", !180, i64 0}
!180 = !{!"_ZTSNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE12_Vector_implE", !181, i64 0}
!181 = !{!"_ZTSNSt12_Vector_baseISt6vectorIbSaIbEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!182 = !{i8 0, i8 2}
!183 = !{}
!184 = !{!168, !12, i64 0}
!185 = !{!186}
!186 = distinct !{!186, !187}
!187 = distinct !{!187, !"LVerDomain"}
!188 = !{!189}
!189 = distinct !{!189, !187}
!190 = !{!191}
!191 = distinct !{!191, !187}
!192 = distinct !{!192, !193, !194}
!193 = !{!"llvm.loop.isvectorized", i32 1}
!194 = !{!"llvm.loop.unroll.runtime.disable"}
!195 = distinct !{!195, !193}
!196 = !{!197}
!197 = distinct !{!197, !198}
!198 = distinct !{!198, !"LVerDomain"}
!199 = !{!200}
!200 = distinct !{!200, !198}
!201 = !{!202}
!202 = distinct !{!202, !198}
!203 = distinct !{!203, !193, !194}
!204 = distinct !{!204, !193}
!205 = !{!181, !12, i64 0}
!206 = !{!207}
!207 = distinct !{!207, !208}
!208 = distinct !{!208, !"LVerDomain"}
!209 = !{!210}
!210 = distinct !{!210, !208}
!211 = distinct !{!211, !193, !194}
!212 = distinct !{!212, !193}
!213 = !{!214}
!214 = distinct !{!214, !215}
!215 = distinct !{!215, !"LVerDomain"}
!216 = !{!217}
!217 = distinct !{!217, !215}
!218 = !{!219}
!219 = distinct !{!219, !215}
!220 = !{!221}
!221 = distinct !{!221, !215}
!222 = distinct !{!222, !193, !194}
!223 = distinct !{!223, !193}
!224 = !{!225, !12, i64 0}
!225 = !{!"_ZTSNSt12_Vector_baseIN6dealii6VectorIdEESaIS2_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!226 = !{!225, !12, i64 8}
!227 = !{!29, !12, i64 0}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_: argument 0"}
!230 = distinct !{!230, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_"}
!231 = !{!232, !12, i64 0}
!232 = !{!"_ZTSN5boost6detail8function13basic_vtable0IvEE", !29, i64 0, !12, i64 8}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSJ_NS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSY_9null_typeEEELi9EEEPFSW_S10_S11_S12_S13_S14_S15_S16_S17_S18_E: argument 0"}
!235 = distinct !{!235, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSJ_NS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSY_9null_typeEEELi9EEEPFSW_S10_S11_S12_S13_S14_S15_S16_S17_S18_E"}
!236 = !{!237, !12, i64 0}
!237 = !{!"_ZTSN5boost6detail8function13basic_vtable9IvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!238 = !{!239}
!239 = distinct !{!239, !240}
!240 = distinct !{!240, !"LVerDomain"}
!241 = !{!242}
!242 = distinct !{!242, !240}
!243 = !{!244}
!244 = distinct !{!244, !240}
!245 = distinct !{!245, !193, !194}
!246 = distinct !{!246, !193}
!247 = !{!248}
!248 = distinct !{!248, !249}
!249 = distinct !{!249, !"LVerDomain"}
!250 = !{!251}
!251 = distinct !{!251, !249}
!252 = !{!253}
!253 = distinct !{!253, !249}
!254 = distinct !{!254, !193, !194}
!255 = distinct !{!255, !193}
!256 = distinct !{!256, !193}
!257 = !{!258}
!258 = distinct !{!258, !259}
!259 = distinct !{!259, !"LVerDomain"}
!260 = !{!261}
!261 = distinct !{!261, !259}
!262 = !{!263}
!263 = distinct !{!263, !259}
!264 = distinct !{!264, !193, !194}
!265 = !{!266}
!266 = distinct !{!266, !267}
!267 = distinct !{!267, !"LVerDomain"}
!268 = !{!269}
!269 = distinct !{!269, !267}
!270 = distinct !{!270, !193, !194}
!271 = distinct !{!271, !193}
!272 = !{!273}
!273 = distinct !{!273, !274, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_: argument 0"}
!274 = distinct !{!274, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_"}
!275 = !{!276}
!276 = distinct !{!276, !277, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSU_9null_typeES13_S13_EELi7EEEPFSS_SW_SX_SY_SZ_S10_S11_S12_E: argument 0"}
!277 = distinct !{!277, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSU_9null_typeES13_S13_EELi7EEEPFSS_SW_SX_SY_SZ_S10_S11_S12_E"}
!278 = !{!279, !12, i64 0}
!279 = !{!"_ZTSN5boost6detail8function13basic_vtable7IvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!280 = !{!281, !12, i64 72}
!281 = !{!"_ZTSN6dealii9TableBaseILi2EfEE", !67, i64 0, !12, i64 72, !7, i64 80, !79, i64 84}
!282 = !{!283, !283, i64 0}
!283 = !{!"float", !8, i64 0}
!284 = distinct !{!284, !193, !194}
!285 = distinct !{!285, !193}
!286 = distinct !{!286, !193, !194}
!287 = distinct !{!287, !193}
!288 = distinct !{!288, !193, !194}
!289 = distinct !{!289, !193}
!290 = !{!291}
!291 = distinct !{!291, !292}
!292 = distinct !{!292, !"LVerDomain"}
!293 = !{!294}
!294 = distinct !{!294, !292}
!295 = !{!296}
!296 = distinct !{!296, !292}
!297 = !{!298}
!298 = distinct !{!298, !292}
!299 = distinct !{!299, !193, !194}
!300 = distinct !{!300, !193}
!301 = !{!302}
!302 = distinct !{!302, !303, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_: argument 0"}
!303 = distinct !{!303, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_"}
!304 = !{!305}
!305 = distinct !{!305, !306, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSJ_NS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSY_9null_typeEEELi9EEEPFSW_S10_S11_S12_S13_S14_S15_S16_S17_S18_E: argument 0"}
!306 = distinct !{!306, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSJ_NS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSY_9null_typeEEELi9EEEPFSW_S10_S11_S12_S13_S14_S15_S16_S17_S18_E"}
!307 = !{!308, !12, i64 0}
!308 = !{!"_ZTSN5boost6detail8function13basic_vtable9IvRKN6dealii7MappingILi3ELi3EEERKNS3_10DoFHandlerILi3ELi3EEERKNS3_10QuadratureILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSL_NS3_13MatrixCreator13IteratorRangeIS9_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!309 = distinct !{!309, !193, !194}
!310 = distinct !{!310, !193}
!311 = distinct !{!311, !193}
!312 = !{!313}
!313 = distinct !{!313, !314}
!314 = distinct !{!314, !"LVerDomain"}
!315 = !{!316}
!316 = distinct !{!316, !314}
!317 = !{!318}
!318 = distinct !{!318, !314}
!319 = distinct !{!319, !193, !194}
!320 = distinct !{!320, !193, !194}
!321 = distinct !{!321, !193}
!322 = !{!323}
!323 = distinct !{!323, !324, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_: argument 0"}
!324 = distinct !{!324, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_"}
!325 = !{!326, !12, i64 16}
!326 = !{!"_ZTSN6dealii11DoFAccessorILi3ENS_2hp10DoFHandlerILi3ELi3EEEEE", !19, i64 0, !12, i64 16}
!327 = !{!328}
!328 = distinct !{!328, !329, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSV_9null_typeES14_S14_EELi7EEEPFST_SX_SY_SZ_S10_S11_S12_S13_E: argument 0"}
!329 = distinct !{!329, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSV_9null_typeES14_S14_EELi7EEEPFST_SX_SY_SZ_S10_S11_S12_S13_E"}
!330 = !{!331, !12, i64 0}
!331 = !{!"_ZTSN5boost6detail8function13basic_vtable7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!332 = !{!333, !12, i64 0}
!333 = !{!"_ZTSNSt12_Vector_baseISt4pairIN6dealii18TriaActiveIteratorINS1_15DoFCellAccessorINS1_2hp10DoFHandlerILi3ELi3EEEEEEES8_ESaIS9_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!334 = !{!333, !12, i64 16}
!335 = !{!333, !12, i64 8}
!336 = !{!337, !12, i64 0}
!337 = !{!"_ZTSN6dealii12SmartPointerIKNS_2hp12FECollectionILi3ELi3EEEEE", !12, i64 0, !12, i64 8}
!338 = !{!339, !12, i64 0}
!339 = !{!"_ZTSNSt12_Vector_baseIN5boost10shared_ptrIKN6dealii13FiniteElementILi3ELi3EEEEESaIS6_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!340 = !{!341, !12, i64 0}
!341 = !{!"_ZTSN5boost10shared_ptrIKN6dealii13FiniteElementILi3ELi3EEEEE", !12, i64 0, !40, i64 8}
!342 = !{!343, !12, i64 72}
!343 = !{!"_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_8FEValuesILi3ELi3EEEEEEE", !67, i64 0, !12, i64 72, !7, i64 80, !344, i64 84}
!344 = !{!"_ZTSN6dealii12TableIndicesILi3EEE", !345, i64 0}
!345 = !{!"_ZTSN6dealii16TableIndicesBaseILi3EEE", !8, i64 0}
!346 = !{!347, !12, i64 0}
!347 = !{!"_ZTSN5boost10shared_ptrIN6dealii8FEValuesILi3ELi3EEEEE", !12, i64 0, !40, i64 8}
!348 = !{!78, !7, i64 80}
!349 = !{!112, !12, i64 8}
!350 = !{!351, !12, i64 0}
!351 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal2hp8DoFLevelILi3EEESaIS5_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!352 = !{!353}
!353 = distinct !{!353, !354}
!354 = distinct !{!354, !"LVerDomain"}
!355 = !{!356}
!356 = distinct !{!356, !354}
!357 = !{!358}
!358 = distinct !{!358, !354}
!359 = !{!360}
!360 = distinct !{!360, !354}
!361 = distinct !{!361, !193, !194}
!362 = distinct !{!362, !193}
!363 = !{!364}
!364 = distinct !{!364, !365}
!365 = distinct !{!365, !"LVerDomain"}
!366 = !{!367}
!367 = distinct !{!367, !365}
!368 = !{!369}
!369 = distinct !{!369, !365}
!370 = !{!371}
!371 = distinct !{!371, !365}
!372 = distinct !{!372, !193, !194}
!373 = distinct !{!373, !193}
!374 = !{!375}
!375 = distinct !{!375, !376}
!376 = distinct !{!376, !"LVerDomain"}
!377 = !{!378}
!378 = distinct !{!378, !376}
!379 = !{!380}
!380 = distinct !{!380, !376}
!381 = distinct !{!381, !193, !194}
!382 = distinct !{!382, !193}
!383 = !{!384, !12, i64 0}
!384 = !{!"_ZTSN6dealii12SmartPointerIKNS_15SparsityPatternEEE", !12, i64 0, !12, i64 8}
!385 = !{!386, !12, i64 24}
!386 = !{!"_ZTSN6dealii12SparseMatrixIdEE", !384, i64 8, !12, i64 24, !7, i64 32}
!387 = !{!388}
!388 = distinct !{!388, !389, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_: argument 0"}
!389 = distinct !{!389, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_"}
!390 = !{!391}
!391 = distinct !{!391, !392, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSK_NS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSZ_9null_typeEEELi9EEEPFSX_S11_S12_S13_S14_S15_S16_S17_S18_S19_E: argument 0"}
!392 = distinct !{!392, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSK_NS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSZ_9null_typeEEELi9EEEPFSX_S11_S12_S13_S14_S15_S16_S17_S18_S19_E"}
!393 = !{!394, !12, i64 0}
!394 = !{!"_ZTSN5boost6detail8function13basic_vtable9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIdEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!395 = !{!396}
!396 = distinct !{!396, !397}
!397 = distinct !{!397, !"LVerDomain"}
!398 = !{!399}
!399 = distinct !{!399, !397}
!400 = !{!401}
!401 = distinct !{!401, !397}
!402 = !{!403}
!403 = distinct !{!403, !397}
!404 = distinct !{!404, !193, !194}
!405 = distinct !{!405, !193}
!406 = !{!407}
!407 = distinct !{!407, !408}
!408 = distinct !{!408, !"LVerDomain"}
!409 = !{!410}
!410 = distinct !{!410, !408}
!411 = !{!412}
!412 = distinct !{!412, !408}
!413 = !{!414}
!414 = distinct !{!414, !408}
!415 = distinct !{!415, !193, !194}
!416 = distinct !{!416, !193}
!417 = !{!418}
!418 = distinct !{!418, !419, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_: argument 0"}
!419 = distinct !{!419, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_"}
!420 = !{!421}
!421 = distinct !{!421, !422, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSV_9null_typeES14_S14_EELi7EEEPFST_SX_SY_SZ_S10_S11_S12_S13_E: argument 0"}
!422 = distinct !{!422, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIfEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSV_9null_typeES14_S14_EELi7EEEPFST_SX_SY_SZ_S10_S11_S12_S13_E"}
!423 = !{!424, !12, i64 0}
!424 = !{!"_ZTSN5boost6detail8function13basic_vtable7IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEEPKNS3_8FunctionILi3EEENS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!425 = !{!426}
!426 = distinct !{!426, !427}
!427 = distinct !{!427, !"LVerDomain"}
!428 = !{!429}
!429 = distinct !{!429, !427}
!430 = !{!431}
!431 = distinct !{!431, !427}
!432 = !{!433}
!433 = distinct !{!433, !427}
!434 = distinct !{!434, !193, !194}
!435 = distinct !{!435, !193}
!436 = !{!437}
!437 = distinct !{!437, !438}
!438 = distinct !{!438, !"LVerDomain"}
!439 = !{!440}
!440 = distinct !{!440, !438}
!441 = !{!442}
!442 = distinct !{!442, !438}
!443 = !{!444}
!444 = distinct !{!444, !438}
!445 = distinct !{!445, !193, !194}
!446 = distinct !{!446, !193}
!447 = !{!448}
!448 = distinct !{!448, !449}
!449 = distinct !{!449, !"LVerDomain"}
!450 = !{!451}
!451 = distinct !{!451, !449}
!452 = !{!453}
!453 = distinct !{!453, !449}
!454 = distinct !{!454, !193, !194}
!455 = distinct !{!455, !193}
!456 = !{!457, !12, i64 24}
!457 = !{!"_ZTSN6dealii12SparseMatrixIfEE", !384, i64 8, !12, i64 24, !7, i64 32}
!458 = !{!459}
!459 = distinct !{!459, !460, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_: argument 0"}
!460 = distinct !{!460, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_"}
!461 = !{!462}
!462 = distinct !{!462, !463, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSK_NS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSZ_9null_typeEEELi9EEEPFSX_S11_S12_S13_S14_S15_S16_S17_S18_S19_E: argument 0"}
!463 = distinct !{!463, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIfEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSK_NS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSZ_9null_typeEEELi9EEEPFSX_S11_S12_S13_S14_S15_S16_S17_S18_S19_E"}
!464 = !{!465, !12, i64 0}
!465 = !{!"_ZTSN5boost6detail8function13basic_vtable9IvRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_11QCollectionILi3EEERNS3_12SparseMatrixIfEERKNS3_8FunctionILi3EEERNS3_6VectorIdEEPSM_NS3_13MatrixCreator13IteratorRangeISA_EERNS3_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!466 = !{!467}
!467 = distinct !{!467, !468}
!468 = distinct !{!468, !"LVerDomain"}
!469 = !{!470}
!470 = distinct !{!470, !468}
!471 = !{!472}
!472 = distinct !{!472, !468}
!473 = !{!474}
!474 = distinct !{!474, !468}
!475 = distinct !{!475, !193, !194}
!476 = distinct !{!476, !193}
!477 = !{!478}
!478 = distinct !{!478, !479}
!479 = distinct !{!479, !"LVerDomain"}
!480 = !{!481}
!481 = distinct !{!481, !479}
!482 = !{!483}
!483 = distinct !{!483, !479}
!484 = !{!485}
!485 = distinct !{!485, !479}
!486 = distinct !{!486, !193, !194}
!487 = distinct !{!487, !193}
!488 = !{!489}
!489 = distinct !{!489, !490, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_: argument 0"}
!490 = distinct !{!490, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_"}
!491 = !{!"branch_weights", i32 1, i32 2000}
!492 = !{!112, !12, i64 16}
!493 = !{!"branch_weights", i32 2000, i32 1}
!494 = !{!495}
!495 = distinct !{!495, !496, !"_ZN6dealii7Threads5spawnIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi2EEENS3_9null_typeESH_SH_SH_SH_SH_SH_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS_13MatrixCreator13IteratorRangeISA_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_NS4_IT0_T1_T2_T3_T4_T5_T6_T7_T8_SH_EELi9EEEPFS1G_S1H_S1I_S1J_S1K_S1L_S1M_S1N_S1O_S1P_E: argument 0"}
!496 = distinct !{!496, !"_ZN6dealii7Threads5spawnIvN5boost6tuples5tupleIRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi2EEENS3_9null_typeESH_SH_SH_SH_SH_SH_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS_13MatrixCreator13IteratorRangeISA_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_NS4_IT0_T1_T2_T3_T4_T5_T6_T7_T8_SH_EELi9EEEPFS1G_S1H_S1I_S1J_S1K_S1L_S1M_S1N_S1O_S1P_E"}
!497 = !{!498, !12, i64 0}
!498 = !{!"_ZTSN5boost6detail8function13basic_vtable9IvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_10QuadratureILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS5_13MatrixCreator13IteratorRangeISB_EERNS5_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!499 = !{!500, !12, i64 0}
!500 = !{!"_ZTSN5boost6tuples4consIRKN6dealii7MappingILi3ELi3EEENS1_IRKNS2_10DoFHandlerILi3ELi3EEENS1_IRKNS2_10QuadratureILi2EEENS0_9null_typeEEEEEEE", !12, i64 0, !501, i64 8}
!501 = !{!"_ZTSN5boost6tuples4consIRKN6dealii10DoFHandlerILi3ELi3EEENS1_IRKNS2_10QuadratureILi2EEENS0_9null_typeEEEEE", !12, i64 0, !502, i64 8}
!502 = !{!"_ZTSN5boost6tuples4consIRKN6dealii10QuadratureILi2EEENS0_9null_typeEEE", !12, i64 0}
!503 = !{!501, !12, i64 0}
!504 = !{!502, !12, i64 0}
!505 = !{!73, !12, i64 16}
!506 = !{!507, !12, i64 8}
!507 = !{!"_ZTSSt4pairIKhPKN6dealii8FunctionILi3EEEE", !8, i64 0, !12, i64 8}
!508 = !{!129, !7, i64 36}
!509 = distinct !{!509, !193, !194}
!510 = distinct !{!510, !194, !193}
!511 = !{!512}
!512 = distinct !{!512, !513, !"_ZNK6dealii15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEE4faceEj: argument 0"}
!513 = distinct !{!513, !"_ZNK6dealii15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEE4faceEj"}
!514 = !{!515, !12, i64 96}
!515 = !{!"_ZTSN6dealii13TriangulationILi3ELi3EEE", !67, i64 0, !516, i64 72, !12, i64 96, !101, i64 104, !173, i64 128, !8, i64 168, !8, i64 4248, !150, i64 8328, !519, i64 8332, !520, i64 8336, !523, i64 8528}
!516 = !{!"_ZTSSt6vectorIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE", !517, i64 0}
!517 = !{!"_ZTSSt12_Vector_baseIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE", !518, i64 0}
!518 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal13Triangulation9TriaLevelILi3EEESaIS5_EE12_Vector_implE", !47, i64 0}
!519 = !{!"_ZTSN6dealii13TriangulationILi3ELi3EE13MeshSmoothingE", !8, i64 0}
!520 = !{!"_ZTSN6dealii8internal13Triangulation11NumberCacheILi3EEE", !521, i64 0, !7, i64 128, !109, i64 136, !7, i64 160, !109, i64 168}
!521 = !{!"_ZTSN6dealii8internal13Triangulation11NumberCacheILi2EEE", !522, i64 0, !7, i64 64, !109, i64 72, !7, i64 96, !109, i64 104}
!522 = !{!"_ZTSN6dealii8internal13Triangulation11NumberCacheILi1EEE", !7, i64 0, !109, i64 8, !7, i64 32, !109, i64 40}
!523 = !{!"_ZTSNSt7__cxx114listIPN6dealii13TriangulationILi3ELi3EE18RefinementListenerESaIS5_EEE", !524, i64 0}
!524 = !{!"_ZTSNSt7__cxx1110_List_baseIPN6dealii13TriangulationILi3ELi3EE18RefinementListenerESaIS5_EEE", !525, i64 0}
!525 = !{!"_ZTSNSt7__cxx1110_List_baseIPN6dealii13TriangulationILi3ELi3EE18RefinementListenerESaIS5_EE10_List_implE", !15, i64 0}
!526 = !{!527, !12, i64 0}
!527 = !{!"_ZTSNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!528 = !{!73, !12, i64 8}
!529 = distinct !{!529, !193, !194}
!530 = distinct !{!530, !194, !193}
!531 = distinct !{!531, !193, !194}
!532 = distinct !{!532, !194, !193}
!533 = !{!172, !12, i64 0}
!534 = !{!129, !130, i64 56}
!535 = !{!104, !12, i64 0}
!536 = !{!537}
!537 = distinct !{!537, !538}
!538 = distinct !{!538, !"LVerDomain"}
!539 = !{!540}
!540 = distinct !{!540, !538}
!541 = !{!542}
!542 = distinct !{!542, !538}
!543 = distinct !{!543, !193, !194}
!544 = distinct !{!544, !193}
!545 = !{!546}
!546 = distinct !{!546, !547, !"_ZNK6dealii15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEE4faceEj: argument 0"}
!547 = distinct !{!547, !"_ZNK6dealii15DoFCellAccessorINS_10DoFHandlerILi3ELi3EEEE4faceEj"}
!548 = !{!549, !7, i64 0}
!549 = !{!"_ZTSN6dealii16TriaAccessorBaseILi2ELi3ELi3EEE", !7, i64 0, !12, i64 8}
!550 = !{!549, !12, i64 8}
!551 = !{!552, !12, i64 16}
!552 = !{!"_ZTSN6dealii11DoFAccessorILi2ENS_10DoFHandlerILi3ELi3EEEEE", !553, i64 0, !12, i64 16}
!553 = !{!"_ZTSN6dealii12TriaAccessorILi2ELi3ELi3EEE", !549, i64 0}
!554 = !{!555}
!555 = distinct !{!555, !556, !"_ZN5boost4bindINS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi2EEENS2_9null_typeESH_SH_SH_SH_SH_SH_EERNS4_12SparseMatrixIdEERKSt3mapIhPKNS4_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS4_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEESI_NS_17reference_wrapperISK_EENS1H_ISY_EENS1H_IS11_EENS1H_IS15_EESQ_NS1H_IS17_EES1B_NS1H_IS1D_EEEENS_3_bi6bind_tINS1O_11unspecifiedET_NS1O_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1R_S1T_S1U_S1V_S1W_S1X_S1Y_S1Z_S20_S21_: argument 0"}
!556 = distinct !{!556, !"_ZN5boost4bindINS_8functionIFvNS_6tuples5tupleIRKN6dealii7MappingILi3ELi3EEERKNS4_10DoFHandlerILi3ELi3EEERKNS4_10QuadratureILi2EEENS2_9null_typeESH_SH_SH_SH_SH_SH_EERNS4_12SparseMatrixIdEERKSt3mapIhPKNS4_8FunctionILi3EEESt4lessIhESaISt4pairIKhSQ_EEERNS4_6VectorIdEERSt6vectorIjSaIjEESQ_RKS15_NS4_13MatrixCreator13IteratorRangeISA_EERNS4_7Threads16DummyThreadMutexEEEESI_NS_17reference_wrapperISK_EENS1H_ISY_EENS1H_IS11_EENS1H_IS15_EESQ_NS1H_IS17_EES1B_NS1H_IS1D_EEEENS_3_bi6bind_tINS1O_11unspecifiedET_NS1O_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1R_S1T_S1U_S1V_S1W_S1X_S1Y_S1Z_S20_S21_"}
!557 = !{!558}
!558 = distinct !{!558, !559, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_: argument 0"}
!559 = distinct !{!559, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_10DoFHandlerILi3ELi3EEEEEE3actERS7_"}
!560 = !{!561}
!561 = distinct !{!561, !562, !"_ZN6dealii7Threads5spawnIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_NS4_IT0_T1_T2_T3_T4_T5_T6_T7_T8_SI_EELi9EEEPFS1H_S1I_S1J_S1K_S1L_S1M_S1N_S1O_S1P_S1Q_E: argument 0"}
!562 = distinct !{!562, !"_ZN6dealii7Threads5spawnIvN5boost6tuples5tupleIRKNS_2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi2EEENS3_9null_typeESI_SI_SI_SI_SI_SI_EERNS_12SparseMatrixIdEERKSt3mapIhPKNS_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS_13MatrixCreator13IteratorRangeISB_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_NS4_IT0_T1_T2_T3_T4_T5_T6_T7_T8_SI_EELi9EEEPFS1H_S1I_S1J_S1K_S1L_S1M_S1N_S1O_S1P_S1Q_E"}
!563 = !{!564, !12, i64 0}
!564 = !{!"_ZTSN5boost6detail8function13basic_vtable9IvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS6_10DoFHandlerILi3ELi3EEERKNS6_11QCollectionILi2EEENS3_9null_typeESJ_SJ_SJ_SJ_SJ_SJ_EERNS5_12SparseMatrixIdEERKSt3mapIhPKNS5_8FunctionILi3EEESt4lessIhESaISt4pairIKhSS_EEERNS5_6VectorIdEERSt6vectorIjSaIjEESS_RKS17_NS5_13MatrixCreator13IteratorRangeISC_EERNS5_7Threads16DummyThreadMutexEEE", !29, i64 0, !12, i64 8}
!565 = !{!566, !12, i64 0}
!566 = !{!"_ZTSN5boost6tuples4consIRKN6dealii2hp17MappingCollectionILi3ELi3EEENS1_IRKNS3_10DoFHandlerILi3ELi3EEENS1_IRKNS3_11QCollectionILi2EEENS0_9null_typeEEEEEEE", !12, i64 0, !567, i64 8}
!567 = !{!"_ZTSN5boost6tuples4consIRKN6dealii2hp10DoFHandlerILi3ELi3EEENS1_IRKNS3_11QCollectionILi2EEENS0_9null_typeEEEEE", !12, i64 0, !568, i64 8}
!568 = !{!"_ZTSN5boost6tuples4consIRKN6dealii2hp11QCollectionILi2EEENS0_9null_typeEEE", !12, i64 0}
!569 = !{!567, !12, i64 0}
!570 = !{!568, !12, i64 0}
!571 = !{!339, !12, i64 8}
!572 = !{!55, !7, i64 8}
!573 = !{!176, !12, i64 32}
!574 = !{!575}
!575 = distinct !{!575, !576, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj: argument 0"}
!576 = distinct !{!576, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj"}
!577 = !{!578, !12, i64 72}
!578 = !{!"_ZTSN6dealii9TableBaseILi3EN5boost10shared_ptrINS_12FEFaceValuesILi3ELi3EEEEEEE", !67, i64 0, !12, i64 72, !7, i64 80, !344, i64 84}
!579 = !{!580, !12, i64 0}
!580 = !{!"_ZTSN5boost10shared_ptrIN6dealii12FEFaceValuesILi3ELi3EEEEE", !12, i64 0, !40, i64 8}
!581 = !{!582}
!582 = distinct !{!582, !583, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj: argument 0"}
!583 = distinct !{!583, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj"}
!584 = !{!585}
!585 = distinct !{!585, !586}
!586 = distinct !{!586, !"LVerDomain"}
!587 = !{!588}
!588 = distinct !{!588, !586}
!589 = !{!590}
!590 = distinct !{!590, !586}
!591 = !{!592}
!592 = distinct !{!592, !586}
!593 = distinct !{!593, !193, !194}
!594 = distinct !{!594, !193}
!595 = !{!596}
!596 = distinct !{!596, !597, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj: argument 0"}
!597 = distinct !{!597, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj"}
!598 = !{!599}
!599 = distinct !{!599, !600}
!600 = distinct !{!600, !"LVerDomain"}
!601 = !{!602}
!602 = distinct !{!602, !600}
!603 = !{!604}
!604 = distinct !{!604, !600}
!605 = distinct !{!605, !193, !194}
!606 = distinct !{!606, !193}
!607 = !{!608}
!608 = distinct !{!608, !609}
!609 = distinct !{!609, !"LVerDomain"}
!610 = !{!611}
!611 = distinct !{!611, !609}
!612 = distinct !{!612, !193, !194}
!613 = distinct !{!613, !193}
!614 = !{!615}
!615 = distinct !{!615, !616, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj: argument 0"}
!616 = distinct !{!616, !"_ZNK6dealii15DoFCellAccessorINS_2hp10DoFHandlerILi3ELi3EEEE4faceEj"}
!617 = !{!618, !12, i64 16}
!618 = !{!"_ZTSN6dealii11DoFAccessorILi2ENS_2hp10DoFHandlerILi3ELi3EEEEE", !553, i64 0, !12, i64 16}
!619 = distinct !{!619, !620}
!620 = !{!"llvm.loop.unswitch.partial.disable"}
!621 = !{!622}
!622 = distinct !{!622, !623, !"_ZN5boost4bindINS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi2EEENS2_9null_typeESI_SI_SI_SI_SI_SI_EERNS4_12SparseMatrixIdEERKSt3mapIhPKNS4_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS4_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEESJ_NS_17reference_wrapperISL_EENS1I_ISZ_EENS1I_IS12_EENS1I_IS16_EESR_NS1I_IS18_EES1C_NS1I_IS1E_EEEENS_3_bi6bind_tINS1P_11unspecifiedET_NS1P_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1S_S1U_S1V_S1W_S1X_S1Y_S1Z_S20_S21_S22_: argument 0"}
!623 = distinct !{!623, !"_ZN5boost4bindINS_8functionIFvNS_6tuples5tupleIRKN6dealii2hp17MappingCollectionILi3ELi3EEERKNS5_10DoFHandlerILi3ELi3EEERKNS5_11QCollectionILi2EEENS2_9null_typeESI_SI_SI_SI_SI_SI_EERNS4_12SparseMatrixIdEERKSt3mapIhPKNS4_8FunctionILi3EEESt4lessIhESaISt4pairIKhSR_EEERNS4_6VectorIdEERSt6vectorIjSaIjEESR_RKS16_NS4_13MatrixCreator13IteratorRangeISB_EERNS4_7Threads16DummyThreadMutexEEEESJ_NS_17reference_wrapperISL_EENS1I_ISZ_EENS1I_IS12_EENS1I_IS16_EESR_NS1I_IS18_EES1C_NS1I_IS1E_EEEENS_3_bi6bind_tINS1P_11unspecifiedET_NS1P_9list_av_9IT0_T1_T2_T3_T4_T5_T6_T7_T8_E4typeEEES1S_S1U_S1V_S1W_S1X_S1Y_S1Z_S20_S21_S22_"}
!624 = !{!625}
!625 = distinct !{!625, !626, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_: argument 0"}
!626 = distinct !{!626, !"_ZN6dealii7Threads8internal14maybe_make_refINS_13MatrixCreator13IteratorRangeINS_2hp10DoFHandlerILi3ELi3EEEEEE3actERS8_"}
!627 = !{!628}
!628 = distinct !{!628, !629, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSU_9null_typeES13_S13_EELi7EEEPFSS_SW_SX_SY_SZ_S10_S11_S12_E: argument 0"}
!629 = distinct !{!629, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSU_9null_typeES13_S13_EELi7EEEPFSS_SW_SX_SY_SZ_S10_S11_S12_E"}
!630 = !{!108, !12, i64 0}
!631 = !{!632}
!632 = distinct !{!632, !633, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSJ_NS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSY_9null_typeEEELi9EEEPFSW_S10_S11_S12_S13_S14_S15_S16_S17_S18_E: argument 0"}
!633 = distinct !{!633, !"_ZN6dealii7Threads5spawnIvRKNS_7MappingILi3ELi3EEERKNS_10DoFHandlerILi3ELi3EEERKNS_10QuadratureILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSJ_NS_13MatrixCreator13IteratorRangeIS7_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSY_9null_typeEEELi9EEEPFSW_S10_S11_S12_S13_S14_S15_S16_S17_S18_E"}
!634 = !{!635}
!635 = distinct !{!635, !636, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSV_9null_typeES14_S14_EELi7EEEPFST_SX_SY_SZ_S10_S11_S12_S13_E: argument 0"}
!636 = distinct !{!636, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEEPKNS_8FunctionILi3EEENS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_NSV_9null_typeES14_S14_EELi7EEEPFST_SX_SY_SZ_S10_S11_S12_S13_E"}
!637 = !{!84, !12, i64 0}
!638 = !{!639}
!639 = distinct !{!639, !640, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSK_NS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSZ_9null_typeEEELi9EEEPFSX_S11_S12_S13_S14_S15_S16_S17_S18_S19_E: argument 0"}
!640 = distinct !{!640, !"_ZN6dealii7Threads5spawnIvRKNS_2hp17MappingCollectionILi3ELi3EEERKNS2_10DoFHandlerILi3ELi3EEERKNS2_11QCollectionILi3EEERNS_12SparseMatrixIdEERKNS_8FunctionILi3EEERNS_6VectorIdEEPSK_NS_13MatrixCreator13IteratorRangeIS8_EERNS0_16DummyThreadMutexEEENS0_8internal16fun_encapsulatorIT_N5boost6tuples5tupleIT0_T1_T2_T3_T4_T5_T6_T7_T8_NSZ_9null_typeEEELi9EEEPFSX_S11_S12_S13_S14_S15_S16_S17_S18_S19_E"}
!641 = !{!225, !12, i64 16}
!642 = !{!643, !12, i64 8}
!643 = !{!"_ZTSSt9type_info", !12, i64 8}
!644 = !{!645, !12, i64 0}
!645 = !{!"_ZTSN5boost10shared_ptrIN6dealii7Threads8internal16ThreadDescriptorIvEEEE", !12, i64 0, !40, i64 8}
!646 = !{!647, !12, i64 24}
!647 = !{!"_ZTSN5boost6detail17sp_counted_impl_pIN6dealii7Threads8internal16ThreadDescriptorIvEEEE", !35, i64 0, !12, i64 24}
!648 = !{!649, !12, i64 0}
!649 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii7MappingILi3ELi3EEEEE", !12, i64 0}
!650 = !{!651, !12, i64 0}
!651 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii10DoFHandlerILi3ELi3EEEEE", !12, i64 0}
!652 = !{!653, !12, i64 0}
!653 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii10QuadratureILi3EEEEE", !12, i64 0}
!654 = !{!655, !12, i64 0}
!655 = !{!"_ZTSN5boost17reference_wrapperIN6dealii12SparseMatrixIdEEEE", !12, i64 0}
!656 = !{!657, !12, i64 0}
!657 = !{!"_ZTSN5boost17reference_wrapperIN6dealii7Threads16DummyThreadMutexEEE", !12, i64 0}
!658 = !{!659, !12, i64 0}
!659 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !12, i64 0}
!660 = !{!661, !12, i64 0}
!661 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !659, i64 0, !16, i64 8, !8, i64 16}
!662 = !{!661, !16, i64 8}
!663 = !{!28, !12, i64 8}
!664 = !{!665}
!665 = distinct !{!665, !666, !"_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_: argument 0"}
!666 = distinct !{!666, !"_ZN5boost17enable_error_infoINS_17bad_function_callEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_"}
!667 = !{!668, !7, i64 32}
!668 = !{!"_ZTSN5boost9exceptionE", !669, i64 8, !12, i64 16, !12, i64 24, !7, i64 32}
!669 = !{!"_ZTSN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEE", !12, i64 0}
!670 = !{!671}
!671 = distinct !{!671, !672, !"_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_: argument 0"}
!672 = distinct !{!672, !"_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_17bad_function_callEEEEENS1_10clone_implIT_EERKS6_"}
!673 = !{!669, !12, i64 0}
!674 = !{!232, !12, i64 8}
!675 = !{!676, !12, i64 0}
!676 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii8FunctionILi3EEEEE", !12, i64 0}
!677 = !{!678, !12, i64 0}
!678 = !{!"_ZTSN5boost17reference_wrapperIN6dealii6VectorIdEEEE", !12, i64 0}
!679 = !{!237, !12, i64 8}
!680 = !{!681, !12, i64 0}
!681 = !{!"_ZTSN5boost17reference_wrapperIN6dealii12SparseMatrixIfEEEE", !12, i64 0}
!682 = !{!279, !12, i64 8}
!683 = !{!308, !12, i64 8}
!684 = distinct !{!684, !193, !194}
!685 = distinct !{!685, !194, !193}
!686 = distinct !{!686, !193, !194}
!687 = distinct !{!687, !194, !193}
!688 = distinct !{!688, !193, !194}
!689 = distinct !{!689, !194, !193}
!690 = distinct !{!690, !193, !194}
!691 = distinct !{!691, !194, !193}
!692 = distinct !{!692, !193, !194}
!693 = distinct !{!693, !194, !193}
!694 = distinct !{!694, !193, !194}
!695 = distinct !{!695, !194, !193}
!696 = distinct !{!696, !193, !194}
!697 = distinct !{!697, !194, !193}
!698 = distinct !{!698, !193, !194}
!699 = distinct !{!699, !194, !193}
!700 = !{!129, !7, i64 0}
!701 = !{!129, !7, i64 4}
!702 = !{!129, !7, i64 8}
!703 = !{!129, !7, i64 12}
!704 = !{!705}
!705 = distinct !{!705, !706, !"_ZNK6dealii12TriaAccessorILi3ELi3ELi3EE4quadEj: argument 0"}
!706 = distinct !{!706, !"_ZNK6dealii12TriaAccessorILi3ELi3ELi3EE4quadEj"}
!707 = !{!708, !12, i64 0}
!708 = !{!"_ZTSNSt12_Vector_baseIN6dealii8internal13Triangulation10TriaObjectILi2EEESaIS4_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!709 = !{!710}
!710 = distinct !{!710, !711, !"_ZNK6dealii12TriaAccessorILi2ELi3ELi3EE4lineEj: argument 0"}
!711 = distinct !{!711, !"_ZNK6dealii12TriaAccessorILi2ELi3ELi3EE4lineEj"}
!712 = !{!713, !12, i64 0}
!713 = !{!"_ZTSNSt12_Vector_baseIN6dealii8internal13Triangulation10TriaObjectILi1EEESaIS4_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!714 = !{!715}
!715 = distinct !{!715, !716, !"_ZNK6dealii11DoFAccessorILi3ENS_2hp10DoFHandlerILi3ELi3EEEE4lineEj: argument 0"}
!716 = distinct !{!716, !"_ZNK6dealii11DoFAccessorILi3ENS_2hp10DoFHandlerILi3ELi3EEEE4lineEj"}
!717 = !{!718, !715}
!718 = distinct !{!718, !719, !"_ZNK6dealii12TriaAccessorILi3ELi3ELi3EE4quadEj: argument 0"}
!719 = distinct !{!719, !"_ZNK6dealii12TriaAccessorILi3ELi3ELi3EE4quadEj"}
!720 = !{!721}
!721 = distinct !{!721, !722, !"_ZNK6dealii12TriaAccessorILi3ELi3ELi3EE4quadEj: argument 0"}
!722 = distinct !{!722, !"_ZNK6dealii12TriaAccessorILi3ELi3ELi3EE4quadEj"}
!723 = !{!150, !150, i64 0}
!724 = !{!725, !12, i64 136}
!725 = !{!"_ZTSN6dealii2hp10DoFHandlerILi3ELi3EEE", !67, i64 0, !726, i64 72, !727, i64 80, !337, i64 96, !728, i64 112, !12, i64 136, !7, i64 144, !109, i64 152, !109, i64 176, !731, i64 200}
!726 = !{!"_ZTSN6dealii13TriangulationILi3ELi3EE18RefinementListenerE"}
!727 = !{!"_ZTSN6dealii12SmartPointerIKNS_13TriangulationILi3ELi3EEEEE", !12, i64 0, !12, i64 8}
!728 = !{!"_ZTSSt6vectorIPN6dealii8internal2hp8DoFLevelILi3EEESaIS5_EE", !729, i64 0}
!729 = !{!"_ZTSSt12_Vector_baseIPN6dealii8internal2hp8DoFLevelILi3EEESaIS5_EE", !730, i64 0}
!730 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal2hp8DoFLevelILi3EEESaIS5_EE12_Vector_implE", !351, i64 0}
!731 = !{!"_ZTSSt6vectorIPS_IbSaIbEESaIS2_EE", !732, i64 0}
!732 = !{!"_ZTSSt12_Vector_baseIPSt6vectorIbSaIbEESaIS3_EE", !733, i64 0}
!733 = !{!"_ZTSNSt12_Vector_baseIPSt6vectorIbSaIbEESaIS3_EE12_Vector_implE", !734, i64 0}
!734 = !{!"_ZTSNSt12_Vector_baseIPSt6vectorIbSaIbEESaIS3_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!735 = !{!736}
!736 = distinct !{!736, !737, !"_ZNK6dealii11DoFAccessorILi3ENS_2hp10DoFHandlerILi3ELi3EEEE4quadEj: argument 0"}
!737 = distinct !{!737, !"_ZNK6dealii11DoFAccessorILi3ENS_2hp10DoFHandlerILi3ELi3EEEE4quadEj"}
!738 = !{!739, !12, i64 0}
!739 = !{!"_ZTSNSt12_Vector_baseIN5boost10shared_ptrIKN6dealii10QuadratureILi3EEEEESaIS6_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!740 = !{!739, !12, i64 8}
!741 = !{!742, !12, i64 0}
!742 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii2hp17MappingCollectionILi3ELi3EEEEE", !12, i64 0}
!743 = !{!744, !12, i64 0}
!744 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii2hp10DoFHandlerILi3ELi3EEEEE", !12, i64 0}
!745 = !{!746, !12, i64 0}
!746 = !{!"_ZTSN5boost17reference_wrapperIKN6dealii2hp11QCollectionILi3EEEEE", !12, i64 0}
!747 = !{!331, !12, i64 8}
!748 = !{!394, !12, i64 8}
!749 = !{!424, !12, i64 8}
!750 = !{!465, !12, i64 8}
!751 = !{!752}
!752 = distinct !{!752, !753, !"_ZNK6dealii12TriaAccessorILi2ELi3ELi3EE4lineEj: argument 0"}
!753 = distinct !{!753, !"_ZNK6dealii12TriaAccessorILi2ELi3ELi3EE4lineEj"}
!754 = !{!755}
!755 = distinct !{!755, !756, !"_ZNK6dealii11DoFAccessorILi2ENS_10DoFHandlerILi3ELi3EEEE4lineEj: argument 0"}
!756 = distinct !{!756, !"_ZNK6dealii11DoFAccessorILi2ENS_10DoFHandlerILi3ELi3EEEE4lineEj"}
!757 = !{!758, !12, i64 128}
!758 = !{!"_ZTSN6dealii10DoFHandlerILi3ELi3EEE", !67, i64 0, !727, i64 72, !64, i64 88, !759, i64 104, !12, i64 128, !7, i64 136, !109, i64 144}
!759 = !{!"_ZTSSt6vectorIPN6dealii8internal10DoFHandler8DoFLevelILi3EEESaIS5_EE", !760, i64 0}
!760 = !{!"_ZTSSt12_Vector_baseIPN6dealii8internal10DoFHandler8DoFLevelILi3EEESaIS5_EE", !761, i64 0}
!761 = !{!"_ZTSNSt12_Vector_baseIPN6dealii8internal10DoFHandler8DoFLevelILi3EEESaIS5_EE12_Vector_implE", !143, i64 0}
!762 = !{!763, !12, i64 0}
!763 = !{!"_ZTSN5boost17reference_wrapperIKSt3mapIhPKN6dealii8FunctionILi3EEESt4lessIhESaISt4pairIKhS6_EEEEE", !12, i64 0}
!764 = !{!765, !12, i64 0}
!765 = !{!"_ZTSN5boost17reference_wrapperISt6vectorIjSaIjEEEE", !12, i64 0}
!766 = !{!767, !12, i64 0}
!767 = !{!"_ZTSN5boost17reference_wrapperIKSt6vectorIjSaIjEEEE", !12, i64 0}
!768 = !{!498, !12, i64 8}
!769 = !{!770}
!770 = distinct !{!770, !771, !"_ZNK6dealii12TriaAccessorILi2ELi3ELi3EE4lineEj: argument 0"}
!771 = distinct !{!771, !"_ZNK6dealii12TriaAccessorILi2ELi3ELi3EE4lineEj"}
!772 = !{!773}
!773 = distinct !{!773, !774, !"_ZNK6dealii11DoFAccessorILi2ENS_2hp10DoFHandlerILi3ELi3EEEE4lineEj: argument 0"}
!774 = distinct !{!774, !"_ZNK6dealii11DoFAccessorILi2ENS_2hp10DoFHandlerILi3ELi3EEEE4lineEj"}
!775 = !{!776, !12, i64 0}
!776 = !{!"_ZTSNSt12_Vector_baseIN5boost10shared_ptrIKN6dealii10QuadratureILi2EEEEESaIS6_EE17_Vector_impl_dataE", !12, i64 0, !12, i64 8, !12, i64 16}
!777 = !{!776, !12, i64 8}
!778 = !{!564, !12, i64 8}
