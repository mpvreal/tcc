; ModuleID = 'benchmark.cpp'
source_filename = "benchmark.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@_ZN3pov14Benchmark_FileE = dso_local global [18063 x i8] c"#version 3.5;\0A\0A#include \22functions.inc\22\0A#include \22colors.inc\22\0A#include \22logo.inc\22\0A\0A#declare use_radiosity = false;\0A#declare use_photons = true;\0A#declare use_area_light = true;\0A\0A#declare show_clouds = true;\0A#declare show_objects = true;\0A\0A#declare Rad = 50000;\0A\0Aglobal_settings {\0A   max_trace_level 12\0A   assumed_gamma 1.0\0A\0A   #if (use_radiosity=true)\0A\0A      radiosity {\0A         pretrace_start 0.08\0A         pretrace_end 0.01\0A         count 80\0A\0A         nearest_count 5\0A         error_bound 0.5\0A         recursion_limit 1\0A\0A         low_error_factor .5\0A         gray_threshold 0.0\0A         minimum_reuse 0.015\0A         brightness 0.7\0A\0A         adc_bailout 0.01/2\0A\0A         normal on\0A      }\0A\0A   #end\0A\0A   #if (use_photons=true)\0A      photons { spacing 0.007 }\0A   #end\0A\0A}\0A\0A#if (use_radiosity=false)\0A   #default {finish {ambient 0.02}}\0A#else\0A   #default {finish {ambient 0.00}}\0A#end\0A\0Acamera {\0A   location  <3.2, 3.2, 1.8>\0A   direction y\0A   sky       z\0A   up        z\0A   right     -x\0A   look_at   <-1, -1, 0.9>\0A   angle     45\0A}\0A\0A\0Alight_source {\0A   <-0.7, 0.83, 0.24>*150000\0A   color rgb <3.43,2.87,1.95>\0A   #if (use_area_light=true)\0A      area_light 4000*x 4000*y  4,4\0A      jitter\0A      orient\0A      circular\0A   #end\0A\0A   media_attenuation on\0A   media_interaction on\0A\0A   photons {\0A      reflection on\0A      refraction on\0A   }\0A}\0A\0A#if (use_radiosity=false)\0A   light_source {\0A      <0.9, -0.6, 0.5>*150000\0A      color rgb 0.35\0A\0A      shadowless\0A   }\0A#end\0A\0Afog{\0A   fog_type 2\0A   fog_alt 1.5\0A   fog_offset 0\0A   color rgbt <0.75, 0.80, 0.86, 0.2>\0A   distance 400\0A   up z\0A}\0A\0A#declare RMF = function{ f_ridged_mf(x, y, z, 0.07, 2.2,  7, 0.6, 0.9, 1)}\0A\0A#declare M_Watx4 =\0Amaterial {\0A   texture {\0A      pigment { color rgbt <0.21, 0.20, 0.3, 0.96> }\0A      finish {\0A         diffuse 0.0\0A         ambient 0.0\0A\0A         reflection {\0A            0.1, 0.95\0A            fresnel on\0A            exponent 0.8\0A         }\0A\0A         conserve_energy\0A\0A         specular 0.1\0A         roughness 0.007\0A         metallic\0A      }\0A      normal{\0A         function { RMF(x, y, z) } 0.2\0A         scale 0.07\0A      }\0A   }\0A   interior {\0A      ior 1.31\0A      fade_distance 0.8\0A      fade_power 1001.0\0A      fade_color <0.02, 0.20, 0.06>\0A   }\0A}\0A\0Abox {              // --- Water ---\0A   <-1.95,  -1.65, 0.42>, < 1.95,  1.65, -5.5>\0A\0A   material { M_Watx4 }\0A   hollow on\0A\0A   photons { collect off }\0A}\0A\0A#declare fn_RMF = function{ f_ridged_mf(x, y, z, 0.1, 3.1, 8 ,0.7, 0.8, 2) }\0A\0A\0Aplane {            // --- floor ---\0A   z, -0.3\0A\0A   texture {\0A      pigment { color rgb <1.0, 0.85, 0.6> }\0A      finish {\0A         diffuse 0.7\0A         specular 0.1\0A      }\0A      normal {\0A         function { fn_RMF(x, y, z) } 0.3\0A         scale 8\0A      }\0A   }\0A\0A   clipped_by {\0A      box { <-1.95,  -1.65, 1>, < 1.95,  1.65, -1> inverse }\0A   }\0A\0A   photons { collect off }\0A}\0A\0A\0Aisosurface {\0A   function {\0A      z - fn_RMF(x, y, z)*0.07\0A   }\0A\0A   max_gradient 1.3\0A\0A   contained_by { box { <-15, -15, 0.0>, <15, 15, 0.2> } }\0A\0A   texture {\0A      pigment { color rgb <1.0, 0.85, 0.6> }\0A      finish {\0A         diffuse 0.7\0A         specular 0.1\0A      }\0A   }\0A\0A   scale 8\0A   translate -0.16*z\0A\0A   clipped_by {\0A      box { <-1.95,  -1.65, 1>, < 1.95,  1.65, -1> inverse }\0A   }\0A\0A   photons { collect off }\0A}\0A\0Asphere {           // --- Sky ---\0A   <0, 0, 0>, 1\0A   texture {\0A      pigment {\0A         gradient z\0A         pigment_map {\0A            [0.00 color rgb <0.6667, 0.7255, 0.7725>]\0A            [0.19\0A               spherical\0A               color_map {\0A                  [0.08 color rgb <0.33, 0.37, 0.90> ]\0A                  [0.14 color rgb <0.3210, 0.53, 0.9259> ]\0A                  [0.26 color rgb <0.3610, 0.57, 0.9259> ]\0A                  [0.50 color rgb < 0.880, 0.935, 0.976 > ]\0A               }\0A               scale 1.8\0A               translate <-0.7, 0.7, 0.24>\0A            ]\0A         }\0A      }\0A      finish {\0A         diffuse 0\0A         ambient 1\0A      }\0A   }\0A   scale Rad*<20, 20, 4>\0A   translate -2*z\0A   no_shadow\0A   hollow on\0A\0A   photons { collect off pass_through }\0A}\0A\0A#if (show_clouds)\0A\0A// from mick\0A\0Adifference {\0A   sphere { 0,Rad}\0A   sphere {0,Rad-15000}\0A   material{\0A      texture{\0A         pigment{ rgbf 1 }\0A         finish {\0A            ambient 0\0A            diffuse 0\0A         }\0A      }\0A      interior{\0A         media{\0A            scattering {2,<.013,.012,.008>/1.3 extinction 1/1.3 }\0A            method 3\0A            samples 7,7\0A            intervals 1\0A\0A            density { // one\0A               wrinkles\0A               ramp_wave\0A\0A               noise_generator 1\0A\0A               color_map {\0A                  [0 rgb 0]\0A                  [0.5 rgb 0]\0A                  [0.7 rgb 0.275]\0A                  [1 rgb 0.475]\0A               } // color_map\0A\0A               scale <10000,9000,5000>/3\0A               rotate z*29\0A               translate <1000,0,Rad-30000>\0A            } // density\0A\0A            density { // two\0A               marble\0A               warp { turbulence 1.65 octaves 7 }\0A               noise_generator 1\0A\0A               color_map {\0A                  [0 rgb 0]\0A                  [0.4 rgb 0]\0A                  [0.85 rgb 0.25]\0A                  [1 rgb 0.5]\0A               } // color_map\0A\0A               scale <10000,7500,5000>*5\0A               rotate z*-25\0A               translate <0,0,Rad-30000>\0A            } // density\0A\0A         } // media\0A      } // interior\0A   } // material\0A   hollow\0A\0A   rotate z*70\0A   rotate y*15\0A   translate <0,0,32000-Rad>\0A   rotate -102*z\0A\0A   scale <1,1,0.4>\0A\0A   photons { collect off pass_through }\0A\0A} // difference\0A\0A#end\0A\0A#declare Metal_Texture =\0Atexture {\0A   pigment { color rgb <0.65, 0.55, 0.5> }\0A   finish {\0A      ambient 0.0\0A      diffuse 0.15\0A      specular 0.3\0A      metallic\0A      roughness 0.01\0A      reflection {\0A         0.8\0A         metallic\0A      }\0A   }\0A}\0A\0A#declare Stone_Tex =\0Atexture {\0A   pigment {\0A      crackle\0A      pigment_map {\0A         [0.03\0A            bozo\0A            color_map {\0A               [0 color rgb <0.2, 0.14, 0.05>]\0A               [1 color rgb <0.2, 0.14, 0.05>]\0A            }\0A            warp { turbulence 0.6 }\0A         ]\0A         [0.055\0A            granite\0A            color_map {\0A               [0.0 color rgb <1, 0.95, 0.9>]\0A               [0.5 color rgb <0.6, 0.5, 0.52>]\0A               [1.0 color rgb <0.9, 0.8, 0.7>]\0A            }\0A            warp { turbulence 0.4 lambda 2.4 octaves 8 }\0A            scale 0.5\0A         ]\0A      }\0A\0A      warp { turbulence 0.72 lambda 2.25 omega 0.53 octaves 9}\0A\0A      scale 0.3\0A   }\0A   finish {\0A      diffuse 0.55\0A      specular 0.1\0A   }\0A   normal {\0A      granite 0.15\0A      scale 0.06\0A   }\0A}\0A\0A#declare Stone_Tex2 =\0Atexture {\0A   pigment {\0A      crackle\0A      pigment_map {\0A         [0.03\0A            bozo\0A            color_map {\0A               [0 color rgb <0.1, 0.08, 0.2>]\0A               [1 color rgb <0.1, 0.08, 0.2>]\0A            }\0A            warp { turbulence 0.6 }\0A         ]\0A         [0.055\0A            granite\0A            color_map {\0A               [0.0 color rgb <1, 0.95, 0.9>]\0A               [0.5 color rgb <0.6, 0.5, 0.52>]\0A               [1.0 color rgb <0.9, 0.8, 0.7>]\0A            }\0A            warp { turbulence 0.4 lambda 2.4 octaves 8 }\0A            scale 1.2\0A         ]\0A      }\0A\0A      warp { turbulence 0.55 lambda 2.25 omega 0.53 octaves 9 }\0A\0A      scale 0.24\0A   }\0A   finish {\0A      diffuse 0.55\0A      specular 0.1\0A   }\0A   normal {\0A      granite 0.15\0A      scale 0.06\0A   }\0A}\0A\0A#declare Stone_Tex3 =\0Atexture {\0A   pigment {\0A      agate\0A      pigment_map {\0A         [0.3\0A            crackle\0A            color_map {\0A               [0.1 color rgb <0.3, 0.28, 0.4>]\0A               [0.2 color rgb <0.8, 0.7, 0.4>]\0A            }\0A            warp { turbulence 0.5 lambda 2.2 omega 0.52 octaves 8 }\0A            scale 0.3\0A         ]\0A         [0.5\0A            granite\0A            color_map {\0A               [0.0 color rgb <1, 0.95, 0.9>]\0A               [0.5 color rgb <0.3, 0.6, 0.52>]\0A               [1.0 color rgb <0.3, 0.8, 0.7>]\0A            }\0A            warp { turbulence 0.4 lambda 2.4 octaves 8 }\0A         ]\0A      }\0A\0A      warp { turbulence 0.55 }\0A\0A      scale 0.24\0A   }\0A   finish {\0A      diffuse 0.55\0A      specular 0.1\0A   }\0A   normal {\0A      granite 0.15\0A      scale 0.06\0A   }\0A}\0A\0A#declare Mat_Glass =\0Amaterial {\0A   texture {\0A      pigment { color rgbt 1 }\0A      finish {\0A         diffuse 0\0A         ambient 0\0A         specular 0.6\0A         metallic 0.5\0A         roughness 0.005\0A\0A         reflection {\0A            0.05, 0.95\0A            fresnel on\0A         }\0A\0A         conserve_energy\0A      }\0A   }\0A   interior {\0A      ior 1.5\0A      fade_distance 0.12\0A      fade_power 1001\0A      fade_color <0.6, 0.5, 0.7>\0A   }\0A}\0A\0A\0A#declare Socket =\0Aunion {\0A   difference {\0A      cylinder { -5*z, -0.04*z, 0.8 }\0A      cylinder { -6*z, 0, 0.3 }\0A\0A      #declare Cnt = 0;\0A\0A      #while (Cnt<360)\0A\0A         merge {\0A            cylinder { < 0.0,  0.0, -0.24>, < 1.0,  0.0, -0.24>, 0.1 }\0A            box { < 0.0,  -0.1, -0.24>, < 1.0,  0.1, -6> }\0A\0A            rotate Cnt*z\0A         }\0A\0A         #declare Cnt = Cnt+30;\0A      #end\0A   }\0A\0A   #declare Cnt = 0;\0A\0A   #while (Cnt<360)\0A\0A      union {\0A         cylinder { < 0.8,  0.0, -0.04>, < 0.8,  0.0, -5>, 0.05 }\0A         cylinder { < 0.8,  0.0, -0.04>, < 0.8,  0.0, -0.01>, 0.07 }\0A\0A         rotate 15*z\0A         rotate Cnt*z\0A      }\0A\0A      #declare Cnt = Cnt+30;\0A   #end\0A\0A   cylinder { -0.04*z, 0, 0.86 }\0A   torus {\0A      0.83, 0.03\0A      rotate 90*x\0A   }\0A}\0A\0A#declare Pos1 = < 0.0,  0.0, 0.6>;\0A#declare Pos2 = <-2.4, -0.8, 1.0>;\0A#declare Pos3 = <-1.4, -2.8, 1.3>;\0A#declare Pos4 = < 1.4,  0.6, 0.5>;\0A\0A#declare Pos5 = <-10, -5, 1.5>;\0A\0Aobject { Socket translate Pos1 texture { Stone_Tex } }\0A\0Aobject { Socket translate Pos2 texture { Stone_Tex } }\0A\0Aobject { Socket scale 0.8 translate Pos3 texture { Stone_Tex } }\0A\0Aobject { Socket scale 0.4 translate Pos4 texture { Stone_Tex } }\0A\0Aobject { Socket scale 2 translate Pos5 texture { Stone_Tex } }\0A\0Adifference {\0A   box { <-2.0,  -1.7, 0.5>, < 2.0,  1.7, -6> }\0A   box { <-1.9,  -1.6, 1.0>, < 1.9,  1.6, -5> }\0A\0A   texture {\0A      Stone_Tex2\0A   }\0A}\0A\0A#if (show_objects)\0A\0A#declare POV_Text =\0Atext {\0A   ttf\0A   \22timrom.ttf\22\0A   \22POV-Ray\22\0A   0.25,0\0A   scale 0.3\0A   rotate 90*x\0A   rotate -90*z\0A}\0A\0Aobject {\0A   POV_Text\0A   translate <-1.97,  0.86, 0.5>\0A   texture { Stone_Tex2 }\0A}\0A\0Aobject {\0A   POV_Text\0A   rotate 90*z\0A   translate <-0.5, -1.6, 0.5>\0A   texture { Stone_Tex2 }\0A}\0A\0A#end\0A\0A\0Aheight_field {\0A\0A   function 300,300 {\0A      pigment {\0A         function { 1-(min(pow(x*x + y*y, 0.25), 1) -0.0001) }\0A\0A         color_map {\0A            [0.0 rgb 0.0]\0A            [1.0 rgb 1.0]\0A         }\0A\0A         translate <0.5,0.5,0>\0A\0A         scale 0.45\0A\0A         warp { turbulence 0.455 }\0A\0A         scale 3\0A         warp { turbulence 0.2 lambda 2.2 octaves 8 }\0A         scale 1/3\0A\0A      }\0A   }\0A\0A   water_level 0.02\0A\0A   rotate 90*x\0A\0A   rotate 43*z\0A\0A   scale <5, 5, 1.3>\0A   scale 2.6\0A\0A   texture {\0A      pigment {\0A         bozo\0A         color_map {\0A            [0.40 color rgb <0.6, 0.6, 0.7>*0.6]\0A            [0.58 color rgb <0.9, 0.6, 0.3>*0.6]\0A            [0.62 color rgb <0.2, 0.6, 0.1>*0.4]\0A         }\0A         warp { turbulence 0.4 }\0A         scale <0.2, 0.2, 3>\0A      }\0A      finish {\0A         diffuse 0.6\0A         specular 0.2\0A      }\0A   }\0A\0A   translate <-18, -13, -0.4>\0A}\0A\0A\0A#if (show_objects)\0A\0Adifference {\0A   cylinder { -0.0*z, 0.15*z, 0.7 }\0A   cylinder { -0.1*z, 0.25*z, 0.68 }\0A\0A   texture { Metal_Texture }\0A\0A   translate 0.6*z\0A\0A   photons { target reflection on }\0A}\0A\0A#declare fn_pigm =\0Afunction {\0A   pigment {\0A      bozo\0A      poly_wave 2\0A      color_map {\0A         [0 rgb 0][1 rgb 1]\0A      }\0A      warp {  turbulence 0.4 lambda 2.3 omega 0.52 }\0A\0A      scale 0.2\0A   }\0A}\0A\0A\0Aisosurface {\0A   function {\0A      (max(sqrt(x*x + y*y)-0.25, z-0.7))\0A\0A      - fn_pigm(x, y, z).gray*0.07\0A\0A   }\0A\0A   max_gradient 2.4\0A\0A   contained_by { box { <-0.35, -0.35, 0.0>, <0.35, 0.35, 0.8> } }\0A\0A   texture {\0A      pigment { color rgb <1, 0.45, 0.2> }\0A      finish {\0A         diffuse 0.6\0A         specular 0.2\0A      }\0A   }\0A\0A   translate Pos1\0A}\0A\0Aobject {\0A   Povray_Logo\0A\0A   rotate 90*x\0A   scale 0.4\0A   translate -0.2*y\0A\0A   texture {\0A      pigment { color rgb <0.65, 0.55, 0.9> }\0A      finish {\0A         ambient 0.0\0A         diffuse 0.15\0A         specular 0.3\0A         metallic\0A         roughness 0.01\0A         reflection {\0A            0.8\0A            metallic\0A         }\0A      }\0A      normal {\0A         bumps 0.3\0A         scale 0.3\0A      }\0A   }\0A\0A   rotate -25*z\0A\0A   translate 0.96*z\0A\0A   translate Pos1\0A}\0A\0A#end\0A\0A#if (show_objects)\0A\0A#declare rd = seed(45);\0A\0Aunion {\0A\0A   #declare Cnt = 0;\0A\0A   #while (Cnt<360)\0A\0A      superellipsoid {\0A         <rand(rd)*2, rand(rd)*2>\0A         texture { Metal_Texture }\0A         scale 0.12\0A         translate <0.6, 0.0, 0.12>\0A         rotate (Cnt+30)*z\0A      }\0A\0A      julia_fractal {\0A         < rand(rd), rand(rd)*0.6, -0.54, 0.2 >\0A         quaternion\0A         max_iteration 7\0A         precision 500\0A         scale 0.12\0A         translate <0.6, 0.0, 0.1>\0A         rotate Cnt*z\0A\0A         texture {\0A            pigment { color rgb <1, 0.4, 0.8> }\0A            finish {\0A               ambient 0\0A               diffuse 0.6\0A               specular 0.2\0A               reflection 0.2\0A            }\0A         }\0A      }\0A\0A      #declare Cnt = Cnt+60;\0A   #end\0A\0A   translate Pos2\0A}\0A\0A#end\0A\0A#if (show_objects)\0A\0Asphere {\0A   0, 0.24\0A\0A   translate 0.24*z\0A\0A   material { Mat_Glass }\0A\0A   photons { target reflection on refraction on }\0A\0A   translate Pos3\0A}\0A\0A#end\0A\0A#if (show_objects)\0A\0A#declare Letter =\0Atext {\0A   ttf\0A   \22timrom.ttf\22\0A   \22X\22\0A   1,0\0A   scale <1/0.7,1/0.66,1>\0A   translate <0,0,-0.5>\0A}\0A\0A#declare xPigm =\0Afunction {\0A   pigment {\0A      object {\0A         Letter\0A         pigment {rgb 1}\0A         pigment {rgb 0}\0A      }\0A      warp {repeat x}\0A      warp {repeat y}\0A      scale 1.00002\0A      translate < 0.000001,-0.00001, 0>\0A   }\0A}\0A\0A#declare XsinPigm =\0Afunction {\0A   pigment {\0A      function {xPigm(sin(x),pow(sin(y),2),z).gray}\0A   }\0A}\0A\0A#declare Fn_Obj =\0Adifference {\0A   cylinder {\0A      -2*y, 2*y, 2\0A      pigment {\0A         function{XsinPigm(x,y,z).gray}\0A         warp {planar}\0A         scale <0.5/pi, 1, 1>*0.5\0A         warp {\0A            cylindrical\0A            orientation z\0A            dist_exp 1\0A         }\0A         colour_map {\0A            [0, rgb 1]\0A            [1, rgbf 1]\0A         }\0A      }\0A      finish {\0A        diffuse 0.6\0A        specular 0.4\0A      }\0A   }\0A   cylinder {\0A      -1.9*y, 2.1*y, 1.9\0A      pigment {rgbf 1}\0A      finish {\0A        diffuse 0.6\0A        specular 0.4\0A      }\0A   }\0A\0A   translate 1.96*y\0A   rotate 90*x\0A   scale 0.12\0A}\0A\0Aobject {\0A   Fn_Obj\0A   translate Pos4\0A}\0A\0A#end\0A\0A\0A#if (show_objects)\0A\0A\0A#macro BuildWriteMesh2(VecArr, NormArr, UVArr, U, V)\0A\0A   #debug concat(\22\\n\\n Building mesh2: \\n   - vertex_vectors\\n\22)\0A   #local NumVertices = dimension_size(VecArr,1);\0A   mesh2 {\0A      vertex_vectors {\0A         NumVertices\0A         #local I = 0;\0A         #while (I<NumVertices)\0A            VecArr[I]\0A            #local I = I+1;\0A         #end\0A      }\0A\0A      #debug concat(\22   - normal_vectors\\n\22)\0A      #local NumVertices = dimension_size(NormArr,1);\0A      normal_vectors {\0A         NumVertices\0A         #local I = 0;\0A         #while (I<NumVertices)\0A            NormArr[I]\0A            #local I = I+1;\0A         #end\0A      }\0A\0A      #debug concat(\22   - uv_vectors\\n\22)\0A      #local NumVertices = dimension_size(NormArr,1);\0A      uv_vectors {\0A         NumVertices\0A         #local I = 0;\0A         #while (I<NumVertices)\0A            UVArr[I]\0A            #local I = I+1;\0A         #end\0A      }\0A\0A      #debug concat(\22   - face_indices\\n\22)\0A      #declare NumFaces = U*V*2;\0A      face_indices {\0A         NumFaces\0A         #local I = 0;\0A         #local H = 0;\0A         #while (I<V)\0A            #local J = 0;\0A            #while (J<U)\0A               #local Ind = (I*U)+I+J;\0A               <Ind, Ind+1, Ind+U+2>, <Ind, Ind+U+1, Ind+U+2>\0A               #local J = J+1;\0A               #local H = H+1;\0A            #end\0A            #local I = I+1;\0A         #end\0A      }\0A   }\0A#end\0A\0A#macro FnA(X)\0A   #if (X<0.13)\0A      0.5+sin(X*14)*0.4\0A   #else\0A      0.5+sin((X-0.13)*7.2)*0.3\0A   #end\0A#end\0A\0A#macro L_GetVN(ResSpl)\0A   #local I = 0;\0A   #local A = array[ResSpl+1][2]\0A   #while (I<=ResSpl)\0A      #local P0 = 0+<FnA(I/ResSpl), I/ResSpl, 0>;\0A      #if (P0.x=0 & P0.z=0)\0A         #local P0 = <1e-25,P0.y,1e-25>;\0A      #end\0A      #if (I=0)\0A         #local P1 = 0+<FnA(((I-0.5)/ResSpl)), I/ResSpl, 0>;\0A         #local P2 = 0+<FnA(((I+0.5)/ResSpl)), I/ResSpl, 0>;\0A      #else\0A         #local P1 = P2;\0A         #local P2 = 0+<FnA(((I+0.5)/ResSpl)), I/ResSpl, 0>;\0A      #end\0A      #local P3 = vrotate(P0,<0,1,0>);\0A      #local P4 = vrotate(P0,<0,-1,0>);\0A      #local B1 = P4-P0;\0A      #local B2 = P2-P0;\0A      #local B3 = P3-P0;\0A      #local B4 = P1-P0;\0A      #local N1 = vcross(B1,B2);\0A      #local N2 = vcross(B2,B3);\0A      #local N3 = vcross(B3,B4);\0A      #local N4 = vcross(B4,B1);\0A      #local N = vnormalize((N1+N2+N3+N4)*-1);\0A      #local A[I][0] = P0;\0A      #local A[I][1] = N;\0A      #local I = I+1;\0A   #end\0A   A\0A#end\0A\0A#macro FnLathe (Rot, ResRot, ResSpl)\0A   #declare VNArr = L_GetVN (ResSpl)\0A   #local VecArr = array[(ResRot+1)*(ResSpl+1)]\0A   #local NormArr = array[(ResRot+1)*(ResSpl+1)]\0A   #local UVArr = array[(ResRot+1)*(ResSpl+1)]\0A   #local R = Rot/ResRot;\0A   #local Dim = dimension_size(VNArr,1);\0A   #local Count = 0;\0A   #local I = 0;\0A   #while (I<=ResRot)\0A      #local J = 0;\0A      #while (J<Dim)\0A         #local VecArr[Count] = vrotate(VNArr[J][0],<0,R*I,0>);\0A         #local NormArr[Count] = vrotate(VNArr[J][1],<0,R*I,0>);\0A         #local UVArr[Count] = <I/ResRot,J/(Dim-1)>;\0A         #local J = J+1;\0A         #local Count = Count+1;\0A      #end\0A      #local I = I+1;\0A   #end\0A   BuildWriteMesh2(VecArr, NormArr, UVArr, ResSpl, ResRot)\0A#end\0A\0A\0A#declare MSH = FnLathe(360, 100, 100)\0A\0A#declare Obj_Msh =\0Aobject {\0A   MSH\0A\0A   uv_mapping\0A\0A   texture {\0A      pigment{\0A         checker\0A         color rgb <1.0, 0.7, 0.5>,\0A         color rgb <0, 0, 0.15>\0A\0A         scale 0.05\0A      }\0A      finish {\0A         diffuse 0.7\0A         specular 0.3\0A      }\0A   }\0A\0A   rotate 90*x\0A   scale <1.9, 1.9, 2.8>\0A\0A\0A   translate Pos5\0A}\0A\0A\0Aobject { Obj_Msh }\0A\0A\0A#end\0A\0A\00", align 16
@_ZN3pov17Benchmark_OptionsE = dso_local global [1189 x i8] c"All_Console=On\0AAntialias_Depth=3\0AAntialias=On\0AAntialias_Threshold=0.3\0ABits_Per_Color=8\0ABounding=On\0ABounding_Threshold=3\0ABuffer_Output=Off\0ABuffer_Size=0\0AClock=0\0AContinue_Trace=Off\0ACreate_Histogram=Off\0ACyclic_Animation=Off\0ADebug_Console=On\0ADisplay=Off\0ADisplay_Gamma=1.0\0ADraw_Vistas=Off\0AEnd_Column=1\0AEnd_Row=1\0AFatal_Console=On\0AFatal_Error_Command=\0AFatal_Error_Return=I\0AField_Render=Off\0AFinal_Clock=1\0AFinal_Frame=1\0AHeight=384\0AHistogram_Name=\0AHistogram_Grid_Size=0.0\0AInitial_Clock=0\0AInitial_Frame=1\0AInclude_Header=\0AJitter_Amount=1\0AJitter=On\0ALight_Buffer=On\0AOdd_Field=Off\0AOutput_Alpha=Off\0AOutput_File_Name=\0AOutput_File_Type=s\0AOutput_To_File=Off\0APalette=3\0APause_When_Done=Off\0APost_Frame_Command=\0APost_Frame_Return=I\0APost_Scene_Command=\0APost_Scene_Return=I\0APreview_End_Size=1\0APreview_Start_Size=1\0APre_Frame_Command=\0APre_Frame_Return=I\0APre_Scene_command=\0APre_Scene_Return=I\0AQuality=9\0ARemove_Bounds=On\0ARender_Console=On\0ASampling_Method=1\0ASplit_Unions=Off\0AStart_Column=0\0AStart_Row=0\0AStatistic_Console=On\0ASubset_End_Frame=1\0ASubset_Start_Frame=1\0ATest_Abort_Count=0\0ATest_Abort=Off\0AUser_Abort_Command=\0AUser_Abort_Return=I\0AVerbose=On\0AVersion=3.5\0AVideo_Mode=0\0AVista_Buffer=On\0AWarning_Console=On\0AWidth=384\0A\00", align 16
@.str = private unnamed_addr constant [3 x i8] c"wt\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local noundef zeroext i1 @_ZN3pov20Write_Benchmark_FileEPKcS1_(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {
  %3 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str)
  %4 = icmp eq ptr %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @fputs(ptr noundef nonnull @_ZN3pov14Benchmark_FileE, ptr noundef nonnull %3)
  %7 = icmp eq i32 %6, -1
  %8 = tail call i32 @fclose(ptr noundef nonnull %3)
  br i1 %7, label %16, label %9

9:                                                ; preds = %5
  %10 = tail call noalias ptr @fopen(ptr noundef %1, ptr noundef nonnull @.str)
  %11 = icmp eq ptr %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @fputs(ptr noundef nonnull @_ZN3pov17Benchmark_OptionsE, ptr noundef nonnull %10)
  %14 = icmp ne i32 %13, -1
  %15 = tail call i32 @fclose(ptr noundef nonnull %10)
  br label %16

16:                                               ; preds = %12, %5, %9, %2
  %17 = phi i1 [ false, %2 ], [ false, %9 ], [ false, %5 ], [ %14, %12 ]
  ret i1 %17
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @fputs(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local noundef i32 @_ZN3pov21Get_Benchmark_VersionEv() local_unnamed_addr #2 {
  ret i32 258
}

attributes #0 = { nofree nounwind sspstrong uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #1 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }
attributes #2 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
