; ModuleID = 'LocalReduce/NormInfFunctions.c'
source_filename = "LocalReduce/NormInfFunctions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [31 x i8] c"LocalReduce/NormInfFunctions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5497 [
    i32 101, label %22
    i32 102, label %627
    i32 103, label %1235
    i32 104, label %1853
    i32 105, label %2465
    i32 106, label %3073
    i32 107, label %3681
    i32 108, label %4285
    i32 109, label %4893
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %5497

30:                                               ; preds = %22
  switch i32 %1, label %625 [
    i32 1, label %31
    i32 0, label %335
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %5497

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %196

45:                                               ; preds = %31
  br i1 %35, label %46, label %5497

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %194
  %55 = phi i32 [ 0, %46 ], [ %146, %194 ]
  %56 = phi double [ 0.000000e+00, %46 ], [ %145, %194 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %58, label %127

58:                                               ; preds = %54, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %54 ]
  %60 = phi i64 [ %68, %117 ], [ %51, %54 ]
  %61 = phi i64 [ %125, %117 ], [ %50, %54 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %54 ]
  %63 = sub i32 %49, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !12

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !16

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !17

127:                                              ; preds = %117, %54
  %128 = phi i32 [ %57, %54 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i8, ptr %24, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !11
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = uitofp i8 %133 to double
  %137 = fmul fast double %131, %136
  %138 = fcmp fast uge double %137, 0.000000e+00
  %139 = fneg fast double %137
  %140 = tail call fast double @llvm.fabs.f64(double %137)
  %141 = fcmp fast ole double %140, %135
  %142 = select nnan ninf i1 %138, double %137, double %139
  %143 = select i1 %141, double %135, double %142
  %144 = fptoui double %143 to i8
  store i8 %144, ptr %26, align 1, !tbaa !11
  %145 = fadd fast double %131, %56
  %146 = add nuw nsw i32 %55, 1
  br i1 %48, label %147, label %194

147:                                              ; preds = %127
  %148 = load i32, ptr %4, align 4, !tbaa !5
  %149 = load i32, ptr %12, align 4, !tbaa !5
  %150 = add nsw i32 %149, -1
  %151 = icmp slt i32 %148, %150
  br i1 %151, label %171, label %152

152:                                              ; preds = %147
  %153 = icmp eq i32 %148, %150
  br i1 %153, label %154, label %187

154:                                              ; preds = %152
  store i32 0, ptr %4, align 4, !tbaa !5
  %155 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %155, ptr %6, align 4, !tbaa !5
  br i1 %53, label %194, label %156

156:                                              ; preds = %154, %181
  %157 = phi i64 [ %185, %181 ], [ 1, %154 ]
  %158 = getelementptr inbounds i32, ptr %4, i64 %157
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = getelementptr inbounds i32, ptr %12, i64 %157
  %161 = load i32, ptr %160, align 4, !tbaa !5
  %162 = add nsw i32 %161, -1
  %163 = icmp slt i32 %159, %162
  br i1 %163, label %164, label %179

164:                                              ; preds = %156
  br i1 %151, label %171, label %165

165:                                              ; preds = %164
  %166 = getelementptr inbounds i32, ptr %7, i64 %157
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = getelementptr inbounds i32, ptr %6, i64 %157
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = add nsw i32 %169, %167
  store i32 %170, ptr %168, align 4, !tbaa !5
  br label %189

171:                                              ; preds = %147, %164
  %172 = phi i32 [ %159, %164 ], [ %148, %147 ]
  %173 = phi ptr [ %158, %164 ], [ %4, %147 ]
  %174 = phi i64 [ %157, %164 ], [ 0, %147 ]
  %175 = add nsw i32 %172, 1
  store i32 %175, ptr %173, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %7, i64 %174
  %177 = load i32, ptr %176, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %6, i64 %174
  br label %189

179:                                              ; preds = %156
  %180 = icmp eq i32 %159, %162
  br i1 %180, label %181, label %187

181:                                              ; preds = %179
  store i32 0, ptr %158, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %8, i64 %157
  %183 = load i32, ptr %182, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %6, i64 %157
  store i32 %183, ptr %184, align 4, !tbaa !5
  %185 = add nuw nsw i64 %157, 1
  %186 = icmp eq i64 %185, %51
  br i1 %186, label %194, label %156, !llvm.loop !20

187:                                              ; preds = %152, %179
  %188 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

189:                                              ; preds = %165, %171
  %190 = phi ptr [ %178, %171 ], [ %158, %165 ]
  %191 = phi i32 [ %177, %171 ], [ 1, %165 ]
  %192 = load i32, ptr %190, align 4, !tbaa !5
  %193 = add nsw i32 %192, %191
  store i32 %193, ptr %190, align 4, !tbaa !5
  br label %194

194:                                              ; preds = %181, %189, %154, %127
  %195 = icmp eq i32 %146, %5
  br i1 %195, label %5497, label %54, !llvm.loop !22

196:                                              ; preds = %37, %333
  %197 = phi i32 [ 0, %37 ], [ %282, %333 ]
  %198 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %199, label %268

199:                                              ; preds = %196, %258
  %200 = phi i32 [ %267, %258 ], [ 0, %196 ]
  %201 = phi i64 [ %209, %258 ], [ %42, %196 ]
  %202 = phi i64 [ %266, %258 ], [ %41, %196 ]
  %203 = phi i32 [ %264, %258 ], [ %198, %196 ]
  %204 = sub i32 %40, %200
  %205 = tail call i32 @llvm.smin.i32(i32 %204, i32 0)
  %206 = sub i32 %204, %205
  %207 = zext i32 %206 to i64
  %208 = add nuw nsw i64 %207, 1
  %209 = add nsw i64 %201, -1
  %210 = icmp ult i32 %206, 31
  br i1 %210, label %246, label %211

211:                                              ; preds = %199
  %212 = and i64 %208, 8589934560
  %213 = sub i64 %202, %212
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi i64 [ 0, %211 ], [ %238, %214 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %234, %214 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %235, %214 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %236, %214 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %237, %214 ]
  %220 = sub i64 %202, %215
  %221 = getelementptr inbounds i32, ptr %11, i64 %220
  %222 = getelementptr inbounds i32, ptr %221, i64 -7
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %221, i64 -15
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %221, i64 -23
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %221, i64 -31
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = mul <8 x i32> %224, %216
  %235 = mul <8 x i32> %227, %217
  %236 = mul <8 x i32> %230, %218
  %237 = mul <8 x i32> %233, %219
  %238 = add nuw i64 %215, 32
  %239 = icmp eq i64 %238, %212
  br i1 %239, label %240, label %214, !llvm.loop !23

240:                                              ; preds = %214
  %241 = mul <8 x i32> %235, %234
  %242 = mul <8 x i32> %236, %241
  %243 = mul <8 x i32> %237, %242
  %244 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %243)
  %245 = icmp eq i64 %208, %212
  br i1 %245, label %258, label %246

246:                                              ; preds = %199, %240
  %247 = phi i64 [ %202, %199 ], [ %213, %240 ]
  %248 = phi i32 [ 1, %199 ], [ %244, %240 ]
  br label %249

249:                                              ; preds = %246, %249
  %250 = phi i64 [ %255, %249 ], [ %247, %246 ]
  %251 = phi i32 [ %254, %249 ], [ %248, %246 ]
  %252 = getelementptr inbounds i32, ptr %11, i64 %250
  %253 = load i32, ptr %252, align 4, !tbaa !5
  %254 = mul nsw i32 %253, %251
  %255 = add nsw i64 %250, -1
  %256 = trunc i64 %250 to i32
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %249, label %258, !llvm.loop !24

258:                                              ; preds = %249, %240
  %259 = phi i32 [ %244, %240 ], [ %254, %249 ]
  %260 = and i64 %209, 4294967295
  %261 = getelementptr inbounds i32, ptr %6, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !5
  %263 = mul nsw i32 %262, %259
  %264 = add nsw i32 %263, %203
  %265 = icmp sgt i64 %201, 2
  %266 = add nsw i64 %202, -1
  %267 = add i32 %200, 1
  br i1 %265, label %199, label %268, !llvm.loop !25

268:                                              ; preds = %258, %196
  %269 = phi i32 [ %198, %196 ], [ %264, %258 ]
  %270 = icmp slt i32 %269, %5
  br i1 %270, label %273, label %271

271:                                              ; preds = %268
  %272 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

273:                                              ; preds = %268
  %274 = sext i32 %269 to i64
  %275 = getelementptr inbounds i8, ptr %24, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !11
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = uitofp i8 %277 to double
  %279 = uitofp i8 %276 to double
  %280 = tail call fast double @llvm.maxnum.f64(double %278, double %279)
  %281 = fptoui double %280 to i8
  store i8 %281, ptr %26, align 1, !tbaa !11
  %282 = add nuw nsw i32 %197, 1
  br i1 %39, label %283, label %333

283:                                              ; preds = %273
  %284 = load i32, ptr %4, align 4, !tbaa !5
  %285 = load i32, ptr %12, align 4, !tbaa !5
  %286 = add nsw i32 %285, -1
  %287 = icmp slt i32 %284, %286
  br i1 %287, label %310, label %288

288:                                              ; preds = %283
  %289 = icmp eq i32 %284, %286
  br i1 %289, label %290, label %326

290:                                              ; preds = %288
  store i32 0, ptr %4, align 4, !tbaa !5
  %291 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %291, ptr %6, align 4, !tbaa !5
  br i1 %44, label %333, label %292

292:                                              ; preds = %290, %320
  %293 = phi i64 [ %324, %320 ], [ 1, %290 ]
  %294 = getelementptr inbounds i32, ptr %4, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = getelementptr inbounds i32, ptr %12, i64 %293
  %297 = load i32, ptr %296, align 4, !tbaa !5
  %298 = add nsw i32 %297, -1
  %299 = icmp slt i32 %295, %298
  br i1 %299, label %300, label %318

300:                                              ; preds = %292
  br i1 %287, label %310, label %301

301:                                              ; preds = %300
  %302 = shl i64 %293, 32
  %303 = add i64 %302, -4294967296
  %304 = ashr exact i64 %303, 32
  %305 = getelementptr inbounds i32, ptr %7, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = getelementptr inbounds i32, ptr %6, i64 %293
  %308 = load i32, ptr %307, align 4, !tbaa !5
  %309 = add nsw i32 %308, %306
  store i32 %309, ptr %307, align 4, !tbaa !5
  br label %328

310:                                              ; preds = %283, %300
  %311 = phi i32 [ %295, %300 ], [ %284, %283 ]
  %312 = phi ptr [ %294, %300 ], [ %4, %283 ]
  %313 = phi i64 [ %293, %300 ], [ 0, %283 ]
  %314 = add nsw i32 %311, 1
  store i32 %314, ptr %312, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %7, i64 %313
  %316 = load i32, ptr %315, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %6, i64 %313
  br label %328

318:                                              ; preds = %292
  %319 = icmp eq i32 %295, %298
  br i1 %319, label %320, label %326

320:                                              ; preds = %318
  store i32 0, ptr %294, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %8, i64 %293
  %322 = load i32, ptr %321, align 4, !tbaa !5
  %323 = getelementptr inbounds i32, ptr %6, i64 %293
  store i32 %322, ptr %323, align 4, !tbaa !5
  %324 = add nuw nsw i64 %293, 1
  %325 = icmp eq i64 %324, %42
  br i1 %325, label %333, label %292, !llvm.loop !26

326:                                              ; preds = %288, %318
  %327 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

328:                                              ; preds = %301, %310
  %329 = phi ptr [ %317, %310 ], [ %294, %301 ]
  %330 = phi i32 [ %316, %310 ], [ 1, %301 ]
  %331 = load i32, ptr %329, align 4, !tbaa !5
  %332 = add nsw i32 %331, %330
  store i32 %332, ptr %329, align 4, !tbaa !5
  br label %333

333:                                              ; preds = %320, %328, %290, %273
  %334 = icmp eq i32 %282, %5
  br i1 %334, label %5497, label %196, !llvm.loop !27

335:                                              ; preds = %30
  %336 = getelementptr inbounds i32, ptr %3, i64 %19
  %337 = load i32, ptr %336, align 4, !tbaa !5
  %338 = icmp eq i32 %337, 0
  %339 = icmp sgt i32 %5, 0
  br i1 %338, label %349, label %340

340:                                              ; preds = %335
  br i1 %339, label %341, label %5497

341:                                              ; preds = %340
  %342 = icmp sgt i32 %13, 1
  %343 = icmp sgt i32 %13, 0
  %344 = add i32 %13, -2
  %345 = zext i32 %344 to i64
  %346 = zext i32 %13 to i64
  %347 = add nuw i32 %5, 1
  %348 = icmp eq i32 %13, 1
  br label %489

349:                                              ; preds = %335
  br i1 %339, label %350, label %5497

350:                                              ; preds = %349
  %351 = icmp sgt i32 %13, 1
  %352 = icmp sgt i32 %13, 0
  %353 = add i32 %13, -2
  %354 = zext i32 %353 to i64
  %355 = zext i32 %13 to i64
  %356 = add nuw i32 %5, 1
  %357 = icmp eq i32 %13, 1
  br label %358

358:                                              ; preds = %350, %487
  %359 = phi i32 [ 0, %350 ], [ %439, %487 ]
  %360 = phi double [ 0.000000e+00, %350 ], [ %438, %487 ]
  %361 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %351, label %362, label %431

362:                                              ; preds = %358, %421
  %363 = phi i32 [ %430, %421 ], [ 0, %358 ]
  %364 = phi i64 [ %372, %421 ], [ %355, %358 ]
  %365 = phi i64 [ %429, %421 ], [ %354, %358 ]
  %366 = phi i32 [ %427, %421 ], [ %361, %358 ]
  %367 = sub i32 %353, %363
  %368 = tail call i32 @llvm.smin.i32(i32 %367, i32 0)
  %369 = sub i32 %367, %368
  %370 = zext i32 %369 to i64
  %371 = add nuw nsw i64 %370, 1
  %372 = add nsw i64 %364, -1
  %373 = icmp ult i32 %369, 31
  br i1 %373, label %409, label %374

374:                                              ; preds = %362
  %375 = and i64 %371, 8589934560
  %376 = sub i64 %365, %375
  br label %377

377:                                              ; preds = %377, %374
  %378 = phi i64 [ 0, %374 ], [ %401, %377 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %397, %377 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %398, %377 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %399, %377 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %400, %377 ]
  %383 = sub i64 %365, %378
  %384 = getelementptr inbounds i32, ptr %9, i64 %383
  %385 = getelementptr inbounds i32, ptr %384, i64 -7
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !5
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %384, i64 -15
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %384, i64 -23
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %384, i64 -31
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = mul <8 x i32> %387, %379
  %398 = mul <8 x i32> %390, %380
  %399 = mul <8 x i32> %393, %381
  %400 = mul <8 x i32> %396, %382
  %401 = add nuw i64 %378, 32
  %402 = icmp eq i64 %401, %375
  br i1 %402, label %403, label %377, !llvm.loop !28

403:                                              ; preds = %377
  %404 = mul <8 x i32> %398, %397
  %405 = mul <8 x i32> %399, %404
  %406 = mul <8 x i32> %400, %405
  %407 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %406)
  %408 = icmp eq i64 %371, %375
  br i1 %408, label %421, label %409

409:                                              ; preds = %362, %403
  %410 = phi i64 [ %365, %362 ], [ %376, %403 ]
  %411 = phi i32 [ 1, %362 ], [ %407, %403 ]
  br label %412

412:                                              ; preds = %409, %412
  %413 = phi i64 [ %418, %412 ], [ %410, %409 ]
  %414 = phi i32 [ %417, %412 ], [ %411, %409 ]
  %415 = getelementptr inbounds i32, ptr %9, i64 %413
  %416 = load i32, ptr %415, align 4, !tbaa !5
  %417 = mul nsw i32 %416, %414
  %418 = add nsw i64 %413, -1
  %419 = trunc i64 %413 to i32
  %420 = icmp sgt i32 %419, 0
  br i1 %420, label %412, label %421, !llvm.loop !29

421:                                              ; preds = %412, %403
  %422 = phi i32 [ %407, %403 ], [ %417, %412 ]
  %423 = and i64 %372, 4294967295
  %424 = getelementptr inbounds i32, ptr %6, i64 %423
  %425 = load i32, ptr %424, align 4, !tbaa !5
  %426 = mul nsw i32 %425, %422
  %427 = add nsw i32 %426, %366
  %428 = icmp sgt i64 %364, 2
  %429 = add nsw i64 %365, -1
  %430 = add i32 %363, 1
  br i1 %428, label %362, label %431, !llvm.loop !30

431:                                              ; preds = %421, %358
  %432 = phi i32 [ %361, %358 ], [ %427, %421 ]
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i8, ptr %24, i64 %433
  %435 = load i8, ptr %434, align 1, !tbaa !11
  %436 = load i8, ptr %26, align 1, !tbaa !11
  %437 = tail call i8 @llvm.umax.i8(i8 %436, i8 %435)
  store i8 %437, ptr %26, align 1, !tbaa !11
  %438 = fadd fast double %360, 1.000000e+00
  %439 = add nuw nsw i32 %359, 1
  br i1 %352, label %440, label %487

440:                                              ; preds = %431
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %357, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %355
  br i1 %479, label %487, label %449, !llvm.loop !31

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %431
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %5497, label %358, !llvm.loop !32

489:                                              ; preds = %341, %623
  %490 = phi i32 [ 0, %341 ], [ %572, %623 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %342, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %346, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %345, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %344, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !33

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !34

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !35

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds i8, ptr %24, i64 %567
  %569 = load i8, ptr %568, align 1, !tbaa !11
  %570 = load i8, ptr %26, align 1, !tbaa !11
  %571 = tail call i8 @llvm.umax.i8(i8 %570, i8 %569)
  store i8 %571, ptr %26, align 1, !tbaa !11
  %572 = add nuw nsw i32 %490, 1
  br i1 %343, label %573, label %623

573:                                              ; preds = %566
  %574 = load i32, ptr %4, align 4, !tbaa !5
  %575 = load i32, ptr %12, align 4, !tbaa !5
  %576 = add nsw i32 %575, -1
  %577 = icmp slt i32 %574, %576
  br i1 %577, label %600, label %578

578:                                              ; preds = %573
  %579 = icmp eq i32 %574, %576
  br i1 %579, label %580, label %616

580:                                              ; preds = %578
  store i32 0, ptr %4, align 4, !tbaa !5
  %581 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %581, ptr %6, align 4, !tbaa !5
  br i1 %348, label %623, label %582

582:                                              ; preds = %580, %610
  %583 = phi i64 [ %614, %610 ], [ 1, %580 ]
  %584 = getelementptr inbounds i32, ptr %4, i64 %583
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = getelementptr inbounds i32, ptr %12, i64 %583
  %587 = load i32, ptr %586, align 4, !tbaa !5
  %588 = add nsw i32 %587, -1
  %589 = icmp slt i32 %585, %588
  br i1 %589, label %590, label %608

590:                                              ; preds = %582
  br i1 %577, label %600, label %591

591:                                              ; preds = %590
  %592 = shl i64 %583, 32
  %593 = add i64 %592, -4294967296
  %594 = ashr exact i64 %593, 32
  %595 = getelementptr inbounds i32, ptr %7, i64 %594
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = getelementptr inbounds i32, ptr %6, i64 %583
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = add nsw i32 %598, %596
  store i32 %599, ptr %597, align 4, !tbaa !5
  br label %618

600:                                              ; preds = %573, %590
  %601 = phi i32 [ %585, %590 ], [ %574, %573 ]
  %602 = phi ptr [ %584, %590 ], [ %4, %573 ]
  %603 = phi i64 [ %583, %590 ], [ 0, %573 ]
  %604 = add nsw i32 %601, 1
  store i32 %604, ptr %602, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %7, i64 %603
  %606 = load i32, ptr %605, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %6, i64 %603
  br label %618

608:                                              ; preds = %582
  %609 = icmp eq i32 %585, %588
  br i1 %609, label %610, label %616

610:                                              ; preds = %608
  store i32 0, ptr %584, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %8, i64 %583
  %612 = load i32, ptr %611, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %6, i64 %583
  store i32 %612, ptr %613, align 4, !tbaa !5
  %614 = add nuw nsw i64 %583, 1
  %615 = icmp eq i64 %614, %346
  br i1 %615, label %623, label %582, !llvm.loop !36

616:                                              ; preds = %578, %608
  %617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

618:                                              ; preds = %591, %600
  %619 = phi ptr [ %607, %600 ], [ %584, %591 ]
  %620 = phi i32 [ %606, %600 ], [ 1, %591 ]
  %621 = load i32, ptr %619, align 4, !tbaa !5
  %622 = add nsw i32 %621, %620
  store i32 %622, ptr %619, align 4, !tbaa !5
  br label %623

623:                                              ; preds = %610, %618, %580, %566
  %624 = icmp eq i32 %572, %5
  br i1 %624, label %5497, label %489, !llvm.loop !37

625:                                              ; preds = %30
  %626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

627:                                              ; preds = %18
  %628 = getelementptr inbounds ptr, ptr %14, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  %630 = getelementptr inbounds ptr, ptr %16, i64 %19
  %631 = load ptr, ptr %630, align 8, !tbaa !9
  store i32 0, ptr %631, align 4, !tbaa !5
  %632 = icmp eq i32 %13, 0
  br i1 %632, label %633, label %636

633:                                              ; preds = %627
  %634 = load i8, ptr %629, align 1, !tbaa !11
  %635 = zext i8 %634 to i32
  store i32 %635, ptr %631, align 4, !tbaa !5
  br label %5497

636:                                              ; preds = %627
  switch i32 %1, label %1233 [
    i32 1, label %637
    i32 0, label %941
  ]

637:                                              ; preds = %636
  %638 = getelementptr inbounds i32, ptr %3, i64 %19
  %639 = load i32, ptr %638, align 4, !tbaa !5
  %640 = icmp eq i32 %639, 0
  %641 = icmp sgt i32 %5, 0
  br i1 %640, label %651, label %642

642:                                              ; preds = %637
  br i1 %641, label %643, label %5497

643:                                              ; preds = %642
  %644 = icmp sgt i32 %13, 1
  %645 = icmp sgt i32 %13, 0
  %646 = add i32 %13, -2
  %647 = zext i32 %646 to i64
  %648 = zext i32 %13 to i64
  %649 = add nuw i32 %5, 1
  %650 = icmp eq i32 %13, 1
  br label %802

651:                                              ; preds = %637
  br i1 %641, label %652, label %5497

652:                                              ; preds = %651
  %653 = icmp sgt i32 %13, 1
  %654 = icmp sgt i32 %13, 0
  %655 = add i32 %13, -2
  %656 = zext i32 %655 to i64
  %657 = zext i32 %13 to i64
  %658 = add nuw i32 %5, 1
  %659 = icmp eq i32 %13, 1
  br label %660

660:                                              ; preds = %652, %800
  %661 = phi i32 [ 0, %652 ], [ %752, %800 ]
  %662 = phi double [ 0.000000e+00, %652 ], [ %751, %800 ]
  %663 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %653, label %664, label %733

664:                                              ; preds = %660, %723
  %665 = phi i32 [ %732, %723 ], [ 0, %660 ]
  %666 = phi i64 [ %674, %723 ], [ %657, %660 ]
  %667 = phi i64 [ %731, %723 ], [ %656, %660 ]
  %668 = phi i32 [ %729, %723 ], [ %663, %660 ]
  %669 = sub i32 %655, %665
  %670 = tail call i32 @llvm.smin.i32(i32 %669, i32 0)
  %671 = sub i32 %669, %670
  %672 = zext i32 %671 to i64
  %673 = add nuw nsw i64 %672, 1
  %674 = add nsw i64 %666, -1
  %675 = icmp ult i32 %671, 31
  br i1 %675, label %711, label %676

676:                                              ; preds = %664
  %677 = and i64 %673, 8589934560
  %678 = sub i64 %667, %677
  br label %679

679:                                              ; preds = %679, %676
  %680 = phi i64 [ 0, %676 ], [ %703, %679 ]
  %681 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %699, %679 ]
  %682 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %700, %679 ]
  %683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %701, %679 ]
  %684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %676 ], [ %702, %679 ]
  %685 = sub i64 %667, %680
  %686 = getelementptr inbounds i32, ptr %9, i64 %685
  %687 = getelementptr inbounds i32, ptr %686, i64 -7
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = getelementptr inbounds i32, ptr %686, i64 -15
  %691 = load <8 x i32>, ptr %690, align 4, !tbaa !5
  %692 = shufflevector <8 x i32> %691, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %693 = getelementptr inbounds i32, ptr %686, i64 -23
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !5
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %686, i64 -31
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !5
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = mul <8 x i32> %689, %681
  %700 = mul <8 x i32> %692, %682
  %701 = mul <8 x i32> %695, %683
  %702 = mul <8 x i32> %698, %684
  %703 = add nuw i64 %680, 32
  %704 = icmp eq i64 %703, %677
  br i1 %704, label %705, label %679, !llvm.loop !38

705:                                              ; preds = %679
  %706 = mul <8 x i32> %700, %699
  %707 = mul <8 x i32> %701, %706
  %708 = mul <8 x i32> %702, %707
  %709 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %708)
  %710 = icmp eq i64 %673, %677
  br i1 %710, label %723, label %711

711:                                              ; preds = %664, %705
  %712 = phi i64 [ %667, %664 ], [ %678, %705 ]
  %713 = phi i32 [ 1, %664 ], [ %709, %705 ]
  br label %714

714:                                              ; preds = %711, %714
  %715 = phi i64 [ %720, %714 ], [ %712, %711 ]
  %716 = phi i32 [ %719, %714 ], [ %713, %711 ]
  %717 = getelementptr inbounds i32, ptr %9, i64 %715
  %718 = load i32, ptr %717, align 4, !tbaa !5
  %719 = mul nsw i32 %718, %716
  %720 = add nsw i64 %715, -1
  %721 = trunc i64 %715 to i32
  %722 = icmp sgt i32 %721, 0
  br i1 %722, label %714, label %723, !llvm.loop !39

723:                                              ; preds = %714, %705
  %724 = phi i32 [ %709, %705 ], [ %719, %714 ]
  %725 = and i64 %674, 4294967295
  %726 = getelementptr inbounds i32, ptr %6, i64 %725
  %727 = load i32, ptr %726, align 4, !tbaa !5
  %728 = mul nsw i32 %727, %724
  %729 = add nsw i32 %728, %668
  %730 = icmp sgt i64 %666, 2
  %731 = add nsw i64 %667, -1
  %732 = add i32 %665, 1
  br i1 %730, label %664, label %733, !llvm.loop !40

733:                                              ; preds = %723, %660
  %734 = phi i32 [ %663, %660 ], [ %729, %723 ]
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds double, ptr %2, i64 %735
  %737 = load double, ptr %736, align 8, !tbaa !18
  %738 = getelementptr inbounds i8, ptr %629, i64 %735
  %739 = load i8, ptr %738, align 1, !tbaa !11
  %740 = load i32, ptr %631, align 4, !tbaa !5
  %741 = sitofp i32 %740 to double
  %742 = uitofp i8 %739 to double
  %743 = fmul fast double %737, %742
  %744 = fcmp fast uge double %743, 0.000000e+00
  %745 = fneg fast double %743
  %746 = tail call fast double @llvm.fabs.f64(double %743)
  %747 = fcmp fast ole double %746, %741
  %748 = select nnan ninf i1 %744, double %743, double %745
  %749 = select i1 %747, double %741, double %748
  %750 = fptosi double %749 to i32
  store i32 %750, ptr %631, align 4, !tbaa !5
  %751 = fadd fast double %737, %662
  %752 = add nuw nsw i32 %661, 1
  br i1 %654, label %753, label %800

753:                                              ; preds = %733
  %754 = load i32, ptr %4, align 4, !tbaa !5
  %755 = load i32, ptr %12, align 4, !tbaa !5
  %756 = add nsw i32 %755, -1
  %757 = icmp slt i32 %754, %756
  br i1 %757, label %777, label %758

758:                                              ; preds = %753
  %759 = icmp eq i32 %754, %756
  br i1 %759, label %760, label %793

760:                                              ; preds = %758
  store i32 0, ptr %4, align 4, !tbaa !5
  %761 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %761, ptr %6, align 4, !tbaa !5
  br i1 %659, label %800, label %762

762:                                              ; preds = %760, %787
  %763 = phi i64 [ %791, %787 ], [ 1, %760 ]
  %764 = getelementptr inbounds i32, ptr %4, i64 %763
  %765 = load i32, ptr %764, align 4, !tbaa !5
  %766 = getelementptr inbounds i32, ptr %12, i64 %763
  %767 = load i32, ptr %766, align 4, !tbaa !5
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %765, %768
  br i1 %769, label %770, label %785

770:                                              ; preds = %762
  br i1 %757, label %777, label %771

771:                                              ; preds = %770
  %772 = getelementptr inbounds i32, ptr %7, i64 %763
  %773 = load i32, ptr %772, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %6, i64 %763
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = add nsw i32 %775, %773
  store i32 %776, ptr %774, align 4, !tbaa !5
  br label %795

777:                                              ; preds = %753, %770
  %778 = phi i32 [ %765, %770 ], [ %754, %753 ]
  %779 = phi ptr [ %764, %770 ], [ %4, %753 ]
  %780 = phi i64 [ %763, %770 ], [ 0, %753 ]
  %781 = add nsw i32 %778, 1
  store i32 %781, ptr %779, align 4, !tbaa !5
  %782 = getelementptr inbounds i32, ptr %7, i64 %780
  %783 = load i32, ptr %782, align 4, !tbaa !5
  %784 = getelementptr inbounds i32, ptr %6, i64 %780
  br label %795

785:                                              ; preds = %762
  %786 = icmp eq i32 %765, %768
  br i1 %786, label %787, label %793

787:                                              ; preds = %785
  store i32 0, ptr %764, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %8, i64 %763
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = getelementptr inbounds i32, ptr %6, i64 %763
  store i32 %789, ptr %790, align 4, !tbaa !5
  %791 = add nuw nsw i64 %763, 1
  %792 = icmp eq i64 %791, %657
  br i1 %792, label %800, label %762, !llvm.loop !41

793:                                              ; preds = %758, %785
  %794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

795:                                              ; preds = %771, %777
  %796 = phi ptr [ %784, %777 ], [ %764, %771 ]
  %797 = phi i32 [ %783, %777 ], [ 1, %771 ]
  %798 = load i32, ptr %796, align 4, !tbaa !5
  %799 = add nsw i32 %798, %797
  store i32 %799, ptr %796, align 4, !tbaa !5
  br label %800

800:                                              ; preds = %787, %795, %760, %733
  %801 = icmp eq i32 %752, %5
  br i1 %801, label %5497, label %660, !llvm.loop !42

802:                                              ; preds = %643, %939
  %803 = phi i32 [ 0, %643 ], [ %888, %939 ]
  %804 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %644, label %805, label %874

805:                                              ; preds = %802, %864
  %806 = phi i32 [ %873, %864 ], [ 0, %802 ]
  %807 = phi i64 [ %815, %864 ], [ %648, %802 ]
  %808 = phi i64 [ %872, %864 ], [ %647, %802 ]
  %809 = phi i32 [ %870, %864 ], [ %804, %802 ]
  %810 = sub i32 %646, %806
  %811 = tail call i32 @llvm.smin.i32(i32 %810, i32 0)
  %812 = sub i32 %810, %811
  %813 = zext i32 %812 to i64
  %814 = add nuw nsw i64 %813, 1
  %815 = add nsw i64 %807, -1
  %816 = icmp ult i32 %812, 31
  br i1 %816, label %852, label %817

817:                                              ; preds = %805
  %818 = and i64 %814, 8589934560
  %819 = sub i64 %808, %818
  br label %820

820:                                              ; preds = %820, %817
  %821 = phi i64 [ 0, %817 ], [ %844, %820 ]
  %822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %840, %820 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %841, %820 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %842, %820 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %817 ], [ %843, %820 ]
  %826 = sub i64 %808, %821
  %827 = getelementptr inbounds i32, ptr %11, i64 %826
  %828 = getelementptr inbounds i32, ptr %827, i64 -7
  %829 = load <8 x i32>, ptr %828, align 4, !tbaa !5
  %830 = shufflevector <8 x i32> %829, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %831 = getelementptr inbounds i32, ptr %827, i64 -15
  %832 = load <8 x i32>, ptr %831, align 4, !tbaa !5
  %833 = shufflevector <8 x i32> %832, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %834 = getelementptr inbounds i32, ptr %827, i64 -23
  %835 = load <8 x i32>, ptr %834, align 4, !tbaa !5
  %836 = shufflevector <8 x i32> %835, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %837 = getelementptr inbounds i32, ptr %827, i64 -31
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = mul <8 x i32> %830, %822
  %841 = mul <8 x i32> %833, %823
  %842 = mul <8 x i32> %836, %824
  %843 = mul <8 x i32> %839, %825
  %844 = add nuw i64 %821, 32
  %845 = icmp eq i64 %844, %818
  br i1 %845, label %846, label %820, !llvm.loop !43

846:                                              ; preds = %820
  %847 = mul <8 x i32> %841, %840
  %848 = mul <8 x i32> %842, %847
  %849 = mul <8 x i32> %843, %848
  %850 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %849)
  %851 = icmp eq i64 %814, %818
  br i1 %851, label %864, label %852

852:                                              ; preds = %805, %846
  %853 = phi i64 [ %808, %805 ], [ %819, %846 ]
  %854 = phi i32 [ 1, %805 ], [ %850, %846 ]
  br label %855

855:                                              ; preds = %852, %855
  %856 = phi i64 [ %861, %855 ], [ %853, %852 ]
  %857 = phi i32 [ %860, %855 ], [ %854, %852 ]
  %858 = getelementptr inbounds i32, ptr %11, i64 %856
  %859 = load i32, ptr %858, align 4, !tbaa !5
  %860 = mul nsw i32 %859, %857
  %861 = add nsw i64 %856, -1
  %862 = trunc i64 %856 to i32
  %863 = icmp sgt i32 %862, 0
  br i1 %863, label %855, label %864, !llvm.loop !44

864:                                              ; preds = %855, %846
  %865 = phi i32 [ %850, %846 ], [ %860, %855 ]
  %866 = and i64 %815, 4294967295
  %867 = getelementptr inbounds i32, ptr %6, i64 %866
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %865
  %870 = add nsw i32 %869, %809
  %871 = icmp sgt i64 %807, 2
  %872 = add nsw i64 %808, -1
  %873 = add i32 %806, 1
  br i1 %871, label %805, label %874, !llvm.loop !45

874:                                              ; preds = %864, %802
  %875 = phi i32 [ %804, %802 ], [ %870, %864 ]
  %876 = icmp slt i32 %875, %5
  br i1 %876, label %879, label %877

877:                                              ; preds = %874
  %878 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

879:                                              ; preds = %874
  %880 = sext i32 %875 to i64
  %881 = getelementptr inbounds i8, ptr %629, i64 %880
  %882 = load i8, ptr %881, align 1, !tbaa !11
  %883 = load i32, ptr %631, align 4, !tbaa !5
  %884 = sitofp i32 %883 to double
  %885 = uitofp i8 %882 to double
  %886 = tail call fast double @llvm.maxnum.f64(double %884, double %885)
  %887 = fptosi double %886 to i32
  store i32 %887, ptr %631, align 4, !tbaa !5
  %888 = add nuw nsw i32 %803, 1
  br i1 %645, label %889, label %939

889:                                              ; preds = %879
  %890 = load i32, ptr %4, align 4, !tbaa !5
  %891 = load i32, ptr %12, align 4, !tbaa !5
  %892 = add nsw i32 %891, -1
  %893 = icmp slt i32 %890, %892
  br i1 %893, label %916, label %894

894:                                              ; preds = %889
  %895 = icmp eq i32 %890, %892
  br i1 %895, label %896, label %932

896:                                              ; preds = %894
  store i32 0, ptr %4, align 4, !tbaa !5
  %897 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %897, ptr %6, align 4, !tbaa !5
  br i1 %650, label %939, label %898

898:                                              ; preds = %896, %926
  %899 = phi i64 [ %930, %926 ], [ 1, %896 ]
  %900 = getelementptr inbounds i32, ptr %4, i64 %899
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = getelementptr inbounds i32, ptr %12, i64 %899
  %903 = load i32, ptr %902, align 4, !tbaa !5
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %901, %904
  br i1 %905, label %906, label %924

906:                                              ; preds = %898
  br i1 %893, label %916, label %907

907:                                              ; preds = %906
  %908 = shl i64 %899, 32
  %909 = add i64 %908, -4294967296
  %910 = ashr exact i64 %909, 32
  %911 = getelementptr inbounds i32, ptr %7, i64 %910
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %6, i64 %899
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = add nsw i32 %914, %912
  store i32 %915, ptr %913, align 4, !tbaa !5
  br label %934

916:                                              ; preds = %889, %906
  %917 = phi i32 [ %901, %906 ], [ %890, %889 ]
  %918 = phi ptr [ %900, %906 ], [ %4, %889 ]
  %919 = phi i64 [ %899, %906 ], [ 0, %889 ]
  %920 = add nsw i32 %917, 1
  store i32 %920, ptr %918, align 4, !tbaa !5
  %921 = getelementptr inbounds i32, ptr %7, i64 %919
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = getelementptr inbounds i32, ptr %6, i64 %919
  br label %934

924:                                              ; preds = %898
  %925 = icmp eq i32 %901, %904
  br i1 %925, label %926, label %932

926:                                              ; preds = %924
  store i32 0, ptr %900, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %8, i64 %899
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = getelementptr inbounds i32, ptr %6, i64 %899
  store i32 %928, ptr %929, align 4, !tbaa !5
  %930 = add nuw nsw i64 %899, 1
  %931 = icmp eq i64 %930, %648
  br i1 %931, label %939, label %898, !llvm.loop !46

932:                                              ; preds = %894, %924
  %933 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

934:                                              ; preds = %907, %916
  %935 = phi ptr [ %923, %916 ], [ %900, %907 ]
  %936 = phi i32 [ %922, %916 ], [ 1, %907 ]
  %937 = load i32, ptr %935, align 4, !tbaa !5
  %938 = add nsw i32 %937, %936
  store i32 %938, ptr %935, align 4, !tbaa !5
  br label %939

939:                                              ; preds = %926, %934, %896, %879
  %940 = icmp eq i32 %888, %5
  br i1 %940, label %5497, label %802, !llvm.loop !47

941:                                              ; preds = %636
  %942 = getelementptr inbounds i32, ptr %3, i64 %19
  %943 = load i32, ptr %942, align 4, !tbaa !5
  %944 = icmp eq i32 %943, 0
  %945 = icmp sgt i32 %5, 0
  br i1 %944, label %955, label %946

946:                                              ; preds = %941
  br i1 %945, label %947, label %5497

947:                                              ; preds = %946
  %948 = icmp sgt i32 %13, 1
  %949 = icmp sgt i32 %13, 0
  %950 = add i32 %13, -2
  %951 = zext i32 %950 to i64
  %952 = zext i32 %13 to i64
  %953 = add nuw i32 %5, 1
  %954 = icmp eq i32 %13, 1
  br label %1096

955:                                              ; preds = %941
  br i1 %945, label %956, label %5497

956:                                              ; preds = %955
  %957 = icmp sgt i32 %13, 1
  %958 = icmp sgt i32 %13, 0
  %959 = add i32 %13, -2
  %960 = zext i32 %959 to i64
  %961 = zext i32 %13 to i64
  %962 = add nuw i32 %5, 1
  %963 = icmp eq i32 %13, 1
  br label %964

964:                                              ; preds = %956, %1094
  %965 = phi i32 [ 0, %956 ], [ %1046, %1094 ]
  %966 = phi double [ 0.000000e+00, %956 ], [ %1045, %1094 ]
  %967 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %957, label %968, label %1037

968:                                              ; preds = %964, %1027
  %969 = phi i32 [ %1036, %1027 ], [ 0, %964 ]
  %970 = phi i64 [ %978, %1027 ], [ %961, %964 ]
  %971 = phi i64 [ %1035, %1027 ], [ %960, %964 ]
  %972 = phi i32 [ %1033, %1027 ], [ %967, %964 ]
  %973 = sub i32 %959, %969
  %974 = tail call i32 @llvm.smin.i32(i32 %973, i32 0)
  %975 = sub i32 %973, %974
  %976 = zext i32 %975 to i64
  %977 = add nuw nsw i64 %976, 1
  %978 = add nsw i64 %970, -1
  %979 = icmp ult i32 %975, 31
  br i1 %979, label %1015, label %980

980:                                              ; preds = %968
  %981 = and i64 %977, 8589934560
  %982 = sub i64 %971, %981
  br label %983

983:                                              ; preds = %983, %980
  %984 = phi i64 [ 0, %980 ], [ %1007, %983 ]
  %985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1003, %983 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1004, %983 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1005, %983 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %980 ], [ %1006, %983 ]
  %989 = sub i64 %971, %984
  %990 = getelementptr inbounds i32, ptr %9, i64 %989
  %991 = getelementptr inbounds i32, ptr %990, i64 -7
  %992 = load <8 x i32>, ptr %991, align 4, !tbaa !5
  %993 = shufflevector <8 x i32> %992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %994 = getelementptr inbounds i32, ptr %990, i64 -15
  %995 = load <8 x i32>, ptr %994, align 4, !tbaa !5
  %996 = shufflevector <8 x i32> %995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %997 = getelementptr inbounds i32, ptr %990, i64 -23
  %998 = load <8 x i32>, ptr %997, align 4, !tbaa !5
  %999 = shufflevector <8 x i32> %998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1000 = getelementptr inbounds i32, ptr %990, i64 -31
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = mul <8 x i32> %993, %985
  %1004 = mul <8 x i32> %996, %986
  %1005 = mul <8 x i32> %999, %987
  %1006 = mul <8 x i32> %1002, %988
  %1007 = add nuw i64 %984, 32
  %1008 = icmp eq i64 %1007, %981
  br i1 %1008, label %1009, label %983, !llvm.loop !48

1009:                                             ; preds = %983
  %1010 = mul <8 x i32> %1004, %1003
  %1011 = mul <8 x i32> %1005, %1010
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1012)
  %1014 = icmp eq i64 %977, %981
  br i1 %1014, label %1027, label %1015

1015:                                             ; preds = %968, %1009
  %1016 = phi i64 [ %971, %968 ], [ %982, %1009 ]
  %1017 = phi i32 [ 1, %968 ], [ %1013, %1009 ]
  br label %1018

1018:                                             ; preds = %1015, %1018
  %1019 = phi i64 [ %1024, %1018 ], [ %1016, %1015 ]
  %1020 = phi i32 [ %1023, %1018 ], [ %1017, %1015 ]
  %1021 = getelementptr inbounds i32, ptr %9, i64 %1019
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = mul nsw i32 %1022, %1020
  %1024 = add nsw i64 %1019, -1
  %1025 = trunc i64 %1019 to i32
  %1026 = icmp sgt i32 %1025, 0
  br i1 %1026, label %1018, label %1027, !llvm.loop !49

1027:                                             ; preds = %1018, %1009
  %1028 = phi i32 [ %1013, %1009 ], [ %1023, %1018 ]
  %1029 = and i64 %978, 4294967295
  %1030 = getelementptr inbounds i32, ptr %6, i64 %1029
  %1031 = load i32, ptr %1030, align 4, !tbaa !5
  %1032 = mul nsw i32 %1031, %1028
  %1033 = add nsw i32 %1032, %972
  %1034 = icmp sgt i64 %970, 2
  %1035 = add nsw i64 %971, -1
  %1036 = add i32 %969, 1
  br i1 %1034, label %968, label %1037, !llvm.loop !50

1037:                                             ; preds = %1027, %964
  %1038 = phi i32 [ %967, %964 ], [ %1033, %1027 ]
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds i8, ptr %629, i64 %1039
  %1041 = load i8, ptr %1040, align 1, !tbaa !11
  %1042 = zext i8 %1041 to i32
  %1043 = load i32, ptr %631, align 4, !tbaa !5
  %1044 = tail call i32 @llvm.smax.i32(i32 %1043, i32 %1042)
  store i32 %1044, ptr %631, align 4, !tbaa !5
  %1045 = fadd fast double %966, 1.000000e+00
  %1046 = add nuw nsw i32 %965, 1
  br i1 %958, label %1047, label %1094

1047:                                             ; preds = %1037
  %1048 = load i32, ptr %4, align 4, !tbaa !5
  %1049 = load i32, ptr %12, align 4, !tbaa !5
  %1050 = add nsw i32 %1049, -1
  %1051 = icmp slt i32 %1048, %1050
  br i1 %1051, label %1071, label %1052

1052:                                             ; preds = %1047
  %1053 = icmp eq i32 %1048, %1050
  br i1 %1053, label %1054, label %1087

1054:                                             ; preds = %1052
  store i32 0, ptr %4, align 4, !tbaa !5
  %1055 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1055, ptr %6, align 4, !tbaa !5
  br i1 %963, label %1094, label %1056

1056:                                             ; preds = %1054, %1081
  %1057 = phi i64 [ %1085, %1081 ], [ 1, %1054 ]
  %1058 = getelementptr inbounds i32, ptr %4, i64 %1057
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = getelementptr inbounds i32, ptr %12, i64 %1057
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = add nsw i32 %1061, -1
  %1063 = icmp slt i32 %1059, %1062
  br i1 %1063, label %1064, label %1079

1064:                                             ; preds = %1056
  br i1 %1051, label %1071, label %1065

1065:                                             ; preds = %1064
  %1066 = getelementptr inbounds i32, ptr %7, i64 %1057
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = getelementptr inbounds i32, ptr %6, i64 %1057
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = add nsw i32 %1069, %1067
  store i32 %1070, ptr %1068, align 4, !tbaa !5
  br label %1089

1071:                                             ; preds = %1047, %1064
  %1072 = phi i32 [ %1059, %1064 ], [ %1048, %1047 ]
  %1073 = phi ptr [ %1058, %1064 ], [ %4, %1047 ]
  %1074 = phi i64 [ %1057, %1064 ], [ 0, %1047 ]
  %1075 = add nsw i32 %1072, 1
  store i32 %1075, ptr %1073, align 4, !tbaa !5
  %1076 = getelementptr inbounds i32, ptr %7, i64 %1074
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %6, i64 %1074
  br label %1089

1079:                                             ; preds = %1056
  %1080 = icmp eq i32 %1059, %1062
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1079
  store i32 0, ptr %1058, align 4, !tbaa !5
  %1082 = getelementptr inbounds i32, ptr %8, i64 %1057
  %1083 = load i32, ptr %1082, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %6, i64 %1057
  store i32 %1083, ptr %1084, align 4, !tbaa !5
  %1085 = add nuw nsw i64 %1057, 1
  %1086 = icmp eq i64 %1085, %961
  br i1 %1086, label %1094, label %1056, !llvm.loop !51

1087:                                             ; preds = %1052, %1079
  %1088 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

1089:                                             ; preds = %1065, %1071
  %1090 = phi ptr [ %1078, %1071 ], [ %1058, %1065 ]
  %1091 = phi i32 [ %1077, %1071 ], [ 1, %1065 ]
  %1092 = load i32, ptr %1090, align 4, !tbaa !5
  %1093 = add nsw i32 %1092, %1091
  store i32 %1093, ptr %1090, align 4, !tbaa !5
  br label %1094

1094:                                             ; preds = %1081, %1089, %1054, %1037
  %1095 = icmp eq i32 %1046, %5
  br i1 %1095, label %5497, label %964, !llvm.loop !52

1096:                                             ; preds = %947, %1231
  %1097 = phi i32 [ 0, %947 ], [ %1180, %1231 ]
  %1098 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1099, label %1168

1099:                                             ; preds = %1096, %1158
  %1100 = phi i32 [ %1167, %1158 ], [ 0, %1096 ]
  %1101 = phi i64 [ %1109, %1158 ], [ %952, %1096 ]
  %1102 = phi i64 [ %1166, %1158 ], [ %951, %1096 ]
  %1103 = phi i32 [ %1164, %1158 ], [ %1098, %1096 ]
  %1104 = sub i32 %950, %1100
  %1105 = tail call i32 @llvm.smin.i32(i32 %1104, i32 0)
  %1106 = sub i32 %1104, %1105
  %1107 = zext i32 %1106 to i64
  %1108 = add nuw nsw i64 %1107, 1
  %1109 = add nsw i64 %1101, -1
  %1110 = icmp ult i32 %1106, 31
  br i1 %1110, label %1146, label %1111

1111:                                             ; preds = %1099
  %1112 = and i64 %1108, 8589934560
  %1113 = sub i64 %1102, %1112
  br label %1114

1114:                                             ; preds = %1114, %1111
  %1115 = phi i64 [ 0, %1111 ], [ %1138, %1114 ]
  %1116 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1134, %1114 ]
  %1117 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1135, %1114 ]
  %1118 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1136, %1114 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1111 ], [ %1137, %1114 ]
  %1120 = sub i64 %1102, %1115
  %1121 = getelementptr inbounds i32, ptr %11, i64 %1120
  %1122 = getelementptr inbounds i32, ptr %1121, i64 -7
  %1123 = load <8 x i32>, ptr %1122, align 4, !tbaa !5
  %1124 = shufflevector <8 x i32> %1123, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1125 = getelementptr inbounds i32, ptr %1121, i64 -15
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !5
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1121, i64 -23
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !5
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1121, i64 -31
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !5
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = mul <8 x i32> %1124, %1116
  %1135 = mul <8 x i32> %1127, %1117
  %1136 = mul <8 x i32> %1130, %1118
  %1137 = mul <8 x i32> %1133, %1119
  %1138 = add nuw i64 %1115, 32
  %1139 = icmp eq i64 %1138, %1112
  br i1 %1139, label %1140, label %1114, !llvm.loop !53

1140:                                             ; preds = %1114
  %1141 = mul <8 x i32> %1135, %1134
  %1142 = mul <8 x i32> %1136, %1141
  %1143 = mul <8 x i32> %1137, %1142
  %1144 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1143)
  %1145 = icmp eq i64 %1108, %1112
  br i1 %1145, label %1158, label %1146

1146:                                             ; preds = %1099, %1140
  %1147 = phi i64 [ %1102, %1099 ], [ %1113, %1140 ]
  %1148 = phi i32 [ 1, %1099 ], [ %1144, %1140 ]
  br label %1149

1149:                                             ; preds = %1146, %1149
  %1150 = phi i64 [ %1155, %1149 ], [ %1147, %1146 ]
  %1151 = phi i32 [ %1154, %1149 ], [ %1148, %1146 ]
  %1152 = getelementptr inbounds i32, ptr %11, i64 %1150
  %1153 = load i32, ptr %1152, align 4, !tbaa !5
  %1154 = mul nsw i32 %1153, %1151
  %1155 = add nsw i64 %1150, -1
  %1156 = trunc i64 %1150 to i32
  %1157 = icmp sgt i32 %1156, 0
  br i1 %1157, label %1149, label %1158, !llvm.loop !54

1158:                                             ; preds = %1149, %1140
  %1159 = phi i32 [ %1144, %1140 ], [ %1154, %1149 ]
  %1160 = and i64 %1109, 4294967295
  %1161 = getelementptr inbounds i32, ptr %6, i64 %1160
  %1162 = load i32, ptr %1161, align 4, !tbaa !5
  %1163 = mul nsw i32 %1162, %1159
  %1164 = add nsw i32 %1163, %1103
  %1165 = icmp sgt i64 %1101, 2
  %1166 = add nsw i64 %1102, -1
  %1167 = add i32 %1100, 1
  br i1 %1165, label %1099, label %1168, !llvm.loop !55

1168:                                             ; preds = %1158, %1096
  %1169 = phi i32 [ %1098, %1096 ], [ %1164, %1158 ]
  %1170 = icmp slt i32 %1169, %5
  br i1 %1170, label %1173, label %1171

1171:                                             ; preds = %1168
  %1172 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

1173:                                             ; preds = %1168
  %1174 = sext i32 %1169 to i64
  %1175 = getelementptr inbounds i8, ptr %629, i64 %1174
  %1176 = load i8, ptr %1175, align 1, !tbaa !11
  %1177 = zext i8 %1176 to i32
  %1178 = load i32, ptr %631, align 4, !tbaa !5
  %1179 = tail call i32 @llvm.smax.i32(i32 %1178, i32 %1177)
  store i32 %1179, ptr %631, align 4, !tbaa !5
  %1180 = add nuw nsw i32 %1097, 1
  br i1 %949, label %1181, label %1231

1181:                                             ; preds = %1173
  %1182 = load i32, ptr %4, align 4, !tbaa !5
  %1183 = load i32, ptr %12, align 4, !tbaa !5
  %1184 = add nsw i32 %1183, -1
  %1185 = icmp slt i32 %1182, %1184
  br i1 %1185, label %1208, label %1186

1186:                                             ; preds = %1181
  %1187 = icmp eq i32 %1182, %1184
  br i1 %1187, label %1188, label %1224

1188:                                             ; preds = %1186
  store i32 0, ptr %4, align 4, !tbaa !5
  %1189 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1189, ptr %6, align 4, !tbaa !5
  br i1 %954, label %1231, label %1190

1190:                                             ; preds = %1188, %1218
  %1191 = phi i64 [ %1222, %1218 ], [ 1, %1188 ]
  %1192 = getelementptr inbounds i32, ptr %4, i64 %1191
  %1193 = load i32, ptr %1192, align 4, !tbaa !5
  %1194 = getelementptr inbounds i32, ptr %12, i64 %1191
  %1195 = load i32, ptr %1194, align 4, !tbaa !5
  %1196 = add nsw i32 %1195, -1
  %1197 = icmp slt i32 %1193, %1196
  br i1 %1197, label %1198, label %1216

1198:                                             ; preds = %1190
  br i1 %1185, label %1208, label %1199

1199:                                             ; preds = %1198
  %1200 = shl i64 %1191, 32
  %1201 = add i64 %1200, -4294967296
  %1202 = ashr exact i64 %1201, 32
  %1203 = getelementptr inbounds i32, ptr %7, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %6, i64 %1191
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = add nsw i32 %1206, %1204
  store i32 %1207, ptr %1205, align 4, !tbaa !5
  br label %1226

1208:                                             ; preds = %1181, %1198
  %1209 = phi i32 [ %1193, %1198 ], [ %1182, %1181 ]
  %1210 = phi ptr [ %1192, %1198 ], [ %4, %1181 ]
  %1211 = phi i64 [ %1191, %1198 ], [ 0, %1181 ]
  %1212 = add nsw i32 %1209, 1
  store i32 %1212, ptr %1210, align 4, !tbaa !5
  %1213 = getelementptr inbounds i32, ptr %7, i64 %1211
  %1214 = load i32, ptr %1213, align 4, !tbaa !5
  %1215 = getelementptr inbounds i32, ptr %6, i64 %1211
  br label %1226

1216:                                             ; preds = %1190
  %1217 = icmp eq i32 %1193, %1196
  br i1 %1217, label %1218, label %1224

1218:                                             ; preds = %1216
  store i32 0, ptr %1192, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %8, i64 %1191
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1191
  store i32 %1220, ptr %1221, align 4, !tbaa !5
  %1222 = add nuw nsw i64 %1191, 1
  %1223 = icmp eq i64 %1222, %952
  br i1 %1223, label %1231, label %1190, !llvm.loop !56

1224:                                             ; preds = %1186, %1216
  %1225 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

1226:                                             ; preds = %1199, %1208
  %1227 = phi ptr [ %1215, %1208 ], [ %1192, %1199 ]
  %1228 = phi i32 [ %1214, %1208 ], [ 1, %1199 ]
  %1229 = load i32, ptr %1227, align 4, !tbaa !5
  %1230 = add nsw i32 %1229, %1228
  store i32 %1230, ptr %1227, align 4, !tbaa !5
  br label %1231

1231:                                             ; preds = %1218, %1226, %1188, %1173
  %1232 = icmp eq i32 %1180, %5
  br i1 %1232, label %5497, label %1096, !llvm.loop !57

1233:                                             ; preds = %636
  %1234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 64, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

1235:                                             ; preds = %18
  %1236 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1237 = load ptr, ptr %1236, align 8, !tbaa !9
  %1238 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1239 = load ptr, ptr %1238, align 8, !tbaa !9
  store i8 0, ptr %1239, align 1, !tbaa !11
  %1240 = icmp eq i32 %13, 0
  br i1 %1240, label %1241, label %1244

1241:                                             ; preds = %1235
  %1242 = load i8, ptr %1237, align 1, !tbaa !11
  %1243 = tail call i8 @llvm.abs.i8(i8 %1242, i1 false)
  store i8 %1243, ptr %1239, align 1, !tbaa !11
  br label %5497

1244:                                             ; preds = %1235
  switch i32 %1, label %1851 [
    i32 1, label %1245
    i32 0, label %1553
  ]

1245:                                             ; preds = %1244
  %1246 = getelementptr inbounds i32, ptr %3, i64 %19
  %1247 = load i32, ptr %1246, align 4, !tbaa !5
  %1248 = icmp eq i32 %1247, 0
  %1249 = icmp sgt i32 %5, 0
  br i1 %1248, label %1259, label %1250

1250:                                             ; preds = %1245
  br i1 %1249, label %1251, label %5497

1251:                                             ; preds = %1250
  %1252 = icmp sgt i32 %13, 1
  %1253 = icmp sgt i32 %13, 0
  %1254 = add i32 %13, -2
  %1255 = zext i32 %1254 to i64
  %1256 = zext i32 %13 to i64
  %1257 = add nuw i32 %5, 1
  %1258 = icmp eq i32 %13, 1
  br label %1410

1259:                                             ; preds = %1245
  br i1 %1249, label %1260, label %5497

1260:                                             ; preds = %1259
  %1261 = icmp sgt i32 %13, 1
  %1262 = icmp sgt i32 %13, 0
  %1263 = add i32 %13, -2
  %1264 = zext i32 %1263 to i64
  %1265 = zext i32 %13 to i64
  %1266 = add nuw i32 %5, 1
  %1267 = icmp eq i32 %13, 1
  br label %1268

1268:                                             ; preds = %1260, %1408
  %1269 = phi i32 [ 0, %1260 ], [ %1360, %1408 ]
  %1270 = phi double [ 0.000000e+00, %1260 ], [ %1359, %1408 ]
  %1271 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1261, label %1272, label %1341

1272:                                             ; preds = %1268, %1331
  %1273 = phi i32 [ %1340, %1331 ], [ 0, %1268 ]
  %1274 = phi i64 [ %1282, %1331 ], [ %1265, %1268 ]
  %1275 = phi i64 [ %1339, %1331 ], [ %1264, %1268 ]
  %1276 = phi i32 [ %1337, %1331 ], [ %1271, %1268 ]
  %1277 = sub i32 %1263, %1273
  %1278 = tail call i32 @llvm.smin.i32(i32 %1277, i32 0)
  %1279 = sub i32 %1277, %1278
  %1280 = zext i32 %1279 to i64
  %1281 = add nuw nsw i64 %1280, 1
  %1282 = add nsw i64 %1274, -1
  %1283 = icmp ult i32 %1279, 31
  br i1 %1283, label %1319, label %1284

1284:                                             ; preds = %1272
  %1285 = and i64 %1281, 8589934560
  %1286 = sub i64 %1275, %1285
  br label %1287

1287:                                             ; preds = %1287, %1284
  %1288 = phi i64 [ 0, %1284 ], [ %1311, %1287 ]
  %1289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1284 ], [ %1307, %1287 ]
  %1290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1284 ], [ %1308, %1287 ]
  %1291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1284 ], [ %1309, %1287 ]
  %1292 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1284 ], [ %1310, %1287 ]
  %1293 = sub i64 %1275, %1288
  %1294 = getelementptr inbounds i32, ptr %9, i64 %1293
  %1295 = getelementptr inbounds i32, ptr %1294, i64 -7
  %1296 = load <8 x i32>, ptr %1295, align 4, !tbaa !5
  %1297 = shufflevector <8 x i32> %1296, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1298 = getelementptr inbounds i32, ptr %1294, i64 -15
  %1299 = load <8 x i32>, ptr %1298, align 4, !tbaa !5
  %1300 = shufflevector <8 x i32> %1299, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1301 = getelementptr inbounds i32, ptr %1294, i64 -23
  %1302 = load <8 x i32>, ptr %1301, align 4, !tbaa !5
  %1303 = shufflevector <8 x i32> %1302, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1304 = getelementptr inbounds i32, ptr %1294, i64 -31
  %1305 = load <8 x i32>, ptr %1304, align 4, !tbaa !5
  %1306 = shufflevector <8 x i32> %1305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1307 = mul <8 x i32> %1297, %1289
  %1308 = mul <8 x i32> %1300, %1290
  %1309 = mul <8 x i32> %1303, %1291
  %1310 = mul <8 x i32> %1306, %1292
  %1311 = add nuw i64 %1288, 32
  %1312 = icmp eq i64 %1311, %1285
  br i1 %1312, label %1313, label %1287, !llvm.loop !58

1313:                                             ; preds = %1287
  %1314 = mul <8 x i32> %1308, %1307
  %1315 = mul <8 x i32> %1309, %1314
  %1316 = mul <8 x i32> %1310, %1315
  %1317 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1316)
  %1318 = icmp eq i64 %1281, %1285
  br i1 %1318, label %1331, label %1319

1319:                                             ; preds = %1272, %1313
  %1320 = phi i64 [ %1275, %1272 ], [ %1286, %1313 ]
  %1321 = phi i32 [ 1, %1272 ], [ %1317, %1313 ]
  br label %1322

1322:                                             ; preds = %1319, %1322
  %1323 = phi i64 [ %1328, %1322 ], [ %1320, %1319 ]
  %1324 = phi i32 [ %1327, %1322 ], [ %1321, %1319 ]
  %1325 = getelementptr inbounds i32, ptr %9, i64 %1323
  %1326 = load i32, ptr %1325, align 4, !tbaa !5
  %1327 = mul nsw i32 %1326, %1324
  %1328 = add nsw i64 %1323, -1
  %1329 = trunc i64 %1323 to i32
  %1330 = icmp sgt i32 %1329, 0
  br i1 %1330, label %1322, label %1331, !llvm.loop !59

1331:                                             ; preds = %1322, %1313
  %1332 = phi i32 [ %1317, %1313 ], [ %1327, %1322 ]
  %1333 = and i64 %1282, 4294967295
  %1334 = getelementptr inbounds i32, ptr %6, i64 %1333
  %1335 = load i32, ptr %1334, align 4, !tbaa !5
  %1336 = mul nsw i32 %1335, %1332
  %1337 = add nsw i32 %1336, %1276
  %1338 = icmp sgt i64 %1274, 2
  %1339 = add nsw i64 %1275, -1
  %1340 = add i32 %1273, 1
  br i1 %1338, label %1272, label %1341, !llvm.loop !60

1341:                                             ; preds = %1331, %1268
  %1342 = phi i32 [ %1271, %1268 ], [ %1337, %1331 ]
  %1343 = sext i32 %1342 to i64
  %1344 = getelementptr inbounds double, ptr %2, i64 %1343
  %1345 = load double, ptr %1344, align 8, !tbaa !18
  %1346 = getelementptr inbounds i8, ptr %1237, i64 %1343
  %1347 = load i8, ptr %1346, align 1, !tbaa !11
  %1348 = load i8, ptr %1239, align 1, !tbaa !11
  %1349 = sitofp i8 %1348 to double
  %1350 = sitofp i8 %1347 to double
  %1351 = fmul fast double %1345, %1350
  %1352 = fcmp fast uge double %1351, 0.000000e+00
  %1353 = fneg fast double %1351
  %1354 = tail call fast double @llvm.fabs.f64(double %1351)
  %1355 = fcmp fast ole double %1354, %1349
  %1356 = select nnan ninf i1 %1352, double %1351, double %1353
  %1357 = select i1 %1355, double %1349, double %1356
  %1358 = fptosi double %1357 to i8
  store i8 %1358, ptr %1239, align 1, !tbaa !11
  %1359 = fadd fast double %1345, %1270
  %1360 = add nuw nsw i32 %1269, 1
  br i1 %1262, label %1361, label %1408

1361:                                             ; preds = %1341
  %1362 = load i32, ptr %4, align 4, !tbaa !5
  %1363 = load i32, ptr %12, align 4, !tbaa !5
  %1364 = add nsw i32 %1363, -1
  %1365 = icmp slt i32 %1362, %1364
  br i1 %1365, label %1385, label %1366

1366:                                             ; preds = %1361
  %1367 = icmp eq i32 %1362, %1364
  br i1 %1367, label %1368, label %1401

1368:                                             ; preds = %1366
  store i32 0, ptr %4, align 4, !tbaa !5
  %1369 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1369, ptr %6, align 4, !tbaa !5
  br i1 %1267, label %1408, label %1370

1370:                                             ; preds = %1368, %1395
  %1371 = phi i64 [ %1399, %1395 ], [ 1, %1368 ]
  %1372 = getelementptr inbounds i32, ptr %4, i64 %1371
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = getelementptr inbounds i32, ptr %12, i64 %1371
  %1375 = load i32, ptr %1374, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1373, %1376
  br i1 %1377, label %1378, label %1393

1378:                                             ; preds = %1370
  br i1 %1365, label %1385, label %1379

1379:                                             ; preds = %1378
  %1380 = getelementptr inbounds i32, ptr %7, i64 %1371
  %1381 = load i32, ptr %1380, align 4, !tbaa !5
  %1382 = getelementptr inbounds i32, ptr %6, i64 %1371
  %1383 = load i32, ptr %1382, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1381
  store i32 %1384, ptr %1382, align 4, !tbaa !5
  br label %1403

1385:                                             ; preds = %1361, %1378
  %1386 = phi i32 [ %1373, %1378 ], [ %1362, %1361 ]
  %1387 = phi ptr [ %1372, %1378 ], [ %4, %1361 ]
  %1388 = phi i64 [ %1371, %1378 ], [ 0, %1361 ]
  %1389 = add nsw i32 %1386, 1
  store i32 %1389, ptr %1387, align 4, !tbaa !5
  %1390 = getelementptr inbounds i32, ptr %7, i64 %1388
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %6, i64 %1388
  br label %1403

1393:                                             ; preds = %1370
  %1394 = icmp eq i32 %1373, %1376
  br i1 %1394, label %1395, label %1401

1395:                                             ; preds = %1393
  store i32 0, ptr %1372, align 4, !tbaa !5
  %1396 = getelementptr inbounds i32, ptr %8, i64 %1371
  %1397 = load i32, ptr %1396, align 4, !tbaa !5
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1371
  store i32 %1397, ptr %1398, align 4, !tbaa !5
  %1399 = add nuw nsw i64 %1371, 1
  %1400 = icmp eq i64 %1399, %1265
  br i1 %1400, label %1408, label %1370, !llvm.loop !61

1401:                                             ; preds = %1366, %1393
  %1402 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

1403:                                             ; preds = %1379, %1385
  %1404 = phi ptr [ %1392, %1385 ], [ %1372, %1379 ]
  %1405 = phi i32 [ %1391, %1385 ], [ 1, %1379 ]
  %1406 = load i32, ptr %1404, align 4, !tbaa !5
  %1407 = add nsw i32 %1406, %1405
  store i32 %1407, ptr %1404, align 4, !tbaa !5
  br label %1408

1408:                                             ; preds = %1395, %1403, %1368, %1341
  %1409 = icmp eq i32 %1360, %5
  br i1 %1409, label %5497, label %1268, !llvm.loop !62

1410:                                             ; preds = %1251, %1551
  %1411 = phi i32 [ 0, %1251 ], [ %1500, %1551 ]
  %1412 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1252, label %1413, label %1482

1413:                                             ; preds = %1410, %1472
  %1414 = phi i32 [ %1481, %1472 ], [ 0, %1410 ]
  %1415 = phi i64 [ %1423, %1472 ], [ %1256, %1410 ]
  %1416 = phi i64 [ %1480, %1472 ], [ %1255, %1410 ]
  %1417 = phi i32 [ %1478, %1472 ], [ %1412, %1410 ]
  %1418 = sub i32 %1254, %1414
  %1419 = tail call i32 @llvm.smin.i32(i32 %1418, i32 0)
  %1420 = sub i32 %1418, %1419
  %1421 = zext i32 %1420 to i64
  %1422 = add nuw nsw i64 %1421, 1
  %1423 = add nsw i64 %1415, -1
  %1424 = icmp ult i32 %1420, 31
  br i1 %1424, label %1460, label %1425

1425:                                             ; preds = %1413
  %1426 = and i64 %1422, 8589934560
  %1427 = sub i64 %1416, %1426
  br label %1428

1428:                                             ; preds = %1428, %1425
  %1429 = phi i64 [ 0, %1425 ], [ %1452, %1428 ]
  %1430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1448, %1428 ]
  %1431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1449, %1428 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1450, %1428 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1425 ], [ %1451, %1428 ]
  %1434 = sub i64 %1416, %1429
  %1435 = getelementptr inbounds i32, ptr %11, i64 %1434
  %1436 = getelementptr inbounds i32, ptr %1435, i64 -7
  %1437 = load <8 x i32>, ptr %1436, align 4, !tbaa !5
  %1438 = shufflevector <8 x i32> %1437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1439 = getelementptr inbounds i32, ptr %1435, i64 -15
  %1440 = load <8 x i32>, ptr %1439, align 4, !tbaa !5
  %1441 = shufflevector <8 x i32> %1440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1442 = getelementptr inbounds i32, ptr %1435, i64 -23
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !5
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1435, i64 -31
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !5
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = mul <8 x i32> %1438, %1430
  %1449 = mul <8 x i32> %1441, %1431
  %1450 = mul <8 x i32> %1444, %1432
  %1451 = mul <8 x i32> %1447, %1433
  %1452 = add nuw i64 %1429, 32
  %1453 = icmp eq i64 %1452, %1426
  br i1 %1453, label %1454, label %1428, !llvm.loop !63

1454:                                             ; preds = %1428
  %1455 = mul <8 x i32> %1449, %1448
  %1456 = mul <8 x i32> %1450, %1455
  %1457 = mul <8 x i32> %1451, %1456
  %1458 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1457)
  %1459 = icmp eq i64 %1422, %1426
  br i1 %1459, label %1472, label %1460

1460:                                             ; preds = %1413, %1454
  %1461 = phi i64 [ %1416, %1413 ], [ %1427, %1454 ]
  %1462 = phi i32 [ 1, %1413 ], [ %1458, %1454 ]
  br label %1463

1463:                                             ; preds = %1460, %1463
  %1464 = phi i64 [ %1469, %1463 ], [ %1461, %1460 ]
  %1465 = phi i32 [ %1468, %1463 ], [ %1462, %1460 ]
  %1466 = getelementptr inbounds i32, ptr %11, i64 %1464
  %1467 = load i32, ptr %1466, align 4, !tbaa !5
  %1468 = mul nsw i32 %1467, %1465
  %1469 = add nsw i64 %1464, -1
  %1470 = trunc i64 %1464 to i32
  %1471 = icmp sgt i32 %1470, 0
  br i1 %1471, label %1463, label %1472, !llvm.loop !64

1472:                                             ; preds = %1463, %1454
  %1473 = phi i32 [ %1458, %1454 ], [ %1468, %1463 ]
  %1474 = and i64 %1423, 4294967295
  %1475 = getelementptr inbounds i32, ptr %6, i64 %1474
  %1476 = load i32, ptr %1475, align 4, !tbaa !5
  %1477 = mul nsw i32 %1476, %1473
  %1478 = add nsw i32 %1477, %1417
  %1479 = icmp sgt i64 %1415, 2
  %1480 = add nsw i64 %1416, -1
  %1481 = add i32 %1414, 1
  br i1 %1479, label %1413, label %1482, !llvm.loop !65

1482:                                             ; preds = %1472, %1410
  %1483 = phi i32 [ %1412, %1410 ], [ %1478, %1472 ]
  %1484 = icmp slt i32 %1483, %5
  br i1 %1484, label %1487, label %1485

1485:                                             ; preds = %1482
  %1486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

1487:                                             ; preds = %1482
  %1488 = sext i32 %1483 to i64
  %1489 = getelementptr inbounds i8, ptr %1237, i64 %1488
  %1490 = load i8, ptr %1489, align 1, !tbaa !11
  %1491 = load i8, ptr %1239, align 1, !tbaa !11
  %1492 = sitofp i8 %1491 to double
  %1493 = sitofp i8 %1490 to double
  %1494 = icmp slt i8 %1490, 0
  %1495 = fneg fast double %1493
  %1496 = select i1 %1494, double %1495, double %1493
  %1497 = fcmp fast ole double %1496, %1492
  %1498 = select fast i1 %1497, double %1492, double %1496
  %1499 = fptosi double %1498 to i8
  store i8 %1499, ptr %1239, align 1, !tbaa !11
  %1500 = add nuw nsw i32 %1411, 1
  br i1 %1253, label %1501, label %1551

1501:                                             ; preds = %1487
  %1502 = load i32, ptr %4, align 4, !tbaa !5
  %1503 = load i32, ptr %12, align 4, !tbaa !5
  %1504 = add nsw i32 %1503, -1
  %1505 = icmp slt i32 %1502, %1504
  br i1 %1505, label %1528, label %1506

1506:                                             ; preds = %1501
  %1507 = icmp eq i32 %1502, %1504
  br i1 %1507, label %1508, label %1544

1508:                                             ; preds = %1506
  store i32 0, ptr %4, align 4, !tbaa !5
  %1509 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1509, ptr %6, align 4, !tbaa !5
  br i1 %1258, label %1551, label %1510

1510:                                             ; preds = %1508, %1538
  %1511 = phi i64 [ %1542, %1538 ], [ 1, %1508 ]
  %1512 = getelementptr inbounds i32, ptr %4, i64 %1511
  %1513 = load i32, ptr %1512, align 4, !tbaa !5
  %1514 = getelementptr inbounds i32, ptr %12, i64 %1511
  %1515 = load i32, ptr %1514, align 4, !tbaa !5
  %1516 = add nsw i32 %1515, -1
  %1517 = icmp slt i32 %1513, %1516
  br i1 %1517, label %1518, label %1536

1518:                                             ; preds = %1510
  br i1 %1505, label %1528, label %1519

1519:                                             ; preds = %1518
  %1520 = shl i64 %1511, 32
  %1521 = add i64 %1520, -4294967296
  %1522 = ashr exact i64 %1521, 32
  %1523 = getelementptr inbounds i32, ptr %7, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %6, i64 %1511
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, %1524
  store i32 %1527, ptr %1525, align 4, !tbaa !5
  br label %1546

1528:                                             ; preds = %1501, %1518
  %1529 = phi i32 [ %1513, %1518 ], [ %1502, %1501 ]
  %1530 = phi ptr [ %1512, %1518 ], [ %4, %1501 ]
  %1531 = phi i64 [ %1511, %1518 ], [ 0, %1501 ]
  %1532 = add nsw i32 %1529, 1
  store i32 %1532, ptr %1530, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = getelementptr inbounds i32, ptr %6, i64 %1531
  br label %1546

1536:                                             ; preds = %1510
  %1537 = icmp eq i32 %1513, %1516
  br i1 %1537, label %1538, label %1544

1538:                                             ; preds = %1536
  store i32 0, ptr %1512, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %8, i64 %1511
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = getelementptr inbounds i32, ptr %6, i64 %1511
  store i32 %1540, ptr %1541, align 4, !tbaa !5
  %1542 = add nuw nsw i64 %1511, 1
  %1543 = icmp eq i64 %1542, %1256
  br i1 %1543, label %1551, label %1510, !llvm.loop !66

1544:                                             ; preds = %1506, %1536
  %1545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

1546:                                             ; preds = %1519, %1528
  %1547 = phi ptr [ %1535, %1528 ], [ %1512, %1519 ]
  %1548 = phi i32 [ %1534, %1528 ], [ 1, %1519 ]
  %1549 = load i32, ptr %1547, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, %1548
  store i32 %1550, ptr %1547, align 4, !tbaa !5
  br label %1551

1551:                                             ; preds = %1538, %1546, %1508, %1487
  %1552 = icmp eq i32 %1500, %5
  br i1 %1552, label %5497, label %1410, !llvm.loop !67

1553:                                             ; preds = %1244
  %1554 = getelementptr inbounds i32, ptr %3, i64 %19
  %1555 = load i32, ptr %1554, align 4, !tbaa !5
  %1556 = icmp eq i32 %1555, 0
  %1557 = icmp sgt i32 %5, 0
  br i1 %1556, label %1567, label %1558

1558:                                             ; preds = %1553
  br i1 %1557, label %1559, label %5497

1559:                                             ; preds = %1558
  %1560 = icmp sgt i32 %13, 1
  %1561 = icmp sgt i32 %13, 0
  %1562 = add i32 %13, -2
  %1563 = zext i32 %1562 to i64
  %1564 = zext i32 %13 to i64
  %1565 = add nuw i32 %5, 1
  %1566 = icmp eq i32 %13, 1
  br label %1711

1567:                                             ; preds = %1553
  br i1 %1557, label %1568, label %5497

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1576

1576:                                             ; preds = %1568, %1709
  %1577 = phi i32 [ 0, %1568 ], [ %1661, %1709 ]
  %1578 = phi double [ 0.000000e+00, %1568 ], [ %1660, %1709 ]
  %1579 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1569, label %1580, label %1649

1580:                                             ; preds = %1576, %1639
  %1581 = phi i32 [ %1648, %1639 ], [ 0, %1576 ]
  %1582 = phi i64 [ %1590, %1639 ], [ %1573, %1576 ]
  %1583 = phi i64 [ %1647, %1639 ], [ %1572, %1576 ]
  %1584 = phi i32 [ %1645, %1639 ], [ %1579, %1576 ]
  %1585 = sub i32 %1571, %1581
  %1586 = tail call i32 @llvm.smin.i32(i32 %1585, i32 0)
  %1587 = sub i32 %1585, %1586
  %1588 = zext i32 %1587 to i64
  %1589 = add nuw nsw i64 %1588, 1
  %1590 = add nsw i64 %1582, -1
  %1591 = icmp ult i32 %1587, 31
  br i1 %1591, label %1627, label %1592

1592:                                             ; preds = %1580
  %1593 = and i64 %1589, 8589934560
  %1594 = sub i64 %1583, %1593
  br label %1595

1595:                                             ; preds = %1595, %1592
  %1596 = phi i64 [ 0, %1592 ], [ %1619, %1595 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1615, %1595 ]
  %1598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1616, %1595 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1617, %1595 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1592 ], [ %1618, %1595 ]
  %1601 = sub i64 %1583, %1596
  %1602 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1603 = getelementptr inbounds i32, ptr %1602, i64 -7
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !5
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1602, i64 -15
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !5
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1602, i64 -23
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !5
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = getelementptr inbounds i32, ptr %1602, i64 -31
  %1613 = load <8 x i32>, ptr %1612, align 4, !tbaa !5
  %1614 = shufflevector <8 x i32> %1613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1615 = mul <8 x i32> %1605, %1597
  %1616 = mul <8 x i32> %1608, %1598
  %1617 = mul <8 x i32> %1611, %1599
  %1618 = mul <8 x i32> %1614, %1600
  %1619 = add nuw i64 %1596, 32
  %1620 = icmp eq i64 %1619, %1593
  br i1 %1620, label %1621, label %1595, !llvm.loop !68

1621:                                             ; preds = %1595
  %1622 = mul <8 x i32> %1616, %1615
  %1623 = mul <8 x i32> %1617, %1622
  %1624 = mul <8 x i32> %1618, %1623
  %1625 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1624)
  %1626 = icmp eq i64 %1589, %1593
  br i1 %1626, label %1639, label %1627

1627:                                             ; preds = %1580, %1621
  %1628 = phi i64 [ %1583, %1580 ], [ %1594, %1621 ]
  %1629 = phi i32 [ 1, %1580 ], [ %1625, %1621 ]
  br label %1630

1630:                                             ; preds = %1627, %1630
  %1631 = phi i64 [ %1636, %1630 ], [ %1628, %1627 ]
  %1632 = phi i32 [ %1635, %1630 ], [ %1629, %1627 ]
  %1633 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1634 = load i32, ptr %1633, align 4, !tbaa !5
  %1635 = mul nsw i32 %1634, %1632
  %1636 = add nsw i64 %1631, -1
  %1637 = trunc i64 %1631 to i32
  %1638 = icmp sgt i32 %1637, 0
  br i1 %1638, label %1630, label %1639, !llvm.loop !69

1639:                                             ; preds = %1630, %1621
  %1640 = phi i32 [ %1625, %1621 ], [ %1635, %1630 ]
  %1641 = and i64 %1590, 4294967295
  %1642 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = mul nsw i32 %1643, %1640
  %1645 = add nsw i32 %1644, %1584
  %1646 = icmp sgt i64 %1582, 2
  %1647 = add nsw i64 %1583, -1
  %1648 = add i32 %1581, 1
  br i1 %1646, label %1580, label %1649, !llvm.loop !70

1649:                                             ; preds = %1639, %1576
  %1650 = phi i32 [ %1579, %1576 ], [ %1645, %1639 ]
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i8, ptr %1237, i64 %1651
  %1653 = load i8, ptr %1652, align 1, !tbaa !11
  %1654 = load i8, ptr %1239, align 1, !tbaa !11
  %1655 = sext i8 %1654 to i32
  %1656 = tail call i8 @llvm.abs.i8(i8 %1653, i1 false)
  %1657 = zext i8 %1656 to i32
  %1658 = icmp slt i32 %1655, %1657
  %1659 = select i1 %1658, i8 %1656, i8 %1654
  store i8 %1659, ptr %1239, align 1, !tbaa !11
  %1660 = fadd fast double %1578, 1.000000e+00
  %1661 = add nuw nsw i32 %1577, 1
  br i1 %1570, label %1662, label %1709

1662:                                             ; preds = %1649
  %1663 = load i32, ptr %4, align 4, !tbaa !5
  %1664 = load i32, ptr %12, align 4, !tbaa !5
  %1665 = add nsw i32 %1664, -1
  %1666 = icmp slt i32 %1663, %1665
  br i1 %1666, label %1686, label %1667

1667:                                             ; preds = %1662
  %1668 = icmp eq i32 %1663, %1665
  br i1 %1668, label %1669, label %1702

1669:                                             ; preds = %1667
  store i32 0, ptr %4, align 4, !tbaa !5
  %1670 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1670, ptr %6, align 4, !tbaa !5
  br i1 %1575, label %1709, label %1671

1671:                                             ; preds = %1669, %1696
  %1672 = phi i64 [ %1700, %1696 ], [ 1, %1669 ]
  %1673 = getelementptr inbounds i32, ptr %4, i64 %1672
  %1674 = load i32, ptr %1673, align 4, !tbaa !5
  %1675 = getelementptr inbounds i32, ptr %12, i64 %1672
  %1676 = load i32, ptr %1675, align 4, !tbaa !5
  %1677 = add nsw i32 %1676, -1
  %1678 = icmp slt i32 %1674, %1677
  br i1 %1678, label %1679, label %1694

1679:                                             ; preds = %1671
  br i1 %1666, label %1686, label %1680

1680:                                             ; preds = %1679
  %1681 = getelementptr inbounds i32, ptr %7, i64 %1672
  %1682 = load i32, ptr %1681, align 4, !tbaa !5
  %1683 = getelementptr inbounds i32, ptr %6, i64 %1672
  %1684 = load i32, ptr %1683, align 4, !tbaa !5
  %1685 = add nsw i32 %1684, %1682
  store i32 %1685, ptr %1683, align 4, !tbaa !5
  br label %1704

1686:                                             ; preds = %1662, %1679
  %1687 = phi i32 [ %1674, %1679 ], [ %1663, %1662 ]
  %1688 = phi ptr [ %1673, %1679 ], [ %4, %1662 ]
  %1689 = phi i64 [ %1672, %1679 ], [ 0, %1662 ]
  %1690 = add nsw i32 %1687, 1
  store i32 %1690, ptr %1688, align 4, !tbaa !5
  %1691 = getelementptr inbounds i32, ptr %7, i64 %1689
  %1692 = load i32, ptr %1691, align 4, !tbaa !5
  %1693 = getelementptr inbounds i32, ptr %6, i64 %1689
  br label %1704

1694:                                             ; preds = %1671
  %1695 = icmp eq i32 %1674, %1677
  br i1 %1695, label %1696, label %1702

1696:                                             ; preds = %1694
  store i32 0, ptr %1673, align 4, !tbaa !5
  %1697 = getelementptr inbounds i32, ptr %8, i64 %1672
  %1698 = load i32, ptr %1697, align 4, !tbaa !5
  %1699 = getelementptr inbounds i32, ptr %6, i64 %1672
  store i32 %1698, ptr %1699, align 4, !tbaa !5
  %1700 = add nuw nsw i64 %1672, 1
  %1701 = icmp eq i64 %1700, %1573
  br i1 %1701, label %1709, label %1671, !llvm.loop !71

1702:                                             ; preds = %1667, %1694
  %1703 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

1704:                                             ; preds = %1680, %1686
  %1705 = phi ptr [ %1693, %1686 ], [ %1673, %1680 ]
  %1706 = phi i32 [ %1692, %1686 ], [ 1, %1680 ]
  %1707 = load i32, ptr %1705, align 4, !tbaa !5
  %1708 = add nsw i32 %1707, %1706
  store i32 %1708, ptr %1705, align 4, !tbaa !5
  br label %1709

1709:                                             ; preds = %1696, %1704, %1669, %1649
  %1710 = icmp eq i32 %1661, %5
  br i1 %1710, label %5497, label %1576, !llvm.loop !72

1711:                                             ; preds = %1559, %1849
  %1712 = phi i32 [ 0, %1559 ], [ %1798, %1849 ]
  %1713 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1560, label %1714, label %1783

1714:                                             ; preds = %1711, %1773
  %1715 = phi i32 [ %1782, %1773 ], [ 0, %1711 ]
  %1716 = phi i64 [ %1724, %1773 ], [ %1564, %1711 ]
  %1717 = phi i64 [ %1781, %1773 ], [ %1563, %1711 ]
  %1718 = phi i32 [ %1779, %1773 ], [ %1713, %1711 ]
  %1719 = sub i32 %1562, %1715
  %1720 = tail call i32 @llvm.smin.i32(i32 %1719, i32 0)
  %1721 = sub i32 %1719, %1720
  %1722 = zext i32 %1721 to i64
  %1723 = add nuw nsw i64 %1722, 1
  %1724 = add nsw i64 %1716, -1
  %1725 = icmp ult i32 %1721, 31
  br i1 %1725, label %1761, label %1726

1726:                                             ; preds = %1714
  %1727 = and i64 %1723, 8589934560
  %1728 = sub i64 %1717, %1727
  br label %1729

1729:                                             ; preds = %1729, %1726
  %1730 = phi i64 [ 0, %1726 ], [ %1753, %1729 ]
  %1731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1726 ], [ %1749, %1729 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1726 ], [ %1750, %1729 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1726 ], [ %1751, %1729 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1726 ], [ %1752, %1729 ]
  %1735 = sub i64 %1717, %1730
  %1736 = getelementptr inbounds i32, ptr %11, i64 %1735
  %1737 = getelementptr inbounds i32, ptr %1736, i64 -7
  %1738 = load <8 x i32>, ptr %1737, align 4, !tbaa !5
  %1739 = shufflevector <8 x i32> %1738, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1740 = getelementptr inbounds i32, ptr %1736, i64 -15
  %1741 = load <8 x i32>, ptr %1740, align 4, !tbaa !5
  %1742 = shufflevector <8 x i32> %1741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1743 = getelementptr inbounds i32, ptr %1736, i64 -23
  %1744 = load <8 x i32>, ptr %1743, align 4, !tbaa !5
  %1745 = shufflevector <8 x i32> %1744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1746 = getelementptr inbounds i32, ptr %1736, i64 -31
  %1747 = load <8 x i32>, ptr %1746, align 4, !tbaa !5
  %1748 = shufflevector <8 x i32> %1747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1749 = mul <8 x i32> %1739, %1731
  %1750 = mul <8 x i32> %1742, %1732
  %1751 = mul <8 x i32> %1745, %1733
  %1752 = mul <8 x i32> %1748, %1734
  %1753 = add nuw i64 %1730, 32
  %1754 = icmp eq i64 %1753, %1727
  br i1 %1754, label %1755, label %1729, !llvm.loop !73

1755:                                             ; preds = %1729
  %1756 = mul <8 x i32> %1750, %1749
  %1757 = mul <8 x i32> %1751, %1756
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1758)
  %1760 = icmp eq i64 %1723, %1727
  br i1 %1760, label %1773, label %1761

1761:                                             ; preds = %1714, %1755
  %1762 = phi i64 [ %1717, %1714 ], [ %1728, %1755 ]
  %1763 = phi i32 [ 1, %1714 ], [ %1759, %1755 ]
  br label %1764

1764:                                             ; preds = %1761, %1764
  %1765 = phi i64 [ %1770, %1764 ], [ %1762, %1761 ]
  %1766 = phi i32 [ %1769, %1764 ], [ %1763, %1761 ]
  %1767 = getelementptr inbounds i32, ptr %11, i64 %1765
  %1768 = load i32, ptr %1767, align 4, !tbaa !5
  %1769 = mul nsw i32 %1768, %1766
  %1770 = add nsw i64 %1765, -1
  %1771 = trunc i64 %1765 to i32
  %1772 = icmp sgt i32 %1771, 0
  br i1 %1772, label %1764, label %1773, !llvm.loop !74

1773:                                             ; preds = %1764, %1755
  %1774 = phi i32 [ %1759, %1755 ], [ %1769, %1764 ]
  %1775 = and i64 %1724, 4294967295
  %1776 = getelementptr inbounds i32, ptr %6, i64 %1775
  %1777 = load i32, ptr %1776, align 4, !tbaa !5
  %1778 = mul nsw i32 %1777, %1774
  %1779 = add nsw i32 %1778, %1718
  %1780 = icmp sgt i64 %1716, 2
  %1781 = add nsw i64 %1717, -1
  %1782 = add i32 %1715, 1
  br i1 %1780, label %1714, label %1783, !llvm.loop !75

1783:                                             ; preds = %1773, %1711
  %1784 = phi i32 [ %1713, %1711 ], [ %1779, %1773 ]
  %1785 = icmp slt i32 %1784, %5
  br i1 %1785, label %1788, label %1786

1786:                                             ; preds = %1783
  %1787 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

1788:                                             ; preds = %1783
  %1789 = sext i32 %1784 to i64
  %1790 = getelementptr inbounds i8, ptr %1237, i64 %1789
  %1791 = load i8, ptr %1790, align 1, !tbaa !11
  %1792 = load i8, ptr %1239, align 1, !tbaa !11
  %1793 = sext i8 %1792 to i32
  %1794 = tail call i8 @llvm.abs.i8(i8 %1791, i1 false)
  %1795 = zext i8 %1794 to i32
  %1796 = icmp slt i32 %1793, %1795
  %1797 = select i1 %1796, i8 %1794, i8 %1792
  store i8 %1797, ptr %1239, align 1, !tbaa !11
  %1798 = add nuw nsw i32 %1712, 1
  br i1 %1561, label %1799, label %1849

1799:                                             ; preds = %1788
  %1800 = load i32, ptr %4, align 4, !tbaa !5
  %1801 = load i32, ptr %12, align 4, !tbaa !5
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1800, %1802
  br i1 %1803, label %1826, label %1804

1804:                                             ; preds = %1799
  %1805 = icmp eq i32 %1800, %1802
  br i1 %1805, label %1806, label %1842

1806:                                             ; preds = %1804
  store i32 0, ptr %4, align 4, !tbaa !5
  %1807 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1807, ptr %6, align 4, !tbaa !5
  br i1 %1566, label %1849, label %1808

1808:                                             ; preds = %1806, %1836
  %1809 = phi i64 [ %1840, %1836 ], [ 1, %1806 ]
  %1810 = getelementptr inbounds i32, ptr %4, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !5
  %1812 = getelementptr inbounds i32, ptr %12, i64 %1809
  %1813 = load i32, ptr %1812, align 4, !tbaa !5
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1811, %1814
  br i1 %1815, label %1816, label %1834

1816:                                             ; preds = %1808
  br i1 %1803, label %1826, label %1817

1817:                                             ; preds = %1816
  %1818 = shl i64 %1809, 32
  %1819 = add i64 %1818, -4294967296
  %1820 = ashr exact i64 %1819, 32
  %1821 = getelementptr inbounds i32, ptr %7, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !5
  %1823 = getelementptr inbounds i32, ptr %6, i64 %1809
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = add nsw i32 %1824, %1822
  store i32 %1825, ptr %1823, align 4, !tbaa !5
  br label %1844

1826:                                             ; preds = %1799, %1816
  %1827 = phi i32 [ %1811, %1816 ], [ %1800, %1799 ]
  %1828 = phi ptr [ %1810, %1816 ], [ %4, %1799 ]
  %1829 = phi i64 [ %1809, %1816 ], [ 0, %1799 ]
  %1830 = add nsw i32 %1827, 1
  store i32 %1830, ptr %1828, align 4, !tbaa !5
  %1831 = getelementptr inbounds i32, ptr %7, i64 %1829
  %1832 = load i32, ptr %1831, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %6, i64 %1829
  br label %1844

1834:                                             ; preds = %1808
  %1835 = icmp eq i32 %1811, %1814
  br i1 %1835, label %1836, label %1842

1836:                                             ; preds = %1834
  store i32 0, ptr %1810, align 4, !tbaa !5
  %1837 = getelementptr inbounds i32, ptr %8, i64 %1809
  %1838 = load i32, ptr %1837, align 4, !tbaa !5
  %1839 = getelementptr inbounds i32, ptr %6, i64 %1809
  store i32 %1838, ptr %1839, align 4, !tbaa !5
  %1840 = add nuw nsw i64 %1809, 1
  %1841 = icmp eq i64 %1840, %1564
  br i1 %1841, label %1849, label %1808, !llvm.loop !76

1842:                                             ; preds = %1804, %1834
  %1843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

1844:                                             ; preds = %1817, %1826
  %1845 = phi ptr [ %1833, %1826 ], [ %1810, %1817 ]
  %1846 = phi i32 [ %1832, %1826 ], [ 1, %1817 ]
  %1847 = load i32, ptr %1845, align 4, !tbaa !5
  %1848 = add nsw i32 %1847, %1846
  store i32 %1848, ptr %1845, align 4, !tbaa !5
  br label %1849

1849:                                             ; preds = %1836, %1844, %1806, %1788
  %1850 = icmp eq i32 %1798, %5
  br i1 %1850, label %5497, label %1711, !llvm.loop !77

1851:                                             ; preds = %1244
  %1852 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 68, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

1853:                                             ; preds = %18
  %1854 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1855 = load ptr, ptr %1854, align 8, !tbaa !9
  %1856 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1857 = load ptr, ptr %1856, align 8, !tbaa !9
  store i16 0, ptr %1857, align 2, !tbaa !78
  %1858 = icmp eq i32 %13, 0
  br i1 %1858, label %1859, label %1862

1859:                                             ; preds = %1853
  %1860 = load i8, ptr %1855, align 1, !tbaa !11
  %1861 = zext i8 %1860 to i16
  store i16 %1861, ptr %1857, align 2, !tbaa !78
  br label %5497

1862:                                             ; preds = %1853
  switch i32 %1, label %2463 [
    i32 1, label %1863
    i32 0, label %2167
  ]

1863:                                             ; preds = %1862
  %1864 = getelementptr inbounds i32, ptr %3, i64 %19
  %1865 = load i32, ptr %1864, align 4, !tbaa !5
  %1866 = icmp eq i32 %1865, 0
  %1867 = icmp sgt i32 %5, 0
  br i1 %1866, label %1877, label %1868

1868:                                             ; preds = %1863
  br i1 %1867, label %1869, label %5497

1869:                                             ; preds = %1868
  %1870 = icmp sgt i32 %13, 1
  %1871 = icmp sgt i32 %13, 0
  %1872 = add i32 %13, -2
  %1873 = zext i32 %1872 to i64
  %1874 = zext i32 %13 to i64
  %1875 = add nuw i32 %5, 1
  %1876 = icmp eq i32 %13, 1
  br label %2028

1877:                                             ; preds = %1863
  br i1 %1867, label %1878, label %5497

1878:                                             ; preds = %1877
  %1879 = icmp sgt i32 %13, 1
  %1880 = icmp sgt i32 %13, 0
  %1881 = add i32 %13, -2
  %1882 = zext i32 %1881 to i64
  %1883 = zext i32 %13 to i64
  %1884 = add nuw i32 %5, 1
  %1885 = icmp eq i32 %13, 1
  br label %1886

1886:                                             ; preds = %1878, %2026
  %1887 = phi i16 [ 0, %1878 ], [ %1976, %2026 ]
  %1888 = phi i32 [ 0, %1878 ], [ %1978, %2026 ]
  %1889 = phi double [ 0.000000e+00, %1878 ], [ %1977, %2026 ]
  %1890 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1879, label %1891, label %1960

1891:                                             ; preds = %1886, %1950
  %1892 = phi i32 [ %1959, %1950 ], [ 0, %1886 ]
  %1893 = phi i64 [ %1901, %1950 ], [ %1883, %1886 ]
  %1894 = phi i64 [ %1958, %1950 ], [ %1882, %1886 ]
  %1895 = phi i32 [ %1956, %1950 ], [ %1890, %1886 ]
  %1896 = sub i32 %1881, %1892
  %1897 = tail call i32 @llvm.smin.i32(i32 %1896, i32 0)
  %1898 = sub i32 %1896, %1897
  %1899 = zext i32 %1898 to i64
  %1900 = add nuw nsw i64 %1899, 1
  %1901 = add nsw i64 %1893, -1
  %1902 = icmp ult i32 %1898, 31
  br i1 %1902, label %1938, label %1903

1903:                                             ; preds = %1891
  %1904 = and i64 %1900, 8589934560
  %1905 = sub i64 %1894, %1904
  br label %1906

1906:                                             ; preds = %1906, %1903
  %1907 = phi i64 [ 0, %1903 ], [ %1930, %1906 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1903 ], [ %1926, %1906 ]
  %1909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1903 ], [ %1927, %1906 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1903 ], [ %1928, %1906 ]
  %1911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1903 ], [ %1929, %1906 ]
  %1912 = sub i64 %1894, %1907
  %1913 = getelementptr inbounds i32, ptr %9, i64 %1912
  %1914 = getelementptr inbounds i32, ptr %1913, i64 -7
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !5
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1913, i64 -15
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !5
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1913, i64 -23
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !5
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = getelementptr inbounds i32, ptr %1913, i64 -31
  %1924 = load <8 x i32>, ptr %1923, align 4, !tbaa !5
  %1925 = shufflevector <8 x i32> %1924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1926 = mul <8 x i32> %1916, %1908
  %1927 = mul <8 x i32> %1919, %1909
  %1928 = mul <8 x i32> %1922, %1910
  %1929 = mul <8 x i32> %1925, %1911
  %1930 = add nuw i64 %1907, 32
  %1931 = icmp eq i64 %1930, %1904
  br i1 %1931, label %1932, label %1906, !llvm.loop !80

1932:                                             ; preds = %1906
  %1933 = mul <8 x i32> %1927, %1926
  %1934 = mul <8 x i32> %1928, %1933
  %1935 = mul <8 x i32> %1929, %1934
  %1936 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1935)
  %1937 = icmp eq i64 %1900, %1904
  br i1 %1937, label %1950, label %1938

1938:                                             ; preds = %1891, %1932
  %1939 = phi i64 [ %1894, %1891 ], [ %1905, %1932 ]
  %1940 = phi i32 [ 1, %1891 ], [ %1936, %1932 ]
  br label %1941

1941:                                             ; preds = %1938, %1941
  %1942 = phi i64 [ %1947, %1941 ], [ %1939, %1938 ]
  %1943 = phi i32 [ %1946, %1941 ], [ %1940, %1938 ]
  %1944 = getelementptr inbounds i32, ptr %9, i64 %1942
  %1945 = load i32, ptr %1944, align 4, !tbaa !5
  %1946 = mul nsw i32 %1945, %1943
  %1947 = add nsw i64 %1942, -1
  %1948 = trunc i64 %1942 to i32
  %1949 = icmp sgt i32 %1948, 0
  br i1 %1949, label %1941, label %1950, !llvm.loop !81

1950:                                             ; preds = %1941, %1932
  %1951 = phi i32 [ %1936, %1932 ], [ %1946, %1941 ]
  %1952 = and i64 %1901, 4294967295
  %1953 = getelementptr inbounds i32, ptr %6, i64 %1952
  %1954 = load i32, ptr %1953, align 4, !tbaa !5
  %1955 = mul nsw i32 %1954, %1951
  %1956 = add nsw i32 %1955, %1895
  %1957 = icmp sgt i64 %1893, 2
  %1958 = add nsw i64 %1894, -1
  %1959 = add i32 %1892, 1
  br i1 %1957, label %1891, label %1960, !llvm.loop !82

1960:                                             ; preds = %1950, %1886
  %1961 = phi i32 [ %1890, %1886 ], [ %1956, %1950 ]
  %1962 = sext i32 %1961 to i64
  %1963 = getelementptr inbounds double, ptr %2, i64 %1962
  %1964 = load double, ptr %1963, align 8, !tbaa !18
  %1965 = getelementptr inbounds i8, ptr %1855, i64 %1962
  %1966 = load i8, ptr %1965, align 1, !tbaa !11
  %1967 = sitofp i16 %1887 to double
  %1968 = uitofp i8 %1966 to double
  %1969 = fmul fast double %1964, %1968
  %1970 = fcmp fast uge double %1969, 0.000000e+00
  %1971 = fneg fast double %1969
  %1972 = tail call fast double @llvm.fabs.f64(double %1969)
  %1973 = fcmp fast ole double %1972, %1967
  %1974 = select nnan ninf i1 %1970, double %1969, double %1971
  %1975 = select i1 %1973, double %1967, double %1974
  %1976 = fptosi double %1975 to i16
  store i16 %1976, ptr %1857, align 2, !tbaa !78
  %1977 = fadd fast double %1964, %1889
  %1978 = add nuw nsw i32 %1888, 1
  br i1 %1880, label %1979, label %2026

1979:                                             ; preds = %1960
  %1980 = load i32, ptr %4, align 4, !tbaa !5
  %1981 = load i32, ptr %12, align 4, !tbaa !5
  %1982 = add nsw i32 %1981, -1
  %1983 = icmp slt i32 %1980, %1982
  br i1 %1983, label %2003, label %1984

1984:                                             ; preds = %1979
  %1985 = icmp eq i32 %1980, %1982
  br i1 %1985, label %1986, label %2019

1986:                                             ; preds = %1984
  store i32 0, ptr %4, align 4, !tbaa !5
  %1987 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1987, ptr %6, align 4, !tbaa !5
  br i1 %1885, label %2026, label %1988

1988:                                             ; preds = %1986, %2013
  %1989 = phi i64 [ %2017, %2013 ], [ 1, %1986 ]
  %1990 = getelementptr inbounds i32, ptr %4, i64 %1989
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = getelementptr inbounds i32, ptr %12, i64 %1989
  %1993 = load i32, ptr %1992, align 4, !tbaa !5
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1991, %1994
  br i1 %1995, label %1996, label %2011

1996:                                             ; preds = %1988
  br i1 %1983, label %2003, label %1997

1997:                                             ; preds = %1996
  %1998 = getelementptr inbounds i32, ptr %7, i64 %1989
  %1999 = load i32, ptr %1998, align 4, !tbaa !5
  %2000 = getelementptr inbounds i32, ptr %6, i64 %1989
  %2001 = load i32, ptr %2000, align 4, !tbaa !5
  %2002 = add nsw i32 %2001, %1999
  store i32 %2002, ptr %2000, align 4, !tbaa !5
  br label %2021

2003:                                             ; preds = %1979, %1996
  %2004 = phi i32 [ %1991, %1996 ], [ %1980, %1979 ]
  %2005 = phi ptr [ %1990, %1996 ], [ %4, %1979 ]
  %2006 = phi i64 [ %1989, %1996 ], [ 0, %1979 ]
  %2007 = add nsw i32 %2004, 1
  store i32 %2007, ptr %2005, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %7, i64 %2006
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = getelementptr inbounds i32, ptr %6, i64 %2006
  br label %2021

2011:                                             ; preds = %1988
  %2012 = icmp eq i32 %1991, %1994
  br i1 %2012, label %2013, label %2019

2013:                                             ; preds = %2011
  store i32 0, ptr %1990, align 4, !tbaa !5
  %2014 = getelementptr inbounds i32, ptr %8, i64 %1989
  %2015 = load i32, ptr %2014, align 4, !tbaa !5
  %2016 = getelementptr inbounds i32, ptr %6, i64 %1989
  store i32 %2015, ptr %2016, align 4, !tbaa !5
  %2017 = add nuw nsw i64 %1989, 1
  %2018 = icmp eq i64 %2017, %1883
  br i1 %2018, label %2026, label %1988, !llvm.loop !83

2019:                                             ; preds = %1984, %2011
  %2020 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2021:                                             ; preds = %1997, %2003
  %2022 = phi ptr [ %2010, %2003 ], [ %1990, %1997 ]
  %2023 = phi i32 [ %2009, %2003 ], [ 1, %1997 ]
  %2024 = load i32, ptr %2022, align 4, !tbaa !5
  %2025 = add nsw i32 %2024, %2023
  store i32 %2025, ptr %2022, align 4, !tbaa !5
  br label %2026

2026:                                             ; preds = %2013, %2021, %1986, %1960
  %2027 = icmp eq i32 %1978, %5
  br i1 %2027, label %5497, label %1886, !llvm.loop !84

2028:                                             ; preds = %1869, %2165
  %2029 = phi i16 [ 0, %1869 ], [ %2113, %2165 ]
  %2030 = phi i32 [ 0, %1869 ], [ %2114, %2165 ]
  %2031 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1870, label %2032, label %2101

2032:                                             ; preds = %2028, %2091
  %2033 = phi i32 [ %2100, %2091 ], [ 0, %2028 ]
  %2034 = phi i64 [ %2042, %2091 ], [ %1874, %2028 ]
  %2035 = phi i64 [ %2099, %2091 ], [ %1873, %2028 ]
  %2036 = phi i32 [ %2097, %2091 ], [ %2031, %2028 ]
  %2037 = sub i32 %1872, %2033
  %2038 = tail call i32 @llvm.smin.i32(i32 %2037, i32 0)
  %2039 = sub i32 %2037, %2038
  %2040 = zext i32 %2039 to i64
  %2041 = add nuw nsw i64 %2040, 1
  %2042 = add nsw i64 %2034, -1
  %2043 = icmp ult i32 %2039, 31
  br i1 %2043, label %2079, label %2044

2044:                                             ; preds = %2032
  %2045 = and i64 %2041, 8589934560
  %2046 = sub i64 %2035, %2045
  br label %2047

2047:                                             ; preds = %2047, %2044
  %2048 = phi i64 [ 0, %2044 ], [ %2071, %2047 ]
  %2049 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2044 ], [ %2067, %2047 ]
  %2050 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2044 ], [ %2068, %2047 ]
  %2051 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2044 ], [ %2069, %2047 ]
  %2052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2044 ], [ %2070, %2047 ]
  %2053 = sub i64 %2035, %2048
  %2054 = getelementptr inbounds i32, ptr %11, i64 %2053
  %2055 = getelementptr inbounds i32, ptr %2054, i64 -7
  %2056 = load <8 x i32>, ptr %2055, align 4, !tbaa !5
  %2057 = shufflevector <8 x i32> %2056, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2058 = getelementptr inbounds i32, ptr %2054, i64 -15
  %2059 = load <8 x i32>, ptr %2058, align 4, !tbaa !5
  %2060 = shufflevector <8 x i32> %2059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2061 = getelementptr inbounds i32, ptr %2054, i64 -23
  %2062 = load <8 x i32>, ptr %2061, align 4, !tbaa !5
  %2063 = shufflevector <8 x i32> %2062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2064 = getelementptr inbounds i32, ptr %2054, i64 -31
  %2065 = load <8 x i32>, ptr %2064, align 4, !tbaa !5
  %2066 = shufflevector <8 x i32> %2065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2067 = mul <8 x i32> %2057, %2049
  %2068 = mul <8 x i32> %2060, %2050
  %2069 = mul <8 x i32> %2063, %2051
  %2070 = mul <8 x i32> %2066, %2052
  %2071 = add nuw i64 %2048, 32
  %2072 = icmp eq i64 %2071, %2045
  br i1 %2072, label %2073, label %2047, !llvm.loop !85

2073:                                             ; preds = %2047
  %2074 = mul <8 x i32> %2068, %2067
  %2075 = mul <8 x i32> %2069, %2074
  %2076 = mul <8 x i32> %2070, %2075
  %2077 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2076)
  %2078 = icmp eq i64 %2041, %2045
  br i1 %2078, label %2091, label %2079

2079:                                             ; preds = %2032, %2073
  %2080 = phi i64 [ %2035, %2032 ], [ %2046, %2073 ]
  %2081 = phi i32 [ 1, %2032 ], [ %2077, %2073 ]
  br label %2082

2082:                                             ; preds = %2079, %2082
  %2083 = phi i64 [ %2088, %2082 ], [ %2080, %2079 ]
  %2084 = phi i32 [ %2087, %2082 ], [ %2081, %2079 ]
  %2085 = getelementptr inbounds i32, ptr %11, i64 %2083
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = mul nsw i32 %2086, %2084
  %2088 = add nsw i64 %2083, -1
  %2089 = trunc i64 %2083 to i32
  %2090 = icmp sgt i32 %2089, 0
  br i1 %2090, label %2082, label %2091, !llvm.loop !86

2091:                                             ; preds = %2082, %2073
  %2092 = phi i32 [ %2077, %2073 ], [ %2087, %2082 ]
  %2093 = and i64 %2042, 4294967295
  %2094 = getelementptr inbounds i32, ptr %6, i64 %2093
  %2095 = load i32, ptr %2094, align 4, !tbaa !5
  %2096 = mul nsw i32 %2095, %2092
  %2097 = add nsw i32 %2096, %2036
  %2098 = icmp sgt i64 %2034, 2
  %2099 = add nsw i64 %2035, -1
  %2100 = add i32 %2033, 1
  br i1 %2098, label %2032, label %2101, !llvm.loop !87

2101:                                             ; preds = %2091, %2028
  %2102 = phi i32 [ %2031, %2028 ], [ %2097, %2091 ]
  %2103 = icmp slt i32 %2102, %5
  br i1 %2103, label %2106, label %2104

2104:                                             ; preds = %2101
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

2106:                                             ; preds = %2101
  %2107 = sext i32 %2102 to i64
  %2108 = getelementptr inbounds i8, ptr %1855, i64 %2107
  %2109 = load i8, ptr %2108, align 1, !tbaa !11
  %2110 = sitofp i16 %2029 to double
  %2111 = uitofp i8 %2109 to double
  %2112 = tail call fast double @llvm.maxnum.f64(double %2110, double %2111)
  %2113 = fptosi double %2112 to i16
  store i16 %2113, ptr %1857, align 2, !tbaa !78
  %2114 = add nuw nsw i32 %2030, 1
  br i1 %1871, label %2115, label %2165

2115:                                             ; preds = %2106
  %2116 = load i32, ptr %4, align 4, !tbaa !5
  %2117 = load i32, ptr %12, align 4, !tbaa !5
  %2118 = add nsw i32 %2117, -1
  %2119 = icmp slt i32 %2116, %2118
  br i1 %2119, label %2142, label %2120

2120:                                             ; preds = %2115
  %2121 = icmp eq i32 %2116, %2118
  br i1 %2121, label %2122, label %2158

2122:                                             ; preds = %2120
  store i32 0, ptr %4, align 4, !tbaa !5
  %2123 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2123, ptr %6, align 4, !tbaa !5
  br i1 %1876, label %2165, label %2124

2124:                                             ; preds = %2122, %2152
  %2125 = phi i64 [ %2156, %2152 ], [ 1, %2122 ]
  %2126 = getelementptr inbounds i32, ptr %4, i64 %2125
  %2127 = load i32, ptr %2126, align 4, !tbaa !5
  %2128 = getelementptr inbounds i32, ptr %12, i64 %2125
  %2129 = load i32, ptr %2128, align 4, !tbaa !5
  %2130 = add nsw i32 %2129, -1
  %2131 = icmp slt i32 %2127, %2130
  br i1 %2131, label %2132, label %2150

2132:                                             ; preds = %2124
  br i1 %2119, label %2142, label %2133

2133:                                             ; preds = %2132
  %2134 = shl i64 %2125, 32
  %2135 = add i64 %2134, -4294967296
  %2136 = ashr exact i64 %2135, 32
  %2137 = getelementptr inbounds i32, ptr %7, i64 %2136
  %2138 = load i32, ptr %2137, align 4, !tbaa !5
  %2139 = getelementptr inbounds i32, ptr %6, i64 %2125
  %2140 = load i32, ptr %2139, align 4, !tbaa !5
  %2141 = add nsw i32 %2140, %2138
  store i32 %2141, ptr %2139, align 4, !tbaa !5
  br label %2160

2142:                                             ; preds = %2115, %2132
  %2143 = phi i32 [ %2127, %2132 ], [ %2116, %2115 ]
  %2144 = phi ptr [ %2126, %2132 ], [ %4, %2115 ]
  %2145 = phi i64 [ %2125, %2132 ], [ 0, %2115 ]
  %2146 = add nsw i32 %2143, 1
  store i32 %2146, ptr %2144, align 4, !tbaa !5
  %2147 = getelementptr inbounds i32, ptr %7, i64 %2145
  %2148 = load i32, ptr %2147, align 4, !tbaa !5
  %2149 = getelementptr inbounds i32, ptr %6, i64 %2145
  br label %2160

2150:                                             ; preds = %2124
  %2151 = icmp eq i32 %2127, %2130
  br i1 %2151, label %2152, label %2158

2152:                                             ; preds = %2150
  store i32 0, ptr %2126, align 4, !tbaa !5
  %2153 = getelementptr inbounds i32, ptr %8, i64 %2125
  %2154 = load i32, ptr %2153, align 4, !tbaa !5
  %2155 = getelementptr inbounds i32, ptr %6, i64 %2125
  store i32 %2154, ptr %2155, align 4, !tbaa !5
  %2156 = add nuw nsw i64 %2125, 1
  %2157 = icmp eq i64 %2156, %1874
  br i1 %2157, label %2165, label %2124, !llvm.loop !88

2158:                                             ; preds = %2120, %2150
  %2159 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2160:                                             ; preds = %2133, %2142
  %2161 = phi ptr [ %2149, %2142 ], [ %2126, %2133 ]
  %2162 = phi i32 [ %2148, %2142 ], [ 1, %2133 ]
  %2163 = load i32, ptr %2161, align 4, !tbaa !5
  %2164 = add nsw i32 %2163, %2162
  store i32 %2164, ptr %2161, align 4, !tbaa !5
  br label %2165

2165:                                             ; preds = %2152, %2160, %2122, %2106
  %2166 = icmp eq i32 %2114, %5
  br i1 %2166, label %5497, label %2028, !llvm.loop !89

2167:                                             ; preds = %1862
  %2168 = getelementptr inbounds i32, ptr %3, i64 %19
  %2169 = load i32, ptr %2168, align 4, !tbaa !5
  %2170 = icmp eq i32 %2169, 0
  %2171 = icmp sgt i32 %5, 0
  br i1 %2170, label %2181, label %2172

2172:                                             ; preds = %2167
  br i1 %2171, label %2173, label %5497

2173:                                             ; preds = %2172
  %2174 = icmp sgt i32 %13, 1
  %2175 = icmp sgt i32 %13, 0
  %2176 = add i32 %13, -2
  %2177 = zext i32 %2176 to i64
  %2178 = zext i32 %13 to i64
  %2179 = add nuw i32 %5, 1
  %2180 = icmp eq i32 %13, 1
  br label %2324

2181:                                             ; preds = %2167
  br i1 %2171, label %2182, label %5497

2182:                                             ; preds = %2181
  %2183 = icmp sgt i32 %13, 1
  %2184 = icmp sgt i32 %13, 0
  %2185 = add i32 %13, -2
  %2186 = zext i32 %2185 to i64
  %2187 = zext i32 %13 to i64
  %2188 = add nuw i32 %5, 1
  %2189 = icmp eq i32 %13, 1
  br label %2190

2190:                                             ; preds = %2182, %2322
  %2191 = phi i32 [ 0, %2182 ], [ %2271, %2322 ]
  %2192 = phi i32 [ 0, %2182 ], [ %2274, %2322 ]
  %2193 = phi double [ 0.000000e+00, %2182 ], [ %2273, %2322 ]
  %2194 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2183, label %2195, label %2264

2195:                                             ; preds = %2190, %2254
  %2196 = phi i32 [ %2263, %2254 ], [ 0, %2190 ]
  %2197 = phi i64 [ %2205, %2254 ], [ %2187, %2190 ]
  %2198 = phi i64 [ %2262, %2254 ], [ %2186, %2190 ]
  %2199 = phi i32 [ %2260, %2254 ], [ %2194, %2190 ]
  %2200 = sub i32 %2185, %2196
  %2201 = tail call i32 @llvm.smin.i32(i32 %2200, i32 0)
  %2202 = sub i32 %2200, %2201
  %2203 = zext i32 %2202 to i64
  %2204 = add nuw nsw i64 %2203, 1
  %2205 = add nsw i64 %2197, -1
  %2206 = icmp ult i32 %2202, 31
  br i1 %2206, label %2242, label %2207

2207:                                             ; preds = %2195
  %2208 = and i64 %2204, 8589934560
  %2209 = sub i64 %2198, %2208
  br label %2210

2210:                                             ; preds = %2210, %2207
  %2211 = phi i64 [ 0, %2207 ], [ %2234, %2210 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2230, %2210 ]
  %2213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2231, %2210 ]
  %2214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2232, %2210 ]
  %2215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2207 ], [ %2233, %2210 ]
  %2216 = sub i64 %2198, %2211
  %2217 = getelementptr inbounds i32, ptr %9, i64 %2216
  %2218 = getelementptr inbounds i32, ptr %2217, i64 -7
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !5
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2217, i64 -15
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !5
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2217, i64 -23
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !5
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = getelementptr inbounds i32, ptr %2217, i64 -31
  %2228 = load <8 x i32>, ptr %2227, align 4, !tbaa !5
  %2229 = shufflevector <8 x i32> %2228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2230 = mul <8 x i32> %2220, %2212
  %2231 = mul <8 x i32> %2223, %2213
  %2232 = mul <8 x i32> %2226, %2214
  %2233 = mul <8 x i32> %2229, %2215
  %2234 = add nuw i64 %2211, 32
  %2235 = icmp eq i64 %2234, %2208
  br i1 %2235, label %2236, label %2210, !llvm.loop !90

2236:                                             ; preds = %2210
  %2237 = mul <8 x i32> %2231, %2230
  %2238 = mul <8 x i32> %2232, %2237
  %2239 = mul <8 x i32> %2233, %2238
  %2240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2239)
  %2241 = icmp eq i64 %2204, %2208
  br i1 %2241, label %2254, label %2242

2242:                                             ; preds = %2195, %2236
  %2243 = phi i64 [ %2198, %2195 ], [ %2209, %2236 ]
  %2244 = phi i32 [ 1, %2195 ], [ %2240, %2236 ]
  br label %2245

2245:                                             ; preds = %2242, %2245
  %2246 = phi i64 [ %2251, %2245 ], [ %2243, %2242 ]
  %2247 = phi i32 [ %2250, %2245 ], [ %2244, %2242 ]
  %2248 = getelementptr inbounds i32, ptr %9, i64 %2246
  %2249 = load i32, ptr %2248, align 4, !tbaa !5
  %2250 = mul nsw i32 %2249, %2247
  %2251 = add nsw i64 %2246, -1
  %2252 = trunc i64 %2246 to i32
  %2253 = icmp sgt i32 %2252, 0
  br i1 %2253, label %2245, label %2254, !llvm.loop !91

2254:                                             ; preds = %2245, %2236
  %2255 = phi i32 [ %2240, %2236 ], [ %2250, %2245 ]
  %2256 = and i64 %2205, 4294967295
  %2257 = getelementptr inbounds i32, ptr %6, i64 %2256
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = mul nsw i32 %2258, %2255
  %2260 = add nsw i32 %2259, %2199
  %2261 = icmp sgt i64 %2197, 2
  %2262 = add nsw i64 %2198, -1
  %2263 = add i32 %2196, 1
  br i1 %2261, label %2195, label %2264, !llvm.loop !92

2264:                                             ; preds = %2254, %2190
  %2265 = phi i32 [ %2194, %2190 ], [ %2260, %2254 ]
  %2266 = sext i32 %2265 to i64
  %2267 = getelementptr inbounds i8, ptr %1855, i64 %2266
  %2268 = load i8, ptr %2267, align 1, !tbaa !11
  %2269 = and i32 %2191, 65535
  %2270 = zext i8 %2268 to i32
  %2271 = tail call i32 @llvm.smax.i32(i32 %2269, i32 %2270)
  %2272 = trunc i32 %2271 to i16
  store i16 %2272, ptr %1857, align 2, !tbaa !78
  %2273 = fadd fast double %2193, 1.000000e+00
  %2274 = add nuw nsw i32 %2192, 1
  br i1 %2184, label %2275, label %2322

2275:                                             ; preds = %2264
  %2276 = load i32, ptr %4, align 4, !tbaa !5
  %2277 = load i32, ptr %12, align 4, !tbaa !5
  %2278 = add nsw i32 %2277, -1
  %2279 = icmp slt i32 %2276, %2278
  br i1 %2279, label %2299, label %2280

2280:                                             ; preds = %2275
  %2281 = icmp eq i32 %2276, %2278
  br i1 %2281, label %2282, label %2315

2282:                                             ; preds = %2280
  store i32 0, ptr %4, align 4, !tbaa !5
  %2283 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2283, ptr %6, align 4, !tbaa !5
  br i1 %2189, label %2322, label %2284

2284:                                             ; preds = %2282, %2309
  %2285 = phi i64 [ %2313, %2309 ], [ 1, %2282 ]
  %2286 = getelementptr inbounds i32, ptr %4, i64 %2285
  %2287 = load i32, ptr %2286, align 4, !tbaa !5
  %2288 = getelementptr inbounds i32, ptr %12, i64 %2285
  %2289 = load i32, ptr %2288, align 4, !tbaa !5
  %2290 = add nsw i32 %2289, -1
  %2291 = icmp slt i32 %2287, %2290
  br i1 %2291, label %2292, label %2307

2292:                                             ; preds = %2284
  br i1 %2279, label %2299, label %2293

2293:                                             ; preds = %2292
  %2294 = getelementptr inbounds i32, ptr %7, i64 %2285
  %2295 = load i32, ptr %2294, align 4, !tbaa !5
  %2296 = getelementptr inbounds i32, ptr %6, i64 %2285
  %2297 = load i32, ptr %2296, align 4, !tbaa !5
  %2298 = add nsw i32 %2297, %2295
  store i32 %2298, ptr %2296, align 4, !tbaa !5
  br label %2317

2299:                                             ; preds = %2275, %2292
  %2300 = phi i32 [ %2287, %2292 ], [ %2276, %2275 ]
  %2301 = phi ptr [ %2286, %2292 ], [ %4, %2275 ]
  %2302 = phi i64 [ %2285, %2292 ], [ 0, %2275 ]
  %2303 = add nsw i32 %2300, 1
  store i32 %2303, ptr %2301, align 4, !tbaa !5
  %2304 = getelementptr inbounds i32, ptr %7, i64 %2302
  %2305 = load i32, ptr %2304, align 4, !tbaa !5
  %2306 = getelementptr inbounds i32, ptr %6, i64 %2302
  br label %2317

2307:                                             ; preds = %2284
  %2308 = icmp eq i32 %2287, %2290
  br i1 %2308, label %2309, label %2315

2309:                                             ; preds = %2307
  store i32 0, ptr %2286, align 4, !tbaa !5
  %2310 = getelementptr inbounds i32, ptr %8, i64 %2285
  %2311 = load i32, ptr %2310, align 4, !tbaa !5
  %2312 = getelementptr inbounds i32, ptr %6, i64 %2285
  store i32 %2311, ptr %2312, align 4, !tbaa !5
  %2313 = add nuw nsw i64 %2285, 1
  %2314 = icmp eq i64 %2313, %2187
  br i1 %2314, label %2322, label %2284, !llvm.loop !93

2315:                                             ; preds = %2280, %2307
  %2316 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2317:                                             ; preds = %2293, %2299
  %2318 = phi ptr [ %2306, %2299 ], [ %2286, %2293 ]
  %2319 = phi i32 [ %2305, %2299 ], [ 1, %2293 ]
  %2320 = load i32, ptr %2318, align 4, !tbaa !5
  %2321 = add nsw i32 %2320, %2319
  store i32 %2321, ptr %2318, align 4, !tbaa !5
  br label %2322

2322:                                             ; preds = %2309, %2317, %2282, %2264
  %2323 = icmp eq i32 %2274, %5
  br i1 %2323, label %5497, label %2190, !llvm.loop !94

2324:                                             ; preds = %2173, %2461
  %2325 = phi i32 [ 0, %2173 ], [ %2408, %2461 ]
  %2326 = phi i32 [ 0, %2173 ], [ %2410, %2461 ]
  %2327 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2174, label %2328, label %2397

2328:                                             ; preds = %2324, %2387
  %2329 = phi i32 [ %2396, %2387 ], [ 0, %2324 ]
  %2330 = phi i64 [ %2338, %2387 ], [ %2178, %2324 ]
  %2331 = phi i64 [ %2395, %2387 ], [ %2177, %2324 ]
  %2332 = phi i32 [ %2393, %2387 ], [ %2327, %2324 ]
  %2333 = sub i32 %2176, %2329
  %2334 = tail call i32 @llvm.smin.i32(i32 %2333, i32 0)
  %2335 = sub i32 %2333, %2334
  %2336 = zext i32 %2335 to i64
  %2337 = add nuw nsw i64 %2336, 1
  %2338 = add nsw i64 %2330, -1
  %2339 = icmp ult i32 %2335, 31
  br i1 %2339, label %2375, label %2340

2340:                                             ; preds = %2328
  %2341 = and i64 %2337, 8589934560
  %2342 = sub i64 %2331, %2341
  br label %2343

2343:                                             ; preds = %2343, %2340
  %2344 = phi i64 [ 0, %2340 ], [ %2367, %2343 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2363, %2343 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2364, %2343 ]
  %2347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2365, %2343 ]
  %2348 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2340 ], [ %2366, %2343 ]
  %2349 = sub i64 %2331, %2344
  %2350 = getelementptr inbounds i32, ptr %11, i64 %2349
  %2351 = getelementptr inbounds i32, ptr %2350, i64 -7
  %2352 = load <8 x i32>, ptr %2351, align 4, !tbaa !5
  %2353 = shufflevector <8 x i32> %2352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2354 = getelementptr inbounds i32, ptr %2350, i64 -15
  %2355 = load <8 x i32>, ptr %2354, align 4, !tbaa !5
  %2356 = shufflevector <8 x i32> %2355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2357 = getelementptr inbounds i32, ptr %2350, i64 -23
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !5
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = getelementptr inbounds i32, ptr %2350, i64 -31
  %2361 = load <8 x i32>, ptr %2360, align 4, !tbaa !5
  %2362 = shufflevector <8 x i32> %2361, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2363 = mul <8 x i32> %2353, %2345
  %2364 = mul <8 x i32> %2356, %2346
  %2365 = mul <8 x i32> %2359, %2347
  %2366 = mul <8 x i32> %2362, %2348
  %2367 = add nuw i64 %2344, 32
  %2368 = icmp eq i64 %2367, %2341
  br i1 %2368, label %2369, label %2343, !llvm.loop !95

2369:                                             ; preds = %2343
  %2370 = mul <8 x i32> %2364, %2363
  %2371 = mul <8 x i32> %2365, %2370
  %2372 = mul <8 x i32> %2366, %2371
  %2373 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2372)
  %2374 = icmp eq i64 %2337, %2341
  br i1 %2374, label %2387, label %2375

2375:                                             ; preds = %2328, %2369
  %2376 = phi i64 [ %2331, %2328 ], [ %2342, %2369 ]
  %2377 = phi i32 [ 1, %2328 ], [ %2373, %2369 ]
  br label %2378

2378:                                             ; preds = %2375, %2378
  %2379 = phi i64 [ %2384, %2378 ], [ %2376, %2375 ]
  %2380 = phi i32 [ %2383, %2378 ], [ %2377, %2375 ]
  %2381 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2382 = load i32, ptr %2381, align 4, !tbaa !5
  %2383 = mul nsw i32 %2382, %2380
  %2384 = add nsw i64 %2379, -1
  %2385 = trunc i64 %2379 to i32
  %2386 = icmp sgt i32 %2385, 0
  br i1 %2386, label %2378, label %2387, !llvm.loop !96

2387:                                             ; preds = %2378, %2369
  %2388 = phi i32 [ %2373, %2369 ], [ %2383, %2378 ]
  %2389 = and i64 %2338, 4294967295
  %2390 = getelementptr inbounds i32, ptr %6, i64 %2389
  %2391 = load i32, ptr %2390, align 4, !tbaa !5
  %2392 = mul nsw i32 %2391, %2388
  %2393 = add nsw i32 %2392, %2332
  %2394 = icmp sgt i64 %2330, 2
  %2395 = add nsw i64 %2331, -1
  %2396 = add i32 %2329, 1
  br i1 %2394, label %2328, label %2397, !llvm.loop !97

2397:                                             ; preds = %2387, %2324
  %2398 = phi i32 [ %2327, %2324 ], [ %2393, %2387 ]
  %2399 = icmp slt i32 %2398, %5
  br i1 %2399, label %2402, label %2400

2400:                                             ; preds = %2397
  %2401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

2402:                                             ; preds = %2397
  %2403 = sext i32 %2398 to i64
  %2404 = getelementptr inbounds i8, ptr %1855, i64 %2403
  %2405 = load i8, ptr %2404, align 1, !tbaa !11
  %2406 = and i32 %2325, 65535
  %2407 = zext i8 %2405 to i32
  %2408 = tail call i32 @llvm.smax.i32(i32 %2406, i32 %2407)
  %2409 = trunc i32 %2408 to i16
  store i16 %2409, ptr %1857, align 2, !tbaa !78
  %2410 = add nuw nsw i32 %2326, 1
  br i1 %2175, label %2411, label %2461

2411:                                             ; preds = %2402
  %2412 = load i32, ptr %4, align 4, !tbaa !5
  %2413 = load i32, ptr %12, align 4, !tbaa !5
  %2414 = add nsw i32 %2413, -1
  %2415 = icmp slt i32 %2412, %2414
  br i1 %2415, label %2438, label %2416

2416:                                             ; preds = %2411
  %2417 = icmp eq i32 %2412, %2414
  br i1 %2417, label %2418, label %2454

2418:                                             ; preds = %2416
  store i32 0, ptr %4, align 4, !tbaa !5
  %2419 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2419, ptr %6, align 4, !tbaa !5
  br i1 %2180, label %2461, label %2420

2420:                                             ; preds = %2418, %2448
  %2421 = phi i64 [ %2452, %2448 ], [ 1, %2418 ]
  %2422 = getelementptr inbounds i32, ptr %4, i64 %2421
  %2423 = load i32, ptr %2422, align 4, !tbaa !5
  %2424 = getelementptr inbounds i32, ptr %12, i64 %2421
  %2425 = load i32, ptr %2424, align 4, !tbaa !5
  %2426 = add nsw i32 %2425, -1
  %2427 = icmp slt i32 %2423, %2426
  br i1 %2427, label %2428, label %2446

2428:                                             ; preds = %2420
  br i1 %2415, label %2438, label %2429

2429:                                             ; preds = %2428
  %2430 = shl i64 %2421, 32
  %2431 = add i64 %2430, -4294967296
  %2432 = ashr exact i64 %2431, 32
  %2433 = getelementptr inbounds i32, ptr %7, i64 %2432
  %2434 = load i32, ptr %2433, align 4, !tbaa !5
  %2435 = getelementptr inbounds i32, ptr %6, i64 %2421
  %2436 = load i32, ptr %2435, align 4, !tbaa !5
  %2437 = add nsw i32 %2436, %2434
  store i32 %2437, ptr %2435, align 4, !tbaa !5
  br label %2456

2438:                                             ; preds = %2411, %2428
  %2439 = phi i32 [ %2423, %2428 ], [ %2412, %2411 ]
  %2440 = phi ptr [ %2422, %2428 ], [ %4, %2411 ]
  %2441 = phi i64 [ %2421, %2428 ], [ 0, %2411 ]
  %2442 = add nsw i32 %2439, 1
  store i32 %2442, ptr %2440, align 4, !tbaa !5
  %2443 = getelementptr inbounds i32, ptr %7, i64 %2441
  %2444 = load i32, ptr %2443, align 4, !tbaa !5
  %2445 = getelementptr inbounds i32, ptr %6, i64 %2441
  br label %2456

2446:                                             ; preds = %2420
  %2447 = icmp eq i32 %2423, %2426
  br i1 %2447, label %2448, label %2454

2448:                                             ; preds = %2446
  store i32 0, ptr %2422, align 4, !tbaa !5
  %2449 = getelementptr inbounds i32, ptr %8, i64 %2421
  %2450 = load i32, ptr %2449, align 4, !tbaa !5
  %2451 = getelementptr inbounds i32, ptr %6, i64 %2421
  store i32 %2450, ptr %2451, align 4, !tbaa !5
  %2452 = add nuw nsw i64 %2421, 1
  %2453 = icmp eq i64 %2452, %2178
  br i1 %2453, label %2461, label %2420, !llvm.loop !98

2454:                                             ; preds = %2416, %2446
  %2455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2456:                                             ; preds = %2429, %2438
  %2457 = phi ptr [ %2445, %2438 ], [ %2422, %2429 ]
  %2458 = phi i32 [ %2444, %2438 ], [ 1, %2429 ]
  %2459 = load i32, ptr %2457, align 4, !tbaa !5
  %2460 = add nsw i32 %2459, %2458
  store i32 %2460, ptr %2457, align 4, !tbaa !5
  br label %2461

2461:                                             ; preds = %2448, %2456, %2418, %2402
  %2462 = icmp eq i32 %2410, %5
  br i1 %2462, label %5497, label %2324, !llvm.loop !99

2463:                                             ; preds = %1862
  %2464 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 73, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

2465:                                             ; preds = %18
  %2466 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2467 = load ptr, ptr %2466, align 8, !tbaa !9
  %2468 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2469 = load ptr, ptr %2468, align 8, !tbaa !9
  store i32 0, ptr %2469, align 4, !tbaa !5
  %2470 = icmp eq i32 %13, 0
  br i1 %2470, label %2471, label %2474

2471:                                             ; preds = %2465
  %2472 = load i8, ptr %2467, align 1, !tbaa !11
  %2473 = zext i8 %2472 to i32
  store i32 %2473, ptr %2469, align 4, !tbaa !5
  br label %5497

2474:                                             ; preds = %2465
  switch i32 %1, label %3071 [
    i32 1, label %2475
    i32 0, label %2779
  ]

2475:                                             ; preds = %2474
  %2476 = getelementptr inbounds i32, ptr %3, i64 %19
  %2477 = load i32, ptr %2476, align 4, !tbaa !5
  %2478 = icmp eq i32 %2477, 0
  %2479 = icmp sgt i32 %5, 0
  br i1 %2478, label %2489, label %2480

2480:                                             ; preds = %2475
  br i1 %2479, label %2481, label %5497

2481:                                             ; preds = %2480
  %2482 = icmp sgt i32 %13, 1
  %2483 = icmp sgt i32 %13, 0
  %2484 = add i32 %13, -2
  %2485 = zext i32 %2484 to i64
  %2486 = zext i32 %13 to i64
  %2487 = add nuw i32 %5, 1
  %2488 = icmp eq i32 %13, 1
  br label %2640

2489:                                             ; preds = %2475
  br i1 %2479, label %2490, label %5497

2490:                                             ; preds = %2489
  %2491 = icmp sgt i32 %13, 1
  %2492 = icmp sgt i32 %13, 0
  %2493 = add i32 %13, -2
  %2494 = zext i32 %2493 to i64
  %2495 = zext i32 %13 to i64
  %2496 = add nuw i32 %5, 1
  %2497 = icmp eq i32 %13, 1
  br label %2498

2498:                                             ; preds = %2490, %2638
  %2499 = phi i32 [ 0, %2490 ], [ %2590, %2638 ]
  %2500 = phi double [ 0.000000e+00, %2490 ], [ %2589, %2638 ]
  %2501 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2491, label %2502, label %2571

2502:                                             ; preds = %2498, %2561
  %2503 = phi i32 [ %2570, %2561 ], [ 0, %2498 ]
  %2504 = phi i64 [ %2512, %2561 ], [ %2495, %2498 ]
  %2505 = phi i64 [ %2569, %2561 ], [ %2494, %2498 ]
  %2506 = phi i32 [ %2567, %2561 ], [ %2501, %2498 ]
  %2507 = sub i32 %2493, %2503
  %2508 = tail call i32 @llvm.smin.i32(i32 %2507, i32 0)
  %2509 = sub i32 %2507, %2508
  %2510 = zext i32 %2509 to i64
  %2511 = add nuw nsw i64 %2510, 1
  %2512 = add nsw i64 %2504, -1
  %2513 = icmp ult i32 %2509, 31
  br i1 %2513, label %2549, label %2514

2514:                                             ; preds = %2502
  %2515 = and i64 %2511, 8589934560
  %2516 = sub i64 %2505, %2515
  br label %2517

2517:                                             ; preds = %2517, %2514
  %2518 = phi i64 [ 0, %2514 ], [ %2541, %2517 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2514 ], [ %2537, %2517 ]
  %2520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2514 ], [ %2538, %2517 ]
  %2521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2514 ], [ %2539, %2517 ]
  %2522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2514 ], [ %2540, %2517 ]
  %2523 = sub i64 %2505, %2518
  %2524 = getelementptr inbounds i32, ptr %9, i64 %2523
  %2525 = getelementptr inbounds i32, ptr %2524, i64 -7
  %2526 = load <8 x i32>, ptr %2525, align 4, !tbaa !5
  %2527 = shufflevector <8 x i32> %2526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2528 = getelementptr inbounds i32, ptr %2524, i64 -15
  %2529 = load <8 x i32>, ptr %2528, align 4, !tbaa !5
  %2530 = shufflevector <8 x i32> %2529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2531 = getelementptr inbounds i32, ptr %2524, i64 -23
  %2532 = load <8 x i32>, ptr %2531, align 4, !tbaa !5
  %2533 = shufflevector <8 x i32> %2532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2534 = getelementptr inbounds i32, ptr %2524, i64 -31
  %2535 = load <8 x i32>, ptr %2534, align 4, !tbaa !5
  %2536 = shufflevector <8 x i32> %2535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2537 = mul <8 x i32> %2527, %2519
  %2538 = mul <8 x i32> %2530, %2520
  %2539 = mul <8 x i32> %2533, %2521
  %2540 = mul <8 x i32> %2536, %2522
  %2541 = add nuw i64 %2518, 32
  %2542 = icmp eq i64 %2541, %2515
  br i1 %2542, label %2543, label %2517, !llvm.loop !100

2543:                                             ; preds = %2517
  %2544 = mul <8 x i32> %2538, %2537
  %2545 = mul <8 x i32> %2539, %2544
  %2546 = mul <8 x i32> %2540, %2545
  %2547 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2546)
  %2548 = icmp eq i64 %2511, %2515
  br i1 %2548, label %2561, label %2549

2549:                                             ; preds = %2502, %2543
  %2550 = phi i64 [ %2505, %2502 ], [ %2516, %2543 ]
  %2551 = phi i32 [ 1, %2502 ], [ %2547, %2543 ]
  br label %2552

2552:                                             ; preds = %2549, %2552
  %2553 = phi i64 [ %2558, %2552 ], [ %2550, %2549 ]
  %2554 = phi i32 [ %2557, %2552 ], [ %2551, %2549 ]
  %2555 = getelementptr inbounds i32, ptr %9, i64 %2553
  %2556 = load i32, ptr %2555, align 4, !tbaa !5
  %2557 = mul nsw i32 %2556, %2554
  %2558 = add nsw i64 %2553, -1
  %2559 = trunc i64 %2553 to i32
  %2560 = icmp sgt i32 %2559, 0
  br i1 %2560, label %2552, label %2561, !llvm.loop !101

2561:                                             ; preds = %2552, %2543
  %2562 = phi i32 [ %2547, %2543 ], [ %2557, %2552 ]
  %2563 = and i64 %2512, 4294967295
  %2564 = getelementptr inbounds i32, ptr %6, i64 %2563
  %2565 = load i32, ptr %2564, align 4, !tbaa !5
  %2566 = mul nsw i32 %2565, %2562
  %2567 = add nsw i32 %2566, %2506
  %2568 = icmp sgt i64 %2504, 2
  %2569 = add nsw i64 %2505, -1
  %2570 = add i32 %2503, 1
  br i1 %2568, label %2502, label %2571, !llvm.loop !102

2571:                                             ; preds = %2561, %2498
  %2572 = phi i32 [ %2501, %2498 ], [ %2567, %2561 ]
  %2573 = sext i32 %2572 to i64
  %2574 = getelementptr inbounds double, ptr %2, i64 %2573
  %2575 = load double, ptr %2574, align 8, !tbaa !18
  %2576 = getelementptr inbounds i8, ptr %2467, i64 %2573
  %2577 = load i8, ptr %2576, align 1, !tbaa !11
  %2578 = load i32, ptr %2469, align 4, !tbaa !5
  %2579 = sitofp i32 %2578 to double
  %2580 = uitofp i8 %2577 to double
  %2581 = fmul fast double %2575, %2580
  %2582 = fcmp fast uge double %2581, 0.000000e+00
  %2583 = fneg fast double %2581
  %2584 = tail call fast double @llvm.fabs.f64(double %2581)
  %2585 = fcmp fast ole double %2584, %2579
  %2586 = select nnan ninf i1 %2582, double %2581, double %2583
  %2587 = select i1 %2585, double %2579, double %2586
  %2588 = fptosi double %2587 to i32
  store i32 %2588, ptr %2469, align 4, !tbaa !5
  %2589 = fadd fast double %2575, %2500
  %2590 = add nuw nsw i32 %2499, 1
  br i1 %2492, label %2591, label %2638

2591:                                             ; preds = %2571
  %2592 = load i32, ptr %4, align 4, !tbaa !5
  %2593 = load i32, ptr %12, align 4, !tbaa !5
  %2594 = add nsw i32 %2593, -1
  %2595 = icmp slt i32 %2592, %2594
  br i1 %2595, label %2615, label %2596

2596:                                             ; preds = %2591
  %2597 = icmp eq i32 %2592, %2594
  br i1 %2597, label %2598, label %2631

2598:                                             ; preds = %2596
  store i32 0, ptr %4, align 4, !tbaa !5
  %2599 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2599, ptr %6, align 4, !tbaa !5
  br i1 %2497, label %2638, label %2600

2600:                                             ; preds = %2598, %2625
  %2601 = phi i64 [ %2629, %2625 ], [ 1, %2598 ]
  %2602 = getelementptr inbounds i32, ptr %4, i64 %2601
  %2603 = load i32, ptr %2602, align 4, !tbaa !5
  %2604 = getelementptr inbounds i32, ptr %12, i64 %2601
  %2605 = load i32, ptr %2604, align 4, !tbaa !5
  %2606 = add nsw i32 %2605, -1
  %2607 = icmp slt i32 %2603, %2606
  br i1 %2607, label %2608, label %2623

2608:                                             ; preds = %2600
  br i1 %2595, label %2615, label %2609

2609:                                             ; preds = %2608
  %2610 = getelementptr inbounds i32, ptr %7, i64 %2601
  %2611 = load i32, ptr %2610, align 4, !tbaa !5
  %2612 = getelementptr inbounds i32, ptr %6, i64 %2601
  %2613 = load i32, ptr %2612, align 4, !tbaa !5
  %2614 = add nsw i32 %2613, %2611
  store i32 %2614, ptr %2612, align 4, !tbaa !5
  br label %2633

2615:                                             ; preds = %2591, %2608
  %2616 = phi i32 [ %2603, %2608 ], [ %2592, %2591 ]
  %2617 = phi ptr [ %2602, %2608 ], [ %4, %2591 ]
  %2618 = phi i64 [ %2601, %2608 ], [ 0, %2591 ]
  %2619 = add nsw i32 %2616, 1
  store i32 %2619, ptr %2617, align 4, !tbaa !5
  %2620 = getelementptr inbounds i32, ptr %7, i64 %2618
  %2621 = load i32, ptr %2620, align 4, !tbaa !5
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2618
  br label %2633

2623:                                             ; preds = %2600
  %2624 = icmp eq i32 %2603, %2606
  br i1 %2624, label %2625, label %2631

2625:                                             ; preds = %2623
  store i32 0, ptr %2602, align 4, !tbaa !5
  %2626 = getelementptr inbounds i32, ptr %8, i64 %2601
  %2627 = load i32, ptr %2626, align 4, !tbaa !5
  %2628 = getelementptr inbounds i32, ptr %6, i64 %2601
  store i32 %2627, ptr %2628, align 4, !tbaa !5
  %2629 = add nuw nsw i64 %2601, 1
  %2630 = icmp eq i64 %2629, %2495
  br i1 %2630, label %2638, label %2600, !llvm.loop !103

2631:                                             ; preds = %2596, %2623
  %2632 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2633:                                             ; preds = %2609, %2615
  %2634 = phi ptr [ %2622, %2615 ], [ %2602, %2609 ]
  %2635 = phi i32 [ %2621, %2615 ], [ 1, %2609 ]
  %2636 = load i32, ptr %2634, align 4, !tbaa !5
  %2637 = add nsw i32 %2636, %2635
  store i32 %2637, ptr %2634, align 4, !tbaa !5
  br label %2638

2638:                                             ; preds = %2625, %2633, %2598, %2571
  %2639 = icmp eq i32 %2590, %5
  br i1 %2639, label %5497, label %2498, !llvm.loop !104

2640:                                             ; preds = %2481, %2777
  %2641 = phi i32 [ 0, %2481 ], [ %2726, %2777 ]
  %2642 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2482, label %2643, label %2712

2643:                                             ; preds = %2640, %2702
  %2644 = phi i32 [ %2711, %2702 ], [ 0, %2640 ]
  %2645 = phi i64 [ %2653, %2702 ], [ %2486, %2640 ]
  %2646 = phi i64 [ %2710, %2702 ], [ %2485, %2640 ]
  %2647 = phi i32 [ %2708, %2702 ], [ %2642, %2640 ]
  %2648 = sub i32 %2484, %2644
  %2649 = tail call i32 @llvm.smin.i32(i32 %2648, i32 0)
  %2650 = sub i32 %2648, %2649
  %2651 = zext i32 %2650 to i64
  %2652 = add nuw nsw i64 %2651, 1
  %2653 = add nsw i64 %2645, -1
  %2654 = icmp ult i32 %2650, 31
  br i1 %2654, label %2690, label %2655

2655:                                             ; preds = %2643
  %2656 = and i64 %2652, 8589934560
  %2657 = sub i64 %2646, %2656
  br label %2658

2658:                                             ; preds = %2658, %2655
  %2659 = phi i64 [ 0, %2655 ], [ %2682, %2658 ]
  %2660 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2678, %2658 ]
  %2661 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2679, %2658 ]
  %2662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2680, %2658 ]
  %2663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2655 ], [ %2681, %2658 ]
  %2664 = sub i64 %2646, %2659
  %2665 = getelementptr inbounds i32, ptr %11, i64 %2664
  %2666 = getelementptr inbounds i32, ptr %2665, i64 -7
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !5
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2665, i64 -15
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !5
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = getelementptr inbounds i32, ptr %2665, i64 -23
  %2673 = load <8 x i32>, ptr %2672, align 4, !tbaa !5
  %2674 = shufflevector <8 x i32> %2673, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2675 = getelementptr inbounds i32, ptr %2665, i64 -31
  %2676 = load <8 x i32>, ptr %2675, align 4, !tbaa !5
  %2677 = shufflevector <8 x i32> %2676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2678 = mul <8 x i32> %2668, %2660
  %2679 = mul <8 x i32> %2671, %2661
  %2680 = mul <8 x i32> %2674, %2662
  %2681 = mul <8 x i32> %2677, %2663
  %2682 = add nuw i64 %2659, 32
  %2683 = icmp eq i64 %2682, %2656
  br i1 %2683, label %2684, label %2658, !llvm.loop !105

2684:                                             ; preds = %2658
  %2685 = mul <8 x i32> %2679, %2678
  %2686 = mul <8 x i32> %2680, %2685
  %2687 = mul <8 x i32> %2681, %2686
  %2688 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2687)
  %2689 = icmp eq i64 %2652, %2656
  br i1 %2689, label %2702, label %2690

2690:                                             ; preds = %2643, %2684
  %2691 = phi i64 [ %2646, %2643 ], [ %2657, %2684 ]
  %2692 = phi i32 [ 1, %2643 ], [ %2688, %2684 ]
  br label %2693

2693:                                             ; preds = %2690, %2693
  %2694 = phi i64 [ %2699, %2693 ], [ %2691, %2690 ]
  %2695 = phi i32 [ %2698, %2693 ], [ %2692, %2690 ]
  %2696 = getelementptr inbounds i32, ptr %11, i64 %2694
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = mul nsw i32 %2697, %2695
  %2699 = add nsw i64 %2694, -1
  %2700 = trunc i64 %2694 to i32
  %2701 = icmp sgt i32 %2700, 0
  br i1 %2701, label %2693, label %2702, !llvm.loop !106

2702:                                             ; preds = %2693, %2684
  %2703 = phi i32 [ %2688, %2684 ], [ %2698, %2693 ]
  %2704 = and i64 %2653, 4294967295
  %2705 = getelementptr inbounds i32, ptr %6, i64 %2704
  %2706 = load i32, ptr %2705, align 4, !tbaa !5
  %2707 = mul nsw i32 %2706, %2703
  %2708 = add nsw i32 %2707, %2647
  %2709 = icmp sgt i64 %2645, 2
  %2710 = add nsw i64 %2646, -1
  %2711 = add i32 %2644, 1
  br i1 %2709, label %2643, label %2712, !llvm.loop !107

2712:                                             ; preds = %2702, %2640
  %2713 = phi i32 [ %2642, %2640 ], [ %2708, %2702 ]
  %2714 = icmp slt i32 %2713, %5
  br i1 %2714, label %2717, label %2715

2715:                                             ; preds = %2712
  %2716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

2717:                                             ; preds = %2712
  %2718 = sext i32 %2713 to i64
  %2719 = getelementptr inbounds i8, ptr %2467, i64 %2718
  %2720 = load i8, ptr %2719, align 1, !tbaa !11
  %2721 = load i32, ptr %2469, align 4, !tbaa !5
  %2722 = sitofp i32 %2721 to double
  %2723 = uitofp i8 %2720 to double
  %2724 = tail call fast double @llvm.maxnum.f64(double %2722, double %2723)
  %2725 = fptosi double %2724 to i32
  store i32 %2725, ptr %2469, align 4, !tbaa !5
  %2726 = add nuw nsw i32 %2641, 1
  br i1 %2483, label %2727, label %2777

2727:                                             ; preds = %2717
  %2728 = load i32, ptr %4, align 4, !tbaa !5
  %2729 = load i32, ptr %12, align 4, !tbaa !5
  %2730 = add nsw i32 %2729, -1
  %2731 = icmp slt i32 %2728, %2730
  br i1 %2731, label %2754, label %2732

2732:                                             ; preds = %2727
  %2733 = icmp eq i32 %2728, %2730
  br i1 %2733, label %2734, label %2770

2734:                                             ; preds = %2732
  store i32 0, ptr %4, align 4, !tbaa !5
  %2735 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2735, ptr %6, align 4, !tbaa !5
  br i1 %2488, label %2777, label %2736

2736:                                             ; preds = %2734, %2764
  %2737 = phi i64 [ %2768, %2764 ], [ 1, %2734 ]
  %2738 = getelementptr inbounds i32, ptr %4, i64 %2737
  %2739 = load i32, ptr %2738, align 4, !tbaa !5
  %2740 = getelementptr inbounds i32, ptr %12, i64 %2737
  %2741 = load i32, ptr %2740, align 4, !tbaa !5
  %2742 = add nsw i32 %2741, -1
  %2743 = icmp slt i32 %2739, %2742
  br i1 %2743, label %2744, label %2762

2744:                                             ; preds = %2736
  br i1 %2731, label %2754, label %2745

2745:                                             ; preds = %2744
  %2746 = shl i64 %2737, 32
  %2747 = add i64 %2746, -4294967296
  %2748 = ashr exact i64 %2747, 32
  %2749 = getelementptr inbounds i32, ptr %7, i64 %2748
  %2750 = load i32, ptr %2749, align 4, !tbaa !5
  %2751 = getelementptr inbounds i32, ptr %6, i64 %2737
  %2752 = load i32, ptr %2751, align 4, !tbaa !5
  %2753 = add nsw i32 %2752, %2750
  store i32 %2753, ptr %2751, align 4, !tbaa !5
  br label %2772

2754:                                             ; preds = %2727, %2744
  %2755 = phi i32 [ %2739, %2744 ], [ %2728, %2727 ]
  %2756 = phi ptr [ %2738, %2744 ], [ %4, %2727 ]
  %2757 = phi i64 [ %2737, %2744 ], [ 0, %2727 ]
  %2758 = add nsw i32 %2755, 1
  store i32 %2758, ptr %2756, align 4, !tbaa !5
  %2759 = getelementptr inbounds i32, ptr %7, i64 %2757
  %2760 = load i32, ptr %2759, align 4, !tbaa !5
  %2761 = getelementptr inbounds i32, ptr %6, i64 %2757
  br label %2772

2762:                                             ; preds = %2736
  %2763 = icmp eq i32 %2739, %2742
  br i1 %2763, label %2764, label %2770

2764:                                             ; preds = %2762
  store i32 0, ptr %2738, align 4, !tbaa !5
  %2765 = getelementptr inbounds i32, ptr %8, i64 %2737
  %2766 = load i32, ptr %2765, align 4, !tbaa !5
  %2767 = getelementptr inbounds i32, ptr %6, i64 %2737
  store i32 %2766, ptr %2767, align 4, !tbaa !5
  %2768 = add nuw nsw i64 %2737, 1
  %2769 = icmp eq i64 %2768, %2486
  br i1 %2769, label %2777, label %2736, !llvm.loop !108

2770:                                             ; preds = %2732, %2762
  %2771 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2772:                                             ; preds = %2745, %2754
  %2773 = phi ptr [ %2761, %2754 ], [ %2738, %2745 ]
  %2774 = phi i32 [ %2760, %2754 ], [ 1, %2745 ]
  %2775 = load i32, ptr %2773, align 4, !tbaa !5
  %2776 = add nsw i32 %2775, %2774
  store i32 %2776, ptr %2773, align 4, !tbaa !5
  br label %2777

2777:                                             ; preds = %2764, %2772, %2734, %2717
  %2778 = icmp eq i32 %2726, %5
  br i1 %2778, label %5497, label %2640, !llvm.loop !109

2779:                                             ; preds = %2474
  %2780 = getelementptr inbounds i32, ptr %3, i64 %19
  %2781 = load i32, ptr %2780, align 4, !tbaa !5
  %2782 = icmp eq i32 %2781, 0
  %2783 = icmp sgt i32 %5, 0
  br i1 %2782, label %2793, label %2784

2784:                                             ; preds = %2779
  br i1 %2783, label %2785, label %5497

2785:                                             ; preds = %2784
  %2786 = icmp sgt i32 %13, 1
  %2787 = icmp sgt i32 %13, 0
  %2788 = add i32 %13, -2
  %2789 = zext i32 %2788 to i64
  %2790 = zext i32 %13 to i64
  %2791 = add nuw i32 %5, 1
  %2792 = icmp eq i32 %13, 1
  br label %2934

2793:                                             ; preds = %2779
  br i1 %2783, label %2794, label %5497

2794:                                             ; preds = %2793
  %2795 = icmp sgt i32 %13, 1
  %2796 = icmp sgt i32 %13, 0
  %2797 = add i32 %13, -2
  %2798 = zext i32 %2797 to i64
  %2799 = zext i32 %13 to i64
  %2800 = add nuw i32 %5, 1
  %2801 = icmp eq i32 %13, 1
  br label %2802

2802:                                             ; preds = %2794, %2932
  %2803 = phi i32 [ 0, %2794 ], [ %2884, %2932 ]
  %2804 = phi double [ 0.000000e+00, %2794 ], [ %2883, %2932 ]
  %2805 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2795, label %2806, label %2875

2806:                                             ; preds = %2802, %2865
  %2807 = phi i32 [ %2874, %2865 ], [ 0, %2802 ]
  %2808 = phi i64 [ %2816, %2865 ], [ %2799, %2802 ]
  %2809 = phi i64 [ %2873, %2865 ], [ %2798, %2802 ]
  %2810 = phi i32 [ %2871, %2865 ], [ %2805, %2802 ]
  %2811 = sub i32 %2797, %2807
  %2812 = tail call i32 @llvm.smin.i32(i32 %2811, i32 0)
  %2813 = sub i32 %2811, %2812
  %2814 = zext i32 %2813 to i64
  %2815 = add nuw nsw i64 %2814, 1
  %2816 = add nsw i64 %2808, -1
  %2817 = icmp ult i32 %2813, 31
  br i1 %2817, label %2853, label %2818

2818:                                             ; preds = %2806
  %2819 = and i64 %2815, 8589934560
  %2820 = sub i64 %2809, %2819
  br label %2821

2821:                                             ; preds = %2821, %2818
  %2822 = phi i64 [ 0, %2818 ], [ %2845, %2821 ]
  %2823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2818 ], [ %2841, %2821 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2818 ], [ %2842, %2821 ]
  %2825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2818 ], [ %2843, %2821 ]
  %2826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2818 ], [ %2844, %2821 ]
  %2827 = sub i64 %2809, %2822
  %2828 = getelementptr inbounds i32, ptr %9, i64 %2827
  %2829 = getelementptr inbounds i32, ptr %2828, i64 -7
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !5
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = getelementptr inbounds i32, ptr %2828, i64 -15
  %2833 = load <8 x i32>, ptr %2832, align 4, !tbaa !5
  %2834 = shufflevector <8 x i32> %2833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2835 = getelementptr inbounds i32, ptr %2828, i64 -23
  %2836 = load <8 x i32>, ptr %2835, align 4, !tbaa !5
  %2837 = shufflevector <8 x i32> %2836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2838 = getelementptr inbounds i32, ptr %2828, i64 -31
  %2839 = load <8 x i32>, ptr %2838, align 4, !tbaa !5
  %2840 = shufflevector <8 x i32> %2839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2841 = mul <8 x i32> %2831, %2823
  %2842 = mul <8 x i32> %2834, %2824
  %2843 = mul <8 x i32> %2837, %2825
  %2844 = mul <8 x i32> %2840, %2826
  %2845 = add nuw i64 %2822, 32
  %2846 = icmp eq i64 %2845, %2819
  br i1 %2846, label %2847, label %2821, !llvm.loop !110

2847:                                             ; preds = %2821
  %2848 = mul <8 x i32> %2842, %2841
  %2849 = mul <8 x i32> %2843, %2848
  %2850 = mul <8 x i32> %2844, %2849
  %2851 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2850)
  %2852 = icmp eq i64 %2815, %2819
  br i1 %2852, label %2865, label %2853

2853:                                             ; preds = %2806, %2847
  %2854 = phi i64 [ %2809, %2806 ], [ %2820, %2847 ]
  %2855 = phi i32 [ 1, %2806 ], [ %2851, %2847 ]
  br label %2856

2856:                                             ; preds = %2853, %2856
  %2857 = phi i64 [ %2862, %2856 ], [ %2854, %2853 ]
  %2858 = phi i32 [ %2861, %2856 ], [ %2855, %2853 ]
  %2859 = getelementptr inbounds i32, ptr %9, i64 %2857
  %2860 = load i32, ptr %2859, align 4, !tbaa !5
  %2861 = mul nsw i32 %2860, %2858
  %2862 = add nsw i64 %2857, -1
  %2863 = trunc i64 %2857 to i32
  %2864 = icmp sgt i32 %2863, 0
  br i1 %2864, label %2856, label %2865, !llvm.loop !111

2865:                                             ; preds = %2856, %2847
  %2866 = phi i32 [ %2851, %2847 ], [ %2861, %2856 ]
  %2867 = and i64 %2816, 4294967295
  %2868 = getelementptr inbounds i32, ptr %6, i64 %2867
  %2869 = load i32, ptr %2868, align 4, !tbaa !5
  %2870 = mul nsw i32 %2869, %2866
  %2871 = add nsw i32 %2870, %2810
  %2872 = icmp sgt i64 %2808, 2
  %2873 = add nsw i64 %2809, -1
  %2874 = add i32 %2807, 1
  br i1 %2872, label %2806, label %2875, !llvm.loop !112

2875:                                             ; preds = %2865, %2802
  %2876 = phi i32 [ %2805, %2802 ], [ %2871, %2865 ]
  %2877 = sext i32 %2876 to i64
  %2878 = getelementptr inbounds i8, ptr %2467, i64 %2877
  %2879 = load i8, ptr %2878, align 1, !tbaa !11
  %2880 = zext i8 %2879 to i32
  %2881 = load i32, ptr %2469, align 4, !tbaa !5
  %2882 = tail call i32 @llvm.smax.i32(i32 %2881, i32 %2880)
  store i32 %2882, ptr %2469, align 4, !tbaa !5
  %2883 = fadd fast double %2804, 1.000000e+00
  %2884 = add nuw nsw i32 %2803, 1
  br i1 %2796, label %2885, label %2932

2885:                                             ; preds = %2875
  %2886 = load i32, ptr %4, align 4, !tbaa !5
  %2887 = load i32, ptr %12, align 4, !tbaa !5
  %2888 = add nsw i32 %2887, -1
  %2889 = icmp slt i32 %2886, %2888
  br i1 %2889, label %2909, label %2890

2890:                                             ; preds = %2885
  %2891 = icmp eq i32 %2886, %2888
  br i1 %2891, label %2892, label %2925

2892:                                             ; preds = %2890
  store i32 0, ptr %4, align 4, !tbaa !5
  %2893 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2893, ptr %6, align 4, !tbaa !5
  br i1 %2801, label %2932, label %2894

2894:                                             ; preds = %2892, %2919
  %2895 = phi i64 [ %2923, %2919 ], [ 1, %2892 ]
  %2896 = getelementptr inbounds i32, ptr %4, i64 %2895
  %2897 = load i32, ptr %2896, align 4, !tbaa !5
  %2898 = getelementptr inbounds i32, ptr %12, i64 %2895
  %2899 = load i32, ptr %2898, align 4, !tbaa !5
  %2900 = add nsw i32 %2899, -1
  %2901 = icmp slt i32 %2897, %2900
  br i1 %2901, label %2902, label %2917

2902:                                             ; preds = %2894
  br i1 %2889, label %2909, label %2903

2903:                                             ; preds = %2902
  %2904 = getelementptr inbounds i32, ptr %7, i64 %2895
  %2905 = load i32, ptr %2904, align 4, !tbaa !5
  %2906 = getelementptr inbounds i32, ptr %6, i64 %2895
  %2907 = load i32, ptr %2906, align 4, !tbaa !5
  %2908 = add nsw i32 %2907, %2905
  store i32 %2908, ptr %2906, align 4, !tbaa !5
  br label %2927

2909:                                             ; preds = %2885, %2902
  %2910 = phi i32 [ %2897, %2902 ], [ %2886, %2885 ]
  %2911 = phi ptr [ %2896, %2902 ], [ %4, %2885 ]
  %2912 = phi i64 [ %2895, %2902 ], [ 0, %2885 ]
  %2913 = add nsw i32 %2910, 1
  store i32 %2913, ptr %2911, align 4, !tbaa !5
  %2914 = getelementptr inbounds i32, ptr %7, i64 %2912
  %2915 = load i32, ptr %2914, align 4, !tbaa !5
  %2916 = getelementptr inbounds i32, ptr %6, i64 %2912
  br label %2927

2917:                                             ; preds = %2894
  %2918 = icmp eq i32 %2897, %2900
  br i1 %2918, label %2919, label %2925

2919:                                             ; preds = %2917
  store i32 0, ptr %2896, align 4, !tbaa !5
  %2920 = getelementptr inbounds i32, ptr %8, i64 %2895
  %2921 = load i32, ptr %2920, align 4, !tbaa !5
  %2922 = getelementptr inbounds i32, ptr %6, i64 %2895
  store i32 %2921, ptr %2922, align 4, !tbaa !5
  %2923 = add nuw nsw i64 %2895, 1
  %2924 = icmp eq i64 %2923, %2799
  br i1 %2924, label %2932, label %2894, !llvm.loop !113

2925:                                             ; preds = %2890, %2917
  %2926 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

2927:                                             ; preds = %2903, %2909
  %2928 = phi ptr [ %2916, %2909 ], [ %2896, %2903 ]
  %2929 = phi i32 [ %2915, %2909 ], [ 1, %2903 ]
  %2930 = load i32, ptr %2928, align 4, !tbaa !5
  %2931 = add nsw i32 %2930, %2929
  store i32 %2931, ptr %2928, align 4, !tbaa !5
  br label %2932

2932:                                             ; preds = %2919, %2927, %2892, %2875
  %2933 = icmp eq i32 %2884, %5
  br i1 %2933, label %5497, label %2802, !llvm.loop !114

2934:                                             ; preds = %2785, %3069
  %2935 = phi i32 [ 0, %2785 ], [ %3018, %3069 ]
  %2936 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2786, label %2937, label %3006

2937:                                             ; preds = %2934, %2996
  %2938 = phi i32 [ %3005, %2996 ], [ 0, %2934 ]
  %2939 = phi i64 [ %2947, %2996 ], [ %2790, %2934 ]
  %2940 = phi i64 [ %3004, %2996 ], [ %2789, %2934 ]
  %2941 = phi i32 [ %3002, %2996 ], [ %2936, %2934 ]
  %2942 = sub i32 %2788, %2938
  %2943 = tail call i32 @llvm.smin.i32(i32 %2942, i32 0)
  %2944 = sub i32 %2942, %2943
  %2945 = zext i32 %2944 to i64
  %2946 = add nuw nsw i64 %2945, 1
  %2947 = add nsw i64 %2939, -1
  %2948 = icmp ult i32 %2944, 31
  br i1 %2948, label %2984, label %2949

2949:                                             ; preds = %2937
  %2950 = and i64 %2946, 8589934560
  %2951 = sub i64 %2940, %2950
  br label %2952

2952:                                             ; preds = %2952, %2949
  %2953 = phi i64 [ 0, %2949 ], [ %2976, %2952 ]
  %2954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2972, %2952 ]
  %2955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2973, %2952 ]
  %2956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2974, %2952 ]
  %2957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2949 ], [ %2975, %2952 ]
  %2958 = sub i64 %2940, %2953
  %2959 = getelementptr inbounds i32, ptr %11, i64 %2958
  %2960 = getelementptr inbounds i32, ptr %2959, i64 -7
  %2961 = load <8 x i32>, ptr %2960, align 4, !tbaa !5
  %2962 = shufflevector <8 x i32> %2961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2963 = getelementptr inbounds i32, ptr %2959, i64 -15
  %2964 = load <8 x i32>, ptr %2963, align 4, !tbaa !5
  %2965 = shufflevector <8 x i32> %2964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2966 = getelementptr inbounds i32, ptr %2959, i64 -23
  %2967 = load <8 x i32>, ptr %2966, align 4, !tbaa !5
  %2968 = shufflevector <8 x i32> %2967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2969 = getelementptr inbounds i32, ptr %2959, i64 -31
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !5
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = mul <8 x i32> %2962, %2954
  %2973 = mul <8 x i32> %2965, %2955
  %2974 = mul <8 x i32> %2968, %2956
  %2975 = mul <8 x i32> %2971, %2957
  %2976 = add nuw i64 %2953, 32
  %2977 = icmp eq i64 %2976, %2950
  br i1 %2977, label %2978, label %2952, !llvm.loop !115

2978:                                             ; preds = %2952
  %2979 = mul <8 x i32> %2973, %2972
  %2980 = mul <8 x i32> %2974, %2979
  %2981 = mul <8 x i32> %2975, %2980
  %2982 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2981)
  %2983 = icmp eq i64 %2946, %2950
  br i1 %2983, label %2996, label %2984

2984:                                             ; preds = %2937, %2978
  %2985 = phi i64 [ %2940, %2937 ], [ %2951, %2978 ]
  %2986 = phi i32 [ 1, %2937 ], [ %2982, %2978 ]
  br label %2987

2987:                                             ; preds = %2984, %2987
  %2988 = phi i64 [ %2993, %2987 ], [ %2985, %2984 ]
  %2989 = phi i32 [ %2992, %2987 ], [ %2986, %2984 ]
  %2990 = getelementptr inbounds i32, ptr %11, i64 %2988
  %2991 = load i32, ptr %2990, align 4, !tbaa !5
  %2992 = mul nsw i32 %2991, %2989
  %2993 = add nsw i64 %2988, -1
  %2994 = trunc i64 %2988 to i32
  %2995 = icmp sgt i32 %2994, 0
  br i1 %2995, label %2987, label %2996, !llvm.loop !116

2996:                                             ; preds = %2987, %2978
  %2997 = phi i32 [ %2982, %2978 ], [ %2992, %2987 ]
  %2998 = and i64 %2947, 4294967295
  %2999 = getelementptr inbounds i32, ptr %6, i64 %2998
  %3000 = load i32, ptr %2999, align 4, !tbaa !5
  %3001 = mul nsw i32 %3000, %2997
  %3002 = add nsw i32 %3001, %2941
  %3003 = icmp sgt i64 %2939, 2
  %3004 = add nsw i64 %2940, -1
  %3005 = add i32 %2938, 1
  br i1 %3003, label %2937, label %3006, !llvm.loop !117

3006:                                             ; preds = %2996, %2934
  %3007 = phi i32 [ %2936, %2934 ], [ %3002, %2996 ]
  %3008 = icmp slt i32 %3007, %5
  br i1 %3008, label %3011, label %3009

3009:                                             ; preds = %3006
  %3010 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

3011:                                             ; preds = %3006
  %3012 = sext i32 %3007 to i64
  %3013 = getelementptr inbounds i8, ptr %2467, i64 %3012
  %3014 = load i8, ptr %3013, align 1, !tbaa !11
  %3015 = zext i8 %3014 to i32
  %3016 = load i32, ptr %2469, align 4, !tbaa !5
  %3017 = tail call i32 @llvm.smax.i32(i32 %3016, i32 %3015)
  store i32 %3017, ptr %2469, align 4, !tbaa !5
  %3018 = add nuw nsw i32 %2935, 1
  br i1 %2787, label %3019, label %3069

3019:                                             ; preds = %3011
  %3020 = load i32, ptr %4, align 4, !tbaa !5
  %3021 = load i32, ptr %12, align 4, !tbaa !5
  %3022 = add nsw i32 %3021, -1
  %3023 = icmp slt i32 %3020, %3022
  br i1 %3023, label %3046, label %3024

3024:                                             ; preds = %3019
  %3025 = icmp eq i32 %3020, %3022
  br i1 %3025, label %3026, label %3062

3026:                                             ; preds = %3024
  store i32 0, ptr %4, align 4, !tbaa !5
  %3027 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3027, ptr %6, align 4, !tbaa !5
  br i1 %2792, label %3069, label %3028

3028:                                             ; preds = %3026, %3056
  %3029 = phi i64 [ %3060, %3056 ], [ 1, %3026 ]
  %3030 = getelementptr inbounds i32, ptr %4, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !5
  %3032 = getelementptr inbounds i32, ptr %12, i64 %3029
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = add nsw i32 %3033, -1
  %3035 = icmp slt i32 %3031, %3034
  br i1 %3035, label %3036, label %3054

3036:                                             ; preds = %3028
  br i1 %3023, label %3046, label %3037

3037:                                             ; preds = %3036
  %3038 = shl i64 %3029, 32
  %3039 = add i64 %3038, -4294967296
  %3040 = ashr exact i64 %3039, 32
  %3041 = getelementptr inbounds i32, ptr %7, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = getelementptr inbounds i32, ptr %6, i64 %3029
  %3044 = load i32, ptr %3043, align 4, !tbaa !5
  %3045 = add nsw i32 %3044, %3042
  store i32 %3045, ptr %3043, align 4, !tbaa !5
  br label %3064

3046:                                             ; preds = %3019, %3036
  %3047 = phi i32 [ %3031, %3036 ], [ %3020, %3019 ]
  %3048 = phi ptr [ %3030, %3036 ], [ %4, %3019 ]
  %3049 = phi i64 [ %3029, %3036 ], [ 0, %3019 ]
  %3050 = add nsw i32 %3047, 1
  store i32 %3050, ptr %3048, align 4, !tbaa !5
  %3051 = getelementptr inbounds i32, ptr %7, i64 %3049
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = getelementptr inbounds i32, ptr %6, i64 %3049
  br label %3064

3054:                                             ; preds = %3028
  %3055 = icmp eq i32 %3031, %3034
  br i1 %3055, label %3056, label %3062

3056:                                             ; preds = %3054
  store i32 0, ptr %3030, align 4, !tbaa !5
  %3057 = getelementptr inbounds i32, ptr %8, i64 %3029
  %3058 = load i32, ptr %3057, align 4, !tbaa !5
  %3059 = getelementptr inbounds i32, ptr %6, i64 %3029
  store i32 %3058, ptr %3059, align 4, !tbaa !5
  %3060 = add nuw nsw i64 %3029, 1
  %3061 = icmp eq i64 %3060, %2790
  br i1 %3061, label %3069, label %3028, !llvm.loop !118

3062:                                             ; preds = %3024, %3054
  %3063 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3064:                                             ; preds = %3037, %3046
  %3065 = phi ptr [ %3053, %3046 ], [ %3030, %3037 ]
  %3066 = phi i32 [ %3052, %3046 ], [ 1, %3037 ]
  %3067 = load i32, ptr %3065, align 4, !tbaa !5
  %3068 = add nsw i32 %3067, %3066
  store i32 %3068, ptr %3065, align 4, !tbaa !5
  br label %3069

3069:                                             ; preds = %3056, %3064, %3026, %3011
  %3070 = icmp eq i32 %3018, %5
  br i1 %3070, label %5497, label %2934, !llvm.loop !119

3071:                                             ; preds = %2474
  %3072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 78, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

3073:                                             ; preds = %18
  %3074 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !9
  %3076 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3077 = load ptr, ptr %3076, align 8, !tbaa !9
  store i64 0, ptr %3077, align 8, !tbaa !120
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %3079, label %3082

3079:                                             ; preds = %3073
  %3080 = load i8, ptr %3075, align 1, !tbaa !11
  %3081 = zext i8 %3080 to i64
  store i64 %3081, ptr %3077, align 8, !tbaa !120
  br label %5497

3082:                                             ; preds = %3073
  switch i32 %1, label %3679 [
    i32 1, label %3083
    i32 0, label %3387
  ]

3083:                                             ; preds = %3082
  %3084 = getelementptr inbounds i32, ptr %3, i64 %19
  %3085 = load i32, ptr %3084, align 4, !tbaa !5
  %3086 = icmp eq i32 %3085, 0
  %3087 = icmp sgt i32 %5, 0
  br i1 %3086, label %3097, label %3088

3088:                                             ; preds = %3083
  br i1 %3087, label %3089, label %5497

3089:                                             ; preds = %3088
  %3090 = icmp sgt i32 %13, 1
  %3091 = icmp sgt i32 %13, 0
  %3092 = add i32 %13, -2
  %3093 = zext i32 %3092 to i64
  %3094 = zext i32 %13 to i64
  %3095 = add nuw i32 %5, 1
  %3096 = icmp eq i32 %13, 1
  br label %3248

3097:                                             ; preds = %3083
  br i1 %3087, label %3098, label %5497

3098:                                             ; preds = %3097
  %3099 = icmp sgt i32 %13, 1
  %3100 = icmp sgt i32 %13, 0
  %3101 = add i32 %13, -2
  %3102 = zext i32 %3101 to i64
  %3103 = zext i32 %13 to i64
  %3104 = add nuw i32 %5, 1
  %3105 = icmp eq i32 %13, 1
  br label %3106

3106:                                             ; preds = %3098, %3246
  %3107 = phi i64 [ 0, %3098 ], [ %3196, %3246 ]
  %3108 = phi i32 [ 0, %3098 ], [ %3198, %3246 ]
  %3109 = phi double [ 0.000000e+00, %3098 ], [ %3197, %3246 ]
  %3110 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3099, label %3111, label %3180

3111:                                             ; preds = %3106, %3170
  %3112 = phi i32 [ %3179, %3170 ], [ 0, %3106 ]
  %3113 = phi i64 [ %3121, %3170 ], [ %3103, %3106 ]
  %3114 = phi i64 [ %3178, %3170 ], [ %3102, %3106 ]
  %3115 = phi i32 [ %3176, %3170 ], [ %3110, %3106 ]
  %3116 = sub i32 %3101, %3112
  %3117 = tail call i32 @llvm.smin.i32(i32 %3116, i32 0)
  %3118 = sub i32 %3116, %3117
  %3119 = zext i32 %3118 to i64
  %3120 = add nuw nsw i64 %3119, 1
  %3121 = add nsw i64 %3113, -1
  %3122 = icmp ult i32 %3118, 31
  br i1 %3122, label %3158, label %3123

3123:                                             ; preds = %3111
  %3124 = and i64 %3120, 8589934560
  %3125 = sub i64 %3114, %3124
  br label %3126

3126:                                             ; preds = %3126, %3123
  %3127 = phi i64 [ 0, %3123 ], [ %3150, %3126 ]
  %3128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3123 ], [ %3146, %3126 ]
  %3129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3123 ], [ %3147, %3126 ]
  %3130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3123 ], [ %3148, %3126 ]
  %3131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3123 ], [ %3149, %3126 ]
  %3132 = sub i64 %3114, %3127
  %3133 = getelementptr inbounds i32, ptr %9, i64 %3132
  %3134 = getelementptr inbounds i32, ptr %3133, i64 -7
  %3135 = load <8 x i32>, ptr %3134, align 4, !tbaa !5
  %3136 = shufflevector <8 x i32> %3135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3137 = getelementptr inbounds i32, ptr %3133, i64 -15
  %3138 = load <8 x i32>, ptr %3137, align 4, !tbaa !5
  %3139 = shufflevector <8 x i32> %3138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3140 = getelementptr inbounds i32, ptr %3133, i64 -23
  %3141 = load <8 x i32>, ptr %3140, align 4, !tbaa !5
  %3142 = shufflevector <8 x i32> %3141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3143 = getelementptr inbounds i32, ptr %3133, i64 -31
  %3144 = load <8 x i32>, ptr %3143, align 4, !tbaa !5
  %3145 = shufflevector <8 x i32> %3144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3146 = mul <8 x i32> %3136, %3128
  %3147 = mul <8 x i32> %3139, %3129
  %3148 = mul <8 x i32> %3142, %3130
  %3149 = mul <8 x i32> %3145, %3131
  %3150 = add nuw i64 %3127, 32
  %3151 = icmp eq i64 %3150, %3124
  br i1 %3151, label %3152, label %3126, !llvm.loop !122

3152:                                             ; preds = %3126
  %3153 = mul <8 x i32> %3147, %3146
  %3154 = mul <8 x i32> %3148, %3153
  %3155 = mul <8 x i32> %3149, %3154
  %3156 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3155)
  %3157 = icmp eq i64 %3120, %3124
  br i1 %3157, label %3170, label %3158

3158:                                             ; preds = %3111, %3152
  %3159 = phi i64 [ %3114, %3111 ], [ %3125, %3152 ]
  %3160 = phi i32 [ 1, %3111 ], [ %3156, %3152 ]
  br label %3161

3161:                                             ; preds = %3158, %3161
  %3162 = phi i64 [ %3167, %3161 ], [ %3159, %3158 ]
  %3163 = phi i32 [ %3166, %3161 ], [ %3160, %3158 ]
  %3164 = getelementptr inbounds i32, ptr %9, i64 %3162
  %3165 = load i32, ptr %3164, align 4, !tbaa !5
  %3166 = mul nsw i32 %3165, %3163
  %3167 = add nsw i64 %3162, -1
  %3168 = trunc i64 %3162 to i32
  %3169 = icmp sgt i32 %3168, 0
  br i1 %3169, label %3161, label %3170, !llvm.loop !123

3170:                                             ; preds = %3161, %3152
  %3171 = phi i32 [ %3156, %3152 ], [ %3166, %3161 ]
  %3172 = and i64 %3121, 4294967295
  %3173 = getelementptr inbounds i32, ptr %6, i64 %3172
  %3174 = load i32, ptr %3173, align 4, !tbaa !5
  %3175 = mul nsw i32 %3174, %3171
  %3176 = add nsw i32 %3175, %3115
  %3177 = icmp sgt i64 %3113, 2
  %3178 = add nsw i64 %3114, -1
  %3179 = add i32 %3112, 1
  br i1 %3177, label %3111, label %3180, !llvm.loop !124

3180:                                             ; preds = %3170, %3106
  %3181 = phi i32 [ %3110, %3106 ], [ %3176, %3170 ]
  %3182 = sext i32 %3181 to i64
  %3183 = getelementptr inbounds double, ptr %2, i64 %3182
  %3184 = load double, ptr %3183, align 8, !tbaa !18
  %3185 = getelementptr inbounds i8, ptr %3075, i64 %3182
  %3186 = load i8, ptr %3185, align 1, !tbaa !11
  %3187 = sitofp i64 %3107 to double
  %3188 = uitofp i8 %3186 to double
  %3189 = fmul fast double %3184, %3188
  %3190 = fcmp fast uge double %3189, 0.000000e+00
  %3191 = fneg fast double %3189
  %3192 = tail call fast double @llvm.fabs.f64(double %3189)
  %3193 = fcmp fast ole double %3192, %3187
  %3194 = select nnan ninf i1 %3190, double %3189, double %3191
  %3195 = select i1 %3193, double %3187, double %3194
  %3196 = fptosi double %3195 to i64
  store i64 %3196, ptr %3077, align 8, !tbaa !120
  %3197 = fadd fast double %3184, %3109
  %3198 = add nuw nsw i32 %3108, 1
  br i1 %3100, label %3199, label %3246

3199:                                             ; preds = %3180
  %3200 = load i32, ptr %4, align 4, !tbaa !5
  %3201 = load i32, ptr %12, align 4, !tbaa !5
  %3202 = add nsw i32 %3201, -1
  %3203 = icmp slt i32 %3200, %3202
  br i1 %3203, label %3223, label %3204

3204:                                             ; preds = %3199
  %3205 = icmp eq i32 %3200, %3202
  br i1 %3205, label %3206, label %3239

3206:                                             ; preds = %3204
  store i32 0, ptr %4, align 4, !tbaa !5
  %3207 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3207, ptr %6, align 4, !tbaa !5
  br i1 %3105, label %3246, label %3208

3208:                                             ; preds = %3206, %3233
  %3209 = phi i64 [ %3237, %3233 ], [ 1, %3206 ]
  %3210 = getelementptr inbounds i32, ptr %4, i64 %3209
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = getelementptr inbounds i32, ptr %12, i64 %3209
  %3213 = load i32, ptr %3212, align 4, !tbaa !5
  %3214 = add nsw i32 %3213, -1
  %3215 = icmp slt i32 %3211, %3214
  br i1 %3215, label %3216, label %3231

3216:                                             ; preds = %3208
  br i1 %3203, label %3223, label %3217

3217:                                             ; preds = %3216
  %3218 = getelementptr inbounds i32, ptr %7, i64 %3209
  %3219 = load i32, ptr %3218, align 4, !tbaa !5
  %3220 = getelementptr inbounds i32, ptr %6, i64 %3209
  %3221 = load i32, ptr %3220, align 4, !tbaa !5
  %3222 = add nsw i32 %3221, %3219
  store i32 %3222, ptr %3220, align 4, !tbaa !5
  br label %3241

3223:                                             ; preds = %3199, %3216
  %3224 = phi i32 [ %3211, %3216 ], [ %3200, %3199 ]
  %3225 = phi ptr [ %3210, %3216 ], [ %4, %3199 ]
  %3226 = phi i64 [ %3209, %3216 ], [ 0, %3199 ]
  %3227 = add nsw i32 %3224, 1
  store i32 %3227, ptr %3225, align 4, !tbaa !5
  %3228 = getelementptr inbounds i32, ptr %7, i64 %3226
  %3229 = load i32, ptr %3228, align 4, !tbaa !5
  %3230 = getelementptr inbounds i32, ptr %6, i64 %3226
  br label %3241

3231:                                             ; preds = %3208
  %3232 = icmp eq i32 %3211, %3214
  br i1 %3232, label %3233, label %3239

3233:                                             ; preds = %3231
  store i32 0, ptr %3210, align 4, !tbaa !5
  %3234 = getelementptr inbounds i32, ptr %8, i64 %3209
  %3235 = load i32, ptr %3234, align 4, !tbaa !5
  %3236 = getelementptr inbounds i32, ptr %6, i64 %3209
  store i32 %3235, ptr %3236, align 4, !tbaa !5
  %3237 = add nuw nsw i64 %3209, 1
  %3238 = icmp eq i64 %3237, %3103
  br i1 %3238, label %3246, label %3208, !llvm.loop !125

3239:                                             ; preds = %3204, %3231
  %3240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3241:                                             ; preds = %3217, %3223
  %3242 = phi ptr [ %3230, %3223 ], [ %3210, %3217 ]
  %3243 = phi i32 [ %3229, %3223 ], [ 1, %3217 ]
  %3244 = load i32, ptr %3242, align 4, !tbaa !5
  %3245 = add nsw i32 %3244, %3243
  store i32 %3245, ptr %3242, align 4, !tbaa !5
  br label %3246

3246:                                             ; preds = %3233, %3241, %3206, %3180
  %3247 = icmp eq i32 %3198, %5
  br i1 %3247, label %5497, label %3106, !llvm.loop !126

3248:                                             ; preds = %3089, %3385
  %3249 = phi i64 [ 0, %3089 ], [ %3333, %3385 ]
  %3250 = phi i32 [ 0, %3089 ], [ %3334, %3385 ]
  %3251 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3090, label %3252, label %3321

3252:                                             ; preds = %3248, %3311
  %3253 = phi i32 [ %3320, %3311 ], [ 0, %3248 ]
  %3254 = phi i64 [ %3262, %3311 ], [ %3094, %3248 ]
  %3255 = phi i64 [ %3319, %3311 ], [ %3093, %3248 ]
  %3256 = phi i32 [ %3317, %3311 ], [ %3251, %3248 ]
  %3257 = sub i32 %3092, %3253
  %3258 = tail call i32 @llvm.smin.i32(i32 %3257, i32 0)
  %3259 = sub i32 %3257, %3258
  %3260 = zext i32 %3259 to i64
  %3261 = add nuw nsw i64 %3260, 1
  %3262 = add nsw i64 %3254, -1
  %3263 = icmp ult i32 %3259, 31
  br i1 %3263, label %3299, label %3264

3264:                                             ; preds = %3252
  %3265 = and i64 %3261, 8589934560
  %3266 = sub i64 %3255, %3265
  br label %3267

3267:                                             ; preds = %3267, %3264
  %3268 = phi i64 [ 0, %3264 ], [ %3291, %3267 ]
  %3269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3264 ], [ %3287, %3267 ]
  %3270 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3264 ], [ %3288, %3267 ]
  %3271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3264 ], [ %3289, %3267 ]
  %3272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3264 ], [ %3290, %3267 ]
  %3273 = sub i64 %3255, %3268
  %3274 = getelementptr inbounds i32, ptr %11, i64 %3273
  %3275 = getelementptr inbounds i32, ptr %3274, i64 -7
  %3276 = load <8 x i32>, ptr %3275, align 4, !tbaa !5
  %3277 = shufflevector <8 x i32> %3276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3278 = getelementptr inbounds i32, ptr %3274, i64 -15
  %3279 = load <8 x i32>, ptr %3278, align 4, !tbaa !5
  %3280 = shufflevector <8 x i32> %3279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3281 = getelementptr inbounds i32, ptr %3274, i64 -23
  %3282 = load <8 x i32>, ptr %3281, align 4, !tbaa !5
  %3283 = shufflevector <8 x i32> %3282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3284 = getelementptr inbounds i32, ptr %3274, i64 -31
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !5
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = mul <8 x i32> %3277, %3269
  %3288 = mul <8 x i32> %3280, %3270
  %3289 = mul <8 x i32> %3283, %3271
  %3290 = mul <8 x i32> %3286, %3272
  %3291 = add nuw i64 %3268, 32
  %3292 = icmp eq i64 %3291, %3265
  br i1 %3292, label %3293, label %3267, !llvm.loop !127

3293:                                             ; preds = %3267
  %3294 = mul <8 x i32> %3288, %3287
  %3295 = mul <8 x i32> %3289, %3294
  %3296 = mul <8 x i32> %3290, %3295
  %3297 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3296)
  %3298 = icmp eq i64 %3261, %3265
  br i1 %3298, label %3311, label %3299

3299:                                             ; preds = %3252, %3293
  %3300 = phi i64 [ %3255, %3252 ], [ %3266, %3293 ]
  %3301 = phi i32 [ 1, %3252 ], [ %3297, %3293 ]
  br label %3302

3302:                                             ; preds = %3299, %3302
  %3303 = phi i64 [ %3308, %3302 ], [ %3300, %3299 ]
  %3304 = phi i32 [ %3307, %3302 ], [ %3301, %3299 ]
  %3305 = getelementptr inbounds i32, ptr %11, i64 %3303
  %3306 = load i32, ptr %3305, align 4, !tbaa !5
  %3307 = mul nsw i32 %3306, %3304
  %3308 = add nsw i64 %3303, -1
  %3309 = trunc i64 %3303 to i32
  %3310 = icmp sgt i32 %3309, 0
  br i1 %3310, label %3302, label %3311, !llvm.loop !128

3311:                                             ; preds = %3302, %3293
  %3312 = phi i32 [ %3297, %3293 ], [ %3307, %3302 ]
  %3313 = and i64 %3262, 4294967295
  %3314 = getelementptr inbounds i32, ptr %6, i64 %3313
  %3315 = load i32, ptr %3314, align 4, !tbaa !5
  %3316 = mul nsw i32 %3315, %3312
  %3317 = add nsw i32 %3316, %3256
  %3318 = icmp sgt i64 %3254, 2
  %3319 = add nsw i64 %3255, -1
  %3320 = add i32 %3253, 1
  br i1 %3318, label %3252, label %3321, !llvm.loop !129

3321:                                             ; preds = %3311, %3248
  %3322 = phi i32 [ %3251, %3248 ], [ %3317, %3311 ]
  %3323 = icmp slt i32 %3322, %5
  br i1 %3323, label %3326, label %3324

3324:                                             ; preds = %3321
  %3325 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

3326:                                             ; preds = %3321
  %3327 = sext i32 %3322 to i64
  %3328 = getelementptr inbounds i8, ptr %3075, i64 %3327
  %3329 = load i8, ptr %3328, align 1, !tbaa !11
  %3330 = sitofp i64 %3249 to double
  %3331 = uitofp i8 %3329 to double
  %3332 = tail call fast double @llvm.maxnum.f64(double %3330, double %3331)
  %3333 = fptosi double %3332 to i64
  store i64 %3333, ptr %3077, align 8, !tbaa !120
  %3334 = add nuw nsw i32 %3250, 1
  br i1 %3091, label %3335, label %3385

3335:                                             ; preds = %3326
  %3336 = load i32, ptr %4, align 4, !tbaa !5
  %3337 = load i32, ptr %12, align 4, !tbaa !5
  %3338 = add nsw i32 %3337, -1
  %3339 = icmp slt i32 %3336, %3338
  br i1 %3339, label %3362, label %3340

3340:                                             ; preds = %3335
  %3341 = icmp eq i32 %3336, %3338
  br i1 %3341, label %3342, label %3378

3342:                                             ; preds = %3340
  store i32 0, ptr %4, align 4, !tbaa !5
  %3343 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3343, ptr %6, align 4, !tbaa !5
  br i1 %3096, label %3385, label %3344

3344:                                             ; preds = %3342, %3372
  %3345 = phi i64 [ %3376, %3372 ], [ 1, %3342 ]
  %3346 = getelementptr inbounds i32, ptr %4, i64 %3345
  %3347 = load i32, ptr %3346, align 4, !tbaa !5
  %3348 = getelementptr inbounds i32, ptr %12, i64 %3345
  %3349 = load i32, ptr %3348, align 4, !tbaa !5
  %3350 = add nsw i32 %3349, -1
  %3351 = icmp slt i32 %3347, %3350
  br i1 %3351, label %3352, label %3370

3352:                                             ; preds = %3344
  br i1 %3339, label %3362, label %3353

3353:                                             ; preds = %3352
  %3354 = shl i64 %3345, 32
  %3355 = add i64 %3354, -4294967296
  %3356 = ashr exact i64 %3355, 32
  %3357 = getelementptr inbounds i32, ptr %7, i64 %3356
  %3358 = load i32, ptr %3357, align 4, !tbaa !5
  %3359 = getelementptr inbounds i32, ptr %6, i64 %3345
  %3360 = load i32, ptr %3359, align 4, !tbaa !5
  %3361 = add nsw i32 %3360, %3358
  store i32 %3361, ptr %3359, align 4, !tbaa !5
  br label %3380

3362:                                             ; preds = %3335, %3352
  %3363 = phi i32 [ %3347, %3352 ], [ %3336, %3335 ]
  %3364 = phi ptr [ %3346, %3352 ], [ %4, %3335 ]
  %3365 = phi i64 [ %3345, %3352 ], [ 0, %3335 ]
  %3366 = add nsw i32 %3363, 1
  store i32 %3366, ptr %3364, align 4, !tbaa !5
  %3367 = getelementptr inbounds i32, ptr %7, i64 %3365
  %3368 = load i32, ptr %3367, align 4, !tbaa !5
  %3369 = getelementptr inbounds i32, ptr %6, i64 %3365
  br label %3380

3370:                                             ; preds = %3344
  %3371 = icmp eq i32 %3347, %3350
  br i1 %3371, label %3372, label %3378

3372:                                             ; preds = %3370
  store i32 0, ptr %3346, align 4, !tbaa !5
  %3373 = getelementptr inbounds i32, ptr %8, i64 %3345
  %3374 = load i32, ptr %3373, align 4, !tbaa !5
  %3375 = getelementptr inbounds i32, ptr %6, i64 %3345
  store i32 %3374, ptr %3375, align 4, !tbaa !5
  %3376 = add nuw nsw i64 %3345, 1
  %3377 = icmp eq i64 %3376, %3094
  br i1 %3377, label %3385, label %3344, !llvm.loop !130

3378:                                             ; preds = %3340, %3370
  %3379 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3380:                                             ; preds = %3353, %3362
  %3381 = phi ptr [ %3369, %3362 ], [ %3346, %3353 ]
  %3382 = phi i32 [ %3368, %3362 ], [ 1, %3353 ]
  %3383 = load i32, ptr %3381, align 4, !tbaa !5
  %3384 = add nsw i32 %3383, %3382
  store i32 %3384, ptr %3381, align 4, !tbaa !5
  br label %3385

3385:                                             ; preds = %3372, %3380, %3342, %3326
  %3386 = icmp eq i32 %3334, %5
  br i1 %3386, label %5497, label %3248, !llvm.loop !131

3387:                                             ; preds = %3082
  %3388 = getelementptr inbounds i32, ptr %3, i64 %19
  %3389 = load i32, ptr %3388, align 4, !tbaa !5
  %3390 = icmp eq i32 %3389, 0
  %3391 = icmp sgt i32 %5, 0
  br i1 %3390, label %3401, label %3392

3392:                                             ; preds = %3387
  br i1 %3391, label %3393, label %5497

3393:                                             ; preds = %3392
  %3394 = icmp sgt i32 %13, 1
  %3395 = icmp sgt i32 %13, 0
  %3396 = add i32 %13, -2
  %3397 = zext i32 %3396 to i64
  %3398 = zext i32 %13 to i64
  %3399 = add nuw i32 %5, 1
  %3400 = icmp eq i32 %13, 1
  br label %3542

3401:                                             ; preds = %3387
  br i1 %3391, label %3402, label %5497

3402:                                             ; preds = %3401
  %3403 = icmp sgt i32 %13, 1
  %3404 = icmp sgt i32 %13, 0
  %3405 = add i32 %13, -2
  %3406 = zext i32 %3405 to i64
  %3407 = zext i32 %13 to i64
  %3408 = add nuw i32 %5, 1
  %3409 = icmp eq i32 %13, 1
  br label %3410

3410:                                             ; preds = %3402, %3540
  %3411 = phi i64 [ 0, %3402 ], [ %3490, %3540 ]
  %3412 = phi i32 [ 0, %3402 ], [ %3492, %3540 ]
  %3413 = phi double [ 0.000000e+00, %3402 ], [ %3491, %3540 ]
  %3414 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3403, label %3415, label %3484

3415:                                             ; preds = %3410, %3474
  %3416 = phi i32 [ %3483, %3474 ], [ 0, %3410 ]
  %3417 = phi i64 [ %3425, %3474 ], [ %3407, %3410 ]
  %3418 = phi i64 [ %3482, %3474 ], [ %3406, %3410 ]
  %3419 = phi i32 [ %3480, %3474 ], [ %3414, %3410 ]
  %3420 = sub i32 %3405, %3416
  %3421 = tail call i32 @llvm.smin.i32(i32 %3420, i32 0)
  %3422 = sub i32 %3420, %3421
  %3423 = zext i32 %3422 to i64
  %3424 = add nuw nsw i64 %3423, 1
  %3425 = add nsw i64 %3417, -1
  %3426 = icmp ult i32 %3422, 31
  br i1 %3426, label %3462, label %3427

3427:                                             ; preds = %3415
  %3428 = and i64 %3424, 8589934560
  %3429 = sub i64 %3418, %3428
  br label %3430

3430:                                             ; preds = %3430, %3427
  %3431 = phi i64 [ 0, %3427 ], [ %3454, %3430 ]
  %3432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3427 ], [ %3450, %3430 ]
  %3433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3427 ], [ %3451, %3430 ]
  %3434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3427 ], [ %3452, %3430 ]
  %3435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3427 ], [ %3453, %3430 ]
  %3436 = sub i64 %3418, %3431
  %3437 = getelementptr inbounds i32, ptr %9, i64 %3436
  %3438 = getelementptr inbounds i32, ptr %3437, i64 -7
  %3439 = load <8 x i32>, ptr %3438, align 4, !tbaa !5
  %3440 = shufflevector <8 x i32> %3439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3441 = getelementptr inbounds i32, ptr %3437, i64 -15
  %3442 = load <8 x i32>, ptr %3441, align 4, !tbaa !5
  %3443 = shufflevector <8 x i32> %3442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3444 = getelementptr inbounds i32, ptr %3437, i64 -23
  %3445 = load <8 x i32>, ptr %3444, align 4, !tbaa !5
  %3446 = shufflevector <8 x i32> %3445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3447 = getelementptr inbounds i32, ptr %3437, i64 -31
  %3448 = load <8 x i32>, ptr %3447, align 4, !tbaa !5
  %3449 = shufflevector <8 x i32> %3448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3450 = mul <8 x i32> %3440, %3432
  %3451 = mul <8 x i32> %3443, %3433
  %3452 = mul <8 x i32> %3446, %3434
  %3453 = mul <8 x i32> %3449, %3435
  %3454 = add nuw i64 %3431, 32
  %3455 = icmp eq i64 %3454, %3428
  br i1 %3455, label %3456, label %3430, !llvm.loop !132

3456:                                             ; preds = %3430
  %3457 = mul <8 x i32> %3451, %3450
  %3458 = mul <8 x i32> %3452, %3457
  %3459 = mul <8 x i32> %3453, %3458
  %3460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3459)
  %3461 = icmp eq i64 %3424, %3428
  br i1 %3461, label %3474, label %3462

3462:                                             ; preds = %3415, %3456
  %3463 = phi i64 [ %3418, %3415 ], [ %3429, %3456 ]
  %3464 = phi i32 [ 1, %3415 ], [ %3460, %3456 ]
  br label %3465

3465:                                             ; preds = %3462, %3465
  %3466 = phi i64 [ %3471, %3465 ], [ %3463, %3462 ]
  %3467 = phi i32 [ %3470, %3465 ], [ %3464, %3462 ]
  %3468 = getelementptr inbounds i32, ptr %9, i64 %3466
  %3469 = load i32, ptr %3468, align 4, !tbaa !5
  %3470 = mul nsw i32 %3469, %3467
  %3471 = add nsw i64 %3466, -1
  %3472 = trunc i64 %3466 to i32
  %3473 = icmp sgt i32 %3472, 0
  br i1 %3473, label %3465, label %3474, !llvm.loop !133

3474:                                             ; preds = %3465, %3456
  %3475 = phi i32 [ %3460, %3456 ], [ %3470, %3465 ]
  %3476 = and i64 %3425, 4294967295
  %3477 = getelementptr inbounds i32, ptr %6, i64 %3476
  %3478 = load i32, ptr %3477, align 4, !tbaa !5
  %3479 = mul nsw i32 %3478, %3475
  %3480 = add nsw i32 %3479, %3419
  %3481 = icmp sgt i64 %3417, 2
  %3482 = add nsw i64 %3418, -1
  %3483 = add i32 %3416, 1
  br i1 %3481, label %3415, label %3484, !llvm.loop !134

3484:                                             ; preds = %3474, %3410
  %3485 = phi i32 [ %3414, %3410 ], [ %3480, %3474 ]
  %3486 = sext i32 %3485 to i64
  %3487 = getelementptr inbounds i8, ptr %3075, i64 %3486
  %3488 = load i8, ptr %3487, align 1, !tbaa !11
  %3489 = zext i8 %3488 to i64
  %3490 = tail call i64 @llvm.smax.i64(i64 %3411, i64 %3489)
  store i64 %3490, ptr %3077, align 8, !tbaa !120
  %3491 = fadd fast double %3413, 1.000000e+00
  %3492 = add nuw nsw i32 %3412, 1
  br i1 %3404, label %3493, label %3540

3493:                                             ; preds = %3484
  %3494 = load i32, ptr %4, align 4, !tbaa !5
  %3495 = load i32, ptr %12, align 4, !tbaa !5
  %3496 = add nsw i32 %3495, -1
  %3497 = icmp slt i32 %3494, %3496
  br i1 %3497, label %3517, label %3498

3498:                                             ; preds = %3493
  %3499 = icmp eq i32 %3494, %3496
  br i1 %3499, label %3500, label %3533

3500:                                             ; preds = %3498
  store i32 0, ptr %4, align 4, !tbaa !5
  %3501 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3501, ptr %6, align 4, !tbaa !5
  br i1 %3409, label %3540, label %3502

3502:                                             ; preds = %3500, %3527
  %3503 = phi i64 [ %3531, %3527 ], [ 1, %3500 ]
  %3504 = getelementptr inbounds i32, ptr %4, i64 %3503
  %3505 = load i32, ptr %3504, align 4, !tbaa !5
  %3506 = getelementptr inbounds i32, ptr %12, i64 %3503
  %3507 = load i32, ptr %3506, align 4, !tbaa !5
  %3508 = add nsw i32 %3507, -1
  %3509 = icmp slt i32 %3505, %3508
  br i1 %3509, label %3510, label %3525

3510:                                             ; preds = %3502
  br i1 %3497, label %3517, label %3511

3511:                                             ; preds = %3510
  %3512 = getelementptr inbounds i32, ptr %7, i64 %3503
  %3513 = load i32, ptr %3512, align 4, !tbaa !5
  %3514 = getelementptr inbounds i32, ptr %6, i64 %3503
  %3515 = load i32, ptr %3514, align 4, !tbaa !5
  %3516 = add nsw i32 %3515, %3513
  store i32 %3516, ptr %3514, align 4, !tbaa !5
  br label %3535

3517:                                             ; preds = %3493, %3510
  %3518 = phi i32 [ %3505, %3510 ], [ %3494, %3493 ]
  %3519 = phi ptr [ %3504, %3510 ], [ %4, %3493 ]
  %3520 = phi i64 [ %3503, %3510 ], [ 0, %3493 ]
  %3521 = add nsw i32 %3518, 1
  store i32 %3521, ptr %3519, align 4, !tbaa !5
  %3522 = getelementptr inbounds i32, ptr %7, i64 %3520
  %3523 = load i32, ptr %3522, align 4, !tbaa !5
  %3524 = getelementptr inbounds i32, ptr %6, i64 %3520
  br label %3535

3525:                                             ; preds = %3502
  %3526 = icmp eq i32 %3505, %3508
  br i1 %3526, label %3527, label %3533

3527:                                             ; preds = %3525
  store i32 0, ptr %3504, align 4, !tbaa !5
  %3528 = getelementptr inbounds i32, ptr %8, i64 %3503
  %3529 = load i32, ptr %3528, align 4, !tbaa !5
  %3530 = getelementptr inbounds i32, ptr %6, i64 %3503
  store i32 %3529, ptr %3530, align 4, !tbaa !5
  %3531 = add nuw nsw i64 %3503, 1
  %3532 = icmp eq i64 %3531, %3407
  br i1 %3532, label %3540, label %3502, !llvm.loop !135

3533:                                             ; preds = %3498, %3525
  %3534 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3535:                                             ; preds = %3511, %3517
  %3536 = phi ptr [ %3524, %3517 ], [ %3504, %3511 ]
  %3537 = phi i32 [ %3523, %3517 ], [ 1, %3511 ]
  %3538 = load i32, ptr %3536, align 4, !tbaa !5
  %3539 = add nsw i32 %3538, %3537
  store i32 %3539, ptr %3536, align 4, !tbaa !5
  br label %3540

3540:                                             ; preds = %3527, %3535, %3500, %3484
  %3541 = icmp eq i32 %3492, %5
  br i1 %3541, label %5497, label %3410, !llvm.loop !136

3542:                                             ; preds = %3393, %3677
  %3543 = phi i64 [ 0, %3393 ], [ %3625, %3677 ]
  %3544 = phi i32 [ 0, %3393 ], [ %3626, %3677 ]
  %3545 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3394, label %3546, label %3615

3546:                                             ; preds = %3542, %3605
  %3547 = phi i32 [ %3614, %3605 ], [ 0, %3542 ]
  %3548 = phi i64 [ %3556, %3605 ], [ %3398, %3542 ]
  %3549 = phi i64 [ %3613, %3605 ], [ %3397, %3542 ]
  %3550 = phi i32 [ %3611, %3605 ], [ %3545, %3542 ]
  %3551 = sub i32 %3396, %3547
  %3552 = tail call i32 @llvm.smin.i32(i32 %3551, i32 0)
  %3553 = sub i32 %3551, %3552
  %3554 = zext i32 %3553 to i64
  %3555 = add nuw nsw i64 %3554, 1
  %3556 = add nsw i64 %3548, -1
  %3557 = icmp ult i32 %3553, 31
  br i1 %3557, label %3593, label %3558

3558:                                             ; preds = %3546
  %3559 = and i64 %3555, 8589934560
  %3560 = sub i64 %3549, %3559
  br label %3561

3561:                                             ; preds = %3561, %3558
  %3562 = phi i64 [ 0, %3558 ], [ %3585, %3561 ]
  %3563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3558 ], [ %3581, %3561 ]
  %3564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3558 ], [ %3582, %3561 ]
  %3565 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3558 ], [ %3583, %3561 ]
  %3566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3558 ], [ %3584, %3561 ]
  %3567 = sub i64 %3549, %3562
  %3568 = getelementptr inbounds i32, ptr %11, i64 %3567
  %3569 = getelementptr inbounds i32, ptr %3568, i64 -7
  %3570 = load <8 x i32>, ptr %3569, align 4, !tbaa !5
  %3571 = shufflevector <8 x i32> %3570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3572 = getelementptr inbounds i32, ptr %3568, i64 -15
  %3573 = load <8 x i32>, ptr %3572, align 4, !tbaa !5
  %3574 = shufflevector <8 x i32> %3573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3575 = getelementptr inbounds i32, ptr %3568, i64 -23
  %3576 = load <8 x i32>, ptr %3575, align 4, !tbaa !5
  %3577 = shufflevector <8 x i32> %3576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3578 = getelementptr inbounds i32, ptr %3568, i64 -31
  %3579 = load <8 x i32>, ptr %3578, align 4, !tbaa !5
  %3580 = shufflevector <8 x i32> %3579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3581 = mul <8 x i32> %3571, %3563
  %3582 = mul <8 x i32> %3574, %3564
  %3583 = mul <8 x i32> %3577, %3565
  %3584 = mul <8 x i32> %3580, %3566
  %3585 = add nuw i64 %3562, 32
  %3586 = icmp eq i64 %3585, %3559
  br i1 %3586, label %3587, label %3561, !llvm.loop !137

3587:                                             ; preds = %3561
  %3588 = mul <8 x i32> %3582, %3581
  %3589 = mul <8 x i32> %3583, %3588
  %3590 = mul <8 x i32> %3584, %3589
  %3591 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3590)
  %3592 = icmp eq i64 %3555, %3559
  br i1 %3592, label %3605, label %3593

3593:                                             ; preds = %3546, %3587
  %3594 = phi i64 [ %3549, %3546 ], [ %3560, %3587 ]
  %3595 = phi i32 [ 1, %3546 ], [ %3591, %3587 ]
  br label %3596

3596:                                             ; preds = %3593, %3596
  %3597 = phi i64 [ %3602, %3596 ], [ %3594, %3593 ]
  %3598 = phi i32 [ %3601, %3596 ], [ %3595, %3593 ]
  %3599 = getelementptr inbounds i32, ptr %11, i64 %3597
  %3600 = load i32, ptr %3599, align 4, !tbaa !5
  %3601 = mul nsw i32 %3600, %3598
  %3602 = add nsw i64 %3597, -1
  %3603 = trunc i64 %3597 to i32
  %3604 = icmp sgt i32 %3603, 0
  br i1 %3604, label %3596, label %3605, !llvm.loop !138

3605:                                             ; preds = %3596, %3587
  %3606 = phi i32 [ %3591, %3587 ], [ %3601, %3596 ]
  %3607 = and i64 %3556, 4294967295
  %3608 = getelementptr inbounds i32, ptr %6, i64 %3607
  %3609 = load i32, ptr %3608, align 4, !tbaa !5
  %3610 = mul nsw i32 %3609, %3606
  %3611 = add nsw i32 %3610, %3550
  %3612 = icmp sgt i64 %3548, 2
  %3613 = add nsw i64 %3549, -1
  %3614 = add i32 %3547, 1
  br i1 %3612, label %3546, label %3615, !llvm.loop !139

3615:                                             ; preds = %3605, %3542
  %3616 = phi i32 [ %3545, %3542 ], [ %3611, %3605 ]
  %3617 = icmp slt i32 %3616, %5
  br i1 %3617, label %3620, label %3618

3618:                                             ; preds = %3615
  %3619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

3620:                                             ; preds = %3615
  %3621 = sext i32 %3616 to i64
  %3622 = getelementptr inbounds i8, ptr %3075, i64 %3621
  %3623 = load i8, ptr %3622, align 1, !tbaa !11
  %3624 = zext i8 %3623 to i64
  %3625 = tail call i64 @llvm.smax.i64(i64 %3543, i64 %3624)
  store i64 %3625, ptr %3077, align 8, !tbaa !120
  %3626 = add nuw nsw i32 %3544, 1
  br i1 %3395, label %3627, label %3677

3627:                                             ; preds = %3620
  %3628 = load i32, ptr %4, align 4, !tbaa !5
  %3629 = load i32, ptr %12, align 4, !tbaa !5
  %3630 = add nsw i32 %3629, -1
  %3631 = icmp slt i32 %3628, %3630
  br i1 %3631, label %3654, label %3632

3632:                                             ; preds = %3627
  %3633 = icmp eq i32 %3628, %3630
  br i1 %3633, label %3634, label %3670

3634:                                             ; preds = %3632
  store i32 0, ptr %4, align 4, !tbaa !5
  %3635 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3635, ptr %6, align 4, !tbaa !5
  br i1 %3400, label %3677, label %3636

3636:                                             ; preds = %3634, %3664
  %3637 = phi i64 [ %3668, %3664 ], [ 1, %3634 ]
  %3638 = getelementptr inbounds i32, ptr %4, i64 %3637
  %3639 = load i32, ptr %3638, align 4, !tbaa !5
  %3640 = getelementptr inbounds i32, ptr %12, i64 %3637
  %3641 = load i32, ptr %3640, align 4, !tbaa !5
  %3642 = add nsw i32 %3641, -1
  %3643 = icmp slt i32 %3639, %3642
  br i1 %3643, label %3644, label %3662

3644:                                             ; preds = %3636
  br i1 %3631, label %3654, label %3645

3645:                                             ; preds = %3644
  %3646 = shl i64 %3637, 32
  %3647 = add i64 %3646, -4294967296
  %3648 = ashr exact i64 %3647, 32
  %3649 = getelementptr inbounds i32, ptr %7, i64 %3648
  %3650 = load i32, ptr %3649, align 4, !tbaa !5
  %3651 = getelementptr inbounds i32, ptr %6, i64 %3637
  %3652 = load i32, ptr %3651, align 4, !tbaa !5
  %3653 = add nsw i32 %3652, %3650
  store i32 %3653, ptr %3651, align 4, !tbaa !5
  br label %3672

3654:                                             ; preds = %3627, %3644
  %3655 = phi i32 [ %3639, %3644 ], [ %3628, %3627 ]
  %3656 = phi ptr [ %3638, %3644 ], [ %4, %3627 ]
  %3657 = phi i64 [ %3637, %3644 ], [ 0, %3627 ]
  %3658 = add nsw i32 %3655, 1
  store i32 %3658, ptr %3656, align 4, !tbaa !5
  %3659 = getelementptr inbounds i32, ptr %7, i64 %3657
  %3660 = load i32, ptr %3659, align 4, !tbaa !5
  %3661 = getelementptr inbounds i32, ptr %6, i64 %3657
  br label %3672

3662:                                             ; preds = %3636
  %3663 = icmp eq i32 %3639, %3642
  br i1 %3663, label %3664, label %3670

3664:                                             ; preds = %3662
  store i32 0, ptr %3638, align 4, !tbaa !5
  %3665 = getelementptr inbounds i32, ptr %8, i64 %3637
  %3666 = load i32, ptr %3665, align 4, !tbaa !5
  %3667 = getelementptr inbounds i32, ptr %6, i64 %3637
  store i32 %3666, ptr %3667, align 4, !tbaa !5
  %3668 = add nuw nsw i64 %3637, 1
  %3669 = icmp eq i64 %3668, %3398
  br i1 %3669, label %3677, label %3636, !llvm.loop !140

3670:                                             ; preds = %3632, %3662
  %3671 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3672:                                             ; preds = %3645, %3654
  %3673 = phi ptr [ %3661, %3654 ], [ %3638, %3645 ]
  %3674 = phi i32 [ %3660, %3654 ], [ 1, %3645 ]
  %3675 = load i32, ptr %3673, align 4, !tbaa !5
  %3676 = add nsw i32 %3675, %3674
  store i32 %3676, ptr %3673, align 4, !tbaa !5
  br label %3677

3677:                                             ; preds = %3664, %3672, %3634, %3620
  %3678 = icmp eq i32 %3626, %5
  br i1 %3678, label %5497, label %3542, !llvm.loop !141

3679:                                             ; preds = %3082
  %3680 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

3681:                                             ; preds = %18
  %3682 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3683 = load ptr, ptr %3682, align 8, !tbaa !9
  %3684 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3685 = load ptr, ptr %3684, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3685, align 8, !tbaa !18
  %3686 = icmp eq i32 %13, 0
  br i1 %3686, label %3687, label %3690

3687:                                             ; preds = %3681
  %3688 = load i8, ptr %3683, align 1, !tbaa !11
  %3689 = uitofp i8 %3688 to double
  store double %3689, ptr %3685, align 8, !tbaa !18
  br label %5497

3690:                                             ; preds = %3681
  switch i32 %1, label %4283 [
    i32 1, label %3691
    i32 0, label %3991
  ]

3691:                                             ; preds = %3690
  %3692 = getelementptr inbounds i32, ptr %3, i64 %19
  %3693 = load i32, ptr %3692, align 4, !tbaa !5
  %3694 = icmp eq i32 %3693, 0
  %3695 = icmp sgt i32 %5, 0
  br i1 %3694, label %3705, label %3696

3696:                                             ; preds = %3691
  br i1 %3695, label %3697, label %5497

3697:                                             ; preds = %3696
  %3698 = icmp sgt i32 %13, 1
  %3699 = icmp sgt i32 %13, 0
  %3700 = add i32 %13, -2
  %3701 = zext i32 %3700 to i64
  %3702 = zext i32 %13 to i64
  %3703 = add nuw i32 %5, 1
  %3704 = icmp eq i32 %13, 1
  br label %3854

3705:                                             ; preds = %3691
  br i1 %3695, label %3706, label %5497

3706:                                             ; preds = %3705
  %3707 = icmp sgt i32 %13, 1
  %3708 = icmp sgt i32 %13, 0
  %3709 = add i32 %13, -2
  %3710 = zext i32 %3709 to i64
  %3711 = zext i32 %13 to i64
  %3712 = add nuw i32 %5, 1
  %3713 = icmp eq i32 %13, 1
  br label %3714

3714:                                             ; preds = %3706, %3852
  %3715 = phi double [ 0.000000e+00, %3706 ], [ %3802, %3852 ]
  %3716 = phi i32 [ 0, %3706 ], [ %3804, %3852 ]
  %3717 = phi double [ 0.000000e+00, %3706 ], [ %3803, %3852 ]
  %3718 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3707, label %3719, label %3788

3719:                                             ; preds = %3714, %3778
  %3720 = phi i32 [ %3787, %3778 ], [ 0, %3714 ]
  %3721 = phi i64 [ %3729, %3778 ], [ %3711, %3714 ]
  %3722 = phi i64 [ %3786, %3778 ], [ %3710, %3714 ]
  %3723 = phi i32 [ %3784, %3778 ], [ %3718, %3714 ]
  %3724 = sub i32 %3709, %3720
  %3725 = tail call i32 @llvm.smin.i32(i32 %3724, i32 0)
  %3726 = sub i32 %3724, %3725
  %3727 = zext i32 %3726 to i64
  %3728 = add nuw nsw i64 %3727, 1
  %3729 = add nsw i64 %3721, -1
  %3730 = icmp ult i32 %3726, 31
  br i1 %3730, label %3766, label %3731

3731:                                             ; preds = %3719
  %3732 = and i64 %3728, 8589934560
  %3733 = sub i64 %3722, %3732
  br label %3734

3734:                                             ; preds = %3734, %3731
  %3735 = phi i64 [ 0, %3731 ], [ %3758, %3734 ]
  %3736 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3754, %3734 ]
  %3737 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3755, %3734 ]
  %3738 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3756, %3734 ]
  %3739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3757, %3734 ]
  %3740 = sub i64 %3722, %3735
  %3741 = getelementptr inbounds i32, ptr %9, i64 %3740
  %3742 = getelementptr inbounds i32, ptr %3741, i64 -7
  %3743 = load <8 x i32>, ptr %3742, align 4, !tbaa !5
  %3744 = shufflevector <8 x i32> %3743, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3745 = getelementptr inbounds i32, ptr %3741, i64 -15
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !5
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = getelementptr inbounds i32, ptr %3741, i64 -23
  %3749 = load <8 x i32>, ptr %3748, align 4, !tbaa !5
  %3750 = shufflevector <8 x i32> %3749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3751 = getelementptr inbounds i32, ptr %3741, i64 -31
  %3752 = load <8 x i32>, ptr %3751, align 4, !tbaa !5
  %3753 = shufflevector <8 x i32> %3752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3754 = mul <8 x i32> %3744, %3736
  %3755 = mul <8 x i32> %3747, %3737
  %3756 = mul <8 x i32> %3750, %3738
  %3757 = mul <8 x i32> %3753, %3739
  %3758 = add nuw i64 %3735, 32
  %3759 = icmp eq i64 %3758, %3732
  br i1 %3759, label %3760, label %3734, !llvm.loop !142

3760:                                             ; preds = %3734
  %3761 = mul <8 x i32> %3755, %3754
  %3762 = mul <8 x i32> %3756, %3761
  %3763 = mul <8 x i32> %3757, %3762
  %3764 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3763)
  %3765 = icmp eq i64 %3728, %3732
  br i1 %3765, label %3778, label %3766

3766:                                             ; preds = %3719, %3760
  %3767 = phi i64 [ %3722, %3719 ], [ %3733, %3760 ]
  %3768 = phi i32 [ 1, %3719 ], [ %3764, %3760 ]
  br label %3769

3769:                                             ; preds = %3766, %3769
  %3770 = phi i64 [ %3775, %3769 ], [ %3767, %3766 ]
  %3771 = phi i32 [ %3774, %3769 ], [ %3768, %3766 ]
  %3772 = getelementptr inbounds i32, ptr %9, i64 %3770
  %3773 = load i32, ptr %3772, align 4, !tbaa !5
  %3774 = mul nsw i32 %3773, %3771
  %3775 = add nsw i64 %3770, -1
  %3776 = trunc i64 %3770 to i32
  %3777 = icmp sgt i32 %3776, 0
  br i1 %3777, label %3769, label %3778, !llvm.loop !143

3778:                                             ; preds = %3769, %3760
  %3779 = phi i32 [ %3764, %3760 ], [ %3774, %3769 ]
  %3780 = and i64 %3729, 4294967295
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3780
  %3782 = load i32, ptr %3781, align 4, !tbaa !5
  %3783 = mul nsw i32 %3782, %3779
  %3784 = add nsw i32 %3783, %3723
  %3785 = icmp sgt i64 %3721, 2
  %3786 = add nsw i64 %3722, -1
  %3787 = add i32 %3720, 1
  br i1 %3785, label %3719, label %3788, !llvm.loop !144

3788:                                             ; preds = %3778, %3714
  %3789 = phi i32 [ %3718, %3714 ], [ %3784, %3778 ]
  %3790 = sext i32 %3789 to i64
  %3791 = getelementptr inbounds double, ptr %2, i64 %3790
  %3792 = load double, ptr %3791, align 8, !tbaa !18
  %3793 = getelementptr inbounds i8, ptr %3683, i64 %3790
  %3794 = load i8, ptr %3793, align 1, !tbaa !11
  %3795 = uitofp i8 %3794 to double
  %3796 = fmul fast double %3792, %3795
  %3797 = fcmp fast uge double %3796, 0.000000e+00
  %3798 = fneg fast double %3796
  %3799 = tail call fast double @llvm.fabs.f64(double %3796)
  %3800 = fcmp fast oge double %3715, %3799
  %3801 = select nnan ninf i1 %3797, double %3796, double %3798
  %3802 = select i1 %3800, double %3715, double %3801
  store double %3802, ptr %3685, align 8, !tbaa !18
  %3803 = fadd fast double %3792, %3717
  %3804 = add nuw nsw i32 %3716, 1
  br i1 %3708, label %3805, label %3852

3805:                                             ; preds = %3788
  %3806 = load i32, ptr %4, align 4, !tbaa !5
  %3807 = load i32, ptr %12, align 4, !tbaa !5
  %3808 = add nsw i32 %3807, -1
  %3809 = icmp slt i32 %3806, %3808
  br i1 %3809, label %3829, label %3810

3810:                                             ; preds = %3805
  %3811 = icmp eq i32 %3806, %3808
  br i1 %3811, label %3812, label %3845

3812:                                             ; preds = %3810
  store i32 0, ptr %4, align 4, !tbaa !5
  %3813 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3813, ptr %6, align 4, !tbaa !5
  br i1 %3713, label %3852, label %3814

3814:                                             ; preds = %3812, %3839
  %3815 = phi i64 [ %3843, %3839 ], [ 1, %3812 ]
  %3816 = getelementptr inbounds i32, ptr %4, i64 %3815
  %3817 = load i32, ptr %3816, align 4, !tbaa !5
  %3818 = getelementptr inbounds i32, ptr %12, i64 %3815
  %3819 = load i32, ptr %3818, align 4, !tbaa !5
  %3820 = add nsw i32 %3819, -1
  %3821 = icmp slt i32 %3817, %3820
  br i1 %3821, label %3822, label %3837

3822:                                             ; preds = %3814
  br i1 %3809, label %3829, label %3823

3823:                                             ; preds = %3822
  %3824 = getelementptr inbounds i32, ptr %7, i64 %3815
  %3825 = load i32, ptr %3824, align 4, !tbaa !5
  %3826 = getelementptr inbounds i32, ptr %6, i64 %3815
  %3827 = load i32, ptr %3826, align 4, !tbaa !5
  %3828 = add nsw i32 %3827, %3825
  store i32 %3828, ptr %3826, align 4, !tbaa !5
  br label %3847

3829:                                             ; preds = %3805, %3822
  %3830 = phi i32 [ %3817, %3822 ], [ %3806, %3805 ]
  %3831 = phi ptr [ %3816, %3822 ], [ %4, %3805 ]
  %3832 = phi i64 [ %3815, %3822 ], [ 0, %3805 ]
  %3833 = add nsw i32 %3830, 1
  store i32 %3833, ptr %3831, align 4, !tbaa !5
  %3834 = getelementptr inbounds i32, ptr %7, i64 %3832
  %3835 = load i32, ptr %3834, align 4, !tbaa !5
  %3836 = getelementptr inbounds i32, ptr %6, i64 %3832
  br label %3847

3837:                                             ; preds = %3814
  %3838 = icmp eq i32 %3817, %3820
  br i1 %3838, label %3839, label %3845

3839:                                             ; preds = %3837
  store i32 0, ptr %3816, align 4, !tbaa !5
  %3840 = getelementptr inbounds i32, ptr %8, i64 %3815
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = getelementptr inbounds i32, ptr %6, i64 %3815
  store i32 %3841, ptr %3842, align 4, !tbaa !5
  %3843 = add nuw nsw i64 %3815, 1
  %3844 = icmp eq i64 %3843, %3711
  br i1 %3844, label %3852, label %3814, !llvm.loop !145

3845:                                             ; preds = %3810, %3837
  %3846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3847:                                             ; preds = %3823, %3829
  %3848 = phi ptr [ %3836, %3829 ], [ %3816, %3823 ]
  %3849 = phi i32 [ %3835, %3829 ], [ 1, %3823 ]
  %3850 = load i32, ptr %3848, align 4, !tbaa !5
  %3851 = add nsw i32 %3850, %3849
  store i32 %3851, ptr %3848, align 4, !tbaa !5
  br label %3852

3852:                                             ; preds = %3839, %3847, %3812, %3788
  %3853 = icmp eq i32 %3804, %5
  br i1 %3853, label %5497, label %3714, !llvm.loop !146

3854:                                             ; preds = %3697, %3989
  %3855 = phi double [ 0.000000e+00, %3697 ], [ %3937, %3989 ]
  %3856 = phi i32 [ 0, %3697 ], [ %3938, %3989 ]
  %3857 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3698, label %3858, label %3927

3858:                                             ; preds = %3854, %3917
  %3859 = phi i32 [ %3926, %3917 ], [ 0, %3854 ]
  %3860 = phi i64 [ %3868, %3917 ], [ %3702, %3854 ]
  %3861 = phi i64 [ %3925, %3917 ], [ %3701, %3854 ]
  %3862 = phi i32 [ %3923, %3917 ], [ %3857, %3854 ]
  %3863 = sub i32 %3700, %3859
  %3864 = tail call i32 @llvm.smin.i32(i32 %3863, i32 0)
  %3865 = sub i32 %3863, %3864
  %3866 = zext i32 %3865 to i64
  %3867 = add nuw nsw i64 %3866, 1
  %3868 = add nsw i64 %3860, -1
  %3869 = icmp ult i32 %3865, 31
  br i1 %3869, label %3905, label %3870

3870:                                             ; preds = %3858
  %3871 = and i64 %3867, 8589934560
  %3872 = sub i64 %3861, %3871
  br label %3873

3873:                                             ; preds = %3873, %3870
  %3874 = phi i64 [ 0, %3870 ], [ %3897, %3873 ]
  %3875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3870 ], [ %3893, %3873 ]
  %3876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3870 ], [ %3894, %3873 ]
  %3877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3870 ], [ %3895, %3873 ]
  %3878 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3870 ], [ %3896, %3873 ]
  %3879 = sub i64 %3861, %3874
  %3880 = getelementptr inbounds i32, ptr %11, i64 %3879
  %3881 = getelementptr inbounds i32, ptr %3880, i64 -7
  %3882 = load <8 x i32>, ptr %3881, align 4, !tbaa !5
  %3883 = shufflevector <8 x i32> %3882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3884 = getelementptr inbounds i32, ptr %3880, i64 -15
  %3885 = load <8 x i32>, ptr %3884, align 4, !tbaa !5
  %3886 = shufflevector <8 x i32> %3885, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3887 = getelementptr inbounds i32, ptr %3880, i64 -23
  %3888 = load <8 x i32>, ptr %3887, align 4, !tbaa !5
  %3889 = shufflevector <8 x i32> %3888, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3890 = getelementptr inbounds i32, ptr %3880, i64 -31
  %3891 = load <8 x i32>, ptr %3890, align 4, !tbaa !5
  %3892 = shufflevector <8 x i32> %3891, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3893 = mul <8 x i32> %3883, %3875
  %3894 = mul <8 x i32> %3886, %3876
  %3895 = mul <8 x i32> %3889, %3877
  %3896 = mul <8 x i32> %3892, %3878
  %3897 = add nuw i64 %3874, 32
  %3898 = icmp eq i64 %3897, %3871
  br i1 %3898, label %3899, label %3873, !llvm.loop !147

3899:                                             ; preds = %3873
  %3900 = mul <8 x i32> %3894, %3893
  %3901 = mul <8 x i32> %3895, %3900
  %3902 = mul <8 x i32> %3896, %3901
  %3903 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3902)
  %3904 = icmp eq i64 %3867, %3871
  br i1 %3904, label %3917, label %3905

3905:                                             ; preds = %3858, %3899
  %3906 = phi i64 [ %3861, %3858 ], [ %3872, %3899 ]
  %3907 = phi i32 [ 1, %3858 ], [ %3903, %3899 ]
  br label %3908

3908:                                             ; preds = %3905, %3908
  %3909 = phi i64 [ %3914, %3908 ], [ %3906, %3905 ]
  %3910 = phi i32 [ %3913, %3908 ], [ %3907, %3905 ]
  %3911 = getelementptr inbounds i32, ptr %11, i64 %3909
  %3912 = load i32, ptr %3911, align 4, !tbaa !5
  %3913 = mul nsw i32 %3912, %3910
  %3914 = add nsw i64 %3909, -1
  %3915 = trunc i64 %3909 to i32
  %3916 = icmp sgt i32 %3915, 0
  br i1 %3916, label %3908, label %3917, !llvm.loop !148

3917:                                             ; preds = %3908, %3899
  %3918 = phi i32 [ %3903, %3899 ], [ %3913, %3908 ]
  %3919 = and i64 %3868, 4294967295
  %3920 = getelementptr inbounds i32, ptr %6, i64 %3919
  %3921 = load i32, ptr %3920, align 4, !tbaa !5
  %3922 = mul nsw i32 %3921, %3918
  %3923 = add nsw i32 %3922, %3862
  %3924 = icmp sgt i64 %3860, 2
  %3925 = add nsw i64 %3861, -1
  %3926 = add i32 %3859, 1
  br i1 %3924, label %3858, label %3927, !llvm.loop !149

3927:                                             ; preds = %3917, %3854
  %3928 = phi i32 [ %3857, %3854 ], [ %3923, %3917 ]
  %3929 = icmp slt i32 %3928, %5
  br i1 %3929, label %3932, label %3930

3930:                                             ; preds = %3927
  %3931 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

3932:                                             ; preds = %3927
  %3933 = sext i32 %3928 to i64
  %3934 = getelementptr inbounds i8, ptr %3683, i64 %3933
  %3935 = load i8, ptr %3934, align 1, !tbaa !11
  %3936 = uitofp i8 %3935 to double
  %3937 = tail call fast double @llvm.maxnum.f64(double %3855, double %3936)
  store double %3937, ptr %3685, align 8, !tbaa !18
  %3938 = add nuw nsw i32 %3856, 1
  br i1 %3699, label %3939, label %3989

3939:                                             ; preds = %3932
  %3940 = load i32, ptr %4, align 4, !tbaa !5
  %3941 = load i32, ptr %12, align 4, !tbaa !5
  %3942 = add nsw i32 %3941, -1
  %3943 = icmp slt i32 %3940, %3942
  br i1 %3943, label %3966, label %3944

3944:                                             ; preds = %3939
  %3945 = icmp eq i32 %3940, %3942
  br i1 %3945, label %3946, label %3982

3946:                                             ; preds = %3944
  store i32 0, ptr %4, align 4, !tbaa !5
  %3947 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3947, ptr %6, align 4, !tbaa !5
  br i1 %3704, label %3989, label %3948

3948:                                             ; preds = %3946, %3976
  %3949 = phi i64 [ %3980, %3976 ], [ 1, %3946 ]
  %3950 = getelementptr inbounds i32, ptr %4, i64 %3949
  %3951 = load i32, ptr %3950, align 4, !tbaa !5
  %3952 = getelementptr inbounds i32, ptr %12, i64 %3949
  %3953 = load i32, ptr %3952, align 4, !tbaa !5
  %3954 = add nsw i32 %3953, -1
  %3955 = icmp slt i32 %3951, %3954
  br i1 %3955, label %3956, label %3974

3956:                                             ; preds = %3948
  br i1 %3943, label %3966, label %3957

3957:                                             ; preds = %3956
  %3958 = shl i64 %3949, 32
  %3959 = add i64 %3958, -4294967296
  %3960 = ashr exact i64 %3959, 32
  %3961 = getelementptr inbounds i32, ptr %7, i64 %3960
  %3962 = load i32, ptr %3961, align 4, !tbaa !5
  %3963 = getelementptr inbounds i32, ptr %6, i64 %3949
  %3964 = load i32, ptr %3963, align 4, !tbaa !5
  %3965 = add nsw i32 %3964, %3962
  store i32 %3965, ptr %3963, align 4, !tbaa !5
  br label %3984

3966:                                             ; preds = %3939, %3956
  %3967 = phi i32 [ %3951, %3956 ], [ %3940, %3939 ]
  %3968 = phi ptr [ %3950, %3956 ], [ %4, %3939 ]
  %3969 = phi i64 [ %3949, %3956 ], [ 0, %3939 ]
  %3970 = add nsw i32 %3967, 1
  store i32 %3970, ptr %3968, align 4, !tbaa !5
  %3971 = getelementptr inbounds i32, ptr %7, i64 %3969
  %3972 = load i32, ptr %3971, align 4, !tbaa !5
  %3973 = getelementptr inbounds i32, ptr %6, i64 %3969
  br label %3984

3974:                                             ; preds = %3948
  %3975 = icmp eq i32 %3951, %3954
  br i1 %3975, label %3976, label %3982

3976:                                             ; preds = %3974
  store i32 0, ptr %3950, align 4, !tbaa !5
  %3977 = getelementptr inbounds i32, ptr %8, i64 %3949
  %3978 = load i32, ptr %3977, align 4, !tbaa !5
  %3979 = getelementptr inbounds i32, ptr %6, i64 %3949
  store i32 %3978, ptr %3979, align 4, !tbaa !5
  %3980 = add nuw nsw i64 %3949, 1
  %3981 = icmp eq i64 %3980, %3702
  br i1 %3981, label %3989, label %3948, !llvm.loop !150

3982:                                             ; preds = %3944, %3974
  %3983 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

3984:                                             ; preds = %3957, %3966
  %3985 = phi ptr [ %3973, %3966 ], [ %3950, %3957 ]
  %3986 = phi i32 [ %3972, %3966 ], [ 1, %3957 ]
  %3987 = load i32, ptr %3985, align 4, !tbaa !5
  %3988 = add nsw i32 %3987, %3986
  store i32 %3988, ptr %3985, align 4, !tbaa !5
  br label %3989

3989:                                             ; preds = %3976, %3984, %3946, %3932
  %3990 = icmp eq i32 %3938, %5
  br i1 %3990, label %5497, label %3854, !llvm.loop !151

3991:                                             ; preds = %3690
  %3992 = getelementptr inbounds i32, ptr %3, i64 %19
  %3993 = load i32, ptr %3992, align 4, !tbaa !5
  %3994 = icmp eq i32 %3993, 0
  %3995 = icmp sgt i32 %5, 0
  br i1 %3994, label %4005, label %3996

3996:                                             ; preds = %3991
  br i1 %3995, label %3997, label %5497

3997:                                             ; preds = %3996
  %3998 = icmp sgt i32 %13, 1
  %3999 = icmp sgt i32 %13, 0
  %4000 = add i32 %13, -2
  %4001 = zext i32 %4000 to i64
  %4002 = zext i32 %13 to i64
  %4003 = add nuw i32 %5, 1
  %4004 = icmp eq i32 %13, 1
  br label %4146

4005:                                             ; preds = %3991
  br i1 %3995, label %4006, label %5497

4006:                                             ; preds = %4005
  %4007 = icmp sgt i32 %13, 1
  %4008 = icmp sgt i32 %13, 0
  %4009 = add i32 %13, -2
  %4010 = zext i32 %4009 to i64
  %4011 = zext i32 %13 to i64
  %4012 = add nuw i32 %5, 1
  %4013 = icmp eq i32 %13, 1
  br label %4014

4014:                                             ; preds = %4006, %4144
  %4015 = phi double [ 0.000000e+00, %4006 ], [ %4094, %4144 ]
  %4016 = phi i32 [ 0, %4006 ], [ %4096, %4144 ]
  %4017 = phi double [ 0.000000e+00, %4006 ], [ %4095, %4144 ]
  %4018 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4007, label %4019, label %4088

4019:                                             ; preds = %4014, %4078
  %4020 = phi i32 [ %4087, %4078 ], [ 0, %4014 ]
  %4021 = phi i64 [ %4029, %4078 ], [ %4011, %4014 ]
  %4022 = phi i64 [ %4086, %4078 ], [ %4010, %4014 ]
  %4023 = phi i32 [ %4084, %4078 ], [ %4018, %4014 ]
  %4024 = sub i32 %4009, %4020
  %4025 = tail call i32 @llvm.smin.i32(i32 %4024, i32 0)
  %4026 = sub i32 %4024, %4025
  %4027 = zext i32 %4026 to i64
  %4028 = add nuw nsw i64 %4027, 1
  %4029 = add nsw i64 %4021, -1
  %4030 = icmp ult i32 %4026, 31
  br i1 %4030, label %4066, label %4031

4031:                                             ; preds = %4019
  %4032 = and i64 %4028, 8589934560
  %4033 = sub i64 %4022, %4032
  br label %4034

4034:                                             ; preds = %4034, %4031
  %4035 = phi i64 [ 0, %4031 ], [ %4058, %4034 ]
  %4036 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4031 ], [ %4054, %4034 ]
  %4037 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4031 ], [ %4055, %4034 ]
  %4038 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4031 ], [ %4056, %4034 ]
  %4039 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4031 ], [ %4057, %4034 ]
  %4040 = sub i64 %4022, %4035
  %4041 = getelementptr inbounds i32, ptr %9, i64 %4040
  %4042 = getelementptr inbounds i32, ptr %4041, i64 -7
  %4043 = load <8 x i32>, ptr %4042, align 4, !tbaa !5
  %4044 = shufflevector <8 x i32> %4043, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4045 = getelementptr inbounds i32, ptr %4041, i64 -15
  %4046 = load <8 x i32>, ptr %4045, align 4, !tbaa !5
  %4047 = shufflevector <8 x i32> %4046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4048 = getelementptr inbounds i32, ptr %4041, i64 -23
  %4049 = load <8 x i32>, ptr %4048, align 4, !tbaa !5
  %4050 = shufflevector <8 x i32> %4049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4051 = getelementptr inbounds i32, ptr %4041, i64 -31
  %4052 = load <8 x i32>, ptr %4051, align 4, !tbaa !5
  %4053 = shufflevector <8 x i32> %4052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4054 = mul <8 x i32> %4044, %4036
  %4055 = mul <8 x i32> %4047, %4037
  %4056 = mul <8 x i32> %4050, %4038
  %4057 = mul <8 x i32> %4053, %4039
  %4058 = add nuw i64 %4035, 32
  %4059 = icmp eq i64 %4058, %4032
  br i1 %4059, label %4060, label %4034, !llvm.loop !152

4060:                                             ; preds = %4034
  %4061 = mul <8 x i32> %4055, %4054
  %4062 = mul <8 x i32> %4056, %4061
  %4063 = mul <8 x i32> %4057, %4062
  %4064 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4063)
  %4065 = icmp eq i64 %4028, %4032
  br i1 %4065, label %4078, label %4066

4066:                                             ; preds = %4019, %4060
  %4067 = phi i64 [ %4022, %4019 ], [ %4033, %4060 ]
  %4068 = phi i32 [ 1, %4019 ], [ %4064, %4060 ]
  br label %4069

4069:                                             ; preds = %4066, %4069
  %4070 = phi i64 [ %4075, %4069 ], [ %4067, %4066 ]
  %4071 = phi i32 [ %4074, %4069 ], [ %4068, %4066 ]
  %4072 = getelementptr inbounds i32, ptr %9, i64 %4070
  %4073 = load i32, ptr %4072, align 4, !tbaa !5
  %4074 = mul nsw i32 %4073, %4071
  %4075 = add nsw i64 %4070, -1
  %4076 = trunc i64 %4070 to i32
  %4077 = icmp sgt i32 %4076, 0
  br i1 %4077, label %4069, label %4078, !llvm.loop !153

4078:                                             ; preds = %4069, %4060
  %4079 = phi i32 [ %4064, %4060 ], [ %4074, %4069 ]
  %4080 = and i64 %4029, 4294967295
  %4081 = getelementptr inbounds i32, ptr %6, i64 %4080
  %4082 = load i32, ptr %4081, align 4, !tbaa !5
  %4083 = mul nsw i32 %4082, %4079
  %4084 = add nsw i32 %4083, %4023
  %4085 = icmp sgt i64 %4021, 2
  %4086 = add nsw i64 %4022, -1
  %4087 = add i32 %4020, 1
  br i1 %4085, label %4019, label %4088, !llvm.loop !154

4088:                                             ; preds = %4078, %4014
  %4089 = phi i32 [ %4018, %4014 ], [ %4084, %4078 ]
  %4090 = sext i32 %4089 to i64
  %4091 = getelementptr inbounds i8, ptr %3683, i64 %4090
  %4092 = load i8, ptr %4091, align 1, !tbaa !11
  %4093 = uitofp i8 %4092 to double
  %4094 = tail call fast double @llvm.maxnum.f64(double %4015, double %4093)
  store double %4094, ptr %3685, align 8, !tbaa !18
  %4095 = fadd fast double %4017, 1.000000e+00
  %4096 = add nuw nsw i32 %4016, 1
  br i1 %4008, label %4097, label %4144

4097:                                             ; preds = %4088
  %4098 = load i32, ptr %4, align 4, !tbaa !5
  %4099 = load i32, ptr %12, align 4, !tbaa !5
  %4100 = add nsw i32 %4099, -1
  %4101 = icmp slt i32 %4098, %4100
  br i1 %4101, label %4121, label %4102

4102:                                             ; preds = %4097
  %4103 = icmp eq i32 %4098, %4100
  br i1 %4103, label %4104, label %4137

4104:                                             ; preds = %4102
  store i32 0, ptr %4, align 4, !tbaa !5
  %4105 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4105, ptr %6, align 4, !tbaa !5
  br i1 %4013, label %4144, label %4106

4106:                                             ; preds = %4104, %4131
  %4107 = phi i64 [ %4135, %4131 ], [ 1, %4104 ]
  %4108 = getelementptr inbounds i32, ptr %4, i64 %4107
  %4109 = load i32, ptr %4108, align 4, !tbaa !5
  %4110 = getelementptr inbounds i32, ptr %12, i64 %4107
  %4111 = load i32, ptr %4110, align 4, !tbaa !5
  %4112 = add nsw i32 %4111, -1
  %4113 = icmp slt i32 %4109, %4112
  br i1 %4113, label %4114, label %4129

4114:                                             ; preds = %4106
  br i1 %4101, label %4121, label %4115

4115:                                             ; preds = %4114
  %4116 = getelementptr inbounds i32, ptr %7, i64 %4107
  %4117 = load i32, ptr %4116, align 4, !tbaa !5
  %4118 = getelementptr inbounds i32, ptr %6, i64 %4107
  %4119 = load i32, ptr %4118, align 4, !tbaa !5
  %4120 = add nsw i32 %4119, %4117
  store i32 %4120, ptr %4118, align 4, !tbaa !5
  br label %4139

4121:                                             ; preds = %4097, %4114
  %4122 = phi i32 [ %4109, %4114 ], [ %4098, %4097 ]
  %4123 = phi ptr [ %4108, %4114 ], [ %4, %4097 ]
  %4124 = phi i64 [ %4107, %4114 ], [ 0, %4097 ]
  %4125 = add nsw i32 %4122, 1
  store i32 %4125, ptr %4123, align 4, !tbaa !5
  %4126 = getelementptr inbounds i32, ptr %7, i64 %4124
  %4127 = load i32, ptr %4126, align 4, !tbaa !5
  %4128 = getelementptr inbounds i32, ptr %6, i64 %4124
  br label %4139

4129:                                             ; preds = %4106
  %4130 = icmp eq i32 %4109, %4112
  br i1 %4130, label %4131, label %4137

4131:                                             ; preds = %4129
  store i32 0, ptr %4108, align 4, !tbaa !5
  %4132 = getelementptr inbounds i32, ptr %8, i64 %4107
  %4133 = load i32, ptr %4132, align 4, !tbaa !5
  %4134 = getelementptr inbounds i32, ptr %6, i64 %4107
  store i32 %4133, ptr %4134, align 4, !tbaa !5
  %4135 = add nuw nsw i64 %4107, 1
  %4136 = icmp eq i64 %4135, %4011
  br i1 %4136, label %4144, label %4106, !llvm.loop !155

4137:                                             ; preds = %4102, %4129
  %4138 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

4139:                                             ; preds = %4115, %4121
  %4140 = phi ptr [ %4128, %4121 ], [ %4108, %4115 ]
  %4141 = phi i32 [ %4127, %4121 ], [ 1, %4115 ]
  %4142 = load i32, ptr %4140, align 4, !tbaa !5
  %4143 = add nsw i32 %4142, %4141
  store i32 %4143, ptr %4140, align 4, !tbaa !5
  br label %4144

4144:                                             ; preds = %4131, %4139, %4104, %4088
  %4145 = icmp eq i32 %4096, %5
  br i1 %4145, label %5497, label %4014, !llvm.loop !156

4146:                                             ; preds = %3997, %4281
  %4147 = phi double [ 0.000000e+00, %3997 ], [ %4229, %4281 ]
  %4148 = phi i32 [ 0, %3997 ], [ %4230, %4281 ]
  %4149 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3998, label %4150, label %4219

4150:                                             ; preds = %4146, %4209
  %4151 = phi i32 [ %4218, %4209 ], [ 0, %4146 ]
  %4152 = phi i64 [ %4160, %4209 ], [ %4002, %4146 ]
  %4153 = phi i64 [ %4217, %4209 ], [ %4001, %4146 ]
  %4154 = phi i32 [ %4215, %4209 ], [ %4149, %4146 ]
  %4155 = sub i32 %4000, %4151
  %4156 = tail call i32 @llvm.smin.i32(i32 %4155, i32 0)
  %4157 = sub i32 %4155, %4156
  %4158 = zext i32 %4157 to i64
  %4159 = add nuw nsw i64 %4158, 1
  %4160 = add nsw i64 %4152, -1
  %4161 = icmp ult i32 %4157, 31
  br i1 %4161, label %4197, label %4162

4162:                                             ; preds = %4150
  %4163 = and i64 %4159, 8589934560
  %4164 = sub i64 %4153, %4163
  br label %4165

4165:                                             ; preds = %4165, %4162
  %4166 = phi i64 [ 0, %4162 ], [ %4189, %4165 ]
  %4167 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4162 ], [ %4185, %4165 ]
  %4168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4162 ], [ %4186, %4165 ]
  %4169 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4162 ], [ %4187, %4165 ]
  %4170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4162 ], [ %4188, %4165 ]
  %4171 = sub i64 %4153, %4166
  %4172 = getelementptr inbounds i32, ptr %11, i64 %4171
  %4173 = getelementptr inbounds i32, ptr %4172, i64 -7
  %4174 = load <8 x i32>, ptr %4173, align 4, !tbaa !5
  %4175 = shufflevector <8 x i32> %4174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4176 = getelementptr inbounds i32, ptr %4172, i64 -15
  %4177 = load <8 x i32>, ptr %4176, align 4, !tbaa !5
  %4178 = shufflevector <8 x i32> %4177, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4179 = getelementptr inbounds i32, ptr %4172, i64 -23
  %4180 = load <8 x i32>, ptr %4179, align 4, !tbaa !5
  %4181 = shufflevector <8 x i32> %4180, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4182 = getelementptr inbounds i32, ptr %4172, i64 -31
  %4183 = load <8 x i32>, ptr %4182, align 4, !tbaa !5
  %4184 = shufflevector <8 x i32> %4183, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4185 = mul <8 x i32> %4175, %4167
  %4186 = mul <8 x i32> %4178, %4168
  %4187 = mul <8 x i32> %4181, %4169
  %4188 = mul <8 x i32> %4184, %4170
  %4189 = add nuw i64 %4166, 32
  %4190 = icmp eq i64 %4189, %4163
  br i1 %4190, label %4191, label %4165, !llvm.loop !157

4191:                                             ; preds = %4165
  %4192 = mul <8 x i32> %4186, %4185
  %4193 = mul <8 x i32> %4187, %4192
  %4194 = mul <8 x i32> %4188, %4193
  %4195 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4194)
  %4196 = icmp eq i64 %4159, %4163
  br i1 %4196, label %4209, label %4197

4197:                                             ; preds = %4150, %4191
  %4198 = phi i64 [ %4153, %4150 ], [ %4164, %4191 ]
  %4199 = phi i32 [ 1, %4150 ], [ %4195, %4191 ]
  br label %4200

4200:                                             ; preds = %4197, %4200
  %4201 = phi i64 [ %4206, %4200 ], [ %4198, %4197 ]
  %4202 = phi i32 [ %4205, %4200 ], [ %4199, %4197 ]
  %4203 = getelementptr inbounds i32, ptr %11, i64 %4201
  %4204 = load i32, ptr %4203, align 4, !tbaa !5
  %4205 = mul nsw i32 %4204, %4202
  %4206 = add nsw i64 %4201, -1
  %4207 = trunc i64 %4201 to i32
  %4208 = icmp sgt i32 %4207, 0
  br i1 %4208, label %4200, label %4209, !llvm.loop !158

4209:                                             ; preds = %4200, %4191
  %4210 = phi i32 [ %4195, %4191 ], [ %4205, %4200 ]
  %4211 = and i64 %4160, 4294967295
  %4212 = getelementptr inbounds i32, ptr %6, i64 %4211
  %4213 = load i32, ptr %4212, align 4, !tbaa !5
  %4214 = mul nsw i32 %4213, %4210
  %4215 = add nsw i32 %4214, %4154
  %4216 = icmp sgt i64 %4152, 2
  %4217 = add nsw i64 %4153, -1
  %4218 = add i32 %4151, 1
  br i1 %4216, label %4150, label %4219, !llvm.loop !159

4219:                                             ; preds = %4209, %4146
  %4220 = phi i32 [ %4149, %4146 ], [ %4215, %4209 ]
  %4221 = icmp slt i32 %4220, %5
  br i1 %4221, label %4224, label %4222

4222:                                             ; preds = %4219
  %4223 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

4224:                                             ; preds = %4219
  %4225 = sext i32 %4220 to i64
  %4226 = getelementptr inbounds i8, ptr %3683, i64 %4225
  %4227 = load i8, ptr %4226, align 1, !tbaa !11
  %4228 = uitofp i8 %4227 to double
  %4229 = tail call fast double @llvm.maxnum.f64(double %4147, double %4228)
  store double %4229, ptr %3685, align 8, !tbaa !18
  %4230 = add nuw nsw i32 %4148, 1
  br i1 %3999, label %4231, label %4281

4231:                                             ; preds = %4224
  %4232 = load i32, ptr %4, align 4, !tbaa !5
  %4233 = load i32, ptr %12, align 4, !tbaa !5
  %4234 = add nsw i32 %4233, -1
  %4235 = icmp slt i32 %4232, %4234
  br i1 %4235, label %4258, label %4236

4236:                                             ; preds = %4231
  %4237 = icmp eq i32 %4232, %4234
  br i1 %4237, label %4238, label %4274

4238:                                             ; preds = %4236
  store i32 0, ptr %4, align 4, !tbaa !5
  %4239 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4239, ptr %6, align 4, !tbaa !5
  br i1 %4004, label %4281, label %4240

4240:                                             ; preds = %4238, %4268
  %4241 = phi i64 [ %4272, %4268 ], [ 1, %4238 ]
  %4242 = getelementptr inbounds i32, ptr %4, i64 %4241
  %4243 = load i32, ptr %4242, align 4, !tbaa !5
  %4244 = getelementptr inbounds i32, ptr %12, i64 %4241
  %4245 = load i32, ptr %4244, align 4, !tbaa !5
  %4246 = add nsw i32 %4245, -1
  %4247 = icmp slt i32 %4243, %4246
  br i1 %4247, label %4248, label %4266

4248:                                             ; preds = %4240
  br i1 %4235, label %4258, label %4249

4249:                                             ; preds = %4248
  %4250 = shl i64 %4241, 32
  %4251 = add i64 %4250, -4294967296
  %4252 = ashr exact i64 %4251, 32
  %4253 = getelementptr inbounds i32, ptr %7, i64 %4252
  %4254 = load i32, ptr %4253, align 4, !tbaa !5
  %4255 = getelementptr inbounds i32, ptr %6, i64 %4241
  %4256 = load i32, ptr %4255, align 4, !tbaa !5
  %4257 = add nsw i32 %4256, %4254
  store i32 %4257, ptr %4255, align 4, !tbaa !5
  br label %4276

4258:                                             ; preds = %4231, %4248
  %4259 = phi i32 [ %4243, %4248 ], [ %4232, %4231 ]
  %4260 = phi ptr [ %4242, %4248 ], [ %4, %4231 ]
  %4261 = phi i64 [ %4241, %4248 ], [ 0, %4231 ]
  %4262 = add nsw i32 %4259, 1
  store i32 %4262, ptr %4260, align 4, !tbaa !5
  %4263 = getelementptr inbounds i32, ptr %7, i64 %4261
  %4264 = load i32, ptr %4263, align 4, !tbaa !5
  %4265 = getelementptr inbounds i32, ptr %6, i64 %4261
  br label %4276

4266:                                             ; preds = %4240
  %4267 = icmp eq i32 %4243, %4246
  br i1 %4267, label %4268, label %4274

4268:                                             ; preds = %4266
  store i32 0, ptr %4242, align 4, !tbaa !5
  %4269 = getelementptr inbounds i32, ptr %8, i64 %4241
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = getelementptr inbounds i32, ptr %6, i64 %4241
  store i32 %4270, ptr %4271, align 4, !tbaa !5
  %4272 = add nuw nsw i64 %4241, 1
  %4273 = icmp eq i64 %4272, %4002
  br i1 %4273, label %4281, label %4240, !llvm.loop !160

4274:                                             ; preds = %4236, %4266
  %4275 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

4276:                                             ; preds = %4249, %4258
  %4277 = phi ptr [ %4265, %4258 ], [ %4242, %4249 ]
  %4278 = phi i32 [ %4264, %4258 ], [ 1, %4249 ]
  %4279 = load i32, ptr %4277, align 4, !tbaa !5
  %4280 = add nsw i32 %4279, %4278
  store i32 %4280, ptr %4277, align 4, !tbaa !5
  br label %4281

4281:                                             ; preds = %4268, %4276, %4238, %4224
  %4282 = icmp eq i32 %4230, %5
  br i1 %4282, label %5497, label %4146, !llvm.loop !161

4283:                                             ; preds = %3690
  %4284 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 87, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

4285:                                             ; preds = %18
  %4286 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4287 = load ptr, ptr %4286, align 8, !tbaa !9
  %4288 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4289 = load ptr, ptr %4288, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4289, align 4, !tbaa !162
  %4290 = icmp eq i32 %13, 0
  br i1 %4290, label %4291, label %4294

4291:                                             ; preds = %4285
  %4292 = load i8, ptr %4287, align 1, !tbaa !11
  %4293 = uitofp i8 %4292 to float
  store float %4293, ptr %4289, align 4, !tbaa !162
  br label %5497

4294:                                             ; preds = %4285
  switch i32 %1, label %4891 [
    i32 1, label %4295
    i32 0, label %4599
  ]

4295:                                             ; preds = %4294
  %4296 = getelementptr inbounds i32, ptr %3, i64 %19
  %4297 = load i32, ptr %4296, align 4, !tbaa !5
  %4298 = icmp eq i32 %4297, 0
  %4299 = icmp sgt i32 %5, 0
  br i1 %4298, label %4309, label %4300

4300:                                             ; preds = %4295
  br i1 %4299, label %4301, label %5497

4301:                                             ; preds = %4300
  %4302 = icmp sgt i32 %13, 1
  %4303 = icmp sgt i32 %13, 0
  %4304 = add i32 %13, -2
  %4305 = zext i32 %4304 to i64
  %4306 = zext i32 %13 to i64
  %4307 = add nuw i32 %5, 1
  %4308 = icmp eq i32 %13, 1
  br label %4460

4309:                                             ; preds = %4295
  br i1 %4299, label %4310, label %5497

4310:                                             ; preds = %4309
  %4311 = icmp sgt i32 %13, 1
  %4312 = icmp sgt i32 %13, 0
  %4313 = add i32 %13, -2
  %4314 = zext i32 %4313 to i64
  %4315 = zext i32 %13 to i64
  %4316 = add nuw i32 %5, 1
  %4317 = icmp eq i32 %13, 1
  br label %4318

4318:                                             ; preds = %4310, %4458
  %4319 = phi float [ 0.000000e+00, %4310 ], [ %4408, %4458 ]
  %4320 = phi i32 [ 0, %4310 ], [ %4410, %4458 ]
  %4321 = phi double [ 0.000000e+00, %4310 ], [ %4409, %4458 ]
  %4322 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4311, label %4323, label %4392

4323:                                             ; preds = %4318, %4382
  %4324 = phi i32 [ %4391, %4382 ], [ 0, %4318 ]
  %4325 = phi i64 [ %4333, %4382 ], [ %4315, %4318 ]
  %4326 = phi i64 [ %4390, %4382 ], [ %4314, %4318 ]
  %4327 = phi i32 [ %4388, %4382 ], [ %4322, %4318 ]
  %4328 = sub i32 %4313, %4324
  %4329 = tail call i32 @llvm.smin.i32(i32 %4328, i32 0)
  %4330 = sub i32 %4328, %4329
  %4331 = zext i32 %4330 to i64
  %4332 = add nuw nsw i64 %4331, 1
  %4333 = add nsw i64 %4325, -1
  %4334 = icmp ult i32 %4330, 31
  br i1 %4334, label %4370, label %4335

4335:                                             ; preds = %4323
  %4336 = and i64 %4332, 8589934560
  %4337 = sub i64 %4326, %4336
  br label %4338

4338:                                             ; preds = %4338, %4335
  %4339 = phi i64 [ 0, %4335 ], [ %4362, %4338 ]
  %4340 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4358, %4338 ]
  %4341 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4359, %4338 ]
  %4342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4360, %4338 ]
  %4343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4335 ], [ %4361, %4338 ]
  %4344 = sub i64 %4326, %4339
  %4345 = getelementptr inbounds i32, ptr %9, i64 %4344
  %4346 = getelementptr inbounds i32, ptr %4345, i64 -7
  %4347 = load <8 x i32>, ptr %4346, align 4, !tbaa !5
  %4348 = shufflevector <8 x i32> %4347, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4349 = getelementptr inbounds i32, ptr %4345, i64 -15
  %4350 = load <8 x i32>, ptr %4349, align 4, !tbaa !5
  %4351 = shufflevector <8 x i32> %4350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4352 = getelementptr inbounds i32, ptr %4345, i64 -23
  %4353 = load <8 x i32>, ptr %4352, align 4, !tbaa !5
  %4354 = shufflevector <8 x i32> %4353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4355 = getelementptr inbounds i32, ptr %4345, i64 -31
  %4356 = load <8 x i32>, ptr %4355, align 4, !tbaa !5
  %4357 = shufflevector <8 x i32> %4356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4358 = mul <8 x i32> %4348, %4340
  %4359 = mul <8 x i32> %4351, %4341
  %4360 = mul <8 x i32> %4354, %4342
  %4361 = mul <8 x i32> %4357, %4343
  %4362 = add nuw i64 %4339, 32
  %4363 = icmp eq i64 %4362, %4336
  br i1 %4363, label %4364, label %4338, !llvm.loop !164

4364:                                             ; preds = %4338
  %4365 = mul <8 x i32> %4359, %4358
  %4366 = mul <8 x i32> %4360, %4365
  %4367 = mul <8 x i32> %4361, %4366
  %4368 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4367)
  %4369 = icmp eq i64 %4332, %4336
  br i1 %4369, label %4382, label %4370

4370:                                             ; preds = %4323, %4364
  %4371 = phi i64 [ %4326, %4323 ], [ %4337, %4364 ]
  %4372 = phi i32 [ 1, %4323 ], [ %4368, %4364 ]
  br label %4373

4373:                                             ; preds = %4370, %4373
  %4374 = phi i64 [ %4379, %4373 ], [ %4371, %4370 ]
  %4375 = phi i32 [ %4378, %4373 ], [ %4372, %4370 ]
  %4376 = getelementptr inbounds i32, ptr %9, i64 %4374
  %4377 = load i32, ptr %4376, align 4, !tbaa !5
  %4378 = mul nsw i32 %4377, %4375
  %4379 = add nsw i64 %4374, -1
  %4380 = trunc i64 %4374 to i32
  %4381 = icmp sgt i32 %4380, 0
  br i1 %4381, label %4373, label %4382, !llvm.loop !165

4382:                                             ; preds = %4373, %4364
  %4383 = phi i32 [ %4368, %4364 ], [ %4378, %4373 ]
  %4384 = and i64 %4333, 4294967295
  %4385 = getelementptr inbounds i32, ptr %6, i64 %4384
  %4386 = load i32, ptr %4385, align 4, !tbaa !5
  %4387 = mul nsw i32 %4386, %4383
  %4388 = add nsw i32 %4387, %4327
  %4389 = icmp sgt i64 %4325, 2
  %4390 = add nsw i64 %4326, -1
  %4391 = add i32 %4324, 1
  br i1 %4389, label %4323, label %4392, !llvm.loop !166

4392:                                             ; preds = %4382, %4318
  %4393 = phi i32 [ %4322, %4318 ], [ %4388, %4382 ]
  %4394 = sext i32 %4393 to i64
  %4395 = getelementptr inbounds double, ptr %2, i64 %4394
  %4396 = load double, ptr %4395, align 8, !tbaa !18
  %4397 = getelementptr inbounds i8, ptr %4287, i64 %4394
  %4398 = load i8, ptr %4397, align 1, !tbaa !11
  %4399 = fpext float %4319 to double
  %4400 = uitofp i8 %4398 to double
  %4401 = fmul fast double %4396, %4400
  %4402 = fcmp fast uge double %4401, 0.000000e+00
  %4403 = fneg fast double %4401
  %4404 = tail call fast double @llvm.fabs.f64(double %4401)
  %4405 = fcmp fast ole double %4404, %4399
  %4406 = select nnan ninf i1 %4402, double %4401, double %4403
  %4407 = fptrunc double %4406 to float
  %4408 = select i1 %4405, float %4319, float %4407
  store float %4408, ptr %4289, align 4, !tbaa !162
  %4409 = fadd fast double %4396, %4321
  %4410 = add nuw nsw i32 %4320, 1
  br i1 %4312, label %4411, label %4458

4411:                                             ; preds = %4392
  %4412 = load i32, ptr %4, align 4, !tbaa !5
  %4413 = load i32, ptr %12, align 4, !tbaa !5
  %4414 = add nsw i32 %4413, -1
  %4415 = icmp slt i32 %4412, %4414
  br i1 %4415, label %4435, label %4416

4416:                                             ; preds = %4411
  %4417 = icmp eq i32 %4412, %4414
  br i1 %4417, label %4418, label %4451

4418:                                             ; preds = %4416
  store i32 0, ptr %4, align 4, !tbaa !5
  %4419 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4419, ptr %6, align 4, !tbaa !5
  br i1 %4317, label %4458, label %4420

4420:                                             ; preds = %4418, %4445
  %4421 = phi i64 [ %4449, %4445 ], [ 1, %4418 ]
  %4422 = getelementptr inbounds i32, ptr %4, i64 %4421
  %4423 = load i32, ptr %4422, align 4, !tbaa !5
  %4424 = getelementptr inbounds i32, ptr %12, i64 %4421
  %4425 = load i32, ptr %4424, align 4, !tbaa !5
  %4426 = add nsw i32 %4425, -1
  %4427 = icmp slt i32 %4423, %4426
  br i1 %4427, label %4428, label %4443

4428:                                             ; preds = %4420
  br i1 %4415, label %4435, label %4429

4429:                                             ; preds = %4428
  %4430 = getelementptr inbounds i32, ptr %7, i64 %4421
  %4431 = load i32, ptr %4430, align 4, !tbaa !5
  %4432 = getelementptr inbounds i32, ptr %6, i64 %4421
  %4433 = load i32, ptr %4432, align 4, !tbaa !5
  %4434 = add nsw i32 %4433, %4431
  store i32 %4434, ptr %4432, align 4, !tbaa !5
  br label %4453

4435:                                             ; preds = %4411, %4428
  %4436 = phi i32 [ %4423, %4428 ], [ %4412, %4411 ]
  %4437 = phi ptr [ %4422, %4428 ], [ %4, %4411 ]
  %4438 = phi i64 [ %4421, %4428 ], [ 0, %4411 ]
  %4439 = add nsw i32 %4436, 1
  store i32 %4439, ptr %4437, align 4, !tbaa !5
  %4440 = getelementptr inbounds i32, ptr %7, i64 %4438
  %4441 = load i32, ptr %4440, align 4, !tbaa !5
  %4442 = getelementptr inbounds i32, ptr %6, i64 %4438
  br label %4453

4443:                                             ; preds = %4420
  %4444 = icmp eq i32 %4423, %4426
  br i1 %4444, label %4445, label %4451

4445:                                             ; preds = %4443
  store i32 0, ptr %4422, align 4, !tbaa !5
  %4446 = getelementptr inbounds i32, ptr %8, i64 %4421
  %4447 = load i32, ptr %4446, align 4, !tbaa !5
  %4448 = getelementptr inbounds i32, ptr %6, i64 %4421
  store i32 %4447, ptr %4448, align 4, !tbaa !5
  %4449 = add nuw nsw i64 %4421, 1
  %4450 = icmp eq i64 %4449, %4315
  br i1 %4450, label %4458, label %4420, !llvm.loop !167

4451:                                             ; preds = %4416, %4443
  %4452 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

4453:                                             ; preds = %4429, %4435
  %4454 = phi ptr [ %4442, %4435 ], [ %4422, %4429 ]
  %4455 = phi i32 [ %4441, %4435 ], [ 1, %4429 ]
  %4456 = load i32, ptr %4454, align 4, !tbaa !5
  %4457 = add nsw i32 %4456, %4455
  store i32 %4457, ptr %4454, align 4, !tbaa !5
  br label %4458

4458:                                             ; preds = %4445, %4453, %4418, %4392
  %4459 = icmp eq i32 %4410, %5
  br i1 %4459, label %5497, label %4318, !llvm.loop !168

4460:                                             ; preds = %4301, %4597
  %4461 = phi float [ 0.000000e+00, %4301 ], [ %4545, %4597 ]
  %4462 = phi i32 [ 0, %4301 ], [ %4546, %4597 ]
  %4463 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4302, label %4464, label %4533

4464:                                             ; preds = %4460, %4523
  %4465 = phi i32 [ %4532, %4523 ], [ 0, %4460 ]
  %4466 = phi i64 [ %4474, %4523 ], [ %4306, %4460 ]
  %4467 = phi i64 [ %4531, %4523 ], [ %4305, %4460 ]
  %4468 = phi i32 [ %4529, %4523 ], [ %4463, %4460 ]
  %4469 = sub i32 %4304, %4465
  %4470 = tail call i32 @llvm.smin.i32(i32 %4469, i32 0)
  %4471 = sub i32 %4469, %4470
  %4472 = zext i32 %4471 to i64
  %4473 = add nuw nsw i64 %4472, 1
  %4474 = add nsw i64 %4466, -1
  %4475 = icmp ult i32 %4471, 31
  br i1 %4475, label %4511, label %4476

4476:                                             ; preds = %4464
  %4477 = and i64 %4473, 8589934560
  %4478 = sub i64 %4467, %4477
  br label %4479

4479:                                             ; preds = %4479, %4476
  %4480 = phi i64 [ 0, %4476 ], [ %4503, %4479 ]
  %4481 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4476 ], [ %4499, %4479 ]
  %4482 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4476 ], [ %4500, %4479 ]
  %4483 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4476 ], [ %4501, %4479 ]
  %4484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4476 ], [ %4502, %4479 ]
  %4485 = sub i64 %4467, %4480
  %4486 = getelementptr inbounds i32, ptr %11, i64 %4485
  %4487 = getelementptr inbounds i32, ptr %4486, i64 -7
  %4488 = load <8 x i32>, ptr %4487, align 4, !tbaa !5
  %4489 = shufflevector <8 x i32> %4488, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4490 = getelementptr inbounds i32, ptr %4486, i64 -15
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !5
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4486, i64 -23
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !5
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = getelementptr inbounds i32, ptr %4486, i64 -31
  %4497 = load <8 x i32>, ptr %4496, align 4, !tbaa !5
  %4498 = shufflevector <8 x i32> %4497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4499 = mul <8 x i32> %4489, %4481
  %4500 = mul <8 x i32> %4492, %4482
  %4501 = mul <8 x i32> %4495, %4483
  %4502 = mul <8 x i32> %4498, %4484
  %4503 = add nuw i64 %4480, 32
  %4504 = icmp eq i64 %4503, %4477
  br i1 %4504, label %4505, label %4479, !llvm.loop !169

4505:                                             ; preds = %4479
  %4506 = mul <8 x i32> %4500, %4499
  %4507 = mul <8 x i32> %4501, %4506
  %4508 = mul <8 x i32> %4502, %4507
  %4509 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4508)
  %4510 = icmp eq i64 %4473, %4477
  br i1 %4510, label %4523, label %4511

4511:                                             ; preds = %4464, %4505
  %4512 = phi i64 [ %4467, %4464 ], [ %4478, %4505 ]
  %4513 = phi i32 [ 1, %4464 ], [ %4509, %4505 ]
  br label %4514

4514:                                             ; preds = %4511, %4514
  %4515 = phi i64 [ %4520, %4514 ], [ %4512, %4511 ]
  %4516 = phi i32 [ %4519, %4514 ], [ %4513, %4511 ]
  %4517 = getelementptr inbounds i32, ptr %11, i64 %4515
  %4518 = load i32, ptr %4517, align 4, !tbaa !5
  %4519 = mul nsw i32 %4518, %4516
  %4520 = add nsw i64 %4515, -1
  %4521 = trunc i64 %4515 to i32
  %4522 = icmp sgt i32 %4521, 0
  br i1 %4522, label %4514, label %4523, !llvm.loop !170

4523:                                             ; preds = %4514, %4505
  %4524 = phi i32 [ %4509, %4505 ], [ %4519, %4514 ]
  %4525 = and i64 %4474, 4294967295
  %4526 = getelementptr inbounds i32, ptr %6, i64 %4525
  %4527 = load i32, ptr %4526, align 4, !tbaa !5
  %4528 = mul nsw i32 %4527, %4524
  %4529 = add nsw i32 %4528, %4468
  %4530 = icmp sgt i64 %4466, 2
  %4531 = add nsw i64 %4467, -1
  %4532 = add i32 %4465, 1
  br i1 %4530, label %4464, label %4533, !llvm.loop !171

4533:                                             ; preds = %4523, %4460
  %4534 = phi i32 [ %4463, %4460 ], [ %4529, %4523 ]
  %4535 = icmp slt i32 %4534, %5
  br i1 %4535, label %4538, label %4536

4536:                                             ; preds = %4533
  %4537 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

4538:                                             ; preds = %4533
  %4539 = sext i32 %4534 to i64
  %4540 = getelementptr inbounds i8, ptr %4287, i64 %4539
  %4541 = load i8, ptr %4540, align 1, !tbaa !11
  %4542 = fpext float %4461 to double
  %4543 = uitofp i8 %4541 to double
  %4544 = tail call fast double @llvm.maxnum.f64(double %4542, double %4543)
  %4545 = fptrunc double %4544 to float
  store float %4545, ptr %4289, align 4, !tbaa !162
  %4546 = add nuw nsw i32 %4462, 1
  br i1 %4303, label %4547, label %4597

4547:                                             ; preds = %4538
  %4548 = load i32, ptr %4, align 4, !tbaa !5
  %4549 = load i32, ptr %12, align 4, !tbaa !5
  %4550 = add nsw i32 %4549, -1
  %4551 = icmp slt i32 %4548, %4550
  br i1 %4551, label %4574, label %4552

4552:                                             ; preds = %4547
  %4553 = icmp eq i32 %4548, %4550
  br i1 %4553, label %4554, label %4590

4554:                                             ; preds = %4552
  store i32 0, ptr %4, align 4, !tbaa !5
  %4555 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4555, ptr %6, align 4, !tbaa !5
  br i1 %4308, label %4597, label %4556

4556:                                             ; preds = %4554, %4584
  %4557 = phi i64 [ %4588, %4584 ], [ 1, %4554 ]
  %4558 = getelementptr inbounds i32, ptr %4, i64 %4557
  %4559 = load i32, ptr %4558, align 4, !tbaa !5
  %4560 = getelementptr inbounds i32, ptr %12, i64 %4557
  %4561 = load i32, ptr %4560, align 4, !tbaa !5
  %4562 = add nsw i32 %4561, -1
  %4563 = icmp slt i32 %4559, %4562
  br i1 %4563, label %4564, label %4582

4564:                                             ; preds = %4556
  br i1 %4551, label %4574, label %4565

4565:                                             ; preds = %4564
  %4566 = shl i64 %4557, 32
  %4567 = add i64 %4566, -4294967296
  %4568 = ashr exact i64 %4567, 32
  %4569 = getelementptr inbounds i32, ptr %7, i64 %4568
  %4570 = load i32, ptr %4569, align 4, !tbaa !5
  %4571 = getelementptr inbounds i32, ptr %6, i64 %4557
  %4572 = load i32, ptr %4571, align 4, !tbaa !5
  %4573 = add nsw i32 %4572, %4570
  store i32 %4573, ptr %4571, align 4, !tbaa !5
  br label %4592

4574:                                             ; preds = %4547, %4564
  %4575 = phi i32 [ %4559, %4564 ], [ %4548, %4547 ]
  %4576 = phi ptr [ %4558, %4564 ], [ %4, %4547 ]
  %4577 = phi i64 [ %4557, %4564 ], [ 0, %4547 ]
  %4578 = add nsw i32 %4575, 1
  store i32 %4578, ptr %4576, align 4, !tbaa !5
  %4579 = getelementptr inbounds i32, ptr %7, i64 %4577
  %4580 = load i32, ptr %4579, align 4, !tbaa !5
  %4581 = getelementptr inbounds i32, ptr %6, i64 %4577
  br label %4592

4582:                                             ; preds = %4556
  %4583 = icmp eq i32 %4559, %4562
  br i1 %4583, label %4584, label %4590

4584:                                             ; preds = %4582
  store i32 0, ptr %4558, align 4, !tbaa !5
  %4585 = getelementptr inbounds i32, ptr %8, i64 %4557
  %4586 = load i32, ptr %4585, align 4, !tbaa !5
  %4587 = getelementptr inbounds i32, ptr %6, i64 %4557
  store i32 %4586, ptr %4587, align 4, !tbaa !5
  %4588 = add nuw nsw i64 %4557, 1
  %4589 = icmp eq i64 %4588, %4306
  br i1 %4589, label %4597, label %4556, !llvm.loop !172

4590:                                             ; preds = %4552, %4582
  %4591 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

4592:                                             ; preds = %4565, %4574
  %4593 = phi ptr [ %4581, %4574 ], [ %4558, %4565 ]
  %4594 = phi i32 [ %4580, %4574 ], [ 1, %4565 ]
  %4595 = load i32, ptr %4593, align 4, !tbaa !5
  %4596 = add nsw i32 %4595, %4594
  store i32 %4596, ptr %4593, align 4, !tbaa !5
  br label %4597

4597:                                             ; preds = %4584, %4592, %4554, %4538
  %4598 = icmp eq i32 %4546, %5
  br i1 %4598, label %5497, label %4460, !llvm.loop !173

4599:                                             ; preds = %4294
  %4600 = getelementptr inbounds i32, ptr %3, i64 %19
  %4601 = load i32, ptr %4600, align 4, !tbaa !5
  %4602 = icmp eq i32 %4601, 0
  %4603 = icmp sgt i32 %5, 0
  br i1 %4602, label %4613, label %4604

4604:                                             ; preds = %4599
  br i1 %4603, label %4605, label %5497

4605:                                             ; preds = %4604
  %4606 = icmp sgt i32 %13, 1
  %4607 = icmp sgt i32 %13, 0
  %4608 = add i32 %13, -2
  %4609 = zext i32 %4608 to i64
  %4610 = zext i32 %13 to i64
  %4611 = add nuw i32 %5, 1
  %4612 = icmp eq i32 %13, 1
  br label %4754

4613:                                             ; preds = %4599
  br i1 %4603, label %4614, label %5497

4614:                                             ; preds = %4613
  %4615 = icmp sgt i32 %13, 1
  %4616 = icmp sgt i32 %13, 0
  %4617 = add i32 %13, -2
  %4618 = zext i32 %4617 to i64
  %4619 = zext i32 %13 to i64
  %4620 = add nuw i32 %5, 1
  %4621 = icmp eq i32 %13, 1
  br label %4622

4622:                                             ; preds = %4614, %4752
  %4623 = phi float [ 0.000000e+00, %4614 ], [ %4702, %4752 ]
  %4624 = phi i32 [ 0, %4614 ], [ %4704, %4752 ]
  %4625 = phi double [ 0.000000e+00, %4614 ], [ %4703, %4752 ]
  %4626 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4615, label %4627, label %4696

4627:                                             ; preds = %4622, %4686
  %4628 = phi i32 [ %4695, %4686 ], [ 0, %4622 ]
  %4629 = phi i64 [ %4637, %4686 ], [ %4619, %4622 ]
  %4630 = phi i64 [ %4694, %4686 ], [ %4618, %4622 ]
  %4631 = phi i32 [ %4692, %4686 ], [ %4626, %4622 ]
  %4632 = sub i32 %4617, %4628
  %4633 = tail call i32 @llvm.smin.i32(i32 %4632, i32 0)
  %4634 = sub i32 %4632, %4633
  %4635 = zext i32 %4634 to i64
  %4636 = add nuw nsw i64 %4635, 1
  %4637 = add nsw i64 %4629, -1
  %4638 = icmp ult i32 %4634, 31
  br i1 %4638, label %4674, label %4639

4639:                                             ; preds = %4627
  %4640 = and i64 %4636, 8589934560
  %4641 = sub i64 %4630, %4640
  br label %4642

4642:                                             ; preds = %4642, %4639
  %4643 = phi i64 [ 0, %4639 ], [ %4666, %4642 ]
  %4644 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4639 ], [ %4662, %4642 ]
  %4645 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4639 ], [ %4663, %4642 ]
  %4646 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4639 ], [ %4664, %4642 ]
  %4647 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4639 ], [ %4665, %4642 ]
  %4648 = sub i64 %4630, %4643
  %4649 = getelementptr inbounds i32, ptr %9, i64 %4648
  %4650 = getelementptr inbounds i32, ptr %4649, i64 -7
  %4651 = load <8 x i32>, ptr %4650, align 4, !tbaa !5
  %4652 = shufflevector <8 x i32> %4651, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4653 = getelementptr inbounds i32, ptr %4649, i64 -15
  %4654 = load <8 x i32>, ptr %4653, align 4, !tbaa !5
  %4655 = shufflevector <8 x i32> %4654, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4656 = getelementptr inbounds i32, ptr %4649, i64 -23
  %4657 = load <8 x i32>, ptr %4656, align 4, !tbaa !5
  %4658 = shufflevector <8 x i32> %4657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4659 = getelementptr inbounds i32, ptr %4649, i64 -31
  %4660 = load <8 x i32>, ptr %4659, align 4, !tbaa !5
  %4661 = shufflevector <8 x i32> %4660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4662 = mul <8 x i32> %4652, %4644
  %4663 = mul <8 x i32> %4655, %4645
  %4664 = mul <8 x i32> %4658, %4646
  %4665 = mul <8 x i32> %4661, %4647
  %4666 = add nuw i64 %4643, 32
  %4667 = icmp eq i64 %4666, %4640
  br i1 %4667, label %4668, label %4642, !llvm.loop !174

4668:                                             ; preds = %4642
  %4669 = mul <8 x i32> %4663, %4662
  %4670 = mul <8 x i32> %4664, %4669
  %4671 = mul <8 x i32> %4665, %4670
  %4672 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4671)
  %4673 = icmp eq i64 %4636, %4640
  br i1 %4673, label %4686, label %4674

4674:                                             ; preds = %4627, %4668
  %4675 = phi i64 [ %4630, %4627 ], [ %4641, %4668 ]
  %4676 = phi i32 [ 1, %4627 ], [ %4672, %4668 ]
  br label %4677

4677:                                             ; preds = %4674, %4677
  %4678 = phi i64 [ %4683, %4677 ], [ %4675, %4674 ]
  %4679 = phi i32 [ %4682, %4677 ], [ %4676, %4674 ]
  %4680 = getelementptr inbounds i32, ptr %9, i64 %4678
  %4681 = load i32, ptr %4680, align 4, !tbaa !5
  %4682 = mul nsw i32 %4681, %4679
  %4683 = add nsw i64 %4678, -1
  %4684 = trunc i64 %4678 to i32
  %4685 = icmp sgt i32 %4684, 0
  br i1 %4685, label %4677, label %4686, !llvm.loop !175

4686:                                             ; preds = %4677, %4668
  %4687 = phi i32 [ %4672, %4668 ], [ %4682, %4677 ]
  %4688 = and i64 %4637, 4294967295
  %4689 = getelementptr inbounds i32, ptr %6, i64 %4688
  %4690 = load i32, ptr %4689, align 4, !tbaa !5
  %4691 = mul nsw i32 %4690, %4687
  %4692 = add nsw i32 %4691, %4631
  %4693 = icmp sgt i64 %4629, 2
  %4694 = add nsw i64 %4630, -1
  %4695 = add i32 %4628, 1
  br i1 %4693, label %4627, label %4696, !llvm.loop !176

4696:                                             ; preds = %4686, %4622
  %4697 = phi i32 [ %4626, %4622 ], [ %4692, %4686 ]
  %4698 = sext i32 %4697 to i64
  %4699 = getelementptr inbounds i8, ptr %4287, i64 %4698
  %4700 = load i8, ptr %4699, align 1, !tbaa !11
  %4701 = uitofp i8 %4700 to float
  %4702 = tail call fast float @llvm.maxnum.f32(float %4623, float %4701)
  store float %4702, ptr %4289, align 4, !tbaa !162
  %4703 = fadd fast double %4625, 1.000000e+00
  %4704 = add nuw nsw i32 %4624, 1
  br i1 %4616, label %4705, label %4752

4705:                                             ; preds = %4696
  %4706 = load i32, ptr %4, align 4, !tbaa !5
  %4707 = load i32, ptr %12, align 4, !tbaa !5
  %4708 = add nsw i32 %4707, -1
  %4709 = icmp slt i32 %4706, %4708
  br i1 %4709, label %4729, label %4710

4710:                                             ; preds = %4705
  %4711 = icmp eq i32 %4706, %4708
  br i1 %4711, label %4712, label %4745

4712:                                             ; preds = %4710
  store i32 0, ptr %4, align 4, !tbaa !5
  %4713 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4713, ptr %6, align 4, !tbaa !5
  br i1 %4621, label %4752, label %4714

4714:                                             ; preds = %4712, %4739
  %4715 = phi i64 [ %4743, %4739 ], [ 1, %4712 ]
  %4716 = getelementptr inbounds i32, ptr %4, i64 %4715
  %4717 = load i32, ptr %4716, align 4, !tbaa !5
  %4718 = getelementptr inbounds i32, ptr %12, i64 %4715
  %4719 = load i32, ptr %4718, align 4, !tbaa !5
  %4720 = add nsw i32 %4719, -1
  %4721 = icmp slt i32 %4717, %4720
  br i1 %4721, label %4722, label %4737

4722:                                             ; preds = %4714
  br i1 %4709, label %4729, label %4723

4723:                                             ; preds = %4722
  %4724 = getelementptr inbounds i32, ptr %7, i64 %4715
  %4725 = load i32, ptr %4724, align 4, !tbaa !5
  %4726 = getelementptr inbounds i32, ptr %6, i64 %4715
  %4727 = load i32, ptr %4726, align 4, !tbaa !5
  %4728 = add nsw i32 %4727, %4725
  store i32 %4728, ptr %4726, align 4, !tbaa !5
  br label %4747

4729:                                             ; preds = %4705, %4722
  %4730 = phi i32 [ %4717, %4722 ], [ %4706, %4705 ]
  %4731 = phi ptr [ %4716, %4722 ], [ %4, %4705 ]
  %4732 = phi i64 [ %4715, %4722 ], [ 0, %4705 ]
  %4733 = add nsw i32 %4730, 1
  store i32 %4733, ptr %4731, align 4, !tbaa !5
  %4734 = getelementptr inbounds i32, ptr %7, i64 %4732
  %4735 = load i32, ptr %4734, align 4, !tbaa !5
  %4736 = getelementptr inbounds i32, ptr %6, i64 %4732
  br label %4747

4737:                                             ; preds = %4714
  %4738 = icmp eq i32 %4717, %4720
  br i1 %4738, label %4739, label %4745

4739:                                             ; preds = %4737
  store i32 0, ptr %4716, align 4, !tbaa !5
  %4740 = getelementptr inbounds i32, ptr %8, i64 %4715
  %4741 = load i32, ptr %4740, align 4, !tbaa !5
  %4742 = getelementptr inbounds i32, ptr %6, i64 %4715
  store i32 %4741, ptr %4742, align 4, !tbaa !5
  %4743 = add nuw nsw i64 %4715, 1
  %4744 = icmp eq i64 %4743, %4619
  br i1 %4744, label %4752, label %4714, !llvm.loop !177

4745:                                             ; preds = %4710, %4737
  %4746 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

4747:                                             ; preds = %4723, %4729
  %4748 = phi ptr [ %4736, %4729 ], [ %4716, %4723 ]
  %4749 = phi i32 [ %4735, %4729 ], [ 1, %4723 ]
  %4750 = load i32, ptr %4748, align 4, !tbaa !5
  %4751 = add nsw i32 %4750, %4749
  store i32 %4751, ptr %4748, align 4, !tbaa !5
  br label %4752

4752:                                             ; preds = %4739, %4747, %4712, %4696
  %4753 = icmp eq i32 %4704, %5
  br i1 %4753, label %5497, label %4622, !llvm.loop !178

4754:                                             ; preds = %4605, %4889
  %4755 = phi float [ 0.000000e+00, %4605 ], [ %4837, %4889 ]
  %4756 = phi i32 [ 0, %4605 ], [ %4838, %4889 ]
  %4757 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4606, label %4758, label %4827

4758:                                             ; preds = %4754, %4817
  %4759 = phi i32 [ %4826, %4817 ], [ 0, %4754 ]
  %4760 = phi i64 [ %4768, %4817 ], [ %4610, %4754 ]
  %4761 = phi i64 [ %4825, %4817 ], [ %4609, %4754 ]
  %4762 = phi i32 [ %4823, %4817 ], [ %4757, %4754 ]
  %4763 = sub i32 %4608, %4759
  %4764 = tail call i32 @llvm.smin.i32(i32 %4763, i32 0)
  %4765 = sub i32 %4763, %4764
  %4766 = zext i32 %4765 to i64
  %4767 = add nuw nsw i64 %4766, 1
  %4768 = add nsw i64 %4760, -1
  %4769 = icmp ult i32 %4765, 31
  br i1 %4769, label %4805, label %4770

4770:                                             ; preds = %4758
  %4771 = and i64 %4767, 8589934560
  %4772 = sub i64 %4761, %4771
  br label %4773

4773:                                             ; preds = %4773, %4770
  %4774 = phi i64 [ 0, %4770 ], [ %4797, %4773 ]
  %4775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4770 ], [ %4793, %4773 ]
  %4776 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4770 ], [ %4794, %4773 ]
  %4777 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4770 ], [ %4795, %4773 ]
  %4778 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4770 ], [ %4796, %4773 ]
  %4779 = sub i64 %4761, %4774
  %4780 = getelementptr inbounds i32, ptr %11, i64 %4779
  %4781 = getelementptr inbounds i32, ptr %4780, i64 -7
  %4782 = load <8 x i32>, ptr %4781, align 4, !tbaa !5
  %4783 = shufflevector <8 x i32> %4782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4784 = getelementptr inbounds i32, ptr %4780, i64 -15
  %4785 = load <8 x i32>, ptr %4784, align 4, !tbaa !5
  %4786 = shufflevector <8 x i32> %4785, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4787 = getelementptr inbounds i32, ptr %4780, i64 -23
  %4788 = load <8 x i32>, ptr %4787, align 4, !tbaa !5
  %4789 = shufflevector <8 x i32> %4788, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4790 = getelementptr inbounds i32, ptr %4780, i64 -31
  %4791 = load <8 x i32>, ptr %4790, align 4, !tbaa !5
  %4792 = shufflevector <8 x i32> %4791, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4793 = mul <8 x i32> %4783, %4775
  %4794 = mul <8 x i32> %4786, %4776
  %4795 = mul <8 x i32> %4789, %4777
  %4796 = mul <8 x i32> %4792, %4778
  %4797 = add nuw i64 %4774, 32
  %4798 = icmp eq i64 %4797, %4771
  br i1 %4798, label %4799, label %4773, !llvm.loop !179

4799:                                             ; preds = %4773
  %4800 = mul <8 x i32> %4794, %4793
  %4801 = mul <8 x i32> %4795, %4800
  %4802 = mul <8 x i32> %4796, %4801
  %4803 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4802)
  %4804 = icmp eq i64 %4767, %4771
  br i1 %4804, label %4817, label %4805

4805:                                             ; preds = %4758, %4799
  %4806 = phi i64 [ %4761, %4758 ], [ %4772, %4799 ]
  %4807 = phi i32 [ 1, %4758 ], [ %4803, %4799 ]
  br label %4808

4808:                                             ; preds = %4805, %4808
  %4809 = phi i64 [ %4814, %4808 ], [ %4806, %4805 ]
  %4810 = phi i32 [ %4813, %4808 ], [ %4807, %4805 ]
  %4811 = getelementptr inbounds i32, ptr %11, i64 %4809
  %4812 = load i32, ptr %4811, align 4, !tbaa !5
  %4813 = mul nsw i32 %4812, %4810
  %4814 = add nsw i64 %4809, -1
  %4815 = trunc i64 %4809 to i32
  %4816 = icmp sgt i32 %4815, 0
  br i1 %4816, label %4808, label %4817, !llvm.loop !180

4817:                                             ; preds = %4808, %4799
  %4818 = phi i32 [ %4803, %4799 ], [ %4813, %4808 ]
  %4819 = and i64 %4768, 4294967295
  %4820 = getelementptr inbounds i32, ptr %6, i64 %4819
  %4821 = load i32, ptr %4820, align 4, !tbaa !5
  %4822 = mul nsw i32 %4821, %4818
  %4823 = add nsw i32 %4822, %4762
  %4824 = icmp sgt i64 %4760, 2
  %4825 = add nsw i64 %4761, -1
  %4826 = add i32 %4759, 1
  br i1 %4824, label %4758, label %4827, !llvm.loop !181

4827:                                             ; preds = %4817, %4754
  %4828 = phi i32 [ %4757, %4754 ], [ %4823, %4817 ]
  %4829 = icmp slt i32 %4828, %5
  br i1 %4829, label %4832, label %4830

4830:                                             ; preds = %4827
  %4831 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

4832:                                             ; preds = %4827
  %4833 = sext i32 %4828 to i64
  %4834 = getelementptr inbounds i8, ptr %4287, i64 %4833
  %4835 = load i8, ptr %4834, align 1, !tbaa !11
  %4836 = uitofp i8 %4835 to float
  %4837 = tail call fast float @llvm.maxnum.f32(float %4755, float %4836)
  store float %4837, ptr %4289, align 4, !tbaa !162
  %4838 = add nuw nsw i32 %4756, 1
  br i1 %4607, label %4839, label %4889

4839:                                             ; preds = %4832
  %4840 = load i32, ptr %4, align 4, !tbaa !5
  %4841 = load i32, ptr %12, align 4, !tbaa !5
  %4842 = add nsw i32 %4841, -1
  %4843 = icmp slt i32 %4840, %4842
  br i1 %4843, label %4866, label %4844

4844:                                             ; preds = %4839
  %4845 = icmp eq i32 %4840, %4842
  br i1 %4845, label %4846, label %4882

4846:                                             ; preds = %4844
  store i32 0, ptr %4, align 4, !tbaa !5
  %4847 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4847, ptr %6, align 4, !tbaa !5
  br i1 %4612, label %4889, label %4848

4848:                                             ; preds = %4846, %4876
  %4849 = phi i64 [ %4880, %4876 ], [ 1, %4846 ]
  %4850 = getelementptr inbounds i32, ptr %4, i64 %4849
  %4851 = load i32, ptr %4850, align 4, !tbaa !5
  %4852 = getelementptr inbounds i32, ptr %12, i64 %4849
  %4853 = load i32, ptr %4852, align 4, !tbaa !5
  %4854 = add nsw i32 %4853, -1
  %4855 = icmp slt i32 %4851, %4854
  br i1 %4855, label %4856, label %4874

4856:                                             ; preds = %4848
  br i1 %4843, label %4866, label %4857

4857:                                             ; preds = %4856
  %4858 = shl i64 %4849, 32
  %4859 = add i64 %4858, -4294967296
  %4860 = ashr exact i64 %4859, 32
  %4861 = getelementptr inbounds i32, ptr %7, i64 %4860
  %4862 = load i32, ptr %4861, align 4, !tbaa !5
  %4863 = getelementptr inbounds i32, ptr %6, i64 %4849
  %4864 = load i32, ptr %4863, align 4, !tbaa !5
  %4865 = add nsw i32 %4864, %4862
  store i32 %4865, ptr %4863, align 4, !tbaa !5
  br label %4884

4866:                                             ; preds = %4839, %4856
  %4867 = phi i32 [ %4851, %4856 ], [ %4840, %4839 ]
  %4868 = phi ptr [ %4850, %4856 ], [ %4, %4839 ]
  %4869 = phi i64 [ %4849, %4856 ], [ 0, %4839 ]
  %4870 = add nsw i32 %4867, 1
  store i32 %4870, ptr %4868, align 4, !tbaa !5
  %4871 = getelementptr inbounds i32, ptr %7, i64 %4869
  %4872 = load i32, ptr %4871, align 4, !tbaa !5
  %4873 = getelementptr inbounds i32, ptr %6, i64 %4869
  br label %4884

4874:                                             ; preds = %4848
  %4875 = icmp eq i32 %4851, %4854
  br i1 %4875, label %4876, label %4882

4876:                                             ; preds = %4874
  store i32 0, ptr %4850, align 4, !tbaa !5
  %4877 = getelementptr inbounds i32, ptr %8, i64 %4849
  %4878 = load i32, ptr %4877, align 4, !tbaa !5
  %4879 = getelementptr inbounds i32, ptr %6, i64 %4849
  store i32 %4878, ptr %4879, align 4, !tbaa !5
  %4880 = add nuw nsw i64 %4849, 1
  %4881 = icmp eq i64 %4880, %4610
  br i1 %4881, label %4889, label %4848, !llvm.loop !182

4882:                                             ; preds = %4844, %4874
  %4883 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

4884:                                             ; preds = %4857, %4866
  %4885 = phi ptr [ %4873, %4866 ], [ %4850, %4857 ]
  %4886 = phi i32 [ %4872, %4866 ], [ 1, %4857 ]
  %4887 = load i32, ptr %4885, align 4, !tbaa !5
  %4888 = add nsw i32 %4887, %4886
  store i32 %4888, ptr %4885, align 4, !tbaa !5
  br label %4889

4889:                                             ; preds = %4876, %4884, %4846, %4832
  %4890 = icmp eq i32 %4838, %5
  br i1 %4890, label %5497, label %4754, !llvm.loop !183

4891:                                             ; preds = %4294
  %4892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 91, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

4893:                                             ; preds = %18
  %4894 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4895 = load ptr, ptr %4894, align 8, !tbaa !9
  %4896 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4897 = load ptr, ptr %4896, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4897, align 8, !tbaa !18
  %4898 = icmp eq i32 %13, 0
  br i1 %4898, label %4899, label %4902

4899:                                             ; preds = %4893
  %4900 = load i8, ptr %4895, align 1, !tbaa !11
  %4901 = uitofp i8 %4900 to double
  store double %4901, ptr %4897, align 8, !tbaa !18
  br label %5497

4902:                                             ; preds = %4893
  switch i32 %1, label %5495 [
    i32 1, label %4903
    i32 0, label %5203
  ]

4903:                                             ; preds = %4902
  %4904 = getelementptr inbounds i32, ptr %3, i64 %19
  %4905 = load i32, ptr %4904, align 4, !tbaa !5
  %4906 = icmp eq i32 %4905, 0
  %4907 = icmp sgt i32 %5, 0
  br i1 %4906, label %4917, label %4908

4908:                                             ; preds = %4903
  br i1 %4907, label %4909, label %5497

4909:                                             ; preds = %4908
  %4910 = icmp sgt i32 %13, 1
  %4911 = icmp sgt i32 %13, 0
  %4912 = add i32 %13, -2
  %4913 = zext i32 %4912 to i64
  %4914 = zext i32 %13 to i64
  %4915 = add nuw i32 %5, 1
  %4916 = icmp eq i32 %13, 1
  br label %5066

4917:                                             ; preds = %4903
  br i1 %4907, label %4918, label %5497

4918:                                             ; preds = %4917
  %4919 = icmp sgt i32 %13, 1
  %4920 = icmp sgt i32 %13, 0
  %4921 = add i32 %13, -2
  %4922 = zext i32 %4921 to i64
  %4923 = zext i32 %13 to i64
  %4924 = add nuw i32 %5, 1
  %4925 = icmp eq i32 %13, 1
  br label %4926

4926:                                             ; preds = %4918, %5064
  %4927 = phi double [ 0.000000e+00, %4918 ], [ %5014, %5064 ]
  %4928 = phi i32 [ 0, %4918 ], [ %5016, %5064 ]
  %4929 = phi double [ 0.000000e+00, %4918 ], [ %5015, %5064 ]
  %4930 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4919, label %4931, label %5000

4931:                                             ; preds = %4926, %4990
  %4932 = phi i32 [ %4999, %4990 ], [ 0, %4926 ]
  %4933 = phi i64 [ %4941, %4990 ], [ %4923, %4926 ]
  %4934 = phi i64 [ %4998, %4990 ], [ %4922, %4926 ]
  %4935 = phi i32 [ %4996, %4990 ], [ %4930, %4926 ]
  %4936 = sub i32 %4921, %4932
  %4937 = tail call i32 @llvm.smin.i32(i32 %4936, i32 0)
  %4938 = sub i32 %4936, %4937
  %4939 = zext i32 %4938 to i64
  %4940 = add nuw nsw i64 %4939, 1
  %4941 = add nsw i64 %4933, -1
  %4942 = icmp ult i32 %4938, 31
  br i1 %4942, label %4978, label %4943

4943:                                             ; preds = %4931
  %4944 = and i64 %4940, 8589934560
  %4945 = sub i64 %4934, %4944
  br label %4946

4946:                                             ; preds = %4946, %4943
  %4947 = phi i64 [ 0, %4943 ], [ %4970, %4946 ]
  %4948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4943 ], [ %4966, %4946 ]
  %4949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4943 ], [ %4967, %4946 ]
  %4950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4943 ], [ %4968, %4946 ]
  %4951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4943 ], [ %4969, %4946 ]
  %4952 = sub i64 %4934, %4947
  %4953 = getelementptr inbounds i32, ptr %9, i64 %4952
  %4954 = getelementptr inbounds i32, ptr %4953, i64 -7
  %4955 = load <8 x i32>, ptr %4954, align 4, !tbaa !5
  %4956 = shufflevector <8 x i32> %4955, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4957 = getelementptr inbounds i32, ptr %4953, i64 -15
  %4958 = load <8 x i32>, ptr %4957, align 4, !tbaa !5
  %4959 = shufflevector <8 x i32> %4958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4960 = getelementptr inbounds i32, ptr %4953, i64 -23
  %4961 = load <8 x i32>, ptr %4960, align 4, !tbaa !5
  %4962 = shufflevector <8 x i32> %4961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4963 = getelementptr inbounds i32, ptr %4953, i64 -31
  %4964 = load <8 x i32>, ptr %4963, align 4, !tbaa !5
  %4965 = shufflevector <8 x i32> %4964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4966 = mul <8 x i32> %4956, %4948
  %4967 = mul <8 x i32> %4959, %4949
  %4968 = mul <8 x i32> %4962, %4950
  %4969 = mul <8 x i32> %4965, %4951
  %4970 = add nuw i64 %4947, 32
  %4971 = icmp eq i64 %4970, %4944
  br i1 %4971, label %4972, label %4946, !llvm.loop !184

4972:                                             ; preds = %4946
  %4973 = mul <8 x i32> %4967, %4966
  %4974 = mul <8 x i32> %4968, %4973
  %4975 = mul <8 x i32> %4969, %4974
  %4976 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4975)
  %4977 = icmp eq i64 %4940, %4944
  br i1 %4977, label %4990, label %4978

4978:                                             ; preds = %4931, %4972
  %4979 = phi i64 [ %4934, %4931 ], [ %4945, %4972 ]
  %4980 = phi i32 [ 1, %4931 ], [ %4976, %4972 ]
  br label %4981

4981:                                             ; preds = %4978, %4981
  %4982 = phi i64 [ %4987, %4981 ], [ %4979, %4978 ]
  %4983 = phi i32 [ %4986, %4981 ], [ %4980, %4978 ]
  %4984 = getelementptr inbounds i32, ptr %9, i64 %4982
  %4985 = load i32, ptr %4984, align 4, !tbaa !5
  %4986 = mul nsw i32 %4985, %4983
  %4987 = add nsw i64 %4982, -1
  %4988 = trunc i64 %4982 to i32
  %4989 = icmp sgt i32 %4988, 0
  br i1 %4989, label %4981, label %4990, !llvm.loop !185

4990:                                             ; preds = %4981, %4972
  %4991 = phi i32 [ %4976, %4972 ], [ %4986, %4981 ]
  %4992 = and i64 %4941, 4294967295
  %4993 = getelementptr inbounds i32, ptr %6, i64 %4992
  %4994 = load i32, ptr %4993, align 4, !tbaa !5
  %4995 = mul nsw i32 %4994, %4991
  %4996 = add nsw i32 %4995, %4935
  %4997 = icmp sgt i64 %4933, 2
  %4998 = add nsw i64 %4934, -1
  %4999 = add i32 %4932, 1
  br i1 %4997, label %4931, label %5000, !llvm.loop !186

5000:                                             ; preds = %4990, %4926
  %5001 = phi i32 [ %4930, %4926 ], [ %4996, %4990 ]
  %5002 = sext i32 %5001 to i64
  %5003 = getelementptr inbounds double, ptr %2, i64 %5002
  %5004 = load double, ptr %5003, align 8, !tbaa !18
  %5005 = getelementptr inbounds i8, ptr %4895, i64 %5002
  %5006 = load i8, ptr %5005, align 1, !tbaa !11
  %5007 = uitofp i8 %5006 to double
  %5008 = fmul fast double %5004, %5007
  %5009 = fcmp fast uge double %5008, 0.000000e+00
  %5010 = fneg fast double %5008
  %5011 = tail call fast double @llvm.fabs.f64(double %5008)
  %5012 = fcmp fast oge double %4927, %5011
  %5013 = select nnan ninf i1 %5009, double %5008, double %5010
  %5014 = select i1 %5012, double %4927, double %5013
  store double %5014, ptr %4897, align 8, !tbaa !18
  %5015 = fadd fast double %5004, %4929
  %5016 = add nuw nsw i32 %4928, 1
  br i1 %4920, label %5017, label %5064

5017:                                             ; preds = %5000
  %5018 = load i32, ptr %4, align 4, !tbaa !5
  %5019 = load i32, ptr %12, align 4, !tbaa !5
  %5020 = add nsw i32 %5019, -1
  %5021 = icmp slt i32 %5018, %5020
  br i1 %5021, label %5041, label %5022

5022:                                             ; preds = %5017
  %5023 = icmp eq i32 %5018, %5020
  br i1 %5023, label %5024, label %5057

5024:                                             ; preds = %5022
  store i32 0, ptr %4, align 4, !tbaa !5
  %5025 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5025, ptr %6, align 4, !tbaa !5
  br i1 %4925, label %5064, label %5026

5026:                                             ; preds = %5024, %5051
  %5027 = phi i64 [ %5055, %5051 ], [ 1, %5024 ]
  %5028 = getelementptr inbounds i32, ptr %4, i64 %5027
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = getelementptr inbounds i32, ptr %12, i64 %5027
  %5031 = load i32, ptr %5030, align 4, !tbaa !5
  %5032 = add nsw i32 %5031, -1
  %5033 = icmp slt i32 %5029, %5032
  br i1 %5033, label %5034, label %5049

5034:                                             ; preds = %5026
  br i1 %5021, label %5041, label %5035

5035:                                             ; preds = %5034
  %5036 = getelementptr inbounds i32, ptr %7, i64 %5027
  %5037 = load i32, ptr %5036, align 4, !tbaa !5
  %5038 = getelementptr inbounds i32, ptr %6, i64 %5027
  %5039 = load i32, ptr %5038, align 4, !tbaa !5
  %5040 = add nsw i32 %5039, %5037
  store i32 %5040, ptr %5038, align 4, !tbaa !5
  br label %5059

5041:                                             ; preds = %5017, %5034
  %5042 = phi i32 [ %5029, %5034 ], [ %5018, %5017 ]
  %5043 = phi ptr [ %5028, %5034 ], [ %4, %5017 ]
  %5044 = phi i64 [ %5027, %5034 ], [ 0, %5017 ]
  %5045 = add nsw i32 %5042, 1
  store i32 %5045, ptr %5043, align 4, !tbaa !5
  %5046 = getelementptr inbounds i32, ptr %7, i64 %5044
  %5047 = load i32, ptr %5046, align 4, !tbaa !5
  %5048 = getelementptr inbounds i32, ptr %6, i64 %5044
  br label %5059

5049:                                             ; preds = %5026
  %5050 = icmp eq i32 %5029, %5032
  br i1 %5050, label %5051, label %5057

5051:                                             ; preds = %5049
  store i32 0, ptr %5028, align 4, !tbaa !5
  %5052 = getelementptr inbounds i32, ptr %8, i64 %5027
  %5053 = load i32, ptr %5052, align 4, !tbaa !5
  %5054 = getelementptr inbounds i32, ptr %6, i64 %5027
  store i32 %5053, ptr %5054, align 4, !tbaa !5
  %5055 = add nuw nsw i64 %5027, 1
  %5056 = icmp eq i64 %5055, %4923
  br i1 %5056, label %5064, label %5026, !llvm.loop !187

5057:                                             ; preds = %5022, %5049
  %5058 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

5059:                                             ; preds = %5035, %5041
  %5060 = phi ptr [ %5048, %5041 ], [ %5028, %5035 ]
  %5061 = phi i32 [ %5047, %5041 ], [ 1, %5035 ]
  %5062 = load i32, ptr %5060, align 4, !tbaa !5
  %5063 = add nsw i32 %5062, %5061
  store i32 %5063, ptr %5060, align 4, !tbaa !5
  br label %5064

5064:                                             ; preds = %5051, %5059, %5024, %5000
  %5065 = icmp eq i32 %5016, %5
  br i1 %5065, label %5497, label %4926, !llvm.loop !188

5066:                                             ; preds = %4909, %5201
  %5067 = phi double [ 0.000000e+00, %4909 ], [ %5149, %5201 ]
  %5068 = phi i32 [ 0, %4909 ], [ %5150, %5201 ]
  %5069 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4910, label %5070, label %5139

5070:                                             ; preds = %5066, %5129
  %5071 = phi i32 [ %5138, %5129 ], [ 0, %5066 ]
  %5072 = phi i64 [ %5080, %5129 ], [ %4914, %5066 ]
  %5073 = phi i64 [ %5137, %5129 ], [ %4913, %5066 ]
  %5074 = phi i32 [ %5135, %5129 ], [ %5069, %5066 ]
  %5075 = sub i32 %4912, %5071
  %5076 = tail call i32 @llvm.smin.i32(i32 %5075, i32 0)
  %5077 = sub i32 %5075, %5076
  %5078 = zext i32 %5077 to i64
  %5079 = add nuw nsw i64 %5078, 1
  %5080 = add nsw i64 %5072, -1
  %5081 = icmp ult i32 %5077, 31
  br i1 %5081, label %5117, label %5082

5082:                                             ; preds = %5070
  %5083 = and i64 %5079, 8589934560
  %5084 = sub i64 %5073, %5083
  br label %5085

5085:                                             ; preds = %5085, %5082
  %5086 = phi i64 [ 0, %5082 ], [ %5109, %5085 ]
  %5087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5082 ], [ %5105, %5085 ]
  %5088 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5082 ], [ %5106, %5085 ]
  %5089 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5082 ], [ %5107, %5085 ]
  %5090 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5082 ], [ %5108, %5085 ]
  %5091 = sub i64 %5073, %5086
  %5092 = getelementptr inbounds i32, ptr %11, i64 %5091
  %5093 = getelementptr inbounds i32, ptr %5092, i64 -7
  %5094 = load <8 x i32>, ptr %5093, align 4, !tbaa !5
  %5095 = shufflevector <8 x i32> %5094, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5096 = getelementptr inbounds i32, ptr %5092, i64 -15
  %5097 = load <8 x i32>, ptr %5096, align 4, !tbaa !5
  %5098 = shufflevector <8 x i32> %5097, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5099 = getelementptr inbounds i32, ptr %5092, i64 -23
  %5100 = load <8 x i32>, ptr %5099, align 4, !tbaa !5
  %5101 = shufflevector <8 x i32> %5100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5102 = getelementptr inbounds i32, ptr %5092, i64 -31
  %5103 = load <8 x i32>, ptr %5102, align 4, !tbaa !5
  %5104 = shufflevector <8 x i32> %5103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5105 = mul <8 x i32> %5095, %5087
  %5106 = mul <8 x i32> %5098, %5088
  %5107 = mul <8 x i32> %5101, %5089
  %5108 = mul <8 x i32> %5104, %5090
  %5109 = add nuw i64 %5086, 32
  %5110 = icmp eq i64 %5109, %5083
  br i1 %5110, label %5111, label %5085, !llvm.loop !189

5111:                                             ; preds = %5085
  %5112 = mul <8 x i32> %5106, %5105
  %5113 = mul <8 x i32> %5107, %5112
  %5114 = mul <8 x i32> %5108, %5113
  %5115 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5114)
  %5116 = icmp eq i64 %5079, %5083
  br i1 %5116, label %5129, label %5117

5117:                                             ; preds = %5070, %5111
  %5118 = phi i64 [ %5073, %5070 ], [ %5084, %5111 ]
  %5119 = phi i32 [ 1, %5070 ], [ %5115, %5111 ]
  br label %5120

5120:                                             ; preds = %5117, %5120
  %5121 = phi i64 [ %5126, %5120 ], [ %5118, %5117 ]
  %5122 = phi i32 [ %5125, %5120 ], [ %5119, %5117 ]
  %5123 = getelementptr inbounds i32, ptr %11, i64 %5121
  %5124 = load i32, ptr %5123, align 4, !tbaa !5
  %5125 = mul nsw i32 %5124, %5122
  %5126 = add nsw i64 %5121, -1
  %5127 = trunc i64 %5121 to i32
  %5128 = icmp sgt i32 %5127, 0
  br i1 %5128, label %5120, label %5129, !llvm.loop !190

5129:                                             ; preds = %5120, %5111
  %5130 = phi i32 [ %5115, %5111 ], [ %5125, %5120 ]
  %5131 = and i64 %5080, 4294967295
  %5132 = getelementptr inbounds i32, ptr %6, i64 %5131
  %5133 = load i32, ptr %5132, align 4, !tbaa !5
  %5134 = mul nsw i32 %5133, %5130
  %5135 = add nsw i32 %5134, %5074
  %5136 = icmp sgt i64 %5072, 2
  %5137 = add nsw i64 %5073, -1
  %5138 = add i32 %5071, 1
  br i1 %5136, label %5070, label %5139, !llvm.loop !191

5139:                                             ; preds = %5129, %5066
  %5140 = phi i32 [ %5069, %5066 ], [ %5135, %5129 ]
  %5141 = icmp slt i32 %5140, %5
  br i1 %5141, label %5144, label %5142

5142:                                             ; preds = %5139
  %5143 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

5144:                                             ; preds = %5139
  %5145 = sext i32 %5140 to i64
  %5146 = getelementptr inbounds i8, ptr %4895, i64 %5145
  %5147 = load i8, ptr %5146, align 1, !tbaa !11
  %5148 = uitofp i8 %5147 to double
  %5149 = tail call fast double @llvm.maxnum.f64(double %5067, double %5148)
  store double %5149, ptr %4897, align 8, !tbaa !18
  %5150 = add nuw nsw i32 %5068, 1
  br i1 %4911, label %5151, label %5201

5151:                                             ; preds = %5144
  %5152 = load i32, ptr %4, align 4, !tbaa !5
  %5153 = load i32, ptr %12, align 4, !tbaa !5
  %5154 = add nsw i32 %5153, -1
  %5155 = icmp slt i32 %5152, %5154
  br i1 %5155, label %5178, label %5156

5156:                                             ; preds = %5151
  %5157 = icmp eq i32 %5152, %5154
  br i1 %5157, label %5158, label %5194

5158:                                             ; preds = %5156
  store i32 0, ptr %4, align 4, !tbaa !5
  %5159 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5159, ptr %6, align 4, !tbaa !5
  br i1 %4916, label %5201, label %5160

5160:                                             ; preds = %5158, %5188
  %5161 = phi i64 [ %5192, %5188 ], [ 1, %5158 ]
  %5162 = getelementptr inbounds i32, ptr %4, i64 %5161
  %5163 = load i32, ptr %5162, align 4, !tbaa !5
  %5164 = getelementptr inbounds i32, ptr %12, i64 %5161
  %5165 = load i32, ptr %5164, align 4, !tbaa !5
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5163, %5166
  br i1 %5167, label %5168, label %5186

5168:                                             ; preds = %5160
  br i1 %5155, label %5178, label %5169

5169:                                             ; preds = %5168
  %5170 = shl i64 %5161, 32
  %5171 = add i64 %5170, -4294967296
  %5172 = ashr exact i64 %5171, 32
  %5173 = getelementptr inbounds i32, ptr %7, i64 %5172
  %5174 = load i32, ptr %5173, align 4, !tbaa !5
  %5175 = getelementptr inbounds i32, ptr %6, i64 %5161
  %5176 = load i32, ptr %5175, align 4, !tbaa !5
  %5177 = add nsw i32 %5176, %5174
  store i32 %5177, ptr %5175, align 4, !tbaa !5
  br label %5196

5178:                                             ; preds = %5151, %5168
  %5179 = phi i32 [ %5163, %5168 ], [ %5152, %5151 ]
  %5180 = phi ptr [ %5162, %5168 ], [ %4, %5151 ]
  %5181 = phi i64 [ %5161, %5168 ], [ 0, %5151 ]
  %5182 = add nsw i32 %5179, 1
  store i32 %5182, ptr %5180, align 4, !tbaa !5
  %5183 = getelementptr inbounds i32, ptr %7, i64 %5181
  %5184 = load i32, ptr %5183, align 4, !tbaa !5
  %5185 = getelementptr inbounds i32, ptr %6, i64 %5181
  br label %5196

5186:                                             ; preds = %5160
  %5187 = icmp eq i32 %5163, %5166
  br i1 %5187, label %5188, label %5194

5188:                                             ; preds = %5186
  store i32 0, ptr %5162, align 4, !tbaa !5
  %5189 = getelementptr inbounds i32, ptr %8, i64 %5161
  %5190 = load i32, ptr %5189, align 4, !tbaa !5
  %5191 = getelementptr inbounds i32, ptr %6, i64 %5161
  store i32 %5190, ptr %5191, align 4, !tbaa !5
  %5192 = add nuw nsw i64 %5161, 1
  %5193 = icmp eq i64 %5192, %4914
  br i1 %5193, label %5201, label %5160, !llvm.loop !192

5194:                                             ; preds = %5156, %5186
  %5195 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

5196:                                             ; preds = %5169, %5178
  %5197 = phi ptr [ %5185, %5178 ], [ %5162, %5169 ]
  %5198 = phi i32 [ %5184, %5178 ], [ 1, %5169 ]
  %5199 = load i32, ptr %5197, align 4, !tbaa !5
  %5200 = add nsw i32 %5199, %5198
  store i32 %5200, ptr %5197, align 4, !tbaa !5
  br label %5201

5201:                                             ; preds = %5188, %5196, %5158, %5144
  %5202 = icmp eq i32 %5150, %5
  br i1 %5202, label %5497, label %5066, !llvm.loop !193

5203:                                             ; preds = %4902
  %5204 = getelementptr inbounds i32, ptr %3, i64 %19
  %5205 = load i32, ptr %5204, align 4, !tbaa !5
  %5206 = icmp eq i32 %5205, 0
  %5207 = icmp sgt i32 %5, 0
  br i1 %5206, label %5217, label %5208

5208:                                             ; preds = %5203
  br i1 %5207, label %5209, label %5497

5209:                                             ; preds = %5208
  %5210 = icmp sgt i32 %13, 1
  %5211 = icmp sgt i32 %13, 0
  %5212 = add i32 %13, -2
  %5213 = zext i32 %5212 to i64
  %5214 = zext i32 %13 to i64
  %5215 = add nuw i32 %5, 1
  %5216 = icmp eq i32 %13, 1
  br label %5358

5217:                                             ; preds = %5203
  br i1 %5207, label %5218, label %5497

5218:                                             ; preds = %5217
  %5219 = icmp sgt i32 %13, 1
  %5220 = icmp sgt i32 %13, 0
  %5221 = add i32 %13, -2
  %5222 = zext i32 %5221 to i64
  %5223 = zext i32 %13 to i64
  %5224 = add nuw i32 %5, 1
  %5225 = icmp eq i32 %13, 1
  br label %5226

5226:                                             ; preds = %5218, %5356
  %5227 = phi double [ 0.000000e+00, %5218 ], [ %5306, %5356 ]
  %5228 = phi i32 [ 0, %5218 ], [ %5308, %5356 ]
  %5229 = phi double [ 0.000000e+00, %5218 ], [ %5307, %5356 ]
  %5230 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5219, label %5231, label %5300

5231:                                             ; preds = %5226, %5290
  %5232 = phi i32 [ %5299, %5290 ], [ 0, %5226 ]
  %5233 = phi i64 [ %5241, %5290 ], [ %5223, %5226 ]
  %5234 = phi i64 [ %5298, %5290 ], [ %5222, %5226 ]
  %5235 = phi i32 [ %5296, %5290 ], [ %5230, %5226 ]
  %5236 = sub i32 %5221, %5232
  %5237 = tail call i32 @llvm.smin.i32(i32 %5236, i32 0)
  %5238 = sub i32 %5236, %5237
  %5239 = zext i32 %5238 to i64
  %5240 = add nuw nsw i64 %5239, 1
  %5241 = add nsw i64 %5233, -1
  %5242 = icmp ult i32 %5238, 31
  br i1 %5242, label %5278, label %5243

5243:                                             ; preds = %5231
  %5244 = and i64 %5240, 8589934560
  %5245 = sub i64 %5234, %5244
  br label %5246

5246:                                             ; preds = %5246, %5243
  %5247 = phi i64 [ 0, %5243 ], [ %5270, %5246 ]
  %5248 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5266, %5246 ]
  %5249 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5267, %5246 ]
  %5250 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5268, %5246 ]
  %5251 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5243 ], [ %5269, %5246 ]
  %5252 = sub i64 %5234, %5247
  %5253 = getelementptr inbounds i32, ptr %9, i64 %5252
  %5254 = getelementptr inbounds i32, ptr %5253, i64 -7
  %5255 = load <8 x i32>, ptr %5254, align 4, !tbaa !5
  %5256 = shufflevector <8 x i32> %5255, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5257 = getelementptr inbounds i32, ptr %5253, i64 -15
  %5258 = load <8 x i32>, ptr %5257, align 4, !tbaa !5
  %5259 = shufflevector <8 x i32> %5258, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5260 = getelementptr inbounds i32, ptr %5253, i64 -23
  %5261 = load <8 x i32>, ptr %5260, align 4, !tbaa !5
  %5262 = shufflevector <8 x i32> %5261, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5263 = getelementptr inbounds i32, ptr %5253, i64 -31
  %5264 = load <8 x i32>, ptr %5263, align 4, !tbaa !5
  %5265 = shufflevector <8 x i32> %5264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5266 = mul <8 x i32> %5256, %5248
  %5267 = mul <8 x i32> %5259, %5249
  %5268 = mul <8 x i32> %5262, %5250
  %5269 = mul <8 x i32> %5265, %5251
  %5270 = add nuw i64 %5247, 32
  %5271 = icmp eq i64 %5270, %5244
  br i1 %5271, label %5272, label %5246, !llvm.loop !194

5272:                                             ; preds = %5246
  %5273 = mul <8 x i32> %5267, %5266
  %5274 = mul <8 x i32> %5268, %5273
  %5275 = mul <8 x i32> %5269, %5274
  %5276 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5275)
  %5277 = icmp eq i64 %5240, %5244
  br i1 %5277, label %5290, label %5278

5278:                                             ; preds = %5231, %5272
  %5279 = phi i64 [ %5234, %5231 ], [ %5245, %5272 ]
  %5280 = phi i32 [ 1, %5231 ], [ %5276, %5272 ]
  br label %5281

5281:                                             ; preds = %5278, %5281
  %5282 = phi i64 [ %5287, %5281 ], [ %5279, %5278 ]
  %5283 = phi i32 [ %5286, %5281 ], [ %5280, %5278 ]
  %5284 = getelementptr inbounds i32, ptr %9, i64 %5282
  %5285 = load i32, ptr %5284, align 4, !tbaa !5
  %5286 = mul nsw i32 %5285, %5283
  %5287 = add nsw i64 %5282, -1
  %5288 = trunc i64 %5282 to i32
  %5289 = icmp sgt i32 %5288, 0
  br i1 %5289, label %5281, label %5290, !llvm.loop !195

5290:                                             ; preds = %5281, %5272
  %5291 = phi i32 [ %5276, %5272 ], [ %5286, %5281 ]
  %5292 = and i64 %5241, 4294967295
  %5293 = getelementptr inbounds i32, ptr %6, i64 %5292
  %5294 = load i32, ptr %5293, align 4, !tbaa !5
  %5295 = mul nsw i32 %5294, %5291
  %5296 = add nsw i32 %5295, %5235
  %5297 = icmp sgt i64 %5233, 2
  %5298 = add nsw i64 %5234, -1
  %5299 = add i32 %5232, 1
  br i1 %5297, label %5231, label %5300, !llvm.loop !196

5300:                                             ; preds = %5290, %5226
  %5301 = phi i32 [ %5230, %5226 ], [ %5296, %5290 ]
  %5302 = sext i32 %5301 to i64
  %5303 = getelementptr inbounds i8, ptr %4895, i64 %5302
  %5304 = load i8, ptr %5303, align 1, !tbaa !11
  %5305 = uitofp i8 %5304 to double
  %5306 = tail call fast double @llvm.maxnum.f64(double %5227, double %5305)
  store double %5306, ptr %4897, align 8, !tbaa !18
  %5307 = fadd fast double %5229, 1.000000e+00
  %5308 = add nuw nsw i32 %5228, 1
  br i1 %5220, label %5309, label %5356

5309:                                             ; preds = %5300
  %5310 = load i32, ptr %4, align 4, !tbaa !5
  %5311 = load i32, ptr %12, align 4, !tbaa !5
  %5312 = add nsw i32 %5311, -1
  %5313 = icmp slt i32 %5310, %5312
  br i1 %5313, label %5333, label %5314

5314:                                             ; preds = %5309
  %5315 = icmp eq i32 %5310, %5312
  br i1 %5315, label %5316, label %5349

5316:                                             ; preds = %5314
  store i32 0, ptr %4, align 4, !tbaa !5
  %5317 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5317, ptr %6, align 4, !tbaa !5
  br i1 %5225, label %5356, label %5318

5318:                                             ; preds = %5316, %5343
  %5319 = phi i64 [ %5347, %5343 ], [ 1, %5316 ]
  %5320 = getelementptr inbounds i32, ptr %4, i64 %5319
  %5321 = load i32, ptr %5320, align 4, !tbaa !5
  %5322 = getelementptr inbounds i32, ptr %12, i64 %5319
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = add nsw i32 %5323, -1
  %5325 = icmp slt i32 %5321, %5324
  br i1 %5325, label %5326, label %5341

5326:                                             ; preds = %5318
  br i1 %5313, label %5333, label %5327

5327:                                             ; preds = %5326
  %5328 = getelementptr inbounds i32, ptr %7, i64 %5319
  %5329 = load i32, ptr %5328, align 4, !tbaa !5
  %5330 = getelementptr inbounds i32, ptr %6, i64 %5319
  %5331 = load i32, ptr %5330, align 4, !tbaa !5
  %5332 = add nsw i32 %5331, %5329
  store i32 %5332, ptr %5330, align 4, !tbaa !5
  br label %5351

5333:                                             ; preds = %5309, %5326
  %5334 = phi i32 [ %5321, %5326 ], [ %5310, %5309 ]
  %5335 = phi ptr [ %5320, %5326 ], [ %4, %5309 ]
  %5336 = phi i64 [ %5319, %5326 ], [ 0, %5309 ]
  %5337 = add nsw i32 %5334, 1
  store i32 %5337, ptr %5335, align 4, !tbaa !5
  %5338 = getelementptr inbounds i32, ptr %7, i64 %5336
  %5339 = load i32, ptr %5338, align 4, !tbaa !5
  %5340 = getelementptr inbounds i32, ptr %6, i64 %5336
  br label %5351

5341:                                             ; preds = %5318
  %5342 = icmp eq i32 %5321, %5324
  br i1 %5342, label %5343, label %5349

5343:                                             ; preds = %5341
  store i32 0, ptr %5320, align 4, !tbaa !5
  %5344 = getelementptr inbounds i32, ptr %8, i64 %5319
  %5345 = load i32, ptr %5344, align 4, !tbaa !5
  %5346 = getelementptr inbounds i32, ptr %6, i64 %5319
  store i32 %5345, ptr %5346, align 4, !tbaa !5
  %5347 = add nuw nsw i64 %5319, 1
  %5348 = icmp eq i64 %5347, %5223
  br i1 %5348, label %5356, label %5318, !llvm.loop !197

5349:                                             ; preds = %5314, %5341
  %5350 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

5351:                                             ; preds = %5327, %5333
  %5352 = phi ptr [ %5340, %5333 ], [ %5320, %5327 ]
  %5353 = phi i32 [ %5339, %5333 ], [ 1, %5327 ]
  %5354 = load i32, ptr %5352, align 4, !tbaa !5
  %5355 = add nsw i32 %5354, %5353
  store i32 %5355, ptr %5352, align 4, !tbaa !5
  br label %5356

5356:                                             ; preds = %5343, %5351, %5316, %5300
  %5357 = icmp eq i32 %5308, %5
  br i1 %5357, label %5497, label %5226, !llvm.loop !198

5358:                                             ; preds = %5209, %5493
  %5359 = phi double [ 0.000000e+00, %5209 ], [ %5441, %5493 ]
  %5360 = phi i32 [ 0, %5209 ], [ %5442, %5493 ]
  %5361 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5210, label %5362, label %5431

5362:                                             ; preds = %5358, %5421
  %5363 = phi i32 [ %5430, %5421 ], [ 0, %5358 ]
  %5364 = phi i64 [ %5372, %5421 ], [ %5214, %5358 ]
  %5365 = phi i64 [ %5429, %5421 ], [ %5213, %5358 ]
  %5366 = phi i32 [ %5427, %5421 ], [ %5361, %5358 ]
  %5367 = sub i32 %5212, %5363
  %5368 = tail call i32 @llvm.smin.i32(i32 %5367, i32 0)
  %5369 = sub i32 %5367, %5368
  %5370 = zext i32 %5369 to i64
  %5371 = add nuw nsw i64 %5370, 1
  %5372 = add nsw i64 %5364, -1
  %5373 = icmp ult i32 %5369, 31
  br i1 %5373, label %5409, label %5374

5374:                                             ; preds = %5362
  %5375 = and i64 %5371, 8589934560
  %5376 = sub i64 %5365, %5375
  br label %5377

5377:                                             ; preds = %5377, %5374
  %5378 = phi i64 [ 0, %5374 ], [ %5401, %5377 ]
  %5379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5374 ], [ %5397, %5377 ]
  %5380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5374 ], [ %5398, %5377 ]
  %5381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5374 ], [ %5399, %5377 ]
  %5382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5374 ], [ %5400, %5377 ]
  %5383 = sub i64 %5365, %5378
  %5384 = getelementptr inbounds i32, ptr %11, i64 %5383
  %5385 = getelementptr inbounds i32, ptr %5384, i64 -7
  %5386 = load <8 x i32>, ptr %5385, align 4, !tbaa !5
  %5387 = shufflevector <8 x i32> %5386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5388 = getelementptr inbounds i32, ptr %5384, i64 -15
  %5389 = load <8 x i32>, ptr %5388, align 4, !tbaa !5
  %5390 = shufflevector <8 x i32> %5389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5391 = getelementptr inbounds i32, ptr %5384, i64 -23
  %5392 = load <8 x i32>, ptr %5391, align 4, !tbaa !5
  %5393 = shufflevector <8 x i32> %5392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5394 = getelementptr inbounds i32, ptr %5384, i64 -31
  %5395 = load <8 x i32>, ptr %5394, align 4, !tbaa !5
  %5396 = shufflevector <8 x i32> %5395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5397 = mul <8 x i32> %5387, %5379
  %5398 = mul <8 x i32> %5390, %5380
  %5399 = mul <8 x i32> %5393, %5381
  %5400 = mul <8 x i32> %5396, %5382
  %5401 = add nuw i64 %5378, 32
  %5402 = icmp eq i64 %5401, %5375
  br i1 %5402, label %5403, label %5377, !llvm.loop !199

5403:                                             ; preds = %5377
  %5404 = mul <8 x i32> %5398, %5397
  %5405 = mul <8 x i32> %5399, %5404
  %5406 = mul <8 x i32> %5400, %5405
  %5407 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5406)
  %5408 = icmp eq i64 %5371, %5375
  br i1 %5408, label %5421, label %5409

5409:                                             ; preds = %5362, %5403
  %5410 = phi i64 [ %5365, %5362 ], [ %5376, %5403 ]
  %5411 = phi i32 [ 1, %5362 ], [ %5407, %5403 ]
  br label %5412

5412:                                             ; preds = %5409, %5412
  %5413 = phi i64 [ %5418, %5412 ], [ %5410, %5409 ]
  %5414 = phi i32 [ %5417, %5412 ], [ %5411, %5409 ]
  %5415 = getelementptr inbounds i32, ptr %11, i64 %5413
  %5416 = load i32, ptr %5415, align 4, !tbaa !5
  %5417 = mul nsw i32 %5416, %5414
  %5418 = add nsw i64 %5413, -1
  %5419 = trunc i64 %5413 to i32
  %5420 = icmp sgt i32 %5419, 0
  br i1 %5420, label %5412, label %5421, !llvm.loop !200

5421:                                             ; preds = %5412, %5403
  %5422 = phi i32 [ %5407, %5403 ], [ %5417, %5412 ]
  %5423 = and i64 %5372, 4294967295
  %5424 = getelementptr inbounds i32, ptr %6, i64 %5423
  %5425 = load i32, ptr %5424, align 4, !tbaa !5
  %5426 = mul nsw i32 %5425, %5422
  %5427 = add nsw i32 %5426, %5366
  %5428 = icmp sgt i64 %5364, 2
  %5429 = add nsw i64 %5365, -1
  %5430 = add i32 %5363, 1
  br i1 %5428, label %5362, label %5431, !llvm.loop !201

5431:                                             ; preds = %5421, %5358
  %5432 = phi i32 [ %5361, %5358 ], [ %5427, %5421 ]
  %5433 = icmp slt i32 %5432, %5
  br i1 %5433, label %5436, label %5434

5434:                                             ; preds = %5431
  %5435 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5502

5436:                                             ; preds = %5431
  %5437 = sext i32 %5432 to i64
  %5438 = getelementptr inbounds i8, ptr %4895, i64 %5437
  %5439 = load i8, ptr %5438, align 1, !tbaa !11
  %5440 = uitofp i8 %5439 to double
  %5441 = tail call fast double @llvm.maxnum.f64(double %5359, double %5440)
  store double %5441, ptr %4897, align 8, !tbaa !18
  %5442 = add nuw nsw i32 %5360, 1
  br i1 %5211, label %5443, label %5493

5443:                                             ; preds = %5436
  %5444 = load i32, ptr %4, align 4, !tbaa !5
  %5445 = load i32, ptr %12, align 4, !tbaa !5
  %5446 = add nsw i32 %5445, -1
  %5447 = icmp slt i32 %5444, %5446
  br i1 %5447, label %5470, label %5448

5448:                                             ; preds = %5443
  %5449 = icmp eq i32 %5444, %5446
  br i1 %5449, label %5450, label %5486

5450:                                             ; preds = %5448
  store i32 0, ptr %4, align 4, !tbaa !5
  %5451 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5451, ptr %6, align 4, !tbaa !5
  br i1 %5216, label %5493, label %5452

5452:                                             ; preds = %5450, %5480
  %5453 = phi i64 [ %5484, %5480 ], [ 1, %5450 ]
  %5454 = getelementptr inbounds i32, ptr %4, i64 %5453
  %5455 = load i32, ptr %5454, align 4, !tbaa !5
  %5456 = getelementptr inbounds i32, ptr %12, i64 %5453
  %5457 = load i32, ptr %5456, align 4, !tbaa !5
  %5458 = add nsw i32 %5457, -1
  %5459 = icmp slt i32 %5455, %5458
  br i1 %5459, label %5460, label %5478

5460:                                             ; preds = %5452
  br i1 %5447, label %5470, label %5461

5461:                                             ; preds = %5460
  %5462 = shl i64 %5453, 32
  %5463 = add i64 %5462, -4294967296
  %5464 = ashr exact i64 %5463, 32
  %5465 = getelementptr inbounds i32, ptr %7, i64 %5464
  %5466 = load i32, ptr %5465, align 4, !tbaa !5
  %5467 = getelementptr inbounds i32, ptr %6, i64 %5453
  %5468 = load i32, ptr %5467, align 4, !tbaa !5
  %5469 = add nsw i32 %5468, %5466
  store i32 %5469, ptr %5467, align 4, !tbaa !5
  br label %5488

5470:                                             ; preds = %5443, %5460
  %5471 = phi i32 [ %5455, %5460 ], [ %5444, %5443 ]
  %5472 = phi ptr [ %5454, %5460 ], [ %4, %5443 ]
  %5473 = phi i64 [ %5453, %5460 ], [ 0, %5443 ]
  %5474 = add nsw i32 %5471, 1
  store i32 %5474, ptr %5472, align 4, !tbaa !5
  %5475 = getelementptr inbounds i32, ptr %7, i64 %5473
  %5476 = load i32, ptr %5475, align 4, !tbaa !5
  %5477 = getelementptr inbounds i32, ptr %6, i64 %5473
  br label %5488

5478:                                             ; preds = %5452
  %5479 = icmp eq i32 %5455, %5458
  br i1 %5479, label %5480, label %5486

5480:                                             ; preds = %5478
  store i32 0, ptr %5454, align 4, !tbaa !5
  %5481 = getelementptr inbounds i32, ptr %8, i64 %5453
  %5482 = load i32, ptr %5481, align 4, !tbaa !5
  %5483 = getelementptr inbounds i32, ptr %6, i64 %5453
  store i32 %5482, ptr %5483, align 4, !tbaa !5
  %5484 = add nuw nsw i64 %5453, 1
  %5485 = icmp eq i64 %5484, %5214
  br i1 %5485, label %5493, label %5452, !llvm.loop !202

5486:                                             ; preds = %5448, %5478
  %5487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5502

5488:                                             ; preds = %5461, %5470
  %5489 = phi ptr [ %5477, %5470 ], [ %5454, %5461 ]
  %5490 = phi i32 [ %5476, %5470 ], [ 1, %5461 ]
  %5491 = load i32, ptr %5489, align 4, !tbaa !5
  %5492 = add nsw i32 %5491, %5490
  store i32 %5492, ptr %5489, align 4, !tbaa !5
  br label %5493

5493:                                             ; preds = %5480, %5488, %5450, %5436
  %5494 = icmp eq i32 %5442, %5
  br i1 %5494, label %5497, label %5358, !llvm.loop !203

5495:                                             ; preds = %4902
  %5496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 96, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5497

5497:                                             ; preds = %5493, %5356, %5201, %5064, %4889, %4752, %4597, %4458, %4281, %4144, %3989, %3852, %3677, %3540, %3385, %3246, %3069, %2932, %2777, %2638, %2461, %2322, %2165, %2026, %1849, %1709, %1551, %1408, %1231, %1094, %939, %800, %623, %487, %333, %194, %5208, %5217, %4908, %4917, %4604, %4613, %4300, %4309, %3996, %4005, %3696, %3705, %3392, %3401, %3088, %3097, %2784, %2793, %2480, %2489, %2172, %2181, %1868, %1877, %1558, %1567, %1250, %1259, %946, %955, %642, %651, %340, %349, %36, %45, %4899, %5495, %4291, %4891, %3687, %4283, %3079, %3679, %2471, %3071, %1859, %2463, %1241, %1851, %633, %1233, %28, %625, %18
  %5498 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %625 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1233 ], [ 0.000000e+00, %633 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %1241 ], [ 0.000000e+00, %2463 ], [ 0.000000e+00, %1859 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %2471 ], [ 0.000000e+00, %3679 ], [ 0.000000e+00, %3079 ], [ 0.000000e+00, %4283 ], [ 0.000000e+00, %3687 ], [ 0.000000e+00, %4891 ], [ 0.000000e+00, %4291 ], [ 0.000000e+00, %5495 ], [ 0.000000e+00, %4899 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %349 ], [ 0.000000e+00, %340 ], [ 0.000000e+00, %651 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %955 ], [ 0.000000e+00, %946 ], [ 0.000000e+00, %1259 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1558 ], [ 0.000000e+00, %1877 ], [ 0.000000e+00, %1868 ], [ 0.000000e+00, %2181 ], [ 0.000000e+00, %2172 ], [ 0.000000e+00, %2489 ], [ 0.000000e+00, %2480 ], [ 0.000000e+00, %2793 ], [ 0.000000e+00, %2784 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %3088 ], [ 0.000000e+00, %3401 ], [ 0.000000e+00, %3392 ], [ 0.000000e+00, %3705 ], [ 0.000000e+00, %3696 ], [ 0.000000e+00, %4005 ], [ 0.000000e+00, %3996 ], [ 0.000000e+00, %4309 ], [ 0.000000e+00, %4300 ], [ 0.000000e+00, %4613 ], [ 0.000000e+00, %4604 ], [ 0.000000e+00, %4917 ], [ 0.000000e+00, %4908 ], [ 0.000000e+00, %5217 ], [ 0.000000e+00, %5208 ], [ %145, %194 ], [ 0.000000e+00, %333 ], [ %438, %487 ], [ 0.000000e+00, %623 ], [ %751, %800 ], [ 0.000000e+00, %939 ], [ %1045, %1094 ], [ 0.000000e+00, %1231 ], [ %1359, %1408 ], [ 0.000000e+00, %1551 ], [ %1660, %1709 ], [ 0.000000e+00, %1849 ], [ %1977, %2026 ], [ 0.000000e+00, %2165 ], [ %2273, %2322 ], [ 0.000000e+00, %2461 ], [ %2589, %2638 ], [ 0.000000e+00, %2777 ], [ %2883, %2932 ], [ 0.000000e+00, %3069 ], [ %3197, %3246 ], [ 0.000000e+00, %3385 ], [ %3491, %3540 ], [ 0.000000e+00, %3677 ], [ %3803, %3852 ], [ 0.000000e+00, %3989 ], [ %4095, %4144 ], [ 0.000000e+00, %4281 ], [ %4409, %4458 ], [ 0.000000e+00, %4597 ], [ %4703, %4752 ], [ 0.000000e+00, %4889 ], [ %5015, %5064 ], [ 0.000000e+00, %5201 ], [ %5307, %5356 ], [ 0.000000e+00, %5493 ]
  %5499 = phi i32 [ %10, %18 ], [ 1, %625 ], [ 1, %28 ], [ 1, %1233 ], [ 1, %633 ], [ 1, %1851 ], [ 1, %1241 ], [ 1, %2463 ], [ 1, %1859 ], [ 1, %3071 ], [ 1, %2471 ], [ 1, %3679 ], [ 1, %3079 ], [ 1, %4283 ], [ 1, %3687 ], [ 1, %4891 ], [ 1, %4291 ], [ 1, %5495 ], [ 1, %4899 ], [ 1, %45 ], [ 1, %36 ], [ 1, %349 ], [ 1, %340 ], [ 1, %651 ], [ 1, %642 ], [ 1, %955 ], [ 1, %946 ], [ 1, %1259 ], [ 1, %1250 ], [ 1, %1567 ], [ 1, %1558 ], [ 1, %1877 ], [ 1, %1868 ], [ 1, %2181 ], [ 1, %2172 ], [ 1, %2489 ], [ 1, %2480 ], [ 1, %2793 ], [ 1, %2784 ], [ 1, %3097 ], [ 1, %3088 ], [ 1, %3401 ], [ 1, %3392 ], [ 1, %3705 ], [ 1, %3696 ], [ 1, %4005 ], [ 1, %3996 ], [ 1, %4309 ], [ 1, %4300 ], [ 1, %4613 ], [ 1, %4604 ], [ 1, %4917 ], [ 1, %4908 ], [ 1, %5217 ], [ 1, %5208 ], [ %52, %194 ], [ %43, %333 ], [ %356, %487 ], [ %347, %623 ], [ %658, %800 ], [ %649, %939 ], [ %962, %1094 ], [ %953, %1231 ], [ %1266, %1408 ], [ %1257, %1551 ], [ %1574, %1709 ], [ %1565, %1849 ], [ %1884, %2026 ], [ %1875, %2165 ], [ %2188, %2322 ], [ %2179, %2461 ], [ %2496, %2638 ], [ %2487, %2777 ], [ %2800, %2932 ], [ %2791, %3069 ], [ %3104, %3246 ], [ %3095, %3385 ], [ %3408, %3540 ], [ %3399, %3677 ], [ %3712, %3852 ], [ %3703, %3989 ], [ %4012, %4144 ], [ %4003, %4281 ], [ %4316, %4458 ], [ %4307, %4597 ], [ %4620, %4752 ], [ %4611, %4889 ], [ %4924, %5064 ], [ %4915, %5201 ], [ %5224, %5356 ], [ %5215, %5493 ]
  %5500 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5499, ptr noundef nonnull @.str.5) #3
  %5501 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5498, ptr noundef nonnull @.str.6) #3
  br label %5502

5502:                                             ; preds = %5057, %5142, %5194, %5349, %5434, %5486, %4451, %4536, %4590, %4745, %4830, %4882, %3845, %3930, %3982, %4137, %4222, %4274, %3239, %3324, %3378, %3533, %3618, %3670, %2631, %2715, %2770, %2925, %3009, %3062, %2019, %2104, %2158, %2315, %2400, %2454, %1401, %1485, %1544, %1702, %1786, %1842, %793, %877, %932, %1087, %1171, %1224, %187, %271, %326, %480, %564, %616, %5497
  %5503 = phi i32 [ 0, %5497 ], [ -1, %616 ], [ -1, %564 ], [ -1, %480 ], [ -1, %326 ], [ -1, %271 ], [ -1, %187 ], [ -1, %1224 ], [ -1, %1171 ], [ -1, %1087 ], [ -1, %932 ], [ -1, %877 ], [ -1, %793 ], [ -1, %1842 ], [ -1, %1786 ], [ -1, %1702 ], [ -1, %1544 ], [ -1, %1485 ], [ -1, %1401 ], [ -1, %2454 ], [ -1, %2400 ], [ -1, %2315 ], [ -1, %2158 ], [ -1, %2104 ], [ -1, %2019 ], [ -1, %3062 ], [ -1, %3009 ], [ -1, %2925 ], [ -1, %2770 ], [ -1, %2715 ], [ -1, %2631 ], [ -1, %3670 ], [ -1, %3618 ], [ -1, %3533 ], [ -1, %3378 ], [ -1, %3324 ], [ -1, %3239 ], [ -1, %4274 ], [ -1, %4222 ], [ -1, %4137 ], [ -1, %3982 ], [ -1, %3930 ], [ -1, %3845 ], [ -1, %4882 ], [ -1, %4830 ], [ -1, %4745 ], [ -1, %4590 ], [ -1, %4536 ], [ -1, %4451 ], [ -1, %5486 ], [ -1, %5434 ], [ -1, %5349 ], [ -1, %5194 ], [ -1, %5142 ], [ -1, %5057 ]
  ret i32 %5503
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5630 [
    i32 101, label %22
    i32 102, label %639
    i32 103, label %1253
    i32 104, label %1891
    i32 105, label %2531
    i32 106, label %3145
    i32 107, label %3760
    i32 108, label %4378
    i32 109, label %5003
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = and i32 %29, 255
  %31 = icmp eq i32 %30, 0
  %32 = trunc i32 %29 to i8
  %33 = select i1 %31, i8 0, i8 %32
  store i8 %33, ptr %26, align 1, !tbaa !11
  br label %5630

34:                                               ; preds = %22
  switch i32 %1, label %637 [
    i32 1, label %35
    i32 0, label %341
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds i32, ptr %3, i64 %19
  %37 = load i32, ptr %36, align 4, !tbaa !5
  %38 = icmp eq i32 %37, 0
  %39 = icmp sgt i32 %5, 0
  br i1 %38, label %49, label %40

40:                                               ; preds = %35
  br i1 %39, label %41, label %5630

41:                                               ; preds = %40
  %42 = icmp sgt i32 %13, 1
  %43 = icmp sgt i32 %13, 0
  %44 = add i32 %13, -2
  %45 = zext i32 %44 to i64
  %46 = zext i32 %13 to i64
  %47 = add nuw i32 %5, 1
  %48 = icmp eq i32 %13, 1
  br label %201

49:                                               ; preds = %35
  br i1 %39, label %50, label %5630

50:                                               ; preds = %49
  %51 = icmp sgt i32 %13, 1
  %52 = icmp sgt i32 %13, 0
  %53 = add i32 %13, -2
  %54 = zext i32 %53 to i64
  %55 = zext i32 %13 to i64
  %56 = add nuw i32 %5, 1
  %57 = icmp eq i32 %13, 1
  br label %58

58:                                               ; preds = %50, %199
  %59 = phi i32 [ 0, %50 ], [ %151, %199 ]
  %60 = phi double [ 0.000000e+00, %50 ], [ %150, %199 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %51, label %62, label %131

62:                                               ; preds = %58, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %58 ]
  %64 = phi i64 [ %72, %121 ], [ %55, %58 ]
  %65 = phi i64 [ %129, %121 ], [ %54, %58 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %58 ]
  %67 = sub i32 %53, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !204

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !205

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !206

131:                                              ; preds = %121, %58
  %132 = phi i32 [ %61, %58 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds i32, ptr %24, i64 %133
  %137 = load i32, ptr %136, align 4, !tbaa !5
  %138 = load i8, ptr %26, align 1, !tbaa !11
  %139 = uitofp i8 %138 to double
  %140 = and i32 %137, 255
  %141 = sitofp i32 %140 to double
  %142 = fmul fast double %135, %141
  %143 = fcmp fast uge double %142, 0.000000e+00
  %144 = fneg fast double %142
  %145 = tail call fast double @llvm.fabs.f64(double %142)
  %146 = fcmp fast ole double %145, %139
  %147 = select nnan ninf i1 %143, double %142, double %144
  %148 = select i1 %146, double %139, double %147
  %149 = fptoui double %148 to i8
  store i8 %149, ptr %26, align 1, !tbaa !11
  %150 = fadd fast double %135, %60
  %151 = add nuw nsw i32 %59, 1
  br i1 %52, label %152, label %199

152:                                              ; preds = %131
  %153 = load i32, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %12, align 4, !tbaa !5
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !5
  %160 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %160, ptr %6, align 4, !tbaa !5
  br i1 %57, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !5
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !5
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !5
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %55
  br i1 %191, label %199, label %161, !llvm.loop !207

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !5
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !5
  br label %199

199:                                              ; preds = %186, %194, %159, %131
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %5630, label %58, !llvm.loop !208

201:                                              ; preds = %41, %339
  %202 = phi i32 [ 0, %41 ], [ %288, %339 ]
  %203 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %42, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %46, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %45, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %44, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !5
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !5
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !209

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !210

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !5
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !211

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

278:                                              ; preds = %273
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds i32, ptr %24, i64 %279
  %281 = load i32, ptr %280, align 4, !tbaa !5
  %282 = load i8, ptr %26, align 1, !tbaa !11
  %283 = uitofp i8 %282 to double
  %284 = and i32 %281, 255
  %285 = sitofp i32 %284 to double
  %286 = tail call fast double @llvm.maxnum.f64(double %283, double %285)
  %287 = fptoui double %286 to i8
  store i8 %287, ptr %26, align 1, !tbaa !11
  %288 = add nuw nsw i32 %202, 1
  br i1 %43, label %289, label %339

289:                                              ; preds = %278
  %290 = load i32, ptr %4, align 4, !tbaa !5
  %291 = load i32, ptr %12, align 4, !tbaa !5
  %292 = add nsw i32 %291, -1
  %293 = icmp slt i32 %290, %292
  br i1 %293, label %316, label %294

294:                                              ; preds = %289
  %295 = icmp eq i32 %290, %292
  br i1 %295, label %296, label %332

296:                                              ; preds = %294
  store i32 0, ptr %4, align 4, !tbaa !5
  %297 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %297, ptr %6, align 4, !tbaa !5
  br i1 %48, label %339, label %298

298:                                              ; preds = %296, %326
  %299 = phi i64 [ %330, %326 ], [ 1, %296 ]
  %300 = getelementptr inbounds i32, ptr %4, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %12, i64 %299
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, -1
  %305 = icmp slt i32 %301, %304
  br i1 %305, label %306, label %324

306:                                              ; preds = %298
  br i1 %293, label %316, label %307

307:                                              ; preds = %306
  %308 = shl i64 %299, 32
  %309 = add i64 %308, -4294967296
  %310 = ashr exact i64 %309, 32
  %311 = getelementptr inbounds i32, ptr %7, i64 %310
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %299
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = add nsw i32 %314, %312
  store i32 %315, ptr %313, align 4, !tbaa !5
  br label %334

316:                                              ; preds = %289, %306
  %317 = phi i32 [ %301, %306 ], [ %290, %289 ]
  %318 = phi ptr [ %300, %306 ], [ %4, %289 ]
  %319 = phi i64 [ %299, %306 ], [ 0, %289 ]
  %320 = add nsw i32 %317, 1
  store i32 %320, ptr %318, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %7, i64 %319
  %322 = load i32, ptr %321, align 4, !tbaa !5
  %323 = getelementptr inbounds i32, ptr %6, i64 %319
  br label %334

324:                                              ; preds = %298
  %325 = icmp eq i32 %301, %304
  br i1 %325, label %326, label %332

326:                                              ; preds = %324
  store i32 0, ptr %300, align 4, !tbaa !5
  %327 = getelementptr inbounds i32, ptr %8, i64 %299
  %328 = load i32, ptr %327, align 4, !tbaa !5
  %329 = getelementptr inbounds i32, ptr %6, i64 %299
  store i32 %328, ptr %329, align 4, !tbaa !5
  %330 = add nuw nsw i64 %299, 1
  %331 = icmp eq i64 %330, %46
  br i1 %331, label %339, label %298, !llvm.loop !212

332:                                              ; preds = %294, %324
  %333 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

334:                                              ; preds = %307, %316
  %335 = phi ptr [ %323, %316 ], [ %300, %307 ]
  %336 = phi i32 [ %322, %316 ], [ 1, %307 ]
  %337 = load i32, ptr %335, align 4, !tbaa !5
  %338 = add nsw i32 %337, %336
  store i32 %338, ptr %335, align 4, !tbaa !5
  br label %339

339:                                              ; preds = %326, %334, %296, %278
  %340 = icmp eq i32 %288, %5
  br i1 %340, label %5630, label %201, !llvm.loop !213

341:                                              ; preds = %34
  %342 = getelementptr inbounds i32, ptr %3, i64 %19
  %343 = load i32, ptr %342, align 4, !tbaa !5
  %344 = icmp eq i32 %343, 0
  %345 = icmp sgt i32 %5, 0
  br i1 %344, label %355, label %346

346:                                              ; preds = %341
  br i1 %345, label %347, label %5630

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %498

355:                                              ; preds = %341
  br i1 %345, label %356, label %5630

356:                                              ; preds = %355
  %357 = icmp sgt i32 %13, 1
  %358 = icmp sgt i32 %13, 0
  %359 = add i32 %13, -2
  %360 = zext i32 %359 to i64
  %361 = zext i32 %13 to i64
  %362 = add nuw i32 %5, 1
  %363 = icmp eq i32 %13, 1
  br label %364

364:                                              ; preds = %356, %496
  %365 = phi i32 [ 0, %356 ], [ %448, %496 ]
  %366 = phi double [ 0.000000e+00, %356 ], [ %447, %496 ]
  %367 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %357, label %368, label %437

368:                                              ; preds = %364, %427
  %369 = phi i32 [ %436, %427 ], [ 0, %364 ]
  %370 = phi i64 [ %378, %427 ], [ %361, %364 ]
  %371 = phi i64 [ %435, %427 ], [ %360, %364 ]
  %372 = phi i32 [ %433, %427 ], [ %367, %364 ]
  %373 = sub i32 %359, %369
  %374 = tail call i32 @llvm.smin.i32(i32 %373, i32 0)
  %375 = sub i32 %373, %374
  %376 = zext i32 %375 to i64
  %377 = add nuw nsw i64 %376, 1
  %378 = add nsw i64 %370, -1
  %379 = icmp ult i32 %375, 31
  br i1 %379, label %415, label %380

380:                                              ; preds = %368
  %381 = and i64 %377, 8589934560
  %382 = sub i64 %371, %381
  br label %383

383:                                              ; preds = %383, %380
  %384 = phi i64 [ 0, %380 ], [ %407, %383 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %403, %383 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %404, %383 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %405, %383 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %406, %383 ]
  %389 = sub i64 %371, %384
  %390 = getelementptr inbounds i32, ptr %9, i64 %389
  %391 = getelementptr inbounds i32, ptr %390, i64 -7
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %390, i64 -15
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %390, i64 -23
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = getelementptr inbounds i32, ptr %390, i64 -31
  %401 = load <8 x i32>, ptr %400, align 4, !tbaa !5
  %402 = shufflevector <8 x i32> %401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %403 = mul <8 x i32> %393, %385
  %404 = mul <8 x i32> %396, %386
  %405 = mul <8 x i32> %399, %387
  %406 = mul <8 x i32> %402, %388
  %407 = add nuw i64 %384, 32
  %408 = icmp eq i64 %407, %381
  br i1 %408, label %409, label %383, !llvm.loop !214

409:                                              ; preds = %383
  %410 = mul <8 x i32> %404, %403
  %411 = mul <8 x i32> %405, %410
  %412 = mul <8 x i32> %406, %411
  %413 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %412)
  %414 = icmp eq i64 %377, %381
  br i1 %414, label %427, label %415

415:                                              ; preds = %368, %409
  %416 = phi i64 [ %371, %368 ], [ %382, %409 ]
  %417 = phi i32 [ 1, %368 ], [ %413, %409 ]
  br label %418

418:                                              ; preds = %415, %418
  %419 = phi i64 [ %424, %418 ], [ %416, %415 ]
  %420 = phi i32 [ %423, %418 ], [ %417, %415 ]
  %421 = getelementptr inbounds i32, ptr %9, i64 %419
  %422 = load i32, ptr %421, align 4, !tbaa !5
  %423 = mul nsw i32 %422, %420
  %424 = add nsw i64 %419, -1
  %425 = trunc i64 %419 to i32
  %426 = icmp sgt i32 %425, 0
  br i1 %426, label %418, label %427, !llvm.loop !215

427:                                              ; preds = %418, %409
  %428 = phi i32 [ %413, %409 ], [ %423, %418 ]
  %429 = and i64 %378, 4294967295
  %430 = getelementptr inbounds i32, ptr %6, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !5
  %432 = mul nsw i32 %431, %428
  %433 = add nsw i32 %432, %372
  %434 = icmp sgt i64 %370, 2
  %435 = add nsw i64 %371, -1
  %436 = add i32 %369, 1
  br i1 %434, label %368, label %437, !llvm.loop !216

437:                                              ; preds = %427, %364
  %438 = phi i32 [ %367, %364 ], [ %433, %427 ]
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i32, ptr %24, i64 %439
  %441 = load i32, ptr %440, align 4, !tbaa !5
  %442 = load i8, ptr %26, align 1, !tbaa !11
  %443 = zext i8 %442 to i32
  %444 = and i32 %441, 255
  %445 = tail call i32 @llvm.umax.i32(i32 %444, i32 %443)
  %446 = trunc i32 %445 to i8
  store i8 %446, ptr %26, align 1, !tbaa !11
  %447 = fadd fast double %366, 1.000000e+00
  %448 = add nuw nsw i32 %365, 1
  br i1 %358, label %449, label %496

449:                                              ; preds = %437
  %450 = load i32, ptr %4, align 4, !tbaa !5
  %451 = load i32, ptr %12, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %450, %452
  br i1 %453, label %473, label %454

454:                                              ; preds = %449
  %455 = icmp eq i32 %450, %452
  br i1 %455, label %456, label %489

456:                                              ; preds = %454
  store i32 0, ptr %4, align 4, !tbaa !5
  %457 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %457, ptr %6, align 4, !tbaa !5
  br i1 %363, label %496, label %458

458:                                              ; preds = %456, %483
  %459 = phi i64 [ %487, %483 ], [ 1, %456 ]
  %460 = getelementptr inbounds i32, ptr %4, i64 %459
  %461 = load i32, ptr %460, align 4, !tbaa !5
  %462 = getelementptr inbounds i32, ptr %12, i64 %459
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = add nsw i32 %463, -1
  %465 = icmp slt i32 %461, %464
  br i1 %465, label %466, label %481

466:                                              ; preds = %458
  br i1 %453, label %473, label %467

467:                                              ; preds = %466
  %468 = getelementptr inbounds i32, ptr %7, i64 %459
  %469 = load i32, ptr %468, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %6, i64 %459
  %471 = load i32, ptr %470, align 4, !tbaa !5
  %472 = add nsw i32 %471, %469
  store i32 %472, ptr %470, align 4, !tbaa !5
  br label %491

473:                                              ; preds = %449, %466
  %474 = phi i32 [ %461, %466 ], [ %450, %449 ]
  %475 = phi ptr [ %460, %466 ], [ %4, %449 ]
  %476 = phi i64 [ %459, %466 ], [ 0, %449 ]
  %477 = add nsw i32 %474, 1
  store i32 %477, ptr %475, align 4, !tbaa !5
  %478 = getelementptr inbounds i32, ptr %7, i64 %476
  %479 = load i32, ptr %478, align 4, !tbaa !5
  %480 = getelementptr inbounds i32, ptr %6, i64 %476
  br label %491

481:                                              ; preds = %458
  %482 = icmp eq i32 %461, %464
  br i1 %482, label %483, label %489

483:                                              ; preds = %481
  store i32 0, ptr %460, align 4, !tbaa !5
  %484 = getelementptr inbounds i32, ptr %8, i64 %459
  %485 = load i32, ptr %484, align 4, !tbaa !5
  %486 = getelementptr inbounds i32, ptr %6, i64 %459
  store i32 %485, ptr %486, align 4, !tbaa !5
  %487 = add nuw nsw i64 %459, 1
  %488 = icmp eq i64 %487, %361
  br i1 %488, label %496, label %458, !llvm.loop !217

489:                                              ; preds = %454, %481
  %490 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

491:                                              ; preds = %467, %473
  %492 = phi ptr [ %480, %473 ], [ %460, %467 ]
  %493 = phi i32 [ %479, %473 ], [ 1, %467 ]
  %494 = load i32, ptr %492, align 4, !tbaa !5
  %495 = add nsw i32 %494, %493
  store i32 %495, ptr %492, align 4, !tbaa !5
  br label %496

496:                                              ; preds = %483, %491, %456, %437
  %497 = icmp eq i32 %448, %5
  br i1 %497, label %5630, label %364, !llvm.loop !218

498:                                              ; preds = %347, %635
  %499 = phi i32 [ 0, %347 ], [ %584, %635 ]
  %500 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %348, label %501, label %570

501:                                              ; preds = %498, %560
  %502 = phi i32 [ %569, %560 ], [ 0, %498 ]
  %503 = phi i64 [ %511, %560 ], [ %352, %498 ]
  %504 = phi i64 [ %568, %560 ], [ %351, %498 ]
  %505 = phi i32 [ %566, %560 ], [ %500, %498 ]
  %506 = sub i32 %350, %502
  %507 = tail call i32 @llvm.smin.i32(i32 %506, i32 0)
  %508 = sub i32 %506, %507
  %509 = zext i32 %508 to i64
  %510 = add nuw nsw i64 %509, 1
  %511 = add nsw i64 %503, -1
  %512 = icmp ult i32 %508, 31
  br i1 %512, label %548, label %513

513:                                              ; preds = %501
  %514 = and i64 %510, 8589934560
  %515 = sub i64 %504, %514
  br label %516

516:                                              ; preds = %516, %513
  %517 = phi i64 [ 0, %513 ], [ %540, %516 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %536, %516 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %537, %516 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %538, %516 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %539, %516 ]
  %522 = sub i64 %504, %517
  %523 = getelementptr inbounds i32, ptr %11, i64 %522
  %524 = getelementptr inbounds i32, ptr %523, i64 -7
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %523, i64 -15
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !5
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %523, i64 -23
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !5
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %523, i64 -31
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !5
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = mul <8 x i32> %526, %518
  %537 = mul <8 x i32> %529, %519
  %538 = mul <8 x i32> %532, %520
  %539 = mul <8 x i32> %535, %521
  %540 = add nuw i64 %517, 32
  %541 = icmp eq i64 %540, %514
  br i1 %541, label %542, label %516, !llvm.loop !219

542:                                              ; preds = %516
  %543 = mul <8 x i32> %537, %536
  %544 = mul <8 x i32> %538, %543
  %545 = mul <8 x i32> %539, %544
  %546 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %545)
  %547 = icmp eq i64 %510, %514
  br i1 %547, label %560, label %548

548:                                              ; preds = %501, %542
  %549 = phi i64 [ %504, %501 ], [ %515, %542 ]
  %550 = phi i32 [ 1, %501 ], [ %546, %542 ]
  br label %551

551:                                              ; preds = %548, %551
  %552 = phi i64 [ %557, %551 ], [ %549, %548 ]
  %553 = phi i32 [ %556, %551 ], [ %550, %548 ]
  %554 = getelementptr inbounds i32, ptr %11, i64 %552
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %553
  %557 = add nsw i64 %552, -1
  %558 = trunc i64 %552 to i32
  %559 = icmp sgt i32 %558, 0
  br i1 %559, label %551, label %560, !llvm.loop !220

560:                                              ; preds = %551, %542
  %561 = phi i32 [ %546, %542 ], [ %556, %551 ]
  %562 = and i64 %511, 4294967295
  %563 = getelementptr inbounds i32, ptr %6, i64 %562
  %564 = load i32, ptr %563, align 4, !tbaa !5
  %565 = mul nsw i32 %564, %561
  %566 = add nsw i32 %565, %505
  %567 = icmp sgt i64 %503, 2
  %568 = add nsw i64 %504, -1
  %569 = add i32 %502, 1
  br i1 %567, label %501, label %570, !llvm.loop !221

570:                                              ; preds = %560, %498
  %571 = phi i32 [ %500, %498 ], [ %566, %560 ]
  %572 = icmp slt i32 %571, %5
  br i1 %572, label %575, label %573

573:                                              ; preds = %570
  %574 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

575:                                              ; preds = %570
  %576 = sext i32 %571 to i64
  %577 = getelementptr inbounds i32, ptr %24, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = load i8, ptr %26, align 1, !tbaa !11
  %580 = zext i8 %579 to i32
  %581 = and i32 %578, 255
  %582 = tail call i32 @llvm.umax.i32(i32 %581, i32 %580)
  %583 = trunc i32 %582 to i8
  store i8 %583, ptr %26, align 1, !tbaa !11
  %584 = add nuw nsw i32 %499, 1
  br i1 %349, label %585, label %635

585:                                              ; preds = %575
  %586 = load i32, ptr %4, align 4, !tbaa !5
  %587 = load i32, ptr %12, align 4, !tbaa !5
  %588 = add nsw i32 %587, -1
  %589 = icmp slt i32 %586, %588
  br i1 %589, label %612, label %590

590:                                              ; preds = %585
  %591 = icmp eq i32 %586, %588
  br i1 %591, label %592, label %628

592:                                              ; preds = %590
  store i32 0, ptr %4, align 4, !tbaa !5
  %593 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %593, ptr %6, align 4, !tbaa !5
  br i1 %354, label %635, label %594

594:                                              ; preds = %592, %622
  %595 = phi i64 [ %626, %622 ], [ 1, %592 ]
  %596 = getelementptr inbounds i32, ptr %4, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %12, i64 %595
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %597, %600
  br i1 %601, label %602, label %620

602:                                              ; preds = %594
  br i1 %589, label %612, label %603

603:                                              ; preds = %602
  %604 = shl i64 %595, 32
  %605 = add i64 %604, -4294967296
  %606 = ashr exact i64 %605, 32
  %607 = getelementptr inbounds i32, ptr %7, i64 %606
  %608 = load i32, ptr %607, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %6, i64 %595
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = add nsw i32 %610, %608
  store i32 %611, ptr %609, align 4, !tbaa !5
  br label %630

612:                                              ; preds = %585, %602
  %613 = phi i32 [ %597, %602 ], [ %586, %585 ]
  %614 = phi ptr [ %596, %602 ], [ %4, %585 ]
  %615 = phi i64 [ %595, %602 ], [ 0, %585 ]
  %616 = add nsw i32 %613, 1
  store i32 %616, ptr %614, align 4, !tbaa !5
  %617 = getelementptr inbounds i32, ptr %7, i64 %615
  %618 = load i32, ptr %617, align 4, !tbaa !5
  %619 = getelementptr inbounds i32, ptr %6, i64 %615
  br label %630

620:                                              ; preds = %594
  %621 = icmp eq i32 %597, %600
  br i1 %621, label %622, label %628

622:                                              ; preds = %620
  store i32 0, ptr %596, align 4, !tbaa !5
  %623 = getelementptr inbounds i32, ptr %8, i64 %595
  %624 = load i32, ptr %623, align 4, !tbaa !5
  %625 = getelementptr inbounds i32, ptr %6, i64 %595
  store i32 %624, ptr %625, align 4, !tbaa !5
  %626 = add nuw nsw i64 %595, 1
  %627 = icmp eq i64 %626, %352
  br i1 %627, label %635, label %594, !llvm.loop !222

628:                                              ; preds = %590, %620
  %629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

630:                                              ; preds = %603, %612
  %631 = phi ptr [ %619, %612 ], [ %596, %603 ]
  %632 = phi i32 [ %618, %612 ], [ 1, %603 ]
  %633 = load i32, ptr %631, align 4, !tbaa !5
  %634 = add nsw i32 %633, %632
  store i32 %634, ptr %631, align 4, !tbaa !5
  br label %635

635:                                              ; preds = %622, %630, %592, %575
  %636 = icmp eq i32 %584, %5
  br i1 %636, label %5630, label %498, !llvm.loop !223

637:                                              ; preds = %34
  %638 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 373, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

639:                                              ; preds = %18
  %640 = getelementptr inbounds ptr, ptr %14, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !9
  %642 = getelementptr inbounds ptr, ptr %16, i64 %19
  %643 = load ptr, ptr %642, align 8, !tbaa !9
  store i32 0, ptr %643, align 4, !tbaa !5
  %644 = icmp eq i32 %13, 0
  br i1 %644, label %645, label %650

645:                                              ; preds = %639
  %646 = load i32, ptr %641, align 4, !tbaa !5
  %647 = icmp eq i32 %646, 0
  %648 = tail call i32 @llvm.abs.i32(i32 %646, i1 true)
  %649 = select i1 %647, i32 0, i32 %648
  store i32 %649, ptr %643, align 4, !tbaa !5
  br label %5630

650:                                              ; preds = %639
  switch i32 %1, label %1251 [
    i32 1, label %651
    i32 0, label %959
  ]

651:                                              ; preds = %650
  %652 = getelementptr inbounds i32, ptr %3, i64 %19
  %653 = load i32, ptr %652, align 4, !tbaa !5
  %654 = icmp eq i32 %653, 0
  %655 = icmp sgt i32 %5, 0
  br i1 %654, label %665, label %656

656:                                              ; preds = %651
  br i1 %655, label %657, label %5630

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %816

665:                                              ; preds = %651
  br i1 %655, label %666, label %5630

666:                                              ; preds = %665
  %667 = icmp sgt i32 %13, 1
  %668 = icmp sgt i32 %13, 0
  %669 = add i32 %13, -2
  %670 = zext i32 %669 to i64
  %671 = zext i32 %13 to i64
  %672 = add nuw i32 %5, 1
  %673 = icmp eq i32 %13, 1
  br label %674

674:                                              ; preds = %666, %814
  %675 = phi i32 [ 0, %666 ], [ %766, %814 ]
  %676 = phi double [ 0.000000e+00, %666 ], [ %765, %814 ]
  %677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %667, label %678, label %747

678:                                              ; preds = %674, %737
  %679 = phi i32 [ %746, %737 ], [ 0, %674 ]
  %680 = phi i64 [ %688, %737 ], [ %671, %674 ]
  %681 = phi i64 [ %745, %737 ], [ %670, %674 ]
  %682 = phi i32 [ %743, %737 ], [ %677, %674 ]
  %683 = sub i32 %669, %679
  %684 = tail call i32 @llvm.smin.i32(i32 %683, i32 0)
  %685 = sub i32 %683, %684
  %686 = zext i32 %685 to i64
  %687 = add nuw nsw i64 %686, 1
  %688 = add nsw i64 %680, -1
  %689 = icmp ult i32 %685, 31
  br i1 %689, label %725, label %690

690:                                              ; preds = %678
  %691 = and i64 %687, 8589934560
  %692 = sub i64 %681, %691
  br label %693

693:                                              ; preds = %693, %690
  %694 = phi i64 [ 0, %690 ], [ %717, %693 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %713, %693 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %714, %693 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %715, %693 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %716, %693 ]
  %699 = sub i64 %681, %694
  %700 = getelementptr inbounds i32, ptr %9, i64 %699
  %701 = getelementptr inbounds i32, ptr %700, i64 -7
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %700, i64 -15
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %700, i64 -23
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !5
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %700, i64 -31
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !5
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = mul <8 x i32> %703, %695
  %714 = mul <8 x i32> %706, %696
  %715 = mul <8 x i32> %709, %697
  %716 = mul <8 x i32> %712, %698
  %717 = add nuw i64 %694, 32
  %718 = icmp eq i64 %717, %691
  br i1 %718, label %719, label %693, !llvm.loop !224

719:                                              ; preds = %693
  %720 = mul <8 x i32> %714, %713
  %721 = mul <8 x i32> %715, %720
  %722 = mul <8 x i32> %716, %721
  %723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %722)
  %724 = icmp eq i64 %687, %691
  br i1 %724, label %737, label %725

725:                                              ; preds = %678, %719
  %726 = phi i64 [ %681, %678 ], [ %692, %719 ]
  %727 = phi i32 [ 1, %678 ], [ %723, %719 ]
  br label %728

728:                                              ; preds = %725, %728
  %729 = phi i64 [ %734, %728 ], [ %726, %725 ]
  %730 = phi i32 [ %733, %728 ], [ %727, %725 ]
  %731 = getelementptr inbounds i32, ptr %9, i64 %729
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %730
  %734 = add nsw i64 %729, -1
  %735 = trunc i64 %729 to i32
  %736 = icmp sgt i32 %735, 0
  br i1 %736, label %728, label %737, !llvm.loop !225

737:                                              ; preds = %728, %719
  %738 = phi i32 [ %723, %719 ], [ %733, %728 ]
  %739 = and i64 %688, 4294967295
  %740 = getelementptr inbounds i32, ptr %6, i64 %739
  %741 = load i32, ptr %740, align 4, !tbaa !5
  %742 = mul nsw i32 %741, %738
  %743 = add nsw i32 %742, %682
  %744 = icmp sgt i64 %680, 2
  %745 = add nsw i64 %681, -1
  %746 = add i32 %679, 1
  br i1 %744, label %678, label %747, !llvm.loop !226

747:                                              ; preds = %737, %674
  %748 = phi i32 [ %677, %674 ], [ %743, %737 ]
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %2, i64 %749
  %751 = load double, ptr %750, align 8, !tbaa !18
  %752 = getelementptr inbounds i32, ptr %641, i64 %749
  %753 = load i32, ptr %752, align 4, !tbaa !5
  %754 = load i32, ptr %643, align 4, !tbaa !5
  %755 = sitofp i32 %754 to double
  %756 = sitofp i32 %753 to double
  %757 = fmul fast double %751, %756
  %758 = fcmp fast uge double %757, 0.000000e+00
  %759 = fneg fast double %757
  %760 = tail call fast double @llvm.fabs.f64(double %757)
  %761 = fcmp fast ole double %760, %755
  %762 = select nnan ninf i1 %758, double %757, double %759
  %763 = select i1 %761, double %755, double %762
  %764 = fptosi double %763 to i32
  store i32 %764, ptr %643, align 4, !tbaa !5
  %765 = fadd fast double %751, %676
  %766 = add nuw nsw i32 %675, 1
  br i1 %668, label %767, label %814

767:                                              ; preds = %747
  %768 = load i32, ptr %4, align 4, !tbaa !5
  %769 = load i32, ptr %12, align 4, !tbaa !5
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %768, %770
  br i1 %771, label %791, label %772

772:                                              ; preds = %767
  %773 = icmp eq i32 %768, %770
  br i1 %773, label %774, label %807

774:                                              ; preds = %772
  store i32 0, ptr %4, align 4, !tbaa !5
  %775 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %775, ptr %6, align 4, !tbaa !5
  br i1 %673, label %814, label %776

776:                                              ; preds = %774, %801
  %777 = phi i64 [ %805, %801 ], [ 1, %774 ]
  %778 = getelementptr inbounds i32, ptr %4, i64 %777
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %12, i64 %777
  %781 = load i32, ptr %780, align 4, !tbaa !5
  %782 = add nsw i32 %781, -1
  %783 = icmp slt i32 %779, %782
  br i1 %783, label %784, label %799

784:                                              ; preds = %776
  br i1 %771, label %791, label %785

785:                                              ; preds = %784
  %786 = getelementptr inbounds i32, ptr %7, i64 %777
  %787 = load i32, ptr %786, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %6, i64 %777
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = add nsw i32 %789, %787
  store i32 %790, ptr %788, align 4, !tbaa !5
  br label %809

791:                                              ; preds = %767, %784
  %792 = phi i32 [ %779, %784 ], [ %768, %767 ]
  %793 = phi ptr [ %778, %784 ], [ %4, %767 ]
  %794 = phi i64 [ %777, %784 ], [ 0, %767 ]
  %795 = add nsw i32 %792, 1
  store i32 %795, ptr %793, align 4, !tbaa !5
  %796 = getelementptr inbounds i32, ptr %7, i64 %794
  %797 = load i32, ptr %796, align 4, !tbaa !5
  %798 = getelementptr inbounds i32, ptr %6, i64 %794
  br label %809

799:                                              ; preds = %776
  %800 = icmp eq i32 %779, %782
  br i1 %800, label %801, label %807

801:                                              ; preds = %799
  store i32 0, ptr %778, align 4, !tbaa !5
  %802 = getelementptr inbounds i32, ptr %8, i64 %777
  %803 = load i32, ptr %802, align 4, !tbaa !5
  %804 = getelementptr inbounds i32, ptr %6, i64 %777
  store i32 %803, ptr %804, align 4, !tbaa !5
  %805 = add nuw nsw i64 %777, 1
  %806 = icmp eq i64 %805, %671
  br i1 %806, label %814, label %776, !llvm.loop !227

807:                                              ; preds = %772, %799
  %808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

809:                                              ; preds = %785, %791
  %810 = phi ptr [ %798, %791 ], [ %778, %785 ]
  %811 = phi i32 [ %797, %791 ], [ 1, %785 ]
  %812 = load i32, ptr %810, align 4, !tbaa !5
  %813 = add nsw i32 %812, %811
  store i32 %813, ptr %810, align 4, !tbaa !5
  br label %814

814:                                              ; preds = %801, %809, %774, %747
  %815 = icmp eq i32 %766, %5
  br i1 %815, label %5630, label %674, !llvm.loop !228

816:                                              ; preds = %657, %957
  %817 = phi i32 [ 0, %657 ], [ %906, %957 ]
  %818 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %658, label %819, label %888

819:                                              ; preds = %816, %878
  %820 = phi i32 [ %887, %878 ], [ 0, %816 ]
  %821 = phi i64 [ %829, %878 ], [ %662, %816 ]
  %822 = phi i64 [ %886, %878 ], [ %661, %816 ]
  %823 = phi i32 [ %884, %878 ], [ %818, %816 ]
  %824 = sub i32 %660, %820
  %825 = tail call i32 @llvm.smin.i32(i32 %824, i32 0)
  %826 = sub i32 %824, %825
  %827 = zext i32 %826 to i64
  %828 = add nuw nsw i64 %827, 1
  %829 = add nsw i64 %821, -1
  %830 = icmp ult i32 %826, 31
  br i1 %830, label %866, label %831

831:                                              ; preds = %819
  %832 = and i64 %828, 8589934560
  %833 = sub i64 %822, %832
  br label %834

834:                                              ; preds = %834, %831
  %835 = phi i64 [ 0, %831 ], [ %858, %834 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %854, %834 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %855, %834 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %856, %834 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %857, %834 ]
  %840 = sub i64 %822, %835
  %841 = getelementptr inbounds i32, ptr %11, i64 %840
  %842 = getelementptr inbounds i32, ptr %841, i64 -7
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !5
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %841, i64 -15
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !5
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = getelementptr inbounds i32, ptr %841, i64 -23
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !5
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %841, i64 -31
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !5
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = mul <8 x i32> %844, %836
  %855 = mul <8 x i32> %847, %837
  %856 = mul <8 x i32> %850, %838
  %857 = mul <8 x i32> %853, %839
  %858 = add nuw i64 %835, 32
  %859 = icmp eq i64 %858, %832
  br i1 %859, label %860, label %834, !llvm.loop !229

860:                                              ; preds = %834
  %861 = mul <8 x i32> %855, %854
  %862 = mul <8 x i32> %856, %861
  %863 = mul <8 x i32> %857, %862
  %864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %863)
  %865 = icmp eq i64 %828, %832
  br i1 %865, label %878, label %866

866:                                              ; preds = %819, %860
  %867 = phi i64 [ %822, %819 ], [ %833, %860 ]
  %868 = phi i32 [ 1, %819 ], [ %864, %860 ]
  br label %869

869:                                              ; preds = %866, %869
  %870 = phi i64 [ %875, %869 ], [ %867, %866 ]
  %871 = phi i32 [ %874, %869 ], [ %868, %866 ]
  %872 = getelementptr inbounds i32, ptr %11, i64 %870
  %873 = load i32, ptr %872, align 4, !tbaa !5
  %874 = mul nsw i32 %873, %871
  %875 = add nsw i64 %870, -1
  %876 = trunc i64 %870 to i32
  %877 = icmp sgt i32 %876, 0
  br i1 %877, label %869, label %878, !llvm.loop !230

878:                                              ; preds = %869, %860
  %879 = phi i32 [ %864, %860 ], [ %874, %869 ]
  %880 = and i64 %829, 4294967295
  %881 = getelementptr inbounds i32, ptr %6, i64 %880
  %882 = load i32, ptr %881, align 4, !tbaa !5
  %883 = mul nsw i32 %882, %879
  %884 = add nsw i32 %883, %823
  %885 = icmp sgt i64 %821, 2
  %886 = add nsw i64 %822, -1
  %887 = add i32 %820, 1
  br i1 %885, label %819, label %888, !llvm.loop !231

888:                                              ; preds = %878, %816
  %889 = phi i32 [ %818, %816 ], [ %884, %878 ]
  %890 = icmp slt i32 %889, %5
  br i1 %890, label %893, label %891

891:                                              ; preds = %888
  %892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

893:                                              ; preds = %888
  %894 = sext i32 %889 to i64
  %895 = getelementptr inbounds i32, ptr %641, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = load i32, ptr %643, align 4, !tbaa !5
  %898 = sitofp i32 %897 to double
  %899 = sitofp i32 %896 to double
  %900 = icmp slt i32 %896, 0
  %901 = fneg fast double %899
  %902 = select i1 %900, double %901, double %899
  %903 = fcmp fast ole double %902, %898
  %904 = select fast i1 %903, double %898, double %902
  %905 = fptosi double %904 to i32
  store i32 %905, ptr %643, align 4, !tbaa !5
  %906 = add nuw nsw i32 %817, 1
  br i1 %659, label %907, label %957

907:                                              ; preds = %893
  %908 = load i32, ptr %4, align 4, !tbaa !5
  %909 = load i32, ptr %12, align 4, !tbaa !5
  %910 = add nsw i32 %909, -1
  %911 = icmp slt i32 %908, %910
  br i1 %911, label %934, label %912

912:                                              ; preds = %907
  %913 = icmp eq i32 %908, %910
  br i1 %913, label %914, label %950

914:                                              ; preds = %912
  store i32 0, ptr %4, align 4, !tbaa !5
  %915 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %915, ptr %6, align 4, !tbaa !5
  br i1 %664, label %957, label %916

916:                                              ; preds = %914, %944
  %917 = phi i64 [ %948, %944 ], [ 1, %914 ]
  %918 = getelementptr inbounds i32, ptr %4, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %12, i64 %917
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = add nsw i32 %921, -1
  %923 = icmp slt i32 %919, %922
  br i1 %923, label %924, label %942

924:                                              ; preds = %916
  br i1 %911, label %934, label %925

925:                                              ; preds = %924
  %926 = shl i64 %917, 32
  %927 = add i64 %926, -4294967296
  %928 = ashr exact i64 %927, 32
  %929 = getelementptr inbounds i32, ptr %7, i64 %928
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %917
  %932 = load i32, ptr %931, align 4, !tbaa !5
  %933 = add nsw i32 %932, %930
  store i32 %933, ptr %931, align 4, !tbaa !5
  br label %952

934:                                              ; preds = %907, %924
  %935 = phi i32 [ %919, %924 ], [ %908, %907 ]
  %936 = phi ptr [ %918, %924 ], [ %4, %907 ]
  %937 = phi i64 [ %917, %924 ], [ 0, %907 ]
  %938 = add nsw i32 %935, 1
  store i32 %938, ptr %936, align 4, !tbaa !5
  %939 = getelementptr inbounds i32, ptr %7, i64 %937
  %940 = load i32, ptr %939, align 4, !tbaa !5
  %941 = getelementptr inbounds i32, ptr %6, i64 %937
  br label %952

942:                                              ; preds = %916
  %943 = icmp eq i32 %919, %922
  br i1 %943, label %944, label %950

944:                                              ; preds = %942
  store i32 0, ptr %918, align 4, !tbaa !5
  %945 = getelementptr inbounds i32, ptr %8, i64 %917
  %946 = load i32, ptr %945, align 4, !tbaa !5
  %947 = getelementptr inbounds i32, ptr %6, i64 %917
  store i32 %946, ptr %947, align 4, !tbaa !5
  %948 = add nuw nsw i64 %917, 1
  %949 = icmp eq i64 %948, %662
  br i1 %949, label %957, label %916, !llvm.loop !232

950:                                              ; preds = %912, %942
  %951 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

952:                                              ; preds = %925, %934
  %953 = phi ptr [ %941, %934 ], [ %918, %925 ]
  %954 = phi i32 [ %940, %934 ], [ 1, %925 ]
  %955 = load i32, ptr %953, align 4, !tbaa !5
  %956 = add nsw i32 %955, %954
  store i32 %956, ptr %953, align 4, !tbaa !5
  br label %957

957:                                              ; preds = %944, %952, %914, %893
  %958 = icmp eq i32 %906, %5
  br i1 %958, label %5630, label %816, !llvm.loop !233

959:                                              ; preds = %650
  %960 = getelementptr inbounds i32, ptr %3, i64 %19
  %961 = load i32, ptr %960, align 4, !tbaa !5
  %962 = icmp eq i32 %961, 0
  %963 = icmp sgt i32 %5, 0
  br i1 %962, label %973, label %964

964:                                              ; preds = %959
  br i1 %963, label %965, label %5630

965:                                              ; preds = %964
  %966 = icmp sgt i32 %13, 1
  %967 = icmp sgt i32 %13, 0
  %968 = add i32 %13, -2
  %969 = zext i32 %968 to i64
  %970 = zext i32 %13 to i64
  %971 = add nuw i32 %5, 1
  %972 = icmp eq i32 %13, 1
  br label %1114

973:                                              ; preds = %959
  br i1 %963, label %974, label %5630

974:                                              ; preds = %973
  %975 = icmp sgt i32 %13, 1
  %976 = icmp sgt i32 %13, 0
  %977 = add i32 %13, -2
  %978 = zext i32 %977 to i64
  %979 = zext i32 %13 to i64
  %980 = add nuw i32 %5, 1
  %981 = icmp eq i32 %13, 1
  br label %982

982:                                              ; preds = %974, %1112
  %983 = phi i32 [ 0, %974 ], [ %1064, %1112 ]
  %984 = phi double [ 0.000000e+00, %974 ], [ %1063, %1112 ]
  %985 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %975, label %986, label %1055

986:                                              ; preds = %982, %1045
  %987 = phi i32 [ %1054, %1045 ], [ 0, %982 ]
  %988 = phi i64 [ %996, %1045 ], [ %979, %982 ]
  %989 = phi i64 [ %1053, %1045 ], [ %978, %982 ]
  %990 = phi i32 [ %1051, %1045 ], [ %985, %982 ]
  %991 = sub i32 %977, %987
  %992 = tail call i32 @llvm.smin.i32(i32 %991, i32 0)
  %993 = sub i32 %991, %992
  %994 = zext i32 %993 to i64
  %995 = add nuw nsw i64 %994, 1
  %996 = add nsw i64 %988, -1
  %997 = icmp ult i32 %993, 31
  br i1 %997, label %1033, label %998

998:                                              ; preds = %986
  %999 = and i64 %995, 8589934560
  %1000 = sub i64 %989, %999
  br label %1001

1001:                                             ; preds = %1001, %998
  %1002 = phi i64 [ 0, %998 ], [ %1025, %1001 ]
  %1003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1021, %1001 ]
  %1004 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1022, %1001 ]
  %1005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1023, %1001 ]
  %1006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1024, %1001 ]
  %1007 = sub i64 %989, %1002
  %1008 = getelementptr inbounds i32, ptr %9, i64 %1007
  %1009 = getelementptr inbounds i32, ptr %1008, i64 -7
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !5
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1008, i64 -15
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !5
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = getelementptr inbounds i32, ptr %1008, i64 -23
  %1016 = load <8 x i32>, ptr %1015, align 4, !tbaa !5
  %1017 = shufflevector <8 x i32> %1016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1018 = getelementptr inbounds i32, ptr %1008, i64 -31
  %1019 = load <8 x i32>, ptr %1018, align 4, !tbaa !5
  %1020 = shufflevector <8 x i32> %1019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1021 = mul <8 x i32> %1011, %1003
  %1022 = mul <8 x i32> %1014, %1004
  %1023 = mul <8 x i32> %1017, %1005
  %1024 = mul <8 x i32> %1020, %1006
  %1025 = add nuw i64 %1002, 32
  %1026 = icmp eq i64 %1025, %999
  br i1 %1026, label %1027, label %1001, !llvm.loop !234

1027:                                             ; preds = %1001
  %1028 = mul <8 x i32> %1022, %1021
  %1029 = mul <8 x i32> %1023, %1028
  %1030 = mul <8 x i32> %1024, %1029
  %1031 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1030)
  %1032 = icmp eq i64 %995, %999
  br i1 %1032, label %1045, label %1033

1033:                                             ; preds = %986, %1027
  %1034 = phi i64 [ %989, %986 ], [ %1000, %1027 ]
  %1035 = phi i32 [ 1, %986 ], [ %1031, %1027 ]
  br label %1036

1036:                                             ; preds = %1033, %1036
  %1037 = phi i64 [ %1042, %1036 ], [ %1034, %1033 ]
  %1038 = phi i32 [ %1041, %1036 ], [ %1035, %1033 ]
  %1039 = getelementptr inbounds i32, ptr %9, i64 %1037
  %1040 = load i32, ptr %1039, align 4, !tbaa !5
  %1041 = mul nsw i32 %1040, %1038
  %1042 = add nsw i64 %1037, -1
  %1043 = trunc i64 %1037 to i32
  %1044 = icmp sgt i32 %1043, 0
  br i1 %1044, label %1036, label %1045, !llvm.loop !235

1045:                                             ; preds = %1036, %1027
  %1046 = phi i32 [ %1031, %1027 ], [ %1041, %1036 ]
  %1047 = and i64 %996, 4294967295
  %1048 = getelementptr inbounds i32, ptr %6, i64 %1047
  %1049 = load i32, ptr %1048, align 4, !tbaa !5
  %1050 = mul nsw i32 %1049, %1046
  %1051 = add nsw i32 %1050, %990
  %1052 = icmp sgt i64 %988, 2
  %1053 = add nsw i64 %989, -1
  %1054 = add i32 %987, 1
  br i1 %1052, label %986, label %1055, !llvm.loop !236

1055:                                             ; preds = %1045, %982
  %1056 = phi i32 [ %985, %982 ], [ %1051, %1045 ]
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i32, ptr %641, i64 %1057
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = load i32, ptr %643, align 4, !tbaa !5
  %1061 = tail call i32 @llvm.abs.i32(i32 %1059, i1 true)
  %1062 = tail call i32 @llvm.smax.i32(i32 %1060, i32 %1061)
  store i32 %1062, ptr %643, align 4, !tbaa !5
  %1063 = fadd fast double %984, 1.000000e+00
  %1064 = add nuw nsw i32 %983, 1
  br i1 %976, label %1065, label %1112

1065:                                             ; preds = %1055
  %1066 = load i32, ptr %4, align 4, !tbaa !5
  %1067 = load i32, ptr %12, align 4, !tbaa !5
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1066, %1068
  br i1 %1069, label %1089, label %1070

1070:                                             ; preds = %1065
  %1071 = icmp eq i32 %1066, %1068
  br i1 %1071, label %1072, label %1105

1072:                                             ; preds = %1070
  store i32 0, ptr %4, align 4, !tbaa !5
  %1073 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1073, ptr %6, align 4, !tbaa !5
  br i1 %981, label %1112, label %1074

1074:                                             ; preds = %1072, %1099
  %1075 = phi i64 [ %1103, %1099 ], [ 1, %1072 ]
  %1076 = getelementptr inbounds i32, ptr %4, i64 %1075
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %12, i64 %1075
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = add nsw i32 %1079, -1
  %1081 = icmp slt i32 %1077, %1080
  br i1 %1081, label %1082, label %1097

1082:                                             ; preds = %1074
  br i1 %1069, label %1089, label %1083

1083:                                             ; preds = %1082
  %1084 = getelementptr inbounds i32, ptr %7, i64 %1075
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %6, i64 %1075
  %1087 = load i32, ptr %1086, align 4, !tbaa !5
  %1088 = add nsw i32 %1087, %1085
  store i32 %1088, ptr %1086, align 4, !tbaa !5
  br label %1107

1089:                                             ; preds = %1065, %1082
  %1090 = phi i32 [ %1077, %1082 ], [ %1066, %1065 ]
  %1091 = phi ptr [ %1076, %1082 ], [ %4, %1065 ]
  %1092 = phi i64 [ %1075, %1082 ], [ 0, %1065 ]
  %1093 = add nsw i32 %1090, 1
  store i32 %1093, ptr %1091, align 4, !tbaa !5
  %1094 = getelementptr inbounds i32, ptr %7, i64 %1092
  %1095 = load i32, ptr %1094, align 4, !tbaa !5
  %1096 = getelementptr inbounds i32, ptr %6, i64 %1092
  br label %1107

1097:                                             ; preds = %1074
  %1098 = icmp eq i32 %1077, %1080
  br i1 %1098, label %1099, label %1105

1099:                                             ; preds = %1097
  store i32 0, ptr %1076, align 4, !tbaa !5
  %1100 = getelementptr inbounds i32, ptr %8, i64 %1075
  %1101 = load i32, ptr %1100, align 4, !tbaa !5
  %1102 = getelementptr inbounds i32, ptr %6, i64 %1075
  store i32 %1101, ptr %1102, align 4, !tbaa !5
  %1103 = add nuw nsw i64 %1075, 1
  %1104 = icmp eq i64 %1103, %979
  br i1 %1104, label %1112, label %1074, !llvm.loop !237

1105:                                             ; preds = %1070, %1097
  %1106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1107:                                             ; preds = %1083, %1089
  %1108 = phi ptr [ %1096, %1089 ], [ %1076, %1083 ]
  %1109 = phi i32 [ %1095, %1089 ], [ 1, %1083 ]
  %1110 = load i32, ptr %1108, align 4, !tbaa !5
  %1111 = add nsw i32 %1110, %1109
  store i32 %1111, ptr %1108, align 4, !tbaa !5
  br label %1112

1112:                                             ; preds = %1099, %1107, %1072, %1055
  %1113 = icmp eq i32 %1064, %5
  br i1 %1113, label %5630, label %982, !llvm.loop !238

1114:                                             ; preds = %965, %1249
  %1115 = phi i32 [ 0, %965 ], [ %1198, %1249 ]
  %1116 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %966, label %1117, label %1186

1117:                                             ; preds = %1114, %1176
  %1118 = phi i32 [ %1185, %1176 ], [ 0, %1114 ]
  %1119 = phi i64 [ %1127, %1176 ], [ %970, %1114 ]
  %1120 = phi i64 [ %1184, %1176 ], [ %969, %1114 ]
  %1121 = phi i32 [ %1182, %1176 ], [ %1116, %1114 ]
  %1122 = sub i32 %968, %1118
  %1123 = tail call i32 @llvm.smin.i32(i32 %1122, i32 0)
  %1124 = sub i32 %1122, %1123
  %1125 = zext i32 %1124 to i64
  %1126 = add nuw nsw i64 %1125, 1
  %1127 = add nsw i64 %1119, -1
  %1128 = icmp ult i32 %1124, 31
  br i1 %1128, label %1164, label %1129

1129:                                             ; preds = %1117
  %1130 = and i64 %1126, 8589934560
  %1131 = sub i64 %1120, %1130
  br label %1132

1132:                                             ; preds = %1132, %1129
  %1133 = phi i64 [ 0, %1129 ], [ %1156, %1132 ]
  %1134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1152, %1132 ]
  %1135 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1153, %1132 ]
  %1136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1154, %1132 ]
  %1137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1155, %1132 ]
  %1138 = sub i64 %1120, %1133
  %1139 = getelementptr inbounds i32, ptr %11, i64 %1138
  %1140 = getelementptr inbounds i32, ptr %1139, i64 -7
  %1141 = load <8 x i32>, ptr %1140, align 4, !tbaa !5
  %1142 = shufflevector <8 x i32> %1141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1143 = getelementptr inbounds i32, ptr %1139, i64 -15
  %1144 = load <8 x i32>, ptr %1143, align 4, !tbaa !5
  %1145 = shufflevector <8 x i32> %1144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1146 = getelementptr inbounds i32, ptr %1139, i64 -23
  %1147 = load <8 x i32>, ptr %1146, align 4, !tbaa !5
  %1148 = shufflevector <8 x i32> %1147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1149 = getelementptr inbounds i32, ptr %1139, i64 -31
  %1150 = load <8 x i32>, ptr %1149, align 4, !tbaa !5
  %1151 = shufflevector <8 x i32> %1150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1152 = mul <8 x i32> %1142, %1134
  %1153 = mul <8 x i32> %1145, %1135
  %1154 = mul <8 x i32> %1148, %1136
  %1155 = mul <8 x i32> %1151, %1137
  %1156 = add nuw i64 %1133, 32
  %1157 = icmp eq i64 %1156, %1130
  br i1 %1157, label %1158, label %1132, !llvm.loop !239

1158:                                             ; preds = %1132
  %1159 = mul <8 x i32> %1153, %1152
  %1160 = mul <8 x i32> %1154, %1159
  %1161 = mul <8 x i32> %1155, %1160
  %1162 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1161)
  %1163 = icmp eq i64 %1126, %1130
  br i1 %1163, label %1176, label %1164

1164:                                             ; preds = %1117, %1158
  %1165 = phi i64 [ %1120, %1117 ], [ %1131, %1158 ]
  %1166 = phi i32 [ 1, %1117 ], [ %1162, %1158 ]
  br label %1167

1167:                                             ; preds = %1164, %1167
  %1168 = phi i64 [ %1173, %1167 ], [ %1165, %1164 ]
  %1169 = phi i32 [ %1172, %1167 ], [ %1166, %1164 ]
  %1170 = getelementptr inbounds i32, ptr %11, i64 %1168
  %1171 = load i32, ptr %1170, align 4, !tbaa !5
  %1172 = mul nsw i32 %1171, %1169
  %1173 = add nsw i64 %1168, -1
  %1174 = trunc i64 %1168 to i32
  %1175 = icmp sgt i32 %1174, 0
  br i1 %1175, label %1167, label %1176, !llvm.loop !240

1176:                                             ; preds = %1167, %1158
  %1177 = phi i32 [ %1162, %1158 ], [ %1172, %1167 ]
  %1178 = and i64 %1127, 4294967295
  %1179 = getelementptr inbounds i32, ptr %6, i64 %1178
  %1180 = load i32, ptr %1179, align 4, !tbaa !5
  %1181 = mul nsw i32 %1180, %1177
  %1182 = add nsw i32 %1181, %1121
  %1183 = icmp sgt i64 %1119, 2
  %1184 = add nsw i64 %1120, -1
  %1185 = add i32 %1118, 1
  br i1 %1183, label %1117, label %1186, !llvm.loop !241

1186:                                             ; preds = %1176, %1114
  %1187 = phi i32 [ %1116, %1114 ], [ %1182, %1176 ]
  %1188 = icmp slt i32 %1187, %5
  br i1 %1188, label %1191, label %1189

1189:                                             ; preds = %1186
  %1190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

1191:                                             ; preds = %1186
  %1192 = sext i32 %1187 to i64
  %1193 = getelementptr inbounds i32, ptr %641, i64 %1192
  %1194 = load i32, ptr %1193, align 4, !tbaa !5
  %1195 = load i32, ptr %643, align 4, !tbaa !5
  %1196 = tail call i32 @llvm.abs.i32(i32 %1194, i1 true)
  %1197 = tail call i32 @llvm.smax.i32(i32 %1195, i32 %1196)
  store i32 %1197, ptr %643, align 4, !tbaa !5
  %1198 = add nuw nsw i32 %1115, 1
  br i1 %967, label %1199, label %1249

1199:                                             ; preds = %1191
  %1200 = load i32, ptr %4, align 4, !tbaa !5
  %1201 = load i32, ptr %12, align 4, !tbaa !5
  %1202 = add nsw i32 %1201, -1
  %1203 = icmp slt i32 %1200, %1202
  br i1 %1203, label %1226, label %1204

1204:                                             ; preds = %1199
  %1205 = icmp eq i32 %1200, %1202
  br i1 %1205, label %1206, label %1242

1206:                                             ; preds = %1204
  store i32 0, ptr %4, align 4, !tbaa !5
  %1207 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1207, ptr %6, align 4, !tbaa !5
  br i1 %972, label %1249, label %1208

1208:                                             ; preds = %1206, %1236
  %1209 = phi i64 [ %1240, %1236 ], [ 1, %1206 ]
  %1210 = getelementptr inbounds i32, ptr %4, i64 %1209
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %12, i64 %1209
  %1213 = load i32, ptr %1212, align 4, !tbaa !5
  %1214 = add nsw i32 %1213, -1
  %1215 = icmp slt i32 %1211, %1214
  br i1 %1215, label %1216, label %1234

1216:                                             ; preds = %1208
  br i1 %1203, label %1226, label %1217

1217:                                             ; preds = %1216
  %1218 = shl i64 %1209, 32
  %1219 = add i64 %1218, -4294967296
  %1220 = ashr exact i64 %1219, 32
  %1221 = getelementptr inbounds i32, ptr %7, i64 %1220
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1209
  %1224 = load i32, ptr %1223, align 4, !tbaa !5
  %1225 = add nsw i32 %1224, %1222
  store i32 %1225, ptr %1223, align 4, !tbaa !5
  br label %1244

1226:                                             ; preds = %1199, %1216
  %1227 = phi i32 [ %1211, %1216 ], [ %1200, %1199 ]
  %1228 = phi ptr [ %1210, %1216 ], [ %4, %1199 ]
  %1229 = phi i64 [ %1209, %1216 ], [ 0, %1199 ]
  %1230 = add nsw i32 %1227, 1
  store i32 %1230, ptr %1228, align 4, !tbaa !5
  %1231 = getelementptr inbounds i32, ptr %7, i64 %1229
  %1232 = load i32, ptr %1231, align 4, !tbaa !5
  %1233 = getelementptr inbounds i32, ptr %6, i64 %1229
  br label %1244

1234:                                             ; preds = %1208
  %1235 = icmp eq i32 %1211, %1214
  br i1 %1235, label %1236, label %1242

1236:                                             ; preds = %1234
  store i32 0, ptr %1210, align 4, !tbaa !5
  %1237 = getelementptr inbounds i32, ptr %8, i64 %1209
  %1238 = load i32, ptr %1237, align 4, !tbaa !5
  %1239 = getelementptr inbounds i32, ptr %6, i64 %1209
  store i32 %1238, ptr %1239, align 4, !tbaa !5
  %1240 = add nuw nsw i64 %1209, 1
  %1241 = icmp eq i64 %1240, %970
  br i1 %1241, label %1249, label %1208, !llvm.loop !242

1242:                                             ; preds = %1204, %1234
  %1243 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1244:                                             ; preds = %1217, %1226
  %1245 = phi ptr [ %1233, %1226 ], [ %1210, %1217 ]
  %1246 = phi i32 [ %1232, %1226 ], [ 1, %1217 ]
  %1247 = load i32, ptr %1245, align 4, !tbaa !5
  %1248 = add nsw i32 %1247, %1246
  store i32 %1248, ptr %1245, align 4, !tbaa !5
  br label %1249

1249:                                             ; preds = %1236, %1244, %1206, %1191
  %1250 = icmp eq i32 %1198, %5
  br i1 %1250, label %5630, label %1114, !llvm.loop !243

1251:                                             ; preds = %650
  %1252 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 376, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

1253:                                             ; preds = %18
  %1254 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !9
  %1256 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1257 = load ptr, ptr %1256, align 8, !tbaa !9
  store i8 0, ptr %1257, align 1, !tbaa !11
  %1258 = icmp eq i32 %13, 0
  br i1 %1258, label %1259, label %1270

1259:                                             ; preds = %1253
  %1260 = load i32, ptr %1255, align 4, !tbaa !5
  %1261 = and i32 %1260, 128
  %1262 = icmp eq i32 %1261, 0
  %1263 = shl i32 %1260, 24
  %1264 = ashr exact i32 %1263, 24
  %1265 = sub nsw i32 0, %1264
  %1266 = select i1 %1262, i32 %1264, i32 %1265
  %1267 = icmp slt i32 %1266, 1
  %1268 = trunc i32 %1266 to i8
  %1269 = select i1 %1267, i8 0, i8 %1268
  store i8 %1269, ptr %1257, align 1, !tbaa !11
  br label %5630

1270:                                             ; preds = %1253
  switch i32 %1, label %1889 [
    i32 1, label %1271
    i32 0, label %1583
  ]

1271:                                             ; preds = %1270
  %1272 = getelementptr inbounds i32, ptr %3, i64 %19
  %1273 = load i32, ptr %1272, align 4, !tbaa !5
  %1274 = icmp eq i32 %1273, 0
  %1275 = icmp sgt i32 %5, 0
  br i1 %1274, label %1285, label %1276

1276:                                             ; preds = %1271
  br i1 %1275, label %1277, label %5630

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1438

1285:                                             ; preds = %1271
  br i1 %1275, label %1286, label %5630

1286:                                             ; preds = %1285
  %1287 = icmp sgt i32 %13, 1
  %1288 = icmp sgt i32 %13, 0
  %1289 = add i32 %13, -2
  %1290 = zext i32 %1289 to i64
  %1291 = zext i32 %13 to i64
  %1292 = add nuw i32 %5, 1
  %1293 = icmp eq i32 %13, 1
  br label %1294

1294:                                             ; preds = %1286, %1436
  %1295 = phi i32 [ 0, %1286 ], [ %1388, %1436 ]
  %1296 = phi double [ 0.000000e+00, %1286 ], [ %1387, %1436 ]
  %1297 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1287, label %1298, label %1367

1298:                                             ; preds = %1294, %1357
  %1299 = phi i32 [ %1366, %1357 ], [ 0, %1294 ]
  %1300 = phi i64 [ %1308, %1357 ], [ %1291, %1294 ]
  %1301 = phi i64 [ %1365, %1357 ], [ %1290, %1294 ]
  %1302 = phi i32 [ %1363, %1357 ], [ %1297, %1294 ]
  %1303 = sub i32 %1289, %1299
  %1304 = tail call i32 @llvm.smin.i32(i32 %1303, i32 0)
  %1305 = sub i32 %1303, %1304
  %1306 = zext i32 %1305 to i64
  %1307 = add nuw nsw i64 %1306, 1
  %1308 = add nsw i64 %1300, -1
  %1309 = icmp ult i32 %1305, 31
  br i1 %1309, label %1345, label %1310

1310:                                             ; preds = %1298
  %1311 = and i64 %1307, 8589934560
  %1312 = sub i64 %1301, %1311
  br label %1313

1313:                                             ; preds = %1313, %1310
  %1314 = phi i64 [ 0, %1310 ], [ %1337, %1313 ]
  %1315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1333, %1313 ]
  %1316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1334, %1313 ]
  %1317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1335, %1313 ]
  %1318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1336, %1313 ]
  %1319 = sub i64 %1301, %1314
  %1320 = getelementptr inbounds i32, ptr %9, i64 %1319
  %1321 = getelementptr inbounds i32, ptr %1320, i64 -7
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = getelementptr inbounds i32, ptr %1320, i64 -15
  %1325 = load <8 x i32>, ptr %1324, align 4, !tbaa !5
  %1326 = shufflevector <8 x i32> %1325, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1327 = getelementptr inbounds i32, ptr %1320, i64 -23
  %1328 = load <8 x i32>, ptr %1327, align 4, !tbaa !5
  %1329 = shufflevector <8 x i32> %1328, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1330 = getelementptr inbounds i32, ptr %1320, i64 -31
  %1331 = load <8 x i32>, ptr %1330, align 4, !tbaa !5
  %1332 = shufflevector <8 x i32> %1331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1333 = mul <8 x i32> %1323, %1315
  %1334 = mul <8 x i32> %1326, %1316
  %1335 = mul <8 x i32> %1329, %1317
  %1336 = mul <8 x i32> %1332, %1318
  %1337 = add nuw i64 %1314, 32
  %1338 = icmp eq i64 %1337, %1311
  br i1 %1338, label %1339, label %1313, !llvm.loop !244

1339:                                             ; preds = %1313
  %1340 = mul <8 x i32> %1334, %1333
  %1341 = mul <8 x i32> %1335, %1340
  %1342 = mul <8 x i32> %1336, %1341
  %1343 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1342)
  %1344 = icmp eq i64 %1307, %1311
  br i1 %1344, label %1357, label %1345

1345:                                             ; preds = %1298, %1339
  %1346 = phi i64 [ %1301, %1298 ], [ %1312, %1339 ]
  %1347 = phi i32 [ 1, %1298 ], [ %1343, %1339 ]
  br label %1348

1348:                                             ; preds = %1345, %1348
  %1349 = phi i64 [ %1354, %1348 ], [ %1346, %1345 ]
  %1350 = phi i32 [ %1353, %1348 ], [ %1347, %1345 ]
  %1351 = getelementptr inbounds i32, ptr %9, i64 %1349
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1350
  %1354 = add nsw i64 %1349, -1
  %1355 = trunc i64 %1349 to i32
  %1356 = icmp sgt i32 %1355, 0
  br i1 %1356, label %1348, label %1357, !llvm.loop !245

1357:                                             ; preds = %1348, %1339
  %1358 = phi i32 [ %1343, %1339 ], [ %1353, %1348 ]
  %1359 = and i64 %1308, 4294967295
  %1360 = getelementptr inbounds i32, ptr %6, i64 %1359
  %1361 = load i32, ptr %1360, align 4, !tbaa !5
  %1362 = mul nsw i32 %1361, %1358
  %1363 = add nsw i32 %1362, %1302
  %1364 = icmp sgt i64 %1300, 2
  %1365 = add nsw i64 %1301, -1
  %1366 = add i32 %1299, 1
  br i1 %1364, label %1298, label %1367, !llvm.loop !246

1367:                                             ; preds = %1357, %1294
  %1368 = phi i32 [ %1297, %1294 ], [ %1363, %1357 ]
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds double, ptr %2, i64 %1369
  %1371 = load double, ptr %1370, align 8, !tbaa !18
  %1372 = getelementptr inbounds i32, ptr %1255, i64 %1369
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = load i8, ptr %1257, align 1, !tbaa !11
  %1375 = sitofp i8 %1374 to double
  %1376 = shl i32 %1373, 24
  %1377 = ashr exact i32 %1376, 24
  %1378 = sitofp i32 %1377 to double
  %1379 = fmul fast double %1371, %1378
  %1380 = fcmp fast uge double %1379, 0.000000e+00
  %1381 = fneg fast double %1379
  %1382 = tail call fast double @llvm.fabs.f64(double %1379)
  %1383 = fcmp fast ole double %1382, %1375
  %1384 = select nnan ninf i1 %1380, double %1379, double %1381
  %1385 = select i1 %1383, double %1375, double %1384
  %1386 = fptosi double %1385 to i8
  store i8 %1386, ptr %1257, align 1, !tbaa !11
  %1387 = fadd fast double %1371, %1296
  %1388 = add nuw nsw i32 %1295, 1
  br i1 %1288, label %1389, label %1436

1389:                                             ; preds = %1367
  %1390 = load i32, ptr %4, align 4, !tbaa !5
  %1391 = load i32, ptr %12, align 4, !tbaa !5
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1390, %1392
  br i1 %1393, label %1413, label %1394

1394:                                             ; preds = %1389
  %1395 = icmp eq i32 %1390, %1392
  br i1 %1395, label %1396, label %1429

1396:                                             ; preds = %1394
  store i32 0, ptr %4, align 4, !tbaa !5
  %1397 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1397, ptr %6, align 4, !tbaa !5
  br i1 %1293, label %1436, label %1398

1398:                                             ; preds = %1396, %1423
  %1399 = phi i64 [ %1427, %1423 ], [ 1, %1396 ]
  %1400 = getelementptr inbounds i32, ptr %4, i64 %1399
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = getelementptr inbounds i32, ptr %12, i64 %1399
  %1403 = load i32, ptr %1402, align 4, !tbaa !5
  %1404 = add nsw i32 %1403, -1
  %1405 = icmp slt i32 %1401, %1404
  br i1 %1405, label %1406, label %1421

1406:                                             ; preds = %1398
  br i1 %1393, label %1413, label %1407

1407:                                             ; preds = %1406
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1399
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1399
  %1411 = load i32, ptr %1410, align 4, !tbaa !5
  %1412 = add nsw i32 %1411, %1409
  store i32 %1412, ptr %1410, align 4, !tbaa !5
  br label %1431

1413:                                             ; preds = %1389, %1406
  %1414 = phi i32 [ %1401, %1406 ], [ %1390, %1389 ]
  %1415 = phi ptr [ %1400, %1406 ], [ %4, %1389 ]
  %1416 = phi i64 [ %1399, %1406 ], [ 0, %1389 ]
  %1417 = add nsw i32 %1414, 1
  store i32 %1417, ptr %1415, align 4, !tbaa !5
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1416
  %1419 = load i32, ptr %1418, align 4, !tbaa !5
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1416
  br label %1431

1421:                                             ; preds = %1398
  %1422 = icmp eq i32 %1401, %1404
  br i1 %1422, label %1423, label %1429

1423:                                             ; preds = %1421
  store i32 0, ptr %1400, align 4, !tbaa !5
  %1424 = getelementptr inbounds i32, ptr %8, i64 %1399
  %1425 = load i32, ptr %1424, align 4, !tbaa !5
  %1426 = getelementptr inbounds i32, ptr %6, i64 %1399
  store i32 %1425, ptr %1426, align 4, !tbaa !5
  %1427 = add nuw nsw i64 %1399, 1
  %1428 = icmp eq i64 %1427, %1291
  br i1 %1428, label %1436, label %1398, !llvm.loop !247

1429:                                             ; preds = %1394, %1421
  %1430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1431:                                             ; preds = %1407, %1413
  %1432 = phi ptr [ %1420, %1413 ], [ %1400, %1407 ]
  %1433 = phi i32 [ %1419, %1413 ], [ 1, %1407 ]
  %1434 = load i32, ptr %1432, align 4, !tbaa !5
  %1435 = add nsw i32 %1434, %1433
  store i32 %1435, ptr %1432, align 4, !tbaa !5
  br label %1436

1436:                                             ; preds = %1423, %1431, %1396, %1367
  %1437 = icmp eq i32 %1388, %5
  br i1 %1437, label %5630, label %1294, !llvm.loop !248

1438:                                             ; preds = %1277, %1581
  %1439 = phi i32 [ 0, %1277 ], [ %1530, %1581 ]
  %1440 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1278, label %1441, label %1510

1441:                                             ; preds = %1438, %1500
  %1442 = phi i32 [ %1509, %1500 ], [ 0, %1438 ]
  %1443 = phi i64 [ %1451, %1500 ], [ %1282, %1438 ]
  %1444 = phi i64 [ %1508, %1500 ], [ %1281, %1438 ]
  %1445 = phi i32 [ %1506, %1500 ], [ %1440, %1438 ]
  %1446 = sub i32 %1280, %1442
  %1447 = tail call i32 @llvm.smin.i32(i32 %1446, i32 0)
  %1448 = sub i32 %1446, %1447
  %1449 = zext i32 %1448 to i64
  %1450 = add nuw nsw i64 %1449, 1
  %1451 = add nsw i64 %1443, -1
  %1452 = icmp ult i32 %1448, 31
  br i1 %1452, label %1488, label %1453

1453:                                             ; preds = %1441
  %1454 = and i64 %1450, 8589934560
  %1455 = sub i64 %1444, %1454
  br label %1456

1456:                                             ; preds = %1456, %1453
  %1457 = phi i64 [ 0, %1453 ], [ %1480, %1456 ]
  %1458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1476, %1456 ]
  %1459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1477, %1456 ]
  %1460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1478, %1456 ]
  %1461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1479, %1456 ]
  %1462 = sub i64 %1444, %1457
  %1463 = getelementptr inbounds i32, ptr %11, i64 %1462
  %1464 = getelementptr inbounds i32, ptr %1463, i64 -7
  %1465 = load <8 x i32>, ptr %1464, align 4, !tbaa !5
  %1466 = shufflevector <8 x i32> %1465, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1467 = getelementptr inbounds i32, ptr %1463, i64 -15
  %1468 = load <8 x i32>, ptr %1467, align 4, !tbaa !5
  %1469 = shufflevector <8 x i32> %1468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1470 = getelementptr inbounds i32, ptr %1463, i64 -23
  %1471 = load <8 x i32>, ptr %1470, align 4, !tbaa !5
  %1472 = shufflevector <8 x i32> %1471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1473 = getelementptr inbounds i32, ptr %1463, i64 -31
  %1474 = load <8 x i32>, ptr %1473, align 4, !tbaa !5
  %1475 = shufflevector <8 x i32> %1474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1476 = mul <8 x i32> %1466, %1458
  %1477 = mul <8 x i32> %1469, %1459
  %1478 = mul <8 x i32> %1472, %1460
  %1479 = mul <8 x i32> %1475, %1461
  %1480 = add nuw i64 %1457, 32
  %1481 = icmp eq i64 %1480, %1454
  br i1 %1481, label %1482, label %1456, !llvm.loop !249

1482:                                             ; preds = %1456
  %1483 = mul <8 x i32> %1477, %1476
  %1484 = mul <8 x i32> %1478, %1483
  %1485 = mul <8 x i32> %1479, %1484
  %1486 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1485)
  %1487 = icmp eq i64 %1450, %1454
  br i1 %1487, label %1500, label %1488

1488:                                             ; preds = %1441, %1482
  %1489 = phi i64 [ %1444, %1441 ], [ %1455, %1482 ]
  %1490 = phi i32 [ 1, %1441 ], [ %1486, %1482 ]
  br label %1491

1491:                                             ; preds = %1488, %1491
  %1492 = phi i64 [ %1497, %1491 ], [ %1489, %1488 ]
  %1493 = phi i32 [ %1496, %1491 ], [ %1490, %1488 ]
  %1494 = getelementptr inbounds i32, ptr %11, i64 %1492
  %1495 = load i32, ptr %1494, align 4, !tbaa !5
  %1496 = mul nsw i32 %1495, %1493
  %1497 = add nsw i64 %1492, -1
  %1498 = trunc i64 %1492 to i32
  %1499 = icmp sgt i32 %1498, 0
  br i1 %1499, label %1491, label %1500, !llvm.loop !250

1500:                                             ; preds = %1491, %1482
  %1501 = phi i32 [ %1486, %1482 ], [ %1496, %1491 ]
  %1502 = and i64 %1451, 4294967295
  %1503 = getelementptr inbounds i32, ptr %6, i64 %1502
  %1504 = load i32, ptr %1503, align 4, !tbaa !5
  %1505 = mul nsw i32 %1504, %1501
  %1506 = add nsw i32 %1505, %1445
  %1507 = icmp sgt i64 %1443, 2
  %1508 = add nsw i64 %1444, -1
  %1509 = add i32 %1442, 1
  br i1 %1507, label %1441, label %1510, !llvm.loop !251

1510:                                             ; preds = %1500, %1438
  %1511 = phi i32 [ %1440, %1438 ], [ %1506, %1500 ]
  %1512 = icmp slt i32 %1511, %5
  br i1 %1512, label %1515, label %1513

1513:                                             ; preds = %1510
  %1514 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

1515:                                             ; preds = %1510
  %1516 = sext i32 %1511 to i64
  %1517 = getelementptr inbounds i32, ptr %1255, i64 %1516
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = load i8, ptr %1257, align 1, !tbaa !11
  %1520 = sitofp i8 %1519 to double
  %1521 = shl i32 %1518, 24
  %1522 = ashr exact i32 %1521, 24
  %1523 = sitofp i32 %1522 to double
  %1524 = icmp slt i32 %1521, 0
  %1525 = fneg fast double %1523
  %1526 = select i1 %1524, double %1525, double %1523
  %1527 = fcmp fast ole double %1526, %1520
  %1528 = select fast i1 %1527, double %1520, double %1526
  %1529 = fptosi double %1528 to i8
  store i8 %1529, ptr %1257, align 1, !tbaa !11
  %1530 = add nuw nsw i32 %1439, 1
  br i1 %1279, label %1531, label %1581

1531:                                             ; preds = %1515
  %1532 = load i32, ptr %4, align 4, !tbaa !5
  %1533 = load i32, ptr %12, align 4, !tbaa !5
  %1534 = add nsw i32 %1533, -1
  %1535 = icmp slt i32 %1532, %1534
  br i1 %1535, label %1558, label %1536

1536:                                             ; preds = %1531
  %1537 = icmp eq i32 %1532, %1534
  br i1 %1537, label %1538, label %1574

1538:                                             ; preds = %1536
  store i32 0, ptr %4, align 4, !tbaa !5
  %1539 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1539, ptr %6, align 4, !tbaa !5
  br i1 %1284, label %1581, label %1540

1540:                                             ; preds = %1538, %1568
  %1541 = phi i64 [ %1572, %1568 ], [ 1, %1538 ]
  %1542 = getelementptr inbounds i32, ptr %4, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %12, i64 %1541
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = add nsw i32 %1545, -1
  %1547 = icmp slt i32 %1543, %1546
  br i1 %1547, label %1548, label %1566

1548:                                             ; preds = %1540
  br i1 %1535, label %1558, label %1549

1549:                                             ; preds = %1548
  %1550 = shl i64 %1541, 32
  %1551 = add i64 %1550, -4294967296
  %1552 = ashr exact i64 %1551, 32
  %1553 = getelementptr inbounds i32, ptr %7, i64 %1552
  %1554 = load i32, ptr %1553, align 4, !tbaa !5
  %1555 = getelementptr inbounds i32, ptr %6, i64 %1541
  %1556 = load i32, ptr %1555, align 4, !tbaa !5
  %1557 = add nsw i32 %1556, %1554
  store i32 %1557, ptr %1555, align 4, !tbaa !5
  br label %1576

1558:                                             ; preds = %1531, %1548
  %1559 = phi i32 [ %1543, %1548 ], [ %1532, %1531 ]
  %1560 = phi ptr [ %1542, %1548 ], [ %4, %1531 ]
  %1561 = phi i64 [ %1541, %1548 ], [ 0, %1531 ]
  %1562 = add nsw i32 %1559, 1
  store i32 %1562, ptr %1560, align 4, !tbaa !5
  %1563 = getelementptr inbounds i32, ptr %7, i64 %1561
  %1564 = load i32, ptr %1563, align 4, !tbaa !5
  %1565 = getelementptr inbounds i32, ptr %6, i64 %1561
  br label %1576

1566:                                             ; preds = %1540
  %1567 = icmp eq i32 %1543, %1546
  br i1 %1567, label %1568, label %1574

1568:                                             ; preds = %1566
  store i32 0, ptr %1542, align 4, !tbaa !5
  %1569 = getelementptr inbounds i32, ptr %8, i64 %1541
  %1570 = load i32, ptr %1569, align 4, !tbaa !5
  %1571 = getelementptr inbounds i32, ptr %6, i64 %1541
  store i32 %1570, ptr %1571, align 4, !tbaa !5
  %1572 = add nuw nsw i64 %1541, 1
  %1573 = icmp eq i64 %1572, %1282
  br i1 %1573, label %1581, label %1540, !llvm.loop !252

1574:                                             ; preds = %1536, %1566
  %1575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1576:                                             ; preds = %1549, %1558
  %1577 = phi ptr [ %1565, %1558 ], [ %1542, %1549 ]
  %1578 = phi i32 [ %1564, %1558 ], [ 1, %1549 ]
  %1579 = load i32, ptr %1577, align 4, !tbaa !5
  %1580 = add nsw i32 %1579, %1578
  store i32 %1580, ptr %1577, align 4, !tbaa !5
  br label %1581

1581:                                             ; preds = %1568, %1576, %1538, %1515
  %1582 = icmp eq i32 %1530, %5
  br i1 %1582, label %5630, label %1438, !llvm.loop !253

1583:                                             ; preds = %1270
  %1584 = getelementptr inbounds i32, ptr %3, i64 %19
  %1585 = load i32, ptr %1584, align 4, !tbaa !5
  %1586 = icmp eq i32 %1585, 0
  %1587 = icmp sgt i32 %5, 0
  br i1 %1586, label %1597, label %1588

1588:                                             ; preds = %1583
  br i1 %1587, label %1589, label %5630

1589:                                             ; preds = %1588
  %1590 = icmp sgt i32 %13, 1
  %1591 = icmp sgt i32 %13, 0
  %1592 = add i32 %13, -2
  %1593 = zext i32 %1592 to i64
  %1594 = zext i32 %13 to i64
  %1595 = add nuw i32 %5, 1
  %1596 = icmp eq i32 %13, 1
  br label %1745

1597:                                             ; preds = %1583
  br i1 %1587, label %1598, label %5630

1598:                                             ; preds = %1597
  %1599 = icmp sgt i32 %13, 1
  %1600 = icmp sgt i32 %13, 0
  %1601 = add i32 %13, -2
  %1602 = zext i32 %1601 to i64
  %1603 = zext i32 %13 to i64
  %1604 = add nuw i32 %5, 1
  %1605 = icmp eq i32 %13, 1
  br label %1606

1606:                                             ; preds = %1598, %1743
  %1607 = phi i32 [ 0, %1598 ], [ %1695, %1743 ]
  %1608 = phi double [ 0.000000e+00, %1598 ], [ %1694, %1743 ]
  %1609 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1599, label %1610, label %1679

1610:                                             ; preds = %1606, %1669
  %1611 = phi i32 [ %1678, %1669 ], [ 0, %1606 ]
  %1612 = phi i64 [ %1620, %1669 ], [ %1603, %1606 ]
  %1613 = phi i64 [ %1677, %1669 ], [ %1602, %1606 ]
  %1614 = phi i32 [ %1675, %1669 ], [ %1609, %1606 ]
  %1615 = sub i32 %1601, %1611
  %1616 = tail call i32 @llvm.smin.i32(i32 %1615, i32 0)
  %1617 = sub i32 %1615, %1616
  %1618 = zext i32 %1617 to i64
  %1619 = add nuw nsw i64 %1618, 1
  %1620 = add nsw i64 %1612, -1
  %1621 = icmp ult i32 %1617, 31
  br i1 %1621, label %1657, label %1622

1622:                                             ; preds = %1610
  %1623 = and i64 %1619, 8589934560
  %1624 = sub i64 %1613, %1623
  br label %1625

1625:                                             ; preds = %1625, %1622
  %1626 = phi i64 [ 0, %1622 ], [ %1649, %1625 ]
  %1627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1645, %1625 ]
  %1628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1646, %1625 ]
  %1629 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1647, %1625 ]
  %1630 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1648, %1625 ]
  %1631 = sub i64 %1613, %1626
  %1632 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1633 = getelementptr inbounds i32, ptr %1632, i64 -7
  %1634 = load <8 x i32>, ptr %1633, align 4, !tbaa !5
  %1635 = shufflevector <8 x i32> %1634, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1636 = getelementptr inbounds i32, ptr %1632, i64 -15
  %1637 = load <8 x i32>, ptr %1636, align 4, !tbaa !5
  %1638 = shufflevector <8 x i32> %1637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1639 = getelementptr inbounds i32, ptr %1632, i64 -23
  %1640 = load <8 x i32>, ptr %1639, align 4, !tbaa !5
  %1641 = shufflevector <8 x i32> %1640, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1642 = getelementptr inbounds i32, ptr %1632, i64 -31
  %1643 = load <8 x i32>, ptr %1642, align 4, !tbaa !5
  %1644 = shufflevector <8 x i32> %1643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1645 = mul <8 x i32> %1635, %1627
  %1646 = mul <8 x i32> %1638, %1628
  %1647 = mul <8 x i32> %1641, %1629
  %1648 = mul <8 x i32> %1644, %1630
  %1649 = add nuw i64 %1626, 32
  %1650 = icmp eq i64 %1649, %1623
  br i1 %1650, label %1651, label %1625, !llvm.loop !254

1651:                                             ; preds = %1625
  %1652 = mul <8 x i32> %1646, %1645
  %1653 = mul <8 x i32> %1647, %1652
  %1654 = mul <8 x i32> %1648, %1653
  %1655 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1654)
  %1656 = icmp eq i64 %1619, %1623
  br i1 %1656, label %1669, label %1657

1657:                                             ; preds = %1610, %1651
  %1658 = phi i64 [ %1613, %1610 ], [ %1624, %1651 ]
  %1659 = phi i32 [ 1, %1610 ], [ %1655, %1651 ]
  br label %1660

1660:                                             ; preds = %1657, %1660
  %1661 = phi i64 [ %1666, %1660 ], [ %1658, %1657 ]
  %1662 = phi i32 [ %1665, %1660 ], [ %1659, %1657 ]
  %1663 = getelementptr inbounds i32, ptr %9, i64 %1661
  %1664 = load i32, ptr %1663, align 4, !tbaa !5
  %1665 = mul nsw i32 %1664, %1662
  %1666 = add nsw i64 %1661, -1
  %1667 = trunc i64 %1661 to i32
  %1668 = icmp sgt i32 %1667, 0
  br i1 %1668, label %1660, label %1669, !llvm.loop !255

1669:                                             ; preds = %1660, %1651
  %1670 = phi i32 [ %1655, %1651 ], [ %1665, %1660 ]
  %1671 = and i64 %1620, 4294967295
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1671
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = mul nsw i32 %1673, %1670
  %1675 = add nsw i32 %1674, %1614
  %1676 = icmp sgt i64 %1612, 2
  %1677 = add nsw i64 %1613, -1
  %1678 = add i32 %1611, 1
  br i1 %1676, label %1610, label %1679, !llvm.loop !256

1679:                                             ; preds = %1669, %1606
  %1680 = phi i32 [ %1609, %1606 ], [ %1675, %1669 ]
  %1681 = sext i32 %1680 to i64
  %1682 = getelementptr inbounds i32, ptr %1255, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = load i8, ptr %1257, align 1, !tbaa !11
  %1685 = sext i8 %1684 to i32
  %1686 = and i32 %1683, 128
  %1687 = icmp eq i32 %1686, 0
  %1688 = shl i32 %1683, 24
  %1689 = ashr exact i32 %1688, 24
  %1690 = sub nsw i32 0, %1689
  %1691 = select i1 %1687, i32 %1689, i32 %1690
  %1692 = tail call i32 @llvm.smax.i32(i32 %1691, i32 %1685)
  %1693 = trunc i32 %1692 to i8
  store i8 %1693, ptr %1257, align 1, !tbaa !11
  %1694 = fadd fast double %1608, 1.000000e+00
  %1695 = add nuw nsw i32 %1607, 1
  br i1 %1600, label %1696, label %1743

1696:                                             ; preds = %1679
  %1697 = load i32, ptr %4, align 4, !tbaa !5
  %1698 = load i32, ptr %12, align 4, !tbaa !5
  %1699 = add nsw i32 %1698, -1
  %1700 = icmp slt i32 %1697, %1699
  br i1 %1700, label %1720, label %1701

1701:                                             ; preds = %1696
  %1702 = icmp eq i32 %1697, %1699
  br i1 %1702, label %1703, label %1736

1703:                                             ; preds = %1701
  store i32 0, ptr %4, align 4, !tbaa !5
  %1704 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1704, ptr %6, align 4, !tbaa !5
  br i1 %1605, label %1743, label %1705

1705:                                             ; preds = %1703, %1730
  %1706 = phi i64 [ %1734, %1730 ], [ 1, %1703 ]
  %1707 = getelementptr inbounds i32, ptr %4, i64 %1706
  %1708 = load i32, ptr %1707, align 4, !tbaa !5
  %1709 = getelementptr inbounds i32, ptr %12, i64 %1706
  %1710 = load i32, ptr %1709, align 4, !tbaa !5
  %1711 = add nsw i32 %1710, -1
  %1712 = icmp slt i32 %1708, %1711
  br i1 %1712, label %1713, label %1728

1713:                                             ; preds = %1705
  br i1 %1700, label %1720, label %1714

1714:                                             ; preds = %1713
  %1715 = getelementptr inbounds i32, ptr %7, i64 %1706
  %1716 = load i32, ptr %1715, align 4, !tbaa !5
  %1717 = getelementptr inbounds i32, ptr %6, i64 %1706
  %1718 = load i32, ptr %1717, align 4, !tbaa !5
  %1719 = add nsw i32 %1718, %1716
  store i32 %1719, ptr %1717, align 4, !tbaa !5
  br label %1738

1720:                                             ; preds = %1696, %1713
  %1721 = phi i32 [ %1708, %1713 ], [ %1697, %1696 ]
  %1722 = phi ptr [ %1707, %1713 ], [ %4, %1696 ]
  %1723 = phi i64 [ %1706, %1713 ], [ 0, %1696 ]
  %1724 = add nsw i32 %1721, 1
  store i32 %1724, ptr %1722, align 4, !tbaa !5
  %1725 = getelementptr inbounds i32, ptr %7, i64 %1723
  %1726 = load i32, ptr %1725, align 4, !tbaa !5
  %1727 = getelementptr inbounds i32, ptr %6, i64 %1723
  br label %1738

1728:                                             ; preds = %1705
  %1729 = icmp eq i32 %1708, %1711
  br i1 %1729, label %1730, label %1736

1730:                                             ; preds = %1728
  store i32 0, ptr %1707, align 4, !tbaa !5
  %1731 = getelementptr inbounds i32, ptr %8, i64 %1706
  %1732 = load i32, ptr %1731, align 4, !tbaa !5
  %1733 = getelementptr inbounds i32, ptr %6, i64 %1706
  store i32 %1732, ptr %1733, align 4, !tbaa !5
  %1734 = add nuw nsw i64 %1706, 1
  %1735 = icmp eq i64 %1734, %1603
  br i1 %1735, label %1743, label %1705, !llvm.loop !257

1736:                                             ; preds = %1701, %1728
  %1737 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1738:                                             ; preds = %1714, %1720
  %1739 = phi ptr [ %1727, %1720 ], [ %1707, %1714 ]
  %1740 = phi i32 [ %1726, %1720 ], [ 1, %1714 ]
  %1741 = load i32, ptr %1739, align 4, !tbaa !5
  %1742 = add nsw i32 %1741, %1740
  store i32 %1742, ptr %1739, align 4, !tbaa !5
  br label %1743

1743:                                             ; preds = %1730, %1738, %1703, %1679
  %1744 = icmp eq i32 %1695, %5
  br i1 %1744, label %5630, label %1606, !llvm.loop !258

1745:                                             ; preds = %1589, %1887
  %1746 = phi i32 [ 0, %1589 ], [ %1836, %1887 ]
  %1747 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1590, label %1748, label %1817

1748:                                             ; preds = %1745, %1807
  %1749 = phi i32 [ %1816, %1807 ], [ 0, %1745 ]
  %1750 = phi i64 [ %1758, %1807 ], [ %1594, %1745 ]
  %1751 = phi i64 [ %1815, %1807 ], [ %1593, %1745 ]
  %1752 = phi i32 [ %1813, %1807 ], [ %1747, %1745 ]
  %1753 = sub i32 %1592, %1749
  %1754 = tail call i32 @llvm.smin.i32(i32 %1753, i32 0)
  %1755 = sub i32 %1753, %1754
  %1756 = zext i32 %1755 to i64
  %1757 = add nuw nsw i64 %1756, 1
  %1758 = add nsw i64 %1750, -1
  %1759 = icmp ult i32 %1755, 31
  br i1 %1759, label %1795, label %1760

1760:                                             ; preds = %1748
  %1761 = and i64 %1757, 8589934560
  %1762 = sub i64 %1751, %1761
  br label %1763

1763:                                             ; preds = %1763, %1760
  %1764 = phi i64 [ 0, %1760 ], [ %1787, %1763 ]
  %1765 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1783, %1763 ]
  %1766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1784, %1763 ]
  %1767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1785, %1763 ]
  %1768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1786, %1763 ]
  %1769 = sub i64 %1751, %1764
  %1770 = getelementptr inbounds i32, ptr %11, i64 %1769
  %1771 = getelementptr inbounds i32, ptr %1770, i64 -7
  %1772 = load <8 x i32>, ptr %1771, align 4, !tbaa !5
  %1773 = shufflevector <8 x i32> %1772, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1774 = getelementptr inbounds i32, ptr %1770, i64 -15
  %1775 = load <8 x i32>, ptr %1774, align 4, !tbaa !5
  %1776 = shufflevector <8 x i32> %1775, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1777 = getelementptr inbounds i32, ptr %1770, i64 -23
  %1778 = load <8 x i32>, ptr %1777, align 4, !tbaa !5
  %1779 = shufflevector <8 x i32> %1778, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1780 = getelementptr inbounds i32, ptr %1770, i64 -31
  %1781 = load <8 x i32>, ptr %1780, align 4, !tbaa !5
  %1782 = shufflevector <8 x i32> %1781, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1783 = mul <8 x i32> %1773, %1765
  %1784 = mul <8 x i32> %1776, %1766
  %1785 = mul <8 x i32> %1779, %1767
  %1786 = mul <8 x i32> %1782, %1768
  %1787 = add nuw i64 %1764, 32
  %1788 = icmp eq i64 %1787, %1761
  br i1 %1788, label %1789, label %1763, !llvm.loop !259

1789:                                             ; preds = %1763
  %1790 = mul <8 x i32> %1784, %1783
  %1791 = mul <8 x i32> %1785, %1790
  %1792 = mul <8 x i32> %1786, %1791
  %1793 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1792)
  %1794 = icmp eq i64 %1757, %1761
  br i1 %1794, label %1807, label %1795

1795:                                             ; preds = %1748, %1789
  %1796 = phi i64 [ %1751, %1748 ], [ %1762, %1789 ]
  %1797 = phi i32 [ 1, %1748 ], [ %1793, %1789 ]
  br label %1798

1798:                                             ; preds = %1795, %1798
  %1799 = phi i64 [ %1804, %1798 ], [ %1796, %1795 ]
  %1800 = phi i32 [ %1803, %1798 ], [ %1797, %1795 ]
  %1801 = getelementptr inbounds i32, ptr %11, i64 %1799
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = mul nsw i32 %1802, %1800
  %1804 = add nsw i64 %1799, -1
  %1805 = trunc i64 %1799 to i32
  %1806 = icmp sgt i32 %1805, 0
  br i1 %1806, label %1798, label %1807, !llvm.loop !260

1807:                                             ; preds = %1798, %1789
  %1808 = phi i32 [ %1793, %1789 ], [ %1803, %1798 ]
  %1809 = and i64 %1758, 4294967295
  %1810 = getelementptr inbounds i32, ptr %6, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !5
  %1812 = mul nsw i32 %1811, %1808
  %1813 = add nsw i32 %1812, %1752
  %1814 = icmp sgt i64 %1750, 2
  %1815 = add nsw i64 %1751, -1
  %1816 = add i32 %1749, 1
  br i1 %1814, label %1748, label %1817, !llvm.loop !261

1817:                                             ; preds = %1807, %1745
  %1818 = phi i32 [ %1747, %1745 ], [ %1813, %1807 ]
  %1819 = icmp slt i32 %1818, %5
  br i1 %1819, label %1822, label %1820

1820:                                             ; preds = %1817
  %1821 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

1822:                                             ; preds = %1817
  %1823 = sext i32 %1818 to i64
  %1824 = getelementptr inbounds i32, ptr %1255, i64 %1823
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = load i8, ptr %1257, align 1, !tbaa !11
  %1827 = sext i8 %1826 to i32
  %1828 = and i32 %1825, 128
  %1829 = icmp eq i32 %1828, 0
  %1830 = shl i32 %1825, 24
  %1831 = ashr exact i32 %1830, 24
  %1832 = sub nsw i32 0, %1831
  %1833 = select i1 %1829, i32 %1831, i32 %1832
  %1834 = tail call i32 @llvm.smax.i32(i32 %1833, i32 %1827)
  %1835 = trunc i32 %1834 to i8
  store i8 %1835, ptr %1257, align 1, !tbaa !11
  %1836 = add nuw nsw i32 %1746, 1
  br i1 %1591, label %1837, label %1887

1837:                                             ; preds = %1822
  %1838 = load i32, ptr %4, align 4, !tbaa !5
  %1839 = load i32, ptr %12, align 4, !tbaa !5
  %1840 = add nsw i32 %1839, -1
  %1841 = icmp slt i32 %1838, %1840
  br i1 %1841, label %1864, label %1842

1842:                                             ; preds = %1837
  %1843 = icmp eq i32 %1838, %1840
  br i1 %1843, label %1844, label %1880

1844:                                             ; preds = %1842
  store i32 0, ptr %4, align 4, !tbaa !5
  %1845 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1845, ptr %6, align 4, !tbaa !5
  br i1 %1596, label %1887, label %1846

1846:                                             ; preds = %1844, %1874
  %1847 = phi i64 [ %1878, %1874 ], [ 1, %1844 ]
  %1848 = getelementptr inbounds i32, ptr %4, i64 %1847
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = getelementptr inbounds i32, ptr %12, i64 %1847
  %1851 = load i32, ptr %1850, align 4, !tbaa !5
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1849, %1852
  br i1 %1853, label %1854, label %1872

1854:                                             ; preds = %1846
  br i1 %1841, label %1864, label %1855

1855:                                             ; preds = %1854
  %1856 = shl i64 %1847, 32
  %1857 = add i64 %1856, -4294967296
  %1858 = ashr exact i64 %1857, 32
  %1859 = getelementptr inbounds i32, ptr %7, i64 %1858
  %1860 = load i32, ptr %1859, align 4, !tbaa !5
  %1861 = getelementptr inbounds i32, ptr %6, i64 %1847
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = add nsw i32 %1862, %1860
  store i32 %1863, ptr %1861, align 4, !tbaa !5
  br label %1882

1864:                                             ; preds = %1837, %1854
  %1865 = phi i32 [ %1849, %1854 ], [ %1838, %1837 ]
  %1866 = phi ptr [ %1848, %1854 ], [ %4, %1837 ]
  %1867 = phi i64 [ %1847, %1854 ], [ 0, %1837 ]
  %1868 = add nsw i32 %1865, 1
  store i32 %1868, ptr %1866, align 4, !tbaa !5
  %1869 = getelementptr inbounds i32, ptr %7, i64 %1867
  %1870 = load i32, ptr %1869, align 4, !tbaa !5
  %1871 = getelementptr inbounds i32, ptr %6, i64 %1867
  br label %1882

1872:                                             ; preds = %1846
  %1873 = icmp eq i32 %1849, %1852
  br i1 %1873, label %1874, label %1880

1874:                                             ; preds = %1872
  store i32 0, ptr %1848, align 4, !tbaa !5
  %1875 = getelementptr inbounds i32, ptr %8, i64 %1847
  %1876 = load i32, ptr %1875, align 4, !tbaa !5
  %1877 = getelementptr inbounds i32, ptr %6, i64 %1847
  store i32 %1876, ptr %1877, align 4, !tbaa !5
  %1878 = add nuw nsw i64 %1847, 1
  %1879 = icmp eq i64 %1878, %1594
  br i1 %1879, label %1887, label %1846, !llvm.loop !262

1880:                                             ; preds = %1842, %1872
  %1881 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1882:                                             ; preds = %1855, %1864
  %1883 = phi ptr [ %1871, %1864 ], [ %1848, %1855 ]
  %1884 = phi i32 [ %1870, %1864 ], [ 1, %1855 ]
  %1885 = load i32, ptr %1883, align 4, !tbaa !5
  %1886 = add nsw i32 %1885, %1884
  store i32 %1886, ptr %1883, align 4, !tbaa !5
  br label %1887

1887:                                             ; preds = %1874, %1882, %1844, %1822
  %1888 = icmp eq i32 %1836, %5
  br i1 %1888, label %5630, label %1745, !llvm.loop !263

1889:                                             ; preds = %1270
  %1890 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 380, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

1891:                                             ; preds = %18
  %1892 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1893 = load ptr, ptr %1892, align 8, !tbaa !9
  %1894 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1895 = load ptr, ptr %1894, align 8, !tbaa !9
  store i16 0, ptr %1895, align 2, !tbaa !78
  %1896 = icmp eq i32 %13, 0
  br i1 %1896, label %1897, label %1908

1897:                                             ; preds = %1891
  %1898 = load i32, ptr %1893, align 4, !tbaa !5
  %1899 = and i32 %1898, 32768
  %1900 = icmp eq i32 %1899, 0
  %1901 = shl i32 %1898, 16
  %1902 = ashr exact i32 %1901, 16
  %1903 = sub nsw i32 0, %1902
  %1904 = select i1 %1900, i32 %1902, i32 %1903
  %1905 = icmp slt i32 %1904, 1
  %1906 = trunc i32 %1904 to i16
  %1907 = select i1 %1905, i16 0, i16 %1906
  store i16 %1907, ptr %1895, align 2, !tbaa !78
  br label %5630

1908:                                             ; preds = %1891
  switch i32 %1, label %2529 [
    i32 1, label %1909
    i32 0, label %2221
  ]

1909:                                             ; preds = %1908
  %1910 = getelementptr inbounds i32, ptr %3, i64 %19
  %1911 = load i32, ptr %1910, align 4, !tbaa !5
  %1912 = icmp eq i32 %1911, 0
  %1913 = icmp sgt i32 %5, 0
  br i1 %1912, label %1923, label %1914

1914:                                             ; preds = %1909
  br i1 %1913, label %1915, label %5630

1915:                                             ; preds = %1914
  %1916 = icmp sgt i32 %13, 1
  %1917 = icmp sgt i32 %13, 0
  %1918 = add i32 %13, -2
  %1919 = zext i32 %1918 to i64
  %1920 = zext i32 %13 to i64
  %1921 = add nuw i32 %5, 1
  %1922 = icmp eq i32 %13, 1
  br label %2076

1923:                                             ; preds = %1909
  br i1 %1913, label %1924, label %5630

1924:                                             ; preds = %1923
  %1925 = icmp sgt i32 %13, 1
  %1926 = icmp sgt i32 %13, 0
  %1927 = add i32 %13, -2
  %1928 = zext i32 %1927 to i64
  %1929 = zext i32 %13 to i64
  %1930 = add nuw i32 %5, 1
  %1931 = icmp eq i32 %13, 1
  br label %1932

1932:                                             ; preds = %1924, %2074
  %1933 = phi i16 [ 0, %1924 ], [ %2024, %2074 ]
  %1934 = phi i32 [ 0, %1924 ], [ %2026, %2074 ]
  %1935 = phi double [ 0.000000e+00, %1924 ], [ %2025, %2074 ]
  %1936 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1925, label %1937, label %2006

1937:                                             ; preds = %1932, %1996
  %1938 = phi i32 [ %2005, %1996 ], [ 0, %1932 ]
  %1939 = phi i64 [ %1947, %1996 ], [ %1929, %1932 ]
  %1940 = phi i64 [ %2004, %1996 ], [ %1928, %1932 ]
  %1941 = phi i32 [ %2002, %1996 ], [ %1936, %1932 ]
  %1942 = sub i32 %1927, %1938
  %1943 = tail call i32 @llvm.smin.i32(i32 %1942, i32 0)
  %1944 = sub i32 %1942, %1943
  %1945 = zext i32 %1944 to i64
  %1946 = add nuw nsw i64 %1945, 1
  %1947 = add nsw i64 %1939, -1
  %1948 = icmp ult i32 %1944, 31
  br i1 %1948, label %1984, label %1949

1949:                                             ; preds = %1937
  %1950 = and i64 %1946, 8589934560
  %1951 = sub i64 %1940, %1950
  br label %1952

1952:                                             ; preds = %1952, %1949
  %1953 = phi i64 [ 0, %1949 ], [ %1976, %1952 ]
  %1954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1972, %1952 ]
  %1955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1973, %1952 ]
  %1956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1974, %1952 ]
  %1957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1975, %1952 ]
  %1958 = sub i64 %1940, %1953
  %1959 = getelementptr inbounds i32, ptr %9, i64 %1958
  %1960 = getelementptr inbounds i32, ptr %1959, i64 -7
  %1961 = load <8 x i32>, ptr %1960, align 4, !tbaa !5
  %1962 = shufflevector <8 x i32> %1961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1963 = getelementptr inbounds i32, ptr %1959, i64 -15
  %1964 = load <8 x i32>, ptr %1963, align 4, !tbaa !5
  %1965 = shufflevector <8 x i32> %1964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1966 = getelementptr inbounds i32, ptr %1959, i64 -23
  %1967 = load <8 x i32>, ptr %1966, align 4, !tbaa !5
  %1968 = shufflevector <8 x i32> %1967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1969 = getelementptr inbounds i32, ptr %1959, i64 -31
  %1970 = load <8 x i32>, ptr %1969, align 4, !tbaa !5
  %1971 = shufflevector <8 x i32> %1970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1972 = mul <8 x i32> %1962, %1954
  %1973 = mul <8 x i32> %1965, %1955
  %1974 = mul <8 x i32> %1968, %1956
  %1975 = mul <8 x i32> %1971, %1957
  %1976 = add nuw i64 %1953, 32
  %1977 = icmp eq i64 %1976, %1950
  br i1 %1977, label %1978, label %1952, !llvm.loop !264

1978:                                             ; preds = %1952
  %1979 = mul <8 x i32> %1973, %1972
  %1980 = mul <8 x i32> %1974, %1979
  %1981 = mul <8 x i32> %1975, %1980
  %1982 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1981)
  %1983 = icmp eq i64 %1946, %1950
  br i1 %1983, label %1996, label %1984

1984:                                             ; preds = %1937, %1978
  %1985 = phi i64 [ %1940, %1937 ], [ %1951, %1978 ]
  %1986 = phi i32 [ 1, %1937 ], [ %1982, %1978 ]
  br label %1987

1987:                                             ; preds = %1984, %1987
  %1988 = phi i64 [ %1993, %1987 ], [ %1985, %1984 ]
  %1989 = phi i32 [ %1992, %1987 ], [ %1986, %1984 ]
  %1990 = getelementptr inbounds i32, ptr %9, i64 %1988
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = mul nsw i32 %1991, %1989
  %1993 = add nsw i64 %1988, -1
  %1994 = trunc i64 %1988 to i32
  %1995 = icmp sgt i32 %1994, 0
  br i1 %1995, label %1987, label %1996, !llvm.loop !265

1996:                                             ; preds = %1987, %1978
  %1997 = phi i32 [ %1982, %1978 ], [ %1992, %1987 ]
  %1998 = and i64 %1947, 4294967295
  %1999 = getelementptr inbounds i32, ptr %6, i64 %1998
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = mul nsw i32 %2000, %1997
  %2002 = add nsw i32 %2001, %1941
  %2003 = icmp sgt i64 %1939, 2
  %2004 = add nsw i64 %1940, -1
  %2005 = add i32 %1938, 1
  br i1 %2003, label %1937, label %2006, !llvm.loop !266

2006:                                             ; preds = %1996, %1932
  %2007 = phi i32 [ %1936, %1932 ], [ %2002, %1996 ]
  %2008 = sext i32 %2007 to i64
  %2009 = getelementptr inbounds double, ptr %2, i64 %2008
  %2010 = load double, ptr %2009, align 8, !tbaa !18
  %2011 = getelementptr inbounds i32, ptr %1893, i64 %2008
  %2012 = load i32, ptr %2011, align 4, !tbaa !5
  %2013 = sitofp i16 %1933 to double
  %2014 = shl i32 %2012, 16
  %2015 = ashr exact i32 %2014, 16
  %2016 = sitofp i32 %2015 to double
  %2017 = fmul fast double %2010, %2016
  %2018 = fcmp fast uge double %2017, 0.000000e+00
  %2019 = fneg fast double %2017
  %2020 = tail call fast double @llvm.fabs.f64(double %2017)
  %2021 = fcmp fast ole double %2020, %2013
  %2022 = select nnan ninf i1 %2018, double %2017, double %2019
  %2023 = select i1 %2021, double %2013, double %2022
  %2024 = fptosi double %2023 to i16
  %2025 = fadd fast double %2010, %1935
  %2026 = add nuw nsw i32 %1934, 1
  br i1 %1926, label %2027, label %2074

2027:                                             ; preds = %2006
  %2028 = load i32, ptr %4, align 4, !tbaa !5
  %2029 = load i32, ptr %12, align 4, !tbaa !5
  %2030 = add nsw i32 %2029, -1
  %2031 = icmp slt i32 %2028, %2030
  br i1 %2031, label %2051, label %2032

2032:                                             ; preds = %2027
  %2033 = icmp eq i32 %2028, %2030
  br i1 %2033, label %2034, label %2067

2034:                                             ; preds = %2032
  store i32 0, ptr %4, align 4, !tbaa !5
  %2035 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2035, ptr %6, align 4, !tbaa !5
  br i1 %1931, label %2074, label %2036

2036:                                             ; preds = %2034, %2061
  %2037 = phi i64 [ %2065, %2061 ], [ 1, %2034 ]
  %2038 = getelementptr inbounds i32, ptr %4, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !5
  %2040 = getelementptr inbounds i32, ptr %12, i64 %2037
  %2041 = load i32, ptr %2040, align 4, !tbaa !5
  %2042 = add nsw i32 %2041, -1
  %2043 = icmp slt i32 %2039, %2042
  br i1 %2043, label %2044, label %2059

2044:                                             ; preds = %2036
  br i1 %2031, label %2051, label %2045

2045:                                             ; preds = %2044
  %2046 = getelementptr inbounds i32, ptr %7, i64 %2037
  %2047 = load i32, ptr %2046, align 4, !tbaa !5
  %2048 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2049 = load i32, ptr %2048, align 4, !tbaa !5
  %2050 = add nsw i32 %2049, %2047
  store i32 %2050, ptr %2048, align 4, !tbaa !5
  br label %2069

2051:                                             ; preds = %2027, %2044
  %2052 = phi i32 [ %2039, %2044 ], [ %2028, %2027 ]
  %2053 = phi ptr [ %2038, %2044 ], [ %4, %2027 ]
  %2054 = phi i64 [ %2037, %2044 ], [ 0, %2027 ]
  %2055 = add nsw i32 %2052, 1
  store i32 %2055, ptr %2053, align 4, !tbaa !5
  %2056 = getelementptr inbounds i32, ptr %7, i64 %2054
  %2057 = load i32, ptr %2056, align 4, !tbaa !5
  %2058 = getelementptr inbounds i32, ptr %6, i64 %2054
  br label %2069

2059:                                             ; preds = %2036
  %2060 = icmp eq i32 %2039, %2042
  br i1 %2060, label %2061, label %2067

2061:                                             ; preds = %2059
  store i32 0, ptr %2038, align 4, !tbaa !5
  %2062 = getelementptr inbounds i32, ptr %8, i64 %2037
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = getelementptr inbounds i32, ptr %6, i64 %2037
  store i32 %2063, ptr %2064, align 4, !tbaa !5
  %2065 = add nuw nsw i64 %2037, 1
  %2066 = icmp eq i64 %2065, %1929
  br i1 %2066, label %2074, label %2036, !llvm.loop !267

2067:                                             ; preds = %2032, %2059
  store i16 %2024, ptr %1895, align 2, !tbaa !78
  %2068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2069:                                             ; preds = %2045, %2051
  %2070 = phi ptr [ %2058, %2051 ], [ %2038, %2045 ]
  %2071 = phi i32 [ %2057, %2051 ], [ 1, %2045 ]
  %2072 = load i32, ptr %2070, align 4, !tbaa !5
  %2073 = add nsw i32 %2072, %2071
  store i32 %2073, ptr %2070, align 4, !tbaa !5
  br label %2074

2074:                                             ; preds = %2061, %2069, %2034, %2006
  %2075 = icmp eq i32 %2026, %5
  br i1 %2075, label %5621, label %1932, !llvm.loop !268

2076:                                             ; preds = %1915, %2219
  %2077 = phi i16 [ 0, %1915 ], [ %2167, %2219 ]
  %2078 = phi i32 [ 0, %1915 ], [ %2168, %2219 ]
  %2079 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1916, label %2080, label %2149

2080:                                             ; preds = %2076, %2139
  %2081 = phi i32 [ %2148, %2139 ], [ 0, %2076 ]
  %2082 = phi i64 [ %2090, %2139 ], [ %1920, %2076 ]
  %2083 = phi i64 [ %2147, %2139 ], [ %1919, %2076 ]
  %2084 = phi i32 [ %2145, %2139 ], [ %2079, %2076 ]
  %2085 = sub i32 %1918, %2081
  %2086 = tail call i32 @llvm.smin.i32(i32 %2085, i32 0)
  %2087 = sub i32 %2085, %2086
  %2088 = zext i32 %2087 to i64
  %2089 = add nuw nsw i64 %2088, 1
  %2090 = add nsw i64 %2082, -1
  %2091 = icmp ult i32 %2087, 31
  br i1 %2091, label %2127, label %2092

2092:                                             ; preds = %2080
  %2093 = and i64 %2089, 8589934560
  %2094 = sub i64 %2083, %2093
  br label %2095

2095:                                             ; preds = %2095, %2092
  %2096 = phi i64 [ 0, %2092 ], [ %2119, %2095 ]
  %2097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2115, %2095 ]
  %2098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2116, %2095 ]
  %2099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2117, %2095 ]
  %2100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2118, %2095 ]
  %2101 = sub i64 %2083, %2096
  %2102 = getelementptr inbounds i32, ptr %11, i64 %2101
  %2103 = getelementptr inbounds i32, ptr %2102, i64 -7
  %2104 = load <8 x i32>, ptr %2103, align 4, !tbaa !5
  %2105 = shufflevector <8 x i32> %2104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2106 = getelementptr inbounds i32, ptr %2102, i64 -15
  %2107 = load <8 x i32>, ptr %2106, align 4, !tbaa !5
  %2108 = shufflevector <8 x i32> %2107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2109 = getelementptr inbounds i32, ptr %2102, i64 -23
  %2110 = load <8 x i32>, ptr %2109, align 4, !tbaa !5
  %2111 = shufflevector <8 x i32> %2110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2112 = getelementptr inbounds i32, ptr %2102, i64 -31
  %2113 = load <8 x i32>, ptr %2112, align 4, !tbaa !5
  %2114 = shufflevector <8 x i32> %2113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2115 = mul <8 x i32> %2105, %2097
  %2116 = mul <8 x i32> %2108, %2098
  %2117 = mul <8 x i32> %2111, %2099
  %2118 = mul <8 x i32> %2114, %2100
  %2119 = add nuw i64 %2096, 32
  %2120 = icmp eq i64 %2119, %2093
  br i1 %2120, label %2121, label %2095, !llvm.loop !269

2121:                                             ; preds = %2095
  %2122 = mul <8 x i32> %2116, %2115
  %2123 = mul <8 x i32> %2117, %2122
  %2124 = mul <8 x i32> %2118, %2123
  %2125 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2124)
  %2126 = icmp eq i64 %2089, %2093
  br i1 %2126, label %2139, label %2127

2127:                                             ; preds = %2080, %2121
  %2128 = phi i64 [ %2083, %2080 ], [ %2094, %2121 ]
  %2129 = phi i32 [ 1, %2080 ], [ %2125, %2121 ]
  br label %2130

2130:                                             ; preds = %2127, %2130
  %2131 = phi i64 [ %2136, %2130 ], [ %2128, %2127 ]
  %2132 = phi i32 [ %2135, %2130 ], [ %2129, %2127 ]
  %2133 = getelementptr inbounds i32, ptr %11, i64 %2131
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = mul nsw i32 %2134, %2132
  %2136 = add nsw i64 %2131, -1
  %2137 = trunc i64 %2131 to i32
  %2138 = icmp sgt i32 %2137, 0
  br i1 %2138, label %2130, label %2139, !llvm.loop !270

2139:                                             ; preds = %2130, %2121
  %2140 = phi i32 [ %2125, %2121 ], [ %2135, %2130 ]
  %2141 = and i64 %2090, 4294967295
  %2142 = getelementptr inbounds i32, ptr %6, i64 %2141
  %2143 = load i32, ptr %2142, align 4, !tbaa !5
  %2144 = mul nsw i32 %2143, %2140
  %2145 = add nsw i32 %2144, %2084
  %2146 = icmp sgt i64 %2082, 2
  %2147 = add nsw i64 %2083, -1
  %2148 = add i32 %2081, 1
  br i1 %2146, label %2080, label %2149, !llvm.loop !271

2149:                                             ; preds = %2139, %2076
  %2150 = phi i32 [ %2079, %2076 ], [ %2145, %2139 ]
  %2151 = icmp slt i32 %2150, %5
  br i1 %2151, label %2154, label %2152

2152:                                             ; preds = %2149
  %2153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

2154:                                             ; preds = %2149
  %2155 = sext i32 %2150 to i64
  %2156 = getelementptr inbounds i32, ptr %1893, i64 %2155
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = sitofp i16 %2077 to double
  %2159 = shl i32 %2157, 16
  %2160 = ashr exact i32 %2159, 16
  %2161 = sitofp i32 %2160 to double
  %2162 = icmp slt i32 %2159, 0
  %2163 = fneg fast double %2161
  %2164 = select i1 %2162, double %2163, double %2161
  %2165 = fcmp fast ole double %2164, %2158
  %2166 = select fast i1 %2165, double %2158, double %2164
  %2167 = fptosi double %2166 to i16
  store i16 %2167, ptr %1895, align 2, !tbaa !78
  %2168 = add nuw nsw i32 %2078, 1
  br i1 %1917, label %2169, label %2219

2169:                                             ; preds = %2154
  %2170 = load i32, ptr %4, align 4, !tbaa !5
  %2171 = load i32, ptr %12, align 4, !tbaa !5
  %2172 = add nsw i32 %2171, -1
  %2173 = icmp slt i32 %2170, %2172
  br i1 %2173, label %2196, label %2174

2174:                                             ; preds = %2169
  %2175 = icmp eq i32 %2170, %2172
  br i1 %2175, label %2176, label %2212

2176:                                             ; preds = %2174
  store i32 0, ptr %4, align 4, !tbaa !5
  %2177 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2177, ptr %6, align 4, !tbaa !5
  br i1 %1922, label %2219, label %2178

2178:                                             ; preds = %2176, %2206
  %2179 = phi i64 [ %2210, %2206 ], [ 1, %2176 ]
  %2180 = getelementptr inbounds i32, ptr %4, i64 %2179
  %2181 = load i32, ptr %2180, align 4, !tbaa !5
  %2182 = getelementptr inbounds i32, ptr %12, i64 %2179
  %2183 = load i32, ptr %2182, align 4, !tbaa !5
  %2184 = add nsw i32 %2183, -1
  %2185 = icmp slt i32 %2181, %2184
  br i1 %2185, label %2186, label %2204

2186:                                             ; preds = %2178
  br i1 %2173, label %2196, label %2187

2187:                                             ; preds = %2186
  %2188 = shl i64 %2179, 32
  %2189 = add i64 %2188, -4294967296
  %2190 = ashr exact i64 %2189, 32
  %2191 = getelementptr inbounds i32, ptr %7, i64 %2190
  %2192 = load i32, ptr %2191, align 4, !tbaa !5
  %2193 = getelementptr inbounds i32, ptr %6, i64 %2179
  %2194 = load i32, ptr %2193, align 4, !tbaa !5
  %2195 = add nsw i32 %2194, %2192
  store i32 %2195, ptr %2193, align 4, !tbaa !5
  br label %2214

2196:                                             ; preds = %2169, %2186
  %2197 = phi i32 [ %2181, %2186 ], [ %2170, %2169 ]
  %2198 = phi ptr [ %2180, %2186 ], [ %4, %2169 ]
  %2199 = phi i64 [ %2179, %2186 ], [ 0, %2169 ]
  %2200 = add nsw i32 %2197, 1
  store i32 %2200, ptr %2198, align 4, !tbaa !5
  %2201 = getelementptr inbounds i32, ptr %7, i64 %2199
  %2202 = load i32, ptr %2201, align 4, !tbaa !5
  %2203 = getelementptr inbounds i32, ptr %6, i64 %2199
  br label %2214

2204:                                             ; preds = %2178
  %2205 = icmp eq i32 %2181, %2184
  br i1 %2205, label %2206, label %2212

2206:                                             ; preds = %2204
  store i32 0, ptr %2180, align 4, !tbaa !5
  %2207 = getelementptr inbounds i32, ptr %8, i64 %2179
  %2208 = load i32, ptr %2207, align 4, !tbaa !5
  %2209 = getelementptr inbounds i32, ptr %6, i64 %2179
  store i32 %2208, ptr %2209, align 4, !tbaa !5
  %2210 = add nuw nsw i64 %2179, 1
  %2211 = icmp eq i64 %2210, %1920
  br i1 %2211, label %2219, label %2178, !llvm.loop !272

2212:                                             ; preds = %2174, %2204
  %2213 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2214:                                             ; preds = %2187, %2196
  %2215 = phi ptr [ %2203, %2196 ], [ %2180, %2187 ]
  %2216 = phi i32 [ %2202, %2196 ], [ 1, %2187 ]
  %2217 = load i32, ptr %2215, align 4, !tbaa !5
  %2218 = add nsw i32 %2217, %2216
  store i32 %2218, ptr %2215, align 4, !tbaa !5
  br label %2219

2219:                                             ; preds = %2206, %2214, %2176, %2154
  %2220 = icmp eq i32 %2168, %5
  br i1 %2220, label %5630, label %2076, !llvm.loop !273

2221:                                             ; preds = %1908
  %2222 = getelementptr inbounds i32, ptr %3, i64 %19
  %2223 = load i32, ptr %2222, align 4, !tbaa !5
  %2224 = icmp eq i32 %2223, 0
  %2225 = icmp sgt i32 %5, 0
  br i1 %2224, label %2235, label %2226

2226:                                             ; preds = %2221
  br i1 %2225, label %2227, label %5630

2227:                                             ; preds = %2226
  %2228 = icmp sgt i32 %13, 1
  %2229 = icmp sgt i32 %13, 0
  %2230 = add i32 %13, -2
  %2231 = zext i32 %2230 to i64
  %2232 = zext i32 %13 to i64
  %2233 = add nuw i32 %5, 1
  %2234 = icmp eq i32 %13, 1
  br label %2384

2235:                                             ; preds = %2221
  br i1 %2225, label %2236, label %5630

2236:                                             ; preds = %2235
  %2237 = icmp sgt i32 %13, 1
  %2238 = icmp sgt i32 %13, 0
  %2239 = add i32 %13, -2
  %2240 = zext i32 %2239 to i64
  %2241 = zext i32 %13 to i64
  %2242 = add nuw i32 %5, 1
  %2243 = icmp eq i32 %13, 1
  br label %2244

2244:                                             ; preds = %2236, %2382
  %2245 = phi i32 [ 0, %2236 ], [ %2331, %2382 ]
  %2246 = phi i32 [ 0, %2236 ], [ %2333, %2382 ]
  %2247 = phi double [ 0.000000e+00, %2236 ], [ %2332, %2382 ]
  %2248 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2237, label %2249, label %2318

2249:                                             ; preds = %2244, %2308
  %2250 = phi i32 [ %2317, %2308 ], [ 0, %2244 ]
  %2251 = phi i64 [ %2259, %2308 ], [ %2241, %2244 ]
  %2252 = phi i64 [ %2316, %2308 ], [ %2240, %2244 ]
  %2253 = phi i32 [ %2314, %2308 ], [ %2248, %2244 ]
  %2254 = sub i32 %2239, %2250
  %2255 = tail call i32 @llvm.smin.i32(i32 %2254, i32 0)
  %2256 = sub i32 %2254, %2255
  %2257 = zext i32 %2256 to i64
  %2258 = add nuw nsw i64 %2257, 1
  %2259 = add nsw i64 %2251, -1
  %2260 = icmp ult i32 %2256, 31
  br i1 %2260, label %2296, label %2261

2261:                                             ; preds = %2249
  %2262 = and i64 %2258, 8589934560
  %2263 = sub i64 %2252, %2262
  br label %2264

2264:                                             ; preds = %2264, %2261
  %2265 = phi i64 [ 0, %2261 ], [ %2288, %2264 ]
  %2266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2284, %2264 ]
  %2267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2285, %2264 ]
  %2268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2286, %2264 ]
  %2269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2287, %2264 ]
  %2270 = sub i64 %2252, %2265
  %2271 = getelementptr inbounds i32, ptr %9, i64 %2270
  %2272 = getelementptr inbounds i32, ptr %2271, i64 -7
  %2273 = load <8 x i32>, ptr %2272, align 4, !tbaa !5
  %2274 = shufflevector <8 x i32> %2273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2275 = getelementptr inbounds i32, ptr %2271, i64 -15
  %2276 = load <8 x i32>, ptr %2275, align 4, !tbaa !5
  %2277 = shufflevector <8 x i32> %2276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2278 = getelementptr inbounds i32, ptr %2271, i64 -23
  %2279 = load <8 x i32>, ptr %2278, align 4, !tbaa !5
  %2280 = shufflevector <8 x i32> %2279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2281 = getelementptr inbounds i32, ptr %2271, i64 -31
  %2282 = load <8 x i32>, ptr %2281, align 4, !tbaa !5
  %2283 = shufflevector <8 x i32> %2282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2284 = mul <8 x i32> %2274, %2266
  %2285 = mul <8 x i32> %2277, %2267
  %2286 = mul <8 x i32> %2280, %2268
  %2287 = mul <8 x i32> %2283, %2269
  %2288 = add nuw i64 %2265, 32
  %2289 = icmp eq i64 %2288, %2262
  br i1 %2289, label %2290, label %2264, !llvm.loop !274

2290:                                             ; preds = %2264
  %2291 = mul <8 x i32> %2285, %2284
  %2292 = mul <8 x i32> %2286, %2291
  %2293 = mul <8 x i32> %2287, %2292
  %2294 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2293)
  %2295 = icmp eq i64 %2258, %2262
  br i1 %2295, label %2308, label %2296

2296:                                             ; preds = %2249, %2290
  %2297 = phi i64 [ %2252, %2249 ], [ %2263, %2290 ]
  %2298 = phi i32 [ 1, %2249 ], [ %2294, %2290 ]
  br label %2299

2299:                                             ; preds = %2296, %2299
  %2300 = phi i64 [ %2305, %2299 ], [ %2297, %2296 ]
  %2301 = phi i32 [ %2304, %2299 ], [ %2298, %2296 ]
  %2302 = getelementptr inbounds i32, ptr %9, i64 %2300
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = mul nsw i32 %2303, %2301
  %2305 = add nsw i64 %2300, -1
  %2306 = trunc i64 %2300 to i32
  %2307 = icmp sgt i32 %2306, 0
  br i1 %2307, label %2299, label %2308, !llvm.loop !275

2308:                                             ; preds = %2299, %2290
  %2309 = phi i32 [ %2294, %2290 ], [ %2304, %2299 ]
  %2310 = and i64 %2259, 4294967295
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2310
  %2312 = load i32, ptr %2311, align 4, !tbaa !5
  %2313 = mul nsw i32 %2312, %2309
  %2314 = add nsw i32 %2313, %2253
  %2315 = icmp sgt i64 %2251, 2
  %2316 = add nsw i64 %2252, -1
  %2317 = add i32 %2250, 1
  br i1 %2315, label %2249, label %2318, !llvm.loop !276

2318:                                             ; preds = %2308, %2244
  %2319 = phi i32 [ %2248, %2244 ], [ %2314, %2308 ]
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds i32, ptr %1893, i64 %2320
  %2322 = load i32, ptr %2321, align 4, !tbaa !5
  %2323 = shl i32 %2245, 16
  %2324 = ashr exact i32 %2323, 16
  %2325 = and i32 %2322, 32768
  %2326 = icmp eq i32 %2325, 0
  %2327 = shl i32 %2322, 16
  %2328 = ashr exact i32 %2327, 16
  %2329 = sub nsw i32 0, %2328
  %2330 = select i1 %2326, i32 %2328, i32 %2329
  %2331 = tail call i32 @llvm.smax.i32(i32 %2330, i32 %2324)
  %2332 = fadd fast double %2247, 1.000000e+00
  %2333 = add nuw nsw i32 %2246, 1
  br i1 %2238, label %2334, label %2382

2334:                                             ; preds = %2318
  %2335 = load i32, ptr %4, align 4, !tbaa !5
  %2336 = load i32, ptr %12, align 4, !tbaa !5
  %2337 = add nsw i32 %2336, -1
  %2338 = icmp slt i32 %2335, %2337
  br i1 %2338, label %2358, label %2339

2339:                                             ; preds = %2334
  %2340 = icmp eq i32 %2335, %2337
  br i1 %2340, label %2341, label %2374

2341:                                             ; preds = %2339
  store i32 0, ptr %4, align 4, !tbaa !5
  %2342 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2342, ptr %6, align 4, !tbaa !5
  br i1 %2243, label %2382, label %2343

2343:                                             ; preds = %2341, %2368
  %2344 = phi i64 [ %2372, %2368 ], [ 1, %2341 ]
  %2345 = getelementptr inbounds i32, ptr %4, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = getelementptr inbounds i32, ptr %12, i64 %2344
  %2348 = load i32, ptr %2347, align 4, !tbaa !5
  %2349 = add nsw i32 %2348, -1
  %2350 = icmp slt i32 %2346, %2349
  br i1 %2350, label %2351, label %2366

2351:                                             ; preds = %2343
  br i1 %2338, label %2358, label %2352

2352:                                             ; preds = %2351
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2344
  %2354 = load i32, ptr %2353, align 4, !tbaa !5
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2356 = load i32, ptr %2355, align 4, !tbaa !5
  %2357 = add nsw i32 %2356, %2354
  store i32 %2357, ptr %2355, align 4, !tbaa !5
  br label %2377

2358:                                             ; preds = %2334, %2351
  %2359 = phi i32 [ %2346, %2351 ], [ %2335, %2334 ]
  %2360 = phi ptr [ %2345, %2351 ], [ %4, %2334 ]
  %2361 = phi i64 [ %2344, %2351 ], [ 0, %2334 ]
  %2362 = add nsw i32 %2359, 1
  store i32 %2362, ptr %2360, align 4, !tbaa !5
  %2363 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !5
  %2365 = getelementptr inbounds i32, ptr %6, i64 %2361
  br label %2377

2366:                                             ; preds = %2343
  %2367 = icmp eq i32 %2346, %2349
  br i1 %2367, label %2368, label %2374

2368:                                             ; preds = %2366
  store i32 0, ptr %2345, align 4, !tbaa !5
  %2369 = getelementptr inbounds i32, ptr %8, i64 %2344
  %2370 = load i32, ptr %2369, align 4, !tbaa !5
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2344
  store i32 %2370, ptr %2371, align 4, !tbaa !5
  %2372 = add nuw nsw i64 %2344, 1
  %2373 = icmp eq i64 %2372, %2241
  br i1 %2373, label %2382, label %2343, !llvm.loop !277

2374:                                             ; preds = %2339, %2366
  %2375 = trunc i32 %2331 to i16
  store i16 %2375, ptr %1895, align 2, !tbaa !78
  %2376 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2377:                                             ; preds = %2352, %2358
  %2378 = phi ptr [ %2365, %2358 ], [ %2345, %2352 ]
  %2379 = phi i32 [ %2364, %2358 ], [ 1, %2352 ]
  %2380 = load i32, ptr %2378, align 4, !tbaa !5
  %2381 = add nsw i32 %2380, %2379
  store i32 %2381, ptr %2378, align 4, !tbaa !5
  br label %2382

2382:                                             ; preds = %2368, %2377, %2341, %2318
  %2383 = icmp eq i32 %2333, %5
  br i1 %2383, label %5622, label %2244, !llvm.loop !278

2384:                                             ; preds = %2227, %2527
  %2385 = phi i32 [ 0, %2227 ], [ %2474, %2527 ]
  %2386 = phi i32 [ 0, %2227 ], [ %2476, %2527 ]
  %2387 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2228, label %2388, label %2457

2388:                                             ; preds = %2384, %2447
  %2389 = phi i32 [ %2456, %2447 ], [ 0, %2384 ]
  %2390 = phi i64 [ %2398, %2447 ], [ %2232, %2384 ]
  %2391 = phi i64 [ %2455, %2447 ], [ %2231, %2384 ]
  %2392 = phi i32 [ %2453, %2447 ], [ %2387, %2384 ]
  %2393 = sub i32 %2230, %2389
  %2394 = tail call i32 @llvm.smin.i32(i32 %2393, i32 0)
  %2395 = sub i32 %2393, %2394
  %2396 = zext i32 %2395 to i64
  %2397 = add nuw nsw i64 %2396, 1
  %2398 = add nsw i64 %2390, -1
  %2399 = icmp ult i32 %2395, 31
  br i1 %2399, label %2435, label %2400

2400:                                             ; preds = %2388
  %2401 = and i64 %2397, 8589934560
  %2402 = sub i64 %2391, %2401
  br label %2403

2403:                                             ; preds = %2403, %2400
  %2404 = phi i64 [ 0, %2400 ], [ %2427, %2403 ]
  %2405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2423, %2403 ]
  %2406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2424, %2403 ]
  %2407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2425, %2403 ]
  %2408 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2426, %2403 ]
  %2409 = sub i64 %2391, %2404
  %2410 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2411 = getelementptr inbounds i32, ptr %2410, i64 -7
  %2412 = load <8 x i32>, ptr %2411, align 4, !tbaa !5
  %2413 = shufflevector <8 x i32> %2412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2414 = getelementptr inbounds i32, ptr %2410, i64 -15
  %2415 = load <8 x i32>, ptr %2414, align 4, !tbaa !5
  %2416 = shufflevector <8 x i32> %2415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2417 = getelementptr inbounds i32, ptr %2410, i64 -23
  %2418 = load <8 x i32>, ptr %2417, align 4, !tbaa !5
  %2419 = shufflevector <8 x i32> %2418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2420 = getelementptr inbounds i32, ptr %2410, i64 -31
  %2421 = load <8 x i32>, ptr %2420, align 4, !tbaa !5
  %2422 = shufflevector <8 x i32> %2421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2423 = mul <8 x i32> %2413, %2405
  %2424 = mul <8 x i32> %2416, %2406
  %2425 = mul <8 x i32> %2419, %2407
  %2426 = mul <8 x i32> %2422, %2408
  %2427 = add nuw i64 %2404, 32
  %2428 = icmp eq i64 %2427, %2401
  br i1 %2428, label %2429, label %2403, !llvm.loop !279

2429:                                             ; preds = %2403
  %2430 = mul <8 x i32> %2424, %2423
  %2431 = mul <8 x i32> %2425, %2430
  %2432 = mul <8 x i32> %2426, %2431
  %2433 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2432)
  %2434 = icmp eq i64 %2397, %2401
  br i1 %2434, label %2447, label %2435

2435:                                             ; preds = %2388, %2429
  %2436 = phi i64 [ %2391, %2388 ], [ %2402, %2429 ]
  %2437 = phi i32 [ 1, %2388 ], [ %2433, %2429 ]
  br label %2438

2438:                                             ; preds = %2435, %2438
  %2439 = phi i64 [ %2444, %2438 ], [ %2436, %2435 ]
  %2440 = phi i32 [ %2443, %2438 ], [ %2437, %2435 ]
  %2441 = getelementptr inbounds i32, ptr %11, i64 %2439
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = mul nsw i32 %2442, %2440
  %2444 = add nsw i64 %2439, -1
  %2445 = trunc i64 %2439 to i32
  %2446 = icmp sgt i32 %2445, 0
  br i1 %2446, label %2438, label %2447, !llvm.loop !280

2447:                                             ; preds = %2438, %2429
  %2448 = phi i32 [ %2433, %2429 ], [ %2443, %2438 ]
  %2449 = and i64 %2398, 4294967295
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2449
  %2451 = load i32, ptr %2450, align 4, !tbaa !5
  %2452 = mul nsw i32 %2451, %2448
  %2453 = add nsw i32 %2452, %2392
  %2454 = icmp sgt i64 %2390, 2
  %2455 = add nsw i64 %2391, -1
  %2456 = add i32 %2389, 1
  br i1 %2454, label %2388, label %2457, !llvm.loop !281

2457:                                             ; preds = %2447, %2384
  %2458 = phi i32 [ %2387, %2384 ], [ %2453, %2447 ]
  %2459 = icmp slt i32 %2458, %5
  br i1 %2459, label %2462, label %2460

2460:                                             ; preds = %2457
  %2461 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

2462:                                             ; preds = %2457
  %2463 = sext i32 %2458 to i64
  %2464 = getelementptr inbounds i32, ptr %1893, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !5
  %2466 = shl i32 %2385, 16
  %2467 = ashr exact i32 %2466, 16
  %2468 = and i32 %2465, 32768
  %2469 = icmp eq i32 %2468, 0
  %2470 = shl i32 %2465, 16
  %2471 = ashr exact i32 %2470, 16
  %2472 = sub nsw i32 0, %2471
  %2473 = select i1 %2469, i32 %2471, i32 %2472
  %2474 = tail call i32 @llvm.smax.i32(i32 %2473, i32 %2467)
  %2475 = trunc i32 %2474 to i16
  store i16 %2475, ptr %1895, align 2, !tbaa !78
  %2476 = add nuw nsw i32 %2386, 1
  br i1 %2229, label %2477, label %2527

2477:                                             ; preds = %2462
  %2478 = load i32, ptr %4, align 4, !tbaa !5
  %2479 = load i32, ptr %12, align 4, !tbaa !5
  %2480 = add nsw i32 %2479, -1
  %2481 = icmp slt i32 %2478, %2480
  br i1 %2481, label %2504, label %2482

2482:                                             ; preds = %2477
  %2483 = icmp eq i32 %2478, %2480
  br i1 %2483, label %2484, label %2520

2484:                                             ; preds = %2482
  store i32 0, ptr %4, align 4, !tbaa !5
  %2485 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2485, ptr %6, align 4, !tbaa !5
  br i1 %2234, label %2527, label %2486

2486:                                             ; preds = %2484, %2514
  %2487 = phi i64 [ %2518, %2514 ], [ 1, %2484 ]
  %2488 = getelementptr inbounds i32, ptr %4, i64 %2487
  %2489 = load i32, ptr %2488, align 4, !tbaa !5
  %2490 = getelementptr inbounds i32, ptr %12, i64 %2487
  %2491 = load i32, ptr %2490, align 4, !tbaa !5
  %2492 = add nsw i32 %2491, -1
  %2493 = icmp slt i32 %2489, %2492
  br i1 %2493, label %2494, label %2512

2494:                                             ; preds = %2486
  br i1 %2481, label %2504, label %2495

2495:                                             ; preds = %2494
  %2496 = shl i64 %2487, 32
  %2497 = add i64 %2496, -4294967296
  %2498 = ashr exact i64 %2497, 32
  %2499 = getelementptr inbounds i32, ptr %7, i64 %2498
  %2500 = load i32, ptr %2499, align 4, !tbaa !5
  %2501 = getelementptr inbounds i32, ptr %6, i64 %2487
  %2502 = load i32, ptr %2501, align 4, !tbaa !5
  %2503 = add nsw i32 %2502, %2500
  store i32 %2503, ptr %2501, align 4, !tbaa !5
  br label %2522

2504:                                             ; preds = %2477, %2494
  %2505 = phi i32 [ %2489, %2494 ], [ %2478, %2477 ]
  %2506 = phi ptr [ %2488, %2494 ], [ %4, %2477 ]
  %2507 = phi i64 [ %2487, %2494 ], [ 0, %2477 ]
  %2508 = add nsw i32 %2505, 1
  store i32 %2508, ptr %2506, align 4, !tbaa !5
  %2509 = getelementptr inbounds i32, ptr %7, i64 %2507
  %2510 = load i32, ptr %2509, align 4, !tbaa !5
  %2511 = getelementptr inbounds i32, ptr %6, i64 %2507
  br label %2522

2512:                                             ; preds = %2486
  %2513 = icmp eq i32 %2489, %2492
  br i1 %2513, label %2514, label %2520

2514:                                             ; preds = %2512
  store i32 0, ptr %2488, align 4, !tbaa !5
  %2515 = getelementptr inbounds i32, ptr %8, i64 %2487
  %2516 = load i32, ptr %2515, align 4, !tbaa !5
  %2517 = getelementptr inbounds i32, ptr %6, i64 %2487
  store i32 %2516, ptr %2517, align 4, !tbaa !5
  %2518 = add nuw nsw i64 %2487, 1
  %2519 = icmp eq i64 %2518, %2232
  br i1 %2519, label %2527, label %2486, !llvm.loop !282

2520:                                             ; preds = %2482, %2512
  %2521 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2522:                                             ; preds = %2495, %2504
  %2523 = phi ptr [ %2511, %2504 ], [ %2488, %2495 ]
  %2524 = phi i32 [ %2510, %2504 ], [ 1, %2495 ]
  %2525 = load i32, ptr %2523, align 4, !tbaa !5
  %2526 = add nsw i32 %2525, %2524
  store i32 %2526, ptr %2523, align 4, !tbaa !5
  br label %2527

2527:                                             ; preds = %2514, %2522, %2484, %2462
  %2528 = icmp eq i32 %2476, %5
  br i1 %2528, label %5630, label %2384, !llvm.loop !283

2529:                                             ; preds = %1908
  %2530 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 385, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

2531:                                             ; preds = %18
  %2532 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2533 = load ptr, ptr %2532, align 8, !tbaa !9
  %2534 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2535 = load ptr, ptr %2534, align 8, !tbaa !9
  store i32 0, ptr %2535, align 4, !tbaa !5
  %2536 = icmp eq i32 %13, 0
  br i1 %2536, label %2537, label %2542

2537:                                             ; preds = %2531
  %2538 = load i32, ptr %2533, align 4, !tbaa !5
  %2539 = icmp eq i32 %2538, 0
  %2540 = tail call i32 @llvm.abs.i32(i32 %2538, i1 true)
  %2541 = select i1 %2539, i32 0, i32 %2540
  store i32 %2541, ptr %2535, align 4, !tbaa !5
  br label %5630

2542:                                             ; preds = %2531
  switch i32 %1, label %3143 [
    i32 1, label %2543
    i32 0, label %2851
  ]

2543:                                             ; preds = %2542
  %2544 = getelementptr inbounds i32, ptr %3, i64 %19
  %2545 = load i32, ptr %2544, align 4, !tbaa !5
  %2546 = icmp eq i32 %2545, 0
  %2547 = icmp sgt i32 %5, 0
  br i1 %2546, label %2557, label %2548

2548:                                             ; preds = %2543
  br i1 %2547, label %2549, label %5630

2549:                                             ; preds = %2548
  %2550 = icmp sgt i32 %13, 1
  %2551 = icmp sgt i32 %13, 0
  %2552 = add i32 %13, -2
  %2553 = zext i32 %2552 to i64
  %2554 = zext i32 %13 to i64
  %2555 = add nuw i32 %5, 1
  %2556 = icmp eq i32 %13, 1
  br label %2708

2557:                                             ; preds = %2543
  br i1 %2547, label %2558, label %5630

2558:                                             ; preds = %2557
  %2559 = icmp sgt i32 %13, 1
  %2560 = icmp sgt i32 %13, 0
  %2561 = add i32 %13, -2
  %2562 = zext i32 %2561 to i64
  %2563 = zext i32 %13 to i64
  %2564 = add nuw i32 %5, 1
  %2565 = icmp eq i32 %13, 1
  br label %2566

2566:                                             ; preds = %2558, %2706
  %2567 = phi i32 [ 0, %2558 ], [ %2658, %2706 ]
  %2568 = phi double [ 0.000000e+00, %2558 ], [ %2657, %2706 ]
  %2569 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2559, label %2570, label %2639

2570:                                             ; preds = %2566, %2629
  %2571 = phi i32 [ %2638, %2629 ], [ 0, %2566 ]
  %2572 = phi i64 [ %2580, %2629 ], [ %2563, %2566 ]
  %2573 = phi i64 [ %2637, %2629 ], [ %2562, %2566 ]
  %2574 = phi i32 [ %2635, %2629 ], [ %2569, %2566 ]
  %2575 = sub i32 %2561, %2571
  %2576 = tail call i32 @llvm.smin.i32(i32 %2575, i32 0)
  %2577 = sub i32 %2575, %2576
  %2578 = zext i32 %2577 to i64
  %2579 = add nuw nsw i64 %2578, 1
  %2580 = add nsw i64 %2572, -1
  %2581 = icmp ult i32 %2577, 31
  br i1 %2581, label %2617, label %2582

2582:                                             ; preds = %2570
  %2583 = and i64 %2579, 8589934560
  %2584 = sub i64 %2573, %2583
  br label %2585

2585:                                             ; preds = %2585, %2582
  %2586 = phi i64 [ 0, %2582 ], [ %2609, %2585 ]
  %2587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2605, %2585 ]
  %2588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2606, %2585 ]
  %2589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2607, %2585 ]
  %2590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2608, %2585 ]
  %2591 = sub i64 %2573, %2586
  %2592 = getelementptr inbounds i32, ptr %9, i64 %2591
  %2593 = getelementptr inbounds i32, ptr %2592, i64 -7
  %2594 = load <8 x i32>, ptr %2593, align 4, !tbaa !5
  %2595 = shufflevector <8 x i32> %2594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2596 = getelementptr inbounds i32, ptr %2592, i64 -15
  %2597 = load <8 x i32>, ptr %2596, align 4, !tbaa !5
  %2598 = shufflevector <8 x i32> %2597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2599 = getelementptr inbounds i32, ptr %2592, i64 -23
  %2600 = load <8 x i32>, ptr %2599, align 4, !tbaa !5
  %2601 = shufflevector <8 x i32> %2600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2602 = getelementptr inbounds i32, ptr %2592, i64 -31
  %2603 = load <8 x i32>, ptr %2602, align 4, !tbaa !5
  %2604 = shufflevector <8 x i32> %2603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2605 = mul <8 x i32> %2595, %2587
  %2606 = mul <8 x i32> %2598, %2588
  %2607 = mul <8 x i32> %2601, %2589
  %2608 = mul <8 x i32> %2604, %2590
  %2609 = add nuw i64 %2586, 32
  %2610 = icmp eq i64 %2609, %2583
  br i1 %2610, label %2611, label %2585, !llvm.loop !284

2611:                                             ; preds = %2585
  %2612 = mul <8 x i32> %2606, %2605
  %2613 = mul <8 x i32> %2607, %2612
  %2614 = mul <8 x i32> %2608, %2613
  %2615 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2614)
  %2616 = icmp eq i64 %2579, %2583
  br i1 %2616, label %2629, label %2617

2617:                                             ; preds = %2570, %2611
  %2618 = phi i64 [ %2573, %2570 ], [ %2584, %2611 ]
  %2619 = phi i32 [ 1, %2570 ], [ %2615, %2611 ]
  br label %2620

2620:                                             ; preds = %2617, %2620
  %2621 = phi i64 [ %2626, %2620 ], [ %2618, %2617 ]
  %2622 = phi i32 [ %2625, %2620 ], [ %2619, %2617 ]
  %2623 = getelementptr inbounds i32, ptr %9, i64 %2621
  %2624 = load i32, ptr %2623, align 4, !tbaa !5
  %2625 = mul nsw i32 %2624, %2622
  %2626 = add nsw i64 %2621, -1
  %2627 = trunc i64 %2621 to i32
  %2628 = icmp sgt i32 %2627, 0
  br i1 %2628, label %2620, label %2629, !llvm.loop !285

2629:                                             ; preds = %2620, %2611
  %2630 = phi i32 [ %2615, %2611 ], [ %2625, %2620 ]
  %2631 = and i64 %2580, 4294967295
  %2632 = getelementptr inbounds i32, ptr %6, i64 %2631
  %2633 = load i32, ptr %2632, align 4, !tbaa !5
  %2634 = mul nsw i32 %2633, %2630
  %2635 = add nsw i32 %2634, %2574
  %2636 = icmp sgt i64 %2572, 2
  %2637 = add nsw i64 %2573, -1
  %2638 = add i32 %2571, 1
  br i1 %2636, label %2570, label %2639, !llvm.loop !286

2639:                                             ; preds = %2629, %2566
  %2640 = phi i32 [ %2569, %2566 ], [ %2635, %2629 ]
  %2641 = sext i32 %2640 to i64
  %2642 = getelementptr inbounds double, ptr %2, i64 %2641
  %2643 = load double, ptr %2642, align 8, !tbaa !18
  %2644 = getelementptr inbounds i32, ptr %2533, i64 %2641
  %2645 = load i32, ptr %2644, align 4, !tbaa !5
  %2646 = load i32, ptr %2535, align 4, !tbaa !5
  %2647 = sitofp i32 %2646 to double
  %2648 = sitofp i32 %2645 to double
  %2649 = fmul fast double %2643, %2648
  %2650 = fcmp fast uge double %2649, 0.000000e+00
  %2651 = fneg fast double %2649
  %2652 = tail call fast double @llvm.fabs.f64(double %2649)
  %2653 = fcmp fast ole double %2652, %2647
  %2654 = select nnan ninf i1 %2650, double %2649, double %2651
  %2655 = select i1 %2653, double %2647, double %2654
  %2656 = fptosi double %2655 to i32
  store i32 %2656, ptr %2535, align 4, !tbaa !5
  %2657 = fadd fast double %2643, %2568
  %2658 = add nuw nsw i32 %2567, 1
  br i1 %2560, label %2659, label %2706

2659:                                             ; preds = %2639
  %2660 = load i32, ptr %4, align 4, !tbaa !5
  %2661 = load i32, ptr %12, align 4, !tbaa !5
  %2662 = add nsw i32 %2661, -1
  %2663 = icmp slt i32 %2660, %2662
  br i1 %2663, label %2683, label %2664

2664:                                             ; preds = %2659
  %2665 = icmp eq i32 %2660, %2662
  br i1 %2665, label %2666, label %2699

2666:                                             ; preds = %2664
  store i32 0, ptr %4, align 4, !tbaa !5
  %2667 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2667, ptr %6, align 4, !tbaa !5
  br i1 %2565, label %2706, label %2668

2668:                                             ; preds = %2666, %2693
  %2669 = phi i64 [ %2697, %2693 ], [ 1, %2666 ]
  %2670 = getelementptr inbounds i32, ptr %4, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = getelementptr inbounds i32, ptr %12, i64 %2669
  %2673 = load i32, ptr %2672, align 4, !tbaa !5
  %2674 = add nsw i32 %2673, -1
  %2675 = icmp slt i32 %2671, %2674
  br i1 %2675, label %2676, label %2691

2676:                                             ; preds = %2668
  br i1 %2663, label %2683, label %2677

2677:                                             ; preds = %2676
  %2678 = getelementptr inbounds i32, ptr %7, i64 %2669
  %2679 = load i32, ptr %2678, align 4, !tbaa !5
  %2680 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = add nsw i32 %2681, %2679
  store i32 %2682, ptr %2680, align 4, !tbaa !5
  br label %2701

2683:                                             ; preds = %2659, %2676
  %2684 = phi i32 [ %2671, %2676 ], [ %2660, %2659 ]
  %2685 = phi ptr [ %2670, %2676 ], [ %4, %2659 ]
  %2686 = phi i64 [ %2669, %2676 ], [ 0, %2659 ]
  %2687 = add nsw i32 %2684, 1
  store i32 %2687, ptr %2685, align 4, !tbaa !5
  %2688 = getelementptr inbounds i32, ptr %7, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = getelementptr inbounds i32, ptr %6, i64 %2686
  br label %2701

2691:                                             ; preds = %2668
  %2692 = icmp eq i32 %2671, %2674
  br i1 %2692, label %2693, label %2699

2693:                                             ; preds = %2691
  store i32 0, ptr %2670, align 4, !tbaa !5
  %2694 = getelementptr inbounds i32, ptr %8, i64 %2669
  %2695 = load i32, ptr %2694, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2669
  store i32 %2695, ptr %2696, align 4, !tbaa !5
  %2697 = add nuw nsw i64 %2669, 1
  %2698 = icmp eq i64 %2697, %2563
  br i1 %2698, label %2706, label %2668, !llvm.loop !287

2699:                                             ; preds = %2664, %2691
  %2700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2701:                                             ; preds = %2677, %2683
  %2702 = phi ptr [ %2690, %2683 ], [ %2670, %2677 ]
  %2703 = phi i32 [ %2689, %2683 ], [ 1, %2677 ]
  %2704 = load i32, ptr %2702, align 4, !tbaa !5
  %2705 = add nsw i32 %2704, %2703
  store i32 %2705, ptr %2702, align 4, !tbaa !5
  br label %2706

2706:                                             ; preds = %2693, %2701, %2666, %2639
  %2707 = icmp eq i32 %2658, %5
  br i1 %2707, label %5630, label %2566, !llvm.loop !288

2708:                                             ; preds = %2549, %2849
  %2709 = phi i32 [ 0, %2549 ], [ %2798, %2849 ]
  %2710 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2550, label %2711, label %2780

2711:                                             ; preds = %2708, %2770
  %2712 = phi i32 [ %2779, %2770 ], [ 0, %2708 ]
  %2713 = phi i64 [ %2721, %2770 ], [ %2554, %2708 ]
  %2714 = phi i64 [ %2778, %2770 ], [ %2553, %2708 ]
  %2715 = phi i32 [ %2776, %2770 ], [ %2710, %2708 ]
  %2716 = sub i32 %2552, %2712
  %2717 = tail call i32 @llvm.smin.i32(i32 %2716, i32 0)
  %2718 = sub i32 %2716, %2717
  %2719 = zext i32 %2718 to i64
  %2720 = add nuw nsw i64 %2719, 1
  %2721 = add nsw i64 %2713, -1
  %2722 = icmp ult i32 %2718, 31
  br i1 %2722, label %2758, label %2723

2723:                                             ; preds = %2711
  %2724 = and i64 %2720, 8589934560
  %2725 = sub i64 %2714, %2724
  br label %2726

2726:                                             ; preds = %2726, %2723
  %2727 = phi i64 [ 0, %2723 ], [ %2750, %2726 ]
  %2728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2746, %2726 ]
  %2729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2747, %2726 ]
  %2730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2748, %2726 ]
  %2731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2749, %2726 ]
  %2732 = sub i64 %2714, %2727
  %2733 = getelementptr inbounds i32, ptr %11, i64 %2732
  %2734 = getelementptr inbounds i32, ptr %2733, i64 -7
  %2735 = load <8 x i32>, ptr %2734, align 4, !tbaa !5
  %2736 = shufflevector <8 x i32> %2735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2737 = getelementptr inbounds i32, ptr %2733, i64 -15
  %2738 = load <8 x i32>, ptr %2737, align 4, !tbaa !5
  %2739 = shufflevector <8 x i32> %2738, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2740 = getelementptr inbounds i32, ptr %2733, i64 -23
  %2741 = load <8 x i32>, ptr %2740, align 4, !tbaa !5
  %2742 = shufflevector <8 x i32> %2741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2743 = getelementptr inbounds i32, ptr %2733, i64 -31
  %2744 = load <8 x i32>, ptr %2743, align 4, !tbaa !5
  %2745 = shufflevector <8 x i32> %2744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2746 = mul <8 x i32> %2736, %2728
  %2747 = mul <8 x i32> %2739, %2729
  %2748 = mul <8 x i32> %2742, %2730
  %2749 = mul <8 x i32> %2745, %2731
  %2750 = add nuw i64 %2727, 32
  %2751 = icmp eq i64 %2750, %2724
  br i1 %2751, label %2752, label %2726, !llvm.loop !289

2752:                                             ; preds = %2726
  %2753 = mul <8 x i32> %2747, %2746
  %2754 = mul <8 x i32> %2748, %2753
  %2755 = mul <8 x i32> %2749, %2754
  %2756 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2755)
  %2757 = icmp eq i64 %2720, %2724
  br i1 %2757, label %2770, label %2758

2758:                                             ; preds = %2711, %2752
  %2759 = phi i64 [ %2714, %2711 ], [ %2725, %2752 ]
  %2760 = phi i32 [ 1, %2711 ], [ %2756, %2752 ]
  br label %2761

2761:                                             ; preds = %2758, %2761
  %2762 = phi i64 [ %2767, %2761 ], [ %2759, %2758 ]
  %2763 = phi i32 [ %2766, %2761 ], [ %2760, %2758 ]
  %2764 = getelementptr inbounds i32, ptr %11, i64 %2762
  %2765 = load i32, ptr %2764, align 4, !tbaa !5
  %2766 = mul nsw i32 %2765, %2763
  %2767 = add nsw i64 %2762, -1
  %2768 = trunc i64 %2762 to i32
  %2769 = icmp sgt i32 %2768, 0
  br i1 %2769, label %2761, label %2770, !llvm.loop !290

2770:                                             ; preds = %2761, %2752
  %2771 = phi i32 [ %2756, %2752 ], [ %2766, %2761 ]
  %2772 = and i64 %2721, 4294967295
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2772
  %2774 = load i32, ptr %2773, align 4, !tbaa !5
  %2775 = mul nsw i32 %2774, %2771
  %2776 = add nsw i32 %2775, %2715
  %2777 = icmp sgt i64 %2713, 2
  %2778 = add nsw i64 %2714, -1
  %2779 = add i32 %2712, 1
  br i1 %2777, label %2711, label %2780, !llvm.loop !291

2780:                                             ; preds = %2770, %2708
  %2781 = phi i32 [ %2710, %2708 ], [ %2776, %2770 ]
  %2782 = icmp slt i32 %2781, %5
  br i1 %2782, label %2785, label %2783

2783:                                             ; preds = %2780
  %2784 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

2785:                                             ; preds = %2780
  %2786 = sext i32 %2781 to i64
  %2787 = getelementptr inbounds i32, ptr %2533, i64 %2786
  %2788 = load i32, ptr %2787, align 4, !tbaa !5
  %2789 = load i32, ptr %2535, align 4, !tbaa !5
  %2790 = sitofp i32 %2789 to double
  %2791 = sitofp i32 %2788 to double
  %2792 = icmp slt i32 %2788, 0
  %2793 = fneg fast double %2791
  %2794 = select i1 %2792, double %2793, double %2791
  %2795 = fcmp fast ole double %2794, %2790
  %2796 = select fast i1 %2795, double %2790, double %2794
  %2797 = fptosi double %2796 to i32
  store i32 %2797, ptr %2535, align 4, !tbaa !5
  %2798 = add nuw nsw i32 %2709, 1
  br i1 %2551, label %2799, label %2849

2799:                                             ; preds = %2785
  %2800 = load i32, ptr %4, align 4, !tbaa !5
  %2801 = load i32, ptr %12, align 4, !tbaa !5
  %2802 = add nsw i32 %2801, -1
  %2803 = icmp slt i32 %2800, %2802
  br i1 %2803, label %2826, label %2804

2804:                                             ; preds = %2799
  %2805 = icmp eq i32 %2800, %2802
  br i1 %2805, label %2806, label %2842

2806:                                             ; preds = %2804
  store i32 0, ptr %4, align 4, !tbaa !5
  %2807 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2807, ptr %6, align 4, !tbaa !5
  br i1 %2556, label %2849, label %2808

2808:                                             ; preds = %2806, %2836
  %2809 = phi i64 [ %2840, %2836 ], [ 1, %2806 ]
  %2810 = getelementptr inbounds i32, ptr %4, i64 %2809
  %2811 = load i32, ptr %2810, align 4, !tbaa !5
  %2812 = getelementptr inbounds i32, ptr %12, i64 %2809
  %2813 = load i32, ptr %2812, align 4, !tbaa !5
  %2814 = add nsw i32 %2813, -1
  %2815 = icmp slt i32 %2811, %2814
  br i1 %2815, label %2816, label %2834

2816:                                             ; preds = %2808
  br i1 %2803, label %2826, label %2817

2817:                                             ; preds = %2816
  %2818 = shl i64 %2809, 32
  %2819 = add i64 %2818, -4294967296
  %2820 = ashr exact i64 %2819, 32
  %2821 = getelementptr inbounds i32, ptr %7, i64 %2820
  %2822 = load i32, ptr %2821, align 4, !tbaa !5
  %2823 = getelementptr inbounds i32, ptr %6, i64 %2809
  %2824 = load i32, ptr %2823, align 4, !tbaa !5
  %2825 = add nsw i32 %2824, %2822
  store i32 %2825, ptr %2823, align 4, !tbaa !5
  br label %2844

2826:                                             ; preds = %2799, %2816
  %2827 = phi i32 [ %2811, %2816 ], [ %2800, %2799 ]
  %2828 = phi ptr [ %2810, %2816 ], [ %4, %2799 ]
  %2829 = phi i64 [ %2809, %2816 ], [ 0, %2799 ]
  %2830 = add nsw i32 %2827, 1
  store i32 %2830, ptr %2828, align 4, !tbaa !5
  %2831 = getelementptr inbounds i32, ptr %7, i64 %2829
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = getelementptr inbounds i32, ptr %6, i64 %2829
  br label %2844

2834:                                             ; preds = %2808
  %2835 = icmp eq i32 %2811, %2814
  br i1 %2835, label %2836, label %2842

2836:                                             ; preds = %2834
  store i32 0, ptr %2810, align 4, !tbaa !5
  %2837 = getelementptr inbounds i32, ptr %8, i64 %2809
  %2838 = load i32, ptr %2837, align 4, !tbaa !5
  %2839 = getelementptr inbounds i32, ptr %6, i64 %2809
  store i32 %2838, ptr %2839, align 4, !tbaa !5
  %2840 = add nuw nsw i64 %2809, 1
  %2841 = icmp eq i64 %2840, %2554
  br i1 %2841, label %2849, label %2808, !llvm.loop !292

2842:                                             ; preds = %2804, %2834
  %2843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2844:                                             ; preds = %2817, %2826
  %2845 = phi ptr [ %2833, %2826 ], [ %2810, %2817 ]
  %2846 = phi i32 [ %2832, %2826 ], [ 1, %2817 ]
  %2847 = load i32, ptr %2845, align 4, !tbaa !5
  %2848 = add nsw i32 %2847, %2846
  store i32 %2848, ptr %2845, align 4, !tbaa !5
  br label %2849

2849:                                             ; preds = %2836, %2844, %2806, %2785
  %2850 = icmp eq i32 %2798, %5
  br i1 %2850, label %5630, label %2708, !llvm.loop !293

2851:                                             ; preds = %2542
  %2852 = getelementptr inbounds i32, ptr %3, i64 %19
  %2853 = load i32, ptr %2852, align 4, !tbaa !5
  %2854 = icmp eq i32 %2853, 0
  %2855 = icmp sgt i32 %5, 0
  br i1 %2854, label %2865, label %2856

2856:                                             ; preds = %2851
  br i1 %2855, label %2857, label %5630

2857:                                             ; preds = %2856
  %2858 = icmp sgt i32 %13, 1
  %2859 = icmp sgt i32 %13, 0
  %2860 = add i32 %13, -2
  %2861 = zext i32 %2860 to i64
  %2862 = zext i32 %13 to i64
  %2863 = add nuw i32 %5, 1
  %2864 = icmp eq i32 %13, 1
  br label %3006

2865:                                             ; preds = %2851
  br i1 %2855, label %2866, label %5630

2866:                                             ; preds = %2865
  %2867 = icmp sgt i32 %13, 1
  %2868 = icmp sgt i32 %13, 0
  %2869 = add i32 %13, -2
  %2870 = zext i32 %2869 to i64
  %2871 = zext i32 %13 to i64
  %2872 = add nuw i32 %5, 1
  %2873 = icmp eq i32 %13, 1
  br label %2874

2874:                                             ; preds = %2866, %3004
  %2875 = phi i32 [ 0, %2866 ], [ %2956, %3004 ]
  %2876 = phi double [ 0.000000e+00, %2866 ], [ %2955, %3004 ]
  %2877 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2867, label %2878, label %2947

2878:                                             ; preds = %2874, %2937
  %2879 = phi i32 [ %2946, %2937 ], [ 0, %2874 ]
  %2880 = phi i64 [ %2888, %2937 ], [ %2871, %2874 ]
  %2881 = phi i64 [ %2945, %2937 ], [ %2870, %2874 ]
  %2882 = phi i32 [ %2943, %2937 ], [ %2877, %2874 ]
  %2883 = sub i32 %2869, %2879
  %2884 = tail call i32 @llvm.smin.i32(i32 %2883, i32 0)
  %2885 = sub i32 %2883, %2884
  %2886 = zext i32 %2885 to i64
  %2887 = add nuw nsw i64 %2886, 1
  %2888 = add nsw i64 %2880, -1
  %2889 = icmp ult i32 %2885, 31
  br i1 %2889, label %2925, label %2890

2890:                                             ; preds = %2878
  %2891 = and i64 %2887, 8589934560
  %2892 = sub i64 %2881, %2891
  br label %2893

2893:                                             ; preds = %2893, %2890
  %2894 = phi i64 [ 0, %2890 ], [ %2917, %2893 ]
  %2895 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2913, %2893 ]
  %2896 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2914, %2893 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2915, %2893 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2916, %2893 ]
  %2899 = sub i64 %2881, %2894
  %2900 = getelementptr inbounds i32, ptr %9, i64 %2899
  %2901 = getelementptr inbounds i32, ptr %2900, i64 -7
  %2902 = load <8 x i32>, ptr %2901, align 4, !tbaa !5
  %2903 = shufflevector <8 x i32> %2902, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2904 = getelementptr inbounds i32, ptr %2900, i64 -15
  %2905 = load <8 x i32>, ptr %2904, align 4, !tbaa !5
  %2906 = shufflevector <8 x i32> %2905, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2907 = getelementptr inbounds i32, ptr %2900, i64 -23
  %2908 = load <8 x i32>, ptr %2907, align 4, !tbaa !5
  %2909 = shufflevector <8 x i32> %2908, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2910 = getelementptr inbounds i32, ptr %2900, i64 -31
  %2911 = load <8 x i32>, ptr %2910, align 4, !tbaa !5
  %2912 = shufflevector <8 x i32> %2911, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2913 = mul <8 x i32> %2903, %2895
  %2914 = mul <8 x i32> %2906, %2896
  %2915 = mul <8 x i32> %2909, %2897
  %2916 = mul <8 x i32> %2912, %2898
  %2917 = add nuw i64 %2894, 32
  %2918 = icmp eq i64 %2917, %2891
  br i1 %2918, label %2919, label %2893, !llvm.loop !294

2919:                                             ; preds = %2893
  %2920 = mul <8 x i32> %2914, %2913
  %2921 = mul <8 x i32> %2915, %2920
  %2922 = mul <8 x i32> %2916, %2921
  %2923 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2922)
  %2924 = icmp eq i64 %2887, %2891
  br i1 %2924, label %2937, label %2925

2925:                                             ; preds = %2878, %2919
  %2926 = phi i64 [ %2881, %2878 ], [ %2892, %2919 ]
  %2927 = phi i32 [ 1, %2878 ], [ %2923, %2919 ]
  br label %2928

2928:                                             ; preds = %2925, %2928
  %2929 = phi i64 [ %2934, %2928 ], [ %2926, %2925 ]
  %2930 = phi i32 [ %2933, %2928 ], [ %2927, %2925 ]
  %2931 = getelementptr inbounds i32, ptr %9, i64 %2929
  %2932 = load i32, ptr %2931, align 4, !tbaa !5
  %2933 = mul nsw i32 %2932, %2930
  %2934 = add nsw i64 %2929, -1
  %2935 = trunc i64 %2929 to i32
  %2936 = icmp sgt i32 %2935, 0
  br i1 %2936, label %2928, label %2937, !llvm.loop !295

2937:                                             ; preds = %2928, %2919
  %2938 = phi i32 [ %2923, %2919 ], [ %2933, %2928 ]
  %2939 = and i64 %2888, 4294967295
  %2940 = getelementptr inbounds i32, ptr %6, i64 %2939
  %2941 = load i32, ptr %2940, align 4, !tbaa !5
  %2942 = mul nsw i32 %2941, %2938
  %2943 = add nsw i32 %2942, %2882
  %2944 = icmp sgt i64 %2880, 2
  %2945 = add nsw i64 %2881, -1
  %2946 = add i32 %2879, 1
  br i1 %2944, label %2878, label %2947, !llvm.loop !296

2947:                                             ; preds = %2937, %2874
  %2948 = phi i32 [ %2877, %2874 ], [ %2943, %2937 ]
  %2949 = sext i32 %2948 to i64
  %2950 = getelementptr inbounds i32, ptr %2533, i64 %2949
  %2951 = load i32, ptr %2950, align 4, !tbaa !5
  %2952 = load i32, ptr %2535, align 4, !tbaa !5
  %2953 = tail call i32 @llvm.abs.i32(i32 %2951, i1 true)
  %2954 = tail call i32 @llvm.smax.i32(i32 %2952, i32 %2953)
  store i32 %2954, ptr %2535, align 4, !tbaa !5
  %2955 = fadd fast double %2876, 1.000000e+00
  %2956 = add nuw nsw i32 %2875, 1
  br i1 %2868, label %2957, label %3004

2957:                                             ; preds = %2947
  %2958 = load i32, ptr %4, align 4, !tbaa !5
  %2959 = load i32, ptr %12, align 4, !tbaa !5
  %2960 = add nsw i32 %2959, -1
  %2961 = icmp slt i32 %2958, %2960
  br i1 %2961, label %2981, label %2962

2962:                                             ; preds = %2957
  %2963 = icmp eq i32 %2958, %2960
  br i1 %2963, label %2964, label %2997

2964:                                             ; preds = %2962
  store i32 0, ptr %4, align 4, !tbaa !5
  %2965 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2965, ptr %6, align 4, !tbaa !5
  br i1 %2873, label %3004, label %2966

2966:                                             ; preds = %2964, %2991
  %2967 = phi i64 [ %2995, %2991 ], [ 1, %2964 ]
  %2968 = getelementptr inbounds i32, ptr %4, i64 %2967
  %2969 = load i32, ptr %2968, align 4, !tbaa !5
  %2970 = getelementptr inbounds i32, ptr %12, i64 %2967
  %2971 = load i32, ptr %2970, align 4, !tbaa !5
  %2972 = add nsw i32 %2971, -1
  %2973 = icmp slt i32 %2969, %2972
  br i1 %2973, label %2974, label %2989

2974:                                             ; preds = %2966
  br i1 %2961, label %2981, label %2975

2975:                                             ; preds = %2974
  %2976 = getelementptr inbounds i32, ptr %7, i64 %2967
  %2977 = load i32, ptr %2976, align 4, !tbaa !5
  %2978 = getelementptr inbounds i32, ptr %6, i64 %2967
  %2979 = load i32, ptr %2978, align 4, !tbaa !5
  %2980 = add nsw i32 %2979, %2977
  store i32 %2980, ptr %2978, align 4, !tbaa !5
  br label %2999

2981:                                             ; preds = %2957, %2974
  %2982 = phi i32 [ %2969, %2974 ], [ %2958, %2957 ]
  %2983 = phi ptr [ %2968, %2974 ], [ %4, %2957 ]
  %2984 = phi i64 [ %2967, %2974 ], [ 0, %2957 ]
  %2985 = add nsw i32 %2982, 1
  store i32 %2985, ptr %2983, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %7, i64 %2984
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = getelementptr inbounds i32, ptr %6, i64 %2984
  br label %2999

2989:                                             ; preds = %2966
  %2990 = icmp eq i32 %2969, %2972
  br i1 %2990, label %2991, label %2997

2991:                                             ; preds = %2989
  store i32 0, ptr %2968, align 4, !tbaa !5
  %2992 = getelementptr inbounds i32, ptr %8, i64 %2967
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = getelementptr inbounds i32, ptr %6, i64 %2967
  store i32 %2993, ptr %2994, align 4, !tbaa !5
  %2995 = add nuw nsw i64 %2967, 1
  %2996 = icmp eq i64 %2995, %2871
  br i1 %2996, label %3004, label %2966, !llvm.loop !297

2997:                                             ; preds = %2962, %2989
  %2998 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2999:                                             ; preds = %2975, %2981
  %3000 = phi ptr [ %2988, %2981 ], [ %2968, %2975 ]
  %3001 = phi i32 [ %2987, %2981 ], [ 1, %2975 ]
  %3002 = load i32, ptr %3000, align 4, !tbaa !5
  %3003 = add nsw i32 %3002, %3001
  store i32 %3003, ptr %3000, align 4, !tbaa !5
  br label %3004

3004:                                             ; preds = %2991, %2999, %2964, %2947
  %3005 = icmp eq i32 %2956, %5
  br i1 %3005, label %5630, label %2874, !llvm.loop !298

3006:                                             ; preds = %2857, %3141
  %3007 = phi i32 [ 0, %2857 ], [ %3090, %3141 ]
  %3008 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2858, label %3009, label %3078

3009:                                             ; preds = %3006, %3068
  %3010 = phi i32 [ %3077, %3068 ], [ 0, %3006 ]
  %3011 = phi i64 [ %3019, %3068 ], [ %2862, %3006 ]
  %3012 = phi i64 [ %3076, %3068 ], [ %2861, %3006 ]
  %3013 = phi i32 [ %3074, %3068 ], [ %3008, %3006 ]
  %3014 = sub i32 %2860, %3010
  %3015 = tail call i32 @llvm.smin.i32(i32 %3014, i32 0)
  %3016 = sub i32 %3014, %3015
  %3017 = zext i32 %3016 to i64
  %3018 = add nuw nsw i64 %3017, 1
  %3019 = add nsw i64 %3011, -1
  %3020 = icmp ult i32 %3016, 31
  br i1 %3020, label %3056, label %3021

3021:                                             ; preds = %3009
  %3022 = and i64 %3018, 8589934560
  %3023 = sub i64 %3012, %3022
  br label %3024

3024:                                             ; preds = %3024, %3021
  %3025 = phi i64 [ 0, %3021 ], [ %3048, %3024 ]
  %3026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3044, %3024 ]
  %3027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3045, %3024 ]
  %3028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3046, %3024 ]
  %3029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3047, %3024 ]
  %3030 = sub i64 %3012, %3025
  %3031 = getelementptr inbounds i32, ptr %11, i64 %3030
  %3032 = getelementptr inbounds i32, ptr %3031, i64 -7
  %3033 = load <8 x i32>, ptr %3032, align 4, !tbaa !5
  %3034 = shufflevector <8 x i32> %3033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3035 = getelementptr inbounds i32, ptr %3031, i64 -15
  %3036 = load <8 x i32>, ptr %3035, align 4, !tbaa !5
  %3037 = shufflevector <8 x i32> %3036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3038 = getelementptr inbounds i32, ptr %3031, i64 -23
  %3039 = load <8 x i32>, ptr %3038, align 4, !tbaa !5
  %3040 = shufflevector <8 x i32> %3039, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3041 = getelementptr inbounds i32, ptr %3031, i64 -31
  %3042 = load <8 x i32>, ptr %3041, align 4, !tbaa !5
  %3043 = shufflevector <8 x i32> %3042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3044 = mul <8 x i32> %3034, %3026
  %3045 = mul <8 x i32> %3037, %3027
  %3046 = mul <8 x i32> %3040, %3028
  %3047 = mul <8 x i32> %3043, %3029
  %3048 = add nuw i64 %3025, 32
  %3049 = icmp eq i64 %3048, %3022
  br i1 %3049, label %3050, label %3024, !llvm.loop !299

3050:                                             ; preds = %3024
  %3051 = mul <8 x i32> %3045, %3044
  %3052 = mul <8 x i32> %3046, %3051
  %3053 = mul <8 x i32> %3047, %3052
  %3054 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3053)
  %3055 = icmp eq i64 %3018, %3022
  br i1 %3055, label %3068, label %3056

3056:                                             ; preds = %3009, %3050
  %3057 = phi i64 [ %3012, %3009 ], [ %3023, %3050 ]
  %3058 = phi i32 [ 1, %3009 ], [ %3054, %3050 ]
  br label %3059

3059:                                             ; preds = %3056, %3059
  %3060 = phi i64 [ %3065, %3059 ], [ %3057, %3056 ]
  %3061 = phi i32 [ %3064, %3059 ], [ %3058, %3056 ]
  %3062 = getelementptr inbounds i32, ptr %11, i64 %3060
  %3063 = load i32, ptr %3062, align 4, !tbaa !5
  %3064 = mul nsw i32 %3063, %3061
  %3065 = add nsw i64 %3060, -1
  %3066 = trunc i64 %3060 to i32
  %3067 = icmp sgt i32 %3066, 0
  br i1 %3067, label %3059, label %3068, !llvm.loop !300

3068:                                             ; preds = %3059, %3050
  %3069 = phi i32 [ %3054, %3050 ], [ %3064, %3059 ]
  %3070 = and i64 %3019, 4294967295
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3070
  %3072 = load i32, ptr %3071, align 4, !tbaa !5
  %3073 = mul nsw i32 %3072, %3069
  %3074 = add nsw i32 %3073, %3013
  %3075 = icmp sgt i64 %3011, 2
  %3076 = add nsw i64 %3012, -1
  %3077 = add i32 %3010, 1
  br i1 %3075, label %3009, label %3078, !llvm.loop !301

3078:                                             ; preds = %3068, %3006
  %3079 = phi i32 [ %3008, %3006 ], [ %3074, %3068 ]
  %3080 = icmp slt i32 %3079, %5
  br i1 %3080, label %3083, label %3081

3081:                                             ; preds = %3078
  %3082 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

3083:                                             ; preds = %3078
  %3084 = sext i32 %3079 to i64
  %3085 = getelementptr inbounds i32, ptr %2533, i64 %3084
  %3086 = load i32, ptr %3085, align 4, !tbaa !5
  %3087 = load i32, ptr %2535, align 4, !tbaa !5
  %3088 = tail call i32 @llvm.abs.i32(i32 %3086, i1 true)
  %3089 = tail call i32 @llvm.smax.i32(i32 %3087, i32 %3088)
  store i32 %3089, ptr %2535, align 4, !tbaa !5
  %3090 = add nuw nsw i32 %3007, 1
  br i1 %2859, label %3091, label %3141

3091:                                             ; preds = %3083
  %3092 = load i32, ptr %4, align 4, !tbaa !5
  %3093 = load i32, ptr %12, align 4, !tbaa !5
  %3094 = add nsw i32 %3093, -1
  %3095 = icmp slt i32 %3092, %3094
  br i1 %3095, label %3118, label %3096

3096:                                             ; preds = %3091
  %3097 = icmp eq i32 %3092, %3094
  br i1 %3097, label %3098, label %3134

3098:                                             ; preds = %3096
  store i32 0, ptr %4, align 4, !tbaa !5
  %3099 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3099, ptr %6, align 4, !tbaa !5
  br i1 %2864, label %3141, label %3100

3100:                                             ; preds = %3098, %3128
  %3101 = phi i64 [ %3132, %3128 ], [ 1, %3098 ]
  %3102 = getelementptr inbounds i32, ptr %4, i64 %3101
  %3103 = load i32, ptr %3102, align 4, !tbaa !5
  %3104 = getelementptr inbounds i32, ptr %12, i64 %3101
  %3105 = load i32, ptr %3104, align 4, !tbaa !5
  %3106 = add nsw i32 %3105, -1
  %3107 = icmp slt i32 %3103, %3106
  br i1 %3107, label %3108, label %3126

3108:                                             ; preds = %3100
  br i1 %3095, label %3118, label %3109

3109:                                             ; preds = %3108
  %3110 = shl i64 %3101, 32
  %3111 = add i64 %3110, -4294967296
  %3112 = ashr exact i64 %3111, 32
  %3113 = getelementptr inbounds i32, ptr %7, i64 %3112
  %3114 = load i32, ptr %3113, align 4, !tbaa !5
  %3115 = getelementptr inbounds i32, ptr %6, i64 %3101
  %3116 = load i32, ptr %3115, align 4, !tbaa !5
  %3117 = add nsw i32 %3116, %3114
  store i32 %3117, ptr %3115, align 4, !tbaa !5
  br label %3136

3118:                                             ; preds = %3091, %3108
  %3119 = phi i32 [ %3103, %3108 ], [ %3092, %3091 ]
  %3120 = phi ptr [ %3102, %3108 ], [ %4, %3091 ]
  %3121 = phi i64 [ %3101, %3108 ], [ 0, %3091 ]
  %3122 = add nsw i32 %3119, 1
  store i32 %3122, ptr %3120, align 4, !tbaa !5
  %3123 = getelementptr inbounds i32, ptr %7, i64 %3121
  %3124 = load i32, ptr %3123, align 4, !tbaa !5
  %3125 = getelementptr inbounds i32, ptr %6, i64 %3121
  br label %3136

3126:                                             ; preds = %3100
  %3127 = icmp eq i32 %3103, %3106
  br i1 %3127, label %3128, label %3134

3128:                                             ; preds = %3126
  store i32 0, ptr %3102, align 4, !tbaa !5
  %3129 = getelementptr inbounds i32, ptr %8, i64 %3101
  %3130 = load i32, ptr %3129, align 4, !tbaa !5
  %3131 = getelementptr inbounds i32, ptr %6, i64 %3101
  store i32 %3130, ptr %3131, align 4, !tbaa !5
  %3132 = add nuw nsw i64 %3101, 1
  %3133 = icmp eq i64 %3132, %2862
  br i1 %3133, label %3141, label %3100, !llvm.loop !302

3134:                                             ; preds = %3096, %3126
  %3135 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3136:                                             ; preds = %3109, %3118
  %3137 = phi ptr [ %3125, %3118 ], [ %3102, %3109 ]
  %3138 = phi i32 [ %3124, %3118 ], [ 1, %3109 ]
  %3139 = load i32, ptr %3137, align 4, !tbaa !5
  %3140 = add nsw i32 %3139, %3138
  store i32 %3140, ptr %3137, align 4, !tbaa !5
  br label %3141

3141:                                             ; preds = %3128, %3136, %3098, %3083
  %3142 = icmp eq i32 %3090, %5
  br i1 %3142, label %5630, label %3006, !llvm.loop !303

3143:                                             ; preds = %2542
  %3144 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 390, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

3145:                                             ; preds = %18
  %3146 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3147 = load ptr, ptr %3146, align 8, !tbaa !9
  %3148 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3149 = load ptr, ptr %3148, align 8, !tbaa !9
  store i64 0, ptr %3149, align 8, !tbaa !120
  %3150 = icmp eq i32 %13, 0
  br i1 %3150, label %3151, label %3155

3151:                                             ; preds = %3145
  %3152 = load i32, ptr %3147, align 4, !tbaa !5
  %3153 = tail call i32 @llvm.abs.i32(i32 %3152, i1 false)
  %3154 = zext i32 %3153 to i64
  store i64 %3154, ptr %3149, align 8, !tbaa !120
  br label %5630

3155:                                             ; preds = %3145
  switch i32 %1, label %3758 [
    i32 1, label %3156
    i32 0, label %3464
  ]

3156:                                             ; preds = %3155
  %3157 = getelementptr inbounds i32, ptr %3, i64 %19
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = icmp eq i32 %3158, 0
  %3160 = icmp sgt i32 %5, 0
  br i1 %3159, label %3170, label %3161

3161:                                             ; preds = %3156
  br i1 %3160, label %3162, label %5630

3162:                                             ; preds = %3161
  %3163 = icmp sgt i32 %13, 1
  %3164 = icmp sgt i32 %13, 0
  %3165 = add i32 %13, -2
  %3166 = zext i32 %3165 to i64
  %3167 = zext i32 %13 to i64
  %3168 = add nuw i32 %5, 1
  %3169 = icmp eq i32 %13, 1
  br label %3321

3170:                                             ; preds = %3156
  br i1 %3160, label %3171, label %5630

3171:                                             ; preds = %3170
  %3172 = icmp sgt i32 %13, 1
  %3173 = icmp sgt i32 %13, 0
  %3174 = add i32 %13, -2
  %3175 = zext i32 %3174 to i64
  %3176 = zext i32 %13 to i64
  %3177 = add nuw i32 %5, 1
  %3178 = icmp eq i32 %13, 1
  br label %3179

3179:                                             ; preds = %3171, %3319
  %3180 = phi i64 [ 0, %3171 ], [ %3269, %3319 ]
  %3181 = phi i32 [ 0, %3171 ], [ %3271, %3319 ]
  %3182 = phi double [ 0.000000e+00, %3171 ], [ %3270, %3319 ]
  %3183 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3172, label %3184, label %3253

3184:                                             ; preds = %3179, %3243
  %3185 = phi i32 [ %3252, %3243 ], [ 0, %3179 ]
  %3186 = phi i64 [ %3194, %3243 ], [ %3176, %3179 ]
  %3187 = phi i64 [ %3251, %3243 ], [ %3175, %3179 ]
  %3188 = phi i32 [ %3249, %3243 ], [ %3183, %3179 ]
  %3189 = sub i32 %3174, %3185
  %3190 = tail call i32 @llvm.smin.i32(i32 %3189, i32 0)
  %3191 = sub i32 %3189, %3190
  %3192 = zext i32 %3191 to i64
  %3193 = add nuw nsw i64 %3192, 1
  %3194 = add nsw i64 %3186, -1
  %3195 = icmp ult i32 %3191, 31
  br i1 %3195, label %3231, label %3196

3196:                                             ; preds = %3184
  %3197 = and i64 %3193, 8589934560
  %3198 = sub i64 %3187, %3197
  br label %3199

3199:                                             ; preds = %3199, %3196
  %3200 = phi i64 [ 0, %3196 ], [ %3223, %3199 ]
  %3201 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3219, %3199 ]
  %3202 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3220, %3199 ]
  %3203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3221, %3199 ]
  %3204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3222, %3199 ]
  %3205 = sub i64 %3187, %3200
  %3206 = getelementptr inbounds i32, ptr %9, i64 %3205
  %3207 = getelementptr inbounds i32, ptr %3206, i64 -7
  %3208 = load <8 x i32>, ptr %3207, align 4, !tbaa !5
  %3209 = shufflevector <8 x i32> %3208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3210 = getelementptr inbounds i32, ptr %3206, i64 -15
  %3211 = load <8 x i32>, ptr %3210, align 4, !tbaa !5
  %3212 = shufflevector <8 x i32> %3211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3213 = getelementptr inbounds i32, ptr %3206, i64 -23
  %3214 = load <8 x i32>, ptr %3213, align 4, !tbaa !5
  %3215 = shufflevector <8 x i32> %3214, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3216 = getelementptr inbounds i32, ptr %3206, i64 -31
  %3217 = load <8 x i32>, ptr %3216, align 4, !tbaa !5
  %3218 = shufflevector <8 x i32> %3217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3219 = mul <8 x i32> %3209, %3201
  %3220 = mul <8 x i32> %3212, %3202
  %3221 = mul <8 x i32> %3215, %3203
  %3222 = mul <8 x i32> %3218, %3204
  %3223 = add nuw i64 %3200, 32
  %3224 = icmp eq i64 %3223, %3197
  br i1 %3224, label %3225, label %3199, !llvm.loop !304

3225:                                             ; preds = %3199
  %3226 = mul <8 x i32> %3220, %3219
  %3227 = mul <8 x i32> %3221, %3226
  %3228 = mul <8 x i32> %3222, %3227
  %3229 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3228)
  %3230 = icmp eq i64 %3193, %3197
  br i1 %3230, label %3243, label %3231

3231:                                             ; preds = %3184, %3225
  %3232 = phi i64 [ %3187, %3184 ], [ %3198, %3225 ]
  %3233 = phi i32 [ 1, %3184 ], [ %3229, %3225 ]
  br label %3234

3234:                                             ; preds = %3231, %3234
  %3235 = phi i64 [ %3240, %3234 ], [ %3232, %3231 ]
  %3236 = phi i32 [ %3239, %3234 ], [ %3233, %3231 ]
  %3237 = getelementptr inbounds i32, ptr %9, i64 %3235
  %3238 = load i32, ptr %3237, align 4, !tbaa !5
  %3239 = mul nsw i32 %3238, %3236
  %3240 = add nsw i64 %3235, -1
  %3241 = trunc i64 %3235 to i32
  %3242 = icmp sgt i32 %3241, 0
  br i1 %3242, label %3234, label %3243, !llvm.loop !305

3243:                                             ; preds = %3234, %3225
  %3244 = phi i32 [ %3229, %3225 ], [ %3239, %3234 ]
  %3245 = and i64 %3194, 4294967295
  %3246 = getelementptr inbounds i32, ptr %6, i64 %3245
  %3247 = load i32, ptr %3246, align 4, !tbaa !5
  %3248 = mul nsw i32 %3247, %3244
  %3249 = add nsw i32 %3248, %3188
  %3250 = icmp sgt i64 %3186, 2
  %3251 = add nsw i64 %3187, -1
  %3252 = add i32 %3185, 1
  br i1 %3250, label %3184, label %3253, !llvm.loop !306

3253:                                             ; preds = %3243, %3179
  %3254 = phi i32 [ %3183, %3179 ], [ %3249, %3243 ]
  %3255 = sext i32 %3254 to i64
  %3256 = getelementptr inbounds double, ptr %2, i64 %3255
  %3257 = load double, ptr %3256, align 8, !tbaa !18
  %3258 = getelementptr inbounds i32, ptr %3147, i64 %3255
  %3259 = load i32, ptr %3258, align 4, !tbaa !5
  %3260 = sitofp i64 %3180 to double
  %3261 = sitofp i32 %3259 to double
  %3262 = fmul fast double %3257, %3261
  %3263 = fcmp fast uge double %3262, 0.000000e+00
  %3264 = fneg fast double %3262
  %3265 = tail call fast double @llvm.fabs.f64(double %3262)
  %3266 = fcmp fast ole double %3265, %3260
  %3267 = select nnan ninf i1 %3263, double %3262, double %3264
  %3268 = select i1 %3266, double %3260, double %3267
  %3269 = fptosi double %3268 to i64
  %3270 = fadd fast double %3257, %3182
  %3271 = add nuw nsw i32 %3181, 1
  br i1 %3173, label %3272, label %3319

3272:                                             ; preds = %3253
  %3273 = load i32, ptr %4, align 4, !tbaa !5
  %3274 = load i32, ptr %12, align 4, !tbaa !5
  %3275 = add nsw i32 %3274, -1
  %3276 = icmp slt i32 %3273, %3275
  br i1 %3276, label %3296, label %3277

3277:                                             ; preds = %3272
  %3278 = icmp eq i32 %3273, %3275
  br i1 %3278, label %3279, label %3312

3279:                                             ; preds = %3277
  store i32 0, ptr %4, align 4, !tbaa !5
  %3280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3280, ptr %6, align 4, !tbaa !5
  br i1 %3178, label %3319, label %3281

3281:                                             ; preds = %3279, %3306
  %3282 = phi i64 [ %3310, %3306 ], [ 1, %3279 ]
  %3283 = getelementptr inbounds i32, ptr %4, i64 %3282
  %3284 = load i32, ptr %3283, align 4, !tbaa !5
  %3285 = getelementptr inbounds i32, ptr %12, i64 %3282
  %3286 = load i32, ptr %3285, align 4, !tbaa !5
  %3287 = add nsw i32 %3286, -1
  %3288 = icmp slt i32 %3284, %3287
  br i1 %3288, label %3289, label %3304

3289:                                             ; preds = %3281
  br i1 %3276, label %3296, label %3290

3290:                                             ; preds = %3289
  %3291 = getelementptr inbounds i32, ptr %7, i64 %3282
  %3292 = load i32, ptr %3291, align 4, !tbaa !5
  %3293 = getelementptr inbounds i32, ptr %6, i64 %3282
  %3294 = load i32, ptr %3293, align 4, !tbaa !5
  %3295 = add nsw i32 %3294, %3292
  store i32 %3295, ptr %3293, align 4, !tbaa !5
  br label %3314

3296:                                             ; preds = %3272, %3289
  %3297 = phi i32 [ %3284, %3289 ], [ %3273, %3272 ]
  %3298 = phi ptr [ %3283, %3289 ], [ %4, %3272 ]
  %3299 = phi i64 [ %3282, %3289 ], [ 0, %3272 ]
  %3300 = add nsw i32 %3297, 1
  store i32 %3300, ptr %3298, align 4, !tbaa !5
  %3301 = getelementptr inbounds i32, ptr %7, i64 %3299
  %3302 = load i32, ptr %3301, align 4, !tbaa !5
  %3303 = getelementptr inbounds i32, ptr %6, i64 %3299
  br label %3314

3304:                                             ; preds = %3281
  %3305 = icmp eq i32 %3284, %3287
  br i1 %3305, label %3306, label %3312

3306:                                             ; preds = %3304
  store i32 0, ptr %3283, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %8, i64 %3282
  %3308 = load i32, ptr %3307, align 4, !tbaa !5
  %3309 = getelementptr inbounds i32, ptr %6, i64 %3282
  store i32 %3308, ptr %3309, align 4, !tbaa !5
  %3310 = add nuw nsw i64 %3282, 1
  %3311 = icmp eq i64 %3310, %3176
  br i1 %3311, label %3319, label %3281, !llvm.loop !307

3312:                                             ; preds = %3277, %3304
  store i64 %3269, ptr %3149, align 8, !tbaa !120
  %3313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3314:                                             ; preds = %3290, %3296
  %3315 = phi ptr [ %3303, %3296 ], [ %3283, %3290 ]
  %3316 = phi i32 [ %3302, %3296 ], [ 1, %3290 ]
  %3317 = load i32, ptr %3315, align 4, !tbaa !5
  %3318 = add nsw i32 %3317, %3316
  store i32 %3318, ptr %3315, align 4, !tbaa !5
  br label %3319

3319:                                             ; preds = %3306, %3314, %3279, %3253
  %3320 = icmp eq i32 %3271, %5
  br i1 %3320, label %5624, label %3179, !llvm.loop !308

3321:                                             ; preds = %3162, %3462
  %3322 = phi i64 [ 0, %3162 ], [ %3410, %3462 ]
  %3323 = phi i32 [ 0, %3162 ], [ %3411, %3462 ]
  %3324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3163, label %3325, label %3394

3325:                                             ; preds = %3321, %3384
  %3326 = phi i32 [ %3393, %3384 ], [ 0, %3321 ]
  %3327 = phi i64 [ %3335, %3384 ], [ %3167, %3321 ]
  %3328 = phi i64 [ %3392, %3384 ], [ %3166, %3321 ]
  %3329 = phi i32 [ %3390, %3384 ], [ %3324, %3321 ]
  %3330 = sub i32 %3165, %3326
  %3331 = tail call i32 @llvm.smin.i32(i32 %3330, i32 0)
  %3332 = sub i32 %3330, %3331
  %3333 = zext i32 %3332 to i64
  %3334 = add nuw nsw i64 %3333, 1
  %3335 = add nsw i64 %3327, -1
  %3336 = icmp ult i32 %3332, 31
  br i1 %3336, label %3372, label %3337

3337:                                             ; preds = %3325
  %3338 = and i64 %3334, 8589934560
  %3339 = sub i64 %3328, %3338
  br label %3340

3340:                                             ; preds = %3340, %3337
  %3341 = phi i64 [ 0, %3337 ], [ %3364, %3340 ]
  %3342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3360, %3340 ]
  %3343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3361, %3340 ]
  %3344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3362, %3340 ]
  %3345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3363, %3340 ]
  %3346 = sub i64 %3328, %3341
  %3347 = getelementptr inbounds i32, ptr %11, i64 %3346
  %3348 = getelementptr inbounds i32, ptr %3347, i64 -7
  %3349 = load <8 x i32>, ptr %3348, align 4, !tbaa !5
  %3350 = shufflevector <8 x i32> %3349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3351 = getelementptr inbounds i32, ptr %3347, i64 -15
  %3352 = load <8 x i32>, ptr %3351, align 4, !tbaa !5
  %3353 = shufflevector <8 x i32> %3352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3354 = getelementptr inbounds i32, ptr %3347, i64 -23
  %3355 = load <8 x i32>, ptr %3354, align 4, !tbaa !5
  %3356 = shufflevector <8 x i32> %3355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3357 = getelementptr inbounds i32, ptr %3347, i64 -31
  %3358 = load <8 x i32>, ptr %3357, align 4, !tbaa !5
  %3359 = shufflevector <8 x i32> %3358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3360 = mul <8 x i32> %3350, %3342
  %3361 = mul <8 x i32> %3353, %3343
  %3362 = mul <8 x i32> %3356, %3344
  %3363 = mul <8 x i32> %3359, %3345
  %3364 = add nuw i64 %3341, 32
  %3365 = icmp eq i64 %3364, %3338
  br i1 %3365, label %3366, label %3340, !llvm.loop !309

3366:                                             ; preds = %3340
  %3367 = mul <8 x i32> %3361, %3360
  %3368 = mul <8 x i32> %3362, %3367
  %3369 = mul <8 x i32> %3363, %3368
  %3370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3369)
  %3371 = icmp eq i64 %3334, %3338
  br i1 %3371, label %3384, label %3372

3372:                                             ; preds = %3325, %3366
  %3373 = phi i64 [ %3328, %3325 ], [ %3339, %3366 ]
  %3374 = phi i32 [ 1, %3325 ], [ %3370, %3366 ]
  br label %3375

3375:                                             ; preds = %3372, %3375
  %3376 = phi i64 [ %3381, %3375 ], [ %3373, %3372 ]
  %3377 = phi i32 [ %3380, %3375 ], [ %3374, %3372 ]
  %3378 = getelementptr inbounds i32, ptr %11, i64 %3376
  %3379 = load i32, ptr %3378, align 4, !tbaa !5
  %3380 = mul nsw i32 %3379, %3377
  %3381 = add nsw i64 %3376, -1
  %3382 = trunc i64 %3376 to i32
  %3383 = icmp sgt i32 %3382, 0
  br i1 %3383, label %3375, label %3384, !llvm.loop !310

3384:                                             ; preds = %3375, %3366
  %3385 = phi i32 [ %3370, %3366 ], [ %3380, %3375 ]
  %3386 = and i64 %3335, 4294967295
  %3387 = getelementptr inbounds i32, ptr %6, i64 %3386
  %3388 = load i32, ptr %3387, align 4, !tbaa !5
  %3389 = mul nsw i32 %3388, %3385
  %3390 = add nsw i32 %3389, %3329
  %3391 = icmp sgt i64 %3327, 2
  %3392 = add nsw i64 %3328, -1
  %3393 = add i32 %3326, 1
  br i1 %3391, label %3325, label %3394, !llvm.loop !311

3394:                                             ; preds = %3384, %3321
  %3395 = phi i32 [ %3324, %3321 ], [ %3390, %3384 ]
  %3396 = icmp slt i32 %3395, %5
  br i1 %3396, label %3399, label %3397

3397:                                             ; preds = %3394
  %3398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

3399:                                             ; preds = %3394
  %3400 = sext i32 %3395 to i64
  %3401 = getelementptr inbounds i32, ptr %3147, i64 %3400
  %3402 = load i32, ptr %3401, align 4, !tbaa !5
  %3403 = sitofp i64 %3322 to double
  %3404 = sitofp i32 %3402 to double
  %3405 = icmp slt i32 %3402, 0
  %3406 = fneg fast double %3404
  %3407 = select i1 %3405, double %3406, double %3404
  %3408 = fcmp fast ole double %3407, %3403
  %3409 = select fast i1 %3408, double %3403, double %3407
  %3410 = fptosi double %3409 to i64
  store i64 %3410, ptr %3149, align 8, !tbaa !120
  %3411 = add nuw nsw i32 %3323, 1
  br i1 %3164, label %3412, label %3462

3412:                                             ; preds = %3399
  %3413 = load i32, ptr %4, align 4, !tbaa !5
  %3414 = load i32, ptr %12, align 4, !tbaa !5
  %3415 = add nsw i32 %3414, -1
  %3416 = icmp slt i32 %3413, %3415
  br i1 %3416, label %3439, label %3417

3417:                                             ; preds = %3412
  %3418 = icmp eq i32 %3413, %3415
  br i1 %3418, label %3419, label %3455

3419:                                             ; preds = %3417
  store i32 0, ptr %4, align 4, !tbaa !5
  %3420 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3420, ptr %6, align 4, !tbaa !5
  br i1 %3169, label %3462, label %3421

3421:                                             ; preds = %3419, %3449
  %3422 = phi i64 [ %3453, %3449 ], [ 1, %3419 ]
  %3423 = getelementptr inbounds i32, ptr %4, i64 %3422
  %3424 = load i32, ptr %3423, align 4, !tbaa !5
  %3425 = getelementptr inbounds i32, ptr %12, i64 %3422
  %3426 = load i32, ptr %3425, align 4, !tbaa !5
  %3427 = add nsw i32 %3426, -1
  %3428 = icmp slt i32 %3424, %3427
  br i1 %3428, label %3429, label %3447

3429:                                             ; preds = %3421
  br i1 %3416, label %3439, label %3430

3430:                                             ; preds = %3429
  %3431 = shl i64 %3422, 32
  %3432 = add i64 %3431, -4294967296
  %3433 = ashr exact i64 %3432, 32
  %3434 = getelementptr inbounds i32, ptr %7, i64 %3433
  %3435 = load i32, ptr %3434, align 4, !tbaa !5
  %3436 = getelementptr inbounds i32, ptr %6, i64 %3422
  %3437 = load i32, ptr %3436, align 4, !tbaa !5
  %3438 = add nsw i32 %3437, %3435
  store i32 %3438, ptr %3436, align 4, !tbaa !5
  br label %3457

3439:                                             ; preds = %3412, %3429
  %3440 = phi i32 [ %3424, %3429 ], [ %3413, %3412 ]
  %3441 = phi ptr [ %3423, %3429 ], [ %4, %3412 ]
  %3442 = phi i64 [ %3422, %3429 ], [ 0, %3412 ]
  %3443 = add nsw i32 %3440, 1
  store i32 %3443, ptr %3441, align 4, !tbaa !5
  %3444 = getelementptr inbounds i32, ptr %7, i64 %3442
  %3445 = load i32, ptr %3444, align 4, !tbaa !5
  %3446 = getelementptr inbounds i32, ptr %6, i64 %3442
  br label %3457

3447:                                             ; preds = %3421
  %3448 = icmp eq i32 %3424, %3427
  br i1 %3448, label %3449, label %3455

3449:                                             ; preds = %3447
  store i32 0, ptr %3423, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %8, i64 %3422
  %3451 = load i32, ptr %3450, align 4, !tbaa !5
  %3452 = getelementptr inbounds i32, ptr %6, i64 %3422
  store i32 %3451, ptr %3452, align 4, !tbaa !5
  %3453 = add nuw nsw i64 %3422, 1
  %3454 = icmp eq i64 %3453, %3167
  br i1 %3454, label %3462, label %3421, !llvm.loop !312

3455:                                             ; preds = %3417, %3447
  %3456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3457:                                             ; preds = %3430, %3439
  %3458 = phi ptr [ %3446, %3439 ], [ %3423, %3430 ]
  %3459 = phi i32 [ %3445, %3439 ], [ 1, %3430 ]
  %3460 = load i32, ptr %3458, align 4, !tbaa !5
  %3461 = add nsw i32 %3460, %3459
  store i32 %3461, ptr %3458, align 4, !tbaa !5
  br label %3462

3462:                                             ; preds = %3449, %3457, %3419, %3399
  %3463 = icmp eq i32 %3411, %5
  br i1 %3463, label %5630, label %3321, !llvm.loop !313

3464:                                             ; preds = %3155
  %3465 = getelementptr inbounds i32, ptr %3, i64 %19
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = icmp eq i32 %3466, 0
  %3468 = icmp sgt i32 %5, 0
  br i1 %3467, label %3478, label %3469

3469:                                             ; preds = %3464
  br i1 %3468, label %3470, label %5630

3470:                                             ; preds = %3469
  %3471 = icmp sgt i32 %13, 1
  %3472 = icmp sgt i32 %13, 0
  %3473 = add i32 %13, -2
  %3474 = zext i32 %3473 to i64
  %3475 = zext i32 %13 to i64
  %3476 = add nuw i32 %5, 1
  %3477 = icmp eq i32 %13, 1
  br label %3620

3478:                                             ; preds = %3464
  br i1 %3468, label %3479, label %5630

3479:                                             ; preds = %3478
  %3480 = icmp sgt i32 %13, 1
  %3481 = icmp sgt i32 %13, 0
  %3482 = add i32 %13, -2
  %3483 = zext i32 %3482 to i64
  %3484 = zext i32 %13 to i64
  %3485 = add nuw i32 %5, 1
  %3486 = icmp eq i32 %13, 1
  br label %3487

3487:                                             ; preds = %3479, %3618
  %3488 = phi i64 [ 0, %3479 ], [ %3568, %3618 ]
  %3489 = phi i32 [ 0, %3479 ], [ %3570, %3618 ]
  %3490 = phi double [ 0.000000e+00, %3479 ], [ %3569, %3618 ]
  %3491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3480, label %3492, label %3561

3492:                                             ; preds = %3487, %3551
  %3493 = phi i32 [ %3560, %3551 ], [ 0, %3487 ]
  %3494 = phi i64 [ %3502, %3551 ], [ %3484, %3487 ]
  %3495 = phi i64 [ %3559, %3551 ], [ %3483, %3487 ]
  %3496 = phi i32 [ %3557, %3551 ], [ %3491, %3487 ]
  %3497 = sub i32 %3482, %3493
  %3498 = tail call i32 @llvm.smin.i32(i32 %3497, i32 0)
  %3499 = sub i32 %3497, %3498
  %3500 = zext i32 %3499 to i64
  %3501 = add nuw nsw i64 %3500, 1
  %3502 = add nsw i64 %3494, -1
  %3503 = icmp ult i32 %3499, 31
  br i1 %3503, label %3539, label %3504

3504:                                             ; preds = %3492
  %3505 = and i64 %3501, 8589934560
  %3506 = sub i64 %3495, %3505
  br label %3507

3507:                                             ; preds = %3507, %3504
  %3508 = phi i64 [ 0, %3504 ], [ %3531, %3507 ]
  %3509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3527, %3507 ]
  %3510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3528, %3507 ]
  %3511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3529, %3507 ]
  %3512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3530, %3507 ]
  %3513 = sub i64 %3495, %3508
  %3514 = getelementptr inbounds i32, ptr %9, i64 %3513
  %3515 = getelementptr inbounds i32, ptr %3514, i64 -7
  %3516 = load <8 x i32>, ptr %3515, align 4, !tbaa !5
  %3517 = shufflevector <8 x i32> %3516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3518 = getelementptr inbounds i32, ptr %3514, i64 -15
  %3519 = load <8 x i32>, ptr %3518, align 4, !tbaa !5
  %3520 = shufflevector <8 x i32> %3519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3521 = getelementptr inbounds i32, ptr %3514, i64 -23
  %3522 = load <8 x i32>, ptr %3521, align 4, !tbaa !5
  %3523 = shufflevector <8 x i32> %3522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3524 = getelementptr inbounds i32, ptr %3514, i64 -31
  %3525 = load <8 x i32>, ptr %3524, align 4, !tbaa !5
  %3526 = shufflevector <8 x i32> %3525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3527 = mul <8 x i32> %3517, %3509
  %3528 = mul <8 x i32> %3520, %3510
  %3529 = mul <8 x i32> %3523, %3511
  %3530 = mul <8 x i32> %3526, %3512
  %3531 = add nuw i64 %3508, 32
  %3532 = icmp eq i64 %3531, %3505
  br i1 %3532, label %3533, label %3507, !llvm.loop !314

3533:                                             ; preds = %3507
  %3534 = mul <8 x i32> %3528, %3527
  %3535 = mul <8 x i32> %3529, %3534
  %3536 = mul <8 x i32> %3530, %3535
  %3537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3536)
  %3538 = icmp eq i64 %3501, %3505
  br i1 %3538, label %3551, label %3539

3539:                                             ; preds = %3492, %3533
  %3540 = phi i64 [ %3495, %3492 ], [ %3506, %3533 ]
  %3541 = phi i32 [ 1, %3492 ], [ %3537, %3533 ]
  br label %3542

3542:                                             ; preds = %3539, %3542
  %3543 = phi i64 [ %3548, %3542 ], [ %3540, %3539 ]
  %3544 = phi i32 [ %3547, %3542 ], [ %3541, %3539 ]
  %3545 = getelementptr inbounds i32, ptr %9, i64 %3543
  %3546 = load i32, ptr %3545, align 4, !tbaa !5
  %3547 = mul nsw i32 %3546, %3544
  %3548 = add nsw i64 %3543, -1
  %3549 = trunc i64 %3543 to i32
  %3550 = icmp sgt i32 %3549, 0
  br i1 %3550, label %3542, label %3551, !llvm.loop !315

3551:                                             ; preds = %3542, %3533
  %3552 = phi i32 [ %3537, %3533 ], [ %3547, %3542 ]
  %3553 = and i64 %3502, 4294967295
  %3554 = getelementptr inbounds i32, ptr %6, i64 %3553
  %3555 = load i32, ptr %3554, align 4, !tbaa !5
  %3556 = mul nsw i32 %3555, %3552
  %3557 = add nsw i32 %3556, %3496
  %3558 = icmp sgt i64 %3494, 2
  %3559 = add nsw i64 %3495, -1
  %3560 = add i32 %3493, 1
  br i1 %3558, label %3492, label %3561, !llvm.loop !316

3561:                                             ; preds = %3551, %3487
  %3562 = phi i32 [ %3491, %3487 ], [ %3557, %3551 ]
  %3563 = sext i32 %3562 to i64
  %3564 = getelementptr inbounds i32, ptr %3147, i64 %3563
  %3565 = load i32, ptr %3564, align 4, !tbaa !5
  %3566 = tail call i32 @llvm.abs.i32(i32 %3565, i1 false)
  %3567 = zext i32 %3566 to i64
  %3568 = tail call i64 @llvm.smax.i64(i64 %3488, i64 %3567)
  %3569 = fadd fast double %3490, 1.000000e+00
  %3570 = add nuw nsw i32 %3489, 1
  br i1 %3481, label %3571, label %3618

3571:                                             ; preds = %3561
  %3572 = load i32, ptr %4, align 4, !tbaa !5
  %3573 = load i32, ptr %12, align 4, !tbaa !5
  %3574 = add nsw i32 %3573, -1
  %3575 = icmp slt i32 %3572, %3574
  br i1 %3575, label %3595, label %3576

3576:                                             ; preds = %3571
  %3577 = icmp eq i32 %3572, %3574
  br i1 %3577, label %3578, label %3611

3578:                                             ; preds = %3576
  store i32 0, ptr %4, align 4, !tbaa !5
  %3579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3579, ptr %6, align 4, !tbaa !5
  br i1 %3486, label %3618, label %3580

3580:                                             ; preds = %3578, %3605
  %3581 = phi i64 [ %3609, %3605 ], [ 1, %3578 ]
  %3582 = getelementptr inbounds i32, ptr %4, i64 %3581
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = getelementptr inbounds i32, ptr %12, i64 %3581
  %3585 = load i32, ptr %3584, align 4, !tbaa !5
  %3586 = add nsw i32 %3585, -1
  %3587 = icmp slt i32 %3583, %3586
  br i1 %3587, label %3588, label %3603

3588:                                             ; preds = %3580
  br i1 %3575, label %3595, label %3589

3589:                                             ; preds = %3588
  %3590 = getelementptr inbounds i32, ptr %7, i64 %3581
  %3591 = load i32, ptr %3590, align 4, !tbaa !5
  %3592 = getelementptr inbounds i32, ptr %6, i64 %3581
  %3593 = load i32, ptr %3592, align 4, !tbaa !5
  %3594 = add nsw i32 %3593, %3591
  store i32 %3594, ptr %3592, align 4, !tbaa !5
  br label %3613

3595:                                             ; preds = %3571, %3588
  %3596 = phi i32 [ %3583, %3588 ], [ %3572, %3571 ]
  %3597 = phi ptr [ %3582, %3588 ], [ %4, %3571 ]
  %3598 = phi i64 [ %3581, %3588 ], [ 0, %3571 ]
  %3599 = add nsw i32 %3596, 1
  store i32 %3599, ptr %3597, align 4, !tbaa !5
  %3600 = getelementptr inbounds i32, ptr %7, i64 %3598
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = getelementptr inbounds i32, ptr %6, i64 %3598
  br label %3613

3603:                                             ; preds = %3580
  %3604 = icmp eq i32 %3583, %3586
  br i1 %3604, label %3605, label %3611

3605:                                             ; preds = %3603
  store i32 0, ptr %3582, align 4, !tbaa !5
  %3606 = getelementptr inbounds i32, ptr %8, i64 %3581
  %3607 = load i32, ptr %3606, align 4, !tbaa !5
  %3608 = getelementptr inbounds i32, ptr %6, i64 %3581
  store i32 %3607, ptr %3608, align 4, !tbaa !5
  %3609 = add nuw nsw i64 %3581, 1
  %3610 = icmp eq i64 %3609, %3484
  br i1 %3610, label %3618, label %3580, !llvm.loop !317

3611:                                             ; preds = %3576, %3603
  store i64 %3568, ptr %3149, align 8, !tbaa !120
  %3612 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3613:                                             ; preds = %3589, %3595
  %3614 = phi ptr [ %3602, %3595 ], [ %3582, %3589 ]
  %3615 = phi i32 [ %3601, %3595 ], [ 1, %3589 ]
  %3616 = load i32, ptr %3614, align 4, !tbaa !5
  %3617 = add nsw i32 %3616, %3615
  store i32 %3617, ptr %3614, align 4, !tbaa !5
  br label %3618

3618:                                             ; preds = %3605, %3613, %3578, %3561
  %3619 = icmp eq i32 %3570, %5
  br i1 %3619, label %5625, label %3487, !llvm.loop !318

3620:                                             ; preds = %3470, %3756
  %3621 = phi i64 [ 0, %3470 ], [ %3704, %3756 ]
  %3622 = phi i32 [ 0, %3470 ], [ %3705, %3756 ]
  %3623 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3471, label %3624, label %3693

3624:                                             ; preds = %3620, %3683
  %3625 = phi i32 [ %3692, %3683 ], [ 0, %3620 ]
  %3626 = phi i64 [ %3634, %3683 ], [ %3475, %3620 ]
  %3627 = phi i64 [ %3691, %3683 ], [ %3474, %3620 ]
  %3628 = phi i32 [ %3689, %3683 ], [ %3623, %3620 ]
  %3629 = sub i32 %3473, %3625
  %3630 = tail call i32 @llvm.smin.i32(i32 %3629, i32 0)
  %3631 = sub i32 %3629, %3630
  %3632 = zext i32 %3631 to i64
  %3633 = add nuw nsw i64 %3632, 1
  %3634 = add nsw i64 %3626, -1
  %3635 = icmp ult i32 %3631, 31
  br i1 %3635, label %3671, label %3636

3636:                                             ; preds = %3624
  %3637 = and i64 %3633, 8589934560
  %3638 = sub i64 %3627, %3637
  br label %3639

3639:                                             ; preds = %3639, %3636
  %3640 = phi i64 [ 0, %3636 ], [ %3663, %3639 ]
  %3641 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3659, %3639 ]
  %3642 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3660, %3639 ]
  %3643 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3661, %3639 ]
  %3644 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3662, %3639 ]
  %3645 = sub i64 %3627, %3640
  %3646 = getelementptr inbounds i32, ptr %11, i64 %3645
  %3647 = getelementptr inbounds i32, ptr %3646, i64 -7
  %3648 = load <8 x i32>, ptr %3647, align 4, !tbaa !5
  %3649 = shufflevector <8 x i32> %3648, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3650 = getelementptr inbounds i32, ptr %3646, i64 -15
  %3651 = load <8 x i32>, ptr %3650, align 4, !tbaa !5
  %3652 = shufflevector <8 x i32> %3651, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3653 = getelementptr inbounds i32, ptr %3646, i64 -23
  %3654 = load <8 x i32>, ptr %3653, align 4, !tbaa !5
  %3655 = shufflevector <8 x i32> %3654, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3656 = getelementptr inbounds i32, ptr %3646, i64 -31
  %3657 = load <8 x i32>, ptr %3656, align 4, !tbaa !5
  %3658 = shufflevector <8 x i32> %3657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3659 = mul <8 x i32> %3649, %3641
  %3660 = mul <8 x i32> %3652, %3642
  %3661 = mul <8 x i32> %3655, %3643
  %3662 = mul <8 x i32> %3658, %3644
  %3663 = add nuw i64 %3640, 32
  %3664 = icmp eq i64 %3663, %3637
  br i1 %3664, label %3665, label %3639, !llvm.loop !319

3665:                                             ; preds = %3639
  %3666 = mul <8 x i32> %3660, %3659
  %3667 = mul <8 x i32> %3661, %3666
  %3668 = mul <8 x i32> %3662, %3667
  %3669 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3668)
  %3670 = icmp eq i64 %3633, %3637
  br i1 %3670, label %3683, label %3671

3671:                                             ; preds = %3624, %3665
  %3672 = phi i64 [ %3627, %3624 ], [ %3638, %3665 ]
  %3673 = phi i32 [ 1, %3624 ], [ %3669, %3665 ]
  br label %3674

3674:                                             ; preds = %3671, %3674
  %3675 = phi i64 [ %3680, %3674 ], [ %3672, %3671 ]
  %3676 = phi i32 [ %3679, %3674 ], [ %3673, %3671 ]
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3675
  %3678 = load i32, ptr %3677, align 4, !tbaa !5
  %3679 = mul nsw i32 %3678, %3676
  %3680 = add nsw i64 %3675, -1
  %3681 = trunc i64 %3675 to i32
  %3682 = icmp sgt i32 %3681, 0
  br i1 %3682, label %3674, label %3683, !llvm.loop !320

3683:                                             ; preds = %3674, %3665
  %3684 = phi i32 [ %3669, %3665 ], [ %3679, %3674 ]
  %3685 = and i64 %3634, 4294967295
  %3686 = getelementptr inbounds i32, ptr %6, i64 %3685
  %3687 = load i32, ptr %3686, align 4, !tbaa !5
  %3688 = mul nsw i32 %3687, %3684
  %3689 = add nsw i32 %3688, %3628
  %3690 = icmp sgt i64 %3626, 2
  %3691 = add nsw i64 %3627, -1
  %3692 = add i32 %3625, 1
  br i1 %3690, label %3624, label %3693, !llvm.loop !321

3693:                                             ; preds = %3683, %3620
  %3694 = phi i32 [ %3623, %3620 ], [ %3689, %3683 ]
  %3695 = icmp slt i32 %3694, %5
  br i1 %3695, label %3698, label %3696

3696:                                             ; preds = %3693
  %3697 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

3698:                                             ; preds = %3693
  %3699 = sext i32 %3694 to i64
  %3700 = getelementptr inbounds i32, ptr %3147, i64 %3699
  %3701 = load i32, ptr %3700, align 4, !tbaa !5
  %3702 = tail call i32 @llvm.abs.i32(i32 %3701, i1 false)
  %3703 = zext i32 %3702 to i64
  %3704 = tail call i64 @llvm.smax.i64(i64 %3621, i64 %3703)
  store i64 %3704, ptr %3149, align 8, !tbaa !120
  %3705 = add nuw nsw i32 %3622, 1
  br i1 %3472, label %3706, label %3756

3706:                                             ; preds = %3698
  %3707 = load i32, ptr %4, align 4, !tbaa !5
  %3708 = load i32, ptr %12, align 4, !tbaa !5
  %3709 = add nsw i32 %3708, -1
  %3710 = icmp slt i32 %3707, %3709
  br i1 %3710, label %3733, label %3711

3711:                                             ; preds = %3706
  %3712 = icmp eq i32 %3707, %3709
  br i1 %3712, label %3713, label %3749

3713:                                             ; preds = %3711
  store i32 0, ptr %4, align 4, !tbaa !5
  %3714 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3714, ptr %6, align 4, !tbaa !5
  br i1 %3477, label %3756, label %3715

3715:                                             ; preds = %3713, %3743
  %3716 = phi i64 [ %3747, %3743 ], [ 1, %3713 ]
  %3717 = getelementptr inbounds i32, ptr %4, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !5
  %3719 = getelementptr inbounds i32, ptr %12, i64 %3716
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = add nsw i32 %3720, -1
  %3722 = icmp slt i32 %3718, %3721
  br i1 %3722, label %3723, label %3741

3723:                                             ; preds = %3715
  br i1 %3710, label %3733, label %3724

3724:                                             ; preds = %3723
  %3725 = shl i64 %3716, 32
  %3726 = add i64 %3725, -4294967296
  %3727 = ashr exact i64 %3726, 32
  %3728 = getelementptr inbounds i32, ptr %7, i64 %3727
  %3729 = load i32, ptr %3728, align 4, !tbaa !5
  %3730 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3731 = load i32, ptr %3730, align 4, !tbaa !5
  %3732 = add nsw i32 %3731, %3729
  store i32 %3732, ptr %3730, align 4, !tbaa !5
  br label %3751

3733:                                             ; preds = %3706, %3723
  %3734 = phi i32 [ %3718, %3723 ], [ %3707, %3706 ]
  %3735 = phi ptr [ %3717, %3723 ], [ %4, %3706 ]
  %3736 = phi i64 [ %3716, %3723 ], [ 0, %3706 ]
  %3737 = add nsw i32 %3734, 1
  store i32 %3737, ptr %3735, align 4, !tbaa !5
  %3738 = getelementptr inbounds i32, ptr %7, i64 %3736
  %3739 = load i32, ptr %3738, align 4, !tbaa !5
  %3740 = getelementptr inbounds i32, ptr %6, i64 %3736
  br label %3751

3741:                                             ; preds = %3715
  %3742 = icmp eq i32 %3718, %3721
  br i1 %3742, label %3743, label %3749

3743:                                             ; preds = %3741
  store i32 0, ptr %3717, align 4, !tbaa !5
  %3744 = getelementptr inbounds i32, ptr %8, i64 %3716
  %3745 = load i32, ptr %3744, align 4, !tbaa !5
  %3746 = getelementptr inbounds i32, ptr %6, i64 %3716
  store i32 %3745, ptr %3746, align 4, !tbaa !5
  %3747 = add nuw nsw i64 %3716, 1
  %3748 = icmp eq i64 %3747, %3475
  br i1 %3748, label %3756, label %3715, !llvm.loop !322

3749:                                             ; preds = %3711, %3741
  %3750 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3751:                                             ; preds = %3724, %3733
  %3752 = phi ptr [ %3740, %3733 ], [ %3717, %3724 ]
  %3753 = phi i32 [ %3739, %3733 ], [ 1, %3724 ]
  %3754 = load i32, ptr %3752, align 4, !tbaa !5
  %3755 = add nsw i32 %3754, %3753
  store i32 %3755, ptr %3752, align 4, !tbaa !5
  br label %3756

3756:                                             ; preds = %3743, %3751, %3713, %3698
  %3757 = icmp eq i32 %3705, %5
  br i1 %3757, label %5630, label %3620, !llvm.loop !323

3758:                                             ; preds = %3155
  %3759 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 395, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

3760:                                             ; preds = %18
  %3761 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3762 = load ptr, ptr %3761, align 8, !tbaa !9
  %3763 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3764 = load ptr, ptr %3763, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3764, align 8, !tbaa !18
  %3765 = icmp eq i32 %13, 0
  br i1 %3765, label %3766, label %3774

3766:                                             ; preds = %3760
  %3767 = load i32, ptr %3762, align 4, !tbaa !5
  %3768 = sitofp i32 %3767 to double
  %3769 = icmp slt i32 %3767, 0
  %3770 = fneg fast double %3768
  %3771 = select fast i1 %3769, double %3770, double %3768
  %3772 = fcmp fast ole double %3771, 0.000000e+00
  %3773 = select fast i1 %3772, double 0.000000e+00, double %3771
  store double %3773, ptr %3764, align 8, !tbaa !18
  br label %5630

3774:                                             ; preds = %3760
  switch i32 %1, label %4376 [
    i32 1, label %3775
    i32 0, label %4078
  ]

3775:                                             ; preds = %3774
  %3776 = getelementptr inbounds i32, ptr %3, i64 %19
  %3777 = load i32, ptr %3776, align 4, !tbaa !5
  %3778 = icmp eq i32 %3777, 0
  %3779 = icmp sgt i32 %5, 0
  br i1 %3778, label %3789, label %3780

3780:                                             ; preds = %3775
  br i1 %3779, label %3781, label %5630

3781:                                             ; preds = %3780
  %3782 = icmp sgt i32 %13, 1
  %3783 = icmp sgt i32 %13, 0
  %3784 = add i32 %13, -2
  %3785 = zext i32 %3784 to i64
  %3786 = zext i32 %13 to i64
  %3787 = add nuw i32 %5, 1
  %3788 = icmp eq i32 %13, 1
  br label %3938

3789:                                             ; preds = %3775
  br i1 %3779, label %3790, label %5630

3790:                                             ; preds = %3789
  %3791 = icmp sgt i32 %13, 1
  %3792 = icmp sgt i32 %13, 0
  %3793 = add i32 %13, -2
  %3794 = zext i32 %3793 to i64
  %3795 = zext i32 %13 to i64
  %3796 = add nuw i32 %5, 1
  %3797 = icmp eq i32 %13, 1
  br label %3798

3798:                                             ; preds = %3790, %3936
  %3799 = phi double [ 0.000000e+00, %3790 ], [ %3886, %3936 ]
  %3800 = phi i32 [ 0, %3790 ], [ %3888, %3936 ]
  %3801 = phi double [ 0.000000e+00, %3790 ], [ %3887, %3936 ]
  %3802 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3791, label %3803, label %3872

3803:                                             ; preds = %3798, %3862
  %3804 = phi i32 [ %3871, %3862 ], [ 0, %3798 ]
  %3805 = phi i64 [ %3813, %3862 ], [ %3795, %3798 ]
  %3806 = phi i64 [ %3870, %3862 ], [ %3794, %3798 ]
  %3807 = phi i32 [ %3868, %3862 ], [ %3802, %3798 ]
  %3808 = sub i32 %3793, %3804
  %3809 = tail call i32 @llvm.smin.i32(i32 %3808, i32 0)
  %3810 = sub i32 %3808, %3809
  %3811 = zext i32 %3810 to i64
  %3812 = add nuw nsw i64 %3811, 1
  %3813 = add nsw i64 %3805, -1
  %3814 = icmp ult i32 %3810, 31
  br i1 %3814, label %3850, label %3815

3815:                                             ; preds = %3803
  %3816 = and i64 %3812, 8589934560
  %3817 = sub i64 %3806, %3816
  br label %3818

3818:                                             ; preds = %3818, %3815
  %3819 = phi i64 [ 0, %3815 ], [ %3842, %3818 ]
  %3820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3838, %3818 ]
  %3821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3839, %3818 ]
  %3822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3840, %3818 ]
  %3823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3841, %3818 ]
  %3824 = sub i64 %3806, %3819
  %3825 = getelementptr inbounds i32, ptr %9, i64 %3824
  %3826 = getelementptr inbounds i32, ptr %3825, i64 -7
  %3827 = load <8 x i32>, ptr %3826, align 4, !tbaa !5
  %3828 = shufflevector <8 x i32> %3827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3829 = getelementptr inbounds i32, ptr %3825, i64 -15
  %3830 = load <8 x i32>, ptr %3829, align 4, !tbaa !5
  %3831 = shufflevector <8 x i32> %3830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3832 = getelementptr inbounds i32, ptr %3825, i64 -23
  %3833 = load <8 x i32>, ptr %3832, align 4, !tbaa !5
  %3834 = shufflevector <8 x i32> %3833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3835 = getelementptr inbounds i32, ptr %3825, i64 -31
  %3836 = load <8 x i32>, ptr %3835, align 4, !tbaa !5
  %3837 = shufflevector <8 x i32> %3836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3838 = mul <8 x i32> %3828, %3820
  %3839 = mul <8 x i32> %3831, %3821
  %3840 = mul <8 x i32> %3834, %3822
  %3841 = mul <8 x i32> %3837, %3823
  %3842 = add nuw i64 %3819, 32
  %3843 = icmp eq i64 %3842, %3816
  br i1 %3843, label %3844, label %3818, !llvm.loop !324

3844:                                             ; preds = %3818
  %3845 = mul <8 x i32> %3839, %3838
  %3846 = mul <8 x i32> %3840, %3845
  %3847 = mul <8 x i32> %3841, %3846
  %3848 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3847)
  %3849 = icmp eq i64 %3812, %3816
  br i1 %3849, label %3862, label %3850

3850:                                             ; preds = %3803, %3844
  %3851 = phi i64 [ %3806, %3803 ], [ %3817, %3844 ]
  %3852 = phi i32 [ 1, %3803 ], [ %3848, %3844 ]
  br label %3853

3853:                                             ; preds = %3850, %3853
  %3854 = phi i64 [ %3859, %3853 ], [ %3851, %3850 ]
  %3855 = phi i32 [ %3858, %3853 ], [ %3852, %3850 ]
  %3856 = getelementptr inbounds i32, ptr %9, i64 %3854
  %3857 = load i32, ptr %3856, align 4, !tbaa !5
  %3858 = mul nsw i32 %3857, %3855
  %3859 = add nsw i64 %3854, -1
  %3860 = trunc i64 %3854 to i32
  %3861 = icmp sgt i32 %3860, 0
  br i1 %3861, label %3853, label %3862, !llvm.loop !325

3862:                                             ; preds = %3853, %3844
  %3863 = phi i32 [ %3848, %3844 ], [ %3858, %3853 ]
  %3864 = and i64 %3813, 4294967295
  %3865 = getelementptr inbounds i32, ptr %6, i64 %3864
  %3866 = load i32, ptr %3865, align 4, !tbaa !5
  %3867 = mul nsw i32 %3866, %3863
  %3868 = add nsw i32 %3867, %3807
  %3869 = icmp sgt i64 %3805, 2
  %3870 = add nsw i64 %3806, -1
  %3871 = add i32 %3804, 1
  br i1 %3869, label %3803, label %3872, !llvm.loop !326

3872:                                             ; preds = %3862, %3798
  %3873 = phi i32 [ %3802, %3798 ], [ %3868, %3862 ]
  %3874 = sext i32 %3873 to i64
  %3875 = getelementptr inbounds double, ptr %2, i64 %3874
  %3876 = load double, ptr %3875, align 8, !tbaa !18
  %3877 = getelementptr inbounds i32, ptr %3762, i64 %3874
  %3878 = load i32, ptr %3877, align 4, !tbaa !5
  %3879 = sitofp i32 %3878 to double
  %3880 = fmul fast double %3876, %3879
  %3881 = fcmp fast uge double %3880, 0.000000e+00
  %3882 = fneg fast double %3880
  %3883 = tail call fast double @llvm.fabs.f64(double %3880)
  %3884 = fcmp fast oge double %3799, %3883
  %3885 = select nnan ninf i1 %3881, double %3880, double %3882
  %3886 = select i1 %3884, double %3799, double %3885
  store double %3886, ptr %3764, align 8, !tbaa !18
  %3887 = fadd fast double %3876, %3801
  %3888 = add nuw nsw i32 %3800, 1
  br i1 %3792, label %3889, label %3936

3889:                                             ; preds = %3872
  %3890 = load i32, ptr %4, align 4, !tbaa !5
  %3891 = load i32, ptr %12, align 4, !tbaa !5
  %3892 = add nsw i32 %3891, -1
  %3893 = icmp slt i32 %3890, %3892
  br i1 %3893, label %3913, label %3894

3894:                                             ; preds = %3889
  %3895 = icmp eq i32 %3890, %3892
  br i1 %3895, label %3896, label %3929

3896:                                             ; preds = %3894
  store i32 0, ptr %4, align 4, !tbaa !5
  %3897 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3897, ptr %6, align 4, !tbaa !5
  br i1 %3797, label %3936, label %3898

3898:                                             ; preds = %3896, %3923
  %3899 = phi i64 [ %3927, %3923 ], [ 1, %3896 ]
  %3900 = getelementptr inbounds i32, ptr %4, i64 %3899
  %3901 = load i32, ptr %3900, align 4, !tbaa !5
  %3902 = getelementptr inbounds i32, ptr %12, i64 %3899
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = add nsw i32 %3903, -1
  %3905 = icmp slt i32 %3901, %3904
  br i1 %3905, label %3906, label %3921

3906:                                             ; preds = %3898
  br i1 %3893, label %3913, label %3907

3907:                                             ; preds = %3906
  %3908 = getelementptr inbounds i32, ptr %7, i64 %3899
  %3909 = load i32, ptr %3908, align 4, !tbaa !5
  %3910 = getelementptr inbounds i32, ptr %6, i64 %3899
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = add nsw i32 %3911, %3909
  store i32 %3912, ptr %3910, align 4, !tbaa !5
  br label %3931

3913:                                             ; preds = %3889, %3906
  %3914 = phi i32 [ %3901, %3906 ], [ %3890, %3889 ]
  %3915 = phi ptr [ %3900, %3906 ], [ %4, %3889 ]
  %3916 = phi i64 [ %3899, %3906 ], [ 0, %3889 ]
  %3917 = add nsw i32 %3914, 1
  store i32 %3917, ptr %3915, align 4, !tbaa !5
  %3918 = getelementptr inbounds i32, ptr %7, i64 %3916
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = getelementptr inbounds i32, ptr %6, i64 %3916
  br label %3931

3921:                                             ; preds = %3898
  %3922 = icmp eq i32 %3901, %3904
  br i1 %3922, label %3923, label %3929

3923:                                             ; preds = %3921
  store i32 0, ptr %3900, align 4, !tbaa !5
  %3924 = getelementptr inbounds i32, ptr %8, i64 %3899
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = getelementptr inbounds i32, ptr %6, i64 %3899
  store i32 %3925, ptr %3926, align 4, !tbaa !5
  %3927 = add nuw nsw i64 %3899, 1
  %3928 = icmp eq i64 %3927, %3795
  br i1 %3928, label %3936, label %3898, !llvm.loop !327

3929:                                             ; preds = %3894, %3921
  %3930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3931:                                             ; preds = %3907, %3913
  %3932 = phi ptr [ %3920, %3913 ], [ %3900, %3907 ]
  %3933 = phi i32 [ %3919, %3913 ], [ 1, %3907 ]
  %3934 = load i32, ptr %3932, align 4, !tbaa !5
  %3935 = add nsw i32 %3934, %3933
  store i32 %3935, ptr %3932, align 4, !tbaa !5
  br label %3936

3936:                                             ; preds = %3923, %3931, %3896, %3872
  %3937 = icmp eq i32 %3888, %5
  br i1 %3937, label %5630, label %3798, !llvm.loop !328

3938:                                             ; preds = %3781, %4076
  %3939 = phi double [ 0.000000e+00, %3781 ], [ %4024, %4076 ]
  %3940 = phi i32 [ 0, %3781 ], [ %4025, %4076 ]
  %3941 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3782, label %3942, label %4011

3942:                                             ; preds = %3938, %4001
  %3943 = phi i32 [ %4010, %4001 ], [ 0, %3938 ]
  %3944 = phi i64 [ %3952, %4001 ], [ %3786, %3938 ]
  %3945 = phi i64 [ %4009, %4001 ], [ %3785, %3938 ]
  %3946 = phi i32 [ %4007, %4001 ], [ %3941, %3938 ]
  %3947 = sub i32 %3784, %3943
  %3948 = tail call i32 @llvm.smin.i32(i32 %3947, i32 0)
  %3949 = sub i32 %3947, %3948
  %3950 = zext i32 %3949 to i64
  %3951 = add nuw nsw i64 %3950, 1
  %3952 = add nsw i64 %3944, -1
  %3953 = icmp ult i32 %3949, 31
  br i1 %3953, label %3989, label %3954

3954:                                             ; preds = %3942
  %3955 = and i64 %3951, 8589934560
  %3956 = sub i64 %3945, %3955
  br label %3957

3957:                                             ; preds = %3957, %3954
  %3958 = phi i64 [ 0, %3954 ], [ %3981, %3957 ]
  %3959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3977, %3957 ]
  %3960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3978, %3957 ]
  %3961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3979, %3957 ]
  %3962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3980, %3957 ]
  %3963 = sub i64 %3945, %3958
  %3964 = getelementptr inbounds i32, ptr %11, i64 %3963
  %3965 = getelementptr inbounds i32, ptr %3964, i64 -7
  %3966 = load <8 x i32>, ptr %3965, align 4, !tbaa !5
  %3967 = shufflevector <8 x i32> %3966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3968 = getelementptr inbounds i32, ptr %3964, i64 -15
  %3969 = load <8 x i32>, ptr %3968, align 4, !tbaa !5
  %3970 = shufflevector <8 x i32> %3969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3971 = getelementptr inbounds i32, ptr %3964, i64 -23
  %3972 = load <8 x i32>, ptr %3971, align 4, !tbaa !5
  %3973 = shufflevector <8 x i32> %3972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3974 = getelementptr inbounds i32, ptr %3964, i64 -31
  %3975 = load <8 x i32>, ptr %3974, align 4, !tbaa !5
  %3976 = shufflevector <8 x i32> %3975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3977 = mul <8 x i32> %3967, %3959
  %3978 = mul <8 x i32> %3970, %3960
  %3979 = mul <8 x i32> %3973, %3961
  %3980 = mul <8 x i32> %3976, %3962
  %3981 = add nuw i64 %3958, 32
  %3982 = icmp eq i64 %3981, %3955
  br i1 %3982, label %3983, label %3957, !llvm.loop !329

3983:                                             ; preds = %3957
  %3984 = mul <8 x i32> %3978, %3977
  %3985 = mul <8 x i32> %3979, %3984
  %3986 = mul <8 x i32> %3980, %3985
  %3987 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3986)
  %3988 = icmp eq i64 %3951, %3955
  br i1 %3988, label %4001, label %3989

3989:                                             ; preds = %3942, %3983
  %3990 = phi i64 [ %3945, %3942 ], [ %3956, %3983 ]
  %3991 = phi i32 [ 1, %3942 ], [ %3987, %3983 ]
  br label %3992

3992:                                             ; preds = %3989, %3992
  %3993 = phi i64 [ %3998, %3992 ], [ %3990, %3989 ]
  %3994 = phi i32 [ %3997, %3992 ], [ %3991, %3989 ]
  %3995 = getelementptr inbounds i32, ptr %11, i64 %3993
  %3996 = load i32, ptr %3995, align 4, !tbaa !5
  %3997 = mul nsw i32 %3996, %3994
  %3998 = add nsw i64 %3993, -1
  %3999 = trunc i64 %3993 to i32
  %4000 = icmp sgt i32 %3999, 0
  br i1 %4000, label %3992, label %4001, !llvm.loop !330

4001:                                             ; preds = %3992, %3983
  %4002 = phi i32 [ %3987, %3983 ], [ %3997, %3992 ]
  %4003 = and i64 %3952, 4294967295
  %4004 = getelementptr inbounds i32, ptr %6, i64 %4003
  %4005 = load i32, ptr %4004, align 4, !tbaa !5
  %4006 = mul nsw i32 %4005, %4002
  %4007 = add nsw i32 %4006, %3946
  %4008 = icmp sgt i64 %3944, 2
  %4009 = add nsw i64 %3945, -1
  %4010 = add i32 %3943, 1
  br i1 %4008, label %3942, label %4011, !llvm.loop !331

4011:                                             ; preds = %4001, %3938
  %4012 = phi i32 [ %3941, %3938 ], [ %4007, %4001 ]
  %4013 = icmp slt i32 %4012, %5
  br i1 %4013, label %4016, label %4014

4014:                                             ; preds = %4011
  %4015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4016:                                             ; preds = %4011
  %4017 = sext i32 %4012 to i64
  %4018 = getelementptr inbounds i32, ptr %3762, i64 %4017
  %4019 = load i32, ptr %4018, align 4, !tbaa !5
  %4020 = sitofp i32 %4019 to double
  %4021 = icmp slt i32 %4019, 0
  %4022 = fneg fast double %4020
  %4023 = select i1 %4021, double %4022, double %4020
  %4024 = tail call fast double @llvm.maxnum.f64(double %3939, double %4023)
  store double %4024, ptr %3764, align 8, !tbaa !18
  %4025 = add nuw nsw i32 %3940, 1
  br i1 %3783, label %4026, label %4076

4026:                                             ; preds = %4016
  %4027 = load i32, ptr %4, align 4, !tbaa !5
  %4028 = load i32, ptr %12, align 4, !tbaa !5
  %4029 = add nsw i32 %4028, -1
  %4030 = icmp slt i32 %4027, %4029
  br i1 %4030, label %4053, label %4031

4031:                                             ; preds = %4026
  %4032 = icmp eq i32 %4027, %4029
  br i1 %4032, label %4033, label %4069

4033:                                             ; preds = %4031
  store i32 0, ptr %4, align 4, !tbaa !5
  %4034 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4034, ptr %6, align 4, !tbaa !5
  br i1 %3788, label %4076, label %4035

4035:                                             ; preds = %4033, %4063
  %4036 = phi i64 [ %4067, %4063 ], [ 1, %4033 ]
  %4037 = getelementptr inbounds i32, ptr %4, i64 %4036
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = getelementptr inbounds i32, ptr %12, i64 %4036
  %4040 = load i32, ptr %4039, align 4, !tbaa !5
  %4041 = add nsw i32 %4040, -1
  %4042 = icmp slt i32 %4038, %4041
  br i1 %4042, label %4043, label %4061

4043:                                             ; preds = %4035
  br i1 %4030, label %4053, label %4044

4044:                                             ; preds = %4043
  %4045 = shl i64 %4036, 32
  %4046 = add i64 %4045, -4294967296
  %4047 = ashr exact i64 %4046, 32
  %4048 = getelementptr inbounds i32, ptr %7, i64 %4047
  %4049 = load i32, ptr %4048, align 4, !tbaa !5
  %4050 = getelementptr inbounds i32, ptr %6, i64 %4036
  %4051 = load i32, ptr %4050, align 4, !tbaa !5
  %4052 = add nsw i32 %4051, %4049
  store i32 %4052, ptr %4050, align 4, !tbaa !5
  br label %4071

4053:                                             ; preds = %4026, %4043
  %4054 = phi i32 [ %4038, %4043 ], [ %4027, %4026 ]
  %4055 = phi ptr [ %4037, %4043 ], [ %4, %4026 ]
  %4056 = phi i64 [ %4036, %4043 ], [ 0, %4026 ]
  %4057 = add nsw i32 %4054, 1
  store i32 %4057, ptr %4055, align 4, !tbaa !5
  %4058 = getelementptr inbounds i32, ptr %7, i64 %4056
  %4059 = load i32, ptr %4058, align 4, !tbaa !5
  %4060 = getelementptr inbounds i32, ptr %6, i64 %4056
  br label %4071

4061:                                             ; preds = %4035
  %4062 = icmp eq i32 %4038, %4041
  br i1 %4062, label %4063, label %4069

4063:                                             ; preds = %4061
  store i32 0, ptr %4037, align 4, !tbaa !5
  %4064 = getelementptr inbounds i32, ptr %8, i64 %4036
  %4065 = load i32, ptr %4064, align 4, !tbaa !5
  %4066 = getelementptr inbounds i32, ptr %6, i64 %4036
  store i32 %4065, ptr %4066, align 4, !tbaa !5
  %4067 = add nuw nsw i64 %4036, 1
  %4068 = icmp eq i64 %4067, %3786
  br i1 %4068, label %4076, label %4035, !llvm.loop !332

4069:                                             ; preds = %4031, %4061
  %4070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4071:                                             ; preds = %4044, %4053
  %4072 = phi ptr [ %4060, %4053 ], [ %4037, %4044 ]
  %4073 = phi i32 [ %4059, %4053 ], [ 1, %4044 ]
  %4074 = load i32, ptr %4072, align 4, !tbaa !5
  %4075 = add nsw i32 %4074, %4073
  store i32 %4075, ptr %4072, align 4, !tbaa !5
  br label %4076

4076:                                             ; preds = %4063, %4071, %4033, %4016
  %4077 = icmp eq i32 %4025, %5
  br i1 %4077, label %5630, label %3938, !llvm.loop !333

4078:                                             ; preds = %3774
  %4079 = getelementptr inbounds i32, ptr %3, i64 %19
  %4080 = load i32, ptr %4079, align 4, !tbaa !5
  %4081 = icmp eq i32 %4080, 0
  %4082 = icmp sgt i32 %5, 0
  br i1 %4081, label %4092, label %4083

4083:                                             ; preds = %4078
  br i1 %4082, label %4084, label %5630

4084:                                             ; preds = %4083
  %4085 = icmp sgt i32 %13, 1
  %4086 = icmp sgt i32 %13, 0
  %4087 = add i32 %13, -2
  %4088 = zext i32 %4087 to i64
  %4089 = zext i32 %13 to i64
  %4090 = add nuw i32 %5, 1
  %4091 = icmp eq i32 %13, 1
  br label %4236

4092:                                             ; preds = %4078
  br i1 %4082, label %4093, label %5630

4093:                                             ; preds = %4092
  %4094 = icmp sgt i32 %13, 1
  %4095 = icmp sgt i32 %13, 0
  %4096 = add i32 %13, -2
  %4097 = zext i32 %4096 to i64
  %4098 = zext i32 %13 to i64
  %4099 = add nuw i32 %5, 1
  %4100 = icmp eq i32 %13, 1
  br label %4101

4101:                                             ; preds = %4093, %4234
  %4102 = phi double [ 0.000000e+00, %4093 ], [ %4184, %4234 ]
  %4103 = phi i32 [ 0, %4093 ], [ %4186, %4234 ]
  %4104 = phi double [ 0.000000e+00, %4093 ], [ %4185, %4234 ]
  %4105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4094, label %4106, label %4175

4106:                                             ; preds = %4101, %4165
  %4107 = phi i32 [ %4174, %4165 ], [ 0, %4101 ]
  %4108 = phi i64 [ %4116, %4165 ], [ %4098, %4101 ]
  %4109 = phi i64 [ %4173, %4165 ], [ %4097, %4101 ]
  %4110 = phi i32 [ %4171, %4165 ], [ %4105, %4101 ]
  %4111 = sub i32 %4096, %4107
  %4112 = tail call i32 @llvm.smin.i32(i32 %4111, i32 0)
  %4113 = sub i32 %4111, %4112
  %4114 = zext i32 %4113 to i64
  %4115 = add nuw nsw i64 %4114, 1
  %4116 = add nsw i64 %4108, -1
  %4117 = icmp ult i32 %4113, 31
  br i1 %4117, label %4153, label %4118

4118:                                             ; preds = %4106
  %4119 = and i64 %4115, 8589934560
  %4120 = sub i64 %4109, %4119
  br label %4121

4121:                                             ; preds = %4121, %4118
  %4122 = phi i64 [ 0, %4118 ], [ %4145, %4121 ]
  %4123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4141, %4121 ]
  %4124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4142, %4121 ]
  %4125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4143, %4121 ]
  %4126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4144, %4121 ]
  %4127 = sub i64 %4109, %4122
  %4128 = getelementptr inbounds i32, ptr %9, i64 %4127
  %4129 = getelementptr inbounds i32, ptr %4128, i64 -7
  %4130 = load <8 x i32>, ptr %4129, align 4, !tbaa !5
  %4131 = shufflevector <8 x i32> %4130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4132 = getelementptr inbounds i32, ptr %4128, i64 -15
  %4133 = load <8 x i32>, ptr %4132, align 4, !tbaa !5
  %4134 = shufflevector <8 x i32> %4133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4135 = getelementptr inbounds i32, ptr %4128, i64 -23
  %4136 = load <8 x i32>, ptr %4135, align 4, !tbaa !5
  %4137 = shufflevector <8 x i32> %4136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4138 = getelementptr inbounds i32, ptr %4128, i64 -31
  %4139 = load <8 x i32>, ptr %4138, align 4, !tbaa !5
  %4140 = shufflevector <8 x i32> %4139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4141 = mul <8 x i32> %4131, %4123
  %4142 = mul <8 x i32> %4134, %4124
  %4143 = mul <8 x i32> %4137, %4125
  %4144 = mul <8 x i32> %4140, %4126
  %4145 = add nuw i64 %4122, 32
  %4146 = icmp eq i64 %4145, %4119
  br i1 %4146, label %4147, label %4121, !llvm.loop !334

4147:                                             ; preds = %4121
  %4148 = mul <8 x i32> %4142, %4141
  %4149 = mul <8 x i32> %4143, %4148
  %4150 = mul <8 x i32> %4144, %4149
  %4151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4150)
  %4152 = icmp eq i64 %4115, %4119
  br i1 %4152, label %4165, label %4153

4153:                                             ; preds = %4106, %4147
  %4154 = phi i64 [ %4109, %4106 ], [ %4120, %4147 ]
  %4155 = phi i32 [ 1, %4106 ], [ %4151, %4147 ]
  br label %4156

4156:                                             ; preds = %4153, %4156
  %4157 = phi i64 [ %4162, %4156 ], [ %4154, %4153 ]
  %4158 = phi i32 [ %4161, %4156 ], [ %4155, %4153 ]
  %4159 = getelementptr inbounds i32, ptr %9, i64 %4157
  %4160 = load i32, ptr %4159, align 4, !tbaa !5
  %4161 = mul nsw i32 %4160, %4158
  %4162 = add nsw i64 %4157, -1
  %4163 = trunc i64 %4157 to i32
  %4164 = icmp sgt i32 %4163, 0
  br i1 %4164, label %4156, label %4165, !llvm.loop !335

4165:                                             ; preds = %4156, %4147
  %4166 = phi i32 [ %4151, %4147 ], [ %4161, %4156 ]
  %4167 = and i64 %4116, 4294967295
  %4168 = getelementptr inbounds i32, ptr %6, i64 %4167
  %4169 = load i32, ptr %4168, align 4, !tbaa !5
  %4170 = mul nsw i32 %4169, %4166
  %4171 = add nsw i32 %4170, %4110
  %4172 = icmp sgt i64 %4108, 2
  %4173 = add nsw i64 %4109, -1
  %4174 = add i32 %4107, 1
  br i1 %4172, label %4106, label %4175, !llvm.loop !336

4175:                                             ; preds = %4165, %4101
  %4176 = phi i32 [ %4105, %4101 ], [ %4171, %4165 ]
  %4177 = sext i32 %4176 to i64
  %4178 = getelementptr inbounds i32, ptr %3762, i64 %4177
  %4179 = load i32, ptr %4178, align 4, !tbaa !5
  %4180 = sitofp i32 %4179 to double
  %4181 = icmp slt i32 %4179, 0
  %4182 = fneg fast double %4180
  %4183 = select fast i1 %4181, double %4182, double %4180
  %4184 = tail call fast double @llvm.maxnum.f64(double %4102, double %4183)
  %4185 = fadd fast double %4104, 1.000000e+00
  %4186 = add nuw nsw i32 %4103, 1
  br i1 %4095, label %4187, label %4234

4187:                                             ; preds = %4175
  %4188 = load i32, ptr %4, align 4, !tbaa !5
  %4189 = load i32, ptr %12, align 4, !tbaa !5
  %4190 = add nsw i32 %4189, -1
  %4191 = icmp slt i32 %4188, %4190
  br i1 %4191, label %4211, label %4192

4192:                                             ; preds = %4187
  %4193 = icmp eq i32 %4188, %4190
  br i1 %4193, label %4194, label %4227

4194:                                             ; preds = %4192
  store i32 0, ptr %4, align 4, !tbaa !5
  %4195 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4195, ptr %6, align 4, !tbaa !5
  br i1 %4100, label %4234, label %4196

4196:                                             ; preds = %4194, %4221
  %4197 = phi i64 [ %4225, %4221 ], [ 1, %4194 ]
  %4198 = getelementptr inbounds i32, ptr %4, i64 %4197
  %4199 = load i32, ptr %4198, align 4, !tbaa !5
  %4200 = getelementptr inbounds i32, ptr %12, i64 %4197
  %4201 = load i32, ptr %4200, align 4, !tbaa !5
  %4202 = add nsw i32 %4201, -1
  %4203 = icmp slt i32 %4199, %4202
  br i1 %4203, label %4204, label %4219

4204:                                             ; preds = %4196
  br i1 %4191, label %4211, label %4205

4205:                                             ; preds = %4204
  %4206 = getelementptr inbounds i32, ptr %7, i64 %4197
  %4207 = load i32, ptr %4206, align 4, !tbaa !5
  %4208 = getelementptr inbounds i32, ptr %6, i64 %4197
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = add nsw i32 %4209, %4207
  store i32 %4210, ptr %4208, align 4, !tbaa !5
  br label %4229

4211:                                             ; preds = %4187, %4204
  %4212 = phi i32 [ %4199, %4204 ], [ %4188, %4187 ]
  %4213 = phi ptr [ %4198, %4204 ], [ %4, %4187 ]
  %4214 = phi i64 [ %4197, %4204 ], [ 0, %4187 ]
  %4215 = add nsw i32 %4212, 1
  store i32 %4215, ptr %4213, align 4, !tbaa !5
  %4216 = getelementptr inbounds i32, ptr %7, i64 %4214
  %4217 = load i32, ptr %4216, align 4, !tbaa !5
  %4218 = getelementptr inbounds i32, ptr %6, i64 %4214
  br label %4229

4219:                                             ; preds = %4196
  %4220 = icmp eq i32 %4199, %4202
  br i1 %4220, label %4221, label %4227

4221:                                             ; preds = %4219
  store i32 0, ptr %4198, align 4, !tbaa !5
  %4222 = getelementptr inbounds i32, ptr %8, i64 %4197
  %4223 = load i32, ptr %4222, align 4, !tbaa !5
  %4224 = getelementptr inbounds i32, ptr %6, i64 %4197
  store i32 %4223, ptr %4224, align 4, !tbaa !5
  %4225 = add nuw nsw i64 %4197, 1
  %4226 = icmp eq i64 %4225, %4098
  br i1 %4226, label %4234, label %4196, !llvm.loop !337

4227:                                             ; preds = %4192, %4219
  store double %4184, ptr %3764, align 8, !tbaa !18
  %4228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4229:                                             ; preds = %4205, %4211
  %4230 = phi ptr [ %4218, %4211 ], [ %4198, %4205 ]
  %4231 = phi i32 [ %4217, %4211 ], [ 1, %4205 ]
  %4232 = load i32, ptr %4230, align 4, !tbaa !5
  %4233 = add nsw i32 %4232, %4231
  store i32 %4233, ptr %4230, align 4, !tbaa !5
  br label %4234

4234:                                             ; preds = %4221, %4229, %4194, %4175
  %4235 = icmp eq i32 %4186, %5
  br i1 %4235, label %5626, label %4101, !llvm.loop !338

4236:                                             ; preds = %4084, %4374
  %4237 = phi double [ 0.000000e+00, %4084 ], [ %4322, %4374 ]
  %4238 = phi i32 [ 0, %4084 ], [ %4323, %4374 ]
  %4239 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4085, label %4240, label %4309

4240:                                             ; preds = %4236, %4299
  %4241 = phi i32 [ %4308, %4299 ], [ 0, %4236 ]
  %4242 = phi i64 [ %4250, %4299 ], [ %4089, %4236 ]
  %4243 = phi i64 [ %4307, %4299 ], [ %4088, %4236 ]
  %4244 = phi i32 [ %4305, %4299 ], [ %4239, %4236 ]
  %4245 = sub i32 %4087, %4241
  %4246 = tail call i32 @llvm.smin.i32(i32 %4245, i32 0)
  %4247 = sub i32 %4245, %4246
  %4248 = zext i32 %4247 to i64
  %4249 = add nuw nsw i64 %4248, 1
  %4250 = add nsw i64 %4242, -1
  %4251 = icmp ult i32 %4247, 31
  br i1 %4251, label %4287, label %4252

4252:                                             ; preds = %4240
  %4253 = and i64 %4249, 8589934560
  %4254 = sub i64 %4243, %4253
  br label %4255

4255:                                             ; preds = %4255, %4252
  %4256 = phi i64 [ 0, %4252 ], [ %4279, %4255 ]
  %4257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4275, %4255 ]
  %4258 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4276, %4255 ]
  %4259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4277, %4255 ]
  %4260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4278, %4255 ]
  %4261 = sub i64 %4243, %4256
  %4262 = getelementptr inbounds i32, ptr %11, i64 %4261
  %4263 = getelementptr inbounds i32, ptr %4262, i64 -7
  %4264 = load <8 x i32>, ptr %4263, align 4, !tbaa !5
  %4265 = shufflevector <8 x i32> %4264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4266 = getelementptr inbounds i32, ptr %4262, i64 -15
  %4267 = load <8 x i32>, ptr %4266, align 4, !tbaa !5
  %4268 = shufflevector <8 x i32> %4267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4269 = getelementptr inbounds i32, ptr %4262, i64 -23
  %4270 = load <8 x i32>, ptr %4269, align 4, !tbaa !5
  %4271 = shufflevector <8 x i32> %4270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4272 = getelementptr inbounds i32, ptr %4262, i64 -31
  %4273 = load <8 x i32>, ptr %4272, align 4, !tbaa !5
  %4274 = shufflevector <8 x i32> %4273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4275 = mul <8 x i32> %4265, %4257
  %4276 = mul <8 x i32> %4268, %4258
  %4277 = mul <8 x i32> %4271, %4259
  %4278 = mul <8 x i32> %4274, %4260
  %4279 = add nuw i64 %4256, 32
  %4280 = icmp eq i64 %4279, %4253
  br i1 %4280, label %4281, label %4255, !llvm.loop !339

4281:                                             ; preds = %4255
  %4282 = mul <8 x i32> %4276, %4275
  %4283 = mul <8 x i32> %4277, %4282
  %4284 = mul <8 x i32> %4278, %4283
  %4285 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4284)
  %4286 = icmp eq i64 %4249, %4253
  br i1 %4286, label %4299, label %4287

4287:                                             ; preds = %4240, %4281
  %4288 = phi i64 [ %4243, %4240 ], [ %4254, %4281 ]
  %4289 = phi i32 [ 1, %4240 ], [ %4285, %4281 ]
  br label %4290

4290:                                             ; preds = %4287, %4290
  %4291 = phi i64 [ %4296, %4290 ], [ %4288, %4287 ]
  %4292 = phi i32 [ %4295, %4290 ], [ %4289, %4287 ]
  %4293 = getelementptr inbounds i32, ptr %11, i64 %4291
  %4294 = load i32, ptr %4293, align 4, !tbaa !5
  %4295 = mul nsw i32 %4294, %4292
  %4296 = add nsw i64 %4291, -1
  %4297 = trunc i64 %4291 to i32
  %4298 = icmp sgt i32 %4297, 0
  br i1 %4298, label %4290, label %4299, !llvm.loop !340

4299:                                             ; preds = %4290, %4281
  %4300 = phi i32 [ %4285, %4281 ], [ %4295, %4290 ]
  %4301 = and i64 %4250, 4294967295
  %4302 = getelementptr inbounds i32, ptr %6, i64 %4301
  %4303 = load i32, ptr %4302, align 4, !tbaa !5
  %4304 = mul nsw i32 %4303, %4300
  %4305 = add nsw i32 %4304, %4244
  %4306 = icmp sgt i64 %4242, 2
  %4307 = add nsw i64 %4243, -1
  %4308 = add i32 %4241, 1
  br i1 %4306, label %4240, label %4309, !llvm.loop !341

4309:                                             ; preds = %4299, %4236
  %4310 = phi i32 [ %4239, %4236 ], [ %4305, %4299 ]
  %4311 = icmp slt i32 %4310, %5
  br i1 %4311, label %4314, label %4312

4312:                                             ; preds = %4309
  %4313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4314:                                             ; preds = %4309
  %4315 = sext i32 %4310 to i64
  %4316 = getelementptr inbounds i32, ptr %3762, i64 %4315
  %4317 = load i32, ptr %4316, align 4, !tbaa !5
  %4318 = sitofp i32 %4317 to double
  %4319 = icmp slt i32 %4317, 0
  %4320 = fneg fast double %4318
  %4321 = select fast i1 %4319, double %4320, double %4318
  %4322 = tail call fast double @llvm.maxnum.f64(double %4237, double %4321)
  store double %4322, ptr %3764, align 8, !tbaa !18
  %4323 = add nuw nsw i32 %4238, 1
  br i1 %4086, label %4324, label %4374

4324:                                             ; preds = %4314
  %4325 = load i32, ptr %4, align 4, !tbaa !5
  %4326 = load i32, ptr %12, align 4, !tbaa !5
  %4327 = add nsw i32 %4326, -1
  %4328 = icmp slt i32 %4325, %4327
  br i1 %4328, label %4351, label %4329

4329:                                             ; preds = %4324
  %4330 = icmp eq i32 %4325, %4327
  br i1 %4330, label %4331, label %4367

4331:                                             ; preds = %4329
  store i32 0, ptr %4, align 4, !tbaa !5
  %4332 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4332, ptr %6, align 4, !tbaa !5
  br i1 %4091, label %4374, label %4333

4333:                                             ; preds = %4331, %4361
  %4334 = phi i64 [ %4365, %4361 ], [ 1, %4331 ]
  %4335 = getelementptr inbounds i32, ptr %4, i64 %4334
  %4336 = load i32, ptr %4335, align 4, !tbaa !5
  %4337 = getelementptr inbounds i32, ptr %12, i64 %4334
  %4338 = load i32, ptr %4337, align 4, !tbaa !5
  %4339 = add nsw i32 %4338, -1
  %4340 = icmp slt i32 %4336, %4339
  br i1 %4340, label %4341, label %4359

4341:                                             ; preds = %4333
  br i1 %4328, label %4351, label %4342

4342:                                             ; preds = %4341
  %4343 = shl i64 %4334, 32
  %4344 = add i64 %4343, -4294967296
  %4345 = ashr exact i64 %4344, 32
  %4346 = getelementptr inbounds i32, ptr %7, i64 %4345
  %4347 = load i32, ptr %4346, align 4, !tbaa !5
  %4348 = getelementptr inbounds i32, ptr %6, i64 %4334
  %4349 = load i32, ptr %4348, align 4, !tbaa !5
  %4350 = add nsw i32 %4349, %4347
  store i32 %4350, ptr %4348, align 4, !tbaa !5
  br label %4369

4351:                                             ; preds = %4324, %4341
  %4352 = phi i32 [ %4336, %4341 ], [ %4325, %4324 ]
  %4353 = phi ptr [ %4335, %4341 ], [ %4, %4324 ]
  %4354 = phi i64 [ %4334, %4341 ], [ 0, %4324 ]
  %4355 = add nsw i32 %4352, 1
  store i32 %4355, ptr %4353, align 4, !tbaa !5
  %4356 = getelementptr inbounds i32, ptr %7, i64 %4354
  %4357 = load i32, ptr %4356, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %6, i64 %4354
  br label %4369

4359:                                             ; preds = %4333
  %4360 = icmp eq i32 %4336, %4339
  br i1 %4360, label %4361, label %4367

4361:                                             ; preds = %4359
  store i32 0, ptr %4335, align 4, !tbaa !5
  %4362 = getelementptr inbounds i32, ptr %8, i64 %4334
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = getelementptr inbounds i32, ptr %6, i64 %4334
  store i32 %4363, ptr %4364, align 4, !tbaa !5
  %4365 = add nuw nsw i64 %4334, 1
  %4366 = icmp eq i64 %4365, %4089
  br i1 %4366, label %4374, label %4333, !llvm.loop !342

4367:                                             ; preds = %4329, %4359
  %4368 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4369:                                             ; preds = %4342, %4351
  %4370 = phi ptr [ %4358, %4351 ], [ %4335, %4342 ]
  %4371 = phi i32 [ %4357, %4351 ], [ 1, %4342 ]
  %4372 = load i32, ptr %4370, align 4, !tbaa !5
  %4373 = add nsw i32 %4372, %4371
  store i32 %4373, ptr %4370, align 4, !tbaa !5
  br label %4374

4374:                                             ; preds = %4361, %4369, %4331, %4314
  %4375 = icmp eq i32 %4323, %5
  br i1 %4375, label %5630, label %4236, !llvm.loop !343

4376:                                             ; preds = %3774
  %4377 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 399, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

4378:                                             ; preds = %18
  %4379 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4380 = load ptr, ptr %4379, align 8, !tbaa !9
  %4381 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4382 = load ptr, ptr %4381, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4382, align 4, !tbaa !162
  %4383 = icmp eq i32 %13, 0
  br i1 %4383, label %4384, label %4392

4384:                                             ; preds = %4378
  %4385 = load i32, ptr %4380, align 4, !tbaa !5
  %4386 = sitofp i32 %4385 to float
  %4387 = icmp slt i32 %4385, 0
  %4388 = fneg fast float %4386
  %4389 = select fast i1 %4387, float %4388, float %4386
  %4390 = fcmp fast ole float %4389, 0.000000e+00
  %4391 = select fast i1 %4390, float 0.000000e+00, float %4389
  store float %4391, ptr %4382, align 4, !tbaa !162
  br label %5630

4392:                                             ; preds = %4378
  switch i32 %1, label %5001 [
    i32 1, label %4393
    i32 0, label %4703
  ]

4393:                                             ; preds = %4392
  %4394 = getelementptr inbounds i32, ptr %3, i64 %19
  %4395 = load i32, ptr %4394, align 4, !tbaa !5
  %4396 = icmp eq i32 %4395, 0
  %4397 = icmp sgt i32 %5, 0
  br i1 %4396, label %4407, label %4398

4398:                                             ; preds = %4393
  br i1 %4397, label %4399, label %5630

4399:                                             ; preds = %4398
  %4400 = icmp sgt i32 %13, 1
  %4401 = icmp sgt i32 %13, 0
  %4402 = add i32 %13, -2
  %4403 = zext i32 %4402 to i64
  %4404 = zext i32 %13 to i64
  %4405 = add nuw i32 %5, 1
  %4406 = icmp eq i32 %13, 1
  br label %4559

4407:                                             ; preds = %4393
  br i1 %4397, label %4408, label %5630

4408:                                             ; preds = %4407
  %4409 = icmp sgt i32 %13, 1
  %4410 = icmp sgt i32 %13, 0
  %4411 = add i32 %13, -2
  %4412 = zext i32 %4411 to i64
  %4413 = zext i32 %13 to i64
  %4414 = add nuw i32 %5, 1
  %4415 = icmp eq i32 %13, 1
  br label %4416

4416:                                             ; preds = %4408, %4557
  %4417 = phi float [ 0.000000e+00, %4408 ], [ %4507, %4557 ]
  %4418 = phi i32 [ 0, %4408 ], [ %4509, %4557 ]
  %4419 = phi double [ 0.000000e+00, %4408 ], [ %4508, %4557 ]
  %4420 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4409, label %4421, label %4490

4421:                                             ; preds = %4416, %4480
  %4422 = phi i32 [ %4489, %4480 ], [ 0, %4416 ]
  %4423 = phi i64 [ %4431, %4480 ], [ %4413, %4416 ]
  %4424 = phi i64 [ %4488, %4480 ], [ %4412, %4416 ]
  %4425 = phi i32 [ %4486, %4480 ], [ %4420, %4416 ]
  %4426 = sub i32 %4411, %4422
  %4427 = tail call i32 @llvm.smin.i32(i32 %4426, i32 0)
  %4428 = sub i32 %4426, %4427
  %4429 = zext i32 %4428 to i64
  %4430 = add nuw nsw i64 %4429, 1
  %4431 = add nsw i64 %4423, -1
  %4432 = icmp ult i32 %4428, 31
  br i1 %4432, label %4468, label %4433

4433:                                             ; preds = %4421
  %4434 = and i64 %4430, 8589934560
  %4435 = sub i64 %4424, %4434
  br label %4436

4436:                                             ; preds = %4436, %4433
  %4437 = phi i64 [ 0, %4433 ], [ %4460, %4436 ]
  %4438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4456, %4436 ]
  %4439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4457, %4436 ]
  %4440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4458, %4436 ]
  %4441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4459, %4436 ]
  %4442 = sub i64 %4424, %4437
  %4443 = getelementptr inbounds i32, ptr %9, i64 %4442
  %4444 = getelementptr inbounds i32, ptr %4443, i64 -7
  %4445 = load <8 x i32>, ptr %4444, align 4, !tbaa !5
  %4446 = shufflevector <8 x i32> %4445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4447 = getelementptr inbounds i32, ptr %4443, i64 -15
  %4448 = load <8 x i32>, ptr %4447, align 4, !tbaa !5
  %4449 = shufflevector <8 x i32> %4448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4450 = getelementptr inbounds i32, ptr %4443, i64 -23
  %4451 = load <8 x i32>, ptr %4450, align 4, !tbaa !5
  %4452 = shufflevector <8 x i32> %4451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4453 = getelementptr inbounds i32, ptr %4443, i64 -31
  %4454 = load <8 x i32>, ptr %4453, align 4, !tbaa !5
  %4455 = shufflevector <8 x i32> %4454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4456 = mul <8 x i32> %4446, %4438
  %4457 = mul <8 x i32> %4449, %4439
  %4458 = mul <8 x i32> %4452, %4440
  %4459 = mul <8 x i32> %4455, %4441
  %4460 = add nuw i64 %4437, 32
  %4461 = icmp eq i64 %4460, %4434
  br i1 %4461, label %4462, label %4436, !llvm.loop !344

4462:                                             ; preds = %4436
  %4463 = mul <8 x i32> %4457, %4456
  %4464 = mul <8 x i32> %4458, %4463
  %4465 = mul <8 x i32> %4459, %4464
  %4466 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4465)
  %4467 = icmp eq i64 %4430, %4434
  br i1 %4467, label %4480, label %4468

4468:                                             ; preds = %4421, %4462
  %4469 = phi i64 [ %4424, %4421 ], [ %4435, %4462 ]
  %4470 = phi i32 [ 1, %4421 ], [ %4466, %4462 ]
  br label %4471

4471:                                             ; preds = %4468, %4471
  %4472 = phi i64 [ %4477, %4471 ], [ %4469, %4468 ]
  %4473 = phi i32 [ %4476, %4471 ], [ %4470, %4468 ]
  %4474 = getelementptr inbounds i32, ptr %9, i64 %4472
  %4475 = load i32, ptr %4474, align 4, !tbaa !5
  %4476 = mul nsw i32 %4475, %4473
  %4477 = add nsw i64 %4472, -1
  %4478 = trunc i64 %4472 to i32
  %4479 = icmp sgt i32 %4478, 0
  br i1 %4479, label %4471, label %4480, !llvm.loop !345

4480:                                             ; preds = %4471, %4462
  %4481 = phi i32 [ %4466, %4462 ], [ %4476, %4471 ]
  %4482 = and i64 %4431, 4294967295
  %4483 = getelementptr inbounds i32, ptr %6, i64 %4482
  %4484 = load i32, ptr %4483, align 4, !tbaa !5
  %4485 = mul nsw i32 %4484, %4481
  %4486 = add nsw i32 %4485, %4425
  %4487 = icmp sgt i64 %4423, 2
  %4488 = add nsw i64 %4424, -1
  %4489 = add i32 %4422, 1
  br i1 %4487, label %4421, label %4490, !llvm.loop !346

4490:                                             ; preds = %4480, %4416
  %4491 = phi i32 [ %4420, %4416 ], [ %4486, %4480 ]
  %4492 = sext i32 %4491 to i64
  %4493 = getelementptr inbounds double, ptr %2, i64 %4492
  %4494 = load double, ptr %4493, align 8, !tbaa !18
  %4495 = getelementptr inbounds i32, ptr %4380, i64 %4492
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = sitofp i32 %4496 to float
  %4498 = fpext float %4417 to double
  %4499 = fpext float %4497 to double
  %4500 = fmul fast double %4494, %4499
  %4501 = fcmp fast uge double %4500, 0.000000e+00
  %4502 = fneg fast double %4500
  %4503 = tail call fast double @llvm.fabs.f64(double %4500)
  %4504 = fcmp fast ole double %4503, %4498
  %4505 = select nnan ninf i1 %4501, double %4500, double %4502
  %4506 = fptrunc double %4505 to float
  %4507 = select i1 %4504, float %4417, float %4506
  %4508 = fadd fast double %4494, %4419
  %4509 = add nuw nsw i32 %4418, 1
  br i1 %4410, label %4510, label %4557

4510:                                             ; preds = %4490
  %4511 = load i32, ptr %4, align 4, !tbaa !5
  %4512 = load i32, ptr %12, align 4, !tbaa !5
  %4513 = add nsw i32 %4512, -1
  %4514 = icmp slt i32 %4511, %4513
  br i1 %4514, label %4534, label %4515

4515:                                             ; preds = %4510
  %4516 = icmp eq i32 %4511, %4513
  br i1 %4516, label %4517, label %4550

4517:                                             ; preds = %4515
  store i32 0, ptr %4, align 4, !tbaa !5
  %4518 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4518, ptr %6, align 4, !tbaa !5
  br i1 %4415, label %4557, label %4519

4519:                                             ; preds = %4517, %4544
  %4520 = phi i64 [ %4548, %4544 ], [ 1, %4517 ]
  %4521 = getelementptr inbounds i32, ptr %4, i64 %4520
  %4522 = load i32, ptr %4521, align 4, !tbaa !5
  %4523 = getelementptr inbounds i32, ptr %12, i64 %4520
  %4524 = load i32, ptr %4523, align 4, !tbaa !5
  %4525 = add nsw i32 %4524, -1
  %4526 = icmp slt i32 %4522, %4525
  br i1 %4526, label %4527, label %4542

4527:                                             ; preds = %4519
  br i1 %4514, label %4534, label %4528

4528:                                             ; preds = %4527
  %4529 = getelementptr inbounds i32, ptr %7, i64 %4520
  %4530 = load i32, ptr %4529, align 4, !tbaa !5
  %4531 = getelementptr inbounds i32, ptr %6, i64 %4520
  %4532 = load i32, ptr %4531, align 4, !tbaa !5
  %4533 = add nsw i32 %4532, %4530
  store i32 %4533, ptr %4531, align 4, !tbaa !5
  br label %4552

4534:                                             ; preds = %4510, %4527
  %4535 = phi i32 [ %4522, %4527 ], [ %4511, %4510 ]
  %4536 = phi ptr [ %4521, %4527 ], [ %4, %4510 ]
  %4537 = phi i64 [ %4520, %4527 ], [ 0, %4510 ]
  %4538 = add nsw i32 %4535, 1
  store i32 %4538, ptr %4536, align 4, !tbaa !5
  %4539 = getelementptr inbounds i32, ptr %7, i64 %4537
  %4540 = load i32, ptr %4539, align 4, !tbaa !5
  %4541 = getelementptr inbounds i32, ptr %6, i64 %4537
  br label %4552

4542:                                             ; preds = %4519
  %4543 = icmp eq i32 %4522, %4525
  br i1 %4543, label %4544, label %4550

4544:                                             ; preds = %4542
  store i32 0, ptr %4521, align 4, !tbaa !5
  %4545 = getelementptr inbounds i32, ptr %8, i64 %4520
  %4546 = load i32, ptr %4545, align 4, !tbaa !5
  %4547 = getelementptr inbounds i32, ptr %6, i64 %4520
  store i32 %4546, ptr %4547, align 4, !tbaa !5
  %4548 = add nuw nsw i64 %4520, 1
  %4549 = icmp eq i64 %4548, %4413
  br i1 %4549, label %4557, label %4519, !llvm.loop !347

4550:                                             ; preds = %4515, %4542
  store float %4507, ptr %4382, align 4, !tbaa !162
  %4551 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4552:                                             ; preds = %4528, %4534
  %4553 = phi ptr [ %4541, %4534 ], [ %4521, %4528 ]
  %4554 = phi i32 [ %4540, %4534 ], [ 1, %4528 ]
  %4555 = load i32, ptr %4553, align 4, !tbaa !5
  %4556 = add nsw i32 %4555, %4554
  store i32 %4556, ptr %4553, align 4, !tbaa !5
  br label %4557

4557:                                             ; preds = %4544, %4552, %4517, %4490
  %4558 = icmp eq i32 %4509, %5
  br i1 %4558, label %5627, label %4416, !llvm.loop !348

4559:                                             ; preds = %4399, %4701
  %4560 = phi float [ 0.000000e+00, %4399 ], [ %4649, %4701 ]
  %4561 = phi i32 [ 0, %4399 ], [ %4650, %4701 ]
  %4562 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4400, label %4563, label %4632

4563:                                             ; preds = %4559, %4622
  %4564 = phi i32 [ %4631, %4622 ], [ 0, %4559 ]
  %4565 = phi i64 [ %4573, %4622 ], [ %4404, %4559 ]
  %4566 = phi i64 [ %4630, %4622 ], [ %4403, %4559 ]
  %4567 = phi i32 [ %4628, %4622 ], [ %4562, %4559 ]
  %4568 = sub i32 %4402, %4564
  %4569 = tail call i32 @llvm.smin.i32(i32 %4568, i32 0)
  %4570 = sub i32 %4568, %4569
  %4571 = zext i32 %4570 to i64
  %4572 = add nuw nsw i64 %4571, 1
  %4573 = add nsw i64 %4565, -1
  %4574 = icmp ult i32 %4570, 31
  br i1 %4574, label %4610, label %4575

4575:                                             ; preds = %4563
  %4576 = and i64 %4572, 8589934560
  %4577 = sub i64 %4566, %4576
  br label %4578

4578:                                             ; preds = %4578, %4575
  %4579 = phi i64 [ 0, %4575 ], [ %4602, %4578 ]
  %4580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4598, %4578 ]
  %4581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4599, %4578 ]
  %4582 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4600, %4578 ]
  %4583 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4601, %4578 ]
  %4584 = sub i64 %4566, %4579
  %4585 = getelementptr inbounds i32, ptr %11, i64 %4584
  %4586 = getelementptr inbounds i32, ptr %4585, i64 -7
  %4587 = load <8 x i32>, ptr %4586, align 4, !tbaa !5
  %4588 = shufflevector <8 x i32> %4587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4589 = getelementptr inbounds i32, ptr %4585, i64 -15
  %4590 = load <8 x i32>, ptr %4589, align 4, !tbaa !5
  %4591 = shufflevector <8 x i32> %4590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4592 = getelementptr inbounds i32, ptr %4585, i64 -23
  %4593 = load <8 x i32>, ptr %4592, align 4, !tbaa !5
  %4594 = shufflevector <8 x i32> %4593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4595 = getelementptr inbounds i32, ptr %4585, i64 -31
  %4596 = load <8 x i32>, ptr %4595, align 4, !tbaa !5
  %4597 = shufflevector <8 x i32> %4596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4598 = mul <8 x i32> %4588, %4580
  %4599 = mul <8 x i32> %4591, %4581
  %4600 = mul <8 x i32> %4594, %4582
  %4601 = mul <8 x i32> %4597, %4583
  %4602 = add nuw i64 %4579, 32
  %4603 = icmp eq i64 %4602, %4576
  br i1 %4603, label %4604, label %4578, !llvm.loop !349

4604:                                             ; preds = %4578
  %4605 = mul <8 x i32> %4599, %4598
  %4606 = mul <8 x i32> %4600, %4605
  %4607 = mul <8 x i32> %4601, %4606
  %4608 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4607)
  %4609 = icmp eq i64 %4572, %4576
  br i1 %4609, label %4622, label %4610

4610:                                             ; preds = %4563, %4604
  %4611 = phi i64 [ %4566, %4563 ], [ %4577, %4604 ]
  %4612 = phi i32 [ 1, %4563 ], [ %4608, %4604 ]
  br label %4613

4613:                                             ; preds = %4610, %4613
  %4614 = phi i64 [ %4619, %4613 ], [ %4611, %4610 ]
  %4615 = phi i32 [ %4618, %4613 ], [ %4612, %4610 ]
  %4616 = getelementptr inbounds i32, ptr %11, i64 %4614
  %4617 = load i32, ptr %4616, align 4, !tbaa !5
  %4618 = mul nsw i32 %4617, %4615
  %4619 = add nsw i64 %4614, -1
  %4620 = trunc i64 %4614 to i32
  %4621 = icmp sgt i32 %4620, 0
  br i1 %4621, label %4613, label %4622, !llvm.loop !350

4622:                                             ; preds = %4613, %4604
  %4623 = phi i32 [ %4608, %4604 ], [ %4618, %4613 ]
  %4624 = and i64 %4573, 4294967295
  %4625 = getelementptr inbounds i32, ptr %6, i64 %4624
  %4626 = load i32, ptr %4625, align 4, !tbaa !5
  %4627 = mul nsw i32 %4626, %4623
  %4628 = add nsw i32 %4627, %4567
  %4629 = icmp sgt i64 %4565, 2
  %4630 = add nsw i64 %4566, -1
  %4631 = add i32 %4564, 1
  br i1 %4629, label %4563, label %4632, !llvm.loop !351

4632:                                             ; preds = %4622, %4559
  %4633 = phi i32 [ %4562, %4559 ], [ %4628, %4622 ]
  %4634 = icmp slt i32 %4633, %5
  br i1 %4634, label %4637, label %4635

4635:                                             ; preds = %4632
  %4636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4637:                                             ; preds = %4632
  %4638 = sext i32 %4633 to i64
  %4639 = getelementptr inbounds i32, ptr %4380, i64 %4638
  %4640 = load i32, ptr %4639, align 4, !tbaa !5
  %4641 = sitofp i32 %4640 to float
  %4642 = fpext float %4560 to double
  %4643 = fpext float %4641 to double
  %4644 = icmp slt i32 %4640, 0
  %4645 = fneg fast double %4643
  %4646 = select i1 %4644, double %4645, double %4643
  %4647 = fcmp fast ole double %4646, %4642
  %4648 = fptrunc double %4646 to float
  %4649 = select fast i1 %4647, float %4560, float %4648
  store float %4649, ptr %4382, align 4, !tbaa !162
  %4650 = add nuw nsw i32 %4561, 1
  br i1 %4401, label %4651, label %4701

4651:                                             ; preds = %4637
  %4652 = load i32, ptr %4, align 4, !tbaa !5
  %4653 = load i32, ptr %12, align 4, !tbaa !5
  %4654 = add nsw i32 %4653, -1
  %4655 = icmp slt i32 %4652, %4654
  br i1 %4655, label %4678, label %4656

4656:                                             ; preds = %4651
  %4657 = icmp eq i32 %4652, %4654
  br i1 %4657, label %4658, label %4694

4658:                                             ; preds = %4656
  store i32 0, ptr %4, align 4, !tbaa !5
  %4659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4659, ptr %6, align 4, !tbaa !5
  br i1 %4406, label %4701, label %4660

4660:                                             ; preds = %4658, %4688
  %4661 = phi i64 [ %4692, %4688 ], [ 1, %4658 ]
  %4662 = getelementptr inbounds i32, ptr %4, i64 %4661
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = getelementptr inbounds i32, ptr %12, i64 %4661
  %4665 = load i32, ptr %4664, align 4, !tbaa !5
  %4666 = add nsw i32 %4665, -1
  %4667 = icmp slt i32 %4663, %4666
  br i1 %4667, label %4668, label %4686

4668:                                             ; preds = %4660
  br i1 %4655, label %4678, label %4669

4669:                                             ; preds = %4668
  %4670 = shl i64 %4661, 32
  %4671 = add i64 %4670, -4294967296
  %4672 = ashr exact i64 %4671, 32
  %4673 = getelementptr inbounds i32, ptr %7, i64 %4672
  %4674 = load i32, ptr %4673, align 4, !tbaa !5
  %4675 = getelementptr inbounds i32, ptr %6, i64 %4661
  %4676 = load i32, ptr %4675, align 4, !tbaa !5
  %4677 = add nsw i32 %4676, %4674
  store i32 %4677, ptr %4675, align 4, !tbaa !5
  br label %4696

4678:                                             ; preds = %4651, %4668
  %4679 = phi i32 [ %4663, %4668 ], [ %4652, %4651 ]
  %4680 = phi ptr [ %4662, %4668 ], [ %4, %4651 ]
  %4681 = phi i64 [ %4661, %4668 ], [ 0, %4651 ]
  %4682 = add nsw i32 %4679, 1
  store i32 %4682, ptr %4680, align 4, !tbaa !5
  %4683 = getelementptr inbounds i32, ptr %7, i64 %4681
  %4684 = load i32, ptr %4683, align 4, !tbaa !5
  %4685 = getelementptr inbounds i32, ptr %6, i64 %4681
  br label %4696

4686:                                             ; preds = %4660
  %4687 = icmp eq i32 %4663, %4666
  br i1 %4687, label %4688, label %4694

4688:                                             ; preds = %4686
  store i32 0, ptr %4662, align 4, !tbaa !5
  %4689 = getelementptr inbounds i32, ptr %8, i64 %4661
  %4690 = load i32, ptr %4689, align 4, !tbaa !5
  %4691 = getelementptr inbounds i32, ptr %6, i64 %4661
  store i32 %4690, ptr %4691, align 4, !tbaa !5
  %4692 = add nuw nsw i64 %4661, 1
  %4693 = icmp eq i64 %4692, %4404
  br i1 %4693, label %4701, label %4660, !llvm.loop !352

4694:                                             ; preds = %4656, %4686
  %4695 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4696:                                             ; preds = %4669, %4678
  %4697 = phi ptr [ %4685, %4678 ], [ %4662, %4669 ]
  %4698 = phi i32 [ %4684, %4678 ], [ 1, %4669 ]
  %4699 = load i32, ptr %4697, align 4, !tbaa !5
  %4700 = add nsw i32 %4699, %4698
  store i32 %4700, ptr %4697, align 4, !tbaa !5
  br label %4701

4701:                                             ; preds = %4688, %4696, %4658, %4637
  %4702 = icmp eq i32 %4650, %5
  br i1 %4702, label %5630, label %4559, !llvm.loop !353

4703:                                             ; preds = %4392
  %4704 = getelementptr inbounds i32, ptr %3, i64 %19
  %4705 = load i32, ptr %4704, align 4, !tbaa !5
  %4706 = icmp eq i32 %4705, 0
  %4707 = icmp sgt i32 %5, 0
  br i1 %4706, label %4717, label %4708

4708:                                             ; preds = %4703
  br i1 %4707, label %4709, label %5630

4709:                                             ; preds = %4708
  %4710 = icmp sgt i32 %13, 1
  %4711 = icmp sgt i32 %13, 0
  %4712 = add i32 %13, -2
  %4713 = zext i32 %4712 to i64
  %4714 = zext i32 %13 to i64
  %4715 = add nuw i32 %5, 1
  %4716 = icmp eq i32 %13, 1
  br label %4861

4717:                                             ; preds = %4703
  br i1 %4707, label %4718, label %5630

4718:                                             ; preds = %4717
  %4719 = icmp sgt i32 %13, 1
  %4720 = icmp sgt i32 %13, 0
  %4721 = add i32 %13, -2
  %4722 = zext i32 %4721 to i64
  %4723 = zext i32 %13 to i64
  %4724 = add nuw i32 %5, 1
  %4725 = icmp eq i32 %13, 1
  br label %4726

4726:                                             ; preds = %4718, %4859
  %4727 = phi float [ 0.000000e+00, %4718 ], [ %4809, %4859 ]
  %4728 = phi i32 [ 0, %4718 ], [ %4811, %4859 ]
  %4729 = phi double [ 0.000000e+00, %4718 ], [ %4810, %4859 ]
  %4730 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4719, label %4731, label %4800

4731:                                             ; preds = %4726, %4790
  %4732 = phi i32 [ %4799, %4790 ], [ 0, %4726 ]
  %4733 = phi i64 [ %4741, %4790 ], [ %4723, %4726 ]
  %4734 = phi i64 [ %4798, %4790 ], [ %4722, %4726 ]
  %4735 = phi i32 [ %4796, %4790 ], [ %4730, %4726 ]
  %4736 = sub i32 %4721, %4732
  %4737 = tail call i32 @llvm.smin.i32(i32 %4736, i32 0)
  %4738 = sub i32 %4736, %4737
  %4739 = zext i32 %4738 to i64
  %4740 = add nuw nsw i64 %4739, 1
  %4741 = add nsw i64 %4733, -1
  %4742 = icmp ult i32 %4738, 31
  br i1 %4742, label %4778, label %4743

4743:                                             ; preds = %4731
  %4744 = and i64 %4740, 8589934560
  %4745 = sub i64 %4734, %4744
  br label %4746

4746:                                             ; preds = %4746, %4743
  %4747 = phi i64 [ 0, %4743 ], [ %4770, %4746 ]
  %4748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4766, %4746 ]
  %4749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4767, %4746 ]
  %4750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4768, %4746 ]
  %4751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4769, %4746 ]
  %4752 = sub i64 %4734, %4747
  %4753 = getelementptr inbounds i32, ptr %9, i64 %4752
  %4754 = getelementptr inbounds i32, ptr %4753, i64 -7
  %4755 = load <8 x i32>, ptr %4754, align 4, !tbaa !5
  %4756 = shufflevector <8 x i32> %4755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4757 = getelementptr inbounds i32, ptr %4753, i64 -15
  %4758 = load <8 x i32>, ptr %4757, align 4, !tbaa !5
  %4759 = shufflevector <8 x i32> %4758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4760 = getelementptr inbounds i32, ptr %4753, i64 -23
  %4761 = load <8 x i32>, ptr %4760, align 4, !tbaa !5
  %4762 = shufflevector <8 x i32> %4761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4763 = getelementptr inbounds i32, ptr %4753, i64 -31
  %4764 = load <8 x i32>, ptr %4763, align 4, !tbaa !5
  %4765 = shufflevector <8 x i32> %4764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4766 = mul <8 x i32> %4756, %4748
  %4767 = mul <8 x i32> %4759, %4749
  %4768 = mul <8 x i32> %4762, %4750
  %4769 = mul <8 x i32> %4765, %4751
  %4770 = add nuw i64 %4747, 32
  %4771 = icmp eq i64 %4770, %4744
  br i1 %4771, label %4772, label %4746, !llvm.loop !354

4772:                                             ; preds = %4746
  %4773 = mul <8 x i32> %4767, %4766
  %4774 = mul <8 x i32> %4768, %4773
  %4775 = mul <8 x i32> %4769, %4774
  %4776 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4775)
  %4777 = icmp eq i64 %4740, %4744
  br i1 %4777, label %4790, label %4778

4778:                                             ; preds = %4731, %4772
  %4779 = phi i64 [ %4734, %4731 ], [ %4745, %4772 ]
  %4780 = phi i32 [ 1, %4731 ], [ %4776, %4772 ]
  br label %4781

4781:                                             ; preds = %4778, %4781
  %4782 = phi i64 [ %4787, %4781 ], [ %4779, %4778 ]
  %4783 = phi i32 [ %4786, %4781 ], [ %4780, %4778 ]
  %4784 = getelementptr inbounds i32, ptr %9, i64 %4782
  %4785 = load i32, ptr %4784, align 4, !tbaa !5
  %4786 = mul nsw i32 %4785, %4783
  %4787 = add nsw i64 %4782, -1
  %4788 = trunc i64 %4782 to i32
  %4789 = icmp sgt i32 %4788, 0
  br i1 %4789, label %4781, label %4790, !llvm.loop !355

4790:                                             ; preds = %4781, %4772
  %4791 = phi i32 [ %4776, %4772 ], [ %4786, %4781 ]
  %4792 = and i64 %4741, 4294967295
  %4793 = getelementptr inbounds i32, ptr %6, i64 %4792
  %4794 = load i32, ptr %4793, align 4, !tbaa !5
  %4795 = mul nsw i32 %4794, %4791
  %4796 = add nsw i32 %4795, %4735
  %4797 = icmp sgt i64 %4733, 2
  %4798 = add nsw i64 %4734, -1
  %4799 = add i32 %4732, 1
  br i1 %4797, label %4731, label %4800, !llvm.loop !356

4800:                                             ; preds = %4790, %4726
  %4801 = phi i32 [ %4730, %4726 ], [ %4796, %4790 ]
  %4802 = sext i32 %4801 to i64
  %4803 = getelementptr inbounds i32, ptr %4380, i64 %4802
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = sitofp i32 %4804 to float
  %4806 = icmp slt i32 %4804, 0
  %4807 = fneg fast float %4805
  %4808 = select fast i1 %4806, float %4807, float %4805
  %4809 = tail call fast float @llvm.maxnum.f32(float %4727, float %4808)
  %4810 = fadd fast double %4729, 1.000000e+00
  %4811 = add nuw nsw i32 %4728, 1
  br i1 %4720, label %4812, label %4859

4812:                                             ; preds = %4800
  %4813 = load i32, ptr %4, align 4, !tbaa !5
  %4814 = load i32, ptr %12, align 4, !tbaa !5
  %4815 = add nsw i32 %4814, -1
  %4816 = icmp slt i32 %4813, %4815
  br i1 %4816, label %4836, label %4817

4817:                                             ; preds = %4812
  %4818 = icmp eq i32 %4813, %4815
  br i1 %4818, label %4819, label %4852

4819:                                             ; preds = %4817
  store i32 0, ptr %4, align 4, !tbaa !5
  %4820 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4820, ptr %6, align 4, !tbaa !5
  br i1 %4725, label %4859, label %4821

4821:                                             ; preds = %4819, %4846
  %4822 = phi i64 [ %4850, %4846 ], [ 1, %4819 ]
  %4823 = getelementptr inbounds i32, ptr %4, i64 %4822
  %4824 = load i32, ptr %4823, align 4, !tbaa !5
  %4825 = getelementptr inbounds i32, ptr %12, i64 %4822
  %4826 = load i32, ptr %4825, align 4, !tbaa !5
  %4827 = add nsw i32 %4826, -1
  %4828 = icmp slt i32 %4824, %4827
  br i1 %4828, label %4829, label %4844

4829:                                             ; preds = %4821
  br i1 %4816, label %4836, label %4830

4830:                                             ; preds = %4829
  %4831 = getelementptr inbounds i32, ptr %7, i64 %4822
  %4832 = load i32, ptr %4831, align 4, !tbaa !5
  %4833 = getelementptr inbounds i32, ptr %6, i64 %4822
  %4834 = load i32, ptr %4833, align 4, !tbaa !5
  %4835 = add nsw i32 %4834, %4832
  store i32 %4835, ptr %4833, align 4, !tbaa !5
  br label %4854

4836:                                             ; preds = %4812, %4829
  %4837 = phi i32 [ %4824, %4829 ], [ %4813, %4812 ]
  %4838 = phi ptr [ %4823, %4829 ], [ %4, %4812 ]
  %4839 = phi i64 [ %4822, %4829 ], [ 0, %4812 ]
  %4840 = add nsw i32 %4837, 1
  store i32 %4840, ptr %4838, align 4, !tbaa !5
  %4841 = getelementptr inbounds i32, ptr %7, i64 %4839
  %4842 = load i32, ptr %4841, align 4, !tbaa !5
  %4843 = getelementptr inbounds i32, ptr %6, i64 %4839
  br label %4854

4844:                                             ; preds = %4821
  %4845 = icmp eq i32 %4824, %4827
  br i1 %4845, label %4846, label %4852

4846:                                             ; preds = %4844
  store i32 0, ptr %4823, align 4, !tbaa !5
  %4847 = getelementptr inbounds i32, ptr %8, i64 %4822
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = getelementptr inbounds i32, ptr %6, i64 %4822
  store i32 %4848, ptr %4849, align 4, !tbaa !5
  %4850 = add nuw nsw i64 %4822, 1
  %4851 = icmp eq i64 %4850, %4723
  br i1 %4851, label %4859, label %4821, !llvm.loop !357

4852:                                             ; preds = %4817, %4844
  store float %4809, ptr %4382, align 4, !tbaa !162
  %4853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4854:                                             ; preds = %4830, %4836
  %4855 = phi ptr [ %4843, %4836 ], [ %4823, %4830 ]
  %4856 = phi i32 [ %4842, %4836 ], [ 1, %4830 ]
  %4857 = load i32, ptr %4855, align 4, !tbaa !5
  %4858 = add nsw i32 %4857, %4856
  store i32 %4858, ptr %4855, align 4, !tbaa !5
  br label %4859

4859:                                             ; preds = %4846, %4854, %4819, %4800
  %4860 = icmp eq i32 %4811, %5
  br i1 %4860, label %5628, label %4726, !llvm.loop !358

4861:                                             ; preds = %4709, %4999
  %4862 = phi float [ 0.000000e+00, %4709 ], [ %4947, %4999 ]
  %4863 = phi i32 [ 0, %4709 ], [ %4948, %4999 ]
  %4864 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4710, label %4865, label %4934

4865:                                             ; preds = %4861, %4924
  %4866 = phi i32 [ %4933, %4924 ], [ 0, %4861 ]
  %4867 = phi i64 [ %4875, %4924 ], [ %4714, %4861 ]
  %4868 = phi i64 [ %4932, %4924 ], [ %4713, %4861 ]
  %4869 = phi i32 [ %4930, %4924 ], [ %4864, %4861 ]
  %4870 = sub i32 %4712, %4866
  %4871 = tail call i32 @llvm.smin.i32(i32 %4870, i32 0)
  %4872 = sub i32 %4870, %4871
  %4873 = zext i32 %4872 to i64
  %4874 = add nuw nsw i64 %4873, 1
  %4875 = add nsw i64 %4867, -1
  %4876 = icmp ult i32 %4872, 31
  br i1 %4876, label %4912, label %4877

4877:                                             ; preds = %4865
  %4878 = and i64 %4874, 8589934560
  %4879 = sub i64 %4868, %4878
  br label %4880

4880:                                             ; preds = %4880, %4877
  %4881 = phi i64 [ 0, %4877 ], [ %4904, %4880 ]
  %4882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4900, %4880 ]
  %4883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4901, %4880 ]
  %4884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4902, %4880 ]
  %4885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4903, %4880 ]
  %4886 = sub i64 %4868, %4881
  %4887 = getelementptr inbounds i32, ptr %11, i64 %4886
  %4888 = getelementptr inbounds i32, ptr %4887, i64 -7
  %4889 = load <8 x i32>, ptr %4888, align 4, !tbaa !5
  %4890 = shufflevector <8 x i32> %4889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4891 = getelementptr inbounds i32, ptr %4887, i64 -15
  %4892 = load <8 x i32>, ptr %4891, align 4, !tbaa !5
  %4893 = shufflevector <8 x i32> %4892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4894 = getelementptr inbounds i32, ptr %4887, i64 -23
  %4895 = load <8 x i32>, ptr %4894, align 4, !tbaa !5
  %4896 = shufflevector <8 x i32> %4895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4897 = getelementptr inbounds i32, ptr %4887, i64 -31
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = mul <8 x i32> %4890, %4882
  %4901 = mul <8 x i32> %4893, %4883
  %4902 = mul <8 x i32> %4896, %4884
  %4903 = mul <8 x i32> %4899, %4885
  %4904 = add nuw i64 %4881, 32
  %4905 = icmp eq i64 %4904, %4878
  br i1 %4905, label %4906, label %4880, !llvm.loop !359

4906:                                             ; preds = %4880
  %4907 = mul <8 x i32> %4901, %4900
  %4908 = mul <8 x i32> %4902, %4907
  %4909 = mul <8 x i32> %4903, %4908
  %4910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4909)
  %4911 = icmp eq i64 %4874, %4878
  br i1 %4911, label %4924, label %4912

4912:                                             ; preds = %4865, %4906
  %4913 = phi i64 [ %4868, %4865 ], [ %4879, %4906 ]
  %4914 = phi i32 [ 1, %4865 ], [ %4910, %4906 ]
  br label %4915

4915:                                             ; preds = %4912, %4915
  %4916 = phi i64 [ %4921, %4915 ], [ %4913, %4912 ]
  %4917 = phi i32 [ %4920, %4915 ], [ %4914, %4912 ]
  %4918 = getelementptr inbounds i32, ptr %11, i64 %4916
  %4919 = load i32, ptr %4918, align 4, !tbaa !5
  %4920 = mul nsw i32 %4919, %4917
  %4921 = add nsw i64 %4916, -1
  %4922 = trunc i64 %4916 to i32
  %4923 = icmp sgt i32 %4922, 0
  br i1 %4923, label %4915, label %4924, !llvm.loop !360

4924:                                             ; preds = %4915, %4906
  %4925 = phi i32 [ %4910, %4906 ], [ %4920, %4915 ]
  %4926 = and i64 %4875, 4294967295
  %4927 = getelementptr inbounds i32, ptr %6, i64 %4926
  %4928 = load i32, ptr %4927, align 4, !tbaa !5
  %4929 = mul nsw i32 %4928, %4925
  %4930 = add nsw i32 %4929, %4869
  %4931 = icmp sgt i64 %4867, 2
  %4932 = add nsw i64 %4868, -1
  %4933 = add i32 %4866, 1
  br i1 %4931, label %4865, label %4934, !llvm.loop !361

4934:                                             ; preds = %4924, %4861
  %4935 = phi i32 [ %4864, %4861 ], [ %4930, %4924 ]
  %4936 = icmp slt i32 %4935, %5
  br i1 %4936, label %4939, label %4937

4937:                                             ; preds = %4934
  %4938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4939:                                             ; preds = %4934
  %4940 = sext i32 %4935 to i64
  %4941 = getelementptr inbounds i32, ptr %4380, i64 %4940
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = sitofp i32 %4942 to float
  %4944 = icmp slt i32 %4942, 0
  %4945 = fneg fast float %4943
  %4946 = select fast i1 %4944, float %4945, float %4943
  %4947 = tail call fast float @llvm.maxnum.f32(float %4862, float %4946)
  store float %4947, ptr %4382, align 4, !tbaa !162
  %4948 = add nuw nsw i32 %4863, 1
  br i1 %4711, label %4949, label %4999

4949:                                             ; preds = %4939
  %4950 = load i32, ptr %4, align 4, !tbaa !5
  %4951 = load i32, ptr %12, align 4, !tbaa !5
  %4952 = add nsw i32 %4951, -1
  %4953 = icmp slt i32 %4950, %4952
  br i1 %4953, label %4976, label %4954

4954:                                             ; preds = %4949
  %4955 = icmp eq i32 %4950, %4952
  br i1 %4955, label %4956, label %4992

4956:                                             ; preds = %4954
  store i32 0, ptr %4, align 4, !tbaa !5
  %4957 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4957, ptr %6, align 4, !tbaa !5
  br i1 %4716, label %4999, label %4958

4958:                                             ; preds = %4956, %4986
  %4959 = phi i64 [ %4990, %4986 ], [ 1, %4956 ]
  %4960 = getelementptr inbounds i32, ptr %4, i64 %4959
  %4961 = load i32, ptr %4960, align 4, !tbaa !5
  %4962 = getelementptr inbounds i32, ptr %12, i64 %4959
  %4963 = load i32, ptr %4962, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, -1
  %4965 = icmp slt i32 %4961, %4964
  br i1 %4965, label %4966, label %4984

4966:                                             ; preds = %4958
  br i1 %4953, label %4976, label %4967

4967:                                             ; preds = %4966
  %4968 = shl i64 %4959, 32
  %4969 = add i64 %4968, -4294967296
  %4970 = ashr exact i64 %4969, 32
  %4971 = getelementptr inbounds i32, ptr %7, i64 %4970
  %4972 = load i32, ptr %4971, align 4, !tbaa !5
  %4973 = getelementptr inbounds i32, ptr %6, i64 %4959
  %4974 = load i32, ptr %4973, align 4, !tbaa !5
  %4975 = add nsw i32 %4974, %4972
  store i32 %4975, ptr %4973, align 4, !tbaa !5
  br label %4994

4976:                                             ; preds = %4949, %4966
  %4977 = phi i32 [ %4961, %4966 ], [ %4950, %4949 ]
  %4978 = phi ptr [ %4960, %4966 ], [ %4, %4949 ]
  %4979 = phi i64 [ %4959, %4966 ], [ 0, %4949 ]
  %4980 = add nsw i32 %4977, 1
  store i32 %4980, ptr %4978, align 4, !tbaa !5
  %4981 = getelementptr inbounds i32, ptr %7, i64 %4979
  %4982 = load i32, ptr %4981, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %6, i64 %4979
  br label %4994

4984:                                             ; preds = %4958
  %4985 = icmp eq i32 %4961, %4964
  br i1 %4985, label %4986, label %4992

4986:                                             ; preds = %4984
  store i32 0, ptr %4960, align 4, !tbaa !5
  %4987 = getelementptr inbounds i32, ptr %8, i64 %4959
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = getelementptr inbounds i32, ptr %6, i64 %4959
  store i32 %4988, ptr %4989, align 4, !tbaa !5
  %4990 = add nuw nsw i64 %4959, 1
  %4991 = icmp eq i64 %4990, %4714
  br i1 %4991, label %4999, label %4958, !llvm.loop !362

4992:                                             ; preds = %4954, %4984
  %4993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4994:                                             ; preds = %4967, %4976
  %4995 = phi ptr [ %4983, %4976 ], [ %4960, %4967 ]
  %4996 = phi i32 [ %4982, %4976 ], [ 1, %4967 ]
  %4997 = load i32, ptr %4995, align 4, !tbaa !5
  %4998 = add nsw i32 %4997, %4996
  store i32 %4998, ptr %4995, align 4, !tbaa !5
  br label %4999

4999:                                             ; preds = %4986, %4994, %4956, %4939
  %5000 = icmp eq i32 %4948, %5
  br i1 %5000, label %5630, label %4861, !llvm.loop !363

5001:                                             ; preds = %4392
  %5002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 403, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

5003:                                             ; preds = %18
  %5004 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5005 = load ptr, ptr %5004, align 8, !tbaa !9
  %5006 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5007 = load ptr, ptr %5006, align 8, !tbaa !9
  store double 0.000000e+00, ptr %5007, align 8, !tbaa !18
  %5008 = icmp eq i32 %13, 0
  br i1 %5008, label %5009, label %5017

5009:                                             ; preds = %5003
  %5010 = load i32, ptr %5005, align 4, !tbaa !5
  %5011 = sitofp i32 %5010 to double
  %5012 = icmp slt i32 %5010, 0
  %5013 = fneg fast double %5011
  %5014 = select fast i1 %5012, double %5013, double %5011
  %5015 = fcmp fast ole double %5014, 0.000000e+00
  %5016 = select fast i1 %5015, double 0.000000e+00, double %5014
  store double %5016, ptr %5007, align 8, !tbaa !18
  br label %5630

5017:                                             ; preds = %5003
  switch i32 %1, label %5619 [
    i32 1, label %5018
    i32 0, label %5321
  ]

5018:                                             ; preds = %5017
  %5019 = getelementptr inbounds i32, ptr %3, i64 %19
  %5020 = load i32, ptr %5019, align 4, !tbaa !5
  %5021 = icmp eq i32 %5020, 0
  %5022 = icmp sgt i32 %5, 0
  br i1 %5021, label %5032, label %5023

5023:                                             ; preds = %5018
  br i1 %5022, label %5024, label %5630

5024:                                             ; preds = %5023
  %5025 = icmp sgt i32 %13, 1
  %5026 = icmp sgt i32 %13, 0
  %5027 = add i32 %13, -2
  %5028 = zext i32 %5027 to i64
  %5029 = zext i32 %13 to i64
  %5030 = add nuw i32 %5, 1
  %5031 = icmp eq i32 %13, 1
  br label %5181

5032:                                             ; preds = %5018
  br i1 %5022, label %5033, label %5630

5033:                                             ; preds = %5032
  %5034 = icmp sgt i32 %13, 1
  %5035 = icmp sgt i32 %13, 0
  %5036 = add i32 %13, -2
  %5037 = zext i32 %5036 to i64
  %5038 = zext i32 %13 to i64
  %5039 = add nuw i32 %5, 1
  %5040 = icmp eq i32 %13, 1
  br label %5041

5041:                                             ; preds = %5033, %5179
  %5042 = phi double [ 0.000000e+00, %5033 ], [ %5129, %5179 ]
  %5043 = phi i32 [ 0, %5033 ], [ %5131, %5179 ]
  %5044 = phi double [ 0.000000e+00, %5033 ], [ %5130, %5179 ]
  %5045 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5034, label %5046, label %5115

5046:                                             ; preds = %5041, %5105
  %5047 = phi i32 [ %5114, %5105 ], [ 0, %5041 ]
  %5048 = phi i64 [ %5056, %5105 ], [ %5038, %5041 ]
  %5049 = phi i64 [ %5113, %5105 ], [ %5037, %5041 ]
  %5050 = phi i32 [ %5111, %5105 ], [ %5045, %5041 ]
  %5051 = sub i32 %5036, %5047
  %5052 = tail call i32 @llvm.smin.i32(i32 %5051, i32 0)
  %5053 = sub i32 %5051, %5052
  %5054 = zext i32 %5053 to i64
  %5055 = add nuw nsw i64 %5054, 1
  %5056 = add nsw i64 %5048, -1
  %5057 = icmp ult i32 %5053, 31
  br i1 %5057, label %5093, label %5058

5058:                                             ; preds = %5046
  %5059 = and i64 %5055, 8589934560
  %5060 = sub i64 %5049, %5059
  br label %5061

5061:                                             ; preds = %5061, %5058
  %5062 = phi i64 [ 0, %5058 ], [ %5085, %5061 ]
  %5063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5081, %5061 ]
  %5064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5082, %5061 ]
  %5065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5083, %5061 ]
  %5066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5084, %5061 ]
  %5067 = sub i64 %5049, %5062
  %5068 = getelementptr inbounds i32, ptr %9, i64 %5067
  %5069 = getelementptr inbounds i32, ptr %5068, i64 -7
  %5070 = load <8 x i32>, ptr %5069, align 4, !tbaa !5
  %5071 = shufflevector <8 x i32> %5070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5072 = getelementptr inbounds i32, ptr %5068, i64 -15
  %5073 = load <8 x i32>, ptr %5072, align 4, !tbaa !5
  %5074 = shufflevector <8 x i32> %5073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5075 = getelementptr inbounds i32, ptr %5068, i64 -23
  %5076 = load <8 x i32>, ptr %5075, align 4, !tbaa !5
  %5077 = shufflevector <8 x i32> %5076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5078 = getelementptr inbounds i32, ptr %5068, i64 -31
  %5079 = load <8 x i32>, ptr %5078, align 4, !tbaa !5
  %5080 = shufflevector <8 x i32> %5079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5081 = mul <8 x i32> %5071, %5063
  %5082 = mul <8 x i32> %5074, %5064
  %5083 = mul <8 x i32> %5077, %5065
  %5084 = mul <8 x i32> %5080, %5066
  %5085 = add nuw i64 %5062, 32
  %5086 = icmp eq i64 %5085, %5059
  br i1 %5086, label %5087, label %5061, !llvm.loop !364

5087:                                             ; preds = %5061
  %5088 = mul <8 x i32> %5082, %5081
  %5089 = mul <8 x i32> %5083, %5088
  %5090 = mul <8 x i32> %5084, %5089
  %5091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5090)
  %5092 = icmp eq i64 %5055, %5059
  br i1 %5092, label %5105, label %5093

5093:                                             ; preds = %5046, %5087
  %5094 = phi i64 [ %5049, %5046 ], [ %5060, %5087 ]
  %5095 = phi i32 [ 1, %5046 ], [ %5091, %5087 ]
  br label %5096

5096:                                             ; preds = %5093, %5096
  %5097 = phi i64 [ %5102, %5096 ], [ %5094, %5093 ]
  %5098 = phi i32 [ %5101, %5096 ], [ %5095, %5093 ]
  %5099 = getelementptr inbounds i32, ptr %9, i64 %5097
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = mul nsw i32 %5100, %5098
  %5102 = add nsw i64 %5097, -1
  %5103 = trunc i64 %5097 to i32
  %5104 = icmp sgt i32 %5103, 0
  br i1 %5104, label %5096, label %5105, !llvm.loop !365

5105:                                             ; preds = %5096, %5087
  %5106 = phi i32 [ %5091, %5087 ], [ %5101, %5096 ]
  %5107 = and i64 %5056, 4294967295
  %5108 = getelementptr inbounds i32, ptr %6, i64 %5107
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = mul nsw i32 %5109, %5106
  %5111 = add nsw i32 %5110, %5050
  %5112 = icmp sgt i64 %5048, 2
  %5113 = add nsw i64 %5049, -1
  %5114 = add i32 %5047, 1
  br i1 %5112, label %5046, label %5115, !llvm.loop !366

5115:                                             ; preds = %5105, %5041
  %5116 = phi i32 [ %5045, %5041 ], [ %5111, %5105 ]
  %5117 = sext i32 %5116 to i64
  %5118 = getelementptr inbounds double, ptr %2, i64 %5117
  %5119 = load double, ptr %5118, align 8, !tbaa !18
  %5120 = getelementptr inbounds i32, ptr %5005, i64 %5117
  %5121 = load i32, ptr %5120, align 4, !tbaa !5
  %5122 = sitofp i32 %5121 to double
  %5123 = fmul fast double %5119, %5122
  %5124 = fcmp fast uge double %5123, 0.000000e+00
  %5125 = fneg fast double %5123
  %5126 = tail call fast double @llvm.fabs.f64(double %5123)
  %5127 = fcmp fast oge double %5042, %5126
  %5128 = select nnan ninf i1 %5124, double %5123, double %5125
  %5129 = select i1 %5127, double %5042, double %5128
  store double %5129, ptr %5007, align 8, !tbaa !18
  %5130 = fadd fast double %5119, %5044
  %5131 = add nuw nsw i32 %5043, 1
  br i1 %5035, label %5132, label %5179

5132:                                             ; preds = %5115
  %5133 = load i32, ptr %4, align 4, !tbaa !5
  %5134 = load i32, ptr %12, align 4, !tbaa !5
  %5135 = add nsw i32 %5134, -1
  %5136 = icmp slt i32 %5133, %5135
  br i1 %5136, label %5156, label %5137

5137:                                             ; preds = %5132
  %5138 = icmp eq i32 %5133, %5135
  br i1 %5138, label %5139, label %5172

5139:                                             ; preds = %5137
  store i32 0, ptr %4, align 4, !tbaa !5
  %5140 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5140, ptr %6, align 4, !tbaa !5
  br i1 %5040, label %5179, label %5141

5141:                                             ; preds = %5139, %5166
  %5142 = phi i64 [ %5170, %5166 ], [ 1, %5139 ]
  %5143 = getelementptr inbounds i32, ptr %4, i64 %5142
  %5144 = load i32, ptr %5143, align 4, !tbaa !5
  %5145 = getelementptr inbounds i32, ptr %12, i64 %5142
  %5146 = load i32, ptr %5145, align 4, !tbaa !5
  %5147 = add nsw i32 %5146, -1
  %5148 = icmp slt i32 %5144, %5147
  br i1 %5148, label %5149, label %5164

5149:                                             ; preds = %5141
  br i1 %5136, label %5156, label %5150

5150:                                             ; preds = %5149
  %5151 = getelementptr inbounds i32, ptr %7, i64 %5142
  %5152 = load i32, ptr %5151, align 4, !tbaa !5
  %5153 = getelementptr inbounds i32, ptr %6, i64 %5142
  %5154 = load i32, ptr %5153, align 4, !tbaa !5
  %5155 = add nsw i32 %5154, %5152
  store i32 %5155, ptr %5153, align 4, !tbaa !5
  br label %5174

5156:                                             ; preds = %5132, %5149
  %5157 = phi i32 [ %5144, %5149 ], [ %5133, %5132 ]
  %5158 = phi ptr [ %5143, %5149 ], [ %4, %5132 ]
  %5159 = phi i64 [ %5142, %5149 ], [ 0, %5132 ]
  %5160 = add nsw i32 %5157, 1
  store i32 %5160, ptr %5158, align 4, !tbaa !5
  %5161 = getelementptr inbounds i32, ptr %7, i64 %5159
  %5162 = load i32, ptr %5161, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5159
  br label %5174

5164:                                             ; preds = %5141
  %5165 = icmp eq i32 %5144, %5147
  br i1 %5165, label %5166, label %5172

5166:                                             ; preds = %5164
  store i32 0, ptr %5143, align 4, !tbaa !5
  %5167 = getelementptr inbounds i32, ptr %8, i64 %5142
  %5168 = load i32, ptr %5167, align 4, !tbaa !5
  %5169 = getelementptr inbounds i32, ptr %6, i64 %5142
  store i32 %5168, ptr %5169, align 4, !tbaa !5
  %5170 = add nuw nsw i64 %5142, 1
  %5171 = icmp eq i64 %5170, %5038
  br i1 %5171, label %5179, label %5141, !llvm.loop !367

5172:                                             ; preds = %5137, %5164
  %5173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5174:                                             ; preds = %5150, %5156
  %5175 = phi ptr [ %5163, %5156 ], [ %5143, %5150 ]
  %5176 = phi i32 [ %5162, %5156 ], [ 1, %5150 ]
  %5177 = load i32, ptr %5175, align 4, !tbaa !5
  %5178 = add nsw i32 %5177, %5176
  store i32 %5178, ptr %5175, align 4, !tbaa !5
  br label %5179

5179:                                             ; preds = %5166, %5174, %5139, %5115
  %5180 = icmp eq i32 %5131, %5
  br i1 %5180, label %5630, label %5041, !llvm.loop !368

5181:                                             ; preds = %5024, %5319
  %5182 = phi double [ 0.000000e+00, %5024 ], [ %5267, %5319 ]
  %5183 = phi i32 [ 0, %5024 ], [ %5268, %5319 ]
  %5184 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5025, label %5185, label %5254

5185:                                             ; preds = %5181, %5244
  %5186 = phi i32 [ %5253, %5244 ], [ 0, %5181 ]
  %5187 = phi i64 [ %5195, %5244 ], [ %5029, %5181 ]
  %5188 = phi i64 [ %5252, %5244 ], [ %5028, %5181 ]
  %5189 = phi i32 [ %5250, %5244 ], [ %5184, %5181 ]
  %5190 = sub i32 %5027, %5186
  %5191 = tail call i32 @llvm.smin.i32(i32 %5190, i32 0)
  %5192 = sub i32 %5190, %5191
  %5193 = zext i32 %5192 to i64
  %5194 = add nuw nsw i64 %5193, 1
  %5195 = add nsw i64 %5187, -1
  %5196 = icmp ult i32 %5192, 31
  br i1 %5196, label %5232, label %5197

5197:                                             ; preds = %5185
  %5198 = and i64 %5194, 8589934560
  %5199 = sub i64 %5188, %5198
  br label %5200

5200:                                             ; preds = %5200, %5197
  %5201 = phi i64 [ 0, %5197 ], [ %5224, %5200 ]
  %5202 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5220, %5200 ]
  %5203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5221, %5200 ]
  %5204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5222, %5200 ]
  %5205 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5223, %5200 ]
  %5206 = sub i64 %5188, %5201
  %5207 = getelementptr inbounds i32, ptr %11, i64 %5206
  %5208 = getelementptr inbounds i32, ptr %5207, i64 -7
  %5209 = load <8 x i32>, ptr %5208, align 4, !tbaa !5
  %5210 = shufflevector <8 x i32> %5209, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5211 = getelementptr inbounds i32, ptr %5207, i64 -15
  %5212 = load <8 x i32>, ptr %5211, align 4, !tbaa !5
  %5213 = shufflevector <8 x i32> %5212, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5214 = getelementptr inbounds i32, ptr %5207, i64 -23
  %5215 = load <8 x i32>, ptr %5214, align 4, !tbaa !5
  %5216 = shufflevector <8 x i32> %5215, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5217 = getelementptr inbounds i32, ptr %5207, i64 -31
  %5218 = load <8 x i32>, ptr %5217, align 4, !tbaa !5
  %5219 = shufflevector <8 x i32> %5218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5220 = mul <8 x i32> %5210, %5202
  %5221 = mul <8 x i32> %5213, %5203
  %5222 = mul <8 x i32> %5216, %5204
  %5223 = mul <8 x i32> %5219, %5205
  %5224 = add nuw i64 %5201, 32
  %5225 = icmp eq i64 %5224, %5198
  br i1 %5225, label %5226, label %5200, !llvm.loop !369

5226:                                             ; preds = %5200
  %5227 = mul <8 x i32> %5221, %5220
  %5228 = mul <8 x i32> %5222, %5227
  %5229 = mul <8 x i32> %5223, %5228
  %5230 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5229)
  %5231 = icmp eq i64 %5194, %5198
  br i1 %5231, label %5244, label %5232

5232:                                             ; preds = %5185, %5226
  %5233 = phi i64 [ %5188, %5185 ], [ %5199, %5226 ]
  %5234 = phi i32 [ 1, %5185 ], [ %5230, %5226 ]
  br label %5235

5235:                                             ; preds = %5232, %5235
  %5236 = phi i64 [ %5241, %5235 ], [ %5233, %5232 ]
  %5237 = phi i32 [ %5240, %5235 ], [ %5234, %5232 ]
  %5238 = getelementptr inbounds i32, ptr %11, i64 %5236
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = mul nsw i32 %5239, %5237
  %5241 = add nsw i64 %5236, -1
  %5242 = trunc i64 %5236 to i32
  %5243 = icmp sgt i32 %5242, 0
  br i1 %5243, label %5235, label %5244, !llvm.loop !370

5244:                                             ; preds = %5235, %5226
  %5245 = phi i32 [ %5230, %5226 ], [ %5240, %5235 ]
  %5246 = and i64 %5195, 4294967295
  %5247 = getelementptr inbounds i32, ptr %6, i64 %5246
  %5248 = load i32, ptr %5247, align 4, !tbaa !5
  %5249 = mul nsw i32 %5248, %5245
  %5250 = add nsw i32 %5249, %5189
  %5251 = icmp sgt i64 %5187, 2
  %5252 = add nsw i64 %5188, -1
  %5253 = add i32 %5186, 1
  br i1 %5251, label %5185, label %5254, !llvm.loop !371

5254:                                             ; preds = %5244, %5181
  %5255 = phi i32 [ %5184, %5181 ], [ %5250, %5244 ]
  %5256 = icmp slt i32 %5255, %5
  br i1 %5256, label %5259, label %5257

5257:                                             ; preds = %5254
  %5258 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

5259:                                             ; preds = %5254
  %5260 = sext i32 %5255 to i64
  %5261 = getelementptr inbounds i32, ptr %5005, i64 %5260
  %5262 = load i32, ptr %5261, align 4, !tbaa !5
  %5263 = sitofp i32 %5262 to double
  %5264 = icmp slt i32 %5262, 0
  %5265 = fneg fast double %5263
  %5266 = select i1 %5264, double %5265, double %5263
  %5267 = tail call fast double @llvm.maxnum.f64(double %5182, double %5266)
  store double %5267, ptr %5007, align 8, !tbaa !18
  %5268 = add nuw nsw i32 %5183, 1
  br i1 %5026, label %5269, label %5319

5269:                                             ; preds = %5259
  %5270 = load i32, ptr %4, align 4, !tbaa !5
  %5271 = load i32, ptr %12, align 4, !tbaa !5
  %5272 = add nsw i32 %5271, -1
  %5273 = icmp slt i32 %5270, %5272
  br i1 %5273, label %5296, label %5274

5274:                                             ; preds = %5269
  %5275 = icmp eq i32 %5270, %5272
  br i1 %5275, label %5276, label %5312

5276:                                             ; preds = %5274
  store i32 0, ptr %4, align 4, !tbaa !5
  %5277 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5277, ptr %6, align 4, !tbaa !5
  br i1 %5031, label %5319, label %5278

5278:                                             ; preds = %5276, %5306
  %5279 = phi i64 [ %5310, %5306 ], [ 1, %5276 ]
  %5280 = getelementptr inbounds i32, ptr %4, i64 %5279
  %5281 = load i32, ptr %5280, align 4, !tbaa !5
  %5282 = getelementptr inbounds i32, ptr %12, i64 %5279
  %5283 = load i32, ptr %5282, align 4, !tbaa !5
  %5284 = add nsw i32 %5283, -1
  %5285 = icmp slt i32 %5281, %5284
  br i1 %5285, label %5286, label %5304

5286:                                             ; preds = %5278
  br i1 %5273, label %5296, label %5287

5287:                                             ; preds = %5286
  %5288 = shl i64 %5279, 32
  %5289 = add i64 %5288, -4294967296
  %5290 = ashr exact i64 %5289, 32
  %5291 = getelementptr inbounds i32, ptr %7, i64 %5290
  %5292 = load i32, ptr %5291, align 4, !tbaa !5
  %5293 = getelementptr inbounds i32, ptr %6, i64 %5279
  %5294 = load i32, ptr %5293, align 4, !tbaa !5
  %5295 = add nsw i32 %5294, %5292
  store i32 %5295, ptr %5293, align 4, !tbaa !5
  br label %5314

5296:                                             ; preds = %5269, %5286
  %5297 = phi i32 [ %5281, %5286 ], [ %5270, %5269 ]
  %5298 = phi ptr [ %5280, %5286 ], [ %4, %5269 ]
  %5299 = phi i64 [ %5279, %5286 ], [ 0, %5269 ]
  %5300 = add nsw i32 %5297, 1
  store i32 %5300, ptr %5298, align 4, !tbaa !5
  %5301 = getelementptr inbounds i32, ptr %7, i64 %5299
  %5302 = load i32, ptr %5301, align 4, !tbaa !5
  %5303 = getelementptr inbounds i32, ptr %6, i64 %5299
  br label %5314

5304:                                             ; preds = %5278
  %5305 = icmp eq i32 %5281, %5284
  br i1 %5305, label %5306, label %5312

5306:                                             ; preds = %5304
  store i32 0, ptr %5280, align 4, !tbaa !5
  %5307 = getelementptr inbounds i32, ptr %8, i64 %5279
  %5308 = load i32, ptr %5307, align 4, !tbaa !5
  %5309 = getelementptr inbounds i32, ptr %6, i64 %5279
  store i32 %5308, ptr %5309, align 4, !tbaa !5
  %5310 = add nuw nsw i64 %5279, 1
  %5311 = icmp eq i64 %5310, %5029
  br i1 %5311, label %5319, label %5278, !llvm.loop !372

5312:                                             ; preds = %5274, %5304
  %5313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5314:                                             ; preds = %5287, %5296
  %5315 = phi ptr [ %5303, %5296 ], [ %5280, %5287 ]
  %5316 = phi i32 [ %5302, %5296 ], [ 1, %5287 ]
  %5317 = load i32, ptr %5315, align 4, !tbaa !5
  %5318 = add nsw i32 %5317, %5316
  store i32 %5318, ptr %5315, align 4, !tbaa !5
  br label %5319

5319:                                             ; preds = %5306, %5314, %5276, %5259
  %5320 = icmp eq i32 %5268, %5
  br i1 %5320, label %5630, label %5181, !llvm.loop !373

5321:                                             ; preds = %5017
  %5322 = getelementptr inbounds i32, ptr %3, i64 %19
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = icmp eq i32 %5323, 0
  %5325 = icmp sgt i32 %5, 0
  br i1 %5324, label %5335, label %5326

5326:                                             ; preds = %5321
  br i1 %5325, label %5327, label %5630

5327:                                             ; preds = %5326
  %5328 = icmp sgt i32 %13, 1
  %5329 = icmp sgt i32 %13, 0
  %5330 = add i32 %13, -2
  %5331 = zext i32 %5330 to i64
  %5332 = zext i32 %13 to i64
  %5333 = add nuw i32 %5, 1
  %5334 = icmp eq i32 %13, 1
  br label %5479

5335:                                             ; preds = %5321
  br i1 %5325, label %5336, label %5630

5336:                                             ; preds = %5335
  %5337 = icmp sgt i32 %13, 1
  %5338 = icmp sgt i32 %13, 0
  %5339 = add i32 %13, -2
  %5340 = zext i32 %5339 to i64
  %5341 = zext i32 %13 to i64
  %5342 = add nuw i32 %5, 1
  %5343 = icmp eq i32 %13, 1
  br label %5344

5344:                                             ; preds = %5336, %5477
  %5345 = phi double [ 0.000000e+00, %5336 ], [ %5427, %5477 ]
  %5346 = phi i32 [ 0, %5336 ], [ %5429, %5477 ]
  %5347 = phi double [ 0.000000e+00, %5336 ], [ %5428, %5477 ]
  %5348 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5337, label %5349, label %5418

5349:                                             ; preds = %5344, %5408
  %5350 = phi i32 [ %5417, %5408 ], [ 0, %5344 ]
  %5351 = phi i64 [ %5359, %5408 ], [ %5341, %5344 ]
  %5352 = phi i64 [ %5416, %5408 ], [ %5340, %5344 ]
  %5353 = phi i32 [ %5414, %5408 ], [ %5348, %5344 ]
  %5354 = sub i32 %5339, %5350
  %5355 = tail call i32 @llvm.smin.i32(i32 %5354, i32 0)
  %5356 = sub i32 %5354, %5355
  %5357 = zext i32 %5356 to i64
  %5358 = add nuw nsw i64 %5357, 1
  %5359 = add nsw i64 %5351, -1
  %5360 = icmp ult i32 %5356, 31
  br i1 %5360, label %5396, label %5361

5361:                                             ; preds = %5349
  %5362 = and i64 %5358, 8589934560
  %5363 = sub i64 %5352, %5362
  br label %5364

5364:                                             ; preds = %5364, %5361
  %5365 = phi i64 [ 0, %5361 ], [ %5388, %5364 ]
  %5366 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5384, %5364 ]
  %5367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5385, %5364 ]
  %5368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5386, %5364 ]
  %5369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5387, %5364 ]
  %5370 = sub i64 %5352, %5365
  %5371 = getelementptr inbounds i32, ptr %9, i64 %5370
  %5372 = getelementptr inbounds i32, ptr %5371, i64 -7
  %5373 = load <8 x i32>, ptr %5372, align 4, !tbaa !5
  %5374 = shufflevector <8 x i32> %5373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5375 = getelementptr inbounds i32, ptr %5371, i64 -15
  %5376 = load <8 x i32>, ptr %5375, align 4, !tbaa !5
  %5377 = shufflevector <8 x i32> %5376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5378 = getelementptr inbounds i32, ptr %5371, i64 -23
  %5379 = load <8 x i32>, ptr %5378, align 4, !tbaa !5
  %5380 = shufflevector <8 x i32> %5379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5381 = getelementptr inbounds i32, ptr %5371, i64 -31
  %5382 = load <8 x i32>, ptr %5381, align 4, !tbaa !5
  %5383 = shufflevector <8 x i32> %5382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5384 = mul <8 x i32> %5374, %5366
  %5385 = mul <8 x i32> %5377, %5367
  %5386 = mul <8 x i32> %5380, %5368
  %5387 = mul <8 x i32> %5383, %5369
  %5388 = add nuw i64 %5365, 32
  %5389 = icmp eq i64 %5388, %5362
  br i1 %5389, label %5390, label %5364, !llvm.loop !374

5390:                                             ; preds = %5364
  %5391 = mul <8 x i32> %5385, %5384
  %5392 = mul <8 x i32> %5386, %5391
  %5393 = mul <8 x i32> %5387, %5392
  %5394 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5393)
  %5395 = icmp eq i64 %5358, %5362
  br i1 %5395, label %5408, label %5396

5396:                                             ; preds = %5349, %5390
  %5397 = phi i64 [ %5352, %5349 ], [ %5363, %5390 ]
  %5398 = phi i32 [ 1, %5349 ], [ %5394, %5390 ]
  br label %5399

5399:                                             ; preds = %5396, %5399
  %5400 = phi i64 [ %5405, %5399 ], [ %5397, %5396 ]
  %5401 = phi i32 [ %5404, %5399 ], [ %5398, %5396 ]
  %5402 = getelementptr inbounds i32, ptr %9, i64 %5400
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = mul nsw i32 %5403, %5401
  %5405 = add nsw i64 %5400, -1
  %5406 = trunc i64 %5400 to i32
  %5407 = icmp sgt i32 %5406, 0
  br i1 %5407, label %5399, label %5408, !llvm.loop !375

5408:                                             ; preds = %5399, %5390
  %5409 = phi i32 [ %5394, %5390 ], [ %5404, %5399 ]
  %5410 = and i64 %5359, 4294967295
  %5411 = getelementptr inbounds i32, ptr %6, i64 %5410
  %5412 = load i32, ptr %5411, align 4, !tbaa !5
  %5413 = mul nsw i32 %5412, %5409
  %5414 = add nsw i32 %5413, %5353
  %5415 = icmp sgt i64 %5351, 2
  %5416 = add nsw i64 %5352, -1
  %5417 = add i32 %5350, 1
  br i1 %5415, label %5349, label %5418, !llvm.loop !376

5418:                                             ; preds = %5408, %5344
  %5419 = phi i32 [ %5348, %5344 ], [ %5414, %5408 ]
  %5420 = sext i32 %5419 to i64
  %5421 = getelementptr inbounds i32, ptr %5005, i64 %5420
  %5422 = load i32, ptr %5421, align 4, !tbaa !5
  %5423 = sitofp i32 %5422 to double
  %5424 = icmp slt i32 %5422, 0
  %5425 = fneg fast double %5423
  %5426 = select fast i1 %5424, double %5425, double %5423
  %5427 = tail call fast double @llvm.maxnum.f64(double %5345, double %5426)
  %5428 = fadd fast double %5347, 1.000000e+00
  %5429 = add nuw nsw i32 %5346, 1
  br i1 %5338, label %5430, label %5477

5430:                                             ; preds = %5418
  %5431 = load i32, ptr %4, align 4, !tbaa !5
  %5432 = load i32, ptr %12, align 4, !tbaa !5
  %5433 = add nsw i32 %5432, -1
  %5434 = icmp slt i32 %5431, %5433
  br i1 %5434, label %5454, label %5435

5435:                                             ; preds = %5430
  %5436 = icmp eq i32 %5431, %5433
  br i1 %5436, label %5437, label %5470

5437:                                             ; preds = %5435
  store i32 0, ptr %4, align 4, !tbaa !5
  %5438 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5438, ptr %6, align 4, !tbaa !5
  br i1 %5343, label %5477, label %5439

5439:                                             ; preds = %5437, %5464
  %5440 = phi i64 [ %5468, %5464 ], [ 1, %5437 ]
  %5441 = getelementptr inbounds i32, ptr %4, i64 %5440
  %5442 = load i32, ptr %5441, align 4, !tbaa !5
  %5443 = getelementptr inbounds i32, ptr %12, i64 %5440
  %5444 = load i32, ptr %5443, align 4, !tbaa !5
  %5445 = add nsw i32 %5444, -1
  %5446 = icmp slt i32 %5442, %5445
  br i1 %5446, label %5447, label %5462

5447:                                             ; preds = %5439
  br i1 %5434, label %5454, label %5448

5448:                                             ; preds = %5447
  %5449 = getelementptr inbounds i32, ptr %7, i64 %5440
  %5450 = load i32, ptr %5449, align 4, !tbaa !5
  %5451 = getelementptr inbounds i32, ptr %6, i64 %5440
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = add nsw i32 %5452, %5450
  store i32 %5453, ptr %5451, align 4, !tbaa !5
  br label %5472

5454:                                             ; preds = %5430, %5447
  %5455 = phi i32 [ %5442, %5447 ], [ %5431, %5430 ]
  %5456 = phi ptr [ %5441, %5447 ], [ %4, %5430 ]
  %5457 = phi i64 [ %5440, %5447 ], [ 0, %5430 ]
  %5458 = add nsw i32 %5455, 1
  store i32 %5458, ptr %5456, align 4, !tbaa !5
  %5459 = getelementptr inbounds i32, ptr %7, i64 %5457
  %5460 = load i32, ptr %5459, align 4, !tbaa !5
  %5461 = getelementptr inbounds i32, ptr %6, i64 %5457
  br label %5472

5462:                                             ; preds = %5439
  %5463 = icmp eq i32 %5442, %5445
  br i1 %5463, label %5464, label %5470

5464:                                             ; preds = %5462
  store i32 0, ptr %5441, align 4, !tbaa !5
  %5465 = getelementptr inbounds i32, ptr %8, i64 %5440
  %5466 = load i32, ptr %5465, align 4, !tbaa !5
  %5467 = getelementptr inbounds i32, ptr %6, i64 %5440
  store i32 %5466, ptr %5467, align 4, !tbaa !5
  %5468 = add nuw nsw i64 %5440, 1
  %5469 = icmp eq i64 %5468, %5341
  br i1 %5469, label %5477, label %5439, !llvm.loop !377

5470:                                             ; preds = %5435, %5462
  store double %5427, ptr %5007, align 8, !tbaa !18
  %5471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5472:                                             ; preds = %5448, %5454
  %5473 = phi ptr [ %5461, %5454 ], [ %5441, %5448 ]
  %5474 = phi i32 [ %5460, %5454 ], [ 1, %5448 ]
  %5475 = load i32, ptr %5473, align 4, !tbaa !5
  %5476 = add nsw i32 %5475, %5474
  store i32 %5476, ptr %5473, align 4, !tbaa !5
  br label %5477

5477:                                             ; preds = %5464, %5472, %5437, %5418
  %5478 = icmp eq i32 %5429, %5
  br i1 %5478, label %5629, label %5344, !llvm.loop !378

5479:                                             ; preds = %5327, %5617
  %5480 = phi double [ 0.000000e+00, %5327 ], [ %5565, %5617 ]
  %5481 = phi i32 [ 0, %5327 ], [ %5566, %5617 ]
  %5482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5328, label %5483, label %5552

5483:                                             ; preds = %5479, %5542
  %5484 = phi i32 [ %5551, %5542 ], [ 0, %5479 ]
  %5485 = phi i64 [ %5493, %5542 ], [ %5332, %5479 ]
  %5486 = phi i64 [ %5550, %5542 ], [ %5331, %5479 ]
  %5487 = phi i32 [ %5548, %5542 ], [ %5482, %5479 ]
  %5488 = sub i32 %5330, %5484
  %5489 = tail call i32 @llvm.smin.i32(i32 %5488, i32 0)
  %5490 = sub i32 %5488, %5489
  %5491 = zext i32 %5490 to i64
  %5492 = add nuw nsw i64 %5491, 1
  %5493 = add nsw i64 %5485, -1
  %5494 = icmp ult i32 %5490, 31
  br i1 %5494, label %5530, label %5495

5495:                                             ; preds = %5483
  %5496 = and i64 %5492, 8589934560
  %5497 = sub i64 %5486, %5496
  br label %5498

5498:                                             ; preds = %5498, %5495
  %5499 = phi i64 [ 0, %5495 ], [ %5522, %5498 ]
  %5500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5518, %5498 ]
  %5501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5519, %5498 ]
  %5502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5520, %5498 ]
  %5503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5521, %5498 ]
  %5504 = sub i64 %5486, %5499
  %5505 = getelementptr inbounds i32, ptr %11, i64 %5504
  %5506 = getelementptr inbounds i32, ptr %5505, i64 -7
  %5507 = load <8 x i32>, ptr %5506, align 4, !tbaa !5
  %5508 = shufflevector <8 x i32> %5507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5509 = getelementptr inbounds i32, ptr %5505, i64 -15
  %5510 = load <8 x i32>, ptr %5509, align 4, !tbaa !5
  %5511 = shufflevector <8 x i32> %5510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5512 = getelementptr inbounds i32, ptr %5505, i64 -23
  %5513 = load <8 x i32>, ptr %5512, align 4, !tbaa !5
  %5514 = shufflevector <8 x i32> %5513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5515 = getelementptr inbounds i32, ptr %5505, i64 -31
  %5516 = load <8 x i32>, ptr %5515, align 4, !tbaa !5
  %5517 = shufflevector <8 x i32> %5516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5518 = mul <8 x i32> %5508, %5500
  %5519 = mul <8 x i32> %5511, %5501
  %5520 = mul <8 x i32> %5514, %5502
  %5521 = mul <8 x i32> %5517, %5503
  %5522 = add nuw i64 %5499, 32
  %5523 = icmp eq i64 %5522, %5496
  br i1 %5523, label %5524, label %5498, !llvm.loop !379

5524:                                             ; preds = %5498
  %5525 = mul <8 x i32> %5519, %5518
  %5526 = mul <8 x i32> %5520, %5525
  %5527 = mul <8 x i32> %5521, %5526
  %5528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5527)
  %5529 = icmp eq i64 %5492, %5496
  br i1 %5529, label %5542, label %5530

5530:                                             ; preds = %5483, %5524
  %5531 = phi i64 [ %5486, %5483 ], [ %5497, %5524 ]
  %5532 = phi i32 [ 1, %5483 ], [ %5528, %5524 ]
  br label %5533

5533:                                             ; preds = %5530, %5533
  %5534 = phi i64 [ %5539, %5533 ], [ %5531, %5530 ]
  %5535 = phi i32 [ %5538, %5533 ], [ %5532, %5530 ]
  %5536 = getelementptr inbounds i32, ptr %11, i64 %5534
  %5537 = load i32, ptr %5536, align 4, !tbaa !5
  %5538 = mul nsw i32 %5537, %5535
  %5539 = add nsw i64 %5534, -1
  %5540 = trunc i64 %5534 to i32
  %5541 = icmp sgt i32 %5540, 0
  br i1 %5541, label %5533, label %5542, !llvm.loop !380

5542:                                             ; preds = %5533, %5524
  %5543 = phi i32 [ %5528, %5524 ], [ %5538, %5533 ]
  %5544 = and i64 %5493, 4294967295
  %5545 = getelementptr inbounds i32, ptr %6, i64 %5544
  %5546 = load i32, ptr %5545, align 4, !tbaa !5
  %5547 = mul nsw i32 %5546, %5543
  %5548 = add nsw i32 %5547, %5487
  %5549 = icmp sgt i64 %5485, 2
  %5550 = add nsw i64 %5486, -1
  %5551 = add i32 %5484, 1
  br i1 %5549, label %5483, label %5552, !llvm.loop !381

5552:                                             ; preds = %5542, %5479
  %5553 = phi i32 [ %5482, %5479 ], [ %5548, %5542 ]
  %5554 = icmp slt i32 %5553, %5
  br i1 %5554, label %5557, label %5555

5555:                                             ; preds = %5552
  %5556 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

5557:                                             ; preds = %5552
  %5558 = sext i32 %5553 to i64
  %5559 = getelementptr inbounds i32, ptr %5005, i64 %5558
  %5560 = load i32, ptr %5559, align 4, !tbaa !5
  %5561 = sitofp i32 %5560 to double
  %5562 = icmp slt i32 %5560, 0
  %5563 = fneg fast double %5561
  %5564 = select fast i1 %5562, double %5563, double %5561
  %5565 = tail call fast double @llvm.maxnum.f64(double %5480, double %5564)
  store double %5565, ptr %5007, align 8, !tbaa !18
  %5566 = add nuw nsw i32 %5481, 1
  br i1 %5329, label %5567, label %5617

5567:                                             ; preds = %5557
  %5568 = load i32, ptr %4, align 4, !tbaa !5
  %5569 = load i32, ptr %12, align 4, !tbaa !5
  %5570 = add nsw i32 %5569, -1
  %5571 = icmp slt i32 %5568, %5570
  br i1 %5571, label %5594, label %5572

5572:                                             ; preds = %5567
  %5573 = icmp eq i32 %5568, %5570
  br i1 %5573, label %5574, label %5610

5574:                                             ; preds = %5572
  store i32 0, ptr %4, align 4, !tbaa !5
  %5575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5575, ptr %6, align 4, !tbaa !5
  br i1 %5334, label %5617, label %5576

5576:                                             ; preds = %5574, %5604
  %5577 = phi i64 [ %5608, %5604 ], [ 1, %5574 ]
  %5578 = getelementptr inbounds i32, ptr %4, i64 %5577
  %5579 = load i32, ptr %5578, align 4, !tbaa !5
  %5580 = getelementptr inbounds i32, ptr %12, i64 %5577
  %5581 = load i32, ptr %5580, align 4, !tbaa !5
  %5582 = add nsw i32 %5581, -1
  %5583 = icmp slt i32 %5579, %5582
  br i1 %5583, label %5584, label %5602

5584:                                             ; preds = %5576
  br i1 %5571, label %5594, label %5585

5585:                                             ; preds = %5584
  %5586 = shl i64 %5577, 32
  %5587 = add i64 %5586, -4294967296
  %5588 = ashr exact i64 %5587, 32
  %5589 = getelementptr inbounds i32, ptr %7, i64 %5588
  %5590 = load i32, ptr %5589, align 4, !tbaa !5
  %5591 = getelementptr inbounds i32, ptr %6, i64 %5577
  %5592 = load i32, ptr %5591, align 4, !tbaa !5
  %5593 = add nsw i32 %5592, %5590
  store i32 %5593, ptr %5591, align 4, !tbaa !5
  br label %5612

5594:                                             ; preds = %5567, %5584
  %5595 = phi i32 [ %5579, %5584 ], [ %5568, %5567 ]
  %5596 = phi ptr [ %5578, %5584 ], [ %4, %5567 ]
  %5597 = phi i64 [ %5577, %5584 ], [ 0, %5567 ]
  %5598 = add nsw i32 %5595, 1
  store i32 %5598, ptr %5596, align 4, !tbaa !5
  %5599 = getelementptr inbounds i32, ptr %7, i64 %5597
  %5600 = load i32, ptr %5599, align 4, !tbaa !5
  %5601 = getelementptr inbounds i32, ptr %6, i64 %5597
  br label %5612

5602:                                             ; preds = %5576
  %5603 = icmp eq i32 %5579, %5582
  br i1 %5603, label %5604, label %5610

5604:                                             ; preds = %5602
  store i32 0, ptr %5578, align 4, !tbaa !5
  %5605 = getelementptr inbounds i32, ptr %8, i64 %5577
  %5606 = load i32, ptr %5605, align 4, !tbaa !5
  %5607 = getelementptr inbounds i32, ptr %6, i64 %5577
  store i32 %5606, ptr %5607, align 4, !tbaa !5
  %5608 = add nuw nsw i64 %5577, 1
  %5609 = icmp eq i64 %5608, %5332
  br i1 %5609, label %5617, label %5576, !llvm.loop !382

5610:                                             ; preds = %5572, %5602
  %5611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5612:                                             ; preds = %5585, %5594
  %5613 = phi ptr [ %5601, %5594 ], [ %5578, %5585 ]
  %5614 = phi i32 [ %5600, %5594 ], [ 1, %5585 ]
  %5615 = load i32, ptr %5613, align 4, !tbaa !5
  %5616 = add nsw i32 %5615, %5614
  store i32 %5616, ptr %5613, align 4, !tbaa !5
  br label %5617

5617:                                             ; preds = %5604, %5612, %5574, %5557
  %5618 = icmp eq i32 %5566, %5
  br i1 %5618, label %5630, label %5479, !llvm.loop !383

5619:                                             ; preds = %5017
  %5620 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 408, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

5621:                                             ; preds = %2074
  store i16 %2024, ptr %1895, align 2, !tbaa !78
  br label %5630

5622:                                             ; preds = %2382
  %5623 = trunc i32 %2331 to i16
  store i16 %5623, ptr %1895, align 2, !tbaa !78
  br label %5630

5624:                                             ; preds = %3319
  store i64 %3269, ptr %3149, align 8, !tbaa !120
  br label %5630

5625:                                             ; preds = %3618
  store i64 %3568, ptr %3149, align 8, !tbaa !120
  br label %5630

5626:                                             ; preds = %4234
  store double %4184, ptr %3764, align 8, !tbaa !18
  br label %5630

5627:                                             ; preds = %4557
  store float %4507, ptr %4382, align 4, !tbaa !162
  br label %5630

5628:                                             ; preds = %4859
  store float %4809, ptr %4382, align 4, !tbaa !162
  br label %5630

5629:                                             ; preds = %5477
  store double %5427, ptr %5007, align 8, !tbaa !18
  br label %5630

5630:                                             ; preds = %5617, %5319, %5179, %4999, %4701, %4374, %4076, %3936, %3756, %3462, %3141, %3004, %2849, %2706, %2527, %2219, %1887, %1743, %1581, %1436, %1249, %1112, %957, %814, %635, %496, %339, %199, %5326, %5335, %5629, %5023, %5032, %4708, %4717, %5628, %4398, %4407, %5627, %4083, %4092, %5626, %3780, %3789, %3469, %3478, %5625, %3161, %3170, %5624, %2856, %2865, %2548, %2557, %2226, %2235, %5622, %1914, %1923, %5621, %1588, %1597, %1276, %1285, %964, %973, %656, %665, %346, %355, %40, %49, %5009, %5619, %4384, %5001, %3766, %4376, %3151, %3758, %2537, %3143, %1897, %2529, %1259, %1889, %645, %1251, %28, %637, %18
  %5631 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %637 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1251 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %1889 ], [ 0.000000e+00, %1259 ], [ 0.000000e+00, %2529 ], [ 0.000000e+00, %1897 ], [ 0.000000e+00, %3143 ], [ 0.000000e+00, %2537 ], [ 0.000000e+00, %3758 ], [ 0.000000e+00, %3151 ], [ 0.000000e+00, %4376 ], [ 0.000000e+00, %3766 ], [ 0.000000e+00, %5001 ], [ 0.000000e+00, %4384 ], [ 0.000000e+00, %5619 ], [ 0.000000e+00, %5009 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %40 ], [ 0.000000e+00, %355 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %665 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %973 ], [ 0.000000e+00, %964 ], [ 0.000000e+00, %1285 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1597 ], [ 0.000000e+00, %1588 ], [ %2025, %5621 ], [ 0.000000e+00, %1923 ], [ 0.000000e+00, %1914 ], [ %2332, %5622 ], [ 0.000000e+00, %2235 ], [ 0.000000e+00, %2226 ], [ 0.000000e+00, %2557 ], [ 0.000000e+00, %2548 ], [ 0.000000e+00, %2865 ], [ 0.000000e+00, %2856 ], [ %3270, %5624 ], [ 0.000000e+00, %3170 ], [ 0.000000e+00, %3161 ], [ %3569, %5625 ], [ 0.000000e+00, %3478 ], [ 0.000000e+00, %3469 ], [ 0.000000e+00, %3789 ], [ 0.000000e+00, %3780 ], [ %4185, %5626 ], [ 0.000000e+00, %4092 ], [ 0.000000e+00, %4083 ], [ %4508, %5627 ], [ 0.000000e+00, %4407 ], [ 0.000000e+00, %4398 ], [ %4810, %5628 ], [ 0.000000e+00, %4717 ], [ 0.000000e+00, %4708 ], [ 0.000000e+00, %5032 ], [ 0.000000e+00, %5023 ], [ %5428, %5629 ], [ 0.000000e+00, %5335 ], [ 0.000000e+00, %5326 ], [ %150, %199 ], [ 0.000000e+00, %339 ], [ %447, %496 ], [ 0.000000e+00, %635 ], [ %765, %814 ], [ 0.000000e+00, %957 ], [ %1063, %1112 ], [ 0.000000e+00, %1249 ], [ %1387, %1436 ], [ 0.000000e+00, %1581 ], [ %1694, %1743 ], [ 0.000000e+00, %1887 ], [ 0.000000e+00, %2219 ], [ 0.000000e+00, %2527 ], [ %2657, %2706 ], [ 0.000000e+00, %2849 ], [ %2955, %3004 ], [ 0.000000e+00, %3141 ], [ 0.000000e+00, %3462 ], [ 0.000000e+00, %3756 ], [ %3887, %3936 ], [ 0.000000e+00, %4076 ], [ 0.000000e+00, %4374 ], [ 0.000000e+00, %4701 ], [ 0.000000e+00, %4999 ], [ %5130, %5179 ], [ 0.000000e+00, %5319 ], [ 0.000000e+00, %5617 ]
  %5632 = phi i32 [ %10, %18 ], [ 1, %637 ], [ 1, %28 ], [ 1, %1251 ], [ 1, %645 ], [ 1, %1889 ], [ 1, %1259 ], [ 1, %2529 ], [ 1, %1897 ], [ 1, %3143 ], [ 1, %2537 ], [ 1, %3758 ], [ 1, %3151 ], [ 1, %4376 ], [ 1, %3766 ], [ 1, %5001 ], [ 1, %4384 ], [ 1, %5619 ], [ 1, %5009 ], [ 1, %49 ], [ 1, %40 ], [ 1, %355 ], [ 1, %346 ], [ 1, %665 ], [ 1, %656 ], [ 1, %973 ], [ 1, %964 ], [ 1, %1285 ], [ 1, %1276 ], [ 1, %1597 ], [ 1, %1588 ], [ %1930, %5621 ], [ 1, %1923 ], [ 1, %1914 ], [ %2242, %5622 ], [ 1, %2235 ], [ 1, %2226 ], [ 1, %2557 ], [ 1, %2548 ], [ 1, %2865 ], [ 1, %2856 ], [ %3177, %5624 ], [ 1, %3170 ], [ 1, %3161 ], [ %3485, %5625 ], [ 1, %3478 ], [ 1, %3469 ], [ 1, %3789 ], [ 1, %3780 ], [ %4099, %5626 ], [ 1, %4092 ], [ 1, %4083 ], [ %4414, %5627 ], [ 1, %4407 ], [ 1, %4398 ], [ %4724, %5628 ], [ 1, %4717 ], [ 1, %4708 ], [ 1, %5032 ], [ 1, %5023 ], [ %5342, %5629 ], [ 1, %5335 ], [ 1, %5326 ], [ %56, %199 ], [ %47, %339 ], [ %362, %496 ], [ %353, %635 ], [ %672, %814 ], [ %663, %957 ], [ %980, %1112 ], [ %971, %1249 ], [ %1292, %1436 ], [ %1283, %1581 ], [ %1604, %1743 ], [ %1595, %1887 ], [ %1921, %2219 ], [ %2233, %2527 ], [ %2564, %2706 ], [ %2555, %2849 ], [ %2872, %3004 ], [ %2863, %3141 ], [ %3168, %3462 ], [ %3476, %3756 ], [ %3796, %3936 ], [ %3787, %4076 ], [ %4090, %4374 ], [ %4405, %4701 ], [ %4715, %4999 ], [ %5039, %5179 ], [ %5030, %5319 ], [ %5333, %5617 ]
  %5633 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5632, ptr noundef nonnull @.str.5) #3
  %5634 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5631, ptr noundef nonnull @.str.6) #3
  br label %5635

5635:                                             ; preds = %5172, %5257, %5312, %5470, %5555, %5610, %4550, %4635, %4694, %4852, %4937, %4992, %3929, %4014, %4069, %4227, %4312, %4367, %3312, %3397, %3455, %3611, %3696, %3749, %2699, %2783, %2842, %2997, %3081, %3134, %2067, %2152, %2212, %2374, %2460, %2520, %1429, %1513, %1574, %1736, %1820, %1880, %807, %891, %950, %1105, %1189, %1242, %192, %276, %332, %489, %573, %628, %5630
  %5636 = phi i32 [ 0, %5630 ], [ -1, %628 ], [ -1, %573 ], [ -1, %489 ], [ -1, %332 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1242 ], [ -1, %1189 ], [ -1, %1105 ], [ -1, %950 ], [ -1, %891 ], [ -1, %807 ], [ -1, %1880 ], [ -1, %1820 ], [ -1, %1736 ], [ -1, %1574 ], [ -1, %1513 ], [ -1, %1429 ], [ -1, %2520 ], [ -1, %2460 ], [ -1, %2374 ], [ -1, %2212 ], [ -1, %2152 ], [ -1, %2067 ], [ -1, %3134 ], [ -1, %3081 ], [ -1, %2997 ], [ -1, %2842 ], [ -1, %2783 ], [ -1, %2699 ], [ -1, %3749 ], [ -1, %3696 ], [ -1, %3611 ], [ -1, %3455 ], [ -1, %3397 ], [ -1, %3312 ], [ -1, %4367 ], [ -1, %4312 ], [ -1, %4227 ], [ -1, %4069 ], [ -1, %4014 ], [ -1, %3929 ], [ -1, %4992 ], [ -1, %4937 ], [ -1, %4852 ], [ -1, %4694 ], [ -1, %4635 ], [ -1, %4550 ], [ -1, %5610 ], [ -1, %5555 ], [ -1, %5470 ], [ -1, %5312 ], [ -1, %5257 ], [ -1, %5172 ]
  ret i32 %5636
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3105 [
    i32 101, label %22
    i32 102, label %627
    i32 107, label %1246
    i32 108, label %1864
    i32 109, label %2487
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %3105

30:                                               ; preds = %22
  switch i32 %1, label %625 [
    i32 1, label %31
    i32 0, label %335
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %3105

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %196

45:                                               ; preds = %31
  br i1 %35, label %46, label %3105

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %194
  %55 = phi i32 [ 0, %46 ], [ %146, %194 ]
  %56 = phi double [ 0.000000e+00, %46 ], [ %145, %194 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %58, label %127

58:                                               ; preds = %54, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %54 ]
  %60 = phi i64 [ %68, %117 ], [ %51, %54 ]
  %61 = phi i64 [ %125, %117 ], [ %50, %54 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %54 ]
  %63 = sub i32 %49, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !384

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !385

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !386

127:                                              ; preds = %117, %54
  %128 = phi i32 [ %57, %54 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i8, ptr %24, i64 %129
  %133 = load i8, ptr %132, align 1, !tbaa !11
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = uitofp i8 %133 to double
  %137 = fmul fast double %131, %136
  %138 = fcmp fast uge double %137, 0.000000e+00
  %139 = fneg fast double %137
  %140 = tail call fast double @llvm.fabs.f64(double %137)
  %141 = fcmp fast ole double %140, %135
  %142 = select nnan ninf i1 %138, double %137, double %139
  %143 = select i1 %141, double %135, double %142
  %144 = fptoui double %143 to i8
  store i8 %144, ptr %26, align 1, !tbaa !11
  %145 = fadd fast double %131, %56
  %146 = add nuw nsw i32 %55, 1
  br i1 %48, label %147, label %194

147:                                              ; preds = %127
  %148 = load i32, ptr %4, align 4, !tbaa !5
  %149 = load i32, ptr %12, align 4, !tbaa !5
  %150 = add nsw i32 %149, -1
  %151 = icmp slt i32 %148, %150
  br i1 %151, label %171, label %152

152:                                              ; preds = %147
  %153 = icmp eq i32 %148, %150
  br i1 %153, label %154, label %187

154:                                              ; preds = %152
  store i32 0, ptr %4, align 4, !tbaa !5
  %155 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %155, ptr %6, align 4, !tbaa !5
  br i1 %53, label %194, label %156

156:                                              ; preds = %154, %181
  %157 = phi i64 [ %185, %181 ], [ 1, %154 ]
  %158 = getelementptr inbounds i32, ptr %4, i64 %157
  %159 = load i32, ptr %158, align 4, !tbaa !5
  %160 = getelementptr inbounds i32, ptr %12, i64 %157
  %161 = load i32, ptr %160, align 4, !tbaa !5
  %162 = add nsw i32 %161, -1
  %163 = icmp slt i32 %159, %162
  br i1 %163, label %164, label %179

164:                                              ; preds = %156
  br i1 %151, label %171, label %165

165:                                              ; preds = %164
  %166 = getelementptr inbounds i32, ptr %7, i64 %157
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = getelementptr inbounds i32, ptr %6, i64 %157
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = add nsw i32 %169, %167
  store i32 %170, ptr %168, align 4, !tbaa !5
  br label %189

171:                                              ; preds = %147, %164
  %172 = phi i32 [ %159, %164 ], [ %148, %147 ]
  %173 = phi ptr [ %158, %164 ], [ %4, %147 ]
  %174 = phi i64 [ %157, %164 ], [ 0, %147 ]
  %175 = add nsw i32 %172, 1
  store i32 %175, ptr %173, align 4, !tbaa !5
  %176 = getelementptr inbounds i32, ptr %7, i64 %174
  %177 = load i32, ptr %176, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %6, i64 %174
  br label %189

179:                                              ; preds = %156
  %180 = icmp eq i32 %159, %162
  br i1 %180, label %181, label %187

181:                                              ; preds = %179
  store i32 0, ptr %158, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %8, i64 %157
  %183 = load i32, ptr %182, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %6, i64 %157
  store i32 %183, ptr %184, align 4, !tbaa !5
  %185 = add nuw nsw i64 %157, 1
  %186 = icmp eq i64 %185, %51
  br i1 %186, label %194, label %156, !llvm.loop !387

187:                                              ; preds = %152, %179
  %188 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

189:                                              ; preds = %165, %171
  %190 = phi ptr [ %178, %171 ], [ %158, %165 ]
  %191 = phi i32 [ %177, %171 ], [ 1, %165 ]
  %192 = load i32, ptr %190, align 4, !tbaa !5
  %193 = add nsw i32 %192, %191
  store i32 %193, ptr %190, align 4, !tbaa !5
  br label %194

194:                                              ; preds = %181, %189, %154, %127
  %195 = icmp eq i32 %146, %5
  br i1 %195, label %3105, label %54, !llvm.loop !388

196:                                              ; preds = %37, %333
  %197 = phi i32 [ 0, %37 ], [ %282, %333 ]
  %198 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %199, label %268

199:                                              ; preds = %196, %258
  %200 = phi i32 [ %267, %258 ], [ 0, %196 ]
  %201 = phi i64 [ %209, %258 ], [ %42, %196 ]
  %202 = phi i64 [ %266, %258 ], [ %41, %196 ]
  %203 = phi i32 [ %264, %258 ], [ %198, %196 ]
  %204 = sub i32 %40, %200
  %205 = tail call i32 @llvm.smin.i32(i32 %204, i32 0)
  %206 = sub i32 %204, %205
  %207 = zext i32 %206 to i64
  %208 = add nuw nsw i64 %207, 1
  %209 = add nsw i64 %201, -1
  %210 = icmp ult i32 %206, 31
  br i1 %210, label %246, label %211

211:                                              ; preds = %199
  %212 = and i64 %208, 8589934560
  %213 = sub i64 %202, %212
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi i64 [ 0, %211 ], [ %238, %214 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %234, %214 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %235, %214 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %236, %214 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %211 ], [ %237, %214 ]
  %220 = sub i64 %202, %215
  %221 = getelementptr inbounds i32, ptr %11, i64 %220
  %222 = getelementptr inbounds i32, ptr %221, i64 -7
  %223 = load <8 x i32>, ptr %222, align 4, !tbaa !5
  %224 = shufflevector <8 x i32> %223, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %225 = getelementptr inbounds i32, ptr %221, i64 -15
  %226 = load <8 x i32>, ptr %225, align 4, !tbaa !5
  %227 = shufflevector <8 x i32> %226, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %228 = getelementptr inbounds i32, ptr %221, i64 -23
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %221, i64 -31
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = mul <8 x i32> %224, %216
  %235 = mul <8 x i32> %227, %217
  %236 = mul <8 x i32> %230, %218
  %237 = mul <8 x i32> %233, %219
  %238 = add nuw i64 %215, 32
  %239 = icmp eq i64 %238, %212
  br i1 %239, label %240, label %214, !llvm.loop !389

240:                                              ; preds = %214
  %241 = mul <8 x i32> %235, %234
  %242 = mul <8 x i32> %236, %241
  %243 = mul <8 x i32> %237, %242
  %244 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %243)
  %245 = icmp eq i64 %208, %212
  br i1 %245, label %258, label %246

246:                                              ; preds = %199, %240
  %247 = phi i64 [ %202, %199 ], [ %213, %240 ]
  %248 = phi i32 [ 1, %199 ], [ %244, %240 ]
  br label %249

249:                                              ; preds = %246, %249
  %250 = phi i64 [ %255, %249 ], [ %247, %246 ]
  %251 = phi i32 [ %254, %249 ], [ %248, %246 ]
  %252 = getelementptr inbounds i32, ptr %11, i64 %250
  %253 = load i32, ptr %252, align 4, !tbaa !5
  %254 = mul nsw i32 %253, %251
  %255 = add nsw i64 %250, -1
  %256 = trunc i64 %250 to i32
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %249, label %258, !llvm.loop !390

258:                                              ; preds = %249, %240
  %259 = phi i32 [ %244, %240 ], [ %254, %249 ]
  %260 = and i64 %209, 4294967295
  %261 = getelementptr inbounds i32, ptr %6, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !5
  %263 = mul nsw i32 %262, %259
  %264 = add nsw i32 %263, %203
  %265 = icmp sgt i64 %201, 2
  %266 = add nsw i64 %202, -1
  %267 = add i32 %200, 1
  br i1 %265, label %199, label %268, !llvm.loop !391

268:                                              ; preds = %258, %196
  %269 = phi i32 [ %198, %196 ], [ %264, %258 ]
  %270 = icmp slt i32 %269, %5
  br i1 %270, label %273, label %271

271:                                              ; preds = %268
  %272 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

273:                                              ; preds = %268
  %274 = sext i32 %269 to i64
  %275 = getelementptr inbounds i8, ptr %24, i64 %274
  %276 = load i8, ptr %275, align 1, !tbaa !11
  %277 = load i8, ptr %26, align 1, !tbaa !11
  %278 = uitofp i8 %277 to double
  %279 = uitofp i8 %276 to double
  %280 = tail call fast double @llvm.maxnum.f64(double %278, double %279)
  %281 = fptoui double %280 to i8
  store i8 %281, ptr %26, align 1, !tbaa !11
  %282 = add nuw nsw i32 %197, 1
  br i1 %39, label %283, label %333

283:                                              ; preds = %273
  %284 = load i32, ptr %4, align 4, !tbaa !5
  %285 = load i32, ptr %12, align 4, !tbaa !5
  %286 = add nsw i32 %285, -1
  %287 = icmp slt i32 %284, %286
  br i1 %287, label %310, label %288

288:                                              ; preds = %283
  %289 = icmp eq i32 %284, %286
  br i1 %289, label %290, label %326

290:                                              ; preds = %288
  store i32 0, ptr %4, align 4, !tbaa !5
  %291 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %291, ptr %6, align 4, !tbaa !5
  br i1 %44, label %333, label %292

292:                                              ; preds = %290, %320
  %293 = phi i64 [ %324, %320 ], [ 1, %290 ]
  %294 = getelementptr inbounds i32, ptr %4, i64 %293
  %295 = load i32, ptr %294, align 4, !tbaa !5
  %296 = getelementptr inbounds i32, ptr %12, i64 %293
  %297 = load i32, ptr %296, align 4, !tbaa !5
  %298 = add nsw i32 %297, -1
  %299 = icmp slt i32 %295, %298
  br i1 %299, label %300, label %318

300:                                              ; preds = %292
  br i1 %287, label %310, label %301

301:                                              ; preds = %300
  %302 = shl i64 %293, 32
  %303 = add i64 %302, -4294967296
  %304 = ashr exact i64 %303, 32
  %305 = getelementptr inbounds i32, ptr %7, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = getelementptr inbounds i32, ptr %6, i64 %293
  %308 = load i32, ptr %307, align 4, !tbaa !5
  %309 = add nsw i32 %308, %306
  store i32 %309, ptr %307, align 4, !tbaa !5
  br label %328

310:                                              ; preds = %283, %300
  %311 = phi i32 [ %295, %300 ], [ %284, %283 ]
  %312 = phi ptr [ %294, %300 ], [ %4, %283 ]
  %313 = phi i64 [ %293, %300 ], [ 0, %283 ]
  %314 = add nsw i32 %311, 1
  store i32 %314, ptr %312, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %7, i64 %313
  %316 = load i32, ptr %315, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %6, i64 %313
  br label %328

318:                                              ; preds = %292
  %319 = icmp eq i32 %295, %298
  br i1 %319, label %320, label %326

320:                                              ; preds = %318
  store i32 0, ptr %294, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %8, i64 %293
  %322 = load i32, ptr %321, align 4, !tbaa !5
  %323 = getelementptr inbounds i32, ptr %6, i64 %293
  store i32 %322, ptr %323, align 4, !tbaa !5
  %324 = add nuw nsw i64 %293, 1
  %325 = icmp eq i64 %324, %42
  br i1 %325, label %333, label %292, !llvm.loop !392

326:                                              ; preds = %288, %318
  %327 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

328:                                              ; preds = %301, %310
  %329 = phi ptr [ %317, %310 ], [ %294, %301 ]
  %330 = phi i32 [ %316, %310 ], [ 1, %301 ]
  %331 = load i32, ptr %329, align 4, !tbaa !5
  %332 = add nsw i32 %331, %330
  store i32 %332, ptr %329, align 4, !tbaa !5
  br label %333

333:                                              ; preds = %320, %328, %290, %273
  %334 = icmp eq i32 %282, %5
  br i1 %334, label %3105, label %196, !llvm.loop !393

335:                                              ; preds = %30
  %336 = getelementptr inbounds i32, ptr %3, i64 %19
  %337 = load i32, ptr %336, align 4, !tbaa !5
  %338 = icmp eq i32 %337, 0
  %339 = icmp sgt i32 %5, 0
  br i1 %338, label %349, label %340

340:                                              ; preds = %335
  br i1 %339, label %341, label %3105

341:                                              ; preds = %340
  %342 = icmp sgt i32 %13, 1
  %343 = icmp sgt i32 %13, 0
  %344 = add i32 %13, -2
  %345 = zext i32 %344 to i64
  %346 = zext i32 %13 to i64
  %347 = add nuw i32 %5, 1
  %348 = icmp eq i32 %13, 1
  br label %489

349:                                              ; preds = %335
  br i1 %339, label %350, label %3105

350:                                              ; preds = %349
  %351 = icmp sgt i32 %13, 1
  %352 = icmp sgt i32 %13, 0
  %353 = add i32 %13, -2
  %354 = zext i32 %353 to i64
  %355 = zext i32 %13 to i64
  %356 = add nuw i32 %5, 1
  %357 = icmp eq i32 %13, 1
  br label %358

358:                                              ; preds = %350, %487
  %359 = phi i32 [ 0, %350 ], [ %439, %487 ]
  %360 = phi double [ 0.000000e+00, %350 ], [ %438, %487 ]
  %361 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %351, label %362, label %431

362:                                              ; preds = %358, %421
  %363 = phi i32 [ %430, %421 ], [ 0, %358 ]
  %364 = phi i64 [ %372, %421 ], [ %355, %358 ]
  %365 = phi i64 [ %429, %421 ], [ %354, %358 ]
  %366 = phi i32 [ %427, %421 ], [ %361, %358 ]
  %367 = sub i32 %353, %363
  %368 = tail call i32 @llvm.smin.i32(i32 %367, i32 0)
  %369 = sub i32 %367, %368
  %370 = zext i32 %369 to i64
  %371 = add nuw nsw i64 %370, 1
  %372 = add nsw i64 %364, -1
  %373 = icmp ult i32 %369, 31
  br i1 %373, label %409, label %374

374:                                              ; preds = %362
  %375 = and i64 %371, 8589934560
  %376 = sub i64 %365, %375
  br label %377

377:                                              ; preds = %377, %374
  %378 = phi i64 [ 0, %374 ], [ %401, %377 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %397, %377 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %398, %377 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %399, %377 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %374 ], [ %400, %377 ]
  %383 = sub i64 %365, %378
  %384 = getelementptr inbounds i32, ptr %9, i64 %383
  %385 = getelementptr inbounds i32, ptr %384, i64 -7
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !5
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %384, i64 -15
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %384, i64 -23
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %384, i64 -31
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = mul <8 x i32> %387, %379
  %398 = mul <8 x i32> %390, %380
  %399 = mul <8 x i32> %393, %381
  %400 = mul <8 x i32> %396, %382
  %401 = add nuw i64 %378, 32
  %402 = icmp eq i64 %401, %375
  br i1 %402, label %403, label %377, !llvm.loop !394

403:                                              ; preds = %377
  %404 = mul <8 x i32> %398, %397
  %405 = mul <8 x i32> %399, %404
  %406 = mul <8 x i32> %400, %405
  %407 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %406)
  %408 = icmp eq i64 %371, %375
  br i1 %408, label %421, label %409

409:                                              ; preds = %362, %403
  %410 = phi i64 [ %365, %362 ], [ %376, %403 ]
  %411 = phi i32 [ 1, %362 ], [ %407, %403 ]
  br label %412

412:                                              ; preds = %409, %412
  %413 = phi i64 [ %418, %412 ], [ %410, %409 ]
  %414 = phi i32 [ %417, %412 ], [ %411, %409 ]
  %415 = getelementptr inbounds i32, ptr %9, i64 %413
  %416 = load i32, ptr %415, align 4, !tbaa !5
  %417 = mul nsw i32 %416, %414
  %418 = add nsw i64 %413, -1
  %419 = trunc i64 %413 to i32
  %420 = icmp sgt i32 %419, 0
  br i1 %420, label %412, label %421, !llvm.loop !395

421:                                              ; preds = %412, %403
  %422 = phi i32 [ %407, %403 ], [ %417, %412 ]
  %423 = and i64 %372, 4294967295
  %424 = getelementptr inbounds i32, ptr %6, i64 %423
  %425 = load i32, ptr %424, align 4, !tbaa !5
  %426 = mul nsw i32 %425, %422
  %427 = add nsw i32 %426, %366
  %428 = icmp sgt i64 %364, 2
  %429 = add nsw i64 %365, -1
  %430 = add i32 %363, 1
  br i1 %428, label %362, label %431, !llvm.loop !396

431:                                              ; preds = %421, %358
  %432 = phi i32 [ %361, %358 ], [ %427, %421 ]
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds i8, ptr %24, i64 %433
  %435 = load i8, ptr %434, align 1, !tbaa !11
  %436 = load i8, ptr %26, align 1, !tbaa !11
  %437 = tail call i8 @llvm.umax.i8(i8 %436, i8 %435)
  store i8 %437, ptr %26, align 1, !tbaa !11
  %438 = fadd fast double %360, 1.000000e+00
  %439 = add nuw nsw i32 %359, 1
  br i1 %352, label %440, label %487

440:                                              ; preds = %431
  %441 = load i32, ptr %4, align 4, !tbaa !5
  %442 = load i32, ptr %12, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %441, %443
  br i1 %444, label %464, label %445

445:                                              ; preds = %440
  %446 = icmp eq i32 %441, %443
  br i1 %446, label %447, label %480

447:                                              ; preds = %445
  store i32 0, ptr %4, align 4, !tbaa !5
  %448 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %448, ptr %6, align 4, !tbaa !5
  br i1 %357, label %487, label %449

449:                                              ; preds = %447, %474
  %450 = phi i64 [ %478, %474 ], [ 1, %447 ]
  %451 = getelementptr inbounds i32, ptr %4, i64 %450
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %12, i64 %450
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %452, %455
  br i1 %456, label %457, label %472

457:                                              ; preds = %449
  br i1 %444, label %464, label %458

458:                                              ; preds = %457
  %459 = getelementptr inbounds i32, ptr %7, i64 %450
  %460 = load i32, ptr %459, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %6, i64 %450
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = add nsw i32 %462, %460
  store i32 %463, ptr %461, align 4, !tbaa !5
  br label %482

464:                                              ; preds = %440, %457
  %465 = phi i32 [ %452, %457 ], [ %441, %440 ]
  %466 = phi ptr [ %451, %457 ], [ %4, %440 ]
  %467 = phi i64 [ %450, %457 ], [ 0, %440 ]
  %468 = add nsw i32 %465, 1
  store i32 %468, ptr %466, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %7, i64 %467
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %467
  br label %482

472:                                              ; preds = %449
  %473 = icmp eq i32 %452, %455
  br i1 %473, label %474, label %480

474:                                              ; preds = %472
  store i32 0, ptr %451, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %8, i64 %450
  %476 = load i32, ptr %475, align 4, !tbaa !5
  %477 = getelementptr inbounds i32, ptr %6, i64 %450
  store i32 %476, ptr %477, align 4, !tbaa !5
  %478 = add nuw nsw i64 %450, 1
  %479 = icmp eq i64 %478, %355
  br i1 %479, label %487, label %449, !llvm.loop !397

480:                                              ; preds = %445, %472
  %481 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

482:                                              ; preds = %458, %464
  %483 = phi ptr [ %471, %464 ], [ %451, %458 ]
  %484 = phi i32 [ %470, %464 ], [ 1, %458 ]
  %485 = load i32, ptr %483, align 4, !tbaa !5
  %486 = add nsw i32 %485, %484
  store i32 %486, ptr %483, align 4, !tbaa !5
  br label %487

487:                                              ; preds = %474, %482, %447, %431
  %488 = icmp eq i32 %439, %5
  br i1 %488, label %3105, label %358, !llvm.loop !398

489:                                              ; preds = %341, %623
  %490 = phi i32 [ 0, %341 ], [ %572, %623 ]
  %491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %342, label %492, label %561

492:                                              ; preds = %489, %551
  %493 = phi i32 [ %560, %551 ], [ 0, %489 ]
  %494 = phi i64 [ %502, %551 ], [ %346, %489 ]
  %495 = phi i64 [ %559, %551 ], [ %345, %489 ]
  %496 = phi i32 [ %557, %551 ], [ %491, %489 ]
  %497 = sub i32 %344, %493
  %498 = tail call i32 @llvm.smin.i32(i32 %497, i32 0)
  %499 = sub i32 %497, %498
  %500 = zext i32 %499 to i64
  %501 = add nuw nsw i64 %500, 1
  %502 = add nsw i64 %494, -1
  %503 = icmp ult i32 %499, 31
  br i1 %503, label %539, label %504

504:                                              ; preds = %492
  %505 = and i64 %501, 8589934560
  %506 = sub i64 %495, %505
  br label %507

507:                                              ; preds = %507, %504
  %508 = phi i64 [ 0, %504 ], [ %531, %507 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %527, %507 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %528, %507 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %529, %507 ]
  %512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %504 ], [ %530, %507 ]
  %513 = sub i64 %495, %508
  %514 = getelementptr inbounds i32, ptr %11, i64 %513
  %515 = getelementptr inbounds i32, ptr %514, i64 -7
  %516 = load <8 x i32>, ptr %515, align 4, !tbaa !5
  %517 = shufflevector <8 x i32> %516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %518 = getelementptr inbounds i32, ptr %514, i64 -15
  %519 = load <8 x i32>, ptr %518, align 4, !tbaa !5
  %520 = shufflevector <8 x i32> %519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %521 = getelementptr inbounds i32, ptr %514, i64 -23
  %522 = load <8 x i32>, ptr %521, align 4, !tbaa !5
  %523 = shufflevector <8 x i32> %522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %524 = getelementptr inbounds i32, ptr %514, i64 -31
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = mul <8 x i32> %517, %509
  %528 = mul <8 x i32> %520, %510
  %529 = mul <8 x i32> %523, %511
  %530 = mul <8 x i32> %526, %512
  %531 = add nuw i64 %508, 32
  %532 = icmp eq i64 %531, %505
  br i1 %532, label %533, label %507, !llvm.loop !399

533:                                              ; preds = %507
  %534 = mul <8 x i32> %528, %527
  %535 = mul <8 x i32> %529, %534
  %536 = mul <8 x i32> %530, %535
  %537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %536)
  %538 = icmp eq i64 %501, %505
  br i1 %538, label %551, label %539

539:                                              ; preds = %492, %533
  %540 = phi i64 [ %495, %492 ], [ %506, %533 ]
  %541 = phi i32 [ 1, %492 ], [ %537, %533 ]
  br label %542

542:                                              ; preds = %539, %542
  %543 = phi i64 [ %548, %542 ], [ %540, %539 ]
  %544 = phi i32 [ %547, %542 ], [ %541, %539 ]
  %545 = getelementptr inbounds i32, ptr %11, i64 %543
  %546 = load i32, ptr %545, align 4, !tbaa !5
  %547 = mul nsw i32 %546, %544
  %548 = add nsw i64 %543, -1
  %549 = trunc i64 %543 to i32
  %550 = icmp sgt i32 %549, 0
  br i1 %550, label %542, label %551, !llvm.loop !400

551:                                              ; preds = %542, %533
  %552 = phi i32 [ %537, %533 ], [ %547, %542 ]
  %553 = and i64 %502, 4294967295
  %554 = getelementptr inbounds i32, ptr %6, i64 %553
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %552
  %557 = add nsw i32 %556, %496
  %558 = icmp sgt i64 %494, 2
  %559 = add nsw i64 %495, -1
  %560 = add i32 %493, 1
  br i1 %558, label %492, label %561, !llvm.loop !401

561:                                              ; preds = %551, %489
  %562 = phi i32 [ %491, %489 ], [ %557, %551 ]
  %563 = icmp slt i32 %562, %5
  br i1 %563, label %566, label %564

564:                                              ; preds = %561
  %565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

566:                                              ; preds = %561
  %567 = sext i32 %562 to i64
  %568 = getelementptr inbounds i8, ptr %24, i64 %567
  %569 = load i8, ptr %568, align 1, !tbaa !11
  %570 = load i8, ptr %26, align 1, !tbaa !11
  %571 = tail call i8 @llvm.umax.i8(i8 %570, i8 %569)
  store i8 %571, ptr %26, align 1, !tbaa !11
  %572 = add nuw nsw i32 %490, 1
  br i1 %343, label %573, label %623

573:                                              ; preds = %566
  %574 = load i32, ptr %4, align 4, !tbaa !5
  %575 = load i32, ptr %12, align 4, !tbaa !5
  %576 = add nsw i32 %575, -1
  %577 = icmp slt i32 %574, %576
  br i1 %577, label %600, label %578

578:                                              ; preds = %573
  %579 = icmp eq i32 %574, %576
  br i1 %579, label %580, label %616

580:                                              ; preds = %578
  store i32 0, ptr %4, align 4, !tbaa !5
  %581 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %581, ptr %6, align 4, !tbaa !5
  br i1 %348, label %623, label %582

582:                                              ; preds = %580, %610
  %583 = phi i64 [ %614, %610 ], [ 1, %580 ]
  %584 = getelementptr inbounds i32, ptr %4, i64 %583
  %585 = load i32, ptr %584, align 4, !tbaa !5
  %586 = getelementptr inbounds i32, ptr %12, i64 %583
  %587 = load i32, ptr %586, align 4, !tbaa !5
  %588 = add nsw i32 %587, -1
  %589 = icmp slt i32 %585, %588
  br i1 %589, label %590, label %608

590:                                              ; preds = %582
  br i1 %577, label %600, label %591

591:                                              ; preds = %590
  %592 = shl i64 %583, 32
  %593 = add i64 %592, -4294967296
  %594 = ashr exact i64 %593, 32
  %595 = getelementptr inbounds i32, ptr %7, i64 %594
  %596 = load i32, ptr %595, align 4, !tbaa !5
  %597 = getelementptr inbounds i32, ptr %6, i64 %583
  %598 = load i32, ptr %597, align 4, !tbaa !5
  %599 = add nsw i32 %598, %596
  store i32 %599, ptr %597, align 4, !tbaa !5
  br label %618

600:                                              ; preds = %573, %590
  %601 = phi i32 [ %585, %590 ], [ %574, %573 ]
  %602 = phi ptr [ %584, %590 ], [ %4, %573 ]
  %603 = phi i64 [ %583, %590 ], [ 0, %573 ]
  %604 = add nsw i32 %601, 1
  store i32 %604, ptr %602, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %7, i64 %603
  %606 = load i32, ptr %605, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %6, i64 %603
  br label %618

608:                                              ; preds = %582
  %609 = icmp eq i32 %585, %588
  br i1 %609, label %610, label %616

610:                                              ; preds = %608
  store i32 0, ptr %584, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %8, i64 %583
  %612 = load i32, ptr %611, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %6, i64 %583
  store i32 %612, ptr %613, align 4, !tbaa !5
  %614 = add nuw nsw i64 %583, 1
  %615 = icmp eq i64 %614, %346
  br i1 %615, label %623, label %582, !llvm.loop !402

616:                                              ; preds = %578, %608
  %617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

618:                                              ; preds = %591, %600
  %619 = phi ptr [ %607, %600 ], [ %584, %591 ]
  %620 = phi i32 [ %606, %600 ], [ 1, %591 ]
  %621 = load i32, ptr %619, align 4, !tbaa !5
  %622 = add nsw i32 %621, %620
  store i32 %622, ptr %619, align 4, !tbaa !5
  br label %623

623:                                              ; preds = %610, %618, %580, %566
  %624 = icmp eq i32 %572, %5
  br i1 %624, label %3105, label %489, !llvm.loop !403

625:                                              ; preds = %30
  %626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 683, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3105

627:                                              ; preds = %18
  %628 = getelementptr inbounds ptr, ptr %14, i64 %19
  %629 = load ptr, ptr %628, align 8, !tbaa !9
  %630 = getelementptr inbounds ptr, ptr %16, i64 %19
  %631 = load ptr, ptr %630, align 8, !tbaa !9
  store i32 0, ptr %631, align 4, !tbaa !5
  %632 = icmp eq i32 %13, 0
  br i1 %632, label %633, label %641

633:                                              ; preds = %627
  %634 = load i8, ptr %629, align 1, !tbaa !11
  %635 = icmp eq i8 %634, 0
  br i1 %635, label %639, label %636

636:                                              ; preds = %633
  %637 = tail call i8 @llvm.abs.i8(i8 %634, i1 false)
  %638 = zext i8 %637 to i32
  br label %639

639:                                              ; preds = %633, %636
  %640 = phi i32 [ %638, %636 ], [ 0, %633 ]
  store i32 %640, ptr %631, align 4, !tbaa !5
  br label %3105

641:                                              ; preds = %627
  switch i32 %1, label %1244 [
    i32 1, label %642
    i32 0, label %950
  ]

642:                                              ; preds = %641
  %643 = getelementptr inbounds i32, ptr %3, i64 %19
  %644 = load i32, ptr %643, align 4, !tbaa !5
  %645 = icmp eq i32 %644, 0
  %646 = icmp sgt i32 %5, 0
  br i1 %645, label %656, label %647

647:                                              ; preds = %642
  br i1 %646, label %648, label %3105

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %807

656:                                              ; preds = %642
  br i1 %646, label %657, label %3105

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %665

665:                                              ; preds = %657, %805
  %666 = phi i32 [ 0, %657 ], [ %757, %805 ]
  %667 = phi double [ 0.000000e+00, %657 ], [ %756, %805 ]
  %668 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %658, label %669, label %738

669:                                              ; preds = %665, %728
  %670 = phi i32 [ %737, %728 ], [ 0, %665 ]
  %671 = phi i64 [ %679, %728 ], [ %662, %665 ]
  %672 = phi i64 [ %736, %728 ], [ %661, %665 ]
  %673 = phi i32 [ %734, %728 ], [ %668, %665 ]
  %674 = sub i32 %660, %670
  %675 = tail call i32 @llvm.smin.i32(i32 %674, i32 0)
  %676 = sub i32 %674, %675
  %677 = zext i32 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = add nsw i64 %671, -1
  %680 = icmp ult i32 %676, 31
  br i1 %680, label %716, label %681

681:                                              ; preds = %669
  %682 = and i64 %678, 8589934560
  %683 = sub i64 %672, %682
  br label %684

684:                                              ; preds = %684, %681
  %685 = phi i64 [ 0, %681 ], [ %708, %684 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %704, %684 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %705, %684 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %706, %684 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %707, %684 ]
  %690 = sub i64 %672, %685
  %691 = getelementptr inbounds i32, ptr %9, i64 %690
  %692 = getelementptr inbounds i32, ptr %691, i64 -7
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !5
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %691, i64 -15
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %691, i64 -23
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %691, i64 -31
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = mul <8 x i32> %694, %686
  %705 = mul <8 x i32> %697, %687
  %706 = mul <8 x i32> %700, %688
  %707 = mul <8 x i32> %703, %689
  %708 = add nuw i64 %685, 32
  %709 = icmp eq i64 %708, %682
  br i1 %709, label %710, label %684, !llvm.loop !404

710:                                              ; preds = %684
  %711 = mul <8 x i32> %705, %704
  %712 = mul <8 x i32> %706, %711
  %713 = mul <8 x i32> %707, %712
  %714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %713)
  %715 = icmp eq i64 %678, %682
  br i1 %715, label %728, label %716

716:                                              ; preds = %669, %710
  %717 = phi i64 [ %672, %669 ], [ %683, %710 ]
  %718 = phi i32 [ 1, %669 ], [ %714, %710 ]
  br label %719

719:                                              ; preds = %716, %719
  %720 = phi i64 [ %725, %719 ], [ %717, %716 ]
  %721 = phi i32 [ %724, %719 ], [ %718, %716 ]
  %722 = getelementptr inbounds i32, ptr %9, i64 %720
  %723 = load i32, ptr %722, align 4, !tbaa !5
  %724 = mul nsw i32 %723, %721
  %725 = add nsw i64 %720, -1
  %726 = trunc i64 %720 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %719, label %728, !llvm.loop !405

728:                                              ; preds = %719, %710
  %729 = phi i32 [ %714, %710 ], [ %724, %719 ]
  %730 = and i64 %679, 4294967295
  %731 = getelementptr inbounds i32, ptr %6, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %729
  %734 = add nsw i32 %733, %673
  %735 = icmp sgt i64 %671, 2
  %736 = add nsw i64 %672, -1
  %737 = add i32 %670, 1
  br i1 %735, label %669, label %738, !llvm.loop !406

738:                                              ; preds = %728, %665
  %739 = phi i32 [ %668, %665 ], [ %734, %728 ]
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds double, ptr %2, i64 %740
  %742 = load double, ptr %741, align 8, !tbaa !18
  %743 = getelementptr inbounds i8, ptr %629, i64 %740
  %744 = load i8, ptr %743, align 1, !tbaa !11
  %745 = load i32, ptr %631, align 4, !tbaa !5
  %746 = sitofp i32 %745 to double
  %747 = sitofp i8 %744 to double
  %748 = fmul fast double %742, %747
  %749 = fcmp fast uge double %748, 0.000000e+00
  %750 = fneg fast double %748
  %751 = tail call fast double @llvm.fabs.f64(double %748)
  %752 = fcmp fast ole double %751, %746
  %753 = select nnan ninf i1 %749, double %748, double %750
  %754 = select i1 %752, double %746, double %753
  %755 = fptosi double %754 to i32
  store i32 %755, ptr %631, align 4, !tbaa !5
  %756 = fadd fast double %742, %667
  %757 = add nuw nsw i32 %666, 1
  br i1 %659, label %758, label %805

758:                                              ; preds = %738
  %759 = load i32, ptr %4, align 4, !tbaa !5
  %760 = load i32, ptr %12, align 4, !tbaa !5
  %761 = add nsw i32 %760, -1
  %762 = icmp slt i32 %759, %761
  br i1 %762, label %782, label %763

763:                                              ; preds = %758
  %764 = icmp eq i32 %759, %761
  br i1 %764, label %765, label %798

765:                                              ; preds = %763
  store i32 0, ptr %4, align 4, !tbaa !5
  %766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %766, ptr %6, align 4, !tbaa !5
  br i1 %664, label %805, label %767

767:                                              ; preds = %765, %792
  %768 = phi i64 [ %796, %792 ], [ 1, %765 ]
  %769 = getelementptr inbounds i32, ptr %4, i64 %768
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %12, i64 %768
  %772 = load i32, ptr %771, align 4, !tbaa !5
  %773 = add nsw i32 %772, -1
  %774 = icmp slt i32 %770, %773
  br i1 %774, label %775, label %790

775:                                              ; preds = %767
  br i1 %762, label %782, label %776

776:                                              ; preds = %775
  %777 = getelementptr inbounds i32, ptr %7, i64 %768
  %778 = load i32, ptr %777, align 4, !tbaa !5
  %779 = getelementptr inbounds i32, ptr %6, i64 %768
  %780 = load i32, ptr %779, align 4, !tbaa !5
  %781 = add nsw i32 %780, %778
  store i32 %781, ptr %779, align 4, !tbaa !5
  br label %800

782:                                              ; preds = %758, %775
  %783 = phi i32 [ %770, %775 ], [ %759, %758 ]
  %784 = phi ptr [ %769, %775 ], [ %4, %758 ]
  %785 = phi i64 [ %768, %775 ], [ 0, %758 ]
  %786 = add nsw i32 %783, 1
  store i32 %786, ptr %784, align 4, !tbaa !5
  %787 = getelementptr inbounds i32, ptr %7, i64 %785
  %788 = load i32, ptr %787, align 4, !tbaa !5
  %789 = getelementptr inbounds i32, ptr %6, i64 %785
  br label %800

790:                                              ; preds = %767
  %791 = icmp eq i32 %770, %773
  br i1 %791, label %792, label %798

792:                                              ; preds = %790
  store i32 0, ptr %769, align 4, !tbaa !5
  %793 = getelementptr inbounds i32, ptr %8, i64 %768
  %794 = load i32, ptr %793, align 4, !tbaa !5
  %795 = getelementptr inbounds i32, ptr %6, i64 %768
  store i32 %794, ptr %795, align 4, !tbaa !5
  %796 = add nuw nsw i64 %768, 1
  %797 = icmp eq i64 %796, %662
  br i1 %797, label %805, label %767, !llvm.loop !407

798:                                              ; preds = %763, %790
  %799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

800:                                              ; preds = %776, %782
  %801 = phi ptr [ %789, %782 ], [ %769, %776 ]
  %802 = phi i32 [ %788, %782 ], [ 1, %776 ]
  %803 = load i32, ptr %801, align 4, !tbaa !5
  %804 = add nsw i32 %803, %802
  store i32 %804, ptr %801, align 4, !tbaa !5
  br label %805

805:                                              ; preds = %792, %800, %765, %738
  %806 = icmp eq i32 %757, %5
  br i1 %806, label %3105, label %665, !llvm.loop !408

807:                                              ; preds = %648, %948
  %808 = phi i32 [ 0, %648 ], [ %897, %948 ]
  %809 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %649, label %810, label %879

810:                                              ; preds = %807, %869
  %811 = phi i32 [ %878, %869 ], [ 0, %807 ]
  %812 = phi i64 [ %820, %869 ], [ %653, %807 ]
  %813 = phi i64 [ %877, %869 ], [ %652, %807 ]
  %814 = phi i32 [ %875, %869 ], [ %809, %807 ]
  %815 = sub i32 %651, %811
  %816 = tail call i32 @llvm.smin.i32(i32 %815, i32 0)
  %817 = sub i32 %815, %816
  %818 = zext i32 %817 to i64
  %819 = add nuw nsw i64 %818, 1
  %820 = add nsw i64 %812, -1
  %821 = icmp ult i32 %817, 31
  br i1 %821, label %857, label %822

822:                                              ; preds = %810
  %823 = and i64 %819, 8589934560
  %824 = sub i64 %813, %823
  br label %825

825:                                              ; preds = %825, %822
  %826 = phi i64 [ 0, %822 ], [ %849, %825 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %845, %825 ]
  %828 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %846, %825 ]
  %829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %847, %825 ]
  %830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %822 ], [ %848, %825 ]
  %831 = sub i64 %813, %826
  %832 = getelementptr inbounds i32, ptr %11, i64 %831
  %833 = getelementptr inbounds i32, ptr %832, i64 -7
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !5
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = getelementptr inbounds i32, ptr %832, i64 -15
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !5
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %832, i64 -23
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !5
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = getelementptr inbounds i32, ptr %832, i64 -31
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !5
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = mul <8 x i32> %835, %827
  %846 = mul <8 x i32> %838, %828
  %847 = mul <8 x i32> %841, %829
  %848 = mul <8 x i32> %844, %830
  %849 = add nuw i64 %826, 32
  %850 = icmp eq i64 %849, %823
  br i1 %850, label %851, label %825, !llvm.loop !409

851:                                              ; preds = %825
  %852 = mul <8 x i32> %846, %845
  %853 = mul <8 x i32> %847, %852
  %854 = mul <8 x i32> %848, %853
  %855 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %854)
  %856 = icmp eq i64 %819, %823
  br i1 %856, label %869, label %857

857:                                              ; preds = %810, %851
  %858 = phi i64 [ %813, %810 ], [ %824, %851 ]
  %859 = phi i32 [ 1, %810 ], [ %855, %851 ]
  br label %860

860:                                              ; preds = %857, %860
  %861 = phi i64 [ %866, %860 ], [ %858, %857 ]
  %862 = phi i32 [ %865, %860 ], [ %859, %857 ]
  %863 = getelementptr inbounds i32, ptr %11, i64 %861
  %864 = load i32, ptr %863, align 4, !tbaa !5
  %865 = mul nsw i32 %864, %862
  %866 = add nsw i64 %861, -1
  %867 = trunc i64 %861 to i32
  %868 = icmp sgt i32 %867, 0
  br i1 %868, label %860, label %869, !llvm.loop !410

869:                                              ; preds = %860, %851
  %870 = phi i32 [ %855, %851 ], [ %865, %860 ]
  %871 = and i64 %820, 4294967295
  %872 = getelementptr inbounds i32, ptr %6, i64 %871
  %873 = load i32, ptr %872, align 4, !tbaa !5
  %874 = mul nsw i32 %873, %870
  %875 = add nsw i32 %874, %814
  %876 = icmp sgt i64 %812, 2
  %877 = add nsw i64 %813, -1
  %878 = add i32 %811, 1
  br i1 %876, label %810, label %879, !llvm.loop !411

879:                                              ; preds = %869, %807
  %880 = phi i32 [ %809, %807 ], [ %875, %869 ]
  %881 = icmp slt i32 %880, %5
  br i1 %881, label %884, label %882

882:                                              ; preds = %879
  %883 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

884:                                              ; preds = %879
  %885 = sext i32 %880 to i64
  %886 = getelementptr inbounds i8, ptr %629, i64 %885
  %887 = load i8, ptr %886, align 1, !tbaa !11
  %888 = load i32, ptr %631, align 4, !tbaa !5
  %889 = sitofp i32 %888 to double
  %890 = sitofp i8 %887 to double
  %891 = icmp slt i8 %887, 0
  %892 = fneg fast double %890
  %893 = select i1 %891, double %892, double %890
  %894 = fcmp fast ole double %893, %889
  %895 = select fast i1 %894, double %889, double %893
  %896 = fptosi double %895 to i32
  store i32 %896, ptr %631, align 4, !tbaa !5
  %897 = add nuw nsw i32 %808, 1
  br i1 %650, label %898, label %948

898:                                              ; preds = %884
  %899 = load i32, ptr %4, align 4, !tbaa !5
  %900 = load i32, ptr %12, align 4, !tbaa !5
  %901 = add nsw i32 %900, -1
  %902 = icmp slt i32 %899, %901
  br i1 %902, label %925, label %903

903:                                              ; preds = %898
  %904 = icmp eq i32 %899, %901
  br i1 %904, label %905, label %941

905:                                              ; preds = %903
  store i32 0, ptr %4, align 4, !tbaa !5
  %906 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %906, ptr %6, align 4, !tbaa !5
  br i1 %655, label %948, label %907

907:                                              ; preds = %905, %935
  %908 = phi i64 [ %939, %935 ], [ 1, %905 ]
  %909 = getelementptr inbounds i32, ptr %4, i64 %908
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %12, i64 %908
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = add nsw i32 %912, -1
  %914 = icmp slt i32 %910, %913
  br i1 %914, label %915, label %933

915:                                              ; preds = %907
  br i1 %902, label %925, label %916

916:                                              ; preds = %915
  %917 = shl i64 %908, 32
  %918 = add i64 %917, -4294967296
  %919 = ashr exact i64 %918, 32
  %920 = getelementptr inbounds i32, ptr %7, i64 %919
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = getelementptr inbounds i32, ptr %6, i64 %908
  %923 = load i32, ptr %922, align 4, !tbaa !5
  %924 = add nsw i32 %923, %921
  store i32 %924, ptr %922, align 4, !tbaa !5
  br label %943

925:                                              ; preds = %898, %915
  %926 = phi i32 [ %910, %915 ], [ %899, %898 ]
  %927 = phi ptr [ %909, %915 ], [ %4, %898 ]
  %928 = phi i64 [ %908, %915 ], [ 0, %898 ]
  %929 = add nsw i32 %926, 1
  store i32 %929, ptr %927, align 4, !tbaa !5
  %930 = getelementptr inbounds i32, ptr %7, i64 %928
  %931 = load i32, ptr %930, align 4, !tbaa !5
  %932 = getelementptr inbounds i32, ptr %6, i64 %928
  br label %943

933:                                              ; preds = %907
  %934 = icmp eq i32 %910, %913
  br i1 %934, label %935, label %941

935:                                              ; preds = %933
  store i32 0, ptr %909, align 4, !tbaa !5
  %936 = getelementptr inbounds i32, ptr %8, i64 %908
  %937 = load i32, ptr %936, align 4, !tbaa !5
  %938 = getelementptr inbounds i32, ptr %6, i64 %908
  store i32 %937, ptr %938, align 4, !tbaa !5
  %939 = add nuw nsw i64 %908, 1
  %940 = icmp eq i64 %939, %653
  br i1 %940, label %948, label %907, !llvm.loop !412

941:                                              ; preds = %903, %933
  %942 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

943:                                              ; preds = %916, %925
  %944 = phi ptr [ %932, %925 ], [ %909, %916 ]
  %945 = phi i32 [ %931, %925 ], [ 1, %916 ]
  %946 = load i32, ptr %944, align 4, !tbaa !5
  %947 = add nsw i32 %946, %945
  store i32 %947, ptr %944, align 4, !tbaa !5
  br label %948

948:                                              ; preds = %935, %943, %905, %884
  %949 = icmp eq i32 %897, %5
  br i1 %949, label %3105, label %807, !llvm.loop !413

950:                                              ; preds = %641
  %951 = getelementptr inbounds i32, ptr %3, i64 %19
  %952 = load i32, ptr %951, align 4, !tbaa !5
  %953 = icmp eq i32 %952, 0
  %954 = icmp sgt i32 %5, 0
  br i1 %953, label %964, label %955

955:                                              ; preds = %950
  br i1 %954, label %956, label %3105

956:                                              ; preds = %955
  %957 = icmp sgt i32 %13, 1
  %958 = icmp sgt i32 %13, 0
  %959 = add i32 %13, -2
  %960 = zext i32 %959 to i64
  %961 = zext i32 %13 to i64
  %962 = add nuw i32 %5, 1
  %963 = icmp eq i32 %13, 1
  br label %1106

964:                                              ; preds = %950
  br i1 %954, label %965, label %3105

965:                                              ; preds = %964
  %966 = icmp sgt i32 %13, 1
  %967 = icmp sgt i32 %13, 0
  %968 = add i32 %13, -2
  %969 = zext i32 %968 to i64
  %970 = zext i32 %13 to i64
  %971 = add nuw i32 %5, 1
  %972 = icmp eq i32 %13, 1
  br label %973

973:                                              ; preds = %965, %1104
  %974 = phi i32 [ 0, %965 ], [ %1056, %1104 ]
  %975 = phi double [ 0.000000e+00, %965 ], [ %1055, %1104 ]
  %976 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %966, label %977, label %1046

977:                                              ; preds = %973, %1036
  %978 = phi i32 [ %1045, %1036 ], [ 0, %973 ]
  %979 = phi i64 [ %987, %1036 ], [ %970, %973 ]
  %980 = phi i64 [ %1044, %1036 ], [ %969, %973 ]
  %981 = phi i32 [ %1042, %1036 ], [ %976, %973 ]
  %982 = sub i32 %968, %978
  %983 = tail call i32 @llvm.smin.i32(i32 %982, i32 0)
  %984 = sub i32 %982, %983
  %985 = zext i32 %984 to i64
  %986 = add nuw nsw i64 %985, 1
  %987 = add nsw i64 %979, -1
  %988 = icmp ult i32 %984, 31
  br i1 %988, label %1024, label %989

989:                                              ; preds = %977
  %990 = and i64 %986, 8589934560
  %991 = sub i64 %980, %990
  br label %992

992:                                              ; preds = %992, %989
  %993 = phi i64 [ 0, %989 ], [ %1016, %992 ]
  %994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %989 ], [ %1012, %992 ]
  %995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %989 ], [ %1013, %992 ]
  %996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %989 ], [ %1014, %992 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %989 ], [ %1015, %992 ]
  %998 = sub i64 %980, %993
  %999 = getelementptr inbounds i32, ptr %9, i64 %998
  %1000 = getelementptr inbounds i32, ptr %999, i64 -7
  %1001 = load <8 x i32>, ptr %1000, align 4, !tbaa !5
  %1002 = shufflevector <8 x i32> %1001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1003 = getelementptr inbounds i32, ptr %999, i64 -15
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !5
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %999, i64 -23
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !5
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %999, i64 -31
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !5
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = mul <8 x i32> %1002, %994
  %1013 = mul <8 x i32> %1005, %995
  %1014 = mul <8 x i32> %1008, %996
  %1015 = mul <8 x i32> %1011, %997
  %1016 = add nuw i64 %993, 32
  %1017 = icmp eq i64 %1016, %990
  br i1 %1017, label %1018, label %992, !llvm.loop !414

1018:                                             ; preds = %992
  %1019 = mul <8 x i32> %1013, %1012
  %1020 = mul <8 x i32> %1014, %1019
  %1021 = mul <8 x i32> %1015, %1020
  %1022 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1021)
  %1023 = icmp eq i64 %986, %990
  br i1 %1023, label %1036, label %1024

1024:                                             ; preds = %977, %1018
  %1025 = phi i64 [ %980, %977 ], [ %991, %1018 ]
  %1026 = phi i32 [ 1, %977 ], [ %1022, %1018 ]
  br label %1027

1027:                                             ; preds = %1024, %1027
  %1028 = phi i64 [ %1033, %1027 ], [ %1025, %1024 ]
  %1029 = phi i32 [ %1032, %1027 ], [ %1026, %1024 ]
  %1030 = getelementptr inbounds i32, ptr %9, i64 %1028
  %1031 = load i32, ptr %1030, align 4, !tbaa !5
  %1032 = mul nsw i32 %1031, %1029
  %1033 = add nsw i64 %1028, -1
  %1034 = trunc i64 %1028 to i32
  %1035 = icmp sgt i32 %1034, 0
  br i1 %1035, label %1027, label %1036, !llvm.loop !415

1036:                                             ; preds = %1027, %1018
  %1037 = phi i32 [ %1022, %1018 ], [ %1032, %1027 ]
  %1038 = and i64 %987, 4294967295
  %1039 = getelementptr inbounds i32, ptr %6, i64 %1038
  %1040 = load i32, ptr %1039, align 4, !tbaa !5
  %1041 = mul nsw i32 %1040, %1037
  %1042 = add nsw i32 %1041, %981
  %1043 = icmp sgt i64 %979, 2
  %1044 = add nsw i64 %980, -1
  %1045 = add i32 %978, 1
  br i1 %1043, label %977, label %1046, !llvm.loop !416

1046:                                             ; preds = %1036, %973
  %1047 = phi i32 [ %976, %973 ], [ %1042, %1036 ]
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds i8, ptr %629, i64 %1048
  %1050 = load i8, ptr %1049, align 1, !tbaa !11
  %1051 = load i32, ptr %631, align 4, !tbaa !5
  %1052 = tail call i8 @llvm.abs.i8(i8 %1050, i1 false)
  %1053 = zext i8 %1052 to i32
  %1054 = tail call i32 @llvm.smax.i32(i32 %1051, i32 %1053)
  store i32 %1054, ptr %631, align 4, !tbaa !5
  %1055 = fadd fast double %975, 1.000000e+00
  %1056 = add nuw nsw i32 %974, 1
  br i1 %967, label %1057, label %1104

1057:                                             ; preds = %1046
  %1058 = load i32, ptr %4, align 4, !tbaa !5
  %1059 = load i32, ptr %12, align 4, !tbaa !5
  %1060 = add nsw i32 %1059, -1
  %1061 = icmp slt i32 %1058, %1060
  br i1 %1061, label %1081, label %1062

1062:                                             ; preds = %1057
  %1063 = icmp eq i32 %1058, %1060
  br i1 %1063, label %1064, label %1097

1064:                                             ; preds = %1062
  store i32 0, ptr %4, align 4, !tbaa !5
  %1065 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1065, ptr %6, align 4, !tbaa !5
  br i1 %972, label %1104, label %1066

1066:                                             ; preds = %1064, %1091
  %1067 = phi i64 [ %1095, %1091 ], [ 1, %1064 ]
  %1068 = getelementptr inbounds i32, ptr %4, i64 %1067
  %1069 = load i32, ptr %1068, align 4, !tbaa !5
  %1070 = getelementptr inbounds i32, ptr %12, i64 %1067
  %1071 = load i32, ptr %1070, align 4, !tbaa !5
  %1072 = add nsw i32 %1071, -1
  %1073 = icmp slt i32 %1069, %1072
  br i1 %1073, label %1074, label %1089

1074:                                             ; preds = %1066
  br i1 %1061, label %1081, label %1075

1075:                                             ; preds = %1074
  %1076 = getelementptr inbounds i32, ptr %7, i64 %1067
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %6, i64 %1067
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = add nsw i32 %1079, %1077
  store i32 %1080, ptr %1078, align 4, !tbaa !5
  br label %1099

1081:                                             ; preds = %1057, %1074
  %1082 = phi i32 [ %1069, %1074 ], [ %1058, %1057 ]
  %1083 = phi ptr [ %1068, %1074 ], [ %4, %1057 ]
  %1084 = phi i64 [ %1067, %1074 ], [ 0, %1057 ]
  %1085 = add nsw i32 %1082, 1
  store i32 %1085, ptr %1083, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %7, i64 %1084
  %1087 = load i32, ptr %1086, align 4, !tbaa !5
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1084
  br label %1099

1089:                                             ; preds = %1066
  %1090 = icmp eq i32 %1069, %1072
  br i1 %1090, label %1091, label %1097

1091:                                             ; preds = %1089
  store i32 0, ptr %1068, align 4, !tbaa !5
  %1092 = getelementptr inbounds i32, ptr %8, i64 %1067
  %1093 = load i32, ptr %1092, align 4, !tbaa !5
  %1094 = getelementptr inbounds i32, ptr %6, i64 %1067
  store i32 %1093, ptr %1094, align 4, !tbaa !5
  %1095 = add nuw nsw i64 %1067, 1
  %1096 = icmp eq i64 %1095, %970
  br i1 %1096, label %1104, label %1066, !llvm.loop !417

1097:                                             ; preds = %1062, %1089
  %1098 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

1099:                                             ; preds = %1075, %1081
  %1100 = phi ptr [ %1088, %1081 ], [ %1068, %1075 ]
  %1101 = phi i32 [ %1087, %1081 ], [ 1, %1075 ]
  %1102 = load i32, ptr %1100, align 4, !tbaa !5
  %1103 = add nsw i32 %1102, %1101
  store i32 %1103, ptr %1100, align 4, !tbaa !5
  br label %1104

1104:                                             ; preds = %1091, %1099, %1064, %1046
  %1105 = icmp eq i32 %1056, %5
  br i1 %1105, label %3105, label %973, !llvm.loop !418

1106:                                             ; preds = %956, %1242
  %1107 = phi i32 [ 0, %956 ], [ %1191, %1242 ]
  %1108 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %957, label %1109, label %1178

1109:                                             ; preds = %1106, %1168
  %1110 = phi i32 [ %1177, %1168 ], [ 0, %1106 ]
  %1111 = phi i64 [ %1119, %1168 ], [ %961, %1106 ]
  %1112 = phi i64 [ %1176, %1168 ], [ %960, %1106 ]
  %1113 = phi i32 [ %1174, %1168 ], [ %1108, %1106 ]
  %1114 = sub i32 %959, %1110
  %1115 = tail call i32 @llvm.smin.i32(i32 %1114, i32 0)
  %1116 = sub i32 %1114, %1115
  %1117 = zext i32 %1116 to i64
  %1118 = add nuw nsw i64 %1117, 1
  %1119 = add nsw i64 %1111, -1
  %1120 = icmp ult i32 %1116, 31
  br i1 %1120, label %1156, label %1121

1121:                                             ; preds = %1109
  %1122 = and i64 %1118, 8589934560
  %1123 = sub i64 %1112, %1122
  br label %1124

1124:                                             ; preds = %1124, %1121
  %1125 = phi i64 [ 0, %1121 ], [ %1148, %1124 ]
  %1126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1144, %1124 ]
  %1127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1145, %1124 ]
  %1128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1146, %1124 ]
  %1129 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1121 ], [ %1147, %1124 ]
  %1130 = sub i64 %1112, %1125
  %1131 = getelementptr inbounds i32, ptr %11, i64 %1130
  %1132 = getelementptr inbounds i32, ptr %1131, i64 -7
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !5
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = getelementptr inbounds i32, ptr %1131, i64 -15
  %1136 = load <8 x i32>, ptr %1135, align 4, !tbaa !5
  %1137 = shufflevector <8 x i32> %1136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1138 = getelementptr inbounds i32, ptr %1131, i64 -23
  %1139 = load <8 x i32>, ptr %1138, align 4, !tbaa !5
  %1140 = shufflevector <8 x i32> %1139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1141 = getelementptr inbounds i32, ptr %1131, i64 -31
  %1142 = load <8 x i32>, ptr %1141, align 4, !tbaa !5
  %1143 = shufflevector <8 x i32> %1142, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1144 = mul <8 x i32> %1134, %1126
  %1145 = mul <8 x i32> %1137, %1127
  %1146 = mul <8 x i32> %1140, %1128
  %1147 = mul <8 x i32> %1143, %1129
  %1148 = add nuw i64 %1125, 32
  %1149 = icmp eq i64 %1148, %1122
  br i1 %1149, label %1150, label %1124, !llvm.loop !419

1150:                                             ; preds = %1124
  %1151 = mul <8 x i32> %1145, %1144
  %1152 = mul <8 x i32> %1146, %1151
  %1153 = mul <8 x i32> %1147, %1152
  %1154 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1153)
  %1155 = icmp eq i64 %1118, %1122
  br i1 %1155, label %1168, label %1156

1156:                                             ; preds = %1109, %1150
  %1157 = phi i64 [ %1112, %1109 ], [ %1123, %1150 ]
  %1158 = phi i32 [ 1, %1109 ], [ %1154, %1150 ]
  br label %1159

1159:                                             ; preds = %1156, %1159
  %1160 = phi i64 [ %1165, %1159 ], [ %1157, %1156 ]
  %1161 = phi i32 [ %1164, %1159 ], [ %1158, %1156 ]
  %1162 = getelementptr inbounds i32, ptr %11, i64 %1160
  %1163 = load i32, ptr %1162, align 4, !tbaa !5
  %1164 = mul nsw i32 %1163, %1161
  %1165 = add nsw i64 %1160, -1
  %1166 = trunc i64 %1160 to i32
  %1167 = icmp sgt i32 %1166, 0
  br i1 %1167, label %1159, label %1168, !llvm.loop !420

1168:                                             ; preds = %1159, %1150
  %1169 = phi i32 [ %1154, %1150 ], [ %1164, %1159 ]
  %1170 = and i64 %1119, 4294967295
  %1171 = getelementptr inbounds i32, ptr %6, i64 %1170
  %1172 = load i32, ptr %1171, align 4, !tbaa !5
  %1173 = mul nsw i32 %1172, %1169
  %1174 = add nsw i32 %1173, %1113
  %1175 = icmp sgt i64 %1111, 2
  %1176 = add nsw i64 %1112, -1
  %1177 = add i32 %1110, 1
  br i1 %1175, label %1109, label %1178, !llvm.loop !421

1178:                                             ; preds = %1168, %1106
  %1179 = phi i32 [ %1108, %1106 ], [ %1174, %1168 ]
  %1180 = icmp slt i32 %1179, %5
  br i1 %1180, label %1183, label %1181

1181:                                             ; preds = %1178
  %1182 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

1183:                                             ; preds = %1178
  %1184 = sext i32 %1179 to i64
  %1185 = getelementptr inbounds i8, ptr %629, i64 %1184
  %1186 = load i8, ptr %1185, align 1, !tbaa !11
  %1187 = load i32, ptr %631, align 4, !tbaa !5
  %1188 = tail call i8 @llvm.abs.i8(i8 %1186, i1 false)
  %1189 = zext i8 %1188 to i32
  %1190 = tail call i32 @llvm.smax.i32(i32 %1187, i32 %1189)
  store i32 %1190, ptr %631, align 4, !tbaa !5
  %1191 = add nuw nsw i32 %1107, 1
  br i1 %958, label %1192, label %1242

1192:                                             ; preds = %1183
  %1193 = load i32, ptr %4, align 4, !tbaa !5
  %1194 = load i32, ptr %12, align 4, !tbaa !5
  %1195 = add nsw i32 %1194, -1
  %1196 = icmp slt i32 %1193, %1195
  br i1 %1196, label %1219, label %1197

1197:                                             ; preds = %1192
  %1198 = icmp eq i32 %1193, %1195
  br i1 %1198, label %1199, label %1235

1199:                                             ; preds = %1197
  store i32 0, ptr %4, align 4, !tbaa !5
  %1200 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1200, ptr %6, align 4, !tbaa !5
  br i1 %963, label %1242, label %1201

1201:                                             ; preds = %1199, %1229
  %1202 = phi i64 [ %1233, %1229 ], [ 1, %1199 ]
  %1203 = getelementptr inbounds i32, ptr %4, i64 %1202
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %12, i64 %1202
  %1206 = load i32, ptr %1205, align 4, !tbaa !5
  %1207 = add nsw i32 %1206, -1
  %1208 = icmp slt i32 %1204, %1207
  br i1 %1208, label %1209, label %1227

1209:                                             ; preds = %1201
  br i1 %1196, label %1219, label %1210

1210:                                             ; preds = %1209
  %1211 = shl i64 %1202, 32
  %1212 = add i64 %1211, -4294967296
  %1213 = ashr exact i64 %1212, 32
  %1214 = getelementptr inbounds i32, ptr %7, i64 %1213
  %1215 = load i32, ptr %1214, align 4, !tbaa !5
  %1216 = getelementptr inbounds i32, ptr %6, i64 %1202
  %1217 = load i32, ptr %1216, align 4, !tbaa !5
  %1218 = add nsw i32 %1217, %1215
  store i32 %1218, ptr %1216, align 4, !tbaa !5
  br label %1237

1219:                                             ; preds = %1192, %1209
  %1220 = phi i32 [ %1204, %1209 ], [ %1193, %1192 ]
  %1221 = phi ptr [ %1203, %1209 ], [ %4, %1192 ]
  %1222 = phi i64 [ %1202, %1209 ], [ 0, %1192 ]
  %1223 = add nsw i32 %1220, 1
  store i32 %1223, ptr %1221, align 4, !tbaa !5
  %1224 = getelementptr inbounds i32, ptr %7, i64 %1222
  %1225 = load i32, ptr %1224, align 4, !tbaa !5
  %1226 = getelementptr inbounds i32, ptr %6, i64 %1222
  br label %1237

1227:                                             ; preds = %1201
  %1228 = icmp eq i32 %1204, %1207
  br i1 %1228, label %1229, label %1235

1229:                                             ; preds = %1227
  store i32 0, ptr %1203, align 4, !tbaa !5
  %1230 = getelementptr inbounds i32, ptr %8, i64 %1202
  %1231 = load i32, ptr %1230, align 4, !tbaa !5
  %1232 = getelementptr inbounds i32, ptr %6, i64 %1202
  store i32 %1231, ptr %1232, align 4, !tbaa !5
  %1233 = add nuw nsw i64 %1202, 1
  %1234 = icmp eq i64 %1233, %961
  br i1 %1234, label %1242, label %1201, !llvm.loop !422

1235:                                             ; preds = %1197, %1227
  %1236 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

1237:                                             ; preds = %1210, %1219
  %1238 = phi ptr [ %1226, %1219 ], [ %1203, %1210 ]
  %1239 = phi i32 [ %1225, %1219 ], [ 1, %1210 ]
  %1240 = load i32, ptr %1238, align 4, !tbaa !5
  %1241 = add nsw i32 %1240, %1239
  store i32 %1241, ptr %1238, align 4, !tbaa !5
  br label %1242

1242:                                             ; preds = %1229, %1237, %1199, %1183
  %1243 = icmp eq i32 %1191, %5
  br i1 %1243, label %3105, label %1106, !llvm.loop !423

1244:                                             ; preds = %641
  %1245 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 686, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3105

1246:                                             ; preds = %18
  %1247 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1248 = load ptr, ptr %1247, align 8, !tbaa !9
  %1249 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1250 = load ptr, ptr %1249, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1250, align 8, !tbaa !18
  %1251 = icmp eq i32 %13, 0
  br i1 %1251, label %1252, label %1260

1252:                                             ; preds = %1246
  %1253 = load i8, ptr %1248, align 1, !tbaa !11
  %1254 = sitofp i8 %1253 to double
  %1255 = icmp slt i8 %1253, 0
  %1256 = fneg fast double %1254
  %1257 = select fast i1 %1255, double %1256, double %1254
  %1258 = fcmp fast ole double %1257, 0.000000e+00
  %1259 = select fast i1 %1258, double 0.000000e+00, double %1257
  store double %1259, ptr %1250, align 8, !tbaa !18
  br label %3105

1260:                                             ; preds = %1246
  switch i32 %1, label %1862 [
    i32 1, label %1261
    i32 0, label %1564
  ]

1261:                                             ; preds = %1260
  %1262 = getelementptr inbounds i32, ptr %3, i64 %19
  %1263 = load i32, ptr %1262, align 4, !tbaa !5
  %1264 = icmp eq i32 %1263, 0
  %1265 = icmp sgt i32 %5, 0
  br i1 %1264, label %1275, label %1266

1266:                                             ; preds = %1261
  br i1 %1265, label %1267, label %3105

1267:                                             ; preds = %1266
  %1268 = icmp sgt i32 %13, 1
  %1269 = icmp sgt i32 %13, 0
  %1270 = add i32 %13, -2
  %1271 = zext i32 %1270 to i64
  %1272 = zext i32 %13 to i64
  %1273 = add nuw i32 %5, 1
  %1274 = icmp eq i32 %13, 1
  br label %1424

1275:                                             ; preds = %1261
  br i1 %1265, label %1276, label %3105

1276:                                             ; preds = %1275
  %1277 = icmp sgt i32 %13, 1
  %1278 = icmp sgt i32 %13, 0
  %1279 = add i32 %13, -2
  %1280 = zext i32 %1279 to i64
  %1281 = zext i32 %13 to i64
  %1282 = add nuw i32 %5, 1
  %1283 = icmp eq i32 %13, 1
  br label %1284

1284:                                             ; preds = %1276, %1422
  %1285 = phi double [ 0.000000e+00, %1276 ], [ %1372, %1422 ]
  %1286 = phi i32 [ 0, %1276 ], [ %1374, %1422 ]
  %1287 = phi double [ 0.000000e+00, %1276 ], [ %1373, %1422 ]
  %1288 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1277, label %1289, label %1358

1289:                                             ; preds = %1284, %1348
  %1290 = phi i32 [ %1357, %1348 ], [ 0, %1284 ]
  %1291 = phi i64 [ %1299, %1348 ], [ %1281, %1284 ]
  %1292 = phi i64 [ %1356, %1348 ], [ %1280, %1284 ]
  %1293 = phi i32 [ %1354, %1348 ], [ %1288, %1284 ]
  %1294 = sub i32 %1279, %1290
  %1295 = tail call i32 @llvm.smin.i32(i32 %1294, i32 0)
  %1296 = sub i32 %1294, %1295
  %1297 = zext i32 %1296 to i64
  %1298 = add nuw nsw i64 %1297, 1
  %1299 = add nsw i64 %1291, -1
  %1300 = icmp ult i32 %1296, 31
  br i1 %1300, label %1336, label %1301

1301:                                             ; preds = %1289
  %1302 = and i64 %1298, 8589934560
  %1303 = sub i64 %1292, %1302
  br label %1304

1304:                                             ; preds = %1304, %1301
  %1305 = phi i64 [ 0, %1301 ], [ %1328, %1304 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1324, %1304 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1325, %1304 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1326, %1304 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1327, %1304 ]
  %1310 = sub i64 %1292, %1305
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1310
  %1312 = getelementptr inbounds i32, ptr %1311, i64 -7
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !5
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1311, i64 -15
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !5
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1311, i64 -23
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !5
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = getelementptr inbounds i32, ptr %1311, i64 -31
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = mul <8 x i32> %1314, %1306
  %1325 = mul <8 x i32> %1317, %1307
  %1326 = mul <8 x i32> %1320, %1308
  %1327 = mul <8 x i32> %1323, %1309
  %1328 = add nuw i64 %1305, 32
  %1329 = icmp eq i64 %1328, %1302
  br i1 %1329, label %1330, label %1304, !llvm.loop !424

1330:                                             ; preds = %1304
  %1331 = mul <8 x i32> %1325, %1324
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1333)
  %1335 = icmp eq i64 %1298, %1302
  br i1 %1335, label %1348, label %1336

1336:                                             ; preds = %1289, %1330
  %1337 = phi i64 [ %1292, %1289 ], [ %1303, %1330 ]
  %1338 = phi i32 [ 1, %1289 ], [ %1334, %1330 ]
  br label %1339

1339:                                             ; preds = %1336, %1339
  %1340 = phi i64 [ %1345, %1339 ], [ %1337, %1336 ]
  %1341 = phi i32 [ %1344, %1339 ], [ %1338, %1336 ]
  %1342 = getelementptr inbounds i32, ptr %9, i64 %1340
  %1343 = load i32, ptr %1342, align 4, !tbaa !5
  %1344 = mul nsw i32 %1343, %1341
  %1345 = add nsw i64 %1340, -1
  %1346 = trunc i64 %1340 to i32
  %1347 = icmp sgt i32 %1346, 0
  br i1 %1347, label %1339, label %1348, !llvm.loop !425

1348:                                             ; preds = %1339, %1330
  %1349 = phi i32 [ %1334, %1330 ], [ %1344, %1339 ]
  %1350 = and i64 %1299, 4294967295
  %1351 = getelementptr inbounds i32, ptr %6, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1349
  %1354 = add nsw i32 %1353, %1293
  %1355 = icmp sgt i64 %1291, 2
  %1356 = add nsw i64 %1292, -1
  %1357 = add i32 %1290, 1
  br i1 %1355, label %1289, label %1358, !llvm.loop !426

1358:                                             ; preds = %1348, %1284
  %1359 = phi i32 [ %1288, %1284 ], [ %1354, %1348 ]
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds double, ptr %2, i64 %1360
  %1362 = load double, ptr %1361, align 8, !tbaa !18
  %1363 = getelementptr inbounds i8, ptr %1248, i64 %1360
  %1364 = load i8, ptr %1363, align 1, !tbaa !11
  %1365 = sitofp i8 %1364 to double
  %1366 = fmul fast double %1362, %1365
  %1367 = fcmp fast uge double %1366, 0.000000e+00
  %1368 = fneg fast double %1366
  %1369 = tail call fast double @llvm.fabs.f64(double %1366)
  %1370 = fcmp fast oge double %1285, %1369
  %1371 = select nnan ninf i1 %1367, double %1366, double %1368
  %1372 = select i1 %1370, double %1285, double %1371
  store double %1372, ptr %1250, align 8, !tbaa !18
  %1373 = fadd fast double %1362, %1287
  %1374 = add nuw nsw i32 %1286, 1
  br i1 %1278, label %1375, label %1422

1375:                                             ; preds = %1358
  %1376 = load i32, ptr %4, align 4, !tbaa !5
  %1377 = load i32, ptr %12, align 4, !tbaa !5
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1376, %1378
  br i1 %1379, label %1399, label %1380

1380:                                             ; preds = %1375
  %1381 = icmp eq i32 %1376, %1378
  br i1 %1381, label %1382, label %1415

1382:                                             ; preds = %1380
  store i32 0, ptr %4, align 4, !tbaa !5
  %1383 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1383, ptr %6, align 4, !tbaa !5
  br i1 %1283, label %1422, label %1384

1384:                                             ; preds = %1382, %1409
  %1385 = phi i64 [ %1413, %1409 ], [ 1, %1382 ]
  %1386 = getelementptr inbounds i32, ptr %4, i64 %1385
  %1387 = load i32, ptr %1386, align 4, !tbaa !5
  %1388 = getelementptr inbounds i32, ptr %12, i64 %1385
  %1389 = load i32, ptr %1388, align 4, !tbaa !5
  %1390 = add nsw i32 %1389, -1
  %1391 = icmp slt i32 %1387, %1390
  br i1 %1391, label %1392, label %1407

1392:                                             ; preds = %1384
  br i1 %1379, label %1399, label %1393

1393:                                             ; preds = %1392
  %1394 = getelementptr inbounds i32, ptr %7, i64 %1385
  %1395 = load i32, ptr %1394, align 4, !tbaa !5
  %1396 = getelementptr inbounds i32, ptr %6, i64 %1385
  %1397 = load i32, ptr %1396, align 4, !tbaa !5
  %1398 = add nsw i32 %1397, %1395
  store i32 %1398, ptr %1396, align 4, !tbaa !5
  br label %1417

1399:                                             ; preds = %1375, %1392
  %1400 = phi i32 [ %1387, %1392 ], [ %1376, %1375 ]
  %1401 = phi ptr [ %1386, %1392 ], [ %4, %1375 ]
  %1402 = phi i64 [ %1385, %1392 ], [ 0, %1375 ]
  %1403 = add nsw i32 %1400, 1
  store i32 %1403, ptr %1401, align 4, !tbaa !5
  %1404 = getelementptr inbounds i32, ptr %7, i64 %1402
  %1405 = load i32, ptr %1404, align 4, !tbaa !5
  %1406 = getelementptr inbounds i32, ptr %6, i64 %1402
  br label %1417

1407:                                             ; preds = %1384
  %1408 = icmp eq i32 %1387, %1390
  br i1 %1408, label %1409, label %1415

1409:                                             ; preds = %1407
  store i32 0, ptr %1386, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %8, i64 %1385
  %1411 = load i32, ptr %1410, align 4, !tbaa !5
  %1412 = getelementptr inbounds i32, ptr %6, i64 %1385
  store i32 %1411, ptr %1412, align 4, !tbaa !5
  %1413 = add nuw nsw i64 %1385, 1
  %1414 = icmp eq i64 %1413, %1281
  br i1 %1414, label %1422, label %1384, !llvm.loop !427

1415:                                             ; preds = %1380, %1407
  %1416 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

1417:                                             ; preds = %1393, %1399
  %1418 = phi ptr [ %1406, %1399 ], [ %1386, %1393 ]
  %1419 = phi i32 [ %1405, %1399 ], [ 1, %1393 ]
  %1420 = load i32, ptr %1418, align 4, !tbaa !5
  %1421 = add nsw i32 %1420, %1419
  store i32 %1421, ptr %1418, align 4, !tbaa !5
  br label %1422

1422:                                             ; preds = %1409, %1417, %1382, %1358
  %1423 = icmp eq i32 %1374, %5
  br i1 %1423, label %3105, label %1284, !llvm.loop !428

1424:                                             ; preds = %1267, %1562
  %1425 = phi double [ 0.000000e+00, %1267 ], [ %1510, %1562 ]
  %1426 = phi i32 [ 0, %1267 ], [ %1511, %1562 ]
  %1427 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1268, label %1428, label %1497

1428:                                             ; preds = %1424, %1487
  %1429 = phi i32 [ %1496, %1487 ], [ 0, %1424 ]
  %1430 = phi i64 [ %1438, %1487 ], [ %1272, %1424 ]
  %1431 = phi i64 [ %1495, %1487 ], [ %1271, %1424 ]
  %1432 = phi i32 [ %1493, %1487 ], [ %1427, %1424 ]
  %1433 = sub i32 %1270, %1429
  %1434 = tail call i32 @llvm.smin.i32(i32 %1433, i32 0)
  %1435 = sub i32 %1433, %1434
  %1436 = zext i32 %1435 to i64
  %1437 = add nuw nsw i64 %1436, 1
  %1438 = add nsw i64 %1430, -1
  %1439 = icmp ult i32 %1435, 31
  br i1 %1439, label %1475, label %1440

1440:                                             ; preds = %1428
  %1441 = and i64 %1437, 8589934560
  %1442 = sub i64 %1431, %1441
  br label %1443

1443:                                             ; preds = %1443, %1440
  %1444 = phi i64 [ 0, %1440 ], [ %1467, %1443 ]
  %1445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1440 ], [ %1463, %1443 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1440 ], [ %1464, %1443 ]
  %1447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1440 ], [ %1465, %1443 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1440 ], [ %1466, %1443 ]
  %1449 = sub i64 %1431, %1444
  %1450 = getelementptr inbounds i32, ptr %11, i64 %1449
  %1451 = getelementptr inbounds i32, ptr %1450, i64 -7
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !5
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = getelementptr inbounds i32, ptr %1450, i64 -15
  %1455 = load <8 x i32>, ptr %1454, align 4, !tbaa !5
  %1456 = shufflevector <8 x i32> %1455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1457 = getelementptr inbounds i32, ptr %1450, i64 -23
  %1458 = load <8 x i32>, ptr %1457, align 4, !tbaa !5
  %1459 = shufflevector <8 x i32> %1458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1460 = getelementptr inbounds i32, ptr %1450, i64 -31
  %1461 = load <8 x i32>, ptr %1460, align 4, !tbaa !5
  %1462 = shufflevector <8 x i32> %1461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1463 = mul <8 x i32> %1453, %1445
  %1464 = mul <8 x i32> %1456, %1446
  %1465 = mul <8 x i32> %1459, %1447
  %1466 = mul <8 x i32> %1462, %1448
  %1467 = add nuw i64 %1444, 32
  %1468 = icmp eq i64 %1467, %1441
  br i1 %1468, label %1469, label %1443, !llvm.loop !429

1469:                                             ; preds = %1443
  %1470 = mul <8 x i32> %1464, %1463
  %1471 = mul <8 x i32> %1465, %1470
  %1472 = mul <8 x i32> %1466, %1471
  %1473 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1472)
  %1474 = icmp eq i64 %1437, %1441
  br i1 %1474, label %1487, label %1475

1475:                                             ; preds = %1428, %1469
  %1476 = phi i64 [ %1431, %1428 ], [ %1442, %1469 ]
  %1477 = phi i32 [ 1, %1428 ], [ %1473, %1469 ]
  br label %1478

1478:                                             ; preds = %1475, %1478
  %1479 = phi i64 [ %1484, %1478 ], [ %1476, %1475 ]
  %1480 = phi i32 [ %1483, %1478 ], [ %1477, %1475 ]
  %1481 = getelementptr inbounds i32, ptr %11, i64 %1479
  %1482 = load i32, ptr %1481, align 4, !tbaa !5
  %1483 = mul nsw i32 %1482, %1480
  %1484 = add nsw i64 %1479, -1
  %1485 = trunc i64 %1479 to i32
  %1486 = icmp sgt i32 %1485, 0
  br i1 %1486, label %1478, label %1487, !llvm.loop !430

1487:                                             ; preds = %1478, %1469
  %1488 = phi i32 [ %1473, %1469 ], [ %1483, %1478 ]
  %1489 = and i64 %1438, 4294967295
  %1490 = getelementptr inbounds i32, ptr %6, i64 %1489
  %1491 = load i32, ptr %1490, align 4, !tbaa !5
  %1492 = mul nsw i32 %1491, %1488
  %1493 = add nsw i32 %1492, %1432
  %1494 = icmp sgt i64 %1430, 2
  %1495 = add nsw i64 %1431, -1
  %1496 = add i32 %1429, 1
  br i1 %1494, label %1428, label %1497, !llvm.loop !431

1497:                                             ; preds = %1487, %1424
  %1498 = phi i32 [ %1427, %1424 ], [ %1493, %1487 ]
  %1499 = icmp slt i32 %1498, %5
  br i1 %1499, label %1502, label %1500

1500:                                             ; preds = %1497
  %1501 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

1502:                                             ; preds = %1497
  %1503 = sext i32 %1498 to i64
  %1504 = getelementptr inbounds i8, ptr %1248, i64 %1503
  %1505 = load i8, ptr %1504, align 1, !tbaa !11
  %1506 = sitofp i8 %1505 to double
  %1507 = icmp slt i8 %1505, 0
  %1508 = fneg fast double %1506
  %1509 = select i1 %1507, double %1508, double %1506
  %1510 = tail call fast double @llvm.maxnum.f64(double %1425, double %1509)
  store double %1510, ptr %1250, align 8, !tbaa !18
  %1511 = add nuw nsw i32 %1426, 1
  br i1 %1269, label %1512, label %1562

1512:                                             ; preds = %1502
  %1513 = load i32, ptr %4, align 4, !tbaa !5
  %1514 = load i32, ptr %12, align 4, !tbaa !5
  %1515 = add nsw i32 %1514, -1
  %1516 = icmp slt i32 %1513, %1515
  br i1 %1516, label %1539, label %1517

1517:                                             ; preds = %1512
  %1518 = icmp eq i32 %1513, %1515
  br i1 %1518, label %1519, label %1555

1519:                                             ; preds = %1517
  store i32 0, ptr %4, align 4, !tbaa !5
  %1520 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1520, ptr %6, align 4, !tbaa !5
  br i1 %1274, label %1562, label %1521

1521:                                             ; preds = %1519, %1549
  %1522 = phi i64 [ %1553, %1549 ], [ 1, %1519 ]
  %1523 = getelementptr inbounds i32, ptr %4, i64 %1522
  %1524 = load i32, ptr %1523, align 4, !tbaa !5
  %1525 = getelementptr inbounds i32, ptr %12, i64 %1522
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = add nsw i32 %1526, -1
  %1528 = icmp slt i32 %1524, %1527
  br i1 %1528, label %1529, label %1547

1529:                                             ; preds = %1521
  br i1 %1516, label %1539, label %1530

1530:                                             ; preds = %1529
  %1531 = shl i64 %1522, 32
  %1532 = add i64 %1531, -4294967296
  %1533 = ashr exact i64 %1532, 32
  %1534 = getelementptr inbounds i32, ptr %7, i64 %1533
  %1535 = load i32, ptr %1534, align 4, !tbaa !5
  %1536 = getelementptr inbounds i32, ptr %6, i64 %1522
  %1537 = load i32, ptr %1536, align 4, !tbaa !5
  %1538 = add nsw i32 %1537, %1535
  store i32 %1538, ptr %1536, align 4, !tbaa !5
  br label %1557

1539:                                             ; preds = %1512, %1529
  %1540 = phi i32 [ %1524, %1529 ], [ %1513, %1512 ]
  %1541 = phi ptr [ %1523, %1529 ], [ %4, %1512 ]
  %1542 = phi i64 [ %1522, %1529 ], [ 0, %1512 ]
  %1543 = add nsw i32 %1540, 1
  store i32 %1543, ptr %1541, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %7, i64 %1542
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = getelementptr inbounds i32, ptr %6, i64 %1542
  br label %1557

1547:                                             ; preds = %1521
  %1548 = icmp eq i32 %1524, %1527
  br i1 %1548, label %1549, label %1555

1549:                                             ; preds = %1547
  store i32 0, ptr %1523, align 4, !tbaa !5
  %1550 = getelementptr inbounds i32, ptr %8, i64 %1522
  %1551 = load i32, ptr %1550, align 4, !tbaa !5
  %1552 = getelementptr inbounds i32, ptr %6, i64 %1522
  store i32 %1551, ptr %1552, align 4, !tbaa !5
  %1553 = add nuw nsw i64 %1522, 1
  %1554 = icmp eq i64 %1553, %1272
  br i1 %1554, label %1562, label %1521, !llvm.loop !432

1555:                                             ; preds = %1517, %1547
  %1556 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

1557:                                             ; preds = %1530, %1539
  %1558 = phi ptr [ %1546, %1539 ], [ %1523, %1530 ]
  %1559 = phi i32 [ %1545, %1539 ], [ 1, %1530 ]
  %1560 = load i32, ptr %1558, align 4, !tbaa !5
  %1561 = add nsw i32 %1560, %1559
  store i32 %1561, ptr %1558, align 4, !tbaa !5
  br label %1562

1562:                                             ; preds = %1549, %1557, %1519, %1502
  %1563 = icmp eq i32 %1511, %5
  br i1 %1563, label %3105, label %1424, !llvm.loop !433

1564:                                             ; preds = %1260
  %1565 = getelementptr inbounds i32, ptr %3, i64 %19
  %1566 = load i32, ptr %1565, align 4, !tbaa !5
  %1567 = icmp eq i32 %1566, 0
  %1568 = icmp sgt i32 %5, 0
  br i1 %1567, label %1578, label %1569

1569:                                             ; preds = %1564
  br i1 %1568, label %1570, label %3105

1570:                                             ; preds = %1569
  %1571 = icmp sgt i32 %13, 1
  %1572 = icmp sgt i32 %13, 0
  %1573 = add i32 %13, -2
  %1574 = zext i32 %1573 to i64
  %1575 = zext i32 %13 to i64
  %1576 = add nuw i32 %5, 1
  %1577 = icmp eq i32 %13, 1
  br label %1722

1578:                                             ; preds = %1564
  br i1 %1568, label %1579, label %3105

1579:                                             ; preds = %1578
  %1580 = icmp sgt i32 %13, 1
  %1581 = icmp sgt i32 %13, 0
  %1582 = add i32 %13, -2
  %1583 = zext i32 %1582 to i64
  %1584 = zext i32 %13 to i64
  %1585 = add nuw i32 %5, 1
  %1586 = icmp eq i32 %13, 1
  br label %1587

1587:                                             ; preds = %1579, %1720
  %1588 = phi double [ 0.000000e+00, %1579 ], [ %1670, %1720 ]
  %1589 = phi i32 [ 0, %1579 ], [ %1672, %1720 ]
  %1590 = phi double [ 0.000000e+00, %1579 ], [ %1671, %1720 ]
  %1591 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1580, label %1592, label %1661

1592:                                             ; preds = %1587, %1651
  %1593 = phi i32 [ %1660, %1651 ], [ 0, %1587 ]
  %1594 = phi i64 [ %1602, %1651 ], [ %1584, %1587 ]
  %1595 = phi i64 [ %1659, %1651 ], [ %1583, %1587 ]
  %1596 = phi i32 [ %1657, %1651 ], [ %1591, %1587 ]
  %1597 = sub i32 %1582, %1593
  %1598 = tail call i32 @llvm.smin.i32(i32 %1597, i32 0)
  %1599 = sub i32 %1597, %1598
  %1600 = zext i32 %1599 to i64
  %1601 = add nuw nsw i64 %1600, 1
  %1602 = add nsw i64 %1594, -1
  %1603 = icmp ult i32 %1599, 31
  br i1 %1603, label %1639, label %1604

1604:                                             ; preds = %1592
  %1605 = and i64 %1601, 8589934560
  %1606 = sub i64 %1595, %1605
  br label %1607

1607:                                             ; preds = %1607, %1604
  %1608 = phi i64 [ 0, %1604 ], [ %1631, %1607 ]
  %1609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1604 ], [ %1627, %1607 ]
  %1610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1604 ], [ %1628, %1607 ]
  %1611 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1604 ], [ %1629, %1607 ]
  %1612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1604 ], [ %1630, %1607 ]
  %1613 = sub i64 %1595, %1608
  %1614 = getelementptr inbounds i32, ptr %9, i64 %1613
  %1615 = getelementptr inbounds i32, ptr %1614, i64 -7
  %1616 = load <8 x i32>, ptr %1615, align 4, !tbaa !5
  %1617 = shufflevector <8 x i32> %1616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1618 = getelementptr inbounds i32, ptr %1614, i64 -15
  %1619 = load <8 x i32>, ptr %1618, align 4, !tbaa !5
  %1620 = shufflevector <8 x i32> %1619, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1621 = getelementptr inbounds i32, ptr %1614, i64 -23
  %1622 = load <8 x i32>, ptr %1621, align 4, !tbaa !5
  %1623 = shufflevector <8 x i32> %1622, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1624 = getelementptr inbounds i32, ptr %1614, i64 -31
  %1625 = load <8 x i32>, ptr %1624, align 4, !tbaa !5
  %1626 = shufflevector <8 x i32> %1625, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1627 = mul <8 x i32> %1617, %1609
  %1628 = mul <8 x i32> %1620, %1610
  %1629 = mul <8 x i32> %1623, %1611
  %1630 = mul <8 x i32> %1626, %1612
  %1631 = add nuw i64 %1608, 32
  %1632 = icmp eq i64 %1631, %1605
  br i1 %1632, label %1633, label %1607, !llvm.loop !434

1633:                                             ; preds = %1607
  %1634 = mul <8 x i32> %1628, %1627
  %1635 = mul <8 x i32> %1629, %1634
  %1636 = mul <8 x i32> %1630, %1635
  %1637 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1636)
  %1638 = icmp eq i64 %1601, %1605
  br i1 %1638, label %1651, label %1639

1639:                                             ; preds = %1592, %1633
  %1640 = phi i64 [ %1595, %1592 ], [ %1606, %1633 ]
  %1641 = phi i32 [ 1, %1592 ], [ %1637, %1633 ]
  br label %1642

1642:                                             ; preds = %1639, %1642
  %1643 = phi i64 [ %1648, %1642 ], [ %1640, %1639 ]
  %1644 = phi i32 [ %1647, %1642 ], [ %1641, %1639 ]
  %1645 = getelementptr inbounds i32, ptr %9, i64 %1643
  %1646 = load i32, ptr %1645, align 4, !tbaa !5
  %1647 = mul nsw i32 %1646, %1644
  %1648 = add nsw i64 %1643, -1
  %1649 = trunc i64 %1643 to i32
  %1650 = icmp sgt i32 %1649, 0
  br i1 %1650, label %1642, label %1651, !llvm.loop !435

1651:                                             ; preds = %1642, %1633
  %1652 = phi i32 [ %1637, %1633 ], [ %1647, %1642 ]
  %1653 = and i64 %1602, 4294967295
  %1654 = getelementptr inbounds i32, ptr %6, i64 %1653
  %1655 = load i32, ptr %1654, align 4, !tbaa !5
  %1656 = mul nsw i32 %1655, %1652
  %1657 = add nsw i32 %1656, %1596
  %1658 = icmp sgt i64 %1594, 2
  %1659 = add nsw i64 %1595, -1
  %1660 = add i32 %1593, 1
  br i1 %1658, label %1592, label %1661, !llvm.loop !436

1661:                                             ; preds = %1651, %1587
  %1662 = phi i32 [ %1591, %1587 ], [ %1657, %1651 ]
  %1663 = sext i32 %1662 to i64
  %1664 = getelementptr inbounds i8, ptr %1248, i64 %1663
  %1665 = load i8, ptr %1664, align 1, !tbaa !11
  %1666 = sitofp i8 %1665 to double
  %1667 = icmp slt i8 %1665, 0
  %1668 = fneg fast double %1666
  %1669 = select fast i1 %1667, double %1668, double %1666
  %1670 = tail call fast double @llvm.maxnum.f64(double %1588, double %1669)
  store double %1670, ptr %1250, align 8, !tbaa !18
  %1671 = fadd fast double %1590, 1.000000e+00
  %1672 = add nuw nsw i32 %1589, 1
  br i1 %1581, label %1673, label %1720

1673:                                             ; preds = %1661
  %1674 = load i32, ptr %4, align 4, !tbaa !5
  %1675 = load i32, ptr %12, align 4, !tbaa !5
  %1676 = add nsw i32 %1675, -1
  %1677 = icmp slt i32 %1674, %1676
  br i1 %1677, label %1697, label %1678

1678:                                             ; preds = %1673
  %1679 = icmp eq i32 %1674, %1676
  br i1 %1679, label %1680, label %1713

1680:                                             ; preds = %1678
  store i32 0, ptr %4, align 4, !tbaa !5
  %1681 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1681, ptr %6, align 4, !tbaa !5
  br i1 %1586, label %1720, label %1682

1682:                                             ; preds = %1680, %1707
  %1683 = phi i64 [ %1711, %1707 ], [ 1, %1680 ]
  %1684 = getelementptr inbounds i32, ptr %4, i64 %1683
  %1685 = load i32, ptr %1684, align 4, !tbaa !5
  %1686 = getelementptr inbounds i32, ptr %12, i64 %1683
  %1687 = load i32, ptr %1686, align 4, !tbaa !5
  %1688 = add nsw i32 %1687, -1
  %1689 = icmp slt i32 %1685, %1688
  br i1 %1689, label %1690, label %1705

1690:                                             ; preds = %1682
  br i1 %1677, label %1697, label %1691

1691:                                             ; preds = %1690
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1683
  %1693 = load i32, ptr %1692, align 4, !tbaa !5
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1683
  %1695 = load i32, ptr %1694, align 4, !tbaa !5
  %1696 = add nsw i32 %1695, %1693
  store i32 %1696, ptr %1694, align 4, !tbaa !5
  br label %1715

1697:                                             ; preds = %1673, %1690
  %1698 = phi i32 [ %1685, %1690 ], [ %1674, %1673 ]
  %1699 = phi ptr [ %1684, %1690 ], [ %4, %1673 ]
  %1700 = phi i64 [ %1683, %1690 ], [ 0, %1673 ]
  %1701 = add nsw i32 %1698, 1
  store i32 %1701, ptr %1699, align 4, !tbaa !5
  %1702 = getelementptr inbounds i32, ptr %7, i64 %1700
  %1703 = load i32, ptr %1702, align 4, !tbaa !5
  %1704 = getelementptr inbounds i32, ptr %6, i64 %1700
  br label %1715

1705:                                             ; preds = %1682
  %1706 = icmp eq i32 %1685, %1688
  br i1 %1706, label %1707, label %1713

1707:                                             ; preds = %1705
  store i32 0, ptr %1684, align 4, !tbaa !5
  %1708 = getelementptr inbounds i32, ptr %8, i64 %1683
  %1709 = load i32, ptr %1708, align 4, !tbaa !5
  %1710 = getelementptr inbounds i32, ptr %6, i64 %1683
  store i32 %1709, ptr %1710, align 4, !tbaa !5
  %1711 = add nuw nsw i64 %1683, 1
  %1712 = icmp eq i64 %1711, %1584
  br i1 %1712, label %1720, label %1682, !llvm.loop !437

1713:                                             ; preds = %1678, %1705
  %1714 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

1715:                                             ; preds = %1691, %1697
  %1716 = phi ptr [ %1704, %1697 ], [ %1684, %1691 ]
  %1717 = phi i32 [ %1703, %1697 ], [ 1, %1691 ]
  %1718 = load i32, ptr %1716, align 4, !tbaa !5
  %1719 = add nsw i32 %1718, %1717
  store i32 %1719, ptr %1716, align 4, !tbaa !5
  br label %1720

1720:                                             ; preds = %1707, %1715, %1680, %1661
  %1721 = icmp eq i32 %1672, %5
  br i1 %1721, label %3105, label %1587, !llvm.loop !438

1722:                                             ; preds = %1570, %1860
  %1723 = phi double [ 0.000000e+00, %1570 ], [ %1808, %1860 ]
  %1724 = phi i32 [ 0, %1570 ], [ %1809, %1860 ]
  %1725 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1571, label %1726, label %1795

1726:                                             ; preds = %1722, %1785
  %1727 = phi i32 [ %1794, %1785 ], [ 0, %1722 ]
  %1728 = phi i64 [ %1736, %1785 ], [ %1575, %1722 ]
  %1729 = phi i64 [ %1793, %1785 ], [ %1574, %1722 ]
  %1730 = phi i32 [ %1791, %1785 ], [ %1725, %1722 ]
  %1731 = sub i32 %1573, %1727
  %1732 = tail call i32 @llvm.smin.i32(i32 %1731, i32 0)
  %1733 = sub i32 %1731, %1732
  %1734 = zext i32 %1733 to i64
  %1735 = add nuw nsw i64 %1734, 1
  %1736 = add nsw i64 %1728, -1
  %1737 = icmp ult i32 %1733, 31
  br i1 %1737, label %1773, label %1738

1738:                                             ; preds = %1726
  %1739 = and i64 %1735, 8589934560
  %1740 = sub i64 %1729, %1739
  br label %1741

1741:                                             ; preds = %1741, %1738
  %1742 = phi i64 [ 0, %1738 ], [ %1765, %1741 ]
  %1743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1761, %1741 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1762, %1741 ]
  %1745 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1763, %1741 ]
  %1746 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1738 ], [ %1764, %1741 ]
  %1747 = sub i64 %1729, %1742
  %1748 = getelementptr inbounds i32, ptr %11, i64 %1747
  %1749 = getelementptr inbounds i32, ptr %1748, i64 -7
  %1750 = load <8 x i32>, ptr %1749, align 4, !tbaa !5
  %1751 = shufflevector <8 x i32> %1750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1752 = getelementptr inbounds i32, ptr %1748, i64 -15
  %1753 = load <8 x i32>, ptr %1752, align 4, !tbaa !5
  %1754 = shufflevector <8 x i32> %1753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1755 = getelementptr inbounds i32, ptr %1748, i64 -23
  %1756 = load <8 x i32>, ptr %1755, align 4, !tbaa !5
  %1757 = shufflevector <8 x i32> %1756, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1758 = getelementptr inbounds i32, ptr %1748, i64 -31
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !5
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = mul <8 x i32> %1751, %1743
  %1762 = mul <8 x i32> %1754, %1744
  %1763 = mul <8 x i32> %1757, %1745
  %1764 = mul <8 x i32> %1760, %1746
  %1765 = add nuw i64 %1742, 32
  %1766 = icmp eq i64 %1765, %1739
  br i1 %1766, label %1767, label %1741, !llvm.loop !439

1767:                                             ; preds = %1741
  %1768 = mul <8 x i32> %1762, %1761
  %1769 = mul <8 x i32> %1763, %1768
  %1770 = mul <8 x i32> %1764, %1769
  %1771 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1770)
  %1772 = icmp eq i64 %1735, %1739
  br i1 %1772, label %1785, label %1773

1773:                                             ; preds = %1726, %1767
  %1774 = phi i64 [ %1729, %1726 ], [ %1740, %1767 ]
  %1775 = phi i32 [ 1, %1726 ], [ %1771, %1767 ]
  br label %1776

1776:                                             ; preds = %1773, %1776
  %1777 = phi i64 [ %1782, %1776 ], [ %1774, %1773 ]
  %1778 = phi i32 [ %1781, %1776 ], [ %1775, %1773 ]
  %1779 = getelementptr inbounds i32, ptr %11, i64 %1777
  %1780 = load i32, ptr %1779, align 4, !tbaa !5
  %1781 = mul nsw i32 %1780, %1778
  %1782 = add nsw i64 %1777, -1
  %1783 = trunc i64 %1777 to i32
  %1784 = icmp sgt i32 %1783, 0
  br i1 %1784, label %1776, label %1785, !llvm.loop !440

1785:                                             ; preds = %1776, %1767
  %1786 = phi i32 [ %1771, %1767 ], [ %1781, %1776 ]
  %1787 = and i64 %1736, 4294967295
  %1788 = getelementptr inbounds i32, ptr %6, i64 %1787
  %1789 = load i32, ptr %1788, align 4, !tbaa !5
  %1790 = mul nsw i32 %1789, %1786
  %1791 = add nsw i32 %1790, %1730
  %1792 = icmp sgt i64 %1728, 2
  %1793 = add nsw i64 %1729, -1
  %1794 = add i32 %1727, 1
  br i1 %1792, label %1726, label %1795, !llvm.loop !441

1795:                                             ; preds = %1785, %1722
  %1796 = phi i32 [ %1725, %1722 ], [ %1791, %1785 ]
  %1797 = icmp slt i32 %1796, %5
  br i1 %1797, label %1800, label %1798

1798:                                             ; preds = %1795
  %1799 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

1800:                                             ; preds = %1795
  %1801 = sext i32 %1796 to i64
  %1802 = getelementptr inbounds i8, ptr %1248, i64 %1801
  %1803 = load i8, ptr %1802, align 1, !tbaa !11
  %1804 = sitofp i8 %1803 to double
  %1805 = icmp slt i8 %1803, 0
  %1806 = fneg fast double %1804
  %1807 = select fast i1 %1805, double %1806, double %1804
  %1808 = tail call fast double @llvm.maxnum.f64(double %1723, double %1807)
  store double %1808, ptr %1250, align 8, !tbaa !18
  %1809 = add nuw nsw i32 %1724, 1
  br i1 %1572, label %1810, label %1860

1810:                                             ; preds = %1800
  %1811 = load i32, ptr %4, align 4, !tbaa !5
  %1812 = load i32, ptr %12, align 4, !tbaa !5
  %1813 = add nsw i32 %1812, -1
  %1814 = icmp slt i32 %1811, %1813
  br i1 %1814, label %1837, label %1815

1815:                                             ; preds = %1810
  %1816 = icmp eq i32 %1811, %1813
  br i1 %1816, label %1817, label %1853

1817:                                             ; preds = %1815
  store i32 0, ptr %4, align 4, !tbaa !5
  %1818 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1818, ptr %6, align 4, !tbaa !5
  br i1 %1577, label %1860, label %1819

1819:                                             ; preds = %1817, %1847
  %1820 = phi i64 [ %1851, %1847 ], [ 1, %1817 ]
  %1821 = getelementptr inbounds i32, ptr %4, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !5
  %1823 = getelementptr inbounds i32, ptr %12, i64 %1820
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1822, %1825
  br i1 %1826, label %1827, label %1845

1827:                                             ; preds = %1819
  br i1 %1814, label %1837, label %1828

1828:                                             ; preds = %1827
  %1829 = shl i64 %1820, 32
  %1830 = add i64 %1829, -4294967296
  %1831 = ashr exact i64 %1830, 32
  %1832 = getelementptr inbounds i32, ptr %7, i64 %1831
  %1833 = load i32, ptr %1832, align 4, !tbaa !5
  %1834 = getelementptr inbounds i32, ptr %6, i64 %1820
  %1835 = load i32, ptr %1834, align 4, !tbaa !5
  %1836 = add nsw i32 %1835, %1833
  store i32 %1836, ptr %1834, align 4, !tbaa !5
  br label %1855

1837:                                             ; preds = %1810, %1827
  %1838 = phi i32 [ %1822, %1827 ], [ %1811, %1810 ]
  %1839 = phi ptr [ %1821, %1827 ], [ %4, %1810 ]
  %1840 = phi i64 [ %1820, %1827 ], [ 0, %1810 ]
  %1841 = add nsw i32 %1838, 1
  store i32 %1841, ptr %1839, align 4, !tbaa !5
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1840
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1840
  br label %1855

1845:                                             ; preds = %1819
  %1846 = icmp eq i32 %1822, %1825
  br i1 %1846, label %1847, label %1853

1847:                                             ; preds = %1845
  store i32 0, ptr %1821, align 4, !tbaa !5
  %1848 = getelementptr inbounds i32, ptr %8, i64 %1820
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = getelementptr inbounds i32, ptr %6, i64 %1820
  store i32 %1849, ptr %1850, align 4, !tbaa !5
  %1851 = add nuw nsw i64 %1820, 1
  %1852 = icmp eq i64 %1851, %1575
  br i1 %1852, label %1860, label %1819, !llvm.loop !442

1853:                                             ; preds = %1815, %1845
  %1854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

1855:                                             ; preds = %1828, %1837
  %1856 = phi ptr [ %1844, %1837 ], [ %1821, %1828 ]
  %1857 = phi i32 [ %1843, %1837 ], [ 1, %1828 ]
  %1858 = load i32, ptr %1856, align 4, !tbaa !5
  %1859 = add nsw i32 %1858, %1857
  store i32 %1859, ptr %1856, align 4, !tbaa !5
  br label %1860

1860:                                             ; preds = %1847, %1855, %1817, %1800
  %1861 = icmp eq i32 %1809, %5
  br i1 %1861, label %3105, label %1722, !llvm.loop !443

1862:                                             ; preds = %1260
  %1863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 709, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3105

1864:                                             ; preds = %18
  %1865 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1866 = load ptr, ptr %1865, align 8, !tbaa !9
  %1867 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1868 = load ptr, ptr %1867, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1868, align 4, !tbaa !162
  %1869 = icmp eq i32 %13, 0
  br i1 %1869, label %1870, label %1878

1870:                                             ; preds = %1864
  %1871 = load i8, ptr %1866, align 1, !tbaa !11
  %1872 = sitofp i8 %1871 to float
  %1873 = icmp slt i8 %1871, 0
  %1874 = fneg fast float %1872
  %1875 = select fast i1 %1873, float %1874, float %1872
  %1876 = fcmp fast ole float %1875, 0.000000e+00
  %1877 = select fast i1 %1876, float 0.000000e+00, float %1875
  store float %1877, ptr %1868, align 4, !tbaa !162
  br label %3105

1878:                                             ; preds = %1864
  switch i32 %1, label %2485 [
    i32 1, label %1879
    i32 0, label %2187
  ]

1879:                                             ; preds = %1878
  %1880 = getelementptr inbounds i32, ptr %3, i64 %19
  %1881 = load i32, ptr %1880, align 4, !tbaa !5
  %1882 = icmp eq i32 %1881, 0
  %1883 = icmp sgt i32 %5, 0
  br i1 %1882, label %1893, label %1884

1884:                                             ; preds = %1879
  br i1 %1883, label %1885, label %3105

1885:                                             ; preds = %1884
  %1886 = icmp sgt i32 %13, 1
  %1887 = icmp sgt i32 %13, 0
  %1888 = add i32 %13, -2
  %1889 = zext i32 %1888 to i64
  %1890 = zext i32 %13 to i64
  %1891 = add nuw i32 %5, 1
  %1892 = icmp eq i32 %13, 1
  br label %2044

1893:                                             ; preds = %1879
  br i1 %1883, label %1894, label %3105

1894:                                             ; preds = %1893
  %1895 = icmp sgt i32 %13, 1
  %1896 = icmp sgt i32 %13, 0
  %1897 = add i32 %13, -2
  %1898 = zext i32 %1897 to i64
  %1899 = zext i32 %13 to i64
  %1900 = add nuw i32 %5, 1
  %1901 = icmp eq i32 %13, 1
  br label %1902

1902:                                             ; preds = %1894, %2042
  %1903 = phi float [ 0.000000e+00, %1894 ], [ %1992, %2042 ]
  %1904 = phi i32 [ 0, %1894 ], [ %1994, %2042 ]
  %1905 = phi double [ 0.000000e+00, %1894 ], [ %1993, %2042 ]
  %1906 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1895, label %1907, label %1976

1907:                                             ; preds = %1902, %1966
  %1908 = phi i32 [ %1975, %1966 ], [ 0, %1902 ]
  %1909 = phi i64 [ %1917, %1966 ], [ %1899, %1902 ]
  %1910 = phi i64 [ %1974, %1966 ], [ %1898, %1902 ]
  %1911 = phi i32 [ %1972, %1966 ], [ %1906, %1902 ]
  %1912 = sub i32 %1897, %1908
  %1913 = tail call i32 @llvm.smin.i32(i32 %1912, i32 0)
  %1914 = sub i32 %1912, %1913
  %1915 = zext i32 %1914 to i64
  %1916 = add nuw nsw i64 %1915, 1
  %1917 = add nsw i64 %1909, -1
  %1918 = icmp ult i32 %1914, 31
  br i1 %1918, label %1954, label %1919

1919:                                             ; preds = %1907
  %1920 = and i64 %1916, 8589934560
  %1921 = sub i64 %1910, %1920
  br label %1922

1922:                                             ; preds = %1922, %1919
  %1923 = phi i64 [ 0, %1919 ], [ %1946, %1922 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1919 ], [ %1942, %1922 ]
  %1925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1919 ], [ %1943, %1922 ]
  %1926 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1919 ], [ %1944, %1922 ]
  %1927 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1919 ], [ %1945, %1922 ]
  %1928 = sub i64 %1910, %1923
  %1929 = getelementptr inbounds i32, ptr %9, i64 %1928
  %1930 = getelementptr inbounds i32, ptr %1929, i64 -7
  %1931 = load <8 x i32>, ptr %1930, align 4, !tbaa !5
  %1932 = shufflevector <8 x i32> %1931, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1933 = getelementptr inbounds i32, ptr %1929, i64 -15
  %1934 = load <8 x i32>, ptr %1933, align 4, !tbaa !5
  %1935 = shufflevector <8 x i32> %1934, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1936 = getelementptr inbounds i32, ptr %1929, i64 -23
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !5
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1929, i64 -31
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !5
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = mul <8 x i32> %1932, %1924
  %1943 = mul <8 x i32> %1935, %1925
  %1944 = mul <8 x i32> %1938, %1926
  %1945 = mul <8 x i32> %1941, %1927
  %1946 = add nuw i64 %1923, 32
  %1947 = icmp eq i64 %1946, %1920
  br i1 %1947, label %1948, label %1922, !llvm.loop !444

1948:                                             ; preds = %1922
  %1949 = mul <8 x i32> %1943, %1942
  %1950 = mul <8 x i32> %1944, %1949
  %1951 = mul <8 x i32> %1945, %1950
  %1952 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1951)
  %1953 = icmp eq i64 %1916, %1920
  br i1 %1953, label %1966, label %1954

1954:                                             ; preds = %1907, %1948
  %1955 = phi i64 [ %1910, %1907 ], [ %1921, %1948 ]
  %1956 = phi i32 [ 1, %1907 ], [ %1952, %1948 ]
  br label %1957

1957:                                             ; preds = %1954, %1957
  %1958 = phi i64 [ %1963, %1957 ], [ %1955, %1954 ]
  %1959 = phi i32 [ %1962, %1957 ], [ %1956, %1954 ]
  %1960 = getelementptr inbounds i32, ptr %9, i64 %1958
  %1961 = load i32, ptr %1960, align 4, !tbaa !5
  %1962 = mul nsw i32 %1961, %1959
  %1963 = add nsw i64 %1958, -1
  %1964 = trunc i64 %1958 to i32
  %1965 = icmp sgt i32 %1964, 0
  br i1 %1965, label %1957, label %1966, !llvm.loop !445

1966:                                             ; preds = %1957, %1948
  %1967 = phi i32 [ %1952, %1948 ], [ %1962, %1957 ]
  %1968 = and i64 %1917, 4294967295
  %1969 = getelementptr inbounds i32, ptr %6, i64 %1968
  %1970 = load i32, ptr %1969, align 4, !tbaa !5
  %1971 = mul nsw i32 %1970, %1967
  %1972 = add nsw i32 %1971, %1911
  %1973 = icmp sgt i64 %1909, 2
  %1974 = add nsw i64 %1910, -1
  %1975 = add i32 %1908, 1
  br i1 %1973, label %1907, label %1976, !llvm.loop !446

1976:                                             ; preds = %1966, %1902
  %1977 = phi i32 [ %1906, %1902 ], [ %1972, %1966 ]
  %1978 = sext i32 %1977 to i64
  %1979 = getelementptr inbounds double, ptr %2, i64 %1978
  %1980 = load double, ptr %1979, align 8, !tbaa !18
  %1981 = getelementptr inbounds i8, ptr %1866, i64 %1978
  %1982 = load i8, ptr %1981, align 1, !tbaa !11
  %1983 = fpext float %1903 to double
  %1984 = sitofp i8 %1982 to double
  %1985 = fmul fast double %1980, %1984
  %1986 = fcmp fast uge double %1985, 0.000000e+00
  %1987 = fneg fast double %1985
  %1988 = tail call fast double @llvm.fabs.f64(double %1985)
  %1989 = fcmp fast ole double %1988, %1983
  %1990 = select nnan ninf i1 %1986, double %1985, double %1987
  %1991 = fptrunc double %1990 to float
  %1992 = select i1 %1989, float %1903, float %1991
  store float %1992, ptr %1868, align 4, !tbaa !162
  %1993 = fadd fast double %1980, %1905
  %1994 = add nuw nsw i32 %1904, 1
  br i1 %1896, label %1995, label %2042

1995:                                             ; preds = %1976
  %1996 = load i32, ptr %4, align 4, !tbaa !5
  %1997 = load i32, ptr %12, align 4, !tbaa !5
  %1998 = add nsw i32 %1997, -1
  %1999 = icmp slt i32 %1996, %1998
  br i1 %1999, label %2019, label %2000

2000:                                             ; preds = %1995
  %2001 = icmp eq i32 %1996, %1998
  br i1 %2001, label %2002, label %2035

2002:                                             ; preds = %2000
  store i32 0, ptr %4, align 4, !tbaa !5
  %2003 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2003, ptr %6, align 4, !tbaa !5
  br i1 %1901, label %2042, label %2004

2004:                                             ; preds = %2002, %2029
  %2005 = phi i64 [ %2033, %2029 ], [ 1, %2002 ]
  %2006 = getelementptr inbounds i32, ptr %4, i64 %2005
  %2007 = load i32, ptr %2006, align 4, !tbaa !5
  %2008 = getelementptr inbounds i32, ptr %12, i64 %2005
  %2009 = load i32, ptr %2008, align 4, !tbaa !5
  %2010 = add nsw i32 %2009, -1
  %2011 = icmp slt i32 %2007, %2010
  br i1 %2011, label %2012, label %2027

2012:                                             ; preds = %2004
  br i1 %1999, label %2019, label %2013

2013:                                             ; preds = %2012
  %2014 = getelementptr inbounds i32, ptr %7, i64 %2005
  %2015 = load i32, ptr %2014, align 4, !tbaa !5
  %2016 = getelementptr inbounds i32, ptr %6, i64 %2005
  %2017 = load i32, ptr %2016, align 4, !tbaa !5
  %2018 = add nsw i32 %2017, %2015
  store i32 %2018, ptr %2016, align 4, !tbaa !5
  br label %2037

2019:                                             ; preds = %1995, %2012
  %2020 = phi i32 [ %2007, %2012 ], [ %1996, %1995 ]
  %2021 = phi ptr [ %2006, %2012 ], [ %4, %1995 ]
  %2022 = phi i64 [ %2005, %2012 ], [ 0, %1995 ]
  %2023 = add nsw i32 %2020, 1
  store i32 %2023, ptr %2021, align 4, !tbaa !5
  %2024 = getelementptr inbounds i32, ptr %7, i64 %2022
  %2025 = load i32, ptr %2024, align 4, !tbaa !5
  %2026 = getelementptr inbounds i32, ptr %6, i64 %2022
  br label %2037

2027:                                             ; preds = %2004
  %2028 = icmp eq i32 %2007, %2010
  br i1 %2028, label %2029, label %2035

2029:                                             ; preds = %2027
  store i32 0, ptr %2006, align 4, !tbaa !5
  %2030 = getelementptr inbounds i32, ptr %8, i64 %2005
  %2031 = load i32, ptr %2030, align 4, !tbaa !5
  %2032 = getelementptr inbounds i32, ptr %6, i64 %2005
  store i32 %2031, ptr %2032, align 4, !tbaa !5
  %2033 = add nuw nsw i64 %2005, 1
  %2034 = icmp eq i64 %2033, %1899
  br i1 %2034, label %2042, label %2004, !llvm.loop !447

2035:                                             ; preds = %2000, %2027
  %2036 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2037:                                             ; preds = %2013, %2019
  %2038 = phi ptr [ %2026, %2019 ], [ %2006, %2013 ]
  %2039 = phi i32 [ %2025, %2019 ], [ 1, %2013 ]
  %2040 = load i32, ptr %2038, align 4, !tbaa !5
  %2041 = add nsw i32 %2040, %2039
  store i32 %2041, ptr %2038, align 4, !tbaa !5
  br label %2042

2042:                                             ; preds = %2029, %2037, %2002, %1976
  %2043 = icmp eq i32 %1994, %5
  br i1 %2043, label %3105, label %1902, !llvm.loop !448

2044:                                             ; preds = %1885, %2185
  %2045 = phi float [ 0.000000e+00, %1885 ], [ %2133, %2185 ]
  %2046 = phi i32 [ 0, %1885 ], [ %2134, %2185 ]
  %2047 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1886, label %2048, label %2117

2048:                                             ; preds = %2044, %2107
  %2049 = phi i32 [ %2116, %2107 ], [ 0, %2044 ]
  %2050 = phi i64 [ %2058, %2107 ], [ %1890, %2044 ]
  %2051 = phi i64 [ %2115, %2107 ], [ %1889, %2044 ]
  %2052 = phi i32 [ %2113, %2107 ], [ %2047, %2044 ]
  %2053 = sub i32 %1888, %2049
  %2054 = tail call i32 @llvm.smin.i32(i32 %2053, i32 0)
  %2055 = sub i32 %2053, %2054
  %2056 = zext i32 %2055 to i64
  %2057 = add nuw nsw i64 %2056, 1
  %2058 = add nsw i64 %2050, -1
  %2059 = icmp ult i32 %2055, 31
  br i1 %2059, label %2095, label %2060

2060:                                             ; preds = %2048
  %2061 = and i64 %2057, 8589934560
  %2062 = sub i64 %2051, %2061
  br label %2063

2063:                                             ; preds = %2063, %2060
  %2064 = phi i64 [ 0, %2060 ], [ %2087, %2063 ]
  %2065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2060 ], [ %2083, %2063 ]
  %2066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2060 ], [ %2084, %2063 ]
  %2067 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2060 ], [ %2085, %2063 ]
  %2068 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2060 ], [ %2086, %2063 ]
  %2069 = sub i64 %2051, %2064
  %2070 = getelementptr inbounds i32, ptr %11, i64 %2069
  %2071 = getelementptr inbounds i32, ptr %2070, i64 -7
  %2072 = load <8 x i32>, ptr %2071, align 4, !tbaa !5
  %2073 = shufflevector <8 x i32> %2072, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2074 = getelementptr inbounds i32, ptr %2070, i64 -15
  %2075 = load <8 x i32>, ptr %2074, align 4, !tbaa !5
  %2076 = shufflevector <8 x i32> %2075, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2077 = getelementptr inbounds i32, ptr %2070, i64 -23
  %2078 = load <8 x i32>, ptr %2077, align 4, !tbaa !5
  %2079 = shufflevector <8 x i32> %2078, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2080 = getelementptr inbounds i32, ptr %2070, i64 -31
  %2081 = load <8 x i32>, ptr %2080, align 4, !tbaa !5
  %2082 = shufflevector <8 x i32> %2081, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2083 = mul <8 x i32> %2073, %2065
  %2084 = mul <8 x i32> %2076, %2066
  %2085 = mul <8 x i32> %2079, %2067
  %2086 = mul <8 x i32> %2082, %2068
  %2087 = add nuw i64 %2064, 32
  %2088 = icmp eq i64 %2087, %2061
  br i1 %2088, label %2089, label %2063, !llvm.loop !449

2089:                                             ; preds = %2063
  %2090 = mul <8 x i32> %2084, %2083
  %2091 = mul <8 x i32> %2085, %2090
  %2092 = mul <8 x i32> %2086, %2091
  %2093 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2092)
  %2094 = icmp eq i64 %2057, %2061
  br i1 %2094, label %2107, label %2095

2095:                                             ; preds = %2048, %2089
  %2096 = phi i64 [ %2051, %2048 ], [ %2062, %2089 ]
  %2097 = phi i32 [ 1, %2048 ], [ %2093, %2089 ]
  br label %2098

2098:                                             ; preds = %2095, %2098
  %2099 = phi i64 [ %2104, %2098 ], [ %2096, %2095 ]
  %2100 = phi i32 [ %2103, %2098 ], [ %2097, %2095 ]
  %2101 = getelementptr inbounds i32, ptr %11, i64 %2099
  %2102 = load i32, ptr %2101, align 4, !tbaa !5
  %2103 = mul nsw i32 %2102, %2100
  %2104 = add nsw i64 %2099, -1
  %2105 = trunc i64 %2099 to i32
  %2106 = icmp sgt i32 %2105, 0
  br i1 %2106, label %2098, label %2107, !llvm.loop !450

2107:                                             ; preds = %2098, %2089
  %2108 = phi i32 [ %2093, %2089 ], [ %2103, %2098 ]
  %2109 = and i64 %2058, 4294967295
  %2110 = getelementptr inbounds i32, ptr %6, i64 %2109
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = mul nsw i32 %2111, %2108
  %2113 = add nsw i32 %2112, %2052
  %2114 = icmp sgt i64 %2050, 2
  %2115 = add nsw i64 %2051, -1
  %2116 = add i32 %2049, 1
  br i1 %2114, label %2048, label %2117, !llvm.loop !451

2117:                                             ; preds = %2107, %2044
  %2118 = phi i32 [ %2047, %2044 ], [ %2113, %2107 ]
  %2119 = icmp slt i32 %2118, %5
  br i1 %2119, label %2122, label %2120

2120:                                             ; preds = %2117
  %2121 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

2122:                                             ; preds = %2117
  %2123 = sext i32 %2118 to i64
  %2124 = getelementptr inbounds i8, ptr %1866, i64 %2123
  %2125 = load i8, ptr %2124, align 1, !tbaa !11
  %2126 = fpext float %2045 to double
  %2127 = sitofp i8 %2125 to double
  %2128 = icmp slt i8 %2125, 0
  %2129 = fneg fast double %2127
  %2130 = select i1 %2128, double %2129, double %2127
  %2131 = fcmp fast ole double %2130, %2126
  %2132 = fptrunc double %2130 to float
  %2133 = select fast i1 %2131, float %2045, float %2132
  store float %2133, ptr %1868, align 4, !tbaa !162
  %2134 = add nuw nsw i32 %2046, 1
  br i1 %1887, label %2135, label %2185

2135:                                             ; preds = %2122
  %2136 = load i32, ptr %4, align 4, !tbaa !5
  %2137 = load i32, ptr %12, align 4, !tbaa !5
  %2138 = add nsw i32 %2137, -1
  %2139 = icmp slt i32 %2136, %2138
  br i1 %2139, label %2162, label %2140

2140:                                             ; preds = %2135
  %2141 = icmp eq i32 %2136, %2138
  br i1 %2141, label %2142, label %2178

2142:                                             ; preds = %2140
  store i32 0, ptr %4, align 4, !tbaa !5
  %2143 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2143, ptr %6, align 4, !tbaa !5
  br i1 %1892, label %2185, label %2144

2144:                                             ; preds = %2142, %2172
  %2145 = phi i64 [ %2176, %2172 ], [ 1, %2142 ]
  %2146 = getelementptr inbounds i32, ptr %4, i64 %2145
  %2147 = load i32, ptr %2146, align 4, !tbaa !5
  %2148 = getelementptr inbounds i32, ptr %12, i64 %2145
  %2149 = load i32, ptr %2148, align 4, !tbaa !5
  %2150 = add nsw i32 %2149, -1
  %2151 = icmp slt i32 %2147, %2150
  br i1 %2151, label %2152, label %2170

2152:                                             ; preds = %2144
  br i1 %2139, label %2162, label %2153

2153:                                             ; preds = %2152
  %2154 = shl i64 %2145, 32
  %2155 = add i64 %2154, -4294967296
  %2156 = ashr exact i64 %2155, 32
  %2157 = getelementptr inbounds i32, ptr %7, i64 %2156
  %2158 = load i32, ptr %2157, align 4, !tbaa !5
  %2159 = getelementptr inbounds i32, ptr %6, i64 %2145
  %2160 = load i32, ptr %2159, align 4, !tbaa !5
  %2161 = add nsw i32 %2160, %2158
  store i32 %2161, ptr %2159, align 4, !tbaa !5
  br label %2180

2162:                                             ; preds = %2135, %2152
  %2163 = phi i32 [ %2147, %2152 ], [ %2136, %2135 ]
  %2164 = phi ptr [ %2146, %2152 ], [ %4, %2135 ]
  %2165 = phi i64 [ %2145, %2152 ], [ 0, %2135 ]
  %2166 = add nsw i32 %2163, 1
  store i32 %2166, ptr %2164, align 4, !tbaa !5
  %2167 = getelementptr inbounds i32, ptr %7, i64 %2165
  %2168 = load i32, ptr %2167, align 4, !tbaa !5
  %2169 = getelementptr inbounds i32, ptr %6, i64 %2165
  br label %2180

2170:                                             ; preds = %2144
  %2171 = icmp eq i32 %2147, %2150
  br i1 %2171, label %2172, label %2178

2172:                                             ; preds = %2170
  store i32 0, ptr %2146, align 4, !tbaa !5
  %2173 = getelementptr inbounds i32, ptr %8, i64 %2145
  %2174 = load i32, ptr %2173, align 4, !tbaa !5
  %2175 = getelementptr inbounds i32, ptr %6, i64 %2145
  store i32 %2174, ptr %2175, align 4, !tbaa !5
  %2176 = add nuw nsw i64 %2145, 1
  %2177 = icmp eq i64 %2176, %1890
  br i1 %2177, label %2185, label %2144, !llvm.loop !452

2178:                                             ; preds = %2140, %2170
  %2179 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2180:                                             ; preds = %2153, %2162
  %2181 = phi ptr [ %2169, %2162 ], [ %2146, %2153 ]
  %2182 = phi i32 [ %2168, %2162 ], [ 1, %2153 ]
  %2183 = load i32, ptr %2181, align 4, !tbaa !5
  %2184 = add nsw i32 %2183, %2182
  store i32 %2184, ptr %2181, align 4, !tbaa !5
  br label %2185

2185:                                             ; preds = %2172, %2180, %2142, %2122
  %2186 = icmp eq i32 %2134, %5
  br i1 %2186, label %3105, label %2044, !llvm.loop !453

2187:                                             ; preds = %1878
  %2188 = getelementptr inbounds i32, ptr %3, i64 %19
  %2189 = load i32, ptr %2188, align 4, !tbaa !5
  %2190 = icmp eq i32 %2189, 0
  %2191 = icmp sgt i32 %5, 0
  br i1 %2190, label %2201, label %2192

2192:                                             ; preds = %2187
  br i1 %2191, label %2193, label %3105

2193:                                             ; preds = %2192
  %2194 = icmp sgt i32 %13, 1
  %2195 = icmp sgt i32 %13, 0
  %2196 = add i32 %13, -2
  %2197 = zext i32 %2196 to i64
  %2198 = zext i32 %13 to i64
  %2199 = add nuw i32 %5, 1
  %2200 = icmp eq i32 %13, 1
  br label %2345

2201:                                             ; preds = %2187
  br i1 %2191, label %2202, label %3105

2202:                                             ; preds = %2201
  %2203 = icmp sgt i32 %13, 1
  %2204 = icmp sgt i32 %13, 0
  %2205 = add i32 %13, -2
  %2206 = zext i32 %2205 to i64
  %2207 = zext i32 %13 to i64
  %2208 = add nuw i32 %5, 1
  %2209 = icmp eq i32 %13, 1
  br label %2210

2210:                                             ; preds = %2202, %2343
  %2211 = phi float [ 0.000000e+00, %2202 ], [ %2293, %2343 ]
  %2212 = phi i32 [ 0, %2202 ], [ %2295, %2343 ]
  %2213 = phi double [ 0.000000e+00, %2202 ], [ %2294, %2343 ]
  %2214 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2203, label %2215, label %2284

2215:                                             ; preds = %2210, %2274
  %2216 = phi i32 [ %2283, %2274 ], [ 0, %2210 ]
  %2217 = phi i64 [ %2225, %2274 ], [ %2207, %2210 ]
  %2218 = phi i64 [ %2282, %2274 ], [ %2206, %2210 ]
  %2219 = phi i32 [ %2280, %2274 ], [ %2214, %2210 ]
  %2220 = sub i32 %2205, %2216
  %2221 = tail call i32 @llvm.smin.i32(i32 %2220, i32 0)
  %2222 = sub i32 %2220, %2221
  %2223 = zext i32 %2222 to i64
  %2224 = add nuw nsw i64 %2223, 1
  %2225 = add nsw i64 %2217, -1
  %2226 = icmp ult i32 %2222, 31
  br i1 %2226, label %2262, label %2227

2227:                                             ; preds = %2215
  %2228 = and i64 %2224, 8589934560
  %2229 = sub i64 %2218, %2228
  br label %2230

2230:                                             ; preds = %2230, %2227
  %2231 = phi i64 [ 0, %2227 ], [ %2254, %2230 ]
  %2232 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2227 ], [ %2250, %2230 ]
  %2233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2227 ], [ %2251, %2230 ]
  %2234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2227 ], [ %2252, %2230 ]
  %2235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2227 ], [ %2253, %2230 ]
  %2236 = sub i64 %2218, %2231
  %2237 = getelementptr inbounds i32, ptr %9, i64 %2236
  %2238 = getelementptr inbounds i32, ptr %2237, i64 -7
  %2239 = load <8 x i32>, ptr %2238, align 4, !tbaa !5
  %2240 = shufflevector <8 x i32> %2239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2241 = getelementptr inbounds i32, ptr %2237, i64 -15
  %2242 = load <8 x i32>, ptr %2241, align 4, !tbaa !5
  %2243 = shufflevector <8 x i32> %2242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2244 = getelementptr inbounds i32, ptr %2237, i64 -23
  %2245 = load <8 x i32>, ptr %2244, align 4, !tbaa !5
  %2246 = shufflevector <8 x i32> %2245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2247 = getelementptr inbounds i32, ptr %2237, i64 -31
  %2248 = load <8 x i32>, ptr %2247, align 4, !tbaa !5
  %2249 = shufflevector <8 x i32> %2248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2250 = mul <8 x i32> %2240, %2232
  %2251 = mul <8 x i32> %2243, %2233
  %2252 = mul <8 x i32> %2246, %2234
  %2253 = mul <8 x i32> %2249, %2235
  %2254 = add nuw i64 %2231, 32
  %2255 = icmp eq i64 %2254, %2228
  br i1 %2255, label %2256, label %2230, !llvm.loop !454

2256:                                             ; preds = %2230
  %2257 = mul <8 x i32> %2251, %2250
  %2258 = mul <8 x i32> %2252, %2257
  %2259 = mul <8 x i32> %2253, %2258
  %2260 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2259)
  %2261 = icmp eq i64 %2224, %2228
  br i1 %2261, label %2274, label %2262

2262:                                             ; preds = %2215, %2256
  %2263 = phi i64 [ %2218, %2215 ], [ %2229, %2256 ]
  %2264 = phi i32 [ 1, %2215 ], [ %2260, %2256 ]
  br label %2265

2265:                                             ; preds = %2262, %2265
  %2266 = phi i64 [ %2271, %2265 ], [ %2263, %2262 ]
  %2267 = phi i32 [ %2270, %2265 ], [ %2264, %2262 ]
  %2268 = getelementptr inbounds i32, ptr %9, i64 %2266
  %2269 = load i32, ptr %2268, align 4, !tbaa !5
  %2270 = mul nsw i32 %2269, %2267
  %2271 = add nsw i64 %2266, -1
  %2272 = trunc i64 %2266 to i32
  %2273 = icmp sgt i32 %2272, 0
  br i1 %2273, label %2265, label %2274, !llvm.loop !455

2274:                                             ; preds = %2265, %2256
  %2275 = phi i32 [ %2260, %2256 ], [ %2270, %2265 ]
  %2276 = and i64 %2225, 4294967295
  %2277 = getelementptr inbounds i32, ptr %6, i64 %2276
  %2278 = load i32, ptr %2277, align 4, !tbaa !5
  %2279 = mul nsw i32 %2278, %2275
  %2280 = add nsw i32 %2279, %2219
  %2281 = icmp sgt i64 %2217, 2
  %2282 = add nsw i64 %2218, -1
  %2283 = add i32 %2216, 1
  br i1 %2281, label %2215, label %2284, !llvm.loop !456

2284:                                             ; preds = %2274, %2210
  %2285 = phi i32 [ %2214, %2210 ], [ %2280, %2274 ]
  %2286 = sext i32 %2285 to i64
  %2287 = getelementptr inbounds i8, ptr %1866, i64 %2286
  %2288 = load i8, ptr %2287, align 1, !tbaa !11
  %2289 = sitofp i8 %2288 to float
  %2290 = icmp slt i8 %2288, 0
  %2291 = fneg fast float %2289
  %2292 = select fast i1 %2290, float %2291, float %2289
  %2293 = tail call fast float @llvm.maxnum.f32(float %2211, float %2292)
  store float %2293, ptr %1868, align 4, !tbaa !162
  %2294 = fadd fast double %2213, 1.000000e+00
  %2295 = add nuw nsw i32 %2212, 1
  br i1 %2204, label %2296, label %2343

2296:                                             ; preds = %2284
  %2297 = load i32, ptr %4, align 4, !tbaa !5
  %2298 = load i32, ptr %12, align 4, !tbaa !5
  %2299 = add nsw i32 %2298, -1
  %2300 = icmp slt i32 %2297, %2299
  br i1 %2300, label %2320, label %2301

2301:                                             ; preds = %2296
  %2302 = icmp eq i32 %2297, %2299
  br i1 %2302, label %2303, label %2336

2303:                                             ; preds = %2301
  store i32 0, ptr %4, align 4, !tbaa !5
  %2304 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2304, ptr %6, align 4, !tbaa !5
  br i1 %2209, label %2343, label %2305

2305:                                             ; preds = %2303, %2330
  %2306 = phi i64 [ %2334, %2330 ], [ 1, %2303 ]
  %2307 = getelementptr inbounds i32, ptr %4, i64 %2306
  %2308 = load i32, ptr %2307, align 4, !tbaa !5
  %2309 = getelementptr inbounds i32, ptr %12, i64 %2306
  %2310 = load i32, ptr %2309, align 4, !tbaa !5
  %2311 = add nsw i32 %2310, -1
  %2312 = icmp slt i32 %2308, %2311
  br i1 %2312, label %2313, label %2328

2313:                                             ; preds = %2305
  br i1 %2300, label %2320, label %2314

2314:                                             ; preds = %2313
  %2315 = getelementptr inbounds i32, ptr %7, i64 %2306
  %2316 = load i32, ptr %2315, align 4, !tbaa !5
  %2317 = getelementptr inbounds i32, ptr %6, i64 %2306
  %2318 = load i32, ptr %2317, align 4, !tbaa !5
  %2319 = add nsw i32 %2318, %2316
  store i32 %2319, ptr %2317, align 4, !tbaa !5
  br label %2338

2320:                                             ; preds = %2296, %2313
  %2321 = phi i32 [ %2308, %2313 ], [ %2297, %2296 ]
  %2322 = phi ptr [ %2307, %2313 ], [ %4, %2296 ]
  %2323 = phi i64 [ %2306, %2313 ], [ 0, %2296 ]
  %2324 = add nsw i32 %2321, 1
  store i32 %2324, ptr %2322, align 4, !tbaa !5
  %2325 = getelementptr inbounds i32, ptr %7, i64 %2323
  %2326 = load i32, ptr %2325, align 4, !tbaa !5
  %2327 = getelementptr inbounds i32, ptr %6, i64 %2323
  br label %2338

2328:                                             ; preds = %2305
  %2329 = icmp eq i32 %2308, %2311
  br i1 %2329, label %2330, label %2336

2330:                                             ; preds = %2328
  store i32 0, ptr %2307, align 4, !tbaa !5
  %2331 = getelementptr inbounds i32, ptr %8, i64 %2306
  %2332 = load i32, ptr %2331, align 4, !tbaa !5
  %2333 = getelementptr inbounds i32, ptr %6, i64 %2306
  store i32 %2332, ptr %2333, align 4, !tbaa !5
  %2334 = add nuw nsw i64 %2306, 1
  %2335 = icmp eq i64 %2334, %2207
  br i1 %2335, label %2343, label %2305, !llvm.loop !457

2336:                                             ; preds = %2301, %2328
  %2337 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2338:                                             ; preds = %2314, %2320
  %2339 = phi ptr [ %2327, %2320 ], [ %2307, %2314 ]
  %2340 = phi i32 [ %2326, %2320 ], [ 1, %2314 ]
  %2341 = load i32, ptr %2339, align 4, !tbaa !5
  %2342 = add nsw i32 %2341, %2340
  store i32 %2342, ptr %2339, align 4, !tbaa !5
  br label %2343

2343:                                             ; preds = %2330, %2338, %2303, %2284
  %2344 = icmp eq i32 %2295, %5
  br i1 %2344, label %3105, label %2210, !llvm.loop !458

2345:                                             ; preds = %2193, %2483
  %2346 = phi float [ 0.000000e+00, %2193 ], [ %2431, %2483 ]
  %2347 = phi i32 [ 0, %2193 ], [ %2432, %2483 ]
  %2348 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2194, label %2349, label %2418

2349:                                             ; preds = %2345, %2408
  %2350 = phi i32 [ %2417, %2408 ], [ 0, %2345 ]
  %2351 = phi i64 [ %2359, %2408 ], [ %2198, %2345 ]
  %2352 = phi i64 [ %2416, %2408 ], [ %2197, %2345 ]
  %2353 = phi i32 [ %2414, %2408 ], [ %2348, %2345 ]
  %2354 = sub i32 %2196, %2350
  %2355 = tail call i32 @llvm.smin.i32(i32 %2354, i32 0)
  %2356 = sub i32 %2354, %2355
  %2357 = zext i32 %2356 to i64
  %2358 = add nuw nsw i64 %2357, 1
  %2359 = add nsw i64 %2351, -1
  %2360 = icmp ult i32 %2356, 31
  br i1 %2360, label %2396, label %2361

2361:                                             ; preds = %2349
  %2362 = and i64 %2358, 8589934560
  %2363 = sub i64 %2352, %2362
  br label %2364

2364:                                             ; preds = %2364, %2361
  %2365 = phi i64 [ 0, %2361 ], [ %2388, %2364 ]
  %2366 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2361 ], [ %2384, %2364 ]
  %2367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2361 ], [ %2385, %2364 ]
  %2368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2361 ], [ %2386, %2364 ]
  %2369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2361 ], [ %2387, %2364 ]
  %2370 = sub i64 %2352, %2365
  %2371 = getelementptr inbounds i32, ptr %11, i64 %2370
  %2372 = getelementptr inbounds i32, ptr %2371, i64 -7
  %2373 = load <8 x i32>, ptr %2372, align 4, !tbaa !5
  %2374 = shufflevector <8 x i32> %2373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2375 = getelementptr inbounds i32, ptr %2371, i64 -15
  %2376 = load <8 x i32>, ptr %2375, align 4, !tbaa !5
  %2377 = shufflevector <8 x i32> %2376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2378 = getelementptr inbounds i32, ptr %2371, i64 -23
  %2379 = load <8 x i32>, ptr %2378, align 4, !tbaa !5
  %2380 = shufflevector <8 x i32> %2379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2381 = getelementptr inbounds i32, ptr %2371, i64 -31
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !5
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = mul <8 x i32> %2374, %2366
  %2385 = mul <8 x i32> %2377, %2367
  %2386 = mul <8 x i32> %2380, %2368
  %2387 = mul <8 x i32> %2383, %2369
  %2388 = add nuw i64 %2365, 32
  %2389 = icmp eq i64 %2388, %2362
  br i1 %2389, label %2390, label %2364, !llvm.loop !459

2390:                                             ; preds = %2364
  %2391 = mul <8 x i32> %2385, %2384
  %2392 = mul <8 x i32> %2386, %2391
  %2393 = mul <8 x i32> %2387, %2392
  %2394 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2393)
  %2395 = icmp eq i64 %2358, %2362
  br i1 %2395, label %2408, label %2396

2396:                                             ; preds = %2349, %2390
  %2397 = phi i64 [ %2352, %2349 ], [ %2363, %2390 ]
  %2398 = phi i32 [ 1, %2349 ], [ %2394, %2390 ]
  br label %2399

2399:                                             ; preds = %2396, %2399
  %2400 = phi i64 [ %2405, %2399 ], [ %2397, %2396 ]
  %2401 = phi i32 [ %2404, %2399 ], [ %2398, %2396 ]
  %2402 = getelementptr inbounds i32, ptr %11, i64 %2400
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = mul nsw i32 %2403, %2401
  %2405 = add nsw i64 %2400, -1
  %2406 = trunc i64 %2400 to i32
  %2407 = icmp sgt i32 %2406, 0
  br i1 %2407, label %2399, label %2408, !llvm.loop !460

2408:                                             ; preds = %2399, %2390
  %2409 = phi i32 [ %2394, %2390 ], [ %2404, %2399 ]
  %2410 = and i64 %2359, 4294967295
  %2411 = getelementptr inbounds i32, ptr %6, i64 %2410
  %2412 = load i32, ptr %2411, align 4, !tbaa !5
  %2413 = mul nsw i32 %2412, %2409
  %2414 = add nsw i32 %2413, %2353
  %2415 = icmp sgt i64 %2351, 2
  %2416 = add nsw i64 %2352, -1
  %2417 = add i32 %2350, 1
  br i1 %2415, label %2349, label %2418, !llvm.loop !461

2418:                                             ; preds = %2408, %2345
  %2419 = phi i32 [ %2348, %2345 ], [ %2414, %2408 ]
  %2420 = icmp slt i32 %2419, %5
  br i1 %2420, label %2423, label %2421

2421:                                             ; preds = %2418
  %2422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

2423:                                             ; preds = %2418
  %2424 = sext i32 %2419 to i64
  %2425 = getelementptr inbounds i8, ptr %1866, i64 %2424
  %2426 = load i8, ptr %2425, align 1, !tbaa !11
  %2427 = sitofp i8 %2426 to float
  %2428 = icmp slt i8 %2426, 0
  %2429 = fneg fast float %2427
  %2430 = select fast i1 %2428, float %2429, float %2427
  %2431 = tail call fast float @llvm.maxnum.f32(float %2346, float %2430)
  store float %2431, ptr %1868, align 4, !tbaa !162
  %2432 = add nuw nsw i32 %2347, 1
  br i1 %2195, label %2433, label %2483

2433:                                             ; preds = %2423
  %2434 = load i32, ptr %4, align 4, !tbaa !5
  %2435 = load i32, ptr %12, align 4, !tbaa !5
  %2436 = add nsw i32 %2435, -1
  %2437 = icmp slt i32 %2434, %2436
  br i1 %2437, label %2460, label %2438

2438:                                             ; preds = %2433
  %2439 = icmp eq i32 %2434, %2436
  br i1 %2439, label %2440, label %2476

2440:                                             ; preds = %2438
  store i32 0, ptr %4, align 4, !tbaa !5
  %2441 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2441, ptr %6, align 4, !tbaa !5
  br i1 %2200, label %2483, label %2442

2442:                                             ; preds = %2440, %2470
  %2443 = phi i64 [ %2474, %2470 ], [ 1, %2440 ]
  %2444 = getelementptr inbounds i32, ptr %4, i64 %2443
  %2445 = load i32, ptr %2444, align 4, !tbaa !5
  %2446 = getelementptr inbounds i32, ptr %12, i64 %2443
  %2447 = load i32, ptr %2446, align 4, !tbaa !5
  %2448 = add nsw i32 %2447, -1
  %2449 = icmp slt i32 %2445, %2448
  br i1 %2449, label %2450, label %2468

2450:                                             ; preds = %2442
  br i1 %2437, label %2460, label %2451

2451:                                             ; preds = %2450
  %2452 = shl i64 %2443, 32
  %2453 = add i64 %2452, -4294967296
  %2454 = ashr exact i64 %2453, 32
  %2455 = getelementptr inbounds i32, ptr %7, i64 %2454
  %2456 = load i32, ptr %2455, align 4, !tbaa !5
  %2457 = getelementptr inbounds i32, ptr %6, i64 %2443
  %2458 = load i32, ptr %2457, align 4, !tbaa !5
  %2459 = add nsw i32 %2458, %2456
  store i32 %2459, ptr %2457, align 4, !tbaa !5
  br label %2478

2460:                                             ; preds = %2433, %2450
  %2461 = phi i32 [ %2445, %2450 ], [ %2434, %2433 ]
  %2462 = phi ptr [ %2444, %2450 ], [ %4, %2433 ]
  %2463 = phi i64 [ %2443, %2450 ], [ 0, %2433 ]
  %2464 = add nsw i32 %2461, 1
  store i32 %2464, ptr %2462, align 4, !tbaa !5
  %2465 = getelementptr inbounds i32, ptr %7, i64 %2463
  %2466 = load i32, ptr %2465, align 4, !tbaa !5
  %2467 = getelementptr inbounds i32, ptr %6, i64 %2463
  br label %2478

2468:                                             ; preds = %2442
  %2469 = icmp eq i32 %2445, %2448
  br i1 %2469, label %2470, label %2476

2470:                                             ; preds = %2468
  store i32 0, ptr %2444, align 4, !tbaa !5
  %2471 = getelementptr inbounds i32, ptr %8, i64 %2443
  %2472 = load i32, ptr %2471, align 4, !tbaa !5
  %2473 = getelementptr inbounds i32, ptr %6, i64 %2443
  store i32 %2472, ptr %2473, align 4, !tbaa !5
  %2474 = add nuw nsw i64 %2443, 1
  %2475 = icmp eq i64 %2474, %2198
  br i1 %2475, label %2483, label %2442, !llvm.loop !462

2476:                                             ; preds = %2438, %2468
  %2477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2478:                                             ; preds = %2451, %2460
  %2479 = phi ptr [ %2467, %2460 ], [ %2444, %2451 ]
  %2480 = phi i32 [ %2466, %2460 ], [ 1, %2451 ]
  %2481 = load i32, ptr %2479, align 4, !tbaa !5
  %2482 = add nsw i32 %2481, %2480
  store i32 %2482, ptr %2479, align 4, !tbaa !5
  br label %2483

2483:                                             ; preds = %2470, %2478, %2440, %2423
  %2484 = icmp eq i32 %2432, %5
  br i1 %2484, label %3105, label %2345, !llvm.loop !463

2485:                                             ; preds = %1878
  %2486 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 713, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3105

2487:                                             ; preds = %18
  %2488 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2489 = load ptr, ptr %2488, align 8, !tbaa !9
  %2490 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2491 = load ptr, ptr %2490, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2491, align 8, !tbaa !18
  %2492 = icmp eq i32 %13, 0
  br i1 %2492, label %2493, label %2501

2493:                                             ; preds = %2487
  %2494 = load i8, ptr %2489, align 1, !tbaa !11
  %2495 = sitofp i8 %2494 to double
  %2496 = icmp slt i8 %2494, 0
  %2497 = fneg fast double %2495
  %2498 = select fast i1 %2496, double %2497, double %2495
  %2499 = fcmp fast ole double %2498, 0.000000e+00
  %2500 = select fast i1 %2499, double 0.000000e+00, double %2498
  store double %2500, ptr %2491, align 8, !tbaa !18
  br label %3105

2501:                                             ; preds = %2487
  switch i32 %1, label %3103 [
    i32 1, label %2502
    i32 0, label %2805
  ]

2502:                                             ; preds = %2501
  %2503 = getelementptr inbounds i32, ptr %3, i64 %19
  %2504 = load i32, ptr %2503, align 4, !tbaa !5
  %2505 = icmp eq i32 %2504, 0
  %2506 = icmp sgt i32 %5, 0
  br i1 %2505, label %2516, label %2507

2507:                                             ; preds = %2502
  br i1 %2506, label %2508, label %3105

2508:                                             ; preds = %2507
  %2509 = icmp sgt i32 %13, 1
  %2510 = icmp sgt i32 %13, 0
  %2511 = add i32 %13, -2
  %2512 = zext i32 %2511 to i64
  %2513 = zext i32 %13 to i64
  %2514 = add nuw i32 %5, 1
  %2515 = icmp eq i32 %13, 1
  br label %2665

2516:                                             ; preds = %2502
  br i1 %2506, label %2517, label %3105

2517:                                             ; preds = %2516
  %2518 = icmp sgt i32 %13, 1
  %2519 = icmp sgt i32 %13, 0
  %2520 = add i32 %13, -2
  %2521 = zext i32 %2520 to i64
  %2522 = zext i32 %13 to i64
  %2523 = add nuw i32 %5, 1
  %2524 = icmp eq i32 %13, 1
  br label %2525

2525:                                             ; preds = %2517, %2663
  %2526 = phi double [ 0.000000e+00, %2517 ], [ %2613, %2663 ]
  %2527 = phi i32 [ 0, %2517 ], [ %2615, %2663 ]
  %2528 = phi double [ 0.000000e+00, %2517 ], [ %2614, %2663 ]
  %2529 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2518, label %2530, label %2599

2530:                                             ; preds = %2525, %2589
  %2531 = phi i32 [ %2598, %2589 ], [ 0, %2525 ]
  %2532 = phi i64 [ %2540, %2589 ], [ %2522, %2525 ]
  %2533 = phi i64 [ %2597, %2589 ], [ %2521, %2525 ]
  %2534 = phi i32 [ %2595, %2589 ], [ %2529, %2525 ]
  %2535 = sub i32 %2520, %2531
  %2536 = tail call i32 @llvm.smin.i32(i32 %2535, i32 0)
  %2537 = sub i32 %2535, %2536
  %2538 = zext i32 %2537 to i64
  %2539 = add nuw nsw i64 %2538, 1
  %2540 = add nsw i64 %2532, -1
  %2541 = icmp ult i32 %2537, 31
  br i1 %2541, label %2577, label %2542

2542:                                             ; preds = %2530
  %2543 = and i64 %2539, 8589934560
  %2544 = sub i64 %2533, %2543
  br label %2545

2545:                                             ; preds = %2545, %2542
  %2546 = phi i64 [ 0, %2542 ], [ %2569, %2545 ]
  %2547 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2542 ], [ %2565, %2545 ]
  %2548 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2542 ], [ %2566, %2545 ]
  %2549 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2542 ], [ %2567, %2545 ]
  %2550 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2542 ], [ %2568, %2545 ]
  %2551 = sub i64 %2533, %2546
  %2552 = getelementptr inbounds i32, ptr %9, i64 %2551
  %2553 = getelementptr inbounds i32, ptr %2552, i64 -7
  %2554 = load <8 x i32>, ptr %2553, align 4, !tbaa !5
  %2555 = shufflevector <8 x i32> %2554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2556 = getelementptr inbounds i32, ptr %2552, i64 -15
  %2557 = load <8 x i32>, ptr %2556, align 4, !tbaa !5
  %2558 = shufflevector <8 x i32> %2557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2559 = getelementptr inbounds i32, ptr %2552, i64 -23
  %2560 = load <8 x i32>, ptr %2559, align 4, !tbaa !5
  %2561 = shufflevector <8 x i32> %2560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2562 = getelementptr inbounds i32, ptr %2552, i64 -31
  %2563 = load <8 x i32>, ptr %2562, align 4, !tbaa !5
  %2564 = shufflevector <8 x i32> %2563, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2565 = mul <8 x i32> %2555, %2547
  %2566 = mul <8 x i32> %2558, %2548
  %2567 = mul <8 x i32> %2561, %2549
  %2568 = mul <8 x i32> %2564, %2550
  %2569 = add nuw i64 %2546, 32
  %2570 = icmp eq i64 %2569, %2543
  br i1 %2570, label %2571, label %2545, !llvm.loop !464

2571:                                             ; preds = %2545
  %2572 = mul <8 x i32> %2566, %2565
  %2573 = mul <8 x i32> %2567, %2572
  %2574 = mul <8 x i32> %2568, %2573
  %2575 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2574)
  %2576 = icmp eq i64 %2539, %2543
  br i1 %2576, label %2589, label %2577

2577:                                             ; preds = %2530, %2571
  %2578 = phi i64 [ %2533, %2530 ], [ %2544, %2571 ]
  %2579 = phi i32 [ 1, %2530 ], [ %2575, %2571 ]
  br label %2580

2580:                                             ; preds = %2577, %2580
  %2581 = phi i64 [ %2586, %2580 ], [ %2578, %2577 ]
  %2582 = phi i32 [ %2585, %2580 ], [ %2579, %2577 ]
  %2583 = getelementptr inbounds i32, ptr %9, i64 %2581
  %2584 = load i32, ptr %2583, align 4, !tbaa !5
  %2585 = mul nsw i32 %2584, %2582
  %2586 = add nsw i64 %2581, -1
  %2587 = trunc i64 %2581 to i32
  %2588 = icmp sgt i32 %2587, 0
  br i1 %2588, label %2580, label %2589, !llvm.loop !465

2589:                                             ; preds = %2580, %2571
  %2590 = phi i32 [ %2575, %2571 ], [ %2585, %2580 ]
  %2591 = and i64 %2540, 4294967295
  %2592 = getelementptr inbounds i32, ptr %6, i64 %2591
  %2593 = load i32, ptr %2592, align 4, !tbaa !5
  %2594 = mul nsw i32 %2593, %2590
  %2595 = add nsw i32 %2594, %2534
  %2596 = icmp sgt i64 %2532, 2
  %2597 = add nsw i64 %2533, -1
  %2598 = add i32 %2531, 1
  br i1 %2596, label %2530, label %2599, !llvm.loop !466

2599:                                             ; preds = %2589, %2525
  %2600 = phi i32 [ %2529, %2525 ], [ %2595, %2589 ]
  %2601 = sext i32 %2600 to i64
  %2602 = getelementptr inbounds double, ptr %2, i64 %2601
  %2603 = load double, ptr %2602, align 8, !tbaa !18
  %2604 = getelementptr inbounds i8, ptr %2489, i64 %2601
  %2605 = load i8, ptr %2604, align 1, !tbaa !11
  %2606 = sitofp i8 %2605 to double
  %2607 = fmul fast double %2603, %2606
  %2608 = fcmp fast uge double %2607, 0.000000e+00
  %2609 = fneg fast double %2607
  %2610 = tail call fast double @llvm.fabs.f64(double %2607)
  %2611 = fcmp fast oge double %2526, %2610
  %2612 = select nnan ninf i1 %2608, double %2607, double %2609
  %2613 = select i1 %2611, double %2526, double %2612
  store double %2613, ptr %2491, align 8, !tbaa !18
  %2614 = fadd fast double %2603, %2528
  %2615 = add nuw nsw i32 %2527, 1
  br i1 %2519, label %2616, label %2663

2616:                                             ; preds = %2599
  %2617 = load i32, ptr %4, align 4, !tbaa !5
  %2618 = load i32, ptr %12, align 4, !tbaa !5
  %2619 = add nsw i32 %2618, -1
  %2620 = icmp slt i32 %2617, %2619
  br i1 %2620, label %2640, label %2621

2621:                                             ; preds = %2616
  %2622 = icmp eq i32 %2617, %2619
  br i1 %2622, label %2623, label %2656

2623:                                             ; preds = %2621
  store i32 0, ptr %4, align 4, !tbaa !5
  %2624 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2624, ptr %6, align 4, !tbaa !5
  br i1 %2524, label %2663, label %2625

2625:                                             ; preds = %2623, %2650
  %2626 = phi i64 [ %2654, %2650 ], [ 1, %2623 ]
  %2627 = getelementptr inbounds i32, ptr %4, i64 %2626
  %2628 = load i32, ptr %2627, align 4, !tbaa !5
  %2629 = getelementptr inbounds i32, ptr %12, i64 %2626
  %2630 = load i32, ptr %2629, align 4, !tbaa !5
  %2631 = add nsw i32 %2630, -1
  %2632 = icmp slt i32 %2628, %2631
  br i1 %2632, label %2633, label %2648

2633:                                             ; preds = %2625
  br i1 %2620, label %2640, label %2634

2634:                                             ; preds = %2633
  %2635 = getelementptr inbounds i32, ptr %7, i64 %2626
  %2636 = load i32, ptr %2635, align 4, !tbaa !5
  %2637 = getelementptr inbounds i32, ptr %6, i64 %2626
  %2638 = load i32, ptr %2637, align 4, !tbaa !5
  %2639 = add nsw i32 %2638, %2636
  store i32 %2639, ptr %2637, align 4, !tbaa !5
  br label %2658

2640:                                             ; preds = %2616, %2633
  %2641 = phi i32 [ %2628, %2633 ], [ %2617, %2616 ]
  %2642 = phi ptr [ %2627, %2633 ], [ %4, %2616 ]
  %2643 = phi i64 [ %2626, %2633 ], [ 0, %2616 ]
  %2644 = add nsw i32 %2641, 1
  store i32 %2644, ptr %2642, align 4, !tbaa !5
  %2645 = getelementptr inbounds i32, ptr %7, i64 %2643
  %2646 = load i32, ptr %2645, align 4, !tbaa !5
  %2647 = getelementptr inbounds i32, ptr %6, i64 %2643
  br label %2658

2648:                                             ; preds = %2625
  %2649 = icmp eq i32 %2628, %2631
  br i1 %2649, label %2650, label %2656

2650:                                             ; preds = %2648
  store i32 0, ptr %2627, align 4, !tbaa !5
  %2651 = getelementptr inbounds i32, ptr %8, i64 %2626
  %2652 = load i32, ptr %2651, align 4, !tbaa !5
  %2653 = getelementptr inbounds i32, ptr %6, i64 %2626
  store i32 %2652, ptr %2653, align 4, !tbaa !5
  %2654 = add nuw nsw i64 %2626, 1
  %2655 = icmp eq i64 %2654, %2522
  br i1 %2655, label %2663, label %2625, !llvm.loop !467

2656:                                             ; preds = %2621, %2648
  %2657 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2658:                                             ; preds = %2634, %2640
  %2659 = phi ptr [ %2647, %2640 ], [ %2627, %2634 ]
  %2660 = phi i32 [ %2646, %2640 ], [ 1, %2634 ]
  %2661 = load i32, ptr %2659, align 4, !tbaa !5
  %2662 = add nsw i32 %2661, %2660
  store i32 %2662, ptr %2659, align 4, !tbaa !5
  br label %2663

2663:                                             ; preds = %2650, %2658, %2623, %2599
  %2664 = icmp eq i32 %2615, %5
  br i1 %2664, label %3105, label %2525, !llvm.loop !468

2665:                                             ; preds = %2508, %2803
  %2666 = phi double [ 0.000000e+00, %2508 ], [ %2751, %2803 ]
  %2667 = phi i32 [ 0, %2508 ], [ %2752, %2803 ]
  %2668 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2509, label %2669, label %2738

2669:                                             ; preds = %2665, %2728
  %2670 = phi i32 [ %2737, %2728 ], [ 0, %2665 ]
  %2671 = phi i64 [ %2679, %2728 ], [ %2513, %2665 ]
  %2672 = phi i64 [ %2736, %2728 ], [ %2512, %2665 ]
  %2673 = phi i32 [ %2734, %2728 ], [ %2668, %2665 ]
  %2674 = sub i32 %2511, %2670
  %2675 = tail call i32 @llvm.smin.i32(i32 %2674, i32 0)
  %2676 = sub i32 %2674, %2675
  %2677 = zext i32 %2676 to i64
  %2678 = add nuw nsw i64 %2677, 1
  %2679 = add nsw i64 %2671, -1
  %2680 = icmp ult i32 %2676, 31
  br i1 %2680, label %2716, label %2681

2681:                                             ; preds = %2669
  %2682 = and i64 %2678, 8589934560
  %2683 = sub i64 %2672, %2682
  br label %2684

2684:                                             ; preds = %2684, %2681
  %2685 = phi i64 [ 0, %2681 ], [ %2708, %2684 ]
  %2686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2704, %2684 ]
  %2687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2705, %2684 ]
  %2688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2706, %2684 ]
  %2689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2681 ], [ %2707, %2684 ]
  %2690 = sub i64 %2672, %2685
  %2691 = getelementptr inbounds i32, ptr %11, i64 %2690
  %2692 = getelementptr inbounds i32, ptr %2691, i64 -7
  %2693 = load <8 x i32>, ptr %2692, align 4, !tbaa !5
  %2694 = shufflevector <8 x i32> %2693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2695 = getelementptr inbounds i32, ptr %2691, i64 -15
  %2696 = load <8 x i32>, ptr %2695, align 4, !tbaa !5
  %2697 = shufflevector <8 x i32> %2696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2698 = getelementptr inbounds i32, ptr %2691, i64 -23
  %2699 = load <8 x i32>, ptr %2698, align 4, !tbaa !5
  %2700 = shufflevector <8 x i32> %2699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2701 = getelementptr inbounds i32, ptr %2691, i64 -31
  %2702 = load <8 x i32>, ptr %2701, align 4, !tbaa !5
  %2703 = shufflevector <8 x i32> %2702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2704 = mul <8 x i32> %2694, %2686
  %2705 = mul <8 x i32> %2697, %2687
  %2706 = mul <8 x i32> %2700, %2688
  %2707 = mul <8 x i32> %2703, %2689
  %2708 = add nuw i64 %2685, 32
  %2709 = icmp eq i64 %2708, %2682
  br i1 %2709, label %2710, label %2684, !llvm.loop !469

2710:                                             ; preds = %2684
  %2711 = mul <8 x i32> %2705, %2704
  %2712 = mul <8 x i32> %2706, %2711
  %2713 = mul <8 x i32> %2707, %2712
  %2714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2713)
  %2715 = icmp eq i64 %2678, %2682
  br i1 %2715, label %2728, label %2716

2716:                                             ; preds = %2669, %2710
  %2717 = phi i64 [ %2672, %2669 ], [ %2683, %2710 ]
  %2718 = phi i32 [ 1, %2669 ], [ %2714, %2710 ]
  br label %2719

2719:                                             ; preds = %2716, %2719
  %2720 = phi i64 [ %2725, %2719 ], [ %2717, %2716 ]
  %2721 = phi i32 [ %2724, %2719 ], [ %2718, %2716 ]
  %2722 = getelementptr inbounds i32, ptr %11, i64 %2720
  %2723 = load i32, ptr %2722, align 4, !tbaa !5
  %2724 = mul nsw i32 %2723, %2721
  %2725 = add nsw i64 %2720, -1
  %2726 = trunc i64 %2720 to i32
  %2727 = icmp sgt i32 %2726, 0
  br i1 %2727, label %2719, label %2728, !llvm.loop !470

2728:                                             ; preds = %2719, %2710
  %2729 = phi i32 [ %2714, %2710 ], [ %2724, %2719 ]
  %2730 = and i64 %2679, 4294967295
  %2731 = getelementptr inbounds i32, ptr %6, i64 %2730
  %2732 = load i32, ptr %2731, align 4, !tbaa !5
  %2733 = mul nsw i32 %2732, %2729
  %2734 = add nsw i32 %2733, %2673
  %2735 = icmp sgt i64 %2671, 2
  %2736 = add nsw i64 %2672, -1
  %2737 = add i32 %2670, 1
  br i1 %2735, label %2669, label %2738, !llvm.loop !471

2738:                                             ; preds = %2728, %2665
  %2739 = phi i32 [ %2668, %2665 ], [ %2734, %2728 ]
  %2740 = icmp slt i32 %2739, %5
  br i1 %2740, label %2743, label %2741

2741:                                             ; preds = %2738
  %2742 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

2743:                                             ; preds = %2738
  %2744 = sext i32 %2739 to i64
  %2745 = getelementptr inbounds i8, ptr %2489, i64 %2744
  %2746 = load i8, ptr %2745, align 1, !tbaa !11
  %2747 = sitofp i8 %2746 to double
  %2748 = icmp slt i8 %2746, 0
  %2749 = fneg fast double %2747
  %2750 = select i1 %2748, double %2749, double %2747
  %2751 = tail call fast double @llvm.maxnum.f64(double %2666, double %2750)
  store double %2751, ptr %2491, align 8, !tbaa !18
  %2752 = add nuw nsw i32 %2667, 1
  br i1 %2510, label %2753, label %2803

2753:                                             ; preds = %2743
  %2754 = load i32, ptr %4, align 4, !tbaa !5
  %2755 = load i32, ptr %12, align 4, !tbaa !5
  %2756 = add nsw i32 %2755, -1
  %2757 = icmp slt i32 %2754, %2756
  br i1 %2757, label %2780, label %2758

2758:                                             ; preds = %2753
  %2759 = icmp eq i32 %2754, %2756
  br i1 %2759, label %2760, label %2796

2760:                                             ; preds = %2758
  store i32 0, ptr %4, align 4, !tbaa !5
  %2761 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2761, ptr %6, align 4, !tbaa !5
  br i1 %2515, label %2803, label %2762

2762:                                             ; preds = %2760, %2790
  %2763 = phi i64 [ %2794, %2790 ], [ 1, %2760 ]
  %2764 = getelementptr inbounds i32, ptr %4, i64 %2763
  %2765 = load i32, ptr %2764, align 4, !tbaa !5
  %2766 = getelementptr inbounds i32, ptr %12, i64 %2763
  %2767 = load i32, ptr %2766, align 4, !tbaa !5
  %2768 = add nsw i32 %2767, -1
  %2769 = icmp slt i32 %2765, %2768
  br i1 %2769, label %2770, label %2788

2770:                                             ; preds = %2762
  br i1 %2757, label %2780, label %2771

2771:                                             ; preds = %2770
  %2772 = shl i64 %2763, 32
  %2773 = add i64 %2772, -4294967296
  %2774 = ashr exact i64 %2773, 32
  %2775 = getelementptr inbounds i32, ptr %7, i64 %2774
  %2776 = load i32, ptr %2775, align 4, !tbaa !5
  %2777 = getelementptr inbounds i32, ptr %6, i64 %2763
  %2778 = load i32, ptr %2777, align 4, !tbaa !5
  %2779 = add nsw i32 %2778, %2776
  store i32 %2779, ptr %2777, align 4, !tbaa !5
  br label %2798

2780:                                             ; preds = %2753, %2770
  %2781 = phi i32 [ %2765, %2770 ], [ %2754, %2753 ]
  %2782 = phi ptr [ %2764, %2770 ], [ %4, %2753 ]
  %2783 = phi i64 [ %2763, %2770 ], [ 0, %2753 ]
  %2784 = add nsw i32 %2781, 1
  store i32 %2784, ptr %2782, align 4, !tbaa !5
  %2785 = getelementptr inbounds i32, ptr %7, i64 %2783
  %2786 = load i32, ptr %2785, align 4, !tbaa !5
  %2787 = getelementptr inbounds i32, ptr %6, i64 %2783
  br label %2798

2788:                                             ; preds = %2762
  %2789 = icmp eq i32 %2765, %2768
  br i1 %2789, label %2790, label %2796

2790:                                             ; preds = %2788
  store i32 0, ptr %2764, align 4, !tbaa !5
  %2791 = getelementptr inbounds i32, ptr %8, i64 %2763
  %2792 = load i32, ptr %2791, align 4, !tbaa !5
  %2793 = getelementptr inbounds i32, ptr %6, i64 %2763
  store i32 %2792, ptr %2793, align 4, !tbaa !5
  %2794 = add nuw nsw i64 %2763, 1
  %2795 = icmp eq i64 %2794, %2513
  br i1 %2795, label %2803, label %2762, !llvm.loop !472

2796:                                             ; preds = %2758, %2788
  %2797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2798:                                             ; preds = %2771, %2780
  %2799 = phi ptr [ %2787, %2780 ], [ %2764, %2771 ]
  %2800 = phi i32 [ %2786, %2780 ], [ 1, %2771 ]
  %2801 = load i32, ptr %2799, align 4, !tbaa !5
  %2802 = add nsw i32 %2801, %2800
  store i32 %2802, ptr %2799, align 4, !tbaa !5
  br label %2803

2803:                                             ; preds = %2790, %2798, %2760, %2743
  %2804 = icmp eq i32 %2752, %5
  br i1 %2804, label %3105, label %2665, !llvm.loop !473

2805:                                             ; preds = %2501
  %2806 = getelementptr inbounds i32, ptr %3, i64 %19
  %2807 = load i32, ptr %2806, align 4, !tbaa !5
  %2808 = icmp eq i32 %2807, 0
  %2809 = icmp sgt i32 %5, 0
  br i1 %2808, label %2819, label %2810

2810:                                             ; preds = %2805
  br i1 %2809, label %2811, label %3105

2811:                                             ; preds = %2810
  %2812 = icmp sgt i32 %13, 1
  %2813 = icmp sgt i32 %13, 0
  %2814 = add i32 %13, -2
  %2815 = zext i32 %2814 to i64
  %2816 = zext i32 %13 to i64
  %2817 = add nuw i32 %5, 1
  %2818 = icmp eq i32 %13, 1
  br label %2963

2819:                                             ; preds = %2805
  br i1 %2809, label %2820, label %3105

2820:                                             ; preds = %2819
  %2821 = icmp sgt i32 %13, 1
  %2822 = icmp sgt i32 %13, 0
  %2823 = add i32 %13, -2
  %2824 = zext i32 %2823 to i64
  %2825 = zext i32 %13 to i64
  %2826 = add nuw i32 %5, 1
  %2827 = icmp eq i32 %13, 1
  br label %2828

2828:                                             ; preds = %2820, %2961
  %2829 = phi double [ 0.000000e+00, %2820 ], [ %2911, %2961 ]
  %2830 = phi i32 [ 0, %2820 ], [ %2913, %2961 ]
  %2831 = phi double [ 0.000000e+00, %2820 ], [ %2912, %2961 ]
  %2832 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2821, label %2833, label %2902

2833:                                             ; preds = %2828, %2892
  %2834 = phi i32 [ %2901, %2892 ], [ 0, %2828 ]
  %2835 = phi i64 [ %2843, %2892 ], [ %2825, %2828 ]
  %2836 = phi i64 [ %2900, %2892 ], [ %2824, %2828 ]
  %2837 = phi i32 [ %2898, %2892 ], [ %2832, %2828 ]
  %2838 = sub i32 %2823, %2834
  %2839 = tail call i32 @llvm.smin.i32(i32 %2838, i32 0)
  %2840 = sub i32 %2838, %2839
  %2841 = zext i32 %2840 to i64
  %2842 = add nuw nsw i64 %2841, 1
  %2843 = add nsw i64 %2835, -1
  %2844 = icmp ult i32 %2840, 31
  br i1 %2844, label %2880, label %2845

2845:                                             ; preds = %2833
  %2846 = and i64 %2842, 8589934560
  %2847 = sub i64 %2836, %2846
  br label %2848

2848:                                             ; preds = %2848, %2845
  %2849 = phi i64 [ 0, %2845 ], [ %2872, %2848 ]
  %2850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2868, %2848 ]
  %2851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2869, %2848 ]
  %2852 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2870, %2848 ]
  %2853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2845 ], [ %2871, %2848 ]
  %2854 = sub i64 %2836, %2849
  %2855 = getelementptr inbounds i32, ptr %9, i64 %2854
  %2856 = getelementptr inbounds i32, ptr %2855, i64 -7
  %2857 = load <8 x i32>, ptr %2856, align 4, !tbaa !5
  %2858 = shufflevector <8 x i32> %2857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2859 = getelementptr inbounds i32, ptr %2855, i64 -15
  %2860 = load <8 x i32>, ptr %2859, align 4, !tbaa !5
  %2861 = shufflevector <8 x i32> %2860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2862 = getelementptr inbounds i32, ptr %2855, i64 -23
  %2863 = load <8 x i32>, ptr %2862, align 4, !tbaa !5
  %2864 = shufflevector <8 x i32> %2863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2865 = getelementptr inbounds i32, ptr %2855, i64 -31
  %2866 = load <8 x i32>, ptr %2865, align 4, !tbaa !5
  %2867 = shufflevector <8 x i32> %2866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2868 = mul <8 x i32> %2858, %2850
  %2869 = mul <8 x i32> %2861, %2851
  %2870 = mul <8 x i32> %2864, %2852
  %2871 = mul <8 x i32> %2867, %2853
  %2872 = add nuw i64 %2849, 32
  %2873 = icmp eq i64 %2872, %2846
  br i1 %2873, label %2874, label %2848, !llvm.loop !474

2874:                                             ; preds = %2848
  %2875 = mul <8 x i32> %2869, %2868
  %2876 = mul <8 x i32> %2870, %2875
  %2877 = mul <8 x i32> %2871, %2876
  %2878 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2877)
  %2879 = icmp eq i64 %2842, %2846
  br i1 %2879, label %2892, label %2880

2880:                                             ; preds = %2833, %2874
  %2881 = phi i64 [ %2836, %2833 ], [ %2847, %2874 ]
  %2882 = phi i32 [ 1, %2833 ], [ %2878, %2874 ]
  br label %2883

2883:                                             ; preds = %2880, %2883
  %2884 = phi i64 [ %2889, %2883 ], [ %2881, %2880 ]
  %2885 = phi i32 [ %2888, %2883 ], [ %2882, %2880 ]
  %2886 = getelementptr inbounds i32, ptr %9, i64 %2884
  %2887 = load i32, ptr %2886, align 4, !tbaa !5
  %2888 = mul nsw i32 %2887, %2885
  %2889 = add nsw i64 %2884, -1
  %2890 = trunc i64 %2884 to i32
  %2891 = icmp sgt i32 %2890, 0
  br i1 %2891, label %2883, label %2892, !llvm.loop !475

2892:                                             ; preds = %2883, %2874
  %2893 = phi i32 [ %2878, %2874 ], [ %2888, %2883 ]
  %2894 = and i64 %2843, 4294967295
  %2895 = getelementptr inbounds i32, ptr %6, i64 %2894
  %2896 = load i32, ptr %2895, align 4, !tbaa !5
  %2897 = mul nsw i32 %2896, %2893
  %2898 = add nsw i32 %2897, %2837
  %2899 = icmp sgt i64 %2835, 2
  %2900 = add nsw i64 %2836, -1
  %2901 = add i32 %2834, 1
  br i1 %2899, label %2833, label %2902, !llvm.loop !476

2902:                                             ; preds = %2892, %2828
  %2903 = phi i32 [ %2832, %2828 ], [ %2898, %2892 ]
  %2904 = sext i32 %2903 to i64
  %2905 = getelementptr inbounds i8, ptr %2489, i64 %2904
  %2906 = load i8, ptr %2905, align 1, !tbaa !11
  %2907 = sitofp i8 %2906 to double
  %2908 = icmp slt i8 %2906, 0
  %2909 = fneg fast double %2907
  %2910 = select fast i1 %2908, double %2909, double %2907
  %2911 = tail call fast double @llvm.maxnum.f64(double %2829, double %2910)
  store double %2911, ptr %2491, align 8, !tbaa !18
  %2912 = fadd fast double %2831, 1.000000e+00
  %2913 = add nuw nsw i32 %2830, 1
  br i1 %2822, label %2914, label %2961

2914:                                             ; preds = %2902
  %2915 = load i32, ptr %4, align 4, !tbaa !5
  %2916 = load i32, ptr %12, align 4, !tbaa !5
  %2917 = add nsw i32 %2916, -1
  %2918 = icmp slt i32 %2915, %2917
  br i1 %2918, label %2938, label %2919

2919:                                             ; preds = %2914
  %2920 = icmp eq i32 %2915, %2917
  br i1 %2920, label %2921, label %2954

2921:                                             ; preds = %2919
  store i32 0, ptr %4, align 4, !tbaa !5
  %2922 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2922, ptr %6, align 4, !tbaa !5
  br i1 %2827, label %2961, label %2923

2923:                                             ; preds = %2921, %2948
  %2924 = phi i64 [ %2952, %2948 ], [ 1, %2921 ]
  %2925 = getelementptr inbounds i32, ptr %4, i64 %2924
  %2926 = load i32, ptr %2925, align 4, !tbaa !5
  %2927 = getelementptr inbounds i32, ptr %12, i64 %2924
  %2928 = load i32, ptr %2927, align 4, !tbaa !5
  %2929 = add nsw i32 %2928, -1
  %2930 = icmp slt i32 %2926, %2929
  br i1 %2930, label %2931, label %2946

2931:                                             ; preds = %2923
  br i1 %2918, label %2938, label %2932

2932:                                             ; preds = %2931
  %2933 = getelementptr inbounds i32, ptr %7, i64 %2924
  %2934 = load i32, ptr %2933, align 4, !tbaa !5
  %2935 = getelementptr inbounds i32, ptr %6, i64 %2924
  %2936 = load i32, ptr %2935, align 4, !tbaa !5
  %2937 = add nsw i32 %2936, %2934
  store i32 %2937, ptr %2935, align 4, !tbaa !5
  br label %2956

2938:                                             ; preds = %2914, %2931
  %2939 = phi i32 [ %2926, %2931 ], [ %2915, %2914 ]
  %2940 = phi ptr [ %2925, %2931 ], [ %4, %2914 ]
  %2941 = phi i64 [ %2924, %2931 ], [ 0, %2914 ]
  %2942 = add nsw i32 %2939, 1
  store i32 %2942, ptr %2940, align 4, !tbaa !5
  %2943 = getelementptr inbounds i32, ptr %7, i64 %2941
  %2944 = load i32, ptr %2943, align 4, !tbaa !5
  %2945 = getelementptr inbounds i32, ptr %6, i64 %2941
  br label %2956

2946:                                             ; preds = %2923
  %2947 = icmp eq i32 %2926, %2929
  br i1 %2947, label %2948, label %2954

2948:                                             ; preds = %2946
  store i32 0, ptr %2925, align 4, !tbaa !5
  %2949 = getelementptr inbounds i32, ptr %8, i64 %2924
  %2950 = load i32, ptr %2949, align 4, !tbaa !5
  %2951 = getelementptr inbounds i32, ptr %6, i64 %2924
  store i32 %2950, ptr %2951, align 4, !tbaa !5
  %2952 = add nuw nsw i64 %2924, 1
  %2953 = icmp eq i64 %2952, %2825
  br i1 %2953, label %2961, label %2923, !llvm.loop !477

2954:                                             ; preds = %2919, %2946
  %2955 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

2956:                                             ; preds = %2932, %2938
  %2957 = phi ptr [ %2945, %2938 ], [ %2925, %2932 ]
  %2958 = phi i32 [ %2944, %2938 ], [ 1, %2932 ]
  %2959 = load i32, ptr %2957, align 4, !tbaa !5
  %2960 = add nsw i32 %2959, %2958
  store i32 %2960, ptr %2957, align 4, !tbaa !5
  br label %2961

2961:                                             ; preds = %2948, %2956, %2921, %2902
  %2962 = icmp eq i32 %2913, %5
  br i1 %2962, label %3105, label %2828, !llvm.loop !478

2963:                                             ; preds = %2811, %3101
  %2964 = phi double [ 0.000000e+00, %2811 ], [ %3049, %3101 ]
  %2965 = phi i32 [ 0, %2811 ], [ %3050, %3101 ]
  %2966 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2812, label %2967, label %3036

2967:                                             ; preds = %2963, %3026
  %2968 = phi i32 [ %3035, %3026 ], [ 0, %2963 ]
  %2969 = phi i64 [ %2977, %3026 ], [ %2816, %2963 ]
  %2970 = phi i64 [ %3034, %3026 ], [ %2815, %2963 ]
  %2971 = phi i32 [ %3032, %3026 ], [ %2966, %2963 ]
  %2972 = sub i32 %2814, %2968
  %2973 = tail call i32 @llvm.smin.i32(i32 %2972, i32 0)
  %2974 = sub i32 %2972, %2973
  %2975 = zext i32 %2974 to i64
  %2976 = add nuw nsw i64 %2975, 1
  %2977 = add nsw i64 %2969, -1
  %2978 = icmp ult i32 %2974, 31
  br i1 %2978, label %3014, label %2979

2979:                                             ; preds = %2967
  %2980 = and i64 %2976, 8589934560
  %2981 = sub i64 %2970, %2980
  br label %2982

2982:                                             ; preds = %2982, %2979
  %2983 = phi i64 [ 0, %2979 ], [ %3006, %2982 ]
  %2984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2979 ], [ %3002, %2982 ]
  %2985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2979 ], [ %3003, %2982 ]
  %2986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2979 ], [ %3004, %2982 ]
  %2987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2979 ], [ %3005, %2982 ]
  %2988 = sub i64 %2970, %2983
  %2989 = getelementptr inbounds i32, ptr %11, i64 %2988
  %2990 = getelementptr inbounds i32, ptr %2989, i64 -7
  %2991 = load <8 x i32>, ptr %2990, align 4, !tbaa !5
  %2992 = shufflevector <8 x i32> %2991, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2993 = getelementptr inbounds i32, ptr %2989, i64 -15
  %2994 = load <8 x i32>, ptr %2993, align 4, !tbaa !5
  %2995 = shufflevector <8 x i32> %2994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2996 = getelementptr inbounds i32, ptr %2989, i64 -23
  %2997 = load <8 x i32>, ptr %2996, align 4, !tbaa !5
  %2998 = shufflevector <8 x i32> %2997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2999 = getelementptr inbounds i32, ptr %2989, i64 -31
  %3000 = load <8 x i32>, ptr %2999, align 4, !tbaa !5
  %3001 = shufflevector <8 x i32> %3000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3002 = mul <8 x i32> %2992, %2984
  %3003 = mul <8 x i32> %2995, %2985
  %3004 = mul <8 x i32> %2998, %2986
  %3005 = mul <8 x i32> %3001, %2987
  %3006 = add nuw i64 %2983, 32
  %3007 = icmp eq i64 %3006, %2980
  br i1 %3007, label %3008, label %2982, !llvm.loop !479

3008:                                             ; preds = %2982
  %3009 = mul <8 x i32> %3003, %3002
  %3010 = mul <8 x i32> %3004, %3009
  %3011 = mul <8 x i32> %3005, %3010
  %3012 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3011)
  %3013 = icmp eq i64 %2976, %2980
  br i1 %3013, label %3026, label %3014

3014:                                             ; preds = %2967, %3008
  %3015 = phi i64 [ %2970, %2967 ], [ %2981, %3008 ]
  %3016 = phi i32 [ 1, %2967 ], [ %3012, %3008 ]
  br label %3017

3017:                                             ; preds = %3014, %3017
  %3018 = phi i64 [ %3023, %3017 ], [ %3015, %3014 ]
  %3019 = phi i32 [ %3022, %3017 ], [ %3016, %3014 ]
  %3020 = getelementptr inbounds i32, ptr %11, i64 %3018
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = mul nsw i32 %3021, %3019
  %3023 = add nsw i64 %3018, -1
  %3024 = trunc i64 %3018 to i32
  %3025 = icmp sgt i32 %3024, 0
  br i1 %3025, label %3017, label %3026, !llvm.loop !480

3026:                                             ; preds = %3017, %3008
  %3027 = phi i32 [ %3012, %3008 ], [ %3022, %3017 ]
  %3028 = and i64 %2977, 4294967295
  %3029 = getelementptr inbounds i32, ptr %6, i64 %3028
  %3030 = load i32, ptr %3029, align 4, !tbaa !5
  %3031 = mul nsw i32 %3030, %3027
  %3032 = add nsw i32 %3031, %2971
  %3033 = icmp sgt i64 %2969, 2
  %3034 = add nsw i64 %2970, -1
  %3035 = add i32 %2968, 1
  br i1 %3033, label %2967, label %3036, !llvm.loop !481

3036:                                             ; preds = %3026, %2963
  %3037 = phi i32 [ %2966, %2963 ], [ %3032, %3026 ]
  %3038 = icmp slt i32 %3037, %5
  br i1 %3038, label %3041, label %3039

3039:                                             ; preds = %3036
  %3040 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3110

3041:                                             ; preds = %3036
  %3042 = sext i32 %3037 to i64
  %3043 = getelementptr inbounds i8, ptr %2489, i64 %3042
  %3044 = load i8, ptr %3043, align 1, !tbaa !11
  %3045 = sitofp i8 %3044 to double
  %3046 = icmp slt i8 %3044, 0
  %3047 = fneg fast double %3045
  %3048 = select fast i1 %3046, double %3047, double %3045
  %3049 = tail call fast double @llvm.maxnum.f64(double %2964, double %3048)
  store double %3049, ptr %2491, align 8, !tbaa !18
  %3050 = add nuw nsw i32 %2965, 1
  br i1 %2813, label %3051, label %3101

3051:                                             ; preds = %3041
  %3052 = load i32, ptr %4, align 4, !tbaa !5
  %3053 = load i32, ptr %12, align 4, !tbaa !5
  %3054 = add nsw i32 %3053, -1
  %3055 = icmp slt i32 %3052, %3054
  br i1 %3055, label %3078, label %3056

3056:                                             ; preds = %3051
  %3057 = icmp eq i32 %3052, %3054
  br i1 %3057, label %3058, label %3094

3058:                                             ; preds = %3056
  store i32 0, ptr %4, align 4, !tbaa !5
  %3059 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3059, ptr %6, align 4, !tbaa !5
  br i1 %2818, label %3101, label %3060

3060:                                             ; preds = %3058, %3088
  %3061 = phi i64 [ %3092, %3088 ], [ 1, %3058 ]
  %3062 = getelementptr inbounds i32, ptr %4, i64 %3061
  %3063 = load i32, ptr %3062, align 4, !tbaa !5
  %3064 = getelementptr inbounds i32, ptr %12, i64 %3061
  %3065 = load i32, ptr %3064, align 4, !tbaa !5
  %3066 = add nsw i32 %3065, -1
  %3067 = icmp slt i32 %3063, %3066
  br i1 %3067, label %3068, label %3086

3068:                                             ; preds = %3060
  br i1 %3055, label %3078, label %3069

3069:                                             ; preds = %3068
  %3070 = shl i64 %3061, 32
  %3071 = add i64 %3070, -4294967296
  %3072 = ashr exact i64 %3071, 32
  %3073 = getelementptr inbounds i32, ptr %7, i64 %3072
  %3074 = load i32, ptr %3073, align 4, !tbaa !5
  %3075 = getelementptr inbounds i32, ptr %6, i64 %3061
  %3076 = load i32, ptr %3075, align 4, !tbaa !5
  %3077 = add nsw i32 %3076, %3074
  store i32 %3077, ptr %3075, align 4, !tbaa !5
  br label %3096

3078:                                             ; preds = %3051, %3068
  %3079 = phi i32 [ %3063, %3068 ], [ %3052, %3051 ]
  %3080 = phi ptr [ %3062, %3068 ], [ %4, %3051 ]
  %3081 = phi i64 [ %3061, %3068 ], [ 0, %3051 ]
  %3082 = add nsw i32 %3079, 1
  store i32 %3082, ptr %3080, align 4, !tbaa !5
  %3083 = getelementptr inbounds i32, ptr %7, i64 %3081
  %3084 = load i32, ptr %3083, align 4, !tbaa !5
  %3085 = getelementptr inbounds i32, ptr %6, i64 %3081
  br label %3096

3086:                                             ; preds = %3060
  %3087 = icmp eq i32 %3063, %3066
  br i1 %3087, label %3088, label %3094

3088:                                             ; preds = %3086
  store i32 0, ptr %3062, align 4, !tbaa !5
  %3089 = getelementptr inbounds i32, ptr %8, i64 %3061
  %3090 = load i32, ptr %3089, align 4, !tbaa !5
  %3091 = getelementptr inbounds i32, ptr %6, i64 %3061
  store i32 %3090, ptr %3091, align 4, !tbaa !5
  %3092 = add nuw nsw i64 %3061, 1
  %3093 = icmp eq i64 %3092, %2816
  br i1 %3093, label %3101, label %3060, !llvm.loop !482

3094:                                             ; preds = %3056, %3086
  %3095 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3110

3096:                                             ; preds = %3069, %3078
  %3097 = phi ptr [ %3085, %3078 ], [ %3062, %3069 ]
  %3098 = phi i32 [ %3084, %3078 ], [ 1, %3069 ]
  %3099 = load i32, ptr %3097, align 4, !tbaa !5
  %3100 = add nsw i32 %3099, %3098
  store i32 %3100, ptr %3097, align 4, !tbaa !5
  br label %3101

3101:                                             ; preds = %3088, %3096, %3058, %3041
  %3102 = icmp eq i32 %3050, %5
  br i1 %3102, label %3105, label %2963, !llvm.loop !483

3103:                                             ; preds = %2501
  %3104 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 718, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3105

3105:                                             ; preds = %3101, %2961, %2803, %2663, %2483, %2343, %2185, %2042, %1860, %1720, %1562, %1422, %1242, %1104, %948, %805, %623, %487, %333, %194, %2810, %2819, %2507, %2516, %2192, %2201, %1884, %1893, %1569, %1578, %1266, %1275, %955, %964, %647, %656, %340, %349, %36, %45, %2493, %3103, %1870, %2485, %1252, %1862, %639, %1244, %28, %625, %18
  %3106 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %625 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1244 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %1862 ], [ 0.000000e+00, %1252 ], [ 0.000000e+00, %2485 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %3103 ], [ 0.000000e+00, %2493 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %36 ], [ 0.000000e+00, %349 ], [ 0.000000e+00, %340 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %964 ], [ 0.000000e+00, %955 ], [ 0.000000e+00, %1275 ], [ 0.000000e+00, %1266 ], [ 0.000000e+00, %1578 ], [ 0.000000e+00, %1569 ], [ 0.000000e+00, %1893 ], [ 0.000000e+00, %1884 ], [ 0.000000e+00, %2201 ], [ 0.000000e+00, %2192 ], [ 0.000000e+00, %2516 ], [ 0.000000e+00, %2507 ], [ 0.000000e+00, %2819 ], [ 0.000000e+00, %2810 ], [ %145, %194 ], [ 0.000000e+00, %333 ], [ %438, %487 ], [ 0.000000e+00, %623 ], [ %756, %805 ], [ 0.000000e+00, %948 ], [ %1055, %1104 ], [ 0.000000e+00, %1242 ], [ %1373, %1422 ], [ 0.000000e+00, %1562 ], [ %1671, %1720 ], [ 0.000000e+00, %1860 ], [ %1993, %2042 ], [ 0.000000e+00, %2185 ], [ %2294, %2343 ], [ 0.000000e+00, %2483 ], [ %2614, %2663 ], [ 0.000000e+00, %2803 ], [ %2912, %2961 ], [ 0.000000e+00, %3101 ]
  %3107 = phi i32 [ %10, %18 ], [ 1, %625 ], [ 1, %28 ], [ 1, %1244 ], [ 1, %639 ], [ 1, %1862 ], [ 1, %1252 ], [ 1, %2485 ], [ 1, %1870 ], [ 1, %3103 ], [ 1, %2493 ], [ 1, %45 ], [ 1, %36 ], [ 1, %349 ], [ 1, %340 ], [ 1, %656 ], [ 1, %647 ], [ 1, %964 ], [ 1, %955 ], [ 1, %1275 ], [ 1, %1266 ], [ 1, %1578 ], [ 1, %1569 ], [ 1, %1893 ], [ 1, %1884 ], [ 1, %2201 ], [ 1, %2192 ], [ 1, %2516 ], [ 1, %2507 ], [ 1, %2819 ], [ 1, %2810 ], [ %52, %194 ], [ %43, %333 ], [ %356, %487 ], [ %347, %623 ], [ %663, %805 ], [ %654, %948 ], [ %971, %1104 ], [ %962, %1242 ], [ %1282, %1422 ], [ %1273, %1562 ], [ %1585, %1720 ], [ %1576, %1860 ], [ %1900, %2042 ], [ %1891, %2185 ], [ %2208, %2343 ], [ %2199, %2483 ], [ %2523, %2663 ], [ %2514, %2803 ], [ %2826, %2961 ], [ %2817, %3101 ]
  %3108 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3107, ptr noundef nonnull @.str.5) #3
  %3109 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3106, ptr noundef nonnull @.str.6) #3
  br label %3110

3110:                                             ; preds = %2656, %2741, %2796, %2954, %3039, %3094, %2035, %2120, %2178, %2336, %2421, %2476, %1415, %1500, %1555, %1713, %1798, %1853, %798, %882, %941, %1097, %1181, %1235, %187, %271, %326, %480, %564, %616, %3105
  %3111 = phi i32 [ 0, %3105 ], [ -1, %616 ], [ -1, %564 ], [ -1, %480 ], [ -1, %326 ], [ -1, %271 ], [ -1, %187 ], [ -1, %1235 ], [ -1, %1181 ], [ -1, %1097 ], [ -1, %941 ], [ -1, %882 ], [ -1, %798 ], [ -1, %1853 ], [ -1, %1798 ], [ -1, %1713 ], [ -1, %1555 ], [ -1, %1500 ], [ -1, %1415 ], [ -1, %2476 ], [ -1, %2421 ], [ -1, %2336 ], [ -1, %2178 ], [ -1, %2120 ], [ -1, %2035 ], [ -1, %3094 ], [ -1, %3039 ], [ -1, %2954 ], [ -1, %2796 ], [ -1, %2741 ], [ -1, %2656 ]
  ret i32 %3111
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3123 [
    i32 101, label %22
    i32 102, label %641
    i32 107, label %1260
    i32 108, label %1878
    i32 109, label %2501
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !78
  %30 = and i16 %29, 255
  %31 = icmp eq i16 %30, 0
  %32 = trunc i16 %29 to i8
  %33 = select i1 %31, i8 0, i8 %32
  store i8 %33, ptr %26, align 1, !tbaa !11
  br label %3123

34:                                               ; preds = %22
  switch i32 %1, label %639 [
    i32 1, label %35
    i32 0, label %341
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds i32, ptr %3, i64 %19
  %37 = load i32, ptr %36, align 4, !tbaa !5
  %38 = icmp eq i32 %37, 0
  %39 = icmp sgt i32 %5, 0
  br i1 %38, label %49, label %40

40:                                               ; preds = %35
  br i1 %39, label %41, label %3123

41:                                               ; preds = %40
  %42 = icmp sgt i32 %13, 1
  %43 = icmp sgt i32 %13, 0
  %44 = add i32 %13, -2
  %45 = zext i32 %44 to i64
  %46 = zext i32 %13 to i64
  %47 = add nuw i32 %5, 1
  %48 = icmp eq i32 %13, 1
  br label %201

49:                                               ; preds = %35
  br i1 %39, label %50, label %3123

50:                                               ; preds = %49
  %51 = icmp sgt i32 %13, 1
  %52 = icmp sgt i32 %13, 0
  %53 = add i32 %13, -2
  %54 = zext i32 %53 to i64
  %55 = zext i32 %13 to i64
  %56 = add nuw i32 %5, 1
  %57 = icmp eq i32 %13, 1
  br label %58

58:                                               ; preds = %50, %199
  %59 = phi i32 [ 0, %50 ], [ %151, %199 ]
  %60 = phi double [ 0.000000e+00, %50 ], [ %150, %199 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %51, label %62, label %131

62:                                               ; preds = %58, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %58 ]
  %64 = phi i64 [ %72, %121 ], [ %55, %58 ]
  %65 = phi i64 [ %129, %121 ], [ %54, %58 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %58 ]
  %67 = sub i32 %53, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !484

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !485

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !486

131:                                              ; preds = %121, %58
  %132 = phi i32 [ %61, %58 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds i16, ptr %24, i64 %133
  %137 = load i16, ptr %136, align 2, !tbaa !78
  %138 = load i8, ptr %26, align 1, !tbaa !11
  %139 = uitofp i8 %138 to double
  %140 = and i16 %137, 255
  %141 = uitofp i16 %140 to double
  %142 = fmul fast double %135, %141
  %143 = fcmp fast uge double %142, 0.000000e+00
  %144 = fneg fast double %142
  %145 = tail call fast double @llvm.fabs.f64(double %142)
  %146 = fcmp fast ole double %145, %139
  %147 = select nnan ninf i1 %143, double %142, double %144
  %148 = select i1 %146, double %139, double %147
  %149 = fptoui double %148 to i8
  store i8 %149, ptr %26, align 1, !tbaa !11
  %150 = fadd fast double %135, %60
  %151 = add nuw nsw i32 %59, 1
  br i1 %52, label %152, label %199

152:                                              ; preds = %131
  %153 = load i32, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %12, align 4, !tbaa !5
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !5
  %160 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %160, ptr %6, align 4, !tbaa !5
  br i1 %57, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !5
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !5
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !5
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %55
  br i1 %191, label %199, label %161, !llvm.loop !487

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !5
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !5
  br label %199

199:                                              ; preds = %186, %194, %159, %131
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %3123, label %58, !llvm.loop !488

201:                                              ; preds = %41, %339
  %202 = phi i32 [ 0, %41 ], [ %288, %339 ]
  %203 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %42, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %46, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %45, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %44, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !5
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !5
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !489

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !490

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !5
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !491

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

278:                                              ; preds = %273
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds i16, ptr %24, i64 %279
  %281 = load i16, ptr %280, align 2, !tbaa !78
  %282 = load i8, ptr %26, align 1, !tbaa !11
  %283 = uitofp i8 %282 to double
  %284 = and i16 %281, 255
  %285 = uitofp i16 %284 to double
  %286 = tail call fast double @llvm.maxnum.f64(double %283, double %285)
  %287 = fptoui double %286 to i8
  store i8 %287, ptr %26, align 1, !tbaa !11
  %288 = add nuw nsw i32 %202, 1
  br i1 %43, label %289, label %339

289:                                              ; preds = %278
  %290 = load i32, ptr %4, align 4, !tbaa !5
  %291 = load i32, ptr %12, align 4, !tbaa !5
  %292 = add nsw i32 %291, -1
  %293 = icmp slt i32 %290, %292
  br i1 %293, label %316, label %294

294:                                              ; preds = %289
  %295 = icmp eq i32 %290, %292
  br i1 %295, label %296, label %332

296:                                              ; preds = %294
  store i32 0, ptr %4, align 4, !tbaa !5
  %297 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %297, ptr %6, align 4, !tbaa !5
  br i1 %48, label %339, label %298

298:                                              ; preds = %296, %326
  %299 = phi i64 [ %330, %326 ], [ 1, %296 ]
  %300 = getelementptr inbounds i32, ptr %4, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %12, i64 %299
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, -1
  %305 = icmp slt i32 %301, %304
  br i1 %305, label %306, label %324

306:                                              ; preds = %298
  br i1 %293, label %316, label %307

307:                                              ; preds = %306
  %308 = shl i64 %299, 32
  %309 = add i64 %308, -4294967296
  %310 = ashr exact i64 %309, 32
  %311 = getelementptr inbounds i32, ptr %7, i64 %310
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %299
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = add nsw i32 %314, %312
  store i32 %315, ptr %313, align 4, !tbaa !5
  br label %334

316:                                              ; preds = %289, %306
  %317 = phi i32 [ %301, %306 ], [ %290, %289 ]
  %318 = phi ptr [ %300, %306 ], [ %4, %289 ]
  %319 = phi i64 [ %299, %306 ], [ 0, %289 ]
  %320 = add nsw i32 %317, 1
  store i32 %320, ptr %318, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %7, i64 %319
  %322 = load i32, ptr %321, align 4, !tbaa !5
  %323 = getelementptr inbounds i32, ptr %6, i64 %319
  br label %334

324:                                              ; preds = %298
  %325 = icmp eq i32 %301, %304
  br i1 %325, label %326, label %332

326:                                              ; preds = %324
  store i32 0, ptr %300, align 4, !tbaa !5
  %327 = getelementptr inbounds i32, ptr %8, i64 %299
  %328 = load i32, ptr %327, align 4, !tbaa !5
  %329 = getelementptr inbounds i32, ptr %6, i64 %299
  store i32 %328, ptr %329, align 4, !tbaa !5
  %330 = add nuw nsw i64 %299, 1
  %331 = icmp eq i64 %330, %46
  br i1 %331, label %339, label %298, !llvm.loop !492

332:                                              ; preds = %294, %324
  %333 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

334:                                              ; preds = %307, %316
  %335 = phi ptr [ %323, %316 ], [ %300, %307 ]
  %336 = phi i32 [ %322, %316 ], [ 1, %307 ]
  %337 = load i32, ptr %335, align 4, !tbaa !5
  %338 = add nsw i32 %337, %336
  store i32 %338, ptr %335, align 4, !tbaa !5
  br label %339

339:                                              ; preds = %326, %334, %296, %278
  %340 = icmp eq i32 %288, %5
  br i1 %340, label %3123, label %201, !llvm.loop !493

341:                                              ; preds = %34
  %342 = getelementptr inbounds i32, ptr %3, i64 %19
  %343 = load i32, ptr %342, align 4, !tbaa !5
  %344 = icmp eq i32 %343, 0
  %345 = icmp sgt i32 %5, 0
  br i1 %344, label %355, label %346

346:                                              ; preds = %341
  br i1 %345, label %347, label %3123

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %499

355:                                              ; preds = %341
  br i1 %345, label %356, label %3123

356:                                              ; preds = %355
  %357 = icmp sgt i32 %13, 1
  %358 = icmp sgt i32 %13, 0
  %359 = add i32 %13, -2
  %360 = zext i32 %359 to i64
  %361 = zext i32 %13 to i64
  %362 = add nuw i32 %5, 1
  %363 = icmp eq i32 %13, 1
  br label %364

364:                                              ; preds = %356, %497
  %365 = phi i32 [ 0, %356 ], [ %449, %497 ]
  %366 = phi double [ 0.000000e+00, %356 ], [ %448, %497 ]
  %367 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %357, label %368, label %437

368:                                              ; preds = %364, %427
  %369 = phi i32 [ %436, %427 ], [ 0, %364 ]
  %370 = phi i64 [ %378, %427 ], [ %361, %364 ]
  %371 = phi i64 [ %435, %427 ], [ %360, %364 ]
  %372 = phi i32 [ %433, %427 ], [ %367, %364 ]
  %373 = sub i32 %359, %369
  %374 = tail call i32 @llvm.smin.i32(i32 %373, i32 0)
  %375 = sub i32 %373, %374
  %376 = zext i32 %375 to i64
  %377 = add nuw nsw i64 %376, 1
  %378 = add nsw i64 %370, -1
  %379 = icmp ult i32 %375, 31
  br i1 %379, label %415, label %380

380:                                              ; preds = %368
  %381 = and i64 %377, 8589934560
  %382 = sub i64 %371, %381
  br label %383

383:                                              ; preds = %383, %380
  %384 = phi i64 [ 0, %380 ], [ %407, %383 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %403, %383 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %404, %383 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %405, %383 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %406, %383 ]
  %389 = sub i64 %371, %384
  %390 = getelementptr inbounds i32, ptr %9, i64 %389
  %391 = getelementptr inbounds i32, ptr %390, i64 -7
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %390, i64 -15
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %390, i64 -23
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = getelementptr inbounds i32, ptr %390, i64 -31
  %401 = load <8 x i32>, ptr %400, align 4, !tbaa !5
  %402 = shufflevector <8 x i32> %401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %403 = mul <8 x i32> %393, %385
  %404 = mul <8 x i32> %396, %386
  %405 = mul <8 x i32> %399, %387
  %406 = mul <8 x i32> %402, %388
  %407 = add nuw i64 %384, 32
  %408 = icmp eq i64 %407, %381
  br i1 %408, label %409, label %383, !llvm.loop !494

409:                                              ; preds = %383
  %410 = mul <8 x i32> %404, %403
  %411 = mul <8 x i32> %405, %410
  %412 = mul <8 x i32> %406, %411
  %413 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %412)
  %414 = icmp eq i64 %377, %381
  br i1 %414, label %427, label %415

415:                                              ; preds = %368, %409
  %416 = phi i64 [ %371, %368 ], [ %382, %409 ]
  %417 = phi i32 [ 1, %368 ], [ %413, %409 ]
  br label %418

418:                                              ; preds = %415, %418
  %419 = phi i64 [ %424, %418 ], [ %416, %415 ]
  %420 = phi i32 [ %423, %418 ], [ %417, %415 ]
  %421 = getelementptr inbounds i32, ptr %9, i64 %419
  %422 = load i32, ptr %421, align 4, !tbaa !5
  %423 = mul nsw i32 %422, %420
  %424 = add nsw i64 %419, -1
  %425 = trunc i64 %419 to i32
  %426 = icmp sgt i32 %425, 0
  br i1 %426, label %418, label %427, !llvm.loop !495

427:                                              ; preds = %418, %409
  %428 = phi i32 [ %413, %409 ], [ %423, %418 ]
  %429 = and i64 %378, 4294967295
  %430 = getelementptr inbounds i32, ptr %6, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !5
  %432 = mul nsw i32 %431, %428
  %433 = add nsw i32 %432, %372
  %434 = icmp sgt i64 %370, 2
  %435 = add nsw i64 %371, -1
  %436 = add i32 %369, 1
  br i1 %434, label %368, label %437, !llvm.loop !496

437:                                              ; preds = %427, %364
  %438 = phi i32 [ %367, %364 ], [ %433, %427 ]
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i16, ptr %24, i64 %439
  %441 = load i16, ptr %440, align 2, !tbaa !78
  %442 = load i8, ptr %26, align 1, !tbaa !11
  %443 = zext i8 %442 to i32
  %444 = and i16 %441, 255
  %445 = zext i16 %444 to i32
  %446 = tail call i32 @llvm.umax.i32(i32 %443, i32 %445)
  %447 = trunc i32 %446 to i8
  store i8 %447, ptr %26, align 1, !tbaa !11
  %448 = fadd fast double %366, 1.000000e+00
  %449 = add nuw nsw i32 %365, 1
  br i1 %358, label %450, label %497

450:                                              ; preds = %437
  %451 = load i32, ptr %4, align 4, !tbaa !5
  %452 = load i32, ptr %12, align 4, !tbaa !5
  %453 = add nsw i32 %452, -1
  %454 = icmp slt i32 %451, %453
  br i1 %454, label %474, label %455

455:                                              ; preds = %450
  %456 = icmp eq i32 %451, %453
  br i1 %456, label %457, label %490

457:                                              ; preds = %455
  store i32 0, ptr %4, align 4, !tbaa !5
  %458 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %458, ptr %6, align 4, !tbaa !5
  br i1 %363, label %497, label %459

459:                                              ; preds = %457, %484
  %460 = phi i64 [ %488, %484 ], [ 1, %457 ]
  %461 = getelementptr inbounds i32, ptr %4, i64 %460
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %12, i64 %460
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = add nsw i32 %464, -1
  %466 = icmp slt i32 %462, %465
  br i1 %466, label %467, label %482

467:                                              ; preds = %459
  br i1 %454, label %474, label %468

468:                                              ; preds = %467
  %469 = getelementptr inbounds i32, ptr %7, i64 %460
  %470 = load i32, ptr %469, align 4, !tbaa !5
  %471 = getelementptr inbounds i32, ptr %6, i64 %460
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = add nsw i32 %472, %470
  store i32 %473, ptr %471, align 4, !tbaa !5
  br label %492

474:                                              ; preds = %450, %467
  %475 = phi i32 [ %462, %467 ], [ %451, %450 ]
  %476 = phi ptr [ %461, %467 ], [ %4, %450 ]
  %477 = phi i64 [ %460, %467 ], [ 0, %450 ]
  %478 = add nsw i32 %475, 1
  store i32 %478, ptr %476, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %7, i64 %477
  %480 = load i32, ptr %479, align 4, !tbaa !5
  %481 = getelementptr inbounds i32, ptr %6, i64 %477
  br label %492

482:                                              ; preds = %459
  %483 = icmp eq i32 %462, %465
  br i1 %483, label %484, label %490

484:                                              ; preds = %482
  store i32 0, ptr %461, align 4, !tbaa !5
  %485 = getelementptr inbounds i32, ptr %8, i64 %460
  %486 = load i32, ptr %485, align 4, !tbaa !5
  %487 = getelementptr inbounds i32, ptr %6, i64 %460
  store i32 %486, ptr %487, align 4, !tbaa !5
  %488 = add nuw nsw i64 %460, 1
  %489 = icmp eq i64 %488, %361
  br i1 %489, label %497, label %459, !llvm.loop !497

490:                                              ; preds = %455, %482
  %491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

492:                                              ; preds = %468, %474
  %493 = phi ptr [ %481, %474 ], [ %461, %468 ]
  %494 = phi i32 [ %480, %474 ], [ 1, %468 ]
  %495 = load i32, ptr %493, align 4, !tbaa !5
  %496 = add nsw i32 %495, %494
  store i32 %496, ptr %493, align 4, !tbaa !5
  br label %497

497:                                              ; preds = %484, %492, %457, %437
  %498 = icmp eq i32 %449, %5
  br i1 %498, label %3123, label %364, !llvm.loop !498

499:                                              ; preds = %347, %637
  %500 = phi i32 [ 0, %347 ], [ %586, %637 ]
  %501 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %348, label %502, label %571

502:                                              ; preds = %499, %561
  %503 = phi i32 [ %570, %561 ], [ 0, %499 ]
  %504 = phi i64 [ %512, %561 ], [ %352, %499 ]
  %505 = phi i64 [ %569, %561 ], [ %351, %499 ]
  %506 = phi i32 [ %567, %561 ], [ %501, %499 ]
  %507 = sub i32 %350, %503
  %508 = tail call i32 @llvm.smin.i32(i32 %507, i32 0)
  %509 = sub i32 %507, %508
  %510 = zext i32 %509 to i64
  %511 = add nuw nsw i64 %510, 1
  %512 = add nsw i64 %504, -1
  %513 = icmp ult i32 %509, 31
  br i1 %513, label %549, label %514

514:                                              ; preds = %502
  %515 = and i64 %511, 8589934560
  %516 = sub i64 %505, %515
  br label %517

517:                                              ; preds = %517, %514
  %518 = phi i64 [ 0, %514 ], [ %541, %517 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %537, %517 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %538, %517 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %539, %517 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %514 ], [ %540, %517 ]
  %523 = sub i64 %505, %518
  %524 = getelementptr inbounds i32, ptr %11, i64 %523
  %525 = getelementptr inbounds i32, ptr %524, i64 -7
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !5
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %524, i64 -15
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !5
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = getelementptr inbounds i32, ptr %524, i64 -23
  %532 = load <8 x i32>, ptr %531, align 4, !tbaa !5
  %533 = shufflevector <8 x i32> %532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %534 = getelementptr inbounds i32, ptr %524, i64 -31
  %535 = load <8 x i32>, ptr %534, align 4, !tbaa !5
  %536 = shufflevector <8 x i32> %535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %537 = mul <8 x i32> %527, %519
  %538 = mul <8 x i32> %530, %520
  %539 = mul <8 x i32> %533, %521
  %540 = mul <8 x i32> %536, %522
  %541 = add nuw i64 %518, 32
  %542 = icmp eq i64 %541, %515
  br i1 %542, label %543, label %517, !llvm.loop !499

543:                                              ; preds = %517
  %544 = mul <8 x i32> %538, %537
  %545 = mul <8 x i32> %539, %544
  %546 = mul <8 x i32> %540, %545
  %547 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %546)
  %548 = icmp eq i64 %511, %515
  br i1 %548, label %561, label %549

549:                                              ; preds = %502, %543
  %550 = phi i64 [ %505, %502 ], [ %516, %543 ]
  %551 = phi i32 [ 1, %502 ], [ %547, %543 ]
  br label %552

552:                                              ; preds = %549, %552
  %553 = phi i64 [ %558, %552 ], [ %550, %549 ]
  %554 = phi i32 [ %557, %552 ], [ %551, %549 ]
  %555 = getelementptr inbounds i32, ptr %11, i64 %553
  %556 = load i32, ptr %555, align 4, !tbaa !5
  %557 = mul nsw i32 %556, %554
  %558 = add nsw i64 %553, -1
  %559 = trunc i64 %553 to i32
  %560 = icmp sgt i32 %559, 0
  br i1 %560, label %552, label %561, !llvm.loop !500

561:                                              ; preds = %552, %543
  %562 = phi i32 [ %547, %543 ], [ %557, %552 ]
  %563 = and i64 %512, 4294967295
  %564 = getelementptr inbounds i32, ptr %6, i64 %563
  %565 = load i32, ptr %564, align 4, !tbaa !5
  %566 = mul nsw i32 %565, %562
  %567 = add nsw i32 %566, %506
  %568 = icmp sgt i64 %504, 2
  %569 = add nsw i64 %505, -1
  %570 = add i32 %503, 1
  br i1 %568, label %502, label %571, !llvm.loop !501

571:                                              ; preds = %561, %499
  %572 = phi i32 [ %501, %499 ], [ %567, %561 ]
  %573 = icmp slt i32 %572, %5
  br i1 %573, label %576, label %574

574:                                              ; preds = %571
  %575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

576:                                              ; preds = %571
  %577 = sext i32 %572 to i64
  %578 = getelementptr inbounds i16, ptr %24, i64 %577
  %579 = load i16, ptr %578, align 2, !tbaa !78
  %580 = load i8, ptr %26, align 1, !tbaa !11
  %581 = zext i8 %580 to i32
  %582 = and i16 %579, 255
  %583 = zext i16 %582 to i32
  %584 = tail call i32 @llvm.umax.i32(i32 %581, i32 %583)
  %585 = trunc i32 %584 to i8
  store i8 %585, ptr %26, align 1, !tbaa !11
  %586 = add nuw nsw i32 %500, 1
  br i1 %349, label %587, label %637

587:                                              ; preds = %576
  %588 = load i32, ptr %4, align 4, !tbaa !5
  %589 = load i32, ptr %12, align 4, !tbaa !5
  %590 = add nsw i32 %589, -1
  %591 = icmp slt i32 %588, %590
  br i1 %591, label %614, label %592

592:                                              ; preds = %587
  %593 = icmp eq i32 %588, %590
  br i1 %593, label %594, label %630

594:                                              ; preds = %592
  store i32 0, ptr %4, align 4, !tbaa !5
  %595 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %595, ptr %6, align 4, !tbaa !5
  br i1 %354, label %637, label %596

596:                                              ; preds = %594, %624
  %597 = phi i64 [ %628, %624 ], [ 1, %594 ]
  %598 = getelementptr inbounds i32, ptr %4, i64 %597
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %12, i64 %597
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = add nsw i32 %601, -1
  %603 = icmp slt i32 %599, %602
  br i1 %603, label %604, label %622

604:                                              ; preds = %596
  br i1 %591, label %614, label %605

605:                                              ; preds = %604
  %606 = shl i64 %597, 32
  %607 = add i64 %606, -4294967296
  %608 = ashr exact i64 %607, 32
  %609 = getelementptr inbounds i32, ptr %7, i64 %608
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = getelementptr inbounds i32, ptr %6, i64 %597
  %612 = load i32, ptr %611, align 4, !tbaa !5
  %613 = add nsw i32 %612, %610
  store i32 %613, ptr %611, align 4, !tbaa !5
  br label %632

614:                                              ; preds = %587, %604
  %615 = phi i32 [ %599, %604 ], [ %588, %587 ]
  %616 = phi ptr [ %598, %604 ], [ %4, %587 ]
  %617 = phi i64 [ %597, %604 ], [ 0, %587 ]
  %618 = add nsw i32 %615, 1
  store i32 %618, ptr %616, align 4, !tbaa !5
  %619 = getelementptr inbounds i32, ptr %7, i64 %617
  %620 = load i32, ptr %619, align 4, !tbaa !5
  %621 = getelementptr inbounds i32, ptr %6, i64 %617
  br label %632

622:                                              ; preds = %596
  %623 = icmp eq i32 %599, %602
  br i1 %623, label %624, label %630

624:                                              ; preds = %622
  store i32 0, ptr %598, align 4, !tbaa !5
  %625 = getelementptr inbounds i32, ptr %8, i64 %597
  %626 = load i32, ptr %625, align 4, !tbaa !5
  %627 = getelementptr inbounds i32, ptr %6, i64 %597
  store i32 %626, ptr %627, align 4, !tbaa !5
  %628 = add nuw nsw i64 %597, 1
  %629 = icmp eq i64 %628, %352
  br i1 %629, label %637, label %596, !llvm.loop !502

630:                                              ; preds = %592, %622
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

632:                                              ; preds = %605, %614
  %633 = phi ptr [ %621, %614 ], [ %598, %605 ]
  %634 = phi i32 [ %620, %614 ], [ 1, %605 ]
  %635 = load i32, ptr %633, align 4, !tbaa !5
  %636 = add nsw i32 %635, %634
  store i32 %636, ptr %633, align 4, !tbaa !5
  br label %637

637:                                              ; preds = %624, %632, %594, %576
  %638 = icmp eq i32 %586, %5
  br i1 %638, label %3123, label %499, !llvm.loop !503

639:                                              ; preds = %34
  %640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 996, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3123

641:                                              ; preds = %18
  %642 = getelementptr inbounds ptr, ptr %14, i64 %19
  %643 = load ptr, ptr %642, align 8, !tbaa !9
  %644 = getelementptr inbounds ptr, ptr %16, i64 %19
  %645 = load ptr, ptr %644, align 8, !tbaa !9
  store i32 0, ptr %645, align 4, !tbaa !5
  %646 = icmp eq i32 %13, 0
  br i1 %646, label %647, label %655

647:                                              ; preds = %641
  %648 = load i16, ptr %643, align 2, !tbaa !78
  %649 = icmp eq i16 %648, 0
  br i1 %649, label %653, label %650

650:                                              ; preds = %647
  %651 = tail call i16 @llvm.abs.i16(i16 %648, i1 false)
  %652 = zext i16 %651 to i32
  br label %653

653:                                              ; preds = %647, %650
  %654 = phi i32 [ %652, %650 ], [ 0, %647 ]
  store i32 %654, ptr %645, align 4, !tbaa !5
  br label %3123

655:                                              ; preds = %641
  switch i32 %1, label %1258 [
    i32 1, label %656
    i32 0, label %964
  ]

656:                                              ; preds = %655
  %657 = getelementptr inbounds i32, ptr %3, i64 %19
  %658 = load i32, ptr %657, align 4, !tbaa !5
  %659 = icmp eq i32 %658, 0
  %660 = icmp sgt i32 %5, 0
  br i1 %659, label %670, label %661

661:                                              ; preds = %656
  br i1 %660, label %662, label %3123

662:                                              ; preds = %661
  %663 = icmp sgt i32 %13, 1
  %664 = icmp sgt i32 %13, 0
  %665 = add i32 %13, -2
  %666 = zext i32 %665 to i64
  %667 = zext i32 %13 to i64
  %668 = add nuw i32 %5, 1
  %669 = icmp eq i32 %13, 1
  br label %821

670:                                              ; preds = %656
  br i1 %660, label %671, label %3123

671:                                              ; preds = %670
  %672 = icmp sgt i32 %13, 1
  %673 = icmp sgt i32 %13, 0
  %674 = add i32 %13, -2
  %675 = zext i32 %674 to i64
  %676 = zext i32 %13 to i64
  %677 = add nuw i32 %5, 1
  %678 = icmp eq i32 %13, 1
  br label %679

679:                                              ; preds = %671, %819
  %680 = phi i32 [ 0, %671 ], [ %771, %819 ]
  %681 = phi double [ 0.000000e+00, %671 ], [ %770, %819 ]
  %682 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %672, label %683, label %752

683:                                              ; preds = %679, %742
  %684 = phi i32 [ %751, %742 ], [ 0, %679 ]
  %685 = phi i64 [ %693, %742 ], [ %676, %679 ]
  %686 = phi i64 [ %750, %742 ], [ %675, %679 ]
  %687 = phi i32 [ %748, %742 ], [ %682, %679 ]
  %688 = sub i32 %674, %684
  %689 = tail call i32 @llvm.smin.i32(i32 %688, i32 0)
  %690 = sub i32 %688, %689
  %691 = zext i32 %690 to i64
  %692 = add nuw nsw i64 %691, 1
  %693 = add nsw i64 %685, -1
  %694 = icmp ult i32 %690, 31
  br i1 %694, label %730, label %695

695:                                              ; preds = %683
  %696 = and i64 %692, 8589934560
  %697 = sub i64 %686, %696
  br label %698

698:                                              ; preds = %698, %695
  %699 = phi i64 [ 0, %695 ], [ %722, %698 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %718, %698 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %719, %698 ]
  %702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %720, %698 ]
  %703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %721, %698 ]
  %704 = sub i64 %686, %699
  %705 = getelementptr inbounds i32, ptr %9, i64 %704
  %706 = getelementptr inbounds i32, ptr %705, i64 -7
  %707 = load <8 x i32>, ptr %706, align 4, !tbaa !5
  %708 = shufflevector <8 x i32> %707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %709 = getelementptr inbounds i32, ptr %705, i64 -15
  %710 = load <8 x i32>, ptr %709, align 4, !tbaa !5
  %711 = shufflevector <8 x i32> %710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %712 = getelementptr inbounds i32, ptr %705, i64 -23
  %713 = load <8 x i32>, ptr %712, align 4, !tbaa !5
  %714 = shufflevector <8 x i32> %713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %715 = getelementptr inbounds i32, ptr %705, i64 -31
  %716 = load <8 x i32>, ptr %715, align 4, !tbaa !5
  %717 = shufflevector <8 x i32> %716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %718 = mul <8 x i32> %708, %700
  %719 = mul <8 x i32> %711, %701
  %720 = mul <8 x i32> %714, %702
  %721 = mul <8 x i32> %717, %703
  %722 = add nuw i64 %699, 32
  %723 = icmp eq i64 %722, %696
  br i1 %723, label %724, label %698, !llvm.loop !504

724:                                              ; preds = %698
  %725 = mul <8 x i32> %719, %718
  %726 = mul <8 x i32> %720, %725
  %727 = mul <8 x i32> %721, %726
  %728 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %727)
  %729 = icmp eq i64 %692, %696
  br i1 %729, label %742, label %730

730:                                              ; preds = %683, %724
  %731 = phi i64 [ %686, %683 ], [ %697, %724 ]
  %732 = phi i32 [ 1, %683 ], [ %728, %724 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i64 [ %739, %733 ], [ %731, %730 ]
  %735 = phi i32 [ %738, %733 ], [ %732, %730 ]
  %736 = getelementptr inbounds i32, ptr %9, i64 %734
  %737 = load i32, ptr %736, align 4, !tbaa !5
  %738 = mul nsw i32 %737, %735
  %739 = add nsw i64 %734, -1
  %740 = trunc i64 %734 to i32
  %741 = icmp sgt i32 %740, 0
  br i1 %741, label %733, label %742, !llvm.loop !505

742:                                              ; preds = %733, %724
  %743 = phi i32 [ %728, %724 ], [ %738, %733 ]
  %744 = and i64 %693, 4294967295
  %745 = getelementptr inbounds i32, ptr %6, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !5
  %747 = mul nsw i32 %746, %743
  %748 = add nsw i32 %747, %687
  %749 = icmp sgt i64 %685, 2
  %750 = add nsw i64 %686, -1
  %751 = add i32 %684, 1
  br i1 %749, label %683, label %752, !llvm.loop !506

752:                                              ; preds = %742, %679
  %753 = phi i32 [ %682, %679 ], [ %748, %742 ]
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %2, i64 %754
  %756 = load double, ptr %755, align 8, !tbaa !18
  %757 = getelementptr inbounds i16, ptr %643, i64 %754
  %758 = load i16, ptr %757, align 2, !tbaa !78
  %759 = load i32, ptr %645, align 4, !tbaa !5
  %760 = sitofp i32 %759 to double
  %761 = sitofp i16 %758 to double
  %762 = fmul fast double %756, %761
  %763 = fcmp fast uge double %762, 0.000000e+00
  %764 = fneg fast double %762
  %765 = tail call fast double @llvm.fabs.f64(double %762)
  %766 = fcmp fast ole double %765, %760
  %767 = select nnan ninf i1 %763, double %762, double %764
  %768 = select i1 %766, double %760, double %767
  %769 = fptosi double %768 to i32
  store i32 %769, ptr %645, align 4, !tbaa !5
  %770 = fadd fast double %756, %681
  %771 = add nuw nsw i32 %680, 1
  br i1 %673, label %772, label %819

772:                                              ; preds = %752
  %773 = load i32, ptr %4, align 4, !tbaa !5
  %774 = load i32, ptr %12, align 4, !tbaa !5
  %775 = add nsw i32 %774, -1
  %776 = icmp slt i32 %773, %775
  br i1 %776, label %796, label %777

777:                                              ; preds = %772
  %778 = icmp eq i32 %773, %775
  br i1 %778, label %779, label %812

779:                                              ; preds = %777
  store i32 0, ptr %4, align 4, !tbaa !5
  %780 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %780, ptr %6, align 4, !tbaa !5
  br i1 %678, label %819, label %781

781:                                              ; preds = %779, %806
  %782 = phi i64 [ %810, %806 ], [ 1, %779 ]
  %783 = getelementptr inbounds i32, ptr %4, i64 %782
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = getelementptr inbounds i32, ptr %12, i64 %782
  %786 = load i32, ptr %785, align 4, !tbaa !5
  %787 = add nsw i32 %786, -1
  %788 = icmp slt i32 %784, %787
  br i1 %788, label %789, label %804

789:                                              ; preds = %781
  br i1 %776, label %796, label %790

790:                                              ; preds = %789
  %791 = getelementptr inbounds i32, ptr %7, i64 %782
  %792 = load i32, ptr %791, align 4, !tbaa !5
  %793 = getelementptr inbounds i32, ptr %6, i64 %782
  %794 = load i32, ptr %793, align 4, !tbaa !5
  %795 = add nsw i32 %794, %792
  store i32 %795, ptr %793, align 4, !tbaa !5
  br label %814

796:                                              ; preds = %772, %789
  %797 = phi i32 [ %784, %789 ], [ %773, %772 ]
  %798 = phi ptr [ %783, %789 ], [ %4, %772 ]
  %799 = phi i64 [ %782, %789 ], [ 0, %772 ]
  %800 = add nsw i32 %797, 1
  store i32 %800, ptr %798, align 4, !tbaa !5
  %801 = getelementptr inbounds i32, ptr %7, i64 %799
  %802 = load i32, ptr %801, align 4, !tbaa !5
  %803 = getelementptr inbounds i32, ptr %6, i64 %799
  br label %814

804:                                              ; preds = %781
  %805 = icmp eq i32 %784, %787
  br i1 %805, label %806, label %812

806:                                              ; preds = %804
  store i32 0, ptr %783, align 4, !tbaa !5
  %807 = getelementptr inbounds i32, ptr %8, i64 %782
  %808 = load i32, ptr %807, align 4, !tbaa !5
  %809 = getelementptr inbounds i32, ptr %6, i64 %782
  store i32 %808, ptr %809, align 4, !tbaa !5
  %810 = add nuw nsw i64 %782, 1
  %811 = icmp eq i64 %810, %676
  br i1 %811, label %819, label %781, !llvm.loop !507

812:                                              ; preds = %777, %804
  %813 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

814:                                              ; preds = %790, %796
  %815 = phi ptr [ %803, %796 ], [ %783, %790 ]
  %816 = phi i32 [ %802, %796 ], [ 1, %790 ]
  %817 = load i32, ptr %815, align 4, !tbaa !5
  %818 = add nsw i32 %817, %816
  store i32 %818, ptr %815, align 4, !tbaa !5
  br label %819

819:                                              ; preds = %806, %814, %779, %752
  %820 = icmp eq i32 %771, %5
  br i1 %820, label %3123, label %679, !llvm.loop !508

821:                                              ; preds = %662, %962
  %822 = phi i32 [ 0, %662 ], [ %911, %962 ]
  %823 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %663, label %824, label %893

824:                                              ; preds = %821, %883
  %825 = phi i32 [ %892, %883 ], [ 0, %821 ]
  %826 = phi i64 [ %834, %883 ], [ %667, %821 ]
  %827 = phi i64 [ %891, %883 ], [ %666, %821 ]
  %828 = phi i32 [ %889, %883 ], [ %823, %821 ]
  %829 = sub i32 %665, %825
  %830 = tail call i32 @llvm.smin.i32(i32 %829, i32 0)
  %831 = sub i32 %829, %830
  %832 = zext i32 %831 to i64
  %833 = add nuw nsw i64 %832, 1
  %834 = add nsw i64 %826, -1
  %835 = icmp ult i32 %831, 31
  br i1 %835, label %871, label %836

836:                                              ; preds = %824
  %837 = and i64 %833, 8589934560
  %838 = sub i64 %827, %837
  br label %839

839:                                              ; preds = %839, %836
  %840 = phi i64 [ 0, %836 ], [ %863, %839 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %836 ], [ %859, %839 ]
  %842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %836 ], [ %860, %839 ]
  %843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %836 ], [ %861, %839 ]
  %844 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %836 ], [ %862, %839 ]
  %845 = sub i64 %827, %840
  %846 = getelementptr inbounds i32, ptr %11, i64 %845
  %847 = getelementptr inbounds i32, ptr %846, i64 -7
  %848 = load <8 x i32>, ptr %847, align 4, !tbaa !5
  %849 = shufflevector <8 x i32> %848, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %850 = getelementptr inbounds i32, ptr %846, i64 -15
  %851 = load <8 x i32>, ptr %850, align 4, !tbaa !5
  %852 = shufflevector <8 x i32> %851, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %853 = getelementptr inbounds i32, ptr %846, i64 -23
  %854 = load <8 x i32>, ptr %853, align 4, !tbaa !5
  %855 = shufflevector <8 x i32> %854, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %856 = getelementptr inbounds i32, ptr %846, i64 -31
  %857 = load <8 x i32>, ptr %856, align 4, !tbaa !5
  %858 = shufflevector <8 x i32> %857, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %859 = mul <8 x i32> %849, %841
  %860 = mul <8 x i32> %852, %842
  %861 = mul <8 x i32> %855, %843
  %862 = mul <8 x i32> %858, %844
  %863 = add nuw i64 %840, 32
  %864 = icmp eq i64 %863, %837
  br i1 %864, label %865, label %839, !llvm.loop !509

865:                                              ; preds = %839
  %866 = mul <8 x i32> %860, %859
  %867 = mul <8 x i32> %861, %866
  %868 = mul <8 x i32> %862, %867
  %869 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %868)
  %870 = icmp eq i64 %833, %837
  br i1 %870, label %883, label %871

871:                                              ; preds = %824, %865
  %872 = phi i64 [ %827, %824 ], [ %838, %865 ]
  %873 = phi i32 [ 1, %824 ], [ %869, %865 ]
  br label %874

874:                                              ; preds = %871, %874
  %875 = phi i64 [ %880, %874 ], [ %872, %871 ]
  %876 = phi i32 [ %879, %874 ], [ %873, %871 ]
  %877 = getelementptr inbounds i32, ptr %11, i64 %875
  %878 = load i32, ptr %877, align 4, !tbaa !5
  %879 = mul nsw i32 %878, %876
  %880 = add nsw i64 %875, -1
  %881 = trunc i64 %875 to i32
  %882 = icmp sgt i32 %881, 0
  br i1 %882, label %874, label %883, !llvm.loop !510

883:                                              ; preds = %874, %865
  %884 = phi i32 [ %869, %865 ], [ %879, %874 ]
  %885 = and i64 %834, 4294967295
  %886 = getelementptr inbounds i32, ptr %6, i64 %885
  %887 = load i32, ptr %886, align 4, !tbaa !5
  %888 = mul nsw i32 %887, %884
  %889 = add nsw i32 %888, %828
  %890 = icmp sgt i64 %826, 2
  %891 = add nsw i64 %827, -1
  %892 = add i32 %825, 1
  br i1 %890, label %824, label %893, !llvm.loop !511

893:                                              ; preds = %883, %821
  %894 = phi i32 [ %823, %821 ], [ %889, %883 ]
  %895 = icmp slt i32 %894, %5
  br i1 %895, label %898, label %896

896:                                              ; preds = %893
  %897 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

898:                                              ; preds = %893
  %899 = sext i32 %894 to i64
  %900 = getelementptr inbounds i16, ptr %643, i64 %899
  %901 = load i16, ptr %900, align 2, !tbaa !78
  %902 = load i32, ptr %645, align 4, !tbaa !5
  %903 = sitofp i32 %902 to double
  %904 = sitofp i16 %901 to double
  %905 = icmp slt i16 %901, 0
  %906 = fneg fast double %904
  %907 = select i1 %905, double %906, double %904
  %908 = fcmp fast ole double %907, %903
  %909 = select fast i1 %908, double %903, double %907
  %910 = fptosi double %909 to i32
  store i32 %910, ptr %645, align 4, !tbaa !5
  %911 = add nuw nsw i32 %822, 1
  br i1 %664, label %912, label %962

912:                                              ; preds = %898
  %913 = load i32, ptr %4, align 4, !tbaa !5
  %914 = load i32, ptr %12, align 4, !tbaa !5
  %915 = add nsw i32 %914, -1
  %916 = icmp slt i32 %913, %915
  br i1 %916, label %939, label %917

917:                                              ; preds = %912
  %918 = icmp eq i32 %913, %915
  br i1 %918, label %919, label %955

919:                                              ; preds = %917
  store i32 0, ptr %4, align 4, !tbaa !5
  %920 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %920, ptr %6, align 4, !tbaa !5
  br i1 %669, label %962, label %921

921:                                              ; preds = %919, %949
  %922 = phi i64 [ %953, %949 ], [ 1, %919 ]
  %923 = getelementptr inbounds i32, ptr %4, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !5
  %925 = getelementptr inbounds i32, ptr %12, i64 %922
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = add nsw i32 %926, -1
  %928 = icmp slt i32 %924, %927
  br i1 %928, label %929, label %947

929:                                              ; preds = %921
  br i1 %916, label %939, label %930

930:                                              ; preds = %929
  %931 = shl i64 %922, 32
  %932 = add i64 %931, -4294967296
  %933 = ashr exact i64 %932, 32
  %934 = getelementptr inbounds i32, ptr %7, i64 %933
  %935 = load i32, ptr %934, align 4, !tbaa !5
  %936 = getelementptr inbounds i32, ptr %6, i64 %922
  %937 = load i32, ptr %936, align 4, !tbaa !5
  %938 = add nsw i32 %937, %935
  store i32 %938, ptr %936, align 4, !tbaa !5
  br label %957

939:                                              ; preds = %912, %929
  %940 = phi i32 [ %924, %929 ], [ %913, %912 ]
  %941 = phi ptr [ %923, %929 ], [ %4, %912 ]
  %942 = phi i64 [ %922, %929 ], [ 0, %912 ]
  %943 = add nsw i32 %940, 1
  store i32 %943, ptr %941, align 4, !tbaa !5
  %944 = getelementptr inbounds i32, ptr %7, i64 %942
  %945 = load i32, ptr %944, align 4, !tbaa !5
  %946 = getelementptr inbounds i32, ptr %6, i64 %942
  br label %957

947:                                              ; preds = %921
  %948 = icmp eq i32 %924, %927
  br i1 %948, label %949, label %955

949:                                              ; preds = %947
  store i32 0, ptr %923, align 4, !tbaa !5
  %950 = getelementptr inbounds i32, ptr %8, i64 %922
  %951 = load i32, ptr %950, align 4, !tbaa !5
  %952 = getelementptr inbounds i32, ptr %6, i64 %922
  store i32 %951, ptr %952, align 4, !tbaa !5
  %953 = add nuw nsw i64 %922, 1
  %954 = icmp eq i64 %953, %667
  br i1 %954, label %962, label %921, !llvm.loop !512

955:                                              ; preds = %917, %947
  %956 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

957:                                              ; preds = %930, %939
  %958 = phi ptr [ %946, %939 ], [ %923, %930 ]
  %959 = phi i32 [ %945, %939 ], [ 1, %930 ]
  %960 = load i32, ptr %958, align 4, !tbaa !5
  %961 = add nsw i32 %960, %959
  store i32 %961, ptr %958, align 4, !tbaa !5
  br label %962

962:                                              ; preds = %949, %957, %919, %898
  %963 = icmp eq i32 %911, %5
  br i1 %963, label %3123, label %821, !llvm.loop !513

964:                                              ; preds = %655
  %965 = getelementptr inbounds i32, ptr %3, i64 %19
  %966 = load i32, ptr %965, align 4, !tbaa !5
  %967 = icmp eq i32 %966, 0
  %968 = icmp sgt i32 %5, 0
  br i1 %967, label %978, label %969

969:                                              ; preds = %964
  br i1 %968, label %970, label %3123

970:                                              ; preds = %969
  %971 = icmp sgt i32 %13, 1
  %972 = icmp sgt i32 %13, 0
  %973 = add i32 %13, -2
  %974 = zext i32 %973 to i64
  %975 = zext i32 %13 to i64
  %976 = add nuw i32 %5, 1
  %977 = icmp eq i32 %13, 1
  br label %1120

978:                                              ; preds = %964
  br i1 %968, label %979, label %3123

979:                                              ; preds = %978
  %980 = icmp sgt i32 %13, 1
  %981 = icmp sgt i32 %13, 0
  %982 = add i32 %13, -2
  %983 = zext i32 %982 to i64
  %984 = zext i32 %13 to i64
  %985 = add nuw i32 %5, 1
  %986 = icmp eq i32 %13, 1
  br label %987

987:                                              ; preds = %979, %1118
  %988 = phi i32 [ 0, %979 ], [ %1070, %1118 ]
  %989 = phi double [ 0.000000e+00, %979 ], [ %1069, %1118 ]
  %990 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %980, label %991, label %1060

991:                                              ; preds = %987, %1050
  %992 = phi i32 [ %1059, %1050 ], [ 0, %987 ]
  %993 = phi i64 [ %1001, %1050 ], [ %984, %987 ]
  %994 = phi i64 [ %1058, %1050 ], [ %983, %987 ]
  %995 = phi i32 [ %1056, %1050 ], [ %990, %987 ]
  %996 = sub i32 %982, %992
  %997 = tail call i32 @llvm.smin.i32(i32 %996, i32 0)
  %998 = sub i32 %996, %997
  %999 = zext i32 %998 to i64
  %1000 = add nuw nsw i64 %999, 1
  %1001 = add nsw i64 %993, -1
  %1002 = icmp ult i32 %998, 31
  br i1 %1002, label %1038, label %1003

1003:                                             ; preds = %991
  %1004 = and i64 %1000, 8589934560
  %1005 = sub i64 %994, %1004
  br label %1006

1006:                                             ; preds = %1006, %1003
  %1007 = phi i64 [ 0, %1003 ], [ %1030, %1006 ]
  %1008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1003 ], [ %1026, %1006 ]
  %1009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1003 ], [ %1027, %1006 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1003 ], [ %1028, %1006 ]
  %1011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1003 ], [ %1029, %1006 ]
  %1012 = sub i64 %994, %1007
  %1013 = getelementptr inbounds i32, ptr %9, i64 %1012
  %1014 = getelementptr inbounds i32, ptr %1013, i64 -7
  %1015 = load <8 x i32>, ptr %1014, align 4, !tbaa !5
  %1016 = shufflevector <8 x i32> %1015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1017 = getelementptr inbounds i32, ptr %1013, i64 -15
  %1018 = load <8 x i32>, ptr %1017, align 4, !tbaa !5
  %1019 = shufflevector <8 x i32> %1018, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1020 = getelementptr inbounds i32, ptr %1013, i64 -23
  %1021 = load <8 x i32>, ptr %1020, align 4, !tbaa !5
  %1022 = shufflevector <8 x i32> %1021, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1023 = getelementptr inbounds i32, ptr %1013, i64 -31
  %1024 = load <8 x i32>, ptr %1023, align 4, !tbaa !5
  %1025 = shufflevector <8 x i32> %1024, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1026 = mul <8 x i32> %1016, %1008
  %1027 = mul <8 x i32> %1019, %1009
  %1028 = mul <8 x i32> %1022, %1010
  %1029 = mul <8 x i32> %1025, %1011
  %1030 = add nuw i64 %1007, 32
  %1031 = icmp eq i64 %1030, %1004
  br i1 %1031, label %1032, label %1006, !llvm.loop !514

1032:                                             ; preds = %1006
  %1033 = mul <8 x i32> %1027, %1026
  %1034 = mul <8 x i32> %1028, %1033
  %1035 = mul <8 x i32> %1029, %1034
  %1036 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1035)
  %1037 = icmp eq i64 %1000, %1004
  br i1 %1037, label %1050, label %1038

1038:                                             ; preds = %991, %1032
  %1039 = phi i64 [ %994, %991 ], [ %1005, %1032 ]
  %1040 = phi i32 [ 1, %991 ], [ %1036, %1032 ]
  br label %1041

1041:                                             ; preds = %1038, %1041
  %1042 = phi i64 [ %1047, %1041 ], [ %1039, %1038 ]
  %1043 = phi i32 [ %1046, %1041 ], [ %1040, %1038 ]
  %1044 = getelementptr inbounds i32, ptr %9, i64 %1042
  %1045 = load i32, ptr %1044, align 4, !tbaa !5
  %1046 = mul nsw i32 %1045, %1043
  %1047 = add nsw i64 %1042, -1
  %1048 = trunc i64 %1042 to i32
  %1049 = icmp sgt i32 %1048, 0
  br i1 %1049, label %1041, label %1050, !llvm.loop !515

1050:                                             ; preds = %1041, %1032
  %1051 = phi i32 [ %1036, %1032 ], [ %1046, %1041 ]
  %1052 = and i64 %1001, 4294967295
  %1053 = getelementptr inbounds i32, ptr %6, i64 %1052
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = mul nsw i32 %1054, %1051
  %1056 = add nsw i32 %1055, %995
  %1057 = icmp sgt i64 %993, 2
  %1058 = add nsw i64 %994, -1
  %1059 = add i32 %992, 1
  br i1 %1057, label %991, label %1060, !llvm.loop !516

1060:                                             ; preds = %1050, %987
  %1061 = phi i32 [ %990, %987 ], [ %1056, %1050 ]
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds i16, ptr %643, i64 %1062
  %1064 = load i16, ptr %1063, align 2, !tbaa !78
  %1065 = load i32, ptr %645, align 4, !tbaa !5
  %1066 = tail call i16 @llvm.abs.i16(i16 %1064, i1 false)
  %1067 = zext i16 %1066 to i32
  %1068 = tail call i32 @llvm.smax.i32(i32 %1065, i32 %1067)
  store i32 %1068, ptr %645, align 4, !tbaa !5
  %1069 = fadd fast double %989, 1.000000e+00
  %1070 = add nuw nsw i32 %988, 1
  br i1 %981, label %1071, label %1118

1071:                                             ; preds = %1060
  %1072 = load i32, ptr %4, align 4, !tbaa !5
  %1073 = load i32, ptr %12, align 4, !tbaa !5
  %1074 = add nsw i32 %1073, -1
  %1075 = icmp slt i32 %1072, %1074
  br i1 %1075, label %1095, label %1076

1076:                                             ; preds = %1071
  %1077 = icmp eq i32 %1072, %1074
  br i1 %1077, label %1078, label %1111

1078:                                             ; preds = %1076
  store i32 0, ptr %4, align 4, !tbaa !5
  %1079 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1079, ptr %6, align 4, !tbaa !5
  br i1 %986, label %1118, label %1080

1080:                                             ; preds = %1078, %1105
  %1081 = phi i64 [ %1109, %1105 ], [ 1, %1078 ]
  %1082 = getelementptr inbounds i32, ptr %4, i64 %1081
  %1083 = load i32, ptr %1082, align 4, !tbaa !5
  %1084 = getelementptr inbounds i32, ptr %12, i64 %1081
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = add nsw i32 %1085, -1
  %1087 = icmp slt i32 %1083, %1086
  br i1 %1087, label %1088, label %1103

1088:                                             ; preds = %1080
  br i1 %1075, label %1095, label %1089

1089:                                             ; preds = %1088
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1081
  %1091 = load i32, ptr %1090, align 4, !tbaa !5
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1081
  %1093 = load i32, ptr %1092, align 4, !tbaa !5
  %1094 = add nsw i32 %1093, %1091
  store i32 %1094, ptr %1092, align 4, !tbaa !5
  br label %1113

1095:                                             ; preds = %1071, %1088
  %1096 = phi i32 [ %1083, %1088 ], [ %1072, %1071 ]
  %1097 = phi ptr [ %1082, %1088 ], [ %4, %1071 ]
  %1098 = phi i64 [ %1081, %1088 ], [ 0, %1071 ]
  %1099 = add nsw i32 %1096, 1
  store i32 %1099, ptr %1097, align 4, !tbaa !5
  %1100 = getelementptr inbounds i32, ptr %7, i64 %1098
  %1101 = load i32, ptr %1100, align 4, !tbaa !5
  %1102 = getelementptr inbounds i32, ptr %6, i64 %1098
  br label %1113

1103:                                             ; preds = %1080
  %1104 = icmp eq i32 %1083, %1086
  br i1 %1104, label %1105, label %1111

1105:                                             ; preds = %1103
  store i32 0, ptr %1082, align 4, !tbaa !5
  %1106 = getelementptr inbounds i32, ptr %8, i64 %1081
  %1107 = load i32, ptr %1106, align 4, !tbaa !5
  %1108 = getelementptr inbounds i32, ptr %6, i64 %1081
  store i32 %1107, ptr %1108, align 4, !tbaa !5
  %1109 = add nuw nsw i64 %1081, 1
  %1110 = icmp eq i64 %1109, %984
  br i1 %1110, label %1118, label %1080, !llvm.loop !517

1111:                                             ; preds = %1076, %1103
  %1112 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

1113:                                             ; preds = %1089, %1095
  %1114 = phi ptr [ %1102, %1095 ], [ %1082, %1089 ]
  %1115 = phi i32 [ %1101, %1095 ], [ 1, %1089 ]
  %1116 = load i32, ptr %1114, align 4, !tbaa !5
  %1117 = add nsw i32 %1116, %1115
  store i32 %1117, ptr %1114, align 4, !tbaa !5
  br label %1118

1118:                                             ; preds = %1105, %1113, %1078, %1060
  %1119 = icmp eq i32 %1070, %5
  br i1 %1119, label %3123, label %987, !llvm.loop !518

1120:                                             ; preds = %970, %1256
  %1121 = phi i32 [ 0, %970 ], [ %1205, %1256 ]
  %1122 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %971, label %1123, label %1192

1123:                                             ; preds = %1120, %1182
  %1124 = phi i32 [ %1191, %1182 ], [ 0, %1120 ]
  %1125 = phi i64 [ %1133, %1182 ], [ %975, %1120 ]
  %1126 = phi i64 [ %1190, %1182 ], [ %974, %1120 ]
  %1127 = phi i32 [ %1188, %1182 ], [ %1122, %1120 ]
  %1128 = sub i32 %973, %1124
  %1129 = tail call i32 @llvm.smin.i32(i32 %1128, i32 0)
  %1130 = sub i32 %1128, %1129
  %1131 = zext i32 %1130 to i64
  %1132 = add nuw nsw i64 %1131, 1
  %1133 = add nsw i64 %1125, -1
  %1134 = icmp ult i32 %1130, 31
  br i1 %1134, label %1170, label %1135

1135:                                             ; preds = %1123
  %1136 = and i64 %1132, 8589934560
  %1137 = sub i64 %1126, %1136
  br label %1138

1138:                                             ; preds = %1138, %1135
  %1139 = phi i64 [ 0, %1135 ], [ %1162, %1138 ]
  %1140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1135 ], [ %1158, %1138 ]
  %1141 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1135 ], [ %1159, %1138 ]
  %1142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1135 ], [ %1160, %1138 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1135 ], [ %1161, %1138 ]
  %1144 = sub i64 %1126, %1139
  %1145 = getelementptr inbounds i32, ptr %11, i64 %1144
  %1146 = getelementptr inbounds i32, ptr %1145, i64 -7
  %1147 = load <8 x i32>, ptr %1146, align 4, !tbaa !5
  %1148 = shufflevector <8 x i32> %1147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1149 = getelementptr inbounds i32, ptr %1145, i64 -15
  %1150 = load <8 x i32>, ptr %1149, align 4, !tbaa !5
  %1151 = shufflevector <8 x i32> %1150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1152 = getelementptr inbounds i32, ptr %1145, i64 -23
  %1153 = load <8 x i32>, ptr %1152, align 4, !tbaa !5
  %1154 = shufflevector <8 x i32> %1153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1155 = getelementptr inbounds i32, ptr %1145, i64 -31
  %1156 = load <8 x i32>, ptr %1155, align 4, !tbaa !5
  %1157 = shufflevector <8 x i32> %1156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1158 = mul <8 x i32> %1148, %1140
  %1159 = mul <8 x i32> %1151, %1141
  %1160 = mul <8 x i32> %1154, %1142
  %1161 = mul <8 x i32> %1157, %1143
  %1162 = add nuw i64 %1139, 32
  %1163 = icmp eq i64 %1162, %1136
  br i1 %1163, label %1164, label %1138, !llvm.loop !519

1164:                                             ; preds = %1138
  %1165 = mul <8 x i32> %1159, %1158
  %1166 = mul <8 x i32> %1160, %1165
  %1167 = mul <8 x i32> %1161, %1166
  %1168 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1167)
  %1169 = icmp eq i64 %1132, %1136
  br i1 %1169, label %1182, label %1170

1170:                                             ; preds = %1123, %1164
  %1171 = phi i64 [ %1126, %1123 ], [ %1137, %1164 ]
  %1172 = phi i32 [ 1, %1123 ], [ %1168, %1164 ]
  br label %1173

1173:                                             ; preds = %1170, %1173
  %1174 = phi i64 [ %1179, %1173 ], [ %1171, %1170 ]
  %1175 = phi i32 [ %1178, %1173 ], [ %1172, %1170 ]
  %1176 = getelementptr inbounds i32, ptr %11, i64 %1174
  %1177 = load i32, ptr %1176, align 4, !tbaa !5
  %1178 = mul nsw i32 %1177, %1175
  %1179 = add nsw i64 %1174, -1
  %1180 = trunc i64 %1174 to i32
  %1181 = icmp sgt i32 %1180, 0
  br i1 %1181, label %1173, label %1182, !llvm.loop !520

1182:                                             ; preds = %1173, %1164
  %1183 = phi i32 [ %1168, %1164 ], [ %1178, %1173 ]
  %1184 = and i64 %1133, 4294967295
  %1185 = getelementptr inbounds i32, ptr %6, i64 %1184
  %1186 = load i32, ptr %1185, align 4, !tbaa !5
  %1187 = mul nsw i32 %1186, %1183
  %1188 = add nsw i32 %1187, %1127
  %1189 = icmp sgt i64 %1125, 2
  %1190 = add nsw i64 %1126, -1
  %1191 = add i32 %1124, 1
  br i1 %1189, label %1123, label %1192, !llvm.loop !521

1192:                                             ; preds = %1182, %1120
  %1193 = phi i32 [ %1122, %1120 ], [ %1188, %1182 ]
  %1194 = icmp slt i32 %1193, %5
  br i1 %1194, label %1197, label %1195

1195:                                             ; preds = %1192
  %1196 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

1197:                                             ; preds = %1192
  %1198 = sext i32 %1193 to i64
  %1199 = getelementptr inbounds i16, ptr %643, i64 %1198
  %1200 = load i16, ptr %1199, align 2, !tbaa !78
  %1201 = load i32, ptr %645, align 4, !tbaa !5
  %1202 = tail call i16 @llvm.abs.i16(i16 %1200, i1 false)
  %1203 = zext i16 %1202 to i32
  %1204 = tail call i32 @llvm.smax.i32(i32 %1201, i32 %1203)
  store i32 %1204, ptr %645, align 4, !tbaa !5
  %1205 = add nuw nsw i32 %1121, 1
  br i1 %972, label %1206, label %1256

1206:                                             ; preds = %1197
  %1207 = load i32, ptr %4, align 4, !tbaa !5
  %1208 = load i32, ptr %12, align 4, !tbaa !5
  %1209 = add nsw i32 %1208, -1
  %1210 = icmp slt i32 %1207, %1209
  br i1 %1210, label %1233, label %1211

1211:                                             ; preds = %1206
  %1212 = icmp eq i32 %1207, %1209
  br i1 %1212, label %1213, label %1249

1213:                                             ; preds = %1211
  store i32 0, ptr %4, align 4, !tbaa !5
  %1214 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1214, ptr %6, align 4, !tbaa !5
  br i1 %977, label %1256, label %1215

1215:                                             ; preds = %1213, %1243
  %1216 = phi i64 [ %1247, %1243 ], [ 1, %1213 ]
  %1217 = getelementptr inbounds i32, ptr %4, i64 %1216
  %1218 = load i32, ptr %1217, align 4, !tbaa !5
  %1219 = getelementptr inbounds i32, ptr %12, i64 %1216
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = add nsw i32 %1220, -1
  %1222 = icmp slt i32 %1218, %1221
  br i1 %1222, label %1223, label %1241

1223:                                             ; preds = %1215
  br i1 %1210, label %1233, label %1224

1224:                                             ; preds = %1223
  %1225 = shl i64 %1216, 32
  %1226 = add i64 %1225, -4294967296
  %1227 = ashr exact i64 %1226, 32
  %1228 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1229 = load i32, ptr %1228, align 4, !tbaa !5
  %1230 = getelementptr inbounds i32, ptr %6, i64 %1216
  %1231 = load i32, ptr %1230, align 4, !tbaa !5
  %1232 = add nsw i32 %1231, %1229
  store i32 %1232, ptr %1230, align 4, !tbaa !5
  br label %1251

1233:                                             ; preds = %1206, %1223
  %1234 = phi i32 [ %1218, %1223 ], [ %1207, %1206 ]
  %1235 = phi ptr [ %1217, %1223 ], [ %4, %1206 ]
  %1236 = phi i64 [ %1216, %1223 ], [ 0, %1206 ]
  %1237 = add nsw i32 %1234, 1
  store i32 %1237, ptr %1235, align 4, !tbaa !5
  %1238 = getelementptr inbounds i32, ptr %7, i64 %1236
  %1239 = load i32, ptr %1238, align 4, !tbaa !5
  %1240 = getelementptr inbounds i32, ptr %6, i64 %1236
  br label %1251

1241:                                             ; preds = %1215
  %1242 = icmp eq i32 %1218, %1221
  br i1 %1242, label %1243, label %1249

1243:                                             ; preds = %1241
  store i32 0, ptr %1217, align 4, !tbaa !5
  %1244 = getelementptr inbounds i32, ptr %8, i64 %1216
  %1245 = load i32, ptr %1244, align 4, !tbaa !5
  %1246 = getelementptr inbounds i32, ptr %6, i64 %1216
  store i32 %1245, ptr %1246, align 4, !tbaa !5
  %1247 = add nuw nsw i64 %1216, 1
  %1248 = icmp eq i64 %1247, %975
  br i1 %1248, label %1256, label %1215, !llvm.loop !522

1249:                                             ; preds = %1211, %1241
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

1251:                                             ; preds = %1224, %1233
  %1252 = phi ptr [ %1240, %1233 ], [ %1217, %1224 ]
  %1253 = phi i32 [ %1239, %1233 ], [ 1, %1224 ]
  %1254 = load i32, ptr %1252, align 4, !tbaa !5
  %1255 = add nsw i32 %1254, %1253
  store i32 %1255, ptr %1252, align 4, !tbaa !5
  br label %1256

1256:                                             ; preds = %1243, %1251, %1213, %1197
  %1257 = icmp eq i32 %1205, %5
  br i1 %1257, label %3123, label %1120, !llvm.loop !523

1258:                                             ; preds = %655
  %1259 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3123

1260:                                             ; preds = %18
  %1261 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1262 = load ptr, ptr %1261, align 8, !tbaa !9
  %1263 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1264 = load ptr, ptr %1263, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1264, align 8, !tbaa !18
  %1265 = icmp eq i32 %13, 0
  br i1 %1265, label %1266, label %1274

1266:                                             ; preds = %1260
  %1267 = load i16, ptr %1262, align 2, !tbaa !78
  %1268 = sitofp i16 %1267 to double
  %1269 = icmp slt i16 %1267, 0
  %1270 = fneg fast double %1268
  %1271 = select fast i1 %1269, double %1270, double %1268
  %1272 = fcmp fast ole double %1271, 0.000000e+00
  %1273 = select fast i1 %1272, double 0.000000e+00, double %1271
  store double %1273, ptr %1264, align 8, !tbaa !18
  br label %3123

1274:                                             ; preds = %1260
  switch i32 %1, label %1876 [
    i32 1, label %1275
    i32 0, label %1578
  ]

1275:                                             ; preds = %1274
  %1276 = getelementptr inbounds i32, ptr %3, i64 %19
  %1277 = load i32, ptr %1276, align 4, !tbaa !5
  %1278 = icmp eq i32 %1277, 0
  %1279 = icmp sgt i32 %5, 0
  br i1 %1278, label %1289, label %1280

1280:                                             ; preds = %1275
  br i1 %1279, label %1281, label %3123

1281:                                             ; preds = %1280
  %1282 = icmp sgt i32 %13, 1
  %1283 = icmp sgt i32 %13, 0
  %1284 = add i32 %13, -2
  %1285 = zext i32 %1284 to i64
  %1286 = zext i32 %13 to i64
  %1287 = add nuw i32 %5, 1
  %1288 = icmp eq i32 %13, 1
  br label %1438

1289:                                             ; preds = %1275
  br i1 %1279, label %1290, label %3123

1290:                                             ; preds = %1289
  %1291 = icmp sgt i32 %13, 1
  %1292 = icmp sgt i32 %13, 0
  %1293 = add i32 %13, -2
  %1294 = zext i32 %1293 to i64
  %1295 = zext i32 %13 to i64
  %1296 = add nuw i32 %5, 1
  %1297 = icmp eq i32 %13, 1
  br label %1298

1298:                                             ; preds = %1290, %1436
  %1299 = phi double [ 0.000000e+00, %1290 ], [ %1386, %1436 ]
  %1300 = phi i32 [ 0, %1290 ], [ %1388, %1436 ]
  %1301 = phi double [ 0.000000e+00, %1290 ], [ %1387, %1436 ]
  %1302 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1291, label %1303, label %1372

1303:                                             ; preds = %1298, %1362
  %1304 = phi i32 [ %1371, %1362 ], [ 0, %1298 ]
  %1305 = phi i64 [ %1313, %1362 ], [ %1295, %1298 ]
  %1306 = phi i64 [ %1370, %1362 ], [ %1294, %1298 ]
  %1307 = phi i32 [ %1368, %1362 ], [ %1302, %1298 ]
  %1308 = sub i32 %1293, %1304
  %1309 = tail call i32 @llvm.smin.i32(i32 %1308, i32 0)
  %1310 = sub i32 %1308, %1309
  %1311 = zext i32 %1310 to i64
  %1312 = add nuw nsw i64 %1311, 1
  %1313 = add nsw i64 %1305, -1
  %1314 = icmp ult i32 %1310, 31
  br i1 %1314, label %1350, label %1315

1315:                                             ; preds = %1303
  %1316 = and i64 %1312, 8589934560
  %1317 = sub i64 %1306, %1316
  br label %1318

1318:                                             ; preds = %1318, %1315
  %1319 = phi i64 [ 0, %1315 ], [ %1342, %1318 ]
  %1320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1338, %1318 ]
  %1321 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1339, %1318 ]
  %1322 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1340, %1318 ]
  %1323 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1315 ], [ %1341, %1318 ]
  %1324 = sub i64 %1306, %1319
  %1325 = getelementptr inbounds i32, ptr %9, i64 %1324
  %1326 = getelementptr inbounds i32, ptr %1325, i64 -7
  %1327 = load <8 x i32>, ptr %1326, align 4, !tbaa !5
  %1328 = shufflevector <8 x i32> %1327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1329 = getelementptr inbounds i32, ptr %1325, i64 -15
  %1330 = load <8 x i32>, ptr %1329, align 4, !tbaa !5
  %1331 = shufflevector <8 x i32> %1330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1332 = getelementptr inbounds i32, ptr %1325, i64 -23
  %1333 = load <8 x i32>, ptr %1332, align 4, !tbaa !5
  %1334 = shufflevector <8 x i32> %1333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1335 = getelementptr inbounds i32, ptr %1325, i64 -31
  %1336 = load <8 x i32>, ptr %1335, align 4, !tbaa !5
  %1337 = shufflevector <8 x i32> %1336, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1338 = mul <8 x i32> %1328, %1320
  %1339 = mul <8 x i32> %1331, %1321
  %1340 = mul <8 x i32> %1334, %1322
  %1341 = mul <8 x i32> %1337, %1323
  %1342 = add nuw i64 %1319, 32
  %1343 = icmp eq i64 %1342, %1316
  br i1 %1343, label %1344, label %1318, !llvm.loop !524

1344:                                             ; preds = %1318
  %1345 = mul <8 x i32> %1339, %1338
  %1346 = mul <8 x i32> %1340, %1345
  %1347 = mul <8 x i32> %1341, %1346
  %1348 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1347)
  %1349 = icmp eq i64 %1312, %1316
  br i1 %1349, label %1362, label %1350

1350:                                             ; preds = %1303, %1344
  %1351 = phi i64 [ %1306, %1303 ], [ %1317, %1344 ]
  %1352 = phi i32 [ 1, %1303 ], [ %1348, %1344 ]
  br label %1353

1353:                                             ; preds = %1350, %1353
  %1354 = phi i64 [ %1359, %1353 ], [ %1351, %1350 ]
  %1355 = phi i32 [ %1358, %1353 ], [ %1352, %1350 ]
  %1356 = getelementptr inbounds i32, ptr %9, i64 %1354
  %1357 = load i32, ptr %1356, align 4, !tbaa !5
  %1358 = mul nsw i32 %1357, %1355
  %1359 = add nsw i64 %1354, -1
  %1360 = trunc i64 %1354 to i32
  %1361 = icmp sgt i32 %1360, 0
  br i1 %1361, label %1353, label %1362, !llvm.loop !525

1362:                                             ; preds = %1353, %1344
  %1363 = phi i32 [ %1348, %1344 ], [ %1358, %1353 ]
  %1364 = and i64 %1313, 4294967295
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1364
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = mul nsw i32 %1366, %1363
  %1368 = add nsw i32 %1367, %1307
  %1369 = icmp sgt i64 %1305, 2
  %1370 = add nsw i64 %1306, -1
  %1371 = add i32 %1304, 1
  br i1 %1369, label %1303, label %1372, !llvm.loop !526

1372:                                             ; preds = %1362, %1298
  %1373 = phi i32 [ %1302, %1298 ], [ %1368, %1362 ]
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds double, ptr %2, i64 %1374
  %1376 = load double, ptr %1375, align 8, !tbaa !18
  %1377 = getelementptr inbounds i16, ptr %1262, i64 %1374
  %1378 = load i16, ptr %1377, align 2, !tbaa !78
  %1379 = sitofp i16 %1378 to double
  %1380 = fmul fast double %1376, %1379
  %1381 = fcmp fast uge double %1380, 0.000000e+00
  %1382 = fneg fast double %1380
  %1383 = tail call fast double @llvm.fabs.f64(double %1380)
  %1384 = fcmp fast oge double %1299, %1383
  %1385 = select nnan ninf i1 %1381, double %1380, double %1382
  %1386 = select i1 %1384, double %1299, double %1385
  store double %1386, ptr %1264, align 8, !tbaa !18
  %1387 = fadd fast double %1376, %1301
  %1388 = add nuw nsw i32 %1300, 1
  br i1 %1292, label %1389, label %1436

1389:                                             ; preds = %1372
  %1390 = load i32, ptr %4, align 4, !tbaa !5
  %1391 = load i32, ptr %12, align 4, !tbaa !5
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1390, %1392
  br i1 %1393, label %1413, label %1394

1394:                                             ; preds = %1389
  %1395 = icmp eq i32 %1390, %1392
  br i1 %1395, label %1396, label %1429

1396:                                             ; preds = %1394
  store i32 0, ptr %4, align 4, !tbaa !5
  %1397 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1397, ptr %6, align 4, !tbaa !5
  br i1 %1297, label %1436, label %1398

1398:                                             ; preds = %1396, %1423
  %1399 = phi i64 [ %1427, %1423 ], [ 1, %1396 ]
  %1400 = getelementptr inbounds i32, ptr %4, i64 %1399
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = getelementptr inbounds i32, ptr %12, i64 %1399
  %1403 = load i32, ptr %1402, align 4, !tbaa !5
  %1404 = add nsw i32 %1403, -1
  %1405 = icmp slt i32 %1401, %1404
  br i1 %1405, label %1406, label %1421

1406:                                             ; preds = %1398
  br i1 %1393, label %1413, label %1407

1407:                                             ; preds = %1406
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1399
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1399
  %1411 = load i32, ptr %1410, align 4, !tbaa !5
  %1412 = add nsw i32 %1411, %1409
  store i32 %1412, ptr %1410, align 4, !tbaa !5
  br label %1431

1413:                                             ; preds = %1389, %1406
  %1414 = phi i32 [ %1401, %1406 ], [ %1390, %1389 ]
  %1415 = phi ptr [ %1400, %1406 ], [ %4, %1389 ]
  %1416 = phi i64 [ %1399, %1406 ], [ 0, %1389 ]
  %1417 = add nsw i32 %1414, 1
  store i32 %1417, ptr %1415, align 4, !tbaa !5
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1416
  %1419 = load i32, ptr %1418, align 4, !tbaa !5
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1416
  br label %1431

1421:                                             ; preds = %1398
  %1422 = icmp eq i32 %1401, %1404
  br i1 %1422, label %1423, label %1429

1423:                                             ; preds = %1421
  store i32 0, ptr %1400, align 4, !tbaa !5
  %1424 = getelementptr inbounds i32, ptr %8, i64 %1399
  %1425 = load i32, ptr %1424, align 4, !tbaa !5
  %1426 = getelementptr inbounds i32, ptr %6, i64 %1399
  store i32 %1425, ptr %1426, align 4, !tbaa !5
  %1427 = add nuw nsw i64 %1399, 1
  %1428 = icmp eq i64 %1427, %1295
  br i1 %1428, label %1436, label %1398, !llvm.loop !527

1429:                                             ; preds = %1394, %1421
  %1430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

1431:                                             ; preds = %1407, %1413
  %1432 = phi ptr [ %1420, %1413 ], [ %1400, %1407 ]
  %1433 = phi i32 [ %1419, %1413 ], [ 1, %1407 ]
  %1434 = load i32, ptr %1432, align 4, !tbaa !5
  %1435 = add nsw i32 %1434, %1433
  store i32 %1435, ptr %1432, align 4, !tbaa !5
  br label %1436

1436:                                             ; preds = %1423, %1431, %1396, %1372
  %1437 = icmp eq i32 %1388, %5
  br i1 %1437, label %3123, label %1298, !llvm.loop !528

1438:                                             ; preds = %1281, %1576
  %1439 = phi double [ 0.000000e+00, %1281 ], [ %1524, %1576 ]
  %1440 = phi i32 [ 0, %1281 ], [ %1525, %1576 ]
  %1441 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1282, label %1442, label %1511

1442:                                             ; preds = %1438, %1501
  %1443 = phi i32 [ %1510, %1501 ], [ 0, %1438 ]
  %1444 = phi i64 [ %1452, %1501 ], [ %1286, %1438 ]
  %1445 = phi i64 [ %1509, %1501 ], [ %1285, %1438 ]
  %1446 = phi i32 [ %1507, %1501 ], [ %1441, %1438 ]
  %1447 = sub i32 %1284, %1443
  %1448 = tail call i32 @llvm.smin.i32(i32 %1447, i32 0)
  %1449 = sub i32 %1447, %1448
  %1450 = zext i32 %1449 to i64
  %1451 = add nuw nsw i64 %1450, 1
  %1452 = add nsw i64 %1444, -1
  %1453 = icmp ult i32 %1449, 31
  br i1 %1453, label %1489, label %1454

1454:                                             ; preds = %1442
  %1455 = and i64 %1451, 8589934560
  %1456 = sub i64 %1445, %1455
  br label %1457

1457:                                             ; preds = %1457, %1454
  %1458 = phi i64 [ 0, %1454 ], [ %1481, %1457 ]
  %1459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1477, %1457 ]
  %1460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1478, %1457 ]
  %1461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1479, %1457 ]
  %1462 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1454 ], [ %1480, %1457 ]
  %1463 = sub i64 %1445, %1458
  %1464 = getelementptr inbounds i32, ptr %11, i64 %1463
  %1465 = getelementptr inbounds i32, ptr %1464, i64 -7
  %1466 = load <8 x i32>, ptr %1465, align 4, !tbaa !5
  %1467 = shufflevector <8 x i32> %1466, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1468 = getelementptr inbounds i32, ptr %1464, i64 -15
  %1469 = load <8 x i32>, ptr %1468, align 4, !tbaa !5
  %1470 = shufflevector <8 x i32> %1469, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1471 = getelementptr inbounds i32, ptr %1464, i64 -23
  %1472 = load <8 x i32>, ptr %1471, align 4, !tbaa !5
  %1473 = shufflevector <8 x i32> %1472, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1474 = getelementptr inbounds i32, ptr %1464, i64 -31
  %1475 = load <8 x i32>, ptr %1474, align 4, !tbaa !5
  %1476 = shufflevector <8 x i32> %1475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1477 = mul <8 x i32> %1467, %1459
  %1478 = mul <8 x i32> %1470, %1460
  %1479 = mul <8 x i32> %1473, %1461
  %1480 = mul <8 x i32> %1476, %1462
  %1481 = add nuw i64 %1458, 32
  %1482 = icmp eq i64 %1481, %1455
  br i1 %1482, label %1483, label %1457, !llvm.loop !529

1483:                                             ; preds = %1457
  %1484 = mul <8 x i32> %1478, %1477
  %1485 = mul <8 x i32> %1479, %1484
  %1486 = mul <8 x i32> %1480, %1485
  %1487 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1486)
  %1488 = icmp eq i64 %1451, %1455
  br i1 %1488, label %1501, label %1489

1489:                                             ; preds = %1442, %1483
  %1490 = phi i64 [ %1445, %1442 ], [ %1456, %1483 ]
  %1491 = phi i32 [ 1, %1442 ], [ %1487, %1483 ]
  br label %1492

1492:                                             ; preds = %1489, %1492
  %1493 = phi i64 [ %1498, %1492 ], [ %1490, %1489 ]
  %1494 = phi i32 [ %1497, %1492 ], [ %1491, %1489 ]
  %1495 = getelementptr inbounds i32, ptr %11, i64 %1493
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = mul nsw i32 %1496, %1494
  %1498 = add nsw i64 %1493, -1
  %1499 = trunc i64 %1493 to i32
  %1500 = icmp sgt i32 %1499, 0
  br i1 %1500, label %1492, label %1501, !llvm.loop !530

1501:                                             ; preds = %1492, %1483
  %1502 = phi i32 [ %1487, %1483 ], [ %1497, %1492 ]
  %1503 = and i64 %1452, 4294967295
  %1504 = getelementptr inbounds i32, ptr %6, i64 %1503
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = mul nsw i32 %1505, %1502
  %1507 = add nsw i32 %1506, %1446
  %1508 = icmp sgt i64 %1444, 2
  %1509 = add nsw i64 %1445, -1
  %1510 = add i32 %1443, 1
  br i1 %1508, label %1442, label %1511, !llvm.loop !531

1511:                                             ; preds = %1501, %1438
  %1512 = phi i32 [ %1441, %1438 ], [ %1507, %1501 ]
  %1513 = icmp slt i32 %1512, %5
  br i1 %1513, label %1516, label %1514

1514:                                             ; preds = %1511
  %1515 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

1516:                                             ; preds = %1511
  %1517 = sext i32 %1512 to i64
  %1518 = getelementptr inbounds i16, ptr %1262, i64 %1517
  %1519 = load i16, ptr %1518, align 2, !tbaa !78
  %1520 = sitofp i16 %1519 to double
  %1521 = icmp slt i16 %1519, 0
  %1522 = fneg fast double %1520
  %1523 = select i1 %1521, double %1522, double %1520
  %1524 = tail call fast double @llvm.maxnum.f64(double %1439, double %1523)
  store double %1524, ptr %1264, align 8, !tbaa !18
  %1525 = add nuw nsw i32 %1440, 1
  br i1 %1283, label %1526, label %1576

1526:                                             ; preds = %1516
  %1527 = load i32, ptr %4, align 4, !tbaa !5
  %1528 = load i32, ptr %12, align 4, !tbaa !5
  %1529 = add nsw i32 %1528, -1
  %1530 = icmp slt i32 %1527, %1529
  br i1 %1530, label %1553, label %1531

1531:                                             ; preds = %1526
  %1532 = icmp eq i32 %1527, %1529
  br i1 %1532, label %1533, label %1569

1533:                                             ; preds = %1531
  store i32 0, ptr %4, align 4, !tbaa !5
  %1534 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1534, ptr %6, align 4, !tbaa !5
  br i1 %1288, label %1576, label %1535

1535:                                             ; preds = %1533, %1563
  %1536 = phi i64 [ %1567, %1563 ], [ 1, %1533 ]
  %1537 = getelementptr inbounds i32, ptr %4, i64 %1536
  %1538 = load i32, ptr %1537, align 4, !tbaa !5
  %1539 = getelementptr inbounds i32, ptr %12, i64 %1536
  %1540 = load i32, ptr %1539, align 4, !tbaa !5
  %1541 = add nsw i32 %1540, -1
  %1542 = icmp slt i32 %1538, %1541
  br i1 %1542, label %1543, label %1561

1543:                                             ; preds = %1535
  br i1 %1530, label %1553, label %1544

1544:                                             ; preds = %1543
  %1545 = shl i64 %1536, 32
  %1546 = add i64 %1545, -4294967296
  %1547 = ashr exact i64 %1546, 32
  %1548 = getelementptr inbounds i32, ptr %7, i64 %1547
  %1549 = load i32, ptr %1548, align 4, !tbaa !5
  %1550 = getelementptr inbounds i32, ptr %6, i64 %1536
  %1551 = load i32, ptr %1550, align 4, !tbaa !5
  %1552 = add nsw i32 %1551, %1549
  store i32 %1552, ptr %1550, align 4, !tbaa !5
  br label %1571

1553:                                             ; preds = %1526, %1543
  %1554 = phi i32 [ %1538, %1543 ], [ %1527, %1526 ]
  %1555 = phi ptr [ %1537, %1543 ], [ %4, %1526 ]
  %1556 = phi i64 [ %1536, %1543 ], [ 0, %1526 ]
  %1557 = add nsw i32 %1554, 1
  store i32 %1557, ptr %1555, align 4, !tbaa !5
  %1558 = getelementptr inbounds i32, ptr %7, i64 %1556
  %1559 = load i32, ptr %1558, align 4, !tbaa !5
  %1560 = getelementptr inbounds i32, ptr %6, i64 %1556
  br label %1571

1561:                                             ; preds = %1535
  %1562 = icmp eq i32 %1538, %1541
  br i1 %1562, label %1563, label %1569

1563:                                             ; preds = %1561
  store i32 0, ptr %1537, align 4, !tbaa !5
  %1564 = getelementptr inbounds i32, ptr %8, i64 %1536
  %1565 = load i32, ptr %1564, align 4, !tbaa !5
  %1566 = getelementptr inbounds i32, ptr %6, i64 %1536
  store i32 %1565, ptr %1566, align 4, !tbaa !5
  %1567 = add nuw nsw i64 %1536, 1
  %1568 = icmp eq i64 %1567, %1286
  br i1 %1568, label %1576, label %1535, !llvm.loop !532

1569:                                             ; preds = %1531, %1561
  %1570 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

1571:                                             ; preds = %1544, %1553
  %1572 = phi ptr [ %1560, %1553 ], [ %1537, %1544 ]
  %1573 = phi i32 [ %1559, %1553 ], [ 1, %1544 ]
  %1574 = load i32, ptr %1572, align 4, !tbaa !5
  %1575 = add nsw i32 %1574, %1573
  store i32 %1575, ptr %1572, align 4, !tbaa !5
  br label %1576

1576:                                             ; preds = %1563, %1571, %1533, %1516
  %1577 = icmp eq i32 %1525, %5
  br i1 %1577, label %3123, label %1438, !llvm.loop !533

1578:                                             ; preds = %1274
  %1579 = getelementptr inbounds i32, ptr %3, i64 %19
  %1580 = load i32, ptr %1579, align 4, !tbaa !5
  %1581 = icmp eq i32 %1580, 0
  %1582 = icmp sgt i32 %5, 0
  br i1 %1581, label %1592, label %1583

1583:                                             ; preds = %1578
  br i1 %1582, label %1584, label %3123

1584:                                             ; preds = %1583
  %1585 = icmp sgt i32 %13, 1
  %1586 = icmp sgt i32 %13, 0
  %1587 = add i32 %13, -2
  %1588 = zext i32 %1587 to i64
  %1589 = zext i32 %13 to i64
  %1590 = add nuw i32 %5, 1
  %1591 = icmp eq i32 %13, 1
  br label %1736

1592:                                             ; preds = %1578
  br i1 %1582, label %1593, label %3123

1593:                                             ; preds = %1592
  %1594 = icmp sgt i32 %13, 1
  %1595 = icmp sgt i32 %13, 0
  %1596 = add i32 %13, -2
  %1597 = zext i32 %1596 to i64
  %1598 = zext i32 %13 to i64
  %1599 = add nuw i32 %5, 1
  %1600 = icmp eq i32 %13, 1
  br label %1601

1601:                                             ; preds = %1593, %1734
  %1602 = phi double [ 0.000000e+00, %1593 ], [ %1684, %1734 ]
  %1603 = phi i32 [ 0, %1593 ], [ %1686, %1734 ]
  %1604 = phi double [ 0.000000e+00, %1593 ], [ %1685, %1734 ]
  %1605 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1594, label %1606, label %1675

1606:                                             ; preds = %1601, %1665
  %1607 = phi i32 [ %1674, %1665 ], [ 0, %1601 ]
  %1608 = phi i64 [ %1616, %1665 ], [ %1598, %1601 ]
  %1609 = phi i64 [ %1673, %1665 ], [ %1597, %1601 ]
  %1610 = phi i32 [ %1671, %1665 ], [ %1605, %1601 ]
  %1611 = sub i32 %1596, %1607
  %1612 = tail call i32 @llvm.smin.i32(i32 %1611, i32 0)
  %1613 = sub i32 %1611, %1612
  %1614 = zext i32 %1613 to i64
  %1615 = add nuw nsw i64 %1614, 1
  %1616 = add nsw i64 %1608, -1
  %1617 = icmp ult i32 %1613, 31
  br i1 %1617, label %1653, label %1618

1618:                                             ; preds = %1606
  %1619 = and i64 %1615, 8589934560
  %1620 = sub i64 %1609, %1619
  br label %1621

1621:                                             ; preds = %1621, %1618
  %1622 = phi i64 [ 0, %1618 ], [ %1645, %1621 ]
  %1623 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1618 ], [ %1641, %1621 ]
  %1624 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1618 ], [ %1642, %1621 ]
  %1625 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1618 ], [ %1643, %1621 ]
  %1626 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1618 ], [ %1644, %1621 ]
  %1627 = sub i64 %1609, %1622
  %1628 = getelementptr inbounds i32, ptr %9, i64 %1627
  %1629 = getelementptr inbounds i32, ptr %1628, i64 -7
  %1630 = load <8 x i32>, ptr %1629, align 4, !tbaa !5
  %1631 = shufflevector <8 x i32> %1630, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1632 = getelementptr inbounds i32, ptr %1628, i64 -15
  %1633 = load <8 x i32>, ptr %1632, align 4, !tbaa !5
  %1634 = shufflevector <8 x i32> %1633, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1635 = getelementptr inbounds i32, ptr %1628, i64 -23
  %1636 = load <8 x i32>, ptr %1635, align 4, !tbaa !5
  %1637 = shufflevector <8 x i32> %1636, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1638 = getelementptr inbounds i32, ptr %1628, i64 -31
  %1639 = load <8 x i32>, ptr %1638, align 4, !tbaa !5
  %1640 = shufflevector <8 x i32> %1639, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1641 = mul <8 x i32> %1631, %1623
  %1642 = mul <8 x i32> %1634, %1624
  %1643 = mul <8 x i32> %1637, %1625
  %1644 = mul <8 x i32> %1640, %1626
  %1645 = add nuw i64 %1622, 32
  %1646 = icmp eq i64 %1645, %1619
  br i1 %1646, label %1647, label %1621, !llvm.loop !534

1647:                                             ; preds = %1621
  %1648 = mul <8 x i32> %1642, %1641
  %1649 = mul <8 x i32> %1643, %1648
  %1650 = mul <8 x i32> %1644, %1649
  %1651 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1650)
  %1652 = icmp eq i64 %1615, %1619
  br i1 %1652, label %1665, label %1653

1653:                                             ; preds = %1606, %1647
  %1654 = phi i64 [ %1609, %1606 ], [ %1620, %1647 ]
  %1655 = phi i32 [ 1, %1606 ], [ %1651, %1647 ]
  br label %1656

1656:                                             ; preds = %1653, %1656
  %1657 = phi i64 [ %1662, %1656 ], [ %1654, %1653 ]
  %1658 = phi i32 [ %1661, %1656 ], [ %1655, %1653 ]
  %1659 = getelementptr inbounds i32, ptr %9, i64 %1657
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = mul nsw i32 %1660, %1658
  %1662 = add nsw i64 %1657, -1
  %1663 = trunc i64 %1657 to i32
  %1664 = icmp sgt i32 %1663, 0
  br i1 %1664, label %1656, label %1665, !llvm.loop !535

1665:                                             ; preds = %1656, %1647
  %1666 = phi i32 [ %1651, %1647 ], [ %1661, %1656 ]
  %1667 = and i64 %1616, 4294967295
  %1668 = getelementptr inbounds i32, ptr %6, i64 %1667
  %1669 = load i32, ptr %1668, align 4, !tbaa !5
  %1670 = mul nsw i32 %1669, %1666
  %1671 = add nsw i32 %1670, %1610
  %1672 = icmp sgt i64 %1608, 2
  %1673 = add nsw i64 %1609, -1
  %1674 = add i32 %1607, 1
  br i1 %1672, label %1606, label %1675, !llvm.loop !536

1675:                                             ; preds = %1665, %1601
  %1676 = phi i32 [ %1605, %1601 ], [ %1671, %1665 ]
  %1677 = sext i32 %1676 to i64
  %1678 = getelementptr inbounds i16, ptr %1262, i64 %1677
  %1679 = load i16, ptr %1678, align 2, !tbaa !78
  %1680 = sitofp i16 %1679 to double
  %1681 = icmp slt i16 %1679, 0
  %1682 = fneg fast double %1680
  %1683 = select fast i1 %1681, double %1682, double %1680
  %1684 = tail call fast double @llvm.maxnum.f64(double %1602, double %1683)
  %1685 = fadd fast double %1604, 1.000000e+00
  %1686 = add nuw nsw i32 %1603, 1
  br i1 %1595, label %1687, label %1734

1687:                                             ; preds = %1675
  %1688 = load i32, ptr %4, align 4, !tbaa !5
  %1689 = load i32, ptr %12, align 4, !tbaa !5
  %1690 = add nsw i32 %1689, -1
  %1691 = icmp slt i32 %1688, %1690
  br i1 %1691, label %1711, label %1692

1692:                                             ; preds = %1687
  %1693 = icmp eq i32 %1688, %1690
  br i1 %1693, label %1694, label %1727

1694:                                             ; preds = %1692
  store i32 0, ptr %4, align 4, !tbaa !5
  %1695 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1695, ptr %6, align 4, !tbaa !5
  br i1 %1600, label %1734, label %1696

1696:                                             ; preds = %1694, %1721
  %1697 = phi i64 [ %1725, %1721 ], [ 1, %1694 ]
  %1698 = getelementptr inbounds i32, ptr %4, i64 %1697
  %1699 = load i32, ptr %1698, align 4, !tbaa !5
  %1700 = getelementptr inbounds i32, ptr %12, i64 %1697
  %1701 = load i32, ptr %1700, align 4, !tbaa !5
  %1702 = add nsw i32 %1701, -1
  %1703 = icmp slt i32 %1699, %1702
  br i1 %1703, label %1704, label %1719

1704:                                             ; preds = %1696
  br i1 %1691, label %1711, label %1705

1705:                                             ; preds = %1704
  %1706 = getelementptr inbounds i32, ptr %7, i64 %1697
  %1707 = load i32, ptr %1706, align 4, !tbaa !5
  %1708 = getelementptr inbounds i32, ptr %6, i64 %1697
  %1709 = load i32, ptr %1708, align 4, !tbaa !5
  %1710 = add nsw i32 %1709, %1707
  store i32 %1710, ptr %1708, align 4, !tbaa !5
  br label %1729

1711:                                             ; preds = %1687, %1704
  %1712 = phi i32 [ %1699, %1704 ], [ %1688, %1687 ]
  %1713 = phi ptr [ %1698, %1704 ], [ %4, %1687 ]
  %1714 = phi i64 [ %1697, %1704 ], [ 0, %1687 ]
  %1715 = add nsw i32 %1712, 1
  store i32 %1715, ptr %1713, align 4, !tbaa !5
  %1716 = getelementptr inbounds i32, ptr %7, i64 %1714
  %1717 = load i32, ptr %1716, align 4, !tbaa !5
  %1718 = getelementptr inbounds i32, ptr %6, i64 %1714
  br label %1729

1719:                                             ; preds = %1696
  %1720 = icmp eq i32 %1699, %1702
  br i1 %1720, label %1721, label %1727

1721:                                             ; preds = %1719
  store i32 0, ptr %1698, align 4, !tbaa !5
  %1722 = getelementptr inbounds i32, ptr %8, i64 %1697
  %1723 = load i32, ptr %1722, align 4, !tbaa !5
  %1724 = getelementptr inbounds i32, ptr %6, i64 %1697
  store i32 %1723, ptr %1724, align 4, !tbaa !5
  %1725 = add nuw nsw i64 %1697, 1
  %1726 = icmp eq i64 %1725, %1598
  br i1 %1726, label %1734, label %1696, !llvm.loop !537

1727:                                             ; preds = %1692, %1719
  store double %1684, ptr %1264, align 8, !tbaa !18
  %1728 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

1729:                                             ; preds = %1705, %1711
  %1730 = phi ptr [ %1718, %1711 ], [ %1698, %1705 ]
  %1731 = phi i32 [ %1717, %1711 ], [ 1, %1705 ]
  %1732 = load i32, ptr %1730, align 4, !tbaa !5
  %1733 = add nsw i32 %1732, %1731
  store i32 %1733, ptr %1730, align 4, !tbaa !5
  br label %1734

1734:                                             ; preds = %1721, %1729, %1694, %1675
  %1735 = icmp eq i32 %1686, %5
  br i1 %1735, label %3119, label %1601, !llvm.loop !538

1736:                                             ; preds = %1584, %1874
  %1737 = phi double [ 0.000000e+00, %1584 ], [ %1822, %1874 ]
  %1738 = phi i32 [ 0, %1584 ], [ %1823, %1874 ]
  %1739 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1585, label %1740, label %1809

1740:                                             ; preds = %1736, %1799
  %1741 = phi i32 [ %1808, %1799 ], [ 0, %1736 ]
  %1742 = phi i64 [ %1750, %1799 ], [ %1589, %1736 ]
  %1743 = phi i64 [ %1807, %1799 ], [ %1588, %1736 ]
  %1744 = phi i32 [ %1805, %1799 ], [ %1739, %1736 ]
  %1745 = sub i32 %1587, %1741
  %1746 = tail call i32 @llvm.smin.i32(i32 %1745, i32 0)
  %1747 = sub i32 %1745, %1746
  %1748 = zext i32 %1747 to i64
  %1749 = add nuw nsw i64 %1748, 1
  %1750 = add nsw i64 %1742, -1
  %1751 = icmp ult i32 %1747, 31
  br i1 %1751, label %1787, label %1752

1752:                                             ; preds = %1740
  %1753 = and i64 %1749, 8589934560
  %1754 = sub i64 %1743, %1753
  br label %1755

1755:                                             ; preds = %1755, %1752
  %1756 = phi i64 [ 0, %1752 ], [ %1779, %1755 ]
  %1757 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1752 ], [ %1775, %1755 ]
  %1758 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1752 ], [ %1776, %1755 ]
  %1759 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1752 ], [ %1777, %1755 ]
  %1760 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1752 ], [ %1778, %1755 ]
  %1761 = sub i64 %1743, %1756
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1761
  %1763 = getelementptr inbounds i32, ptr %1762, i64 -7
  %1764 = load <8 x i32>, ptr %1763, align 4, !tbaa !5
  %1765 = shufflevector <8 x i32> %1764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1766 = getelementptr inbounds i32, ptr %1762, i64 -15
  %1767 = load <8 x i32>, ptr %1766, align 4, !tbaa !5
  %1768 = shufflevector <8 x i32> %1767, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1769 = getelementptr inbounds i32, ptr %1762, i64 -23
  %1770 = load <8 x i32>, ptr %1769, align 4, !tbaa !5
  %1771 = shufflevector <8 x i32> %1770, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1772 = getelementptr inbounds i32, ptr %1762, i64 -31
  %1773 = load <8 x i32>, ptr %1772, align 4, !tbaa !5
  %1774 = shufflevector <8 x i32> %1773, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1775 = mul <8 x i32> %1765, %1757
  %1776 = mul <8 x i32> %1768, %1758
  %1777 = mul <8 x i32> %1771, %1759
  %1778 = mul <8 x i32> %1774, %1760
  %1779 = add nuw i64 %1756, 32
  %1780 = icmp eq i64 %1779, %1753
  br i1 %1780, label %1781, label %1755, !llvm.loop !539

1781:                                             ; preds = %1755
  %1782 = mul <8 x i32> %1776, %1775
  %1783 = mul <8 x i32> %1777, %1782
  %1784 = mul <8 x i32> %1778, %1783
  %1785 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1784)
  %1786 = icmp eq i64 %1749, %1753
  br i1 %1786, label %1799, label %1787

1787:                                             ; preds = %1740, %1781
  %1788 = phi i64 [ %1743, %1740 ], [ %1754, %1781 ]
  %1789 = phi i32 [ 1, %1740 ], [ %1785, %1781 ]
  br label %1790

1790:                                             ; preds = %1787, %1790
  %1791 = phi i64 [ %1796, %1790 ], [ %1788, %1787 ]
  %1792 = phi i32 [ %1795, %1790 ], [ %1789, %1787 ]
  %1793 = getelementptr inbounds i32, ptr %11, i64 %1791
  %1794 = load i32, ptr %1793, align 4, !tbaa !5
  %1795 = mul nsw i32 %1794, %1792
  %1796 = add nsw i64 %1791, -1
  %1797 = trunc i64 %1791 to i32
  %1798 = icmp sgt i32 %1797, 0
  br i1 %1798, label %1790, label %1799, !llvm.loop !540

1799:                                             ; preds = %1790, %1781
  %1800 = phi i32 [ %1785, %1781 ], [ %1795, %1790 ]
  %1801 = and i64 %1750, 4294967295
  %1802 = getelementptr inbounds i32, ptr %6, i64 %1801
  %1803 = load i32, ptr %1802, align 4, !tbaa !5
  %1804 = mul nsw i32 %1803, %1800
  %1805 = add nsw i32 %1804, %1744
  %1806 = icmp sgt i64 %1742, 2
  %1807 = add nsw i64 %1743, -1
  %1808 = add i32 %1741, 1
  br i1 %1806, label %1740, label %1809, !llvm.loop !541

1809:                                             ; preds = %1799, %1736
  %1810 = phi i32 [ %1739, %1736 ], [ %1805, %1799 ]
  %1811 = icmp slt i32 %1810, %5
  br i1 %1811, label %1814, label %1812

1812:                                             ; preds = %1809
  %1813 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

1814:                                             ; preds = %1809
  %1815 = sext i32 %1810 to i64
  %1816 = getelementptr inbounds i16, ptr %1262, i64 %1815
  %1817 = load i16, ptr %1816, align 2, !tbaa !78
  %1818 = sitofp i16 %1817 to double
  %1819 = icmp slt i16 %1817, 0
  %1820 = fneg fast double %1818
  %1821 = select fast i1 %1819, double %1820, double %1818
  %1822 = tail call fast double @llvm.maxnum.f64(double %1737, double %1821)
  store double %1822, ptr %1264, align 8, !tbaa !18
  %1823 = add nuw nsw i32 %1738, 1
  br i1 %1586, label %1824, label %1874

1824:                                             ; preds = %1814
  %1825 = load i32, ptr %4, align 4, !tbaa !5
  %1826 = load i32, ptr %12, align 4, !tbaa !5
  %1827 = add nsw i32 %1826, -1
  %1828 = icmp slt i32 %1825, %1827
  br i1 %1828, label %1851, label %1829

1829:                                             ; preds = %1824
  %1830 = icmp eq i32 %1825, %1827
  br i1 %1830, label %1831, label %1867

1831:                                             ; preds = %1829
  store i32 0, ptr %4, align 4, !tbaa !5
  %1832 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1832, ptr %6, align 4, !tbaa !5
  br i1 %1591, label %1874, label %1833

1833:                                             ; preds = %1831, %1861
  %1834 = phi i64 [ %1865, %1861 ], [ 1, %1831 ]
  %1835 = getelementptr inbounds i32, ptr %4, i64 %1834
  %1836 = load i32, ptr %1835, align 4, !tbaa !5
  %1837 = getelementptr inbounds i32, ptr %12, i64 %1834
  %1838 = load i32, ptr %1837, align 4, !tbaa !5
  %1839 = add nsw i32 %1838, -1
  %1840 = icmp slt i32 %1836, %1839
  br i1 %1840, label %1841, label %1859

1841:                                             ; preds = %1833
  br i1 %1828, label %1851, label %1842

1842:                                             ; preds = %1841
  %1843 = shl i64 %1834, 32
  %1844 = add i64 %1843, -4294967296
  %1845 = ashr exact i64 %1844, 32
  %1846 = getelementptr inbounds i32, ptr %7, i64 %1845
  %1847 = load i32, ptr %1846, align 4, !tbaa !5
  %1848 = getelementptr inbounds i32, ptr %6, i64 %1834
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = add nsw i32 %1849, %1847
  store i32 %1850, ptr %1848, align 4, !tbaa !5
  br label %1869

1851:                                             ; preds = %1824, %1841
  %1852 = phi i32 [ %1836, %1841 ], [ %1825, %1824 ]
  %1853 = phi ptr [ %1835, %1841 ], [ %4, %1824 ]
  %1854 = phi i64 [ %1834, %1841 ], [ 0, %1824 ]
  %1855 = add nsw i32 %1852, 1
  store i32 %1855, ptr %1853, align 4, !tbaa !5
  %1856 = getelementptr inbounds i32, ptr %7, i64 %1854
  %1857 = load i32, ptr %1856, align 4, !tbaa !5
  %1858 = getelementptr inbounds i32, ptr %6, i64 %1854
  br label %1869

1859:                                             ; preds = %1833
  %1860 = icmp eq i32 %1836, %1839
  br i1 %1860, label %1861, label %1867

1861:                                             ; preds = %1859
  store i32 0, ptr %1835, align 4, !tbaa !5
  %1862 = getelementptr inbounds i32, ptr %8, i64 %1834
  %1863 = load i32, ptr %1862, align 4, !tbaa !5
  %1864 = getelementptr inbounds i32, ptr %6, i64 %1834
  store i32 %1863, ptr %1864, align 4, !tbaa !5
  %1865 = add nuw nsw i64 %1834, 1
  %1866 = icmp eq i64 %1865, %1589
  br i1 %1866, label %1874, label %1833, !llvm.loop !542

1867:                                             ; preds = %1829, %1859
  %1868 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

1869:                                             ; preds = %1842, %1851
  %1870 = phi ptr [ %1858, %1851 ], [ %1835, %1842 ]
  %1871 = phi i32 [ %1857, %1851 ], [ 1, %1842 ]
  %1872 = load i32, ptr %1870, align 4, !tbaa !5
  %1873 = add nsw i32 %1872, %1871
  store i32 %1873, ptr %1870, align 4, !tbaa !5
  br label %1874

1874:                                             ; preds = %1861, %1869, %1831, %1814
  %1875 = icmp eq i32 %1823, %5
  br i1 %1875, label %3123, label %1736, !llvm.loop !543

1876:                                             ; preds = %1274
  %1877 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3123

1878:                                             ; preds = %18
  %1879 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1880 = load ptr, ptr %1879, align 8, !tbaa !9
  %1881 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1882 = load ptr, ptr %1881, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1882, align 4, !tbaa !162
  %1883 = icmp eq i32 %13, 0
  br i1 %1883, label %1884, label %1892

1884:                                             ; preds = %1878
  %1885 = load i16, ptr %1880, align 2, !tbaa !78
  %1886 = sitofp i16 %1885 to float
  %1887 = icmp slt i16 %1885, 0
  %1888 = fneg fast float %1886
  %1889 = select fast i1 %1887, float %1888, float %1886
  %1890 = fcmp fast ole float %1889, 0.000000e+00
  %1891 = select fast i1 %1890, float 0.000000e+00, float %1889
  store float %1891, ptr %1882, align 4, !tbaa !162
  br label %3123

1892:                                             ; preds = %1878
  switch i32 %1, label %2499 [
    i32 1, label %1893
    i32 0, label %2201
  ]

1893:                                             ; preds = %1892
  %1894 = getelementptr inbounds i32, ptr %3, i64 %19
  %1895 = load i32, ptr %1894, align 4, !tbaa !5
  %1896 = icmp eq i32 %1895, 0
  %1897 = icmp sgt i32 %5, 0
  br i1 %1896, label %1907, label %1898

1898:                                             ; preds = %1893
  br i1 %1897, label %1899, label %3123

1899:                                             ; preds = %1898
  %1900 = icmp sgt i32 %13, 1
  %1901 = icmp sgt i32 %13, 0
  %1902 = add i32 %13, -2
  %1903 = zext i32 %1902 to i64
  %1904 = zext i32 %13 to i64
  %1905 = add nuw i32 %5, 1
  %1906 = icmp eq i32 %13, 1
  br label %2058

1907:                                             ; preds = %1893
  br i1 %1897, label %1908, label %3123

1908:                                             ; preds = %1907
  %1909 = icmp sgt i32 %13, 1
  %1910 = icmp sgt i32 %13, 0
  %1911 = add i32 %13, -2
  %1912 = zext i32 %1911 to i64
  %1913 = zext i32 %13 to i64
  %1914 = add nuw i32 %5, 1
  %1915 = icmp eq i32 %13, 1
  br label %1916

1916:                                             ; preds = %1908, %2056
  %1917 = phi float [ 0.000000e+00, %1908 ], [ %2006, %2056 ]
  %1918 = phi i32 [ 0, %1908 ], [ %2008, %2056 ]
  %1919 = phi double [ 0.000000e+00, %1908 ], [ %2007, %2056 ]
  %1920 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1909, label %1921, label %1990

1921:                                             ; preds = %1916, %1980
  %1922 = phi i32 [ %1989, %1980 ], [ 0, %1916 ]
  %1923 = phi i64 [ %1931, %1980 ], [ %1913, %1916 ]
  %1924 = phi i64 [ %1988, %1980 ], [ %1912, %1916 ]
  %1925 = phi i32 [ %1986, %1980 ], [ %1920, %1916 ]
  %1926 = sub i32 %1911, %1922
  %1927 = tail call i32 @llvm.smin.i32(i32 %1926, i32 0)
  %1928 = sub i32 %1926, %1927
  %1929 = zext i32 %1928 to i64
  %1930 = add nuw nsw i64 %1929, 1
  %1931 = add nsw i64 %1923, -1
  %1932 = icmp ult i32 %1928, 31
  br i1 %1932, label %1968, label %1933

1933:                                             ; preds = %1921
  %1934 = and i64 %1930, 8589934560
  %1935 = sub i64 %1924, %1934
  br label %1936

1936:                                             ; preds = %1936, %1933
  %1937 = phi i64 [ 0, %1933 ], [ %1960, %1936 ]
  %1938 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1933 ], [ %1956, %1936 ]
  %1939 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1933 ], [ %1957, %1936 ]
  %1940 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1933 ], [ %1958, %1936 ]
  %1941 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1933 ], [ %1959, %1936 ]
  %1942 = sub i64 %1924, %1937
  %1943 = getelementptr inbounds i32, ptr %9, i64 %1942
  %1944 = getelementptr inbounds i32, ptr %1943, i64 -7
  %1945 = load <8 x i32>, ptr %1944, align 4, !tbaa !5
  %1946 = shufflevector <8 x i32> %1945, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1947 = getelementptr inbounds i32, ptr %1943, i64 -15
  %1948 = load <8 x i32>, ptr %1947, align 4, !tbaa !5
  %1949 = shufflevector <8 x i32> %1948, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1950 = getelementptr inbounds i32, ptr %1943, i64 -23
  %1951 = load <8 x i32>, ptr %1950, align 4, !tbaa !5
  %1952 = shufflevector <8 x i32> %1951, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1953 = getelementptr inbounds i32, ptr %1943, i64 -31
  %1954 = load <8 x i32>, ptr %1953, align 4, !tbaa !5
  %1955 = shufflevector <8 x i32> %1954, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1956 = mul <8 x i32> %1946, %1938
  %1957 = mul <8 x i32> %1949, %1939
  %1958 = mul <8 x i32> %1952, %1940
  %1959 = mul <8 x i32> %1955, %1941
  %1960 = add nuw i64 %1937, 32
  %1961 = icmp eq i64 %1960, %1934
  br i1 %1961, label %1962, label %1936, !llvm.loop !544

1962:                                             ; preds = %1936
  %1963 = mul <8 x i32> %1957, %1956
  %1964 = mul <8 x i32> %1958, %1963
  %1965 = mul <8 x i32> %1959, %1964
  %1966 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1965)
  %1967 = icmp eq i64 %1930, %1934
  br i1 %1967, label %1980, label %1968

1968:                                             ; preds = %1921, %1962
  %1969 = phi i64 [ %1924, %1921 ], [ %1935, %1962 ]
  %1970 = phi i32 [ 1, %1921 ], [ %1966, %1962 ]
  br label %1971

1971:                                             ; preds = %1968, %1971
  %1972 = phi i64 [ %1977, %1971 ], [ %1969, %1968 ]
  %1973 = phi i32 [ %1976, %1971 ], [ %1970, %1968 ]
  %1974 = getelementptr inbounds i32, ptr %9, i64 %1972
  %1975 = load i32, ptr %1974, align 4, !tbaa !5
  %1976 = mul nsw i32 %1975, %1973
  %1977 = add nsw i64 %1972, -1
  %1978 = trunc i64 %1972 to i32
  %1979 = icmp sgt i32 %1978, 0
  br i1 %1979, label %1971, label %1980, !llvm.loop !545

1980:                                             ; preds = %1971, %1962
  %1981 = phi i32 [ %1966, %1962 ], [ %1976, %1971 ]
  %1982 = and i64 %1931, 4294967295
  %1983 = getelementptr inbounds i32, ptr %6, i64 %1982
  %1984 = load i32, ptr %1983, align 4, !tbaa !5
  %1985 = mul nsw i32 %1984, %1981
  %1986 = add nsw i32 %1985, %1925
  %1987 = icmp sgt i64 %1923, 2
  %1988 = add nsw i64 %1924, -1
  %1989 = add i32 %1922, 1
  br i1 %1987, label %1921, label %1990, !llvm.loop !546

1990:                                             ; preds = %1980, %1916
  %1991 = phi i32 [ %1920, %1916 ], [ %1986, %1980 ]
  %1992 = sext i32 %1991 to i64
  %1993 = getelementptr inbounds double, ptr %2, i64 %1992
  %1994 = load double, ptr %1993, align 8, !tbaa !18
  %1995 = getelementptr inbounds i16, ptr %1880, i64 %1992
  %1996 = load i16, ptr %1995, align 2, !tbaa !78
  %1997 = fpext float %1917 to double
  %1998 = sitofp i16 %1996 to double
  %1999 = fmul fast double %1994, %1998
  %2000 = fcmp fast uge double %1999, 0.000000e+00
  %2001 = fneg fast double %1999
  %2002 = tail call fast double @llvm.fabs.f64(double %1999)
  %2003 = fcmp fast ole double %2002, %1997
  %2004 = select nnan ninf i1 %2000, double %1999, double %2001
  %2005 = fptrunc double %2004 to float
  %2006 = select i1 %2003, float %1917, float %2005
  %2007 = fadd fast double %1994, %1919
  %2008 = add nuw nsw i32 %1918, 1
  br i1 %1910, label %2009, label %2056

2009:                                             ; preds = %1990
  %2010 = load i32, ptr %4, align 4, !tbaa !5
  %2011 = load i32, ptr %12, align 4, !tbaa !5
  %2012 = add nsw i32 %2011, -1
  %2013 = icmp slt i32 %2010, %2012
  br i1 %2013, label %2033, label %2014

2014:                                             ; preds = %2009
  %2015 = icmp eq i32 %2010, %2012
  br i1 %2015, label %2016, label %2049

2016:                                             ; preds = %2014
  store i32 0, ptr %4, align 4, !tbaa !5
  %2017 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2017, ptr %6, align 4, !tbaa !5
  br i1 %1915, label %2056, label %2018

2018:                                             ; preds = %2016, %2043
  %2019 = phi i64 [ %2047, %2043 ], [ 1, %2016 ]
  %2020 = getelementptr inbounds i32, ptr %4, i64 %2019
  %2021 = load i32, ptr %2020, align 4, !tbaa !5
  %2022 = getelementptr inbounds i32, ptr %12, i64 %2019
  %2023 = load i32, ptr %2022, align 4, !tbaa !5
  %2024 = add nsw i32 %2023, -1
  %2025 = icmp slt i32 %2021, %2024
  br i1 %2025, label %2026, label %2041

2026:                                             ; preds = %2018
  br i1 %2013, label %2033, label %2027

2027:                                             ; preds = %2026
  %2028 = getelementptr inbounds i32, ptr %7, i64 %2019
  %2029 = load i32, ptr %2028, align 4, !tbaa !5
  %2030 = getelementptr inbounds i32, ptr %6, i64 %2019
  %2031 = load i32, ptr %2030, align 4, !tbaa !5
  %2032 = add nsw i32 %2031, %2029
  store i32 %2032, ptr %2030, align 4, !tbaa !5
  br label %2051

2033:                                             ; preds = %2009, %2026
  %2034 = phi i32 [ %2021, %2026 ], [ %2010, %2009 ]
  %2035 = phi ptr [ %2020, %2026 ], [ %4, %2009 ]
  %2036 = phi i64 [ %2019, %2026 ], [ 0, %2009 ]
  %2037 = add nsw i32 %2034, 1
  store i32 %2037, ptr %2035, align 4, !tbaa !5
  %2038 = getelementptr inbounds i32, ptr %7, i64 %2036
  %2039 = load i32, ptr %2038, align 4, !tbaa !5
  %2040 = getelementptr inbounds i32, ptr %6, i64 %2036
  br label %2051

2041:                                             ; preds = %2018
  %2042 = icmp eq i32 %2021, %2024
  br i1 %2042, label %2043, label %2049

2043:                                             ; preds = %2041
  store i32 0, ptr %2020, align 4, !tbaa !5
  %2044 = getelementptr inbounds i32, ptr %8, i64 %2019
  %2045 = load i32, ptr %2044, align 4, !tbaa !5
  %2046 = getelementptr inbounds i32, ptr %6, i64 %2019
  store i32 %2045, ptr %2046, align 4, !tbaa !5
  %2047 = add nuw nsw i64 %2019, 1
  %2048 = icmp eq i64 %2047, %1913
  br i1 %2048, label %2056, label %2018, !llvm.loop !547

2049:                                             ; preds = %2014, %2041
  store float %2006, ptr %1882, align 4, !tbaa !162
  %2050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2051:                                             ; preds = %2027, %2033
  %2052 = phi ptr [ %2040, %2033 ], [ %2020, %2027 ]
  %2053 = phi i32 [ %2039, %2033 ], [ 1, %2027 ]
  %2054 = load i32, ptr %2052, align 4, !tbaa !5
  %2055 = add nsw i32 %2054, %2053
  store i32 %2055, ptr %2052, align 4, !tbaa !5
  br label %2056

2056:                                             ; preds = %2043, %2051, %2016, %1990
  %2057 = icmp eq i32 %2008, %5
  br i1 %2057, label %3120, label %1916, !llvm.loop !548

2058:                                             ; preds = %1899, %2199
  %2059 = phi float [ 0.000000e+00, %1899 ], [ %2147, %2199 ]
  %2060 = phi i32 [ 0, %1899 ], [ %2148, %2199 ]
  %2061 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1900, label %2062, label %2131

2062:                                             ; preds = %2058, %2121
  %2063 = phi i32 [ %2130, %2121 ], [ 0, %2058 ]
  %2064 = phi i64 [ %2072, %2121 ], [ %1904, %2058 ]
  %2065 = phi i64 [ %2129, %2121 ], [ %1903, %2058 ]
  %2066 = phi i32 [ %2127, %2121 ], [ %2061, %2058 ]
  %2067 = sub i32 %1902, %2063
  %2068 = tail call i32 @llvm.smin.i32(i32 %2067, i32 0)
  %2069 = sub i32 %2067, %2068
  %2070 = zext i32 %2069 to i64
  %2071 = add nuw nsw i64 %2070, 1
  %2072 = add nsw i64 %2064, -1
  %2073 = icmp ult i32 %2069, 31
  br i1 %2073, label %2109, label %2074

2074:                                             ; preds = %2062
  %2075 = and i64 %2071, 8589934560
  %2076 = sub i64 %2065, %2075
  br label %2077

2077:                                             ; preds = %2077, %2074
  %2078 = phi i64 [ 0, %2074 ], [ %2101, %2077 ]
  %2079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2074 ], [ %2097, %2077 ]
  %2080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2074 ], [ %2098, %2077 ]
  %2081 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2074 ], [ %2099, %2077 ]
  %2082 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2074 ], [ %2100, %2077 ]
  %2083 = sub i64 %2065, %2078
  %2084 = getelementptr inbounds i32, ptr %11, i64 %2083
  %2085 = getelementptr inbounds i32, ptr %2084, i64 -7
  %2086 = load <8 x i32>, ptr %2085, align 4, !tbaa !5
  %2087 = shufflevector <8 x i32> %2086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2088 = getelementptr inbounds i32, ptr %2084, i64 -15
  %2089 = load <8 x i32>, ptr %2088, align 4, !tbaa !5
  %2090 = shufflevector <8 x i32> %2089, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2091 = getelementptr inbounds i32, ptr %2084, i64 -23
  %2092 = load <8 x i32>, ptr %2091, align 4, !tbaa !5
  %2093 = shufflevector <8 x i32> %2092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2094 = getelementptr inbounds i32, ptr %2084, i64 -31
  %2095 = load <8 x i32>, ptr %2094, align 4, !tbaa !5
  %2096 = shufflevector <8 x i32> %2095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2097 = mul <8 x i32> %2087, %2079
  %2098 = mul <8 x i32> %2090, %2080
  %2099 = mul <8 x i32> %2093, %2081
  %2100 = mul <8 x i32> %2096, %2082
  %2101 = add nuw i64 %2078, 32
  %2102 = icmp eq i64 %2101, %2075
  br i1 %2102, label %2103, label %2077, !llvm.loop !549

2103:                                             ; preds = %2077
  %2104 = mul <8 x i32> %2098, %2097
  %2105 = mul <8 x i32> %2099, %2104
  %2106 = mul <8 x i32> %2100, %2105
  %2107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2106)
  %2108 = icmp eq i64 %2071, %2075
  br i1 %2108, label %2121, label %2109

2109:                                             ; preds = %2062, %2103
  %2110 = phi i64 [ %2065, %2062 ], [ %2076, %2103 ]
  %2111 = phi i32 [ 1, %2062 ], [ %2107, %2103 ]
  br label %2112

2112:                                             ; preds = %2109, %2112
  %2113 = phi i64 [ %2118, %2112 ], [ %2110, %2109 ]
  %2114 = phi i32 [ %2117, %2112 ], [ %2111, %2109 ]
  %2115 = getelementptr inbounds i32, ptr %11, i64 %2113
  %2116 = load i32, ptr %2115, align 4, !tbaa !5
  %2117 = mul nsw i32 %2116, %2114
  %2118 = add nsw i64 %2113, -1
  %2119 = trunc i64 %2113 to i32
  %2120 = icmp sgt i32 %2119, 0
  br i1 %2120, label %2112, label %2121, !llvm.loop !550

2121:                                             ; preds = %2112, %2103
  %2122 = phi i32 [ %2107, %2103 ], [ %2117, %2112 ]
  %2123 = and i64 %2072, 4294967295
  %2124 = getelementptr inbounds i32, ptr %6, i64 %2123
  %2125 = load i32, ptr %2124, align 4, !tbaa !5
  %2126 = mul nsw i32 %2125, %2122
  %2127 = add nsw i32 %2126, %2066
  %2128 = icmp sgt i64 %2064, 2
  %2129 = add nsw i64 %2065, -1
  %2130 = add i32 %2063, 1
  br i1 %2128, label %2062, label %2131, !llvm.loop !551

2131:                                             ; preds = %2121, %2058
  %2132 = phi i32 [ %2061, %2058 ], [ %2127, %2121 ]
  %2133 = icmp slt i32 %2132, %5
  br i1 %2133, label %2136, label %2134

2134:                                             ; preds = %2131
  %2135 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

2136:                                             ; preds = %2131
  %2137 = sext i32 %2132 to i64
  %2138 = getelementptr inbounds i16, ptr %1880, i64 %2137
  %2139 = load i16, ptr %2138, align 2, !tbaa !78
  %2140 = fpext float %2059 to double
  %2141 = sitofp i16 %2139 to double
  %2142 = icmp slt i16 %2139, 0
  %2143 = fneg fast double %2141
  %2144 = select i1 %2142, double %2143, double %2141
  %2145 = fcmp fast ole double %2144, %2140
  %2146 = fptrunc double %2144 to float
  %2147 = select fast i1 %2145, float %2059, float %2146
  store float %2147, ptr %1882, align 4, !tbaa !162
  %2148 = add nuw nsw i32 %2060, 1
  br i1 %1901, label %2149, label %2199

2149:                                             ; preds = %2136
  %2150 = load i32, ptr %4, align 4, !tbaa !5
  %2151 = load i32, ptr %12, align 4, !tbaa !5
  %2152 = add nsw i32 %2151, -1
  %2153 = icmp slt i32 %2150, %2152
  br i1 %2153, label %2176, label %2154

2154:                                             ; preds = %2149
  %2155 = icmp eq i32 %2150, %2152
  br i1 %2155, label %2156, label %2192

2156:                                             ; preds = %2154
  store i32 0, ptr %4, align 4, !tbaa !5
  %2157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2157, ptr %6, align 4, !tbaa !5
  br i1 %1906, label %2199, label %2158

2158:                                             ; preds = %2156, %2186
  %2159 = phi i64 [ %2190, %2186 ], [ 1, %2156 ]
  %2160 = getelementptr inbounds i32, ptr %4, i64 %2159
  %2161 = load i32, ptr %2160, align 4, !tbaa !5
  %2162 = getelementptr inbounds i32, ptr %12, i64 %2159
  %2163 = load i32, ptr %2162, align 4, !tbaa !5
  %2164 = add nsw i32 %2163, -1
  %2165 = icmp slt i32 %2161, %2164
  br i1 %2165, label %2166, label %2184

2166:                                             ; preds = %2158
  br i1 %2153, label %2176, label %2167

2167:                                             ; preds = %2166
  %2168 = shl i64 %2159, 32
  %2169 = add i64 %2168, -4294967296
  %2170 = ashr exact i64 %2169, 32
  %2171 = getelementptr inbounds i32, ptr %7, i64 %2170
  %2172 = load i32, ptr %2171, align 4, !tbaa !5
  %2173 = getelementptr inbounds i32, ptr %6, i64 %2159
  %2174 = load i32, ptr %2173, align 4, !tbaa !5
  %2175 = add nsw i32 %2174, %2172
  store i32 %2175, ptr %2173, align 4, !tbaa !5
  br label %2194

2176:                                             ; preds = %2149, %2166
  %2177 = phi i32 [ %2161, %2166 ], [ %2150, %2149 ]
  %2178 = phi ptr [ %2160, %2166 ], [ %4, %2149 ]
  %2179 = phi i64 [ %2159, %2166 ], [ 0, %2149 ]
  %2180 = add nsw i32 %2177, 1
  store i32 %2180, ptr %2178, align 4, !tbaa !5
  %2181 = getelementptr inbounds i32, ptr %7, i64 %2179
  %2182 = load i32, ptr %2181, align 4, !tbaa !5
  %2183 = getelementptr inbounds i32, ptr %6, i64 %2179
  br label %2194

2184:                                             ; preds = %2158
  %2185 = icmp eq i32 %2161, %2164
  br i1 %2185, label %2186, label %2192

2186:                                             ; preds = %2184
  store i32 0, ptr %2160, align 4, !tbaa !5
  %2187 = getelementptr inbounds i32, ptr %8, i64 %2159
  %2188 = load i32, ptr %2187, align 4, !tbaa !5
  %2189 = getelementptr inbounds i32, ptr %6, i64 %2159
  store i32 %2188, ptr %2189, align 4, !tbaa !5
  %2190 = add nuw nsw i64 %2159, 1
  %2191 = icmp eq i64 %2190, %1904
  br i1 %2191, label %2199, label %2158, !llvm.loop !552

2192:                                             ; preds = %2154, %2184
  %2193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2194:                                             ; preds = %2167, %2176
  %2195 = phi ptr [ %2183, %2176 ], [ %2160, %2167 ]
  %2196 = phi i32 [ %2182, %2176 ], [ 1, %2167 ]
  %2197 = load i32, ptr %2195, align 4, !tbaa !5
  %2198 = add nsw i32 %2197, %2196
  store i32 %2198, ptr %2195, align 4, !tbaa !5
  br label %2199

2199:                                             ; preds = %2186, %2194, %2156, %2136
  %2200 = icmp eq i32 %2148, %5
  br i1 %2200, label %3123, label %2058, !llvm.loop !553

2201:                                             ; preds = %1892
  %2202 = getelementptr inbounds i32, ptr %3, i64 %19
  %2203 = load i32, ptr %2202, align 4, !tbaa !5
  %2204 = icmp eq i32 %2203, 0
  %2205 = icmp sgt i32 %5, 0
  br i1 %2204, label %2215, label %2206

2206:                                             ; preds = %2201
  br i1 %2205, label %2207, label %3123

2207:                                             ; preds = %2206
  %2208 = icmp sgt i32 %13, 1
  %2209 = icmp sgt i32 %13, 0
  %2210 = add i32 %13, -2
  %2211 = zext i32 %2210 to i64
  %2212 = zext i32 %13 to i64
  %2213 = add nuw i32 %5, 1
  %2214 = icmp eq i32 %13, 1
  br label %2359

2215:                                             ; preds = %2201
  br i1 %2205, label %2216, label %3123

2216:                                             ; preds = %2215
  %2217 = icmp sgt i32 %13, 1
  %2218 = icmp sgt i32 %13, 0
  %2219 = add i32 %13, -2
  %2220 = zext i32 %2219 to i64
  %2221 = zext i32 %13 to i64
  %2222 = add nuw i32 %5, 1
  %2223 = icmp eq i32 %13, 1
  br label %2224

2224:                                             ; preds = %2216, %2357
  %2225 = phi float [ 0.000000e+00, %2216 ], [ %2307, %2357 ]
  %2226 = phi i32 [ 0, %2216 ], [ %2309, %2357 ]
  %2227 = phi double [ 0.000000e+00, %2216 ], [ %2308, %2357 ]
  %2228 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2217, label %2229, label %2298

2229:                                             ; preds = %2224, %2288
  %2230 = phi i32 [ %2297, %2288 ], [ 0, %2224 ]
  %2231 = phi i64 [ %2239, %2288 ], [ %2221, %2224 ]
  %2232 = phi i64 [ %2296, %2288 ], [ %2220, %2224 ]
  %2233 = phi i32 [ %2294, %2288 ], [ %2228, %2224 ]
  %2234 = sub i32 %2219, %2230
  %2235 = tail call i32 @llvm.smin.i32(i32 %2234, i32 0)
  %2236 = sub i32 %2234, %2235
  %2237 = zext i32 %2236 to i64
  %2238 = add nuw nsw i64 %2237, 1
  %2239 = add nsw i64 %2231, -1
  %2240 = icmp ult i32 %2236, 31
  br i1 %2240, label %2276, label %2241

2241:                                             ; preds = %2229
  %2242 = and i64 %2238, 8589934560
  %2243 = sub i64 %2232, %2242
  br label %2244

2244:                                             ; preds = %2244, %2241
  %2245 = phi i64 [ 0, %2241 ], [ %2268, %2244 ]
  %2246 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2241 ], [ %2264, %2244 ]
  %2247 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2241 ], [ %2265, %2244 ]
  %2248 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2241 ], [ %2266, %2244 ]
  %2249 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2241 ], [ %2267, %2244 ]
  %2250 = sub i64 %2232, %2245
  %2251 = getelementptr inbounds i32, ptr %9, i64 %2250
  %2252 = getelementptr inbounds i32, ptr %2251, i64 -7
  %2253 = load <8 x i32>, ptr %2252, align 4, !tbaa !5
  %2254 = shufflevector <8 x i32> %2253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2255 = getelementptr inbounds i32, ptr %2251, i64 -15
  %2256 = load <8 x i32>, ptr %2255, align 4, !tbaa !5
  %2257 = shufflevector <8 x i32> %2256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2258 = getelementptr inbounds i32, ptr %2251, i64 -23
  %2259 = load <8 x i32>, ptr %2258, align 4, !tbaa !5
  %2260 = shufflevector <8 x i32> %2259, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2261 = getelementptr inbounds i32, ptr %2251, i64 -31
  %2262 = load <8 x i32>, ptr %2261, align 4, !tbaa !5
  %2263 = shufflevector <8 x i32> %2262, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2264 = mul <8 x i32> %2254, %2246
  %2265 = mul <8 x i32> %2257, %2247
  %2266 = mul <8 x i32> %2260, %2248
  %2267 = mul <8 x i32> %2263, %2249
  %2268 = add nuw i64 %2245, 32
  %2269 = icmp eq i64 %2268, %2242
  br i1 %2269, label %2270, label %2244, !llvm.loop !554

2270:                                             ; preds = %2244
  %2271 = mul <8 x i32> %2265, %2264
  %2272 = mul <8 x i32> %2266, %2271
  %2273 = mul <8 x i32> %2267, %2272
  %2274 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2273)
  %2275 = icmp eq i64 %2238, %2242
  br i1 %2275, label %2288, label %2276

2276:                                             ; preds = %2229, %2270
  %2277 = phi i64 [ %2232, %2229 ], [ %2243, %2270 ]
  %2278 = phi i32 [ 1, %2229 ], [ %2274, %2270 ]
  br label %2279

2279:                                             ; preds = %2276, %2279
  %2280 = phi i64 [ %2285, %2279 ], [ %2277, %2276 ]
  %2281 = phi i32 [ %2284, %2279 ], [ %2278, %2276 ]
  %2282 = getelementptr inbounds i32, ptr %9, i64 %2280
  %2283 = load i32, ptr %2282, align 4, !tbaa !5
  %2284 = mul nsw i32 %2283, %2281
  %2285 = add nsw i64 %2280, -1
  %2286 = trunc i64 %2280 to i32
  %2287 = icmp sgt i32 %2286, 0
  br i1 %2287, label %2279, label %2288, !llvm.loop !555

2288:                                             ; preds = %2279, %2270
  %2289 = phi i32 [ %2274, %2270 ], [ %2284, %2279 ]
  %2290 = and i64 %2239, 4294967295
  %2291 = getelementptr inbounds i32, ptr %6, i64 %2290
  %2292 = load i32, ptr %2291, align 4, !tbaa !5
  %2293 = mul nsw i32 %2292, %2289
  %2294 = add nsw i32 %2293, %2233
  %2295 = icmp sgt i64 %2231, 2
  %2296 = add nsw i64 %2232, -1
  %2297 = add i32 %2230, 1
  br i1 %2295, label %2229, label %2298, !llvm.loop !556

2298:                                             ; preds = %2288, %2224
  %2299 = phi i32 [ %2228, %2224 ], [ %2294, %2288 ]
  %2300 = sext i32 %2299 to i64
  %2301 = getelementptr inbounds i16, ptr %1880, i64 %2300
  %2302 = load i16, ptr %2301, align 2, !tbaa !78
  %2303 = sitofp i16 %2302 to float
  %2304 = icmp slt i16 %2302, 0
  %2305 = fneg fast float %2303
  %2306 = select fast i1 %2304, float %2305, float %2303
  %2307 = tail call fast float @llvm.maxnum.f32(float %2225, float %2306)
  %2308 = fadd fast double %2227, 1.000000e+00
  %2309 = add nuw nsw i32 %2226, 1
  br i1 %2218, label %2310, label %2357

2310:                                             ; preds = %2298
  %2311 = load i32, ptr %4, align 4, !tbaa !5
  %2312 = load i32, ptr %12, align 4, !tbaa !5
  %2313 = add nsw i32 %2312, -1
  %2314 = icmp slt i32 %2311, %2313
  br i1 %2314, label %2334, label %2315

2315:                                             ; preds = %2310
  %2316 = icmp eq i32 %2311, %2313
  br i1 %2316, label %2317, label %2350

2317:                                             ; preds = %2315
  store i32 0, ptr %4, align 4, !tbaa !5
  %2318 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2318, ptr %6, align 4, !tbaa !5
  br i1 %2223, label %2357, label %2319

2319:                                             ; preds = %2317, %2344
  %2320 = phi i64 [ %2348, %2344 ], [ 1, %2317 ]
  %2321 = getelementptr inbounds i32, ptr %4, i64 %2320
  %2322 = load i32, ptr %2321, align 4, !tbaa !5
  %2323 = getelementptr inbounds i32, ptr %12, i64 %2320
  %2324 = load i32, ptr %2323, align 4, !tbaa !5
  %2325 = add nsw i32 %2324, -1
  %2326 = icmp slt i32 %2322, %2325
  br i1 %2326, label %2327, label %2342

2327:                                             ; preds = %2319
  br i1 %2314, label %2334, label %2328

2328:                                             ; preds = %2327
  %2329 = getelementptr inbounds i32, ptr %7, i64 %2320
  %2330 = load i32, ptr %2329, align 4, !tbaa !5
  %2331 = getelementptr inbounds i32, ptr %6, i64 %2320
  %2332 = load i32, ptr %2331, align 4, !tbaa !5
  %2333 = add nsw i32 %2332, %2330
  store i32 %2333, ptr %2331, align 4, !tbaa !5
  br label %2352

2334:                                             ; preds = %2310, %2327
  %2335 = phi i32 [ %2322, %2327 ], [ %2311, %2310 ]
  %2336 = phi ptr [ %2321, %2327 ], [ %4, %2310 ]
  %2337 = phi i64 [ %2320, %2327 ], [ 0, %2310 ]
  %2338 = add nsw i32 %2335, 1
  store i32 %2338, ptr %2336, align 4, !tbaa !5
  %2339 = getelementptr inbounds i32, ptr %7, i64 %2337
  %2340 = load i32, ptr %2339, align 4, !tbaa !5
  %2341 = getelementptr inbounds i32, ptr %6, i64 %2337
  br label %2352

2342:                                             ; preds = %2319
  %2343 = icmp eq i32 %2322, %2325
  br i1 %2343, label %2344, label %2350

2344:                                             ; preds = %2342
  store i32 0, ptr %2321, align 4, !tbaa !5
  %2345 = getelementptr inbounds i32, ptr %8, i64 %2320
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = getelementptr inbounds i32, ptr %6, i64 %2320
  store i32 %2346, ptr %2347, align 4, !tbaa !5
  %2348 = add nuw nsw i64 %2320, 1
  %2349 = icmp eq i64 %2348, %2221
  br i1 %2349, label %2357, label %2319, !llvm.loop !557

2350:                                             ; preds = %2315, %2342
  store float %2307, ptr %1882, align 4, !tbaa !162
  %2351 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2352:                                             ; preds = %2328, %2334
  %2353 = phi ptr [ %2341, %2334 ], [ %2321, %2328 ]
  %2354 = phi i32 [ %2340, %2334 ], [ 1, %2328 ]
  %2355 = load i32, ptr %2353, align 4, !tbaa !5
  %2356 = add nsw i32 %2355, %2354
  store i32 %2356, ptr %2353, align 4, !tbaa !5
  br label %2357

2357:                                             ; preds = %2344, %2352, %2317, %2298
  %2358 = icmp eq i32 %2309, %5
  br i1 %2358, label %3121, label %2224, !llvm.loop !558

2359:                                             ; preds = %2207, %2497
  %2360 = phi float [ 0.000000e+00, %2207 ], [ %2445, %2497 ]
  %2361 = phi i32 [ 0, %2207 ], [ %2446, %2497 ]
  %2362 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2208, label %2363, label %2432

2363:                                             ; preds = %2359, %2422
  %2364 = phi i32 [ %2431, %2422 ], [ 0, %2359 ]
  %2365 = phi i64 [ %2373, %2422 ], [ %2212, %2359 ]
  %2366 = phi i64 [ %2430, %2422 ], [ %2211, %2359 ]
  %2367 = phi i32 [ %2428, %2422 ], [ %2362, %2359 ]
  %2368 = sub i32 %2210, %2364
  %2369 = tail call i32 @llvm.smin.i32(i32 %2368, i32 0)
  %2370 = sub i32 %2368, %2369
  %2371 = zext i32 %2370 to i64
  %2372 = add nuw nsw i64 %2371, 1
  %2373 = add nsw i64 %2365, -1
  %2374 = icmp ult i32 %2370, 31
  br i1 %2374, label %2410, label %2375

2375:                                             ; preds = %2363
  %2376 = and i64 %2372, 8589934560
  %2377 = sub i64 %2366, %2376
  br label %2378

2378:                                             ; preds = %2378, %2375
  %2379 = phi i64 [ 0, %2375 ], [ %2402, %2378 ]
  %2380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2375 ], [ %2398, %2378 ]
  %2381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2375 ], [ %2399, %2378 ]
  %2382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2375 ], [ %2400, %2378 ]
  %2383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2375 ], [ %2401, %2378 ]
  %2384 = sub i64 %2366, %2379
  %2385 = getelementptr inbounds i32, ptr %11, i64 %2384
  %2386 = getelementptr inbounds i32, ptr %2385, i64 -7
  %2387 = load <8 x i32>, ptr %2386, align 4, !tbaa !5
  %2388 = shufflevector <8 x i32> %2387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2389 = getelementptr inbounds i32, ptr %2385, i64 -15
  %2390 = load <8 x i32>, ptr %2389, align 4, !tbaa !5
  %2391 = shufflevector <8 x i32> %2390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2392 = getelementptr inbounds i32, ptr %2385, i64 -23
  %2393 = load <8 x i32>, ptr %2392, align 4, !tbaa !5
  %2394 = shufflevector <8 x i32> %2393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2395 = getelementptr inbounds i32, ptr %2385, i64 -31
  %2396 = load <8 x i32>, ptr %2395, align 4, !tbaa !5
  %2397 = shufflevector <8 x i32> %2396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2398 = mul <8 x i32> %2388, %2380
  %2399 = mul <8 x i32> %2391, %2381
  %2400 = mul <8 x i32> %2394, %2382
  %2401 = mul <8 x i32> %2397, %2383
  %2402 = add nuw i64 %2379, 32
  %2403 = icmp eq i64 %2402, %2376
  br i1 %2403, label %2404, label %2378, !llvm.loop !559

2404:                                             ; preds = %2378
  %2405 = mul <8 x i32> %2399, %2398
  %2406 = mul <8 x i32> %2400, %2405
  %2407 = mul <8 x i32> %2401, %2406
  %2408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2407)
  %2409 = icmp eq i64 %2372, %2376
  br i1 %2409, label %2422, label %2410

2410:                                             ; preds = %2363, %2404
  %2411 = phi i64 [ %2366, %2363 ], [ %2377, %2404 ]
  %2412 = phi i32 [ 1, %2363 ], [ %2408, %2404 ]
  br label %2413

2413:                                             ; preds = %2410, %2413
  %2414 = phi i64 [ %2419, %2413 ], [ %2411, %2410 ]
  %2415 = phi i32 [ %2418, %2413 ], [ %2412, %2410 ]
  %2416 = getelementptr inbounds i32, ptr %11, i64 %2414
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = mul nsw i32 %2417, %2415
  %2419 = add nsw i64 %2414, -1
  %2420 = trunc i64 %2414 to i32
  %2421 = icmp sgt i32 %2420, 0
  br i1 %2421, label %2413, label %2422, !llvm.loop !560

2422:                                             ; preds = %2413, %2404
  %2423 = phi i32 [ %2408, %2404 ], [ %2418, %2413 ]
  %2424 = and i64 %2373, 4294967295
  %2425 = getelementptr inbounds i32, ptr %6, i64 %2424
  %2426 = load i32, ptr %2425, align 4, !tbaa !5
  %2427 = mul nsw i32 %2426, %2423
  %2428 = add nsw i32 %2427, %2367
  %2429 = icmp sgt i64 %2365, 2
  %2430 = add nsw i64 %2366, -1
  %2431 = add i32 %2364, 1
  br i1 %2429, label %2363, label %2432, !llvm.loop !561

2432:                                             ; preds = %2422, %2359
  %2433 = phi i32 [ %2362, %2359 ], [ %2428, %2422 ]
  %2434 = icmp slt i32 %2433, %5
  br i1 %2434, label %2437, label %2435

2435:                                             ; preds = %2432
  %2436 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

2437:                                             ; preds = %2432
  %2438 = sext i32 %2433 to i64
  %2439 = getelementptr inbounds i16, ptr %1880, i64 %2438
  %2440 = load i16, ptr %2439, align 2, !tbaa !78
  %2441 = sitofp i16 %2440 to float
  %2442 = icmp slt i16 %2440, 0
  %2443 = fneg fast float %2441
  %2444 = select fast i1 %2442, float %2443, float %2441
  %2445 = tail call fast float @llvm.maxnum.f32(float %2360, float %2444)
  store float %2445, ptr %1882, align 4, !tbaa !162
  %2446 = add nuw nsw i32 %2361, 1
  br i1 %2209, label %2447, label %2497

2447:                                             ; preds = %2437
  %2448 = load i32, ptr %4, align 4, !tbaa !5
  %2449 = load i32, ptr %12, align 4, !tbaa !5
  %2450 = add nsw i32 %2449, -1
  %2451 = icmp slt i32 %2448, %2450
  br i1 %2451, label %2474, label %2452

2452:                                             ; preds = %2447
  %2453 = icmp eq i32 %2448, %2450
  br i1 %2453, label %2454, label %2490

2454:                                             ; preds = %2452
  store i32 0, ptr %4, align 4, !tbaa !5
  %2455 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2455, ptr %6, align 4, !tbaa !5
  br i1 %2214, label %2497, label %2456

2456:                                             ; preds = %2454, %2484
  %2457 = phi i64 [ %2488, %2484 ], [ 1, %2454 ]
  %2458 = getelementptr inbounds i32, ptr %4, i64 %2457
  %2459 = load i32, ptr %2458, align 4, !tbaa !5
  %2460 = getelementptr inbounds i32, ptr %12, i64 %2457
  %2461 = load i32, ptr %2460, align 4, !tbaa !5
  %2462 = add nsw i32 %2461, -1
  %2463 = icmp slt i32 %2459, %2462
  br i1 %2463, label %2464, label %2482

2464:                                             ; preds = %2456
  br i1 %2451, label %2474, label %2465

2465:                                             ; preds = %2464
  %2466 = shl i64 %2457, 32
  %2467 = add i64 %2466, -4294967296
  %2468 = ashr exact i64 %2467, 32
  %2469 = getelementptr inbounds i32, ptr %7, i64 %2468
  %2470 = load i32, ptr %2469, align 4, !tbaa !5
  %2471 = getelementptr inbounds i32, ptr %6, i64 %2457
  %2472 = load i32, ptr %2471, align 4, !tbaa !5
  %2473 = add nsw i32 %2472, %2470
  store i32 %2473, ptr %2471, align 4, !tbaa !5
  br label %2492

2474:                                             ; preds = %2447, %2464
  %2475 = phi i32 [ %2459, %2464 ], [ %2448, %2447 ]
  %2476 = phi ptr [ %2458, %2464 ], [ %4, %2447 ]
  %2477 = phi i64 [ %2457, %2464 ], [ 0, %2447 ]
  %2478 = add nsw i32 %2475, 1
  store i32 %2478, ptr %2476, align 4, !tbaa !5
  %2479 = getelementptr inbounds i32, ptr %7, i64 %2477
  %2480 = load i32, ptr %2479, align 4, !tbaa !5
  %2481 = getelementptr inbounds i32, ptr %6, i64 %2477
  br label %2492

2482:                                             ; preds = %2456
  %2483 = icmp eq i32 %2459, %2462
  br i1 %2483, label %2484, label %2490

2484:                                             ; preds = %2482
  store i32 0, ptr %2458, align 4, !tbaa !5
  %2485 = getelementptr inbounds i32, ptr %8, i64 %2457
  %2486 = load i32, ptr %2485, align 4, !tbaa !5
  %2487 = getelementptr inbounds i32, ptr %6, i64 %2457
  store i32 %2486, ptr %2487, align 4, !tbaa !5
  %2488 = add nuw nsw i64 %2457, 1
  %2489 = icmp eq i64 %2488, %2212
  br i1 %2489, label %2497, label %2456, !llvm.loop !562

2490:                                             ; preds = %2452, %2482
  %2491 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2492:                                             ; preds = %2465, %2474
  %2493 = phi ptr [ %2481, %2474 ], [ %2458, %2465 ]
  %2494 = phi i32 [ %2480, %2474 ], [ 1, %2465 ]
  %2495 = load i32, ptr %2493, align 4, !tbaa !5
  %2496 = add nsw i32 %2495, %2494
  store i32 %2496, ptr %2493, align 4, !tbaa !5
  br label %2497

2497:                                             ; preds = %2484, %2492, %2454, %2437
  %2498 = icmp eq i32 %2446, %5
  br i1 %2498, label %3123, label %2359, !llvm.loop !563

2499:                                             ; preds = %1892
  %2500 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1026, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3123

2501:                                             ; preds = %18
  %2502 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2503 = load ptr, ptr %2502, align 8, !tbaa !9
  %2504 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2505 = load ptr, ptr %2504, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2505, align 8, !tbaa !18
  %2506 = icmp eq i32 %13, 0
  br i1 %2506, label %2507, label %2515

2507:                                             ; preds = %2501
  %2508 = load i16, ptr %2503, align 2, !tbaa !78
  %2509 = sitofp i16 %2508 to double
  %2510 = icmp slt i16 %2508, 0
  %2511 = fneg fast double %2509
  %2512 = select fast i1 %2510, double %2511, double %2509
  %2513 = fcmp fast ole double %2512, 0.000000e+00
  %2514 = select fast i1 %2513, double 0.000000e+00, double %2512
  store double %2514, ptr %2505, align 8, !tbaa !18
  br label %3123

2515:                                             ; preds = %2501
  switch i32 %1, label %3117 [
    i32 1, label %2516
    i32 0, label %2819
  ]

2516:                                             ; preds = %2515
  %2517 = getelementptr inbounds i32, ptr %3, i64 %19
  %2518 = load i32, ptr %2517, align 4, !tbaa !5
  %2519 = icmp eq i32 %2518, 0
  %2520 = icmp sgt i32 %5, 0
  br i1 %2519, label %2530, label %2521

2521:                                             ; preds = %2516
  br i1 %2520, label %2522, label %3123

2522:                                             ; preds = %2521
  %2523 = icmp sgt i32 %13, 1
  %2524 = icmp sgt i32 %13, 0
  %2525 = add i32 %13, -2
  %2526 = zext i32 %2525 to i64
  %2527 = zext i32 %13 to i64
  %2528 = add nuw i32 %5, 1
  %2529 = icmp eq i32 %13, 1
  br label %2679

2530:                                             ; preds = %2516
  br i1 %2520, label %2531, label %3123

2531:                                             ; preds = %2530
  %2532 = icmp sgt i32 %13, 1
  %2533 = icmp sgt i32 %13, 0
  %2534 = add i32 %13, -2
  %2535 = zext i32 %2534 to i64
  %2536 = zext i32 %13 to i64
  %2537 = add nuw i32 %5, 1
  %2538 = icmp eq i32 %13, 1
  br label %2539

2539:                                             ; preds = %2531, %2677
  %2540 = phi double [ 0.000000e+00, %2531 ], [ %2627, %2677 ]
  %2541 = phi i32 [ 0, %2531 ], [ %2629, %2677 ]
  %2542 = phi double [ 0.000000e+00, %2531 ], [ %2628, %2677 ]
  %2543 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2532, label %2544, label %2613

2544:                                             ; preds = %2539, %2603
  %2545 = phi i32 [ %2612, %2603 ], [ 0, %2539 ]
  %2546 = phi i64 [ %2554, %2603 ], [ %2536, %2539 ]
  %2547 = phi i64 [ %2611, %2603 ], [ %2535, %2539 ]
  %2548 = phi i32 [ %2609, %2603 ], [ %2543, %2539 ]
  %2549 = sub i32 %2534, %2545
  %2550 = tail call i32 @llvm.smin.i32(i32 %2549, i32 0)
  %2551 = sub i32 %2549, %2550
  %2552 = zext i32 %2551 to i64
  %2553 = add nuw nsw i64 %2552, 1
  %2554 = add nsw i64 %2546, -1
  %2555 = icmp ult i32 %2551, 31
  br i1 %2555, label %2591, label %2556

2556:                                             ; preds = %2544
  %2557 = and i64 %2553, 8589934560
  %2558 = sub i64 %2547, %2557
  br label %2559

2559:                                             ; preds = %2559, %2556
  %2560 = phi i64 [ 0, %2556 ], [ %2583, %2559 ]
  %2561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2556 ], [ %2579, %2559 ]
  %2562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2556 ], [ %2580, %2559 ]
  %2563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2556 ], [ %2581, %2559 ]
  %2564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2556 ], [ %2582, %2559 ]
  %2565 = sub i64 %2547, %2560
  %2566 = getelementptr inbounds i32, ptr %9, i64 %2565
  %2567 = getelementptr inbounds i32, ptr %2566, i64 -7
  %2568 = load <8 x i32>, ptr %2567, align 4, !tbaa !5
  %2569 = shufflevector <8 x i32> %2568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2570 = getelementptr inbounds i32, ptr %2566, i64 -15
  %2571 = load <8 x i32>, ptr %2570, align 4, !tbaa !5
  %2572 = shufflevector <8 x i32> %2571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2573 = getelementptr inbounds i32, ptr %2566, i64 -23
  %2574 = load <8 x i32>, ptr %2573, align 4, !tbaa !5
  %2575 = shufflevector <8 x i32> %2574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2576 = getelementptr inbounds i32, ptr %2566, i64 -31
  %2577 = load <8 x i32>, ptr %2576, align 4, !tbaa !5
  %2578 = shufflevector <8 x i32> %2577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2579 = mul <8 x i32> %2569, %2561
  %2580 = mul <8 x i32> %2572, %2562
  %2581 = mul <8 x i32> %2575, %2563
  %2582 = mul <8 x i32> %2578, %2564
  %2583 = add nuw i64 %2560, 32
  %2584 = icmp eq i64 %2583, %2557
  br i1 %2584, label %2585, label %2559, !llvm.loop !564

2585:                                             ; preds = %2559
  %2586 = mul <8 x i32> %2580, %2579
  %2587 = mul <8 x i32> %2581, %2586
  %2588 = mul <8 x i32> %2582, %2587
  %2589 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2588)
  %2590 = icmp eq i64 %2553, %2557
  br i1 %2590, label %2603, label %2591

2591:                                             ; preds = %2544, %2585
  %2592 = phi i64 [ %2547, %2544 ], [ %2558, %2585 ]
  %2593 = phi i32 [ 1, %2544 ], [ %2589, %2585 ]
  br label %2594

2594:                                             ; preds = %2591, %2594
  %2595 = phi i64 [ %2600, %2594 ], [ %2592, %2591 ]
  %2596 = phi i32 [ %2599, %2594 ], [ %2593, %2591 ]
  %2597 = getelementptr inbounds i32, ptr %9, i64 %2595
  %2598 = load i32, ptr %2597, align 4, !tbaa !5
  %2599 = mul nsw i32 %2598, %2596
  %2600 = add nsw i64 %2595, -1
  %2601 = trunc i64 %2595 to i32
  %2602 = icmp sgt i32 %2601, 0
  br i1 %2602, label %2594, label %2603, !llvm.loop !565

2603:                                             ; preds = %2594, %2585
  %2604 = phi i32 [ %2589, %2585 ], [ %2599, %2594 ]
  %2605 = and i64 %2554, 4294967295
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2605
  %2607 = load i32, ptr %2606, align 4, !tbaa !5
  %2608 = mul nsw i32 %2607, %2604
  %2609 = add nsw i32 %2608, %2548
  %2610 = icmp sgt i64 %2546, 2
  %2611 = add nsw i64 %2547, -1
  %2612 = add i32 %2545, 1
  br i1 %2610, label %2544, label %2613, !llvm.loop !566

2613:                                             ; preds = %2603, %2539
  %2614 = phi i32 [ %2543, %2539 ], [ %2609, %2603 ]
  %2615 = sext i32 %2614 to i64
  %2616 = getelementptr inbounds double, ptr %2, i64 %2615
  %2617 = load double, ptr %2616, align 8, !tbaa !18
  %2618 = getelementptr inbounds i16, ptr %2503, i64 %2615
  %2619 = load i16, ptr %2618, align 2, !tbaa !78
  %2620 = sitofp i16 %2619 to double
  %2621 = fmul fast double %2617, %2620
  %2622 = fcmp fast uge double %2621, 0.000000e+00
  %2623 = fneg fast double %2621
  %2624 = tail call fast double @llvm.fabs.f64(double %2621)
  %2625 = fcmp fast oge double %2540, %2624
  %2626 = select nnan ninf i1 %2622, double %2621, double %2623
  %2627 = select i1 %2625, double %2540, double %2626
  store double %2627, ptr %2505, align 8, !tbaa !18
  %2628 = fadd fast double %2617, %2542
  %2629 = add nuw nsw i32 %2541, 1
  br i1 %2533, label %2630, label %2677

2630:                                             ; preds = %2613
  %2631 = load i32, ptr %4, align 4, !tbaa !5
  %2632 = load i32, ptr %12, align 4, !tbaa !5
  %2633 = add nsw i32 %2632, -1
  %2634 = icmp slt i32 %2631, %2633
  br i1 %2634, label %2654, label %2635

2635:                                             ; preds = %2630
  %2636 = icmp eq i32 %2631, %2633
  br i1 %2636, label %2637, label %2670

2637:                                             ; preds = %2635
  store i32 0, ptr %4, align 4, !tbaa !5
  %2638 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2638, ptr %6, align 4, !tbaa !5
  br i1 %2538, label %2677, label %2639

2639:                                             ; preds = %2637, %2664
  %2640 = phi i64 [ %2668, %2664 ], [ 1, %2637 ]
  %2641 = getelementptr inbounds i32, ptr %4, i64 %2640
  %2642 = load i32, ptr %2641, align 4, !tbaa !5
  %2643 = getelementptr inbounds i32, ptr %12, i64 %2640
  %2644 = load i32, ptr %2643, align 4, !tbaa !5
  %2645 = add nsw i32 %2644, -1
  %2646 = icmp slt i32 %2642, %2645
  br i1 %2646, label %2647, label %2662

2647:                                             ; preds = %2639
  br i1 %2634, label %2654, label %2648

2648:                                             ; preds = %2647
  %2649 = getelementptr inbounds i32, ptr %7, i64 %2640
  %2650 = load i32, ptr %2649, align 4, !tbaa !5
  %2651 = getelementptr inbounds i32, ptr %6, i64 %2640
  %2652 = load i32, ptr %2651, align 4, !tbaa !5
  %2653 = add nsw i32 %2652, %2650
  store i32 %2653, ptr %2651, align 4, !tbaa !5
  br label %2672

2654:                                             ; preds = %2630, %2647
  %2655 = phi i32 [ %2642, %2647 ], [ %2631, %2630 ]
  %2656 = phi ptr [ %2641, %2647 ], [ %4, %2630 ]
  %2657 = phi i64 [ %2640, %2647 ], [ 0, %2630 ]
  %2658 = add nsw i32 %2655, 1
  store i32 %2658, ptr %2656, align 4, !tbaa !5
  %2659 = getelementptr inbounds i32, ptr %7, i64 %2657
  %2660 = load i32, ptr %2659, align 4, !tbaa !5
  %2661 = getelementptr inbounds i32, ptr %6, i64 %2657
  br label %2672

2662:                                             ; preds = %2639
  %2663 = icmp eq i32 %2642, %2645
  br i1 %2663, label %2664, label %2670

2664:                                             ; preds = %2662
  store i32 0, ptr %2641, align 4, !tbaa !5
  %2665 = getelementptr inbounds i32, ptr %8, i64 %2640
  %2666 = load i32, ptr %2665, align 4, !tbaa !5
  %2667 = getelementptr inbounds i32, ptr %6, i64 %2640
  store i32 %2666, ptr %2667, align 4, !tbaa !5
  %2668 = add nuw nsw i64 %2640, 1
  %2669 = icmp eq i64 %2668, %2536
  br i1 %2669, label %2677, label %2639, !llvm.loop !567

2670:                                             ; preds = %2635, %2662
  %2671 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2672:                                             ; preds = %2648, %2654
  %2673 = phi ptr [ %2661, %2654 ], [ %2641, %2648 ]
  %2674 = phi i32 [ %2660, %2654 ], [ 1, %2648 ]
  %2675 = load i32, ptr %2673, align 4, !tbaa !5
  %2676 = add nsw i32 %2675, %2674
  store i32 %2676, ptr %2673, align 4, !tbaa !5
  br label %2677

2677:                                             ; preds = %2664, %2672, %2637, %2613
  %2678 = icmp eq i32 %2629, %5
  br i1 %2678, label %3123, label %2539, !llvm.loop !568

2679:                                             ; preds = %2522, %2817
  %2680 = phi double [ 0.000000e+00, %2522 ], [ %2765, %2817 ]
  %2681 = phi i32 [ 0, %2522 ], [ %2766, %2817 ]
  %2682 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2523, label %2683, label %2752

2683:                                             ; preds = %2679, %2742
  %2684 = phi i32 [ %2751, %2742 ], [ 0, %2679 ]
  %2685 = phi i64 [ %2693, %2742 ], [ %2527, %2679 ]
  %2686 = phi i64 [ %2750, %2742 ], [ %2526, %2679 ]
  %2687 = phi i32 [ %2748, %2742 ], [ %2682, %2679 ]
  %2688 = sub i32 %2525, %2684
  %2689 = tail call i32 @llvm.smin.i32(i32 %2688, i32 0)
  %2690 = sub i32 %2688, %2689
  %2691 = zext i32 %2690 to i64
  %2692 = add nuw nsw i64 %2691, 1
  %2693 = add nsw i64 %2685, -1
  %2694 = icmp ult i32 %2690, 31
  br i1 %2694, label %2730, label %2695

2695:                                             ; preds = %2683
  %2696 = and i64 %2692, 8589934560
  %2697 = sub i64 %2686, %2696
  br label %2698

2698:                                             ; preds = %2698, %2695
  %2699 = phi i64 [ 0, %2695 ], [ %2722, %2698 ]
  %2700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2695 ], [ %2718, %2698 ]
  %2701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2695 ], [ %2719, %2698 ]
  %2702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2695 ], [ %2720, %2698 ]
  %2703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2695 ], [ %2721, %2698 ]
  %2704 = sub i64 %2686, %2699
  %2705 = getelementptr inbounds i32, ptr %11, i64 %2704
  %2706 = getelementptr inbounds i32, ptr %2705, i64 -7
  %2707 = load <8 x i32>, ptr %2706, align 4, !tbaa !5
  %2708 = shufflevector <8 x i32> %2707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2709 = getelementptr inbounds i32, ptr %2705, i64 -15
  %2710 = load <8 x i32>, ptr %2709, align 4, !tbaa !5
  %2711 = shufflevector <8 x i32> %2710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2712 = getelementptr inbounds i32, ptr %2705, i64 -23
  %2713 = load <8 x i32>, ptr %2712, align 4, !tbaa !5
  %2714 = shufflevector <8 x i32> %2713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2715 = getelementptr inbounds i32, ptr %2705, i64 -31
  %2716 = load <8 x i32>, ptr %2715, align 4, !tbaa !5
  %2717 = shufflevector <8 x i32> %2716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2718 = mul <8 x i32> %2708, %2700
  %2719 = mul <8 x i32> %2711, %2701
  %2720 = mul <8 x i32> %2714, %2702
  %2721 = mul <8 x i32> %2717, %2703
  %2722 = add nuw i64 %2699, 32
  %2723 = icmp eq i64 %2722, %2696
  br i1 %2723, label %2724, label %2698, !llvm.loop !569

2724:                                             ; preds = %2698
  %2725 = mul <8 x i32> %2719, %2718
  %2726 = mul <8 x i32> %2720, %2725
  %2727 = mul <8 x i32> %2721, %2726
  %2728 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2727)
  %2729 = icmp eq i64 %2692, %2696
  br i1 %2729, label %2742, label %2730

2730:                                             ; preds = %2683, %2724
  %2731 = phi i64 [ %2686, %2683 ], [ %2697, %2724 ]
  %2732 = phi i32 [ 1, %2683 ], [ %2728, %2724 ]
  br label %2733

2733:                                             ; preds = %2730, %2733
  %2734 = phi i64 [ %2739, %2733 ], [ %2731, %2730 ]
  %2735 = phi i32 [ %2738, %2733 ], [ %2732, %2730 ]
  %2736 = getelementptr inbounds i32, ptr %11, i64 %2734
  %2737 = load i32, ptr %2736, align 4, !tbaa !5
  %2738 = mul nsw i32 %2737, %2735
  %2739 = add nsw i64 %2734, -1
  %2740 = trunc i64 %2734 to i32
  %2741 = icmp sgt i32 %2740, 0
  br i1 %2741, label %2733, label %2742, !llvm.loop !570

2742:                                             ; preds = %2733, %2724
  %2743 = phi i32 [ %2728, %2724 ], [ %2738, %2733 ]
  %2744 = and i64 %2693, 4294967295
  %2745 = getelementptr inbounds i32, ptr %6, i64 %2744
  %2746 = load i32, ptr %2745, align 4, !tbaa !5
  %2747 = mul nsw i32 %2746, %2743
  %2748 = add nsw i32 %2747, %2687
  %2749 = icmp sgt i64 %2685, 2
  %2750 = add nsw i64 %2686, -1
  %2751 = add i32 %2684, 1
  br i1 %2749, label %2683, label %2752, !llvm.loop !571

2752:                                             ; preds = %2742, %2679
  %2753 = phi i32 [ %2682, %2679 ], [ %2748, %2742 ]
  %2754 = icmp slt i32 %2753, %5
  br i1 %2754, label %2757, label %2755

2755:                                             ; preds = %2752
  %2756 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

2757:                                             ; preds = %2752
  %2758 = sext i32 %2753 to i64
  %2759 = getelementptr inbounds i16, ptr %2503, i64 %2758
  %2760 = load i16, ptr %2759, align 2, !tbaa !78
  %2761 = sitofp i16 %2760 to double
  %2762 = icmp slt i16 %2760, 0
  %2763 = fneg fast double %2761
  %2764 = select i1 %2762, double %2763, double %2761
  %2765 = tail call fast double @llvm.maxnum.f64(double %2680, double %2764)
  store double %2765, ptr %2505, align 8, !tbaa !18
  %2766 = add nuw nsw i32 %2681, 1
  br i1 %2524, label %2767, label %2817

2767:                                             ; preds = %2757
  %2768 = load i32, ptr %4, align 4, !tbaa !5
  %2769 = load i32, ptr %12, align 4, !tbaa !5
  %2770 = add nsw i32 %2769, -1
  %2771 = icmp slt i32 %2768, %2770
  br i1 %2771, label %2794, label %2772

2772:                                             ; preds = %2767
  %2773 = icmp eq i32 %2768, %2770
  br i1 %2773, label %2774, label %2810

2774:                                             ; preds = %2772
  store i32 0, ptr %4, align 4, !tbaa !5
  %2775 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2775, ptr %6, align 4, !tbaa !5
  br i1 %2529, label %2817, label %2776

2776:                                             ; preds = %2774, %2804
  %2777 = phi i64 [ %2808, %2804 ], [ 1, %2774 ]
  %2778 = getelementptr inbounds i32, ptr %4, i64 %2777
  %2779 = load i32, ptr %2778, align 4, !tbaa !5
  %2780 = getelementptr inbounds i32, ptr %12, i64 %2777
  %2781 = load i32, ptr %2780, align 4, !tbaa !5
  %2782 = add nsw i32 %2781, -1
  %2783 = icmp slt i32 %2779, %2782
  br i1 %2783, label %2784, label %2802

2784:                                             ; preds = %2776
  br i1 %2771, label %2794, label %2785

2785:                                             ; preds = %2784
  %2786 = shl i64 %2777, 32
  %2787 = add i64 %2786, -4294967296
  %2788 = ashr exact i64 %2787, 32
  %2789 = getelementptr inbounds i32, ptr %7, i64 %2788
  %2790 = load i32, ptr %2789, align 4, !tbaa !5
  %2791 = getelementptr inbounds i32, ptr %6, i64 %2777
  %2792 = load i32, ptr %2791, align 4, !tbaa !5
  %2793 = add nsw i32 %2792, %2790
  store i32 %2793, ptr %2791, align 4, !tbaa !5
  br label %2812

2794:                                             ; preds = %2767, %2784
  %2795 = phi i32 [ %2779, %2784 ], [ %2768, %2767 ]
  %2796 = phi ptr [ %2778, %2784 ], [ %4, %2767 ]
  %2797 = phi i64 [ %2777, %2784 ], [ 0, %2767 ]
  %2798 = add nsw i32 %2795, 1
  store i32 %2798, ptr %2796, align 4, !tbaa !5
  %2799 = getelementptr inbounds i32, ptr %7, i64 %2797
  %2800 = load i32, ptr %2799, align 4, !tbaa !5
  %2801 = getelementptr inbounds i32, ptr %6, i64 %2797
  br label %2812

2802:                                             ; preds = %2776
  %2803 = icmp eq i32 %2779, %2782
  br i1 %2803, label %2804, label %2810

2804:                                             ; preds = %2802
  store i32 0, ptr %2778, align 4, !tbaa !5
  %2805 = getelementptr inbounds i32, ptr %8, i64 %2777
  %2806 = load i32, ptr %2805, align 4, !tbaa !5
  %2807 = getelementptr inbounds i32, ptr %6, i64 %2777
  store i32 %2806, ptr %2807, align 4, !tbaa !5
  %2808 = add nuw nsw i64 %2777, 1
  %2809 = icmp eq i64 %2808, %2527
  br i1 %2809, label %2817, label %2776, !llvm.loop !572

2810:                                             ; preds = %2772, %2802
  %2811 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2812:                                             ; preds = %2785, %2794
  %2813 = phi ptr [ %2801, %2794 ], [ %2778, %2785 ]
  %2814 = phi i32 [ %2800, %2794 ], [ 1, %2785 ]
  %2815 = load i32, ptr %2813, align 4, !tbaa !5
  %2816 = add nsw i32 %2815, %2814
  store i32 %2816, ptr %2813, align 4, !tbaa !5
  br label %2817

2817:                                             ; preds = %2804, %2812, %2774, %2757
  %2818 = icmp eq i32 %2766, %5
  br i1 %2818, label %3123, label %2679, !llvm.loop !573

2819:                                             ; preds = %2515
  %2820 = getelementptr inbounds i32, ptr %3, i64 %19
  %2821 = load i32, ptr %2820, align 4, !tbaa !5
  %2822 = icmp eq i32 %2821, 0
  %2823 = icmp sgt i32 %5, 0
  br i1 %2822, label %2833, label %2824

2824:                                             ; preds = %2819
  br i1 %2823, label %2825, label %3123

2825:                                             ; preds = %2824
  %2826 = icmp sgt i32 %13, 1
  %2827 = icmp sgt i32 %13, 0
  %2828 = add i32 %13, -2
  %2829 = zext i32 %2828 to i64
  %2830 = zext i32 %13 to i64
  %2831 = add nuw i32 %5, 1
  %2832 = icmp eq i32 %13, 1
  br label %2977

2833:                                             ; preds = %2819
  br i1 %2823, label %2834, label %3123

2834:                                             ; preds = %2833
  %2835 = icmp sgt i32 %13, 1
  %2836 = icmp sgt i32 %13, 0
  %2837 = add i32 %13, -2
  %2838 = zext i32 %2837 to i64
  %2839 = zext i32 %13 to i64
  %2840 = add nuw i32 %5, 1
  %2841 = icmp eq i32 %13, 1
  br label %2842

2842:                                             ; preds = %2834, %2975
  %2843 = phi double [ 0.000000e+00, %2834 ], [ %2925, %2975 ]
  %2844 = phi i32 [ 0, %2834 ], [ %2927, %2975 ]
  %2845 = phi double [ 0.000000e+00, %2834 ], [ %2926, %2975 ]
  %2846 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2835, label %2847, label %2916

2847:                                             ; preds = %2842, %2906
  %2848 = phi i32 [ %2915, %2906 ], [ 0, %2842 ]
  %2849 = phi i64 [ %2857, %2906 ], [ %2839, %2842 ]
  %2850 = phi i64 [ %2914, %2906 ], [ %2838, %2842 ]
  %2851 = phi i32 [ %2912, %2906 ], [ %2846, %2842 ]
  %2852 = sub i32 %2837, %2848
  %2853 = tail call i32 @llvm.smin.i32(i32 %2852, i32 0)
  %2854 = sub i32 %2852, %2853
  %2855 = zext i32 %2854 to i64
  %2856 = add nuw nsw i64 %2855, 1
  %2857 = add nsw i64 %2849, -1
  %2858 = icmp ult i32 %2854, 31
  br i1 %2858, label %2894, label %2859

2859:                                             ; preds = %2847
  %2860 = and i64 %2856, 8589934560
  %2861 = sub i64 %2850, %2860
  br label %2862

2862:                                             ; preds = %2862, %2859
  %2863 = phi i64 [ 0, %2859 ], [ %2886, %2862 ]
  %2864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2882, %2862 ]
  %2865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2883, %2862 ]
  %2866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2884, %2862 ]
  %2867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2885, %2862 ]
  %2868 = sub i64 %2850, %2863
  %2869 = getelementptr inbounds i32, ptr %9, i64 %2868
  %2870 = getelementptr inbounds i32, ptr %2869, i64 -7
  %2871 = load <8 x i32>, ptr %2870, align 4, !tbaa !5
  %2872 = shufflevector <8 x i32> %2871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2873 = getelementptr inbounds i32, ptr %2869, i64 -15
  %2874 = load <8 x i32>, ptr %2873, align 4, !tbaa !5
  %2875 = shufflevector <8 x i32> %2874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2876 = getelementptr inbounds i32, ptr %2869, i64 -23
  %2877 = load <8 x i32>, ptr %2876, align 4, !tbaa !5
  %2878 = shufflevector <8 x i32> %2877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2879 = getelementptr inbounds i32, ptr %2869, i64 -31
  %2880 = load <8 x i32>, ptr %2879, align 4, !tbaa !5
  %2881 = shufflevector <8 x i32> %2880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2882 = mul <8 x i32> %2872, %2864
  %2883 = mul <8 x i32> %2875, %2865
  %2884 = mul <8 x i32> %2878, %2866
  %2885 = mul <8 x i32> %2881, %2867
  %2886 = add nuw i64 %2863, 32
  %2887 = icmp eq i64 %2886, %2860
  br i1 %2887, label %2888, label %2862, !llvm.loop !574

2888:                                             ; preds = %2862
  %2889 = mul <8 x i32> %2883, %2882
  %2890 = mul <8 x i32> %2884, %2889
  %2891 = mul <8 x i32> %2885, %2890
  %2892 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2891)
  %2893 = icmp eq i64 %2856, %2860
  br i1 %2893, label %2906, label %2894

2894:                                             ; preds = %2847, %2888
  %2895 = phi i64 [ %2850, %2847 ], [ %2861, %2888 ]
  %2896 = phi i32 [ 1, %2847 ], [ %2892, %2888 ]
  br label %2897

2897:                                             ; preds = %2894, %2897
  %2898 = phi i64 [ %2903, %2897 ], [ %2895, %2894 ]
  %2899 = phi i32 [ %2902, %2897 ], [ %2896, %2894 ]
  %2900 = getelementptr inbounds i32, ptr %9, i64 %2898
  %2901 = load i32, ptr %2900, align 4, !tbaa !5
  %2902 = mul nsw i32 %2901, %2899
  %2903 = add nsw i64 %2898, -1
  %2904 = trunc i64 %2898 to i32
  %2905 = icmp sgt i32 %2904, 0
  br i1 %2905, label %2897, label %2906, !llvm.loop !575

2906:                                             ; preds = %2897, %2888
  %2907 = phi i32 [ %2892, %2888 ], [ %2902, %2897 ]
  %2908 = and i64 %2857, 4294967295
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2908
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = mul nsw i32 %2910, %2907
  %2912 = add nsw i32 %2911, %2851
  %2913 = icmp sgt i64 %2849, 2
  %2914 = add nsw i64 %2850, -1
  %2915 = add i32 %2848, 1
  br i1 %2913, label %2847, label %2916, !llvm.loop !576

2916:                                             ; preds = %2906, %2842
  %2917 = phi i32 [ %2846, %2842 ], [ %2912, %2906 ]
  %2918 = sext i32 %2917 to i64
  %2919 = getelementptr inbounds i16, ptr %2503, i64 %2918
  %2920 = load i16, ptr %2919, align 2, !tbaa !78
  %2921 = sitofp i16 %2920 to double
  %2922 = icmp slt i16 %2920, 0
  %2923 = fneg fast double %2921
  %2924 = select fast i1 %2922, double %2923, double %2921
  %2925 = tail call fast double @llvm.maxnum.f64(double %2843, double %2924)
  %2926 = fadd fast double %2845, 1.000000e+00
  %2927 = add nuw nsw i32 %2844, 1
  br i1 %2836, label %2928, label %2975

2928:                                             ; preds = %2916
  %2929 = load i32, ptr %4, align 4, !tbaa !5
  %2930 = load i32, ptr %12, align 4, !tbaa !5
  %2931 = add nsw i32 %2930, -1
  %2932 = icmp slt i32 %2929, %2931
  br i1 %2932, label %2952, label %2933

2933:                                             ; preds = %2928
  %2934 = icmp eq i32 %2929, %2931
  br i1 %2934, label %2935, label %2968

2935:                                             ; preds = %2933
  store i32 0, ptr %4, align 4, !tbaa !5
  %2936 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2936, ptr %6, align 4, !tbaa !5
  br i1 %2841, label %2975, label %2937

2937:                                             ; preds = %2935, %2962
  %2938 = phi i64 [ %2966, %2962 ], [ 1, %2935 ]
  %2939 = getelementptr inbounds i32, ptr %4, i64 %2938
  %2940 = load i32, ptr %2939, align 4, !tbaa !5
  %2941 = getelementptr inbounds i32, ptr %12, i64 %2938
  %2942 = load i32, ptr %2941, align 4, !tbaa !5
  %2943 = add nsw i32 %2942, -1
  %2944 = icmp slt i32 %2940, %2943
  br i1 %2944, label %2945, label %2960

2945:                                             ; preds = %2937
  br i1 %2932, label %2952, label %2946

2946:                                             ; preds = %2945
  %2947 = getelementptr inbounds i32, ptr %7, i64 %2938
  %2948 = load i32, ptr %2947, align 4, !tbaa !5
  %2949 = getelementptr inbounds i32, ptr %6, i64 %2938
  %2950 = load i32, ptr %2949, align 4, !tbaa !5
  %2951 = add nsw i32 %2950, %2948
  store i32 %2951, ptr %2949, align 4, !tbaa !5
  br label %2970

2952:                                             ; preds = %2928, %2945
  %2953 = phi i32 [ %2940, %2945 ], [ %2929, %2928 ]
  %2954 = phi ptr [ %2939, %2945 ], [ %4, %2928 ]
  %2955 = phi i64 [ %2938, %2945 ], [ 0, %2928 ]
  %2956 = add nsw i32 %2953, 1
  store i32 %2956, ptr %2954, align 4, !tbaa !5
  %2957 = getelementptr inbounds i32, ptr %7, i64 %2955
  %2958 = load i32, ptr %2957, align 4, !tbaa !5
  %2959 = getelementptr inbounds i32, ptr %6, i64 %2955
  br label %2970

2960:                                             ; preds = %2937
  %2961 = icmp eq i32 %2940, %2943
  br i1 %2961, label %2962, label %2968

2962:                                             ; preds = %2960
  store i32 0, ptr %2939, align 4, !tbaa !5
  %2963 = getelementptr inbounds i32, ptr %8, i64 %2938
  %2964 = load i32, ptr %2963, align 4, !tbaa !5
  %2965 = getelementptr inbounds i32, ptr %6, i64 %2938
  store i32 %2964, ptr %2965, align 4, !tbaa !5
  %2966 = add nuw nsw i64 %2938, 1
  %2967 = icmp eq i64 %2966, %2839
  br i1 %2967, label %2975, label %2937, !llvm.loop !577

2968:                                             ; preds = %2933, %2960
  store double %2925, ptr %2505, align 8, !tbaa !18
  %2969 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

2970:                                             ; preds = %2946, %2952
  %2971 = phi ptr [ %2959, %2952 ], [ %2939, %2946 ]
  %2972 = phi i32 [ %2958, %2952 ], [ 1, %2946 ]
  %2973 = load i32, ptr %2971, align 4, !tbaa !5
  %2974 = add nsw i32 %2973, %2972
  store i32 %2974, ptr %2971, align 4, !tbaa !5
  br label %2975

2975:                                             ; preds = %2962, %2970, %2935, %2916
  %2976 = icmp eq i32 %2927, %5
  br i1 %2976, label %3122, label %2842, !llvm.loop !578

2977:                                             ; preds = %2825, %3115
  %2978 = phi double [ 0.000000e+00, %2825 ], [ %3063, %3115 ]
  %2979 = phi i32 [ 0, %2825 ], [ %3064, %3115 ]
  %2980 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2826, label %2981, label %3050

2981:                                             ; preds = %2977, %3040
  %2982 = phi i32 [ %3049, %3040 ], [ 0, %2977 ]
  %2983 = phi i64 [ %2991, %3040 ], [ %2830, %2977 ]
  %2984 = phi i64 [ %3048, %3040 ], [ %2829, %2977 ]
  %2985 = phi i32 [ %3046, %3040 ], [ %2980, %2977 ]
  %2986 = sub i32 %2828, %2982
  %2987 = tail call i32 @llvm.smin.i32(i32 %2986, i32 0)
  %2988 = sub i32 %2986, %2987
  %2989 = zext i32 %2988 to i64
  %2990 = add nuw nsw i64 %2989, 1
  %2991 = add nsw i64 %2983, -1
  %2992 = icmp ult i32 %2988, 31
  br i1 %2992, label %3028, label %2993

2993:                                             ; preds = %2981
  %2994 = and i64 %2990, 8589934560
  %2995 = sub i64 %2984, %2994
  br label %2996

2996:                                             ; preds = %2996, %2993
  %2997 = phi i64 [ 0, %2993 ], [ %3020, %2996 ]
  %2998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2993 ], [ %3016, %2996 ]
  %2999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2993 ], [ %3017, %2996 ]
  %3000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2993 ], [ %3018, %2996 ]
  %3001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2993 ], [ %3019, %2996 ]
  %3002 = sub i64 %2984, %2997
  %3003 = getelementptr inbounds i32, ptr %11, i64 %3002
  %3004 = getelementptr inbounds i32, ptr %3003, i64 -7
  %3005 = load <8 x i32>, ptr %3004, align 4, !tbaa !5
  %3006 = shufflevector <8 x i32> %3005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3007 = getelementptr inbounds i32, ptr %3003, i64 -15
  %3008 = load <8 x i32>, ptr %3007, align 4, !tbaa !5
  %3009 = shufflevector <8 x i32> %3008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3010 = getelementptr inbounds i32, ptr %3003, i64 -23
  %3011 = load <8 x i32>, ptr %3010, align 4, !tbaa !5
  %3012 = shufflevector <8 x i32> %3011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3013 = getelementptr inbounds i32, ptr %3003, i64 -31
  %3014 = load <8 x i32>, ptr %3013, align 4, !tbaa !5
  %3015 = shufflevector <8 x i32> %3014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3016 = mul <8 x i32> %3006, %2998
  %3017 = mul <8 x i32> %3009, %2999
  %3018 = mul <8 x i32> %3012, %3000
  %3019 = mul <8 x i32> %3015, %3001
  %3020 = add nuw i64 %2997, 32
  %3021 = icmp eq i64 %3020, %2994
  br i1 %3021, label %3022, label %2996, !llvm.loop !579

3022:                                             ; preds = %2996
  %3023 = mul <8 x i32> %3017, %3016
  %3024 = mul <8 x i32> %3018, %3023
  %3025 = mul <8 x i32> %3019, %3024
  %3026 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3025)
  %3027 = icmp eq i64 %2990, %2994
  br i1 %3027, label %3040, label %3028

3028:                                             ; preds = %2981, %3022
  %3029 = phi i64 [ %2984, %2981 ], [ %2995, %3022 ]
  %3030 = phi i32 [ 1, %2981 ], [ %3026, %3022 ]
  br label %3031

3031:                                             ; preds = %3028, %3031
  %3032 = phi i64 [ %3037, %3031 ], [ %3029, %3028 ]
  %3033 = phi i32 [ %3036, %3031 ], [ %3030, %3028 ]
  %3034 = getelementptr inbounds i32, ptr %11, i64 %3032
  %3035 = load i32, ptr %3034, align 4, !tbaa !5
  %3036 = mul nsw i32 %3035, %3033
  %3037 = add nsw i64 %3032, -1
  %3038 = trunc i64 %3032 to i32
  %3039 = icmp sgt i32 %3038, 0
  br i1 %3039, label %3031, label %3040, !llvm.loop !580

3040:                                             ; preds = %3031, %3022
  %3041 = phi i32 [ %3026, %3022 ], [ %3036, %3031 ]
  %3042 = and i64 %2991, 4294967295
  %3043 = getelementptr inbounds i32, ptr %6, i64 %3042
  %3044 = load i32, ptr %3043, align 4, !tbaa !5
  %3045 = mul nsw i32 %3044, %3041
  %3046 = add nsw i32 %3045, %2985
  %3047 = icmp sgt i64 %2983, 2
  %3048 = add nsw i64 %2984, -1
  %3049 = add i32 %2982, 1
  br i1 %3047, label %2981, label %3050, !llvm.loop !581

3050:                                             ; preds = %3040, %2977
  %3051 = phi i32 [ %2980, %2977 ], [ %3046, %3040 ]
  %3052 = icmp slt i32 %3051, %5
  br i1 %3052, label %3055, label %3053

3053:                                             ; preds = %3050
  %3054 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3128

3055:                                             ; preds = %3050
  %3056 = sext i32 %3051 to i64
  %3057 = getelementptr inbounds i16, ptr %2503, i64 %3056
  %3058 = load i16, ptr %3057, align 2, !tbaa !78
  %3059 = sitofp i16 %3058 to double
  %3060 = icmp slt i16 %3058, 0
  %3061 = fneg fast double %3059
  %3062 = select fast i1 %3060, double %3061, double %3059
  %3063 = tail call fast double @llvm.maxnum.f64(double %2978, double %3062)
  store double %3063, ptr %2505, align 8, !tbaa !18
  %3064 = add nuw nsw i32 %2979, 1
  br i1 %2827, label %3065, label %3115

3065:                                             ; preds = %3055
  %3066 = load i32, ptr %4, align 4, !tbaa !5
  %3067 = load i32, ptr %12, align 4, !tbaa !5
  %3068 = add nsw i32 %3067, -1
  %3069 = icmp slt i32 %3066, %3068
  br i1 %3069, label %3092, label %3070

3070:                                             ; preds = %3065
  %3071 = icmp eq i32 %3066, %3068
  br i1 %3071, label %3072, label %3108

3072:                                             ; preds = %3070
  store i32 0, ptr %4, align 4, !tbaa !5
  %3073 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3073, ptr %6, align 4, !tbaa !5
  br i1 %2832, label %3115, label %3074

3074:                                             ; preds = %3072, %3102
  %3075 = phi i64 [ %3106, %3102 ], [ 1, %3072 ]
  %3076 = getelementptr inbounds i32, ptr %4, i64 %3075
  %3077 = load i32, ptr %3076, align 4, !tbaa !5
  %3078 = getelementptr inbounds i32, ptr %12, i64 %3075
  %3079 = load i32, ptr %3078, align 4, !tbaa !5
  %3080 = add nsw i32 %3079, -1
  %3081 = icmp slt i32 %3077, %3080
  br i1 %3081, label %3082, label %3100

3082:                                             ; preds = %3074
  br i1 %3069, label %3092, label %3083

3083:                                             ; preds = %3082
  %3084 = shl i64 %3075, 32
  %3085 = add i64 %3084, -4294967296
  %3086 = ashr exact i64 %3085, 32
  %3087 = getelementptr inbounds i32, ptr %7, i64 %3086
  %3088 = load i32, ptr %3087, align 4, !tbaa !5
  %3089 = getelementptr inbounds i32, ptr %6, i64 %3075
  %3090 = load i32, ptr %3089, align 4, !tbaa !5
  %3091 = add nsw i32 %3090, %3088
  store i32 %3091, ptr %3089, align 4, !tbaa !5
  br label %3110

3092:                                             ; preds = %3065, %3082
  %3093 = phi i32 [ %3077, %3082 ], [ %3066, %3065 ]
  %3094 = phi ptr [ %3076, %3082 ], [ %4, %3065 ]
  %3095 = phi i64 [ %3075, %3082 ], [ 0, %3065 ]
  %3096 = add nsw i32 %3093, 1
  store i32 %3096, ptr %3094, align 4, !tbaa !5
  %3097 = getelementptr inbounds i32, ptr %7, i64 %3095
  %3098 = load i32, ptr %3097, align 4, !tbaa !5
  %3099 = getelementptr inbounds i32, ptr %6, i64 %3095
  br label %3110

3100:                                             ; preds = %3074
  %3101 = icmp eq i32 %3077, %3080
  br i1 %3101, label %3102, label %3108

3102:                                             ; preds = %3100
  store i32 0, ptr %3076, align 4, !tbaa !5
  %3103 = getelementptr inbounds i32, ptr %8, i64 %3075
  %3104 = load i32, ptr %3103, align 4, !tbaa !5
  %3105 = getelementptr inbounds i32, ptr %6, i64 %3075
  store i32 %3104, ptr %3105, align 4, !tbaa !5
  %3106 = add nuw nsw i64 %3075, 1
  %3107 = icmp eq i64 %3106, %2830
  br i1 %3107, label %3115, label %3074, !llvm.loop !582

3108:                                             ; preds = %3070, %3100
  %3109 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3128

3110:                                             ; preds = %3083, %3092
  %3111 = phi ptr [ %3099, %3092 ], [ %3076, %3083 ]
  %3112 = phi i32 [ %3098, %3092 ], [ 1, %3083 ]
  %3113 = load i32, ptr %3111, align 4, !tbaa !5
  %3114 = add nsw i32 %3113, %3112
  store i32 %3114, ptr %3111, align 4, !tbaa !5
  br label %3115

3115:                                             ; preds = %3102, %3110, %3072, %3055
  %3116 = icmp eq i32 %3064, %5
  br i1 %3116, label %3123, label %2977, !llvm.loop !583

3117:                                             ; preds = %2515
  %3118 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3123

3119:                                             ; preds = %1734
  store double %1684, ptr %1264, align 8, !tbaa !18
  br label %3123

3120:                                             ; preds = %2056
  store float %2006, ptr %1882, align 4, !tbaa !162
  br label %3123

3121:                                             ; preds = %2357
  store float %2307, ptr %1882, align 4, !tbaa !162
  br label %3123

3122:                                             ; preds = %2975
  store double %2925, ptr %2505, align 8, !tbaa !18
  br label %3123

3123:                                             ; preds = %3115, %2817, %2677, %2497, %2199, %1874, %1576, %1436, %1256, %1118, %962, %819, %637, %497, %339, %199, %2824, %2833, %3122, %2521, %2530, %2206, %2215, %3121, %1898, %1907, %3120, %1583, %1592, %3119, %1280, %1289, %969, %978, %661, %670, %346, %355, %40, %49, %2507, %3117, %1884, %2499, %1266, %1876, %653, %1258, %28, %639, %18
  %3124 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1258 ], [ 0.000000e+00, %653 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %1266 ], [ 0.000000e+00, %2499 ], [ 0.000000e+00, %1884 ], [ 0.000000e+00, %3117 ], [ 0.000000e+00, %2507 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %40 ], [ 0.000000e+00, %355 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %670 ], [ 0.000000e+00, %661 ], [ 0.000000e+00, %978 ], [ 0.000000e+00, %969 ], [ 0.000000e+00, %1289 ], [ 0.000000e+00, %1280 ], [ %1685, %3119 ], [ 0.000000e+00, %1592 ], [ 0.000000e+00, %1583 ], [ %2007, %3120 ], [ 0.000000e+00, %1907 ], [ 0.000000e+00, %1898 ], [ %2308, %3121 ], [ 0.000000e+00, %2215 ], [ 0.000000e+00, %2206 ], [ 0.000000e+00, %2530 ], [ 0.000000e+00, %2521 ], [ %2926, %3122 ], [ 0.000000e+00, %2833 ], [ 0.000000e+00, %2824 ], [ %150, %199 ], [ 0.000000e+00, %339 ], [ %448, %497 ], [ 0.000000e+00, %637 ], [ %770, %819 ], [ 0.000000e+00, %962 ], [ %1069, %1118 ], [ 0.000000e+00, %1256 ], [ %1387, %1436 ], [ 0.000000e+00, %1576 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %2199 ], [ 0.000000e+00, %2497 ], [ %2628, %2677 ], [ 0.000000e+00, %2817 ], [ 0.000000e+00, %3115 ]
  %3125 = phi i32 [ %10, %18 ], [ 1, %639 ], [ 1, %28 ], [ 1, %1258 ], [ 1, %653 ], [ 1, %1876 ], [ 1, %1266 ], [ 1, %2499 ], [ 1, %1884 ], [ 1, %3117 ], [ 1, %2507 ], [ 1, %49 ], [ 1, %40 ], [ 1, %355 ], [ 1, %346 ], [ 1, %670 ], [ 1, %661 ], [ 1, %978 ], [ 1, %969 ], [ 1, %1289 ], [ 1, %1280 ], [ %1599, %3119 ], [ 1, %1592 ], [ 1, %1583 ], [ %1914, %3120 ], [ 1, %1907 ], [ 1, %1898 ], [ %2222, %3121 ], [ 1, %2215 ], [ 1, %2206 ], [ 1, %2530 ], [ 1, %2521 ], [ %2840, %3122 ], [ 1, %2833 ], [ 1, %2824 ], [ %56, %199 ], [ %47, %339 ], [ %362, %497 ], [ %353, %637 ], [ %677, %819 ], [ %668, %962 ], [ %985, %1118 ], [ %976, %1256 ], [ %1296, %1436 ], [ %1287, %1576 ], [ %1590, %1874 ], [ %1905, %2199 ], [ %2213, %2497 ], [ %2537, %2677 ], [ %2528, %2817 ], [ %2831, %3115 ]
  %3126 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3125, ptr noundef nonnull @.str.5) #3
  %3127 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3124, ptr noundef nonnull @.str.6) #3
  br label %3128

3128:                                             ; preds = %2670, %2755, %2810, %2968, %3053, %3108, %2049, %2134, %2192, %2350, %2435, %2490, %1429, %1514, %1569, %1727, %1812, %1867, %812, %896, %955, %1111, %1195, %1249, %192, %276, %332, %490, %574, %630, %3123
  %3129 = phi i32 [ 0, %3123 ], [ -1, %630 ], [ -1, %574 ], [ -1, %490 ], [ -1, %332 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1249 ], [ -1, %1195 ], [ -1, %1111 ], [ -1, %955 ], [ -1, %896 ], [ -1, %812 ], [ -1, %1867 ], [ -1, %1812 ], [ -1, %1727 ], [ -1, %1569 ], [ -1, %1514 ], [ -1, %1429 ], [ -1, %2490 ], [ -1, %2435 ], [ -1, %2350 ], [ -1, %2192 ], [ -1, %2134 ], [ -1, %2049 ], [ -1, %3108 ], [ -1, %3053 ], [ -1, %2968 ], [ -1, %2810 ], [ -1, %2755 ], [ -1, %2670 ]
  ret i32 %3129
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5630 [
    i32 101, label %22
    i32 102, label %639
    i32 103, label %1253
    i32 104, label %1891
    i32 105, label %2531
    i32 106, label %3145
    i32 107, label %3760
    i32 108, label %4378
    i32 109, label %5003
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = and i32 %29, 255
  %31 = icmp eq i32 %30, 0
  %32 = trunc i32 %29 to i8
  %33 = select i1 %31, i8 0, i8 %32
  store i8 %33, ptr %26, align 1, !tbaa !11
  br label %5630

34:                                               ; preds = %22
  switch i32 %1, label %637 [
    i32 1, label %35
    i32 0, label %341
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds i32, ptr %3, i64 %19
  %37 = load i32, ptr %36, align 4, !tbaa !5
  %38 = icmp eq i32 %37, 0
  %39 = icmp sgt i32 %5, 0
  br i1 %38, label %49, label %40

40:                                               ; preds = %35
  br i1 %39, label %41, label %5630

41:                                               ; preds = %40
  %42 = icmp sgt i32 %13, 1
  %43 = icmp sgt i32 %13, 0
  %44 = add i32 %13, -2
  %45 = zext i32 %44 to i64
  %46 = zext i32 %13 to i64
  %47 = add nuw i32 %5, 1
  %48 = icmp eq i32 %13, 1
  br label %201

49:                                               ; preds = %35
  br i1 %39, label %50, label %5630

50:                                               ; preds = %49
  %51 = icmp sgt i32 %13, 1
  %52 = icmp sgt i32 %13, 0
  %53 = add i32 %13, -2
  %54 = zext i32 %53 to i64
  %55 = zext i32 %13 to i64
  %56 = add nuw i32 %5, 1
  %57 = icmp eq i32 %13, 1
  br label %58

58:                                               ; preds = %50, %199
  %59 = phi i32 [ 0, %50 ], [ %151, %199 ]
  %60 = phi double [ 0.000000e+00, %50 ], [ %150, %199 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %51, label %62, label %131

62:                                               ; preds = %58, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %58 ]
  %64 = phi i64 [ %72, %121 ], [ %55, %58 ]
  %65 = phi i64 [ %129, %121 ], [ %54, %58 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %58 ]
  %67 = sub i32 %53, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !584

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !585

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !586

131:                                              ; preds = %121, %58
  %132 = phi i32 [ %61, %58 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds i32, ptr %24, i64 %133
  %137 = load i32, ptr %136, align 4, !tbaa !5
  %138 = load i8, ptr %26, align 1, !tbaa !11
  %139 = uitofp i8 %138 to double
  %140 = and i32 %137, 255
  %141 = sitofp i32 %140 to double
  %142 = fmul fast double %135, %141
  %143 = fcmp fast uge double %142, 0.000000e+00
  %144 = fneg fast double %142
  %145 = tail call fast double @llvm.fabs.f64(double %142)
  %146 = fcmp fast ole double %145, %139
  %147 = select nnan ninf i1 %143, double %142, double %144
  %148 = select i1 %146, double %139, double %147
  %149 = fptoui double %148 to i8
  store i8 %149, ptr %26, align 1, !tbaa !11
  %150 = fadd fast double %135, %60
  %151 = add nuw nsw i32 %59, 1
  br i1 %52, label %152, label %199

152:                                              ; preds = %131
  %153 = load i32, ptr %4, align 4, !tbaa !5
  %154 = load i32, ptr %12, align 4, !tbaa !5
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !5
  %160 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %160, ptr %6, align 4, !tbaa !5
  br i1 %57, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !5
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !5
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !5
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !5
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !5
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !5
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !5
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !5
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %55
  br i1 %191, label %199, label %161, !llvm.loop !587

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !5
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !5
  br label %199

199:                                              ; preds = %186, %194, %159, %131
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %5630, label %58, !llvm.loop !588

201:                                              ; preds = %41, %339
  %202 = phi i32 [ 0, %41 ], [ %288, %339 ]
  %203 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %42, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %46, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %45, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %44, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !5
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !5
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !589

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !590

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !5
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !591

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

278:                                              ; preds = %273
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds i32, ptr %24, i64 %279
  %281 = load i32, ptr %280, align 4, !tbaa !5
  %282 = load i8, ptr %26, align 1, !tbaa !11
  %283 = uitofp i8 %282 to double
  %284 = and i32 %281, 255
  %285 = sitofp i32 %284 to double
  %286 = tail call fast double @llvm.maxnum.f64(double %283, double %285)
  %287 = fptoui double %286 to i8
  store i8 %287, ptr %26, align 1, !tbaa !11
  %288 = add nuw nsw i32 %202, 1
  br i1 %43, label %289, label %339

289:                                              ; preds = %278
  %290 = load i32, ptr %4, align 4, !tbaa !5
  %291 = load i32, ptr %12, align 4, !tbaa !5
  %292 = add nsw i32 %291, -1
  %293 = icmp slt i32 %290, %292
  br i1 %293, label %316, label %294

294:                                              ; preds = %289
  %295 = icmp eq i32 %290, %292
  br i1 %295, label %296, label %332

296:                                              ; preds = %294
  store i32 0, ptr %4, align 4, !tbaa !5
  %297 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %297, ptr %6, align 4, !tbaa !5
  br i1 %48, label %339, label %298

298:                                              ; preds = %296, %326
  %299 = phi i64 [ %330, %326 ], [ 1, %296 ]
  %300 = getelementptr inbounds i32, ptr %4, i64 %299
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = getelementptr inbounds i32, ptr %12, i64 %299
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = add nsw i32 %303, -1
  %305 = icmp slt i32 %301, %304
  br i1 %305, label %306, label %324

306:                                              ; preds = %298
  br i1 %293, label %316, label %307

307:                                              ; preds = %306
  %308 = shl i64 %299, 32
  %309 = add i64 %308, -4294967296
  %310 = ashr exact i64 %309, 32
  %311 = getelementptr inbounds i32, ptr %7, i64 %310
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %299
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = add nsw i32 %314, %312
  store i32 %315, ptr %313, align 4, !tbaa !5
  br label %334

316:                                              ; preds = %289, %306
  %317 = phi i32 [ %301, %306 ], [ %290, %289 ]
  %318 = phi ptr [ %300, %306 ], [ %4, %289 ]
  %319 = phi i64 [ %299, %306 ], [ 0, %289 ]
  %320 = add nsw i32 %317, 1
  store i32 %320, ptr %318, align 4, !tbaa !5
  %321 = getelementptr inbounds i32, ptr %7, i64 %319
  %322 = load i32, ptr %321, align 4, !tbaa !5
  %323 = getelementptr inbounds i32, ptr %6, i64 %319
  br label %334

324:                                              ; preds = %298
  %325 = icmp eq i32 %301, %304
  br i1 %325, label %326, label %332

326:                                              ; preds = %324
  store i32 0, ptr %300, align 4, !tbaa !5
  %327 = getelementptr inbounds i32, ptr %8, i64 %299
  %328 = load i32, ptr %327, align 4, !tbaa !5
  %329 = getelementptr inbounds i32, ptr %6, i64 %299
  store i32 %328, ptr %329, align 4, !tbaa !5
  %330 = add nuw nsw i64 %299, 1
  %331 = icmp eq i64 %330, %46
  br i1 %331, label %339, label %298, !llvm.loop !592

332:                                              ; preds = %294, %324
  %333 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

334:                                              ; preds = %307, %316
  %335 = phi ptr [ %323, %316 ], [ %300, %307 ]
  %336 = phi i32 [ %322, %316 ], [ 1, %307 ]
  %337 = load i32, ptr %335, align 4, !tbaa !5
  %338 = add nsw i32 %337, %336
  store i32 %338, ptr %335, align 4, !tbaa !5
  br label %339

339:                                              ; preds = %326, %334, %296, %278
  %340 = icmp eq i32 %288, %5
  br i1 %340, label %5630, label %201, !llvm.loop !593

341:                                              ; preds = %34
  %342 = getelementptr inbounds i32, ptr %3, i64 %19
  %343 = load i32, ptr %342, align 4, !tbaa !5
  %344 = icmp eq i32 %343, 0
  %345 = icmp sgt i32 %5, 0
  br i1 %344, label %355, label %346

346:                                              ; preds = %341
  br i1 %345, label %347, label %5630

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %498

355:                                              ; preds = %341
  br i1 %345, label %356, label %5630

356:                                              ; preds = %355
  %357 = icmp sgt i32 %13, 1
  %358 = icmp sgt i32 %13, 0
  %359 = add i32 %13, -2
  %360 = zext i32 %359 to i64
  %361 = zext i32 %13 to i64
  %362 = add nuw i32 %5, 1
  %363 = icmp eq i32 %13, 1
  br label %364

364:                                              ; preds = %356, %496
  %365 = phi i32 [ 0, %356 ], [ %448, %496 ]
  %366 = phi double [ 0.000000e+00, %356 ], [ %447, %496 ]
  %367 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %357, label %368, label %437

368:                                              ; preds = %364, %427
  %369 = phi i32 [ %436, %427 ], [ 0, %364 ]
  %370 = phi i64 [ %378, %427 ], [ %361, %364 ]
  %371 = phi i64 [ %435, %427 ], [ %360, %364 ]
  %372 = phi i32 [ %433, %427 ], [ %367, %364 ]
  %373 = sub i32 %359, %369
  %374 = tail call i32 @llvm.smin.i32(i32 %373, i32 0)
  %375 = sub i32 %373, %374
  %376 = zext i32 %375 to i64
  %377 = add nuw nsw i64 %376, 1
  %378 = add nsw i64 %370, -1
  %379 = icmp ult i32 %375, 31
  br i1 %379, label %415, label %380

380:                                              ; preds = %368
  %381 = and i64 %377, 8589934560
  %382 = sub i64 %371, %381
  br label %383

383:                                              ; preds = %383, %380
  %384 = phi i64 [ 0, %380 ], [ %407, %383 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %403, %383 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %404, %383 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %405, %383 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %380 ], [ %406, %383 ]
  %389 = sub i64 %371, %384
  %390 = getelementptr inbounds i32, ptr %9, i64 %389
  %391 = getelementptr inbounds i32, ptr %390, i64 -7
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %390, i64 -15
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %390, i64 -23
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = getelementptr inbounds i32, ptr %390, i64 -31
  %401 = load <8 x i32>, ptr %400, align 4, !tbaa !5
  %402 = shufflevector <8 x i32> %401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %403 = mul <8 x i32> %393, %385
  %404 = mul <8 x i32> %396, %386
  %405 = mul <8 x i32> %399, %387
  %406 = mul <8 x i32> %402, %388
  %407 = add nuw i64 %384, 32
  %408 = icmp eq i64 %407, %381
  br i1 %408, label %409, label %383, !llvm.loop !594

409:                                              ; preds = %383
  %410 = mul <8 x i32> %404, %403
  %411 = mul <8 x i32> %405, %410
  %412 = mul <8 x i32> %406, %411
  %413 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %412)
  %414 = icmp eq i64 %377, %381
  br i1 %414, label %427, label %415

415:                                              ; preds = %368, %409
  %416 = phi i64 [ %371, %368 ], [ %382, %409 ]
  %417 = phi i32 [ 1, %368 ], [ %413, %409 ]
  br label %418

418:                                              ; preds = %415, %418
  %419 = phi i64 [ %424, %418 ], [ %416, %415 ]
  %420 = phi i32 [ %423, %418 ], [ %417, %415 ]
  %421 = getelementptr inbounds i32, ptr %9, i64 %419
  %422 = load i32, ptr %421, align 4, !tbaa !5
  %423 = mul nsw i32 %422, %420
  %424 = add nsw i64 %419, -1
  %425 = trunc i64 %419 to i32
  %426 = icmp sgt i32 %425, 0
  br i1 %426, label %418, label %427, !llvm.loop !595

427:                                              ; preds = %418, %409
  %428 = phi i32 [ %413, %409 ], [ %423, %418 ]
  %429 = and i64 %378, 4294967295
  %430 = getelementptr inbounds i32, ptr %6, i64 %429
  %431 = load i32, ptr %430, align 4, !tbaa !5
  %432 = mul nsw i32 %431, %428
  %433 = add nsw i32 %432, %372
  %434 = icmp sgt i64 %370, 2
  %435 = add nsw i64 %371, -1
  %436 = add i32 %369, 1
  br i1 %434, label %368, label %437, !llvm.loop !596

437:                                              ; preds = %427, %364
  %438 = phi i32 [ %367, %364 ], [ %433, %427 ]
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i32, ptr %24, i64 %439
  %441 = load i32, ptr %440, align 4, !tbaa !5
  %442 = load i8, ptr %26, align 1, !tbaa !11
  %443 = zext i8 %442 to i32
  %444 = and i32 %441, 255
  %445 = tail call i32 @llvm.umax.i32(i32 %444, i32 %443)
  %446 = trunc i32 %445 to i8
  store i8 %446, ptr %26, align 1, !tbaa !11
  %447 = fadd fast double %366, 1.000000e+00
  %448 = add nuw nsw i32 %365, 1
  br i1 %358, label %449, label %496

449:                                              ; preds = %437
  %450 = load i32, ptr %4, align 4, !tbaa !5
  %451 = load i32, ptr %12, align 4, !tbaa !5
  %452 = add nsw i32 %451, -1
  %453 = icmp slt i32 %450, %452
  br i1 %453, label %473, label %454

454:                                              ; preds = %449
  %455 = icmp eq i32 %450, %452
  br i1 %455, label %456, label %489

456:                                              ; preds = %454
  store i32 0, ptr %4, align 4, !tbaa !5
  %457 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %457, ptr %6, align 4, !tbaa !5
  br i1 %363, label %496, label %458

458:                                              ; preds = %456, %483
  %459 = phi i64 [ %487, %483 ], [ 1, %456 ]
  %460 = getelementptr inbounds i32, ptr %4, i64 %459
  %461 = load i32, ptr %460, align 4, !tbaa !5
  %462 = getelementptr inbounds i32, ptr %12, i64 %459
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = add nsw i32 %463, -1
  %465 = icmp slt i32 %461, %464
  br i1 %465, label %466, label %481

466:                                              ; preds = %458
  br i1 %453, label %473, label %467

467:                                              ; preds = %466
  %468 = getelementptr inbounds i32, ptr %7, i64 %459
  %469 = load i32, ptr %468, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %6, i64 %459
  %471 = load i32, ptr %470, align 4, !tbaa !5
  %472 = add nsw i32 %471, %469
  store i32 %472, ptr %470, align 4, !tbaa !5
  br label %491

473:                                              ; preds = %449, %466
  %474 = phi i32 [ %461, %466 ], [ %450, %449 ]
  %475 = phi ptr [ %460, %466 ], [ %4, %449 ]
  %476 = phi i64 [ %459, %466 ], [ 0, %449 ]
  %477 = add nsw i32 %474, 1
  store i32 %477, ptr %475, align 4, !tbaa !5
  %478 = getelementptr inbounds i32, ptr %7, i64 %476
  %479 = load i32, ptr %478, align 4, !tbaa !5
  %480 = getelementptr inbounds i32, ptr %6, i64 %476
  br label %491

481:                                              ; preds = %458
  %482 = icmp eq i32 %461, %464
  br i1 %482, label %483, label %489

483:                                              ; preds = %481
  store i32 0, ptr %460, align 4, !tbaa !5
  %484 = getelementptr inbounds i32, ptr %8, i64 %459
  %485 = load i32, ptr %484, align 4, !tbaa !5
  %486 = getelementptr inbounds i32, ptr %6, i64 %459
  store i32 %485, ptr %486, align 4, !tbaa !5
  %487 = add nuw nsw i64 %459, 1
  %488 = icmp eq i64 %487, %361
  br i1 %488, label %496, label %458, !llvm.loop !597

489:                                              ; preds = %454, %481
  %490 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

491:                                              ; preds = %467, %473
  %492 = phi ptr [ %480, %473 ], [ %460, %467 ]
  %493 = phi i32 [ %479, %473 ], [ 1, %467 ]
  %494 = load i32, ptr %492, align 4, !tbaa !5
  %495 = add nsw i32 %494, %493
  store i32 %495, ptr %492, align 4, !tbaa !5
  br label %496

496:                                              ; preds = %483, %491, %456, %437
  %497 = icmp eq i32 %448, %5
  br i1 %497, label %5630, label %364, !llvm.loop !598

498:                                              ; preds = %347, %635
  %499 = phi i32 [ 0, %347 ], [ %584, %635 ]
  %500 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %348, label %501, label %570

501:                                              ; preds = %498, %560
  %502 = phi i32 [ %569, %560 ], [ 0, %498 ]
  %503 = phi i64 [ %511, %560 ], [ %352, %498 ]
  %504 = phi i64 [ %568, %560 ], [ %351, %498 ]
  %505 = phi i32 [ %566, %560 ], [ %500, %498 ]
  %506 = sub i32 %350, %502
  %507 = tail call i32 @llvm.smin.i32(i32 %506, i32 0)
  %508 = sub i32 %506, %507
  %509 = zext i32 %508 to i64
  %510 = add nuw nsw i64 %509, 1
  %511 = add nsw i64 %503, -1
  %512 = icmp ult i32 %508, 31
  br i1 %512, label %548, label %513

513:                                              ; preds = %501
  %514 = and i64 %510, 8589934560
  %515 = sub i64 %504, %514
  br label %516

516:                                              ; preds = %516, %513
  %517 = phi i64 [ 0, %513 ], [ %540, %516 ]
  %518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %536, %516 ]
  %519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %537, %516 ]
  %520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %538, %516 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %513 ], [ %539, %516 ]
  %522 = sub i64 %504, %517
  %523 = getelementptr inbounds i32, ptr %11, i64 %522
  %524 = getelementptr inbounds i32, ptr %523, i64 -7
  %525 = load <8 x i32>, ptr %524, align 4, !tbaa !5
  %526 = shufflevector <8 x i32> %525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %527 = getelementptr inbounds i32, ptr %523, i64 -15
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !5
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %523, i64 -23
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !5
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %523, i64 -31
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !5
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = mul <8 x i32> %526, %518
  %537 = mul <8 x i32> %529, %519
  %538 = mul <8 x i32> %532, %520
  %539 = mul <8 x i32> %535, %521
  %540 = add nuw i64 %517, 32
  %541 = icmp eq i64 %540, %514
  br i1 %541, label %542, label %516, !llvm.loop !599

542:                                              ; preds = %516
  %543 = mul <8 x i32> %537, %536
  %544 = mul <8 x i32> %538, %543
  %545 = mul <8 x i32> %539, %544
  %546 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %545)
  %547 = icmp eq i64 %510, %514
  br i1 %547, label %560, label %548

548:                                              ; preds = %501, %542
  %549 = phi i64 [ %504, %501 ], [ %515, %542 ]
  %550 = phi i32 [ 1, %501 ], [ %546, %542 ]
  br label %551

551:                                              ; preds = %548, %551
  %552 = phi i64 [ %557, %551 ], [ %549, %548 ]
  %553 = phi i32 [ %556, %551 ], [ %550, %548 ]
  %554 = getelementptr inbounds i32, ptr %11, i64 %552
  %555 = load i32, ptr %554, align 4, !tbaa !5
  %556 = mul nsw i32 %555, %553
  %557 = add nsw i64 %552, -1
  %558 = trunc i64 %552 to i32
  %559 = icmp sgt i32 %558, 0
  br i1 %559, label %551, label %560, !llvm.loop !600

560:                                              ; preds = %551, %542
  %561 = phi i32 [ %546, %542 ], [ %556, %551 ]
  %562 = and i64 %511, 4294967295
  %563 = getelementptr inbounds i32, ptr %6, i64 %562
  %564 = load i32, ptr %563, align 4, !tbaa !5
  %565 = mul nsw i32 %564, %561
  %566 = add nsw i32 %565, %505
  %567 = icmp sgt i64 %503, 2
  %568 = add nsw i64 %504, -1
  %569 = add i32 %502, 1
  br i1 %567, label %501, label %570, !llvm.loop !601

570:                                              ; preds = %560, %498
  %571 = phi i32 [ %500, %498 ], [ %566, %560 ]
  %572 = icmp slt i32 %571, %5
  br i1 %572, label %575, label %573

573:                                              ; preds = %570
  %574 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

575:                                              ; preds = %570
  %576 = sext i32 %571 to i64
  %577 = getelementptr inbounds i32, ptr %24, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = load i8, ptr %26, align 1, !tbaa !11
  %580 = zext i8 %579 to i32
  %581 = and i32 %578, 255
  %582 = tail call i32 @llvm.umax.i32(i32 %581, i32 %580)
  %583 = trunc i32 %582 to i8
  store i8 %583, ptr %26, align 1, !tbaa !11
  %584 = add nuw nsw i32 %499, 1
  br i1 %349, label %585, label %635

585:                                              ; preds = %575
  %586 = load i32, ptr %4, align 4, !tbaa !5
  %587 = load i32, ptr %12, align 4, !tbaa !5
  %588 = add nsw i32 %587, -1
  %589 = icmp slt i32 %586, %588
  br i1 %589, label %612, label %590

590:                                              ; preds = %585
  %591 = icmp eq i32 %586, %588
  br i1 %591, label %592, label %628

592:                                              ; preds = %590
  store i32 0, ptr %4, align 4, !tbaa !5
  %593 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %593, ptr %6, align 4, !tbaa !5
  br i1 %354, label %635, label %594

594:                                              ; preds = %592, %622
  %595 = phi i64 [ %626, %622 ], [ 1, %592 ]
  %596 = getelementptr inbounds i32, ptr %4, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %12, i64 %595
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = add nsw i32 %599, -1
  %601 = icmp slt i32 %597, %600
  br i1 %601, label %602, label %620

602:                                              ; preds = %594
  br i1 %589, label %612, label %603

603:                                              ; preds = %602
  %604 = shl i64 %595, 32
  %605 = add i64 %604, -4294967296
  %606 = ashr exact i64 %605, 32
  %607 = getelementptr inbounds i32, ptr %7, i64 %606
  %608 = load i32, ptr %607, align 4, !tbaa !5
  %609 = getelementptr inbounds i32, ptr %6, i64 %595
  %610 = load i32, ptr %609, align 4, !tbaa !5
  %611 = add nsw i32 %610, %608
  store i32 %611, ptr %609, align 4, !tbaa !5
  br label %630

612:                                              ; preds = %585, %602
  %613 = phi i32 [ %597, %602 ], [ %586, %585 ]
  %614 = phi ptr [ %596, %602 ], [ %4, %585 ]
  %615 = phi i64 [ %595, %602 ], [ 0, %585 ]
  %616 = add nsw i32 %613, 1
  store i32 %616, ptr %614, align 4, !tbaa !5
  %617 = getelementptr inbounds i32, ptr %7, i64 %615
  %618 = load i32, ptr %617, align 4, !tbaa !5
  %619 = getelementptr inbounds i32, ptr %6, i64 %615
  br label %630

620:                                              ; preds = %594
  %621 = icmp eq i32 %597, %600
  br i1 %621, label %622, label %628

622:                                              ; preds = %620
  store i32 0, ptr %596, align 4, !tbaa !5
  %623 = getelementptr inbounds i32, ptr %8, i64 %595
  %624 = load i32, ptr %623, align 4, !tbaa !5
  %625 = getelementptr inbounds i32, ptr %6, i64 %595
  store i32 %624, ptr %625, align 4, !tbaa !5
  %626 = add nuw nsw i64 %595, 1
  %627 = icmp eq i64 %626, %352
  br i1 %627, label %635, label %594, !llvm.loop !602

628:                                              ; preds = %590, %620
  %629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

630:                                              ; preds = %603, %612
  %631 = phi ptr [ %619, %612 ], [ %596, %603 ]
  %632 = phi i32 [ %618, %612 ], [ 1, %603 ]
  %633 = load i32, ptr %631, align 4, !tbaa !5
  %634 = add nsw i32 %633, %632
  store i32 %634, ptr %631, align 4, !tbaa !5
  br label %635

635:                                              ; preds = %622, %630, %592, %575
  %636 = icmp eq i32 %584, %5
  br i1 %636, label %5630, label %498, !llvm.loop !603

637:                                              ; preds = %34
  %638 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1309, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

639:                                              ; preds = %18
  %640 = getelementptr inbounds ptr, ptr %14, i64 %19
  %641 = load ptr, ptr %640, align 8, !tbaa !9
  %642 = getelementptr inbounds ptr, ptr %16, i64 %19
  %643 = load ptr, ptr %642, align 8, !tbaa !9
  store i32 0, ptr %643, align 4, !tbaa !5
  %644 = icmp eq i32 %13, 0
  br i1 %644, label %645, label %650

645:                                              ; preds = %639
  %646 = load i32, ptr %641, align 4, !tbaa !5
  %647 = icmp eq i32 %646, 0
  %648 = tail call i32 @llvm.abs.i32(i32 %646, i1 true)
  %649 = select i1 %647, i32 0, i32 %648
  store i32 %649, ptr %643, align 4, !tbaa !5
  br label %5630

650:                                              ; preds = %639
  switch i32 %1, label %1251 [
    i32 1, label %651
    i32 0, label %959
  ]

651:                                              ; preds = %650
  %652 = getelementptr inbounds i32, ptr %3, i64 %19
  %653 = load i32, ptr %652, align 4, !tbaa !5
  %654 = icmp eq i32 %653, 0
  %655 = icmp sgt i32 %5, 0
  br i1 %654, label %665, label %656

656:                                              ; preds = %651
  br i1 %655, label %657, label %5630

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %816

665:                                              ; preds = %651
  br i1 %655, label %666, label %5630

666:                                              ; preds = %665
  %667 = icmp sgt i32 %13, 1
  %668 = icmp sgt i32 %13, 0
  %669 = add i32 %13, -2
  %670 = zext i32 %669 to i64
  %671 = zext i32 %13 to i64
  %672 = add nuw i32 %5, 1
  %673 = icmp eq i32 %13, 1
  br label %674

674:                                              ; preds = %666, %814
  %675 = phi i32 [ 0, %666 ], [ %766, %814 ]
  %676 = phi double [ 0.000000e+00, %666 ], [ %765, %814 ]
  %677 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %667, label %678, label %747

678:                                              ; preds = %674, %737
  %679 = phi i32 [ %746, %737 ], [ 0, %674 ]
  %680 = phi i64 [ %688, %737 ], [ %671, %674 ]
  %681 = phi i64 [ %745, %737 ], [ %670, %674 ]
  %682 = phi i32 [ %743, %737 ], [ %677, %674 ]
  %683 = sub i32 %669, %679
  %684 = tail call i32 @llvm.smin.i32(i32 %683, i32 0)
  %685 = sub i32 %683, %684
  %686 = zext i32 %685 to i64
  %687 = add nuw nsw i64 %686, 1
  %688 = add nsw i64 %680, -1
  %689 = icmp ult i32 %685, 31
  br i1 %689, label %725, label %690

690:                                              ; preds = %678
  %691 = and i64 %687, 8589934560
  %692 = sub i64 %681, %691
  br label %693

693:                                              ; preds = %693, %690
  %694 = phi i64 [ 0, %690 ], [ %717, %693 ]
  %695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %713, %693 ]
  %696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %714, %693 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %715, %693 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %690 ], [ %716, %693 ]
  %699 = sub i64 %681, %694
  %700 = getelementptr inbounds i32, ptr %9, i64 %699
  %701 = getelementptr inbounds i32, ptr %700, i64 -7
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %700, i64 -15
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = getelementptr inbounds i32, ptr %700, i64 -23
  %708 = load <8 x i32>, ptr %707, align 4, !tbaa !5
  %709 = shufflevector <8 x i32> %708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %710 = getelementptr inbounds i32, ptr %700, i64 -31
  %711 = load <8 x i32>, ptr %710, align 4, !tbaa !5
  %712 = shufflevector <8 x i32> %711, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %713 = mul <8 x i32> %703, %695
  %714 = mul <8 x i32> %706, %696
  %715 = mul <8 x i32> %709, %697
  %716 = mul <8 x i32> %712, %698
  %717 = add nuw i64 %694, 32
  %718 = icmp eq i64 %717, %691
  br i1 %718, label %719, label %693, !llvm.loop !604

719:                                              ; preds = %693
  %720 = mul <8 x i32> %714, %713
  %721 = mul <8 x i32> %715, %720
  %722 = mul <8 x i32> %716, %721
  %723 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %722)
  %724 = icmp eq i64 %687, %691
  br i1 %724, label %737, label %725

725:                                              ; preds = %678, %719
  %726 = phi i64 [ %681, %678 ], [ %692, %719 ]
  %727 = phi i32 [ 1, %678 ], [ %723, %719 ]
  br label %728

728:                                              ; preds = %725, %728
  %729 = phi i64 [ %734, %728 ], [ %726, %725 ]
  %730 = phi i32 [ %733, %728 ], [ %727, %725 ]
  %731 = getelementptr inbounds i32, ptr %9, i64 %729
  %732 = load i32, ptr %731, align 4, !tbaa !5
  %733 = mul nsw i32 %732, %730
  %734 = add nsw i64 %729, -1
  %735 = trunc i64 %729 to i32
  %736 = icmp sgt i32 %735, 0
  br i1 %736, label %728, label %737, !llvm.loop !605

737:                                              ; preds = %728, %719
  %738 = phi i32 [ %723, %719 ], [ %733, %728 ]
  %739 = and i64 %688, 4294967295
  %740 = getelementptr inbounds i32, ptr %6, i64 %739
  %741 = load i32, ptr %740, align 4, !tbaa !5
  %742 = mul nsw i32 %741, %738
  %743 = add nsw i32 %742, %682
  %744 = icmp sgt i64 %680, 2
  %745 = add nsw i64 %681, -1
  %746 = add i32 %679, 1
  br i1 %744, label %678, label %747, !llvm.loop !606

747:                                              ; preds = %737, %674
  %748 = phi i32 [ %677, %674 ], [ %743, %737 ]
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds double, ptr %2, i64 %749
  %751 = load double, ptr %750, align 8, !tbaa !18
  %752 = getelementptr inbounds i32, ptr %641, i64 %749
  %753 = load i32, ptr %752, align 4, !tbaa !5
  %754 = load i32, ptr %643, align 4, !tbaa !5
  %755 = sitofp i32 %754 to double
  %756 = sitofp i32 %753 to double
  %757 = fmul fast double %751, %756
  %758 = fcmp fast uge double %757, 0.000000e+00
  %759 = fneg fast double %757
  %760 = tail call fast double @llvm.fabs.f64(double %757)
  %761 = fcmp fast ole double %760, %755
  %762 = select nnan ninf i1 %758, double %757, double %759
  %763 = select i1 %761, double %755, double %762
  %764 = fptosi double %763 to i32
  store i32 %764, ptr %643, align 4, !tbaa !5
  %765 = fadd fast double %751, %676
  %766 = add nuw nsw i32 %675, 1
  br i1 %668, label %767, label %814

767:                                              ; preds = %747
  %768 = load i32, ptr %4, align 4, !tbaa !5
  %769 = load i32, ptr %12, align 4, !tbaa !5
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %768, %770
  br i1 %771, label %791, label %772

772:                                              ; preds = %767
  %773 = icmp eq i32 %768, %770
  br i1 %773, label %774, label %807

774:                                              ; preds = %772
  store i32 0, ptr %4, align 4, !tbaa !5
  %775 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %775, ptr %6, align 4, !tbaa !5
  br i1 %673, label %814, label %776

776:                                              ; preds = %774, %801
  %777 = phi i64 [ %805, %801 ], [ 1, %774 ]
  %778 = getelementptr inbounds i32, ptr %4, i64 %777
  %779 = load i32, ptr %778, align 4, !tbaa !5
  %780 = getelementptr inbounds i32, ptr %12, i64 %777
  %781 = load i32, ptr %780, align 4, !tbaa !5
  %782 = add nsw i32 %781, -1
  %783 = icmp slt i32 %779, %782
  br i1 %783, label %784, label %799

784:                                              ; preds = %776
  br i1 %771, label %791, label %785

785:                                              ; preds = %784
  %786 = getelementptr inbounds i32, ptr %7, i64 %777
  %787 = load i32, ptr %786, align 4, !tbaa !5
  %788 = getelementptr inbounds i32, ptr %6, i64 %777
  %789 = load i32, ptr %788, align 4, !tbaa !5
  %790 = add nsw i32 %789, %787
  store i32 %790, ptr %788, align 4, !tbaa !5
  br label %809

791:                                              ; preds = %767, %784
  %792 = phi i32 [ %779, %784 ], [ %768, %767 ]
  %793 = phi ptr [ %778, %784 ], [ %4, %767 ]
  %794 = phi i64 [ %777, %784 ], [ 0, %767 ]
  %795 = add nsw i32 %792, 1
  store i32 %795, ptr %793, align 4, !tbaa !5
  %796 = getelementptr inbounds i32, ptr %7, i64 %794
  %797 = load i32, ptr %796, align 4, !tbaa !5
  %798 = getelementptr inbounds i32, ptr %6, i64 %794
  br label %809

799:                                              ; preds = %776
  %800 = icmp eq i32 %779, %782
  br i1 %800, label %801, label %807

801:                                              ; preds = %799
  store i32 0, ptr %778, align 4, !tbaa !5
  %802 = getelementptr inbounds i32, ptr %8, i64 %777
  %803 = load i32, ptr %802, align 4, !tbaa !5
  %804 = getelementptr inbounds i32, ptr %6, i64 %777
  store i32 %803, ptr %804, align 4, !tbaa !5
  %805 = add nuw nsw i64 %777, 1
  %806 = icmp eq i64 %805, %671
  br i1 %806, label %814, label %776, !llvm.loop !607

807:                                              ; preds = %772, %799
  %808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

809:                                              ; preds = %785, %791
  %810 = phi ptr [ %798, %791 ], [ %778, %785 ]
  %811 = phi i32 [ %797, %791 ], [ 1, %785 ]
  %812 = load i32, ptr %810, align 4, !tbaa !5
  %813 = add nsw i32 %812, %811
  store i32 %813, ptr %810, align 4, !tbaa !5
  br label %814

814:                                              ; preds = %801, %809, %774, %747
  %815 = icmp eq i32 %766, %5
  br i1 %815, label %5630, label %674, !llvm.loop !608

816:                                              ; preds = %657, %957
  %817 = phi i32 [ 0, %657 ], [ %906, %957 ]
  %818 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %658, label %819, label %888

819:                                              ; preds = %816, %878
  %820 = phi i32 [ %887, %878 ], [ 0, %816 ]
  %821 = phi i64 [ %829, %878 ], [ %662, %816 ]
  %822 = phi i64 [ %886, %878 ], [ %661, %816 ]
  %823 = phi i32 [ %884, %878 ], [ %818, %816 ]
  %824 = sub i32 %660, %820
  %825 = tail call i32 @llvm.smin.i32(i32 %824, i32 0)
  %826 = sub i32 %824, %825
  %827 = zext i32 %826 to i64
  %828 = add nuw nsw i64 %827, 1
  %829 = add nsw i64 %821, -1
  %830 = icmp ult i32 %826, 31
  br i1 %830, label %866, label %831

831:                                              ; preds = %819
  %832 = and i64 %828, 8589934560
  %833 = sub i64 %822, %832
  br label %834

834:                                              ; preds = %834, %831
  %835 = phi i64 [ 0, %831 ], [ %858, %834 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %854, %834 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %855, %834 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %856, %834 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %857, %834 ]
  %840 = sub i64 %822, %835
  %841 = getelementptr inbounds i32, ptr %11, i64 %840
  %842 = getelementptr inbounds i32, ptr %841, i64 -7
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !5
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %841, i64 -15
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !5
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = getelementptr inbounds i32, ptr %841, i64 -23
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !5
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %841, i64 -31
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !5
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = mul <8 x i32> %844, %836
  %855 = mul <8 x i32> %847, %837
  %856 = mul <8 x i32> %850, %838
  %857 = mul <8 x i32> %853, %839
  %858 = add nuw i64 %835, 32
  %859 = icmp eq i64 %858, %832
  br i1 %859, label %860, label %834, !llvm.loop !609

860:                                              ; preds = %834
  %861 = mul <8 x i32> %855, %854
  %862 = mul <8 x i32> %856, %861
  %863 = mul <8 x i32> %857, %862
  %864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %863)
  %865 = icmp eq i64 %828, %832
  br i1 %865, label %878, label %866

866:                                              ; preds = %819, %860
  %867 = phi i64 [ %822, %819 ], [ %833, %860 ]
  %868 = phi i32 [ 1, %819 ], [ %864, %860 ]
  br label %869

869:                                              ; preds = %866, %869
  %870 = phi i64 [ %875, %869 ], [ %867, %866 ]
  %871 = phi i32 [ %874, %869 ], [ %868, %866 ]
  %872 = getelementptr inbounds i32, ptr %11, i64 %870
  %873 = load i32, ptr %872, align 4, !tbaa !5
  %874 = mul nsw i32 %873, %871
  %875 = add nsw i64 %870, -1
  %876 = trunc i64 %870 to i32
  %877 = icmp sgt i32 %876, 0
  br i1 %877, label %869, label %878, !llvm.loop !610

878:                                              ; preds = %869, %860
  %879 = phi i32 [ %864, %860 ], [ %874, %869 ]
  %880 = and i64 %829, 4294967295
  %881 = getelementptr inbounds i32, ptr %6, i64 %880
  %882 = load i32, ptr %881, align 4, !tbaa !5
  %883 = mul nsw i32 %882, %879
  %884 = add nsw i32 %883, %823
  %885 = icmp sgt i64 %821, 2
  %886 = add nsw i64 %822, -1
  %887 = add i32 %820, 1
  br i1 %885, label %819, label %888, !llvm.loop !611

888:                                              ; preds = %878, %816
  %889 = phi i32 [ %818, %816 ], [ %884, %878 ]
  %890 = icmp slt i32 %889, %5
  br i1 %890, label %893, label %891

891:                                              ; preds = %888
  %892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

893:                                              ; preds = %888
  %894 = sext i32 %889 to i64
  %895 = getelementptr inbounds i32, ptr %641, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = load i32, ptr %643, align 4, !tbaa !5
  %898 = sitofp i32 %897 to double
  %899 = sitofp i32 %896 to double
  %900 = icmp slt i32 %896, 0
  %901 = fneg fast double %899
  %902 = select i1 %900, double %901, double %899
  %903 = fcmp fast ole double %902, %898
  %904 = select fast i1 %903, double %898, double %902
  %905 = fptosi double %904 to i32
  store i32 %905, ptr %643, align 4, !tbaa !5
  %906 = add nuw nsw i32 %817, 1
  br i1 %659, label %907, label %957

907:                                              ; preds = %893
  %908 = load i32, ptr %4, align 4, !tbaa !5
  %909 = load i32, ptr %12, align 4, !tbaa !5
  %910 = add nsw i32 %909, -1
  %911 = icmp slt i32 %908, %910
  br i1 %911, label %934, label %912

912:                                              ; preds = %907
  %913 = icmp eq i32 %908, %910
  br i1 %913, label %914, label %950

914:                                              ; preds = %912
  store i32 0, ptr %4, align 4, !tbaa !5
  %915 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %915, ptr %6, align 4, !tbaa !5
  br i1 %664, label %957, label %916

916:                                              ; preds = %914, %944
  %917 = phi i64 [ %948, %944 ], [ 1, %914 ]
  %918 = getelementptr inbounds i32, ptr %4, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !5
  %920 = getelementptr inbounds i32, ptr %12, i64 %917
  %921 = load i32, ptr %920, align 4, !tbaa !5
  %922 = add nsw i32 %921, -1
  %923 = icmp slt i32 %919, %922
  br i1 %923, label %924, label %942

924:                                              ; preds = %916
  br i1 %911, label %934, label %925

925:                                              ; preds = %924
  %926 = shl i64 %917, 32
  %927 = add i64 %926, -4294967296
  %928 = ashr exact i64 %927, 32
  %929 = getelementptr inbounds i32, ptr %7, i64 %928
  %930 = load i32, ptr %929, align 4, !tbaa !5
  %931 = getelementptr inbounds i32, ptr %6, i64 %917
  %932 = load i32, ptr %931, align 4, !tbaa !5
  %933 = add nsw i32 %932, %930
  store i32 %933, ptr %931, align 4, !tbaa !5
  br label %952

934:                                              ; preds = %907, %924
  %935 = phi i32 [ %919, %924 ], [ %908, %907 ]
  %936 = phi ptr [ %918, %924 ], [ %4, %907 ]
  %937 = phi i64 [ %917, %924 ], [ 0, %907 ]
  %938 = add nsw i32 %935, 1
  store i32 %938, ptr %936, align 4, !tbaa !5
  %939 = getelementptr inbounds i32, ptr %7, i64 %937
  %940 = load i32, ptr %939, align 4, !tbaa !5
  %941 = getelementptr inbounds i32, ptr %6, i64 %937
  br label %952

942:                                              ; preds = %916
  %943 = icmp eq i32 %919, %922
  br i1 %943, label %944, label %950

944:                                              ; preds = %942
  store i32 0, ptr %918, align 4, !tbaa !5
  %945 = getelementptr inbounds i32, ptr %8, i64 %917
  %946 = load i32, ptr %945, align 4, !tbaa !5
  %947 = getelementptr inbounds i32, ptr %6, i64 %917
  store i32 %946, ptr %947, align 4, !tbaa !5
  %948 = add nuw nsw i64 %917, 1
  %949 = icmp eq i64 %948, %662
  br i1 %949, label %957, label %916, !llvm.loop !612

950:                                              ; preds = %912, %942
  %951 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

952:                                              ; preds = %925, %934
  %953 = phi ptr [ %941, %934 ], [ %918, %925 ]
  %954 = phi i32 [ %940, %934 ], [ 1, %925 ]
  %955 = load i32, ptr %953, align 4, !tbaa !5
  %956 = add nsw i32 %955, %954
  store i32 %956, ptr %953, align 4, !tbaa !5
  br label %957

957:                                              ; preds = %944, %952, %914, %893
  %958 = icmp eq i32 %906, %5
  br i1 %958, label %5630, label %816, !llvm.loop !613

959:                                              ; preds = %650
  %960 = getelementptr inbounds i32, ptr %3, i64 %19
  %961 = load i32, ptr %960, align 4, !tbaa !5
  %962 = icmp eq i32 %961, 0
  %963 = icmp sgt i32 %5, 0
  br i1 %962, label %973, label %964

964:                                              ; preds = %959
  br i1 %963, label %965, label %5630

965:                                              ; preds = %964
  %966 = icmp sgt i32 %13, 1
  %967 = icmp sgt i32 %13, 0
  %968 = add i32 %13, -2
  %969 = zext i32 %968 to i64
  %970 = zext i32 %13 to i64
  %971 = add nuw i32 %5, 1
  %972 = icmp eq i32 %13, 1
  br label %1114

973:                                              ; preds = %959
  br i1 %963, label %974, label %5630

974:                                              ; preds = %973
  %975 = icmp sgt i32 %13, 1
  %976 = icmp sgt i32 %13, 0
  %977 = add i32 %13, -2
  %978 = zext i32 %977 to i64
  %979 = zext i32 %13 to i64
  %980 = add nuw i32 %5, 1
  %981 = icmp eq i32 %13, 1
  br label %982

982:                                              ; preds = %974, %1112
  %983 = phi i32 [ 0, %974 ], [ %1064, %1112 ]
  %984 = phi double [ 0.000000e+00, %974 ], [ %1063, %1112 ]
  %985 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %975, label %986, label %1055

986:                                              ; preds = %982, %1045
  %987 = phi i32 [ %1054, %1045 ], [ 0, %982 ]
  %988 = phi i64 [ %996, %1045 ], [ %979, %982 ]
  %989 = phi i64 [ %1053, %1045 ], [ %978, %982 ]
  %990 = phi i32 [ %1051, %1045 ], [ %985, %982 ]
  %991 = sub i32 %977, %987
  %992 = tail call i32 @llvm.smin.i32(i32 %991, i32 0)
  %993 = sub i32 %991, %992
  %994 = zext i32 %993 to i64
  %995 = add nuw nsw i64 %994, 1
  %996 = add nsw i64 %988, -1
  %997 = icmp ult i32 %993, 31
  br i1 %997, label %1033, label %998

998:                                              ; preds = %986
  %999 = and i64 %995, 8589934560
  %1000 = sub i64 %989, %999
  br label %1001

1001:                                             ; preds = %1001, %998
  %1002 = phi i64 [ 0, %998 ], [ %1025, %1001 ]
  %1003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1021, %1001 ]
  %1004 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1022, %1001 ]
  %1005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1023, %1001 ]
  %1006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1024, %1001 ]
  %1007 = sub i64 %989, %1002
  %1008 = getelementptr inbounds i32, ptr %9, i64 %1007
  %1009 = getelementptr inbounds i32, ptr %1008, i64 -7
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !5
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1008, i64 -15
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !5
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = getelementptr inbounds i32, ptr %1008, i64 -23
  %1016 = load <8 x i32>, ptr %1015, align 4, !tbaa !5
  %1017 = shufflevector <8 x i32> %1016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1018 = getelementptr inbounds i32, ptr %1008, i64 -31
  %1019 = load <8 x i32>, ptr %1018, align 4, !tbaa !5
  %1020 = shufflevector <8 x i32> %1019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1021 = mul <8 x i32> %1011, %1003
  %1022 = mul <8 x i32> %1014, %1004
  %1023 = mul <8 x i32> %1017, %1005
  %1024 = mul <8 x i32> %1020, %1006
  %1025 = add nuw i64 %1002, 32
  %1026 = icmp eq i64 %1025, %999
  br i1 %1026, label %1027, label %1001, !llvm.loop !614

1027:                                             ; preds = %1001
  %1028 = mul <8 x i32> %1022, %1021
  %1029 = mul <8 x i32> %1023, %1028
  %1030 = mul <8 x i32> %1024, %1029
  %1031 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1030)
  %1032 = icmp eq i64 %995, %999
  br i1 %1032, label %1045, label %1033

1033:                                             ; preds = %986, %1027
  %1034 = phi i64 [ %989, %986 ], [ %1000, %1027 ]
  %1035 = phi i32 [ 1, %986 ], [ %1031, %1027 ]
  br label %1036

1036:                                             ; preds = %1033, %1036
  %1037 = phi i64 [ %1042, %1036 ], [ %1034, %1033 ]
  %1038 = phi i32 [ %1041, %1036 ], [ %1035, %1033 ]
  %1039 = getelementptr inbounds i32, ptr %9, i64 %1037
  %1040 = load i32, ptr %1039, align 4, !tbaa !5
  %1041 = mul nsw i32 %1040, %1038
  %1042 = add nsw i64 %1037, -1
  %1043 = trunc i64 %1037 to i32
  %1044 = icmp sgt i32 %1043, 0
  br i1 %1044, label %1036, label %1045, !llvm.loop !615

1045:                                             ; preds = %1036, %1027
  %1046 = phi i32 [ %1031, %1027 ], [ %1041, %1036 ]
  %1047 = and i64 %996, 4294967295
  %1048 = getelementptr inbounds i32, ptr %6, i64 %1047
  %1049 = load i32, ptr %1048, align 4, !tbaa !5
  %1050 = mul nsw i32 %1049, %1046
  %1051 = add nsw i32 %1050, %990
  %1052 = icmp sgt i64 %988, 2
  %1053 = add nsw i64 %989, -1
  %1054 = add i32 %987, 1
  br i1 %1052, label %986, label %1055, !llvm.loop !616

1055:                                             ; preds = %1045, %982
  %1056 = phi i32 [ %985, %982 ], [ %1051, %1045 ]
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i32, ptr %641, i64 %1057
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = load i32, ptr %643, align 4, !tbaa !5
  %1061 = tail call i32 @llvm.abs.i32(i32 %1059, i1 true)
  %1062 = tail call i32 @llvm.smax.i32(i32 %1060, i32 %1061)
  store i32 %1062, ptr %643, align 4, !tbaa !5
  %1063 = fadd fast double %984, 1.000000e+00
  %1064 = add nuw nsw i32 %983, 1
  br i1 %976, label %1065, label %1112

1065:                                             ; preds = %1055
  %1066 = load i32, ptr %4, align 4, !tbaa !5
  %1067 = load i32, ptr %12, align 4, !tbaa !5
  %1068 = add nsw i32 %1067, -1
  %1069 = icmp slt i32 %1066, %1068
  br i1 %1069, label %1089, label %1070

1070:                                             ; preds = %1065
  %1071 = icmp eq i32 %1066, %1068
  br i1 %1071, label %1072, label %1105

1072:                                             ; preds = %1070
  store i32 0, ptr %4, align 4, !tbaa !5
  %1073 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1073, ptr %6, align 4, !tbaa !5
  br i1 %981, label %1112, label %1074

1074:                                             ; preds = %1072, %1099
  %1075 = phi i64 [ %1103, %1099 ], [ 1, %1072 ]
  %1076 = getelementptr inbounds i32, ptr %4, i64 %1075
  %1077 = load i32, ptr %1076, align 4, !tbaa !5
  %1078 = getelementptr inbounds i32, ptr %12, i64 %1075
  %1079 = load i32, ptr %1078, align 4, !tbaa !5
  %1080 = add nsw i32 %1079, -1
  %1081 = icmp slt i32 %1077, %1080
  br i1 %1081, label %1082, label %1097

1082:                                             ; preds = %1074
  br i1 %1069, label %1089, label %1083

1083:                                             ; preds = %1082
  %1084 = getelementptr inbounds i32, ptr %7, i64 %1075
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %6, i64 %1075
  %1087 = load i32, ptr %1086, align 4, !tbaa !5
  %1088 = add nsw i32 %1087, %1085
  store i32 %1088, ptr %1086, align 4, !tbaa !5
  br label %1107

1089:                                             ; preds = %1065, %1082
  %1090 = phi i32 [ %1077, %1082 ], [ %1066, %1065 ]
  %1091 = phi ptr [ %1076, %1082 ], [ %4, %1065 ]
  %1092 = phi i64 [ %1075, %1082 ], [ 0, %1065 ]
  %1093 = add nsw i32 %1090, 1
  store i32 %1093, ptr %1091, align 4, !tbaa !5
  %1094 = getelementptr inbounds i32, ptr %7, i64 %1092
  %1095 = load i32, ptr %1094, align 4, !tbaa !5
  %1096 = getelementptr inbounds i32, ptr %6, i64 %1092
  br label %1107

1097:                                             ; preds = %1074
  %1098 = icmp eq i32 %1077, %1080
  br i1 %1098, label %1099, label %1105

1099:                                             ; preds = %1097
  store i32 0, ptr %1076, align 4, !tbaa !5
  %1100 = getelementptr inbounds i32, ptr %8, i64 %1075
  %1101 = load i32, ptr %1100, align 4, !tbaa !5
  %1102 = getelementptr inbounds i32, ptr %6, i64 %1075
  store i32 %1101, ptr %1102, align 4, !tbaa !5
  %1103 = add nuw nsw i64 %1075, 1
  %1104 = icmp eq i64 %1103, %979
  br i1 %1104, label %1112, label %1074, !llvm.loop !617

1105:                                             ; preds = %1070, %1097
  %1106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1107:                                             ; preds = %1083, %1089
  %1108 = phi ptr [ %1096, %1089 ], [ %1076, %1083 ]
  %1109 = phi i32 [ %1095, %1089 ], [ 1, %1083 ]
  %1110 = load i32, ptr %1108, align 4, !tbaa !5
  %1111 = add nsw i32 %1110, %1109
  store i32 %1111, ptr %1108, align 4, !tbaa !5
  br label %1112

1112:                                             ; preds = %1099, %1107, %1072, %1055
  %1113 = icmp eq i32 %1064, %5
  br i1 %1113, label %5630, label %982, !llvm.loop !618

1114:                                             ; preds = %965, %1249
  %1115 = phi i32 [ 0, %965 ], [ %1198, %1249 ]
  %1116 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %966, label %1117, label %1186

1117:                                             ; preds = %1114, %1176
  %1118 = phi i32 [ %1185, %1176 ], [ 0, %1114 ]
  %1119 = phi i64 [ %1127, %1176 ], [ %970, %1114 ]
  %1120 = phi i64 [ %1184, %1176 ], [ %969, %1114 ]
  %1121 = phi i32 [ %1182, %1176 ], [ %1116, %1114 ]
  %1122 = sub i32 %968, %1118
  %1123 = tail call i32 @llvm.smin.i32(i32 %1122, i32 0)
  %1124 = sub i32 %1122, %1123
  %1125 = zext i32 %1124 to i64
  %1126 = add nuw nsw i64 %1125, 1
  %1127 = add nsw i64 %1119, -1
  %1128 = icmp ult i32 %1124, 31
  br i1 %1128, label %1164, label %1129

1129:                                             ; preds = %1117
  %1130 = and i64 %1126, 8589934560
  %1131 = sub i64 %1120, %1130
  br label %1132

1132:                                             ; preds = %1132, %1129
  %1133 = phi i64 [ 0, %1129 ], [ %1156, %1132 ]
  %1134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1152, %1132 ]
  %1135 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1153, %1132 ]
  %1136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1154, %1132 ]
  %1137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1129 ], [ %1155, %1132 ]
  %1138 = sub i64 %1120, %1133
  %1139 = getelementptr inbounds i32, ptr %11, i64 %1138
  %1140 = getelementptr inbounds i32, ptr %1139, i64 -7
  %1141 = load <8 x i32>, ptr %1140, align 4, !tbaa !5
  %1142 = shufflevector <8 x i32> %1141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1143 = getelementptr inbounds i32, ptr %1139, i64 -15
  %1144 = load <8 x i32>, ptr %1143, align 4, !tbaa !5
  %1145 = shufflevector <8 x i32> %1144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1146 = getelementptr inbounds i32, ptr %1139, i64 -23
  %1147 = load <8 x i32>, ptr %1146, align 4, !tbaa !5
  %1148 = shufflevector <8 x i32> %1147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1149 = getelementptr inbounds i32, ptr %1139, i64 -31
  %1150 = load <8 x i32>, ptr %1149, align 4, !tbaa !5
  %1151 = shufflevector <8 x i32> %1150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1152 = mul <8 x i32> %1142, %1134
  %1153 = mul <8 x i32> %1145, %1135
  %1154 = mul <8 x i32> %1148, %1136
  %1155 = mul <8 x i32> %1151, %1137
  %1156 = add nuw i64 %1133, 32
  %1157 = icmp eq i64 %1156, %1130
  br i1 %1157, label %1158, label %1132, !llvm.loop !619

1158:                                             ; preds = %1132
  %1159 = mul <8 x i32> %1153, %1152
  %1160 = mul <8 x i32> %1154, %1159
  %1161 = mul <8 x i32> %1155, %1160
  %1162 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1161)
  %1163 = icmp eq i64 %1126, %1130
  br i1 %1163, label %1176, label %1164

1164:                                             ; preds = %1117, %1158
  %1165 = phi i64 [ %1120, %1117 ], [ %1131, %1158 ]
  %1166 = phi i32 [ 1, %1117 ], [ %1162, %1158 ]
  br label %1167

1167:                                             ; preds = %1164, %1167
  %1168 = phi i64 [ %1173, %1167 ], [ %1165, %1164 ]
  %1169 = phi i32 [ %1172, %1167 ], [ %1166, %1164 ]
  %1170 = getelementptr inbounds i32, ptr %11, i64 %1168
  %1171 = load i32, ptr %1170, align 4, !tbaa !5
  %1172 = mul nsw i32 %1171, %1169
  %1173 = add nsw i64 %1168, -1
  %1174 = trunc i64 %1168 to i32
  %1175 = icmp sgt i32 %1174, 0
  br i1 %1175, label %1167, label %1176, !llvm.loop !620

1176:                                             ; preds = %1167, %1158
  %1177 = phi i32 [ %1162, %1158 ], [ %1172, %1167 ]
  %1178 = and i64 %1127, 4294967295
  %1179 = getelementptr inbounds i32, ptr %6, i64 %1178
  %1180 = load i32, ptr %1179, align 4, !tbaa !5
  %1181 = mul nsw i32 %1180, %1177
  %1182 = add nsw i32 %1181, %1121
  %1183 = icmp sgt i64 %1119, 2
  %1184 = add nsw i64 %1120, -1
  %1185 = add i32 %1118, 1
  br i1 %1183, label %1117, label %1186, !llvm.loop !621

1186:                                             ; preds = %1176, %1114
  %1187 = phi i32 [ %1116, %1114 ], [ %1182, %1176 ]
  %1188 = icmp slt i32 %1187, %5
  br i1 %1188, label %1191, label %1189

1189:                                             ; preds = %1186
  %1190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

1191:                                             ; preds = %1186
  %1192 = sext i32 %1187 to i64
  %1193 = getelementptr inbounds i32, ptr %641, i64 %1192
  %1194 = load i32, ptr %1193, align 4, !tbaa !5
  %1195 = load i32, ptr %643, align 4, !tbaa !5
  %1196 = tail call i32 @llvm.abs.i32(i32 %1194, i1 true)
  %1197 = tail call i32 @llvm.smax.i32(i32 %1195, i32 %1196)
  store i32 %1197, ptr %643, align 4, !tbaa !5
  %1198 = add nuw nsw i32 %1115, 1
  br i1 %967, label %1199, label %1249

1199:                                             ; preds = %1191
  %1200 = load i32, ptr %4, align 4, !tbaa !5
  %1201 = load i32, ptr %12, align 4, !tbaa !5
  %1202 = add nsw i32 %1201, -1
  %1203 = icmp slt i32 %1200, %1202
  br i1 %1203, label %1226, label %1204

1204:                                             ; preds = %1199
  %1205 = icmp eq i32 %1200, %1202
  br i1 %1205, label %1206, label %1242

1206:                                             ; preds = %1204
  store i32 0, ptr %4, align 4, !tbaa !5
  %1207 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1207, ptr %6, align 4, !tbaa !5
  br i1 %972, label %1249, label %1208

1208:                                             ; preds = %1206, %1236
  %1209 = phi i64 [ %1240, %1236 ], [ 1, %1206 ]
  %1210 = getelementptr inbounds i32, ptr %4, i64 %1209
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = getelementptr inbounds i32, ptr %12, i64 %1209
  %1213 = load i32, ptr %1212, align 4, !tbaa !5
  %1214 = add nsw i32 %1213, -1
  %1215 = icmp slt i32 %1211, %1214
  br i1 %1215, label %1216, label %1234

1216:                                             ; preds = %1208
  br i1 %1203, label %1226, label %1217

1217:                                             ; preds = %1216
  %1218 = shl i64 %1209, 32
  %1219 = add i64 %1218, -4294967296
  %1220 = ashr exact i64 %1219, 32
  %1221 = getelementptr inbounds i32, ptr %7, i64 %1220
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = getelementptr inbounds i32, ptr %6, i64 %1209
  %1224 = load i32, ptr %1223, align 4, !tbaa !5
  %1225 = add nsw i32 %1224, %1222
  store i32 %1225, ptr %1223, align 4, !tbaa !5
  br label %1244

1226:                                             ; preds = %1199, %1216
  %1227 = phi i32 [ %1211, %1216 ], [ %1200, %1199 ]
  %1228 = phi ptr [ %1210, %1216 ], [ %4, %1199 ]
  %1229 = phi i64 [ %1209, %1216 ], [ 0, %1199 ]
  %1230 = add nsw i32 %1227, 1
  store i32 %1230, ptr %1228, align 4, !tbaa !5
  %1231 = getelementptr inbounds i32, ptr %7, i64 %1229
  %1232 = load i32, ptr %1231, align 4, !tbaa !5
  %1233 = getelementptr inbounds i32, ptr %6, i64 %1229
  br label %1244

1234:                                             ; preds = %1208
  %1235 = icmp eq i32 %1211, %1214
  br i1 %1235, label %1236, label %1242

1236:                                             ; preds = %1234
  store i32 0, ptr %1210, align 4, !tbaa !5
  %1237 = getelementptr inbounds i32, ptr %8, i64 %1209
  %1238 = load i32, ptr %1237, align 4, !tbaa !5
  %1239 = getelementptr inbounds i32, ptr %6, i64 %1209
  store i32 %1238, ptr %1239, align 4, !tbaa !5
  %1240 = add nuw nsw i64 %1209, 1
  %1241 = icmp eq i64 %1240, %970
  br i1 %1241, label %1249, label %1208, !llvm.loop !622

1242:                                             ; preds = %1204, %1234
  %1243 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1244:                                             ; preds = %1217, %1226
  %1245 = phi ptr [ %1233, %1226 ], [ %1210, %1217 ]
  %1246 = phi i32 [ %1232, %1226 ], [ 1, %1217 ]
  %1247 = load i32, ptr %1245, align 4, !tbaa !5
  %1248 = add nsw i32 %1247, %1246
  store i32 %1248, ptr %1245, align 4, !tbaa !5
  br label %1249

1249:                                             ; preds = %1236, %1244, %1206, %1191
  %1250 = icmp eq i32 %1198, %5
  br i1 %1250, label %5630, label %1114, !llvm.loop !623

1251:                                             ; preds = %650
  %1252 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

1253:                                             ; preds = %18
  %1254 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !9
  %1256 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1257 = load ptr, ptr %1256, align 8, !tbaa !9
  store i8 0, ptr %1257, align 1, !tbaa !11
  %1258 = icmp eq i32 %13, 0
  br i1 %1258, label %1259, label %1270

1259:                                             ; preds = %1253
  %1260 = load i32, ptr %1255, align 4, !tbaa !5
  %1261 = and i32 %1260, 128
  %1262 = icmp eq i32 %1261, 0
  %1263 = shl i32 %1260, 24
  %1264 = ashr exact i32 %1263, 24
  %1265 = sub nsw i32 0, %1264
  %1266 = select i1 %1262, i32 %1264, i32 %1265
  %1267 = icmp slt i32 %1266, 1
  %1268 = trunc i32 %1266 to i8
  %1269 = select i1 %1267, i8 0, i8 %1268
  store i8 %1269, ptr %1257, align 1, !tbaa !11
  br label %5630

1270:                                             ; preds = %1253
  switch i32 %1, label %1889 [
    i32 1, label %1271
    i32 0, label %1583
  ]

1271:                                             ; preds = %1270
  %1272 = getelementptr inbounds i32, ptr %3, i64 %19
  %1273 = load i32, ptr %1272, align 4, !tbaa !5
  %1274 = icmp eq i32 %1273, 0
  %1275 = icmp sgt i32 %5, 0
  br i1 %1274, label %1285, label %1276

1276:                                             ; preds = %1271
  br i1 %1275, label %1277, label %5630

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1438

1285:                                             ; preds = %1271
  br i1 %1275, label %1286, label %5630

1286:                                             ; preds = %1285
  %1287 = icmp sgt i32 %13, 1
  %1288 = icmp sgt i32 %13, 0
  %1289 = add i32 %13, -2
  %1290 = zext i32 %1289 to i64
  %1291 = zext i32 %13 to i64
  %1292 = add nuw i32 %5, 1
  %1293 = icmp eq i32 %13, 1
  br label %1294

1294:                                             ; preds = %1286, %1436
  %1295 = phi i32 [ 0, %1286 ], [ %1388, %1436 ]
  %1296 = phi double [ 0.000000e+00, %1286 ], [ %1387, %1436 ]
  %1297 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1287, label %1298, label %1367

1298:                                             ; preds = %1294, %1357
  %1299 = phi i32 [ %1366, %1357 ], [ 0, %1294 ]
  %1300 = phi i64 [ %1308, %1357 ], [ %1291, %1294 ]
  %1301 = phi i64 [ %1365, %1357 ], [ %1290, %1294 ]
  %1302 = phi i32 [ %1363, %1357 ], [ %1297, %1294 ]
  %1303 = sub i32 %1289, %1299
  %1304 = tail call i32 @llvm.smin.i32(i32 %1303, i32 0)
  %1305 = sub i32 %1303, %1304
  %1306 = zext i32 %1305 to i64
  %1307 = add nuw nsw i64 %1306, 1
  %1308 = add nsw i64 %1300, -1
  %1309 = icmp ult i32 %1305, 31
  br i1 %1309, label %1345, label %1310

1310:                                             ; preds = %1298
  %1311 = and i64 %1307, 8589934560
  %1312 = sub i64 %1301, %1311
  br label %1313

1313:                                             ; preds = %1313, %1310
  %1314 = phi i64 [ 0, %1310 ], [ %1337, %1313 ]
  %1315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1333, %1313 ]
  %1316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1334, %1313 ]
  %1317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1335, %1313 ]
  %1318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1336, %1313 ]
  %1319 = sub i64 %1301, %1314
  %1320 = getelementptr inbounds i32, ptr %9, i64 %1319
  %1321 = getelementptr inbounds i32, ptr %1320, i64 -7
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = getelementptr inbounds i32, ptr %1320, i64 -15
  %1325 = load <8 x i32>, ptr %1324, align 4, !tbaa !5
  %1326 = shufflevector <8 x i32> %1325, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1327 = getelementptr inbounds i32, ptr %1320, i64 -23
  %1328 = load <8 x i32>, ptr %1327, align 4, !tbaa !5
  %1329 = shufflevector <8 x i32> %1328, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1330 = getelementptr inbounds i32, ptr %1320, i64 -31
  %1331 = load <8 x i32>, ptr %1330, align 4, !tbaa !5
  %1332 = shufflevector <8 x i32> %1331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1333 = mul <8 x i32> %1323, %1315
  %1334 = mul <8 x i32> %1326, %1316
  %1335 = mul <8 x i32> %1329, %1317
  %1336 = mul <8 x i32> %1332, %1318
  %1337 = add nuw i64 %1314, 32
  %1338 = icmp eq i64 %1337, %1311
  br i1 %1338, label %1339, label %1313, !llvm.loop !624

1339:                                             ; preds = %1313
  %1340 = mul <8 x i32> %1334, %1333
  %1341 = mul <8 x i32> %1335, %1340
  %1342 = mul <8 x i32> %1336, %1341
  %1343 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1342)
  %1344 = icmp eq i64 %1307, %1311
  br i1 %1344, label %1357, label %1345

1345:                                             ; preds = %1298, %1339
  %1346 = phi i64 [ %1301, %1298 ], [ %1312, %1339 ]
  %1347 = phi i32 [ 1, %1298 ], [ %1343, %1339 ]
  br label %1348

1348:                                             ; preds = %1345, %1348
  %1349 = phi i64 [ %1354, %1348 ], [ %1346, %1345 ]
  %1350 = phi i32 [ %1353, %1348 ], [ %1347, %1345 ]
  %1351 = getelementptr inbounds i32, ptr %9, i64 %1349
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1350
  %1354 = add nsw i64 %1349, -1
  %1355 = trunc i64 %1349 to i32
  %1356 = icmp sgt i32 %1355, 0
  br i1 %1356, label %1348, label %1357, !llvm.loop !625

1357:                                             ; preds = %1348, %1339
  %1358 = phi i32 [ %1343, %1339 ], [ %1353, %1348 ]
  %1359 = and i64 %1308, 4294967295
  %1360 = getelementptr inbounds i32, ptr %6, i64 %1359
  %1361 = load i32, ptr %1360, align 4, !tbaa !5
  %1362 = mul nsw i32 %1361, %1358
  %1363 = add nsw i32 %1362, %1302
  %1364 = icmp sgt i64 %1300, 2
  %1365 = add nsw i64 %1301, -1
  %1366 = add i32 %1299, 1
  br i1 %1364, label %1298, label %1367, !llvm.loop !626

1367:                                             ; preds = %1357, %1294
  %1368 = phi i32 [ %1297, %1294 ], [ %1363, %1357 ]
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds double, ptr %2, i64 %1369
  %1371 = load double, ptr %1370, align 8, !tbaa !18
  %1372 = getelementptr inbounds i32, ptr %1255, i64 %1369
  %1373 = load i32, ptr %1372, align 4, !tbaa !5
  %1374 = load i8, ptr %1257, align 1, !tbaa !11
  %1375 = sitofp i8 %1374 to double
  %1376 = shl i32 %1373, 24
  %1377 = ashr exact i32 %1376, 24
  %1378 = sitofp i32 %1377 to double
  %1379 = fmul fast double %1371, %1378
  %1380 = fcmp fast uge double %1379, 0.000000e+00
  %1381 = fneg fast double %1379
  %1382 = tail call fast double @llvm.fabs.f64(double %1379)
  %1383 = fcmp fast ole double %1382, %1375
  %1384 = select nnan ninf i1 %1380, double %1379, double %1381
  %1385 = select i1 %1383, double %1375, double %1384
  %1386 = fptosi double %1385 to i8
  store i8 %1386, ptr %1257, align 1, !tbaa !11
  %1387 = fadd fast double %1371, %1296
  %1388 = add nuw nsw i32 %1295, 1
  br i1 %1288, label %1389, label %1436

1389:                                             ; preds = %1367
  %1390 = load i32, ptr %4, align 4, !tbaa !5
  %1391 = load i32, ptr %12, align 4, !tbaa !5
  %1392 = add nsw i32 %1391, -1
  %1393 = icmp slt i32 %1390, %1392
  br i1 %1393, label %1413, label %1394

1394:                                             ; preds = %1389
  %1395 = icmp eq i32 %1390, %1392
  br i1 %1395, label %1396, label %1429

1396:                                             ; preds = %1394
  store i32 0, ptr %4, align 4, !tbaa !5
  %1397 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1397, ptr %6, align 4, !tbaa !5
  br i1 %1293, label %1436, label %1398

1398:                                             ; preds = %1396, %1423
  %1399 = phi i64 [ %1427, %1423 ], [ 1, %1396 ]
  %1400 = getelementptr inbounds i32, ptr %4, i64 %1399
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = getelementptr inbounds i32, ptr %12, i64 %1399
  %1403 = load i32, ptr %1402, align 4, !tbaa !5
  %1404 = add nsw i32 %1403, -1
  %1405 = icmp slt i32 %1401, %1404
  br i1 %1405, label %1406, label %1421

1406:                                             ; preds = %1398
  br i1 %1393, label %1413, label %1407

1407:                                             ; preds = %1406
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1399
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1399
  %1411 = load i32, ptr %1410, align 4, !tbaa !5
  %1412 = add nsw i32 %1411, %1409
  store i32 %1412, ptr %1410, align 4, !tbaa !5
  br label %1431

1413:                                             ; preds = %1389, %1406
  %1414 = phi i32 [ %1401, %1406 ], [ %1390, %1389 ]
  %1415 = phi ptr [ %1400, %1406 ], [ %4, %1389 ]
  %1416 = phi i64 [ %1399, %1406 ], [ 0, %1389 ]
  %1417 = add nsw i32 %1414, 1
  store i32 %1417, ptr %1415, align 4, !tbaa !5
  %1418 = getelementptr inbounds i32, ptr %7, i64 %1416
  %1419 = load i32, ptr %1418, align 4, !tbaa !5
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1416
  br label %1431

1421:                                             ; preds = %1398
  %1422 = icmp eq i32 %1401, %1404
  br i1 %1422, label %1423, label %1429

1423:                                             ; preds = %1421
  store i32 0, ptr %1400, align 4, !tbaa !5
  %1424 = getelementptr inbounds i32, ptr %8, i64 %1399
  %1425 = load i32, ptr %1424, align 4, !tbaa !5
  %1426 = getelementptr inbounds i32, ptr %6, i64 %1399
  store i32 %1425, ptr %1426, align 4, !tbaa !5
  %1427 = add nuw nsw i64 %1399, 1
  %1428 = icmp eq i64 %1427, %1291
  br i1 %1428, label %1436, label %1398, !llvm.loop !627

1429:                                             ; preds = %1394, %1421
  %1430 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1431:                                             ; preds = %1407, %1413
  %1432 = phi ptr [ %1420, %1413 ], [ %1400, %1407 ]
  %1433 = phi i32 [ %1419, %1413 ], [ 1, %1407 ]
  %1434 = load i32, ptr %1432, align 4, !tbaa !5
  %1435 = add nsw i32 %1434, %1433
  store i32 %1435, ptr %1432, align 4, !tbaa !5
  br label %1436

1436:                                             ; preds = %1423, %1431, %1396, %1367
  %1437 = icmp eq i32 %1388, %5
  br i1 %1437, label %5630, label %1294, !llvm.loop !628

1438:                                             ; preds = %1277, %1581
  %1439 = phi i32 [ 0, %1277 ], [ %1530, %1581 ]
  %1440 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1278, label %1441, label %1510

1441:                                             ; preds = %1438, %1500
  %1442 = phi i32 [ %1509, %1500 ], [ 0, %1438 ]
  %1443 = phi i64 [ %1451, %1500 ], [ %1282, %1438 ]
  %1444 = phi i64 [ %1508, %1500 ], [ %1281, %1438 ]
  %1445 = phi i32 [ %1506, %1500 ], [ %1440, %1438 ]
  %1446 = sub i32 %1280, %1442
  %1447 = tail call i32 @llvm.smin.i32(i32 %1446, i32 0)
  %1448 = sub i32 %1446, %1447
  %1449 = zext i32 %1448 to i64
  %1450 = add nuw nsw i64 %1449, 1
  %1451 = add nsw i64 %1443, -1
  %1452 = icmp ult i32 %1448, 31
  br i1 %1452, label %1488, label %1453

1453:                                             ; preds = %1441
  %1454 = and i64 %1450, 8589934560
  %1455 = sub i64 %1444, %1454
  br label %1456

1456:                                             ; preds = %1456, %1453
  %1457 = phi i64 [ 0, %1453 ], [ %1480, %1456 ]
  %1458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1476, %1456 ]
  %1459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1477, %1456 ]
  %1460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1478, %1456 ]
  %1461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1453 ], [ %1479, %1456 ]
  %1462 = sub i64 %1444, %1457
  %1463 = getelementptr inbounds i32, ptr %11, i64 %1462
  %1464 = getelementptr inbounds i32, ptr %1463, i64 -7
  %1465 = load <8 x i32>, ptr %1464, align 4, !tbaa !5
  %1466 = shufflevector <8 x i32> %1465, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1467 = getelementptr inbounds i32, ptr %1463, i64 -15
  %1468 = load <8 x i32>, ptr %1467, align 4, !tbaa !5
  %1469 = shufflevector <8 x i32> %1468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1470 = getelementptr inbounds i32, ptr %1463, i64 -23
  %1471 = load <8 x i32>, ptr %1470, align 4, !tbaa !5
  %1472 = shufflevector <8 x i32> %1471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1473 = getelementptr inbounds i32, ptr %1463, i64 -31
  %1474 = load <8 x i32>, ptr %1473, align 4, !tbaa !5
  %1475 = shufflevector <8 x i32> %1474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1476 = mul <8 x i32> %1466, %1458
  %1477 = mul <8 x i32> %1469, %1459
  %1478 = mul <8 x i32> %1472, %1460
  %1479 = mul <8 x i32> %1475, %1461
  %1480 = add nuw i64 %1457, 32
  %1481 = icmp eq i64 %1480, %1454
  br i1 %1481, label %1482, label %1456, !llvm.loop !629

1482:                                             ; preds = %1456
  %1483 = mul <8 x i32> %1477, %1476
  %1484 = mul <8 x i32> %1478, %1483
  %1485 = mul <8 x i32> %1479, %1484
  %1486 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1485)
  %1487 = icmp eq i64 %1450, %1454
  br i1 %1487, label %1500, label %1488

1488:                                             ; preds = %1441, %1482
  %1489 = phi i64 [ %1444, %1441 ], [ %1455, %1482 ]
  %1490 = phi i32 [ 1, %1441 ], [ %1486, %1482 ]
  br label %1491

1491:                                             ; preds = %1488, %1491
  %1492 = phi i64 [ %1497, %1491 ], [ %1489, %1488 ]
  %1493 = phi i32 [ %1496, %1491 ], [ %1490, %1488 ]
  %1494 = getelementptr inbounds i32, ptr %11, i64 %1492
  %1495 = load i32, ptr %1494, align 4, !tbaa !5
  %1496 = mul nsw i32 %1495, %1493
  %1497 = add nsw i64 %1492, -1
  %1498 = trunc i64 %1492 to i32
  %1499 = icmp sgt i32 %1498, 0
  br i1 %1499, label %1491, label %1500, !llvm.loop !630

1500:                                             ; preds = %1491, %1482
  %1501 = phi i32 [ %1486, %1482 ], [ %1496, %1491 ]
  %1502 = and i64 %1451, 4294967295
  %1503 = getelementptr inbounds i32, ptr %6, i64 %1502
  %1504 = load i32, ptr %1503, align 4, !tbaa !5
  %1505 = mul nsw i32 %1504, %1501
  %1506 = add nsw i32 %1505, %1445
  %1507 = icmp sgt i64 %1443, 2
  %1508 = add nsw i64 %1444, -1
  %1509 = add i32 %1442, 1
  br i1 %1507, label %1441, label %1510, !llvm.loop !631

1510:                                             ; preds = %1500, %1438
  %1511 = phi i32 [ %1440, %1438 ], [ %1506, %1500 ]
  %1512 = icmp slt i32 %1511, %5
  br i1 %1512, label %1515, label %1513

1513:                                             ; preds = %1510
  %1514 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

1515:                                             ; preds = %1510
  %1516 = sext i32 %1511 to i64
  %1517 = getelementptr inbounds i32, ptr %1255, i64 %1516
  %1518 = load i32, ptr %1517, align 4, !tbaa !5
  %1519 = load i8, ptr %1257, align 1, !tbaa !11
  %1520 = sitofp i8 %1519 to double
  %1521 = shl i32 %1518, 24
  %1522 = ashr exact i32 %1521, 24
  %1523 = sitofp i32 %1522 to double
  %1524 = icmp slt i32 %1521, 0
  %1525 = fneg fast double %1523
  %1526 = select i1 %1524, double %1525, double %1523
  %1527 = fcmp fast ole double %1526, %1520
  %1528 = select fast i1 %1527, double %1520, double %1526
  %1529 = fptosi double %1528 to i8
  store i8 %1529, ptr %1257, align 1, !tbaa !11
  %1530 = add nuw nsw i32 %1439, 1
  br i1 %1279, label %1531, label %1581

1531:                                             ; preds = %1515
  %1532 = load i32, ptr %4, align 4, !tbaa !5
  %1533 = load i32, ptr %12, align 4, !tbaa !5
  %1534 = add nsw i32 %1533, -1
  %1535 = icmp slt i32 %1532, %1534
  br i1 %1535, label %1558, label %1536

1536:                                             ; preds = %1531
  %1537 = icmp eq i32 %1532, %1534
  br i1 %1537, label %1538, label %1574

1538:                                             ; preds = %1536
  store i32 0, ptr %4, align 4, !tbaa !5
  %1539 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1539, ptr %6, align 4, !tbaa !5
  br i1 %1284, label %1581, label %1540

1540:                                             ; preds = %1538, %1568
  %1541 = phi i64 [ %1572, %1568 ], [ 1, %1538 ]
  %1542 = getelementptr inbounds i32, ptr %4, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %12, i64 %1541
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = add nsw i32 %1545, -1
  %1547 = icmp slt i32 %1543, %1546
  br i1 %1547, label %1548, label %1566

1548:                                             ; preds = %1540
  br i1 %1535, label %1558, label %1549

1549:                                             ; preds = %1548
  %1550 = shl i64 %1541, 32
  %1551 = add i64 %1550, -4294967296
  %1552 = ashr exact i64 %1551, 32
  %1553 = getelementptr inbounds i32, ptr %7, i64 %1552
  %1554 = load i32, ptr %1553, align 4, !tbaa !5
  %1555 = getelementptr inbounds i32, ptr %6, i64 %1541
  %1556 = load i32, ptr %1555, align 4, !tbaa !5
  %1557 = add nsw i32 %1556, %1554
  store i32 %1557, ptr %1555, align 4, !tbaa !5
  br label %1576

1558:                                             ; preds = %1531, %1548
  %1559 = phi i32 [ %1543, %1548 ], [ %1532, %1531 ]
  %1560 = phi ptr [ %1542, %1548 ], [ %4, %1531 ]
  %1561 = phi i64 [ %1541, %1548 ], [ 0, %1531 ]
  %1562 = add nsw i32 %1559, 1
  store i32 %1562, ptr %1560, align 4, !tbaa !5
  %1563 = getelementptr inbounds i32, ptr %7, i64 %1561
  %1564 = load i32, ptr %1563, align 4, !tbaa !5
  %1565 = getelementptr inbounds i32, ptr %6, i64 %1561
  br label %1576

1566:                                             ; preds = %1540
  %1567 = icmp eq i32 %1543, %1546
  br i1 %1567, label %1568, label %1574

1568:                                             ; preds = %1566
  store i32 0, ptr %1542, align 4, !tbaa !5
  %1569 = getelementptr inbounds i32, ptr %8, i64 %1541
  %1570 = load i32, ptr %1569, align 4, !tbaa !5
  %1571 = getelementptr inbounds i32, ptr %6, i64 %1541
  store i32 %1570, ptr %1571, align 4, !tbaa !5
  %1572 = add nuw nsw i64 %1541, 1
  %1573 = icmp eq i64 %1572, %1282
  br i1 %1573, label %1581, label %1540, !llvm.loop !632

1574:                                             ; preds = %1536, %1566
  %1575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1576:                                             ; preds = %1549, %1558
  %1577 = phi ptr [ %1565, %1558 ], [ %1542, %1549 ]
  %1578 = phi i32 [ %1564, %1558 ], [ 1, %1549 ]
  %1579 = load i32, ptr %1577, align 4, !tbaa !5
  %1580 = add nsw i32 %1579, %1578
  store i32 %1580, ptr %1577, align 4, !tbaa !5
  br label %1581

1581:                                             ; preds = %1568, %1576, %1538, %1515
  %1582 = icmp eq i32 %1530, %5
  br i1 %1582, label %5630, label %1438, !llvm.loop !633

1583:                                             ; preds = %1270
  %1584 = getelementptr inbounds i32, ptr %3, i64 %19
  %1585 = load i32, ptr %1584, align 4, !tbaa !5
  %1586 = icmp eq i32 %1585, 0
  %1587 = icmp sgt i32 %5, 0
  br i1 %1586, label %1597, label %1588

1588:                                             ; preds = %1583
  br i1 %1587, label %1589, label %5630

1589:                                             ; preds = %1588
  %1590 = icmp sgt i32 %13, 1
  %1591 = icmp sgt i32 %13, 0
  %1592 = add i32 %13, -2
  %1593 = zext i32 %1592 to i64
  %1594 = zext i32 %13 to i64
  %1595 = add nuw i32 %5, 1
  %1596 = icmp eq i32 %13, 1
  br label %1745

1597:                                             ; preds = %1583
  br i1 %1587, label %1598, label %5630

1598:                                             ; preds = %1597
  %1599 = icmp sgt i32 %13, 1
  %1600 = icmp sgt i32 %13, 0
  %1601 = add i32 %13, -2
  %1602 = zext i32 %1601 to i64
  %1603 = zext i32 %13 to i64
  %1604 = add nuw i32 %5, 1
  %1605 = icmp eq i32 %13, 1
  br label %1606

1606:                                             ; preds = %1598, %1743
  %1607 = phi i32 [ 0, %1598 ], [ %1695, %1743 ]
  %1608 = phi double [ 0.000000e+00, %1598 ], [ %1694, %1743 ]
  %1609 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1599, label %1610, label %1679

1610:                                             ; preds = %1606, %1669
  %1611 = phi i32 [ %1678, %1669 ], [ 0, %1606 ]
  %1612 = phi i64 [ %1620, %1669 ], [ %1603, %1606 ]
  %1613 = phi i64 [ %1677, %1669 ], [ %1602, %1606 ]
  %1614 = phi i32 [ %1675, %1669 ], [ %1609, %1606 ]
  %1615 = sub i32 %1601, %1611
  %1616 = tail call i32 @llvm.smin.i32(i32 %1615, i32 0)
  %1617 = sub i32 %1615, %1616
  %1618 = zext i32 %1617 to i64
  %1619 = add nuw nsw i64 %1618, 1
  %1620 = add nsw i64 %1612, -1
  %1621 = icmp ult i32 %1617, 31
  br i1 %1621, label %1657, label %1622

1622:                                             ; preds = %1610
  %1623 = and i64 %1619, 8589934560
  %1624 = sub i64 %1613, %1623
  br label %1625

1625:                                             ; preds = %1625, %1622
  %1626 = phi i64 [ 0, %1622 ], [ %1649, %1625 ]
  %1627 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1645, %1625 ]
  %1628 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1646, %1625 ]
  %1629 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1647, %1625 ]
  %1630 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1622 ], [ %1648, %1625 ]
  %1631 = sub i64 %1613, %1626
  %1632 = getelementptr inbounds i32, ptr %9, i64 %1631
  %1633 = getelementptr inbounds i32, ptr %1632, i64 -7
  %1634 = load <8 x i32>, ptr %1633, align 4, !tbaa !5
  %1635 = shufflevector <8 x i32> %1634, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1636 = getelementptr inbounds i32, ptr %1632, i64 -15
  %1637 = load <8 x i32>, ptr %1636, align 4, !tbaa !5
  %1638 = shufflevector <8 x i32> %1637, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1639 = getelementptr inbounds i32, ptr %1632, i64 -23
  %1640 = load <8 x i32>, ptr %1639, align 4, !tbaa !5
  %1641 = shufflevector <8 x i32> %1640, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1642 = getelementptr inbounds i32, ptr %1632, i64 -31
  %1643 = load <8 x i32>, ptr %1642, align 4, !tbaa !5
  %1644 = shufflevector <8 x i32> %1643, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1645 = mul <8 x i32> %1635, %1627
  %1646 = mul <8 x i32> %1638, %1628
  %1647 = mul <8 x i32> %1641, %1629
  %1648 = mul <8 x i32> %1644, %1630
  %1649 = add nuw i64 %1626, 32
  %1650 = icmp eq i64 %1649, %1623
  br i1 %1650, label %1651, label %1625, !llvm.loop !634

1651:                                             ; preds = %1625
  %1652 = mul <8 x i32> %1646, %1645
  %1653 = mul <8 x i32> %1647, %1652
  %1654 = mul <8 x i32> %1648, %1653
  %1655 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1654)
  %1656 = icmp eq i64 %1619, %1623
  br i1 %1656, label %1669, label %1657

1657:                                             ; preds = %1610, %1651
  %1658 = phi i64 [ %1613, %1610 ], [ %1624, %1651 ]
  %1659 = phi i32 [ 1, %1610 ], [ %1655, %1651 ]
  br label %1660

1660:                                             ; preds = %1657, %1660
  %1661 = phi i64 [ %1666, %1660 ], [ %1658, %1657 ]
  %1662 = phi i32 [ %1665, %1660 ], [ %1659, %1657 ]
  %1663 = getelementptr inbounds i32, ptr %9, i64 %1661
  %1664 = load i32, ptr %1663, align 4, !tbaa !5
  %1665 = mul nsw i32 %1664, %1662
  %1666 = add nsw i64 %1661, -1
  %1667 = trunc i64 %1661 to i32
  %1668 = icmp sgt i32 %1667, 0
  br i1 %1668, label %1660, label %1669, !llvm.loop !635

1669:                                             ; preds = %1660, %1651
  %1670 = phi i32 [ %1655, %1651 ], [ %1665, %1660 ]
  %1671 = and i64 %1620, 4294967295
  %1672 = getelementptr inbounds i32, ptr %6, i64 %1671
  %1673 = load i32, ptr %1672, align 4, !tbaa !5
  %1674 = mul nsw i32 %1673, %1670
  %1675 = add nsw i32 %1674, %1614
  %1676 = icmp sgt i64 %1612, 2
  %1677 = add nsw i64 %1613, -1
  %1678 = add i32 %1611, 1
  br i1 %1676, label %1610, label %1679, !llvm.loop !636

1679:                                             ; preds = %1669, %1606
  %1680 = phi i32 [ %1609, %1606 ], [ %1675, %1669 ]
  %1681 = sext i32 %1680 to i64
  %1682 = getelementptr inbounds i32, ptr %1255, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !5
  %1684 = load i8, ptr %1257, align 1, !tbaa !11
  %1685 = sext i8 %1684 to i32
  %1686 = and i32 %1683, 128
  %1687 = icmp eq i32 %1686, 0
  %1688 = shl i32 %1683, 24
  %1689 = ashr exact i32 %1688, 24
  %1690 = sub nsw i32 0, %1689
  %1691 = select i1 %1687, i32 %1689, i32 %1690
  %1692 = tail call i32 @llvm.smax.i32(i32 %1691, i32 %1685)
  %1693 = trunc i32 %1692 to i8
  store i8 %1693, ptr %1257, align 1, !tbaa !11
  %1694 = fadd fast double %1608, 1.000000e+00
  %1695 = add nuw nsw i32 %1607, 1
  br i1 %1600, label %1696, label %1743

1696:                                             ; preds = %1679
  %1697 = load i32, ptr %4, align 4, !tbaa !5
  %1698 = load i32, ptr %12, align 4, !tbaa !5
  %1699 = add nsw i32 %1698, -1
  %1700 = icmp slt i32 %1697, %1699
  br i1 %1700, label %1720, label %1701

1701:                                             ; preds = %1696
  %1702 = icmp eq i32 %1697, %1699
  br i1 %1702, label %1703, label %1736

1703:                                             ; preds = %1701
  store i32 0, ptr %4, align 4, !tbaa !5
  %1704 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1704, ptr %6, align 4, !tbaa !5
  br i1 %1605, label %1743, label %1705

1705:                                             ; preds = %1703, %1730
  %1706 = phi i64 [ %1734, %1730 ], [ 1, %1703 ]
  %1707 = getelementptr inbounds i32, ptr %4, i64 %1706
  %1708 = load i32, ptr %1707, align 4, !tbaa !5
  %1709 = getelementptr inbounds i32, ptr %12, i64 %1706
  %1710 = load i32, ptr %1709, align 4, !tbaa !5
  %1711 = add nsw i32 %1710, -1
  %1712 = icmp slt i32 %1708, %1711
  br i1 %1712, label %1713, label %1728

1713:                                             ; preds = %1705
  br i1 %1700, label %1720, label %1714

1714:                                             ; preds = %1713
  %1715 = getelementptr inbounds i32, ptr %7, i64 %1706
  %1716 = load i32, ptr %1715, align 4, !tbaa !5
  %1717 = getelementptr inbounds i32, ptr %6, i64 %1706
  %1718 = load i32, ptr %1717, align 4, !tbaa !5
  %1719 = add nsw i32 %1718, %1716
  store i32 %1719, ptr %1717, align 4, !tbaa !5
  br label %1738

1720:                                             ; preds = %1696, %1713
  %1721 = phi i32 [ %1708, %1713 ], [ %1697, %1696 ]
  %1722 = phi ptr [ %1707, %1713 ], [ %4, %1696 ]
  %1723 = phi i64 [ %1706, %1713 ], [ 0, %1696 ]
  %1724 = add nsw i32 %1721, 1
  store i32 %1724, ptr %1722, align 4, !tbaa !5
  %1725 = getelementptr inbounds i32, ptr %7, i64 %1723
  %1726 = load i32, ptr %1725, align 4, !tbaa !5
  %1727 = getelementptr inbounds i32, ptr %6, i64 %1723
  br label %1738

1728:                                             ; preds = %1705
  %1729 = icmp eq i32 %1708, %1711
  br i1 %1729, label %1730, label %1736

1730:                                             ; preds = %1728
  store i32 0, ptr %1707, align 4, !tbaa !5
  %1731 = getelementptr inbounds i32, ptr %8, i64 %1706
  %1732 = load i32, ptr %1731, align 4, !tbaa !5
  %1733 = getelementptr inbounds i32, ptr %6, i64 %1706
  store i32 %1732, ptr %1733, align 4, !tbaa !5
  %1734 = add nuw nsw i64 %1706, 1
  %1735 = icmp eq i64 %1734, %1603
  br i1 %1735, label %1743, label %1705, !llvm.loop !637

1736:                                             ; preds = %1701, %1728
  %1737 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1738:                                             ; preds = %1714, %1720
  %1739 = phi ptr [ %1727, %1720 ], [ %1707, %1714 ]
  %1740 = phi i32 [ %1726, %1720 ], [ 1, %1714 ]
  %1741 = load i32, ptr %1739, align 4, !tbaa !5
  %1742 = add nsw i32 %1741, %1740
  store i32 %1742, ptr %1739, align 4, !tbaa !5
  br label %1743

1743:                                             ; preds = %1730, %1738, %1703, %1679
  %1744 = icmp eq i32 %1695, %5
  br i1 %1744, label %5630, label %1606, !llvm.loop !638

1745:                                             ; preds = %1589, %1887
  %1746 = phi i32 [ 0, %1589 ], [ %1836, %1887 ]
  %1747 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1590, label %1748, label %1817

1748:                                             ; preds = %1745, %1807
  %1749 = phi i32 [ %1816, %1807 ], [ 0, %1745 ]
  %1750 = phi i64 [ %1758, %1807 ], [ %1594, %1745 ]
  %1751 = phi i64 [ %1815, %1807 ], [ %1593, %1745 ]
  %1752 = phi i32 [ %1813, %1807 ], [ %1747, %1745 ]
  %1753 = sub i32 %1592, %1749
  %1754 = tail call i32 @llvm.smin.i32(i32 %1753, i32 0)
  %1755 = sub i32 %1753, %1754
  %1756 = zext i32 %1755 to i64
  %1757 = add nuw nsw i64 %1756, 1
  %1758 = add nsw i64 %1750, -1
  %1759 = icmp ult i32 %1755, 31
  br i1 %1759, label %1795, label %1760

1760:                                             ; preds = %1748
  %1761 = and i64 %1757, 8589934560
  %1762 = sub i64 %1751, %1761
  br label %1763

1763:                                             ; preds = %1763, %1760
  %1764 = phi i64 [ 0, %1760 ], [ %1787, %1763 ]
  %1765 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1783, %1763 ]
  %1766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1784, %1763 ]
  %1767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1785, %1763 ]
  %1768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1760 ], [ %1786, %1763 ]
  %1769 = sub i64 %1751, %1764
  %1770 = getelementptr inbounds i32, ptr %11, i64 %1769
  %1771 = getelementptr inbounds i32, ptr %1770, i64 -7
  %1772 = load <8 x i32>, ptr %1771, align 4, !tbaa !5
  %1773 = shufflevector <8 x i32> %1772, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1774 = getelementptr inbounds i32, ptr %1770, i64 -15
  %1775 = load <8 x i32>, ptr %1774, align 4, !tbaa !5
  %1776 = shufflevector <8 x i32> %1775, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1777 = getelementptr inbounds i32, ptr %1770, i64 -23
  %1778 = load <8 x i32>, ptr %1777, align 4, !tbaa !5
  %1779 = shufflevector <8 x i32> %1778, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1780 = getelementptr inbounds i32, ptr %1770, i64 -31
  %1781 = load <8 x i32>, ptr %1780, align 4, !tbaa !5
  %1782 = shufflevector <8 x i32> %1781, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1783 = mul <8 x i32> %1773, %1765
  %1784 = mul <8 x i32> %1776, %1766
  %1785 = mul <8 x i32> %1779, %1767
  %1786 = mul <8 x i32> %1782, %1768
  %1787 = add nuw i64 %1764, 32
  %1788 = icmp eq i64 %1787, %1761
  br i1 %1788, label %1789, label %1763, !llvm.loop !639

1789:                                             ; preds = %1763
  %1790 = mul <8 x i32> %1784, %1783
  %1791 = mul <8 x i32> %1785, %1790
  %1792 = mul <8 x i32> %1786, %1791
  %1793 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1792)
  %1794 = icmp eq i64 %1757, %1761
  br i1 %1794, label %1807, label %1795

1795:                                             ; preds = %1748, %1789
  %1796 = phi i64 [ %1751, %1748 ], [ %1762, %1789 ]
  %1797 = phi i32 [ 1, %1748 ], [ %1793, %1789 ]
  br label %1798

1798:                                             ; preds = %1795, %1798
  %1799 = phi i64 [ %1804, %1798 ], [ %1796, %1795 ]
  %1800 = phi i32 [ %1803, %1798 ], [ %1797, %1795 ]
  %1801 = getelementptr inbounds i32, ptr %11, i64 %1799
  %1802 = load i32, ptr %1801, align 4, !tbaa !5
  %1803 = mul nsw i32 %1802, %1800
  %1804 = add nsw i64 %1799, -1
  %1805 = trunc i64 %1799 to i32
  %1806 = icmp sgt i32 %1805, 0
  br i1 %1806, label %1798, label %1807, !llvm.loop !640

1807:                                             ; preds = %1798, %1789
  %1808 = phi i32 [ %1793, %1789 ], [ %1803, %1798 ]
  %1809 = and i64 %1758, 4294967295
  %1810 = getelementptr inbounds i32, ptr %6, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !5
  %1812 = mul nsw i32 %1811, %1808
  %1813 = add nsw i32 %1812, %1752
  %1814 = icmp sgt i64 %1750, 2
  %1815 = add nsw i64 %1751, -1
  %1816 = add i32 %1749, 1
  br i1 %1814, label %1748, label %1817, !llvm.loop !641

1817:                                             ; preds = %1807, %1745
  %1818 = phi i32 [ %1747, %1745 ], [ %1813, %1807 ]
  %1819 = icmp slt i32 %1818, %5
  br i1 %1819, label %1822, label %1820

1820:                                             ; preds = %1817
  %1821 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

1822:                                             ; preds = %1817
  %1823 = sext i32 %1818 to i64
  %1824 = getelementptr inbounds i32, ptr %1255, i64 %1823
  %1825 = load i32, ptr %1824, align 4, !tbaa !5
  %1826 = load i8, ptr %1257, align 1, !tbaa !11
  %1827 = sext i8 %1826 to i32
  %1828 = and i32 %1825, 128
  %1829 = icmp eq i32 %1828, 0
  %1830 = shl i32 %1825, 24
  %1831 = ashr exact i32 %1830, 24
  %1832 = sub nsw i32 0, %1831
  %1833 = select i1 %1829, i32 %1831, i32 %1832
  %1834 = tail call i32 @llvm.smax.i32(i32 %1833, i32 %1827)
  %1835 = trunc i32 %1834 to i8
  store i8 %1835, ptr %1257, align 1, !tbaa !11
  %1836 = add nuw nsw i32 %1746, 1
  br i1 %1591, label %1837, label %1887

1837:                                             ; preds = %1822
  %1838 = load i32, ptr %4, align 4, !tbaa !5
  %1839 = load i32, ptr %12, align 4, !tbaa !5
  %1840 = add nsw i32 %1839, -1
  %1841 = icmp slt i32 %1838, %1840
  br i1 %1841, label %1864, label %1842

1842:                                             ; preds = %1837
  %1843 = icmp eq i32 %1838, %1840
  br i1 %1843, label %1844, label %1880

1844:                                             ; preds = %1842
  store i32 0, ptr %4, align 4, !tbaa !5
  %1845 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1845, ptr %6, align 4, !tbaa !5
  br i1 %1596, label %1887, label %1846

1846:                                             ; preds = %1844, %1874
  %1847 = phi i64 [ %1878, %1874 ], [ 1, %1844 ]
  %1848 = getelementptr inbounds i32, ptr %4, i64 %1847
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = getelementptr inbounds i32, ptr %12, i64 %1847
  %1851 = load i32, ptr %1850, align 4, !tbaa !5
  %1852 = add nsw i32 %1851, -1
  %1853 = icmp slt i32 %1849, %1852
  br i1 %1853, label %1854, label %1872

1854:                                             ; preds = %1846
  br i1 %1841, label %1864, label %1855

1855:                                             ; preds = %1854
  %1856 = shl i64 %1847, 32
  %1857 = add i64 %1856, -4294967296
  %1858 = ashr exact i64 %1857, 32
  %1859 = getelementptr inbounds i32, ptr %7, i64 %1858
  %1860 = load i32, ptr %1859, align 4, !tbaa !5
  %1861 = getelementptr inbounds i32, ptr %6, i64 %1847
  %1862 = load i32, ptr %1861, align 4, !tbaa !5
  %1863 = add nsw i32 %1862, %1860
  store i32 %1863, ptr %1861, align 4, !tbaa !5
  br label %1882

1864:                                             ; preds = %1837, %1854
  %1865 = phi i32 [ %1849, %1854 ], [ %1838, %1837 ]
  %1866 = phi ptr [ %1848, %1854 ], [ %4, %1837 ]
  %1867 = phi i64 [ %1847, %1854 ], [ 0, %1837 ]
  %1868 = add nsw i32 %1865, 1
  store i32 %1868, ptr %1866, align 4, !tbaa !5
  %1869 = getelementptr inbounds i32, ptr %7, i64 %1867
  %1870 = load i32, ptr %1869, align 4, !tbaa !5
  %1871 = getelementptr inbounds i32, ptr %6, i64 %1867
  br label %1882

1872:                                             ; preds = %1846
  %1873 = icmp eq i32 %1849, %1852
  br i1 %1873, label %1874, label %1880

1874:                                             ; preds = %1872
  store i32 0, ptr %1848, align 4, !tbaa !5
  %1875 = getelementptr inbounds i32, ptr %8, i64 %1847
  %1876 = load i32, ptr %1875, align 4, !tbaa !5
  %1877 = getelementptr inbounds i32, ptr %6, i64 %1847
  store i32 %1876, ptr %1877, align 4, !tbaa !5
  %1878 = add nuw nsw i64 %1847, 1
  %1879 = icmp eq i64 %1878, %1594
  br i1 %1879, label %1887, label %1846, !llvm.loop !642

1880:                                             ; preds = %1842, %1872
  %1881 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

1882:                                             ; preds = %1855, %1864
  %1883 = phi ptr [ %1871, %1864 ], [ %1848, %1855 ]
  %1884 = phi i32 [ %1870, %1864 ], [ 1, %1855 ]
  %1885 = load i32, ptr %1883, align 4, !tbaa !5
  %1886 = add nsw i32 %1885, %1884
  store i32 %1886, ptr %1883, align 4, !tbaa !5
  br label %1887

1887:                                             ; preds = %1874, %1882, %1844, %1822
  %1888 = icmp eq i32 %1836, %5
  br i1 %1888, label %5630, label %1745, !llvm.loop !643

1889:                                             ; preds = %1270
  %1890 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1316, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

1891:                                             ; preds = %18
  %1892 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1893 = load ptr, ptr %1892, align 8, !tbaa !9
  %1894 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1895 = load ptr, ptr %1894, align 8, !tbaa !9
  store i16 0, ptr %1895, align 2, !tbaa !78
  %1896 = icmp eq i32 %13, 0
  br i1 %1896, label %1897, label %1908

1897:                                             ; preds = %1891
  %1898 = load i32, ptr %1893, align 4, !tbaa !5
  %1899 = and i32 %1898, 32768
  %1900 = icmp eq i32 %1899, 0
  %1901 = shl i32 %1898, 16
  %1902 = ashr exact i32 %1901, 16
  %1903 = sub nsw i32 0, %1902
  %1904 = select i1 %1900, i32 %1902, i32 %1903
  %1905 = icmp slt i32 %1904, 1
  %1906 = trunc i32 %1904 to i16
  %1907 = select i1 %1905, i16 0, i16 %1906
  store i16 %1907, ptr %1895, align 2, !tbaa !78
  br label %5630

1908:                                             ; preds = %1891
  switch i32 %1, label %2529 [
    i32 1, label %1909
    i32 0, label %2221
  ]

1909:                                             ; preds = %1908
  %1910 = getelementptr inbounds i32, ptr %3, i64 %19
  %1911 = load i32, ptr %1910, align 4, !tbaa !5
  %1912 = icmp eq i32 %1911, 0
  %1913 = icmp sgt i32 %5, 0
  br i1 %1912, label %1923, label %1914

1914:                                             ; preds = %1909
  br i1 %1913, label %1915, label %5630

1915:                                             ; preds = %1914
  %1916 = icmp sgt i32 %13, 1
  %1917 = icmp sgt i32 %13, 0
  %1918 = add i32 %13, -2
  %1919 = zext i32 %1918 to i64
  %1920 = zext i32 %13 to i64
  %1921 = add nuw i32 %5, 1
  %1922 = icmp eq i32 %13, 1
  br label %2076

1923:                                             ; preds = %1909
  br i1 %1913, label %1924, label %5630

1924:                                             ; preds = %1923
  %1925 = icmp sgt i32 %13, 1
  %1926 = icmp sgt i32 %13, 0
  %1927 = add i32 %13, -2
  %1928 = zext i32 %1927 to i64
  %1929 = zext i32 %13 to i64
  %1930 = add nuw i32 %5, 1
  %1931 = icmp eq i32 %13, 1
  br label %1932

1932:                                             ; preds = %1924, %2074
  %1933 = phi i16 [ 0, %1924 ], [ %2024, %2074 ]
  %1934 = phi i32 [ 0, %1924 ], [ %2026, %2074 ]
  %1935 = phi double [ 0.000000e+00, %1924 ], [ %2025, %2074 ]
  %1936 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1925, label %1937, label %2006

1937:                                             ; preds = %1932, %1996
  %1938 = phi i32 [ %2005, %1996 ], [ 0, %1932 ]
  %1939 = phi i64 [ %1947, %1996 ], [ %1929, %1932 ]
  %1940 = phi i64 [ %2004, %1996 ], [ %1928, %1932 ]
  %1941 = phi i32 [ %2002, %1996 ], [ %1936, %1932 ]
  %1942 = sub i32 %1927, %1938
  %1943 = tail call i32 @llvm.smin.i32(i32 %1942, i32 0)
  %1944 = sub i32 %1942, %1943
  %1945 = zext i32 %1944 to i64
  %1946 = add nuw nsw i64 %1945, 1
  %1947 = add nsw i64 %1939, -1
  %1948 = icmp ult i32 %1944, 31
  br i1 %1948, label %1984, label %1949

1949:                                             ; preds = %1937
  %1950 = and i64 %1946, 8589934560
  %1951 = sub i64 %1940, %1950
  br label %1952

1952:                                             ; preds = %1952, %1949
  %1953 = phi i64 [ 0, %1949 ], [ %1976, %1952 ]
  %1954 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1972, %1952 ]
  %1955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1973, %1952 ]
  %1956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1974, %1952 ]
  %1957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1949 ], [ %1975, %1952 ]
  %1958 = sub i64 %1940, %1953
  %1959 = getelementptr inbounds i32, ptr %9, i64 %1958
  %1960 = getelementptr inbounds i32, ptr %1959, i64 -7
  %1961 = load <8 x i32>, ptr %1960, align 4, !tbaa !5
  %1962 = shufflevector <8 x i32> %1961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1963 = getelementptr inbounds i32, ptr %1959, i64 -15
  %1964 = load <8 x i32>, ptr %1963, align 4, !tbaa !5
  %1965 = shufflevector <8 x i32> %1964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1966 = getelementptr inbounds i32, ptr %1959, i64 -23
  %1967 = load <8 x i32>, ptr %1966, align 4, !tbaa !5
  %1968 = shufflevector <8 x i32> %1967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1969 = getelementptr inbounds i32, ptr %1959, i64 -31
  %1970 = load <8 x i32>, ptr %1969, align 4, !tbaa !5
  %1971 = shufflevector <8 x i32> %1970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1972 = mul <8 x i32> %1962, %1954
  %1973 = mul <8 x i32> %1965, %1955
  %1974 = mul <8 x i32> %1968, %1956
  %1975 = mul <8 x i32> %1971, %1957
  %1976 = add nuw i64 %1953, 32
  %1977 = icmp eq i64 %1976, %1950
  br i1 %1977, label %1978, label %1952, !llvm.loop !644

1978:                                             ; preds = %1952
  %1979 = mul <8 x i32> %1973, %1972
  %1980 = mul <8 x i32> %1974, %1979
  %1981 = mul <8 x i32> %1975, %1980
  %1982 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1981)
  %1983 = icmp eq i64 %1946, %1950
  br i1 %1983, label %1996, label %1984

1984:                                             ; preds = %1937, %1978
  %1985 = phi i64 [ %1940, %1937 ], [ %1951, %1978 ]
  %1986 = phi i32 [ 1, %1937 ], [ %1982, %1978 ]
  br label %1987

1987:                                             ; preds = %1984, %1987
  %1988 = phi i64 [ %1993, %1987 ], [ %1985, %1984 ]
  %1989 = phi i32 [ %1992, %1987 ], [ %1986, %1984 ]
  %1990 = getelementptr inbounds i32, ptr %9, i64 %1988
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = mul nsw i32 %1991, %1989
  %1993 = add nsw i64 %1988, -1
  %1994 = trunc i64 %1988 to i32
  %1995 = icmp sgt i32 %1994, 0
  br i1 %1995, label %1987, label %1996, !llvm.loop !645

1996:                                             ; preds = %1987, %1978
  %1997 = phi i32 [ %1982, %1978 ], [ %1992, %1987 ]
  %1998 = and i64 %1947, 4294967295
  %1999 = getelementptr inbounds i32, ptr %6, i64 %1998
  %2000 = load i32, ptr %1999, align 4, !tbaa !5
  %2001 = mul nsw i32 %2000, %1997
  %2002 = add nsw i32 %2001, %1941
  %2003 = icmp sgt i64 %1939, 2
  %2004 = add nsw i64 %1940, -1
  %2005 = add i32 %1938, 1
  br i1 %2003, label %1937, label %2006, !llvm.loop !646

2006:                                             ; preds = %1996, %1932
  %2007 = phi i32 [ %1936, %1932 ], [ %2002, %1996 ]
  %2008 = sext i32 %2007 to i64
  %2009 = getelementptr inbounds double, ptr %2, i64 %2008
  %2010 = load double, ptr %2009, align 8, !tbaa !18
  %2011 = getelementptr inbounds i32, ptr %1893, i64 %2008
  %2012 = load i32, ptr %2011, align 4, !tbaa !5
  %2013 = sitofp i16 %1933 to double
  %2014 = shl i32 %2012, 16
  %2015 = ashr exact i32 %2014, 16
  %2016 = sitofp i32 %2015 to double
  %2017 = fmul fast double %2010, %2016
  %2018 = fcmp fast uge double %2017, 0.000000e+00
  %2019 = fneg fast double %2017
  %2020 = tail call fast double @llvm.fabs.f64(double %2017)
  %2021 = fcmp fast ole double %2020, %2013
  %2022 = select nnan ninf i1 %2018, double %2017, double %2019
  %2023 = select i1 %2021, double %2013, double %2022
  %2024 = fptosi double %2023 to i16
  %2025 = fadd fast double %2010, %1935
  %2026 = add nuw nsw i32 %1934, 1
  br i1 %1926, label %2027, label %2074

2027:                                             ; preds = %2006
  %2028 = load i32, ptr %4, align 4, !tbaa !5
  %2029 = load i32, ptr %12, align 4, !tbaa !5
  %2030 = add nsw i32 %2029, -1
  %2031 = icmp slt i32 %2028, %2030
  br i1 %2031, label %2051, label %2032

2032:                                             ; preds = %2027
  %2033 = icmp eq i32 %2028, %2030
  br i1 %2033, label %2034, label %2067

2034:                                             ; preds = %2032
  store i32 0, ptr %4, align 4, !tbaa !5
  %2035 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2035, ptr %6, align 4, !tbaa !5
  br i1 %1931, label %2074, label %2036

2036:                                             ; preds = %2034, %2061
  %2037 = phi i64 [ %2065, %2061 ], [ 1, %2034 ]
  %2038 = getelementptr inbounds i32, ptr %4, i64 %2037
  %2039 = load i32, ptr %2038, align 4, !tbaa !5
  %2040 = getelementptr inbounds i32, ptr %12, i64 %2037
  %2041 = load i32, ptr %2040, align 4, !tbaa !5
  %2042 = add nsw i32 %2041, -1
  %2043 = icmp slt i32 %2039, %2042
  br i1 %2043, label %2044, label %2059

2044:                                             ; preds = %2036
  br i1 %2031, label %2051, label %2045

2045:                                             ; preds = %2044
  %2046 = getelementptr inbounds i32, ptr %7, i64 %2037
  %2047 = load i32, ptr %2046, align 4, !tbaa !5
  %2048 = getelementptr inbounds i32, ptr %6, i64 %2037
  %2049 = load i32, ptr %2048, align 4, !tbaa !5
  %2050 = add nsw i32 %2049, %2047
  store i32 %2050, ptr %2048, align 4, !tbaa !5
  br label %2069

2051:                                             ; preds = %2027, %2044
  %2052 = phi i32 [ %2039, %2044 ], [ %2028, %2027 ]
  %2053 = phi ptr [ %2038, %2044 ], [ %4, %2027 ]
  %2054 = phi i64 [ %2037, %2044 ], [ 0, %2027 ]
  %2055 = add nsw i32 %2052, 1
  store i32 %2055, ptr %2053, align 4, !tbaa !5
  %2056 = getelementptr inbounds i32, ptr %7, i64 %2054
  %2057 = load i32, ptr %2056, align 4, !tbaa !5
  %2058 = getelementptr inbounds i32, ptr %6, i64 %2054
  br label %2069

2059:                                             ; preds = %2036
  %2060 = icmp eq i32 %2039, %2042
  br i1 %2060, label %2061, label %2067

2061:                                             ; preds = %2059
  store i32 0, ptr %2038, align 4, !tbaa !5
  %2062 = getelementptr inbounds i32, ptr %8, i64 %2037
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = getelementptr inbounds i32, ptr %6, i64 %2037
  store i32 %2063, ptr %2064, align 4, !tbaa !5
  %2065 = add nuw nsw i64 %2037, 1
  %2066 = icmp eq i64 %2065, %1929
  br i1 %2066, label %2074, label %2036, !llvm.loop !647

2067:                                             ; preds = %2032, %2059
  store i16 %2024, ptr %1895, align 2, !tbaa !78
  %2068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2069:                                             ; preds = %2045, %2051
  %2070 = phi ptr [ %2058, %2051 ], [ %2038, %2045 ]
  %2071 = phi i32 [ %2057, %2051 ], [ 1, %2045 ]
  %2072 = load i32, ptr %2070, align 4, !tbaa !5
  %2073 = add nsw i32 %2072, %2071
  store i32 %2073, ptr %2070, align 4, !tbaa !5
  br label %2074

2074:                                             ; preds = %2061, %2069, %2034, %2006
  %2075 = icmp eq i32 %2026, %5
  br i1 %2075, label %5621, label %1932, !llvm.loop !648

2076:                                             ; preds = %1915, %2219
  %2077 = phi i16 [ 0, %1915 ], [ %2167, %2219 ]
  %2078 = phi i32 [ 0, %1915 ], [ %2168, %2219 ]
  %2079 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1916, label %2080, label %2149

2080:                                             ; preds = %2076, %2139
  %2081 = phi i32 [ %2148, %2139 ], [ 0, %2076 ]
  %2082 = phi i64 [ %2090, %2139 ], [ %1920, %2076 ]
  %2083 = phi i64 [ %2147, %2139 ], [ %1919, %2076 ]
  %2084 = phi i32 [ %2145, %2139 ], [ %2079, %2076 ]
  %2085 = sub i32 %1918, %2081
  %2086 = tail call i32 @llvm.smin.i32(i32 %2085, i32 0)
  %2087 = sub i32 %2085, %2086
  %2088 = zext i32 %2087 to i64
  %2089 = add nuw nsw i64 %2088, 1
  %2090 = add nsw i64 %2082, -1
  %2091 = icmp ult i32 %2087, 31
  br i1 %2091, label %2127, label %2092

2092:                                             ; preds = %2080
  %2093 = and i64 %2089, 8589934560
  %2094 = sub i64 %2083, %2093
  br label %2095

2095:                                             ; preds = %2095, %2092
  %2096 = phi i64 [ 0, %2092 ], [ %2119, %2095 ]
  %2097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2115, %2095 ]
  %2098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2116, %2095 ]
  %2099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2117, %2095 ]
  %2100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2092 ], [ %2118, %2095 ]
  %2101 = sub i64 %2083, %2096
  %2102 = getelementptr inbounds i32, ptr %11, i64 %2101
  %2103 = getelementptr inbounds i32, ptr %2102, i64 -7
  %2104 = load <8 x i32>, ptr %2103, align 4, !tbaa !5
  %2105 = shufflevector <8 x i32> %2104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2106 = getelementptr inbounds i32, ptr %2102, i64 -15
  %2107 = load <8 x i32>, ptr %2106, align 4, !tbaa !5
  %2108 = shufflevector <8 x i32> %2107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2109 = getelementptr inbounds i32, ptr %2102, i64 -23
  %2110 = load <8 x i32>, ptr %2109, align 4, !tbaa !5
  %2111 = shufflevector <8 x i32> %2110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2112 = getelementptr inbounds i32, ptr %2102, i64 -31
  %2113 = load <8 x i32>, ptr %2112, align 4, !tbaa !5
  %2114 = shufflevector <8 x i32> %2113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2115 = mul <8 x i32> %2105, %2097
  %2116 = mul <8 x i32> %2108, %2098
  %2117 = mul <8 x i32> %2111, %2099
  %2118 = mul <8 x i32> %2114, %2100
  %2119 = add nuw i64 %2096, 32
  %2120 = icmp eq i64 %2119, %2093
  br i1 %2120, label %2121, label %2095, !llvm.loop !649

2121:                                             ; preds = %2095
  %2122 = mul <8 x i32> %2116, %2115
  %2123 = mul <8 x i32> %2117, %2122
  %2124 = mul <8 x i32> %2118, %2123
  %2125 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2124)
  %2126 = icmp eq i64 %2089, %2093
  br i1 %2126, label %2139, label %2127

2127:                                             ; preds = %2080, %2121
  %2128 = phi i64 [ %2083, %2080 ], [ %2094, %2121 ]
  %2129 = phi i32 [ 1, %2080 ], [ %2125, %2121 ]
  br label %2130

2130:                                             ; preds = %2127, %2130
  %2131 = phi i64 [ %2136, %2130 ], [ %2128, %2127 ]
  %2132 = phi i32 [ %2135, %2130 ], [ %2129, %2127 ]
  %2133 = getelementptr inbounds i32, ptr %11, i64 %2131
  %2134 = load i32, ptr %2133, align 4, !tbaa !5
  %2135 = mul nsw i32 %2134, %2132
  %2136 = add nsw i64 %2131, -1
  %2137 = trunc i64 %2131 to i32
  %2138 = icmp sgt i32 %2137, 0
  br i1 %2138, label %2130, label %2139, !llvm.loop !650

2139:                                             ; preds = %2130, %2121
  %2140 = phi i32 [ %2125, %2121 ], [ %2135, %2130 ]
  %2141 = and i64 %2090, 4294967295
  %2142 = getelementptr inbounds i32, ptr %6, i64 %2141
  %2143 = load i32, ptr %2142, align 4, !tbaa !5
  %2144 = mul nsw i32 %2143, %2140
  %2145 = add nsw i32 %2144, %2084
  %2146 = icmp sgt i64 %2082, 2
  %2147 = add nsw i64 %2083, -1
  %2148 = add i32 %2081, 1
  br i1 %2146, label %2080, label %2149, !llvm.loop !651

2149:                                             ; preds = %2139, %2076
  %2150 = phi i32 [ %2079, %2076 ], [ %2145, %2139 ]
  %2151 = icmp slt i32 %2150, %5
  br i1 %2151, label %2154, label %2152

2152:                                             ; preds = %2149
  %2153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

2154:                                             ; preds = %2149
  %2155 = sext i32 %2150 to i64
  %2156 = getelementptr inbounds i32, ptr %1893, i64 %2155
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = sitofp i16 %2077 to double
  %2159 = shl i32 %2157, 16
  %2160 = ashr exact i32 %2159, 16
  %2161 = sitofp i32 %2160 to double
  %2162 = icmp slt i32 %2159, 0
  %2163 = fneg fast double %2161
  %2164 = select i1 %2162, double %2163, double %2161
  %2165 = fcmp fast ole double %2164, %2158
  %2166 = select fast i1 %2165, double %2158, double %2164
  %2167 = fptosi double %2166 to i16
  store i16 %2167, ptr %1895, align 2, !tbaa !78
  %2168 = add nuw nsw i32 %2078, 1
  br i1 %1917, label %2169, label %2219

2169:                                             ; preds = %2154
  %2170 = load i32, ptr %4, align 4, !tbaa !5
  %2171 = load i32, ptr %12, align 4, !tbaa !5
  %2172 = add nsw i32 %2171, -1
  %2173 = icmp slt i32 %2170, %2172
  br i1 %2173, label %2196, label %2174

2174:                                             ; preds = %2169
  %2175 = icmp eq i32 %2170, %2172
  br i1 %2175, label %2176, label %2212

2176:                                             ; preds = %2174
  store i32 0, ptr %4, align 4, !tbaa !5
  %2177 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2177, ptr %6, align 4, !tbaa !5
  br i1 %1922, label %2219, label %2178

2178:                                             ; preds = %2176, %2206
  %2179 = phi i64 [ %2210, %2206 ], [ 1, %2176 ]
  %2180 = getelementptr inbounds i32, ptr %4, i64 %2179
  %2181 = load i32, ptr %2180, align 4, !tbaa !5
  %2182 = getelementptr inbounds i32, ptr %12, i64 %2179
  %2183 = load i32, ptr %2182, align 4, !tbaa !5
  %2184 = add nsw i32 %2183, -1
  %2185 = icmp slt i32 %2181, %2184
  br i1 %2185, label %2186, label %2204

2186:                                             ; preds = %2178
  br i1 %2173, label %2196, label %2187

2187:                                             ; preds = %2186
  %2188 = shl i64 %2179, 32
  %2189 = add i64 %2188, -4294967296
  %2190 = ashr exact i64 %2189, 32
  %2191 = getelementptr inbounds i32, ptr %7, i64 %2190
  %2192 = load i32, ptr %2191, align 4, !tbaa !5
  %2193 = getelementptr inbounds i32, ptr %6, i64 %2179
  %2194 = load i32, ptr %2193, align 4, !tbaa !5
  %2195 = add nsw i32 %2194, %2192
  store i32 %2195, ptr %2193, align 4, !tbaa !5
  br label %2214

2196:                                             ; preds = %2169, %2186
  %2197 = phi i32 [ %2181, %2186 ], [ %2170, %2169 ]
  %2198 = phi ptr [ %2180, %2186 ], [ %4, %2169 ]
  %2199 = phi i64 [ %2179, %2186 ], [ 0, %2169 ]
  %2200 = add nsw i32 %2197, 1
  store i32 %2200, ptr %2198, align 4, !tbaa !5
  %2201 = getelementptr inbounds i32, ptr %7, i64 %2199
  %2202 = load i32, ptr %2201, align 4, !tbaa !5
  %2203 = getelementptr inbounds i32, ptr %6, i64 %2199
  br label %2214

2204:                                             ; preds = %2178
  %2205 = icmp eq i32 %2181, %2184
  br i1 %2205, label %2206, label %2212

2206:                                             ; preds = %2204
  store i32 0, ptr %2180, align 4, !tbaa !5
  %2207 = getelementptr inbounds i32, ptr %8, i64 %2179
  %2208 = load i32, ptr %2207, align 4, !tbaa !5
  %2209 = getelementptr inbounds i32, ptr %6, i64 %2179
  store i32 %2208, ptr %2209, align 4, !tbaa !5
  %2210 = add nuw nsw i64 %2179, 1
  %2211 = icmp eq i64 %2210, %1920
  br i1 %2211, label %2219, label %2178, !llvm.loop !652

2212:                                             ; preds = %2174, %2204
  %2213 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2214:                                             ; preds = %2187, %2196
  %2215 = phi ptr [ %2203, %2196 ], [ %2180, %2187 ]
  %2216 = phi i32 [ %2202, %2196 ], [ 1, %2187 ]
  %2217 = load i32, ptr %2215, align 4, !tbaa !5
  %2218 = add nsw i32 %2217, %2216
  store i32 %2218, ptr %2215, align 4, !tbaa !5
  br label %2219

2219:                                             ; preds = %2206, %2214, %2176, %2154
  %2220 = icmp eq i32 %2168, %5
  br i1 %2220, label %5630, label %2076, !llvm.loop !653

2221:                                             ; preds = %1908
  %2222 = getelementptr inbounds i32, ptr %3, i64 %19
  %2223 = load i32, ptr %2222, align 4, !tbaa !5
  %2224 = icmp eq i32 %2223, 0
  %2225 = icmp sgt i32 %5, 0
  br i1 %2224, label %2235, label %2226

2226:                                             ; preds = %2221
  br i1 %2225, label %2227, label %5630

2227:                                             ; preds = %2226
  %2228 = icmp sgt i32 %13, 1
  %2229 = icmp sgt i32 %13, 0
  %2230 = add i32 %13, -2
  %2231 = zext i32 %2230 to i64
  %2232 = zext i32 %13 to i64
  %2233 = add nuw i32 %5, 1
  %2234 = icmp eq i32 %13, 1
  br label %2384

2235:                                             ; preds = %2221
  br i1 %2225, label %2236, label %5630

2236:                                             ; preds = %2235
  %2237 = icmp sgt i32 %13, 1
  %2238 = icmp sgt i32 %13, 0
  %2239 = add i32 %13, -2
  %2240 = zext i32 %2239 to i64
  %2241 = zext i32 %13 to i64
  %2242 = add nuw i32 %5, 1
  %2243 = icmp eq i32 %13, 1
  br label %2244

2244:                                             ; preds = %2236, %2382
  %2245 = phi i32 [ 0, %2236 ], [ %2331, %2382 ]
  %2246 = phi i32 [ 0, %2236 ], [ %2333, %2382 ]
  %2247 = phi double [ 0.000000e+00, %2236 ], [ %2332, %2382 ]
  %2248 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2237, label %2249, label %2318

2249:                                             ; preds = %2244, %2308
  %2250 = phi i32 [ %2317, %2308 ], [ 0, %2244 ]
  %2251 = phi i64 [ %2259, %2308 ], [ %2241, %2244 ]
  %2252 = phi i64 [ %2316, %2308 ], [ %2240, %2244 ]
  %2253 = phi i32 [ %2314, %2308 ], [ %2248, %2244 ]
  %2254 = sub i32 %2239, %2250
  %2255 = tail call i32 @llvm.smin.i32(i32 %2254, i32 0)
  %2256 = sub i32 %2254, %2255
  %2257 = zext i32 %2256 to i64
  %2258 = add nuw nsw i64 %2257, 1
  %2259 = add nsw i64 %2251, -1
  %2260 = icmp ult i32 %2256, 31
  br i1 %2260, label %2296, label %2261

2261:                                             ; preds = %2249
  %2262 = and i64 %2258, 8589934560
  %2263 = sub i64 %2252, %2262
  br label %2264

2264:                                             ; preds = %2264, %2261
  %2265 = phi i64 [ 0, %2261 ], [ %2288, %2264 ]
  %2266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2284, %2264 ]
  %2267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2285, %2264 ]
  %2268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2286, %2264 ]
  %2269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2261 ], [ %2287, %2264 ]
  %2270 = sub i64 %2252, %2265
  %2271 = getelementptr inbounds i32, ptr %9, i64 %2270
  %2272 = getelementptr inbounds i32, ptr %2271, i64 -7
  %2273 = load <8 x i32>, ptr %2272, align 4, !tbaa !5
  %2274 = shufflevector <8 x i32> %2273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2275 = getelementptr inbounds i32, ptr %2271, i64 -15
  %2276 = load <8 x i32>, ptr %2275, align 4, !tbaa !5
  %2277 = shufflevector <8 x i32> %2276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2278 = getelementptr inbounds i32, ptr %2271, i64 -23
  %2279 = load <8 x i32>, ptr %2278, align 4, !tbaa !5
  %2280 = shufflevector <8 x i32> %2279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2281 = getelementptr inbounds i32, ptr %2271, i64 -31
  %2282 = load <8 x i32>, ptr %2281, align 4, !tbaa !5
  %2283 = shufflevector <8 x i32> %2282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2284 = mul <8 x i32> %2274, %2266
  %2285 = mul <8 x i32> %2277, %2267
  %2286 = mul <8 x i32> %2280, %2268
  %2287 = mul <8 x i32> %2283, %2269
  %2288 = add nuw i64 %2265, 32
  %2289 = icmp eq i64 %2288, %2262
  br i1 %2289, label %2290, label %2264, !llvm.loop !654

2290:                                             ; preds = %2264
  %2291 = mul <8 x i32> %2285, %2284
  %2292 = mul <8 x i32> %2286, %2291
  %2293 = mul <8 x i32> %2287, %2292
  %2294 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2293)
  %2295 = icmp eq i64 %2258, %2262
  br i1 %2295, label %2308, label %2296

2296:                                             ; preds = %2249, %2290
  %2297 = phi i64 [ %2252, %2249 ], [ %2263, %2290 ]
  %2298 = phi i32 [ 1, %2249 ], [ %2294, %2290 ]
  br label %2299

2299:                                             ; preds = %2296, %2299
  %2300 = phi i64 [ %2305, %2299 ], [ %2297, %2296 ]
  %2301 = phi i32 [ %2304, %2299 ], [ %2298, %2296 ]
  %2302 = getelementptr inbounds i32, ptr %9, i64 %2300
  %2303 = load i32, ptr %2302, align 4, !tbaa !5
  %2304 = mul nsw i32 %2303, %2301
  %2305 = add nsw i64 %2300, -1
  %2306 = trunc i64 %2300 to i32
  %2307 = icmp sgt i32 %2306, 0
  br i1 %2307, label %2299, label %2308, !llvm.loop !655

2308:                                             ; preds = %2299, %2290
  %2309 = phi i32 [ %2294, %2290 ], [ %2304, %2299 ]
  %2310 = and i64 %2259, 4294967295
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2310
  %2312 = load i32, ptr %2311, align 4, !tbaa !5
  %2313 = mul nsw i32 %2312, %2309
  %2314 = add nsw i32 %2313, %2253
  %2315 = icmp sgt i64 %2251, 2
  %2316 = add nsw i64 %2252, -1
  %2317 = add i32 %2250, 1
  br i1 %2315, label %2249, label %2318, !llvm.loop !656

2318:                                             ; preds = %2308, %2244
  %2319 = phi i32 [ %2248, %2244 ], [ %2314, %2308 ]
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds i32, ptr %1893, i64 %2320
  %2322 = load i32, ptr %2321, align 4, !tbaa !5
  %2323 = shl i32 %2245, 16
  %2324 = ashr exact i32 %2323, 16
  %2325 = and i32 %2322, 32768
  %2326 = icmp eq i32 %2325, 0
  %2327 = shl i32 %2322, 16
  %2328 = ashr exact i32 %2327, 16
  %2329 = sub nsw i32 0, %2328
  %2330 = select i1 %2326, i32 %2328, i32 %2329
  %2331 = tail call i32 @llvm.smax.i32(i32 %2330, i32 %2324)
  %2332 = fadd fast double %2247, 1.000000e+00
  %2333 = add nuw nsw i32 %2246, 1
  br i1 %2238, label %2334, label %2382

2334:                                             ; preds = %2318
  %2335 = load i32, ptr %4, align 4, !tbaa !5
  %2336 = load i32, ptr %12, align 4, !tbaa !5
  %2337 = add nsw i32 %2336, -1
  %2338 = icmp slt i32 %2335, %2337
  br i1 %2338, label %2358, label %2339

2339:                                             ; preds = %2334
  %2340 = icmp eq i32 %2335, %2337
  br i1 %2340, label %2341, label %2374

2341:                                             ; preds = %2339
  store i32 0, ptr %4, align 4, !tbaa !5
  %2342 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2342, ptr %6, align 4, !tbaa !5
  br i1 %2243, label %2382, label %2343

2343:                                             ; preds = %2341, %2368
  %2344 = phi i64 [ %2372, %2368 ], [ 1, %2341 ]
  %2345 = getelementptr inbounds i32, ptr %4, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = getelementptr inbounds i32, ptr %12, i64 %2344
  %2348 = load i32, ptr %2347, align 4, !tbaa !5
  %2349 = add nsw i32 %2348, -1
  %2350 = icmp slt i32 %2346, %2349
  br i1 %2350, label %2351, label %2366

2351:                                             ; preds = %2343
  br i1 %2338, label %2358, label %2352

2352:                                             ; preds = %2351
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2344
  %2354 = load i32, ptr %2353, align 4, !tbaa !5
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2356 = load i32, ptr %2355, align 4, !tbaa !5
  %2357 = add nsw i32 %2356, %2354
  store i32 %2357, ptr %2355, align 4, !tbaa !5
  br label %2377

2358:                                             ; preds = %2334, %2351
  %2359 = phi i32 [ %2346, %2351 ], [ %2335, %2334 ]
  %2360 = phi ptr [ %2345, %2351 ], [ %4, %2334 ]
  %2361 = phi i64 [ %2344, %2351 ], [ 0, %2334 ]
  %2362 = add nsw i32 %2359, 1
  store i32 %2362, ptr %2360, align 4, !tbaa !5
  %2363 = getelementptr inbounds i32, ptr %7, i64 %2361
  %2364 = load i32, ptr %2363, align 4, !tbaa !5
  %2365 = getelementptr inbounds i32, ptr %6, i64 %2361
  br label %2377

2366:                                             ; preds = %2343
  %2367 = icmp eq i32 %2346, %2349
  br i1 %2367, label %2368, label %2374

2368:                                             ; preds = %2366
  store i32 0, ptr %2345, align 4, !tbaa !5
  %2369 = getelementptr inbounds i32, ptr %8, i64 %2344
  %2370 = load i32, ptr %2369, align 4, !tbaa !5
  %2371 = getelementptr inbounds i32, ptr %6, i64 %2344
  store i32 %2370, ptr %2371, align 4, !tbaa !5
  %2372 = add nuw nsw i64 %2344, 1
  %2373 = icmp eq i64 %2372, %2241
  br i1 %2373, label %2382, label %2343, !llvm.loop !657

2374:                                             ; preds = %2339, %2366
  %2375 = trunc i32 %2331 to i16
  store i16 %2375, ptr %1895, align 2, !tbaa !78
  %2376 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2377:                                             ; preds = %2352, %2358
  %2378 = phi ptr [ %2365, %2358 ], [ %2345, %2352 ]
  %2379 = phi i32 [ %2364, %2358 ], [ 1, %2352 ]
  %2380 = load i32, ptr %2378, align 4, !tbaa !5
  %2381 = add nsw i32 %2380, %2379
  store i32 %2381, ptr %2378, align 4, !tbaa !5
  br label %2382

2382:                                             ; preds = %2368, %2377, %2341, %2318
  %2383 = icmp eq i32 %2333, %5
  br i1 %2383, label %5622, label %2244, !llvm.loop !658

2384:                                             ; preds = %2227, %2527
  %2385 = phi i32 [ 0, %2227 ], [ %2474, %2527 ]
  %2386 = phi i32 [ 0, %2227 ], [ %2476, %2527 ]
  %2387 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2228, label %2388, label %2457

2388:                                             ; preds = %2384, %2447
  %2389 = phi i32 [ %2456, %2447 ], [ 0, %2384 ]
  %2390 = phi i64 [ %2398, %2447 ], [ %2232, %2384 ]
  %2391 = phi i64 [ %2455, %2447 ], [ %2231, %2384 ]
  %2392 = phi i32 [ %2453, %2447 ], [ %2387, %2384 ]
  %2393 = sub i32 %2230, %2389
  %2394 = tail call i32 @llvm.smin.i32(i32 %2393, i32 0)
  %2395 = sub i32 %2393, %2394
  %2396 = zext i32 %2395 to i64
  %2397 = add nuw nsw i64 %2396, 1
  %2398 = add nsw i64 %2390, -1
  %2399 = icmp ult i32 %2395, 31
  br i1 %2399, label %2435, label %2400

2400:                                             ; preds = %2388
  %2401 = and i64 %2397, 8589934560
  %2402 = sub i64 %2391, %2401
  br label %2403

2403:                                             ; preds = %2403, %2400
  %2404 = phi i64 [ 0, %2400 ], [ %2427, %2403 ]
  %2405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2423, %2403 ]
  %2406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2424, %2403 ]
  %2407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2425, %2403 ]
  %2408 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2400 ], [ %2426, %2403 ]
  %2409 = sub i64 %2391, %2404
  %2410 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2411 = getelementptr inbounds i32, ptr %2410, i64 -7
  %2412 = load <8 x i32>, ptr %2411, align 4, !tbaa !5
  %2413 = shufflevector <8 x i32> %2412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2414 = getelementptr inbounds i32, ptr %2410, i64 -15
  %2415 = load <8 x i32>, ptr %2414, align 4, !tbaa !5
  %2416 = shufflevector <8 x i32> %2415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2417 = getelementptr inbounds i32, ptr %2410, i64 -23
  %2418 = load <8 x i32>, ptr %2417, align 4, !tbaa !5
  %2419 = shufflevector <8 x i32> %2418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2420 = getelementptr inbounds i32, ptr %2410, i64 -31
  %2421 = load <8 x i32>, ptr %2420, align 4, !tbaa !5
  %2422 = shufflevector <8 x i32> %2421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2423 = mul <8 x i32> %2413, %2405
  %2424 = mul <8 x i32> %2416, %2406
  %2425 = mul <8 x i32> %2419, %2407
  %2426 = mul <8 x i32> %2422, %2408
  %2427 = add nuw i64 %2404, 32
  %2428 = icmp eq i64 %2427, %2401
  br i1 %2428, label %2429, label %2403, !llvm.loop !659

2429:                                             ; preds = %2403
  %2430 = mul <8 x i32> %2424, %2423
  %2431 = mul <8 x i32> %2425, %2430
  %2432 = mul <8 x i32> %2426, %2431
  %2433 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2432)
  %2434 = icmp eq i64 %2397, %2401
  br i1 %2434, label %2447, label %2435

2435:                                             ; preds = %2388, %2429
  %2436 = phi i64 [ %2391, %2388 ], [ %2402, %2429 ]
  %2437 = phi i32 [ 1, %2388 ], [ %2433, %2429 ]
  br label %2438

2438:                                             ; preds = %2435, %2438
  %2439 = phi i64 [ %2444, %2438 ], [ %2436, %2435 ]
  %2440 = phi i32 [ %2443, %2438 ], [ %2437, %2435 ]
  %2441 = getelementptr inbounds i32, ptr %11, i64 %2439
  %2442 = load i32, ptr %2441, align 4, !tbaa !5
  %2443 = mul nsw i32 %2442, %2440
  %2444 = add nsw i64 %2439, -1
  %2445 = trunc i64 %2439 to i32
  %2446 = icmp sgt i32 %2445, 0
  br i1 %2446, label %2438, label %2447, !llvm.loop !660

2447:                                             ; preds = %2438, %2429
  %2448 = phi i32 [ %2433, %2429 ], [ %2443, %2438 ]
  %2449 = and i64 %2398, 4294967295
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2449
  %2451 = load i32, ptr %2450, align 4, !tbaa !5
  %2452 = mul nsw i32 %2451, %2448
  %2453 = add nsw i32 %2452, %2392
  %2454 = icmp sgt i64 %2390, 2
  %2455 = add nsw i64 %2391, -1
  %2456 = add i32 %2389, 1
  br i1 %2454, label %2388, label %2457, !llvm.loop !661

2457:                                             ; preds = %2447, %2384
  %2458 = phi i32 [ %2387, %2384 ], [ %2453, %2447 ]
  %2459 = icmp slt i32 %2458, %5
  br i1 %2459, label %2462, label %2460

2460:                                             ; preds = %2457
  %2461 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

2462:                                             ; preds = %2457
  %2463 = sext i32 %2458 to i64
  %2464 = getelementptr inbounds i32, ptr %1893, i64 %2463
  %2465 = load i32, ptr %2464, align 4, !tbaa !5
  %2466 = shl i32 %2385, 16
  %2467 = ashr exact i32 %2466, 16
  %2468 = and i32 %2465, 32768
  %2469 = icmp eq i32 %2468, 0
  %2470 = shl i32 %2465, 16
  %2471 = ashr exact i32 %2470, 16
  %2472 = sub nsw i32 0, %2471
  %2473 = select i1 %2469, i32 %2471, i32 %2472
  %2474 = tail call i32 @llvm.smax.i32(i32 %2473, i32 %2467)
  %2475 = trunc i32 %2474 to i16
  store i16 %2475, ptr %1895, align 2, !tbaa !78
  %2476 = add nuw nsw i32 %2386, 1
  br i1 %2229, label %2477, label %2527

2477:                                             ; preds = %2462
  %2478 = load i32, ptr %4, align 4, !tbaa !5
  %2479 = load i32, ptr %12, align 4, !tbaa !5
  %2480 = add nsw i32 %2479, -1
  %2481 = icmp slt i32 %2478, %2480
  br i1 %2481, label %2504, label %2482

2482:                                             ; preds = %2477
  %2483 = icmp eq i32 %2478, %2480
  br i1 %2483, label %2484, label %2520

2484:                                             ; preds = %2482
  store i32 0, ptr %4, align 4, !tbaa !5
  %2485 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2485, ptr %6, align 4, !tbaa !5
  br i1 %2234, label %2527, label %2486

2486:                                             ; preds = %2484, %2514
  %2487 = phi i64 [ %2518, %2514 ], [ 1, %2484 ]
  %2488 = getelementptr inbounds i32, ptr %4, i64 %2487
  %2489 = load i32, ptr %2488, align 4, !tbaa !5
  %2490 = getelementptr inbounds i32, ptr %12, i64 %2487
  %2491 = load i32, ptr %2490, align 4, !tbaa !5
  %2492 = add nsw i32 %2491, -1
  %2493 = icmp slt i32 %2489, %2492
  br i1 %2493, label %2494, label %2512

2494:                                             ; preds = %2486
  br i1 %2481, label %2504, label %2495

2495:                                             ; preds = %2494
  %2496 = shl i64 %2487, 32
  %2497 = add i64 %2496, -4294967296
  %2498 = ashr exact i64 %2497, 32
  %2499 = getelementptr inbounds i32, ptr %7, i64 %2498
  %2500 = load i32, ptr %2499, align 4, !tbaa !5
  %2501 = getelementptr inbounds i32, ptr %6, i64 %2487
  %2502 = load i32, ptr %2501, align 4, !tbaa !5
  %2503 = add nsw i32 %2502, %2500
  store i32 %2503, ptr %2501, align 4, !tbaa !5
  br label %2522

2504:                                             ; preds = %2477, %2494
  %2505 = phi i32 [ %2489, %2494 ], [ %2478, %2477 ]
  %2506 = phi ptr [ %2488, %2494 ], [ %4, %2477 ]
  %2507 = phi i64 [ %2487, %2494 ], [ 0, %2477 ]
  %2508 = add nsw i32 %2505, 1
  store i32 %2508, ptr %2506, align 4, !tbaa !5
  %2509 = getelementptr inbounds i32, ptr %7, i64 %2507
  %2510 = load i32, ptr %2509, align 4, !tbaa !5
  %2511 = getelementptr inbounds i32, ptr %6, i64 %2507
  br label %2522

2512:                                             ; preds = %2486
  %2513 = icmp eq i32 %2489, %2492
  br i1 %2513, label %2514, label %2520

2514:                                             ; preds = %2512
  store i32 0, ptr %2488, align 4, !tbaa !5
  %2515 = getelementptr inbounds i32, ptr %8, i64 %2487
  %2516 = load i32, ptr %2515, align 4, !tbaa !5
  %2517 = getelementptr inbounds i32, ptr %6, i64 %2487
  store i32 %2516, ptr %2517, align 4, !tbaa !5
  %2518 = add nuw nsw i64 %2487, 1
  %2519 = icmp eq i64 %2518, %2232
  br i1 %2519, label %2527, label %2486, !llvm.loop !662

2520:                                             ; preds = %2482, %2512
  %2521 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2522:                                             ; preds = %2495, %2504
  %2523 = phi ptr [ %2511, %2504 ], [ %2488, %2495 ]
  %2524 = phi i32 [ %2510, %2504 ], [ 1, %2495 ]
  %2525 = load i32, ptr %2523, align 4, !tbaa !5
  %2526 = add nsw i32 %2525, %2524
  store i32 %2526, ptr %2523, align 4, !tbaa !5
  br label %2527

2527:                                             ; preds = %2514, %2522, %2484, %2462
  %2528 = icmp eq i32 %2476, %5
  br i1 %2528, label %5630, label %2384, !llvm.loop !663

2529:                                             ; preds = %1908
  %2530 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

2531:                                             ; preds = %18
  %2532 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2533 = load ptr, ptr %2532, align 8, !tbaa !9
  %2534 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2535 = load ptr, ptr %2534, align 8, !tbaa !9
  store i32 0, ptr %2535, align 4, !tbaa !5
  %2536 = icmp eq i32 %13, 0
  br i1 %2536, label %2537, label %2542

2537:                                             ; preds = %2531
  %2538 = load i32, ptr %2533, align 4, !tbaa !5
  %2539 = icmp eq i32 %2538, 0
  %2540 = tail call i32 @llvm.abs.i32(i32 %2538, i1 true)
  %2541 = select i1 %2539, i32 0, i32 %2540
  store i32 %2541, ptr %2535, align 4, !tbaa !5
  br label %5630

2542:                                             ; preds = %2531
  switch i32 %1, label %3143 [
    i32 1, label %2543
    i32 0, label %2851
  ]

2543:                                             ; preds = %2542
  %2544 = getelementptr inbounds i32, ptr %3, i64 %19
  %2545 = load i32, ptr %2544, align 4, !tbaa !5
  %2546 = icmp eq i32 %2545, 0
  %2547 = icmp sgt i32 %5, 0
  br i1 %2546, label %2557, label %2548

2548:                                             ; preds = %2543
  br i1 %2547, label %2549, label %5630

2549:                                             ; preds = %2548
  %2550 = icmp sgt i32 %13, 1
  %2551 = icmp sgt i32 %13, 0
  %2552 = add i32 %13, -2
  %2553 = zext i32 %2552 to i64
  %2554 = zext i32 %13 to i64
  %2555 = add nuw i32 %5, 1
  %2556 = icmp eq i32 %13, 1
  br label %2708

2557:                                             ; preds = %2543
  br i1 %2547, label %2558, label %5630

2558:                                             ; preds = %2557
  %2559 = icmp sgt i32 %13, 1
  %2560 = icmp sgt i32 %13, 0
  %2561 = add i32 %13, -2
  %2562 = zext i32 %2561 to i64
  %2563 = zext i32 %13 to i64
  %2564 = add nuw i32 %5, 1
  %2565 = icmp eq i32 %13, 1
  br label %2566

2566:                                             ; preds = %2558, %2706
  %2567 = phi i32 [ 0, %2558 ], [ %2658, %2706 ]
  %2568 = phi double [ 0.000000e+00, %2558 ], [ %2657, %2706 ]
  %2569 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2559, label %2570, label %2639

2570:                                             ; preds = %2566, %2629
  %2571 = phi i32 [ %2638, %2629 ], [ 0, %2566 ]
  %2572 = phi i64 [ %2580, %2629 ], [ %2563, %2566 ]
  %2573 = phi i64 [ %2637, %2629 ], [ %2562, %2566 ]
  %2574 = phi i32 [ %2635, %2629 ], [ %2569, %2566 ]
  %2575 = sub i32 %2561, %2571
  %2576 = tail call i32 @llvm.smin.i32(i32 %2575, i32 0)
  %2577 = sub i32 %2575, %2576
  %2578 = zext i32 %2577 to i64
  %2579 = add nuw nsw i64 %2578, 1
  %2580 = add nsw i64 %2572, -1
  %2581 = icmp ult i32 %2577, 31
  br i1 %2581, label %2617, label %2582

2582:                                             ; preds = %2570
  %2583 = and i64 %2579, 8589934560
  %2584 = sub i64 %2573, %2583
  br label %2585

2585:                                             ; preds = %2585, %2582
  %2586 = phi i64 [ 0, %2582 ], [ %2609, %2585 ]
  %2587 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2605, %2585 ]
  %2588 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2606, %2585 ]
  %2589 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2607, %2585 ]
  %2590 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2582 ], [ %2608, %2585 ]
  %2591 = sub i64 %2573, %2586
  %2592 = getelementptr inbounds i32, ptr %9, i64 %2591
  %2593 = getelementptr inbounds i32, ptr %2592, i64 -7
  %2594 = load <8 x i32>, ptr %2593, align 4, !tbaa !5
  %2595 = shufflevector <8 x i32> %2594, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2596 = getelementptr inbounds i32, ptr %2592, i64 -15
  %2597 = load <8 x i32>, ptr %2596, align 4, !tbaa !5
  %2598 = shufflevector <8 x i32> %2597, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2599 = getelementptr inbounds i32, ptr %2592, i64 -23
  %2600 = load <8 x i32>, ptr %2599, align 4, !tbaa !5
  %2601 = shufflevector <8 x i32> %2600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2602 = getelementptr inbounds i32, ptr %2592, i64 -31
  %2603 = load <8 x i32>, ptr %2602, align 4, !tbaa !5
  %2604 = shufflevector <8 x i32> %2603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2605 = mul <8 x i32> %2595, %2587
  %2606 = mul <8 x i32> %2598, %2588
  %2607 = mul <8 x i32> %2601, %2589
  %2608 = mul <8 x i32> %2604, %2590
  %2609 = add nuw i64 %2586, 32
  %2610 = icmp eq i64 %2609, %2583
  br i1 %2610, label %2611, label %2585, !llvm.loop !664

2611:                                             ; preds = %2585
  %2612 = mul <8 x i32> %2606, %2605
  %2613 = mul <8 x i32> %2607, %2612
  %2614 = mul <8 x i32> %2608, %2613
  %2615 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2614)
  %2616 = icmp eq i64 %2579, %2583
  br i1 %2616, label %2629, label %2617

2617:                                             ; preds = %2570, %2611
  %2618 = phi i64 [ %2573, %2570 ], [ %2584, %2611 ]
  %2619 = phi i32 [ 1, %2570 ], [ %2615, %2611 ]
  br label %2620

2620:                                             ; preds = %2617, %2620
  %2621 = phi i64 [ %2626, %2620 ], [ %2618, %2617 ]
  %2622 = phi i32 [ %2625, %2620 ], [ %2619, %2617 ]
  %2623 = getelementptr inbounds i32, ptr %9, i64 %2621
  %2624 = load i32, ptr %2623, align 4, !tbaa !5
  %2625 = mul nsw i32 %2624, %2622
  %2626 = add nsw i64 %2621, -1
  %2627 = trunc i64 %2621 to i32
  %2628 = icmp sgt i32 %2627, 0
  br i1 %2628, label %2620, label %2629, !llvm.loop !665

2629:                                             ; preds = %2620, %2611
  %2630 = phi i32 [ %2615, %2611 ], [ %2625, %2620 ]
  %2631 = and i64 %2580, 4294967295
  %2632 = getelementptr inbounds i32, ptr %6, i64 %2631
  %2633 = load i32, ptr %2632, align 4, !tbaa !5
  %2634 = mul nsw i32 %2633, %2630
  %2635 = add nsw i32 %2634, %2574
  %2636 = icmp sgt i64 %2572, 2
  %2637 = add nsw i64 %2573, -1
  %2638 = add i32 %2571, 1
  br i1 %2636, label %2570, label %2639, !llvm.loop !666

2639:                                             ; preds = %2629, %2566
  %2640 = phi i32 [ %2569, %2566 ], [ %2635, %2629 ]
  %2641 = sext i32 %2640 to i64
  %2642 = getelementptr inbounds double, ptr %2, i64 %2641
  %2643 = load double, ptr %2642, align 8, !tbaa !18
  %2644 = getelementptr inbounds i32, ptr %2533, i64 %2641
  %2645 = load i32, ptr %2644, align 4, !tbaa !5
  %2646 = load i32, ptr %2535, align 4, !tbaa !5
  %2647 = sitofp i32 %2646 to double
  %2648 = sitofp i32 %2645 to double
  %2649 = fmul fast double %2643, %2648
  %2650 = fcmp fast uge double %2649, 0.000000e+00
  %2651 = fneg fast double %2649
  %2652 = tail call fast double @llvm.fabs.f64(double %2649)
  %2653 = fcmp fast ole double %2652, %2647
  %2654 = select nnan ninf i1 %2650, double %2649, double %2651
  %2655 = select i1 %2653, double %2647, double %2654
  %2656 = fptosi double %2655 to i32
  store i32 %2656, ptr %2535, align 4, !tbaa !5
  %2657 = fadd fast double %2643, %2568
  %2658 = add nuw nsw i32 %2567, 1
  br i1 %2560, label %2659, label %2706

2659:                                             ; preds = %2639
  %2660 = load i32, ptr %4, align 4, !tbaa !5
  %2661 = load i32, ptr %12, align 4, !tbaa !5
  %2662 = add nsw i32 %2661, -1
  %2663 = icmp slt i32 %2660, %2662
  br i1 %2663, label %2683, label %2664

2664:                                             ; preds = %2659
  %2665 = icmp eq i32 %2660, %2662
  br i1 %2665, label %2666, label %2699

2666:                                             ; preds = %2664
  store i32 0, ptr %4, align 4, !tbaa !5
  %2667 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2667, ptr %6, align 4, !tbaa !5
  br i1 %2565, label %2706, label %2668

2668:                                             ; preds = %2666, %2693
  %2669 = phi i64 [ %2697, %2693 ], [ 1, %2666 ]
  %2670 = getelementptr inbounds i32, ptr %4, i64 %2669
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = getelementptr inbounds i32, ptr %12, i64 %2669
  %2673 = load i32, ptr %2672, align 4, !tbaa !5
  %2674 = add nsw i32 %2673, -1
  %2675 = icmp slt i32 %2671, %2674
  br i1 %2675, label %2676, label %2691

2676:                                             ; preds = %2668
  br i1 %2663, label %2683, label %2677

2677:                                             ; preds = %2676
  %2678 = getelementptr inbounds i32, ptr %7, i64 %2669
  %2679 = load i32, ptr %2678, align 4, !tbaa !5
  %2680 = getelementptr inbounds i32, ptr %6, i64 %2669
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = add nsw i32 %2681, %2679
  store i32 %2682, ptr %2680, align 4, !tbaa !5
  br label %2701

2683:                                             ; preds = %2659, %2676
  %2684 = phi i32 [ %2671, %2676 ], [ %2660, %2659 ]
  %2685 = phi ptr [ %2670, %2676 ], [ %4, %2659 ]
  %2686 = phi i64 [ %2669, %2676 ], [ 0, %2659 ]
  %2687 = add nsw i32 %2684, 1
  store i32 %2687, ptr %2685, align 4, !tbaa !5
  %2688 = getelementptr inbounds i32, ptr %7, i64 %2686
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = getelementptr inbounds i32, ptr %6, i64 %2686
  br label %2701

2691:                                             ; preds = %2668
  %2692 = icmp eq i32 %2671, %2674
  br i1 %2692, label %2693, label %2699

2693:                                             ; preds = %2691
  store i32 0, ptr %2670, align 4, !tbaa !5
  %2694 = getelementptr inbounds i32, ptr %8, i64 %2669
  %2695 = load i32, ptr %2694, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2669
  store i32 %2695, ptr %2696, align 4, !tbaa !5
  %2697 = add nuw nsw i64 %2669, 1
  %2698 = icmp eq i64 %2697, %2563
  br i1 %2698, label %2706, label %2668, !llvm.loop !667

2699:                                             ; preds = %2664, %2691
  %2700 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2701:                                             ; preds = %2677, %2683
  %2702 = phi ptr [ %2690, %2683 ], [ %2670, %2677 ]
  %2703 = phi i32 [ %2689, %2683 ], [ 1, %2677 ]
  %2704 = load i32, ptr %2702, align 4, !tbaa !5
  %2705 = add nsw i32 %2704, %2703
  store i32 %2705, ptr %2702, align 4, !tbaa !5
  br label %2706

2706:                                             ; preds = %2693, %2701, %2666, %2639
  %2707 = icmp eq i32 %2658, %5
  br i1 %2707, label %5630, label %2566, !llvm.loop !668

2708:                                             ; preds = %2549, %2849
  %2709 = phi i32 [ 0, %2549 ], [ %2798, %2849 ]
  %2710 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2550, label %2711, label %2780

2711:                                             ; preds = %2708, %2770
  %2712 = phi i32 [ %2779, %2770 ], [ 0, %2708 ]
  %2713 = phi i64 [ %2721, %2770 ], [ %2554, %2708 ]
  %2714 = phi i64 [ %2778, %2770 ], [ %2553, %2708 ]
  %2715 = phi i32 [ %2776, %2770 ], [ %2710, %2708 ]
  %2716 = sub i32 %2552, %2712
  %2717 = tail call i32 @llvm.smin.i32(i32 %2716, i32 0)
  %2718 = sub i32 %2716, %2717
  %2719 = zext i32 %2718 to i64
  %2720 = add nuw nsw i64 %2719, 1
  %2721 = add nsw i64 %2713, -1
  %2722 = icmp ult i32 %2718, 31
  br i1 %2722, label %2758, label %2723

2723:                                             ; preds = %2711
  %2724 = and i64 %2720, 8589934560
  %2725 = sub i64 %2714, %2724
  br label %2726

2726:                                             ; preds = %2726, %2723
  %2727 = phi i64 [ 0, %2723 ], [ %2750, %2726 ]
  %2728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2746, %2726 ]
  %2729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2747, %2726 ]
  %2730 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2748, %2726 ]
  %2731 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2723 ], [ %2749, %2726 ]
  %2732 = sub i64 %2714, %2727
  %2733 = getelementptr inbounds i32, ptr %11, i64 %2732
  %2734 = getelementptr inbounds i32, ptr %2733, i64 -7
  %2735 = load <8 x i32>, ptr %2734, align 4, !tbaa !5
  %2736 = shufflevector <8 x i32> %2735, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2737 = getelementptr inbounds i32, ptr %2733, i64 -15
  %2738 = load <8 x i32>, ptr %2737, align 4, !tbaa !5
  %2739 = shufflevector <8 x i32> %2738, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2740 = getelementptr inbounds i32, ptr %2733, i64 -23
  %2741 = load <8 x i32>, ptr %2740, align 4, !tbaa !5
  %2742 = shufflevector <8 x i32> %2741, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2743 = getelementptr inbounds i32, ptr %2733, i64 -31
  %2744 = load <8 x i32>, ptr %2743, align 4, !tbaa !5
  %2745 = shufflevector <8 x i32> %2744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2746 = mul <8 x i32> %2736, %2728
  %2747 = mul <8 x i32> %2739, %2729
  %2748 = mul <8 x i32> %2742, %2730
  %2749 = mul <8 x i32> %2745, %2731
  %2750 = add nuw i64 %2727, 32
  %2751 = icmp eq i64 %2750, %2724
  br i1 %2751, label %2752, label %2726, !llvm.loop !669

2752:                                             ; preds = %2726
  %2753 = mul <8 x i32> %2747, %2746
  %2754 = mul <8 x i32> %2748, %2753
  %2755 = mul <8 x i32> %2749, %2754
  %2756 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2755)
  %2757 = icmp eq i64 %2720, %2724
  br i1 %2757, label %2770, label %2758

2758:                                             ; preds = %2711, %2752
  %2759 = phi i64 [ %2714, %2711 ], [ %2725, %2752 ]
  %2760 = phi i32 [ 1, %2711 ], [ %2756, %2752 ]
  br label %2761

2761:                                             ; preds = %2758, %2761
  %2762 = phi i64 [ %2767, %2761 ], [ %2759, %2758 ]
  %2763 = phi i32 [ %2766, %2761 ], [ %2760, %2758 ]
  %2764 = getelementptr inbounds i32, ptr %11, i64 %2762
  %2765 = load i32, ptr %2764, align 4, !tbaa !5
  %2766 = mul nsw i32 %2765, %2763
  %2767 = add nsw i64 %2762, -1
  %2768 = trunc i64 %2762 to i32
  %2769 = icmp sgt i32 %2768, 0
  br i1 %2769, label %2761, label %2770, !llvm.loop !670

2770:                                             ; preds = %2761, %2752
  %2771 = phi i32 [ %2756, %2752 ], [ %2766, %2761 ]
  %2772 = and i64 %2721, 4294967295
  %2773 = getelementptr inbounds i32, ptr %6, i64 %2772
  %2774 = load i32, ptr %2773, align 4, !tbaa !5
  %2775 = mul nsw i32 %2774, %2771
  %2776 = add nsw i32 %2775, %2715
  %2777 = icmp sgt i64 %2713, 2
  %2778 = add nsw i64 %2714, -1
  %2779 = add i32 %2712, 1
  br i1 %2777, label %2711, label %2780, !llvm.loop !671

2780:                                             ; preds = %2770, %2708
  %2781 = phi i32 [ %2710, %2708 ], [ %2776, %2770 ]
  %2782 = icmp slt i32 %2781, %5
  br i1 %2782, label %2785, label %2783

2783:                                             ; preds = %2780
  %2784 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

2785:                                             ; preds = %2780
  %2786 = sext i32 %2781 to i64
  %2787 = getelementptr inbounds i32, ptr %2533, i64 %2786
  %2788 = load i32, ptr %2787, align 4, !tbaa !5
  %2789 = load i32, ptr %2535, align 4, !tbaa !5
  %2790 = sitofp i32 %2789 to double
  %2791 = sitofp i32 %2788 to double
  %2792 = icmp slt i32 %2788, 0
  %2793 = fneg fast double %2791
  %2794 = select i1 %2792, double %2793, double %2791
  %2795 = fcmp fast ole double %2794, %2790
  %2796 = select fast i1 %2795, double %2790, double %2794
  %2797 = fptosi double %2796 to i32
  store i32 %2797, ptr %2535, align 4, !tbaa !5
  %2798 = add nuw nsw i32 %2709, 1
  br i1 %2551, label %2799, label %2849

2799:                                             ; preds = %2785
  %2800 = load i32, ptr %4, align 4, !tbaa !5
  %2801 = load i32, ptr %12, align 4, !tbaa !5
  %2802 = add nsw i32 %2801, -1
  %2803 = icmp slt i32 %2800, %2802
  br i1 %2803, label %2826, label %2804

2804:                                             ; preds = %2799
  %2805 = icmp eq i32 %2800, %2802
  br i1 %2805, label %2806, label %2842

2806:                                             ; preds = %2804
  store i32 0, ptr %4, align 4, !tbaa !5
  %2807 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2807, ptr %6, align 4, !tbaa !5
  br i1 %2556, label %2849, label %2808

2808:                                             ; preds = %2806, %2836
  %2809 = phi i64 [ %2840, %2836 ], [ 1, %2806 ]
  %2810 = getelementptr inbounds i32, ptr %4, i64 %2809
  %2811 = load i32, ptr %2810, align 4, !tbaa !5
  %2812 = getelementptr inbounds i32, ptr %12, i64 %2809
  %2813 = load i32, ptr %2812, align 4, !tbaa !5
  %2814 = add nsw i32 %2813, -1
  %2815 = icmp slt i32 %2811, %2814
  br i1 %2815, label %2816, label %2834

2816:                                             ; preds = %2808
  br i1 %2803, label %2826, label %2817

2817:                                             ; preds = %2816
  %2818 = shl i64 %2809, 32
  %2819 = add i64 %2818, -4294967296
  %2820 = ashr exact i64 %2819, 32
  %2821 = getelementptr inbounds i32, ptr %7, i64 %2820
  %2822 = load i32, ptr %2821, align 4, !tbaa !5
  %2823 = getelementptr inbounds i32, ptr %6, i64 %2809
  %2824 = load i32, ptr %2823, align 4, !tbaa !5
  %2825 = add nsw i32 %2824, %2822
  store i32 %2825, ptr %2823, align 4, !tbaa !5
  br label %2844

2826:                                             ; preds = %2799, %2816
  %2827 = phi i32 [ %2811, %2816 ], [ %2800, %2799 ]
  %2828 = phi ptr [ %2810, %2816 ], [ %4, %2799 ]
  %2829 = phi i64 [ %2809, %2816 ], [ 0, %2799 ]
  %2830 = add nsw i32 %2827, 1
  store i32 %2830, ptr %2828, align 4, !tbaa !5
  %2831 = getelementptr inbounds i32, ptr %7, i64 %2829
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = getelementptr inbounds i32, ptr %6, i64 %2829
  br label %2844

2834:                                             ; preds = %2808
  %2835 = icmp eq i32 %2811, %2814
  br i1 %2835, label %2836, label %2842

2836:                                             ; preds = %2834
  store i32 0, ptr %2810, align 4, !tbaa !5
  %2837 = getelementptr inbounds i32, ptr %8, i64 %2809
  %2838 = load i32, ptr %2837, align 4, !tbaa !5
  %2839 = getelementptr inbounds i32, ptr %6, i64 %2809
  store i32 %2838, ptr %2839, align 4, !tbaa !5
  %2840 = add nuw nsw i64 %2809, 1
  %2841 = icmp eq i64 %2840, %2554
  br i1 %2841, label %2849, label %2808, !llvm.loop !672

2842:                                             ; preds = %2804, %2834
  %2843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2844:                                             ; preds = %2817, %2826
  %2845 = phi ptr [ %2833, %2826 ], [ %2810, %2817 ]
  %2846 = phi i32 [ %2832, %2826 ], [ 1, %2817 ]
  %2847 = load i32, ptr %2845, align 4, !tbaa !5
  %2848 = add nsw i32 %2847, %2846
  store i32 %2848, ptr %2845, align 4, !tbaa !5
  br label %2849

2849:                                             ; preds = %2836, %2844, %2806, %2785
  %2850 = icmp eq i32 %2798, %5
  br i1 %2850, label %5630, label %2708, !llvm.loop !673

2851:                                             ; preds = %2542
  %2852 = getelementptr inbounds i32, ptr %3, i64 %19
  %2853 = load i32, ptr %2852, align 4, !tbaa !5
  %2854 = icmp eq i32 %2853, 0
  %2855 = icmp sgt i32 %5, 0
  br i1 %2854, label %2865, label %2856

2856:                                             ; preds = %2851
  br i1 %2855, label %2857, label %5630

2857:                                             ; preds = %2856
  %2858 = icmp sgt i32 %13, 1
  %2859 = icmp sgt i32 %13, 0
  %2860 = add i32 %13, -2
  %2861 = zext i32 %2860 to i64
  %2862 = zext i32 %13 to i64
  %2863 = add nuw i32 %5, 1
  %2864 = icmp eq i32 %13, 1
  br label %3006

2865:                                             ; preds = %2851
  br i1 %2855, label %2866, label %5630

2866:                                             ; preds = %2865
  %2867 = icmp sgt i32 %13, 1
  %2868 = icmp sgt i32 %13, 0
  %2869 = add i32 %13, -2
  %2870 = zext i32 %2869 to i64
  %2871 = zext i32 %13 to i64
  %2872 = add nuw i32 %5, 1
  %2873 = icmp eq i32 %13, 1
  br label %2874

2874:                                             ; preds = %2866, %3004
  %2875 = phi i32 [ 0, %2866 ], [ %2956, %3004 ]
  %2876 = phi double [ 0.000000e+00, %2866 ], [ %2955, %3004 ]
  %2877 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2867, label %2878, label %2947

2878:                                             ; preds = %2874, %2937
  %2879 = phi i32 [ %2946, %2937 ], [ 0, %2874 ]
  %2880 = phi i64 [ %2888, %2937 ], [ %2871, %2874 ]
  %2881 = phi i64 [ %2945, %2937 ], [ %2870, %2874 ]
  %2882 = phi i32 [ %2943, %2937 ], [ %2877, %2874 ]
  %2883 = sub i32 %2869, %2879
  %2884 = tail call i32 @llvm.smin.i32(i32 %2883, i32 0)
  %2885 = sub i32 %2883, %2884
  %2886 = zext i32 %2885 to i64
  %2887 = add nuw nsw i64 %2886, 1
  %2888 = add nsw i64 %2880, -1
  %2889 = icmp ult i32 %2885, 31
  br i1 %2889, label %2925, label %2890

2890:                                             ; preds = %2878
  %2891 = and i64 %2887, 8589934560
  %2892 = sub i64 %2881, %2891
  br label %2893

2893:                                             ; preds = %2893, %2890
  %2894 = phi i64 [ 0, %2890 ], [ %2917, %2893 ]
  %2895 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2913, %2893 ]
  %2896 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2914, %2893 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2915, %2893 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2890 ], [ %2916, %2893 ]
  %2899 = sub i64 %2881, %2894
  %2900 = getelementptr inbounds i32, ptr %9, i64 %2899
  %2901 = getelementptr inbounds i32, ptr %2900, i64 -7
  %2902 = load <8 x i32>, ptr %2901, align 4, !tbaa !5
  %2903 = shufflevector <8 x i32> %2902, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2904 = getelementptr inbounds i32, ptr %2900, i64 -15
  %2905 = load <8 x i32>, ptr %2904, align 4, !tbaa !5
  %2906 = shufflevector <8 x i32> %2905, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2907 = getelementptr inbounds i32, ptr %2900, i64 -23
  %2908 = load <8 x i32>, ptr %2907, align 4, !tbaa !5
  %2909 = shufflevector <8 x i32> %2908, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2910 = getelementptr inbounds i32, ptr %2900, i64 -31
  %2911 = load <8 x i32>, ptr %2910, align 4, !tbaa !5
  %2912 = shufflevector <8 x i32> %2911, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2913 = mul <8 x i32> %2903, %2895
  %2914 = mul <8 x i32> %2906, %2896
  %2915 = mul <8 x i32> %2909, %2897
  %2916 = mul <8 x i32> %2912, %2898
  %2917 = add nuw i64 %2894, 32
  %2918 = icmp eq i64 %2917, %2891
  br i1 %2918, label %2919, label %2893, !llvm.loop !674

2919:                                             ; preds = %2893
  %2920 = mul <8 x i32> %2914, %2913
  %2921 = mul <8 x i32> %2915, %2920
  %2922 = mul <8 x i32> %2916, %2921
  %2923 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2922)
  %2924 = icmp eq i64 %2887, %2891
  br i1 %2924, label %2937, label %2925

2925:                                             ; preds = %2878, %2919
  %2926 = phi i64 [ %2881, %2878 ], [ %2892, %2919 ]
  %2927 = phi i32 [ 1, %2878 ], [ %2923, %2919 ]
  br label %2928

2928:                                             ; preds = %2925, %2928
  %2929 = phi i64 [ %2934, %2928 ], [ %2926, %2925 ]
  %2930 = phi i32 [ %2933, %2928 ], [ %2927, %2925 ]
  %2931 = getelementptr inbounds i32, ptr %9, i64 %2929
  %2932 = load i32, ptr %2931, align 4, !tbaa !5
  %2933 = mul nsw i32 %2932, %2930
  %2934 = add nsw i64 %2929, -1
  %2935 = trunc i64 %2929 to i32
  %2936 = icmp sgt i32 %2935, 0
  br i1 %2936, label %2928, label %2937, !llvm.loop !675

2937:                                             ; preds = %2928, %2919
  %2938 = phi i32 [ %2923, %2919 ], [ %2933, %2928 ]
  %2939 = and i64 %2888, 4294967295
  %2940 = getelementptr inbounds i32, ptr %6, i64 %2939
  %2941 = load i32, ptr %2940, align 4, !tbaa !5
  %2942 = mul nsw i32 %2941, %2938
  %2943 = add nsw i32 %2942, %2882
  %2944 = icmp sgt i64 %2880, 2
  %2945 = add nsw i64 %2881, -1
  %2946 = add i32 %2879, 1
  br i1 %2944, label %2878, label %2947, !llvm.loop !676

2947:                                             ; preds = %2937, %2874
  %2948 = phi i32 [ %2877, %2874 ], [ %2943, %2937 ]
  %2949 = sext i32 %2948 to i64
  %2950 = getelementptr inbounds i32, ptr %2533, i64 %2949
  %2951 = load i32, ptr %2950, align 4, !tbaa !5
  %2952 = load i32, ptr %2535, align 4, !tbaa !5
  %2953 = tail call i32 @llvm.abs.i32(i32 %2951, i1 true)
  %2954 = tail call i32 @llvm.smax.i32(i32 %2952, i32 %2953)
  store i32 %2954, ptr %2535, align 4, !tbaa !5
  %2955 = fadd fast double %2876, 1.000000e+00
  %2956 = add nuw nsw i32 %2875, 1
  br i1 %2868, label %2957, label %3004

2957:                                             ; preds = %2947
  %2958 = load i32, ptr %4, align 4, !tbaa !5
  %2959 = load i32, ptr %12, align 4, !tbaa !5
  %2960 = add nsw i32 %2959, -1
  %2961 = icmp slt i32 %2958, %2960
  br i1 %2961, label %2981, label %2962

2962:                                             ; preds = %2957
  %2963 = icmp eq i32 %2958, %2960
  br i1 %2963, label %2964, label %2997

2964:                                             ; preds = %2962
  store i32 0, ptr %4, align 4, !tbaa !5
  %2965 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2965, ptr %6, align 4, !tbaa !5
  br i1 %2873, label %3004, label %2966

2966:                                             ; preds = %2964, %2991
  %2967 = phi i64 [ %2995, %2991 ], [ 1, %2964 ]
  %2968 = getelementptr inbounds i32, ptr %4, i64 %2967
  %2969 = load i32, ptr %2968, align 4, !tbaa !5
  %2970 = getelementptr inbounds i32, ptr %12, i64 %2967
  %2971 = load i32, ptr %2970, align 4, !tbaa !5
  %2972 = add nsw i32 %2971, -1
  %2973 = icmp slt i32 %2969, %2972
  br i1 %2973, label %2974, label %2989

2974:                                             ; preds = %2966
  br i1 %2961, label %2981, label %2975

2975:                                             ; preds = %2974
  %2976 = getelementptr inbounds i32, ptr %7, i64 %2967
  %2977 = load i32, ptr %2976, align 4, !tbaa !5
  %2978 = getelementptr inbounds i32, ptr %6, i64 %2967
  %2979 = load i32, ptr %2978, align 4, !tbaa !5
  %2980 = add nsw i32 %2979, %2977
  store i32 %2980, ptr %2978, align 4, !tbaa !5
  br label %2999

2981:                                             ; preds = %2957, %2974
  %2982 = phi i32 [ %2969, %2974 ], [ %2958, %2957 ]
  %2983 = phi ptr [ %2968, %2974 ], [ %4, %2957 ]
  %2984 = phi i64 [ %2967, %2974 ], [ 0, %2957 ]
  %2985 = add nsw i32 %2982, 1
  store i32 %2985, ptr %2983, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %7, i64 %2984
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = getelementptr inbounds i32, ptr %6, i64 %2984
  br label %2999

2989:                                             ; preds = %2966
  %2990 = icmp eq i32 %2969, %2972
  br i1 %2990, label %2991, label %2997

2991:                                             ; preds = %2989
  store i32 0, ptr %2968, align 4, !tbaa !5
  %2992 = getelementptr inbounds i32, ptr %8, i64 %2967
  %2993 = load i32, ptr %2992, align 4, !tbaa !5
  %2994 = getelementptr inbounds i32, ptr %6, i64 %2967
  store i32 %2993, ptr %2994, align 4, !tbaa !5
  %2995 = add nuw nsw i64 %2967, 1
  %2996 = icmp eq i64 %2995, %2871
  br i1 %2996, label %3004, label %2966, !llvm.loop !677

2997:                                             ; preds = %2962, %2989
  %2998 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

2999:                                             ; preds = %2975, %2981
  %3000 = phi ptr [ %2988, %2981 ], [ %2968, %2975 ]
  %3001 = phi i32 [ %2987, %2981 ], [ 1, %2975 ]
  %3002 = load i32, ptr %3000, align 4, !tbaa !5
  %3003 = add nsw i32 %3002, %3001
  store i32 %3003, ptr %3000, align 4, !tbaa !5
  br label %3004

3004:                                             ; preds = %2991, %2999, %2964, %2947
  %3005 = icmp eq i32 %2956, %5
  br i1 %3005, label %5630, label %2874, !llvm.loop !678

3006:                                             ; preds = %2857, %3141
  %3007 = phi i32 [ 0, %2857 ], [ %3090, %3141 ]
  %3008 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2858, label %3009, label %3078

3009:                                             ; preds = %3006, %3068
  %3010 = phi i32 [ %3077, %3068 ], [ 0, %3006 ]
  %3011 = phi i64 [ %3019, %3068 ], [ %2862, %3006 ]
  %3012 = phi i64 [ %3076, %3068 ], [ %2861, %3006 ]
  %3013 = phi i32 [ %3074, %3068 ], [ %3008, %3006 ]
  %3014 = sub i32 %2860, %3010
  %3015 = tail call i32 @llvm.smin.i32(i32 %3014, i32 0)
  %3016 = sub i32 %3014, %3015
  %3017 = zext i32 %3016 to i64
  %3018 = add nuw nsw i64 %3017, 1
  %3019 = add nsw i64 %3011, -1
  %3020 = icmp ult i32 %3016, 31
  br i1 %3020, label %3056, label %3021

3021:                                             ; preds = %3009
  %3022 = and i64 %3018, 8589934560
  %3023 = sub i64 %3012, %3022
  br label %3024

3024:                                             ; preds = %3024, %3021
  %3025 = phi i64 [ 0, %3021 ], [ %3048, %3024 ]
  %3026 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3044, %3024 ]
  %3027 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3045, %3024 ]
  %3028 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3046, %3024 ]
  %3029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3021 ], [ %3047, %3024 ]
  %3030 = sub i64 %3012, %3025
  %3031 = getelementptr inbounds i32, ptr %11, i64 %3030
  %3032 = getelementptr inbounds i32, ptr %3031, i64 -7
  %3033 = load <8 x i32>, ptr %3032, align 4, !tbaa !5
  %3034 = shufflevector <8 x i32> %3033, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3035 = getelementptr inbounds i32, ptr %3031, i64 -15
  %3036 = load <8 x i32>, ptr %3035, align 4, !tbaa !5
  %3037 = shufflevector <8 x i32> %3036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3038 = getelementptr inbounds i32, ptr %3031, i64 -23
  %3039 = load <8 x i32>, ptr %3038, align 4, !tbaa !5
  %3040 = shufflevector <8 x i32> %3039, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3041 = getelementptr inbounds i32, ptr %3031, i64 -31
  %3042 = load <8 x i32>, ptr %3041, align 4, !tbaa !5
  %3043 = shufflevector <8 x i32> %3042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3044 = mul <8 x i32> %3034, %3026
  %3045 = mul <8 x i32> %3037, %3027
  %3046 = mul <8 x i32> %3040, %3028
  %3047 = mul <8 x i32> %3043, %3029
  %3048 = add nuw i64 %3025, 32
  %3049 = icmp eq i64 %3048, %3022
  br i1 %3049, label %3050, label %3024, !llvm.loop !679

3050:                                             ; preds = %3024
  %3051 = mul <8 x i32> %3045, %3044
  %3052 = mul <8 x i32> %3046, %3051
  %3053 = mul <8 x i32> %3047, %3052
  %3054 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3053)
  %3055 = icmp eq i64 %3018, %3022
  br i1 %3055, label %3068, label %3056

3056:                                             ; preds = %3009, %3050
  %3057 = phi i64 [ %3012, %3009 ], [ %3023, %3050 ]
  %3058 = phi i32 [ 1, %3009 ], [ %3054, %3050 ]
  br label %3059

3059:                                             ; preds = %3056, %3059
  %3060 = phi i64 [ %3065, %3059 ], [ %3057, %3056 ]
  %3061 = phi i32 [ %3064, %3059 ], [ %3058, %3056 ]
  %3062 = getelementptr inbounds i32, ptr %11, i64 %3060
  %3063 = load i32, ptr %3062, align 4, !tbaa !5
  %3064 = mul nsw i32 %3063, %3061
  %3065 = add nsw i64 %3060, -1
  %3066 = trunc i64 %3060 to i32
  %3067 = icmp sgt i32 %3066, 0
  br i1 %3067, label %3059, label %3068, !llvm.loop !680

3068:                                             ; preds = %3059, %3050
  %3069 = phi i32 [ %3054, %3050 ], [ %3064, %3059 ]
  %3070 = and i64 %3019, 4294967295
  %3071 = getelementptr inbounds i32, ptr %6, i64 %3070
  %3072 = load i32, ptr %3071, align 4, !tbaa !5
  %3073 = mul nsw i32 %3072, %3069
  %3074 = add nsw i32 %3073, %3013
  %3075 = icmp sgt i64 %3011, 2
  %3076 = add nsw i64 %3012, -1
  %3077 = add i32 %3010, 1
  br i1 %3075, label %3009, label %3078, !llvm.loop !681

3078:                                             ; preds = %3068, %3006
  %3079 = phi i32 [ %3008, %3006 ], [ %3074, %3068 ]
  %3080 = icmp slt i32 %3079, %5
  br i1 %3080, label %3083, label %3081

3081:                                             ; preds = %3078
  %3082 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

3083:                                             ; preds = %3078
  %3084 = sext i32 %3079 to i64
  %3085 = getelementptr inbounds i32, ptr %2533, i64 %3084
  %3086 = load i32, ptr %3085, align 4, !tbaa !5
  %3087 = load i32, ptr %2535, align 4, !tbaa !5
  %3088 = tail call i32 @llvm.abs.i32(i32 %3086, i1 true)
  %3089 = tail call i32 @llvm.smax.i32(i32 %3087, i32 %3088)
  store i32 %3089, ptr %2535, align 4, !tbaa !5
  %3090 = add nuw nsw i32 %3007, 1
  br i1 %2859, label %3091, label %3141

3091:                                             ; preds = %3083
  %3092 = load i32, ptr %4, align 4, !tbaa !5
  %3093 = load i32, ptr %12, align 4, !tbaa !5
  %3094 = add nsw i32 %3093, -1
  %3095 = icmp slt i32 %3092, %3094
  br i1 %3095, label %3118, label %3096

3096:                                             ; preds = %3091
  %3097 = icmp eq i32 %3092, %3094
  br i1 %3097, label %3098, label %3134

3098:                                             ; preds = %3096
  store i32 0, ptr %4, align 4, !tbaa !5
  %3099 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3099, ptr %6, align 4, !tbaa !5
  br i1 %2864, label %3141, label %3100

3100:                                             ; preds = %3098, %3128
  %3101 = phi i64 [ %3132, %3128 ], [ 1, %3098 ]
  %3102 = getelementptr inbounds i32, ptr %4, i64 %3101
  %3103 = load i32, ptr %3102, align 4, !tbaa !5
  %3104 = getelementptr inbounds i32, ptr %12, i64 %3101
  %3105 = load i32, ptr %3104, align 4, !tbaa !5
  %3106 = add nsw i32 %3105, -1
  %3107 = icmp slt i32 %3103, %3106
  br i1 %3107, label %3108, label %3126

3108:                                             ; preds = %3100
  br i1 %3095, label %3118, label %3109

3109:                                             ; preds = %3108
  %3110 = shl i64 %3101, 32
  %3111 = add i64 %3110, -4294967296
  %3112 = ashr exact i64 %3111, 32
  %3113 = getelementptr inbounds i32, ptr %7, i64 %3112
  %3114 = load i32, ptr %3113, align 4, !tbaa !5
  %3115 = getelementptr inbounds i32, ptr %6, i64 %3101
  %3116 = load i32, ptr %3115, align 4, !tbaa !5
  %3117 = add nsw i32 %3116, %3114
  store i32 %3117, ptr %3115, align 4, !tbaa !5
  br label %3136

3118:                                             ; preds = %3091, %3108
  %3119 = phi i32 [ %3103, %3108 ], [ %3092, %3091 ]
  %3120 = phi ptr [ %3102, %3108 ], [ %4, %3091 ]
  %3121 = phi i64 [ %3101, %3108 ], [ 0, %3091 ]
  %3122 = add nsw i32 %3119, 1
  store i32 %3122, ptr %3120, align 4, !tbaa !5
  %3123 = getelementptr inbounds i32, ptr %7, i64 %3121
  %3124 = load i32, ptr %3123, align 4, !tbaa !5
  %3125 = getelementptr inbounds i32, ptr %6, i64 %3121
  br label %3136

3126:                                             ; preds = %3100
  %3127 = icmp eq i32 %3103, %3106
  br i1 %3127, label %3128, label %3134

3128:                                             ; preds = %3126
  store i32 0, ptr %3102, align 4, !tbaa !5
  %3129 = getelementptr inbounds i32, ptr %8, i64 %3101
  %3130 = load i32, ptr %3129, align 4, !tbaa !5
  %3131 = getelementptr inbounds i32, ptr %6, i64 %3101
  store i32 %3130, ptr %3131, align 4, !tbaa !5
  %3132 = add nuw nsw i64 %3101, 1
  %3133 = icmp eq i64 %3132, %2862
  br i1 %3133, label %3141, label %3100, !llvm.loop !682

3134:                                             ; preds = %3096, %3126
  %3135 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3136:                                             ; preds = %3109, %3118
  %3137 = phi ptr [ %3125, %3118 ], [ %3102, %3109 ]
  %3138 = phi i32 [ %3124, %3118 ], [ 1, %3109 ]
  %3139 = load i32, ptr %3137, align 4, !tbaa !5
  %3140 = add nsw i32 %3139, %3138
  store i32 %3140, ptr %3137, align 4, !tbaa !5
  br label %3141

3141:                                             ; preds = %3128, %3136, %3098, %3083
  %3142 = icmp eq i32 %3090, %5
  br i1 %3142, label %5630, label %3006, !llvm.loop !683

3143:                                             ; preds = %2542
  %3144 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

3145:                                             ; preds = %18
  %3146 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3147 = load ptr, ptr %3146, align 8, !tbaa !9
  %3148 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3149 = load ptr, ptr %3148, align 8, !tbaa !9
  store i64 0, ptr %3149, align 8, !tbaa !120
  %3150 = icmp eq i32 %13, 0
  br i1 %3150, label %3151, label %3155

3151:                                             ; preds = %3145
  %3152 = load i32, ptr %3147, align 4, !tbaa !5
  %3153 = tail call i32 @llvm.abs.i32(i32 %3152, i1 false)
  %3154 = zext i32 %3153 to i64
  store i64 %3154, ptr %3149, align 8, !tbaa !120
  br label %5630

3155:                                             ; preds = %3145
  switch i32 %1, label %3758 [
    i32 1, label %3156
    i32 0, label %3464
  ]

3156:                                             ; preds = %3155
  %3157 = getelementptr inbounds i32, ptr %3, i64 %19
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = icmp eq i32 %3158, 0
  %3160 = icmp sgt i32 %5, 0
  br i1 %3159, label %3170, label %3161

3161:                                             ; preds = %3156
  br i1 %3160, label %3162, label %5630

3162:                                             ; preds = %3161
  %3163 = icmp sgt i32 %13, 1
  %3164 = icmp sgt i32 %13, 0
  %3165 = add i32 %13, -2
  %3166 = zext i32 %3165 to i64
  %3167 = zext i32 %13 to i64
  %3168 = add nuw i32 %5, 1
  %3169 = icmp eq i32 %13, 1
  br label %3321

3170:                                             ; preds = %3156
  br i1 %3160, label %3171, label %5630

3171:                                             ; preds = %3170
  %3172 = icmp sgt i32 %13, 1
  %3173 = icmp sgt i32 %13, 0
  %3174 = add i32 %13, -2
  %3175 = zext i32 %3174 to i64
  %3176 = zext i32 %13 to i64
  %3177 = add nuw i32 %5, 1
  %3178 = icmp eq i32 %13, 1
  br label %3179

3179:                                             ; preds = %3171, %3319
  %3180 = phi i64 [ 0, %3171 ], [ %3269, %3319 ]
  %3181 = phi i32 [ 0, %3171 ], [ %3271, %3319 ]
  %3182 = phi double [ 0.000000e+00, %3171 ], [ %3270, %3319 ]
  %3183 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3172, label %3184, label %3253

3184:                                             ; preds = %3179, %3243
  %3185 = phi i32 [ %3252, %3243 ], [ 0, %3179 ]
  %3186 = phi i64 [ %3194, %3243 ], [ %3176, %3179 ]
  %3187 = phi i64 [ %3251, %3243 ], [ %3175, %3179 ]
  %3188 = phi i32 [ %3249, %3243 ], [ %3183, %3179 ]
  %3189 = sub i32 %3174, %3185
  %3190 = tail call i32 @llvm.smin.i32(i32 %3189, i32 0)
  %3191 = sub i32 %3189, %3190
  %3192 = zext i32 %3191 to i64
  %3193 = add nuw nsw i64 %3192, 1
  %3194 = add nsw i64 %3186, -1
  %3195 = icmp ult i32 %3191, 31
  br i1 %3195, label %3231, label %3196

3196:                                             ; preds = %3184
  %3197 = and i64 %3193, 8589934560
  %3198 = sub i64 %3187, %3197
  br label %3199

3199:                                             ; preds = %3199, %3196
  %3200 = phi i64 [ 0, %3196 ], [ %3223, %3199 ]
  %3201 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3219, %3199 ]
  %3202 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3220, %3199 ]
  %3203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3221, %3199 ]
  %3204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3196 ], [ %3222, %3199 ]
  %3205 = sub i64 %3187, %3200
  %3206 = getelementptr inbounds i32, ptr %9, i64 %3205
  %3207 = getelementptr inbounds i32, ptr %3206, i64 -7
  %3208 = load <8 x i32>, ptr %3207, align 4, !tbaa !5
  %3209 = shufflevector <8 x i32> %3208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3210 = getelementptr inbounds i32, ptr %3206, i64 -15
  %3211 = load <8 x i32>, ptr %3210, align 4, !tbaa !5
  %3212 = shufflevector <8 x i32> %3211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3213 = getelementptr inbounds i32, ptr %3206, i64 -23
  %3214 = load <8 x i32>, ptr %3213, align 4, !tbaa !5
  %3215 = shufflevector <8 x i32> %3214, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3216 = getelementptr inbounds i32, ptr %3206, i64 -31
  %3217 = load <8 x i32>, ptr %3216, align 4, !tbaa !5
  %3218 = shufflevector <8 x i32> %3217, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3219 = mul <8 x i32> %3209, %3201
  %3220 = mul <8 x i32> %3212, %3202
  %3221 = mul <8 x i32> %3215, %3203
  %3222 = mul <8 x i32> %3218, %3204
  %3223 = add nuw i64 %3200, 32
  %3224 = icmp eq i64 %3223, %3197
  br i1 %3224, label %3225, label %3199, !llvm.loop !684

3225:                                             ; preds = %3199
  %3226 = mul <8 x i32> %3220, %3219
  %3227 = mul <8 x i32> %3221, %3226
  %3228 = mul <8 x i32> %3222, %3227
  %3229 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3228)
  %3230 = icmp eq i64 %3193, %3197
  br i1 %3230, label %3243, label %3231

3231:                                             ; preds = %3184, %3225
  %3232 = phi i64 [ %3187, %3184 ], [ %3198, %3225 ]
  %3233 = phi i32 [ 1, %3184 ], [ %3229, %3225 ]
  br label %3234

3234:                                             ; preds = %3231, %3234
  %3235 = phi i64 [ %3240, %3234 ], [ %3232, %3231 ]
  %3236 = phi i32 [ %3239, %3234 ], [ %3233, %3231 ]
  %3237 = getelementptr inbounds i32, ptr %9, i64 %3235
  %3238 = load i32, ptr %3237, align 4, !tbaa !5
  %3239 = mul nsw i32 %3238, %3236
  %3240 = add nsw i64 %3235, -1
  %3241 = trunc i64 %3235 to i32
  %3242 = icmp sgt i32 %3241, 0
  br i1 %3242, label %3234, label %3243, !llvm.loop !685

3243:                                             ; preds = %3234, %3225
  %3244 = phi i32 [ %3229, %3225 ], [ %3239, %3234 ]
  %3245 = and i64 %3194, 4294967295
  %3246 = getelementptr inbounds i32, ptr %6, i64 %3245
  %3247 = load i32, ptr %3246, align 4, !tbaa !5
  %3248 = mul nsw i32 %3247, %3244
  %3249 = add nsw i32 %3248, %3188
  %3250 = icmp sgt i64 %3186, 2
  %3251 = add nsw i64 %3187, -1
  %3252 = add i32 %3185, 1
  br i1 %3250, label %3184, label %3253, !llvm.loop !686

3253:                                             ; preds = %3243, %3179
  %3254 = phi i32 [ %3183, %3179 ], [ %3249, %3243 ]
  %3255 = sext i32 %3254 to i64
  %3256 = getelementptr inbounds double, ptr %2, i64 %3255
  %3257 = load double, ptr %3256, align 8, !tbaa !18
  %3258 = getelementptr inbounds i32, ptr %3147, i64 %3255
  %3259 = load i32, ptr %3258, align 4, !tbaa !5
  %3260 = sitofp i64 %3180 to double
  %3261 = sitofp i32 %3259 to double
  %3262 = fmul fast double %3257, %3261
  %3263 = fcmp fast uge double %3262, 0.000000e+00
  %3264 = fneg fast double %3262
  %3265 = tail call fast double @llvm.fabs.f64(double %3262)
  %3266 = fcmp fast ole double %3265, %3260
  %3267 = select nnan ninf i1 %3263, double %3262, double %3264
  %3268 = select i1 %3266, double %3260, double %3267
  %3269 = fptosi double %3268 to i64
  %3270 = fadd fast double %3257, %3182
  %3271 = add nuw nsw i32 %3181, 1
  br i1 %3173, label %3272, label %3319

3272:                                             ; preds = %3253
  %3273 = load i32, ptr %4, align 4, !tbaa !5
  %3274 = load i32, ptr %12, align 4, !tbaa !5
  %3275 = add nsw i32 %3274, -1
  %3276 = icmp slt i32 %3273, %3275
  br i1 %3276, label %3296, label %3277

3277:                                             ; preds = %3272
  %3278 = icmp eq i32 %3273, %3275
  br i1 %3278, label %3279, label %3312

3279:                                             ; preds = %3277
  store i32 0, ptr %4, align 4, !tbaa !5
  %3280 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3280, ptr %6, align 4, !tbaa !5
  br i1 %3178, label %3319, label %3281

3281:                                             ; preds = %3279, %3306
  %3282 = phi i64 [ %3310, %3306 ], [ 1, %3279 ]
  %3283 = getelementptr inbounds i32, ptr %4, i64 %3282
  %3284 = load i32, ptr %3283, align 4, !tbaa !5
  %3285 = getelementptr inbounds i32, ptr %12, i64 %3282
  %3286 = load i32, ptr %3285, align 4, !tbaa !5
  %3287 = add nsw i32 %3286, -1
  %3288 = icmp slt i32 %3284, %3287
  br i1 %3288, label %3289, label %3304

3289:                                             ; preds = %3281
  br i1 %3276, label %3296, label %3290

3290:                                             ; preds = %3289
  %3291 = getelementptr inbounds i32, ptr %7, i64 %3282
  %3292 = load i32, ptr %3291, align 4, !tbaa !5
  %3293 = getelementptr inbounds i32, ptr %6, i64 %3282
  %3294 = load i32, ptr %3293, align 4, !tbaa !5
  %3295 = add nsw i32 %3294, %3292
  store i32 %3295, ptr %3293, align 4, !tbaa !5
  br label %3314

3296:                                             ; preds = %3272, %3289
  %3297 = phi i32 [ %3284, %3289 ], [ %3273, %3272 ]
  %3298 = phi ptr [ %3283, %3289 ], [ %4, %3272 ]
  %3299 = phi i64 [ %3282, %3289 ], [ 0, %3272 ]
  %3300 = add nsw i32 %3297, 1
  store i32 %3300, ptr %3298, align 4, !tbaa !5
  %3301 = getelementptr inbounds i32, ptr %7, i64 %3299
  %3302 = load i32, ptr %3301, align 4, !tbaa !5
  %3303 = getelementptr inbounds i32, ptr %6, i64 %3299
  br label %3314

3304:                                             ; preds = %3281
  %3305 = icmp eq i32 %3284, %3287
  br i1 %3305, label %3306, label %3312

3306:                                             ; preds = %3304
  store i32 0, ptr %3283, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %8, i64 %3282
  %3308 = load i32, ptr %3307, align 4, !tbaa !5
  %3309 = getelementptr inbounds i32, ptr %6, i64 %3282
  store i32 %3308, ptr %3309, align 4, !tbaa !5
  %3310 = add nuw nsw i64 %3282, 1
  %3311 = icmp eq i64 %3310, %3176
  br i1 %3311, label %3319, label %3281, !llvm.loop !687

3312:                                             ; preds = %3277, %3304
  store i64 %3269, ptr %3149, align 8, !tbaa !120
  %3313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3314:                                             ; preds = %3290, %3296
  %3315 = phi ptr [ %3303, %3296 ], [ %3283, %3290 ]
  %3316 = phi i32 [ %3302, %3296 ], [ 1, %3290 ]
  %3317 = load i32, ptr %3315, align 4, !tbaa !5
  %3318 = add nsw i32 %3317, %3316
  store i32 %3318, ptr %3315, align 4, !tbaa !5
  br label %3319

3319:                                             ; preds = %3306, %3314, %3279, %3253
  %3320 = icmp eq i32 %3271, %5
  br i1 %3320, label %5624, label %3179, !llvm.loop !688

3321:                                             ; preds = %3162, %3462
  %3322 = phi i64 [ 0, %3162 ], [ %3410, %3462 ]
  %3323 = phi i32 [ 0, %3162 ], [ %3411, %3462 ]
  %3324 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3163, label %3325, label %3394

3325:                                             ; preds = %3321, %3384
  %3326 = phi i32 [ %3393, %3384 ], [ 0, %3321 ]
  %3327 = phi i64 [ %3335, %3384 ], [ %3167, %3321 ]
  %3328 = phi i64 [ %3392, %3384 ], [ %3166, %3321 ]
  %3329 = phi i32 [ %3390, %3384 ], [ %3324, %3321 ]
  %3330 = sub i32 %3165, %3326
  %3331 = tail call i32 @llvm.smin.i32(i32 %3330, i32 0)
  %3332 = sub i32 %3330, %3331
  %3333 = zext i32 %3332 to i64
  %3334 = add nuw nsw i64 %3333, 1
  %3335 = add nsw i64 %3327, -1
  %3336 = icmp ult i32 %3332, 31
  br i1 %3336, label %3372, label %3337

3337:                                             ; preds = %3325
  %3338 = and i64 %3334, 8589934560
  %3339 = sub i64 %3328, %3338
  br label %3340

3340:                                             ; preds = %3340, %3337
  %3341 = phi i64 [ 0, %3337 ], [ %3364, %3340 ]
  %3342 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3360, %3340 ]
  %3343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3361, %3340 ]
  %3344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3362, %3340 ]
  %3345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3337 ], [ %3363, %3340 ]
  %3346 = sub i64 %3328, %3341
  %3347 = getelementptr inbounds i32, ptr %11, i64 %3346
  %3348 = getelementptr inbounds i32, ptr %3347, i64 -7
  %3349 = load <8 x i32>, ptr %3348, align 4, !tbaa !5
  %3350 = shufflevector <8 x i32> %3349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3351 = getelementptr inbounds i32, ptr %3347, i64 -15
  %3352 = load <8 x i32>, ptr %3351, align 4, !tbaa !5
  %3353 = shufflevector <8 x i32> %3352, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3354 = getelementptr inbounds i32, ptr %3347, i64 -23
  %3355 = load <8 x i32>, ptr %3354, align 4, !tbaa !5
  %3356 = shufflevector <8 x i32> %3355, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3357 = getelementptr inbounds i32, ptr %3347, i64 -31
  %3358 = load <8 x i32>, ptr %3357, align 4, !tbaa !5
  %3359 = shufflevector <8 x i32> %3358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3360 = mul <8 x i32> %3350, %3342
  %3361 = mul <8 x i32> %3353, %3343
  %3362 = mul <8 x i32> %3356, %3344
  %3363 = mul <8 x i32> %3359, %3345
  %3364 = add nuw i64 %3341, 32
  %3365 = icmp eq i64 %3364, %3338
  br i1 %3365, label %3366, label %3340, !llvm.loop !689

3366:                                             ; preds = %3340
  %3367 = mul <8 x i32> %3361, %3360
  %3368 = mul <8 x i32> %3362, %3367
  %3369 = mul <8 x i32> %3363, %3368
  %3370 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3369)
  %3371 = icmp eq i64 %3334, %3338
  br i1 %3371, label %3384, label %3372

3372:                                             ; preds = %3325, %3366
  %3373 = phi i64 [ %3328, %3325 ], [ %3339, %3366 ]
  %3374 = phi i32 [ 1, %3325 ], [ %3370, %3366 ]
  br label %3375

3375:                                             ; preds = %3372, %3375
  %3376 = phi i64 [ %3381, %3375 ], [ %3373, %3372 ]
  %3377 = phi i32 [ %3380, %3375 ], [ %3374, %3372 ]
  %3378 = getelementptr inbounds i32, ptr %11, i64 %3376
  %3379 = load i32, ptr %3378, align 4, !tbaa !5
  %3380 = mul nsw i32 %3379, %3377
  %3381 = add nsw i64 %3376, -1
  %3382 = trunc i64 %3376 to i32
  %3383 = icmp sgt i32 %3382, 0
  br i1 %3383, label %3375, label %3384, !llvm.loop !690

3384:                                             ; preds = %3375, %3366
  %3385 = phi i32 [ %3370, %3366 ], [ %3380, %3375 ]
  %3386 = and i64 %3335, 4294967295
  %3387 = getelementptr inbounds i32, ptr %6, i64 %3386
  %3388 = load i32, ptr %3387, align 4, !tbaa !5
  %3389 = mul nsw i32 %3388, %3385
  %3390 = add nsw i32 %3389, %3329
  %3391 = icmp sgt i64 %3327, 2
  %3392 = add nsw i64 %3328, -1
  %3393 = add i32 %3326, 1
  br i1 %3391, label %3325, label %3394, !llvm.loop !691

3394:                                             ; preds = %3384, %3321
  %3395 = phi i32 [ %3324, %3321 ], [ %3390, %3384 ]
  %3396 = icmp slt i32 %3395, %5
  br i1 %3396, label %3399, label %3397

3397:                                             ; preds = %3394
  %3398 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

3399:                                             ; preds = %3394
  %3400 = sext i32 %3395 to i64
  %3401 = getelementptr inbounds i32, ptr %3147, i64 %3400
  %3402 = load i32, ptr %3401, align 4, !tbaa !5
  %3403 = sitofp i64 %3322 to double
  %3404 = sitofp i32 %3402 to double
  %3405 = icmp slt i32 %3402, 0
  %3406 = fneg fast double %3404
  %3407 = select i1 %3405, double %3406, double %3404
  %3408 = fcmp fast ole double %3407, %3403
  %3409 = select fast i1 %3408, double %3403, double %3407
  %3410 = fptosi double %3409 to i64
  store i64 %3410, ptr %3149, align 8, !tbaa !120
  %3411 = add nuw nsw i32 %3323, 1
  br i1 %3164, label %3412, label %3462

3412:                                             ; preds = %3399
  %3413 = load i32, ptr %4, align 4, !tbaa !5
  %3414 = load i32, ptr %12, align 4, !tbaa !5
  %3415 = add nsw i32 %3414, -1
  %3416 = icmp slt i32 %3413, %3415
  br i1 %3416, label %3439, label %3417

3417:                                             ; preds = %3412
  %3418 = icmp eq i32 %3413, %3415
  br i1 %3418, label %3419, label %3455

3419:                                             ; preds = %3417
  store i32 0, ptr %4, align 4, !tbaa !5
  %3420 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3420, ptr %6, align 4, !tbaa !5
  br i1 %3169, label %3462, label %3421

3421:                                             ; preds = %3419, %3449
  %3422 = phi i64 [ %3453, %3449 ], [ 1, %3419 ]
  %3423 = getelementptr inbounds i32, ptr %4, i64 %3422
  %3424 = load i32, ptr %3423, align 4, !tbaa !5
  %3425 = getelementptr inbounds i32, ptr %12, i64 %3422
  %3426 = load i32, ptr %3425, align 4, !tbaa !5
  %3427 = add nsw i32 %3426, -1
  %3428 = icmp slt i32 %3424, %3427
  br i1 %3428, label %3429, label %3447

3429:                                             ; preds = %3421
  br i1 %3416, label %3439, label %3430

3430:                                             ; preds = %3429
  %3431 = shl i64 %3422, 32
  %3432 = add i64 %3431, -4294967296
  %3433 = ashr exact i64 %3432, 32
  %3434 = getelementptr inbounds i32, ptr %7, i64 %3433
  %3435 = load i32, ptr %3434, align 4, !tbaa !5
  %3436 = getelementptr inbounds i32, ptr %6, i64 %3422
  %3437 = load i32, ptr %3436, align 4, !tbaa !5
  %3438 = add nsw i32 %3437, %3435
  store i32 %3438, ptr %3436, align 4, !tbaa !5
  br label %3457

3439:                                             ; preds = %3412, %3429
  %3440 = phi i32 [ %3424, %3429 ], [ %3413, %3412 ]
  %3441 = phi ptr [ %3423, %3429 ], [ %4, %3412 ]
  %3442 = phi i64 [ %3422, %3429 ], [ 0, %3412 ]
  %3443 = add nsw i32 %3440, 1
  store i32 %3443, ptr %3441, align 4, !tbaa !5
  %3444 = getelementptr inbounds i32, ptr %7, i64 %3442
  %3445 = load i32, ptr %3444, align 4, !tbaa !5
  %3446 = getelementptr inbounds i32, ptr %6, i64 %3442
  br label %3457

3447:                                             ; preds = %3421
  %3448 = icmp eq i32 %3424, %3427
  br i1 %3448, label %3449, label %3455

3449:                                             ; preds = %3447
  store i32 0, ptr %3423, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %8, i64 %3422
  %3451 = load i32, ptr %3450, align 4, !tbaa !5
  %3452 = getelementptr inbounds i32, ptr %6, i64 %3422
  store i32 %3451, ptr %3452, align 4, !tbaa !5
  %3453 = add nuw nsw i64 %3422, 1
  %3454 = icmp eq i64 %3453, %3167
  br i1 %3454, label %3462, label %3421, !llvm.loop !692

3455:                                             ; preds = %3417, %3447
  %3456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3457:                                             ; preds = %3430, %3439
  %3458 = phi ptr [ %3446, %3439 ], [ %3423, %3430 ]
  %3459 = phi i32 [ %3445, %3439 ], [ 1, %3430 ]
  %3460 = load i32, ptr %3458, align 4, !tbaa !5
  %3461 = add nsw i32 %3460, %3459
  store i32 %3461, ptr %3458, align 4, !tbaa !5
  br label %3462

3462:                                             ; preds = %3449, %3457, %3419, %3399
  %3463 = icmp eq i32 %3411, %5
  br i1 %3463, label %5630, label %3321, !llvm.loop !693

3464:                                             ; preds = %3155
  %3465 = getelementptr inbounds i32, ptr %3, i64 %19
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = icmp eq i32 %3466, 0
  %3468 = icmp sgt i32 %5, 0
  br i1 %3467, label %3478, label %3469

3469:                                             ; preds = %3464
  br i1 %3468, label %3470, label %5630

3470:                                             ; preds = %3469
  %3471 = icmp sgt i32 %13, 1
  %3472 = icmp sgt i32 %13, 0
  %3473 = add i32 %13, -2
  %3474 = zext i32 %3473 to i64
  %3475 = zext i32 %13 to i64
  %3476 = add nuw i32 %5, 1
  %3477 = icmp eq i32 %13, 1
  br label %3620

3478:                                             ; preds = %3464
  br i1 %3468, label %3479, label %5630

3479:                                             ; preds = %3478
  %3480 = icmp sgt i32 %13, 1
  %3481 = icmp sgt i32 %13, 0
  %3482 = add i32 %13, -2
  %3483 = zext i32 %3482 to i64
  %3484 = zext i32 %13 to i64
  %3485 = add nuw i32 %5, 1
  %3486 = icmp eq i32 %13, 1
  br label %3487

3487:                                             ; preds = %3479, %3618
  %3488 = phi i64 [ 0, %3479 ], [ %3568, %3618 ]
  %3489 = phi i32 [ 0, %3479 ], [ %3570, %3618 ]
  %3490 = phi double [ 0.000000e+00, %3479 ], [ %3569, %3618 ]
  %3491 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3480, label %3492, label %3561

3492:                                             ; preds = %3487, %3551
  %3493 = phi i32 [ %3560, %3551 ], [ 0, %3487 ]
  %3494 = phi i64 [ %3502, %3551 ], [ %3484, %3487 ]
  %3495 = phi i64 [ %3559, %3551 ], [ %3483, %3487 ]
  %3496 = phi i32 [ %3557, %3551 ], [ %3491, %3487 ]
  %3497 = sub i32 %3482, %3493
  %3498 = tail call i32 @llvm.smin.i32(i32 %3497, i32 0)
  %3499 = sub i32 %3497, %3498
  %3500 = zext i32 %3499 to i64
  %3501 = add nuw nsw i64 %3500, 1
  %3502 = add nsw i64 %3494, -1
  %3503 = icmp ult i32 %3499, 31
  br i1 %3503, label %3539, label %3504

3504:                                             ; preds = %3492
  %3505 = and i64 %3501, 8589934560
  %3506 = sub i64 %3495, %3505
  br label %3507

3507:                                             ; preds = %3507, %3504
  %3508 = phi i64 [ 0, %3504 ], [ %3531, %3507 ]
  %3509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3527, %3507 ]
  %3510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3528, %3507 ]
  %3511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3529, %3507 ]
  %3512 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3504 ], [ %3530, %3507 ]
  %3513 = sub i64 %3495, %3508
  %3514 = getelementptr inbounds i32, ptr %9, i64 %3513
  %3515 = getelementptr inbounds i32, ptr %3514, i64 -7
  %3516 = load <8 x i32>, ptr %3515, align 4, !tbaa !5
  %3517 = shufflevector <8 x i32> %3516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3518 = getelementptr inbounds i32, ptr %3514, i64 -15
  %3519 = load <8 x i32>, ptr %3518, align 4, !tbaa !5
  %3520 = shufflevector <8 x i32> %3519, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3521 = getelementptr inbounds i32, ptr %3514, i64 -23
  %3522 = load <8 x i32>, ptr %3521, align 4, !tbaa !5
  %3523 = shufflevector <8 x i32> %3522, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3524 = getelementptr inbounds i32, ptr %3514, i64 -31
  %3525 = load <8 x i32>, ptr %3524, align 4, !tbaa !5
  %3526 = shufflevector <8 x i32> %3525, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3527 = mul <8 x i32> %3517, %3509
  %3528 = mul <8 x i32> %3520, %3510
  %3529 = mul <8 x i32> %3523, %3511
  %3530 = mul <8 x i32> %3526, %3512
  %3531 = add nuw i64 %3508, 32
  %3532 = icmp eq i64 %3531, %3505
  br i1 %3532, label %3533, label %3507, !llvm.loop !694

3533:                                             ; preds = %3507
  %3534 = mul <8 x i32> %3528, %3527
  %3535 = mul <8 x i32> %3529, %3534
  %3536 = mul <8 x i32> %3530, %3535
  %3537 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3536)
  %3538 = icmp eq i64 %3501, %3505
  br i1 %3538, label %3551, label %3539

3539:                                             ; preds = %3492, %3533
  %3540 = phi i64 [ %3495, %3492 ], [ %3506, %3533 ]
  %3541 = phi i32 [ 1, %3492 ], [ %3537, %3533 ]
  br label %3542

3542:                                             ; preds = %3539, %3542
  %3543 = phi i64 [ %3548, %3542 ], [ %3540, %3539 ]
  %3544 = phi i32 [ %3547, %3542 ], [ %3541, %3539 ]
  %3545 = getelementptr inbounds i32, ptr %9, i64 %3543
  %3546 = load i32, ptr %3545, align 4, !tbaa !5
  %3547 = mul nsw i32 %3546, %3544
  %3548 = add nsw i64 %3543, -1
  %3549 = trunc i64 %3543 to i32
  %3550 = icmp sgt i32 %3549, 0
  br i1 %3550, label %3542, label %3551, !llvm.loop !695

3551:                                             ; preds = %3542, %3533
  %3552 = phi i32 [ %3537, %3533 ], [ %3547, %3542 ]
  %3553 = and i64 %3502, 4294967295
  %3554 = getelementptr inbounds i32, ptr %6, i64 %3553
  %3555 = load i32, ptr %3554, align 4, !tbaa !5
  %3556 = mul nsw i32 %3555, %3552
  %3557 = add nsw i32 %3556, %3496
  %3558 = icmp sgt i64 %3494, 2
  %3559 = add nsw i64 %3495, -1
  %3560 = add i32 %3493, 1
  br i1 %3558, label %3492, label %3561, !llvm.loop !696

3561:                                             ; preds = %3551, %3487
  %3562 = phi i32 [ %3491, %3487 ], [ %3557, %3551 ]
  %3563 = sext i32 %3562 to i64
  %3564 = getelementptr inbounds i32, ptr %3147, i64 %3563
  %3565 = load i32, ptr %3564, align 4, !tbaa !5
  %3566 = tail call i32 @llvm.abs.i32(i32 %3565, i1 false)
  %3567 = zext i32 %3566 to i64
  %3568 = tail call i64 @llvm.smax.i64(i64 %3488, i64 %3567)
  %3569 = fadd fast double %3490, 1.000000e+00
  %3570 = add nuw nsw i32 %3489, 1
  br i1 %3481, label %3571, label %3618

3571:                                             ; preds = %3561
  %3572 = load i32, ptr %4, align 4, !tbaa !5
  %3573 = load i32, ptr %12, align 4, !tbaa !5
  %3574 = add nsw i32 %3573, -1
  %3575 = icmp slt i32 %3572, %3574
  br i1 %3575, label %3595, label %3576

3576:                                             ; preds = %3571
  %3577 = icmp eq i32 %3572, %3574
  br i1 %3577, label %3578, label %3611

3578:                                             ; preds = %3576
  store i32 0, ptr %4, align 4, !tbaa !5
  %3579 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3579, ptr %6, align 4, !tbaa !5
  br i1 %3486, label %3618, label %3580

3580:                                             ; preds = %3578, %3605
  %3581 = phi i64 [ %3609, %3605 ], [ 1, %3578 ]
  %3582 = getelementptr inbounds i32, ptr %4, i64 %3581
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = getelementptr inbounds i32, ptr %12, i64 %3581
  %3585 = load i32, ptr %3584, align 4, !tbaa !5
  %3586 = add nsw i32 %3585, -1
  %3587 = icmp slt i32 %3583, %3586
  br i1 %3587, label %3588, label %3603

3588:                                             ; preds = %3580
  br i1 %3575, label %3595, label %3589

3589:                                             ; preds = %3588
  %3590 = getelementptr inbounds i32, ptr %7, i64 %3581
  %3591 = load i32, ptr %3590, align 4, !tbaa !5
  %3592 = getelementptr inbounds i32, ptr %6, i64 %3581
  %3593 = load i32, ptr %3592, align 4, !tbaa !5
  %3594 = add nsw i32 %3593, %3591
  store i32 %3594, ptr %3592, align 4, !tbaa !5
  br label %3613

3595:                                             ; preds = %3571, %3588
  %3596 = phi i32 [ %3583, %3588 ], [ %3572, %3571 ]
  %3597 = phi ptr [ %3582, %3588 ], [ %4, %3571 ]
  %3598 = phi i64 [ %3581, %3588 ], [ 0, %3571 ]
  %3599 = add nsw i32 %3596, 1
  store i32 %3599, ptr %3597, align 4, !tbaa !5
  %3600 = getelementptr inbounds i32, ptr %7, i64 %3598
  %3601 = load i32, ptr %3600, align 4, !tbaa !5
  %3602 = getelementptr inbounds i32, ptr %6, i64 %3598
  br label %3613

3603:                                             ; preds = %3580
  %3604 = icmp eq i32 %3583, %3586
  br i1 %3604, label %3605, label %3611

3605:                                             ; preds = %3603
  store i32 0, ptr %3582, align 4, !tbaa !5
  %3606 = getelementptr inbounds i32, ptr %8, i64 %3581
  %3607 = load i32, ptr %3606, align 4, !tbaa !5
  %3608 = getelementptr inbounds i32, ptr %6, i64 %3581
  store i32 %3607, ptr %3608, align 4, !tbaa !5
  %3609 = add nuw nsw i64 %3581, 1
  %3610 = icmp eq i64 %3609, %3484
  br i1 %3610, label %3618, label %3580, !llvm.loop !697

3611:                                             ; preds = %3576, %3603
  store i64 %3568, ptr %3149, align 8, !tbaa !120
  %3612 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3613:                                             ; preds = %3589, %3595
  %3614 = phi ptr [ %3602, %3595 ], [ %3582, %3589 ]
  %3615 = phi i32 [ %3601, %3595 ], [ 1, %3589 ]
  %3616 = load i32, ptr %3614, align 4, !tbaa !5
  %3617 = add nsw i32 %3616, %3615
  store i32 %3617, ptr %3614, align 4, !tbaa !5
  br label %3618

3618:                                             ; preds = %3605, %3613, %3578, %3561
  %3619 = icmp eq i32 %3570, %5
  br i1 %3619, label %5625, label %3487, !llvm.loop !698

3620:                                             ; preds = %3470, %3756
  %3621 = phi i64 [ 0, %3470 ], [ %3704, %3756 ]
  %3622 = phi i32 [ 0, %3470 ], [ %3705, %3756 ]
  %3623 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3471, label %3624, label %3693

3624:                                             ; preds = %3620, %3683
  %3625 = phi i32 [ %3692, %3683 ], [ 0, %3620 ]
  %3626 = phi i64 [ %3634, %3683 ], [ %3475, %3620 ]
  %3627 = phi i64 [ %3691, %3683 ], [ %3474, %3620 ]
  %3628 = phi i32 [ %3689, %3683 ], [ %3623, %3620 ]
  %3629 = sub i32 %3473, %3625
  %3630 = tail call i32 @llvm.smin.i32(i32 %3629, i32 0)
  %3631 = sub i32 %3629, %3630
  %3632 = zext i32 %3631 to i64
  %3633 = add nuw nsw i64 %3632, 1
  %3634 = add nsw i64 %3626, -1
  %3635 = icmp ult i32 %3631, 31
  br i1 %3635, label %3671, label %3636

3636:                                             ; preds = %3624
  %3637 = and i64 %3633, 8589934560
  %3638 = sub i64 %3627, %3637
  br label %3639

3639:                                             ; preds = %3639, %3636
  %3640 = phi i64 [ 0, %3636 ], [ %3663, %3639 ]
  %3641 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3659, %3639 ]
  %3642 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3660, %3639 ]
  %3643 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3661, %3639 ]
  %3644 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3636 ], [ %3662, %3639 ]
  %3645 = sub i64 %3627, %3640
  %3646 = getelementptr inbounds i32, ptr %11, i64 %3645
  %3647 = getelementptr inbounds i32, ptr %3646, i64 -7
  %3648 = load <8 x i32>, ptr %3647, align 4, !tbaa !5
  %3649 = shufflevector <8 x i32> %3648, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3650 = getelementptr inbounds i32, ptr %3646, i64 -15
  %3651 = load <8 x i32>, ptr %3650, align 4, !tbaa !5
  %3652 = shufflevector <8 x i32> %3651, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3653 = getelementptr inbounds i32, ptr %3646, i64 -23
  %3654 = load <8 x i32>, ptr %3653, align 4, !tbaa !5
  %3655 = shufflevector <8 x i32> %3654, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3656 = getelementptr inbounds i32, ptr %3646, i64 -31
  %3657 = load <8 x i32>, ptr %3656, align 4, !tbaa !5
  %3658 = shufflevector <8 x i32> %3657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3659 = mul <8 x i32> %3649, %3641
  %3660 = mul <8 x i32> %3652, %3642
  %3661 = mul <8 x i32> %3655, %3643
  %3662 = mul <8 x i32> %3658, %3644
  %3663 = add nuw i64 %3640, 32
  %3664 = icmp eq i64 %3663, %3637
  br i1 %3664, label %3665, label %3639, !llvm.loop !699

3665:                                             ; preds = %3639
  %3666 = mul <8 x i32> %3660, %3659
  %3667 = mul <8 x i32> %3661, %3666
  %3668 = mul <8 x i32> %3662, %3667
  %3669 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3668)
  %3670 = icmp eq i64 %3633, %3637
  br i1 %3670, label %3683, label %3671

3671:                                             ; preds = %3624, %3665
  %3672 = phi i64 [ %3627, %3624 ], [ %3638, %3665 ]
  %3673 = phi i32 [ 1, %3624 ], [ %3669, %3665 ]
  br label %3674

3674:                                             ; preds = %3671, %3674
  %3675 = phi i64 [ %3680, %3674 ], [ %3672, %3671 ]
  %3676 = phi i32 [ %3679, %3674 ], [ %3673, %3671 ]
  %3677 = getelementptr inbounds i32, ptr %11, i64 %3675
  %3678 = load i32, ptr %3677, align 4, !tbaa !5
  %3679 = mul nsw i32 %3678, %3676
  %3680 = add nsw i64 %3675, -1
  %3681 = trunc i64 %3675 to i32
  %3682 = icmp sgt i32 %3681, 0
  br i1 %3682, label %3674, label %3683, !llvm.loop !700

3683:                                             ; preds = %3674, %3665
  %3684 = phi i32 [ %3669, %3665 ], [ %3679, %3674 ]
  %3685 = and i64 %3634, 4294967295
  %3686 = getelementptr inbounds i32, ptr %6, i64 %3685
  %3687 = load i32, ptr %3686, align 4, !tbaa !5
  %3688 = mul nsw i32 %3687, %3684
  %3689 = add nsw i32 %3688, %3628
  %3690 = icmp sgt i64 %3626, 2
  %3691 = add nsw i64 %3627, -1
  %3692 = add i32 %3625, 1
  br i1 %3690, label %3624, label %3693, !llvm.loop !701

3693:                                             ; preds = %3683, %3620
  %3694 = phi i32 [ %3623, %3620 ], [ %3689, %3683 ]
  %3695 = icmp slt i32 %3694, %5
  br i1 %3695, label %3698, label %3696

3696:                                             ; preds = %3693
  %3697 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

3698:                                             ; preds = %3693
  %3699 = sext i32 %3694 to i64
  %3700 = getelementptr inbounds i32, ptr %3147, i64 %3699
  %3701 = load i32, ptr %3700, align 4, !tbaa !5
  %3702 = tail call i32 @llvm.abs.i32(i32 %3701, i1 false)
  %3703 = zext i32 %3702 to i64
  %3704 = tail call i64 @llvm.smax.i64(i64 %3621, i64 %3703)
  store i64 %3704, ptr %3149, align 8, !tbaa !120
  %3705 = add nuw nsw i32 %3622, 1
  br i1 %3472, label %3706, label %3756

3706:                                             ; preds = %3698
  %3707 = load i32, ptr %4, align 4, !tbaa !5
  %3708 = load i32, ptr %12, align 4, !tbaa !5
  %3709 = add nsw i32 %3708, -1
  %3710 = icmp slt i32 %3707, %3709
  br i1 %3710, label %3733, label %3711

3711:                                             ; preds = %3706
  %3712 = icmp eq i32 %3707, %3709
  br i1 %3712, label %3713, label %3749

3713:                                             ; preds = %3711
  store i32 0, ptr %4, align 4, !tbaa !5
  %3714 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3714, ptr %6, align 4, !tbaa !5
  br i1 %3477, label %3756, label %3715

3715:                                             ; preds = %3713, %3743
  %3716 = phi i64 [ %3747, %3743 ], [ 1, %3713 ]
  %3717 = getelementptr inbounds i32, ptr %4, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !5
  %3719 = getelementptr inbounds i32, ptr %12, i64 %3716
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = add nsw i32 %3720, -1
  %3722 = icmp slt i32 %3718, %3721
  br i1 %3722, label %3723, label %3741

3723:                                             ; preds = %3715
  br i1 %3710, label %3733, label %3724

3724:                                             ; preds = %3723
  %3725 = shl i64 %3716, 32
  %3726 = add i64 %3725, -4294967296
  %3727 = ashr exact i64 %3726, 32
  %3728 = getelementptr inbounds i32, ptr %7, i64 %3727
  %3729 = load i32, ptr %3728, align 4, !tbaa !5
  %3730 = getelementptr inbounds i32, ptr %6, i64 %3716
  %3731 = load i32, ptr %3730, align 4, !tbaa !5
  %3732 = add nsw i32 %3731, %3729
  store i32 %3732, ptr %3730, align 4, !tbaa !5
  br label %3751

3733:                                             ; preds = %3706, %3723
  %3734 = phi i32 [ %3718, %3723 ], [ %3707, %3706 ]
  %3735 = phi ptr [ %3717, %3723 ], [ %4, %3706 ]
  %3736 = phi i64 [ %3716, %3723 ], [ 0, %3706 ]
  %3737 = add nsw i32 %3734, 1
  store i32 %3737, ptr %3735, align 4, !tbaa !5
  %3738 = getelementptr inbounds i32, ptr %7, i64 %3736
  %3739 = load i32, ptr %3738, align 4, !tbaa !5
  %3740 = getelementptr inbounds i32, ptr %6, i64 %3736
  br label %3751

3741:                                             ; preds = %3715
  %3742 = icmp eq i32 %3718, %3721
  br i1 %3742, label %3743, label %3749

3743:                                             ; preds = %3741
  store i32 0, ptr %3717, align 4, !tbaa !5
  %3744 = getelementptr inbounds i32, ptr %8, i64 %3716
  %3745 = load i32, ptr %3744, align 4, !tbaa !5
  %3746 = getelementptr inbounds i32, ptr %6, i64 %3716
  store i32 %3745, ptr %3746, align 4, !tbaa !5
  %3747 = add nuw nsw i64 %3716, 1
  %3748 = icmp eq i64 %3747, %3475
  br i1 %3748, label %3756, label %3715, !llvm.loop !702

3749:                                             ; preds = %3711, %3741
  %3750 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3751:                                             ; preds = %3724, %3733
  %3752 = phi ptr [ %3740, %3733 ], [ %3717, %3724 ]
  %3753 = phi i32 [ %3739, %3733 ], [ 1, %3724 ]
  %3754 = load i32, ptr %3752, align 4, !tbaa !5
  %3755 = add nsw i32 %3754, %3753
  store i32 %3755, ptr %3752, align 4, !tbaa !5
  br label %3756

3756:                                             ; preds = %3743, %3751, %3713, %3698
  %3757 = icmp eq i32 %3705, %5
  br i1 %3757, label %5630, label %3620, !llvm.loop !703

3758:                                             ; preds = %3155
  %3759 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1331, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

3760:                                             ; preds = %18
  %3761 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3762 = load ptr, ptr %3761, align 8, !tbaa !9
  %3763 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3764 = load ptr, ptr %3763, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3764, align 8, !tbaa !18
  %3765 = icmp eq i32 %13, 0
  br i1 %3765, label %3766, label %3774

3766:                                             ; preds = %3760
  %3767 = load i32, ptr %3762, align 4, !tbaa !5
  %3768 = sitofp i32 %3767 to double
  %3769 = icmp slt i32 %3767, 0
  %3770 = fneg fast double %3768
  %3771 = select fast i1 %3769, double %3770, double %3768
  %3772 = fcmp fast ole double %3771, 0.000000e+00
  %3773 = select fast i1 %3772, double 0.000000e+00, double %3771
  store double %3773, ptr %3764, align 8, !tbaa !18
  br label %5630

3774:                                             ; preds = %3760
  switch i32 %1, label %4376 [
    i32 1, label %3775
    i32 0, label %4078
  ]

3775:                                             ; preds = %3774
  %3776 = getelementptr inbounds i32, ptr %3, i64 %19
  %3777 = load i32, ptr %3776, align 4, !tbaa !5
  %3778 = icmp eq i32 %3777, 0
  %3779 = icmp sgt i32 %5, 0
  br i1 %3778, label %3789, label %3780

3780:                                             ; preds = %3775
  br i1 %3779, label %3781, label %5630

3781:                                             ; preds = %3780
  %3782 = icmp sgt i32 %13, 1
  %3783 = icmp sgt i32 %13, 0
  %3784 = add i32 %13, -2
  %3785 = zext i32 %3784 to i64
  %3786 = zext i32 %13 to i64
  %3787 = add nuw i32 %5, 1
  %3788 = icmp eq i32 %13, 1
  br label %3938

3789:                                             ; preds = %3775
  br i1 %3779, label %3790, label %5630

3790:                                             ; preds = %3789
  %3791 = icmp sgt i32 %13, 1
  %3792 = icmp sgt i32 %13, 0
  %3793 = add i32 %13, -2
  %3794 = zext i32 %3793 to i64
  %3795 = zext i32 %13 to i64
  %3796 = add nuw i32 %5, 1
  %3797 = icmp eq i32 %13, 1
  br label %3798

3798:                                             ; preds = %3790, %3936
  %3799 = phi double [ 0.000000e+00, %3790 ], [ %3886, %3936 ]
  %3800 = phi i32 [ 0, %3790 ], [ %3888, %3936 ]
  %3801 = phi double [ 0.000000e+00, %3790 ], [ %3887, %3936 ]
  %3802 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3791, label %3803, label %3872

3803:                                             ; preds = %3798, %3862
  %3804 = phi i32 [ %3871, %3862 ], [ 0, %3798 ]
  %3805 = phi i64 [ %3813, %3862 ], [ %3795, %3798 ]
  %3806 = phi i64 [ %3870, %3862 ], [ %3794, %3798 ]
  %3807 = phi i32 [ %3868, %3862 ], [ %3802, %3798 ]
  %3808 = sub i32 %3793, %3804
  %3809 = tail call i32 @llvm.smin.i32(i32 %3808, i32 0)
  %3810 = sub i32 %3808, %3809
  %3811 = zext i32 %3810 to i64
  %3812 = add nuw nsw i64 %3811, 1
  %3813 = add nsw i64 %3805, -1
  %3814 = icmp ult i32 %3810, 31
  br i1 %3814, label %3850, label %3815

3815:                                             ; preds = %3803
  %3816 = and i64 %3812, 8589934560
  %3817 = sub i64 %3806, %3816
  br label %3818

3818:                                             ; preds = %3818, %3815
  %3819 = phi i64 [ 0, %3815 ], [ %3842, %3818 ]
  %3820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3838, %3818 ]
  %3821 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3839, %3818 ]
  %3822 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3840, %3818 ]
  %3823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3815 ], [ %3841, %3818 ]
  %3824 = sub i64 %3806, %3819
  %3825 = getelementptr inbounds i32, ptr %9, i64 %3824
  %3826 = getelementptr inbounds i32, ptr %3825, i64 -7
  %3827 = load <8 x i32>, ptr %3826, align 4, !tbaa !5
  %3828 = shufflevector <8 x i32> %3827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3829 = getelementptr inbounds i32, ptr %3825, i64 -15
  %3830 = load <8 x i32>, ptr %3829, align 4, !tbaa !5
  %3831 = shufflevector <8 x i32> %3830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3832 = getelementptr inbounds i32, ptr %3825, i64 -23
  %3833 = load <8 x i32>, ptr %3832, align 4, !tbaa !5
  %3834 = shufflevector <8 x i32> %3833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3835 = getelementptr inbounds i32, ptr %3825, i64 -31
  %3836 = load <8 x i32>, ptr %3835, align 4, !tbaa !5
  %3837 = shufflevector <8 x i32> %3836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3838 = mul <8 x i32> %3828, %3820
  %3839 = mul <8 x i32> %3831, %3821
  %3840 = mul <8 x i32> %3834, %3822
  %3841 = mul <8 x i32> %3837, %3823
  %3842 = add nuw i64 %3819, 32
  %3843 = icmp eq i64 %3842, %3816
  br i1 %3843, label %3844, label %3818, !llvm.loop !704

3844:                                             ; preds = %3818
  %3845 = mul <8 x i32> %3839, %3838
  %3846 = mul <8 x i32> %3840, %3845
  %3847 = mul <8 x i32> %3841, %3846
  %3848 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3847)
  %3849 = icmp eq i64 %3812, %3816
  br i1 %3849, label %3862, label %3850

3850:                                             ; preds = %3803, %3844
  %3851 = phi i64 [ %3806, %3803 ], [ %3817, %3844 ]
  %3852 = phi i32 [ 1, %3803 ], [ %3848, %3844 ]
  br label %3853

3853:                                             ; preds = %3850, %3853
  %3854 = phi i64 [ %3859, %3853 ], [ %3851, %3850 ]
  %3855 = phi i32 [ %3858, %3853 ], [ %3852, %3850 ]
  %3856 = getelementptr inbounds i32, ptr %9, i64 %3854
  %3857 = load i32, ptr %3856, align 4, !tbaa !5
  %3858 = mul nsw i32 %3857, %3855
  %3859 = add nsw i64 %3854, -1
  %3860 = trunc i64 %3854 to i32
  %3861 = icmp sgt i32 %3860, 0
  br i1 %3861, label %3853, label %3862, !llvm.loop !705

3862:                                             ; preds = %3853, %3844
  %3863 = phi i32 [ %3848, %3844 ], [ %3858, %3853 ]
  %3864 = and i64 %3813, 4294967295
  %3865 = getelementptr inbounds i32, ptr %6, i64 %3864
  %3866 = load i32, ptr %3865, align 4, !tbaa !5
  %3867 = mul nsw i32 %3866, %3863
  %3868 = add nsw i32 %3867, %3807
  %3869 = icmp sgt i64 %3805, 2
  %3870 = add nsw i64 %3806, -1
  %3871 = add i32 %3804, 1
  br i1 %3869, label %3803, label %3872, !llvm.loop !706

3872:                                             ; preds = %3862, %3798
  %3873 = phi i32 [ %3802, %3798 ], [ %3868, %3862 ]
  %3874 = sext i32 %3873 to i64
  %3875 = getelementptr inbounds double, ptr %2, i64 %3874
  %3876 = load double, ptr %3875, align 8, !tbaa !18
  %3877 = getelementptr inbounds i32, ptr %3762, i64 %3874
  %3878 = load i32, ptr %3877, align 4, !tbaa !5
  %3879 = sitofp i32 %3878 to double
  %3880 = fmul fast double %3876, %3879
  %3881 = fcmp fast uge double %3880, 0.000000e+00
  %3882 = fneg fast double %3880
  %3883 = tail call fast double @llvm.fabs.f64(double %3880)
  %3884 = fcmp fast oge double %3799, %3883
  %3885 = select nnan ninf i1 %3881, double %3880, double %3882
  %3886 = select i1 %3884, double %3799, double %3885
  store double %3886, ptr %3764, align 8, !tbaa !18
  %3887 = fadd fast double %3876, %3801
  %3888 = add nuw nsw i32 %3800, 1
  br i1 %3792, label %3889, label %3936

3889:                                             ; preds = %3872
  %3890 = load i32, ptr %4, align 4, !tbaa !5
  %3891 = load i32, ptr %12, align 4, !tbaa !5
  %3892 = add nsw i32 %3891, -1
  %3893 = icmp slt i32 %3890, %3892
  br i1 %3893, label %3913, label %3894

3894:                                             ; preds = %3889
  %3895 = icmp eq i32 %3890, %3892
  br i1 %3895, label %3896, label %3929

3896:                                             ; preds = %3894
  store i32 0, ptr %4, align 4, !tbaa !5
  %3897 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3897, ptr %6, align 4, !tbaa !5
  br i1 %3797, label %3936, label %3898

3898:                                             ; preds = %3896, %3923
  %3899 = phi i64 [ %3927, %3923 ], [ 1, %3896 ]
  %3900 = getelementptr inbounds i32, ptr %4, i64 %3899
  %3901 = load i32, ptr %3900, align 4, !tbaa !5
  %3902 = getelementptr inbounds i32, ptr %12, i64 %3899
  %3903 = load i32, ptr %3902, align 4, !tbaa !5
  %3904 = add nsw i32 %3903, -1
  %3905 = icmp slt i32 %3901, %3904
  br i1 %3905, label %3906, label %3921

3906:                                             ; preds = %3898
  br i1 %3893, label %3913, label %3907

3907:                                             ; preds = %3906
  %3908 = getelementptr inbounds i32, ptr %7, i64 %3899
  %3909 = load i32, ptr %3908, align 4, !tbaa !5
  %3910 = getelementptr inbounds i32, ptr %6, i64 %3899
  %3911 = load i32, ptr %3910, align 4, !tbaa !5
  %3912 = add nsw i32 %3911, %3909
  store i32 %3912, ptr %3910, align 4, !tbaa !5
  br label %3931

3913:                                             ; preds = %3889, %3906
  %3914 = phi i32 [ %3901, %3906 ], [ %3890, %3889 ]
  %3915 = phi ptr [ %3900, %3906 ], [ %4, %3889 ]
  %3916 = phi i64 [ %3899, %3906 ], [ 0, %3889 ]
  %3917 = add nsw i32 %3914, 1
  store i32 %3917, ptr %3915, align 4, !tbaa !5
  %3918 = getelementptr inbounds i32, ptr %7, i64 %3916
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = getelementptr inbounds i32, ptr %6, i64 %3916
  br label %3931

3921:                                             ; preds = %3898
  %3922 = icmp eq i32 %3901, %3904
  br i1 %3922, label %3923, label %3929

3923:                                             ; preds = %3921
  store i32 0, ptr %3900, align 4, !tbaa !5
  %3924 = getelementptr inbounds i32, ptr %8, i64 %3899
  %3925 = load i32, ptr %3924, align 4, !tbaa !5
  %3926 = getelementptr inbounds i32, ptr %6, i64 %3899
  store i32 %3925, ptr %3926, align 4, !tbaa !5
  %3927 = add nuw nsw i64 %3899, 1
  %3928 = icmp eq i64 %3927, %3795
  br i1 %3928, label %3936, label %3898, !llvm.loop !707

3929:                                             ; preds = %3894, %3921
  %3930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

3931:                                             ; preds = %3907, %3913
  %3932 = phi ptr [ %3920, %3913 ], [ %3900, %3907 ]
  %3933 = phi i32 [ %3919, %3913 ], [ 1, %3907 ]
  %3934 = load i32, ptr %3932, align 4, !tbaa !5
  %3935 = add nsw i32 %3934, %3933
  store i32 %3935, ptr %3932, align 4, !tbaa !5
  br label %3936

3936:                                             ; preds = %3923, %3931, %3896, %3872
  %3937 = icmp eq i32 %3888, %5
  br i1 %3937, label %5630, label %3798, !llvm.loop !708

3938:                                             ; preds = %3781, %4076
  %3939 = phi double [ 0.000000e+00, %3781 ], [ %4024, %4076 ]
  %3940 = phi i32 [ 0, %3781 ], [ %4025, %4076 ]
  %3941 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3782, label %3942, label %4011

3942:                                             ; preds = %3938, %4001
  %3943 = phi i32 [ %4010, %4001 ], [ 0, %3938 ]
  %3944 = phi i64 [ %3952, %4001 ], [ %3786, %3938 ]
  %3945 = phi i64 [ %4009, %4001 ], [ %3785, %3938 ]
  %3946 = phi i32 [ %4007, %4001 ], [ %3941, %3938 ]
  %3947 = sub i32 %3784, %3943
  %3948 = tail call i32 @llvm.smin.i32(i32 %3947, i32 0)
  %3949 = sub i32 %3947, %3948
  %3950 = zext i32 %3949 to i64
  %3951 = add nuw nsw i64 %3950, 1
  %3952 = add nsw i64 %3944, -1
  %3953 = icmp ult i32 %3949, 31
  br i1 %3953, label %3989, label %3954

3954:                                             ; preds = %3942
  %3955 = and i64 %3951, 8589934560
  %3956 = sub i64 %3945, %3955
  br label %3957

3957:                                             ; preds = %3957, %3954
  %3958 = phi i64 [ 0, %3954 ], [ %3981, %3957 ]
  %3959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3977, %3957 ]
  %3960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3978, %3957 ]
  %3961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3979, %3957 ]
  %3962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3954 ], [ %3980, %3957 ]
  %3963 = sub i64 %3945, %3958
  %3964 = getelementptr inbounds i32, ptr %11, i64 %3963
  %3965 = getelementptr inbounds i32, ptr %3964, i64 -7
  %3966 = load <8 x i32>, ptr %3965, align 4, !tbaa !5
  %3967 = shufflevector <8 x i32> %3966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3968 = getelementptr inbounds i32, ptr %3964, i64 -15
  %3969 = load <8 x i32>, ptr %3968, align 4, !tbaa !5
  %3970 = shufflevector <8 x i32> %3969, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3971 = getelementptr inbounds i32, ptr %3964, i64 -23
  %3972 = load <8 x i32>, ptr %3971, align 4, !tbaa !5
  %3973 = shufflevector <8 x i32> %3972, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3974 = getelementptr inbounds i32, ptr %3964, i64 -31
  %3975 = load <8 x i32>, ptr %3974, align 4, !tbaa !5
  %3976 = shufflevector <8 x i32> %3975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3977 = mul <8 x i32> %3967, %3959
  %3978 = mul <8 x i32> %3970, %3960
  %3979 = mul <8 x i32> %3973, %3961
  %3980 = mul <8 x i32> %3976, %3962
  %3981 = add nuw i64 %3958, 32
  %3982 = icmp eq i64 %3981, %3955
  br i1 %3982, label %3983, label %3957, !llvm.loop !709

3983:                                             ; preds = %3957
  %3984 = mul <8 x i32> %3978, %3977
  %3985 = mul <8 x i32> %3979, %3984
  %3986 = mul <8 x i32> %3980, %3985
  %3987 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3986)
  %3988 = icmp eq i64 %3951, %3955
  br i1 %3988, label %4001, label %3989

3989:                                             ; preds = %3942, %3983
  %3990 = phi i64 [ %3945, %3942 ], [ %3956, %3983 ]
  %3991 = phi i32 [ 1, %3942 ], [ %3987, %3983 ]
  br label %3992

3992:                                             ; preds = %3989, %3992
  %3993 = phi i64 [ %3998, %3992 ], [ %3990, %3989 ]
  %3994 = phi i32 [ %3997, %3992 ], [ %3991, %3989 ]
  %3995 = getelementptr inbounds i32, ptr %11, i64 %3993
  %3996 = load i32, ptr %3995, align 4, !tbaa !5
  %3997 = mul nsw i32 %3996, %3994
  %3998 = add nsw i64 %3993, -1
  %3999 = trunc i64 %3993 to i32
  %4000 = icmp sgt i32 %3999, 0
  br i1 %4000, label %3992, label %4001, !llvm.loop !710

4001:                                             ; preds = %3992, %3983
  %4002 = phi i32 [ %3987, %3983 ], [ %3997, %3992 ]
  %4003 = and i64 %3952, 4294967295
  %4004 = getelementptr inbounds i32, ptr %6, i64 %4003
  %4005 = load i32, ptr %4004, align 4, !tbaa !5
  %4006 = mul nsw i32 %4005, %4002
  %4007 = add nsw i32 %4006, %3946
  %4008 = icmp sgt i64 %3944, 2
  %4009 = add nsw i64 %3945, -1
  %4010 = add i32 %3943, 1
  br i1 %4008, label %3942, label %4011, !llvm.loop !711

4011:                                             ; preds = %4001, %3938
  %4012 = phi i32 [ %3941, %3938 ], [ %4007, %4001 ]
  %4013 = icmp slt i32 %4012, %5
  br i1 %4013, label %4016, label %4014

4014:                                             ; preds = %4011
  %4015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4016:                                             ; preds = %4011
  %4017 = sext i32 %4012 to i64
  %4018 = getelementptr inbounds i32, ptr %3762, i64 %4017
  %4019 = load i32, ptr %4018, align 4, !tbaa !5
  %4020 = sitofp i32 %4019 to double
  %4021 = icmp slt i32 %4019, 0
  %4022 = fneg fast double %4020
  %4023 = select i1 %4021, double %4022, double %4020
  %4024 = tail call fast double @llvm.maxnum.f64(double %3939, double %4023)
  store double %4024, ptr %3764, align 8, !tbaa !18
  %4025 = add nuw nsw i32 %3940, 1
  br i1 %3783, label %4026, label %4076

4026:                                             ; preds = %4016
  %4027 = load i32, ptr %4, align 4, !tbaa !5
  %4028 = load i32, ptr %12, align 4, !tbaa !5
  %4029 = add nsw i32 %4028, -1
  %4030 = icmp slt i32 %4027, %4029
  br i1 %4030, label %4053, label %4031

4031:                                             ; preds = %4026
  %4032 = icmp eq i32 %4027, %4029
  br i1 %4032, label %4033, label %4069

4033:                                             ; preds = %4031
  store i32 0, ptr %4, align 4, !tbaa !5
  %4034 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4034, ptr %6, align 4, !tbaa !5
  br i1 %3788, label %4076, label %4035

4035:                                             ; preds = %4033, %4063
  %4036 = phi i64 [ %4067, %4063 ], [ 1, %4033 ]
  %4037 = getelementptr inbounds i32, ptr %4, i64 %4036
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = getelementptr inbounds i32, ptr %12, i64 %4036
  %4040 = load i32, ptr %4039, align 4, !tbaa !5
  %4041 = add nsw i32 %4040, -1
  %4042 = icmp slt i32 %4038, %4041
  br i1 %4042, label %4043, label %4061

4043:                                             ; preds = %4035
  br i1 %4030, label %4053, label %4044

4044:                                             ; preds = %4043
  %4045 = shl i64 %4036, 32
  %4046 = add i64 %4045, -4294967296
  %4047 = ashr exact i64 %4046, 32
  %4048 = getelementptr inbounds i32, ptr %7, i64 %4047
  %4049 = load i32, ptr %4048, align 4, !tbaa !5
  %4050 = getelementptr inbounds i32, ptr %6, i64 %4036
  %4051 = load i32, ptr %4050, align 4, !tbaa !5
  %4052 = add nsw i32 %4051, %4049
  store i32 %4052, ptr %4050, align 4, !tbaa !5
  br label %4071

4053:                                             ; preds = %4026, %4043
  %4054 = phi i32 [ %4038, %4043 ], [ %4027, %4026 ]
  %4055 = phi ptr [ %4037, %4043 ], [ %4, %4026 ]
  %4056 = phi i64 [ %4036, %4043 ], [ 0, %4026 ]
  %4057 = add nsw i32 %4054, 1
  store i32 %4057, ptr %4055, align 4, !tbaa !5
  %4058 = getelementptr inbounds i32, ptr %7, i64 %4056
  %4059 = load i32, ptr %4058, align 4, !tbaa !5
  %4060 = getelementptr inbounds i32, ptr %6, i64 %4056
  br label %4071

4061:                                             ; preds = %4035
  %4062 = icmp eq i32 %4038, %4041
  br i1 %4062, label %4063, label %4069

4063:                                             ; preds = %4061
  store i32 0, ptr %4037, align 4, !tbaa !5
  %4064 = getelementptr inbounds i32, ptr %8, i64 %4036
  %4065 = load i32, ptr %4064, align 4, !tbaa !5
  %4066 = getelementptr inbounds i32, ptr %6, i64 %4036
  store i32 %4065, ptr %4066, align 4, !tbaa !5
  %4067 = add nuw nsw i64 %4036, 1
  %4068 = icmp eq i64 %4067, %3786
  br i1 %4068, label %4076, label %4035, !llvm.loop !712

4069:                                             ; preds = %4031, %4061
  %4070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4071:                                             ; preds = %4044, %4053
  %4072 = phi ptr [ %4060, %4053 ], [ %4037, %4044 ]
  %4073 = phi i32 [ %4059, %4053 ], [ 1, %4044 ]
  %4074 = load i32, ptr %4072, align 4, !tbaa !5
  %4075 = add nsw i32 %4074, %4073
  store i32 %4075, ptr %4072, align 4, !tbaa !5
  br label %4076

4076:                                             ; preds = %4063, %4071, %4033, %4016
  %4077 = icmp eq i32 %4025, %5
  br i1 %4077, label %5630, label %3938, !llvm.loop !713

4078:                                             ; preds = %3774
  %4079 = getelementptr inbounds i32, ptr %3, i64 %19
  %4080 = load i32, ptr %4079, align 4, !tbaa !5
  %4081 = icmp eq i32 %4080, 0
  %4082 = icmp sgt i32 %5, 0
  br i1 %4081, label %4092, label %4083

4083:                                             ; preds = %4078
  br i1 %4082, label %4084, label %5630

4084:                                             ; preds = %4083
  %4085 = icmp sgt i32 %13, 1
  %4086 = icmp sgt i32 %13, 0
  %4087 = add i32 %13, -2
  %4088 = zext i32 %4087 to i64
  %4089 = zext i32 %13 to i64
  %4090 = add nuw i32 %5, 1
  %4091 = icmp eq i32 %13, 1
  br label %4236

4092:                                             ; preds = %4078
  br i1 %4082, label %4093, label %5630

4093:                                             ; preds = %4092
  %4094 = icmp sgt i32 %13, 1
  %4095 = icmp sgt i32 %13, 0
  %4096 = add i32 %13, -2
  %4097 = zext i32 %4096 to i64
  %4098 = zext i32 %13 to i64
  %4099 = add nuw i32 %5, 1
  %4100 = icmp eq i32 %13, 1
  br label %4101

4101:                                             ; preds = %4093, %4234
  %4102 = phi double [ 0.000000e+00, %4093 ], [ %4184, %4234 ]
  %4103 = phi i32 [ 0, %4093 ], [ %4186, %4234 ]
  %4104 = phi double [ 0.000000e+00, %4093 ], [ %4185, %4234 ]
  %4105 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4094, label %4106, label %4175

4106:                                             ; preds = %4101, %4165
  %4107 = phi i32 [ %4174, %4165 ], [ 0, %4101 ]
  %4108 = phi i64 [ %4116, %4165 ], [ %4098, %4101 ]
  %4109 = phi i64 [ %4173, %4165 ], [ %4097, %4101 ]
  %4110 = phi i32 [ %4171, %4165 ], [ %4105, %4101 ]
  %4111 = sub i32 %4096, %4107
  %4112 = tail call i32 @llvm.smin.i32(i32 %4111, i32 0)
  %4113 = sub i32 %4111, %4112
  %4114 = zext i32 %4113 to i64
  %4115 = add nuw nsw i64 %4114, 1
  %4116 = add nsw i64 %4108, -1
  %4117 = icmp ult i32 %4113, 31
  br i1 %4117, label %4153, label %4118

4118:                                             ; preds = %4106
  %4119 = and i64 %4115, 8589934560
  %4120 = sub i64 %4109, %4119
  br label %4121

4121:                                             ; preds = %4121, %4118
  %4122 = phi i64 [ 0, %4118 ], [ %4145, %4121 ]
  %4123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4141, %4121 ]
  %4124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4142, %4121 ]
  %4125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4143, %4121 ]
  %4126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4118 ], [ %4144, %4121 ]
  %4127 = sub i64 %4109, %4122
  %4128 = getelementptr inbounds i32, ptr %9, i64 %4127
  %4129 = getelementptr inbounds i32, ptr %4128, i64 -7
  %4130 = load <8 x i32>, ptr %4129, align 4, !tbaa !5
  %4131 = shufflevector <8 x i32> %4130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4132 = getelementptr inbounds i32, ptr %4128, i64 -15
  %4133 = load <8 x i32>, ptr %4132, align 4, !tbaa !5
  %4134 = shufflevector <8 x i32> %4133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4135 = getelementptr inbounds i32, ptr %4128, i64 -23
  %4136 = load <8 x i32>, ptr %4135, align 4, !tbaa !5
  %4137 = shufflevector <8 x i32> %4136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4138 = getelementptr inbounds i32, ptr %4128, i64 -31
  %4139 = load <8 x i32>, ptr %4138, align 4, !tbaa !5
  %4140 = shufflevector <8 x i32> %4139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4141 = mul <8 x i32> %4131, %4123
  %4142 = mul <8 x i32> %4134, %4124
  %4143 = mul <8 x i32> %4137, %4125
  %4144 = mul <8 x i32> %4140, %4126
  %4145 = add nuw i64 %4122, 32
  %4146 = icmp eq i64 %4145, %4119
  br i1 %4146, label %4147, label %4121, !llvm.loop !714

4147:                                             ; preds = %4121
  %4148 = mul <8 x i32> %4142, %4141
  %4149 = mul <8 x i32> %4143, %4148
  %4150 = mul <8 x i32> %4144, %4149
  %4151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4150)
  %4152 = icmp eq i64 %4115, %4119
  br i1 %4152, label %4165, label %4153

4153:                                             ; preds = %4106, %4147
  %4154 = phi i64 [ %4109, %4106 ], [ %4120, %4147 ]
  %4155 = phi i32 [ 1, %4106 ], [ %4151, %4147 ]
  br label %4156

4156:                                             ; preds = %4153, %4156
  %4157 = phi i64 [ %4162, %4156 ], [ %4154, %4153 ]
  %4158 = phi i32 [ %4161, %4156 ], [ %4155, %4153 ]
  %4159 = getelementptr inbounds i32, ptr %9, i64 %4157
  %4160 = load i32, ptr %4159, align 4, !tbaa !5
  %4161 = mul nsw i32 %4160, %4158
  %4162 = add nsw i64 %4157, -1
  %4163 = trunc i64 %4157 to i32
  %4164 = icmp sgt i32 %4163, 0
  br i1 %4164, label %4156, label %4165, !llvm.loop !715

4165:                                             ; preds = %4156, %4147
  %4166 = phi i32 [ %4151, %4147 ], [ %4161, %4156 ]
  %4167 = and i64 %4116, 4294967295
  %4168 = getelementptr inbounds i32, ptr %6, i64 %4167
  %4169 = load i32, ptr %4168, align 4, !tbaa !5
  %4170 = mul nsw i32 %4169, %4166
  %4171 = add nsw i32 %4170, %4110
  %4172 = icmp sgt i64 %4108, 2
  %4173 = add nsw i64 %4109, -1
  %4174 = add i32 %4107, 1
  br i1 %4172, label %4106, label %4175, !llvm.loop !716

4175:                                             ; preds = %4165, %4101
  %4176 = phi i32 [ %4105, %4101 ], [ %4171, %4165 ]
  %4177 = sext i32 %4176 to i64
  %4178 = getelementptr inbounds i32, ptr %3762, i64 %4177
  %4179 = load i32, ptr %4178, align 4, !tbaa !5
  %4180 = sitofp i32 %4179 to double
  %4181 = icmp slt i32 %4179, 0
  %4182 = fneg fast double %4180
  %4183 = select fast i1 %4181, double %4182, double %4180
  %4184 = tail call fast double @llvm.maxnum.f64(double %4102, double %4183)
  %4185 = fadd fast double %4104, 1.000000e+00
  %4186 = add nuw nsw i32 %4103, 1
  br i1 %4095, label %4187, label %4234

4187:                                             ; preds = %4175
  %4188 = load i32, ptr %4, align 4, !tbaa !5
  %4189 = load i32, ptr %12, align 4, !tbaa !5
  %4190 = add nsw i32 %4189, -1
  %4191 = icmp slt i32 %4188, %4190
  br i1 %4191, label %4211, label %4192

4192:                                             ; preds = %4187
  %4193 = icmp eq i32 %4188, %4190
  br i1 %4193, label %4194, label %4227

4194:                                             ; preds = %4192
  store i32 0, ptr %4, align 4, !tbaa !5
  %4195 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4195, ptr %6, align 4, !tbaa !5
  br i1 %4100, label %4234, label %4196

4196:                                             ; preds = %4194, %4221
  %4197 = phi i64 [ %4225, %4221 ], [ 1, %4194 ]
  %4198 = getelementptr inbounds i32, ptr %4, i64 %4197
  %4199 = load i32, ptr %4198, align 4, !tbaa !5
  %4200 = getelementptr inbounds i32, ptr %12, i64 %4197
  %4201 = load i32, ptr %4200, align 4, !tbaa !5
  %4202 = add nsw i32 %4201, -1
  %4203 = icmp slt i32 %4199, %4202
  br i1 %4203, label %4204, label %4219

4204:                                             ; preds = %4196
  br i1 %4191, label %4211, label %4205

4205:                                             ; preds = %4204
  %4206 = getelementptr inbounds i32, ptr %7, i64 %4197
  %4207 = load i32, ptr %4206, align 4, !tbaa !5
  %4208 = getelementptr inbounds i32, ptr %6, i64 %4197
  %4209 = load i32, ptr %4208, align 4, !tbaa !5
  %4210 = add nsw i32 %4209, %4207
  store i32 %4210, ptr %4208, align 4, !tbaa !5
  br label %4229

4211:                                             ; preds = %4187, %4204
  %4212 = phi i32 [ %4199, %4204 ], [ %4188, %4187 ]
  %4213 = phi ptr [ %4198, %4204 ], [ %4, %4187 ]
  %4214 = phi i64 [ %4197, %4204 ], [ 0, %4187 ]
  %4215 = add nsw i32 %4212, 1
  store i32 %4215, ptr %4213, align 4, !tbaa !5
  %4216 = getelementptr inbounds i32, ptr %7, i64 %4214
  %4217 = load i32, ptr %4216, align 4, !tbaa !5
  %4218 = getelementptr inbounds i32, ptr %6, i64 %4214
  br label %4229

4219:                                             ; preds = %4196
  %4220 = icmp eq i32 %4199, %4202
  br i1 %4220, label %4221, label %4227

4221:                                             ; preds = %4219
  store i32 0, ptr %4198, align 4, !tbaa !5
  %4222 = getelementptr inbounds i32, ptr %8, i64 %4197
  %4223 = load i32, ptr %4222, align 4, !tbaa !5
  %4224 = getelementptr inbounds i32, ptr %6, i64 %4197
  store i32 %4223, ptr %4224, align 4, !tbaa !5
  %4225 = add nuw nsw i64 %4197, 1
  %4226 = icmp eq i64 %4225, %4098
  br i1 %4226, label %4234, label %4196, !llvm.loop !717

4227:                                             ; preds = %4192, %4219
  store double %4184, ptr %3764, align 8, !tbaa !18
  %4228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4229:                                             ; preds = %4205, %4211
  %4230 = phi ptr [ %4218, %4211 ], [ %4198, %4205 ]
  %4231 = phi i32 [ %4217, %4211 ], [ 1, %4205 ]
  %4232 = load i32, ptr %4230, align 4, !tbaa !5
  %4233 = add nsw i32 %4232, %4231
  store i32 %4233, ptr %4230, align 4, !tbaa !5
  br label %4234

4234:                                             ; preds = %4221, %4229, %4194, %4175
  %4235 = icmp eq i32 %4186, %5
  br i1 %4235, label %5626, label %4101, !llvm.loop !718

4236:                                             ; preds = %4084, %4374
  %4237 = phi double [ 0.000000e+00, %4084 ], [ %4322, %4374 ]
  %4238 = phi i32 [ 0, %4084 ], [ %4323, %4374 ]
  %4239 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4085, label %4240, label %4309

4240:                                             ; preds = %4236, %4299
  %4241 = phi i32 [ %4308, %4299 ], [ 0, %4236 ]
  %4242 = phi i64 [ %4250, %4299 ], [ %4089, %4236 ]
  %4243 = phi i64 [ %4307, %4299 ], [ %4088, %4236 ]
  %4244 = phi i32 [ %4305, %4299 ], [ %4239, %4236 ]
  %4245 = sub i32 %4087, %4241
  %4246 = tail call i32 @llvm.smin.i32(i32 %4245, i32 0)
  %4247 = sub i32 %4245, %4246
  %4248 = zext i32 %4247 to i64
  %4249 = add nuw nsw i64 %4248, 1
  %4250 = add nsw i64 %4242, -1
  %4251 = icmp ult i32 %4247, 31
  br i1 %4251, label %4287, label %4252

4252:                                             ; preds = %4240
  %4253 = and i64 %4249, 8589934560
  %4254 = sub i64 %4243, %4253
  br label %4255

4255:                                             ; preds = %4255, %4252
  %4256 = phi i64 [ 0, %4252 ], [ %4279, %4255 ]
  %4257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4275, %4255 ]
  %4258 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4276, %4255 ]
  %4259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4277, %4255 ]
  %4260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4278, %4255 ]
  %4261 = sub i64 %4243, %4256
  %4262 = getelementptr inbounds i32, ptr %11, i64 %4261
  %4263 = getelementptr inbounds i32, ptr %4262, i64 -7
  %4264 = load <8 x i32>, ptr %4263, align 4, !tbaa !5
  %4265 = shufflevector <8 x i32> %4264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4266 = getelementptr inbounds i32, ptr %4262, i64 -15
  %4267 = load <8 x i32>, ptr %4266, align 4, !tbaa !5
  %4268 = shufflevector <8 x i32> %4267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4269 = getelementptr inbounds i32, ptr %4262, i64 -23
  %4270 = load <8 x i32>, ptr %4269, align 4, !tbaa !5
  %4271 = shufflevector <8 x i32> %4270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4272 = getelementptr inbounds i32, ptr %4262, i64 -31
  %4273 = load <8 x i32>, ptr %4272, align 4, !tbaa !5
  %4274 = shufflevector <8 x i32> %4273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4275 = mul <8 x i32> %4265, %4257
  %4276 = mul <8 x i32> %4268, %4258
  %4277 = mul <8 x i32> %4271, %4259
  %4278 = mul <8 x i32> %4274, %4260
  %4279 = add nuw i64 %4256, 32
  %4280 = icmp eq i64 %4279, %4253
  br i1 %4280, label %4281, label %4255, !llvm.loop !719

4281:                                             ; preds = %4255
  %4282 = mul <8 x i32> %4276, %4275
  %4283 = mul <8 x i32> %4277, %4282
  %4284 = mul <8 x i32> %4278, %4283
  %4285 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4284)
  %4286 = icmp eq i64 %4249, %4253
  br i1 %4286, label %4299, label %4287

4287:                                             ; preds = %4240, %4281
  %4288 = phi i64 [ %4243, %4240 ], [ %4254, %4281 ]
  %4289 = phi i32 [ 1, %4240 ], [ %4285, %4281 ]
  br label %4290

4290:                                             ; preds = %4287, %4290
  %4291 = phi i64 [ %4296, %4290 ], [ %4288, %4287 ]
  %4292 = phi i32 [ %4295, %4290 ], [ %4289, %4287 ]
  %4293 = getelementptr inbounds i32, ptr %11, i64 %4291
  %4294 = load i32, ptr %4293, align 4, !tbaa !5
  %4295 = mul nsw i32 %4294, %4292
  %4296 = add nsw i64 %4291, -1
  %4297 = trunc i64 %4291 to i32
  %4298 = icmp sgt i32 %4297, 0
  br i1 %4298, label %4290, label %4299, !llvm.loop !720

4299:                                             ; preds = %4290, %4281
  %4300 = phi i32 [ %4285, %4281 ], [ %4295, %4290 ]
  %4301 = and i64 %4250, 4294967295
  %4302 = getelementptr inbounds i32, ptr %6, i64 %4301
  %4303 = load i32, ptr %4302, align 4, !tbaa !5
  %4304 = mul nsw i32 %4303, %4300
  %4305 = add nsw i32 %4304, %4244
  %4306 = icmp sgt i64 %4242, 2
  %4307 = add nsw i64 %4243, -1
  %4308 = add i32 %4241, 1
  br i1 %4306, label %4240, label %4309, !llvm.loop !721

4309:                                             ; preds = %4299, %4236
  %4310 = phi i32 [ %4239, %4236 ], [ %4305, %4299 ]
  %4311 = icmp slt i32 %4310, %5
  br i1 %4311, label %4314, label %4312

4312:                                             ; preds = %4309
  %4313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4314:                                             ; preds = %4309
  %4315 = sext i32 %4310 to i64
  %4316 = getelementptr inbounds i32, ptr %3762, i64 %4315
  %4317 = load i32, ptr %4316, align 4, !tbaa !5
  %4318 = sitofp i32 %4317 to double
  %4319 = icmp slt i32 %4317, 0
  %4320 = fneg fast double %4318
  %4321 = select fast i1 %4319, double %4320, double %4318
  %4322 = tail call fast double @llvm.maxnum.f64(double %4237, double %4321)
  store double %4322, ptr %3764, align 8, !tbaa !18
  %4323 = add nuw nsw i32 %4238, 1
  br i1 %4086, label %4324, label %4374

4324:                                             ; preds = %4314
  %4325 = load i32, ptr %4, align 4, !tbaa !5
  %4326 = load i32, ptr %12, align 4, !tbaa !5
  %4327 = add nsw i32 %4326, -1
  %4328 = icmp slt i32 %4325, %4327
  br i1 %4328, label %4351, label %4329

4329:                                             ; preds = %4324
  %4330 = icmp eq i32 %4325, %4327
  br i1 %4330, label %4331, label %4367

4331:                                             ; preds = %4329
  store i32 0, ptr %4, align 4, !tbaa !5
  %4332 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4332, ptr %6, align 4, !tbaa !5
  br i1 %4091, label %4374, label %4333

4333:                                             ; preds = %4331, %4361
  %4334 = phi i64 [ %4365, %4361 ], [ 1, %4331 ]
  %4335 = getelementptr inbounds i32, ptr %4, i64 %4334
  %4336 = load i32, ptr %4335, align 4, !tbaa !5
  %4337 = getelementptr inbounds i32, ptr %12, i64 %4334
  %4338 = load i32, ptr %4337, align 4, !tbaa !5
  %4339 = add nsw i32 %4338, -1
  %4340 = icmp slt i32 %4336, %4339
  br i1 %4340, label %4341, label %4359

4341:                                             ; preds = %4333
  br i1 %4328, label %4351, label %4342

4342:                                             ; preds = %4341
  %4343 = shl i64 %4334, 32
  %4344 = add i64 %4343, -4294967296
  %4345 = ashr exact i64 %4344, 32
  %4346 = getelementptr inbounds i32, ptr %7, i64 %4345
  %4347 = load i32, ptr %4346, align 4, !tbaa !5
  %4348 = getelementptr inbounds i32, ptr %6, i64 %4334
  %4349 = load i32, ptr %4348, align 4, !tbaa !5
  %4350 = add nsw i32 %4349, %4347
  store i32 %4350, ptr %4348, align 4, !tbaa !5
  br label %4369

4351:                                             ; preds = %4324, %4341
  %4352 = phi i32 [ %4336, %4341 ], [ %4325, %4324 ]
  %4353 = phi ptr [ %4335, %4341 ], [ %4, %4324 ]
  %4354 = phi i64 [ %4334, %4341 ], [ 0, %4324 ]
  %4355 = add nsw i32 %4352, 1
  store i32 %4355, ptr %4353, align 4, !tbaa !5
  %4356 = getelementptr inbounds i32, ptr %7, i64 %4354
  %4357 = load i32, ptr %4356, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %6, i64 %4354
  br label %4369

4359:                                             ; preds = %4333
  %4360 = icmp eq i32 %4336, %4339
  br i1 %4360, label %4361, label %4367

4361:                                             ; preds = %4359
  store i32 0, ptr %4335, align 4, !tbaa !5
  %4362 = getelementptr inbounds i32, ptr %8, i64 %4334
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = getelementptr inbounds i32, ptr %6, i64 %4334
  store i32 %4363, ptr %4364, align 4, !tbaa !5
  %4365 = add nuw nsw i64 %4334, 1
  %4366 = icmp eq i64 %4365, %4089
  br i1 %4366, label %4374, label %4333, !llvm.loop !722

4367:                                             ; preds = %4329, %4359
  %4368 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4369:                                             ; preds = %4342, %4351
  %4370 = phi ptr [ %4358, %4351 ], [ %4335, %4342 ]
  %4371 = phi i32 [ %4357, %4351 ], [ 1, %4342 ]
  %4372 = load i32, ptr %4370, align 4, !tbaa !5
  %4373 = add nsw i32 %4372, %4371
  store i32 %4373, ptr %4370, align 4, !tbaa !5
  br label %4374

4374:                                             ; preds = %4361, %4369, %4331, %4314
  %4375 = icmp eq i32 %4323, %5
  br i1 %4375, label %5630, label %4236, !llvm.loop !723

4376:                                             ; preds = %3774
  %4377 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1335, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

4378:                                             ; preds = %18
  %4379 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4380 = load ptr, ptr %4379, align 8, !tbaa !9
  %4381 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4382 = load ptr, ptr %4381, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4382, align 4, !tbaa !162
  %4383 = icmp eq i32 %13, 0
  br i1 %4383, label %4384, label %4392

4384:                                             ; preds = %4378
  %4385 = load i32, ptr %4380, align 4, !tbaa !5
  %4386 = sitofp i32 %4385 to float
  %4387 = icmp slt i32 %4385, 0
  %4388 = fneg fast float %4386
  %4389 = select fast i1 %4387, float %4388, float %4386
  %4390 = fcmp fast ole float %4389, 0.000000e+00
  %4391 = select fast i1 %4390, float 0.000000e+00, float %4389
  store float %4391, ptr %4382, align 4, !tbaa !162
  br label %5630

4392:                                             ; preds = %4378
  switch i32 %1, label %5001 [
    i32 1, label %4393
    i32 0, label %4703
  ]

4393:                                             ; preds = %4392
  %4394 = getelementptr inbounds i32, ptr %3, i64 %19
  %4395 = load i32, ptr %4394, align 4, !tbaa !5
  %4396 = icmp eq i32 %4395, 0
  %4397 = icmp sgt i32 %5, 0
  br i1 %4396, label %4407, label %4398

4398:                                             ; preds = %4393
  br i1 %4397, label %4399, label %5630

4399:                                             ; preds = %4398
  %4400 = icmp sgt i32 %13, 1
  %4401 = icmp sgt i32 %13, 0
  %4402 = add i32 %13, -2
  %4403 = zext i32 %4402 to i64
  %4404 = zext i32 %13 to i64
  %4405 = add nuw i32 %5, 1
  %4406 = icmp eq i32 %13, 1
  br label %4559

4407:                                             ; preds = %4393
  br i1 %4397, label %4408, label %5630

4408:                                             ; preds = %4407
  %4409 = icmp sgt i32 %13, 1
  %4410 = icmp sgt i32 %13, 0
  %4411 = add i32 %13, -2
  %4412 = zext i32 %4411 to i64
  %4413 = zext i32 %13 to i64
  %4414 = add nuw i32 %5, 1
  %4415 = icmp eq i32 %13, 1
  br label %4416

4416:                                             ; preds = %4408, %4557
  %4417 = phi float [ 0.000000e+00, %4408 ], [ %4507, %4557 ]
  %4418 = phi i32 [ 0, %4408 ], [ %4509, %4557 ]
  %4419 = phi double [ 0.000000e+00, %4408 ], [ %4508, %4557 ]
  %4420 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4409, label %4421, label %4490

4421:                                             ; preds = %4416, %4480
  %4422 = phi i32 [ %4489, %4480 ], [ 0, %4416 ]
  %4423 = phi i64 [ %4431, %4480 ], [ %4413, %4416 ]
  %4424 = phi i64 [ %4488, %4480 ], [ %4412, %4416 ]
  %4425 = phi i32 [ %4486, %4480 ], [ %4420, %4416 ]
  %4426 = sub i32 %4411, %4422
  %4427 = tail call i32 @llvm.smin.i32(i32 %4426, i32 0)
  %4428 = sub i32 %4426, %4427
  %4429 = zext i32 %4428 to i64
  %4430 = add nuw nsw i64 %4429, 1
  %4431 = add nsw i64 %4423, -1
  %4432 = icmp ult i32 %4428, 31
  br i1 %4432, label %4468, label %4433

4433:                                             ; preds = %4421
  %4434 = and i64 %4430, 8589934560
  %4435 = sub i64 %4424, %4434
  br label %4436

4436:                                             ; preds = %4436, %4433
  %4437 = phi i64 [ 0, %4433 ], [ %4460, %4436 ]
  %4438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4456, %4436 ]
  %4439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4457, %4436 ]
  %4440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4458, %4436 ]
  %4441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4433 ], [ %4459, %4436 ]
  %4442 = sub i64 %4424, %4437
  %4443 = getelementptr inbounds i32, ptr %9, i64 %4442
  %4444 = getelementptr inbounds i32, ptr %4443, i64 -7
  %4445 = load <8 x i32>, ptr %4444, align 4, !tbaa !5
  %4446 = shufflevector <8 x i32> %4445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4447 = getelementptr inbounds i32, ptr %4443, i64 -15
  %4448 = load <8 x i32>, ptr %4447, align 4, !tbaa !5
  %4449 = shufflevector <8 x i32> %4448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4450 = getelementptr inbounds i32, ptr %4443, i64 -23
  %4451 = load <8 x i32>, ptr %4450, align 4, !tbaa !5
  %4452 = shufflevector <8 x i32> %4451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4453 = getelementptr inbounds i32, ptr %4443, i64 -31
  %4454 = load <8 x i32>, ptr %4453, align 4, !tbaa !5
  %4455 = shufflevector <8 x i32> %4454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4456 = mul <8 x i32> %4446, %4438
  %4457 = mul <8 x i32> %4449, %4439
  %4458 = mul <8 x i32> %4452, %4440
  %4459 = mul <8 x i32> %4455, %4441
  %4460 = add nuw i64 %4437, 32
  %4461 = icmp eq i64 %4460, %4434
  br i1 %4461, label %4462, label %4436, !llvm.loop !724

4462:                                             ; preds = %4436
  %4463 = mul <8 x i32> %4457, %4456
  %4464 = mul <8 x i32> %4458, %4463
  %4465 = mul <8 x i32> %4459, %4464
  %4466 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4465)
  %4467 = icmp eq i64 %4430, %4434
  br i1 %4467, label %4480, label %4468

4468:                                             ; preds = %4421, %4462
  %4469 = phi i64 [ %4424, %4421 ], [ %4435, %4462 ]
  %4470 = phi i32 [ 1, %4421 ], [ %4466, %4462 ]
  br label %4471

4471:                                             ; preds = %4468, %4471
  %4472 = phi i64 [ %4477, %4471 ], [ %4469, %4468 ]
  %4473 = phi i32 [ %4476, %4471 ], [ %4470, %4468 ]
  %4474 = getelementptr inbounds i32, ptr %9, i64 %4472
  %4475 = load i32, ptr %4474, align 4, !tbaa !5
  %4476 = mul nsw i32 %4475, %4473
  %4477 = add nsw i64 %4472, -1
  %4478 = trunc i64 %4472 to i32
  %4479 = icmp sgt i32 %4478, 0
  br i1 %4479, label %4471, label %4480, !llvm.loop !725

4480:                                             ; preds = %4471, %4462
  %4481 = phi i32 [ %4466, %4462 ], [ %4476, %4471 ]
  %4482 = and i64 %4431, 4294967295
  %4483 = getelementptr inbounds i32, ptr %6, i64 %4482
  %4484 = load i32, ptr %4483, align 4, !tbaa !5
  %4485 = mul nsw i32 %4484, %4481
  %4486 = add nsw i32 %4485, %4425
  %4487 = icmp sgt i64 %4423, 2
  %4488 = add nsw i64 %4424, -1
  %4489 = add i32 %4422, 1
  br i1 %4487, label %4421, label %4490, !llvm.loop !726

4490:                                             ; preds = %4480, %4416
  %4491 = phi i32 [ %4420, %4416 ], [ %4486, %4480 ]
  %4492 = sext i32 %4491 to i64
  %4493 = getelementptr inbounds double, ptr %2, i64 %4492
  %4494 = load double, ptr %4493, align 8, !tbaa !18
  %4495 = getelementptr inbounds i32, ptr %4380, i64 %4492
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = sitofp i32 %4496 to float
  %4498 = fpext float %4417 to double
  %4499 = fpext float %4497 to double
  %4500 = fmul fast double %4494, %4499
  %4501 = fcmp fast uge double %4500, 0.000000e+00
  %4502 = fneg fast double %4500
  %4503 = tail call fast double @llvm.fabs.f64(double %4500)
  %4504 = fcmp fast ole double %4503, %4498
  %4505 = select nnan ninf i1 %4501, double %4500, double %4502
  %4506 = fptrunc double %4505 to float
  %4507 = select i1 %4504, float %4417, float %4506
  %4508 = fadd fast double %4494, %4419
  %4509 = add nuw nsw i32 %4418, 1
  br i1 %4410, label %4510, label %4557

4510:                                             ; preds = %4490
  %4511 = load i32, ptr %4, align 4, !tbaa !5
  %4512 = load i32, ptr %12, align 4, !tbaa !5
  %4513 = add nsw i32 %4512, -1
  %4514 = icmp slt i32 %4511, %4513
  br i1 %4514, label %4534, label %4515

4515:                                             ; preds = %4510
  %4516 = icmp eq i32 %4511, %4513
  br i1 %4516, label %4517, label %4550

4517:                                             ; preds = %4515
  store i32 0, ptr %4, align 4, !tbaa !5
  %4518 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4518, ptr %6, align 4, !tbaa !5
  br i1 %4415, label %4557, label %4519

4519:                                             ; preds = %4517, %4544
  %4520 = phi i64 [ %4548, %4544 ], [ 1, %4517 ]
  %4521 = getelementptr inbounds i32, ptr %4, i64 %4520
  %4522 = load i32, ptr %4521, align 4, !tbaa !5
  %4523 = getelementptr inbounds i32, ptr %12, i64 %4520
  %4524 = load i32, ptr %4523, align 4, !tbaa !5
  %4525 = add nsw i32 %4524, -1
  %4526 = icmp slt i32 %4522, %4525
  br i1 %4526, label %4527, label %4542

4527:                                             ; preds = %4519
  br i1 %4514, label %4534, label %4528

4528:                                             ; preds = %4527
  %4529 = getelementptr inbounds i32, ptr %7, i64 %4520
  %4530 = load i32, ptr %4529, align 4, !tbaa !5
  %4531 = getelementptr inbounds i32, ptr %6, i64 %4520
  %4532 = load i32, ptr %4531, align 4, !tbaa !5
  %4533 = add nsw i32 %4532, %4530
  store i32 %4533, ptr %4531, align 4, !tbaa !5
  br label %4552

4534:                                             ; preds = %4510, %4527
  %4535 = phi i32 [ %4522, %4527 ], [ %4511, %4510 ]
  %4536 = phi ptr [ %4521, %4527 ], [ %4, %4510 ]
  %4537 = phi i64 [ %4520, %4527 ], [ 0, %4510 ]
  %4538 = add nsw i32 %4535, 1
  store i32 %4538, ptr %4536, align 4, !tbaa !5
  %4539 = getelementptr inbounds i32, ptr %7, i64 %4537
  %4540 = load i32, ptr %4539, align 4, !tbaa !5
  %4541 = getelementptr inbounds i32, ptr %6, i64 %4537
  br label %4552

4542:                                             ; preds = %4519
  %4543 = icmp eq i32 %4522, %4525
  br i1 %4543, label %4544, label %4550

4544:                                             ; preds = %4542
  store i32 0, ptr %4521, align 4, !tbaa !5
  %4545 = getelementptr inbounds i32, ptr %8, i64 %4520
  %4546 = load i32, ptr %4545, align 4, !tbaa !5
  %4547 = getelementptr inbounds i32, ptr %6, i64 %4520
  store i32 %4546, ptr %4547, align 4, !tbaa !5
  %4548 = add nuw nsw i64 %4520, 1
  %4549 = icmp eq i64 %4548, %4413
  br i1 %4549, label %4557, label %4519, !llvm.loop !727

4550:                                             ; preds = %4515, %4542
  store float %4507, ptr %4382, align 4, !tbaa !162
  %4551 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4552:                                             ; preds = %4528, %4534
  %4553 = phi ptr [ %4541, %4534 ], [ %4521, %4528 ]
  %4554 = phi i32 [ %4540, %4534 ], [ 1, %4528 ]
  %4555 = load i32, ptr %4553, align 4, !tbaa !5
  %4556 = add nsw i32 %4555, %4554
  store i32 %4556, ptr %4553, align 4, !tbaa !5
  br label %4557

4557:                                             ; preds = %4544, %4552, %4517, %4490
  %4558 = icmp eq i32 %4509, %5
  br i1 %4558, label %5627, label %4416, !llvm.loop !728

4559:                                             ; preds = %4399, %4701
  %4560 = phi float [ 0.000000e+00, %4399 ], [ %4649, %4701 ]
  %4561 = phi i32 [ 0, %4399 ], [ %4650, %4701 ]
  %4562 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4400, label %4563, label %4632

4563:                                             ; preds = %4559, %4622
  %4564 = phi i32 [ %4631, %4622 ], [ 0, %4559 ]
  %4565 = phi i64 [ %4573, %4622 ], [ %4404, %4559 ]
  %4566 = phi i64 [ %4630, %4622 ], [ %4403, %4559 ]
  %4567 = phi i32 [ %4628, %4622 ], [ %4562, %4559 ]
  %4568 = sub i32 %4402, %4564
  %4569 = tail call i32 @llvm.smin.i32(i32 %4568, i32 0)
  %4570 = sub i32 %4568, %4569
  %4571 = zext i32 %4570 to i64
  %4572 = add nuw nsw i64 %4571, 1
  %4573 = add nsw i64 %4565, -1
  %4574 = icmp ult i32 %4570, 31
  br i1 %4574, label %4610, label %4575

4575:                                             ; preds = %4563
  %4576 = and i64 %4572, 8589934560
  %4577 = sub i64 %4566, %4576
  br label %4578

4578:                                             ; preds = %4578, %4575
  %4579 = phi i64 [ 0, %4575 ], [ %4602, %4578 ]
  %4580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4598, %4578 ]
  %4581 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4599, %4578 ]
  %4582 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4600, %4578 ]
  %4583 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4575 ], [ %4601, %4578 ]
  %4584 = sub i64 %4566, %4579
  %4585 = getelementptr inbounds i32, ptr %11, i64 %4584
  %4586 = getelementptr inbounds i32, ptr %4585, i64 -7
  %4587 = load <8 x i32>, ptr %4586, align 4, !tbaa !5
  %4588 = shufflevector <8 x i32> %4587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4589 = getelementptr inbounds i32, ptr %4585, i64 -15
  %4590 = load <8 x i32>, ptr %4589, align 4, !tbaa !5
  %4591 = shufflevector <8 x i32> %4590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4592 = getelementptr inbounds i32, ptr %4585, i64 -23
  %4593 = load <8 x i32>, ptr %4592, align 4, !tbaa !5
  %4594 = shufflevector <8 x i32> %4593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4595 = getelementptr inbounds i32, ptr %4585, i64 -31
  %4596 = load <8 x i32>, ptr %4595, align 4, !tbaa !5
  %4597 = shufflevector <8 x i32> %4596, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4598 = mul <8 x i32> %4588, %4580
  %4599 = mul <8 x i32> %4591, %4581
  %4600 = mul <8 x i32> %4594, %4582
  %4601 = mul <8 x i32> %4597, %4583
  %4602 = add nuw i64 %4579, 32
  %4603 = icmp eq i64 %4602, %4576
  br i1 %4603, label %4604, label %4578, !llvm.loop !729

4604:                                             ; preds = %4578
  %4605 = mul <8 x i32> %4599, %4598
  %4606 = mul <8 x i32> %4600, %4605
  %4607 = mul <8 x i32> %4601, %4606
  %4608 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4607)
  %4609 = icmp eq i64 %4572, %4576
  br i1 %4609, label %4622, label %4610

4610:                                             ; preds = %4563, %4604
  %4611 = phi i64 [ %4566, %4563 ], [ %4577, %4604 ]
  %4612 = phi i32 [ 1, %4563 ], [ %4608, %4604 ]
  br label %4613

4613:                                             ; preds = %4610, %4613
  %4614 = phi i64 [ %4619, %4613 ], [ %4611, %4610 ]
  %4615 = phi i32 [ %4618, %4613 ], [ %4612, %4610 ]
  %4616 = getelementptr inbounds i32, ptr %11, i64 %4614
  %4617 = load i32, ptr %4616, align 4, !tbaa !5
  %4618 = mul nsw i32 %4617, %4615
  %4619 = add nsw i64 %4614, -1
  %4620 = trunc i64 %4614 to i32
  %4621 = icmp sgt i32 %4620, 0
  br i1 %4621, label %4613, label %4622, !llvm.loop !730

4622:                                             ; preds = %4613, %4604
  %4623 = phi i32 [ %4608, %4604 ], [ %4618, %4613 ]
  %4624 = and i64 %4573, 4294967295
  %4625 = getelementptr inbounds i32, ptr %6, i64 %4624
  %4626 = load i32, ptr %4625, align 4, !tbaa !5
  %4627 = mul nsw i32 %4626, %4623
  %4628 = add nsw i32 %4627, %4567
  %4629 = icmp sgt i64 %4565, 2
  %4630 = add nsw i64 %4566, -1
  %4631 = add i32 %4564, 1
  br i1 %4629, label %4563, label %4632, !llvm.loop !731

4632:                                             ; preds = %4622, %4559
  %4633 = phi i32 [ %4562, %4559 ], [ %4628, %4622 ]
  %4634 = icmp slt i32 %4633, %5
  br i1 %4634, label %4637, label %4635

4635:                                             ; preds = %4632
  %4636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4637:                                             ; preds = %4632
  %4638 = sext i32 %4633 to i64
  %4639 = getelementptr inbounds i32, ptr %4380, i64 %4638
  %4640 = load i32, ptr %4639, align 4, !tbaa !5
  %4641 = sitofp i32 %4640 to float
  %4642 = fpext float %4560 to double
  %4643 = fpext float %4641 to double
  %4644 = icmp slt i32 %4640, 0
  %4645 = fneg fast double %4643
  %4646 = select i1 %4644, double %4645, double %4643
  %4647 = fcmp fast ole double %4646, %4642
  %4648 = fptrunc double %4646 to float
  %4649 = select fast i1 %4647, float %4560, float %4648
  store float %4649, ptr %4382, align 4, !tbaa !162
  %4650 = add nuw nsw i32 %4561, 1
  br i1 %4401, label %4651, label %4701

4651:                                             ; preds = %4637
  %4652 = load i32, ptr %4, align 4, !tbaa !5
  %4653 = load i32, ptr %12, align 4, !tbaa !5
  %4654 = add nsw i32 %4653, -1
  %4655 = icmp slt i32 %4652, %4654
  br i1 %4655, label %4678, label %4656

4656:                                             ; preds = %4651
  %4657 = icmp eq i32 %4652, %4654
  br i1 %4657, label %4658, label %4694

4658:                                             ; preds = %4656
  store i32 0, ptr %4, align 4, !tbaa !5
  %4659 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4659, ptr %6, align 4, !tbaa !5
  br i1 %4406, label %4701, label %4660

4660:                                             ; preds = %4658, %4688
  %4661 = phi i64 [ %4692, %4688 ], [ 1, %4658 ]
  %4662 = getelementptr inbounds i32, ptr %4, i64 %4661
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = getelementptr inbounds i32, ptr %12, i64 %4661
  %4665 = load i32, ptr %4664, align 4, !tbaa !5
  %4666 = add nsw i32 %4665, -1
  %4667 = icmp slt i32 %4663, %4666
  br i1 %4667, label %4668, label %4686

4668:                                             ; preds = %4660
  br i1 %4655, label %4678, label %4669

4669:                                             ; preds = %4668
  %4670 = shl i64 %4661, 32
  %4671 = add i64 %4670, -4294967296
  %4672 = ashr exact i64 %4671, 32
  %4673 = getelementptr inbounds i32, ptr %7, i64 %4672
  %4674 = load i32, ptr %4673, align 4, !tbaa !5
  %4675 = getelementptr inbounds i32, ptr %6, i64 %4661
  %4676 = load i32, ptr %4675, align 4, !tbaa !5
  %4677 = add nsw i32 %4676, %4674
  store i32 %4677, ptr %4675, align 4, !tbaa !5
  br label %4696

4678:                                             ; preds = %4651, %4668
  %4679 = phi i32 [ %4663, %4668 ], [ %4652, %4651 ]
  %4680 = phi ptr [ %4662, %4668 ], [ %4, %4651 ]
  %4681 = phi i64 [ %4661, %4668 ], [ 0, %4651 ]
  %4682 = add nsw i32 %4679, 1
  store i32 %4682, ptr %4680, align 4, !tbaa !5
  %4683 = getelementptr inbounds i32, ptr %7, i64 %4681
  %4684 = load i32, ptr %4683, align 4, !tbaa !5
  %4685 = getelementptr inbounds i32, ptr %6, i64 %4681
  br label %4696

4686:                                             ; preds = %4660
  %4687 = icmp eq i32 %4663, %4666
  br i1 %4687, label %4688, label %4694

4688:                                             ; preds = %4686
  store i32 0, ptr %4662, align 4, !tbaa !5
  %4689 = getelementptr inbounds i32, ptr %8, i64 %4661
  %4690 = load i32, ptr %4689, align 4, !tbaa !5
  %4691 = getelementptr inbounds i32, ptr %6, i64 %4661
  store i32 %4690, ptr %4691, align 4, !tbaa !5
  %4692 = add nuw nsw i64 %4661, 1
  %4693 = icmp eq i64 %4692, %4404
  br i1 %4693, label %4701, label %4660, !llvm.loop !732

4694:                                             ; preds = %4656, %4686
  %4695 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4696:                                             ; preds = %4669, %4678
  %4697 = phi ptr [ %4685, %4678 ], [ %4662, %4669 ]
  %4698 = phi i32 [ %4684, %4678 ], [ 1, %4669 ]
  %4699 = load i32, ptr %4697, align 4, !tbaa !5
  %4700 = add nsw i32 %4699, %4698
  store i32 %4700, ptr %4697, align 4, !tbaa !5
  br label %4701

4701:                                             ; preds = %4688, %4696, %4658, %4637
  %4702 = icmp eq i32 %4650, %5
  br i1 %4702, label %5630, label %4559, !llvm.loop !733

4703:                                             ; preds = %4392
  %4704 = getelementptr inbounds i32, ptr %3, i64 %19
  %4705 = load i32, ptr %4704, align 4, !tbaa !5
  %4706 = icmp eq i32 %4705, 0
  %4707 = icmp sgt i32 %5, 0
  br i1 %4706, label %4717, label %4708

4708:                                             ; preds = %4703
  br i1 %4707, label %4709, label %5630

4709:                                             ; preds = %4708
  %4710 = icmp sgt i32 %13, 1
  %4711 = icmp sgt i32 %13, 0
  %4712 = add i32 %13, -2
  %4713 = zext i32 %4712 to i64
  %4714 = zext i32 %13 to i64
  %4715 = add nuw i32 %5, 1
  %4716 = icmp eq i32 %13, 1
  br label %4861

4717:                                             ; preds = %4703
  br i1 %4707, label %4718, label %5630

4718:                                             ; preds = %4717
  %4719 = icmp sgt i32 %13, 1
  %4720 = icmp sgt i32 %13, 0
  %4721 = add i32 %13, -2
  %4722 = zext i32 %4721 to i64
  %4723 = zext i32 %13 to i64
  %4724 = add nuw i32 %5, 1
  %4725 = icmp eq i32 %13, 1
  br label %4726

4726:                                             ; preds = %4718, %4859
  %4727 = phi float [ 0.000000e+00, %4718 ], [ %4809, %4859 ]
  %4728 = phi i32 [ 0, %4718 ], [ %4811, %4859 ]
  %4729 = phi double [ 0.000000e+00, %4718 ], [ %4810, %4859 ]
  %4730 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4719, label %4731, label %4800

4731:                                             ; preds = %4726, %4790
  %4732 = phi i32 [ %4799, %4790 ], [ 0, %4726 ]
  %4733 = phi i64 [ %4741, %4790 ], [ %4723, %4726 ]
  %4734 = phi i64 [ %4798, %4790 ], [ %4722, %4726 ]
  %4735 = phi i32 [ %4796, %4790 ], [ %4730, %4726 ]
  %4736 = sub i32 %4721, %4732
  %4737 = tail call i32 @llvm.smin.i32(i32 %4736, i32 0)
  %4738 = sub i32 %4736, %4737
  %4739 = zext i32 %4738 to i64
  %4740 = add nuw nsw i64 %4739, 1
  %4741 = add nsw i64 %4733, -1
  %4742 = icmp ult i32 %4738, 31
  br i1 %4742, label %4778, label %4743

4743:                                             ; preds = %4731
  %4744 = and i64 %4740, 8589934560
  %4745 = sub i64 %4734, %4744
  br label %4746

4746:                                             ; preds = %4746, %4743
  %4747 = phi i64 [ 0, %4743 ], [ %4770, %4746 ]
  %4748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4766, %4746 ]
  %4749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4767, %4746 ]
  %4750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4768, %4746 ]
  %4751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4743 ], [ %4769, %4746 ]
  %4752 = sub i64 %4734, %4747
  %4753 = getelementptr inbounds i32, ptr %9, i64 %4752
  %4754 = getelementptr inbounds i32, ptr %4753, i64 -7
  %4755 = load <8 x i32>, ptr %4754, align 4, !tbaa !5
  %4756 = shufflevector <8 x i32> %4755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4757 = getelementptr inbounds i32, ptr %4753, i64 -15
  %4758 = load <8 x i32>, ptr %4757, align 4, !tbaa !5
  %4759 = shufflevector <8 x i32> %4758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4760 = getelementptr inbounds i32, ptr %4753, i64 -23
  %4761 = load <8 x i32>, ptr %4760, align 4, !tbaa !5
  %4762 = shufflevector <8 x i32> %4761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4763 = getelementptr inbounds i32, ptr %4753, i64 -31
  %4764 = load <8 x i32>, ptr %4763, align 4, !tbaa !5
  %4765 = shufflevector <8 x i32> %4764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4766 = mul <8 x i32> %4756, %4748
  %4767 = mul <8 x i32> %4759, %4749
  %4768 = mul <8 x i32> %4762, %4750
  %4769 = mul <8 x i32> %4765, %4751
  %4770 = add nuw i64 %4747, 32
  %4771 = icmp eq i64 %4770, %4744
  br i1 %4771, label %4772, label %4746, !llvm.loop !734

4772:                                             ; preds = %4746
  %4773 = mul <8 x i32> %4767, %4766
  %4774 = mul <8 x i32> %4768, %4773
  %4775 = mul <8 x i32> %4769, %4774
  %4776 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4775)
  %4777 = icmp eq i64 %4740, %4744
  br i1 %4777, label %4790, label %4778

4778:                                             ; preds = %4731, %4772
  %4779 = phi i64 [ %4734, %4731 ], [ %4745, %4772 ]
  %4780 = phi i32 [ 1, %4731 ], [ %4776, %4772 ]
  br label %4781

4781:                                             ; preds = %4778, %4781
  %4782 = phi i64 [ %4787, %4781 ], [ %4779, %4778 ]
  %4783 = phi i32 [ %4786, %4781 ], [ %4780, %4778 ]
  %4784 = getelementptr inbounds i32, ptr %9, i64 %4782
  %4785 = load i32, ptr %4784, align 4, !tbaa !5
  %4786 = mul nsw i32 %4785, %4783
  %4787 = add nsw i64 %4782, -1
  %4788 = trunc i64 %4782 to i32
  %4789 = icmp sgt i32 %4788, 0
  br i1 %4789, label %4781, label %4790, !llvm.loop !735

4790:                                             ; preds = %4781, %4772
  %4791 = phi i32 [ %4776, %4772 ], [ %4786, %4781 ]
  %4792 = and i64 %4741, 4294967295
  %4793 = getelementptr inbounds i32, ptr %6, i64 %4792
  %4794 = load i32, ptr %4793, align 4, !tbaa !5
  %4795 = mul nsw i32 %4794, %4791
  %4796 = add nsw i32 %4795, %4735
  %4797 = icmp sgt i64 %4733, 2
  %4798 = add nsw i64 %4734, -1
  %4799 = add i32 %4732, 1
  br i1 %4797, label %4731, label %4800, !llvm.loop !736

4800:                                             ; preds = %4790, %4726
  %4801 = phi i32 [ %4730, %4726 ], [ %4796, %4790 ]
  %4802 = sext i32 %4801 to i64
  %4803 = getelementptr inbounds i32, ptr %4380, i64 %4802
  %4804 = load i32, ptr %4803, align 4, !tbaa !5
  %4805 = sitofp i32 %4804 to float
  %4806 = icmp slt i32 %4804, 0
  %4807 = fneg fast float %4805
  %4808 = select fast i1 %4806, float %4807, float %4805
  %4809 = tail call fast float @llvm.maxnum.f32(float %4727, float %4808)
  %4810 = fadd fast double %4729, 1.000000e+00
  %4811 = add nuw nsw i32 %4728, 1
  br i1 %4720, label %4812, label %4859

4812:                                             ; preds = %4800
  %4813 = load i32, ptr %4, align 4, !tbaa !5
  %4814 = load i32, ptr %12, align 4, !tbaa !5
  %4815 = add nsw i32 %4814, -1
  %4816 = icmp slt i32 %4813, %4815
  br i1 %4816, label %4836, label %4817

4817:                                             ; preds = %4812
  %4818 = icmp eq i32 %4813, %4815
  br i1 %4818, label %4819, label %4852

4819:                                             ; preds = %4817
  store i32 0, ptr %4, align 4, !tbaa !5
  %4820 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4820, ptr %6, align 4, !tbaa !5
  br i1 %4725, label %4859, label %4821

4821:                                             ; preds = %4819, %4846
  %4822 = phi i64 [ %4850, %4846 ], [ 1, %4819 ]
  %4823 = getelementptr inbounds i32, ptr %4, i64 %4822
  %4824 = load i32, ptr %4823, align 4, !tbaa !5
  %4825 = getelementptr inbounds i32, ptr %12, i64 %4822
  %4826 = load i32, ptr %4825, align 4, !tbaa !5
  %4827 = add nsw i32 %4826, -1
  %4828 = icmp slt i32 %4824, %4827
  br i1 %4828, label %4829, label %4844

4829:                                             ; preds = %4821
  br i1 %4816, label %4836, label %4830

4830:                                             ; preds = %4829
  %4831 = getelementptr inbounds i32, ptr %7, i64 %4822
  %4832 = load i32, ptr %4831, align 4, !tbaa !5
  %4833 = getelementptr inbounds i32, ptr %6, i64 %4822
  %4834 = load i32, ptr %4833, align 4, !tbaa !5
  %4835 = add nsw i32 %4834, %4832
  store i32 %4835, ptr %4833, align 4, !tbaa !5
  br label %4854

4836:                                             ; preds = %4812, %4829
  %4837 = phi i32 [ %4824, %4829 ], [ %4813, %4812 ]
  %4838 = phi ptr [ %4823, %4829 ], [ %4, %4812 ]
  %4839 = phi i64 [ %4822, %4829 ], [ 0, %4812 ]
  %4840 = add nsw i32 %4837, 1
  store i32 %4840, ptr %4838, align 4, !tbaa !5
  %4841 = getelementptr inbounds i32, ptr %7, i64 %4839
  %4842 = load i32, ptr %4841, align 4, !tbaa !5
  %4843 = getelementptr inbounds i32, ptr %6, i64 %4839
  br label %4854

4844:                                             ; preds = %4821
  %4845 = icmp eq i32 %4824, %4827
  br i1 %4845, label %4846, label %4852

4846:                                             ; preds = %4844
  store i32 0, ptr %4823, align 4, !tbaa !5
  %4847 = getelementptr inbounds i32, ptr %8, i64 %4822
  %4848 = load i32, ptr %4847, align 4, !tbaa !5
  %4849 = getelementptr inbounds i32, ptr %6, i64 %4822
  store i32 %4848, ptr %4849, align 4, !tbaa !5
  %4850 = add nuw nsw i64 %4822, 1
  %4851 = icmp eq i64 %4850, %4723
  br i1 %4851, label %4859, label %4821, !llvm.loop !737

4852:                                             ; preds = %4817, %4844
  store float %4809, ptr %4382, align 4, !tbaa !162
  %4853 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4854:                                             ; preds = %4830, %4836
  %4855 = phi ptr [ %4843, %4836 ], [ %4823, %4830 ]
  %4856 = phi i32 [ %4842, %4836 ], [ 1, %4830 ]
  %4857 = load i32, ptr %4855, align 4, !tbaa !5
  %4858 = add nsw i32 %4857, %4856
  store i32 %4858, ptr %4855, align 4, !tbaa !5
  br label %4859

4859:                                             ; preds = %4846, %4854, %4819, %4800
  %4860 = icmp eq i32 %4811, %5
  br i1 %4860, label %5628, label %4726, !llvm.loop !738

4861:                                             ; preds = %4709, %4999
  %4862 = phi float [ 0.000000e+00, %4709 ], [ %4947, %4999 ]
  %4863 = phi i32 [ 0, %4709 ], [ %4948, %4999 ]
  %4864 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4710, label %4865, label %4934

4865:                                             ; preds = %4861, %4924
  %4866 = phi i32 [ %4933, %4924 ], [ 0, %4861 ]
  %4867 = phi i64 [ %4875, %4924 ], [ %4714, %4861 ]
  %4868 = phi i64 [ %4932, %4924 ], [ %4713, %4861 ]
  %4869 = phi i32 [ %4930, %4924 ], [ %4864, %4861 ]
  %4870 = sub i32 %4712, %4866
  %4871 = tail call i32 @llvm.smin.i32(i32 %4870, i32 0)
  %4872 = sub i32 %4870, %4871
  %4873 = zext i32 %4872 to i64
  %4874 = add nuw nsw i64 %4873, 1
  %4875 = add nsw i64 %4867, -1
  %4876 = icmp ult i32 %4872, 31
  br i1 %4876, label %4912, label %4877

4877:                                             ; preds = %4865
  %4878 = and i64 %4874, 8589934560
  %4879 = sub i64 %4868, %4878
  br label %4880

4880:                                             ; preds = %4880, %4877
  %4881 = phi i64 [ 0, %4877 ], [ %4904, %4880 ]
  %4882 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4900, %4880 ]
  %4883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4901, %4880 ]
  %4884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4902, %4880 ]
  %4885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4877 ], [ %4903, %4880 ]
  %4886 = sub i64 %4868, %4881
  %4887 = getelementptr inbounds i32, ptr %11, i64 %4886
  %4888 = getelementptr inbounds i32, ptr %4887, i64 -7
  %4889 = load <8 x i32>, ptr %4888, align 4, !tbaa !5
  %4890 = shufflevector <8 x i32> %4889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4891 = getelementptr inbounds i32, ptr %4887, i64 -15
  %4892 = load <8 x i32>, ptr %4891, align 4, !tbaa !5
  %4893 = shufflevector <8 x i32> %4892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4894 = getelementptr inbounds i32, ptr %4887, i64 -23
  %4895 = load <8 x i32>, ptr %4894, align 4, !tbaa !5
  %4896 = shufflevector <8 x i32> %4895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4897 = getelementptr inbounds i32, ptr %4887, i64 -31
  %4898 = load <8 x i32>, ptr %4897, align 4, !tbaa !5
  %4899 = shufflevector <8 x i32> %4898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4900 = mul <8 x i32> %4890, %4882
  %4901 = mul <8 x i32> %4893, %4883
  %4902 = mul <8 x i32> %4896, %4884
  %4903 = mul <8 x i32> %4899, %4885
  %4904 = add nuw i64 %4881, 32
  %4905 = icmp eq i64 %4904, %4878
  br i1 %4905, label %4906, label %4880, !llvm.loop !739

4906:                                             ; preds = %4880
  %4907 = mul <8 x i32> %4901, %4900
  %4908 = mul <8 x i32> %4902, %4907
  %4909 = mul <8 x i32> %4903, %4908
  %4910 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4909)
  %4911 = icmp eq i64 %4874, %4878
  br i1 %4911, label %4924, label %4912

4912:                                             ; preds = %4865, %4906
  %4913 = phi i64 [ %4868, %4865 ], [ %4879, %4906 ]
  %4914 = phi i32 [ 1, %4865 ], [ %4910, %4906 ]
  br label %4915

4915:                                             ; preds = %4912, %4915
  %4916 = phi i64 [ %4921, %4915 ], [ %4913, %4912 ]
  %4917 = phi i32 [ %4920, %4915 ], [ %4914, %4912 ]
  %4918 = getelementptr inbounds i32, ptr %11, i64 %4916
  %4919 = load i32, ptr %4918, align 4, !tbaa !5
  %4920 = mul nsw i32 %4919, %4917
  %4921 = add nsw i64 %4916, -1
  %4922 = trunc i64 %4916 to i32
  %4923 = icmp sgt i32 %4922, 0
  br i1 %4923, label %4915, label %4924, !llvm.loop !740

4924:                                             ; preds = %4915, %4906
  %4925 = phi i32 [ %4910, %4906 ], [ %4920, %4915 ]
  %4926 = and i64 %4875, 4294967295
  %4927 = getelementptr inbounds i32, ptr %6, i64 %4926
  %4928 = load i32, ptr %4927, align 4, !tbaa !5
  %4929 = mul nsw i32 %4928, %4925
  %4930 = add nsw i32 %4929, %4869
  %4931 = icmp sgt i64 %4867, 2
  %4932 = add nsw i64 %4868, -1
  %4933 = add i32 %4866, 1
  br i1 %4931, label %4865, label %4934, !llvm.loop !741

4934:                                             ; preds = %4924, %4861
  %4935 = phi i32 [ %4864, %4861 ], [ %4930, %4924 ]
  %4936 = icmp slt i32 %4935, %5
  br i1 %4936, label %4939, label %4937

4937:                                             ; preds = %4934
  %4938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

4939:                                             ; preds = %4934
  %4940 = sext i32 %4935 to i64
  %4941 = getelementptr inbounds i32, ptr %4380, i64 %4940
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = sitofp i32 %4942 to float
  %4944 = icmp slt i32 %4942, 0
  %4945 = fneg fast float %4943
  %4946 = select fast i1 %4944, float %4945, float %4943
  %4947 = tail call fast float @llvm.maxnum.f32(float %4862, float %4946)
  store float %4947, ptr %4382, align 4, !tbaa !162
  %4948 = add nuw nsw i32 %4863, 1
  br i1 %4711, label %4949, label %4999

4949:                                             ; preds = %4939
  %4950 = load i32, ptr %4, align 4, !tbaa !5
  %4951 = load i32, ptr %12, align 4, !tbaa !5
  %4952 = add nsw i32 %4951, -1
  %4953 = icmp slt i32 %4950, %4952
  br i1 %4953, label %4976, label %4954

4954:                                             ; preds = %4949
  %4955 = icmp eq i32 %4950, %4952
  br i1 %4955, label %4956, label %4992

4956:                                             ; preds = %4954
  store i32 0, ptr %4, align 4, !tbaa !5
  %4957 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4957, ptr %6, align 4, !tbaa !5
  br i1 %4716, label %4999, label %4958

4958:                                             ; preds = %4956, %4986
  %4959 = phi i64 [ %4990, %4986 ], [ 1, %4956 ]
  %4960 = getelementptr inbounds i32, ptr %4, i64 %4959
  %4961 = load i32, ptr %4960, align 4, !tbaa !5
  %4962 = getelementptr inbounds i32, ptr %12, i64 %4959
  %4963 = load i32, ptr %4962, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, -1
  %4965 = icmp slt i32 %4961, %4964
  br i1 %4965, label %4966, label %4984

4966:                                             ; preds = %4958
  br i1 %4953, label %4976, label %4967

4967:                                             ; preds = %4966
  %4968 = shl i64 %4959, 32
  %4969 = add i64 %4968, -4294967296
  %4970 = ashr exact i64 %4969, 32
  %4971 = getelementptr inbounds i32, ptr %7, i64 %4970
  %4972 = load i32, ptr %4971, align 4, !tbaa !5
  %4973 = getelementptr inbounds i32, ptr %6, i64 %4959
  %4974 = load i32, ptr %4973, align 4, !tbaa !5
  %4975 = add nsw i32 %4974, %4972
  store i32 %4975, ptr %4973, align 4, !tbaa !5
  br label %4994

4976:                                             ; preds = %4949, %4966
  %4977 = phi i32 [ %4961, %4966 ], [ %4950, %4949 ]
  %4978 = phi ptr [ %4960, %4966 ], [ %4, %4949 ]
  %4979 = phi i64 [ %4959, %4966 ], [ 0, %4949 ]
  %4980 = add nsw i32 %4977, 1
  store i32 %4980, ptr %4978, align 4, !tbaa !5
  %4981 = getelementptr inbounds i32, ptr %7, i64 %4979
  %4982 = load i32, ptr %4981, align 4, !tbaa !5
  %4983 = getelementptr inbounds i32, ptr %6, i64 %4979
  br label %4994

4984:                                             ; preds = %4958
  %4985 = icmp eq i32 %4961, %4964
  br i1 %4985, label %4986, label %4992

4986:                                             ; preds = %4984
  store i32 0, ptr %4960, align 4, !tbaa !5
  %4987 = getelementptr inbounds i32, ptr %8, i64 %4959
  %4988 = load i32, ptr %4987, align 4, !tbaa !5
  %4989 = getelementptr inbounds i32, ptr %6, i64 %4959
  store i32 %4988, ptr %4989, align 4, !tbaa !5
  %4990 = add nuw nsw i64 %4959, 1
  %4991 = icmp eq i64 %4990, %4714
  br i1 %4991, label %4999, label %4958, !llvm.loop !742

4992:                                             ; preds = %4954, %4984
  %4993 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

4994:                                             ; preds = %4967, %4976
  %4995 = phi ptr [ %4983, %4976 ], [ %4960, %4967 ]
  %4996 = phi i32 [ %4982, %4976 ], [ 1, %4967 ]
  %4997 = load i32, ptr %4995, align 4, !tbaa !5
  %4998 = add nsw i32 %4997, %4996
  store i32 %4998, ptr %4995, align 4, !tbaa !5
  br label %4999

4999:                                             ; preds = %4986, %4994, %4956, %4939
  %5000 = icmp eq i32 %4948, %5
  br i1 %5000, label %5630, label %4861, !llvm.loop !743

5001:                                             ; preds = %4392
  %5002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1339, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

5003:                                             ; preds = %18
  %5004 = getelementptr inbounds ptr, ptr %14, i64 %19
  %5005 = load ptr, ptr %5004, align 8, !tbaa !9
  %5006 = getelementptr inbounds ptr, ptr %16, i64 %19
  %5007 = load ptr, ptr %5006, align 8, !tbaa !9
  store double 0.000000e+00, ptr %5007, align 8, !tbaa !18
  %5008 = icmp eq i32 %13, 0
  br i1 %5008, label %5009, label %5017

5009:                                             ; preds = %5003
  %5010 = load i32, ptr %5005, align 4, !tbaa !5
  %5011 = sitofp i32 %5010 to double
  %5012 = icmp slt i32 %5010, 0
  %5013 = fneg fast double %5011
  %5014 = select fast i1 %5012, double %5013, double %5011
  %5015 = fcmp fast ole double %5014, 0.000000e+00
  %5016 = select fast i1 %5015, double 0.000000e+00, double %5014
  store double %5016, ptr %5007, align 8, !tbaa !18
  br label %5630

5017:                                             ; preds = %5003
  switch i32 %1, label %5619 [
    i32 1, label %5018
    i32 0, label %5321
  ]

5018:                                             ; preds = %5017
  %5019 = getelementptr inbounds i32, ptr %3, i64 %19
  %5020 = load i32, ptr %5019, align 4, !tbaa !5
  %5021 = icmp eq i32 %5020, 0
  %5022 = icmp sgt i32 %5, 0
  br i1 %5021, label %5032, label %5023

5023:                                             ; preds = %5018
  br i1 %5022, label %5024, label %5630

5024:                                             ; preds = %5023
  %5025 = icmp sgt i32 %13, 1
  %5026 = icmp sgt i32 %13, 0
  %5027 = add i32 %13, -2
  %5028 = zext i32 %5027 to i64
  %5029 = zext i32 %13 to i64
  %5030 = add nuw i32 %5, 1
  %5031 = icmp eq i32 %13, 1
  br label %5181

5032:                                             ; preds = %5018
  br i1 %5022, label %5033, label %5630

5033:                                             ; preds = %5032
  %5034 = icmp sgt i32 %13, 1
  %5035 = icmp sgt i32 %13, 0
  %5036 = add i32 %13, -2
  %5037 = zext i32 %5036 to i64
  %5038 = zext i32 %13 to i64
  %5039 = add nuw i32 %5, 1
  %5040 = icmp eq i32 %13, 1
  br label %5041

5041:                                             ; preds = %5033, %5179
  %5042 = phi double [ 0.000000e+00, %5033 ], [ %5129, %5179 ]
  %5043 = phi i32 [ 0, %5033 ], [ %5131, %5179 ]
  %5044 = phi double [ 0.000000e+00, %5033 ], [ %5130, %5179 ]
  %5045 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5034, label %5046, label %5115

5046:                                             ; preds = %5041, %5105
  %5047 = phi i32 [ %5114, %5105 ], [ 0, %5041 ]
  %5048 = phi i64 [ %5056, %5105 ], [ %5038, %5041 ]
  %5049 = phi i64 [ %5113, %5105 ], [ %5037, %5041 ]
  %5050 = phi i32 [ %5111, %5105 ], [ %5045, %5041 ]
  %5051 = sub i32 %5036, %5047
  %5052 = tail call i32 @llvm.smin.i32(i32 %5051, i32 0)
  %5053 = sub i32 %5051, %5052
  %5054 = zext i32 %5053 to i64
  %5055 = add nuw nsw i64 %5054, 1
  %5056 = add nsw i64 %5048, -1
  %5057 = icmp ult i32 %5053, 31
  br i1 %5057, label %5093, label %5058

5058:                                             ; preds = %5046
  %5059 = and i64 %5055, 8589934560
  %5060 = sub i64 %5049, %5059
  br label %5061

5061:                                             ; preds = %5061, %5058
  %5062 = phi i64 [ 0, %5058 ], [ %5085, %5061 ]
  %5063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5081, %5061 ]
  %5064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5082, %5061 ]
  %5065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5083, %5061 ]
  %5066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5058 ], [ %5084, %5061 ]
  %5067 = sub i64 %5049, %5062
  %5068 = getelementptr inbounds i32, ptr %9, i64 %5067
  %5069 = getelementptr inbounds i32, ptr %5068, i64 -7
  %5070 = load <8 x i32>, ptr %5069, align 4, !tbaa !5
  %5071 = shufflevector <8 x i32> %5070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5072 = getelementptr inbounds i32, ptr %5068, i64 -15
  %5073 = load <8 x i32>, ptr %5072, align 4, !tbaa !5
  %5074 = shufflevector <8 x i32> %5073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5075 = getelementptr inbounds i32, ptr %5068, i64 -23
  %5076 = load <8 x i32>, ptr %5075, align 4, !tbaa !5
  %5077 = shufflevector <8 x i32> %5076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5078 = getelementptr inbounds i32, ptr %5068, i64 -31
  %5079 = load <8 x i32>, ptr %5078, align 4, !tbaa !5
  %5080 = shufflevector <8 x i32> %5079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5081 = mul <8 x i32> %5071, %5063
  %5082 = mul <8 x i32> %5074, %5064
  %5083 = mul <8 x i32> %5077, %5065
  %5084 = mul <8 x i32> %5080, %5066
  %5085 = add nuw i64 %5062, 32
  %5086 = icmp eq i64 %5085, %5059
  br i1 %5086, label %5087, label %5061, !llvm.loop !744

5087:                                             ; preds = %5061
  %5088 = mul <8 x i32> %5082, %5081
  %5089 = mul <8 x i32> %5083, %5088
  %5090 = mul <8 x i32> %5084, %5089
  %5091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5090)
  %5092 = icmp eq i64 %5055, %5059
  br i1 %5092, label %5105, label %5093

5093:                                             ; preds = %5046, %5087
  %5094 = phi i64 [ %5049, %5046 ], [ %5060, %5087 ]
  %5095 = phi i32 [ 1, %5046 ], [ %5091, %5087 ]
  br label %5096

5096:                                             ; preds = %5093, %5096
  %5097 = phi i64 [ %5102, %5096 ], [ %5094, %5093 ]
  %5098 = phi i32 [ %5101, %5096 ], [ %5095, %5093 ]
  %5099 = getelementptr inbounds i32, ptr %9, i64 %5097
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = mul nsw i32 %5100, %5098
  %5102 = add nsw i64 %5097, -1
  %5103 = trunc i64 %5097 to i32
  %5104 = icmp sgt i32 %5103, 0
  br i1 %5104, label %5096, label %5105, !llvm.loop !745

5105:                                             ; preds = %5096, %5087
  %5106 = phi i32 [ %5091, %5087 ], [ %5101, %5096 ]
  %5107 = and i64 %5056, 4294967295
  %5108 = getelementptr inbounds i32, ptr %6, i64 %5107
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = mul nsw i32 %5109, %5106
  %5111 = add nsw i32 %5110, %5050
  %5112 = icmp sgt i64 %5048, 2
  %5113 = add nsw i64 %5049, -1
  %5114 = add i32 %5047, 1
  br i1 %5112, label %5046, label %5115, !llvm.loop !746

5115:                                             ; preds = %5105, %5041
  %5116 = phi i32 [ %5045, %5041 ], [ %5111, %5105 ]
  %5117 = sext i32 %5116 to i64
  %5118 = getelementptr inbounds double, ptr %2, i64 %5117
  %5119 = load double, ptr %5118, align 8, !tbaa !18
  %5120 = getelementptr inbounds i32, ptr %5005, i64 %5117
  %5121 = load i32, ptr %5120, align 4, !tbaa !5
  %5122 = sitofp i32 %5121 to double
  %5123 = fmul fast double %5119, %5122
  %5124 = fcmp fast uge double %5123, 0.000000e+00
  %5125 = fneg fast double %5123
  %5126 = tail call fast double @llvm.fabs.f64(double %5123)
  %5127 = fcmp fast oge double %5042, %5126
  %5128 = select nnan ninf i1 %5124, double %5123, double %5125
  %5129 = select i1 %5127, double %5042, double %5128
  store double %5129, ptr %5007, align 8, !tbaa !18
  %5130 = fadd fast double %5119, %5044
  %5131 = add nuw nsw i32 %5043, 1
  br i1 %5035, label %5132, label %5179

5132:                                             ; preds = %5115
  %5133 = load i32, ptr %4, align 4, !tbaa !5
  %5134 = load i32, ptr %12, align 4, !tbaa !5
  %5135 = add nsw i32 %5134, -1
  %5136 = icmp slt i32 %5133, %5135
  br i1 %5136, label %5156, label %5137

5137:                                             ; preds = %5132
  %5138 = icmp eq i32 %5133, %5135
  br i1 %5138, label %5139, label %5172

5139:                                             ; preds = %5137
  store i32 0, ptr %4, align 4, !tbaa !5
  %5140 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5140, ptr %6, align 4, !tbaa !5
  br i1 %5040, label %5179, label %5141

5141:                                             ; preds = %5139, %5166
  %5142 = phi i64 [ %5170, %5166 ], [ 1, %5139 ]
  %5143 = getelementptr inbounds i32, ptr %4, i64 %5142
  %5144 = load i32, ptr %5143, align 4, !tbaa !5
  %5145 = getelementptr inbounds i32, ptr %12, i64 %5142
  %5146 = load i32, ptr %5145, align 4, !tbaa !5
  %5147 = add nsw i32 %5146, -1
  %5148 = icmp slt i32 %5144, %5147
  br i1 %5148, label %5149, label %5164

5149:                                             ; preds = %5141
  br i1 %5136, label %5156, label %5150

5150:                                             ; preds = %5149
  %5151 = getelementptr inbounds i32, ptr %7, i64 %5142
  %5152 = load i32, ptr %5151, align 4, !tbaa !5
  %5153 = getelementptr inbounds i32, ptr %6, i64 %5142
  %5154 = load i32, ptr %5153, align 4, !tbaa !5
  %5155 = add nsw i32 %5154, %5152
  store i32 %5155, ptr %5153, align 4, !tbaa !5
  br label %5174

5156:                                             ; preds = %5132, %5149
  %5157 = phi i32 [ %5144, %5149 ], [ %5133, %5132 ]
  %5158 = phi ptr [ %5143, %5149 ], [ %4, %5132 ]
  %5159 = phi i64 [ %5142, %5149 ], [ 0, %5132 ]
  %5160 = add nsw i32 %5157, 1
  store i32 %5160, ptr %5158, align 4, !tbaa !5
  %5161 = getelementptr inbounds i32, ptr %7, i64 %5159
  %5162 = load i32, ptr %5161, align 4, !tbaa !5
  %5163 = getelementptr inbounds i32, ptr %6, i64 %5159
  br label %5174

5164:                                             ; preds = %5141
  %5165 = icmp eq i32 %5144, %5147
  br i1 %5165, label %5166, label %5172

5166:                                             ; preds = %5164
  store i32 0, ptr %5143, align 4, !tbaa !5
  %5167 = getelementptr inbounds i32, ptr %8, i64 %5142
  %5168 = load i32, ptr %5167, align 4, !tbaa !5
  %5169 = getelementptr inbounds i32, ptr %6, i64 %5142
  store i32 %5168, ptr %5169, align 4, !tbaa !5
  %5170 = add nuw nsw i64 %5142, 1
  %5171 = icmp eq i64 %5170, %5038
  br i1 %5171, label %5179, label %5141, !llvm.loop !747

5172:                                             ; preds = %5137, %5164
  %5173 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5174:                                             ; preds = %5150, %5156
  %5175 = phi ptr [ %5163, %5156 ], [ %5143, %5150 ]
  %5176 = phi i32 [ %5162, %5156 ], [ 1, %5150 ]
  %5177 = load i32, ptr %5175, align 4, !tbaa !5
  %5178 = add nsw i32 %5177, %5176
  store i32 %5178, ptr %5175, align 4, !tbaa !5
  br label %5179

5179:                                             ; preds = %5166, %5174, %5139, %5115
  %5180 = icmp eq i32 %5131, %5
  br i1 %5180, label %5630, label %5041, !llvm.loop !748

5181:                                             ; preds = %5024, %5319
  %5182 = phi double [ 0.000000e+00, %5024 ], [ %5267, %5319 ]
  %5183 = phi i32 [ 0, %5024 ], [ %5268, %5319 ]
  %5184 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5025, label %5185, label %5254

5185:                                             ; preds = %5181, %5244
  %5186 = phi i32 [ %5253, %5244 ], [ 0, %5181 ]
  %5187 = phi i64 [ %5195, %5244 ], [ %5029, %5181 ]
  %5188 = phi i64 [ %5252, %5244 ], [ %5028, %5181 ]
  %5189 = phi i32 [ %5250, %5244 ], [ %5184, %5181 ]
  %5190 = sub i32 %5027, %5186
  %5191 = tail call i32 @llvm.smin.i32(i32 %5190, i32 0)
  %5192 = sub i32 %5190, %5191
  %5193 = zext i32 %5192 to i64
  %5194 = add nuw nsw i64 %5193, 1
  %5195 = add nsw i64 %5187, -1
  %5196 = icmp ult i32 %5192, 31
  br i1 %5196, label %5232, label %5197

5197:                                             ; preds = %5185
  %5198 = and i64 %5194, 8589934560
  %5199 = sub i64 %5188, %5198
  br label %5200

5200:                                             ; preds = %5200, %5197
  %5201 = phi i64 [ 0, %5197 ], [ %5224, %5200 ]
  %5202 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5220, %5200 ]
  %5203 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5221, %5200 ]
  %5204 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5222, %5200 ]
  %5205 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5197 ], [ %5223, %5200 ]
  %5206 = sub i64 %5188, %5201
  %5207 = getelementptr inbounds i32, ptr %11, i64 %5206
  %5208 = getelementptr inbounds i32, ptr %5207, i64 -7
  %5209 = load <8 x i32>, ptr %5208, align 4, !tbaa !5
  %5210 = shufflevector <8 x i32> %5209, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5211 = getelementptr inbounds i32, ptr %5207, i64 -15
  %5212 = load <8 x i32>, ptr %5211, align 4, !tbaa !5
  %5213 = shufflevector <8 x i32> %5212, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5214 = getelementptr inbounds i32, ptr %5207, i64 -23
  %5215 = load <8 x i32>, ptr %5214, align 4, !tbaa !5
  %5216 = shufflevector <8 x i32> %5215, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5217 = getelementptr inbounds i32, ptr %5207, i64 -31
  %5218 = load <8 x i32>, ptr %5217, align 4, !tbaa !5
  %5219 = shufflevector <8 x i32> %5218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5220 = mul <8 x i32> %5210, %5202
  %5221 = mul <8 x i32> %5213, %5203
  %5222 = mul <8 x i32> %5216, %5204
  %5223 = mul <8 x i32> %5219, %5205
  %5224 = add nuw i64 %5201, 32
  %5225 = icmp eq i64 %5224, %5198
  br i1 %5225, label %5226, label %5200, !llvm.loop !749

5226:                                             ; preds = %5200
  %5227 = mul <8 x i32> %5221, %5220
  %5228 = mul <8 x i32> %5222, %5227
  %5229 = mul <8 x i32> %5223, %5228
  %5230 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5229)
  %5231 = icmp eq i64 %5194, %5198
  br i1 %5231, label %5244, label %5232

5232:                                             ; preds = %5185, %5226
  %5233 = phi i64 [ %5188, %5185 ], [ %5199, %5226 ]
  %5234 = phi i32 [ 1, %5185 ], [ %5230, %5226 ]
  br label %5235

5235:                                             ; preds = %5232, %5235
  %5236 = phi i64 [ %5241, %5235 ], [ %5233, %5232 ]
  %5237 = phi i32 [ %5240, %5235 ], [ %5234, %5232 ]
  %5238 = getelementptr inbounds i32, ptr %11, i64 %5236
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = mul nsw i32 %5239, %5237
  %5241 = add nsw i64 %5236, -1
  %5242 = trunc i64 %5236 to i32
  %5243 = icmp sgt i32 %5242, 0
  br i1 %5243, label %5235, label %5244, !llvm.loop !750

5244:                                             ; preds = %5235, %5226
  %5245 = phi i32 [ %5230, %5226 ], [ %5240, %5235 ]
  %5246 = and i64 %5195, 4294967295
  %5247 = getelementptr inbounds i32, ptr %6, i64 %5246
  %5248 = load i32, ptr %5247, align 4, !tbaa !5
  %5249 = mul nsw i32 %5248, %5245
  %5250 = add nsw i32 %5249, %5189
  %5251 = icmp sgt i64 %5187, 2
  %5252 = add nsw i64 %5188, -1
  %5253 = add i32 %5186, 1
  br i1 %5251, label %5185, label %5254, !llvm.loop !751

5254:                                             ; preds = %5244, %5181
  %5255 = phi i32 [ %5184, %5181 ], [ %5250, %5244 ]
  %5256 = icmp slt i32 %5255, %5
  br i1 %5256, label %5259, label %5257

5257:                                             ; preds = %5254
  %5258 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

5259:                                             ; preds = %5254
  %5260 = sext i32 %5255 to i64
  %5261 = getelementptr inbounds i32, ptr %5005, i64 %5260
  %5262 = load i32, ptr %5261, align 4, !tbaa !5
  %5263 = sitofp i32 %5262 to double
  %5264 = icmp slt i32 %5262, 0
  %5265 = fneg fast double %5263
  %5266 = select i1 %5264, double %5265, double %5263
  %5267 = tail call fast double @llvm.maxnum.f64(double %5182, double %5266)
  store double %5267, ptr %5007, align 8, !tbaa !18
  %5268 = add nuw nsw i32 %5183, 1
  br i1 %5026, label %5269, label %5319

5269:                                             ; preds = %5259
  %5270 = load i32, ptr %4, align 4, !tbaa !5
  %5271 = load i32, ptr %12, align 4, !tbaa !5
  %5272 = add nsw i32 %5271, -1
  %5273 = icmp slt i32 %5270, %5272
  br i1 %5273, label %5296, label %5274

5274:                                             ; preds = %5269
  %5275 = icmp eq i32 %5270, %5272
  br i1 %5275, label %5276, label %5312

5276:                                             ; preds = %5274
  store i32 0, ptr %4, align 4, !tbaa !5
  %5277 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5277, ptr %6, align 4, !tbaa !5
  br i1 %5031, label %5319, label %5278

5278:                                             ; preds = %5276, %5306
  %5279 = phi i64 [ %5310, %5306 ], [ 1, %5276 ]
  %5280 = getelementptr inbounds i32, ptr %4, i64 %5279
  %5281 = load i32, ptr %5280, align 4, !tbaa !5
  %5282 = getelementptr inbounds i32, ptr %12, i64 %5279
  %5283 = load i32, ptr %5282, align 4, !tbaa !5
  %5284 = add nsw i32 %5283, -1
  %5285 = icmp slt i32 %5281, %5284
  br i1 %5285, label %5286, label %5304

5286:                                             ; preds = %5278
  br i1 %5273, label %5296, label %5287

5287:                                             ; preds = %5286
  %5288 = shl i64 %5279, 32
  %5289 = add i64 %5288, -4294967296
  %5290 = ashr exact i64 %5289, 32
  %5291 = getelementptr inbounds i32, ptr %7, i64 %5290
  %5292 = load i32, ptr %5291, align 4, !tbaa !5
  %5293 = getelementptr inbounds i32, ptr %6, i64 %5279
  %5294 = load i32, ptr %5293, align 4, !tbaa !5
  %5295 = add nsw i32 %5294, %5292
  store i32 %5295, ptr %5293, align 4, !tbaa !5
  br label %5314

5296:                                             ; preds = %5269, %5286
  %5297 = phi i32 [ %5281, %5286 ], [ %5270, %5269 ]
  %5298 = phi ptr [ %5280, %5286 ], [ %4, %5269 ]
  %5299 = phi i64 [ %5279, %5286 ], [ 0, %5269 ]
  %5300 = add nsw i32 %5297, 1
  store i32 %5300, ptr %5298, align 4, !tbaa !5
  %5301 = getelementptr inbounds i32, ptr %7, i64 %5299
  %5302 = load i32, ptr %5301, align 4, !tbaa !5
  %5303 = getelementptr inbounds i32, ptr %6, i64 %5299
  br label %5314

5304:                                             ; preds = %5278
  %5305 = icmp eq i32 %5281, %5284
  br i1 %5305, label %5306, label %5312

5306:                                             ; preds = %5304
  store i32 0, ptr %5280, align 4, !tbaa !5
  %5307 = getelementptr inbounds i32, ptr %8, i64 %5279
  %5308 = load i32, ptr %5307, align 4, !tbaa !5
  %5309 = getelementptr inbounds i32, ptr %6, i64 %5279
  store i32 %5308, ptr %5309, align 4, !tbaa !5
  %5310 = add nuw nsw i64 %5279, 1
  %5311 = icmp eq i64 %5310, %5029
  br i1 %5311, label %5319, label %5278, !llvm.loop !752

5312:                                             ; preds = %5274, %5304
  %5313 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5314:                                             ; preds = %5287, %5296
  %5315 = phi ptr [ %5303, %5296 ], [ %5280, %5287 ]
  %5316 = phi i32 [ %5302, %5296 ], [ 1, %5287 ]
  %5317 = load i32, ptr %5315, align 4, !tbaa !5
  %5318 = add nsw i32 %5317, %5316
  store i32 %5318, ptr %5315, align 4, !tbaa !5
  br label %5319

5319:                                             ; preds = %5306, %5314, %5276, %5259
  %5320 = icmp eq i32 %5268, %5
  br i1 %5320, label %5630, label %5181, !llvm.loop !753

5321:                                             ; preds = %5017
  %5322 = getelementptr inbounds i32, ptr %3, i64 %19
  %5323 = load i32, ptr %5322, align 4, !tbaa !5
  %5324 = icmp eq i32 %5323, 0
  %5325 = icmp sgt i32 %5, 0
  br i1 %5324, label %5335, label %5326

5326:                                             ; preds = %5321
  br i1 %5325, label %5327, label %5630

5327:                                             ; preds = %5326
  %5328 = icmp sgt i32 %13, 1
  %5329 = icmp sgt i32 %13, 0
  %5330 = add i32 %13, -2
  %5331 = zext i32 %5330 to i64
  %5332 = zext i32 %13 to i64
  %5333 = add nuw i32 %5, 1
  %5334 = icmp eq i32 %13, 1
  br label %5479

5335:                                             ; preds = %5321
  br i1 %5325, label %5336, label %5630

5336:                                             ; preds = %5335
  %5337 = icmp sgt i32 %13, 1
  %5338 = icmp sgt i32 %13, 0
  %5339 = add i32 %13, -2
  %5340 = zext i32 %5339 to i64
  %5341 = zext i32 %13 to i64
  %5342 = add nuw i32 %5, 1
  %5343 = icmp eq i32 %13, 1
  br label %5344

5344:                                             ; preds = %5336, %5477
  %5345 = phi double [ 0.000000e+00, %5336 ], [ %5427, %5477 ]
  %5346 = phi i32 [ 0, %5336 ], [ %5429, %5477 ]
  %5347 = phi double [ 0.000000e+00, %5336 ], [ %5428, %5477 ]
  %5348 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5337, label %5349, label %5418

5349:                                             ; preds = %5344, %5408
  %5350 = phi i32 [ %5417, %5408 ], [ 0, %5344 ]
  %5351 = phi i64 [ %5359, %5408 ], [ %5341, %5344 ]
  %5352 = phi i64 [ %5416, %5408 ], [ %5340, %5344 ]
  %5353 = phi i32 [ %5414, %5408 ], [ %5348, %5344 ]
  %5354 = sub i32 %5339, %5350
  %5355 = tail call i32 @llvm.smin.i32(i32 %5354, i32 0)
  %5356 = sub i32 %5354, %5355
  %5357 = zext i32 %5356 to i64
  %5358 = add nuw nsw i64 %5357, 1
  %5359 = add nsw i64 %5351, -1
  %5360 = icmp ult i32 %5356, 31
  br i1 %5360, label %5396, label %5361

5361:                                             ; preds = %5349
  %5362 = and i64 %5358, 8589934560
  %5363 = sub i64 %5352, %5362
  br label %5364

5364:                                             ; preds = %5364, %5361
  %5365 = phi i64 [ 0, %5361 ], [ %5388, %5364 ]
  %5366 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5384, %5364 ]
  %5367 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5385, %5364 ]
  %5368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5386, %5364 ]
  %5369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5361 ], [ %5387, %5364 ]
  %5370 = sub i64 %5352, %5365
  %5371 = getelementptr inbounds i32, ptr %9, i64 %5370
  %5372 = getelementptr inbounds i32, ptr %5371, i64 -7
  %5373 = load <8 x i32>, ptr %5372, align 4, !tbaa !5
  %5374 = shufflevector <8 x i32> %5373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5375 = getelementptr inbounds i32, ptr %5371, i64 -15
  %5376 = load <8 x i32>, ptr %5375, align 4, !tbaa !5
  %5377 = shufflevector <8 x i32> %5376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5378 = getelementptr inbounds i32, ptr %5371, i64 -23
  %5379 = load <8 x i32>, ptr %5378, align 4, !tbaa !5
  %5380 = shufflevector <8 x i32> %5379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5381 = getelementptr inbounds i32, ptr %5371, i64 -31
  %5382 = load <8 x i32>, ptr %5381, align 4, !tbaa !5
  %5383 = shufflevector <8 x i32> %5382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5384 = mul <8 x i32> %5374, %5366
  %5385 = mul <8 x i32> %5377, %5367
  %5386 = mul <8 x i32> %5380, %5368
  %5387 = mul <8 x i32> %5383, %5369
  %5388 = add nuw i64 %5365, 32
  %5389 = icmp eq i64 %5388, %5362
  br i1 %5389, label %5390, label %5364, !llvm.loop !754

5390:                                             ; preds = %5364
  %5391 = mul <8 x i32> %5385, %5384
  %5392 = mul <8 x i32> %5386, %5391
  %5393 = mul <8 x i32> %5387, %5392
  %5394 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5393)
  %5395 = icmp eq i64 %5358, %5362
  br i1 %5395, label %5408, label %5396

5396:                                             ; preds = %5349, %5390
  %5397 = phi i64 [ %5352, %5349 ], [ %5363, %5390 ]
  %5398 = phi i32 [ 1, %5349 ], [ %5394, %5390 ]
  br label %5399

5399:                                             ; preds = %5396, %5399
  %5400 = phi i64 [ %5405, %5399 ], [ %5397, %5396 ]
  %5401 = phi i32 [ %5404, %5399 ], [ %5398, %5396 ]
  %5402 = getelementptr inbounds i32, ptr %9, i64 %5400
  %5403 = load i32, ptr %5402, align 4, !tbaa !5
  %5404 = mul nsw i32 %5403, %5401
  %5405 = add nsw i64 %5400, -1
  %5406 = trunc i64 %5400 to i32
  %5407 = icmp sgt i32 %5406, 0
  br i1 %5407, label %5399, label %5408, !llvm.loop !755

5408:                                             ; preds = %5399, %5390
  %5409 = phi i32 [ %5394, %5390 ], [ %5404, %5399 ]
  %5410 = and i64 %5359, 4294967295
  %5411 = getelementptr inbounds i32, ptr %6, i64 %5410
  %5412 = load i32, ptr %5411, align 4, !tbaa !5
  %5413 = mul nsw i32 %5412, %5409
  %5414 = add nsw i32 %5413, %5353
  %5415 = icmp sgt i64 %5351, 2
  %5416 = add nsw i64 %5352, -1
  %5417 = add i32 %5350, 1
  br i1 %5415, label %5349, label %5418, !llvm.loop !756

5418:                                             ; preds = %5408, %5344
  %5419 = phi i32 [ %5348, %5344 ], [ %5414, %5408 ]
  %5420 = sext i32 %5419 to i64
  %5421 = getelementptr inbounds i32, ptr %5005, i64 %5420
  %5422 = load i32, ptr %5421, align 4, !tbaa !5
  %5423 = sitofp i32 %5422 to double
  %5424 = icmp slt i32 %5422, 0
  %5425 = fneg fast double %5423
  %5426 = select fast i1 %5424, double %5425, double %5423
  %5427 = tail call fast double @llvm.maxnum.f64(double %5345, double %5426)
  %5428 = fadd fast double %5347, 1.000000e+00
  %5429 = add nuw nsw i32 %5346, 1
  br i1 %5338, label %5430, label %5477

5430:                                             ; preds = %5418
  %5431 = load i32, ptr %4, align 4, !tbaa !5
  %5432 = load i32, ptr %12, align 4, !tbaa !5
  %5433 = add nsw i32 %5432, -1
  %5434 = icmp slt i32 %5431, %5433
  br i1 %5434, label %5454, label %5435

5435:                                             ; preds = %5430
  %5436 = icmp eq i32 %5431, %5433
  br i1 %5436, label %5437, label %5470

5437:                                             ; preds = %5435
  store i32 0, ptr %4, align 4, !tbaa !5
  %5438 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5438, ptr %6, align 4, !tbaa !5
  br i1 %5343, label %5477, label %5439

5439:                                             ; preds = %5437, %5464
  %5440 = phi i64 [ %5468, %5464 ], [ 1, %5437 ]
  %5441 = getelementptr inbounds i32, ptr %4, i64 %5440
  %5442 = load i32, ptr %5441, align 4, !tbaa !5
  %5443 = getelementptr inbounds i32, ptr %12, i64 %5440
  %5444 = load i32, ptr %5443, align 4, !tbaa !5
  %5445 = add nsw i32 %5444, -1
  %5446 = icmp slt i32 %5442, %5445
  br i1 %5446, label %5447, label %5462

5447:                                             ; preds = %5439
  br i1 %5434, label %5454, label %5448

5448:                                             ; preds = %5447
  %5449 = getelementptr inbounds i32, ptr %7, i64 %5440
  %5450 = load i32, ptr %5449, align 4, !tbaa !5
  %5451 = getelementptr inbounds i32, ptr %6, i64 %5440
  %5452 = load i32, ptr %5451, align 4, !tbaa !5
  %5453 = add nsw i32 %5452, %5450
  store i32 %5453, ptr %5451, align 4, !tbaa !5
  br label %5472

5454:                                             ; preds = %5430, %5447
  %5455 = phi i32 [ %5442, %5447 ], [ %5431, %5430 ]
  %5456 = phi ptr [ %5441, %5447 ], [ %4, %5430 ]
  %5457 = phi i64 [ %5440, %5447 ], [ 0, %5430 ]
  %5458 = add nsw i32 %5455, 1
  store i32 %5458, ptr %5456, align 4, !tbaa !5
  %5459 = getelementptr inbounds i32, ptr %7, i64 %5457
  %5460 = load i32, ptr %5459, align 4, !tbaa !5
  %5461 = getelementptr inbounds i32, ptr %6, i64 %5457
  br label %5472

5462:                                             ; preds = %5439
  %5463 = icmp eq i32 %5442, %5445
  br i1 %5463, label %5464, label %5470

5464:                                             ; preds = %5462
  store i32 0, ptr %5441, align 4, !tbaa !5
  %5465 = getelementptr inbounds i32, ptr %8, i64 %5440
  %5466 = load i32, ptr %5465, align 4, !tbaa !5
  %5467 = getelementptr inbounds i32, ptr %6, i64 %5440
  store i32 %5466, ptr %5467, align 4, !tbaa !5
  %5468 = add nuw nsw i64 %5440, 1
  %5469 = icmp eq i64 %5468, %5341
  br i1 %5469, label %5477, label %5439, !llvm.loop !757

5470:                                             ; preds = %5435, %5462
  store double %5427, ptr %5007, align 8, !tbaa !18
  %5471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5472:                                             ; preds = %5448, %5454
  %5473 = phi ptr [ %5461, %5454 ], [ %5441, %5448 ]
  %5474 = phi i32 [ %5460, %5454 ], [ 1, %5448 ]
  %5475 = load i32, ptr %5473, align 4, !tbaa !5
  %5476 = add nsw i32 %5475, %5474
  store i32 %5476, ptr %5473, align 4, !tbaa !5
  br label %5477

5477:                                             ; preds = %5464, %5472, %5437, %5418
  %5478 = icmp eq i32 %5429, %5
  br i1 %5478, label %5629, label %5344, !llvm.loop !758

5479:                                             ; preds = %5327, %5617
  %5480 = phi double [ 0.000000e+00, %5327 ], [ %5565, %5617 ]
  %5481 = phi i32 [ 0, %5327 ], [ %5566, %5617 ]
  %5482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5328, label %5483, label %5552

5483:                                             ; preds = %5479, %5542
  %5484 = phi i32 [ %5551, %5542 ], [ 0, %5479 ]
  %5485 = phi i64 [ %5493, %5542 ], [ %5332, %5479 ]
  %5486 = phi i64 [ %5550, %5542 ], [ %5331, %5479 ]
  %5487 = phi i32 [ %5548, %5542 ], [ %5482, %5479 ]
  %5488 = sub i32 %5330, %5484
  %5489 = tail call i32 @llvm.smin.i32(i32 %5488, i32 0)
  %5490 = sub i32 %5488, %5489
  %5491 = zext i32 %5490 to i64
  %5492 = add nuw nsw i64 %5491, 1
  %5493 = add nsw i64 %5485, -1
  %5494 = icmp ult i32 %5490, 31
  br i1 %5494, label %5530, label %5495

5495:                                             ; preds = %5483
  %5496 = and i64 %5492, 8589934560
  %5497 = sub i64 %5486, %5496
  br label %5498

5498:                                             ; preds = %5498, %5495
  %5499 = phi i64 [ 0, %5495 ], [ %5522, %5498 ]
  %5500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5518, %5498 ]
  %5501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5519, %5498 ]
  %5502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5520, %5498 ]
  %5503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5495 ], [ %5521, %5498 ]
  %5504 = sub i64 %5486, %5499
  %5505 = getelementptr inbounds i32, ptr %11, i64 %5504
  %5506 = getelementptr inbounds i32, ptr %5505, i64 -7
  %5507 = load <8 x i32>, ptr %5506, align 4, !tbaa !5
  %5508 = shufflevector <8 x i32> %5507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5509 = getelementptr inbounds i32, ptr %5505, i64 -15
  %5510 = load <8 x i32>, ptr %5509, align 4, !tbaa !5
  %5511 = shufflevector <8 x i32> %5510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5512 = getelementptr inbounds i32, ptr %5505, i64 -23
  %5513 = load <8 x i32>, ptr %5512, align 4, !tbaa !5
  %5514 = shufflevector <8 x i32> %5513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5515 = getelementptr inbounds i32, ptr %5505, i64 -31
  %5516 = load <8 x i32>, ptr %5515, align 4, !tbaa !5
  %5517 = shufflevector <8 x i32> %5516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5518 = mul <8 x i32> %5508, %5500
  %5519 = mul <8 x i32> %5511, %5501
  %5520 = mul <8 x i32> %5514, %5502
  %5521 = mul <8 x i32> %5517, %5503
  %5522 = add nuw i64 %5499, 32
  %5523 = icmp eq i64 %5522, %5496
  br i1 %5523, label %5524, label %5498, !llvm.loop !759

5524:                                             ; preds = %5498
  %5525 = mul <8 x i32> %5519, %5518
  %5526 = mul <8 x i32> %5520, %5525
  %5527 = mul <8 x i32> %5521, %5526
  %5528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5527)
  %5529 = icmp eq i64 %5492, %5496
  br i1 %5529, label %5542, label %5530

5530:                                             ; preds = %5483, %5524
  %5531 = phi i64 [ %5486, %5483 ], [ %5497, %5524 ]
  %5532 = phi i32 [ 1, %5483 ], [ %5528, %5524 ]
  br label %5533

5533:                                             ; preds = %5530, %5533
  %5534 = phi i64 [ %5539, %5533 ], [ %5531, %5530 ]
  %5535 = phi i32 [ %5538, %5533 ], [ %5532, %5530 ]
  %5536 = getelementptr inbounds i32, ptr %11, i64 %5534
  %5537 = load i32, ptr %5536, align 4, !tbaa !5
  %5538 = mul nsw i32 %5537, %5535
  %5539 = add nsw i64 %5534, -1
  %5540 = trunc i64 %5534 to i32
  %5541 = icmp sgt i32 %5540, 0
  br i1 %5541, label %5533, label %5542, !llvm.loop !760

5542:                                             ; preds = %5533, %5524
  %5543 = phi i32 [ %5528, %5524 ], [ %5538, %5533 ]
  %5544 = and i64 %5493, 4294967295
  %5545 = getelementptr inbounds i32, ptr %6, i64 %5544
  %5546 = load i32, ptr %5545, align 4, !tbaa !5
  %5547 = mul nsw i32 %5546, %5543
  %5548 = add nsw i32 %5547, %5487
  %5549 = icmp sgt i64 %5485, 2
  %5550 = add nsw i64 %5486, -1
  %5551 = add i32 %5484, 1
  br i1 %5549, label %5483, label %5552, !llvm.loop !761

5552:                                             ; preds = %5542, %5479
  %5553 = phi i32 [ %5482, %5479 ], [ %5548, %5542 ]
  %5554 = icmp slt i32 %5553, %5
  br i1 %5554, label %5557, label %5555

5555:                                             ; preds = %5552
  %5556 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5635

5557:                                             ; preds = %5552
  %5558 = sext i32 %5553 to i64
  %5559 = getelementptr inbounds i32, ptr %5005, i64 %5558
  %5560 = load i32, ptr %5559, align 4, !tbaa !5
  %5561 = sitofp i32 %5560 to double
  %5562 = icmp slt i32 %5560, 0
  %5563 = fneg fast double %5561
  %5564 = select fast i1 %5562, double %5563, double %5561
  %5565 = tail call fast double @llvm.maxnum.f64(double %5480, double %5564)
  store double %5565, ptr %5007, align 8, !tbaa !18
  %5566 = add nuw nsw i32 %5481, 1
  br i1 %5329, label %5567, label %5617

5567:                                             ; preds = %5557
  %5568 = load i32, ptr %4, align 4, !tbaa !5
  %5569 = load i32, ptr %12, align 4, !tbaa !5
  %5570 = add nsw i32 %5569, -1
  %5571 = icmp slt i32 %5568, %5570
  br i1 %5571, label %5594, label %5572

5572:                                             ; preds = %5567
  %5573 = icmp eq i32 %5568, %5570
  br i1 %5573, label %5574, label %5610

5574:                                             ; preds = %5572
  store i32 0, ptr %4, align 4, !tbaa !5
  %5575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5575, ptr %6, align 4, !tbaa !5
  br i1 %5334, label %5617, label %5576

5576:                                             ; preds = %5574, %5604
  %5577 = phi i64 [ %5608, %5604 ], [ 1, %5574 ]
  %5578 = getelementptr inbounds i32, ptr %4, i64 %5577
  %5579 = load i32, ptr %5578, align 4, !tbaa !5
  %5580 = getelementptr inbounds i32, ptr %12, i64 %5577
  %5581 = load i32, ptr %5580, align 4, !tbaa !5
  %5582 = add nsw i32 %5581, -1
  %5583 = icmp slt i32 %5579, %5582
  br i1 %5583, label %5584, label %5602

5584:                                             ; preds = %5576
  br i1 %5571, label %5594, label %5585

5585:                                             ; preds = %5584
  %5586 = shl i64 %5577, 32
  %5587 = add i64 %5586, -4294967296
  %5588 = ashr exact i64 %5587, 32
  %5589 = getelementptr inbounds i32, ptr %7, i64 %5588
  %5590 = load i32, ptr %5589, align 4, !tbaa !5
  %5591 = getelementptr inbounds i32, ptr %6, i64 %5577
  %5592 = load i32, ptr %5591, align 4, !tbaa !5
  %5593 = add nsw i32 %5592, %5590
  store i32 %5593, ptr %5591, align 4, !tbaa !5
  br label %5612

5594:                                             ; preds = %5567, %5584
  %5595 = phi i32 [ %5579, %5584 ], [ %5568, %5567 ]
  %5596 = phi ptr [ %5578, %5584 ], [ %4, %5567 ]
  %5597 = phi i64 [ %5577, %5584 ], [ 0, %5567 ]
  %5598 = add nsw i32 %5595, 1
  store i32 %5598, ptr %5596, align 4, !tbaa !5
  %5599 = getelementptr inbounds i32, ptr %7, i64 %5597
  %5600 = load i32, ptr %5599, align 4, !tbaa !5
  %5601 = getelementptr inbounds i32, ptr %6, i64 %5597
  br label %5612

5602:                                             ; preds = %5576
  %5603 = icmp eq i32 %5579, %5582
  br i1 %5603, label %5604, label %5610

5604:                                             ; preds = %5602
  store i32 0, ptr %5578, align 4, !tbaa !5
  %5605 = getelementptr inbounds i32, ptr %8, i64 %5577
  %5606 = load i32, ptr %5605, align 4, !tbaa !5
  %5607 = getelementptr inbounds i32, ptr %6, i64 %5577
  store i32 %5606, ptr %5607, align 4, !tbaa !5
  %5608 = add nuw nsw i64 %5577, 1
  %5609 = icmp eq i64 %5608, %5332
  br i1 %5609, label %5617, label %5576, !llvm.loop !762

5610:                                             ; preds = %5572, %5602
  %5611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5635

5612:                                             ; preds = %5585, %5594
  %5613 = phi ptr [ %5601, %5594 ], [ %5578, %5585 ]
  %5614 = phi i32 [ %5600, %5594 ], [ 1, %5585 ]
  %5615 = load i32, ptr %5613, align 4, !tbaa !5
  %5616 = add nsw i32 %5615, %5614
  store i32 %5616, ptr %5613, align 4, !tbaa !5
  br label %5617

5617:                                             ; preds = %5604, %5612, %5574, %5557
  %5618 = icmp eq i32 %5566, %5
  br i1 %5618, label %5630, label %5479, !llvm.loop !763

5619:                                             ; preds = %5017
  %5620 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1344, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5630

5621:                                             ; preds = %2074
  store i16 %2024, ptr %1895, align 2, !tbaa !78
  br label %5630

5622:                                             ; preds = %2382
  %5623 = trunc i32 %2331 to i16
  store i16 %5623, ptr %1895, align 2, !tbaa !78
  br label %5630

5624:                                             ; preds = %3319
  store i64 %3269, ptr %3149, align 8, !tbaa !120
  br label %5630

5625:                                             ; preds = %3618
  store i64 %3568, ptr %3149, align 8, !tbaa !120
  br label %5630

5626:                                             ; preds = %4234
  store double %4184, ptr %3764, align 8, !tbaa !18
  br label %5630

5627:                                             ; preds = %4557
  store float %4507, ptr %4382, align 4, !tbaa !162
  br label %5630

5628:                                             ; preds = %4859
  store float %4809, ptr %4382, align 4, !tbaa !162
  br label %5630

5629:                                             ; preds = %5477
  store double %5427, ptr %5007, align 8, !tbaa !18
  br label %5630

5630:                                             ; preds = %5617, %5319, %5179, %4999, %4701, %4374, %4076, %3936, %3756, %3462, %3141, %3004, %2849, %2706, %2527, %2219, %1887, %1743, %1581, %1436, %1249, %1112, %957, %814, %635, %496, %339, %199, %5326, %5335, %5629, %5023, %5032, %4708, %4717, %5628, %4398, %4407, %5627, %4083, %4092, %5626, %3780, %3789, %3469, %3478, %5625, %3161, %3170, %5624, %2856, %2865, %2548, %2557, %2226, %2235, %5622, %1914, %1923, %5621, %1588, %1597, %1276, %1285, %964, %973, %656, %665, %346, %355, %40, %49, %5009, %5619, %4384, %5001, %3766, %4376, %3151, %3758, %2537, %3143, %1897, %2529, %1259, %1889, %645, %1251, %28, %637, %18
  %5631 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %637 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1251 ], [ 0.000000e+00, %645 ], [ 0.000000e+00, %1889 ], [ 0.000000e+00, %1259 ], [ 0.000000e+00, %2529 ], [ 0.000000e+00, %1897 ], [ 0.000000e+00, %3143 ], [ 0.000000e+00, %2537 ], [ 0.000000e+00, %3758 ], [ 0.000000e+00, %3151 ], [ 0.000000e+00, %4376 ], [ 0.000000e+00, %3766 ], [ 0.000000e+00, %5001 ], [ 0.000000e+00, %4384 ], [ 0.000000e+00, %5619 ], [ 0.000000e+00, %5009 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %40 ], [ 0.000000e+00, %355 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %665 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %973 ], [ 0.000000e+00, %964 ], [ 0.000000e+00, %1285 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1597 ], [ 0.000000e+00, %1588 ], [ %2025, %5621 ], [ 0.000000e+00, %1923 ], [ 0.000000e+00, %1914 ], [ %2332, %5622 ], [ 0.000000e+00, %2235 ], [ 0.000000e+00, %2226 ], [ 0.000000e+00, %2557 ], [ 0.000000e+00, %2548 ], [ 0.000000e+00, %2865 ], [ 0.000000e+00, %2856 ], [ %3270, %5624 ], [ 0.000000e+00, %3170 ], [ 0.000000e+00, %3161 ], [ %3569, %5625 ], [ 0.000000e+00, %3478 ], [ 0.000000e+00, %3469 ], [ 0.000000e+00, %3789 ], [ 0.000000e+00, %3780 ], [ %4185, %5626 ], [ 0.000000e+00, %4092 ], [ 0.000000e+00, %4083 ], [ %4508, %5627 ], [ 0.000000e+00, %4407 ], [ 0.000000e+00, %4398 ], [ %4810, %5628 ], [ 0.000000e+00, %4717 ], [ 0.000000e+00, %4708 ], [ 0.000000e+00, %5032 ], [ 0.000000e+00, %5023 ], [ %5428, %5629 ], [ 0.000000e+00, %5335 ], [ 0.000000e+00, %5326 ], [ %150, %199 ], [ 0.000000e+00, %339 ], [ %447, %496 ], [ 0.000000e+00, %635 ], [ %765, %814 ], [ 0.000000e+00, %957 ], [ %1063, %1112 ], [ 0.000000e+00, %1249 ], [ %1387, %1436 ], [ 0.000000e+00, %1581 ], [ %1694, %1743 ], [ 0.000000e+00, %1887 ], [ 0.000000e+00, %2219 ], [ 0.000000e+00, %2527 ], [ %2657, %2706 ], [ 0.000000e+00, %2849 ], [ %2955, %3004 ], [ 0.000000e+00, %3141 ], [ 0.000000e+00, %3462 ], [ 0.000000e+00, %3756 ], [ %3887, %3936 ], [ 0.000000e+00, %4076 ], [ 0.000000e+00, %4374 ], [ 0.000000e+00, %4701 ], [ 0.000000e+00, %4999 ], [ %5130, %5179 ], [ 0.000000e+00, %5319 ], [ 0.000000e+00, %5617 ]
  %5632 = phi i32 [ %10, %18 ], [ 1, %637 ], [ 1, %28 ], [ 1, %1251 ], [ 1, %645 ], [ 1, %1889 ], [ 1, %1259 ], [ 1, %2529 ], [ 1, %1897 ], [ 1, %3143 ], [ 1, %2537 ], [ 1, %3758 ], [ 1, %3151 ], [ 1, %4376 ], [ 1, %3766 ], [ 1, %5001 ], [ 1, %4384 ], [ 1, %5619 ], [ 1, %5009 ], [ 1, %49 ], [ 1, %40 ], [ 1, %355 ], [ 1, %346 ], [ 1, %665 ], [ 1, %656 ], [ 1, %973 ], [ 1, %964 ], [ 1, %1285 ], [ 1, %1276 ], [ 1, %1597 ], [ 1, %1588 ], [ %1930, %5621 ], [ 1, %1923 ], [ 1, %1914 ], [ %2242, %5622 ], [ 1, %2235 ], [ 1, %2226 ], [ 1, %2557 ], [ 1, %2548 ], [ 1, %2865 ], [ 1, %2856 ], [ %3177, %5624 ], [ 1, %3170 ], [ 1, %3161 ], [ %3485, %5625 ], [ 1, %3478 ], [ 1, %3469 ], [ 1, %3789 ], [ 1, %3780 ], [ %4099, %5626 ], [ 1, %4092 ], [ 1, %4083 ], [ %4414, %5627 ], [ 1, %4407 ], [ 1, %4398 ], [ %4724, %5628 ], [ 1, %4717 ], [ 1, %4708 ], [ 1, %5032 ], [ 1, %5023 ], [ %5342, %5629 ], [ 1, %5335 ], [ 1, %5326 ], [ %56, %199 ], [ %47, %339 ], [ %362, %496 ], [ %353, %635 ], [ %672, %814 ], [ %663, %957 ], [ %980, %1112 ], [ %971, %1249 ], [ %1292, %1436 ], [ %1283, %1581 ], [ %1604, %1743 ], [ %1595, %1887 ], [ %1921, %2219 ], [ %2233, %2527 ], [ %2564, %2706 ], [ %2555, %2849 ], [ %2872, %3004 ], [ %2863, %3141 ], [ %3168, %3462 ], [ %3476, %3756 ], [ %3796, %3936 ], [ %3787, %4076 ], [ %4090, %4374 ], [ %4405, %4701 ], [ %4715, %4999 ], [ %5039, %5179 ], [ %5030, %5319 ], [ %5333, %5617 ]
  %5633 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5632, ptr noundef nonnull @.str.5) #3
  %5634 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5631, ptr noundef nonnull @.str.6) #3
  br label %5635

5635:                                             ; preds = %5172, %5257, %5312, %5470, %5555, %5610, %4550, %4635, %4694, %4852, %4937, %4992, %3929, %4014, %4069, %4227, %4312, %4367, %3312, %3397, %3455, %3611, %3696, %3749, %2699, %2783, %2842, %2997, %3081, %3134, %2067, %2152, %2212, %2374, %2460, %2520, %1429, %1513, %1574, %1736, %1820, %1880, %807, %891, %950, %1105, %1189, %1242, %192, %276, %332, %489, %573, %628, %5630
  %5636 = phi i32 [ 0, %5630 ], [ -1, %628 ], [ -1, %573 ], [ -1, %489 ], [ -1, %332 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1242 ], [ -1, %1189 ], [ -1, %1105 ], [ -1, %950 ], [ -1, %891 ], [ -1, %807 ], [ -1, %1880 ], [ -1, %1820 ], [ -1, %1736 ], [ -1, %1574 ], [ -1, %1513 ], [ -1, %1429 ], [ -1, %2520 ], [ -1, %2460 ], [ -1, %2374 ], [ -1, %2212 ], [ -1, %2152 ], [ -1, %2067 ], [ -1, %3134 ], [ -1, %3081 ], [ -1, %2997 ], [ -1, %2842 ], [ -1, %2783 ], [ -1, %2699 ], [ -1, %3749 ], [ -1, %3696 ], [ -1, %3611 ], [ -1, %3455 ], [ -1, %3397 ], [ -1, %3312 ], [ -1, %4367 ], [ -1, %4312 ], [ -1, %4227 ], [ -1, %4069 ], [ -1, %4014 ], [ -1, %3929 ], [ -1, %4992 ], [ -1, %4937 ], [ -1, %4852 ], [ -1, %4694 ], [ -1, %4635 ], [ -1, %4550 ], [ -1, %5610 ], [ -1, %5555 ], [ -1, %5470 ], [ -1, %5312 ], [ -1, %5257 ], [ -1, %5172 ]
  ret i32 %5636
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5616 [
    i32 101, label %22
    i32 102, label %643
    i32 103, label %1262
    i32 104, label %1889
    i32 105, label %2516
    i32 106, label %3135
    i32 107, label %3749
    i32 108, label %4367
    i32 109, label %4992
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !120
  %30 = and i64 %29, 255
  %31 = icmp eq i64 %30, 0
  %32 = trunc i64 %29 to i8
  %33 = select i1 %31, i8 0, i8 %32
  store i8 %33, ptr %26, align 1, !tbaa !11
  br label %5616

34:                                               ; preds = %22
  switch i32 %1, label %641 [
    i32 1, label %35
    i32 0, label %343
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds i32, ptr %3, i64 %19
  %37 = load i32, ptr %36, align 4, !tbaa !5
  %38 = icmp eq i32 %37, 0
  %39 = icmp sgt i32 %5, 0
  br i1 %38, label %49, label %40

40:                                               ; preds = %35
  br i1 %39, label %41, label %5616

41:                                               ; preds = %40
  %42 = icmp sgt i32 %13, 1
  %43 = icmp sgt i32 %13, 0
  %44 = add i32 %13, -2
  %45 = zext i32 %44 to i64
  %46 = zext i32 %13 to i64
  %47 = add nuw i32 %5, 1
  %48 = icmp eq i32 %13, 1
  br label %202

49:                                               ; preds = %35
  br i1 %39, label %50, label %5616

50:                                               ; preds = %49
  %51 = icmp sgt i32 %13, 1
  %52 = icmp sgt i32 %13, 0
  %53 = add i32 %13, -2
  %54 = zext i32 %53 to i64
  %55 = zext i32 %13 to i64
  %56 = add nuw i32 %5, 1
  %57 = icmp eq i32 %13, 1
  br label %58

58:                                               ; preds = %50, %200
  %59 = phi i32 [ 0, %50 ], [ %152, %200 ]
  %60 = phi double [ 0.000000e+00, %50 ], [ %151, %200 ]
  %61 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %51, label %62, label %131

62:                                               ; preds = %58, %121
  %63 = phi i32 [ %130, %121 ], [ 0, %58 ]
  %64 = phi i64 [ %72, %121 ], [ %55, %58 ]
  %65 = phi i64 [ %129, %121 ], [ %54, %58 ]
  %66 = phi i32 [ %127, %121 ], [ %61, %58 ]
  %67 = sub i32 %53, %63
  %68 = tail call i32 @llvm.smin.i32(i32 %67, i32 0)
  %69 = sub i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = add nuw nsw i64 %70, 1
  %72 = add nsw i64 %64, -1
  %73 = icmp ult i32 %69, 31
  br i1 %73, label %109, label %74

74:                                               ; preds = %62
  %75 = and i64 %71, 8589934560
  %76 = sub i64 %65, %75
  br label %77

77:                                               ; preds = %77, %74
  %78 = phi i64 [ 0, %74 ], [ %101, %77 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %97, %77 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %98, %77 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %99, %77 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %74 ], [ %100, %77 ]
  %83 = sub i64 %65, %78
  %84 = getelementptr inbounds i32, ptr %9, i64 %83
  %85 = getelementptr inbounds i32, ptr %84, i64 -7
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %84, i64 -15
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %84, i64 -23
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %84, i64 -31
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !5
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = mul <8 x i32> %87, %79
  %98 = mul <8 x i32> %90, %80
  %99 = mul <8 x i32> %93, %81
  %100 = mul <8 x i32> %96, %82
  %101 = add nuw i64 %78, 32
  %102 = icmp eq i64 %101, %75
  br i1 %102, label %103, label %77, !llvm.loop !764

103:                                              ; preds = %77
  %104 = mul <8 x i32> %98, %97
  %105 = mul <8 x i32> %99, %104
  %106 = mul <8 x i32> %100, %105
  %107 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %106)
  %108 = icmp eq i64 %71, %75
  br i1 %108, label %121, label %109

109:                                              ; preds = %62, %103
  %110 = phi i64 [ %65, %62 ], [ %76, %103 ]
  %111 = phi i32 [ 1, %62 ], [ %107, %103 ]
  br label %112

112:                                              ; preds = %109, %112
  %113 = phi i64 [ %118, %112 ], [ %110, %109 ]
  %114 = phi i32 [ %117, %112 ], [ %111, %109 ]
  %115 = getelementptr inbounds i32, ptr %9, i64 %113
  %116 = load i32, ptr %115, align 4, !tbaa !5
  %117 = mul nsw i32 %116, %114
  %118 = add nsw i64 %113, -1
  %119 = trunc i64 %113 to i32
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %112, label %121, !llvm.loop !765

121:                                              ; preds = %112, %103
  %122 = phi i32 [ %107, %103 ], [ %117, %112 ]
  %123 = and i64 %72, 4294967295
  %124 = getelementptr inbounds i32, ptr %6, i64 %123
  %125 = load i32, ptr %124, align 4, !tbaa !5
  %126 = mul nsw i32 %125, %122
  %127 = add nsw i32 %126, %66
  %128 = icmp sgt i64 %64, 2
  %129 = add nsw i64 %65, -1
  %130 = add i32 %63, 1
  br i1 %128, label %62, label %131, !llvm.loop !766

131:                                              ; preds = %121, %58
  %132 = phi i32 [ %61, %58 ], [ %127, %121 ]
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds double, ptr %2, i64 %133
  %135 = load double, ptr %134, align 8, !tbaa !18
  %136 = getelementptr inbounds i64, ptr %24, i64 %133
  %137 = load i64, ptr %136, align 8, !tbaa !120
  %138 = trunc i64 %137 to i32
  %139 = load i8, ptr %26, align 1, !tbaa !11
  %140 = uitofp i8 %139 to double
  %141 = and i32 %138, 255
  %142 = sitofp i32 %141 to double
  %143 = fmul fast double %135, %142
  %144 = fcmp fast uge double %143, 0.000000e+00
  %145 = fneg fast double %143
  %146 = tail call fast double @llvm.fabs.f64(double %143)
  %147 = fcmp fast ole double %146, %140
  %148 = select nnan ninf i1 %144, double %143, double %145
  %149 = select i1 %147, double %140, double %148
  %150 = fptoui double %149 to i8
  store i8 %150, ptr %26, align 1, !tbaa !11
  %151 = fadd fast double %135, %60
  %152 = add nuw nsw i32 %59, 1
  br i1 %52, label %153, label %200

153:                                              ; preds = %131
  %154 = load i32, ptr %4, align 4, !tbaa !5
  %155 = load i32, ptr %12, align 4, !tbaa !5
  %156 = add nsw i32 %155, -1
  %157 = icmp slt i32 %154, %156
  br i1 %157, label %177, label %158

158:                                              ; preds = %153
  %159 = icmp eq i32 %154, %156
  br i1 %159, label %160, label %193

160:                                              ; preds = %158
  store i32 0, ptr %4, align 4, !tbaa !5
  %161 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %161, ptr %6, align 4, !tbaa !5
  br i1 %57, label %200, label %162

162:                                              ; preds = %160, %187
  %163 = phi i64 [ %191, %187 ], [ 1, %160 ]
  %164 = getelementptr inbounds i32, ptr %4, i64 %163
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = getelementptr inbounds i32, ptr %12, i64 %163
  %167 = load i32, ptr %166, align 4, !tbaa !5
  %168 = add nsw i32 %167, -1
  %169 = icmp slt i32 %165, %168
  br i1 %169, label %170, label %185

170:                                              ; preds = %162
  br i1 %157, label %177, label %171

171:                                              ; preds = %170
  %172 = getelementptr inbounds i32, ptr %7, i64 %163
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %6, i64 %163
  %175 = load i32, ptr %174, align 4, !tbaa !5
  %176 = add nsw i32 %175, %173
  store i32 %176, ptr %174, align 4, !tbaa !5
  br label %195

177:                                              ; preds = %153, %170
  %178 = phi i32 [ %165, %170 ], [ %154, %153 ]
  %179 = phi ptr [ %164, %170 ], [ %4, %153 ]
  %180 = phi i64 [ %163, %170 ], [ 0, %153 ]
  %181 = add nsw i32 %178, 1
  store i32 %181, ptr %179, align 4, !tbaa !5
  %182 = getelementptr inbounds i32, ptr %7, i64 %180
  %183 = load i32, ptr %182, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %6, i64 %180
  br label %195

185:                                              ; preds = %162
  %186 = icmp eq i32 %165, %168
  br i1 %186, label %187, label %193

187:                                              ; preds = %185
  store i32 0, ptr %164, align 4, !tbaa !5
  %188 = getelementptr inbounds i32, ptr %8, i64 %163
  %189 = load i32, ptr %188, align 4, !tbaa !5
  %190 = getelementptr inbounds i32, ptr %6, i64 %163
  store i32 %189, ptr %190, align 4, !tbaa !5
  %191 = add nuw nsw i64 %163, 1
  %192 = icmp eq i64 %191, %55
  br i1 %192, label %200, label %162, !llvm.loop !767

193:                                              ; preds = %158, %185
  %194 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

195:                                              ; preds = %171, %177
  %196 = phi ptr [ %184, %177 ], [ %164, %171 ]
  %197 = phi i32 [ %183, %177 ], [ 1, %171 ]
  %198 = load i32, ptr %196, align 4, !tbaa !5
  %199 = add nsw i32 %198, %197
  store i32 %199, ptr %196, align 4, !tbaa !5
  br label %200

200:                                              ; preds = %187, %195, %160, %131
  %201 = icmp eq i32 %152, %5
  br i1 %201, label %5616, label %58, !llvm.loop !768

202:                                              ; preds = %41, %341
  %203 = phi i32 [ 0, %41 ], [ %290, %341 ]
  %204 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %42, label %205, label %274

205:                                              ; preds = %202, %264
  %206 = phi i32 [ %273, %264 ], [ 0, %202 ]
  %207 = phi i64 [ %215, %264 ], [ %46, %202 ]
  %208 = phi i64 [ %272, %264 ], [ %45, %202 ]
  %209 = phi i32 [ %270, %264 ], [ %204, %202 ]
  %210 = sub i32 %44, %206
  %211 = tail call i32 @llvm.smin.i32(i32 %210, i32 0)
  %212 = sub i32 %210, %211
  %213 = zext i32 %212 to i64
  %214 = add nuw nsw i64 %213, 1
  %215 = add nsw i64 %207, -1
  %216 = icmp ult i32 %212, 31
  br i1 %216, label %252, label %217

217:                                              ; preds = %205
  %218 = and i64 %214, 8589934560
  %219 = sub i64 %208, %218
  br label %220

220:                                              ; preds = %220, %217
  %221 = phi i64 [ 0, %217 ], [ %244, %220 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %240, %220 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %241, %220 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %242, %220 ]
  %225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %217 ], [ %243, %220 ]
  %226 = sub i64 %208, %221
  %227 = getelementptr inbounds i32, ptr %11, i64 %226
  %228 = getelementptr inbounds i32, ptr %227, i64 -7
  %229 = load <8 x i32>, ptr %228, align 4, !tbaa !5
  %230 = shufflevector <8 x i32> %229, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %231 = getelementptr inbounds i32, ptr %227, i64 -15
  %232 = load <8 x i32>, ptr %231, align 4, !tbaa !5
  %233 = shufflevector <8 x i32> %232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %234 = getelementptr inbounds i32, ptr %227, i64 -23
  %235 = load <8 x i32>, ptr %234, align 4, !tbaa !5
  %236 = shufflevector <8 x i32> %235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %237 = getelementptr inbounds i32, ptr %227, i64 -31
  %238 = load <8 x i32>, ptr %237, align 4, !tbaa !5
  %239 = shufflevector <8 x i32> %238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %240 = mul <8 x i32> %230, %222
  %241 = mul <8 x i32> %233, %223
  %242 = mul <8 x i32> %236, %224
  %243 = mul <8 x i32> %239, %225
  %244 = add nuw i64 %221, 32
  %245 = icmp eq i64 %244, %218
  br i1 %245, label %246, label %220, !llvm.loop !769

246:                                              ; preds = %220
  %247 = mul <8 x i32> %241, %240
  %248 = mul <8 x i32> %242, %247
  %249 = mul <8 x i32> %243, %248
  %250 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %249)
  %251 = icmp eq i64 %214, %218
  br i1 %251, label %264, label %252

252:                                              ; preds = %205, %246
  %253 = phi i64 [ %208, %205 ], [ %219, %246 ]
  %254 = phi i32 [ 1, %205 ], [ %250, %246 ]
  br label %255

255:                                              ; preds = %252, %255
  %256 = phi i64 [ %261, %255 ], [ %253, %252 ]
  %257 = phi i32 [ %260, %255 ], [ %254, %252 ]
  %258 = getelementptr inbounds i32, ptr %11, i64 %256
  %259 = load i32, ptr %258, align 4, !tbaa !5
  %260 = mul nsw i32 %259, %257
  %261 = add nsw i64 %256, -1
  %262 = trunc i64 %256 to i32
  %263 = icmp sgt i32 %262, 0
  br i1 %263, label %255, label %264, !llvm.loop !770

264:                                              ; preds = %255, %246
  %265 = phi i32 [ %250, %246 ], [ %260, %255 ]
  %266 = and i64 %215, 4294967295
  %267 = getelementptr inbounds i32, ptr %6, i64 %266
  %268 = load i32, ptr %267, align 4, !tbaa !5
  %269 = mul nsw i32 %268, %265
  %270 = add nsw i32 %269, %209
  %271 = icmp sgt i64 %207, 2
  %272 = add nsw i64 %208, -1
  %273 = add i32 %206, 1
  br i1 %271, label %205, label %274, !llvm.loop !771

274:                                              ; preds = %264, %202
  %275 = phi i32 [ %204, %202 ], [ %270, %264 ]
  %276 = icmp slt i32 %275, %5
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

279:                                              ; preds = %274
  %280 = sext i32 %275 to i64
  %281 = getelementptr inbounds i64, ptr %24, i64 %280
  %282 = load i64, ptr %281, align 8, !tbaa !120
  %283 = trunc i64 %282 to i32
  %284 = load i8, ptr %26, align 1, !tbaa !11
  %285 = uitofp i8 %284 to double
  %286 = and i32 %283, 255
  %287 = sitofp i32 %286 to double
  %288 = tail call fast double @llvm.maxnum.f64(double %285, double %287)
  %289 = fptoui double %288 to i8
  store i8 %289, ptr %26, align 1, !tbaa !11
  %290 = add nuw nsw i32 %203, 1
  br i1 %43, label %291, label %341

291:                                              ; preds = %279
  %292 = load i32, ptr %4, align 4, !tbaa !5
  %293 = load i32, ptr %12, align 4, !tbaa !5
  %294 = add nsw i32 %293, -1
  %295 = icmp slt i32 %292, %294
  br i1 %295, label %318, label %296

296:                                              ; preds = %291
  %297 = icmp eq i32 %292, %294
  br i1 %297, label %298, label %334

298:                                              ; preds = %296
  store i32 0, ptr %4, align 4, !tbaa !5
  %299 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %299, ptr %6, align 4, !tbaa !5
  br i1 %48, label %341, label %300

300:                                              ; preds = %298, %328
  %301 = phi i64 [ %332, %328 ], [ 1, %298 ]
  %302 = getelementptr inbounds i32, ptr %4, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !5
  %304 = getelementptr inbounds i32, ptr %12, i64 %301
  %305 = load i32, ptr %304, align 4, !tbaa !5
  %306 = add nsw i32 %305, -1
  %307 = icmp slt i32 %303, %306
  br i1 %307, label %308, label %326

308:                                              ; preds = %300
  br i1 %295, label %318, label %309

309:                                              ; preds = %308
  %310 = shl i64 %301, 32
  %311 = add i64 %310, -4294967296
  %312 = ashr exact i64 %311, 32
  %313 = getelementptr inbounds i32, ptr %7, i64 %312
  %314 = load i32, ptr %313, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %6, i64 %301
  %316 = load i32, ptr %315, align 4, !tbaa !5
  %317 = add nsw i32 %316, %314
  store i32 %317, ptr %315, align 4, !tbaa !5
  br label %336

318:                                              ; preds = %291, %308
  %319 = phi i32 [ %303, %308 ], [ %292, %291 ]
  %320 = phi ptr [ %302, %308 ], [ %4, %291 ]
  %321 = phi i64 [ %301, %308 ], [ 0, %291 ]
  %322 = add nsw i32 %319, 1
  store i32 %322, ptr %320, align 4, !tbaa !5
  %323 = getelementptr inbounds i32, ptr %7, i64 %321
  %324 = load i32, ptr %323, align 4, !tbaa !5
  %325 = getelementptr inbounds i32, ptr %6, i64 %321
  br label %336

326:                                              ; preds = %300
  %327 = icmp eq i32 %303, %306
  br i1 %327, label %328, label %334

328:                                              ; preds = %326
  store i32 0, ptr %302, align 4, !tbaa !5
  %329 = getelementptr inbounds i32, ptr %8, i64 %301
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = getelementptr inbounds i32, ptr %6, i64 %301
  store i32 %330, ptr %331, align 4, !tbaa !5
  %332 = add nuw nsw i64 %301, 1
  %333 = icmp eq i64 %332, %46
  br i1 %333, label %341, label %300, !llvm.loop !772

334:                                              ; preds = %296, %326
  %335 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

336:                                              ; preds = %309, %318
  %337 = phi ptr [ %325, %318 ], [ %302, %309 ]
  %338 = phi i32 [ %324, %318 ], [ 1, %309 ]
  %339 = load i32, ptr %337, align 4, !tbaa !5
  %340 = add nsw i32 %339, %338
  store i32 %340, ptr %337, align 4, !tbaa !5
  br label %341

341:                                              ; preds = %328, %336, %298, %279
  %342 = icmp eq i32 %290, %5
  br i1 %342, label %5616, label %202, !llvm.loop !773

343:                                              ; preds = %34
  %344 = getelementptr inbounds i32, ptr %3, i64 %19
  %345 = load i32, ptr %344, align 4, !tbaa !5
  %346 = icmp eq i32 %345, 0
  %347 = icmp sgt i32 %5, 0
  br i1 %346, label %357, label %348

348:                                              ; preds = %343
  br i1 %347, label %349, label %5616

349:                                              ; preds = %348
  %350 = icmp sgt i32 %13, 1
  %351 = icmp sgt i32 %13, 0
  %352 = add i32 %13, -2
  %353 = zext i32 %352 to i64
  %354 = zext i32 %13 to i64
  %355 = add nuw i32 %5, 1
  %356 = icmp eq i32 %13, 1
  br label %501

357:                                              ; preds = %343
  br i1 %347, label %358, label %5616

358:                                              ; preds = %357
  %359 = icmp sgt i32 %13, 1
  %360 = icmp sgt i32 %13, 0
  %361 = add i32 %13, -2
  %362 = zext i32 %361 to i64
  %363 = zext i32 %13 to i64
  %364 = add nuw i32 %5, 1
  %365 = icmp eq i32 %13, 1
  br label %366

366:                                              ; preds = %358, %499
  %367 = phi i32 [ 0, %358 ], [ %451, %499 ]
  %368 = phi double [ 0.000000e+00, %358 ], [ %450, %499 ]
  %369 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %359, label %370, label %439

370:                                              ; preds = %366, %429
  %371 = phi i32 [ %438, %429 ], [ 0, %366 ]
  %372 = phi i64 [ %380, %429 ], [ %363, %366 ]
  %373 = phi i64 [ %437, %429 ], [ %362, %366 ]
  %374 = phi i32 [ %435, %429 ], [ %369, %366 ]
  %375 = sub i32 %361, %371
  %376 = tail call i32 @llvm.smin.i32(i32 %375, i32 0)
  %377 = sub i32 %375, %376
  %378 = zext i32 %377 to i64
  %379 = add nuw nsw i64 %378, 1
  %380 = add nsw i64 %372, -1
  %381 = icmp ult i32 %377, 31
  br i1 %381, label %417, label %382

382:                                              ; preds = %370
  %383 = and i64 %379, 8589934560
  %384 = sub i64 %373, %383
  br label %385

385:                                              ; preds = %385, %382
  %386 = phi i64 [ 0, %382 ], [ %409, %385 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %405, %385 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %406, %385 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %407, %385 ]
  %390 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %382 ], [ %408, %385 ]
  %391 = sub i64 %373, %386
  %392 = getelementptr inbounds i32, ptr %9, i64 %391
  %393 = getelementptr inbounds i32, ptr %392, i64 -7
  %394 = load <8 x i32>, ptr %393, align 4, !tbaa !5
  %395 = shufflevector <8 x i32> %394, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %396 = getelementptr inbounds i32, ptr %392, i64 -15
  %397 = load <8 x i32>, ptr %396, align 4, !tbaa !5
  %398 = shufflevector <8 x i32> %397, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %399 = getelementptr inbounds i32, ptr %392, i64 -23
  %400 = load <8 x i32>, ptr %399, align 4, !tbaa !5
  %401 = shufflevector <8 x i32> %400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %402 = getelementptr inbounds i32, ptr %392, i64 -31
  %403 = load <8 x i32>, ptr %402, align 4, !tbaa !5
  %404 = shufflevector <8 x i32> %403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %405 = mul <8 x i32> %395, %387
  %406 = mul <8 x i32> %398, %388
  %407 = mul <8 x i32> %401, %389
  %408 = mul <8 x i32> %404, %390
  %409 = add nuw i64 %386, 32
  %410 = icmp eq i64 %409, %383
  br i1 %410, label %411, label %385, !llvm.loop !774

411:                                              ; preds = %385
  %412 = mul <8 x i32> %406, %405
  %413 = mul <8 x i32> %407, %412
  %414 = mul <8 x i32> %408, %413
  %415 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %414)
  %416 = icmp eq i64 %379, %383
  br i1 %416, label %429, label %417

417:                                              ; preds = %370, %411
  %418 = phi i64 [ %373, %370 ], [ %384, %411 ]
  %419 = phi i32 [ 1, %370 ], [ %415, %411 ]
  br label %420

420:                                              ; preds = %417, %420
  %421 = phi i64 [ %426, %420 ], [ %418, %417 ]
  %422 = phi i32 [ %425, %420 ], [ %419, %417 ]
  %423 = getelementptr inbounds i32, ptr %9, i64 %421
  %424 = load i32, ptr %423, align 4, !tbaa !5
  %425 = mul nsw i32 %424, %422
  %426 = add nsw i64 %421, -1
  %427 = trunc i64 %421 to i32
  %428 = icmp sgt i32 %427, 0
  br i1 %428, label %420, label %429, !llvm.loop !775

429:                                              ; preds = %420, %411
  %430 = phi i32 [ %415, %411 ], [ %425, %420 ]
  %431 = and i64 %380, 4294967295
  %432 = getelementptr inbounds i32, ptr %6, i64 %431
  %433 = load i32, ptr %432, align 4, !tbaa !5
  %434 = mul nsw i32 %433, %430
  %435 = add nsw i32 %434, %374
  %436 = icmp sgt i64 %372, 2
  %437 = add nsw i64 %373, -1
  %438 = add i32 %371, 1
  br i1 %436, label %370, label %439, !llvm.loop !776

439:                                              ; preds = %429, %366
  %440 = phi i32 [ %369, %366 ], [ %435, %429 ]
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i64, ptr %24, i64 %441
  %443 = load i64, ptr %442, align 8, !tbaa !120
  %444 = trunc i64 %443 to i32
  %445 = load i8, ptr %26, align 1, !tbaa !11
  %446 = zext i8 %445 to i32
  %447 = and i32 %444, 255
  %448 = tail call i32 @llvm.umax.i32(i32 %447, i32 %446)
  %449 = trunc i32 %448 to i8
  store i8 %449, ptr %26, align 1, !tbaa !11
  %450 = fadd fast double %368, 1.000000e+00
  %451 = add nuw nsw i32 %367, 1
  br i1 %360, label %452, label %499

452:                                              ; preds = %439
  %453 = load i32, ptr %4, align 4, !tbaa !5
  %454 = load i32, ptr %12, align 4, !tbaa !5
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %453, %455
  br i1 %456, label %476, label %457

457:                                              ; preds = %452
  %458 = icmp eq i32 %453, %455
  br i1 %458, label %459, label %492

459:                                              ; preds = %457
  store i32 0, ptr %4, align 4, !tbaa !5
  %460 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %460, ptr %6, align 4, !tbaa !5
  br i1 %365, label %499, label %461

461:                                              ; preds = %459, %486
  %462 = phi i64 [ %490, %486 ], [ 1, %459 ]
  %463 = getelementptr inbounds i32, ptr %4, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %12, i64 %462
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = add nsw i32 %466, -1
  %468 = icmp slt i32 %464, %467
  br i1 %468, label %469, label %484

469:                                              ; preds = %461
  br i1 %456, label %476, label %470

470:                                              ; preds = %469
  %471 = getelementptr inbounds i32, ptr %7, i64 %462
  %472 = load i32, ptr %471, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %6, i64 %462
  %474 = load i32, ptr %473, align 4, !tbaa !5
  %475 = add nsw i32 %474, %472
  store i32 %475, ptr %473, align 4, !tbaa !5
  br label %494

476:                                              ; preds = %452, %469
  %477 = phi i32 [ %464, %469 ], [ %453, %452 ]
  %478 = phi ptr [ %463, %469 ], [ %4, %452 ]
  %479 = phi i64 [ %462, %469 ], [ 0, %452 ]
  %480 = add nsw i32 %477, 1
  store i32 %480, ptr %478, align 4, !tbaa !5
  %481 = getelementptr inbounds i32, ptr %7, i64 %479
  %482 = load i32, ptr %481, align 4, !tbaa !5
  %483 = getelementptr inbounds i32, ptr %6, i64 %479
  br label %494

484:                                              ; preds = %461
  %485 = icmp eq i32 %464, %467
  br i1 %485, label %486, label %492

486:                                              ; preds = %484
  store i32 0, ptr %463, align 4, !tbaa !5
  %487 = getelementptr inbounds i32, ptr %8, i64 %462
  %488 = load i32, ptr %487, align 4, !tbaa !5
  %489 = getelementptr inbounds i32, ptr %6, i64 %462
  store i32 %488, ptr %489, align 4, !tbaa !5
  %490 = add nuw nsw i64 %462, 1
  %491 = icmp eq i64 %490, %363
  br i1 %491, label %499, label %461, !llvm.loop !777

492:                                              ; preds = %457, %484
  %493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

494:                                              ; preds = %470, %476
  %495 = phi ptr [ %483, %476 ], [ %463, %470 ]
  %496 = phi i32 [ %482, %476 ], [ 1, %470 ]
  %497 = load i32, ptr %495, align 4, !tbaa !5
  %498 = add nsw i32 %497, %496
  store i32 %498, ptr %495, align 4, !tbaa !5
  br label %499

499:                                              ; preds = %486, %494, %459, %439
  %500 = icmp eq i32 %451, %5
  br i1 %500, label %5616, label %366, !llvm.loop !778

501:                                              ; preds = %349, %639
  %502 = phi i32 [ 0, %349 ], [ %588, %639 ]
  %503 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %350, label %504, label %573

504:                                              ; preds = %501, %563
  %505 = phi i32 [ %572, %563 ], [ 0, %501 ]
  %506 = phi i64 [ %514, %563 ], [ %354, %501 ]
  %507 = phi i64 [ %571, %563 ], [ %353, %501 ]
  %508 = phi i32 [ %569, %563 ], [ %503, %501 ]
  %509 = sub i32 %352, %505
  %510 = tail call i32 @llvm.smin.i32(i32 %509, i32 0)
  %511 = sub i32 %509, %510
  %512 = zext i32 %511 to i64
  %513 = add nuw nsw i64 %512, 1
  %514 = add nsw i64 %506, -1
  %515 = icmp ult i32 %511, 31
  br i1 %515, label %551, label %516

516:                                              ; preds = %504
  %517 = and i64 %513, 8589934560
  %518 = sub i64 %507, %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi i64 [ 0, %516 ], [ %543, %519 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %539, %519 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %540, %519 ]
  %523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %541, %519 ]
  %524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %542, %519 ]
  %525 = sub i64 %507, %520
  %526 = getelementptr inbounds i32, ptr %11, i64 %525
  %527 = getelementptr inbounds i32, ptr %526, i64 -7
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !5
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %526, i64 -15
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !5
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %526, i64 -23
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !5
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = getelementptr inbounds i32, ptr %526, i64 -31
  %537 = load <8 x i32>, ptr %536, align 4, !tbaa !5
  %538 = shufflevector <8 x i32> %537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %539 = mul <8 x i32> %529, %521
  %540 = mul <8 x i32> %532, %522
  %541 = mul <8 x i32> %535, %523
  %542 = mul <8 x i32> %538, %524
  %543 = add nuw i64 %520, 32
  %544 = icmp eq i64 %543, %517
  br i1 %544, label %545, label %519, !llvm.loop !779

545:                                              ; preds = %519
  %546 = mul <8 x i32> %540, %539
  %547 = mul <8 x i32> %541, %546
  %548 = mul <8 x i32> %542, %547
  %549 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %548)
  %550 = icmp eq i64 %513, %517
  br i1 %550, label %563, label %551

551:                                              ; preds = %504, %545
  %552 = phi i64 [ %507, %504 ], [ %518, %545 ]
  %553 = phi i32 [ 1, %504 ], [ %549, %545 ]
  br label %554

554:                                              ; preds = %551, %554
  %555 = phi i64 [ %560, %554 ], [ %552, %551 ]
  %556 = phi i32 [ %559, %554 ], [ %553, %551 ]
  %557 = getelementptr inbounds i32, ptr %11, i64 %555
  %558 = load i32, ptr %557, align 4, !tbaa !5
  %559 = mul nsw i32 %558, %556
  %560 = add nsw i64 %555, -1
  %561 = trunc i64 %555 to i32
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %554, label %563, !llvm.loop !780

563:                                              ; preds = %554, %545
  %564 = phi i32 [ %549, %545 ], [ %559, %554 ]
  %565 = and i64 %514, 4294967295
  %566 = getelementptr inbounds i32, ptr %6, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !5
  %568 = mul nsw i32 %567, %564
  %569 = add nsw i32 %568, %508
  %570 = icmp sgt i64 %506, 2
  %571 = add nsw i64 %507, -1
  %572 = add i32 %505, 1
  br i1 %570, label %504, label %573, !llvm.loop !781

573:                                              ; preds = %563, %501
  %574 = phi i32 [ %503, %501 ], [ %569, %563 ]
  %575 = icmp slt i32 %574, %5
  br i1 %575, label %578, label %576

576:                                              ; preds = %573
  %577 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

578:                                              ; preds = %573
  %579 = sext i32 %574 to i64
  %580 = getelementptr inbounds i64, ptr %24, i64 %579
  %581 = load i64, ptr %580, align 8, !tbaa !120
  %582 = trunc i64 %581 to i32
  %583 = load i8, ptr %26, align 1, !tbaa !11
  %584 = zext i8 %583 to i32
  %585 = and i32 %582, 255
  %586 = tail call i32 @llvm.umax.i32(i32 %585, i32 %584)
  %587 = trunc i32 %586 to i8
  store i8 %587, ptr %26, align 1, !tbaa !11
  %588 = add nuw nsw i32 %502, 1
  br i1 %351, label %589, label %639

589:                                              ; preds = %578
  %590 = load i32, ptr %4, align 4, !tbaa !5
  %591 = load i32, ptr %12, align 4, !tbaa !5
  %592 = add nsw i32 %591, -1
  %593 = icmp slt i32 %590, %592
  br i1 %593, label %616, label %594

594:                                              ; preds = %589
  %595 = icmp eq i32 %590, %592
  br i1 %595, label %596, label %632

596:                                              ; preds = %594
  store i32 0, ptr %4, align 4, !tbaa !5
  %597 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %597, ptr %6, align 4, !tbaa !5
  br i1 %356, label %639, label %598

598:                                              ; preds = %596, %626
  %599 = phi i64 [ %630, %626 ], [ 1, %596 ]
  %600 = getelementptr inbounds i32, ptr %4, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %12, i64 %599
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = add nsw i32 %603, -1
  %605 = icmp slt i32 %601, %604
  br i1 %605, label %606, label %624

606:                                              ; preds = %598
  br i1 %593, label %616, label %607

607:                                              ; preds = %606
  %608 = shl i64 %599, 32
  %609 = add i64 %608, -4294967296
  %610 = ashr exact i64 %609, 32
  %611 = getelementptr inbounds i32, ptr %7, i64 %610
  %612 = load i32, ptr %611, align 4, !tbaa !5
  %613 = getelementptr inbounds i32, ptr %6, i64 %599
  %614 = load i32, ptr %613, align 4, !tbaa !5
  %615 = add nsw i32 %614, %612
  store i32 %615, ptr %613, align 4, !tbaa !5
  br label %634

616:                                              ; preds = %589, %606
  %617 = phi i32 [ %601, %606 ], [ %590, %589 ]
  %618 = phi ptr [ %600, %606 ], [ %4, %589 ]
  %619 = phi i64 [ %599, %606 ], [ 0, %589 ]
  %620 = add nsw i32 %617, 1
  store i32 %620, ptr %618, align 4, !tbaa !5
  %621 = getelementptr inbounds i32, ptr %7, i64 %619
  %622 = load i32, ptr %621, align 4, !tbaa !5
  %623 = getelementptr inbounds i32, ptr %6, i64 %619
  br label %634

624:                                              ; preds = %598
  %625 = icmp eq i32 %601, %604
  br i1 %625, label %626, label %632

626:                                              ; preds = %624
  store i32 0, ptr %600, align 4, !tbaa !5
  %627 = getelementptr inbounds i32, ptr %8, i64 %599
  %628 = load i32, ptr %627, align 4, !tbaa !5
  %629 = getelementptr inbounds i32, ptr %6, i64 %599
  store i32 %628, ptr %629, align 4, !tbaa !5
  %630 = add nuw nsw i64 %599, 1
  %631 = icmp eq i64 %630, %354
  br i1 %631, label %639, label %598, !llvm.loop !782

632:                                              ; preds = %594, %624
  %633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

634:                                              ; preds = %607, %616
  %635 = phi ptr [ %623, %616 ], [ %600, %607 ]
  %636 = phi i32 [ %622, %616 ], [ 1, %607 ]
  %637 = load i32, ptr %635, align 4, !tbaa !5
  %638 = add nsw i32 %637, %636
  store i32 %638, ptr %635, align 4, !tbaa !5
  br label %639

639:                                              ; preds = %626, %634, %596, %578
  %640 = icmp eq i32 %588, %5
  br i1 %640, label %5616, label %501, !llvm.loop !783

641:                                              ; preds = %34
  %642 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1622, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

643:                                              ; preds = %18
  %644 = getelementptr inbounds ptr, ptr %14, i64 %19
  %645 = load ptr, ptr %644, align 8, !tbaa !9
  %646 = getelementptr inbounds ptr, ptr %16, i64 %19
  %647 = load ptr, ptr %646, align 8, !tbaa !9
  store i32 0, ptr %647, align 4, !tbaa !5
  %648 = icmp eq i32 %13, 0
  br i1 %648, label %649, label %655

649:                                              ; preds = %643
  %650 = load i64, ptr %645, align 8, !tbaa !120
  %651 = trunc i64 %650 to i32
  %652 = icmp eq i32 %651, 0
  %653 = tail call i32 @llvm.abs.i32(i32 %651, i1 true)
  %654 = select i1 %652, i32 0, i32 %653
  store i32 %654, ptr %647, align 4, !tbaa !5
  br label %5616

655:                                              ; preds = %643
  switch i32 %1, label %1260 [
    i32 1, label %656
    i32 0, label %966
  ]

656:                                              ; preds = %655
  %657 = getelementptr inbounds i32, ptr %3, i64 %19
  %658 = load i32, ptr %657, align 4, !tbaa !5
  %659 = icmp eq i32 %658, 0
  %660 = icmp sgt i32 %5, 0
  br i1 %659, label %670, label %661

661:                                              ; preds = %656
  br i1 %660, label %662, label %5616

662:                                              ; preds = %661
  %663 = icmp sgt i32 %13, 1
  %664 = icmp sgt i32 %13, 0
  %665 = add i32 %13, -2
  %666 = zext i32 %665 to i64
  %667 = zext i32 %13 to i64
  %668 = add nuw i32 %5, 1
  %669 = icmp eq i32 %13, 1
  br label %822

670:                                              ; preds = %656
  br i1 %660, label %671, label %5616

671:                                              ; preds = %670
  %672 = icmp sgt i32 %13, 1
  %673 = icmp sgt i32 %13, 0
  %674 = add i32 %13, -2
  %675 = zext i32 %674 to i64
  %676 = zext i32 %13 to i64
  %677 = add nuw i32 %5, 1
  %678 = icmp eq i32 %13, 1
  br label %679

679:                                              ; preds = %671, %820
  %680 = phi i32 [ 0, %671 ], [ %772, %820 ]
  %681 = phi double [ 0.000000e+00, %671 ], [ %771, %820 ]
  %682 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %672, label %683, label %752

683:                                              ; preds = %679, %742
  %684 = phi i32 [ %751, %742 ], [ 0, %679 ]
  %685 = phi i64 [ %693, %742 ], [ %676, %679 ]
  %686 = phi i64 [ %750, %742 ], [ %675, %679 ]
  %687 = phi i32 [ %748, %742 ], [ %682, %679 ]
  %688 = sub i32 %674, %684
  %689 = tail call i32 @llvm.smin.i32(i32 %688, i32 0)
  %690 = sub i32 %688, %689
  %691 = zext i32 %690 to i64
  %692 = add nuw nsw i64 %691, 1
  %693 = add nsw i64 %685, -1
  %694 = icmp ult i32 %690, 31
  br i1 %694, label %730, label %695

695:                                              ; preds = %683
  %696 = and i64 %692, 8589934560
  %697 = sub i64 %686, %696
  br label %698

698:                                              ; preds = %698, %695
  %699 = phi i64 [ 0, %695 ], [ %722, %698 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %718, %698 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %719, %698 ]
  %702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %720, %698 ]
  %703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %721, %698 ]
  %704 = sub i64 %686, %699
  %705 = getelementptr inbounds i32, ptr %9, i64 %704
  %706 = getelementptr inbounds i32, ptr %705, i64 -7
  %707 = load <8 x i32>, ptr %706, align 4, !tbaa !5
  %708 = shufflevector <8 x i32> %707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %709 = getelementptr inbounds i32, ptr %705, i64 -15
  %710 = load <8 x i32>, ptr %709, align 4, !tbaa !5
  %711 = shufflevector <8 x i32> %710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %712 = getelementptr inbounds i32, ptr %705, i64 -23
  %713 = load <8 x i32>, ptr %712, align 4, !tbaa !5
  %714 = shufflevector <8 x i32> %713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %715 = getelementptr inbounds i32, ptr %705, i64 -31
  %716 = load <8 x i32>, ptr %715, align 4, !tbaa !5
  %717 = shufflevector <8 x i32> %716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %718 = mul <8 x i32> %708, %700
  %719 = mul <8 x i32> %711, %701
  %720 = mul <8 x i32> %714, %702
  %721 = mul <8 x i32> %717, %703
  %722 = add nuw i64 %699, 32
  %723 = icmp eq i64 %722, %696
  br i1 %723, label %724, label %698, !llvm.loop !784

724:                                              ; preds = %698
  %725 = mul <8 x i32> %719, %718
  %726 = mul <8 x i32> %720, %725
  %727 = mul <8 x i32> %721, %726
  %728 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %727)
  %729 = icmp eq i64 %692, %696
  br i1 %729, label %742, label %730

730:                                              ; preds = %683, %724
  %731 = phi i64 [ %686, %683 ], [ %697, %724 ]
  %732 = phi i32 [ 1, %683 ], [ %728, %724 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i64 [ %739, %733 ], [ %731, %730 ]
  %735 = phi i32 [ %738, %733 ], [ %732, %730 ]
  %736 = getelementptr inbounds i32, ptr %9, i64 %734
  %737 = load i32, ptr %736, align 4, !tbaa !5
  %738 = mul nsw i32 %737, %735
  %739 = add nsw i64 %734, -1
  %740 = trunc i64 %734 to i32
  %741 = icmp sgt i32 %740, 0
  br i1 %741, label %733, label %742, !llvm.loop !785

742:                                              ; preds = %733, %724
  %743 = phi i32 [ %728, %724 ], [ %738, %733 ]
  %744 = and i64 %693, 4294967295
  %745 = getelementptr inbounds i32, ptr %6, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !5
  %747 = mul nsw i32 %746, %743
  %748 = add nsw i32 %747, %687
  %749 = icmp sgt i64 %685, 2
  %750 = add nsw i64 %686, -1
  %751 = add i32 %684, 1
  br i1 %749, label %683, label %752, !llvm.loop !786

752:                                              ; preds = %742, %679
  %753 = phi i32 [ %682, %679 ], [ %748, %742 ]
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %2, i64 %754
  %756 = load double, ptr %755, align 8, !tbaa !18
  %757 = getelementptr inbounds i64, ptr %645, i64 %754
  %758 = load i64, ptr %757, align 8, !tbaa !120
  %759 = trunc i64 %758 to i32
  %760 = load i32, ptr %647, align 4, !tbaa !5
  %761 = sitofp i32 %760 to double
  %762 = sitofp i32 %759 to double
  %763 = fmul fast double %756, %762
  %764 = fcmp fast uge double %763, 0.000000e+00
  %765 = fneg fast double %763
  %766 = tail call fast double @llvm.fabs.f64(double %763)
  %767 = fcmp fast ole double %766, %761
  %768 = select nnan ninf i1 %764, double %763, double %765
  %769 = select i1 %767, double %761, double %768
  %770 = fptosi double %769 to i32
  store i32 %770, ptr %647, align 4, !tbaa !5
  %771 = fadd fast double %756, %681
  %772 = add nuw nsw i32 %680, 1
  br i1 %673, label %773, label %820

773:                                              ; preds = %752
  %774 = load i32, ptr %4, align 4, !tbaa !5
  %775 = load i32, ptr %12, align 4, !tbaa !5
  %776 = add nsw i32 %775, -1
  %777 = icmp slt i32 %774, %776
  br i1 %777, label %797, label %778

778:                                              ; preds = %773
  %779 = icmp eq i32 %774, %776
  br i1 %779, label %780, label %813

780:                                              ; preds = %778
  store i32 0, ptr %4, align 4, !tbaa !5
  %781 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %781, ptr %6, align 4, !tbaa !5
  br i1 %678, label %820, label %782

782:                                              ; preds = %780, %807
  %783 = phi i64 [ %811, %807 ], [ 1, %780 ]
  %784 = getelementptr inbounds i32, ptr %4, i64 %783
  %785 = load i32, ptr %784, align 4, !tbaa !5
  %786 = getelementptr inbounds i32, ptr %12, i64 %783
  %787 = load i32, ptr %786, align 4, !tbaa !5
  %788 = add nsw i32 %787, -1
  %789 = icmp slt i32 %785, %788
  br i1 %789, label %790, label %805

790:                                              ; preds = %782
  br i1 %777, label %797, label %791

791:                                              ; preds = %790
  %792 = getelementptr inbounds i32, ptr %7, i64 %783
  %793 = load i32, ptr %792, align 4, !tbaa !5
  %794 = getelementptr inbounds i32, ptr %6, i64 %783
  %795 = load i32, ptr %794, align 4, !tbaa !5
  %796 = add nsw i32 %795, %793
  store i32 %796, ptr %794, align 4, !tbaa !5
  br label %815

797:                                              ; preds = %773, %790
  %798 = phi i32 [ %785, %790 ], [ %774, %773 ]
  %799 = phi ptr [ %784, %790 ], [ %4, %773 ]
  %800 = phi i64 [ %783, %790 ], [ 0, %773 ]
  %801 = add nsw i32 %798, 1
  store i32 %801, ptr %799, align 4, !tbaa !5
  %802 = getelementptr inbounds i32, ptr %7, i64 %800
  %803 = load i32, ptr %802, align 4, !tbaa !5
  %804 = getelementptr inbounds i32, ptr %6, i64 %800
  br label %815

805:                                              ; preds = %782
  %806 = icmp eq i32 %785, %788
  br i1 %806, label %807, label %813

807:                                              ; preds = %805
  store i32 0, ptr %784, align 4, !tbaa !5
  %808 = getelementptr inbounds i32, ptr %8, i64 %783
  %809 = load i32, ptr %808, align 4, !tbaa !5
  %810 = getelementptr inbounds i32, ptr %6, i64 %783
  store i32 %809, ptr %810, align 4, !tbaa !5
  %811 = add nuw nsw i64 %783, 1
  %812 = icmp eq i64 %811, %676
  br i1 %812, label %820, label %782, !llvm.loop !787

813:                                              ; preds = %778, %805
  %814 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

815:                                              ; preds = %791, %797
  %816 = phi ptr [ %804, %797 ], [ %784, %791 ]
  %817 = phi i32 [ %803, %797 ], [ 1, %791 ]
  %818 = load i32, ptr %816, align 4, !tbaa !5
  %819 = add nsw i32 %818, %817
  store i32 %819, ptr %816, align 4, !tbaa !5
  br label %820

820:                                              ; preds = %807, %815, %780, %752
  %821 = icmp eq i32 %772, %5
  br i1 %821, label %5616, label %679, !llvm.loop !788

822:                                              ; preds = %662, %964
  %823 = phi i32 [ 0, %662 ], [ %913, %964 ]
  %824 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %663, label %825, label %894

825:                                              ; preds = %822, %884
  %826 = phi i32 [ %893, %884 ], [ 0, %822 ]
  %827 = phi i64 [ %835, %884 ], [ %667, %822 ]
  %828 = phi i64 [ %892, %884 ], [ %666, %822 ]
  %829 = phi i32 [ %890, %884 ], [ %824, %822 ]
  %830 = sub i32 %665, %826
  %831 = tail call i32 @llvm.smin.i32(i32 %830, i32 0)
  %832 = sub i32 %830, %831
  %833 = zext i32 %832 to i64
  %834 = add nuw nsw i64 %833, 1
  %835 = add nsw i64 %827, -1
  %836 = icmp ult i32 %832, 31
  br i1 %836, label %872, label %837

837:                                              ; preds = %825
  %838 = and i64 %834, 8589934560
  %839 = sub i64 %828, %838
  br label %840

840:                                              ; preds = %840, %837
  %841 = phi i64 [ 0, %837 ], [ %864, %840 ]
  %842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %837 ], [ %860, %840 ]
  %843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %837 ], [ %861, %840 ]
  %844 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %837 ], [ %862, %840 ]
  %845 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %837 ], [ %863, %840 ]
  %846 = sub i64 %828, %841
  %847 = getelementptr inbounds i32, ptr %11, i64 %846
  %848 = getelementptr inbounds i32, ptr %847, i64 -7
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !5
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %847, i64 -15
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !5
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = getelementptr inbounds i32, ptr %847, i64 -23
  %855 = load <8 x i32>, ptr %854, align 4, !tbaa !5
  %856 = shufflevector <8 x i32> %855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %857 = getelementptr inbounds i32, ptr %847, i64 -31
  %858 = load <8 x i32>, ptr %857, align 4, !tbaa !5
  %859 = shufflevector <8 x i32> %858, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %860 = mul <8 x i32> %850, %842
  %861 = mul <8 x i32> %853, %843
  %862 = mul <8 x i32> %856, %844
  %863 = mul <8 x i32> %859, %845
  %864 = add nuw i64 %841, 32
  %865 = icmp eq i64 %864, %838
  br i1 %865, label %866, label %840, !llvm.loop !789

866:                                              ; preds = %840
  %867 = mul <8 x i32> %861, %860
  %868 = mul <8 x i32> %862, %867
  %869 = mul <8 x i32> %863, %868
  %870 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %869)
  %871 = icmp eq i64 %834, %838
  br i1 %871, label %884, label %872

872:                                              ; preds = %825, %866
  %873 = phi i64 [ %828, %825 ], [ %839, %866 ]
  %874 = phi i32 [ 1, %825 ], [ %870, %866 ]
  br label %875

875:                                              ; preds = %872, %875
  %876 = phi i64 [ %881, %875 ], [ %873, %872 ]
  %877 = phi i32 [ %880, %875 ], [ %874, %872 ]
  %878 = getelementptr inbounds i32, ptr %11, i64 %876
  %879 = load i32, ptr %878, align 4, !tbaa !5
  %880 = mul nsw i32 %879, %877
  %881 = add nsw i64 %876, -1
  %882 = trunc i64 %876 to i32
  %883 = icmp sgt i32 %882, 0
  br i1 %883, label %875, label %884, !llvm.loop !790

884:                                              ; preds = %875, %866
  %885 = phi i32 [ %870, %866 ], [ %880, %875 ]
  %886 = and i64 %835, 4294967295
  %887 = getelementptr inbounds i32, ptr %6, i64 %886
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = mul nsw i32 %888, %885
  %890 = add nsw i32 %889, %829
  %891 = icmp sgt i64 %827, 2
  %892 = add nsw i64 %828, -1
  %893 = add i32 %826, 1
  br i1 %891, label %825, label %894, !llvm.loop !791

894:                                              ; preds = %884, %822
  %895 = phi i32 [ %824, %822 ], [ %890, %884 ]
  %896 = icmp slt i32 %895, %5
  br i1 %896, label %899, label %897

897:                                              ; preds = %894
  %898 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

899:                                              ; preds = %894
  %900 = sext i32 %895 to i64
  %901 = getelementptr inbounds i64, ptr %645, i64 %900
  %902 = load i64, ptr %901, align 8, !tbaa !120
  %903 = trunc i64 %902 to i32
  %904 = load i32, ptr %647, align 4, !tbaa !5
  %905 = sitofp i32 %904 to double
  %906 = sitofp i32 %903 to double
  %907 = icmp slt i32 %903, 0
  %908 = fneg fast double %906
  %909 = select i1 %907, double %908, double %906
  %910 = fcmp fast ole double %909, %905
  %911 = select fast i1 %910, double %905, double %909
  %912 = fptosi double %911 to i32
  store i32 %912, ptr %647, align 4, !tbaa !5
  %913 = add nuw nsw i32 %823, 1
  br i1 %664, label %914, label %964

914:                                              ; preds = %899
  %915 = load i32, ptr %4, align 4, !tbaa !5
  %916 = load i32, ptr %12, align 4, !tbaa !5
  %917 = add nsw i32 %916, -1
  %918 = icmp slt i32 %915, %917
  br i1 %918, label %941, label %919

919:                                              ; preds = %914
  %920 = icmp eq i32 %915, %917
  br i1 %920, label %921, label %957

921:                                              ; preds = %919
  store i32 0, ptr %4, align 4, !tbaa !5
  %922 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %922, ptr %6, align 4, !tbaa !5
  br i1 %669, label %964, label %923

923:                                              ; preds = %921, %951
  %924 = phi i64 [ %955, %951 ], [ 1, %921 ]
  %925 = getelementptr inbounds i32, ptr %4, i64 %924
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %12, i64 %924
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = add nsw i32 %928, -1
  %930 = icmp slt i32 %926, %929
  br i1 %930, label %931, label %949

931:                                              ; preds = %923
  br i1 %918, label %941, label %932

932:                                              ; preds = %931
  %933 = shl i64 %924, 32
  %934 = add i64 %933, -4294967296
  %935 = ashr exact i64 %934, 32
  %936 = getelementptr inbounds i32, ptr %7, i64 %935
  %937 = load i32, ptr %936, align 4, !tbaa !5
  %938 = getelementptr inbounds i32, ptr %6, i64 %924
  %939 = load i32, ptr %938, align 4, !tbaa !5
  %940 = add nsw i32 %939, %937
  store i32 %940, ptr %938, align 4, !tbaa !5
  br label %959

941:                                              ; preds = %914, %931
  %942 = phi i32 [ %926, %931 ], [ %915, %914 ]
  %943 = phi ptr [ %925, %931 ], [ %4, %914 ]
  %944 = phi i64 [ %924, %931 ], [ 0, %914 ]
  %945 = add nsw i32 %942, 1
  store i32 %945, ptr %943, align 4, !tbaa !5
  %946 = getelementptr inbounds i32, ptr %7, i64 %944
  %947 = load i32, ptr %946, align 4, !tbaa !5
  %948 = getelementptr inbounds i32, ptr %6, i64 %944
  br label %959

949:                                              ; preds = %923
  %950 = icmp eq i32 %926, %929
  br i1 %950, label %951, label %957

951:                                              ; preds = %949
  store i32 0, ptr %925, align 4, !tbaa !5
  %952 = getelementptr inbounds i32, ptr %8, i64 %924
  %953 = load i32, ptr %952, align 4, !tbaa !5
  %954 = getelementptr inbounds i32, ptr %6, i64 %924
  store i32 %953, ptr %954, align 4, !tbaa !5
  %955 = add nuw nsw i64 %924, 1
  %956 = icmp eq i64 %955, %667
  br i1 %956, label %964, label %923, !llvm.loop !792

957:                                              ; preds = %919, %949
  %958 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

959:                                              ; preds = %932, %941
  %960 = phi ptr [ %948, %941 ], [ %925, %932 ]
  %961 = phi i32 [ %947, %941 ], [ 1, %932 ]
  %962 = load i32, ptr %960, align 4, !tbaa !5
  %963 = add nsw i32 %962, %961
  store i32 %963, ptr %960, align 4, !tbaa !5
  br label %964

964:                                              ; preds = %951, %959, %921, %899
  %965 = icmp eq i32 %913, %5
  br i1 %965, label %5616, label %822, !llvm.loop !793

966:                                              ; preds = %655
  %967 = getelementptr inbounds i32, ptr %3, i64 %19
  %968 = load i32, ptr %967, align 4, !tbaa !5
  %969 = icmp eq i32 %968, 0
  %970 = icmp sgt i32 %5, 0
  br i1 %969, label %980, label %971

971:                                              ; preds = %966
  br i1 %970, label %972, label %5616

972:                                              ; preds = %971
  %973 = icmp sgt i32 %13, 1
  %974 = icmp sgt i32 %13, 0
  %975 = add i32 %13, -2
  %976 = zext i32 %975 to i64
  %977 = zext i32 %13 to i64
  %978 = add nuw i32 %5, 1
  %979 = icmp eq i32 %13, 1
  br label %1122

980:                                              ; preds = %966
  br i1 %970, label %981, label %5616

981:                                              ; preds = %980
  %982 = icmp sgt i32 %13, 1
  %983 = icmp sgt i32 %13, 0
  %984 = add i32 %13, -2
  %985 = zext i32 %984 to i64
  %986 = zext i32 %13 to i64
  %987 = add nuw i32 %5, 1
  %988 = icmp eq i32 %13, 1
  br label %989

989:                                              ; preds = %981, %1120
  %990 = phi i32 [ 0, %981 ], [ %1072, %1120 ]
  %991 = phi double [ 0.000000e+00, %981 ], [ %1071, %1120 ]
  %992 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %982, label %993, label %1062

993:                                              ; preds = %989, %1052
  %994 = phi i32 [ %1061, %1052 ], [ 0, %989 ]
  %995 = phi i64 [ %1003, %1052 ], [ %986, %989 ]
  %996 = phi i64 [ %1060, %1052 ], [ %985, %989 ]
  %997 = phi i32 [ %1058, %1052 ], [ %992, %989 ]
  %998 = sub i32 %984, %994
  %999 = tail call i32 @llvm.smin.i32(i32 %998, i32 0)
  %1000 = sub i32 %998, %999
  %1001 = zext i32 %1000 to i64
  %1002 = add nuw nsw i64 %1001, 1
  %1003 = add nsw i64 %995, -1
  %1004 = icmp ult i32 %1000, 31
  br i1 %1004, label %1040, label %1005

1005:                                             ; preds = %993
  %1006 = and i64 %1002, 8589934560
  %1007 = sub i64 %996, %1006
  br label %1008

1008:                                             ; preds = %1008, %1005
  %1009 = phi i64 [ 0, %1005 ], [ %1032, %1008 ]
  %1010 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1005 ], [ %1028, %1008 ]
  %1011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1005 ], [ %1029, %1008 ]
  %1012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1005 ], [ %1030, %1008 ]
  %1013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1005 ], [ %1031, %1008 ]
  %1014 = sub i64 %996, %1009
  %1015 = getelementptr inbounds i32, ptr %9, i64 %1014
  %1016 = getelementptr inbounds i32, ptr %1015, i64 -7
  %1017 = load <8 x i32>, ptr %1016, align 4, !tbaa !5
  %1018 = shufflevector <8 x i32> %1017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1019 = getelementptr inbounds i32, ptr %1015, i64 -15
  %1020 = load <8 x i32>, ptr %1019, align 4, !tbaa !5
  %1021 = shufflevector <8 x i32> %1020, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1022 = getelementptr inbounds i32, ptr %1015, i64 -23
  %1023 = load <8 x i32>, ptr %1022, align 4, !tbaa !5
  %1024 = shufflevector <8 x i32> %1023, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1025 = getelementptr inbounds i32, ptr %1015, i64 -31
  %1026 = load <8 x i32>, ptr %1025, align 4, !tbaa !5
  %1027 = shufflevector <8 x i32> %1026, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1028 = mul <8 x i32> %1018, %1010
  %1029 = mul <8 x i32> %1021, %1011
  %1030 = mul <8 x i32> %1024, %1012
  %1031 = mul <8 x i32> %1027, %1013
  %1032 = add nuw i64 %1009, 32
  %1033 = icmp eq i64 %1032, %1006
  br i1 %1033, label %1034, label %1008, !llvm.loop !794

1034:                                             ; preds = %1008
  %1035 = mul <8 x i32> %1029, %1028
  %1036 = mul <8 x i32> %1030, %1035
  %1037 = mul <8 x i32> %1031, %1036
  %1038 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1037)
  %1039 = icmp eq i64 %1002, %1006
  br i1 %1039, label %1052, label %1040

1040:                                             ; preds = %993, %1034
  %1041 = phi i64 [ %996, %993 ], [ %1007, %1034 ]
  %1042 = phi i32 [ 1, %993 ], [ %1038, %1034 ]
  br label %1043

1043:                                             ; preds = %1040, %1043
  %1044 = phi i64 [ %1049, %1043 ], [ %1041, %1040 ]
  %1045 = phi i32 [ %1048, %1043 ], [ %1042, %1040 ]
  %1046 = getelementptr inbounds i32, ptr %9, i64 %1044
  %1047 = load i32, ptr %1046, align 4, !tbaa !5
  %1048 = mul nsw i32 %1047, %1045
  %1049 = add nsw i64 %1044, -1
  %1050 = trunc i64 %1044 to i32
  %1051 = icmp sgt i32 %1050, 0
  br i1 %1051, label %1043, label %1052, !llvm.loop !795

1052:                                             ; preds = %1043, %1034
  %1053 = phi i32 [ %1038, %1034 ], [ %1048, %1043 ]
  %1054 = and i64 %1003, 4294967295
  %1055 = getelementptr inbounds i32, ptr %6, i64 %1054
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = mul nsw i32 %1056, %1053
  %1058 = add nsw i32 %1057, %997
  %1059 = icmp sgt i64 %995, 2
  %1060 = add nsw i64 %996, -1
  %1061 = add i32 %994, 1
  br i1 %1059, label %993, label %1062, !llvm.loop !796

1062:                                             ; preds = %1052, %989
  %1063 = phi i32 [ %992, %989 ], [ %1058, %1052 ]
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds i64, ptr %645, i64 %1064
  %1066 = load i64, ptr %1065, align 8, !tbaa !120
  %1067 = trunc i64 %1066 to i32
  %1068 = load i32, ptr %647, align 4, !tbaa !5
  %1069 = tail call i32 @llvm.abs.i32(i32 %1067, i1 true)
  %1070 = tail call i32 @llvm.smax.i32(i32 %1068, i32 %1069)
  store i32 %1070, ptr %647, align 4, !tbaa !5
  %1071 = fadd fast double %991, 1.000000e+00
  %1072 = add nuw nsw i32 %990, 1
  br i1 %983, label %1073, label %1120

1073:                                             ; preds = %1062
  %1074 = load i32, ptr %4, align 4, !tbaa !5
  %1075 = load i32, ptr %12, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1074, %1076
  br i1 %1077, label %1097, label %1078

1078:                                             ; preds = %1073
  %1079 = icmp eq i32 %1074, %1076
  br i1 %1079, label %1080, label %1113

1080:                                             ; preds = %1078
  store i32 0, ptr %4, align 4, !tbaa !5
  %1081 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1081, ptr %6, align 4, !tbaa !5
  br i1 %988, label %1120, label %1082

1082:                                             ; preds = %1080, %1107
  %1083 = phi i64 [ %1111, %1107 ], [ 1, %1080 ]
  %1084 = getelementptr inbounds i32, ptr %4, i64 %1083
  %1085 = load i32, ptr %1084, align 4, !tbaa !5
  %1086 = getelementptr inbounds i32, ptr %12, i64 %1083
  %1087 = load i32, ptr %1086, align 4, !tbaa !5
  %1088 = add nsw i32 %1087, -1
  %1089 = icmp slt i32 %1085, %1088
  br i1 %1089, label %1090, label %1105

1090:                                             ; preds = %1082
  br i1 %1077, label %1097, label %1091

1091:                                             ; preds = %1090
  %1092 = getelementptr inbounds i32, ptr %7, i64 %1083
  %1093 = load i32, ptr %1092, align 4, !tbaa !5
  %1094 = getelementptr inbounds i32, ptr %6, i64 %1083
  %1095 = load i32, ptr %1094, align 4, !tbaa !5
  %1096 = add nsw i32 %1095, %1093
  store i32 %1096, ptr %1094, align 4, !tbaa !5
  br label %1115

1097:                                             ; preds = %1073, %1090
  %1098 = phi i32 [ %1085, %1090 ], [ %1074, %1073 ]
  %1099 = phi ptr [ %1084, %1090 ], [ %4, %1073 ]
  %1100 = phi i64 [ %1083, %1090 ], [ 0, %1073 ]
  %1101 = add nsw i32 %1098, 1
  store i32 %1101, ptr %1099, align 4, !tbaa !5
  %1102 = getelementptr inbounds i32, ptr %7, i64 %1100
  %1103 = load i32, ptr %1102, align 4, !tbaa !5
  %1104 = getelementptr inbounds i32, ptr %6, i64 %1100
  br label %1115

1105:                                             ; preds = %1082
  %1106 = icmp eq i32 %1085, %1088
  br i1 %1106, label %1107, label %1113

1107:                                             ; preds = %1105
  store i32 0, ptr %1084, align 4, !tbaa !5
  %1108 = getelementptr inbounds i32, ptr %8, i64 %1083
  %1109 = load i32, ptr %1108, align 4, !tbaa !5
  %1110 = getelementptr inbounds i32, ptr %6, i64 %1083
  store i32 %1109, ptr %1110, align 4, !tbaa !5
  %1111 = add nuw nsw i64 %1083, 1
  %1112 = icmp eq i64 %1111, %986
  br i1 %1112, label %1120, label %1082, !llvm.loop !797

1113:                                             ; preds = %1078, %1105
  %1114 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

1115:                                             ; preds = %1091, %1097
  %1116 = phi ptr [ %1104, %1097 ], [ %1084, %1091 ]
  %1117 = phi i32 [ %1103, %1097 ], [ 1, %1091 ]
  %1118 = load i32, ptr %1116, align 4, !tbaa !5
  %1119 = add nsw i32 %1118, %1117
  store i32 %1119, ptr %1116, align 4, !tbaa !5
  br label %1120

1120:                                             ; preds = %1107, %1115, %1080, %1062
  %1121 = icmp eq i32 %1072, %5
  br i1 %1121, label %5616, label %989, !llvm.loop !798

1122:                                             ; preds = %972, %1258
  %1123 = phi i32 [ 0, %972 ], [ %1207, %1258 ]
  %1124 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %973, label %1125, label %1194

1125:                                             ; preds = %1122, %1184
  %1126 = phi i32 [ %1193, %1184 ], [ 0, %1122 ]
  %1127 = phi i64 [ %1135, %1184 ], [ %977, %1122 ]
  %1128 = phi i64 [ %1192, %1184 ], [ %976, %1122 ]
  %1129 = phi i32 [ %1190, %1184 ], [ %1124, %1122 ]
  %1130 = sub i32 %975, %1126
  %1131 = tail call i32 @llvm.smin.i32(i32 %1130, i32 0)
  %1132 = sub i32 %1130, %1131
  %1133 = zext i32 %1132 to i64
  %1134 = add nuw nsw i64 %1133, 1
  %1135 = add nsw i64 %1127, -1
  %1136 = icmp ult i32 %1132, 31
  br i1 %1136, label %1172, label %1137

1137:                                             ; preds = %1125
  %1138 = and i64 %1134, 8589934560
  %1139 = sub i64 %1128, %1138
  br label %1140

1140:                                             ; preds = %1140, %1137
  %1141 = phi i64 [ 0, %1137 ], [ %1164, %1140 ]
  %1142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1160, %1140 ]
  %1143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1161, %1140 ]
  %1144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1162, %1140 ]
  %1145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1137 ], [ %1163, %1140 ]
  %1146 = sub i64 %1128, %1141
  %1147 = getelementptr inbounds i32, ptr %11, i64 %1146
  %1148 = getelementptr inbounds i32, ptr %1147, i64 -7
  %1149 = load <8 x i32>, ptr %1148, align 4, !tbaa !5
  %1150 = shufflevector <8 x i32> %1149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1151 = getelementptr inbounds i32, ptr %1147, i64 -15
  %1152 = load <8 x i32>, ptr %1151, align 4, !tbaa !5
  %1153 = shufflevector <8 x i32> %1152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1154 = getelementptr inbounds i32, ptr %1147, i64 -23
  %1155 = load <8 x i32>, ptr %1154, align 4, !tbaa !5
  %1156 = shufflevector <8 x i32> %1155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1157 = getelementptr inbounds i32, ptr %1147, i64 -31
  %1158 = load <8 x i32>, ptr %1157, align 4, !tbaa !5
  %1159 = shufflevector <8 x i32> %1158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1160 = mul <8 x i32> %1150, %1142
  %1161 = mul <8 x i32> %1153, %1143
  %1162 = mul <8 x i32> %1156, %1144
  %1163 = mul <8 x i32> %1159, %1145
  %1164 = add nuw i64 %1141, 32
  %1165 = icmp eq i64 %1164, %1138
  br i1 %1165, label %1166, label %1140, !llvm.loop !799

1166:                                             ; preds = %1140
  %1167 = mul <8 x i32> %1161, %1160
  %1168 = mul <8 x i32> %1162, %1167
  %1169 = mul <8 x i32> %1163, %1168
  %1170 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1169)
  %1171 = icmp eq i64 %1134, %1138
  br i1 %1171, label %1184, label %1172

1172:                                             ; preds = %1125, %1166
  %1173 = phi i64 [ %1128, %1125 ], [ %1139, %1166 ]
  %1174 = phi i32 [ 1, %1125 ], [ %1170, %1166 ]
  br label %1175

1175:                                             ; preds = %1172, %1175
  %1176 = phi i64 [ %1181, %1175 ], [ %1173, %1172 ]
  %1177 = phi i32 [ %1180, %1175 ], [ %1174, %1172 ]
  %1178 = getelementptr inbounds i32, ptr %11, i64 %1176
  %1179 = load i32, ptr %1178, align 4, !tbaa !5
  %1180 = mul nsw i32 %1179, %1177
  %1181 = add nsw i64 %1176, -1
  %1182 = trunc i64 %1176 to i32
  %1183 = icmp sgt i32 %1182, 0
  br i1 %1183, label %1175, label %1184, !llvm.loop !800

1184:                                             ; preds = %1175, %1166
  %1185 = phi i32 [ %1170, %1166 ], [ %1180, %1175 ]
  %1186 = and i64 %1135, 4294967295
  %1187 = getelementptr inbounds i32, ptr %6, i64 %1186
  %1188 = load i32, ptr %1187, align 4, !tbaa !5
  %1189 = mul nsw i32 %1188, %1185
  %1190 = add nsw i32 %1189, %1129
  %1191 = icmp sgt i64 %1127, 2
  %1192 = add nsw i64 %1128, -1
  %1193 = add i32 %1126, 1
  br i1 %1191, label %1125, label %1194, !llvm.loop !801

1194:                                             ; preds = %1184, %1122
  %1195 = phi i32 [ %1124, %1122 ], [ %1190, %1184 ]
  %1196 = icmp slt i32 %1195, %5
  br i1 %1196, label %1199, label %1197

1197:                                             ; preds = %1194
  %1198 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

1199:                                             ; preds = %1194
  %1200 = sext i32 %1195 to i64
  %1201 = getelementptr inbounds i64, ptr %645, i64 %1200
  %1202 = load i64, ptr %1201, align 8, !tbaa !120
  %1203 = trunc i64 %1202 to i32
  %1204 = load i32, ptr %647, align 4, !tbaa !5
  %1205 = tail call i32 @llvm.abs.i32(i32 %1203, i1 true)
  %1206 = tail call i32 @llvm.smax.i32(i32 %1204, i32 %1205)
  store i32 %1206, ptr %647, align 4, !tbaa !5
  %1207 = add nuw nsw i32 %1123, 1
  br i1 %974, label %1208, label %1258

1208:                                             ; preds = %1199
  %1209 = load i32, ptr %4, align 4, !tbaa !5
  %1210 = load i32, ptr %12, align 4, !tbaa !5
  %1211 = add nsw i32 %1210, -1
  %1212 = icmp slt i32 %1209, %1211
  br i1 %1212, label %1235, label %1213

1213:                                             ; preds = %1208
  %1214 = icmp eq i32 %1209, %1211
  br i1 %1214, label %1215, label %1251

1215:                                             ; preds = %1213
  store i32 0, ptr %4, align 4, !tbaa !5
  %1216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1216, ptr %6, align 4, !tbaa !5
  br i1 %979, label %1258, label %1217

1217:                                             ; preds = %1215, %1245
  %1218 = phi i64 [ %1249, %1245 ], [ 1, %1215 ]
  %1219 = getelementptr inbounds i32, ptr %4, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %12, i64 %1218
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = add nsw i32 %1222, -1
  %1224 = icmp slt i32 %1220, %1223
  br i1 %1224, label %1225, label %1243

1225:                                             ; preds = %1217
  br i1 %1212, label %1235, label %1226

1226:                                             ; preds = %1225
  %1227 = shl i64 %1218, 32
  %1228 = add i64 %1227, -4294967296
  %1229 = ashr exact i64 %1228, 32
  %1230 = getelementptr inbounds i32, ptr %7, i64 %1229
  %1231 = load i32, ptr %1230, align 4, !tbaa !5
  %1232 = getelementptr inbounds i32, ptr %6, i64 %1218
  %1233 = load i32, ptr %1232, align 4, !tbaa !5
  %1234 = add nsw i32 %1233, %1231
  store i32 %1234, ptr %1232, align 4, !tbaa !5
  br label %1253

1235:                                             ; preds = %1208, %1225
  %1236 = phi i32 [ %1220, %1225 ], [ %1209, %1208 ]
  %1237 = phi ptr [ %1219, %1225 ], [ %4, %1208 ]
  %1238 = phi i64 [ %1218, %1225 ], [ 0, %1208 ]
  %1239 = add nsw i32 %1236, 1
  store i32 %1239, ptr %1237, align 4, !tbaa !5
  %1240 = getelementptr inbounds i32, ptr %7, i64 %1238
  %1241 = load i32, ptr %1240, align 4, !tbaa !5
  %1242 = getelementptr inbounds i32, ptr %6, i64 %1238
  br label %1253

1243:                                             ; preds = %1217
  %1244 = icmp eq i32 %1220, %1223
  br i1 %1244, label %1245, label %1251

1245:                                             ; preds = %1243
  store i32 0, ptr %1219, align 4, !tbaa !5
  %1246 = getelementptr inbounds i32, ptr %8, i64 %1218
  %1247 = load i32, ptr %1246, align 4, !tbaa !5
  %1248 = getelementptr inbounds i32, ptr %6, i64 %1218
  store i32 %1247, ptr %1248, align 4, !tbaa !5
  %1249 = add nuw nsw i64 %1218, 1
  %1250 = icmp eq i64 %1249, %977
  br i1 %1250, label %1258, label %1217, !llvm.loop !802

1251:                                             ; preds = %1213, %1243
  %1252 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

1253:                                             ; preds = %1226, %1235
  %1254 = phi ptr [ %1242, %1235 ], [ %1219, %1226 ]
  %1255 = phi i32 [ %1241, %1235 ], [ 1, %1226 ]
  %1256 = load i32, ptr %1254, align 4, !tbaa !5
  %1257 = add nsw i32 %1256, %1255
  store i32 %1257, ptr %1254, align 4, !tbaa !5
  br label %1258

1258:                                             ; preds = %1245, %1253, %1215, %1199
  %1259 = icmp eq i32 %1207, %5
  br i1 %1259, label %5616, label %1122, !llvm.loop !803

1260:                                             ; preds = %655
  %1261 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1625, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

1262:                                             ; preds = %18
  %1263 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1264 = load ptr, ptr %1263, align 8, !tbaa !9
  %1265 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1266 = load ptr, ptr %1265, align 8, !tbaa !9
  store i8 0, ptr %1266, align 1, !tbaa !11
  %1267 = icmp eq i32 %13, 0
  br i1 %1267, label %1268, label %1272

1268:                                             ; preds = %1262
  %1269 = load i64, ptr %1264, align 8, !tbaa !120
  %1270 = trunc i64 %1269 to i8
  %1271 = tail call i8 @llvm.abs.i8(i8 %1270, i1 false)
  store i8 %1271, ptr %1266, align 1, !tbaa !11
  br label %5616

1272:                                             ; preds = %1262
  switch i32 %1, label %1887 [
    i32 1, label %1273
    i32 0, label %1587
  ]

1273:                                             ; preds = %1272
  %1274 = getelementptr inbounds i32, ptr %3, i64 %19
  %1275 = load i32, ptr %1274, align 4, !tbaa !5
  %1276 = icmp eq i32 %1275, 0
  %1277 = icmp sgt i32 %5, 0
  br i1 %1276, label %1287, label %1278

1278:                                             ; preds = %1273
  br i1 %1277, label %1279, label %5616

1279:                                             ; preds = %1278
  %1280 = icmp sgt i32 %13, 1
  %1281 = icmp sgt i32 %13, 0
  %1282 = add i32 %13, -2
  %1283 = zext i32 %1282 to i64
  %1284 = zext i32 %13 to i64
  %1285 = add nuw i32 %5, 1
  %1286 = icmp eq i32 %13, 1
  br label %1441

1287:                                             ; preds = %1273
  br i1 %1277, label %1288, label %5616

1288:                                             ; preds = %1287
  %1289 = icmp sgt i32 %13, 1
  %1290 = icmp sgt i32 %13, 0
  %1291 = add i32 %13, -2
  %1292 = zext i32 %1291 to i64
  %1293 = zext i32 %13 to i64
  %1294 = add nuw i32 %5, 1
  %1295 = icmp eq i32 %13, 1
  br label %1296

1296:                                             ; preds = %1288, %1439
  %1297 = phi i32 [ 0, %1288 ], [ %1391, %1439 ]
  %1298 = phi double [ 0.000000e+00, %1288 ], [ %1390, %1439 ]
  %1299 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1289, label %1300, label %1369

1300:                                             ; preds = %1296, %1359
  %1301 = phi i32 [ %1368, %1359 ], [ 0, %1296 ]
  %1302 = phi i64 [ %1310, %1359 ], [ %1293, %1296 ]
  %1303 = phi i64 [ %1367, %1359 ], [ %1292, %1296 ]
  %1304 = phi i32 [ %1365, %1359 ], [ %1299, %1296 ]
  %1305 = sub i32 %1291, %1301
  %1306 = tail call i32 @llvm.smin.i32(i32 %1305, i32 0)
  %1307 = sub i32 %1305, %1306
  %1308 = zext i32 %1307 to i64
  %1309 = add nuw nsw i64 %1308, 1
  %1310 = add nsw i64 %1302, -1
  %1311 = icmp ult i32 %1307, 31
  br i1 %1311, label %1347, label %1312

1312:                                             ; preds = %1300
  %1313 = and i64 %1309, 8589934560
  %1314 = sub i64 %1303, %1313
  br label %1315

1315:                                             ; preds = %1315, %1312
  %1316 = phi i64 [ 0, %1312 ], [ %1339, %1315 ]
  %1317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1312 ], [ %1335, %1315 ]
  %1318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1312 ], [ %1336, %1315 ]
  %1319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1312 ], [ %1337, %1315 ]
  %1320 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1312 ], [ %1338, %1315 ]
  %1321 = sub i64 %1303, %1316
  %1322 = getelementptr inbounds i32, ptr %9, i64 %1321
  %1323 = getelementptr inbounds i32, ptr %1322, i64 -7
  %1324 = load <8 x i32>, ptr %1323, align 4, !tbaa !5
  %1325 = shufflevector <8 x i32> %1324, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1326 = getelementptr inbounds i32, ptr %1322, i64 -15
  %1327 = load <8 x i32>, ptr %1326, align 4, !tbaa !5
  %1328 = shufflevector <8 x i32> %1327, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1329 = getelementptr inbounds i32, ptr %1322, i64 -23
  %1330 = load <8 x i32>, ptr %1329, align 4, !tbaa !5
  %1331 = shufflevector <8 x i32> %1330, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1332 = getelementptr inbounds i32, ptr %1322, i64 -31
  %1333 = load <8 x i32>, ptr %1332, align 4, !tbaa !5
  %1334 = shufflevector <8 x i32> %1333, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1335 = mul <8 x i32> %1325, %1317
  %1336 = mul <8 x i32> %1328, %1318
  %1337 = mul <8 x i32> %1331, %1319
  %1338 = mul <8 x i32> %1334, %1320
  %1339 = add nuw i64 %1316, 32
  %1340 = icmp eq i64 %1339, %1313
  br i1 %1340, label %1341, label %1315, !llvm.loop !804

1341:                                             ; preds = %1315
  %1342 = mul <8 x i32> %1336, %1335
  %1343 = mul <8 x i32> %1337, %1342
  %1344 = mul <8 x i32> %1338, %1343
  %1345 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1344)
  %1346 = icmp eq i64 %1309, %1313
  br i1 %1346, label %1359, label %1347

1347:                                             ; preds = %1300, %1341
  %1348 = phi i64 [ %1303, %1300 ], [ %1314, %1341 ]
  %1349 = phi i32 [ 1, %1300 ], [ %1345, %1341 ]
  br label %1350

1350:                                             ; preds = %1347, %1350
  %1351 = phi i64 [ %1356, %1350 ], [ %1348, %1347 ]
  %1352 = phi i32 [ %1355, %1350 ], [ %1349, %1347 ]
  %1353 = getelementptr inbounds i32, ptr %9, i64 %1351
  %1354 = load i32, ptr %1353, align 4, !tbaa !5
  %1355 = mul nsw i32 %1354, %1352
  %1356 = add nsw i64 %1351, -1
  %1357 = trunc i64 %1351 to i32
  %1358 = icmp sgt i32 %1357, 0
  br i1 %1358, label %1350, label %1359, !llvm.loop !805

1359:                                             ; preds = %1350, %1341
  %1360 = phi i32 [ %1345, %1341 ], [ %1355, %1350 ]
  %1361 = and i64 %1310, 4294967295
  %1362 = getelementptr inbounds i32, ptr %6, i64 %1361
  %1363 = load i32, ptr %1362, align 4, !tbaa !5
  %1364 = mul nsw i32 %1363, %1360
  %1365 = add nsw i32 %1364, %1304
  %1366 = icmp sgt i64 %1302, 2
  %1367 = add nsw i64 %1303, -1
  %1368 = add i32 %1301, 1
  br i1 %1366, label %1300, label %1369, !llvm.loop !806

1369:                                             ; preds = %1359, %1296
  %1370 = phi i32 [ %1299, %1296 ], [ %1365, %1359 ]
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds double, ptr %2, i64 %1371
  %1373 = load double, ptr %1372, align 8, !tbaa !18
  %1374 = getelementptr inbounds i64, ptr %1264, i64 %1371
  %1375 = load i64, ptr %1374, align 8, !tbaa !120
  %1376 = trunc i64 %1375 to i32
  %1377 = load i8, ptr %1266, align 1, !tbaa !11
  %1378 = sitofp i8 %1377 to double
  %1379 = shl i32 %1376, 24
  %1380 = ashr exact i32 %1379, 24
  %1381 = sitofp i32 %1380 to double
  %1382 = fmul fast double %1373, %1381
  %1383 = fcmp fast uge double %1382, 0.000000e+00
  %1384 = fneg fast double %1382
  %1385 = tail call fast double @llvm.fabs.f64(double %1382)
  %1386 = fcmp fast ole double %1385, %1378
  %1387 = select nnan ninf i1 %1383, double %1382, double %1384
  %1388 = select i1 %1386, double %1378, double %1387
  %1389 = fptosi double %1388 to i8
  store i8 %1389, ptr %1266, align 1, !tbaa !11
  %1390 = fadd fast double %1373, %1298
  %1391 = add nuw nsw i32 %1297, 1
  br i1 %1290, label %1392, label %1439

1392:                                             ; preds = %1369
  %1393 = load i32, ptr %4, align 4, !tbaa !5
  %1394 = load i32, ptr %12, align 4, !tbaa !5
  %1395 = add nsw i32 %1394, -1
  %1396 = icmp slt i32 %1393, %1395
  br i1 %1396, label %1416, label %1397

1397:                                             ; preds = %1392
  %1398 = icmp eq i32 %1393, %1395
  br i1 %1398, label %1399, label %1432

1399:                                             ; preds = %1397
  store i32 0, ptr %4, align 4, !tbaa !5
  %1400 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1400, ptr %6, align 4, !tbaa !5
  br i1 %1295, label %1439, label %1401

1401:                                             ; preds = %1399, %1426
  %1402 = phi i64 [ %1430, %1426 ], [ 1, %1399 ]
  %1403 = getelementptr inbounds i32, ptr %4, i64 %1402
  %1404 = load i32, ptr %1403, align 4, !tbaa !5
  %1405 = getelementptr inbounds i32, ptr %12, i64 %1402
  %1406 = load i32, ptr %1405, align 4, !tbaa !5
  %1407 = add nsw i32 %1406, -1
  %1408 = icmp slt i32 %1404, %1407
  br i1 %1408, label %1409, label %1424

1409:                                             ; preds = %1401
  br i1 %1396, label %1416, label %1410

1410:                                             ; preds = %1409
  %1411 = getelementptr inbounds i32, ptr %7, i64 %1402
  %1412 = load i32, ptr %1411, align 4, !tbaa !5
  %1413 = getelementptr inbounds i32, ptr %6, i64 %1402
  %1414 = load i32, ptr %1413, align 4, !tbaa !5
  %1415 = add nsw i32 %1414, %1412
  store i32 %1415, ptr %1413, align 4, !tbaa !5
  br label %1434

1416:                                             ; preds = %1392, %1409
  %1417 = phi i32 [ %1404, %1409 ], [ %1393, %1392 ]
  %1418 = phi ptr [ %1403, %1409 ], [ %4, %1392 ]
  %1419 = phi i64 [ %1402, %1409 ], [ 0, %1392 ]
  %1420 = add nsw i32 %1417, 1
  store i32 %1420, ptr %1418, align 4, !tbaa !5
  %1421 = getelementptr inbounds i32, ptr %7, i64 %1419
  %1422 = load i32, ptr %1421, align 4, !tbaa !5
  %1423 = getelementptr inbounds i32, ptr %6, i64 %1419
  br label %1434

1424:                                             ; preds = %1401
  %1425 = icmp eq i32 %1404, %1407
  br i1 %1425, label %1426, label %1432

1426:                                             ; preds = %1424
  store i32 0, ptr %1403, align 4, !tbaa !5
  %1427 = getelementptr inbounds i32, ptr %8, i64 %1402
  %1428 = load i32, ptr %1427, align 4, !tbaa !5
  %1429 = getelementptr inbounds i32, ptr %6, i64 %1402
  store i32 %1428, ptr %1429, align 4, !tbaa !5
  %1430 = add nuw nsw i64 %1402, 1
  %1431 = icmp eq i64 %1430, %1293
  br i1 %1431, label %1439, label %1401, !llvm.loop !807

1432:                                             ; preds = %1397, %1424
  %1433 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

1434:                                             ; preds = %1410, %1416
  %1435 = phi ptr [ %1423, %1416 ], [ %1403, %1410 ]
  %1436 = phi i32 [ %1422, %1416 ], [ 1, %1410 ]
  %1437 = load i32, ptr %1435, align 4, !tbaa !5
  %1438 = add nsw i32 %1437, %1436
  store i32 %1438, ptr %1435, align 4, !tbaa !5
  br label %1439

1439:                                             ; preds = %1426, %1434, %1399, %1369
  %1440 = icmp eq i32 %1391, %5
  br i1 %1440, label %5616, label %1296, !llvm.loop !808

1441:                                             ; preds = %1279, %1585
  %1442 = phi i32 [ 0, %1279 ], [ %1534, %1585 ]
  %1443 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1280, label %1444, label %1513

1444:                                             ; preds = %1441, %1503
  %1445 = phi i32 [ %1512, %1503 ], [ 0, %1441 ]
  %1446 = phi i64 [ %1454, %1503 ], [ %1284, %1441 ]
  %1447 = phi i64 [ %1511, %1503 ], [ %1283, %1441 ]
  %1448 = phi i32 [ %1509, %1503 ], [ %1443, %1441 ]
  %1449 = sub i32 %1282, %1445
  %1450 = tail call i32 @llvm.smin.i32(i32 %1449, i32 0)
  %1451 = sub i32 %1449, %1450
  %1452 = zext i32 %1451 to i64
  %1453 = add nuw nsw i64 %1452, 1
  %1454 = add nsw i64 %1446, -1
  %1455 = icmp ult i32 %1451, 31
  br i1 %1455, label %1491, label %1456

1456:                                             ; preds = %1444
  %1457 = and i64 %1453, 8589934560
  %1458 = sub i64 %1447, %1457
  br label %1459

1459:                                             ; preds = %1459, %1456
  %1460 = phi i64 [ 0, %1456 ], [ %1483, %1459 ]
  %1461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1456 ], [ %1479, %1459 ]
  %1462 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1456 ], [ %1480, %1459 ]
  %1463 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1456 ], [ %1481, %1459 ]
  %1464 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1456 ], [ %1482, %1459 ]
  %1465 = sub i64 %1447, %1460
  %1466 = getelementptr inbounds i32, ptr %11, i64 %1465
  %1467 = getelementptr inbounds i32, ptr %1466, i64 -7
  %1468 = load <8 x i32>, ptr %1467, align 4, !tbaa !5
  %1469 = shufflevector <8 x i32> %1468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1470 = getelementptr inbounds i32, ptr %1466, i64 -15
  %1471 = load <8 x i32>, ptr %1470, align 4, !tbaa !5
  %1472 = shufflevector <8 x i32> %1471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1473 = getelementptr inbounds i32, ptr %1466, i64 -23
  %1474 = load <8 x i32>, ptr %1473, align 4, !tbaa !5
  %1475 = shufflevector <8 x i32> %1474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1476 = getelementptr inbounds i32, ptr %1466, i64 -31
  %1477 = load <8 x i32>, ptr %1476, align 4, !tbaa !5
  %1478 = shufflevector <8 x i32> %1477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1479 = mul <8 x i32> %1469, %1461
  %1480 = mul <8 x i32> %1472, %1462
  %1481 = mul <8 x i32> %1475, %1463
  %1482 = mul <8 x i32> %1478, %1464
  %1483 = add nuw i64 %1460, 32
  %1484 = icmp eq i64 %1483, %1457
  br i1 %1484, label %1485, label %1459, !llvm.loop !809

1485:                                             ; preds = %1459
  %1486 = mul <8 x i32> %1480, %1479
  %1487 = mul <8 x i32> %1481, %1486
  %1488 = mul <8 x i32> %1482, %1487
  %1489 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1488)
  %1490 = icmp eq i64 %1453, %1457
  br i1 %1490, label %1503, label %1491

1491:                                             ; preds = %1444, %1485
  %1492 = phi i64 [ %1447, %1444 ], [ %1458, %1485 ]
  %1493 = phi i32 [ 1, %1444 ], [ %1489, %1485 ]
  br label %1494

1494:                                             ; preds = %1491, %1494
  %1495 = phi i64 [ %1500, %1494 ], [ %1492, %1491 ]
  %1496 = phi i32 [ %1499, %1494 ], [ %1493, %1491 ]
  %1497 = getelementptr inbounds i32, ptr %11, i64 %1495
  %1498 = load i32, ptr %1497, align 4, !tbaa !5
  %1499 = mul nsw i32 %1498, %1496
  %1500 = add nsw i64 %1495, -1
  %1501 = trunc i64 %1495 to i32
  %1502 = icmp sgt i32 %1501, 0
  br i1 %1502, label %1494, label %1503, !llvm.loop !810

1503:                                             ; preds = %1494, %1485
  %1504 = phi i32 [ %1489, %1485 ], [ %1499, %1494 ]
  %1505 = and i64 %1454, 4294967295
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1505
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = mul nsw i32 %1507, %1504
  %1509 = add nsw i32 %1508, %1448
  %1510 = icmp sgt i64 %1446, 2
  %1511 = add nsw i64 %1447, -1
  %1512 = add i32 %1445, 1
  br i1 %1510, label %1444, label %1513, !llvm.loop !811

1513:                                             ; preds = %1503, %1441
  %1514 = phi i32 [ %1443, %1441 ], [ %1509, %1503 ]
  %1515 = icmp slt i32 %1514, %5
  br i1 %1515, label %1518, label %1516

1516:                                             ; preds = %1513
  %1517 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

1518:                                             ; preds = %1513
  %1519 = sext i32 %1514 to i64
  %1520 = getelementptr inbounds i64, ptr %1264, i64 %1519
  %1521 = load i64, ptr %1520, align 8, !tbaa !120
  %1522 = trunc i64 %1521 to i32
  %1523 = load i8, ptr %1266, align 1, !tbaa !11
  %1524 = sitofp i8 %1523 to double
  %1525 = shl i32 %1522, 24
  %1526 = ashr exact i32 %1525, 24
  %1527 = sitofp i32 %1526 to double
  %1528 = icmp slt i32 %1525, 0
  %1529 = fneg fast double %1527
  %1530 = select i1 %1528, double %1529, double %1527
  %1531 = fcmp fast ole double %1530, %1524
  %1532 = select fast i1 %1531, double %1524, double %1530
  %1533 = fptosi double %1532 to i8
  store i8 %1533, ptr %1266, align 1, !tbaa !11
  %1534 = add nuw nsw i32 %1442, 1
  br i1 %1281, label %1535, label %1585

1535:                                             ; preds = %1518
  %1536 = load i32, ptr %4, align 4, !tbaa !5
  %1537 = load i32, ptr %12, align 4, !tbaa !5
  %1538 = add nsw i32 %1537, -1
  %1539 = icmp slt i32 %1536, %1538
  br i1 %1539, label %1562, label %1540

1540:                                             ; preds = %1535
  %1541 = icmp eq i32 %1536, %1538
  br i1 %1541, label %1542, label %1578

1542:                                             ; preds = %1540
  store i32 0, ptr %4, align 4, !tbaa !5
  %1543 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1543, ptr %6, align 4, !tbaa !5
  br i1 %1286, label %1585, label %1544

1544:                                             ; preds = %1542, %1572
  %1545 = phi i64 [ %1576, %1572 ], [ 1, %1542 ]
  %1546 = getelementptr inbounds i32, ptr %4, i64 %1545
  %1547 = load i32, ptr %1546, align 4, !tbaa !5
  %1548 = getelementptr inbounds i32, ptr %12, i64 %1545
  %1549 = load i32, ptr %1548, align 4, !tbaa !5
  %1550 = add nsw i32 %1549, -1
  %1551 = icmp slt i32 %1547, %1550
  br i1 %1551, label %1552, label %1570

1552:                                             ; preds = %1544
  br i1 %1539, label %1562, label %1553

1553:                                             ; preds = %1552
  %1554 = shl i64 %1545, 32
  %1555 = add i64 %1554, -4294967296
  %1556 = ashr exact i64 %1555, 32
  %1557 = getelementptr inbounds i32, ptr %7, i64 %1556
  %1558 = load i32, ptr %1557, align 4, !tbaa !5
  %1559 = getelementptr inbounds i32, ptr %6, i64 %1545
  %1560 = load i32, ptr %1559, align 4, !tbaa !5
  %1561 = add nsw i32 %1560, %1558
  store i32 %1561, ptr %1559, align 4, !tbaa !5
  br label %1580

1562:                                             ; preds = %1535, %1552
  %1563 = phi i32 [ %1547, %1552 ], [ %1536, %1535 ]
  %1564 = phi ptr [ %1546, %1552 ], [ %4, %1535 ]
  %1565 = phi i64 [ %1545, %1552 ], [ 0, %1535 ]
  %1566 = add nsw i32 %1563, 1
  store i32 %1566, ptr %1564, align 4, !tbaa !5
  %1567 = getelementptr inbounds i32, ptr %7, i64 %1565
  %1568 = load i32, ptr %1567, align 4, !tbaa !5
  %1569 = getelementptr inbounds i32, ptr %6, i64 %1565
  br label %1580

1570:                                             ; preds = %1544
  %1571 = icmp eq i32 %1547, %1550
  br i1 %1571, label %1572, label %1578

1572:                                             ; preds = %1570
  store i32 0, ptr %1546, align 4, !tbaa !5
  %1573 = getelementptr inbounds i32, ptr %8, i64 %1545
  %1574 = load i32, ptr %1573, align 4, !tbaa !5
  %1575 = getelementptr inbounds i32, ptr %6, i64 %1545
  store i32 %1574, ptr %1575, align 4, !tbaa !5
  %1576 = add nuw nsw i64 %1545, 1
  %1577 = icmp eq i64 %1576, %1284
  br i1 %1577, label %1585, label %1544, !llvm.loop !812

1578:                                             ; preds = %1540, %1570
  %1579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

1580:                                             ; preds = %1553, %1562
  %1581 = phi ptr [ %1569, %1562 ], [ %1546, %1553 ]
  %1582 = phi i32 [ %1568, %1562 ], [ 1, %1553 ]
  %1583 = load i32, ptr %1581, align 4, !tbaa !5
  %1584 = add nsw i32 %1583, %1582
  store i32 %1584, ptr %1581, align 4, !tbaa !5
  br label %1585

1585:                                             ; preds = %1572, %1580, %1542, %1518
  %1586 = icmp eq i32 %1534, %5
  br i1 %1586, label %5616, label %1441, !llvm.loop !813

1587:                                             ; preds = %1272
  %1588 = getelementptr inbounds i32, ptr %3, i64 %19
  %1589 = load i32, ptr %1588, align 4, !tbaa !5
  %1590 = icmp eq i32 %1589, 0
  %1591 = icmp sgt i32 %5, 0
  br i1 %1590, label %1601, label %1592

1592:                                             ; preds = %1587
  br i1 %1591, label %1593, label %5616

1593:                                             ; preds = %1592
  %1594 = icmp sgt i32 %13, 1
  %1595 = icmp sgt i32 %13, 0
  %1596 = add i32 %13, -2
  %1597 = zext i32 %1596 to i64
  %1598 = zext i32 %13 to i64
  %1599 = add nuw i32 %5, 1
  %1600 = icmp eq i32 %13, 1
  br label %1746

1601:                                             ; preds = %1587
  br i1 %1591, label %1602, label %5616

1602:                                             ; preds = %1601
  %1603 = icmp sgt i32 %13, 1
  %1604 = icmp sgt i32 %13, 0
  %1605 = add i32 %13, -2
  %1606 = zext i32 %1605 to i64
  %1607 = zext i32 %13 to i64
  %1608 = add nuw i32 %5, 1
  %1609 = icmp eq i32 %13, 1
  br label %1610

1610:                                             ; preds = %1602, %1744
  %1611 = phi i32 [ 0, %1602 ], [ %1696, %1744 ]
  %1612 = phi double [ 0.000000e+00, %1602 ], [ %1695, %1744 ]
  %1613 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1603, label %1614, label %1683

1614:                                             ; preds = %1610, %1673
  %1615 = phi i32 [ %1682, %1673 ], [ 0, %1610 ]
  %1616 = phi i64 [ %1624, %1673 ], [ %1607, %1610 ]
  %1617 = phi i64 [ %1681, %1673 ], [ %1606, %1610 ]
  %1618 = phi i32 [ %1679, %1673 ], [ %1613, %1610 ]
  %1619 = sub i32 %1605, %1615
  %1620 = tail call i32 @llvm.smin.i32(i32 %1619, i32 0)
  %1621 = sub i32 %1619, %1620
  %1622 = zext i32 %1621 to i64
  %1623 = add nuw nsw i64 %1622, 1
  %1624 = add nsw i64 %1616, -1
  %1625 = icmp ult i32 %1621, 31
  br i1 %1625, label %1661, label %1626

1626:                                             ; preds = %1614
  %1627 = and i64 %1623, 8589934560
  %1628 = sub i64 %1617, %1627
  br label %1629

1629:                                             ; preds = %1629, %1626
  %1630 = phi i64 [ 0, %1626 ], [ %1653, %1629 ]
  %1631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1626 ], [ %1649, %1629 ]
  %1632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1626 ], [ %1650, %1629 ]
  %1633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1626 ], [ %1651, %1629 ]
  %1634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1626 ], [ %1652, %1629 ]
  %1635 = sub i64 %1617, %1630
  %1636 = getelementptr inbounds i32, ptr %9, i64 %1635
  %1637 = getelementptr inbounds i32, ptr %1636, i64 -7
  %1638 = load <8 x i32>, ptr %1637, align 4, !tbaa !5
  %1639 = shufflevector <8 x i32> %1638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1640 = getelementptr inbounds i32, ptr %1636, i64 -15
  %1641 = load <8 x i32>, ptr %1640, align 4, !tbaa !5
  %1642 = shufflevector <8 x i32> %1641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1643 = getelementptr inbounds i32, ptr %1636, i64 -23
  %1644 = load <8 x i32>, ptr %1643, align 4, !tbaa !5
  %1645 = shufflevector <8 x i32> %1644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1646 = getelementptr inbounds i32, ptr %1636, i64 -31
  %1647 = load <8 x i32>, ptr %1646, align 4, !tbaa !5
  %1648 = shufflevector <8 x i32> %1647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1649 = mul <8 x i32> %1639, %1631
  %1650 = mul <8 x i32> %1642, %1632
  %1651 = mul <8 x i32> %1645, %1633
  %1652 = mul <8 x i32> %1648, %1634
  %1653 = add nuw i64 %1630, 32
  %1654 = icmp eq i64 %1653, %1627
  br i1 %1654, label %1655, label %1629, !llvm.loop !814

1655:                                             ; preds = %1629
  %1656 = mul <8 x i32> %1650, %1649
  %1657 = mul <8 x i32> %1651, %1656
  %1658 = mul <8 x i32> %1652, %1657
  %1659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1658)
  %1660 = icmp eq i64 %1623, %1627
  br i1 %1660, label %1673, label %1661

1661:                                             ; preds = %1614, %1655
  %1662 = phi i64 [ %1617, %1614 ], [ %1628, %1655 ]
  %1663 = phi i32 [ 1, %1614 ], [ %1659, %1655 ]
  br label %1664

1664:                                             ; preds = %1661, %1664
  %1665 = phi i64 [ %1670, %1664 ], [ %1662, %1661 ]
  %1666 = phi i32 [ %1669, %1664 ], [ %1663, %1661 ]
  %1667 = getelementptr inbounds i32, ptr %9, i64 %1665
  %1668 = load i32, ptr %1667, align 4, !tbaa !5
  %1669 = mul nsw i32 %1668, %1666
  %1670 = add nsw i64 %1665, -1
  %1671 = trunc i64 %1665 to i32
  %1672 = icmp sgt i32 %1671, 0
  br i1 %1672, label %1664, label %1673, !llvm.loop !815

1673:                                             ; preds = %1664, %1655
  %1674 = phi i32 [ %1659, %1655 ], [ %1669, %1664 ]
  %1675 = and i64 %1624, 4294967295
  %1676 = getelementptr inbounds i32, ptr %6, i64 %1675
  %1677 = load i32, ptr %1676, align 4, !tbaa !5
  %1678 = mul nsw i32 %1677, %1674
  %1679 = add nsw i32 %1678, %1618
  %1680 = icmp sgt i64 %1616, 2
  %1681 = add nsw i64 %1617, -1
  %1682 = add i32 %1615, 1
  br i1 %1680, label %1614, label %1683, !llvm.loop !816

1683:                                             ; preds = %1673, %1610
  %1684 = phi i32 [ %1613, %1610 ], [ %1679, %1673 ]
  %1685 = sext i32 %1684 to i64
  %1686 = getelementptr inbounds i64, ptr %1264, i64 %1685
  %1687 = load i64, ptr %1686, align 8, !tbaa !120
  %1688 = trunc i64 %1687 to i8
  %1689 = load i8, ptr %1266, align 1, !tbaa !11
  %1690 = sext i8 %1689 to i32
  %1691 = tail call i8 @llvm.abs.i8(i8 %1688, i1 false)
  %1692 = zext i8 %1691 to i32
  %1693 = icmp slt i32 %1690, %1692
  %1694 = select i1 %1693, i8 %1691, i8 %1689
  store i8 %1694, ptr %1266, align 1, !tbaa !11
  %1695 = fadd fast double %1612, 1.000000e+00
  %1696 = add nuw nsw i32 %1611, 1
  br i1 %1604, label %1697, label %1744

1697:                                             ; preds = %1683
  %1698 = load i32, ptr %4, align 4, !tbaa !5
  %1699 = load i32, ptr %12, align 4, !tbaa !5
  %1700 = add nsw i32 %1699, -1
  %1701 = icmp slt i32 %1698, %1700
  br i1 %1701, label %1721, label %1702

1702:                                             ; preds = %1697
  %1703 = icmp eq i32 %1698, %1700
  br i1 %1703, label %1704, label %1737

1704:                                             ; preds = %1702
  store i32 0, ptr %4, align 4, !tbaa !5
  %1705 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1705, ptr %6, align 4, !tbaa !5
  br i1 %1609, label %1744, label %1706

1706:                                             ; preds = %1704, %1731
  %1707 = phi i64 [ %1735, %1731 ], [ 1, %1704 ]
  %1708 = getelementptr inbounds i32, ptr %4, i64 %1707
  %1709 = load i32, ptr %1708, align 4, !tbaa !5
  %1710 = getelementptr inbounds i32, ptr %12, i64 %1707
  %1711 = load i32, ptr %1710, align 4, !tbaa !5
  %1712 = add nsw i32 %1711, -1
  %1713 = icmp slt i32 %1709, %1712
  br i1 %1713, label %1714, label %1729

1714:                                             ; preds = %1706
  br i1 %1701, label %1721, label %1715

1715:                                             ; preds = %1714
  %1716 = getelementptr inbounds i32, ptr %7, i64 %1707
  %1717 = load i32, ptr %1716, align 4, !tbaa !5
  %1718 = getelementptr inbounds i32, ptr %6, i64 %1707
  %1719 = load i32, ptr %1718, align 4, !tbaa !5
  %1720 = add nsw i32 %1719, %1717
  store i32 %1720, ptr %1718, align 4, !tbaa !5
  br label %1739

1721:                                             ; preds = %1697, %1714
  %1722 = phi i32 [ %1709, %1714 ], [ %1698, %1697 ]
  %1723 = phi ptr [ %1708, %1714 ], [ %4, %1697 ]
  %1724 = phi i64 [ %1707, %1714 ], [ 0, %1697 ]
  %1725 = add nsw i32 %1722, 1
  store i32 %1725, ptr %1723, align 4, !tbaa !5
  %1726 = getelementptr inbounds i32, ptr %7, i64 %1724
  %1727 = load i32, ptr %1726, align 4, !tbaa !5
  %1728 = getelementptr inbounds i32, ptr %6, i64 %1724
  br label %1739

1729:                                             ; preds = %1706
  %1730 = icmp eq i32 %1709, %1712
  br i1 %1730, label %1731, label %1737

1731:                                             ; preds = %1729
  store i32 0, ptr %1708, align 4, !tbaa !5
  %1732 = getelementptr inbounds i32, ptr %8, i64 %1707
  %1733 = load i32, ptr %1732, align 4, !tbaa !5
  %1734 = getelementptr inbounds i32, ptr %6, i64 %1707
  store i32 %1733, ptr %1734, align 4, !tbaa !5
  %1735 = add nuw nsw i64 %1707, 1
  %1736 = icmp eq i64 %1735, %1607
  br i1 %1736, label %1744, label %1706, !llvm.loop !817

1737:                                             ; preds = %1702, %1729
  %1738 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

1739:                                             ; preds = %1715, %1721
  %1740 = phi ptr [ %1728, %1721 ], [ %1708, %1715 ]
  %1741 = phi i32 [ %1727, %1721 ], [ 1, %1715 ]
  %1742 = load i32, ptr %1740, align 4, !tbaa !5
  %1743 = add nsw i32 %1742, %1741
  store i32 %1743, ptr %1740, align 4, !tbaa !5
  br label %1744

1744:                                             ; preds = %1731, %1739, %1704, %1683
  %1745 = icmp eq i32 %1696, %5
  br i1 %1745, label %5616, label %1610, !llvm.loop !818

1746:                                             ; preds = %1593, %1885
  %1747 = phi i32 [ 0, %1593 ], [ %1834, %1885 ]
  %1748 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1594, label %1749, label %1818

1749:                                             ; preds = %1746, %1808
  %1750 = phi i32 [ %1817, %1808 ], [ 0, %1746 ]
  %1751 = phi i64 [ %1759, %1808 ], [ %1598, %1746 ]
  %1752 = phi i64 [ %1816, %1808 ], [ %1597, %1746 ]
  %1753 = phi i32 [ %1814, %1808 ], [ %1748, %1746 ]
  %1754 = sub i32 %1596, %1750
  %1755 = tail call i32 @llvm.smin.i32(i32 %1754, i32 0)
  %1756 = sub i32 %1754, %1755
  %1757 = zext i32 %1756 to i64
  %1758 = add nuw nsw i64 %1757, 1
  %1759 = add nsw i64 %1751, -1
  %1760 = icmp ult i32 %1756, 31
  br i1 %1760, label %1796, label %1761

1761:                                             ; preds = %1749
  %1762 = and i64 %1758, 8589934560
  %1763 = sub i64 %1752, %1762
  br label %1764

1764:                                             ; preds = %1764, %1761
  %1765 = phi i64 [ 0, %1761 ], [ %1788, %1764 ]
  %1766 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1784, %1764 ]
  %1767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1785, %1764 ]
  %1768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1786, %1764 ]
  %1769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1761 ], [ %1787, %1764 ]
  %1770 = sub i64 %1752, %1765
  %1771 = getelementptr inbounds i32, ptr %11, i64 %1770
  %1772 = getelementptr inbounds i32, ptr %1771, i64 -7
  %1773 = load <8 x i32>, ptr %1772, align 4, !tbaa !5
  %1774 = shufflevector <8 x i32> %1773, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1775 = getelementptr inbounds i32, ptr %1771, i64 -15
  %1776 = load <8 x i32>, ptr %1775, align 4, !tbaa !5
  %1777 = shufflevector <8 x i32> %1776, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1778 = getelementptr inbounds i32, ptr %1771, i64 -23
  %1779 = load <8 x i32>, ptr %1778, align 4, !tbaa !5
  %1780 = shufflevector <8 x i32> %1779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1781 = getelementptr inbounds i32, ptr %1771, i64 -31
  %1782 = load <8 x i32>, ptr %1781, align 4, !tbaa !5
  %1783 = shufflevector <8 x i32> %1782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1784 = mul <8 x i32> %1774, %1766
  %1785 = mul <8 x i32> %1777, %1767
  %1786 = mul <8 x i32> %1780, %1768
  %1787 = mul <8 x i32> %1783, %1769
  %1788 = add nuw i64 %1765, 32
  %1789 = icmp eq i64 %1788, %1762
  br i1 %1789, label %1790, label %1764, !llvm.loop !819

1790:                                             ; preds = %1764
  %1791 = mul <8 x i32> %1785, %1784
  %1792 = mul <8 x i32> %1786, %1791
  %1793 = mul <8 x i32> %1787, %1792
  %1794 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1793)
  %1795 = icmp eq i64 %1758, %1762
  br i1 %1795, label %1808, label %1796

1796:                                             ; preds = %1749, %1790
  %1797 = phi i64 [ %1752, %1749 ], [ %1763, %1790 ]
  %1798 = phi i32 [ 1, %1749 ], [ %1794, %1790 ]
  br label %1799

1799:                                             ; preds = %1796, %1799
  %1800 = phi i64 [ %1805, %1799 ], [ %1797, %1796 ]
  %1801 = phi i32 [ %1804, %1799 ], [ %1798, %1796 ]
  %1802 = getelementptr inbounds i32, ptr %11, i64 %1800
  %1803 = load i32, ptr %1802, align 4, !tbaa !5
  %1804 = mul nsw i32 %1803, %1801
  %1805 = add nsw i64 %1800, -1
  %1806 = trunc i64 %1800 to i32
  %1807 = icmp sgt i32 %1806, 0
  br i1 %1807, label %1799, label %1808, !llvm.loop !820

1808:                                             ; preds = %1799, %1790
  %1809 = phi i32 [ %1794, %1790 ], [ %1804, %1799 ]
  %1810 = and i64 %1759, 4294967295
  %1811 = getelementptr inbounds i32, ptr %6, i64 %1810
  %1812 = load i32, ptr %1811, align 4, !tbaa !5
  %1813 = mul nsw i32 %1812, %1809
  %1814 = add nsw i32 %1813, %1753
  %1815 = icmp sgt i64 %1751, 2
  %1816 = add nsw i64 %1752, -1
  %1817 = add i32 %1750, 1
  br i1 %1815, label %1749, label %1818, !llvm.loop !821

1818:                                             ; preds = %1808, %1746
  %1819 = phi i32 [ %1748, %1746 ], [ %1814, %1808 ]
  %1820 = icmp slt i32 %1819, %5
  br i1 %1820, label %1823, label %1821

1821:                                             ; preds = %1818
  %1822 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

1823:                                             ; preds = %1818
  %1824 = sext i32 %1819 to i64
  %1825 = getelementptr inbounds i64, ptr %1264, i64 %1824
  %1826 = load i64, ptr %1825, align 8, !tbaa !120
  %1827 = trunc i64 %1826 to i8
  %1828 = load i8, ptr %1266, align 1, !tbaa !11
  %1829 = sext i8 %1828 to i32
  %1830 = tail call i8 @llvm.abs.i8(i8 %1827, i1 false)
  %1831 = zext i8 %1830 to i32
  %1832 = icmp slt i32 %1829, %1831
  %1833 = select i1 %1832, i8 %1830, i8 %1828
  store i8 %1833, ptr %1266, align 1, !tbaa !11
  %1834 = add nuw nsw i32 %1747, 1
  br i1 %1595, label %1835, label %1885

1835:                                             ; preds = %1823
  %1836 = load i32, ptr %4, align 4, !tbaa !5
  %1837 = load i32, ptr %12, align 4, !tbaa !5
  %1838 = add nsw i32 %1837, -1
  %1839 = icmp slt i32 %1836, %1838
  br i1 %1839, label %1862, label %1840

1840:                                             ; preds = %1835
  %1841 = icmp eq i32 %1836, %1838
  br i1 %1841, label %1842, label %1878

1842:                                             ; preds = %1840
  store i32 0, ptr %4, align 4, !tbaa !5
  %1843 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1843, ptr %6, align 4, !tbaa !5
  br i1 %1600, label %1885, label %1844

1844:                                             ; preds = %1842, %1872
  %1845 = phi i64 [ %1876, %1872 ], [ 1, %1842 ]
  %1846 = getelementptr inbounds i32, ptr %4, i64 %1845
  %1847 = load i32, ptr %1846, align 4, !tbaa !5
  %1848 = getelementptr inbounds i32, ptr %12, i64 %1845
  %1849 = load i32, ptr %1848, align 4, !tbaa !5
  %1850 = add nsw i32 %1849, -1
  %1851 = icmp slt i32 %1847, %1850
  br i1 %1851, label %1852, label %1870

1852:                                             ; preds = %1844
  br i1 %1839, label %1862, label %1853

1853:                                             ; preds = %1852
  %1854 = shl i64 %1845, 32
  %1855 = add i64 %1854, -4294967296
  %1856 = ashr exact i64 %1855, 32
  %1857 = getelementptr inbounds i32, ptr %7, i64 %1856
  %1858 = load i32, ptr %1857, align 4, !tbaa !5
  %1859 = getelementptr inbounds i32, ptr %6, i64 %1845
  %1860 = load i32, ptr %1859, align 4, !tbaa !5
  %1861 = add nsw i32 %1860, %1858
  store i32 %1861, ptr %1859, align 4, !tbaa !5
  br label %1880

1862:                                             ; preds = %1835, %1852
  %1863 = phi i32 [ %1847, %1852 ], [ %1836, %1835 ]
  %1864 = phi ptr [ %1846, %1852 ], [ %4, %1835 ]
  %1865 = phi i64 [ %1845, %1852 ], [ 0, %1835 ]
  %1866 = add nsw i32 %1863, 1
  store i32 %1866, ptr %1864, align 4, !tbaa !5
  %1867 = getelementptr inbounds i32, ptr %7, i64 %1865
  %1868 = load i32, ptr %1867, align 4, !tbaa !5
  %1869 = getelementptr inbounds i32, ptr %6, i64 %1865
  br label %1880

1870:                                             ; preds = %1844
  %1871 = icmp eq i32 %1847, %1850
  br i1 %1871, label %1872, label %1878

1872:                                             ; preds = %1870
  store i32 0, ptr %1846, align 4, !tbaa !5
  %1873 = getelementptr inbounds i32, ptr %8, i64 %1845
  %1874 = load i32, ptr %1873, align 4, !tbaa !5
  %1875 = getelementptr inbounds i32, ptr %6, i64 %1845
  store i32 %1874, ptr %1875, align 4, !tbaa !5
  %1876 = add nuw nsw i64 %1845, 1
  %1877 = icmp eq i64 %1876, %1598
  br i1 %1877, label %1885, label %1844, !llvm.loop !822

1878:                                             ; preds = %1840, %1870
  %1879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

1880:                                             ; preds = %1853, %1862
  %1881 = phi ptr [ %1869, %1862 ], [ %1846, %1853 ]
  %1882 = phi i32 [ %1868, %1862 ], [ 1, %1853 ]
  %1883 = load i32, ptr %1881, align 4, !tbaa !5
  %1884 = add nsw i32 %1883, %1882
  store i32 %1884, ptr %1881, align 4, !tbaa !5
  br label %1885

1885:                                             ; preds = %1872, %1880, %1842, %1823
  %1886 = icmp eq i32 %1834, %5
  br i1 %1886, label %5616, label %1746, !llvm.loop !823

1887:                                             ; preds = %1272
  %1888 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1629, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

1889:                                             ; preds = %18
  %1890 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1891 = load ptr, ptr %1890, align 8, !tbaa !9
  %1892 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1893 = load ptr, ptr %1892, align 8, !tbaa !9
  store i16 0, ptr %1893, align 2, !tbaa !78
  %1894 = icmp eq i32 %13, 0
  br i1 %1894, label %1895, label %1899

1895:                                             ; preds = %1889
  %1896 = load i64, ptr %1891, align 8, !tbaa !120
  %1897 = trunc i64 %1896 to i16
  %1898 = tail call i16 @llvm.abs.i16(i16 %1897, i1 false)
  store i16 %1898, ptr %1893, align 2, !tbaa !78
  br label %5616

1899:                                             ; preds = %1889
  switch i32 %1, label %2514 [
    i32 1, label %1900
    i32 0, label %2214
  ]

1900:                                             ; preds = %1899
  %1901 = getelementptr inbounds i32, ptr %3, i64 %19
  %1902 = load i32, ptr %1901, align 4, !tbaa !5
  %1903 = icmp eq i32 %1902, 0
  %1904 = icmp sgt i32 %5, 0
  br i1 %1903, label %1914, label %1905

1905:                                             ; preds = %1900
  br i1 %1904, label %1906, label %5616

1906:                                             ; preds = %1905
  %1907 = icmp sgt i32 %13, 1
  %1908 = icmp sgt i32 %13, 0
  %1909 = add i32 %13, -2
  %1910 = zext i32 %1909 to i64
  %1911 = zext i32 %13 to i64
  %1912 = add nuw i32 %5, 1
  %1913 = icmp eq i32 %13, 1
  br label %2068

1914:                                             ; preds = %1900
  br i1 %1904, label %1915, label %5616

1915:                                             ; preds = %1914
  %1916 = icmp sgt i32 %13, 1
  %1917 = icmp sgt i32 %13, 0
  %1918 = add i32 %13, -2
  %1919 = zext i32 %1918 to i64
  %1920 = zext i32 %13 to i64
  %1921 = add nuw i32 %5, 1
  %1922 = icmp eq i32 %13, 1
  br label %1923

1923:                                             ; preds = %1915, %2066
  %1924 = phi i16 [ 0, %1915 ], [ %2016, %2066 ]
  %1925 = phi i32 [ 0, %1915 ], [ %2018, %2066 ]
  %1926 = phi double [ 0.000000e+00, %1915 ], [ %2017, %2066 ]
  %1927 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1916, label %1928, label %1997

1928:                                             ; preds = %1923, %1987
  %1929 = phi i32 [ %1996, %1987 ], [ 0, %1923 ]
  %1930 = phi i64 [ %1938, %1987 ], [ %1920, %1923 ]
  %1931 = phi i64 [ %1995, %1987 ], [ %1919, %1923 ]
  %1932 = phi i32 [ %1993, %1987 ], [ %1927, %1923 ]
  %1933 = sub i32 %1918, %1929
  %1934 = tail call i32 @llvm.smin.i32(i32 %1933, i32 0)
  %1935 = sub i32 %1933, %1934
  %1936 = zext i32 %1935 to i64
  %1937 = add nuw nsw i64 %1936, 1
  %1938 = add nsw i64 %1930, -1
  %1939 = icmp ult i32 %1935, 31
  br i1 %1939, label %1975, label %1940

1940:                                             ; preds = %1928
  %1941 = and i64 %1937, 8589934560
  %1942 = sub i64 %1931, %1941
  br label %1943

1943:                                             ; preds = %1943, %1940
  %1944 = phi i64 [ 0, %1940 ], [ %1967, %1943 ]
  %1945 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1940 ], [ %1963, %1943 ]
  %1946 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1940 ], [ %1964, %1943 ]
  %1947 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1940 ], [ %1965, %1943 ]
  %1948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1940 ], [ %1966, %1943 ]
  %1949 = sub i64 %1931, %1944
  %1950 = getelementptr inbounds i32, ptr %9, i64 %1949
  %1951 = getelementptr inbounds i32, ptr %1950, i64 -7
  %1952 = load <8 x i32>, ptr %1951, align 4, !tbaa !5
  %1953 = shufflevector <8 x i32> %1952, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1954 = getelementptr inbounds i32, ptr %1950, i64 -15
  %1955 = load <8 x i32>, ptr %1954, align 4, !tbaa !5
  %1956 = shufflevector <8 x i32> %1955, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1957 = getelementptr inbounds i32, ptr %1950, i64 -23
  %1958 = load <8 x i32>, ptr %1957, align 4, !tbaa !5
  %1959 = shufflevector <8 x i32> %1958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1960 = getelementptr inbounds i32, ptr %1950, i64 -31
  %1961 = load <8 x i32>, ptr %1960, align 4, !tbaa !5
  %1962 = shufflevector <8 x i32> %1961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1963 = mul <8 x i32> %1953, %1945
  %1964 = mul <8 x i32> %1956, %1946
  %1965 = mul <8 x i32> %1959, %1947
  %1966 = mul <8 x i32> %1962, %1948
  %1967 = add nuw i64 %1944, 32
  %1968 = icmp eq i64 %1967, %1941
  br i1 %1968, label %1969, label %1943, !llvm.loop !824

1969:                                             ; preds = %1943
  %1970 = mul <8 x i32> %1964, %1963
  %1971 = mul <8 x i32> %1965, %1970
  %1972 = mul <8 x i32> %1966, %1971
  %1973 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1972)
  %1974 = icmp eq i64 %1937, %1941
  br i1 %1974, label %1987, label %1975

1975:                                             ; preds = %1928, %1969
  %1976 = phi i64 [ %1931, %1928 ], [ %1942, %1969 ]
  %1977 = phi i32 [ 1, %1928 ], [ %1973, %1969 ]
  br label %1978

1978:                                             ; preds = %1975, %1978
  %1979 = phi i64 [ %1984, %1978 ], [ %1976, %1975 ]
  %1980 = phi i32 [ %1983, %1978 ], [ %1977, %1975 ]
  %1981 = getelementptr inbounds i32, ptr %9, i64 %1979
  %1982 = load i32, ptr %1981, align 4, !tbaa !5
  %1983 = mul nsw i32 %1982, %1980
  %1984 = add nsw i64 %1979, -1
  %1985 = trunc i64 %1979 to i32
  %1986 = icmp sgt i32 %1985, 0
  br i1 %1986, label %1978, label %1987, !llvm.loop !825

1987:                                             ; preds = %1978, %1969
  %1988 = phi i32 [ %1973, %1969 ], [ %1983, %1978 ]
  %1989 = and i64 %1938, 4294967295
  %1990 = getelementptr inbounds i32, ptr %6, i64 %1989
  %1991 = load i32, ptr %1990, align 4, !tbaa !5
  %1992 = mul nsw i32 %1991, %1988
  %1993 = add nsw i32 %1992, %1932
  %1994 = icmp sgt i64 %1930, 2
  %1995 = add nsw i64 %1931, -1
  %1996 = add i32 %1929, 1
  br i1 %1994, label %1928, label %1997, !llvm.loop !826

1997:                                             ; preds = %1987, %1923
  %1998 = phi i32 [ %1927, %1923 ], [ %1993, %1987 ]
  %1999 = sext i32 %1998 to i64
  %2000 = getelementptr inbounds double, ptr %2, i64 %1999
  %2001 = load double, ptr %2000, align 8, !tbaa !18
  %2002 = getelementptr inbounds i64, ptr %1891, i64 %1999
  %2003 = load i64, ptr %2002, align 8, !tbaa !120
  %2004 = trunc i64 %2003 to i32
  %2005 = sitofp i16 %1924 to double
  %2006 = shl i32 %2004, 16
  %2007 = ashr exact i32 %2006, 16
  %2008 = sitofp i32 %2007 to double
  %2009 = fmul fast double %2001, %2008
  %2010 = fcmp fast uge double %2009, 0.000000e+00
  %2011 = fneg fast double %2009
  %2012 = tail call fast double @llvm.fabs.f64(double %2009)
  %2013 = fcmp fast ole double %2012, %2005
  %2014 = select nnan ninf i1 %2010, double %2009, double %2011
  %2015 = select i1 %2013, double %2005, double %2014
  %2016 = fptosi double %2015 to i16
  %2017 = fadd fast double %2001, %1926
  %2018 = add nuw nsw i32 %1925, 1
  br i1 %1917, label %2019, label %2066

2019:                                             ; preds = %1997
  %2020 = load i32, ptr %4, align 4, !tbaa !5
  %2021 = load i32, ptr %12, align 4, !tbaa !5
  %2022 = add nsw i32 %2021, -1
  %2023 = icmp slt i32 %2020, %2022
  br i1 %2023, label %2043, label %2024

2024:                                             ; preds = %2019
  %2025 = icmp eq i32 %2020, %2022
  br i1 %2025, label %2026, label %2059

2026:                                             ; preds = %2024
  store i32 0, ptr %4, align 4, !tbaa !5
  %2027 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2027, ptr %6, align 4, !tbaa !5
  br i1 %1922, label %2066, label %2028

2028:                                             ; preds = %2026, %2053
  %2029 = phi i64 [ %2057, %2053 ], [ 1, %2026 ]
  %2030 = getelementptr inbounds i32, ptr %4, i64 %2029
  %2031 = load i32, ptr %2030, align 4, !tbaa !5
  %2032 = getelementptr inbounds i32, ptr %12, i64 %2029
  %2033 = load i32, ptr %2032, align 4, !tbaa !5
  %2034 = add nsw i32 %2033, -1
  %2035 = icmp slt i32 %2031, %2034
  br i1 %2035, label %2036, label %2051

2036:                                             ; preds = %2028
  br i1 %2023, label %2043, label %2037

2037:                                             ; preds = %2036
  %2038 = getelementptr inbounds i32, ptr %7, i64 %2029
  %2039 = load i32, ptr %2038, align 4, !tbaa !5
  %2040 = getelementptr inbounds i32, ptr %6, i64 %2029
  %2041 = load i32, ptr %2040, align 4, !tbaa !5
  %2042 = add nsw i32 %2041, %2039
  store i32 %2042, ptr %2040, align 4, !tbaa !5
  br label %2061

2043:                                             ; preds = %2019, %2036
  %2044 = phi i32 [ %2031, %2036 ], [ %2020, %2019 ]
  %2045 = phi ptr [ %2030, %2036 ], [ %4, %2019 ]
  %2046 = phi i64 [ %2029, %2036 ], [ 0, %2019 ]
  %2047 = add nsw i32 %2044, 1
  store i32 %2047, ptr %2045, align 4, !tbaa !5
  %2048 = getelementptr inbounds i32, ptr %7, i64 %2046
  %2049 = load i32, ptr %2048, align 4, !tbaa !5
  %2050 = getelementptr inbounds i32, ptr %6, i64 %2046
  br label %2061

2051:                                             ; preds = %2028
  %2052 = icmp eq i32 %2031, %2034
  br i1 %2052, label %2053, label %2059

2053:                                             ; preds = %2051
  store i32 0, ptr %2030, align 4, !tbaa !5
  %2054 = getelementptr inbounds i32, ptr %8, i64 %2029
  %2055 = load i32, ptr %2054, align 4, !tbaa !5
  %2056 = getelementptr inbounds i32, ptr %6, i64 %2029
  store i32 %2055, ptr %2056, align 4, !tbaa !5
  %2057 = add nuw nsw i64 %2029, 1
  %2058 = icmp eq i64 %2057, %1920
  br i1 %2058, label %2066, label %2028, !llvm.loop !827

2059:                                             ; preds = %2024, %2051
  store i16 %2016, ptr %1893, align 2, !tbaa !78
  %2060 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2061:                                             ; preds = %2037, %2043
  %2062 = phi ptr [ %2050, %2043 ], [ %2030, %2037 ]
  %2063 = phi i32 [ %2049, %2043 ], [ 1, %2037 ]
  %2064 = load i32, ptr %2062, align 4, !tbaa !5
  %2065 = add nsw i32 %2064, %2063
  store i32 %2065, ptr %2062, align 4, !tbaa !5
  br label %2066

2066:                                             ; preds = %2053, %2061, %2026, %1997
  %2067 = icmp eq i32 %2018, %5
  br i1 %2067, label %5610, label %1923, !llvm.loop !828

2068:                                             ; preds = %1906, %2212
  %2069 = phi i16 [ 0, %1906 ], [ %2160, %2212 ]
  %2070 = phi i32 [ 0, %1906 ], [ %2161, %2212 ]
  %2071 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1907, label %2072, label %2141

2072:                                             ; preds = %2068, %2131
  %2073 = phi i32 [ %2140, %2131 ], [ 0, %2068 ]
  %2074 = phi i64 [ %2082, %2131 ], [ %1911, %2068 ]
  %2075 = phi i64 [ %2139, %2131 ], [ %1910, %2068 ]
  %2076 = phi i32 [ %2137, %2131 ], [ %2071, %2068 ]
  %2077 = sub i32 %1909, %2073
  %2078 = tail call i32 @llvm.smin.i32(i32 %2077, i32 0)
  %2079 = sub i32 %2077, %2078
  %2080 = zext i32 %2079 to i64
  %2081 = add nuw nsw i64 %2080, 1
  %2082 = add nsw i64 %2074, -1
  %2083 = icmp ult i32 %2079, 31
  br i1 %2083, label %2119, label %2084

2084:                                             ; preds = %2072
  %2085 = and i64 %2081, 8589934560
  %2086 = sub i64 %2075, %2085
  br label %2087

2087:                                             ; preds = %2087, %2084
  %2088 = phi i64 [ 0, %2084 ], [ %2111, %2087 ]
  %2089 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2084 ], [ %2107, %2087 ]
  %2090 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2084 ], [ %2108, %2087 ]
  %2091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2084 ], [ %2109, %2087 ]
  %2092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2084 ], [ %2110, %2087 ]
  %2093 = sub i64 %2075, %2088
  %2094 = getelementptr inbounds i32, ptr %11, i64 %2093
  %2095 = getelementptr inbounds i32, ptr %2094, i64 -7
  %2096 = load <8 x i32>, ptr %2095, align 4, !tbaa !5
  %2097 = shufflevector <8 x i32> %2096, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2098 = getelementptr inbounds i32, ptr %2094, i64 -15
  %2099 = load <8 x i32>, ptr %2098, align 4, !tbaa !5
  %2100 = shufflevector <8 x i32> %2099, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2101 = getelementptr inbounds i32, ptr %2094, i64 -23
  %2102 = load <8 x i32>, ptr %2101, align 4, !tbaa !5
  %2103 = shufflevector <8 x i32> %2102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2104 = getelementptr inbounds i32, ptr %2094, i64 -31
  %2105 = load <8 x i32>, ptr %2104, align 4, !tbaa !5
  %2106 = shufflevector <8 x i32> %2105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2107 = mul <8 x i32> %2097, %2089
  %2108 = mul <8 x i32> %2100, %2090
  %2109 = mul <8 x i32> %2103, %2091
  %2110 = mul <8 x i32> %2106, %2092
  %2111 = add nuw i64 %2088, 32
  %2112 = icmp eq i64 %2111, %2085
  br i1 %2112, label %2113, label %2087, !llvm.loop !829

2113:                                             ; preds = %2087
  %2114 = mul <8 x i32> %2108, %2107
  %2115 = mul <8 x i32> %2109, %2114
  %2116 = mul <8 x i32> %2110, %2115
  %2117 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2116)
  %2118 = icmp eq i64 %2081, %2085
  br i1 %2118, label %2131, label %2119

2119:                                             ; preds = %2072, %2113
  %2120 = phi i64 [ %2075, %2072 ], [ %2086, %2113 ]
  %2121 = phi i32 [ 1, %2072 ], [ %2117, %2113 ]
  br label %2122

2122:                                             ; preds = %2119, %2122
  %2123 = phi i64 [ %2128, %2122 ], [ %2120, %2119 ]
  %2124 = phi i32 [ %2127, %2122 ], [ %2121, %2119 ]
  %2125 = getelementptr inbounds i32, ptr %11, i64 %2123
  %2126 = load i32, ptr %2125, align 4, !tbaa !5
  %2127 = mul nsw i32 %2126, %2124
  %2128 = add nsw i64 %2123, -1
  %2129 = trunc i64 %2123 to i32
  %2130 = icmp sgt i32 %2129, 0
  br i1 %2130, label %2122, label %2131, !llvm.loop !830

2131:                                             ; preds = %2122, %2113
  %2132 = phi i32 [ %2117, %2113 ], [ %2127, %2122 ]
  %2133 = and i64 %2082, 4294967295
  %2134 = getelementptr inbounds i32, ptr %6, i64 %2133
  %2135 = load i32, ptr %2134, align 4, !tbaa !5
  %2136 = mul nsw i32 %2135, %2132
  %2137 = add nsw i32 %2136, %2076
  %2138 = icmp sgt i64 %2074, 2
  %2139 = add nsw i64 %2075, -1
  %2140 = add i32 %2073, 1
  br i1 %2138, label %2072, label %2141, !llvm.loop !831

2141:                                             ; preds = %2131, %2068
  %2142 = phi i32 [ %2071, %2068 ], [ %2137, %2131 ]
  %2143 = icmp slt i32 %2142, %5
  br i1 %2143, label %2146, label %2144

2144:                                             ; preds = %2141
  %2145 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

2146:                                             ; preds = %2141
  %2147 = sext i32 %2142 to i64
  %2148 = getelementptr inbounds i64, ptr %1891, i64 %2147
  %2149 = load i64, ptr %2148, align 8, !tbaa !120
  %2150 = trunc i64 %2149 to i32
  %2151 = sitofp i16 %2069 to double
  %2152 = shl i32 %2150, 16
  %2153 = ashr exact i32 %2152, 16
  %2154 = sitofp i32 %2153 to double
  %2155 = icmp slt i32 %2152, 0
  %2156 = fneg fast double %2154
  %2157 = select i1 %2155, double %2156, double %2154
  %2158 = fcmp fast ole double %2157, %2151
  %2159 = select fast i1 %2158, double %2151, double %2157
  %2160 = fptosi double %2159 to i16
  store i16 %2160, ptr %1893, align 2, !tbaa !78
  %2161 = add nuw nsw i32 %2070, 1
  br i1 %1908, label %2162, label %2212

2162:                                             ; preds = %2146
  %2163 = load i32, ptr %4, align 4, !tbaa !5
  %2164 = load i32, ptr %12, align 4, !tbaa !5
  %2165 = add nsw i32 %2164, -1
  %2166 = icmp slt i32 %2163, %2165
  br i1 %2166, label %2189, label %2167

2167:                                             ; preds = %2162
  %2168 = icmp eq i32 %2163, %2165
  br i1 %2168, label %2169, label %2205

2169:                                             ; preds = %2167
  store i32 0, ptr %4, align 4, !tbaa !5
  %2170 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2170, ptr %6, align 4, !tbaa !5
  br i1 %1913, label %2212, label %2171

2171:                                             ; preds = %2169, %2199
  %2172 = phi i64 [ %2203, %2199 ], [ 1, %2169 ]
  %2173 = getelementptr inbounds i32, ptr %4, i64 %2172
  %2174 = load i32, ptr %2173, align 4, !tbaa !5
  %2175 = getelementptr inbounds i32, ptr %12, i64 %2172
  %2176 = load i32, ptr %2175, align 4, !tbaa !5
  %2177 = add nsw i32 %2176, -1
  %2178 = icmp slt i32 %2174, %2177
  br i1 %2178, label %2179, label %2197

2179:                                             ; preds = %2171
  br i1 %2166, label %2189, label %2180

2180:                                             ; preds = %2179
  %2181 = shl i64 %2172, 32
  %2182 = add i64 %2181, -4294967296
  %2183 = ashr exact i64 %2182, 32
  %2184 = getelementptr inbounds i32, ptr %7, i64 %2183
  %2185 = load i32, ptr %2184, align 4, !tbaa !5
  %2186 = getelementptr inbounds i32, ptr %6, i64 %2172
  %2187 = load i32, ptr %2186, align 4, !tbaa !5
  %2188 = add nsw i32 %2187, %2185
  store i32 %2188, ptr %2186, align 4, !tbaa !5
  br label %2207

2189:                                             ; preds = %2162, %2179
  %2190 = phi i32 [ %2174, %2179 ], [ %2163, %2162 ]
  %2191 = phi ptr [ %2173, %2179 ], [ %4, %2162 ]
  %2192 = phi i64 [ %2172, %2179 ], [ 0, %2162 ]
  %2193 = add nsw i32 %2190, 1
  store i32 %2193, ptr %2191, align 4, !tbaa !5
  %2194 = getelementptr inbounds i32, ptr %7, i64 %2192
  %2195 = load i32, ptr %2194, align 4, !tbaa !5
  %2196 = getelementptr inbounds i32, ptr %6, i64 %2192
  br label %2207

2197:                                             ; preds = %2171
  %2198 = icmp eq i32 %2174, %2177
  br i1 %2198, label %2199, label %2205

2199:                                             ; preds = %2197
  store i32 0, ptr %2173, align 4, !tbaa !5
  %2200 = getelementptr inbounds i32, ptr %8, i64 %2172
  %2201 = load i32, ptr %2200, align 4, !tbaa !5
  %2202 = getelementptr inbounds i32, ptr %6, i64 %2172
  store i32 %2201, ptr %2202, align 4, !tbaa !5
  %2203 = add nuw nsw i64 %2172, 1
  %2204 = icmp eq i64 %2203, %1911
  br i1 %2204, label %2212, label %2171, !llvm.loop !832

2205:                                             ; preds = %2167, %2197
  %2206 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2207:                                             ; preds = %2180, %2189
  %2208 = phi ptr [ %2196, %2189 ], [ %2173, %2180 ]
  %2209 = phi i32 [ %2195, %2189 ], [ 1, %2180 ]
  %2210 = load i32, ptr %2208, align 4, !tbaa !5
  %2211 = add nsw i32 %2210, %2209
  store i32 %2211, ptr %2208, align 4, !tbaa !5
  br label %2212

2212:                                             ; preds = %2199, %2207, %2169, %2146
  %2213 = icmp eq i32 %2161, %5
  br i1 %2213, label %5616, label %2068, !llvm.loop !833

2214:                                             ; preds = %1899
  %2215 = getelementptr inbounds i32, ptr %3, i64 %19
  %2216 = load i32, ptr %2215, align 4, !tbaa !5
  %2217 = icmp eq i32 %2216, 0
  %2218 = icmp sgt i32 %5, 0
  br i1 %2217, label %2228, label %2219

2219:                                             ; preds = %2214
  br i1 %2218, label %2220, label %5616

2220:                                             ; preds = %2219
  %2221 = icmp sgt i32 %13, 1
  %2222 = icmp sgt i32 %13, 0
  %2223 = add i32 %13, -2
  %2224 = zext i32 %2223 to i64
  %2225 = zext i32 %13 to i64
  %2226 = add nuw i32 %5, 1
  %2227 = icmp eq i32 %13, 1
  br label %2373

2228:                                             ; preds = %2214
  br i1 %2218, label %2229, label %5616

2229:                                             ; preds = %2228
  %2230 = icmp sgt i32 %13, 1
  %2231 = icmp sgt i32 %13, 0
  %2232 = add i32 %13, -2
  %2233 = zext i32 %2232 to i64
  %2234 = zext i32 %13 to i64
  %2235 = add nuw i32 %5, 1
  %2236 = icmp eq i32 %13, 1
  br label %2237

2237:                                             ; preds = %2229, %2371
  %2238 = phi i16 [ 0, %2229 ], [ %2321, %2371 ]
  %2239 = phi i32 [ 0, %2229 ], [ %2323, %2371 ]
  %2240 = phi double [ 0.000000e+00, %2229 ], [ %2322, %2371 ]
  %2241 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2230, label %2242, label %2311

2242:                                             ; preds = %2237, %2301
  %2243 = phi i32 [ %2310, %2301 ], [ 0, %2237 ]
  %2244 = phi i64 [ %2252, %2301 ], [ %2234, %2237 ]
  %2245 = phi i64 [ %2309, %2301 ], [ %2233, %2237 ]
  %2246 = phi i32 [ %2307, %2301 ], [ %2241, %2237 ]
  %2247 = sub i32 %2232, %2243
  %2248 = tail call i32 @llvm.smin.i32(i32 %2247, i32 0)
  %2249 = sub i32 %2247, %2248
  %2250 = zext i32 %2249 to i64
  %2251 = add nuw nsw i64 %2250, 1
  %2252 = add nsw i64 %2244, -1
  %2253 = icmp ult i32 %2249, 31
  br i1 %2253, label %2289, label %2254

2254:                                             ; preds = %2242
  %2255 = and i64 %2251, 8589934560
  %2256 = sub i64 %2245, %2255
  br label %2257

2257:                                             ; preds = %2257, %2254
  %2258 = phi i64 [ 0, %2254 ], [ %2281, %2257 ]
  %2259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2254 ], [ %2277, %2257 ]
  %2260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2254 ], [ %2278, %2257 ]
  %2261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2254 ], [ %2279, %2257 ]
  %2262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2254 ], [ %2280, %2257 ]
  %2263 = sub i64 %2245, %2258
  %2264 = getelementptr inbounds i32, ptr %9, i64 %2263
  %2265 = getelementptr inbounds i32, ptr %2264, i64 -7
  %2266 = load <8 x i32>, ptr %2265, align 4, !tbaa !5
  %2267 = shufflevector <8 x i32> %2266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2268 = getelementptr inbounds i32, ptr %2264, i64 -15
  %2269 = load <8 x i32>, ptr %2268, align 4, !tbaa !5
  %2270 = shufflevector <8 x i32> %2269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2271 = getelementptr inbounds i32, ptr %2264, i64 -23
  %2272 = load <8 x i32>, ptr %2271, align 4, !tbaa !5
  %2273 = shufflevector <8 x i32> %2272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2274 = getelementptr inbounds i32, ptr %2264, i64 -31
  %2275 = load <8 x i32>, ptr %2274, align 4, !tbaa !5
  %2276 = shufflevector <8 x i32> %2275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2277 = mul <8 x i32> %2267, %2259
  %2278 = mul <8 x i32> %2270, %2260
  %2279 = mul <8 x i32> %2273, %2261
  %2280 = mul <8 x i32> %2276, %2262
  %2281 = add nuw i64 %2258, 32
  %2282 = icmp eq i64 %2281, %2255
  br i1 %2282, label %2283, label %2257, !llvm.loop !834

2283:                                             ; preds = %2257
  %2284 = mul <8 x i32> %2278, %2277
  %2285 = mul <8 x i32> %2279, %2284
  %2286 = mul <8 x i32> %2280, %2285
  %2287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2286)
  %2288 = icmp eq i64 %2251, %2255
  br i1 %2288, label %2301, label %2289

2289:                                             ; preds = %2242, %2283
  %2290 = phi i64 [ %2245, %2242 ], [ %2256, %2283 ]
  %2291 = phi i32 [ 1, %2242 ], [ %2287, %2283 ]
  br label %2292

2292:                                             ; preds = %2289, %2292
  %2293 = phi i64 [ %2298, %2292 ], [ %2290, %2289 ]
  %2294 = phi i32 [ %2297, %2292 ], [ %2291, %2289 ]
  %2295 = getelementptr inbounds i32, ptr %9, i64 %2293
  %2296 = load i32, ptr %2295, align 4, !tbaa !5
  %2297 = mul nsw i32 %2296, %2294
  %2298 = add nsw i64 %2293, -1
  %2299 = trunc i64 %2293 to i32
  %2300 = icmp sgt i32 %2299, 0
  br i1 %2300, label %2292, label %2301, !llvm.loop !835

2301:                                             ; preds = %2292, %2283
  %2302 = phi i32 [ %2287, %2283 ], [ %2297, %2292 ]
  %2303 = and i64 %2252, 4294967295
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2303
  %2305 = load i32, ptr %2304, align 4, !tbaa !5
  %2306 = mul nsw i32 %2305, %2302
  %2307 = add nsw i32 %2306, %2246
  %2308 = icmp sgt i64 %2244, 2
  %2309 = add nsw i64 %2245, -1
  %2310 = add i32 %2243, 1
  br i1 %2308, label %2242, label %2311, !llvm.loop !836

2311:                                             ; preds = %2301, %2237
  %2312 = phi i32 [ %2241, %2237 ], [ %2307, %2301 ]
  %2313 = sext i32 %2312 to i64
  %2314 = getelementptr inbounds i64, ptr %1891, i64 %2313
  %2315 = load i64, ptr %2314, align 8, !tbaa !120
  %2316 = trunc i64 %2315 to i16
  %2317 = sext i16 %2238 to i32
  %2318 = tail call i16 @llvm.abs.i16(i16 %2316, i1 false)
  %2319 = zext i16 %2318 to i32
  %2320 = icmp slt i32 %2317, %2319
  %2321 = select i1 %2320, i16 %2318, i16 %2238
  %2322 = fadd fast double %2240, 1.000000e+00
  %2323 = add nuw nsw i32 %2239, 1
  br i1 %2231, label %2324, label %2371

2324:                                             ; preds = %2311
  %2325 = load i32, ptr %4, align 4, !tbaa !5
  %2326 = load i32, ptr %12, align 4, !tbaa !5
  %2327 = add nsw i32 %2326, -1
  %2328 = icmp slt i32 %2325, %2327
  br i1 %2328, label %2348, label %2329

2329:                                             ; preds = %2324
  %2330 = icmp eq i32 %2325, %2327
  br i1 %2330, label %2331, label %2364

2331:                                             ; preds = %2329
  store i32 0, ptr %4, align 4, !tbaa !5
  %2332 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2332, ptr %6, align 4, !tbaa !5
  br i1 %2236, label %2371, label %2333

2333:                                             ; preds = %2331, %2358
  %2334 = phi i64 [ %2362, %2358 ], [ 1, %2331 ]
  %2335 = getelementptr inbounds i32, ptr %4, i64 %2334
  %2336 = load i32, ptr %2335, align 4, !tbaa !5
  %2337 = getelementptr inbounds i32, ptr %12, i64 %2334
  %2338 = load i32, ptr %2337, align 4, !tbaa !5
  %2339 = add nsw i32 %2338, -1
  %2340 = icmp slt i32 %2336, %2339
  br i1 %2340, label %2341, label %2356

2341:                                             ; preds = %2333
  br i1 %2328, label %2348, label %2342

2342:                                             ; preds = %2341
  %2343 = getelementptr inbounds i32, ptr %7, i64 %2334
  %2344 = load i32, ptr %2343, align 4, !tbaa !5
  %2345 = getelementptr inbounds i32, ptr %6, i64 %2334
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = add nsw i32 %2346, %2344
  store i32 %2347, ptr %2345, align 4, !tbaa !5
  br label %2366

2348:                                             ; preds = %2324, %2341
  %2349 = phi i32 [ %2336, %2341 ], [ %2325, %2324 ]
  %2350 = phi ptr [ %2335, %2341 ], [ %4, %2324 ]
  %2351 = phi i64 [ %2334, %2341 ], [ 0, %2324 ]
  %2352 = add nsw i32 %2349, 1
  store i32 %2352, ptr %2350, align 4, !tbaa !5
  %2353 = getelementptr inbounds i32, ptr %7, i64 %2351
  %2354 = load i32, ptr %2353, align 4, !tbaa !5
  %2355 = getelementptr inbounds i32, ptr %6, i64 %2351
  br label %2366

2356:                                             ; preds = %2333
  %2357 = icmp eq i32 %2336, %2339
  br i1 %2357, label %2358, label %2364

2358:                                             ; preds = %2356
  store i32 0, ptr %2335, align 4, !tbaa !5
  %2359 = getelementptr inbounds i32, ptr %8, i64 %2334
  %2360 = load i32, ptr %2359, align 4, !tbaa !5
  %2361 = getelementptr inbounds i32, ptr %6, i64 %2334
  store i32 %2360, ptr %2361, align 4, !tbaa !5
  %2362 = add nuw nsw i64 %2334, 1
  %2363 = icmp eq i64 %2362, %2234
  br i1 %2363, label %2371, label %2333, !llvm.loop !837

2364:                                             ; preds = %2329, %2356
  store i16 %2321, ptr %1893, align 2, !tbaa !78
  %2365 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2366:                                             ; preds = %2342, %2348
  %2367 = phi ptr [ %2355, %2348 ], [ %2335, %2342 ]
  %2368 = phi i32 [ %2354, %2348 ], [ 1, %2342 ]
  %2369 = load i32, ptr %2367, align 4, !tbaa !5
  %2370 = add nsw i32 %2369, %2368
  store i32 %2370, ptr %2367, align 4, !tbaa !5
  br label %2371

2371:                                             ; preds = %2358, %2366, %2331, %2311
  %2372 = icmp eq i32 %2323, %5
  br i1 %2372, label %5611, label %2237, !llvm.loop !838

2373:                                             ; preds = %2220, %2512
  %2374 = phi i16 [ 0, %2220 ], [ %2460, %2512 ]
  %2375 = phi i32 [ 0, %2220 ], [ %2461, %2512 ]
  %2376 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2221, label %2377, label %2446

2377:                                             ; preds = %2373, %2436
  %2378 = phi i32 [ %2445, %2436 ], [ 0, %2373 ]
  %2379 = phi i64 [ %2387, %2436 ], [ %2225, %2373 ]
  %2380 = phi i64 [ %2444, %2436 ], [ %2224, %2373 ]
  %2381 = phi i32 [ %2442, %2436 ], [ %2376, %2373 ]
  %2382 = sub i32 %2223, %2378
  %2383 = tail call i32 @llvm.smin.i32(i32 %2382, i32 0)
  %2384 = sub i32 %2382, %2383
  %2385 = zext i32 %2384 to i64
  %2386 = add nuw nsw i64 %2385, 1
  %2387 = add nsw i64 %2379, -1
  %2388 = icmp ult i32 %2384, 31
  br i1 %2388, label %2424, label %2389

2389:                                             ; preds = %2377
  %2390 = and i64 %2386, 8589934560
  %2391 = sub i64 %2380, %2390
  br label %2392

2392:                                             ; preds = %2392, %2389
  %2393 = phi i64 [ 0, %2389 ], [ %2416, %2392 ]
  %2394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2412, %2392 ]
  %2395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2413, %2392 ]
  %2396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2414, %2392 ]
  %2397 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2389 ], [ %2415, %2392 ]
  %2398 = sub i64 %2380, %2393
  %2399 = getelementptr inbounds i32, ptr %11, i64 %2398
  %2400 = getelementptr inbounds i32, ptr %2399, i64 -7
  %2401 = load <8 x i32>, ptr %2400, align 4, !tbaa !5
  %2402 = shufflevector <8 x i32> %2401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2403 = getelementptr inbounds i32, ptr %2399, i64 -15
  %2404 = load <8 x i32>, ptr %2403, align 4, !tbaa !5
  %2405 = shufflevector <8 x i32> %2404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2406 = getelementptr inbounds i32, ptr %2399, i64 -23
  %2407 = load <8 x i32>, ptr %2406, align 4, !tbaa !5
  %2408 = shufflevector <8 x i32> %2407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2409 = getelementptr inbounds i32, ptr %2399, i64 -31
  %2410 = load <8 x i32>, ptr %2409, align 4, !tbaa !5
  %2411 = shufflevector <8 x i32> %2410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2412 = mul <8 x i32> %2402, %2394
  %2413 = mul <8 x i32> %2405, %2395
  %2414 = mul <8 x i32> %2408, %2396
  %2415 = mul <8 x i32> %2411, %2397
  %2416 = add nuw i64 %2393, 32
  %2417 = icmp eq i64 %2416, %2390
  br i1 %2417, label %2418, label %2392, !llvm.loop !839

2418:                                             ; preds = %2392
  %2419 = mul <8 x i32> %2413, %2412
  %2420 = mul <8 x i32> %2414, %2419
  %2421 = mul <8 x i32> %2415, %2420
  %2422 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2421)
  %2423 = icmp eq i64 %2386, %2390
  br i1 %2423, label %2436, label %2424

2424:                                             ; preds = %2377, %2418
  %2425 = phi i64 [ %2380, %2377 ], [ %2391, %2418 ]
  %2426 = phi i32 [ 1, %2377 ], [ %2422, %2418 ]
  br label %2427

2427:                                             ; preds = %2424, %2427
  %2428 = phi i64 [ %2433, %2427 ], [ %2425, %2424 ]
  %2429 = phi i32 [ %2432, %2427 ], [ %2426, %2424 ]
  %2430 = getelementptr inbounds i32, ptr %11, i64 %2428
  %2431 = load i32, ptr %2430, align 4, !tbaa !5
  %2432 = mul nsw i32 %2431, %2429
  %2433 = add nsw i64 %2428, -1
  %2434 = trunc i64 %2428 to i32
  %2435 = icmp sgt i32 %2434, 0
  br i1 %2435, label %2427, label %2436, !llvm.loop !840

2436:                                             ; preds = %2427, %2418
  %2437 = phi i32 [ %2422, %2418 ], [ %2432, %2427 ]
  %2438 = and i64 %2387, 4294967295
  %2439 = getelementptr inbounds i32, ptr %6, i64 %2438
  %2440 = load i32, ptr %2439, align 4, !tbaa !5
  %2441 = mul nsw i32 %2440, %2437
  %2442 = add nsw i32 %2441, %2381
  %2443 = icmp sgt i64 %2379, 2
  %2444 = add nsw i64 %2380, -1
  %2445 = add i32 %2378, 1
  br i1 %2443, label %2377, label %2446, !llvm.loop !841

2446:                                             ; preds = %2436, %2373
  %2447 = phi i32 [ %2376, %2373 ], [ %2442, %2436 ]
  %2448 = icmp slt i32 %2447, %5
  br i1 %2448, label %2451, label %2449

2449:                                             ; preds = %2446
  %2450 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

2451:                                             ; preds = %2446
  %2452 = sext i32 %2447 to i64
  %2453 = getelementptr inbounds i64, ptr %1891, i64 %2452
  %2454 = load i64, ptr %2453, align 8, !tbaa !120
  %2455 = trunc i64 %2454 to i16
  %2456 = sext i16 %2374 to i32
  %2457 = tail call i16 @llvm.abs.i16(i16 %2455, i1 false)
  %2458 = zext i16 %2457 to i32
  %2459 = icmp slt i32 %2456, %2458
  %2460 = select i1 %2459, i16 %2457, i16 %2374
  store i16 %2460, ptr %1893, align 2, !tbaa !78
  %2461 = add nuw nsw i32 %2375, 1
  br i1 %2222, label %2462, label %2512

2462:                                             ; preds = %2451
  %2463 = load i32, ptr %4, align 4, !tbaa !5
  %2464 = load i32, ptr %12, align 4, !tbaa !5
  %2465 = add nsw i32 %2464, -1
  %2466 = icmp slt i32 %2463, %2465
  br i1 %2466, label %2489, label %2467

2467:                                             ; preds = %2462
  %2468 = icmp eq i32 %2463, %2465
  br i1 %2468, label %2469, label %2505

2469:                                             ; preds = %2467
  store i32 0, ptr %4, align 4, !tbaa !5
  %2470 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2470, ptr %6, align 4, !tbaa !5
  br i1 %2227, label %2512, label %2471

2471:                                             ; preds = %2469, %2499
  %2472 = phi i64 [ %2503, %2499 ], [ 1, %2469 ]
  %2473 = getelementptr inbounds i32, ptr %4, i64 %2472
  %2474 = load i32, ptr %2473, align 4, !tbaa !5
  %2475 = getelementptr inbounds i32, ptr %12, i64 %2472
  %2476 = load i32, ptr %2475, align 4, !tbaa !5
  %2477 = add nsw i32 %2476, -1
  %2478 = icmp slt i32 %2474, %2477
  br i1 %2478, label %2479, label %2497

2479:                                             ; preds = %2471
  br i1 %2466, label %2489, label %2480

2480:                                             ; preds = %2479
  %2481 = shl i64 %2472, 32
  %2482 = add i64 %2481, -4294967296
  %2483 = ashr exact i64 %2482, 32
  %2484 = getelementptr inbounds i32, ptr %7, i64 %2483
  %2485 = load i32, ptr %2484, align 4, !tbaa !5
  %2486 = getelementptr inbounds i32, ptr %6, i64 %2472
  %2487 = load i32, ptr %2486, align 4, !tbaa !5
  %2488 = add nsw i32 %2487, %2485
  store i32 %2488, ptr %2486, align 4, !tbaa !5
  br label %2507

2489:                                             ; preds = %2462, %2479
  %2490 = phi i32 [ %2474, %2479 ], [ %2463, %2462 ]
  %2491 = phi ptr [ %2473, %2479 ], [ %4, %2462 ]
  %2492 = phi i64 [ %2472, %2479 ], [ 0, %2462 ]
  %2493 = add nsw i32 %2490, 1
  store i32 %2493, ptr %2491, align 4, !tbaa !5
  %2494 = getelementptr inbounds i32, ptr %7, i64 %2492
  %2495 = load i32, ptr %2494, align 4, !tbaa !5
  %2496 = getelementptr inbounds i32, ptr %6, i64 %2492
  br label %2507

2497:                                             ; preds = %2471
  %2498 = icmp eq i32 %2474, %2477
  br i1 %2498, label %2499, label %2505

2499:                                             ; preds = %2497
  store i32 0, ptr %2473, align 4, !tbaa !5
  %2500 = getelementptr inbounds i32, ptr %8, i64 %2472
  %2501 = load i32, ptr %2500, align 4, !tbaa !5
  %2502 = getelementptr inbounds i32, ptr %6, i64 %2472
  store i32 %2501, ptr %2502, align 4, !tbaa !5
  %2503 = add nuw nsw i64 %2472, 1
  %2504 = icmp eq i64 %2503, %2225
  br i1 %2504, label %2512, label %2471, !llvm.loop !842

2505:                                             ; preds = %2467, %2497
  %2506 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2507:                                             ; preds = %2480, %2489
  %2508 = phi ptr [ %2496, %2489 ], [ %2473, %2480 ]
  %2509 = phi i32 [ %2495, %2489 ], [ 1, %2480 ]
  %2510 = load i32, ptr %2508, align 4, !tbaa !5
  %2511 = add nsw i32 %2510, %2509
  store i32 %2511, ptr %2508, align 4, !tbaa !5
  br label %2512

2512:                                             ; preds = %2499, %2507, %2469, %2451
  %2513 = icmp eq i32 %2461, %5
  br i1 %2513, label %5616, label %2373, !llvm.loop !843

2514:                                             ; preds = %1899
  %2515 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1634, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

2516:                                             ; preds = %18
  %2517 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2518 = load ptr, ptr %2517, align 8, !tbaa !9
  %2519 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2520 = load ptr, ptr %2519, align 8, !tbaa !9
  store i32 0, ptr %2520, align 4, !tbaa !5
  %2521 = icmp eq i32 %13, 0
  br i1 %2521, label %2522, label %2528

2522:                                             ; preds = %2516
  %2523 = load i64, ptr %2518, align 8, !tbaa !120
  %2524 = trunc i64 %2523 to i32
  %2525 = icmp eq i32 %2524, 0
  %2526 = tail call i32 @llvm.abs.i32(i32 %2524, i1 true)
  %2527 = select i1 %2525, i32 0, i32 %2526
  store i32 %2527, ptr %2520, align 4, !tbaa !5
  br label %5616

2528:                                             ; preds = %2516
  switch i32 %1, label %3133 [
    i32 1, label %2529
    i32 0, label %2839
  ]

2529:                                             ; preds = %2528
  %2530 = getelementptr inbounds i32, ptr %3, i64 %19
  %2531 = load i32, ptr %2530, align 4, !tbaa !5
  %2532 = icmp eq i32 %2531, 0
  %2533 = icmp sgt i32 %5, 0
  br i1 %2532, label %2543, label %2534

2534:                                             ; preds = %2529
  br i1 %2533, label %2535, label %5616

2535:                                             ; preds = %2534
  %2536 = icmp sgt i32 %13, 1
  %2537 = icmp sgt i32 %13, 0
  %2538 = add i32 %13, -2
  %2539 = zext i32 %2538 to i64
  %2540 = zext i32 %13 to i64
  %2541 = add nuw i32 %5, 1
  %2542 = icmp eq i32 %13, 1
  br label %2695

2543:                                             ; preds = %2529
  br i1 %2533, label %2544, label %5616

2544:                                             ; preds = %2543
  %2545 = icmp sgt i32 %13, 1
  %2546 = icmp sgt i32 %13, 0
  %2547 = add i32 %13, -2
  %2548 = zext i32 %2547 to i64
  %2549 = zext i32 %13 to i64
  %2550 = add nuw i32 %5, 1
  %2551 = icmp eq i32 %13, 1
  br label %2552

2552:                                             ; preds = %2544, %2693
  %2553 = phi i32 [ 0, %2544 ], [ %2645, %2693 ]
  %2554 = phi double [ 0.000000e+00, %2544 ], [ %2644, %2693 ]
  %2555 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2545, label %2556, label %2625

2556:                                             ; preds = %2552, %2615
  %2557 = phi i32 [ %2624, %2615 ], [ 0, %2552 ]
  %2558 = phi i64 [ %2566, %2615 ], [ %2549, %2552 ]
  %2559 = phi i64 [ %2623, %2615 ], [ %2548, %2552 ]
  %2560 = phi i32 [ %2621, %2615 ], [ %2555, %2552 ]
  %2561 = sub i32 %2547, %2557
  %2562 = tail call i32 @llvm.smin.i32(i32 %2561, i32 0)
  %2563 = sub i32 %2561, %2562
  %2564 = zext i32 %2563 to i64
  %2565 = add nuw nsw i64 %2564, 1
  %2566 = add nsw i64 %2558, -1
  %2567 = icmp ult i32 %2563, 31
  br i1 %2567, label %2603, label %2568

2568:                                             ; preds = %2556
  %2569 = and i64 %2565, 8589934560
  %2570 = sub i64 %2559, %2569
  br label %2571

2571:                                             ; preds = %2571, %2568
  %2572 = phi i64 [ 0, %2568 ], [ %2595, %2571 ]
  %2573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2568 ], [ %2591, %2571 ]
  %2574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2568 ], [ %2592, %2571 ]
  %2575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2568 ], [ %2593, %2571 ]
  %2576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2568 ], [ %2594, %2571 ]
  %2577 = sub i64 %2559, %2572
  %2578 = getelementptr inbounds i32, ptr %9, i64 %2577
  %2579 = getelementptr inbounds i32, ptr %2578, i64 -7
  %2580 = load <8 x i32>, ptr %2579, align 4, !tbaa !5
  %2581 = shufflevector <8 x i32> %2580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2582 = getelementptr inbounds i32, ptr %2578, i64 -15
  %2583 = load <8 x i32>, ptr %2582, align 4, !tbaa !5
  %2584 = shufflevector <8 x i32> %2583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2585 = getelementptr inbounds i32, ptr %2578, i64 -23
  %2586 = load <8 x i32>, ptr %2585, align 4, !tbaa !5
  %2587 = shufflevector <8 x i32> %2586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2588 = getelementptr inbounds i32, ptr %2578, i64 -31
  %2589 = load <8 x i32>, ptr %2588, align 4, !tbaa !5
  %2590 = shufflevector <8 x i32> %2589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2591 = mul <8 x i32> %2581, %2573
  %2592 = mul <8 x i32> %2584, %2574
  %2593 = mul <8 x i32> %2587, %2575
  %2594 = mul <8 x i32> %2590, %2576
  %2595 = add nuw i64 %2572, 32
  %2596 = icmp eq i64 %2595, %2569
  br i1 %2596, label %2597, label %2571, !llvm.loop !844

2597:                                             ; preds = %2571
  %2598 = mul <8 x i32> %2592, %2591
  %2599 = mul <8 x i32> %2593, %2598
  %2600 = mul <8 x i32> %2594, %2599
  %2601 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2600)
  %2602 = icmp eq i64 %2565, %2569
  br i1 %2602, label %2615, label %2603

2603:                                             ; preds = %2556, %2597
  %2604 = phi i64 [ %2559, %2556 ], [ %2570, %2597 ]
  %2605 = phi i32 [ 1, %2556 ], [ %2601, %2597 ]
  br label %2606

2606:                                             ; preds = %2603, %2606
  %2607 = phi i64 [ %2612, %2606 ], [ %2604, %2603 ]
  %2608 = phi i32 [ %2611, %2606 ], [ %2605, %2603 ]
  %2609 = getelementptr inbounds i32, ptr %9, i64 %2607
  %2610 = load i32, ptr %2609, align 4, !tbaa !5
  %2611 = mul nsw i32 %2610, %2608
  %2612 = add nsw i64 %2607, -1
  %2613 = trunc i64 %2607 to i32
  %2614 = icmp sgt i32 %2613, 0
  br i1 %2614, label %2606, label %2615, !llvm.loop !845

2615:                                             ; preds = %2606, %2597
  %2616 = phi i32 [ %2601, %2597 ], [ %2611, %2606 ]
  %2617 = and i64 %2566, 4294967295
  %2618 = getelementptr inbounds i32, ptr %6, i64 %2617
  %2619 = load i32, ptr %2618, align 4, !tbaa !5
  %2620 = mul nsw i32 %2619, %2616
  %2621 = add nsw i32 %2620, %2560
  %2622 = icmp sgt i64 %2558, 2
  %2623 = add nsw i64 %2559, -1
  %2624 = add i32 %2557, 1
  br i1 %2622, label %2556, label %2625, !llvm.loop !846

2625:                                             ; preds = %2615, %2552
  %2626 = phi i32 [ %2555, %2552 ], [ %2621, %2615 ]
  %2627 = sext i32 %2626 to i64
  %2628 = getelementptr inbounds double, ptr %2, i64 %2627
  %2629 = load double, ptr %2628, align 8, !tbaa !18
  %2630 = getelementptr inbounds i64, ptr %2518, i64 %2627
  %2631 = load i64, ptr %2630, align 8, !tbaa !120
  %2632 = trunc i64 %2631 to i32
  %2633 = load i32, ptr %2520, align 4, !tbaa !5
  %2634 = sitofp i32 %2633 to double
  %2635 = sitofp i32 %2632 to double
  %2636 = fmul fast double %2629, %2635
  %2637 = fcmp fast uge double %2636, 0.000000e+00
  %2638 = fneg fast double %2636
  %2639 = tail call fast double @llvm.fabs.f64(double %2636)
  %2640 = fcmp fast ole double %2639, %2634
  %2641 = select nnan ninf i1 %2637, double %2636, double %2638
  %2642 = select i1 %2640, double %2634, double %2641
  %2643 = fptosi double %2642 to i32
  store i32 %2643, ptr %2520, align 4, !tbaa !5
  %2644 = fadd fast double %2629, %2554
  %2645 = add nuw nsw i32 %2553, 1
  br i1 %2546, label %2646, label %2693

2646:                                             ; preds = %2625
  %2647 = load i32, ptr %4, align 4, !tbaa !5
  %2648 = load i32, ptr %12, align 4, !tbaa !5
  %2649 = add nsw i32 %2648, -1
  %2650 = icmp slt i32 %2647, %2649
  br i1 %2650, label %2670, label %2651

2651:                                             ; preds = %2646
  %2652 = icmp eq i32 %2647, %2649
  br i1 %2652, label %2653, label %2686

2653:                                             ; preds = %2651
  store i32 0, ptr %4, align 4, !tbaa !5
  %2654 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2654, ptr %6, align 4, !tbaa !5
  br i1 %2551, label %2693, label %2655

2655:                                             ; preds = %2653, %2680
  %2656 = phi i64 [ %2684, %2680 ], [ 1, %2653 ]
  %2657 = getelementptr inbounds i32, ptr %4, i64 %2656
  %2658 = load i32, ptr %2657, align 4, !tbaa !5
  %2659 = getelementptr inbounds i32, ptr %12, i64 %2656
  %2660 = load i32, ptr %2659, align 4, !tbaa !5
  %2661 = add nsw i32 %2660, -1
  %2662 = icmp slt i32 %2658, %2661
  br i1 %2662, label %2663, label %2678

2663:                                             ; preds = %2655
  br i1 %2650, label %2670, label %2664

2664:                                             ; preds = %2663
  %2665 = getelementptr inbounds i32, ptr %7, i64 %2656
  %2666 = load i32, ptr %2665, align 4, !tbaa !5
  %2667 = getelementptr inbounds i32, ptr %6, i64 %2656
  %2668 = load i32, ptr %2667, align 4, !tbaa !5
  %2669 = add nsw i32 %2668, %2666
  store i32 %2669, ptr %2667, align 4, !tbaa !5
  br label %2688

2670:                                             ; preds = %2646, %2663
  %2671 = phi i32 [ %2658, %2663 ], [ %2647, %2646 ]
  %2672 = phi ptr [ %2657, %2663 ], [ %4, %2646 ]
  %2673 = phi i64 [ %2656, %2663 ], [ 0, %2646 ]
  %2674 = add nsw i32 %2671, 1
  store i32 %2674, ptr %2672, align 4, !tbaa !5
  %2675 = getelementptr inbounds i32, ptr %7, i64 %2673
  %2676 = load i32, ptr %2675, align 4, !tbaa !5
  %2677 = getelementptr inbounds i32, ptr %6, i64 %2673
  br label %2688

2678:                                             ; preds = %2655
  %2679 = icmp eq i32 %2658, %2661
  br i1 %2679, label %2680, label %2686

2680:                                             ; preds = %2678
  store i32 0, ptr %2657, align 4, !tbaa !5
  %2681 = getelementptr inbounds i32, ptr %8, i64 %2656
  %2682 = load i32, ptr %2681, align 4, !tbaa !5
  %2683 = getelementptr inbounds i32, ptr %6, i64 %2656
  store i32 %2682, ptr %2683, align 4, !tbaa !5
  %2684 = add nuw nsw i64 %2656, 1
  %2685 = icmp eq i64 %2684, %2549
  br i1 %2685, label %2693, label %2655, !llvm.loop !847

2686:                                             ; preds = %2651, %2678
  %2687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2688:                                             ; preds = %2664, %2670
  %2689 = phi ptr [ %2677, %2670 ], [ %2657, %2664 ]
  %2690 = phi i32 [ %2676, %2670 ], [ 1, %2664 ]
  %2691 = load i32, ptr %2689, align 4, !tbaa !5
  %2692 = add nsw i32 %2691, %2690
  store i32 %2692, ptr %2689, align 4, !tbaa !5
  br label %2693

2693:                                             ; preds = %2680, %2688, %2653, %2625
  %2694 = icmp eq i32 %2645, %5
  br i1 %2694, label %5616, label %2552, !llvm.loop !848

2695:                                             ; preds = %2535, %2837
  %2696 = phi i32 [ 0, %2535 ], [ %2786, %2837 ]
  %2697 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2536, label %2698, label %2767

2698:                                             ; preds = %2695, %2757
  %2699 = phi i32 [ %2766, %2757 ], [ 0, %2695 ]
  %2700 = phi i64 [ %2708, %2757 ], [ %2540, %2695 ]
  %2701 = phi i64 [ %2765, %2757 ], [ %2539, %2695 ]
  %2702 = phi i32 [ %2763, %2757 ], [ %2697, %2695 ]
  %2703 = sub i32 %2538, %2699
  %2704 = tail call i32 @llvm.smin.i32(i32 %2703, i32 0)
  %2705 = sub i32 %2703, %2704
  %2706 = zext i32 %2705 to i64
  %2707 = add nuw nsw i64 %2706, 1
  %2708 = add nsw i64 %2700, -1
  %2709 = icmp ult i32 %2705, 31
  br i1 %2709, label %2745, label %2710

2710:                                             ; preds = %2698
  %2711 = and i64 %2707, 8589934560
  %2712 = sub i64 %2701, %2711
  br label %2713

2713:                                             ; preds = %2713, %2710
  %2714 = phi i64 [ 0, %2710 ], [ %2737, %2713 ]
  %2715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2710 ], [ %2733, %2713 ]
  %2716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2710 ], [ %2734, %2713 ]
  %2717 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2710 ], [ %2735, %2713 ]
  %2718 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2710 ], [ %2736, %2713 ]
  %2719 = sub i64 %2701, %2714
  %2720 = getelementptr inbounds i32, ptr %11, i64 %2719
  %2721 = getelementptr inbounds i32, ptr %2720, i64 -7
  %2722 = load <8 x i32>, ptr %2721, align 4, !tbaa !5
  %2723 = shufflevector <8 x i32> %2722, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2724 = getelementptr inbounds i32, ptr %2720, i64 -15
  %2725 = load <8 x i32>, ptr %2724, align 4, !tbaa !5
  %2726 = shufflevector <8 x i32> %2725, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2727 = getelementptr inbounds i32, ptr %2720, i64 -23
  %2728 = load <8 x i32>, ptr %2727, align 4, !tbaa !5
  %2729 = shufflevector <8 x i32> %2728, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2730 = getelementptr inbounds i32, ptr %2720, i64 -31
  %2731 = load <8 x i32>, ptr %2730, align 4, !tbaa !5
  %2732 = shufflevector <8 x i32> %2731, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2733 = mul <8 x i32> %2723, %2715
  %2734 = mul <8 x i32> %2726, %2716
  %2735 = mul <8 x i32> %2729, %2717
  %2736 = mul <8 x i32> %2732, %2718
  %2737 = add nuw i64 %2714, 32
  %2738 = icmp eq i64 %2737, %2711
  br i1 %2738, label %2739, label %2713, !llvm.loop !849

2739:                                             ; preds = %2713
  %2740 = mul <8 x i32> %2734, %2733
  %2741 = mul <8 x i32> %2735, %2740
  %2742 = mul <8 x i32> %2736, %2741
  %2743 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2742)
  %2744 = icmp eq i64 %2707, %2711
  br i1 %2744, label %2757, label %2745

2745:                                             ; preds = %2698, %2739
  %2746 = phi i64 [ %2701, %2698 ], [ %2712, %2739 ]
  %2747 = phi i32 [ 1, %2698 ], [ %2743, %2739 ]
  br label %2748

2748:                                             ; preds = %2745, %2748
  %2749 = phi i64 [ %2754, %2748 ], [ %2746, %2745 ]
  %2750 = phi i32 [ %2753, %2748 ], [ %2747, %2745 ]
  %2751 = getelementptr inbounds i32, ptr %11, i64 %2749
  %2752 = load i32, ptr %2751, align 4, !tbaa !5
  %2753 = mul nsw i32 %2752, %2750
  %2754 = add nsw i64 %2749, -1
  %2755 = trunc i64 %2749 to i32
  %2756 = icmp sgt i32 %2755, 0
  br i1 %2756, label %2748, label %2757, !llvm.loop !850

2757:                                             ; preds = %2748, %2739
  %2758 = phi i32 [ %2743, %2739 ], [ %2753, %2748 ]
  %2759 = and i64 %2708, 4294967295
  %2760 = getelementptr inbounds i32, ptr %6, i64 %2759
  %2761 = load i32, ptr %2760, align 4, !tbaa !5
  %2762 = mul nsw i32 %2761, %2758
  %2763 = add nsw i32 %2762, %2702
  %2764 = icmp sgt i64 %2700, 2
  %2765 = add nsw i64 %2701, -1
  %2766 = add i32 %2699, 1
  br i1 %2764, label %2698, label %2767, !llvm.loop !851

2767:                                             ; preds = %2757, %2695
  %2768 = phi i32 [ %2697, %2695 ], [ %2763, %2757 ]
  %2769 = icmp slt i32 %2768, %5
  br i1 %2769, label %2772, label %2770

2770:                                             ; preds = %2767
  %2771 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

2772:                                             ; preds = %2767
  %2773 = sext i32 %2768 to i64
  %2774 = getelementptr inbounds i64, ptr %2518, i64 %2773
  %2775 = load i64, ptr %2774, align 8, !tbaa !120
  %2776 = trunc i64 %2775 to i32
  %2777 = load i32, ptr %2520, align 4, !tbaa !5
  %2778 = sitofp i32 %2777 to double
  %2779 = sitofp i32 %2776 to double
  %2780 = icmp slt i32 %2776, 0
  %2781 = fneg fast double %2779
  %2782 = select i1 %2780, double %2781, double %2779
  %2783 = fcmp fast ole double %2782, %2778
  %2784 = select fast i1 %2783, double %2778, double %2782
  %2785 = fptosi double %2784 to i32
  store i32 %2785, ptr %2520, align 4, !tbaa !5
  %2786 = add nuw nsw i32 %2696, 1
  br i1 %2537, label %2787, label %2837

2787:                                             ; preds = %2772
  %2788 = load i32, ptr %4, align 4, !tbaa !5
  %2789 = load i32, ptr %12, align 4, !tbaa !5
  %2790 = add nsw i32 %2789, -1
  %2791 = icmp slt i32 %2788, %2790
  br i1 %2791, label %2814, label %2792

2792:                                             ; preds = %2787
  %2793 = icmp eq i32 %2788, %2790
  br i1 %2793, label %2794, label %2830

2794:                                             ; preds = %2792
  store i32 0, ptr %4, align 4, !tbaa !5
  %2795 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2795, ptr %6, align 4, !tbaa !5
  br i1 %2542, label %2837, label %2796

2796:                                             ; preds = %2794, %2824
  %2797 = phi i64 [ %2828, %2824 ], [ 1, %2794 ]
  %2798 = getelementptr inbounds i32, ptr %4, i64 %2797
  %2799 = load i32, ptr %2798, align 4, !tbaa !5
  %2800 = getelementptr inbounds i32, ptr %12, i64 %2797
  %2801 = load i32, ptr %2800, align 4, !tbaa !5
  %2802 = add nsw i32 %2801, -1
  %2803 = icmp slt i32 %2799, %2802
  br i1 %2803, label %2804, label %2822

2804:                                             ; preds = %2796
  br i1 %2791, label %2814, label %2805

2805:                                             ; preds = %2804
  %2806 = shl i64 %2797, 32
  %2807 = add i64 %2806, -4294967296
  %2808 = ashr exact i64 %2807, 32
  %2809 = getelementptr inbounds i32, ptr %7, i64 %2808
  %2810 = load i32, ptr %2809, align 4, !tbaa !5
  %2811 = getelementptr inbounds i32, ptr %6, i64 %2797
  %2812 = load i32, ptr %2811, align 4, !tbaa !5
  %2813 = add nsw i32 %2812, %2810
  store i32 %2813, ptr %2811, align 4, !tbaa !5
  br label %2832

2814:                                             ; preds = %2787, %2804
  %2815 = phi i32 [ %2799, %2804 ], [ %2788, %2787 ]
  %2816 = phi ptr [ %2798, %2804 ], [ %4, %2787 ]
  %2817 = phi i64 [ %2797, %2804 ], [ 0, %2787 ]
  %2818 = add nsw i32 %2815, 1
  store i32 %2818, ptr %2816, align 4, !tbaa !5
  %2819 = getelementptr inbounds i32, ptr %7, i64 %2817
  %2820 = load i32, ptr %2819, align 4, !tbaa !5
  %2821 = getelementptr inbounds i32, ptr %6, i64 %2817
  br label %2832

2822:                                             ; preds = %2796
  %2823 = icmp eq i32 %2799, %2802
  br i1 %2823, label %2824, label %2830

2824:                                             ; preds = %2822
  store i32 0, ptr %2798, align 4, !tbaa !5
  %2825 = getelementptr inbounds i32, ptr %8, i64 %2797
  %2826 = load i32, ptr %2825, align 4, !tbaa !5
  %2827 = getelementptr inbounds i32, ptr %6, i64 %2797
  store i32 %2826, ptr %2827, align 4, !tbaa !5
  %2828 = add nuw nsw i64 %2797, 1
  %2829 = icmp eq i64 %2828, %2540
  br i1 %2829, label %2837, label %2796, !llvm.loop !852

2830:                                             ; preds = %2792, %2822
  %2831 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2832:                                             ; preds = %2805, %2814
  %2833 = phi ptr [ %2821, %2814 ], [ %2798, %2805 ]
  %2834 = phi i32 [ %2820, %2814 ], [ 1, %2805 ]
  %2835 = load i32, ptr %2833, align 4, !tbaa !5
  %2836 = add nsw i32 %2835, %2834
  store i32 %2836, ptr %2833, align 4, !tbaa !5
  br label %2837

2837:                                             ; preds = %2824, %2832, %2794, %2772
  %2838 = icmp eq i32 %2786, %5
  br i1 %2838, label %5616, label %2695, !llvm.loop !853

2839:                                             ; preds = %2528
  %2840 = getelementptr inbounds i32, ptr %3, i64 %19
  %2841 = load i32, ptr %2840, align 4, !tbaa !5
  %2842 = icmp eq i32 %2841, 0
  %2843 = icmp sgt i32 %5, 0
  br i1 %2842, label %2853, label %2844

2844:                                             ; preds = %2839
  br i1 %2843, label %2845, label %5616

2845:                                             ; preds = %2844
  %2846 = icmp sgt i32 %13, 1
  %2847 = icmp sgt i32 %13, 0
  %2848 = add i32 %13, -2
  %2849 = zext i32 %2848 to i64
  %2850 = zext i32 %13 to i64
  %2851 = add nuw i32 %5, 1
  %2852 = icmp eq i32 %13, 1
  br label %2995

2853:                                             ; preds = %2839
  br i1 %2843, label %2854, label %5616

2854:                                             ; preds = %2853
  %2855 = icmp sgt i32 %13, 1
  %2856 = icmp sgt i32 %13, 0
  %2857 = add i32 %13, -2
  %2858 = zext i32 %2857 to i64
  %2859 = zext i32 %13 to i64
  %2860 = add nuw i32 %5, 1
  %2861 = icmp eq i32 %13, 1
  br label %2862

2862:                                             ; preds = %2854, %2993
  %2863 = phi i32 [ 0, %2854 ], [ %2945, %2993 ]
  %2864 = phi double [ 0.000000e+00, %2854 ], [ %2944, %2993 ]
  %2865 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2855, label %2866, label %2935

2866:                                             ; preds = %2862, %2925
  %2867 = phi i32 [ %2934, %2925 ], [ 0, %2862 ]
  %2868 = phi i64 [ %2876, %2925 ], [ %2859, %2862 ]
  %2869 = phi i64 [ %2933, %2925 ], [ %2858, %2862 ]
  %2870 = phi i32 [ %2931, %2925 ], [ %2865, %2862 ]
  %2871 = sub i32 %2857, %2867
  %2872 = tail call i32 @llvm.smin.i32(i32 %2871, i32 0)
  %2873 = sub i32 %2871, %2872
  %2874 = zext i32 %2873 to i64
  %2875 = add nuw nsw i64 %2874, 1
  %2876 = add nsw i64 %2868, -1
  %2877 = icmp ult i32 %2873, 31
  br i1 %2877, label %2913, label %2878

2878:                                             ; preds = %2866
  %2879 = and i64 %2875, 8589934560
  %2880 = sub i64 %2869, %2879
  br label %2881

2881:                                             ; preds = %2881, %2878
  %2882 = phi i64 [ 0, %2878 ], [ %2905, %2881 ]
  %2883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2901, %2881 ]
  %2884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2902, %2881 ]
  %2885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2903, %2881 ]
  %2886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2904, %2881 ]
  %2887 = sub i64 %2869, %2882
  %2888 = getelementptr inbounds i32, ptr %9, i64 %2887
  %2889 = getelementptr inbounds i32, ptr %2888, i64 -7
  %2890 = load <8 x i32>, ptr %2889, align 4, !tbaa !5
  %2891 = shufflevector <8 x i32> %2890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2892 = getelementptr inbounds i32, ptr %2888, i64 -15
  %2893 = load <8 x i32>, ptr %2892, align 4, !tbaa !5
  %2894 = shufflevector <8 x i32> %2893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2895 = getelementptr inbounds i32, ptr %2888, i64 -23
  %2896 = load <8 x i32>, ptr %2895, align 4, !tbaa !5
  %2897 = shufflevector <8 x i32> %2896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2898 = getelementptr inbounds i32, ptr %2888, i64 -31
  %2899 = load <8 x i32>, ptr %2898, align 4, !tbaa !5
  %2900 = shufflevector <8 x i32> %2899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2901 = mul <8 x i32> %2891, %2883
  %2902 = mul <8 x i32> %2894, %2884
  %2903 = mul <8 x i32> %2897, %2885
  %2904 = mul <8 x i32> %2900, %2886
  %2905 = add nuw i64 %2882, 32
  %2906 = icmp eq i64 %2905, %2879
  br i1 %2906, label %2907, label %2881, !llvm.loop !854

2907:                                             ; preds = %2881
  %2908 = mul <8 x i32> %2902, %2901
  %2909 = mul <8 x i32> %2903, %2908
  %2910 = mul <8 x i32> %2904, %2909
  %2911 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2910)
  %2912 = icmp eq i64 %2875, %2879
  br i1 %2912, label %2925, label %2913

2913:                                             ; preds = %2866, %2907
  %2914 = phi i64 [ %2869, %2866 ], [ %2880, %2907 ]
  %2915 = phi i32 [ 1, %2866 ], [ %2911, %2907 ]
  br label %2916

2916:                                             ; preds = %2913, %2916
  %2917 = phi i64 [ %2922, %2916 ], [ %2914, %2913 ]
  %2918 = phi i32 [ %2921, %2916 ], [ %2915, %2913 ]
  %2919 = getelementptr inbounds i32, ptr %9, i64 %2917
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = mul nsw i32 %2920, %2918
  %2922 = add nsw i64 %2917, -1
  %2923 = trunc i64 %2917 to i32
  %2924 = icmp sgt i32 %2923, 0
  br i1 %2924, label %2916, label %2925, !llvm.loop !855

2925:                                             ; preds = %2916, %2907
  %2926 = phi i32 [ %2911, %2907 ], [ %2921, %2916 ]
  %2927 = and i64 %2876, 4294967295
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2927
  %2929 = load i32, ptr %2928, align 4, !tbaa !5
  %2930 = mul nsw i32 %2929, %2926
  %2931 = add nsw i32 %2930, %2870
  %2932 = icmp sgt i64 %2868, 2
  %2933 = add nsw i64 %2869, -1
  %2934 = add i32 %2867, 1
  br i1 %2932, label %2866, label %2935, !llvm.loop !856

2935:                                             ; preds = %2925, %2862
  %2936 = phi i32 [ %2865, %2862 ], [ %2931, %2925 ]
  %2937 = sext i32 %2936 to i64
  %2938 = getelementptr inbounds i64, ptr %2518, i64 %2937
  %2939 = load i64, ptr %2938, align 8, !tbaa !120
  %2940 = trunc i64 %2939 to i32
  %2941 = load i32, ptr %2520, align 4, !tbaa !5
  %2942 = tail call i32 @llvm.abs.i32(i32 %2940, i1 true)
  %2943 = tail call i32 @llvm.smax.i32(i32 %2941, i32 %2942)
  store i32 %2943, ptr %2520, align 4, !tbaa !5
  %2944 = fadd fast double %2864, 1.000000e+00
  %2945 = add nuw nsw i32 %2863, 1
  br i1 %2856, label %2946, label %2993

2946:                                             ; preds = %2935
  %2947 = load i32, ptr %4, align 4, !tbaa !5
  %2948 = load i32, ptr %12, align 4, !tbaa !5
  %2949 = add nsw i32 %2948, -1
  %2950 = icmp slt i32 %2947, %2949
  br i1 %2950, label %2970, label %2951

2951:                                             ; preds = %2946
  %2952 = icmp eq i32 %2947, %2949
  br i1 %2952, label %2953, label %2986

2953:                                             ; preds = %2951
  store i32 0, ptr %4, align 4, !tbaa !5
  %2954 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2954, ptr %6, align 4, !tbaa !5
  br i1 %2861, label %2993, label %2955

2955:                                             ; preds = %2953, %2980
  %2956 = phi i64 [ %2984, %2980 ], [ 1, %2953 ]
  %2957 = getelementptr inbounds i32, ptr %4, i64 %2956
  %2958 = load i32, ptr %2957, align 4, !tbaa !5
  %2959 = getelementptr inbounds i32, ptr %12, i64 %2956
  %2960 = load i32, ptr %2959, align 4, !tbaa !5
  %2961 = add nsw i32 %2960, -1
  %2962 = icmp slt i32 %2958, %2961
  br i1 %2962, label %2963, label %2978

2963:                                             ; preds = %2955
  br i1 %2950, label %2970, label %2964

2964:                                             ; preds = %2963
  %2965 = getelementptr inbounds i32, ptr %7, i64 %2956
  %2966 = load i32, ptr %2965, align 4, !tbaa !5
  %2967 = getelementptr inbounds i32, ptr %6, i64 %2956
  %2968 = load i32, ptr %2967, align 4, !tbaa !5
  %2969 = add nsw i32 %2968, %2966
  store i32 %2969, ptr %2967, align 4, !tbaa !5
  br label %2988

2970:                                             ; preds = %2946, %2963
  %2971 = phi i32 [ %2958, %2963 ], [ %2947, %2946 ]
  %2972 = phi ptr [ %2957, %2963 ], [ %4, %2946 ]
  %2973 = phi i64 [ %2956, %2963 ], [ 0, %2946 ]
  %2974 = add nsw i32 %2971, 1
  store i32 %2974, ptr %2972, align 4, !tbaa !5
  %2975 = getelementptr inbounds i32, ptr %7, i64 %2973
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = getelementptr inbounds i32, ptr %6, i64 %2973
  br label %2988

2978:                                             ; preds = %2955
  %2979 = icmp eq i32 %2958, %2961
  br i1 %2979, label %2980, label %2986

2980:                                             ; preds = %2978
  store i32 0, ptr %2957, align 4, !tbaa !5
  %2981 = getelementptr inbounds i32, ptr %8, i64 %2956
  %2982 = load i32, ptr %2981, align 4, !tbaa !5
  %2983 = getelementptr inbounds i32, ptr %6, i64 %2956
  store i32 %2982, ptr %2983, align 4, !tbaa !5
  %2984 = add nuw nsw i64 %2956, 1
  %2985 = icmp eq i64 %2984, %2859
  br i1 %2985, label %2993, label %2955, !llvm.loop !857

2986:                                             ; preds = %2951, %2978
  %2987 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

2988:                                             ; preds = %2964, %2970
  %2989 = phi ptr [ %2977, %2970 ], [ %2957, %2964 ]
  %2990 = phi i32 [ %2976, %2970 ], [ 1, %2964 ]
  %2991 = load i32, ptr %2989, align 4, !tbaa !5
  %2992 = add nsw i32 %2991, %2990
  store i32 %2992, ptr %2989, align 4, !tbaa !5
  br label %2993

2993:                                             ; preds = %2980, %2988, %2953, %2935
  %2994 = icmp eq i32 %2945, %5
  br i1 %2994, label %5616, label %2862, !llvm.loop !858

2995:                                             ; preds = %2845, %3131
  %2996 = phi i32 [ 0, %2845 ], [ %3080, %3131 ]
  %2997 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2846, label %2998, label %3067

2998:                                             ; preds = %2995, %3057
  %2999 = phi i32 [ %3066, %3057 ], [ 0, %2995 ]
  %3000 = phi i64 [ %3008, %3057 ], [ %2850, %2995 ]
  %3001 = phi i64 [ %3065, %3057 ], [ %2849, %2995 ]
  %3002 = phi i32 [ %3063, %3057 ], [ %2997, %2995 ]
  %3003 = sub i32 %2848, %2999
  %3004 = tail call i32 @llvm.smin.i32(i32 %3003, i32 0)
  %3005 = sub i32 %3003, %3004
  %3006 = zext i32 %3005 to i64
  %3007 = add nuw nsw i64 %3006, 1
  %3008 = add nsw i64 %3000, -1
  %3009 = icmp ult i32 %3005, 31
  br i1 %3009, label %3045, label %3010

3010:                                             ; preds = %2998
  %3011 = and i64 %3007, 8589934560
  %3012 = sub i64 %3001, %3011
  br label %3013

3013:                                             ; preds = %3013, %3010
  %3014 = phi i64 [ 0, %3010 ], [ %3037, %3013 ]
  %3015 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3010 ], [ %3033, %3013 ]
  %3016 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3010 ], [ %3034, %3013 ]
  %3017 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3010 ], [ %3035, %3013 ]
  %3018 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3010 ], [ %3036, %3013 ]
  %3019 = sub i64 %3001, %3014
  %3020 = getelementptr inbounds i32, ptr %11, i64 %3019
  %3021 = getelementptr inbounds i32, ptr %3020, i64 -7
  %3022 = load <8 x i32>, ptr %3021, align 4, !tbaa !5
  %3023 = shufflevector <8 x i32> %3022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3024 = getelementptr inbounds i32, ptr %3020, i64 -15
  %3025 = load <8 x i32>, ptr %3024, align 4, !tbaa !5
  %3026 = shufflevector <8 x i32> %3025, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3027 = getelementptr inbounds i32, ptr %3020, i64 -23
  %3028 = load <8 x i32>, ptr %3027, align 4, !tbaa !5
  %3029 = shufflevector <8 x i32> %3028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3030 = getelementptr inbounds i32, ptr %3020, i64 -31
  %3031 = load <8 x i32>, ptr %3030, align 4, !tbaa !5
  %3032 = shufflevector <8 x i32> %3031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3033 = mul <8 x i32> %3023, %3015
  %3034 = mul <8 x i32> %3026, %3016
  %3035 = mul <8 x i32> %3029, %3017
  %3036 = mul <8 x i32> %3032, %3018
  %3037 = add nuw i64 %3014, 32
  %3038 = icmp eq i64 %3037, %3011
  br i1 %3038, label %3039, label %3013, !llvm.loop !859

3039:                                             ; preds = %3013
  %3040 = mul <8 x i32> %3034, %3033
  %3041 = mul <8 x i32> %3035, %3040
  %3042 = mul <8 x i32> %3036, %3041
  %3043 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3042)
  %3044 = icmp eq i64 %3007, %3011
  br i1 %3044, label %3057, label %3045

3045:                                             ; preds = %2998, %3039
  %3046 = phi i64 [ %3001, %2998 ], [ %3012, %3039 ]
  %3047 = phi i32 [ 1, %2998 ], [ %3043, %3039 ]
  br label %3048

3048:                                             ; preds = %3045, %3048
  %3049 = phi i64 [ %3054, %3048 ], [ %3046, %3045 ]
  %3050 = phi i32 [ %3053, %3048 ], [ %3047, %3045 ]
  %3051 = getelementptr inbounds i32, ptr %11, i64 %3049
  %3052 = load i32, ptr %3051, align 4, !tbaa !5
  %3053 = mul nsw i32 %3052, %3050
  %3054 = add nsw i64 %3049, -1
  %3055 = trunc i64 %3049 to i32
  %3056 = icmp sgt i32 %3055, 0
  br i1 %3056, label %3048, label %3057, !llvm.loop !860

3057:                                             ; preds = %3048, %3039
  %3058 = phi i32 [ %3043, %3039 ], [ %3053, %3048 ]
  %3059 = and i64 %3008, 4294967295
  %3060 = getelementptr inbounds i32, ptr %6, i64 %3059
  %3061 = load i32, ptr %3060, align 4, !tbaa !5
  %3062 = mul nsw i32 %3061, %3058
  %3063 = add nsw i32 %3062, %3002
  %3064 = icmp sgt i64 %3000, 2
  %3065 = add nsw i64 %3001, -1
  %3066 = add i32 %2999, 1
  br i1 %3064, label %2998, label %3067, !llvm.loop !861

3067:                                             ; preds = %3057, %2995
  %3068 = phi i32 [ %2997, %2995 ], [ %3063, %3057 ]
  %3069 = icmp slt i32 %3068, %5
  br i1 %3069, label %3072, label %3070

3070:                                             ; preds = %3067
  %3071 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

3072:                                             ; preds = %3067
  %3073 = sext i32 %3068 to i64
  %3074 = getelementptr inbounds i64, ptr %2518, i64 %3073
  %3075 = load i64, ptr %3074, align 8, !tbaa !120
  %3076 = trunc i64 %3075 to i32
  %3077 = load i32, ptr %2520, align 4, !tbaa !5
  %3078 = tail call i32 @llvm.abs.i32(i32 %3076, i1 true)
  %3079 = tail call i32 @llvm.smax.i32(i32 %3077, i32 %3078)
  store i32 %3079, ptr %2520, align 4, !tbaa !5
  %3080 = add nuw nsw i32 %2996, 1
  br i1 %2847, label %3081, label %3131

3081:                                             ; preds = %3072
  %3082 = load i32, ptr %4, align 4, !tbaa !5
  %3083 = load i32, ptr %12, align 4, !tbaa !5
  %3084 = add nsw i32 %3083, -1
  %3085 = icmp slt i32 %3082, %3084
  br i1 %3085, label %3108, label %3086

3086:                                             ; preds = %3081
  %3087 = icmp eq i32 %3082, %3084
  br i1 %3087, label %3088, label %3124

3088:                                             ; preds = %3086
  store i32 0, ptr %4, align 4, !tbaa !5
  %3089 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3089, ptr %6, align 4, !tbaa !5
  br i1 %2852, label %3131, label %3090

3090:                                             ; preds = %3088, %3118
  %3091 = phi i64 [ %3122, %3118 ], [ 1, %3088 ]
  %3092 = getelementptr inbounds i32, ptr %4, i64 %3091
  %3093 = load i32, ptr %3092, align 4, !tbaa !5
  %3094 = getelementptr inbounds i32, ptr %12, i64 %3091
  %3095 = load i32, ptr %3094, align 4, !tbaa !5
  %3096 = add nsw i32 %3095, -1
  %3097 = icmp slt i32 %3093, %3096
  br i1 %3097, label %3098, label %3116

3098:                                             ; preds = %3090
  br i1 %3085, label %3108, label %3099

3099:                                             ; preds = %3098
  %3100 = shl i64 %3091, 32
  %3101 = add i64 %3100, -4294967296
  %3102 = ashr exact i64 %3101, 32
  %3103 = getelementptr inbounds i32, ptr %7, i64 %3102
  %3104 = load i32, ptr %3103, align 4, !tbaa !5
  %3105 = getelementptr inbounds i32, ptr %6, i64 %3091
  %3106 = load i32, ptr %3105, align 4, !tbaa !5
  %3107 = add nsw i32 %3106, %3104
  store i32 %3107, ptr %3105, align 4, !tbaa !5
  br label %3126

3108:                                             ; preds = %3081, %3098
  %3109 = phi i32 [ %3093, %3098 ], [ %3082, %3081 ]
  %3110 = phi ptr [ %3092, %3098 ], [ %4, %3081 ]
  %3111 = phi i64 [ %3091, %3098 ], [ 0, %3081 ]
  %3112 = add nsw i32 %3109, 1
  store i32 %3112, ptr %3110, align 4, !tbaa !5
  %3113 = getelementptr inbounds i32, ptr %7, i64 %3111
  %3114 = load i32, ptr %3113, align 4, !tbaa !5
  %3115 = getelementptr inbounds i32, ptr %6, i64 %3111
  br label %3126

3116:                                             ; preds = %3090
  %3117 = icmp eq i32 %3093, %3096
  br i1 %3117, label %3118, label %3124

3118:                                             ; preds = %3116
  store i32 0, ptr %3092, align 4, !tbaa !5
  %3119 = getelementptr inbounds i32, ptr %8, i64 %3091
  %3120 = load i32, ptr %3119, align 4, !tbaa !5
  %3121 = getelementptr inbounds i32, ptr %6, i64 %3091
  store i32 %3120, ptr %3121, align 4, !tbaa !5
  %3122 = add nuw nsw i64 %3091, 1
  %3123 = icmp eq i64 %3122, %2850
  br i1 %3123, label %3131, label %3090, !llvm.loop !862

3124:                                             ; preds = %3086, %3116
  %3125 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

3126:                                             ; preds = %3099, %3108
  %3127 = phi ptr [ %3115, %3108 ], [ %3092, %3099 ]
  %3128 = phi i32 [ %3114, %3108 ], [ 1, %3099 ]
  %3129 = load i32, ptr %3127, align 4, !tbaa !5
  %3130 = add nsw i32 %3129, %3128
  store i32 %3130, ptr %3127, align 4, !tbaa !5
  br label %3131

3131:                                             ; preds = %3118, %3126, %3088, %3072
  %3132 = icmp eq i32 %3080, %5
  br i1 %3132, label %5616, label %2995, !llvm.loop !863

3133:                                             ; preds = %2528
  %3134 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1639, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

3135:                                             ; preds = %18
  %3136 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3137 = load ptr, ptr %3136, align 8, !tbaa !9
  %3138 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3139 = load ptr, ptr %3138, align 8, !tbaa !9
  store i64 0, ptr %3139, align 8, !tbaa !120
  %3140 = icmp eq i32 %13, 0
  br i1 %3140, label %3141, label %3146

3141:                                             ; preds = %3135
  %3142 = load i64, ptr %3137, align 8, !tbaa !120
  %3143 = icmp eq i64 %3142, 0
  %3144 = tail call i64 @llvm.abs.i64(i64 %3142, i1 true)
  %3145 = select i1 %3143, i64 0, i64 %3144
  store i64 %3145, ptr %3139, align 8, !tbaa !120
  br label %5616

3146:                                             ; preds = %3135
  switch i32 %1, label %3747 [
    i32 1, label %3147
    i32 0, label %3455
  ]

3147:                                             ; preds = %3146
  %3148 = getelementptr inbounds i32, ptr %3, i64 %19
  %3149 = load i32, ptr %3148, align 4, !tbaa !5
  %3150 = icmp eq i32 %3149, 0
  %3151 = icmp sgt i32 %5, 0
  br i1 %3150, label %3161, label %3152

3152:                                             ; preds = %3147
  br i1 %3151, label %3153, label %5616

3153:                                             ; preds = %3152
  %3154 = icmp sgt i32 %13, 1
  %3155 = icmp sgt i32 %13, 0
  %3156 = add i32 %13, -2
  %3157 = zext i32 %3156 to i64
  %3158 = zext i32 %13 to i64
  %3159 = add nuw i32 %5, 1
  %3160 = icmp eq i32 %13, 1
  br label %3312

3161:                                             ; preds = %3147
  br i1 %3151, label %3162, label %5616

3162:                                             ; preds = %3161
  %3163 = icmp sgt i32 %13, 1
  %3164 = icmp sgt i32 %13, 0
  %3165 = add i32 %13, -2
  %3166 = zext i32 %3165 to i64
  %3167 = zext i32 %13 to i64
  %3168 = add nuw i32 %5, 1
  %3169 = icmp eq i32 %13, 1
  br label %3170

3170:                                             ; preds = %3162, %3310
  %3171 = phi i64 [ 0, %3162 ], [ %3260, %3310 ]
  %3172 = phi i32 [ 0, %3162 ], [ %3262, %3310 ]
  %3173 = phi double [ 0.000000e+00, %3162 ], [ %3261, %3310 ]
  %3174 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3163, label %3175, label %3244

3175:                                             ; preds = %3170, %3234
  %3176 = phi i32 [ %3243, %3234 ], [ 0, %3170 ]
  %3177 = phi i64 [ %3185, %3234 ], [ %3167, %3170 ]
  %3178 = phi i64 [ %3242, %3234 ], [ %3166, %3170 ]
  %3179 = phi i32 [ %3240, %3234 ], [ %3174, %3170 ]
  %3180 = sub i32 %3165, %3176
  %3181 = tail call i32 @llvm.smin.i32(i32 %3180, i32 0)
  %3182 = sub i32 %3180, %3181
  %3183 = zext i32 %3182 to i64
  %3184 = add nuw nsw i64 %3183, 1
  %3185 = add nsw i64 %3177, -1
  %3186 = icmp ult i32 %3182, 31
  br i1 %3186, label %3222, label %3187

3187:                                             ; preds = %3175
  %3188 = and i64 %3184, 8589934560
  %3189 = sub i64 %3178, %3188
  br label %3190

3190:                                             ; preds = %3190, %3187
  %3191 = phi i64 [ 0, %3187 ], [ %3214, %3190 ]
  %3192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3187 ], [ %3210, %3190 ]
  %3193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3187 ], [ %3211, %3190 ]
  %3194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3187 ], [ %3212, %3190 ]
  %3195 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3187 ], [ %3213, %3190 ]
  %3196 = sub i64 %3178, %3191
  %3197 = getelementptr inbounds i32, ptr %9, i64 %3196
  %3198 = getelementptr inbounds i32, ptr %3197, i64 -7
  %3199 = load <8 x i32>, ptr %3198, align 4, !tbaa !5
  %3200 = shufflevector <8 x i32> %3199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3201 = getelementptr inbounds i32, ptr %3197, i64 -15
  %3202 = load <8 x i32>, ptr %3201, align 4, !tbaa !5
  %3203 = shufflevector <8 x i32> %3202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3204 = getelementptr inbounds i32, ptr %3197, i64 -23
  %3205 = load <8 x i32>, ptr %3204, align 4, !tbaa !5
  %3206 = shufflevector <8 x i32> %3205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3207 = getelementptr inbounds i32, ptr %3197, i64 -31
  %3208 = load <8 x i32>, ptr %3207, align 4, !tbaa !5
  %3209 = shufflevector <8 x i32> %3208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3210 = mul <8 x i32> %3200, %3192
  %3211 = mul <8 x i32> %3203, %3193
  %3212 = mul <8 x i32> %3206, %3194
  %3213 = mul <8 x i32> %3209, %3195
  %3214 = add nuw i64 %3191, 32
  %3215 = icmp eq i64 %3214, %3188
  br i1 %3215, label %3216, label %3190, !llvm.loop !864

3216:                                             ; preds = %3190
  %3217 = mul <8 x i32> %3211, %3210
  %3218 = mul <8 x i32> %3212, %3217
  %3219 = mul <8 x i32> %3213, %3218
  %3220 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3219)
  %3221 = icmp eq i64 %3184, %3188
  br i1 %3221, label %3234, label %3222

3222:                                             ; preds = %3175, %3216
  %3223 = phi i64 [ %3178, %3175 ], [ %3189, %3216 ]
  %3224 = phi i32 [ 1, %3175 ], [ %3220, %3216 ]
  br label %3225

3225:                                             ; preds = %3222, %3225
  %3226 = phi i64 [ %3231, %3225 ], [ %3223, %3222 ]
  %3227 = phi i32 [ %3230, %3225 ], [ %3224, %3222 ]
  %3228 = getelementptr inbounds i32, ptr %9, i64 %3226
  %3229 = load i32, ptr %3228, align 4, !tbaa !5
  %3230 = mul nsw i32 %3229, %3227
  %3231 = add nsw i64 %3226, -1
  %3232 = trunc i64 %3226 to i32
  %3233 = icmp sgt i32 %3232, 0
  br i1 %3233, label %3225, label %3234, !llvm.loop !865

3234:                                             ; preds = %3225, %3216
  %3235 = phi i32 [ %3220, %3216 ], [ %3230, %3225 ]
  %3236 = and i64 %3185, 4294967295
  %3237 = getelementptr inbounds i32, ptr %6, i64 %3236
  %3238 = load i32, ptr %3237, align 4, !tbaa !5
  %3239 = mul nsw i32 %3238, %3235
  %3240 = add nsw i32 %3239, %3179
  %3241 = icmp sgt i64 %3177, 2
  %3242 = add nsw i64 %3178, -1
  %3243 = add i32 %3176, 1
  br i1 %3241, label %3175, label %3244, !llvm.loop !866

3244:                                             ; preds = %3234, %3170
  %3245 = phi i32 [ %3174, %3170 ], [ %3240, %3234 ]
  %3246 = sext i32 %3245 to i64
  %3247 = getelementptr inbounds double, ptr %2, i64 %3246
  %3248 = load double, ptr %3247, align 8, !tbaa !18
  %3249 = getelementptr inbounds i64, ptr %3137, i64 %3246
  %3250 = load i64, ptr %3249, align 8, !tbaa !120
  %3251 = sitofp i64 %3171 to double
  %3252 = sitofp i64 %3250 to double
  %3253 = fmul fast double %3248, %3252
  %3254 = fcmp fast uge double %3253, 0.000000e+00
  %3255 = fneg fast double %3253
  %3256 = tail call fast double @llvm.fabs.f64(double %3253)
  %3257 = fcmp fast ole double %3256, %3251
  %3258 = select nnan ninf i1 %3254, double %3253, double %3255
  %3259 = select i1 %3257, double %3251, double %3258
  %3260 = fptosi double %3259 to i64
  store i64 %3260, ptr %3139, align 8, !tbaa !120
  %3261 = fadd fast double %3248, %3173
  %3262 = add nuw nsw i32 %3172, 1
  br i1 %3164, label %3263, label %3310

3263:                                             ; preds = %3244
  %3264 = load i32, ptr %4, align 4, !tbaa !5
  %3265 = load i32, ptr %12, align 4, !tbaa !5
  %3266 = add nsw i32 %3265, -1
  %3267 = icmp slt i32 %3264, %3266
  br i1 %3267, label %3287, label %3268

3268:                                             ; preds = %3263
  %3269 = icmp eq i32 %3264, %3266
  br i1 %3269, label %3270, label %3303

3270:                                             ; preds = %3268
  store i32 0, ptr %4, align 4, !tbaa !5
  %3271 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3271, ptr %6, align 4, !tbaa !5
  br i1 %3169, label %3310, label %3272

3272:                                             ; preds = %3270, %3297
  %3273 = phi i64 [ %3301, %3297 ], [ 1, %3270 ]
  %3274 = getelementptr inbounds i32, ptr %4, i64 %3273
  %3275 = load i32, ptr %3274, align 4, !tbaa !5
  %3276 = getelementptr inbounds i32, ptr %12, i64 %3273
  %3277 = load i32, ptr %3276, align 4, !tbaa !5
  %3278 = add nsw i32 %3277, -1
  %3279 = icmp slt i32 %3275, %3278
  br i1 %3279, label %3280, label %3295

3280:                                             ; preds = %3272
  br i1 %3267, label %3287, label %3281

3281:                                             ; preds = %3280
  %3282 = getelementptr inbounds i32, ptr %7, i64 %3273
  %3283 = load i32, ptr %3282, align 4, !tbaa !5
  %3284 = getelementptr inbounds i32, ptr %6, i64 %3273
  %3285 = load i32, ptr %3284, align 4, !tbaa !5
  %3286 = add nsw i32 %3285, %3283
  store i32 %3286, ptr %3284, align 4, !tbaa !5
  br label %3305

3287:                                             ; preds = %3263, %3280
  %3288 = phi i32 [ %3275, %3280 ], [ %3264, %3263 ]
  %3289 = phi ptr [ %3274, %3280 ], [ %4, %3263 ]
  %3290 = phi i64 [ %3273, %3280 ], [ 0, %3263 ]
  %3291 = add nsw i32 %3288, 1
  store i32 %3291, ptr %3289, align 4, !tbaa !5
  %3292 = getelementptr inbounds i32, ptr %7, i64 %3290
  %3293 = load i32, ptr %3292, align 4, !tbaa !5
  %3294 = getelementptr inbounds i32, ptr %6, i64 %3290
  br label %3305

3295:                                             ; preds = %3272
  %3296 = icmp eq i32 %3275, %3278
  br i1 %3296, label %3297, label %3303

3297:                                             ; preds = %3295
  store i32 0, ptr %3274, align 4, !tbaa !5
  %3298 = getelementptr inbounds i32, ptr %8, i64 %3273
  %3299 = load i32, ptr %3298, align 4, !tbaa !5
  %3300 = getelementptr inbounds i32, ptr %6, i64 %3273
  store i32 %3299, ptr %3300, align 4, !tbaa !5
  %3301 = add nuw nsw i64 %3273, 1
  %3302 = icmp eq i64 %3301, %3167
  br i1 %3302, label %3310, label %3272, !llvm.loop !867

3303:                                             ; preds = %3268, %3295
  %3304 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

3305:                                             ; preds = %3281, %3287
  %3306 = phi ptr [ %3294, %3287 ], [ %3274, %3281 ]
  %3307 = phi i32 [ %3293, %3287 ], [ 1, %3281 ]
  %3308 = load i32, ptr %3306, align 4, !tbaa !5
  %3309 = add nsw i32 %3308, %3307
  store i32 %3309, ptr %3306, align 4, !tbaa !5
  br label %3310

3310:                                             ; preds = %3297, %3305, %3270, %3244
  %3311 = icmp eq i32 %3262, %5
  br i1 %3311, label %5616, label %3170, !llvm.loop !868

3312:                                             ; preds = %3153, %3453
  %3313 = phi i64 [ 0, %3153 ], [ %3401, %3453 ]
  %3314 = phi i32 [ 0, %3153 ], [ %3402, %3453 ]
  %3315 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3154, label %3316, label %3385

3316:                                             ; preds = %3312, %3375
  %3317 = phi i32 [ %3384, %3375 ], [ 0, %3312 ]
  %3318 = phi i64 [ %3326, %3375 ], [ %3158, %3312 ]
  %3319 = phi i64 [ %3383, %3375 ], [ %3157, %3312 ]
  %3320 = phi i32 [ %3381, %3375 ], [ %3315, %3312 ]
  %3321 = sub i32 %3156, %3317
  %3322 = tail call i32 @llvm.smin.i32(i32 %3321, i32 0)
  %3323 = sub i32 %3321, %3322
  %3324 = zext i32 %3323 to i64
  %3325 = add nuw nsw i64 %3324, 1
  %3326 = add nsw i64 %3318, -1
  %3327 = icmp ult i32 %3323, 31
  br i1 %3327, label %3363, label %3328

3328:                                             ; preds = %3316
  %3329 = and i64 %3325, 8589934560
  %3330 = sub i64 %3319, %3329
  br label %3331

3331:                                             ; preds = %3331, %3328
  %3332 = phi i64 [ 0, %3328 ], [ %3355, %3331 ]
  %3333 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3328 ], [ %3351, %3331 ]
  %3334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3328 ], [ %3352, %3331 ]
  %3335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3328 ], [ %3353, %3331 ]
  %3336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3328 ], [ %3354, %3331 ]
  %3337 = sub i64 %3319, %3332
  %3338 = getelementptr inbounds i32, ptr %11, i64 %3337
  %3339 = getelementptr inbounds i32, ptr %3338, i64 -7
  %3340 = load <8 x i32>, ptr %3339, align 4, !tbaa !5
  %3341 = shufflevector <8 x i32> %3340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3342 = getelementptr inbounds i32, ptr %3338, i64 -15
  %3343 = load <8 x i32>, ptr %3342, align 4, !tbaa !5
  %3344 = shufflevector <8 x i32> %3343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3345 = getelementptr inbounds i32, ptr %3338, i64 -23
  %3346 = load <8 x i32>, ptr %3345, align 4, !tbaa !5
  %3347 = shufflevector <8 x i32> %3346, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3348 = getelementptr inbounds i32, ptr %3338, i64 -31
  %3349 = load <8 x i32>, ptr %3348, align 4, !tbaa !5
  %3350 = shufflevector <8 x i32> %3349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3351 = mul <8 x i32> %3341, %3333
  %3352 = mul <8 x i32> %3344, %3334
  %3353 = mul <8 x i32> %3347, %3335
  %3354 = mul <8 x i32> %3350, %3336
  %3355 = add nuw i64 %3332, 32
  %3356 = icmp eq i64 %3355, %3329
  br i1 %3356, label %3357, label %3331, !llvm.loop !869

3357:                                             ; preds = %3331
  %3358 = mul <8 x i32> %3352, %3351
  %3359 = mul <8 x i32> %3353, %3358
  %3360 = mul <8 x i32> %3354, %3359
  %3361 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3360)
  %3362 = icmp eq i64 %3325, %3329
  br i1 %3362, label %3375, label %3363

3363:                                             ; preds = %3316, %3357
  %3364 = phi i64 [ %3319, %3316 ], [ %3330, %3357 ]
  %3365 = phi i32 [ 1, %3316 ], [ %3361, %3357 ]
  br label %3366

3366:                                             ; preds = %3363, %3366
  %3367 = phi i64 [ %3372, %3366 ], [ %3364, %3363 ]
  %3368 = phi i32 [ %3371, %3366 ], [ %3365, %3363 ]
  %3369 = getelementptr inbounds i32, ptr %11, i64 %3367
  %3370 = load i32, ptr %3369, align 4, !tbaa !5
  %3371 = mul nsw i32 %3370, %3368
  %3372 = add nsw i64 %3367, -1
  %3373 = trunc i64 %3367 to i32
  %3374 = icmp sgt i32 %3373, 0
  br i1 %3374, label %3366, label %3375, !llvm.loop !870

3375:                                             ; preds = %3366, %3357
  %3376 = phi i32 [ %3361, %3357 ], [ %3371, %3366 ]
  %3377 = and i64 %3326, 4294967295
  %3378 = getelementptr inbounds i32, ptr %6, i64 %3377
  %3379 = load i32, ptr %3378, align 4, !tbaa !5
  %3380 = mul nsw i32 %3379, %3376
  %3381 = add nsw i32 %3380, %3320
  %3382 = icmp sgt i64 %3318, 2
  %3383 = add nsw i64 %3319, -1
  %3384 = add i32 %3317, 1
  br i1 %3382, label %3316, label %3385, !llvm.loop !871

3385:                                             ; preds = %3375, %3312
  %3386 = phi i32 [ %3315, %3312 ], [ %3381, %3375 ]
  %3387 = icmp slt i32 %3386, %5
  br i1 %3387, label %3390, label %3388

3388:                                             ; preds = %3385
  %3389 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

3390:                                             ; preds = %3385
  %3391 = sext i32 %3386 to i64
  %3392 = getelementptr inbounds i64, ptr %3137, i64 %3391
  %3393 = load i64, ptr %3392, align 8, !tbaa !120
  %3394 = sitofp i64 %3313 to double
  %3395 = sitofp i64 %3393 to double
  %3396 = icmp slt i64 %3393, 0
  %3397 = fneg fast double %3395
  %3398 = select i1 %3396, double %3397, double %3395
  %3399 = fcmp fast ole double %3398, %3394
  %3400 = select fast i1 %3399, double %3394, double %3398
  %3401 = fptosi double %3400 to i64
  store i64 %3401, ptr %3139, align 8, !tbaa !120
  %3402 = add nuw nsw i32 %3314, 1
  br i1 %3155, label %3403, label %3453

3403:                                             ; preds = %3390
  %3404 = load i32, ptr %4, align 4, !tbaa !5
  %3405 = load i32, ptr %12, align 4, !tbaa !5
  %3406 = add nsw i32 %3405, -1
  %3407 = icmp slt i32 %3404, %3406
  br i1 %3407, label %3430, label %3408

3408:                                             ; preds = %3403
  %3409 = icmp eq i32 %3404, %3406
  br i1 %3409, label %3410, label %3446

3410:                                             ; preds = %3408
  store i32 0, ptr %4, align 4, !tbaa !5
  %3411 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3411, ptr %6, align 4, !tbaa !5
  br i1 %3160, label %3453, label %3412

3412:                                             ; preds = %3410, %3440
  %3413 = phi i64 [ %3444, %3440 ], [ 1, %3410 ]
  %3414 = getelementptr inbounds i32, ptr %4, i64 %3413
  %3415 = load i32, ptr %3414, align 4, !tbaa !5
  %3416 = getelementptr inbounds i32, ptr %12, i64 %3413
  %3417 = load i32, ptr %3416, align 4, !tbaa !5
  %3418 = add nsw i32 %3417, -1
  %3419 = icmp slt i32 %3415, %3418
  br i1 %3419, label %3420, label %3438

3420:                                             ; preds = %3412
  br i1 %3407, label %3430, label %3421

3421:                                             ; preds = %3420
  %3422 = shl i64 %3413, 32
  %3423 = add i64 %3422, -4294967296
  %3424 = ashr exact i64 %3423, 32
  %3425 = getelementptr inbounds i32, ptr %7, i64 %3424
  %3426 = load i32, ptr %3425, align 4, !tbaa !5
  %3427 = getelementptr inbounds i32, ptr %6, i64 %3413
  %3428 = load i32, ptr %3427, align 4, !tbaa !5
  %3429 = add nsw i32 %3428, %3426
  store i32 %3429, ptr %3427, align 4, !tbaa !5
  br label %3448

3430:                                             ; preds = %3403, %3420
  %3431 = phi i32 [ %3415, %3420 ], [ %3404, %3403 ]
  %3432 = phi ptr [ %3414, %3420 ], [ %4, %3403 ]
  %3433 = phi i64 [ %3413, %3420 ], [ 0, %3403 ]
  %3434 = add nsw i32 %3431, 1
  store i32 %3434, ptr %3432, align 4, !tbaa !5
  %3435 = getelementptr inbounds i32, ptr %7, i64 %3433
  %3436 = load i32, ptr %3435, align 4, !tbaa !5
  %3437 = getelementptr inbounds i32, ptr %6, i64 %3433
  br label %3448

3438:                                             ; preds = %3412
  %3439 = icmp eq i32 %3415, %3418
  br i1 %3439, label %3440, label %3446

3440:                                             ; preds = %3438
  store i32 0, ptr %3414, align 4, !tbaa !5
  %3441 = getelementptr inbounds i32, ptr %8, i64 %3413
  %3442 = load i32, ptr %3441, align 4, !tbaa !5
  %3443 = getelementptr inbounds i32, ptr %6, i64 %3413
  store i32 %3442, ptr %3443, align 4, !tbaa !5
  %3444 = add nuw nsw i64 %3413, 1
  %3445 = icmp eq i64 %3444, %3158
  br i1 %3445, label %3453, label %3412, !llvm.loop !872

3446:                                             ; preds = %3408, %3438
  %3447 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

3448:                                             ; preds = %3421, %3430
  %3449 = phi ptr [ %3437, %3430 ], [ %3414, %3421 ]
  %3450 = phi i32 [ %3436, %3430 ], [ 1, %3421 ]
  %3451 = load i32, ptr %3449, align 4, !tbaa !5
  %3452 = add nsw i32 %3451, %3450
  store i32 %3452, ptr %3449, align 4, !tbaa !5
  br label %3453

3453:                                             ; preds = %3440, %3448, %3410, %3390
  %3454 = icmp eq i32 %3402, %5
  br i1 %3454, label %5616, label %3312, !llvm.loop !873

3455:                                             ; preds = %3146
  %3456 = getelementptr inbounds i32, ptr %3, i64 %19
  %3457 = load i32, ptr %3456, align 4, !tbaa !5
  %3458 = icmp eq i32 %3457, 0
  %3459 = icmp sgt i32 %5, 0
  br i1 %3458, label %3469, label %3460

3460:                                             ; preds = %3455
  br i1 %3459, label %3461, label %5616

3461:                                             ; preds = %3460
  %3462 = icmp sgt i32 %13, 1
  %3463 = icmp sgt i32 %13, 0
  %3464 = add i32 %13, -2
  %3465 = zext i32 %3464 to i64
  %3466 = zext i32 %13 to i64
  %3467 = add nuw i32 %5, 1
  %3468 = icmp eq i32 %13, 1
  br label %3610

3469:                                             ; preds = %3455
  br i1 %3459, label %3470, label %5616

3470:                                             ; preds = %3469
  %3471 = icmp sgt i32 %13, 1
  %3472 = icmp sgt i32 %13, 0
  %3473 = add i32 %13, -2
  %3474 = zext i32 %3473 to i64
  %3475 = zext i32 %13 to i64
  %3476 = add nuw i32 %5, 1
  %3477 = icmp eq i32 %13, 1
  br label %3478

3478:                                             ; preds = %3470, %3608
  %3479 = phi i64 [ 0, %3470 ], [ %3558, %3608 ]
  %3480 = phi i32 [ 0, %3470 ], [ %3560, %3608 ]
  %3481 = phi double [ 0.000000e+00, %3470 ], [ %3559, %3608 ]
  %3482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3471, label %3483, label %3552

3483:                                             ; preds = %3478, %3542
  %3484 = phi i32 [ %3551, %3542 ], [ 0, %3478 ]
  %3485 = phi i64 [ %3493, %3542 ], [ %3475, %3478 ]
  %3486 = phi i64 [ %3550, %3542 ], [ %3474, %3478 ]
  %3487 = phi i32 [ %3548, %3542 ], [ %3482, %3478 ]
  %3488 = sub i32 %3473, %3484
  %3489 = tail call i32 @llvm.smin.i32(i32 %3488, i32 0)
  %3490 = sub i32 %3488, %3489
  %3491 = zext i32 %3490 to i64
  %3492 = add nuw nsw i64 %3491, 1
  %3493 = add nsw i64 %3485, -1
  %3494 = icmp ult i32 %3490, 31
  br i1 %3494, label %3530, label %3495

3495:                                             ; preds = %3483
  %3496 = and i64 %3492, 8589934560
  %3497 = sub i64 %3486, %3496
  br label %3498

3498:                                             ; preds = %3498, %3495
  %3499 = phi i64 [ 0, %3495 ], [ %3522, %3498 ]
  %3500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3518, %3498 ]
  %3501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3519, %3498 ]
  %3502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3520, %3498 ]
  %3503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3521, %3498 ]
  %3504 = sub i64 %3486, %3499
  %3505 = getelementptr inbounds i32, ptr %9, i64 %3504
  %3506 = getelementptr inbounds i32, ptr %3505, i64 -7
  %3507 = load <8 x i32>, ptr %3506, align 4, !tbaa !5
  %3508 = shufflevector <8 x i32> %3507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3509 = getelementptr inbounds i32, ptr %3505, i64 -15
  %3510 = load <8 x i32>, ptr %3509, align 4, !tbaa !5
  %3511 = shufflevector <8 x i32> %3510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3512 = getelementptr inbounds i32, ptr %3505, i64 -23
  %3513 = load <8 x i32>, ptr %3512, align 4, !tbaa !5
  %3514 = shufflevector <8 x i32> %3513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3515 = getelementptr inbounds i32, ptr %3505, i64 -31
  %3516 = load <8 x i32>, ptr %3515, align 4, !tbaa !5
  %3517 = shufflevector <8 x i32> %3516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3518 = mul <8 x i32> %3508, %3500
  %3519 = mul <8 x i32> %3511, %3501
  %3520 = mul <8 x i32> %3514, %3502
  %3521 = mul <8 x i32> %3517, %3503
  %3522 = add nuw i64 %3499, 32
  %3523 = icmp eq i64 %3522, %3496
  br i1 %3523, label %3524, label %3498, !llvm.loop !874

3524:                                             ; preds = %3498
  %3525 = mul <8 x i32> %3519, %3518
  %3526 = mul <8 x i32> %3520, %3525
  %3527 = mul <8 x i32> %3521, %3526
  %3528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3527)
  %3529 = icmp eq i64 %3492, %3496
  br i1 %3529, label %3542, label %3530

3530:                                             ; preds = %3483, %3524
  %3531 = phi i64 [ %3486, %3483 ], [ %3497, %3524 ]
  %3532 = phi i32 [ 1, %3483 ], [ %3528, %3524 ]
  br label %3533

3533:                                             ; preds = %3530, %3533
  %3534 = phi i64 [ %3539, %3533 ], [ %3531, %3530 ]
  %3535 = phi i32 [ %3538, %3533 ], [ %3532, %3530 ]
  %3536 = getelementptr inbounds i32, ptr %9, i64 %3534
  %3537 = load i32, ptr %3536, align 4, !tbaa !5
  %3538 = mul nsw i32 %3537, %3535
  %3539 = add nsw i64 %3534, -1
  %3540 = trunc i64 %3534 to i32
  %3541 = icmp sgt i32 %3540, 0
  br i1 %3541, label %3533, label %3542, !llvm.loop !875

3542:                                             ; preds = %3533, %3524
  %3543 = phi i32 [ %3528, %3524 ], [ %3538, %3533 ]
  %3544 = and i64 %3493, 4294967295
  %3545 = getelementptr inbounds i32, ptr %6, i64 %3544
  %3546 = load i32, ptr %3545, align 4, !tbaa !5
  %3547 = mul nsw i32 %3546, %3543
  %3548 = add nsw i32 %3547, %3487
  %3549 = icmp sgt i64 %3485, 2
  %3550 = add nsw i64 %3486, -1
  %3551 = add i32 %3484, 1
  br i1 %3549, label %3483, label %3552, !llvm.loop !876

3552:                                             ; preds = %3542, %3478
  %3553 = phi i32 [ %3482, %3478 ], [ %3548, %3542 ]
  %3554 = sext i32 %3553 to i64
  %3555 = getelementptr inbounds i64, ptr %3137, i64 %3554
  %3556 = load i64, ptr %3555, align 8, !tbaa !120
  %3557 = tail call i64 @llvm.abs.i64(i64 %3556, i1 true)
  %3558 = tail call i64 @llvm.smax.i64(i64 %3479, i64 %3557)
  store i64 %3558, ptr %3139, align 8, !tbaa !120
  %3559 = fadd fast double %3481, 1.000000e+00
  %3560 = add nuw nsw i32 %3480, 1
  br i1 %3472, label %3561, label %3608

3561:                                             ; preds = %3552
  %3562 = load i32, ptr %4, align 4, !tbaa !5
  %3563 = load i32, ptr %12, align 4, !tbaa !5
  %3564 = add nsw i32 %3563, -1
  %3565 = icmp slt i32 %3562, %3564
  br i1 %3565, label %3585, label %3566

3566:                                             ; preds = %3561
  %3567 = icmp eq i32 %3562, %3564
  br i1 %3567, label %3568, label %3601

3568:                                             ; preds = %3566
  store i32 0, ptr %4, align 4, !tbaa !5
  %3569 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3569, ptr %6, align 4, !tbaa !5
  br i1 %3477, label %3608, label %3570

3570:                                             ; preds = %3568, %3595
  %3571 = phi i64 [ %3599, %3595 ], [ 1, %3568 ]
  %3572 = getelementptr inbounds i32, ptr %4, i64 %3571
  %3573 = load i32, ptr %3572, align 4, !tbaa !5
  %3574 = getelementptr inbounds i32, ptr %12, i64 %3571
  %3575 = load i32, ptr %3574, align 4, !tbaa !5
  %3576 = add nsw i32 %3575, -1
  %3577 = icmp slt i32 %3573, %3576
  br i1 %3577, label %3578, label %3593

3578:                                             ; preds = %3570
  br i1 %3565, label %3585, label %3579

3579:                                             ; preds = %3578
  %3580 = getelementptr inbounds i32, ptr %7, i64 %3571
  %3581 = load i32, ptr %3580, align 4, !tbaa !5
  %3582 = getelementptr inbounds i32, ptr %6, i64 %3571
  %3583 = load i32, ptr %3582, align 4, !tbaa !5
  %3584 = add nsw i32 %3583, %3581
  store i32 %3584, ptr %3582, align 4, !tbaa !5
  br label %3603

3585:                                             ; preds = %3561, %3578
  %3586 = phi i32 [ %3573, %3578 ], [ %3562, %3561 ]
  %3587 = phi ptr [ %3572, %3578 ], [ %4, %3561 ]
  %3588 = phi i64 [ %3571, %3578 ], [ 0, %3561 ]
  %3589 = add nsw i32 %3586, 1
  store i32 %3589, ptr %3587, align 4, !tbaa !5
  %3590 = getelementptr inbounds i32, ptr %7, i64 %3588
  %3591 = load i32, ptr %3590, align 4, !tbaa !5
  %3592 = getelementptr inbounds i32, ptr %6, i64 %3588
  br label %3603

3593:                                             ; preds = %3570
  %3594 = icmp eq i32 %3573, %3576
  br i1 %3594, label %3595, label %3601

3595:                                             ; preds = %3593
  store i32 0, ptr %3572, align 4, !tbaa !5
  %3596 = getelementptr inbounds i32, ptr %8, i64 %3571
  %3597 = load i32, ptr %3596, align 4, !tbaa !5
  %3598 = getelementptr inbounds i32, ptr %6, i64 %3571
  store i32 %3597, ptr %3598, align 4, !tbaa !5
  %3599 = add nuw nsw i64 %3571, 1
  %3600 = icmp eq i64 %3599, %3475
  br i1 %3600, label %3608, label %3570, !llvm.loop !877

3601:                                             ; preds = %3566, %3593
  %3602 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

3603:                                             ; preds = %3579, %3585
  %3604 = phi ptr [ %3592, %3585 ], [ %3572, %3579 ]
  %3605 = phi i32 [ %3591, %3585 ], [ 1, %3579 ]
  %3606 = load i32, ptr %3604, align 4, !tbaa !5
  %3607 = add nsw i32 %3606, %3605
  store i32 %3607, ptr %3604, align 4, !tbaa !5
  br label %3608

3608:                                             ; preds = %3595, %3603, %3568, %3552
  %3609 = icmp eq i32 %3560, %5
  br i1 %3609, label %5616, label %3478, !llvm.loop !878

3610:                                             ; preds = %3461, %3745
  %3611 = phi i64 [ 0, %3461 ], [ %3693, %3745 ]
  %3612 = phi i32 [ 0, %3461 ], [ %3694, %3745 ]
  %3613 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3462, label %3614, label %3683

3614:                                             ; preds = %3610, %3673
  %3615 = phi i32 [ %3682, %3673 ], [ 0, %3610 ]
  %3616 = phi i64 [ %3624, %3673 ], [ %3466, %3610 ]
  %3617 = phi i64 [ %3681, %3673 ], [ %3465, %3610 ]
  %3618 = phi i32 [ %3679, %3673 ], [ %3613, %3610 ]
  %3619 = sub i32 %3464, %3615
  %3620 = tail call i32 @llvm.smin.i32(i32 %3619, i32 0)
  %3621 = sub i32 %3619, %3620
  %3622 = zext i32 %3621 to i64
  %3623 = add nuw nsw i64 %3622, 1
  %3624 = add nsw i64 %3616, -1
  %3625 = icmp ult i32 %3621, 31
  br i1 %3625, label %3661, label %3626

3626:                                             ; preds = %3614
  %3627 = and i64 %3623, 8589934560
  %3628 = sub i64 %3617, %3627
  br label %3629

3629:                                             ; preds = %3629, %3626
  %3630 = phi i64 [ 0, %3626 ], [ %3653, %3629 ]
  %3631 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3626 ], [ %3649, %3629 ]
  %3632 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3626 ], [ %3650, %3629 ]
  %3633 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3626 ], [ %3651, %3629 ]
  %3634 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3626 ], [ %3652, %3629 ]
  %3635 = sub i64 %3617, %3630
  %3636 = getelementptr inbounds i32, ptr %11, i64 %3635
  %3637 = getelementptr inbounds i32, ptr %3636, i64 -7
  %3638 = load <8 x i32>, ptr %3637, align 4, !tbaa !5
  %3639 = shufflevector <8 x i32> %3638, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3640 = getelementptr inbounds i32, ptr %3636, i64 -15
  %3641 = load <8 x i32>, ptr %3640, align 4, !tbaa !5
  %3642 = shufflevector <8 x i32> %3641, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3643 = getelementptr inbounds i32, ptr %3636, i64 -23
  %3644 = load <8 x i32>, ptr %3643, align 4, !tbaa !5
  %3645 = shufflevector <8 x i32> %3644, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3646 = getelementptr inbounds i32, ptr %3636, i64 -31
  %3647 = load <8 x i32>, ptr %3646, align 4, !tbaa !5
  %3648 = shufflevector <8 x i32> %3647, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3649 = mul <8 x i32> %3639, %3631
  %3650 = mul <8 x i32> %3642, %3632
  %3651 = mul <8 x i32> %3645, %3633
  %3652 = mul <8 x i32> %3648, %3634
  %3653 = add nuw i64 %3630, 32
  %3654 = icmp eq i64 %3653, %3627
  br i1 %3654, label %3655, label %3629, !llvm.loop !879

3655:                                             ; preds = %3629
  %3656 = mul <8 x i32> %3650, %3649
  %3657 = mul <8 x i32> %3651, %3656
  %3658 = mul <8 x i32> %3652, %3657
  %3659 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3658)
  %3660 = icmp eq i64 %3623, %3627
  br i1 %3660, label %3673, label %3661

3661:                                             ; preds = %3614, %3655
  %3662 = phi i64 [ %3617, %3614 ], [ %3628, %3655 ]
  %3663 = phi i32 [ 1, %3614 ], [ %3659, %3655 ]
  br label %3664

3664:                                             ; preds = %3661, %3664
  %3665 = phi i64 [ %3670, %3664 ], [ %3662, %3661 ]
  %3666 = phi i32 [ %3669, %3664 ], [ %3663, %3661 ]
  %3667 = getelementptr inbounds i32, ptr %11, i64 %3665
  %3668 = load i32, ptr %3667, align 4, !tbaa !5
  %3669 = mul nsw i32 %3668, %3666
  %3670 = add nsw i64 %3665, -1
  %3671 = trunc i64 %3665 to i32
  %3672 = icmp sgt i32 %3671, 0
  br i1 %3672, label %3664, label %3673, !llvm.loop !880

3673:                                             ; preds = %3664, %3655
  %3674 = phi i32 [ %3659, %3655 ], [ %3669, %3664 ]
  %3675 = and i64 %3624, 4294967295
  %3676 = getelementptr inbounds i32, ptr %6, i64 %3675
  %3677 = load i32, ptr %3676, align 4, !tbaa !5
  %3678 = mul nsw i32 %3677, %3674
  %3679 = add nsw i32 %3678, %3618
  %3680 = icmp sgt i64 %3616, 2
  %3681 = add nsw i64 %3617, -1
  %3682 = add i32 %3615, 1
  br i1 %3680, label %3614, label %3683, !llvm.loop !881

3683:                                             ; preds = %3673, %3610
  %3684 = phi i32 [ %3613, %3610 ], [ %3679, %3673 ]
  %3685 = icmp slt i32 %3684, %5
  br i1 %3685, label %3688, label %3686

3686:                                             ; preds = %3683
  %3687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

3688:                                             ; preds = %3683
  %3689 = sext i32 %3684 to i64
  %3690 = getelementptr inbounds i64, ptr %3137, i64 %3689
  %3691 = load i64, ptr %3690, align 8, !tbaa !120
  %3692 = tail call i64 @llvm.abs.i64(i64 %3691, i1 true)
  %3693 = tail call i64 @llvm.smax.i64(i64 %3611, i64 %3692)
  store i64 %3693, ptr %3139, align 8, !tbaa !120
  %3694 = add nuw nsw i32 %3612, 1
  br i1 %3463, label %3695, label %3745

3695:                                             ; preds = %3688
  %3696 = load i32, ptr %4, align 4, !tbaa !5
  %3697 = load i32, ptr %12, align 4, !tbaa !5
  %3698 = add nsw i32 %3697, -1
  %3699 = icmp slt i32 %3696, %3698
  br i1 %3699, label %3722, label %3700

3700:                                             ; preds = %3695
  %3701 = icmp eq i32 %3696, %3698
  br i1 %3701, label %3702, label %3738

3702:                                             ; preds = %3700
  store i32 0, ptr %4, align 4, !tbaa !5
  %3703 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3703, ptr %6, align 4, !tbaa !5
  br i1 %3468, label %3745, label %3704

3704:                                             ; preds = %3702, %3732
  %3705 = phi i64 [ %3736, %3732 ], [ 1, %3702 ]
  %3706 = getelementptr inbounds i32, ptr %4, i64 %3705
  %3707 = load i32, ptr %3706, align 4, !tbaa !5
  %3708 = getelementptr inbounds i32, ptr %12, i64 %3705
  %3709 = load i32, ptr %3708, align 4, !tbaa !5
  %3710 = add nsw i32 %3709, -1
  %3711 = icmp slt i32 %3707, %3710
  br i1 %3711, label %3712, label %3730

3712:                                             ; preds = %3704
  br i1 %3699, label %3722, label %3713

3713:                                             ; preds = %3712
  %3714 = shl i64 %3705, 32
  %3715 = add i64 %3714, -4294967296
  %3716 = ashr exact i64 %3715, 32
  %3717 = getelementptr inbounds i32, ptr %7, i64 %3716
  %3718 = load i32, ptr %3717, align 4, !tbaa !5
  %3719 = getelementptr inbounds i32, ptr %6, i64 %3705
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = add nsw i32 %3720, %3718
  store i32 %3721, ptr %3719, align 4, !tbaa !5
  br label %3740

3722:                                             ; preds = %3695, %3712
  %3723 = phi i32 [ %3707, %3712 ], [ %3696, %3695 ]
  %3724 = phi ptr [ %3706, %3712 ], [ %4, %3695 ]
  %3725 = phi i64 [ %3705, %3712 ], [ 0, %3695 ]
  %3726 = add nsw i32 %3723, 1
  store i32 %3726, ptr %3724, align 4, !tbaa !5
  %3727 = getelementptr inbounds i32, ptr %7, i64 %3725
  %3728 = load i32, ptr %3727, align 4, !tbaa !5
  %3729 = getelementptr inbounds i32, ptr %6, i64 %3725
  br label %3740

3730:                                             ; preds = %3704
  %3731 = icmp eq i32 %3707, %3710
  br i1 %3731, label %3732, label %3738

3732:                                             ; preds = %3730
  store i32 0, ptr %3706, align 4, !tbaa !5
  %3733 = getelementptr inbounds i32, ptr %8, i64 %3705
  %3734 = load i32, ptr %3733, align 4, !tbaa !5
  %3735 = getelementptr inbounds i32, ptr %6, i64 %3705
  store i32 %3734, ptr %3735, align 4, !tbaa !5
  %3736 = add nuw nsw i64 %3705, 1
  %3737 = icmp eq i64 %3736, %3466
  br i1 %3737, label %3745, label %3704, !llvm.loop !882

3738:                                             ; preds = %3700, %3730
  %3739 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

3740:                                             ; preds = %3713, %3722
  %3741 = phi ptr [ %3729, %3722 ], [ %3706, %3713 ]
  %3742 = phi i32 [ %3728, %3722 ], [ 1, %3713 ]
  %3743 = load i32, ptr %3741, align 4, !tbaa !5
  %3744 = add nsw i32 %3743, %3742
  store i32 %3744, ptr %3741, align 4, !tbaa !5
  br label %3745

3745:                                             ; preds = %3732, %3740, %3702, %3688
  %3746 = icmp eq i32 %3694, %5
  br i1 %3746, label %5616, label %3610, !llvm.loop !883

3747:                                             ; preds = %3146
  %3748 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1644, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

3749:                                             ; preds = %18
  %3750 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3751 = load ptr, ptr %3750, align 8, !tbaa !9
  %3752 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3753 = load ptr, ptr %3752, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3753, align 8, !tbaa !18
  %3754 = icmp eq i32 %13, 0
  br i1 %3754, label %3755, label %3763

3755:                                             ; preds = %3749
  %3756 = load i64, ptr %3751, align 8, !tbaa !120
  %3757 = sitofp i64 %3756 to double
  %3758 = icmp slt i64 %3756, 0
  %3759 = fneg fast double %3757
  %3760 = select fast i1 %3758, double %3759, double %3757
  %3761 = fcmp fast ole double %3760, 0.000000e+00
  %3762 = select fast i1 %3761, double 0.000000e+00, double %3760
  store double %3762, ptr %3753, align 8, !tbaa !18
  br label %5616

3763:                                             ; preds = %3749
  switch i32 %1, label %4365 [
    i32 1, label %3764
    i32 0, label %4067
  ]

3764:                                             ; preds = %3763
  %3765 = getelementptr inbounds i32, ptr %3, i64 %19
  %3766 = load i32, ptr %3765, align 4, !tbaa !5
  %3767 = icmp eq i32 %3766, 0
  %3768 = icmp sgt i32 %5, 0
  br i1 %3767, label %3778, label %3769

3769:                                             ; preds = %3764
  br i1 %3768, label %3770, label %5616

3770:                                             ; preds = %3769
  %3771 = icmp sgt i32 %13, 1
  %3772 = icmp sgt i32 %13, 0
  %3773 = add i32 %13, -2
  %3774 = zext i32 %3773 to i64
  %3775 = zext i32 %13 to i64
  %3776 = add nuw i32 %5, 1
  %3777 = icmp eq i32 %13, 1
  br label %3927

3778:                                             ; preds = %3764
  br i1 %3768, label %3779, label %5616

3779:                                             ; preds = %3778
  %3780 = icmp sgt i32 %13, 1
  %3781 = icmp sgt i32 %13, 0
  %3782 = add i32 %13, -2
  %3783 = zext i32 %3782 to i64
  %3784 = zext i32 %13 to i64
  %3785 = add nuw i32 %5, 1
  %3786 = icmp eq i32 %13, 1
  br label %3787

3787:                                             ; preds = %3779, %3925
  %3788 = phi double [ 0.000000e+00, %3779 ], [ %3875, %3925 ]
  %3789 = phi i32 [ 0, %3779 ], [ %3877, %3925 ]
  %3790 = phi double [ 0.000000e+00, %3779 ], [ %3876, %3925 ]
  %3791 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3780, label %3792, label %3861

3792:                                             ; preds = %3787, %3851
  %3793 = phi i32 [ %3860, %3851 ], [ 0, %3787 ]
  %3794 = phi i64 [ %3802, %3851 ], [ %3784, %3787 ]
  %3795 = phi i64 [ %3859, %3851 ], [ %3783, %3787 ]
  %3796 = phi i32 [ %3857, %3851 ], [ %3791, %3787 ]
  %3797 = sub i32 %3782, %3793
  %3798 = tail call i32 @llvm.smin.i32(i32 %3797, i32 0)
  %3799 = sub i32 %3797, %3798
  %3800 = zext i32 %3799 to i64
  %3801 = add nuw nsw i64 %3800, 1
  %3802 = add nsw i64 %3794, -1
  %3803 = icmp ult i32 %3799, 31
  br i1 %3803, label %3839, label %3804

3804:                                             ; preds = %3792
  %3805 = and i64 %3801, 8589934560
  %3806 = sub i64 %3795, %3805
  br label %3807

3807:                                             ; preds = %3807, %3804
  %3808 = phi i64 [ 0, %3804 ], [ %3831, %3807 ]
  %3809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3804 ], [ %3827, %3807 ]
  %3810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3804 ], [ %3828, %3807 ]
  %3811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3804 ], [ %3829, %3807 ]
  %3812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3804 ], [ %3830, %3807 ]
  %3813 = sub i64 %3795, %3808
  %3814 = getelementptr inbounds i32, ptr %9, i64 %3813
  %3815 = getelementptr inbounds i32, ptr %3814, i64 -7
  %3816 = load <8 x i32>, ptr %3815, align 4, !tbaa !5
  %3817 = shufflevector <8 x i32> %3816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3818 = getelementptr inbounds i32, ptr %3814, i64 -15
  %3819 = load <8 x i32>, ptr %3818, align 4, !tbaa !5
  %3820 = shufflevector <8 x i32> %3819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3821 = getelementptr inbounds i32, ptr %3814, i64 -23
  %3822 = load <8 x i32>, ptr %3821, align 4, !tbaa !5
  %3823 = shufflevector <8 x i32> %3822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3824 = getelementptr inbounds i32, ptr %3814, i64 -31
  %3825 = load <8 x i32>, ptr %3824, align 4, !tbaa !5
  %3826 = shufflevector <8 x i32> %3825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3827 = mul <8 x i32> %3817, %3809
  %3828 = mul <8 x i32> %3820, %3810
  %3829 = mul <8 x i32> %3823, %3811
  %3830 = mul <8 x i32> %3826, %3812
  %3831 = add nuw i64 %3808, 32
  %3832 = icmp eq i64 %3831, %3805
  br i1 %3832, label %3833, label %3807, !llvm.loop !884

3833:                                             ; preds = %3807
  %3834 = mul <8 x i32> %3828, %3827
  %3835 = mul <8 x i32> %3829, %3834
  %3836 = mul <8 x i32> %3830, %3835
  %3837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3836)
  %3838 = icmp eq i64 %3801, %3805
  br i1 %3838, label %3851, label %3839

3839:                                             ; preds = %3792, %3833
  %3840 = phi i64 [ %3795, %3792 ], [ %3806, %3833 ]
  %3841 = phi i32 [ 1, %3792 ], [ %3837, %3833 ]
  br label %3842

3842:                                             ; preds = %3839, %3842
  %3843 = phi i64 [ %3848, %3842 ], [ %3840, %3839 ]
  %3844 = phi i32 [ %3847, %3842 ], [ %3841, %3839 ]
  %3845 = getelementptr inbounds i32, ptr %9, i64 %3843
  %3846 = load i32, ptr %3845, align 4, !tbaa !5
  %3847 = mul nsw i32 %3846, %3844
  %3848 = add nsw i64 %3843, -1
  %3849 = trunc i64 %3843 to i32
  %3850 = icmp sgt i32 %3849, 0
  br i1 %3850, label %3842, label %3851, !llvm.loop !885

3851:                                             ; preds = %3842, %3833
  %3852 = phi i32 [ %3837, %3833 ], [ %3847, %3842 ]
  %3853 = and i64 %3802, 4294967295
  %3854 = getelementptr inbounds i32, ptr %6, i64 %3853
  %3855 = load i32, ptr %3854, align 4, !tbaa !5
  %3856 = mul nsw i32 %3855, %3852
  %3857 = add nsw i32 %3856, %3796
  %3858 = icmp sgt i64 %3794, 2
  %3859 = add nsw i64 %3795, -1
  %3860 = add i32 %3793, 1
  br i1 %3858, label %3792, label %3861, !llvm.loop !886

3861:                                             ; preds = %3851, %3787
  %3862 = phi i32 [ %3791, %3787 ], [ %3857, %3851 ]
  %3863 = sext i32 %3862 to i64
  %3864 = getelementptr inbounds double, ptr %2, i64 %3863
  %3865 = load double, ptr %3864, align 8, !tbaa !18
  %3866 = getelementptr inbounds i64, ptr %3751, i64 %3863
  %3867 = load i64, ptr %3866, align 8, !tbaa !120
  %3868 = sitofp i64 %3867 to double
  %3869 = fmul fast double %3865, %3868
  %3870 = fcmp fast uge double %3869, 0.000000e+00
  %3871 = fneg fast double %3869
  %3872 = tail call fast double @llvm.fabs.f64(double %3869)
  %3873 = fcmp fast oge double %3788, %3872
  %3874 = select nnan ninf i1 %3870, double %3869, double %3871
  %3875 = select i1 %3873, double %3788, double %3874
  store double %3875, ptr %3753, align 8, !tbaa !18
  %3876 = fadd fast double %3865, %3790
  %3877 = add nuw nsw i32 %3789, 1
  br i1 %3781, label %3878, label %3925

3878:                                             ; preds = %3861
  %3879 = load i32, ptr %4, align 4, !tbaa !5
  %3880 = load i32, ptr %12, align 4, !tbaa !5
  %3881 = add nsw i32 %3880, -1
  %3882 = icmp slt i32 %3879, %3881
  br i1 %3882, label %3902, label %3883

3883:                                             ; preds = %3878
  %3884 = icmp eq i32 %3879, %3881
  br i1 %3884, label %3885, label %3918

3885:                                             ; preds = %3883
  store i32 0, ptr %4, align 4, !tbaa !5
  %3886 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3886, ptr %6, align 4, !tbaa !5
  br i1 %3786, label %3925, label %3887

3887:                                             ; preds = %3885, %3912
  %3888 = phi i64 [ %3916, %3912 ], [ 1, %3885 ]
  %3889 = getelementptr inbounds i32, ptr %4, i64 %3888
  %3890 = load i32, ptr %3889, align 4, !tbaa !5
  %3891 = getelementptr inbounds i32, ptr %12, i64 %3888
  %3892 = load i32, ptr %3891, align 4, !tbaa !5
  %3893 = add nsw i32 %3892, -1
  %3894 = icmp slt i32 %3890, %3893
  br i1 %3894, label %3895, label %3910

3895:                                             ; preds = %3887
  br i1 %3882, label %3902, label %3896

3896:                                             ; preds = %3895
  %3897 = getelementptr inbounds i32, ptr %7, i64 %3888
  %3898 = load i32, ptr %3897, align 4, !tbaa !5
  %3899 = getelementptr inbounds i32, ptr %6, i64 %3888
  %3900 = load i32, ptr %3899, align 4, !tbaa !5
  %3901 = add nsw i32 %3900, %3898
  store i32 %3901, ptr %3899, align 4, !tbaa !5
  br label %3920

3902:                                             ; preds = %3878, %3895
  %3903 = phi i32 [ %3890, %3895 ], [ %3879, %3878 ]
  %3904 = phi ptr [ %3889, %3895 ], [ %4, %3878 ]
  %3905 = phi i64 [ %3888, %3895 ], [ 0, %3878 ]
  %3906 = add nsw i32 %3903, 1
  store i32 %3906, ptr %3904, align 4, !tbaa !5
  %3907 = getelementptr inbounds i32, ptr %7, i64 %3905
  %3908 = load i32, ptr %3907, align 4, !tbaa !5
  %3909 = getelementptr inbounds i32, ptr %6, i64 %3905
  br label %3920

3910:                                             ; preds = %3887
  %3911 = icmp eq i32 %3890, %3893
  br i1 %3911, label %3912, label %3918

3912:                                             ; preds = %3910
  store i32 0, ptr %3889, align 4, !tbaa !5
  %3913 = getelementptr inbounds i32, ptr %8, i64 %3888
  %3914 = load i32, ptr %3913, align 4, !tbaa !5
  %3915 = getelementptr inbounds i32, ptr %6, i64 %3888
  store i32 %3914, ptr %3915, align 4, !tbaa !5
  %3916 = add nuw nsw i64 %3888, 1
  %3917 = icmp eq i64 %3916, %3784
  br i1 %3917, label %3925, label %3887, !llvm.loop !887

3918:                                             ; preds = %3883, %3910
  %3919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

3920:                                             ; preds = %3896, %3902
  %3921 = phi ptr [ %3909, %3902 ], [ %3889, %3896 ]
  %3922 = phi i32 [ %3908, %3902 ], [ 1, %3896 ]
  %3923 = load i32, ptr %3921, align 4, !tbaa !5
  %3924 = add nsw i32 %3923, %3922
  store i32 %3924, ptr %3921, align 4, !tbaa !5
  br label %3925

3925:                                             ; preds = %3912, %3920, %3885, %3861
  %3926 = icmp eq i32 %3877, %5
  br i1 %3926, label %5616, label %3787, !llvm.loop !888

3927:                                             ; preds = %3770, %4065
  %3928 = phi double [ 0.000000e+00, %3770 ], [ %4013, %4065 ]
  %3929 = phi i32 [ 0, %3770 ], [ %4014, %4065 ]
  %3930 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3771, label %3931, label %4000

3931:                                             ; preds = %3927, %3990
  %3932 = phi i32 [ %3999, %3990 ], [ 0, %3927 ]
  %3933 = phi i64 [ %3941, %3990 ], [ %3775, %3927 ]
  %3934 = phi i64 [ %3998, %3990 ], [ %3774, %3927 ]
  %3935 = phi i32 [ %3996, %3990 ], [ %3930, %3927 ]
  %3936 = sub i32 %3773, %3932
  %3937 = tail call i32 @llvm.smin.i32(i32 %3936, i32 0)
  %3938 = sub i32 %3936, %3937
  %3939 = zext i32 %3938 to i64
  %3940 = add nuw nsw i64 %3939, 1
  %3941 = add nsw i64 %3933, -1
  %3942 = icmp ult i32 %3938, 31
  br i1 %3942, label %3978, label %3943

3943:                                             ; preds = %3931
  %3944 = and i64 %3940, 8589934560
  %3945 = sub i64 %3934, %3944
  br label %3946

3946:                                             ; preds = %3946, %3943
  %3947 = phi i64 [ 0, %3943 ], [ %3970, %3946 ]
  %3948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3966, %3946 ]
  %3949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3967, %3946 ]
  %3950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3968, %3946 ]
  %3951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3969, %3946 ]
  %3952 = sub i64 %3934, %3947
  %3953 = getelementptr inbounds i32, ptr %11, i64 %3952
  %3954 = getelementptr inbounds i32, ptr %3953, i64 -7
  %3955 = load <8 x i32>, ptr %3954, align 4, !tbaa !5
  %3956 = shufflevector <8 x i32> %3955, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3957 = getelementptr inbounds i32, ptr %3953, i64 -15
  %3958 = load <8 x i32>, ptr %3957, align 4, !tbaa !5
  %3959 = shufflevector <8 x i32> %3958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3960 = getelementptr inbounds i32, ptr %3953, i64 -23
  %3961 = load <8 x i32>, ptr %3960, align 4, !tbaa !5
  %3962 = shufflevector <8 x i32> %3961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3963 = getelementptr inbounds i32, ptr %3953, i64 -31
  %3964 = load <8 x i32>, ptr %3963, align 4, !tbaa !5
  %3965 = shufflevector <8 x i32> %3964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3966 = mul <8 x i32> %3956, %3948
  %3967 = mul <8 x i32> %3959, %3949
  %3968 = mul <8 x i32> %3962, %3950
  %3969 = mul <8 x i32> %3965, %3951
  %3970 = add nuw i64 %3947, 32
  %3971 = icmp eq i64 %3970, %3944
  br i1 %3971, label %3972, label %3946, !llvm.loop !889

3972:                                             ; preds = %3946
  %3973 = mul <8 x i32> %3967, %3966
  %3974 = mul <8 x i32> %3968, %3973
  %3975 = mul <8 x i32> %3969, %3974
  %3976 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3975)
  %3977 = icmp eq i64 %3940, %3944
  br i1 %3977, label %3990, label %3978

3978:                                             ; preds = %3931, %3972
  %3979 = phi i64 [ %3934, %3931 ], [ %3945, %3972 ]
  %3980 = phi i32 [ 1, %3931 ], [ %3976, %3972 ]
  br label %3981

3981:                                             ; preds = %3978, %3981
  %3982 = phi i64 [ %3987, %3981 ], [ %3979, %3978 ]
  %3983 = phi i32 [ %3986, %3981 ], [ %3980, %3978 ]
  %3984 = getelementptr inbounds i32, ptr %11, i64 %3982
  %3985 = load i32, ptr %3984, align 4, !tbaa !5
  %3986 = mul nsw i32 %3985, %3983
  %3987 = add nsw i64 %3982, -1
  %3988 = trunc i64 %3982 to i32
  %3989 = icmp sgt i32 %3988, 0
  br i1 %3989, label %3981, label %3990, !llvm.loop !890

3990:                                             ; preds = %3981, %3972
  %3991 = phi i32 [ %3976, %3972 ], [ %3986, %3981 ]
  %3992 = and i64 %3941, 4294967295
  %3993 = getelementptr inbounds i32, ptr %6, i64 %3992
  %3994 = load i32, ptr %3993, align 4, !tbaa !5
  %3995 = mul nsw i32 %3994, %3991
  %3996 = add nsw i32 %3995, %3935
  %3997 = icmp sgt i64 %3933, 2
  %3998 = add nsw i64 %3934, -1
  %3999 = add i32 %3932, 1
  br i1 %3997, label %3931, label %4000, !llvm.loop !891

4000:                                             ; preds = %3990, %3927
  %4001 = phi i32 [ %3930, %3927 ], [ %3996, %3990 ]
  %4002 = icmp slt i32 %4001, %5
  br i1 %4002, label %4005, label %4003

4003:                                             ; preds = %4000
  %4004 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

4005:                                             ; preds = %4000
  %4006 = sext i32 %4001 to i64
  %4007 = getelementptr inbounds i64, ptr %3751, i64 %4006
  %4008 = load i64, ptr %4007, align 8, !tbaa !120
  %4009 = sitofp i64 %4008 to double
  %4010 = icmp slt i64 %4008, 0
  %4011 = fneg fast double %4009
  %4012 = select i1 %4010, double %4011, double %4009
  %4013 = tail call fast double @llvm.maxnum.f64(double %3928, double %4012)
  store double %4013, ptr %3753, align 8, !tbaa !18
  %4014 = add nuw nsw i32 %3929, 1
  br i1 %3772, label %4015, label %4065

4015:                                             ; preds = %4005
  %4016 = load i32, ptr %4, align 4, !tbaa !5
  %4017 = load i32, ptr %12, align 4, !tbaa !5
  %4018 = add nsw i32 %4017, -1
  %4019 = icmp slt i32 %4016, %4018
  br i1 %4019, label %4042, label %4020

4020:                                             ; preds = %4015
  %4021 = icmp eq i32 %4016, %4018
  br i1 %4021, label %4022, label %4058

4022:                                             ; preds = %4020
  store i32 0, ptr %4, align 4, !tbaa !5
  %4023 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4023, ptr %6, align 4, !tbaa !5
  br i1 %3777, label %4065, label %4024

4024:                                             ; preds = %4022, %4052
  %4025 = phi i64 [ %4056, %4052 ], [ 1, %4022 ]
  %4026 = getelementptr inbounds i32, ptr %4, i64 %4025
  %4027 = load i32, ptr %4026, align 4, !tbaa !5
  %4028 = getelementptr inbounds i32, ptr %12, i64 %4025
  %4029 = load i32, ptr %4028, align 4, !tbaa !5
  %4030 = add nsw i32 %4029, -1
  %4031 = icmp slt i32 %4027, %4030
  br i1 %4031, label %4032, label %4050

4032:                                             ; preds = %4024
  br i1 %4019, label %4042, label %4033

4033:                                             ; preds = %4032
  %4034 = shl i64 %4025, 32
  %4035 = add i64 %4034, -4294967296
  %4036 = ashr exact i64 %4035, 32
  %4037 = getelementptr inbounds i32, ptr %7, i64 %4036
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = getelementptr inbounds i32, ptr %6, i64 %4025
  %4040 = load i32, ptr %4039, align 4, !tbaa !5
  %4041 = add nsw i32 %4040, %4038
  store i32 %4041, ptr %4039, align 4, !tbaa !5
  br label %4060

4042:                                             ; preds = %4015, %4032
  %4043 = phi i32 [ %4027, %4032 ], [ %4016, %4015 ]
  %4044 = phi ptr [ %4026, %4032 ], [ %4, %4015 ]
  %4045 = phi i64 [ %4025, %4032 ], [ 0, %4015 ]
  %4046 = add nsw i32 %4043, 1
  store i32 %4046, ptr %4044, align 4, !tbaa !5
  %4047 = getelementptr inbounds i32, ptr %7, i64 %4045
  %4048 = load i32, ptr %4047, align 4, !tbaa !5
  %4049 = getelementptr inbounds i32, ptr %6, i64 %4045
  br label %4060

4050:                                             ; preds = %4024
  %4051 = icmp eq i32 %4027, %4030
  br i1 %4051, label %4052, label %4058

4052:                                             ; preds = %4050
  store i32 0, ptr %4026, align 4, !tbaa !5
  %4053 = getelementptr inbounds i32, ptr %8, i64 %4025
  %4054 = load i32, ptr %4053, align 4, !tbaa !5
  %4055 = getelementptr inbounds i32, ptr %6, i64 %4025
  store i32 %4054, ptr %4055, align 4, !tbaa !5
  %4056 = add nuw nsw i64 %4025, 1
  %4057 = icmp eq i64 %4056, %3775
  br i1 %4057, label %4065, label %4024, !llvm.loop !892

4058:                                             ; preds = %4020, %4050
  %4059 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4060:                                             ; preds = %4033, %4042
  %4061 = phi ptr [ %4049, %4042 ], [ %4026, %4033 ]
  %4062 = phi i32 [ %4048, %4042 ], [ 1, %4033 ]
  %4063 = load i32, ptr %4061, align 4, !tbaa !5
  %4064 = add nsw i32 %4063, %4062
  store i32 %4064, ptr %4061, align 4, !tbaa !5
  br label %4065

4065:                                             ; preds = %4052, %4060, %4022, %4005
  %4066 = icmp eq i32 %4014, %5
  br i1 %4066, label %5616, label %3927, !llvm.loop !893

4067:                                             ; preds = %3763
  %4068 = getelementptr inbounds i32, ptr %3, i64 %19
  %4069 = load i32, ptr %4068, align 4, !tbaa !5
  %4070 = icmp eq i32 %4069, 0
  %4071 = icmp sgt i32 %5, 0
  br i1 %4070, label %4081, label %4072

4072:                                             ; preds = %4067
  br i1 %4071, label %4073, label %5616

4073:                                             ; preds = %4072
  %4074 = icmp sgt i32 %13, 1
  %4075 = icmp sgt i32 %13, 0
  %4076 = add i32 %13, -2
  %4077 = zext i32 %4076 to i64
  %4078 = zext i32 %13 to i64
  %4079 = add nuw i32 %5, 1
  %4080 = icmp eq i32 %13, 1
  br label %4225

4081:                                             ; preds = %4067
  br i1 %4071, label %4082, label %5616

4082:                                             ; preds = %4081
  %4083 = icmp sgt i32 %13, 1
  %4084 = icmp sgt i32 %13, 0
  %4085 = add i32 %13, -2
  %4086 = zext i32 %4085 to i64
  %4087 = zext i32 %13 to i64
  %4088 = add nuw i32 %5, 1
  %4089 = icmp eq i32 %13, 1
  br label %4090

4090:                                             ; preds = %4082, %4223
  %4091 = phi double [ 0.000000e+00, %4082 ], [ %4173, %4223 ]
  %4092 = phi i32 [ 0, %4082 ], [ %4175, %4223 ]
  %4093 = phi double [ 0.000000e+00, %4082 ], [ %4174, %4223 ]
  %4094 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4083, label %4095, label %4164

4095:                                             ; preds = %4090, %4154
  %4096 = phi i32 [ %4163, %4154 ], [ 0, %4090 ]
  %4097 = phi i64 [ %4105, %4154 ], [ %4087, %4090 ]
  %4098 = phi i64 [ %4162, %4154 ], [ %4086, %4090 ]
  %4099 = phi i32 [ %4160, %4154 ], [ %4094, %4090 ]
  %4100 = sub i32 %4085, %4096
  %4101 = tail call i32 @llvm.smin.i32(i32 %4100, i32 0)
  %4102 = sub i32 %4100, %4101
  %4103 = zext i32 %4102 to i64
  %4104 = add nuw nsw i64 %4103, 1
  %4105 = add nsw i64 %4097, -1
  %4106 = icmp ult i32 %4102, 31
  br i1 %4106, label %4142, label %4107

4107:                                             ; preds = %4095
  %4108 = and i64 %4104, 8589934560
  %4109 = sub i64 %4098, %4108
  br label %4110

4110:                                             ; preds = %4110, %4107
  %4111 = phi i64 [ 0, %4107 ], [ %4134, %4110 ]
  %4112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4107 ], [ %4130, %4110 ]
  %4113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4107 ], [ %4131, %4110 ]
  %4114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4107 ], [ %4132, %4110 ]
  %4115 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4107 ], [ %4133, %4110 ]
  %4116 = sub i64 %4098, %4111
  %4117 = getelementptr inbounds i32, ptr %9, i64 %4116
  %4118 = getelementptr inbounds i32, ptr %4117, i64 -7
  %4119 = load <8 x i32>, ptr %4118, align 4, !tbaa !5
  %4120 = shufflevector <8 x i32> %4119, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4121 = getelementptr inbounds i32, ptr %4117, i64 -15
  %4122 = load <8 x i32>, ptr %4121, align 4, !tbaa !5
  %4123 = shufflevector <8 x i32> %4122, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4124 = getelementptr inbounds i32, ptr %4117, i64 -23
  %4125 = load <8 x i32>, ptr %4124, align 4, !tbaa !5
  %4126 = shufflevector <8 x i32> %4125, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4127 = getelementptr inbounds i32, ptr %4117, i64 -31
  %4128 = load <8 x i32>, ptr %4127, align 4, !tbaa !5
  %4129 = shufflevector <8 x i32> %4128, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4130 = mul <8 x i32> %4120, %4112
  %4131 = mul <8 x i32> %4123, %4113
  %4132 = mul <8 x i32> %4126, %4114
  %4133 = mul <8 x i32> %4129, %4115
  %4134 = add nuw i64 %4111, 32
  %4135 = icmp eq i64 %4134, %4108
  br i1 %4135, label %4136, label %4110, !llvm.loop !894

4136:                                             ; preds = %4110
  %4137 = mul <8 x i32> %4131, %4130
  %4138 = mul <8 x i32> %4132, %4137
  %4139 = mul <8 x i32> %4133, %4138
  %4140 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4139)
  %4141 = icmp eq i64 %4104, %4108
  br i1 %4141, label %4154, label %4142

4142:                                             ; preds = %4095, %4136
  %4143 = phi i64 [ %4098, %4095 ], [ %4109, %4136 ]
  %4144 = phi i32 [ 1, %4095 ], [ %4140, %4136 ]
  br label %4145

4145:                                             ; preds = %4142, %4145
  %4146 = phi i64 [ %4151, %4145 ], [ %4143, %4142 ]
  %4147 = phi i32 [ %4150, %4145 ], [ %4144, %4142 ]
  %4148 = getelementptr inbounds i32, ptr %9, i64 %4146
  %4149 = load i32, ptr %4148, align 4, !tbaa !5
  %4150 = mul nsw i32 %4149, %4147
  %4151 = add nsw i64 %4146, -1
  %4152 = trunc i64 %4146 to i32
  %4153 = icmp sgt i32 %4152, 0
  br i1 %4153, label %4145, label %4154, !llvm.loop !895

4154:                                             ; preds = %4145, %4136
  %4155 = phi i32 [ %4140, %4136 ], [ %4150, %4145 ]
  %4156 = and i64 %4105, 4294967295
  %4157 = getelementptr inbounds i32, ptr %6, i64 %4156
  %4158 = load i32, ptr %4157, align 4, !tbaa !5
  %4159 = mul nsw i32 %4158, %4155
  %4160 = add nsw i32 %4159, %4099
  %4161 = icmp sgt i64 %4097, 2
  %4162 = add nsw i64 %4098, -1
  %4163 = add i32 %4096, 1
  br i1 %4161, label %4095, label %4164, !llvm.loop !896

4164:                                             ; preds = %4154, %4090
  %4165 = phi i32 [ %4094, %4090 ], [ %4160, %4154 ]
  %4166 = sext i32 %4165 to i64
  %4167 = getelementptr inbounds i64, ptr %3751, i64 %4166
  %4168 = load i64, ptr %4167, align 8, !tbaa !120
  %4169 = sitofp i64 %4168 to double
  %4170 = icmp slt i64 %4168, 0
  %4171 = fneg fast double %4169
  %4172 = select fast i1 %4170, double %4171, double %4169
  %4173 = tail call fast double @llvm.maxnum.f64(double %4091, double %4172)
  %4174 = fadd fast double %4093, 1.000000e+00
  %4175 = add nuw nsw i32 %4092, 1
  br i1 %4084, label %4176, label %4223

4176:                                             ; preds = %4164
  %4177 = load i32, ptr %4, align 4, !tbaa !5
  %4178 = load i32, ptr %12, align 4, !tbaa !5
  %4179 = add nsw i32 %4178, -1
  %4180 = icmp slt i32 %4177, %4179
  br i1 %4180, label %4200, label %4181

4181:                                             ; preds = %4176
  %4182 = icmp eq i32 %4177, %4179
  br i1 %4182, label %4183, label %4216

4183:                                             ; preds = %4181
  store i32 0, ptr %4, align 4, !tbaa !5
  %4184 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4184, ptr %6, align 4, !tbaa !5
  br i1 %4089, label %4223, label %4185

4185:                                             ; preds = %4183, %4210
  %4186 = phi i64 [ %4214, %4210 ], [ 1, %4183 ]
  %4187 = getelementptr inbounds i32, ptr %4, i64 %4186
  %4188 = load i32, ptr %4187, align 4, !tbaa !5
  %4189 = getelementptr inbounds i32, ptr %12, i64 %4186
  %4190 = load i32, ptr %4189, align 4, !tbaa !5
  %4191 = add nsw i32 %4190, -1
  %4192 = icmp slt i32 %4188, %4191
  br i1 %4192, label %4193, label %4208

4193:                                             ; preds = %4185
  br i1 %4180, label %4200, label %4194

4194:                                             ; preds = %4193
  %4195 = getelementptr inbounds i32, ptr %7, i64 %4186
  %4196 = load i32, ptr %4195, align 4, !tbaa !5
  %4197 = getelementptr inbounds i32, ptr %6, i64 %4186
  %4198 = load i32, ptr %4197, align 4, !tbaa !5
  %4199 = add nsw i32 %4198, %4196
  store i32 %4199, ptr %4197, align 4, !tbaa !5
  br label %4218

4200:                                             ; preds = %4176, %4193
  %4201 = phi i32 [ %4188, %4193 ], [ %4177, %4176 ]
  %4202 = phi ptr [ %4187, %4193 ], [ %4, %4176 ]
  %4203 = phi i64 [ %4186, %4193 ], [ 0, %4176 ]
  %4204 = add nsw i32 %4201, 1
  store i32 %4204, ptr %4202, align 4, !tbaa !5
  %4205 = getelementptr inbounds i32, ptr %7, i64 %4203
  %4206 = load i32, ptr %4205, align 4, !tbaa !5
  %4207 = getelementptr inbounds i32, ptr %6, i64 %4203
  br label %4218

4208:                                             ; preds = %4185
  %4209 = icmp eq i32 %4188, %4191
  br i1 %4209, label %4210, label %4216

4210:                                             ; preds = %4208
  store i32 0, ptr %4187, align 4, !tbaa !5
  %4211 = getelementptr inbounds i32, ptr %8, i64 %4186
  %4212 = load i32, ptr %4211, align 4, !tbaa !5
  %4213 = getelementptr inbounds i32, ptr %6, i64 %4186
  store i32 %4212, ptr %4213, align 4, !tbaa !5
  %4214 = add nuw nsw i64 %4186, 1
  %4215 = icmp eq i64 %4214, %4087
  br i1 %4215, label %4223, label %4185, !llvm.loop !897

4216:                                             ; preds = %4181, %4208
  store double %4173, ptr %3753, align 8, !tbaa !18
  %4217 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4218:                                             ; preds = %4194, %4200
  %4219 = phi ptr [ %4207, %4200 ], [ %4187, %4194 ]
  %4220 = phi i32 [ %4206, %4200 ], [ 1, %4194 ]
  %4221 = load i32, ptr %4219, align 4, !tbaa !5
  %4222 = add nsw i32 %4221, %4220
  store i32 %4222, ptr %4219, align 4, !tbaa !5
  br label %4223

4223:                                             ; preds = %4210, %4218, %4183, %4164
  %4224 = icmp eq i32 %4175, %5
  br i1 %4224, label %5612, label %4090, !llvm.loop !898

4225:                                             ; preds = %4073, %4363
  %4226 = phi double [ 0.000000e+00, %4073 ], [ %4311, %4363 ]
  %4227 = phi i32 [ 0, %4073 ], [ %4312, %4363 ]
  %4228 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4074, label %4229, label %4298

4229:                                             ; preds = %4225, %4288
  %4230 = phi i32 [ %4297, %4288 ], [ 0, %4225 ]
  %4231 = phi i64 [ %4239, %4288 ], [ %4078, %4225 ]
  %4232 = phi i64 [ %4296, %4288 ], [ %4077, %4225 ]
  %4233 = phi i32 [ %4294, %4288 ], [ %4228, %4225 ]
  %4234 = sub i32 %4076, %4230
  %4235 = tail call i32 @llvm.smin.i32(i32 %4234, i32 0)
  %4236 = sub i32 %4234, %4235
  %4237 = zext i32 %4236 to i64
  %4238 = add nuw nsw i64 %4237, 1
  %4239 = add nsw i64 %4231, -1
  %4240 = icmp ult i32 %4236, 31
  br i1 %4240, label %4276, label %4241

4241:                                             ; preds = %4229
  %4242 = and i64 %4238, 8589934560
  %4243 = sub i64 %4232, %4242
  br label %4244

4244:                                             ; preds = %4244, %4241
  %4245 = phi i64 [ 0, %4241 ], [ %4268, %4244 ]
  %4246 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4241 ], [ %4264, %4244 ]
  %4247 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4241 ], [ %4265, %4244 ]
  %4248 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4241 ], [ %4266, %4244 ]
  %4249 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4241 ], [ %4267, %4244 ]
  %4250 = sub i64 %4232, %4245
  %4251 = getelementptr inbounds i32, ptr %11, i64 %4250
  %4252 = getelementptr inbounds i32, ptr %4251, i64 -7
  %4253 = load <8 x i32>, ptr %4252, align 4, !tbaa !5
  %4254 = shufflevector <8 x i32> %4253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4255 = getelementptr inbounds i32, ptr %4251, i64 -15
  %4256 = load <8 x i32>, ptr %4255, align 4, !tbaa !5
  %4257 = shufflevector <8 x i32> %4256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4258 = getelementptr inbounds i32, ptr %4251, i64 -23
  %4259 = load <8 x i32>, ptr %4258, align 4, !tbaa !5
  %4260 = shufflevector <8 x i32> %4259, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4261 = getelementptr inbounds i32, ptr %4251, i64 -31
  %4262 = load <8 x i32>, ptr %4261, align 4, !tbaa !5
  %4263 = shufflevector <8 x i32> %4262, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4264 = mul <8 x i32> %4254, %4246
  %4265 = mul <8 x i32> %4257, %4247
  %4266 = mul <8 x i32> %4260, %4248
  %4267 = mul <8 x i32> %4263, %4249
  %4268 = add nuw i64 %4245, 32
  %4269 = icmp eq i64 %4268, %4242
  br i1 %4269, label %4270, label %4244, !llvm.loop !899

4270:                                             ; preds = %4244
  %4271 = mul <8 x i32> %4265, %4264
  %4272 = mul <8 x i32> %4266, %4271
  %4273 = mul <8 x i32> %4267, %4272
  %4274 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4273)
  %4275 = icmp eq i64 %4238, %4242
  br i1 %4275, label %4288, label %4276

4276:                                             ; preds = %4229, %4270
  %4277 = phi i64 [ %4232, %4229 ], [ %4243, %4270 ]
  %4278 = phi i32 [ 1, %4229 ], [ %4274, %4270 ]
  br label %4279

4279:                                             ; preds = %4276, %4279
  %4280 = phi i64 [ %4285, %4279 ], [ %4277, %4276 ]
  %4281 = phi i32 [ %4284, %4279 ], [ %4278, %4276 ]
  %4282 = getelementptr inbounds i32, ptr %11, i64 %4280
  %4283 = load i32, ptr %4282, align 4, !tbaa !5
  %4284 = mul nsw i32 %4283, %4281
  %4285 = add nsw i64 %4280, -1
  %4286 = trunc i64 %4280 to i32
  %4287 = icmp sgt i32 %4286, 0
  br i1 %4287, label %4279, label %4288, !llvm.loop !900

4288:                                             ; preds = %4279, %4270
  %4289 = phi i32 [ %4274, %4270 ], [ %4284, %4279 ]
  %4290 = and i64 %4239, 4294967295
  %4291 = getelementptr inbounds i32, ptr %6, i64 %4290
  %4292 = load i32, ptr %4291, align 4, !tbaa !5
  %4293 = mul nsw i32 %4292, %4289
  %4294 = add nsw i32 %4293, %4233
  %4295 = icmp sgt i64 %4231, 2
  %4296 = add nsw i64 %4232, -1
  %4297 = add i32 %4230, 1
  br i1 %4295, label %4229, label %4298, !llvm.loop !901

4298:                                             ; preds = %4288, %4225
  %4299 = phi i32 [ %4228, %4225 ], [ %4294, %4288 ]
  %4300 = icmp slt i32 %4299, %5
  br i1 %4300, label %4303, label %4301

4301:                                             ; preds = %4298
  %4302 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

4303:                                             ; preds = %4298
  %4304 = sext i32 %4299 to i64
  %4305 = getelementptr inbounds i64, ptr %3751, i64 %4304
  %4306 = load i64, ptr %4305, align 8, !tbaa !120
  %4307 = sitofp i64 %4306 to double
  %4308 = icmp slt i64 %4306, 0
  %4309 = fneg fast double %4307
  %4310 = select fast i1 %4308, double %4309, double %4307
  %4311 = tail call fast double @llvm.maxnum.f64(double %4226, double %4310)
  store double %4311, ptr %3753, align 8, !tbaa !18
  %4312 = add nuw nsw i32 %4227, 1
  br i1 %4075, label %4313, label %4363

4313:                                             ; preds = %4303
  %4314 = load i32, ptr %4, align 4, !tbaa !5
  %4315 = load i32, ptr %12, align 4, !tbaa !5
  %4316 = add nsw i32 %4315, -1
  %4317 = icmp slt i32 %4314, %4316
  br i1 %4317, label %4340, label %4318

4318:                                             ; preds = %4313
  %4319 = icmp eq i32 %4314, %4316
  br i1 %4319, label %4320, label %4356

4320:                                             ; preds = %4318
  store i32 0, ptr %4, align 4, !tbaa !5
  %4321 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4321, ptr %6, align 4, !tbaa !5
  br i1 %4080, label %4363, label %4322

4322:                                             ; preds = %4320, %4350
  %4323 = phi i64 [ %4354, %4350 ], [ 1, %4320 ]
  %4324 = getelementptr inbounds i32, ptr %4, i64 %4323
  %4325 = load i32, ptr %4324, align 4, !tbaa !5
  %4326 = getelementptr inbounds i32, ptr %12, i64 %4323
  %4327 = load i32, ptr %4326, align 4, !tbaa !5
  %4328 = add nsw i32 %4327, -1
  %4329 = icmp slt i32 %4325, %4328
  br i1 %4329, label %4330, label %4348

4330:                                             ; preds = %4322
  br i1 %4317, label %4340, label %4331

4331:                                             ; preds = %4330
  %4332 = shl i64 %4323, 32
  %4333 = add i64 %4332, -4294967296
  %4334 = ashr exact i64 %4333, 32
  %4335 = getelementptr inbounds i32, ptr %7, i64 %4334
  %4336 = load i32, ptr %4335, align 4, !tbaa !5
  %4337 = getelementptr inbounds i32, ptr %6, i64 %4323
  %4338 = load i32, ptr %4337, align 4, !tbaa !5
  %4339 = add nsw i32 %4338, %4336
  store i32 %4339, ptr %4337, align 4, !tbaa !5
  br label %4358

4340:                                             ; preds = %4313, %4330
  %4341 = phi i32 [ %4325, %4330 ], [ %4314, %4313 ]
  %4342 = phi ptr [ %4324, %4330 ], [ %4, %4313 ]
  %4343 = phi i64 [ %4323, %4330 ], [ 0, %4313 ]
  %4344 = add nsw i32 %4341, 1
  store i32 %4344, ptr %4342, align 4, !tbaa !5
  %4345 = getelementptr inbounds i32, ptr %7, i64 %4343
  %4346 = load i32, ptr %4345, align 4, !tbaa !5
  %4347 = getelementptr inbounds i32, ptr %6, i64 %4343
  br label %4358

4348:                                             ; preds = %4322
  %4349 = icmp eq i32 %4325, %4328
  br i1 %4349, label %4350, label %4356

4350:                                             ; preds = %4348
  store i32 0, ptr %4324, align 4, !tbaa !5
  %4351 = getelementptr inbounds i32, ptr %8, i64 %4323
  %4352 = load i32, ptr %4351, align 4, !tbaa !5
  %4353 = getelementptr inbounds i32, ptr %6, i64 %4323
  store i32 %4352, ptr %4353, align 4, !tbaa !5
  %4354 = add nuw nsw i64 %4323, 1
  %4355 = icmp eq i64 %4354, %4078
  br i1 %4355, label %4363, label %4322, !llvm.loop !902

4356:                                             ; preds = %4318, %4348
  %4357 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4358:                                             ; preds = %4331, %4340
  %4359 = phi ptr [ %4347, %4340 ], [ %4324, %4331 ]
  %4360 = phi i32 [ %4346, %4340 ], [ 1, %4331 ]
  %4361 = load i32, ptr %4359, align 4, !tbaa !5
  %4362 = add nsw i32 %4361, %4360
  store i32 %4362, ptr %4359, align 4, !tbaa !5
  br label %4363

4363:                                             ; preds = %4350, %4358, %4320, %4303
  %4364 = icmp eq i32 %4312, %5
  br i1 %4364, label %5616, label %4225, !llvm.loop !903

4365:                                             ; preds = %3763
  %4366 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1648, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

4367:                                             ; preds = %18
  %4368 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4369 = load ptr, ptr %4368, align 8, !tbaa !9
  %4370 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4371 = load ptr, ptr %4370, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4371, align 4, !tbaa !162
  %4372 = icmp eq i32 %13, 0
  br i1 %4372, label %4373, label %4381

4373:                                             ; preds = %4367
  %4374 = load i64, ptr %4369, align 8, !tbaa !120
  %4375 = sitofp i64 %4374 to float
  %4376 = icmp slt i64 %4374, 0
  %4377 = fneg fast float %4375
  %4378 = select fast i1 %4376, float %4377, float %4375
  %4379 = fcmp fast ole float %4378, 0.000000e+00
  %4380 = select fast i1 %4379, float 0.000000e+00, float %4378
  store float %4380, ptr %4371, align 4, !tbaa !162
  br label %5616

4381:                                             ; preds = %4367
  switch i32 %1, label %4990 [
    i32 1, label %4382
    i32 0, label %4692
  ]

4382:                                             ; preds = %4381
  %4383 = getelementptr inbounds i32, ptr %3, i64 %19
  %4384 = load i32, ptr %4383, align 4, !tbaa !5
  %4385 = icmp eq i32 %4384, 0
  %4386 = icmp sgt i32 %5, 0
  br i1 %4385, label %4396, label %4387

4387:                                             ; preds = %4382
  br i1 %4386, label %4388, label %5616

4388:                                             ; preds = %4387
  %4389 = icmp sgt i32 %13, 1
  %4390 = icmp sgt i32 %13, 0
  %4391 = add i32 %13, -2
  %4392 = zext i32 %4391 to i64
  %4393 = zext i32 %13 to i64
  %4394 = add nuw i32 %5, 1
  %4395 = icmp eq i32 %13, 1
  br label %4548

4396:                                             ; preds = %4382
  br i1 %4386, label %4397, label %5616

4397:                                             ; preds = %4396
  %4398 = icmp sgt i32 %13, 1
  %4399 = icmp sgt i32 %13, 0
  %4400 = add i32 %13, -2
  %4401 = zext i32 %4400 to i64
  %4402 = zext i32 %13 to i64
  %4403 = add nuw i32 %5, 1
  %4404 = icmp eq i32 %13, 1
  br label %4405

4405:                                             ; preds = %4397, %4546
  %4406 = phi float [ 0.000000e+00, %4397 ], [ %4496, %4546 ]
  %4407 = phi i32 [ 0, %4397 ], [ %4498, %4546 ]
  %4408 = phi double [ 0.000000e+00, %4397 ], [ %4497, %4546 ]
  %4409 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4398, label %4410, label %4479

4410:                                             ; preds = %4405, %4469
  %4411 = phi i32 [ %4478, %4469 ], [ 0, %4405 ]
  %4412 = phi i64 [ %4420, %4469 ], [ %4402, %4405 ]
  %4413 = phi i64 [ %4477, %4469 ], [ %4401, %4405 ]
  %4414 = phi i32 [ %4475, %4469 ], [ %4409, %4405 ]
  %4415 = sub i32 %4400, %4411
  %4416 = tail call i32 @llvm.smin.i32(i32 %4415, i32 0)
  %4417 = sub i32 %4415, %4416
  %4418 = zext i32 %4417 to i64
  %4419 = add nuw nsw i64 %4418, 1
  %4420 = add nsw i64 %4412, -1
  %4421 = icmp ult i32 %4417, 31
  br i1 %4421, label %4457, label %4422

4422:                                             ; preds = %4410
  %4423 = and i64 %4419, 8589934560
  %4424 = sub i64 %4413, %4423
  br label %4425

4425:                                             ; preds = %4425, %4422
  %4426 = phi i64 [ 0, %4422 ], [ %4449, %4425 ]
  %4427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4445, %4425 ]
  %4428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4446, %4425 ]
  %4429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4447, %4425 ]
  %4430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4422 ], [ %4448, %4425 ]
  %4431 = sub i64 %4413, %4426
  %4432 = getelementptr inbounds i32, ptr %9, i64 %4431
  %4433 = getelementptr inbounds i32, ptr %4432, i64 -7
  %4434 = load <8 x i32>, ptr %4433, align 4, !tbaa !5
  %4435 = shufflevector <8 x i32> %4434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4436 = getelementptr inbounds i32, ptr %4432, i64 -15
  %4437 = load <8 x i32>, ptr %4436, align 4, !tbaa !5
  %4438 = shufflevector <8 x i32> %4437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4439 = getelementptr inbounds i32, ptr %4432, i64 -23
  %4440 = load <8 x i32>, ptr %4439, align 4, !tbaa !5
  %4441 = shufflevector <8 x i32> %4440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4442 = getelementptr inbounds i32, ptr %4432, i64 -31
  %4443 = load <8 x i32>, ptr %4442, align 4, !tbaa !5
  %4444 = shufflevector <8 x i32> %4443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4445 = mul <8 x i32> %4435, %4427
  %4446 = mul <8 x i32> %4438, %4428
  %4447 = mul <8 x i32> %4441, %4429
  %4448 = mul <8 x i32> %4444, %4430
  %4449 = add nuw i64 %4426, 32
  %4450 = icmp eq i64 %4449, %4423
  br i1 %4450, label %4451, label %4425, !llvm.loop !904

4451:                                             ; preds = %4425
  %4452 = mul <8 x i32> %4446, %4445
  %4453 = mul <8 x i32> %4447, %4452
  %4454 = mul <8 x i32> %4448, %4453
  %4455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4454)
  %4456 = icmp eq i64 %4419, %4423
  br i1 %4456, label %4469, label %4457

4457:                                             ; preds = %4410, %4451
  %4458 = phi i64 [ %4413, %4410 ], [ %4424, %4451 ]
  %4459 = phi i32 [ 1, %4410 ], [ %4455, %4451 ]
  br label %4460

4460:                                             ; preds = %4457, %4460
  %4461 = phi i64 [ %4466, %4460 ], [ %4458, %4457 ]
  %4462 = phi i32 [ %4465, %4460 ], [ %4459, %4457 ]
  %4463 = getelementptr inbounds i32, ptr %9, i64 %4461
  %4464 = load i32, ptr %4463, align 4, !tbaa !5
  %4465 = mul nsw i32 %4464, %4462
  %4466 = add nsw i64 %4461, -1
  %4467 = trunc i64 %4461 to i32
  %4468 = icmp sgt i32 %4467, 0
  br i1 %4468, label %4460, label %4469, !llvm.loop !905

4469:                                             ; preds = %4460, %4451
  %4470 = phi i32 [ %4455, %4451 ], [ %4465, %4460 ]
  %4471 = and i64 %4420, 4294967295
  %4472 = getelementptr inbounds i32, ptr %6, i64 %4471
  %4473 = load i32, ptr %4472, align 4, !tbaa !5
  %4474 = mul nsw i32 %4473, %4470
  %4475 = add nsw i32 %4474, %4414
  %4476 = icmp sgt i64 %4412, 2
  %4477 = add nsw i64 %4413, -1
  %4478 = add i32 %4411, 1
  br i1 %4476, label %4410, label %4479, !llvm.loop !906

4479:                                             ; preds = %4469, %4405
  %4480 = phi i32 [ %4409, %4405 ], [ %4475, %4469 ]
  %4481 = sext i32 %4480 to i64
  %4482 = getelementptr inbounds double, ptr %2, i64 %4481
  %4483 = load double, ptr %4482, align 8, !tbaa !18
  %4484 = getelementptr inbounds i64, ptr %4369, i64 %4481
  %4485 = load i64, ptr %4484, align 8, !tbaa !120
  %4486 = sitofp i64 %4485 to float
  %4487 = fpext float %4406 to double
  %4488 = fpext float %4486 to double
  %4489 = fmul fast double %4483, %4488
  %4490 = fcmp fast uge double %4489, 0.000000e+00
  %4491 = fneg fast double %4489
  %4492 = tail call fast double @llvm.fabs.f64(double %4489)
  %4493 = fcmp fast ole double %4492, %4487
  %4494 = select nnan ninf i1 %4490, double %4489, double %4491
  %4495 = fptrunc double %4494 to float
  %4496 = select i1 %4493, float %4406, float %4495
  %4497 = fadd fast double %4483, %4408
  %4498 = add nuw nsw i32 %4407, 1
  br i1 %4399, label %4499, label %4546

4499:                                             ; preds = %4479
  %4500 = load i32, ptr %4, align 4, !tbaa !5
  %4501 = load i32, ptr %12, align 4, !tbaa !5
  %4502 = add nsw i32 %4501, -1
  %4503 = icmp slt i32 %4500, %4502
  br i1 %4503, label %4523, label %4504

4504:                                             ; preds = %4499
  %4505 = icmp eq i32 %4500, %4502
  br i1 %4505, label %4506, label %4539

4506:                                             ; preds = %4504
  store i32 0, ptr %4, align 4, !tbaa !5
  %4507 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4507, ptr %6, align 4, !tbaa !5
  br i1 %4404, label %4546, label %4508

4508:                                             ; preds = %4506, %4533
  %4509 = phi i64 [ %4537, %4533 ], [ 1, %4506 ]
  %4510 = getelementptr inbounds i32, ptr %4, i64 %4509
  %4511 = load i32, ptr %4510, align 4, !tbaa !5
  %4512 = getelementptr inbounds i32, ptr %12, i64 %4509
  %4513 = load i32, ptr %4512, align 4, !tbaa !5
  %4514 = add nsw i32 %4513, -1
  %4515 = icmp slt i32 %4511, %4514
  br i1 %4515, label %4516, label %4531

4516:                                             ; preds = %4508
  br i1 %4503, label %4523, label %4517

4517:                                             ; preds = %4516
  %4518 = getelementptr inbounds i32, ptr %7, i64 %4509
  %4519 = load i32, ptr %4518, align 4, !tbaa !5
  %4520 = getelementptr inbounds i32, ptr %6, i64 %4509
  %4521 = load i32, ptr %4520, align 4, !tbaa !5
  %4522 = add nsw i32 %4521, %4519
  store i32 %4522, ptr %4520, align 4, !tbaa !5
  br label %4541

4523:                                             ; preds = %4499, %4516
  %4524 = phi i32 [ %4511, %4516 ], [ %4500, %4499 ]
  %4525 = phi ptr [ %4510, %4516 ], [ %4, %4499 ]
  %4526 = phi i64 [ %4509, %4516 ], [ 0, %4499 ]
  %4527 = add nsw i32 %4524, 1
  store i32 %4527, ptr %4525, align 4, !tbaa !5
  %4528 = getelementptr inbounds i32, ptr %7, i64 %4526
  %4529 = load i32, ptr %4528, align 4, !tbaa !5
  %4530 = getelementptr inbounds i32, ptr %6, i64 %4526
  br label %4541

4531:                                             ; preds = %4508
  %4532 = icmp eq i32 %4511, %4514
  br i1 %4532, label %4533, label %4539

4533:                                             ; preds = %4531
  store i32 0, ptr %4510, align 4, !tbaa !5
  %4534 = getelementptr inbounds i32, ptr %8, i64 %4509
  %4535 = load i32, ptr %4534, align 4, !tbaa !5
  %4536 = getelementptr inbounds i32, ptr %6, i64 %4509
  store i32 %4535, ptr %4536, align 4, !tbaa !5
  %4537 = add nuw nsw i64 %4509, 1
  %4538 = icmp eq i64 %4537, %4402
  br i1 %4538, label %4546, label %4508, !llvm.loop !907

4539:                                             ; preds = %4504, %4531
  store float %4496, ptr %4371, align 4, !tbaa !162
  %4540 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4541:                                             ; preds = %4517, %4523
  %4542 = phi ptr [ %4530, %4523 ], [ %4510, %4517 ]
  %4543 = phi i32 [ %4529, %4523 ], [ 1, %4517 ]
  %4544 = load i32, ptr %4542, align 4, !tbaa !5
  %4545 = add nsw i32 %4544, %4543
  store i32 %4545, ptr %4542, align 4, !tbaa !5
  br label %4546

4546:                                             ; preds = %4533, %4541, %4506, %4479
  %4547 = icmp eq i32 %4498, %5
  br i1 %4547, label %5613, label %4405, !llvm.loop !908

4548:                                             ; preds = %4388, %4690
  %4549 = phi float [ 0.000000e+00, %4388 ], [ %4638, %4690 ]
  %4550 = phi i32 [ 0, %4388 ], [ %4639, %4690 ]
  %4551 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4389, label %4552, label %4621

4552:                                             ; preds = %4548, %4611
  %4553 = phi i32 [ %4620, %4611 ], [ 0, %4548 ]
  %4554 = phi i64 [ %4562, %4611 ], [ %4393, %4548 ]
  %4555 = phi i64 [ %4619, %4611 ], [ %4392, %4548 ]
  %4556 = phi i32 [ %4617, %4611 ], [ %4551, %4548 ]
  %4557 = sub i32 %4391, %4553
  %4558 = tail call i32 @llvm.smin.i32(i32 %4557, i32 0)
  %4559 = sub i32 %4557, %4558
  %4560 = zext i32 %4559 to i64
  %4561 = add nuw nsw i64 %4560, 1
  %4562 = add nsw i64 %4554, -1
  %4563 = icmp ult i32 %4559, 31
  br i1 %4563, label %4599, label %4564

4564:                                             ; preds = %4552
  %4565 = and i64 %4561, 8589934560
  %4566 = sub i64 %4555, %4565
  br label %4567

4567:                                             ; preds = %4567, %4564
  %4568 = phi i64 [ 0, %4564 ], [ %4591, %4567 ]
  %4569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4564 ], [ %4587, %4567 ]
  %4570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4564 ], [ %4588, %4567 ]
  %4571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4564 ], [ %4589, %4567 ]
  %4572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4564 ], [ %4590, %4567 ]
  %4573 = sub i64 %4555, %4568
  %4574 = getelementptr inbounds i32, ptr %11, i64 %4573
  %4575 = getelementptr inbounds i32, ptr %4574, i64 -7
  %4576 = load <8 x i32>, ptr %4575, align 4, !tbaa !5
  %4577 = shufflevector <8 x i32> %4576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4578 = getelementptr inbounds i32, ptr %4574, i64 -15
  %4579 = load <8 x i32>, ptr %4578, align 4, !tbaa !5
  %4580 = shufflevector <8 x i32> %4579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4581 = getelementptr inbounds i32, ptr %4574, i64 -23
  %4582 = load <8 x i32>, ptr %4581, align 4, !tbaa !5
  %4583 = shufflevector <8 x i32> %4582, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4584 = getelementptr inbounds i32, ptr %4574, i64 -31
  %4585 = load <8 x i32>, ptr %4584, align 4, !tbaa !5
  %4586 = shufflevector <8 x i32> %4585, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4587 = mul <8 x i32> %4577, %4569
  %4588 = mul <8 x i32> %4580, %4570
  %4589 = mul <8 x i32> %4583, %4571
  %4590 = mul <8 x i32> %4586, %4572
  %4591 = add nuw i64 %4568, 32
  %4592 = icmp eq i64 %4591, %4565
  br i1 %4592, label %4593, label %4567, !llvm.loop !909

4593:                                             ; preds = %4567
  %4594 = mul <8 x i32> %4588, %4587
  %4595 = mul <8 x i32> %4589, %4594
  %4596 = mul <8 x i32> %4590, %4595
  %4597 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4596)
  %4598 = icmp eq i64 %4561, %4565
  br i1 %4598, label %4611, label %4599

4599:                                             ; preds = %4552, %4593
  %4600 = phi i64 [ %4555, %4552 ], [ %4566, %4593 ]
  %4601 = phi i32 [ 1, %4552 ], [ %4597, %4593 ]
  br label %4602

4602:                                             ; preds = %4599, %4602
  %4603 = phi i64 [ %4608, %4602 ], [ %4600, %4599 ]
  %4604 = phi i32 [ %4607, %4602 ], [ %4601, %4599 ]
  %4605 = getelementptr inbounds i32, ptr %11, i64 %4603
  %4606 = load i32, ptr %4605, align 4, !tbaa !5
  %4607 = mul nsw i32 %4606, %4604
  %4608 = add nsw i64 %4603, -1
  %4609 = trunc i64 %4603 to i32
  %4610 = icmp sgt i32 %4609, 0
  br i1 %4610, label %4602, label %4611, !llvm.loop !910

4611:                                             ; preds = %4602, %4593
  %4612 = phi i32 [ %4597, %4593 ], [ %4607, %4602 ]
  %4613 = and i64 %4562, 4294967295
  %4614 = getelementptr inbounds i32, ptr %6, i64 %4613
  %4615 = load i32, ptr %4614, align 4, !tbaa !5
  %4616 = mul nsw i32 %4615, %4612
  %4617 = add nsw i32 %4616, %4556
  %4618 = icmp sgt i64 %4554, 2
  %4619 = add nsw i64 %4555, -1
  %4620 = add i32 %4553, 1
  br i1 %4618, label %4552, label %4621, !llvm.loop !911

4621:                                             ; preds = %4611, %4548
  %4622 = phi i32 [ %4551, %4548 ], [ %4617, %4611 ]
  %4623 = icmp slt i32 %4622, %5
  br i1 %4623, label %4626, label %4624

4624:                                             ; preds = %4621
  %4625 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

4626:                                             ; preds = %4621
  %4627 = sext i32 %4622 to i64
  %4628 = getelementptr inbounds i64, ptr %4369, i64 %4627
  %4629 = load i64, ptr %4628, align 8, !tbaa !120
  %4630 = sitofp i64 %4629 to float
  %4631 = fpext float %4549 to double
  %4632 = fpext float %4630 to double
  %4633 = icmp slt i64 %4629, 0
  %4634 = fneg fast double %4632
  %4635 = select i1 %4633, double %4634, double %4632
  %4636 = fcmp fast ole double %4635, %4631
  %4637 = fptrunc double %4635 to float
  %4638 = select fast i1 %4636, float %4549, float %4637
  store float %4638, ptr %4371, align 4, !tbaa !162
  %4639 = add nuw nsw i32 %4550, 1
  br i1 %4390, label %4640, label %4690

4640:                                             ; preds = %4626
  %4641 = load i32, ptr %4, align 4, !tbaa !5
  %4642 = load i32, ptr %12, align 4, !tbaa !5
  %4643 = add nsw i32 %4642, -1
  %4644 = icmp slt i32 %4641, %4643
  br i1 %4644, label %4667, label %4645

4645:                                             ; preds = %4640
  %4646 = icmp eq i32 %4641, %4643
  br i1 %4646, label %4647, label %4683

4647:                                             ; preds = %4645
  store i32 0, ptr %4, align 4, !tbaa !5
  %4648 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4648, ptr %6, align 4, !tbaa !5
  br i1 %4395, label %4690, label %4649

4649:                                             ; preds = %4647, %4677
  %4650 = phi i64 [ %4681, %4677 ], [ 1, %4647 ]
  %4651 = getelementptr inbounds i32, ptr %4, i64 %4650
  %4652 = load i32, ptr %4651, align 4, !tbaa !5
  %4653 = getelementptr inbounds i32, ptr %12, i64 %4650
  %4654 = load i32, ptr %4653, align 4, !tbaa !5
  %4655 = add nsw i32 %4654, -1
  %4656 = icmp slt i32 %4652, %4655
  br i1 %4656, label %4657, label %4675

4657:                                             ; preds = %4649
  br i1 %4644, label %4667, label %4658

4658:                                             ; preds = %4657
  %4659 = shl i64 %4650, 32
  %4660 = add i64 %4659, -4294967296
  %4661 = ashr exact i64 %4660, 32
  %4662 = getelementptr inbounds i32, ptr %7, i64 %4661
  %4663 = load i32, ptr %4662, align 4, !tbaa !5
  %4664 = getelementptr inbounds i32, ptr %6, i64 %4650
  %4665 = load i32, ptr %4664, align 4, !tbaa !5
  %4666 = add nsw i32 %4665, %4663
  store i32 %4666, ptr %4664, align 4, !tbaa !5
  br label %4685

4667:                                             ; preds = %4640, %4657
  %4668 = phi i32 [ %4652, %4657 ], [ %4641, %4640 ]
  %4669 = phi ptr [ %4651, %4657 ], [ %4, %4640 ]
  %4670 = phi i64 [ %4650, %4657 ], [ 0, %4640 ]
  %4671 = add nsw i32 %4668, 1
  store i32 %4671, ptr %4669, align 4, !tbaa !5
  %4672 = getelementptr inbounds i32, ptr %7, i64 %4670
  %4673 = load i32, ptr %4672, align 4, !tbaa !5
  %4674 = getelementptr inbounds i32, ptr %6, i64 %4670
  br label %4685

4675:                                             ; preds = %4649
  %4676 = icmp eq i32 %4652, %4655
  br i1 %4676, label %4677, label %4683

4677:                                             ; preds = %4675
  store i32 0, ptr %4651, align 4, !tbaa !5
  %4678 = getelementptr inbounds i32, ptr %8, i64 %4650
  %4679 = load i32, ptr %4678, align 4, !tbaa !5
  %4680 = getelementptr inbounds i32, ptr %6, i64 %4650
  store i32 %4679, ptr %4680, align 4, !tbaa !5
  %4681 = add nuw nsw i64 %4650, 1
  %4682 = icmp eq i64 %4681, %4393
  br i1 %4682, label %4690, label %4649, !llvm.loop !912

4683:                                             ; preds = %4645, %4675
  %4684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4685:                                             ; preds = %4658, %4667
  %4686 = phi ptr [ %4674, %4667 ], [ %4651, %4658 ]
  %4687 = phi i32 [ %4673, %4667 ], [ 1, %4658 ]
  %4688 = load i32, ptr %4686, align 4, !tbaa !5
  %4689 = add nsw i32 %4688, %4687
  store i32 %4689, ptr %4686, align 4, !tbaa !5
  br label %4690

4690:                                             ; preds = %4677, %4685, %4647, %4626
  %4691 = icmp eq i32 %4639, %5
  br i1 %4691, label %5616, label %4548, !llvm.loop !913

4692:                                             ; preds = %4381
  %4693 = getelementptr inbounds i32, ptr %3, i64 %19
  %4694 = load i32, ptr %4693, align 4, !tbaa !5
  %4695 = icmp eq i32 %4694, 0
  %4696 = icmp sgt i32 %5, 0
  br i1 %4695, label %4706, label %4697

4697:                                             ; preds = %4692
  br i1 %4696, label %4698, label %5616

4698:                                             ; preds = %4697
  %4699 = icmp sgt i32 %13, 1
  %4700 = icmp sgt i32 %13, 0
  %4701 = add i32 %13, -2
  %4702 = zext i32 %4701 to i64
  %4703 = zext i32 %13 to i64
  %4704 = add nuw i32 %5, 1
  %4705 = icmp eq i32 %13, 1
  br label %4850

4706:                                             ; preds = %4692
  br i1 %4696, label %4707, label %5616

4707:                                             ; preds = %4706
  %4708 = icmp sgt i32 %13, 1
  %4709 = icmp sgt i32 %13, 0
  %4710 = add i32 %13, -2
  %4711 = zext i32 %4710 to i64
  %4712 = zext i32 %13 to i64
  %4713 = add nuw i32 %5, 1
  %4714 = icmp eq i32 %13, 1
  br label %4715

4715:                                             ; preds = %4707, %4848
  %4716 = phi float [ 0.000000e+00, %4707 ], [ %4798, %4848 ]
  %4717 = phi i32 [ 0, %4707 ], [ %4800, %4848 ]
  %4718 = phi double [ 0.000000e+00, %4707 ], [ %4799, %4848 ]
  %4719 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4708, label %4720, label %4789

4720:                                             ; preds = %4715, %4779
  %4721 = phi i32 [ %4788, %4779 ], [ 0, %4715 ]
  %4722 = phi i64 [ %4730, %4779 ], [ %4712, %4715 ]
  %4723 = phi i64 [ %4787, %4779 ], [ %4711, %4715 ]
  %4724 = phi i32 [ %4785, %4779 ], [ %4719, %4715 ]
  %4725 = sub i32 %4710, %4721
  %4726 = tail call i32 @llvm.smin.i32(i32 %4725, i32 0)
  %4727 = sub i32 %4725, %4726
  %4728 = zext i32 %4727 to i64
  %4729 = add nuw nsw i64 %4728, 1
  %4730 = add nsw i64 %4722, -1
  %4731 = icmp ult i32 %4727, 31
  br i1 %4731, label %4767, label %4732

4732:                                             ; preds = %4720
  %4733 = and i64 %4729, 8589934560
  %4734 = sub i64 %4723, %4733
  br label %4735

4735:                                             ; preds = %4735, %4732
  %4736 = phi i64 [ 0, %4732 ], [ %4759, %4735 ]
  %4737 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4732 ], [ %4755, %4735 ]
  %4738 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4732 ], [ %4756, %4735 ]
  %4739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4732 ], [ %4757, %4735 ]
  %4740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4732 ], [ %4758, %4735 ]
  %4741 = sub i64 %4723, %4736
  %4742 = getelementptr inbounds i32, ptr %9, i64 %4741
  %4743 = getelementptr inbounds i32, ptr %4742, i64 -7
  %4744 = load <8 x i32>, ptr %4743, align 4, !tbaa !5
  %4745 = shufflevector <8 x i32> %4744, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4746 = getelementptr inbounds i32, ptr %4742, i64 -15
  %4747 = load <8 x i32>, ptr %4746, align 4, !tbaa !5
  %4748 = shufflevector <8 x i32> %4747, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4749 = getelementptr inbounds i32, ptr %4742, i64 -23
  %4750 = load <8 x i32>, ptr %4749, align 4, !tbaa !5
  %4751 = shufflevector <8 x i32> %4750, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4752 = getelementptr inbounds i32, ptr %4742, i64 -31
  %4753 = load <8 x i32>, ptr %4752, align 4, !tbaa !5
  %4754 = shufflevector <8 x i32> %4753, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4755 = mul <8 x i32> %4745, %4737
  %4756 = mul <8 x i32> %4748, %4738
  %4757 = mul <8 x i32> %4751, %4739
  %4758 = mul <8 x i32> %4754, %4740
  %4759 = add nuw i64 %4736, 32
  %4760 = icmp eq i64 %4759, %4733
  br i1 %4760, label %4761, label %4735, !llvm.loop !914

4761:                                             ; preds = %4735
  %4762 = mul <8 x i32> %4756, %4755
  %4763 = mul <8 x i32> %4757, %4762
  %4764 = mul <8 x i32> %4758, %4763
  %4765 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4764)
  %4766 = icmp eq i64 %4729, %4733
  br i1 %4766, label %4779, label %4767

4767:                                             ; preds = %4720, %4761
  %4768 = phi i64 [ %4723, %4720 ], [ %4734, %4761 ]
  %4769 = phi i32 [ 1, %4720 ], [ %4765, %4761 ]
  br label %4770

4770:                                             ; preds = %4767, %4770
  %4771 = phi i64 [ %4776, %4770 ], [ %4768, %4767 ]
  %4772 = phi i32 [ %4775, %4770 ], [ %4769, %4767 ]
  %4773 = getelementptr inbounds i32, ptr %9, i64 %4771
  %4774 = load i32, ptr %4773, align 4, !tbaa !5
  %4775 = mul nsw i32 %4774, %4772
  %4776 = add nsw i64 %4771, -1
  %4777 = trunc i64 %4771 to i32
  %4778 = icmp sgt i32 %4777, 0
  br i1 %4778, label %4770, label %4779, !llvm.loop !915

4779:                                             ; preds = %4770, %4761
  %4780 = phi i32 [ %4765, %4761 ], [ %4775, %4770 ]
  %4781 = and i64 %4730, 4294967295
  %4782 = getelementptr inbounds i32, ptr %6, i64 %4781
  %4783 = load i32, ptr %4782, align 4, !tbaa !5
  %4784 = mul nsw i32 %4783, %4780
  %4785 = add nsw i32 %4784, %4724
  %4786 = icmp sgt i64 %4722, 2
  %4787 = add nsw i64 %4723, -1
  %4788 = add i32 %4721, 1
  br i1 %4786, label %4720, label %4789, !llvm.loop !916

4789:                                             ; preds = %4779, %4715
  %4790 = phi i32 [ %4719, %4715 ], [ %4785, %4779 ]
  %4791 = sext i32 %4790 to i64
  %4792 = getelementptr inbounds i64, ptr %4369, i64 %4791
  %4793 = load i64, ptr %4792, align 8, !tbaa !120
  %4794 = sitofp i64 %4793 to float
  %4795 = icmp slt i64 %4793, 0
  %4796 = fneg fast float %4794
  %4797 = select fast i1 %4795, float %4796, float %4794
  %4798 = tail call fast float @llvm.maxnum.f32(float %4716, float %4797)
  %4799 = fadd fast double %4718, 1.000000e+00
  %4800 = add nuw nsw i32 %4717, 1
  br i1 %4709, label %4801, label %4848

4801:                                             ; preds = %4789
  %4802 = load i32, ptr %4, align 4, !tbaa !5
  %4803 = load i32, ptr %12, align 4, !tbaa !5
  %4804 = add nsw i32 %4803, -1
  %4805 = icmp slt i32 %4802, %4804
  br i1 %4805, label %4825, label %4806

4806:                                             ; preds = %4801
  %4807 = icmp eq i32 %4802, %4804
  br i1 %4807, label %4808, label %4841

4808:                                             ; preds = %4806
  store i32 0, ptr %4, align 4, !tbaa !5
  %4809 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4809, ptr %6, align 4, !tbaa !5
  br i1 %4714, label %4848, label %4810

4810:                                             ; preds = %4808, %4835
  %4811 = phi i64 [ %4839, %4835 ], [ 1, %4808 ]
  %4812 = getelementptr inbounds i32, ptr %4, i64 %4811
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = getelementptr inbounds i32, ptr %12, i64 %4811
  %4815 = load i32, ptr %4814, align 4, !tbaa !5
  %4816 = add nsw i32 %4815, -1
  %4817 = icmp slt i32 %4813, %4816
  br i1 %4817, label %4818, label %4833

4818:                                             ; preds = %4810
  br i1 %4805, label %4825, label %4819

4819:                                             ; preds = %4818
  %4820 = getelementptr inbounds i32, ptr %7, i64 %4811
  %4821 = load i32, ptr %4820, align 4, !tbaa !5
  %4822 = getelementptr inbounds i32, ptr %6, i64 %4811
  %4823 = load i32, ptr %4822, align 4, !tbaa !5
  %4824 = add nsw i32 %4823, %4821
  store i32 %4824, ptr %4822, align 4, !tbaa !5
  br label %4843

4825:                                             ; preds = %4801, %4818
  %4826 = phi i32 [ %4813, %4818 ], [ %4802, %4801 ]
  %4827 = phi ptr [ %4812, %4818 ], [ %4, %4801 ]
  %4828 = phi i64 [ %4811, %4818 ], [ 0, %4801 ]
  %4829 = add nsw i32 %4826, 1
  store i32 %4829, ptr %4827, align 4, !tbaa !5
  %4830 = getelementptr inbounds i32, ptr %7, i64 %4828
  %4831 = load i32, ptr %4830, align 4, !tbaa !5
  %4832 = getelementptr inbounds i32, ptr %6, i64 %4828
  br label %4843

4833:                                             ; preds = %4810
  %4834 = icmp eq i32 %4813, %4816
  br i1 %4834, label %4835, label %4841

4835:                                             ; preds = %4833
  store i32 0, ptr %4812, align 4, !tbaa !5
  %4836 = getelementptr inbounds i32, ptr %8, i64 %4811
  %4837 = load i32, ptr %4836, align 4, !tbaa !5
  %4838 = getelementptr inbounds i32, ptr %6, i64 %4811
  store i32 %4837, ptr %4838, align 4, !tbaa !5
  %4839 = add nuw nsw i64 %4811, 1
  %4840 = icmp eq i64 %4839, %4712
  br i1 %4840, label %4848, label %4810, !llvm.loop !917

4841:                                             ; preds = %4806, %4833
  store float %4798, ptr %4371, align 4, !tbaa !162
  %4842 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4843:                                             ; preds = %4819, %4825
  %4844 = phi ptr [ %4832, %4825 ], [ %4812, %4819 ]
  %4845 = phi i32 [ %4831, %4825 ], [ 1, %4819 ]
  %4846 = load i32, ptr %4844, align 4, !tbaa !5
  %4847 = add nsw i32 %4846, %4845
  store i32 %4847, ptr %4844, align 4, !tbaa !5
  br label %4848

4848:                                             ; preds = %4835, %4843, %4808, %4789
  %4849 = icmp eq i32 %4800, %5
  br i1 %4849, label %5614, label %4715, !llvm.loop !918

4850:                                             ; preds = %4698, %4988
  %4851 = phi float [ 0.000000e+00, %4698 ], [ %4936, %4988 ]
  %4852 = phi i32 [ 0, %4698 ], [ %4937, %4988 ]
  %4853 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4699, label %4854, label %4923

4854:                                             ; preds = %4850, %4913
  %4855 = phi i32 [ %4922, %4913 ], [ 0, %4850 ]
  %4856 = phi i64 [ %4864, %4913 ], [ %4703, %4850 ]
  %4857 = phi i64 [ %4921, %4913 ], [ %4702, %4850 ]
  %4858 = phi i32 [ %4919, %4913 ], [ %4853, %4850 ]
  %4859 = sub i32 %4701, %4855
  %4860 = tail call i32 @llvm.smin.i32(i32 %4859, i32 0)
  %4861 = sub i32 %4859, %4860
  %4862 = zext i32 %4861 to i64
  %4863 = add nuw nsw i64 %4862, 1
  %4864 = add nsw i64 %4856, -1
  %4865 = icmp ult i32 %4861, 31
  br i1 %4865, label %4901, label %4866

4866:                                             ; preds = %4854
  %4867 = and i64 %4863, 8589934560
  %4868 = sub i64 %4857, %4867
  br label %4869

4869:                                             ; preds = %4869, %4866
  %4870 = phi i64 [ 0, %4866 ], [ %4893, %4869 ]
  %4871 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4866 ], [ %4889, %4869 ]
  %4872 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4866 ], [ %4890, %4869 ]
  %4873 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4866 ], [ %4891, %4869 ]
  %4874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4866 ], [ %4892, %4869 ]
  %4875 = sub i64 %4857, %4870
  %4876 = getelementptr inbounds i32, ptr %11, i64 %4875
  %4877 = getelementptr inbounds i32, ptr %4876, i64 -7
  %4878 = load <8 x i32>, ptr %4877, align 4, !tbaa !5
  %4879 = shufflevector <8 x i32> %4878, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4880 = getelementptr inbounds i32, ptr %4876, i64 -15
  %4881 = load <8 x i32>, ptr %4880, align 4, !tbaa !5
  %4882 = shufflevector <8 x i32> %4881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4883 = getelementptr inbounds i32, ptr %4876, i64 -23
  %4884 = load <8 x i32>, ptr %4883, align 4, !tbaa !5
  %4885 = shufflevector <8 x i32> %4884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4886 = getelementptr inbounds i32, ptr %4876, i64 -31
  %4887 = load <8 x i32>, ptr %4886, align 4, !tbaa !5
  %4888 = shufflevector <8 x i32> %4887, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4889 = mul <8 x i32> %4879, %4871
  %4890 = mul <8 x i32> %4882, %4872
  %4891 = mul <8 x i32> %4885, %4873
  %4892 = mul <8 x i32> %4888, %4874
  %4893 = add nuw i64 %4870, 32
  %4894 = icmp eq i64 %4893, %4867
  br i1 %4894, label %4895, label %4869, !llvm.loop !919

4895:                                             ; preds = %4869
  %4896 = mul <8 x i32> %4890, %4889
  %4897 = mul <8 x i32> %4891, %4896
  %4898 = mul <8 x i32> %4892, %4897
  %4899 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4898)
  %4900 = icmp eq i64 %4863, %4867
  br i1 %4900, label %4913, label %4901

4901:                                             ; preds = %4854, %4895
  %4902 = phi i64 [ %4857, %4854 ], [ %4868, %4895 ]
  %4903 = phi i32 [ 1, %4854 ], [ %4899, %4895 ]
  br label %4904

4904:                                             ; preds = %4901, %4904
  %4905 = phi i64 [ %4910, %4904 ], [ %4902, %4901 ]
  %4906 = phi i32 [ %4909, %4904 ], [ %4903, %4901 ]
  %4907 = getelementptr inbounds i32, ptr %11, i64 %4905
  %4908 = load i32, ptr %4907, align 4, !tbaa !5
  %4909 = mul nsw i32 %4908, %4906
  %4910 = add nsw i64 %4905, -1
  %4911 = trunc i64 %4905 to i32
  %4912 = icmp sgt i32 %4911, 0
  br i1 %4912, label %4904, label %4913, !llvm.loop !920

4913:                                             ; preds = %4904, %4895
  %4914 = phi i32 [ %4899, %4895 ], [ %4909, %4904 ]
  %4915 = and i64 %4864, 4294967295
  %4916 = getelementptr inbounds i32, ptr %6, i64 %4915
  %4917 = load i32, ptr %4916, align 4, !tbaa !5
  %4918 = mul nsw i32 %4917, %4914
  %4919 = add nsw i32 %4918, %4858
  %4920 = icmp sgt i64 %4856, 2
  %4921 = add nsw i64 %4857, -1
  %4922 = add i32 %4855, 1
  br i1 %4920, label %4854, label %4923, !llvm.loop !921

4923:                                             ; preds = %4913, %4850
  %4924 = phi i32 [ %4853, %4850 ], [ %4919, %4913 ]
  %4925 = icmp slt i32 %4924, %5
  br i1 %4925, label %4928, label %4926

4926:                                             ; preds = %4923
  %4927 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

4928:                                             ; preds = %4923
  %4929 = sext i32 %4924 to i64
  %4930 = getelementptr inbounds i64, ptr %4369, i64 %4929
  %4931 = load i64, ptr %4930, align 8, !tbaa !120
  %4932 = sitofp i64 %4931 to float
  %4933 = icmp slt i64 %4931, 0
  %4934 = fneg fast float %4932
  %4935 = select fast i1 %4933, float %4934, float %4932
  %4936 = tail call fast float @llvm.maxnum.f32(float %4851, float %4935)
  store float %4936, ptr %4371, align 4, !tbaa !162
  %4937 = add nuw nsw i32 %4852, 1
  br i1 %4700, label %4938, label %4988

4938:                                             ; preds = %4928
  %4939 = load i32, ptr %4, align 4, !tbaa !5
  %4940 = load i32, ptr %12, align 4, !tbaa !5
  %4941 = add nsw i32 %4940, -1
  %4942 = icmp slt i32 %4939, %4941
  br i1 %4942, label %4965, label %4943

4943:                                             ; preds = %4938
  %4944 = icmp eq i32 %4939, %4941
  br i1 %4944, label %4945, label %4981

4945:                                             ; preds = %4943
  store i32 0, ptr %4, align 4, !tbaa !5
  %4946 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4946, ptr %6, align 4, !tbaa !5
  br i1 %4705, label %4988, label %4947

4947:                                             ; preds = %4945, %4975
  %4948 = phi i64 [ %4979, %4975 ], [ 1, %4945 ]
  %4949 = getelementptr inbounds i32, ptr %4, i64 %4948
  %4950 = load i32, ptr %4949, align 4, !tbaa !5
  %4951 = getelementptr inbounds i32, ptr %12, i64 %4948
  %4952 = load i32, ptr %4951, align 4, !tbaa !5
  %4953 = add nsw i32 %4952, -1
  %4954 = icmp slt i32 %4950, %4953
  br i1 %4954, label %4955, label %4973

4955:                                             ; preds = %4947
  br i1 %4942, label %4965, label %4956

4956:                                             ; preds = %4955
  %4957 = shl i64 %4948, 32
  %4958 = add i64 %4957, -4294967296
  %4959 = ashr exact i64 %4958, 32
  %4960 = getelementptr inbounds i32, ptr %7, i64 %4959
  %4961 = load i32, ptr %4960, align 4, !tbaa !5
  %4962 = getelementptr inbounds i32, ptr %6, i64 %4948
  %4963 = load i32, ptr %4962, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, %4961
  store i32 %4964, ptr %4962, align 4, !tbaa !5
  br label %4983

4965:                                             ; preds = %4938, %4955
  %4966 = phi i32 [ %4950, %4955 ], [ %4939, %4938 ]
  %4967 = phi ptr [ %4949, %4955 ], [ %4, %4938 ]
  %4968 = phi i64 [ %4948, %4955 ], [ 0, %4938 ]
  %4969 = add nsw i32 %4966, 1
  store i32 %4969, ptr %4967, align 4, !tbaa !5
  %4970 = getelementptr inbounds i32, ptr %7, i64 %4968
  %4971 = load i32, ptr %4970, align 4, !tbaa !5
  %4972 = getelementptr inbounds i32, ptr %6, i64 %4968
  br label %4983

4973:                                             ; preds = %4947
  %4974 = icmp eq i32 %4950, %4953
  br i1 %4974, label %4975, label %4981

4975:                                             ; preds = %4973
  store i32 0, ptr %4949, align 4, !tbaa !5
  %4976 = getelementptr inbounds i32, ptr %8, i64 %4948
  %4977 = load i32, ptr %4976, align 4, !tbaa !5
  %4978 = getelementptr inbounds i32, ptr %6, i64 %4948
  store i32 %4977, ptr %4978, align 4, !tbaa !5
  %4979 = add nuw nsw i64 %4948, 1
  %4980 = icmp eq i64 %4979, %4703
  br i1 %4980, label %4988, label %4947, !llvm.loop !922

4981:                                             ; preds = %4943, %4973
  %4982 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

4983:                                             ; preds = %4956, %4965
  %4984 = phi ptr [ %4972, %4965 ], [ %4949, %4956 ]
  %4985 = phi i32 [ %4971, %4965 ], [ 1, %4956 ]
  %4986 = load i32, ptr %4984, align 4, !tbaa !5
  %4987 = add nsw i32 %4986, %4985
  store i32 %4987, ptr %4984, align 4, !tbaa !5
  br label %4988

4988:                                             ; preds = %4975, %4983, %4945, %4928
  %4989 = icmp eq i32 %4937, %5
  br i1 %4989, label %5616, label %4850, !llvm.loop !923

4990:                                             ; preds = %4381
  %4991 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1652, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

4992:                                             ; preds = %18
  %4993 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4994 = load ptr, ptr %4993, align 8, !tbaa !9
  %4995 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4996 = load ptr, ptr %4995, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4996, align 8, !tbaa !18
  %4997 = icmp eq i32 %13, 0
  br i1 %4997, label %4998, label %5006

4998:                                             ; preds = %4992
  %4999 = load i64, ptr %4994, align 8, !tbaa !120
  %5000 = sitofp i64 %4999 to double
  %5001 = icmp slt i64 %4999, 0
  %5002 = fneg fast double %5000
  %5003 = select fast i1 %5001, double %5002, double %5000
  %5004 = fcmp fast ole double %5003, 0.000000e+00
  %5005 = select fast i1 %5004, double 0.000000e+00, double %5003
  store double %5005, ptr %4996, align 8, !tbaa !18
  br label %5616

5006:                                             ; preds = %4992
  switch i32 %1, label %5608 [
    i32 1, label %5007
    i32 0, label %5310
  ]

5007:                                             ; preds = %5006
  %5008 = getelementptr inbounds i32, ptr %3, i64 %19
  %5009 = load i32, ptr %5008, align 4, !tbaa !5
  %5010 = icmp eq i32 %5009, 0
  %5011 = icmp sgt i32 %5, 0
  br i1 %5010, label %5021, label %5012

5012:                                             ; preds = %5007
  br i1 %5011, label %5013, label %5616

5013:                                             ; preds = %5012
  %5014 = icmp sgt i32 %13, 1
  %5015 = icmp sgt i32 %13, 0
  %5016 = add i32 %13, -2
  %5017 = zext i32 %5016 to i64
  %5018 = zext i32 %13 to i64
  %5019 = add nuw i32 %5, 1
  %5020 = icmp eq i32 %13, 1
  br label %5170

5021:                                             ; preds = %5007
  br i1 %5011, label %5022, label %5616

5022:                                             ; preds = %5021
  %5023 = icmp sgt i32 %13, 1
  %5024 = icmp sgt i32 %13, 0
  %5025 = add i32 %13, -2
  %5026 = zext i32 %5025 to i64
  %5027 = zext i32 %13 to i64
  %5028 = add nuw i32 %5, 1
  %5029 = icmp eq i32 %13, 1
  br label %5030

5030:                                             ; preds = %5022, %5168
  %5031 = phi double [ 0.000000e+00, %5022 ], [ %5118, %5168 ]
  %5032 = phi i32 [ 0, %5022 ], [ %5120, %5168 ]
  %5033 = phi double [ 0.000000e+00, %5022 ], [ %5119, %5168 ]
  %5034 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5023, label %5035, label %5104

5035:                                             ; preds = %5030, %5094
  %5036 = phi i32 [ %5103, %5094 ], [ 0, %5030 ]
  %5037 = phi i64 [ %5045, %5094 ], [ %5027, %5030 ]
  %5038 = phi i64 [ %5102, %5094 ], [ %5026, %5030 ]
  %5039 = phi i32 [ %5100, %5094 ], [ %5034, %5030 ]
  %5040 = sub i32 %5025, %5036
  %5041 = tail call i32 @llvm.smin.i32(i32 %5040, i32 0)
  %5042 = sub i32 %5040, %5041
  %5043 = zext i32 %5042 to i64
  %5044 = add nuw nsw i64 %5043, 1
  %5045 = add nsw i64 %5037, -1
  %5046 = icmp ult i32 %5042, 31
  br i1 %5046, label %5082, label %5047

5047:                                             ; preds = %5035
  %5048 = and i64 %5044, 8589934560
  %5049 = sub i64 %5038, %5048
  br label %5050

5050:                                             ; preds = %5050, %5047
  %5051 = phi i64 [ 0, %5047 ], [ %5074, %5050 ]
  %5052 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5047 ], [ %5070, %5050 ]
  %5053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5047 ], [ %5071, %5050 ]
  %5054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5047 ], [ %5072, %5050 ]
  %5055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5047 ], [ %5073, %5050 ]
  %5056 = sub i64 %5038, %5051
  %5057 = getelementptr inbounds i32, ptr %9, i64 %5056
  %5058 = getelementptr inbounds i32, ptr %5057, i64 -7
  %5059 = load <8 x i32>, ptr %5058, align 4, !tbaa !5
  %5060 = shufflevector <8 x i32> %5059, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5061 = getelementptr inbounds i32, ptr %5057, i64 -15
  %5062 = load <8 x i32>, ptr %5061, align 4, !tbaa !5
  %5063 = shufflevector <8 x i32> %5062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5064 = getelementptr inbounds i32, ptr %5057, i64 -23
  %5065 = load <8 x i32>, ptr %5064, align 4, !tbaa !5
  %5066 = shufflevector <8 x i32> %5065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5067 = getelementptr inbounds i32, ptr %5057, i64 -31
  %5068 = load <8 x i32>, ptr %5067, align 4, !tbaa !5
  %5069 = shufflevector <8 x i32> %5068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5070 = mul <8 x i32> %5060, %5052
  %5071 = mul <8 x i32> %5063, %5053
  %5072 = mul <8 x i32> %5066, %5054
  %5073 = mul <8 x i32> %5069, %5055
  %5074 = add nuw i64 %5051, 32
  %5075 = icmp eq i64 %5074, %5048
  br i1 %5075, label %5076, label %5050, !llvm.loop !924

5076:                                             ; preds = %5050
  %5077 = mul <8 x i32> %5071, %5070
  %5078 = mul <8 x i32> %5072, %5077
  %5079 = mul <8 x i32> %5073, %5078
  %5080 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5079)
  %5081 = icmp eq i64 %5044, %5048
  br i1 %5081, label %5094, label %5082

5082:                                             ; preds = %5035, %5076
  %5083 = phi i64 [ %5038, %5035 ], [ %5049, %5076 ]
  %5084 = phi i32 [ 1, %5035 ], [ %5080, %5076 ]
  br label %5085

5085:                                             ; preds = %5082, %5085
  %5086 = phi i64 [ %5091, %5085 ], [ %5083, %5082 ]
  %5087 = phi i32 [ %5090, %5085 ], [ %5084, %5082 ]
  %5088 = getelementptr inbounds i32, ptr %9, i64 %5086
  %5089 = load i32, ptr %5088, align 4, !tbaa !5
  %5090 = mul nsw i32 %5089, %5087
  %5091 = add nsw i64 %5086, -1
  %5092 = trunc i64 %5086 to i32
  %5093 = icmp sgt i32 %5092, 0
  br i1 %5093, label %5085, label %5094, !llvm.loop !925

5094:                                             ; preds = %5085, %5076
  %5095 = phi i32 [ %5080, %5076 ], [ %5090, %5085 ]
  %5096 = and i64 %5045, 4294967295
  %5097 = getelementptr inbounds i32, ptr %6, i64 %5096
  %5098 = load i32, ptr %5097, align 4, !tbaa !5
  %5099 = mul nsw i32 %5098, %5095
  %5100 = add nsw i32 %5099, %5039
  %5101 = icmp sgt i64 %5037, 2
  %5102 = add nsw i64 %5038, -1
  %5103 = add i32 %5036, 1
  br i1 %5101, label %5035, label %5104, !llvm.loop !926

5104:                                             ; preds = %5094, %5030
  %5105 = phi i32 [ %5034, %5030 ], [ %5100, %5094 ]
  %5106 = sext i32 %5105 to i64
  %5107 = getelementptr inbounds double, ptr %2, i64 %5106
  %5108 = load double, ptr %5107, align 8, !tbaa !18
  %5109 = getelementptr inbounds i64, ptr %4994, i64 %5106
  %5110 = load i64, ptr %5109, align 8, !tbaa !120
  %5111 = sitofp i64 %5110 to double
  %5112 = fmul fast double %5108, %5111
  %5113 = fcmp fast uge double %5112, 0.000000e+00
  %5114 = fneg fast double %5112
  %5115 = tail call fast double @llvm.fabs.f64(double %5112)
  %5116 = fcmp fast oge double %5031, %5115
  %5117 = select nnan ninf i1 %5113, double %5112, double %5114
  %5118 = select i1 %5116, double %5031, double %5117
  store double %5118, ptr %4996, align 8, !tbaa !18
  %5119 = fadd fast double %5108, %5033
  %5120 = add nuw nsw i32 %5032, 1
  br i1 %5024, label %5121, label %5168

5121:                                             ; preds = %5104
  %5122 = load i32, ptr %4, align 4, !tbaa !5
  %5123 = load i32, ptr %12, align 4, !tbaa !5
  %5124 = add nsw i32 %5123, -1
  %5125 = icmp slt i32 %5122, %5124
  br i1 %5125, label %5145, label %5126

5126:                                             ; preds = %5121
  %5127 = icmp eq i32 %5122, %5124
  br i1 %5127, label %5128, label %5161

5128:                                             ; preds = %5126
  store i32 0, ptr %4, align 4, !tbaa !5
  %5129 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5129, ptr %6, align 4, !tbaa !5
  br i1 %5029, label %5168, label %5130

5130:                                             ; preds = %5128, %5155
  %5131 = phi i64 [ %5159, %5155 ], [ 1, %5128 ]
  %5132 = getelementptr inbounds i32, ptr %4, i64 %5131
  %5133 = load i32, ptr %5132, align 4, !tbaa !5
  %5134 = getelementptr inbounds i32, ptr %12, i64 %5131
  %5135 = load i32, ptr %5134, align 4, !tbaa !5
  %5136 = add nsw i32 %5135, -1
  %5137 = icmp slt i32 %5133, %5136
  br i1 %5137, label %5138, label %5153

5138:                                             ; preds = %5130
  br i1 %5125, label %5145, label %5139

5139:                                             ; preds = %5138
  %5140 = getelementptr inbounds i32, ptr %7, i64 %5131
  %5141 = load i32, ptr %5140, align 4, !tbaa !5
  %5142 = getelementptr inbounds i32, ptr %6, i64 %5131
  %5143 = load i32, ptr %5142, align 4, !tbaa !5
  %5144 = add nsw i32 %5143, %5141
  store i32 %5144, ptr %5142, align 4, !tbaa !5
  br label %5163

5145:                                             ; preds = %5121, %5138
  %5146 = phi i32 [ %5133, %5138 ], [ %5122, %5121 ]
  %5147 = phi ptr [ %5132, %5138 ], [ %4, %5121 ]
  %5148 = phi i64 [ %5131, %5138 ], [ 0, %5121 ]
  %5149 = add nsw i32 %5146, 1
  store i32 %5149, ptr %5147, align 4, !tbaa !5
  %5150 = getelementptr inbounds i32, ptr %7, i64 %5148
  %5151 = load i32, ptr %5150, align 4, !tbaa !5
  %5152 = getelementptr inbounds i32, ptr %6, i64 %5148
  br label %5163

5153:                                             ; preds = %5130
  %5154 = icmp eq i32 %5133, %5136
  br i1 %5154, label %5155, label %5161

5155:                                             ; preds = %5153
  store i32 0, ptr %5132, align 4, !tbaa !5
  %5156 = getelementptr inbounds i32, ptr %8, i64 %5131
  %5157 = load i32, ptr %5156, align 4, !tbaa !5
  %5158 = getelementptr inbounds i32, ptr %6, i64 %5131
  store i32 %5157, ptr %5158, align 4, !tbaa !5
  %5159 = add nuw nsw i64 %5131, 1
  %5160 = icmp eq i64 %5159, %5027
  br i1 %5160, label %5168, label %5130, !llvm.loop !927

5161:                                             ; preds = %5126, %5153
  %5162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

5163:                                             ; preds = %5139, %5145
  %5164 = phi ptr [ %5152, %5145 ], [ %5132, %5139 ]
  %5165 = phi i32 [ %5151, %5145 ], [ 1, %5139 ]
  %5166 = load i32, ptr %5164, align 4, !tbaa !5
  %5167 = add nsw i32 %5166, %5165
  store i32 %5167, ptr %5164, align 4, !tbaa !5
  br label %5168

5168:                                             ; preds = %5155, %5163, %5128, %5104
  %5169 = icmp eq i32 %5120, %5
  br i1 %5169, label %5616, label %5030, !llvm.loop !928

5170:                                             ; preds = %5013, %5308
  %5171 = phi double [ 0.000000e+00, %5013 ], [ %5256, %5308 ]
  %5172 = phi i32 [ 0, %5013 ], [ %5257, %5308 ]
  %5173 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5014, label %5174, label %5243

5174:                                             ; preds = %5170, %5233
  %5175 = phi i32 [ %5242, %5233 ], [ 0, %5170 ]
  %5176 = phi i64 [ %5184, %5233 ], [ %5018, %5170 ]
  %5177 = phi i64 [ %5241, %5233 ], [ %5017, %5170 ]
  %5178 = phi i32 [ %5239, %5233 ], [ %5173, %5170 ]
  %5179 = sub i32 %5016, %5175
  %5180 = tail call i32 @llvm.smin.i32(i32 %5179, i32 0)
  %5181 = sub i32 %5179, %5180
  %5182 = zext i32 %5181 to i64
  %5183 = add nuw nsw i64 %5182, 1
  %5184 = add nsw i64 %5176, -1
  %5185 = icmp ult i32 %5181, 31
  br i1 %5185, label %5221, label %5186

5186:                                             ; preds = %5174
  %5187 = and i64 %5183, 8589934560
  %5188 = sub i64 %5177, %5187
  br label %5189

5189:                                             ; preds = %5189, %5186
  %5190 = phi i64 [ 0, %5186 ], [ %5213, %5189 ]
  %5191 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5186 ], [ %5209, %5189 ]
  %5192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5186 ], [ %5210, %5189 ]
  %5193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5186 ], [ %5211, %5189 ]
  %5194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5186 ], [ %5212, %5189 ]
  %5195 = sub i64 %5177, %5190
  %5196 = getelementptr inbounds i32, ptr %11, i64 %5195
  %5197 = getelementptr inbounds i32, ptr %5196, i64 -7
  %5198 = load <8 x i32>, ptr %5197, align 4, !tbaa !5
  %5199 = shufflevector <8 x i32> %5198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5200 = getelementptr inbounds i32, ptr %5196, i64 -15
  %5201 = load <8 x i32>, ptr %5200, align 4, !tbaa !5
  %5202 = shufflevector <8 x i32> %5201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5203 = getelementptr inbounds i32, ptr %5196, i64 -23
  %5204 = load <8 x i32>, ptr %5203, align 4, !tbaa !5
  %5205 = shufflevector <8 x i32> %5204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5206 = getelementptr inbounds i32, ptr %5196, i64 -31
  %5207 = load <8 x i32>, ptr %5206, align 4, !tbaa !5
  %5208 = shufflevector <8 x i32> %5207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5209 = mul <8 x i32> %5199, %5191
  %5210 = mul <8 x i32> %5202, %5192
  %5211 = mul <8 x i32> %5205, %5193
  %5212 = mul <8 x i32> %5208, %5194
  %5213 = add nuw i64 %5190, 32
  %5214 = icmp eq i64 %5213, %5187
  br i1 %5214, label %5215, label %5189, !llvm.loop !929

5215:                                             ; preds = %5189
  %5216 = mul <8 x i32> %5210, %5209
  %5217 = mul <8 x i32> %5211, %5216
  %5218 = mul <8 x i32> %5212, %5217
  %5219 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5218)
  %5220 = icmp eq i64 %5183, %5187
  br i1 %5220, label %5233, label %5221

5221:                                             ; preds = %5174, %5215
  %5222 = phi i64 [ %5177, %5174 ], [ %5188, %5215 ]
  %5223 = phi i32 [ 1, %5174 ], [ %5219, %5215 ]
  br label %5224

5224:                                             ; preds = %5221, %5224
  %5225 = phi i64 [ %5230, %5224 ], [ %5222, %5221 ]
  %5226 = phi i32 [ %5229, %5224 ], [ %5223, %5221 ]
  %5227 = getelementptr inbounds i32, ptr %11, i64 %5225
  %5228 = load i32, ptr %5227, align 4, !tbaa !5
  %5229 = mul nsw i32 %5228, %5226
  %5230 = add nsw i64 %5225, -1
  %5231 = trunc i64 %5225 to i32
  %5232 = icmp sgt i32 %5231, 0
  br i1 %5232, label %5224, label %5233, !llvm.loop !930

5233:                                             ; preds = %5224, %5215
  %5234 = phi i32 [ %5219, %5215 ], [ %5229, %5224 ]
  %5235 = and i64 %5184, 4294967295
  %5236 = getelementptr inbounds i32, ptr %6, i64 %5235
  %5237 = load i32, ptr %5236, align 4, !tbaa !5
  %5238 = mul nsw i32 %5237, %5234
  %5239 = add nsw i32 %5238, %5178
  %5240 = icmp sgt i64 %5176, 2
  %5241 = add nsw i64 %5177, -1
  %5242 = add i32 %5175, 1
  br i1 %5240, label %5174, label %5243, !llvm.loop !931

5243:                                             ; preds = %5233, %5170
  %5244 = phi i32 [ %5173, %5170 ], [ %5239, %5233 ]
  %5245 = icmp slt i32 %5244, %5
  br i1 %5245, label %5248, label %5246

5246:                                             ; preds = %5243
  %5247 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

5248:                                             ; preds = %5243
  %5249 = sext i32 %5244 to i64
  %5250 = getelementptr inbounds i64, ptr %4994, i64 %5249
  %5251 = load i64, ptr %5250, align 8, !tbaa !120
  %5252 = sitofp i64 %5251 to double
  %5253 = icmp slt i64 %5251, 0
  %5254 = fneg fast double %5252
  %5255 = select i1 %5253, double %5254, double %5252
  %5256 = tail call fast double @llvm.maxnum.f64(double %5171, double %5255)
  store double %5256, ptr %4996, align 8, !tbaa !18
  %5257 = add nuw nsw i32 %5172, 1
  br i1 %5015, label %5258, label %5308

5258:                                             ; preds = %5248
  %5259 = load i32, ptr %4, align 4, !tbaa !5
  %5260 = load i32, ptr %12, align 4, !tbaa !5
  %5261 = add nsw i32 %5260, -1
  %5262 = icmp slt i32 %5259, %5261
  br i1 %5262, label %5285, label %5263

5263:                                             ; preds = %5258
  %5264 = icmp eq i32 %5259, %5261
  br i1 %5264, label %5265, label %5301

5265:                                             ; preds = %5263
  store i32 0, ptr %4, align 4, !tbaa !5
  %5266 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5266, ptr %6, align 4, !tbaa !5
  br i1 %5020, label %5308, label %5267

5267:                                             ; preds = %5265, %5295
  %5268 = phi i64 [ %5299, %5295 ], [ 1, %5265 ]
  %5269 = getelementptr inbounds i32, ptr %4, i64 %5268
  %5270 = load i32, ptr %5269, align 4, !tbaa !5
  %5271 = getelementptr inbounds i32, ptr %12, i64 %5268
  %5272 = load i32, ptr %5271, align 4, !tbaa !5
  %5273 = add nsw i32 %5272, -1
  %5274 = icmp slt i32 %5270, %5273
  br i1 %5274, label %5275, label %5293

5275:                                             ; preds = %5267
  br i1 %5262, label %5285, label %5276

5276:                                             ; preds = %5275
  %5277 = shl i64 %5268, 32
  %5278 = add i64 %5277, -4294967296
  %5279 = ashr exact i64 %5278, 32
  %5280 = getelementptr inbounds i32, ptr %7, i64 %5279
  %5281 = load i32, ptr %5280, align 4, !tbaa !5
  %5282 = getelementptr inbounds i32, ptr %6, i64 %5268
  %5283 = load i32, ptr %5282, align 4, !tbaa !5
  %5284 = add nsw i32 %5283, %5281
  store i32 %5284, ptr %5282, align 4, !tbaa !5
  br label %5303

5285:                                             ; preds = %5258, %5275
  %5286 = phi i32 [ %5270, %5275 ], [ %5259, %5258 ]
  %5287 = phi ptr [ %5269, %5275 ], [ %4, %5258 ]
  %5288 = phi i64 [ %5268, %5275 ], [ 0, %5258 ]
  %5289 = add nsw i32 %5286, 1
  store i32 %5289, ptr %5287, align 4, !tbaa !5
  %5290 = getelementptr inbounds i32, ptr %7, i64 %5288
  %5291 = load i32, ptr %5290, align 4, !tbaa !5
  %5292 = getelementptr inbounds i32, ptr %6, i64 %5288
  br label %5303

5293:                                             ; preds = %5267
  %5294 = icmp eq i32 %5270, %5273
  br i1 %5294, label %5295, label %5301

5295:                                             ; preds = %5293
  store i32 0, ptr %5269, align 4, !tbaa !5
  %5296 = getelementptr inbounds i32, ptr %8, i64 %5268
  %5297 = load i32, ptr %5296, align 4, !tbaa !5
  %5298 = getelementptr inbounds i32, ptr %6, i64 %5268
  store i32 %5297, ptr %5298, align 4, !tbaa !5
  %5299 = add nuw nsw i64 %5268, 1
  %5300 = icmp eq i64 %5299, %5018
  br i1 %5300, label %5308, label %5267, !llvm.loop !932

5301:                                             ; preds = %5263, %5293
  %5302 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

5303:                                             ; preds = %5276, %5285
  %5304 = phi ptr [ %5292, %5285 ], [ %5269, %5276 ]
  %5305 = phi i32 [ %5291, %5285 ], [ 1, %5276 ]
  %5306 = load i32, ptr %5304, align 4, !tbaa !5
  %5307 = add nsw i32 %5306, %5305
  store i32 %5307, ptr %5304, align 4, !tbaa !5
  br label %5308

5308:                                             ; preds = %5295, %5303, %5265, %5248
  %5309 = icmp eq i32 %5257, %5
  br i1 %5309, label %5616, label %5170, !llvm.loop !933

5310:                                             ; preds = %5006
  %5311 = getelementptr inbounds i32, ptr %3, i64 %19
  %5312 = load i32, ptr %5311, align 4, !tbaa !5
  %5313 = icmp eq i32 %5312, 0
  %5314 = icmp sgt i32 %5, 0
  br i1 %5313, label %5324, label %5315

5315:                                             ; preds = %5310
  br i1 %5314, label %5316, label %5616

5316:                                             ; preds = %5315
  %5317 = icmp sgt i32 %13, 1
  %5318 = icmp sgt i32 %13, 0
  %5319 = add i32 %13, -2
  %5320 = zext i32 %5319 to i64
  %5321 = zext i32 %13 to i64
  %5322 = add nuw i32 %5, 1
  %5323 = icmp eq i32 %13, 1
  br label %5468

5324:                                             ; preds = %5310
  br i1 %5314, label %5325, label %5616

5325:                                             ; preds = %5324
  %5326 = icmp sgt i32 %13, 1
  %5327 = icmp sgt i32 %13, 0
  %5328 = add i32 %13, -2
  %5329 = zext i32 %5328 to i64
  %5330 = zext i32 %13 to i64
  %5331 = add nuw i32 %5, 1
  %5332 = icmp eq i32 %13, 1
  br label %5333

5333:                                             ; preds = %5325, %5466
  %5334 = phi double [ 0.000000e+00, %5325 ], [ %5416, %5466 ]
  %5335 = phi i32 [ 0, %5325 ], [ %5418, %5466 ]
  %5336 = phi double [ 0.000000e+00, %5325 ], [ %5417, %5466 ]
  %5337 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5326, label %5338, label %5407

5338:                                             ; preds = %5333, %5397
  %5339 = phi i32 [ %5406, %5397 ], [ 0, %5333 ]
  %5340 = phi i64 [ %5348, %5397 ], [ %5330, %5333 ]
  %5341 = phi i64 [ %5405, %5397 ], [ %5329, %5333 ]
  %5342 = phi i32 [ %5403, %5397 ], [ %5337, %5333 ]
  %5343 = sub i32 %5328, %5339
  %5344 = tail call i32 @llvm.smin.i32(i32 %5343, i32 0)
  %5345 = sub i32 %5343, %5344
  %5346 = zext i32 %5345 to i64
  %5347 = add nuw nsw i64 %5346, 1
  %5348 = add nsw i64 %5340, -1
  %5349 = icmp ult i32 %5345, 31
  br i1 %5349, label %5385, label %5350

5350:                                             ; preds = %5338
  %5351 = and i64 %5347, 8589934560
  %5352 = sub i64 %5341, %5351
  br label %5353

5353:                                             ; preds = %5353, %5350
  %5354 = phi i64 [ 0, %5350 ], [ %5377, %5353 ]
  %5355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5350 ], [ %5373, %5353 ]
  %5356 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5350 ], [ %5374, %5353 ]
  %5357 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5350 ], [ %5375, %5353 ]
  %5358 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5350 ], [ %5376, %5353 ]
  %5359 = sub i64 %5341, %5354
  %5360 = getelementptr inbounds i32, ptr %9, i64 %5359
  %5361 = getelementptr inbounds i32, ptr %5360, i64 -7
  %5362 = load <8 x i32>, ptr %5361, align 4, !tbaa !5
  %5363 = shufflevector <8 x i32> %5362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5364 = getelementptr inbounds i32, ptr %5360, i64 -15
  %5365 = load <8 x i32>, ptr %5364, align 4, !tbaa !5
  %5366 = shufflevector <8 x i32> %5365, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5367 = getelementptr inbounds i32, ptr %5360, i64 -23
  %5368 = load <8 x i32>, ptr %5367, align 4, !tbaa !5
  %5369 = shufflevector <8 x i32> %5368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5370 = getelementptr inbounds i32, ptr %5360, i64 -31
  %5371 = load <8 x i32>, ptr %5370, align 4, !tbaa !5
  %5372 = shufflevector <8 x i32> %5371, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5373 = mul <8 x i32> %5363, %5355
  %5374 = mul <8 x i32> %5366, %5356
  %5375 = mul <8 x i32> %5369, %5357
  %5376 = mul <8 x i32> %5372, %5358
  %5377 = add nuw i64 %5354, 32
  %5378 = icmp eq i64 %5377, %5351
  br i1 %5378, label %5379, label %5353, !llvm.loop !934

5379:                                             ; preds = %5353
  %5380 = mul <8 x i32> %5374, %5373
  %5381 = mul <8 x i32> %5375, %5380
  %5382 = mul <8 x i32> %5376, %5381
  %5383 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5382)
  %5384 = icmp eq i64 %5347, %5351
  br i1 %5384, label %5397, label %5385

5385:                                             ; preds = %5338, %5379
  %5386 = phi i64 [ %5341, %5338 ], [ %5352, %5379 ]
  %5387 = phi i32 [ 1, %5338 ], [ %5383, %5379 ]
  br label %5388

5388:                                             ; preds = %5385, %5388
  %5389 = phi i64 [ %5394, %5388 ], [ %5386, %5385 ]
  %5390 = phi i32 [ %5393, %5388 ], [ %5387, %5385 ]
  %5391 = getelementptr inbounds i32, ptr %9, i64 %5389
  %5392 = load i32, ptr %5391, align 4, !tbaa !5
  %5393 = mul nsw i32 %5392, %5390
  %5394 = add nsw i64 %5389, -1
  %5395 = trunc i64 %5389 to i32
  %5396 = icmp sgt i32 %5395, 0
  br i1 %5396, label %5388, label %5397, !llvm.loop !935

5397:                                             ; preds = %5388, %5379
  %5398 = phi i32 [ %5383, %5379 ], [ %5393, %5388 ]
  %5399 = and i64 %5348, 4294967295
  %5400 = getelementptr inbounds i32, ptr %6, i64 %5399
  %5401 = load i32, ptr %5400, align 4, !tbaa !5
  %5402 = mul nsw i32 %5401, %5398
  %5403 = add nsw i32 %5402, %5342
  %5404 = icmp sgt i64 %5340, 2
  %5405 = add nsw i64 %5341, -1
  %5406 = add i32 %5339, 1
  br i1 %5404, label %5338, label %5407, !llvm.loop !936

5407:                                             ; preds = %5397, %5333
  %5408 = phi i32 [ %5337, %5333 ], [ %5403, %5397 ]
  %5409 = sext i32 %5408 to i64
  %5410 = getelementptr inbounds i64, ptr %4994, i64 %5409
  %5411 = load i64, ptr %5410, align 8, !tbaa !120
  %5412 = sitofp i64 %5411 to double
  %5413 = icmp slt i64 %5411, 0
  %5414 = fneg fast double %5412
  %5415 = select fast i1 %5413, double %5414, double %5412
  %5416 = tail call fast double @llvm.maxnum.f64(double %5334, double %5415)
  %5417 = fadd fast double %5336, 1.000000e+00
  %5418 = add nuw nsw i32 %5335, 1
  br i1 %5327, label %5419, label %5466

5419:                                             ; preds = %5407
  %5420 = load i32, ptr %4, align 4, !tbaa !5
  %5421 = load i32, ptr %12, align 4, !tbaa !5
  %5422 = add nsw i32 %5421, -1
  %5423 = icmp slt i32 %5420, %5422
  br i1 %5423, label %5443, label %5424

5424:                                             ; preds = %5419
  %5425 = icmp eq i32 %5420, %5422
  br i1 %5425, label %5426, label %5459

5426:                                             ; preds = %5424
  store i32 0, ptr %4, align 4, !tbaa !5
  %5427 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5427, ptr %6, align 4, !tbaa !5
  br i1 %5332, label %5466, label %5428

5428:                                             ; preds = %5426, %5453
  %5429 = phi i64 [ %5457, %5453 ], [ 1, %5426 ]
  %5430 = getelementptr inbounds i32, ptr %4, i64 %5429
  %5431 = load i32, ptr %5430, align 4, !tbaa !5
  %5432 = getelementptr inbounds i32, ptr %12, i64 %5429
  %5433 = load i32, ptr %5432, align 4, !tbaa !5
  %5434 = add nsw i32 %5433, -1
  %5435 = icmp slt i32 %5431, %5434
  br i1 %5435, label %5436, label %5451

5436:                                             ; preds = %5428
  br i1 %5423, label %5443, label %5437

5437:                                             ; preds = %5436
  %5438 = getelementptr inbounds i32, ptr %7, i64 %5429
  %5439 = load i32, ptr %5438, align 4, !tbaa !5
  %5440 = getelementptr inbounds i32, ptr %6, i64 %5429
  %5441 = load i32, ptr %5440, align 4, !tbaa !5
  %5442 = add nsw i32 %5441, %5439
  store i32 %5442, ptr %5440, align 4, !tbaa !5
  br label %5461

5443:                                             ; preds = %5419, %5436
  %5444 = phi i32 [ %5431, %5436 ], [ %5420, %5419 ]
  %5445 = phi ptr [ %5430, %5436 ], [ %4, %5419 ]
  %5446 = phi i64 [ %5429, %5436 ], [ 0, %5419 ]
  %5447 = add nsw i32 %5444, 1
  store i32 %5447, ptr %5445, align 4, !tbaa !5
  %5448 = getelementptr inbounds i32, ptr %7, i64 %5446
  %5449 = load i32, ptr %5448, align 4, !tbaa !5
  %5450 = getelementptr inbounds i32, ptr %6, i64 %5446
  br label %5461

5451:                                             ; preds = %5428
  %5452 = icmp eq i32 %5431, %5434
  br i1 %5452, label %5453, label %5459

5453:                                             ; preds = %5451
  store i32 0, ptr %5430, align 4, !tbaa !5
  %5454 = getelementptr inbounds i32, ptr %8, i64 %5429
  %5455 = load i32, ptr %5454, align 4, !tbaa !5
  %5456 = getelementptr inbounds i32, ptr %6, i64 %5429
  store i32 %5455, ptr %5456, align 4, !tbaa !5
  %5457 = add nuw nsw i64 %5429, 1
  %5458 = icmp eq i64 %5457, %5330
  br i1 %5458, label %5466, label %5428, !llvm.loop !937

5459:                                             ; preds = %5424, %5451
  store double %5416, ptr %4996, align 8, !tbaa !18
  %5460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

5461:                                             ; preds = %5437, %5443
  %5462 = phi ptr [ %5450, %5443 ], [ %5430, %5437 ]
  %5463 = phi i32 [ %5449, %5443 ], [ 1, %5437 ]
  %5464 = load i32, ptr %5462, align 4, !tbaa !5
  %5465 = add nsw i32 %5464, %5463
  store i32 %5465, ptr %5462, align 4, !tbaa !5
  br label %5466

5466:                                             ; preds = %5453, %5461, %5426, %5407
  %5467 = icmp eq i32 %5418, %5
  br i1 %5467, label %5615, label %5333, !llvm.loop !938

5468:                                             ; preds = %5316, %5606
  %5469 = phi double [ 0.000000e+00, %5316 ], [ %5554, %5606 ]
  %5470 = phi i32 [ 0, %5316 ], [ %5555, %5606 ]
  %5471 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5317, label %5472, label %5541

5472:                                             ; preds = %5468, %5531
  %5473 = phi i32 [ %5540, %5531 ], [ 0, %5468 ]
  %5474 = phi i64 [ %5482, %5531 ], [ %5321, %5468 ]
  %5475 = phi i64 [ %5539, %5531 ], [ %5320, %5468 ]
  %5476 = phi i32 [ %5537, %5531 ], [ %5471, %5468 ]
  %5477 = sub i32 %5319, %5473
  %5478 = tail call i32 @llvm.smin.i32(i32 %5477, i32 0)
  %5479 = sub i32 %5477, %5478
  %5480 = zext i32 %5479 to i64
  %5481 = add nuw nsw i64 %5480, 1
  %5482 = add nsw i64 %5474, -1
  %5483 = icmp ult i32 %5479, 31
  br i1 %5483, label %5519, label %5484

5484:                                             ; preds = %5472
  %5485 = and i64 %5481, 8589934560
  %5486 = sub i64 %5475, %5485
  br label %5487

5487:                                             ; preds = %5487, %5484
  %5488 = phi i64 [ 0, %5484 ], [ %5511, %5487 ]
  %5489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5484 ], [ %5507, %5487 ]
  %5490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5484 ], [ %5508, %5487 ]
  %5491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5484 ], [ %5509, %5487 ]
  %5492 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5484 ], [ %5510, %5487 ]
  %5493 = sub i64 %5475, %5488
  %5494 = getelementptr inbounds i32, ptr %11, i64 %5493
  %5495 = getelementptr inbounds i32, ptr %5494, i64 -7
  %5496 = load <8 x i32>, ptr %5495, align 4, !tbaa !5
  %5497 = shufflevector <8 x i32> %5496, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5498 = getelementptr inbounds i32, ptr %5494, i64 -15
  %5499 = load <8 x i32>, ptr %5498, align 4, !tbaa !5
  %5500 = shufflevector <8 x i32> %5499, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5501 = getelementptr inbounds i32, ptr %5494, i64 -23
  %5502 = load <8 x i32>, ptr %5501, align 4, !tbaa !5
  %5503 = shufflevector <8 x i32> %5502, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5504 = getelementptr inbounds i32, ptr %5494, i64 -31
  %5505 = load <8 x i32>, ptr %5504, align 4, !tbaa !5
  %5506 = shufflevector <8 x i32> %5505, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5507 = mul <8 x i32> %5497, %5489
  %5508 = mul <8 x i32> %5500, %5490
  %5509 = mul <8 x i32> %5503, %5491
  %5510 = mul <8 x i32> %5506, %5492
  %5511 = add nuw i64 %5488, 32
  %5512 = icmp eq i64 %5511, %5485
  br i1 %5512, label %5513, label %5487, !llvm.loop !939

5513:                                             ; preds = %5487
  %5514 = mul <8 x i32> %5508, %5507
  %5515 = mul <8 x i32> %5509, %5514
  %5516 = mul <8 x i32> %5510, %5515
  %5517 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5516)
  %5518 = icmp eq i64 %5481, %5485
  br i1 %5518, label %5531, label %5519

5519:                                             ; preds = %5472, %5513
  %5520 = phi i64 [ %5475, %5472 ], [ %5486, %5513 ]
  %5521 = phi i32 [ 1, %5472 ], [ %5517, %5513 ]
  br label %5522

5522:                                             ; preds = %5519, %5522
  %5523 = phi i64 [ %5528, %5522 ], [ %5520, %5519 ]
  %5524 = phi i32 [ %5527, %5522 ], [ %5521, %5519 ]
  %5525 = getelementptr inbounds i32, ptr %11, i64 %5523
  %5526 = load i32, ptr %5525, align 4, !tbaa !5
  %5527 = mul nsw i32 %5526, %5524
  %5528 = add nsw i64 %5523, -1
  %5529 = trunc i64 %5523 to i32
  %5530 = icmp sgt i32 %5529, 0
  br i1 %5530, label %5522, label %5531, !llvm.loop !940

5531:                                             ; preds = %5522, %5513
  %5532 = phi i32 [ %5517, %5513 ], [ %5527, %5522 ]
  %5533 = and i64 %5482, 4294967295
  %5534 = getelementptr inbounds i32, ptr %6, i64 %5533
  %5535 = load i32, ptr %5534, align 4, !tbaa !5
  %5536 = mul nsw i32 %5535, %5532
  %5537 = add nsw i32 %5536, %5476
  %5538 = icmp sgt i64 %5474, 2
  %5539 = add nsw i64 %5475, -1
  %5540 = add i32 %5473, 1
  br i1 %5538, label %5472, label %5541, !llvm.loop !941

5541:                                             ; preds = %5531, %5468
  %5542 = phi i32 [ %5471, %5468 ], [ %5537, %5531 ]
  %5543 = icmp slt i32 %5542, %5
  br i1 %5543, label %5546, label %5544

5544:                                             ; preds = %5541
  %5545 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5621

5546:                                             ; preds = %5541
  %5547 = sext i32 %5542 to i64
  %5548 = getelementptr inbounds i64, ptr %4994, i64 %5547
  %5549 = load i64, ptr %5548, align 8, !tbaa !120
  %5550 = sitofp i64 %5549 to double
  %5551 = icmp slt i64 %5549, 0
  %5552 = fneg fast double %5550
  %5553 = select fast i1 %5551, double %5552, double %5550
  %5554 = tail call fast double @llvm.maxnum.f64(double %5469, double %5553)
  store double %5554, ptr %4996, align 8, !tbaa !18
  %5555 = add nuw nsw i32 %5470, 1
  br i1 %5318, label %5556, label %5606

5556:                                             ; preds = %5546
  %5557 = load i32, ptr %4, align 4, !tbaa !5
  %5558 = load i32, ptr %12, align 4, !tbaa !5
  %5559 = add nsw i32 %5558, -1
  %5560 = icmp slt i32 %5557, %5559
  br i1 %5560, label %5583, label %5561

5561:                                             ; preds = %5556
  %5562 = icmp eq i32 %5557, %5559
  br i1 %5562, label %5563, label %5599

5563:                                             ; preds = %5561
  store i32 0, ptr %4, align 4, !tbaa !5
  %5564 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5564, ptr %6, align 4, !tbaa !5
  br i1 %5323, label %5606, label %5565

5565:                                             ; preds = %5563, %5593
  %5566 = phi i64 [ %5597, %5593 ], [ 1, %5563 ]
  %5567 = getelementptr inbounds i32, ptr %4, i64 %5566
  %5568 = load i32, ptr %5567, align 4, !tbaa !5
  %5569 = getelementptr inbounds i32, ptr %12, i64 %5566
  %5570 = load i32, ptr %5569, align 4, !tbaa !5
  %5571 = add nsw i32 %5570, -1
  %5572 = icmp slt i32 %5568, %5571
  br i1 %5572, label %5573, label %5591

5573:                                             ; preds = %5565
  br i1 %5560, label %5583, label %5574

5574:                                             ; preds = %5573
  %5575 = shl i64 %5566, 32
  %5576 = add i64 %5575, -4294967296
  %5577 = ashr exact i64 %5576, 32
  %5578 = getelementptr inbounds i32, ptr %7, i64 %5577
  %5579 = load i32, ptr %5578, align 4, !tbaa !5
  %5580 = getelementptr inbounds i32, ptr %6, i64 %5566
  %5581 = load i32, ptr %5580, align 4, !tbaa !5
  %5582 = add nsw i32 %5581, %5579
  store i32 %5582, ptr %5580, align 4, !tbaa !5
  br label %5601

5583:                                             ; preds = %5556, %5573
  %5584 = phi i32 [ %5568, %5573 ], [ %5557, %5556 ]
  %5585 = phi ptr [ %5567, %5573 ], [ %4, %5556 ]
  %5586 = phi i64 [ %5566, %5573 ], [ 0, %5556 ]
  %5587 = add nsw i32 %5584, 1
  store i32 %5587, ptr %5585, align 4, !tbaa !5
  %5588 = getelementptr inbounds i32, ptr %7, i64 %5586
  %5589 = load i32, ptr %5588, align 4, !tbaa !5
  %5590 = getelementptr inbounds i32, ptr %6, i64 %5586
  br label %5601

5591:                                             ; preds = %5565
  %5592 = icmp eq i32 %5568, %5571
  br i1 %5592, label %5593, label %5599

5593:                                             ; preds = %5591
  store i32 0, ptr %5567, align 4, !tbaa !5
  %5594 = getelementptr inbounds i32, ptr %8, i64 %5566
  %5595 = load i32, ptr %5594, align 4, !tbaa !5
  %5596 = getelementptr inbounds i32, ptr %6, i64 %5566
  store i32 %5595, ptr %5596, align 4, !tbaa !5
  %5597 = add nuw nsw i64 %5566, 1
  %5598 = icmp eq i64 %5597, %5321
  br i1 %5598, label %5606, label %5565, !llvm.loop !942

5599:                                             ; preds = %5561, %5591
  %5600 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5621

5601:                                             ; preds = %5574, %5583
  %5602 = phi ptr [ %5590, %5583 ], [ %5567, %5574 ]
  %5603 = phi i32 [ %5589, %5583 ], [ 1, %5574 ]
  %5604 = load i32, ptr %5602, align 4, !tbaa !5
  %5605 = add nsw i32 %5604, %5603
  store i32 %5605, ptr %5602, align 4, !tbaa !5
  br label %5606

5606:                                             ; preds = %5593, %5601, %5563, %5546
  %5607 = icmp eq i32 %5555, %5
  br i1 %5607, label %5616, label %5468, !llvm.loop !943

5608:                                             ; preds = %5006
  %5609 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1657, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5616

5610:                                             ; preds = %2066
  store i16 %2016, ptr %1893, align 2, !tbaa !78
  br label %5616

5611:                                             ; preds = %2371
  store i16 %2321, ptr %1893, align 2, !tbaa !78
  br label %5616

5612:                                             ; preds = %4223
  store double %4173, ptr %3753, align 8, !tbaa !18
  br label %5616

5613:                                             ; preds = %4546
  store float %4496, ptr %4371, align 4, !tbaa !162
  br label %5616

5614:                                             ; preds = %4848
  store float %4798, ptr %4371, align 4, !tbaa !162
  br label %5616

5615:                                             ; preds = %5466
  store double %5416, ptr %4996, align 8, !tbaa !18
  br label %5616

5616:                                             ; preds = %5606, %5308, %5168, %4988, %4690, %4363, %4065, %3925, %3745, %3608, %3453, %3310, %3131, %2993, %2837, %2693, %2512, %2212, %1885, %1744, %1585, %1439, %1258, %1120, %964, %820, %639, %499, %341, %200, %5315, %5324, %5615, %5012, %5021, %4697, %4706, %5614, %4387, %4396, %5613, %4072, %4081, %5612, %3769, %3778, %3460, %3469, %3152, %3161, %2844, %2853, %2534, %2543, %2219, %2228, %5611, %1905, %1914, %5610, %1592, %1601, %1278, %1287, %971, %980, %661, %670, %348, %357, %40, %49, %4998, %5608, %4373, %4990, %3755, %4365, %3141, %3747, %2522, %3133, %1895, %2514, %1268, %1887, %649, %1260, %28, %641, %18
  %5617 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %641 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %649 ], [ 0.000000e+00, %1887 ], [ 0.000000e+00, %1268 ], [ 0.000000e+00, %2514 ], [ 0.000000e+00, %1895 ], [ 0.000000e+00, %3133 ], [ 0.000000e+00, %2522 ], [ 0.000000e+00, %3747 ], [ 0.000000e+00, %3141 ], [ 0.000000e+00, %4365 ], [ 0.000000e+00, %3755 ], [ 0.000000e+00, %4990 ], [ 0.000000e+00, %4373 ], [ 0.000000e+00, %5608 ], [ 0.000000e+00, %4998 ], [ 0.000000e+00, %49 ], [ 0.000000e+00, %40 ], [ 0.000000e+00, %357 ], [ 0.000000e+00, %348 ], [ 0.000000e+00, %670 ], [ 0.000000e+00, %661 ], [ 0.000000e+00, %980 ], [ 0.000000e+00, %971 ], [ 0.000000e+00, %1287 ], [ 0.000000e+00, %1278 ], [ 0.000000e+00, %1601 ], [ 0.000000e+00, %1592 ], [ %2017, %5610 ], [ 0.000000e+00, %1914 ], [ 0.000000e+00, %1905 ], [ %2322, %5611 ], [ 0.000000e+00, %2228 ], [ 0.000000e+00, %2219 ], [ 0.000000e+00, %2543 ], [ 0.000000e+00, %2534 ], [ 0.000000e+00, %2853 ], [ 0.000000e+00, %2844 ], [ 0.000000e+00, %3161 ], [ 0.000000e+00, %3152 ], [ 0.000000e+00, %3469 ], [ 0.000000e+00, %3460 ], [ 0.000000e+00, %3778 ], [ 0.000000e+00, %3769 ], [ %4174, %5612 ], [ 0.000000e+00, %4081 ], [ 0.000000e+00, %4072 ], [ %4497, %5613 ], [ 0.000000e+00, %4396 ], [ 0.000000e+00, %4387 ], [ %4799, %5614 ], [ 0.000000e+00, %4706 ], [ 0.000000e+00, %4697 ], [ 0.000000e+00, %5021 ], [ 0.000000e+00, %5012 ], [ %5417, %5615 ], [ 0.000000e+00, %5324 ], [ 0.000000e+00, %5315 ], [ %151, %200 ], [ 0.000000e+00, %341 ], [ %450, %499 ], [ 0.000000e+00, %639 ], [ %771, %820 ], [ 0.000000e+00, %964 ], [ %1071, %1120 ], [ 0.000000e+00, %1258 ], [ %1390, %1439 ], [ 0.000000e+00, %1585 ], [ %1695, %1744 ], [ 0.000000e+00, %1885 ], [ 0.000000e+00, %2212 ], [ 0.000000e+00, %2512 ], [ %2644, %2693 ], [ 0.000000e+00, %2837 ], [ %2944, %2993 ], [ 0.000000e+00, %3131 ], [ %3261, %3310 ], [ 0.000000e+00, %3453 ], [ %3559, %3608 ], [ 0.000000e+00, %3745 ], [ %3876, %3925 ], [ 0.000000e+00, %4065 ], [ 0.000000e+00, %4363 ], [ 0.000000e+00, %4690 ], [ 0.000000e+00, %4988 ], [ %5119, %5168 ], [ 0.000000e+00, %5308 ], [ 0.000000e+00, %5606 ]
  %5618 = phi i32 [ %10, %18 ], [ 1, %641 ], [ 1, %28 ], [ 1, %1260 ], [ 1, %649 ], [ 1, %1887 ], [ 1, %1268 ], [ 1, %2514 ], [ 1, %1895 ], [ 1, %3133 ], [ 1, %2522 ], [ 1, %3747 ], [ 1, %3141 ], [ 1, %4365 ], [ 1, %3755 ], [ 1, %4990 ], [ 1, %4373 ], [ 1, %5608 ], [ 1, %4998 ], [ 1, %49 ], [ 1, %40 ], [ 1, %357 ], [ 1, %348 ], [ 1, %670 ], [ 1, %661 ], [ 1, %980 ], [ 1, %971 ], [ 1, %1287 ], [ 1, %1278 ], [ 1, %1601 ], [ 1, %1592 ], [ %1921, %5610 ], [ 1, %1914 ], [ 1, %1905 ], [ %2235, %5611 ], [ 1, %2228 ], [ 1, %2219 ], [ 1, %2543 ], [ 1, %2534 ], [ 1, %2853 ], [ 1, %2844 ], [ 1, %3161 ], [ 1, %3152 ], [ 1, %3469 ], [ 1, %3460 ], [ 1, %3778 ], [ 1, %3769 ], [ %4088, %5612 ], [ 1, %4081 ], [ 1, %4072 ], [ %4403, %5613 ], [ 1, %4396 ], [ 1, %4387 ], [ %4713, %5614 ], [ 1, %4706 ], [ 1, %4697 ], [ 1, %5021 ], [ 1, %5012 ], [ %5331, %5615 ], [ 1, %5324 ], [ 1, %5315 ], [ %56, %200 ], [ %47, %341 ], [ %364, %499 ], [ %355, %639 ], [ %677, %820 ], [ %668, %964 ], [ %987, %1120 ], [ %978, %1258 ], [ %1294, %1439 ], [ %1285, %1585 ], [ %1608, %1744 ], [ %1599, %1885 ], [ %1912, %2212 ], [ %2226, %2512 ], [ %2550, %2693 ], [ %2541, %2837 ], [ %2860, %2993 ], [ %2851, %3131 ], [ %3168, %3310 ], [ %3159, %3453 ], [ %3476, %3608 ], [ %3467, %3745 ], [ %3785, %3925 ], [ %3776, %4065 ], [ %4079, %4363 ], [ %4394, %4690 ], [ %4704, %4988 ], [ %5028, %5168 ], [ %5019, %5308 ], [ %5322, %5606 ]
  %5619 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5618, ptr noundef nonnull @.str.5) #3
  %5620 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5617, ptr noundef nonnull @.str.6) #3
  br label %5621

5621:                                             ; preds = %5161, %5246, %5301, %5459, %5544, %5599, %4539, %4624, %4683, %4841, %4926, %4981, %3918, %4003, %4058, %4216, %4301, %4356, %3303, %3388, %3446, %3601, %3686, %3738, %2686, %2770, %2830, %2986, %3070, %3124, %2059, %2144, %2205, %2364, %2449, %2505, %1432, %1516, %1578, %1737, %1821, %1878, %813, %897, %957, %1113, %1197, %1251, %193, %277, %334, %492, %576, %632, %5616
  %5622 = phi i32 [ 0, %5616 ], [ -1, %632 ], [ -1, %576 ], [ -1, %492 ], [ -1, %334 ], [ -1, %277 ], [ -1, %193 ], [ -1, %1251 ], [ -1, %1197 ], [ -1, %1113 ], [ -1, %957 ], [ -1, %897 ], [ -1, %813 ], [ -1, %1878 ], [ -1, %1821 ], [ -1, %1737 ], [ -1, %1578 ], [ -1, %1516 ], [ -1, %1432 ], [ -1, %2505 ], [ -1, %2449 ], [ -1, %2364 ], [ -1, %2205 ], [ -1, %2144 ], [ -1, %2059 ], [ -1, %3124 ], [ -1, %3070 ], [ -1, %2986 ], [ -1, %2830 ], [ -1, %2770 ], [ -1, %2686 ], [ -1, %3738 ], [ -1, %3686 ], [ -1, %3601 ], [ -1, %3446 ], [ -1, %3388 ], [ -1, %3303 ], [ -1, %4356 ], [ -1, %4301 ], [ -1, %4216 ], [ -1, %4058 ], [ -1, %4003 ], [ -1, %3918 ], [ -1, %4981 ], [ -1, %4926 ], [ -1, %4841 ], [ -1, %4683 ], [ -1, %4624 ], [ -1, %4539 ], [ -1, %5599 ], [ -1, %5544 ], [ -1, %5459 ], [ -1, %5301 ], [ -1, %5246 ], [ -1, %5161 ]
  ret i32 %5622
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5579 [
    i32 101, label %22
    i32 102, label %632
    i32 103, label %1251
    i32 104, label %1874
    i32 105, label %2497
    i32 106, label %3116
    i32 107, label %3735
    i32 108, label %4344
    i32 109, label %4964
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5579

31:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %32
    i32 0, label %338
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5579

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %198

46:                                               ; preds = %32
  br i1 %36, label %47, label %5579

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %196
  %56 = phi i32 [ 0, %47 ], [ %148, %196 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %147, %196 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !944

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !945

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !946

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds double, ptr %24, i64 %130
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = fptoui double %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = fcmp fast uge double %139, 0.000000e+00
  %141 = fneg fast double %139
  %142 = tail call fast double @llvm.fabs.f64(double %139)
  %143 = fcmp fast ole double %142, %137
  %144 = select nnan ninf i1 %140, double %139, double %141
  %145 = select i1 %143, double %137, double %144
  %146 = fptoui double %145 to i8
  store i8 %146, ptr %26, align 1, !tbaa !11
  %147 = fadd fast double %132, %57
  %148 = add nuw nsw i32 %56, 1
  br i1 %49, label %149, label %196

149:                                              ; preds = %128
  %150 = load i32, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %12, align 4, !tbaa !5
  %152 = add nsw i32 %151, -1
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, %152
  br i1 %155, label %156, label %189

156:                                              ; preds = %154
  store i32 0, ptr %4, align 4, !tbaa !5
  %157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %157, ptr %6, align 4, !tbaa !5
  br i1 %54, label %196, label %158

158:                                              ; preds = %156, %183
  %159 = phi i64 [ %187, %183 ], [ 1, %156 ]
  %160 = getelementptr inbounds i32, ptr %4, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !5
  %162 = getelementptr inbounds i32, ptr %12, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = add nsw i32 %163, -1
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %181

166:                                              ; preds = %158
  br i1 %153, label %173, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds i32, ptr %7, i64 %159
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = getelementptr inbounds i32, ptr %6, i64 %159
  %171 = load i32, ptr %170, align 4, !tbaa !5
  %172 = add nsw i32 %171, %169
  store i32 %172, ptr %170, align 4, !tbaa !5
  br label %191

173:                                              ; preds = %149, %166
  %174 = phi i32 [ %161, %166 ], [ %150, %149 ]
  %175 = phi ptr [ %160, %166 ], [ %4, %149 ]
  %176 = phi i64 [ %159, %166 ], [ 0, %149 ]
  %177 = add nsw i32 %174, 1
  store i32 %177, ptr %175, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %7, i64 %176
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %176
  br label %191

181:                                              ; preds = %158
  %182 = icmp eq i32 %161, %164
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  store i32 0, ptr %160, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %8, i64 %159
  %185 = load i32, ptr %184, align 4, !tbaa !5
  %186 = getelementptr inbounds i32, ptr %6, i64 %159
  store i32 %185, ptr %186, align 4, !tbaa !5
  %187 = add nuw nsw i64 %159, 1
  %188 = icmp eq i64 %187, %52
  br i1 %188, label %196, label %158, !llvm.loop !947

189:                                              ; preds = %154, %181
  %190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

191:                                              ; preds = %167, %173
  %192 = phi ptr [ %180, %173 ], [ %160, %167 ]
  %193 = phi i32 [ %179, %173 ], [ 1, %167 ]
  %194 = load i32, ptr %192, align 4, !tbaa !5
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %192, align 4, !tbaa !5
  br label %196

196:                                              ; preds = %183, %191, %156, %128
  %197 = icmp eq i32 %148, %5
  br i1 %197, label %5579, label %55, !llvm.loop !948

198:                                              ; preds = %38, %336
  %199 = phi i32 [ 0, %38 ], [ %285, %336 ]
  %200 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %201, label %270

201:                                              ; preds = %198, %260
  %202 = phi i32 [ %269, %260 ], [ 0, %198 ]
  %203 = phi i64 [ %211, %260 ], [ %43, %198 ]
  %204 = phi i64 [ %268, %260 ], [ %42, %198 ]
  %205 = phi i32 [ %266, %260 ], [ %200, %198 ]
  %206 = sub i32 %41, %202
  %207 = tail call i32 @llvm.smin.i32(i32 %206, i32 0)
  %208 = sub i32 %206, %207
  %209 = zext i32 %208 to i64
  %210 = add nuw nsw i64 %209, 1
  %211 = add nsw i64 %203, -1
  %212 = icmp ult i32 %208, 31
  br i1 %212, label %248, label %213

213:                                              ; preds = %201
  %214 = and i64 %210, 8589934560
  %215 = sub i64 %204, %214
  br label %216

216:                                              ; preds = %216, %213
  %217 = phi i64 [ 0, %213 ], [ %240, %216 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %236, %216 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %237, %216 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %238, %216 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %239, %216 ]
  %222 = sub i64 %204, %217
  %223 = getelementptr inbounds i32, ptr %11, i64 %222
  %224 = getelementptr inbounds i32, ptr %223, i64 -7
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %223, i64 -15
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %223, i64 -23
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %223, i64 -31
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !5
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = mul <8 x i32> %226, %218
  %237 = mul <8 x i32> %229, %219
  %238 = mul <8 x i32> %232, %220
  %239 = mul <8 x i32> %235, %221
  %240 = add nuw i64 %217, 32
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %216, !llvm.loop !949

242:                                              ; preds = %216
  %243 = mul <8 x i32> %237, %236
  %244 = mul <8 x i32> %238, %243
  %245 = mul <8 x i32> %239, %244
  %246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %245)
  %247 = icmp eq i64 %210, %214
  br i1 %247, label %260, label %248

248:                                              ; preds = %201, %242
  %249 = phi i64 [ %204, %201 ], [ %215, %242 ]
  %250 = phi i32 [ 1, %201 ], [ %246, %242 ]
  br label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %257, %251 ], [ %249, %248 ]
  %253 = phi i32 [ %256, %251 ], [ %250, %248 ]
  %254 = getelementptr inbounds i32, ptr %11, i64 %252
  %255 = load i32, ptr %254, align 4, !tbaa !5
  %256 = mul nsw i32 %255, %253
  %257 = add nsw i64 %252, -1
  %258 = trunc i64 %252 to i32
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %251, label %260, !llvm.loop !950

260:                                              ; preds = %251, %242
  %261 = phi i32 [ %246, %242 ], [ %256, %251 ]
  %262 = and i64 %211, 4294967295
  %263 = getelementptr inbounds i32, ptr %6, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !5
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %205
  %267 = icmp sgt i64 %203, 2
  %268 = add nsw i64 %204, -1
  %269 = add i32 %202, 1
  br i1 %267, label %201, label %270, !llvm.loop !951

270:                                              ; preds = %260, %198
  %271 = phi i32 [ %200, %198 ], [ %266, %260 ]
  %272 = icmp slt i32 %271, %5
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

275:                                              ; preds = %270
  %276 = sext i32 %271 to i64
  %277 = getelementptr inbounds double, ptr %24, i64 %276
  %278 = load double, ptr %277, align 8, !tbaa !18
  %279 = fptoui double %278 to i8
  %280 = load i8, ptr %26, align 1, !tbaa !11
  %281 = uitofp i8 %280 to double
  %282 = uitofp i8 %279 to double
  %283 = tail call fast double @llvm.maxnum.f64(double %281, double %282)
  %284 = fptoui double %283 to i8
  store i8 %284, ptr %26, align 1, !tbaa !11
  %285 = add nuw nsw i32 %199, 1
  br i1 %40, label %286, label %336

286:                                              ; preds = %275
  %287 = load i32, ptr %4, align 4, !tbaa !5
  %288 = load i32, ptr %12, align 4, !tbaa !5
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !5
  %294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %294, ptr %6, align 4, !tbaa !5
  br i1 %45, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !5
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !5
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %43
  br i1 %328, label %336, label %295, !llvm.loop !952

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !5
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !5
  br label %336

336:                                              ; preds = %323, %331, %293, %275
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5579, label %198, !llvm.loop !953

338:                                              ; preds = %31
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !5
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5579

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %493

352:                                              ; preds = %338
  br i1 %342, label %353, label %5579

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %491
  %362 = phi i32 [ 0, %353 ], [ %443, %491 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %442, %491 ]
  %364 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !954

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !5
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !955

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !5
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !956

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds double, ptr %24, i64 %436
  %438 = load double, ptr %437, align 8, !tbaa !18
  %439 = fptoui double %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = tail call i8 @llvm.umax.i8(i8 %440, i8 %439)
  store i8 %441, ptr %26, align 1, !tbaa !11
  %442 = fadd fast double %363, 1.000000e+00
  %443 = add nuw nsw i32 %362, 1
  br i1 %355, label %444, label %491

444:                                              ; preds = %434
  %445 = load i32, ptr %4, align 4, !tbaa !5
  %446 = load i32, ptr %12, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %468, label %449

449:                                              ; preds = %444
  %450 = icmp eq i32 %445, %447
  br i1 %450, label %451, label %484

451:                                              ; preds = %449
  store i32 0, ptr %4, align 4, !tbaa !5
  %452 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %452, ptr %6, align 4, !tbaa !5
  br i1 %360, label %491, label %453

453:                                              ; preds = %451, %478
  %454 = phi i64 [ %482, %478 ], [ 1, %451 ]
  %455 = getelementptr inbounds i32, ptr %4, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %12, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, -1
  %460 = icmp slt i32 %456, %459
  br i1 %460, label %461, label %476

461:                                              ; preds = %453
  br i1 %448, label %468, label %462

462:                                              ; preds = %461
  %463 = getelementptr inbounds i32, ptr %7, i64 %454
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %6, i64 %454
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = add nsw i32 %466, %464
  store i32 %467, ptr %465, align 4, !tbaa !5
  br label %486

468:                                              ; preds = %444, %461
  %469 = phi i32 [ %456, %461 ], [ %445, %444 ]
  %470 = phi ptr [ %455, %461 ], [ %4, %444 ]
  %471 = phi i64 [ %454, %461 ], [ 0, %444 ]
  %472 = add nsw i32 %469, 1
  store i32 %472, ptr %470, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %7, i64 %471
  %474 = load i32, ptr %473, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %6, i64 %471
  br label %486

476:                                              ; preds = %453
  %477 = icmp eq i32 %456, %459
  br i1 %477, label %478, label %484

478:                                              ; preds = %476
  store i32 0, ptr %455, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %8, i64 %454
  %480 = load i32, ptr %479, align 4, !tbaa !5
  %481 = getelementptr inbounds i32, ptr %6, i64 %454
  store i32 %480, ptr %481, align 4, !tbaa !5
  %482 = add nuw nsw i64 %454, 1
  %483 = icmp eq i64 %482, %358
  br i1 %483, label %491, label %453, !llvm.loop !957

484:                                              ; preds = %449, %476
  %485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

486:                                              ; preds = %462, %468
  %487 = phi ptr [ %475, %468 ], [ %455, %462 ]
  %488 = phi i32 [ %474, %468 ], [ 1, %462 ]
  %489 = load i32, ptr %487, align 4, !tbaa !5
  %490 = add nsw i32 %489, %488
  store i32 %490, ptr %487, align 4, !tbaa !5
  br label %491

491:                                              ; preds = %478, %486, %451, %434
  %492 = icmp eq i32 %443, %5
  br i1 %492, label %5579, label %361, !llvm.loop !958

493:                                              ; preds = %344, %628
  %494 = phi i32 [ 0, %344 ], [ %577, %628 ]
  %495 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %345, label %496, label %565

496:                                              ; preds = %493, %555
  %497 = phi i32 [ %564, %555 ], [ 0, %493 ]
  %498 = phi i64 [ %506, %555 ], [ %349, %493 ]
  %499 = phi i64 [ %563, %555 ], [ %348, %493 ]
  %500 = phi i32 [ %561, %555 ], [ %495, %493 ]
  %501 = sub i32 %347, %497
  %502 = tail call i32 @llvm.smin.i32(i32 %501, i32 0)
  %503 = sub i32 %501, %502
  %504 = zext i32 %503 to i64
  %505 = add nuw nsw i64 %504, 1
  %506 = add nsw i64 %498, -1
  %507 = icmp ult i32 %503, 31
  br i1 %507, label %543, label %508

508:                                              ; preds = %496
  %509 = and i64 %505, 8589934560
  %510 = sub i64 %499, %509
  br label %511

511:                                              ; preds = %511, %508
  %512 = phi i64 [ 0, %508 ], [ %535, %511 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %531, %511 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %532, %511 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %533, %511 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %534, %511 ]
  %517 = sub i64 %499, %512
  %518 = getelementptr inbounds i32, ptr %11, i64 %517
  %519 = getelementptr inbounds i32, ptr %518, i64 -7
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !5
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %518, i64 -15
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !5
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %518, i64 -23
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !5
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %518, i64 -31
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !5
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = mul <8 x i32> %521, %513
  %532 = mul <8 x i32> %524, %514
  %533 = mul <8 x i32> %527, %515
  %534 = mul <8 x i32> %530, %516
  %535 = add nuw i64 %512, 32
  %536 = icmp eq i64 %535, %509
  br i1 %536, label %537, label %511, !llvm.loop !959

537:                                              ; preds = %511
  %538 = mul <8 x i32> %532, %531
  %539 = mul <8 x i32> %533, %538
  %540 = mul <8 x i32> %534, %539
  %541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %540)
  %542 = icmp eq i64 %505, %509
  br i1 %542, label %555, label %543

543:                                              ; preds = %496, %537
  %544 = phi i64 [ %499, %496 ], [ %510, %537 ]
  %545 = phi i32 [ 1, %496 ], [ %541, %537 ]
  br label %546

546:                                              ; preds = %543, %546
  %547 = phi i64 [ %552, %546 ], [ %544, %543 ]
  %548 = phi i32 [ %551, %546 ], [ %545, %543 ]
  %549 = getelementptr inbounds i32, ptr %11, i64 %547
  %550 = load i32, ptr %549, align 4, !tbaa !5
  %551 = mul nsw i32 %550, %548
  %552 = add nsw i64 %547, -1
  %553 = trunc i64 %547 to i32
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %546, label %555, !llvm.loop !960

555:                                              ; preds = %546, %537
  %556 = phi i32 [ %541, %537 ], [ %551, %546 ]
  %557 = and i64 %506, 4294967295
  %558 = getelementptr inbounds i32, ptr %6, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !5
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %500
  %562 = icmp sgt i64 %498, 2
  %563 = add nsw i64 %499, -1
  %564 = add i32 %497, 1
  br i1 %562, label %496, label %565, !llvm.loop !961

565:                                              ; preds = %555, %493
  %566 = phi i32 [ %495, %493 ], [ %561, %555 ]
  %567 = icmp slt i32 %566, %5
  br i1 %567, label %570, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

570:                                              ; preds = %565
  %571 = sext i32 %566 to i64
  %572 = getelementptr inbounds double, ptr %24, i64 %571
  %573 = load double, ptr %572, align 8, !tbaa !18
  %574 = fptoui double %573 to i8
  %575 = load i8, ptr %26, align 1, !tbaa !11
  %576 = tail call i8 @llvm.umax.i8(i8 %575, i8 %574)
  store i8 %576, ptr %26, align 1, !tbaa !11
  %577 = add nuw nsw i32 %494, 1
  br i1 %346, label %578, label %628

578:                                              ; preds = %570
  %579 = load i32, ptr %4, align 4, !tbaa !5
  %580 = load i32, ptr %12, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !5
  %586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %586, ptr %6, align 4, !tbaa !5
  br i1 %351, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !5
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !5
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %349
  br i1 %620, label %628, label %587, !llvm.loop !962

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !5
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %628

628:                                              ; preds = %615, %623, %585, %570
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %5579, label %493, !llvm.loop !963

630:                                              ; preds = %31
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1934, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !9
  store i32 0, ptr %636, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %644

638:                                              ; preds = %632
  %639 = load double, ptr %634, align 8, !tbaa !18
  %640 = fptosi double %639 to i32
  %641 = icmp eq i32 %640, 0
  %642 = tail call i32 @llvm.abs.i32(i32 %640, i1 true)
  %643 = select i1 %641, i32 0, i32 %642
  store i32 %643, ptr %636, align 4, !tbaa !5
  br label %5579

644:                                              ; preds = %632
  switch i32 %1, label %1249 [
    i32 1, label %645
    i32 0, label %955
  ]

645:                                              ; preds = %644
  %646 = getelementptr inbounds i32, ptr %3, i64 %19
  %647 = load i32, ptr %646, align 4, !tbaa !5
  %648 = icmp eq i32 %647, 0
  %649 = icmp sgt i32 %5, 0
  br i1 %648, label %659, label %650

650:                                              ; preds = %645
  br i1 %649, label %651, label %5579

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %811

659:                                              ; preds = %645
  br i1 %649, label %660, label %5579

660:                                              ; preds = %659
  %661 = icmp sgt i32 %13, 1
  %662 = icmp sgt i32 %13, 0
  %663 = add i32 %13, -2
  %664 = zext i32 %663 to i64
  %665 = zext i32 %13 to i64
  %666 = add nuw i32 %5, 1
  %667 = icmp eq i32 %13, 1
  br label %668

668:                                              ; preds = %660, %809
  %669 = phi i32 [ 0, %660 ], [ %761, %809 ]
  %670 = phi double [ 0.000000e+00, %660 ], [ %760, %809 ]
  %671 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %661, label %672, label %741

672:                                              ; preds = %668, %731
  %673 = phi i32 [ %740, %731 ], [ 0, %668 ]
  %674 = phi i64 [ %682, %731 ], [ %665, %668 ]
  %675 = phi i64 [ %739, %731 ], [ %664, %668 ]
  %676 = phi i32 [ %737, %731 ], [ %671, %668 ]
  %677 = sub i32 %663, %673
  %678 = tail call i32 @llvm.smin.i32(i32 %677, i32 0)
  %679 = sub i32 %677, %678
  %680 = zext i32 %679 to i64
  %681 = add nuw nsw i64 %680, 1
  %682 = add nsw i64 %674, -1
  %683 = icmp ult i32 %679, 31
  br i1 %683, label %719, label %684

684:                                              ; preds = %672
  %685 = and i64 %681, 8589934560
  %686 = sub i64 %675, %685
  br label %687

687:                                              ; preds = %687, %684
  %688 = phi i64 [ 0, %684 ], [ %711, %687 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %707, %687 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %708, %687 ]
  %691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %709, %687 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %710, %687 ]
  %693 = sub i64 %675, %688
  %694 = getelementptr inbounds i32, ptr %9, i64 %693
  %695 = getelementptr inbounds i32, ptr %694, i64 -7
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %694, i64 -15
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %694, i64 -23
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %694, i64 -31
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = mul <8 x i32> %697, %689
  %708 = mul <8 x i32> %700, %690
  %709 = mul <8 x i32> %703, %691
  %710 = mul <8 x i32> %706, %692
  %711 = add nuw i64 %688, 32
  %712 = icmp eq i64 %711, %685
  br i1 %712, label %713, label %687, !llvm.loop !964

713:                                              ; preds = %687
  %714 = mul <8 x i32> %708, %707
  %715 = mul <8 x i32> %709, %714
  %716 = mul <8 x i32> %710, %715
  %717 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %716)
  %718 = icmp eq i64 %681, %685
  br i1 %718, label %731, label %719

719:                                              ; preds = %672, %713
  %720 = phi i64 [ %675, %672 ], [ %686, %713 ]
  %721 = phi i32 [ 1, %672 ], [ %717, %713 ]
  br label %722

722:                                              ; preds = %719, %722
  %723 = phi i64 [ %728, %722 ], [ %720, %719 ]
  %724 = phi i32 [ %727, %722 ], [ %721, %719 ]
  %725 = getelementptr inbounds i32, ptr %9, i64 %723
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %724
  %728 = add nsw i64 %723, -1
  %729 = trunc i64 %723 to i32
  %730 = icmp sgt i32 %729, 0
  br i1 %730, label %722, label %731, !llvm.loop !965

731:                                              ; preds = %722, %713
  %732 = phi i32 [ %717, %713 ], [ %727, %722 ]
  %733 = and i64 %682, 4294967295
  %734 = getelementptr inbounds i32, ptr %6, i64 %733
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = mul nsw i32 %735, %732
  %737 = add nsw i32 %736, %676
  %738 = icmp sgt i64 %674, 2
  %739 = add nsw i64 %675, -1
  %740 = add i32 %673, 1
  br i1 %738, label %672, label %741, !llvm.loop !966

741:                                              ; preds = %731, %668
  %742 = phi i32 [ %671, %668 ], [ %737, %731 ]
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds double, ptr %2, i64 %743
  %745 = load double, ptr %744, align 8, !tbaa !18
  %746 = getelementptr inbounds double, ptr %634, i64 %743
  %747 = load double, ptr %746, align 8, !tbaa !18
  %748 = fptosi double %747 to i32
  %749 = load i32, ptr %636, align 4, !tbaa !5
  %750 = sitofp i32 %749 to double
  %751 = sitofp i32 %748 to double
  %752 = fmul fast double %745, %751
  %753 = fcmp fast uge double %752, 0.000000e+00
  %754 = fneg fast double %752
  %755 = tail call fast double @llvm.fabs.f64(double %752)
  %756 = fcmp fast ole double %755, %750
  %757 = select nnan ninf i1 %753, double %752, double %754
  %758 = select i1 %756, double %750, double %757
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %636, align 4, !tbaa !5
  %760 = fadd fast double %745, %670
  %761 = add nuw nsw i32 %669, 1
  br i1 %662, label %762, label %809

762:                                              ; preds = %741
  %763 = load i32, ptr %4, align 4, !tbaa !5
  %764 = load i32, ptr %12, align 4, !tbaa !5
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !5
  %770 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %770, ptr %6, align 4, !tbaa !5
  br i1 %667, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !5
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !5
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !5
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !5
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !5
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !5
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %665
  br i1 %801, label %809, label %771, !llvm.loop !967

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !5
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !5
  br label %809

809:                                              ; preds = %796, %804, %769, %741
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %5579, label %668, !llvm.loop !968

811:                                              ; preds = %651, %953
  %812 = phi i32 [ 0, %651 ], [ %902, %953 ]
  %813 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %656, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %655, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %654, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !5
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !5
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !5
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !969

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !970

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !5
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !971

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds double, ptr %634, i64 %889
  %891 = load double, ptr %890, align 8, !tbaa !18
  %892 = fptosi double %891 to i32
  %893 = load i32, ptr %636, align 4, !tbaa !5
  %894 = sitofp i32 %893 to double
  %895 = sitofp i32 %892 to double
  %896 = icmp slt i32 %892, 0
  %897 = fneg fast double %895
  %898 = select i1 %896, double %897, double %895
  %899 = fcmp fast ole double %898, %894
  %900 = select fast i1 %899, double %894, double %898
  %901 = fptosi double %900 to i32
  store i32 %901, ptr %636, align 4, !tbaa !5
  %902 = add nuw nsw i32 %812, 1
  br i1 %653, label %903, label %953

903:                                              ; preds = %888
  %904 = load i32, ptr %4, align 4, !tbaa !5
  %905 = load i32, ptr %12, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %904, %906
  br i1 %907, label %930, label %908

908:                                              ; preds = %903
  %909 = icmp eq i32 %904, %906
  br i1 %909, label %910, label %946

910:                                              ; preds = %908
  store i32 0, ptr %4, align 4, !tbaa !5
  %911 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %911, ptr %6, align 4, !tbaa !5
  br i1 %658, label %953, label %912

912:                                              ; preds = %910, %940
  %913 = phi i64 [ %944, %940 ], [ 1, %910 ]
  %914 = getelementptr inbounds i32, ptr %4, i64 %913
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = getelementptr inbounds i32, ptr %12, i64 %913
  %917 = load i32, ptr %916, align 4, !tbaa !5
  %918 = add nsw i32 %917, -1
  %919 = icmp slt i32 %915, %918
  br i1 %919, label %920, label %938

920:                                              ; preds = %912
  br i1 %907, label %930, label %921

921:                                              ; preds = %920
  %922 = shl i64 %913, 32
  %923 = add i64 %922, -4294967296
  %924 = ashr exact i64 %923, 32
  %925 = getelementptr inbounds i32, ptr %7, i64 %924
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %6, i64 %913
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = add nsw i32 %928, %926
  store i32 %929, ptr %927, align 4, !tbaa !5
  br label %948

930:                                              ; preds = %903, %920
  %931 = phi i32 [ %915, %920 ], [ %904, %903 ]
  %932 = phi ptr [ %914, %920 ], [ %4, %903 ]
  %933 = phi i64 [ %913, %920 ], [ 0, %903 ]
  %934 = add nsw i32 %931, 1
  store i32 %934, ptr %932, align 4, !tbaa !5
  %935 = getelementptr inbounds i32, ptr %7, i64 %933
  %936 = load i32, ptr %935, align 4, !tbaa !5
  %937 = getelementptr inbounds i32, ptr %6, i64 %933
  br label %948

938:                                              ; preds = %912
  %939 = icmp eq i32 %915, %918
  br i1 %939, label %940, label %946

940:                                              ; preds = %938
  store i32 0, ptr %914, align 4, !tbaa !5
  %941 = getelementptr inbounds i32, ptr %8, i64 %913
  %942 = load i32, ptr %941, align 4, !tbaa !5
  %943 = getelementptr inbounds i32, ptr %6, i64 %913
  store i32 %942, ptr %943, align 4, !tbaa !5
  %944 = add nuw nsw i64 %913, 1
  %945 = icmp eq i64 %944, %656
  br i1 %945, label %953, label %912, !llvm.loop !972

946:                                              ; preds = %908, %938
  %947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

948:                                              ; preds = %921, %930
  %949 = phi ptr [ %937, %930 ], [ %914, %921 ]
  %950 = phi i32 [ %936, %930 ], [ 1, %921 ]
  %951 = load i32, ptr %949, align 4, !tbaa !5
  %952 = add nsw i32 %951, %950
  store i32 %952, ptr %949, align 4, !tbaa !5
  br label %953

953:                                              ; preds = %940, %948, %910, %888
  %954 = icmp eq i32 %902, %5
  br i1 %954, label %5579, label %811, !llvm.loop !973

955:                                              ; preds = %644
  %956 = getelementptr inbounds i32, ptr %3, i64 %19
  %957 = load i32, ptr %956, align 4, !tbaa !5
  %958 = icmp eq i32 %957, 0
  %959 = icmp sgt i32 %5, 0
  br i1 %958, label %969, label %960

960:                                              ; preds = %955
  br i1 %959, label %961, label %5579

961:                                              ; preds = %960
  %962 = icmp sgt i32 %13, 1
  %963 = icmp sgt i32 %13, 0
  %964 = add i32 %13, -2
  %965 = zext i32 %964 to i64
  %966 = zext i32 %13 to i64
  %967 = add nuw i32 %5, 1
  %968 = icmp eq i32 %13, 1
  br label %1111

969:                                              ; preds = %955
  br i1 %959, label %970, label %5579

970:                                              ; preds = %969
  %971 = icmp sgt i32 %13, 1
  %972 = icmp sgt i32 %13, 0
  %973 = add i32 %13, -2
  %974 = zext i32 %973 to i64
  %975 = zext i32 %13 to i64
  %976 = add nuw i32 %5, 1
  %977 = icmp eq i32 %13, 1
  br label %978

978:                                              ; preds = %970, %1109
  %979 = phi i32 [ 0, %970 ], [ %1061, %1109 ]
  %980 = phi double [ 0.000000e+00, %970 ], [ %1060, %1109 ]
  %981 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %971, label %982, label %1051

982:                                              ; preds = %978, %1041
  %983 = phi i32 [ %1050, %1041 ], [ 0, %978 ]
  %984 = phi i64 [ %992, %1041 ], [ %975, %978 ]
  %985 = phi i64 [ %1049, %1041 ], [ %974, %978 ]
  %986 = phi i32 [ %1047, %1041 ], [ %981, %978 ]
  %987 = sub i32 %973, %983
  %988 = tail call i32 @llvm.smin.i32(i32 %987, i32 0)
  %989 = sub i32 %987, %988
  %990 = zext i32 %989 to i64
  %991 = add nuw nsw i64 %990, 1
  %992 = add nsw i64 %984, -1
  %993 = icmp ult i32 %989, 31
  br i1 %993, label %1029, label %994

994:                                              ; preds = %982
  %995 = and i64 %991, 8589934560
  %996 = sub i64 %985, %995
  br label %997

997:                                              ; preds = %997, %994
  %998 = phi i64 [ 0, %994 ], [ %1021, %997 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1017, %997 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1018, %997 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1019, %997 ]
  %1002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1020, %997 ]
  %1003 = sub i64 %985, %998
  %1004 = getelementptr inbounds i32, ptr %9, i64 %1003
  %1005 = getelementptr inbounds i32, ptr %1004, i64 -7
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !5
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = getelementptr inbounds i32, ptr %1004, i64 -15
  %1009 = load <8 x i32>, ptr %1008, align 4, !tbaa !5
  %1010 = shufflevector <8 x i32> %1009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1011 = getelementptr inbounds i32, ptr %1004, i64 -23
  %1012 = load <8 x i32>, ptr %1011, align 4, !tbaa !5
  %1013 = shufflevector <8 x i32> %1012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1014 = getelementptr inbounds i32, ptr %1004, i64 -31
  %1015 = load <8 x i32>, ptr %1014, align 4, !tbaa !5
  %1016 = shufflevector <8 x i32> %1015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1017 = mul <8 x i32> %1007, %999
  %1018 = mul <8 x i32> %1010, %1000
  %1019 = mul <8 x i32> %1013, %1001
  %1020 = mul <8 x i32> %1016, %1002
  %1021 = add nuw i64 %998, 32
  %1022 = icmp eq i64 %1021, %995
  br i1 %1022, label %1023, label %997, !llvm.loop !974

1023:                                             ; preds = %997
  %1024 = mul <8 x i32> %1018, %1017
  %1025 = mul <8 x i32> %1019, %1024
  %1026 = mul <8 x i32> %1020, %1025
  %1027 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1026)
  %1028 = icmp eq i64 %991, %995
  br i1 %1028, label %1041, label %1029

1029:                                             ; preds = %982, %1023
  %1030 = phi i64 [ %985, %982 ], [ %996, %1023 ]
  %1031 = phi i32 [ 1, %982 ], [ %1027, %1023 ]
  br label %1032

1032:                                             ; preds = %1029, %1032
  %1033 = phi i64 [ %1038, %1032 ], [ %1030, %1029 ]
  %1034 = phi i32 [ %1037, %1032 ], [ %1031, %1029 ]
  %1035 = getelementptr inbounds i32, ptr %9, i64 %1033
  %1036 = load i32, ptr %1035, align 4, !tbaa !5
  %1037 = mul nsw i32 %1036, %1034
  %1038 = add nsw i64 %1033, -1
  %1039 = trunc i64 %1033 to i32
  %1040 = icmp sgt i32 %1039, 0
  br i1 %1040, label %1032, label %1041, !llvm.loop !975

1041:                                             ; preds = %1032, %1023
  %1042 = phi i32 [ %1027, %1023 ], [ %1037, %1032 ]
  %1043 = and i64 %992, 4294967295
  %1044 = getelementptr inbounds i32, ptr %6, i64 %1043
  %1045 = load i32, ptr %1044, align 4, !tbaa !5
  %1046 = mul nsw i32 %1045, %1042
  %1047 = add nsw i32 %1046, %986
  %1048 = icmp sgt i64 %984, 2
  %1049 = add nsw i64 %985, -1
  %1050 = add i32 %983, 1
  br i1 %1048, label %982, label %1051, !llvm.loop !976

1051:                                             ; preds = %1041, %978
  %1052 = phi i32 [ %981, %978 ], [ %1047, %1041 ]
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds double, ptr %634, i64 %1053
  %1055 = load double, ptr %1054, align 8, !tbaa !18
  %1056 = fptosi double %1055 to i32
  %1057 = load i32, ptr %636, align 4, !tbaa !5
  %1058 = tail call i32 @llvm.abs.i32(i32 %1056, i1 true)
  %1059 = tail call i32 @llvm.smax.i32(i32 %1057, i32 %1058)
  store i32 %1059, ptr %636, align 4, !tbaa !5
  %1060 = fadd fast double %980, 1.000000e+00
  %1061 = add nuw nsw i32 %979, 1
  br i1 %972, label %1062, label %1109

1062:                                             ; preds = %1051
  %1063 = load i32, ptr %4, align 4, !tbaa !5
  %1064 = load i32, ptr %12, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1063, %1065
  br i1 %1066, label %1086, label %1067

1067:                                             ; preds = %1062
  %1068 = icmp eq i32 %1063, %1065
  br i1 %1068, label %1069, label %1102

1069:                                             ; preds = %1067
  store i32 0, ptr %4, align 4, !tbaa !5
  %1070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1070, ptr %6, align 4, !tbaa !5
  br i1 %977, label %1109, label %1071

1071:                                             ; preds = %1069, %1096
  %1072 = phi i64 [ %1100, %1096 ], [ 1, %1069 ]
  %1073 = getelementptr inbounds i32, ptr %4, i64 %1072
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %12, i64 %1072
  %1076 = load i32, ptr %1075, align 4, !tbaa !5
  %1077 = add nsw i32 %1076, -1
  %1078 = icmp slt i32 %1074, %1077
  br i1 %1078, label %1079, label %1094

1079:                                             ; preds = %1071
  br i1 %1066, label %1086, label %1080

1080:                                             ; preds = %1079
  %1081 = getelementptr inbounds i32, ptr %7, i64 %1072
  %1082 = load i32, ptr %1081, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %6, i64 %1072
  %1084 = load i32, ptr %1083, align 4, !tbaa !5
  %1085 = add nsw i32 %1084, %1082
  store i32 %1085, ptr %1083, align 4, !tbaa !5
  br label %1104

1086:                                             ; preds = %1062, %1079
  %1087 = phi i32 [ %1074, %1079 ], [ %1063, %1062 ]
  %1088 = phi ptr [ %1073, %1079 ], [ %4, %1062 ]
  %1089 = phi i64 [ %1072, %1079 ], [ 0, %1062 ]
  %1090 = add nsw i32 %1087, 1
  store i32 %1090, ptr %1088, align 4, !tbaa !5
  %1091 = getelementptr inbounds i32, ptr %7, i64 %1089
  %1092 = load i32, ptr %1091, align 4, !tbaa !5
  %1093 = getelementptr inbounds i32, ptr %6, i64 %1089
  br label %1104

1094:                                             ; preds = %1071
  %1095 = icmp eq i32 %1074, %1077
  br i1 %1095, label %1096, label %1102

1096:                                             ; preds = %1094
  store i32 0, ptr %1073, align 4, !tbaa !5
  %1097 = getelementptr inbounds i32, ptr %8, i64 %1072
  %1098 = load i32, ptr %1097, align 4, !tbaa !5
  %1099 = getelementptr inbounds i32, ptr %6, i64 %1072
  store i32 %1098, ptr %1099, align 4, !tbaa !5
  %1100 = add nuw nsw i64 %1072, 1
  %1101 = icmp eq i64 %1100, %975
  br i1 %1101, label %1109, label %1071, !llvm.loop !977

1102:                                             ; preds = %1067, %1094
  %1103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1104:                                             ; preds = %1080, %1086
  %1105 = phi ptr [ %1093, %1086 ], [ %1073, %1080 ]
  %1106 = phi i32 [ %1092, %1086 ], [ 1, %1080 ]
  %1107 = load i32, ptr %1105, align 4, !tbaa !5
  %1108 = add nsw i32 %1107, %1106
  store i32 %1108, ptr %1105, align 4, !tbaa !5
  br label %1109

1109:                                             ; preds = %1096, %1104, %1069, %1051
  %1110 = icmp eq i32 %1061, %5
  br i1 %1110, label %5579, label %978, !llvm.loop !978

1111:                                             ; preds = %961, %1247
  %1112 = phi i32 [ 0, %961 ], [ %1196, %1247 ]
  %1113 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %962, label %1114, label %1183

1114:                                             ; preds = %1111, %1173
  %1115 = phi i32 [ %1182, %1173 ], [ 0, %1111 ]
  %1116 = phi i64 [ %1124, %1173 ], [ %966, %1111 ]
  %1117 = phi i64 [ %1181, %1173 ], [ %965, %1111 ]
  %1118 = phi i32 [ %1179, %1173 ], [ %1113, %1111 ]
  %1119 = sub i32 %964, %1115
  %1120 = tail call i32 @llvm.smin.i32(i32 %1119, i32 0)
  %1121 = sub i32 %1119, %1120
  %1122 = zext i32 %1121 to i64
  %1123 = add nuw nsw i64 %1122, 1
  %1124 = add nsw i64 %1116, -1
  %1125 = icmp ult i32 %1121, 31
  br i1 %1125, label %1161, label %1126

1126:                                             ; preds = %1114
  %1127 = and i64 %1123, 8589934560
  %1128 = sub i64 %1117, %1127
  br label %1129

1129:                                             ; preds = %1129, %1126
  %1130 = phi i64 [ 0, %1126 ], [ %1153, %1129 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1149, %1129 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1150, %1129 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1151, %1129 ]
  %1134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1152, %1129 ]
  %1135 = sub i64 %1117, %1130
  %1136 = getelementptr inbounds i32, ptr %11, i64 %1135
  %1137 = getelementptr inbounds i32, ptr %1136, i64 -7
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = getelementptr inbounds i32, ptr %1136, i64 -15
  %1141 = load <8 x i32>, ptr %1140, align 4, !tbaa !5
  %1142 = shufflevector <8 x i32> %1141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1143 = getelementptr inbounds i32, ptr %1136, i64 -23
  %1144 = load <8 x i32>, ptr %1143, align 4, !tbaa !5
  %1145 = shufflevector <8 x i32> %1144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1146 = getelementptr inbounds i32, ptr %1136, i64 -31
  %1147 = load <8 x i32>, ptr %1146, align 4, !tbaa !5
  %1148 = shufflevector <8 x i32> %1147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1149 = mul <8 x i32> %1139, %1131
  %1150 = mul <8 x i32> %1142, %1132
  %1151 = mul <8 x i32> %1145, %1133
  %1152 = mul <8 x i32> %1148, %1134
  %1153 = add nuw i64 %1130, 32
  %1154 = icmp eq i64 %1153, %1127
  br i1 %1154, label %1155, label %1129, !llvm.loop !979

1155:                                             ; preds = %1129
  %1156 = mul <8 x i32> %1150, %1149
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = mul <8 x i32> %1152, %1157
  %1159 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1158)
  %1160 = icmp eq i64 %1123, %1127
  br i1 %1160, label %1173, label %1161

1161:                                             ; preds = %1114, %1155
  %1162 = phi i64 [ %1117, %1114 ], [ %1128, %1155 ]
  %1163 = phi i32 [ 1, %1114 ], [ %1159, %1155 ]
  br label %1164

1164:                                             ; preds = %1161, %1164
  %1165 = phi i64 [ %1170, %1164 ], [ %1162, %1161 ]
  %1166 = phi i32 [ %1169, %1164 ], [ %1163, %1161 ]
  %1167 = getelementptr inbounds i32, ptr %11, i64 %1165
  %1168 = load i32, ptr %1167, align 4, !tbaa !5
  %1169 = mul nsw i32 %1168, %1166
  %1170 = add nsw i64 %1165, -1
  %1171 = trunc i64 %1165 to i32
  %1172 = icmp sgt i32 %1171, 0
  br i1 %1172, label %1164, label %1173, !llvm.loop !980

1173:                                             ; preds = %1164, %1155
  %1174 = phi i32 [ %1159, %1155 ], [ %1169, %1164 ]
  %1175 = and i64 %1124, 4294967295
  %1176 = getelementptr inbounds i32, ptr %6, i64 %1175
  %1177 = load i32, ptr %1176, align 4, !tbaa !5
  %1178 = mul nsw i32 %1177, %1174
  %1179 = add nsw i32 %1178, %1118
  %1180 = icmp sgt i64 %1116, 2
  %1181 = add nsw i64 %1117, -1
  %1182 = add i32 %1115, 1
  br i1 %1180, label %1114, label %1183, !llvm.loop !981

1183:                                             ; preds = %1173, %1111
  %1184 = phi i32 [ %1113, %1111 ], [ %1179, %1173 ]
  %1185 = icmp slt i32 %1184, %5
  br i1 %1185, label %1188, label %1186

1186:                                             ; preds = %1183
  %1187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

1188:                                             ; preds = %1183
  %1189 = sext i32 %1184 to i64
  %1190 = getelementptr inbounds double, ptr %634, i64 %1189
  %1191 = load double, ptr %1190, align 8, !tbaa !18
  %1192 = fptosi double %1191 to i32
  %1193 = load i32, ptr %636, align 4, !tbaa !5
  %1194 = tail call i32 @llvm.abs.i32(i32 %1192, i1 true)
  %1195 = tail call i32 @llvm.smax.i32(i32 %1193, i32 %1194)
  store i32 %1195, ptr %636, align 4, !tbaa !5
  %1196 = add nuw nsw i32 %1112, 1
  br i1 %963, label %1197, label %1247

1197:                                             ; preds = %1188
  %1198 = load i32, ptr %4, align 4, !tbaa !5
  %1199 = load i32, ptr %12, align 4, !tbaa !5
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !5
  %1205 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1205, ptr %6, align 4, !tbaa !5
  br i1 %968, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !5
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !5
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !5
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !5
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !5
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !5
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %966
  br i1 %1239, label %1247, label %1206, !llvm.loop !982

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !5
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !5
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1188
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %5579, label %1111, !llvm.loop !983

1249:                                             ; preds = %644
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1937, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !9
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !9
  store i8 0, ptr %1255, align 1, !tbaa !11
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1261

1257:                                             ; preds = %1251
  %1258 = load double, ptr %1253, align 8, !tbaa !18
  %1259 = fptosi double %1258 to i8
  %1260 = tail call i8 @llvm.abs.i8(i8 %1259, i1 false)
  store i8 %1260, ptr %1255, align 1, !tbaa !11
  br label %5579

1261:                                             ; preds = %1251
  switch i32 %1, label %1872 [
    i32 1, label %1262
    i32 0, label %1572
  ]

1262:                                             ; preds = %1261
  %1263 = getelementptr inbounds i32, ptr %3, i64 %19
  %1264 = load i32, ptr %1263, align 4, !tbaa !5
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp sgt i32 %5, 0
  br i1 %1265, label %1276, label %1267

1267:                                             ; preds = %1262
  br i1 %1266, label %1268, label %5579

1268:                                             ; preds = %1267
  %1269 = icmp sgt i32 %13, 1
  %1270 = icmp sgt i32 %13, 0
  %1271 = add i32 %13, -2
  %1272 = zext i32 %1271 to i64
  %1273 = zext i32 %13 to i64
  %1274 = add nuw i32 %5, 1
  %1275 = icmp eq i32 %13, 1
  br label %1428

1276:                                             ; preds = %1262
  br i1 %1266, label %1277, label %5579

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1285

1285:                                             ; preds = %1277, %1426
  %1286 = phi i32 [ 0, %1277 ], [ %1378, %1426 ]
  %1287 = phi double [ 0.000000e+00, %1277 ], [ %1377, %1426 ]
  %1288 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1278, label %1289, label %1358

1289:                                             ; preds = %1285, %1348
  %1290 = phi i32 [ %1357, %1348 ], [ 0, %1285 ]
  %1291 = phi i64 [ %1299, %1348 ], [ %1282, %1285 ]
  %1292 = phi i64 [ %1356, %1348 ], [ %1281, %1285 ]
  %1293 = phi i32 [ %1354, %1348 ], [ %1288, %1285 ]
  %1294 = sub i32 %1280, %1290
  %1295 = tail call i32 @llvm.smin.i32(i32 %1294, i32 0)
  %1296 = sub i32 %1294, %1295
  %1297 = zext i32 %1296 to i64
  %1298 = add nuw nsw i64 %1297, 1
  %1299 = add nsw i64 %1291, -1
  %1300 = icmp ult i32 %1296, 31
  br i1 %1300, label %1336, label %1301

1301:                                             ; preds = %1289
  %1302 = and i64 %1298, 8589934560
  %1303 = sub i64 %1292, %1302
  br label %1304

1304:                                             ; preds = %1304, %1301
  %1305 = phi i64 [ 0, %1301 ], [ %1328, %1304 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1324, %1304 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1325, %1304 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1326, %1304 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1327, %1304 ]
  %1310 = sub i64 %1292, %1305
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1310
  %1312 = getelementptr inbounds i32, ptr %1311, i64 -7
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !5
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1311, i64 -15
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !5
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1311, i64 -23
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !5
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = getelementptr inbounds i32, ptr %1311, i64 -31
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = mul <8 x i32> %1314, %1306
  %1325 = mul <8 x i32> %1317, %1307
  %1326 = mul <8 x i32> %1320, %1308
  %1327 = mul <8 x i32> %1323, %1309
  %1328 = add nuw i64 %1305, 32
  %1329 = icmp eq i64 %1328, %1302
  br i1 %1329, label %1330, label %1304, !llvm.loop !984

1330:                                             ; preds = %1304
  %1331 = mul <8 x i32> %1325, %1324
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1333)
  %1335 = icmp eq i64 %1298, %1302
  br i1 %1335, label %1348, label %1336

1336:                                             ; preds = %1289, %1330
  %1337 = phi i64 [ %1292, %1289 ], [ %1303, %1330 ]
  %1338 = phi i32 [ 1, %1289 ], [ %1334, %1330 ]
  br label %1339

1339:                                             ; preds = %1336, %1339
  %1340 = phi i64 [ %1345, %1339 ], [ %1337, %1336 ]
  %1341 = phi i32 [ %1344, %1339 ], [ %1338, %1336 ]
  %1342 = getelementptr inbounds i32, ptr %9, i64 %1340
  %1343 = load i32, ptr %1342, align 4, !tbaa !5
  %1344 = mul nsw i32 %1343, %1341
  %1345 = add nsw i64 %1340, -1
  %1346 = trunc i64 %1340 to i32
  %1347 = icmp sgt i32 %1346, 0
  br i1 %1347, label %1339, label %1348, !llvm.loop !985

1348:                                             ; preds = %1339, %1330
  %1349 = phi i32 [ %1334, %1330 ], [ %1344, %1339 ]
  %1350 = and i64 %1299, 4294967295
  %1351 = getelementptr inbounds i32, ptr %6, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1349
  %1354 = add nsw i32 %1353, %1293
  %1355 = icmp sgt i64 %1291, 2
  %1356 = add nsw i64 %1292, -1
  %1357 = add i32 %1290, 1
  br i1 %1355, label %1289, label %1358, !llvm.loop !986

1358:                                             ; preds = %1348, %1285
  %1359 = phi i32 [ %1288, %1285 ], [ %1354, %1348 ]
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds double, ptr %2, i64 %1360
  %1362 = load double, ptr %1361, align 8, !tbaa !18
  %1363 = getelementptr inbounds double, ptr %1253, i64 %1360
  %1364 = load double, ptr %1363, align 8, !tbaa !18
  %1365 = fptosi double %1364 to i8
  %1366 = load i8, ptr %1255, align 1, !tbaa !11
  %1367 = sitofp i8 %1366 to double
  %1368 = sitofp i8 %1365 to double
  %1369 = fmul fast double %1362, %1368
  %1370 = fcmp fast uge double %1369, 0.000000e+00
  %1371 = fneg fast double %1369
  %1372 = tail call fast double @llvm.fabs.f64(double %1369)
  %1373 = fcmp fast ole double %1372, %1367
  %1374 = select nnan ninf i1 %1370, double %1369, double %1371
  %1375 = select i1 %1373, double %1367, double %1374
  %1376 = fptosi double %1375 to i8
  store i8 %1376, ptr %1255, align 1, !tbaa !11
  %1377 = fadd fast double %1362, %1287
  %1378 = add nuw nsw i32 %1286, 1
  br i1 %1279, label %1379, label %1426

1379:                                             ; preds = %1358
  %1380 = load i32, ptr %4, align 4, !tbaa !5
  %1381 = load i32, ptr %12, align 4, !tbaa !5
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1380, %1382
  br i1 %1383, label %1403, label %1384

1384:                                             ; preds = %1379
  %1385 = icmp eq i32 %1380, %1382
  br i1 %1385, label %1386, label %1419

1386:                                             ; preds = %1384
  store i32 0, ptr %4, align 4, !tbaa !5
  %1387 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1387, ptr %6, align 4, !tbaa !5
  br i1 %1284, label %1426, label %1388

1388:                                             ; preds = %1386, %1413
  %1389 = phi i64 [ %1417, %1413 ], [ 1, %1386 ]
  %1390 = getelementptr inbounds i32, ptr %4, i64 %1389
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %12, i64 %1389
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, -1
  %1395 = icmp slt i32 %1391, %1394
  br i1 %1395, label %1396, label %1411

1396:                                             ; preds = %1388
  br i1 %1383, label %1403, label %1397

1397:                                             ; preds = %1396
  %1398 = getelementptr inbounds i32, ptr %7, i64 %1389
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1389
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = add nsw i32 %1401, %1399
  store i32 %1402, ptr %1400, align 4, !tbaa !5
  br label %1421

1403:                                             ; preds = %1379, %1396
  %1404 = phi i32 [ %1391, %1396 ], [ %1380, %1379 ]
  %1405 = phi ptr [ %1390, %1396 ], [ %4, %1379 ]
  %1406 = phi i64 [ %1389, %1396 ], [ 0, %1379 ]
  %1407 = add nsw i32 %1404, 1
  store i32 %1407, ptr %1405, align 4, !tbaa !5
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1406
  br label %1421

1411:                                             ; preds = %1388
  %1412 = icmp eq i32 %1391, %1394
  br i1 %1412, label %1413, label %1419

1413:                                             ; preds = %1411
  store i32 0, ptr %1390, align 4, !tbaa !5
  %1414 = getelementptr inbounds i32, ptr %8, i64 %1389
  %1415 = load i32, ptr %1414, align 4, !tbaa !5
  %1416 = getelementptr inbounds i32, ptr %6, i64 %1389
  store i32 %1415, ptr %1416, align 4, !tbaa !5
  %1417 = add nuw nsw i64 %1389, 1
  %1418 = icmp eq i64 %1417, %1282
  br i1 %1418, label %1426, label %1388, !llvm.loop !987

1419:                                             ; preds = %1384, %1411
  %1420 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1421:                                             ; preds = %1397, %1403
  %1422 = phi ptr [ %1410, %1403 ], [ %1390, %1397 ]
  %1423 = phi i32 [ %1409, %1403 ], [ 1, %1397 ]
  %1424 = load i32, ptr %1422, align 4, !tbaa !5
  %1425 = add nsw i32 %1424, %1423
  store i32 %1425, ptr %1422, align 4, !tbaa !5
  br label %1426

1426:                                             ; preds = %1413, %1421, %1386, %1358
  %1427 = icmp eq i32 %1378, %5
  br i1 %1427, label %5579, label %1285, !llvm.loop !988

1428:                                             ; preds = %1268, %1570
  %1429 = phi i32 [ 0, %1268 ], [ %1519, %1570 ]
  %1430 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1431, label %1500

1431:                                             ; preds = %1428, %1490
  %1432 = phi i32 [ %1499, %1490 ], [ 0, %1428 ]
  %1433 = phi i64 [ %1441, %1490 ], [ %1273, %1428 ]
  %1434 = phi i64 [ %1498, %1490 ], [ %1272, %1428 ]
  %1435 = phi i32 [ %1496, %1490 ], [ %1430, %1428 ]
  %1436 = sub i32 %1271, %1432
  %1437 = tail call i32 @llvm.smin.i32(i32 %1436, i32 0)
  %1438 = sub i32 %1436, %1437
  %1439 = zext i32 %1438 to i64
  %1440 = add nuw nsw i64 %1439, 1
  %1441 = add nsw i64 %1433, -1
  %1442 = icmp ult i32 %1438, 31
  br i1 %1442, label %1478, label %1443

1443:                                             ; preds = %1431
  %1444 = and i64 %1440, 8589934560
  %1445 = sub i64 %1434, %1444
  br label %1446

1446:                                             ; preds = %1446, %1443
  %1447 = phi i64 [ 0, %1443 ], [ %1470, %1446 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1466, %1446 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1467, %1446 ]
  %1450 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1468, %1446 ]
  %1451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1469, %1446 ]
  %1452 = sub i64 %1434, %1447
  %1453 = getelementptr inbounds i32, ptr %11, i64 %1452
  %1454 = getelementptr inbounds i32, ptr %1453, i64 -7
  %1455 = load <8 x i32>, ptr %1454, align 4, !tbaa !5
  %1456 = shufflevector <8 x i32> %1455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1457 = getelementptr inbounds i32, ptr %1453, i64 -15
  %1458 = load <8 x i32>, ptr %1457, align 4, !tbaa !5
  %1459 = shufflevector <8 x i32> %1458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1460 = getelementptr inbounds i32, ptr %1453, i64 -23
  %1461 = load <8 x i32>, ptr %1460, align 4, !tbaa !5
  %1462 = shufflevector <8 x i32> %1461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1463 = getelementptr inbounds i32, ptr %1453, i64 -31
  %1464 = load <8 x i32>, ptr %1463, align 4, !tbaa !5
  %1465 = shufflevector <8 x i32> %1464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1466 = mul <8 x i32> %1456, %1448
  %1467 = mul <8 x i32> %1459, %1449
  %1468 = mul <8 x i32> %1462, %1450
  %1469 = mul <8 x i32> %1465, %1451
  %1470 = add nuw i64 %1447, 32
  %1471 = icmp eq i64 %1470, %1444
  br i1 %1471, label %1472, label %1446, !llvm.loop !989

1472:                                             ; preds = %1446
  %1473 = mul <8 x i32> %1467, %1466
  %1474 = mul <8 x i32> %1468, %1473
  %1475 = mul <8 x i32> %1469, %1474
  %1476 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1475)
  %1477 = icmp eq i64 %1440, %1444
  br i1 %1477, label %1490, label %1478

1478:                                             ; preds = %1431, %1472
  %1479 = phi i64 [ %1434, %1431 ], [ %1445, %1472 ]
  %1480 = phi i32 [ 1, %1431 ], [ %1476, %1472 ]
  br label %1481

1481:                                             ; preds = %1478, %1481
  %1482 = phi i64 [ %1487, %1481 ], [ %1479, %1478 ]
  %1483 = phi i32 [ %1486, %1481 ], [ %1480, %1478 ]
  %1484 = getelementptr inbounds i32, ptr %11, i64 %1482
  %1485 = load i32, ptr %1484, align 4, !tbaa !5
  %1486 = mul nsw i32 %1485, %1483
  %1487 = add nsw i64 %1482, -1
  %1488 = trunc i64 %1482 to i32
  %1489 = icmp sgt i32 %1488, 0
  br i1 %1489, label %1481, label %1490, !llvm.loop !990

1490:                                             ; preds = %1481, %1472
  %1491 = phi i32 [ %1476, %1472 ], [ %1486, %1481 ]
  %1492 = and i64 %1441, 4294967295
  %1493 = getelementptr inbounds i32, ptr %6, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !5
  %1495 = mul nsw i32 %1494, %1491
  %1496 = add nsw i32 %1495, %1435
  %1497 = icmp sgt i64 %1433, 2
  %1498 = add nsw i64 %1434, -1
  %1499 = add i32 %1432, 1
  br i1 %1497, label %1431, label %1500, !llvm.loop !991

1500:                                             ; preds = %1490, %1428
  %1501 = phi i32 [ %1430, %1428 ], [ %1496, %1490 ]
  %1502 = icmp slt i32 %1501, %5
  br i1 %1502, label %1505, label %1503

1503:                                             ; preds = %1500
  %1504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

1505:                                             ; preds = %1500
  %1506 = sext i32 %1501 to i64
  %1507 = getelementptr inbounds double, ptr %1253, i64 %1506
  %1508 = load double, ptr %1507, align 8, !tbaa !18
  %1509 = fptosi double %1508 to i8
  %1510 = load i8, ptr %1255, align 1, !tbaa !11
  %1511 = sitofp i8 %1510 to double
  %1512 = sitofp i8 %1509 to double
  %1513 = icmp slt i8 %1509, 0
  %1514 = fneg fast double %1512
  %1515 = select i1 %1513, double %1514, double %1512
  %1516 = fcmp fast ole double %1515, %1511
  %1517 = select fast i1 %1516, double %1511, double %1515
  %1518 = fptosi double %1517 to i8
  store i8 %1518, ptr %1255, align 1, !tbaa !11
  %1519 = add nuw nsw i32 %1429, 1
  br i1 %1270, label %1520, label %1570

1520:                                             ; preds = %1505
  %1521 = load i32, ptr %4, align 4, !tbaa !5
  %1522 = load i32, ptr %12, align 4, !tbaa !5
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1521, %1523
  br i1 %1524, label %1547, label %1525

1525:                                             ; preds = %1520
  %1526 = icmp eq i32 %1521, %1523
  br i1 %1526, label %1527, label %1563

1527:                                             ; preds = %1525
  store i32 0, ptr %4, align 4, !tbaa !5
  %1528 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1528, ptr %6, align 4, !tbaa !5
  br i1 %1275, label %1570, label %1529

1529:                                             ; preds = %1527, %1557
  %1530 = phi i64 [ %1561, %1557 ], [ 1, %1527 ]
  %1531 = getelementptr inbounds i32, ptr %4, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %12, i64 %1530
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = add nsw i32 %1534, -1
  %1536 = icmp slt i32 %1532, %1535
  br i1 %1536, label %1537, label %1555

1537:                                             ; preds = %1529
  br i1 %1524, label %1547, label %1538

1538:                                             ; preds = %1537
  %1539 = shl i64 %1530, 32
  %1540 = add i64 %1539, -4294967296
  %1541 = ashr exact i64 %1540, 32
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1530
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = add nsw i32 %1545, %1543
  store i32 %1546, ptr %1544, align 4, !tbaa !5
  br label %1565

1547:                                             ; preds = %1520, %1537
  %1548 = phi i32 [ %1532, %1537 ], [ %1521, %1520 ]
  %1549 = phi ptr [ %1531, %1537 ], [ %4, %1520 ]
  %1550 = phi i64 [ %1530, %1537 ], [ 0, %1520 ]
  %1551 = add nsw i32 %1548, 1
  store i32 %1551, ptr %1549, align 4, !tbaa !5
  %1552 = getelementptr inbounds i32, ptr %7, i64 %1550
  %1553 = load i32, ptr %1552, align 4, !tbaa !5
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1550
  br label %1565

1555:                                             ; preds = %1529
  %1556 = icmp eq i32 %1532, %1535
  br i1 %1556, label %1557, label %1563

1557:                                             ; preds = %1555
  store i32 0, ptr %1531, align 4, !tbaa !5
  %1558 = getelementptr inbounds i32, ptr %8, i64 %1530
  %1559 = load i32, ptr %1558, align 4, !tbaa !5
  %1560 = getelementptr inbounds i32, ptr %6, i64 %1530
  store i32 %1559, ptr %1560, align 4, !tbaa !5
  %1561 = add nuw nsw i64 %1530, 1
  %1562 = icmp eq i64 %1561, %1273
  br i1 %1562, label %1570, label %1529, !llvm.loop !992

1563:                                             ; preds = %1525, %1555
  %1564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1565:                                             ; preds = %1538, %1547
  %1566 = phi ptr [ %1554, %1547 ], [ %1531, %1538 ]
  %1567 = phi i32 [ %1553, %1547 ], [ 1, %1538 ]
  %1568 = load i32, ptr %1566, align 4, !tbaa !5
  %1569 = add nsw i32 %1568, %1567
  store i32 %1569, ptr %1566, align 4, !tbaa !5
  br label %1570

1570:                                             ; preds = %1557, %1565, %1527, %1505
  %1571 = icmp eq i32 %1519, %5
  br i1 %1571, label %5579, label %1428, !llvm.loop !993

1572:                                             ; preds = %1261
  %1573 = getelementptr inbounds i32, ptr %3, i64 %19
  %1574 = load i32, ptr %1573, align 4, !tbaa !5
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp sgt i32 %5, 0
  br i1 %1575, label %1586, label %1577

1577:                                             ; preds = %1572
  br i1 %1576, label %1578, label %5579

1578:                                             ; preds = %1577
  %1579 = icmp sgt i32 %13, 1
  %1580 = icmp sgt i32 %13, 0
  %1581 = add i32 %13, -2
  %1582 = zext i32 %1581 to i64
  %1583 = zext i32 %13 to i64
  %1584 = add nuw i32 %5, 1
  %1585 = icmp eq i32 %13, 1
  br label %1731

1586:                                             ; preds = %1572
  br i1 %1576, label %1587, label %5579

1587:                                             ; preds = %1586
  %1588 = icmp sgt i32 %13, 1
  %1589 = icmp sgt i32 %13, 0
  %1590 = add i32 %13, -2
  %1591 = zext i32 %1590 to i64
  %1592 = zext i32 %13 to i64
  %1593 = add nuw i32 %5, 1
  %1594 = icmp eq i32 %13, 1
  br label %1595

1595:                                             ; preds = %1587, %1729
  %1596 = phi i32 [ 0, %1587 ], [ %1681, %1729 ]
  %1597 = phi double [ 0.000000e+00, %1587 ], [ %1680, %1729 ]
  %1598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1588, label %1599, label %1668

1599:                                             ; preds = %1595, %1658
  %1600 = phi i32 [ %1667, %1658 ], [ 0, %1595 ]
  %1601 = phi i64 [ %1609, %1658 ], [ %1592, %1595 ]
  %1602 = phi i64 [ %1666, %1658 ], [ %1591, %1595 ]
  %1603 = phi i32 [ %1664, %1658 ], [ %1598, %1595 ]
  %1604 = sub i32 %1590, %1600
  %1605 = tail call i32 @llvm.smin.i32(i32 %1604, i32 0)
  %1606 = sub i32 %1604, %1605
  %1607 = zext i32 %1606 to i64
  %1608 = add nuw nsw i64 %1607, 1
  %1609 = add nsw i64 %1601, -1
  %1610 = icmp ult i32 %1606, 31
  br i1 %1610, label %1646, label %1611

1611:                                             ; preds = %1599
  %1612 = and i64 %1608, 8589934560
  %1613 = sub i64 %1602, %1612
  br label %1614

1614:                                             ; preds = %1614, %1611
  %1615 = phi i64 [ 0, %1611 ], [ %1638, %1614 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1634, %1614 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1635, %1614 ]
  %1618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1636, %1614 ]
  %1619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1637, %1614 ]
  %1620 = sub i64 %1602, %1615
  %1621 = getelementptr inbounds i32, ptr %9, i64 %1620
  %1622 = getelementptr inbounds i32, ptr %1621, i64 -7
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !5
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1621, i64 -15
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !5
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = getelementptr inbounds i32, ptr %1621, i64 -23
  %1629 = load <8 x i32>, ptr %1628, align 4, !tbaa !5
  %1630 = shufflevector <8 x i32> %1629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1631 = getelementptr inbounds i32, ptr %1621, i64 -31
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !5
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = mul <8 x i32> %1624, %1616
  %1635 = mul <8 x i32> %1627, %1617
  %1636 = mul <8 x i32> %1630, %1618
  %1637 = mul <8 x i32> %1633, %1619
  %1638 = add nuw i64 %1615, 32
  %1639 = icmp eq i64 %1638, %1612
  br i1 %1639, label %1640, label %1614, !llvm.loop !994

1640:                                             ; preds = %1614
  %1641 = mul <8 x i32> %1635, %1634
  %1642 = mul <8 x i32> %1636, %1641
  %1643 = mul <8 x i32> %1637, %1642
  %1644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1643)
  %1645 = icmp eq i64 %1608, %1612
  br i1 %1645, label %1658, label %1646

1646:                                             ; preds = %1599, %1640
  %1647 = phi i64 [ %1602, %1599 ], [ %1613, %1640 ]
  %1648 = phi i32 [ 1, %1599 ], [ %1644, %1640 ]
  br label %1649

1649:                                             ; preds = %1646, %1649
  %1650 = phi i64 [ %1655, %1649 ], [ %1647, %1646 ]
  %1651 = phi i32 [ %1654, %1649 ], [ %1648, %1646 ]
  %1652 = getelementptr inbounds i32, ptr %9, i64 %1650
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = mul nsw i32 %1653, %1651
  %1655 = add nsw i64 %1650, -1
  %1656 = trunc i64 %1650 to i32
  %1657 = icmp sgt i32 %1656, 0
  br i1 %1657, label %1649, label %1658, !llvm.loop !995

1658:                                             ; preds = %1649, %1640
  %1659 = phi i32 [ %1644, %1640 ], [ %1654, %1649 ]
  %1660 = and i64 %1609, 4294967295
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1660
  %1662 = load i32, ptr %1661, align 4, !tbaa !5
  %1663 = mul nsw i32 %1662, %1659
  %1664 = add nsw i32 %1663, %1603
  %1665 = icmp sgt i64 %1601, 2
  %1666 = add nsw i64 %1602, -1
  %1667 = add i32 %1600, 1
  br i1 %1665, label %1599, label %1668, !llvm.loop !996

1668:                                             ; preds = %1658, %1595
  %1669 = phi i32 [ %1598, %1595 ], [ %1664, %1658 ]
  %1670 = sext i32 %1669 to i64
  %1671 = getelementptr inbounds double, ptr %1253, i64 %1670
  %1672 = load double, ptr %1671, align 8, !tbaa !18
  %1673 = fptosi double %1672 to i8
  %1674 = load i8, ptr %1255, align 1, !tbaa !11
  %1675 = sext i8 %1674 to i32
  %1676 = tail call i8 @llvm.abs.i8(i8 %1673, i1 false)
  %1677 = zext i8 %1676 to i32
  %1678 = icmp slt i32 %1675, %1677
  %1679 = select i1 %1678, i8 %1676, i8 %1674
  store i8 %1679, ptr %1255, align 1, !tbaa !11
  %1680 = fadd fast double %1597, 1.000000e+00
  %1681 = add nuw nsw i32 %1596, 1
  br i1 %1589, label %1682, label %1729

1682:                                             ; preds = %1668
  %1683 = load i32, ptr %4, align 4, !tbaa !5
  %1684 = load i32, ptr %12, align 4, !tbaa !5
  %1685 = add nsw i32 %1684, -1
  %1686 = icmp slt i32 %1683, %1685
  br i1 %1686, label %1706, label %1687

1687:                                             ; preds = %1682
  %1688 = icmp eq i32 %1683, %1685
  br i1 %1688, label %1689, label %1722

1689:                                             ; preds = %1687
  store i32 0, ptr %4, align 4, !tbaa !5
  %1690 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1690, ptr %6, align 4, !tbaa !5
  br i1 %1594, label %1729, label %1691

1691:                                             ; preds = %1689, %1716
  %1692 = phi i64 [ %1720, %1716 ], [ 1, %1689 ]
  %1693 = getelementptr inbounds i32, ptr %4, i64 %1692
  %1694 = load i32, ptr %1693, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %12, i64 %1692
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, -1
  %1698 = icmp slt i32 %1694, %1697
  br i1 %1698, label %1699, label %1714

1699:                                             ; preds = %1691
  br i1 %1686, label %1706, label %1700

1700:                                             ; preds = %1699
  %1701 = getelementptr inbounds i32, ptr %7, i64 %1692
  %1702 = load i32, ptr %1701, align 4, !tbaa !5
  %1703 = getelementptr inbounds i32, ptr %6, i64 %1692
  %1704 = load i32, ptr %1703, align 4, !tbaa !5
  %1705 = add nsw i32 %1704, %1702
  store i32 %1705, ptr %1703, align 4, !tbaa !5
  br label %1724

1706:                                             ; preds = %1682, %1699
  %1707 = phi i32 [ %1694, %1699 ], [ %1683, %1682 ]
  %1708 = phi ptr [ %1693, %1699 ], [ %4, %1682 ]
  %1709 = phi i64 [ %1692, %1699 ], [ 0, %1682 ]
  %1710 = add nsw i32 %1707, 1
  store i32 %1710, ptr %1708, align 4, !tbaa !5
  %1711 = getelementptr inbounds i32, ptr %7, i64 %1709
  %1712 = load i32, ptr %1711, align 4, !tbaa !5
  %1713 = getelementptr inbounds i32, ptr %6, i64 %1709
  br label %1724

1714:                                             ; preds = %1691
  %1715 = icmp eq i32 %1694, %1697
  br i1 %1715, label %1716, label %1722

1716:                                             ; preds = %1714
  store i32 0, ptr %1693, align 4, !tbaa !5
  %1717 = getelementptr inbounds i32, ptr %8, i64 %1692
  %1718 = load i32, ptr %1717, align 4, !tbaa !5
  %1719 = getelementptr inbounds i32, ptr %6, i64 %1692
  store i32 %1718, ptr %1719, align 4, !tbaa !5
  %1720 = add nuw nsw i64 %1692, 1
  %1721 = icmp eq i64 %1720, %1592
  br i1 %1721, label %1729, label %1691, !llvm.loop !997

1722:                                             ; preds = %1687, %1714
  %1723 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1724:                                             ; preds = %1700, %1706
  %1725 = phi ptr [ %1713, %1706 ], [ %1693, %1700 ]
  %1726 = phi i32 [ %1712, %1706 ], [ 1, %1700 ]
  %1727 = load i32, ptr %1725, align 4, !tbaa !5
  %1728 = add nsw i32 %1727, %1726
  store i32 %1728, ptr %1725, align 4, !tbaa !5
  br label %1729

1729:                                             ; preds = %1716, %1724, %1689, %1668
  %1730 = icmp eq i32 %1681, %5
  br i1 %1730, label %5579, label %1595, !llvm.loop !998

1731:                                             ; preds = %1578, %1870
  %1732 = phi i32 [ 0, %1578 ], [ %1819, %1870 ]
  %1733 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1579, label %1734, label %1803

1734:                                             ; preds = %1731, %1793
  %1735 = phi i32 [ %1802, %1793 ], [ 0, %1731 ]
  %1736 = phi i64 [ %1744, %1793 ], [ %1583, %1731 ]
  %1737 = phi i64 [ %1801, %1793 ], [ %1582, %1731 ]
  %1738 = phi i32 [ %1799, %1793 ], [ %1733, %1731 ]
  %1739 = sub i32 %1581, %1735
  %1740 = tail call i32 @llvm.smin.i32(i32 %1739, i32 0)
  %1741 = sub i32 %1739, %1740
  %1742 = zext i32 %1741 to i64
  %1743 = add nuw nsw i64 %1742, 1
  %1744 = add nsw i64 %1736, -1
  %1745 = icmp ult i32 %1741, 31
  br i1 %1745, label %1781, label %1746

1746:                                             ; preds = %1734
  %1747 = and i64 %1743, 8589934560
  %1748 = sub i64 %1737, %1747
  br label %1749

1749:                                             ; preds = %1749, %1746
  %1750 = phi i64 [ 0, %1746 ], [ %1773, %1749 ]
  %1751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1769, %1749 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1770, %1749 ]
  %1753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1771, %1749 ]
  %1754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1772, %1749 ]
  %1755 = sub i64 %1737, %1750
  %1756 = getelementptr inbounds i32, ptr %11, i64 %1755
  %1757 = getelementptr inbounds i32, ptr %1756, i64 -7
  %1758 = load <8 x i32>, ptr %1757, align 4, !tbaa !5
  %1759 = shufflevector <8 x i32> %1758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1760 = getelementptr inbounds i32, ptr %1756, i64 -15
  %1761 = load <8 x i32>, ptr %1760, align 4, !tbaa !5
  %1762 = shufflevector <8 x i32> %1761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1763 = getelementptr inbounds i32, ptr %1756, i64 -23
  %1764 = load <8 x i32>, ptr %1763, align 4, !tbaa !5
  %1765 = shufflevector <8 x i32> %1764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1766 = getelementptr inbounds i32, ptr %1756, i64 -31
  %1767 = load <8 x i32>, ptr %1766, align 4, !tbaa !5
  %1768 = shufflevector <8 x i32> %1767, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1769 = mul <8 x i32> %1759, %1751
  %1770 = mul <8 x i32> %1762, %1752
  %1771 = mul <8 x i32> %1765, %1753
  %1772 = mul <8 x i32> %1768, %1754
  %1773 = add nuw i64 %1750, 32
  %1774 = icmp eq i64 %1773, %1747
  br i1 %1774, label %1775, label %1749, !llvm.loop !999

1775:                                             ; preds = %1749
  %1776 = mul <8 x i32> %1770, %1769
  %1777 = mul <8 x i32> %1771, %1776
  %1778 = mul <8 x i32> %1772, %1777
  %1779 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1778)
  %1780 = icmp eq i64 %1743, %1747
  br i1 %1780, label %1793, label %1781

1781:                                             ; preds = %1734, %1775
  %1782 = phi i64 [ %1737, %1734 ], [ %1748, %1775 ]
  %1783 = phi i32 [ 1, %1734 ], [ %1779, %1775 ]
  br label %1784

1784:                                             ; preds = %1781, %1784
  %1785 = phi i64 [ %1790, %1784 ], [ %1782, %1781 ]
  %1786 = phi i32 [ %1789, %1784 ], [ %1783, %1781 ]
  %1787 = getelementptr inbounds i32, ptr %11, i64 %1785
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = mul nsw i32 %1788, %1786
  %1790 = add nsw i64 %1785, -1
  %1791 = trunc i64 %1785 to i32
  %1792 = icmp sgt i32 %1791, 0
  br i1 %1792, label %1784, label %1793, !llvm.loop !1000

1793:                                             ; preds = %1784, %1775
  %1794 = phi i32 [ %1779, %1775 ], [ %1789, %1784 ]
  %1795 = and i64 %1744, 4294967295
  %1796 = getelementptr inbounds i32, ptr %6, i64 %1795
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = mul nsw i32 %1797, %1794
  %1799 = add nsw i32 %1798, %1738
  %1800 = icmp sgt i64 %1736, 2
  %1801 = add nsw i64 %1737, -1
  %1802 = add i32 %1735, 1
  br i1 %1800, label %1734, label %1803, !llvm.loop !1001

1803:                                             ; preds = %1793, %1731
  %1804 = phi i32 [ %1733, %1731 ], [ %1799, %1793 ]
  %1805 = icmp slt i32 %1804, %5
  br i1 %1805, label %1808, label %1806

1806:                                             ; preds = %1803
  %1807 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

1808:                                             ; preds = %1803
  %1809 = sext i32 %1804 to i64
  %1810 = getelementptr inbounds double, ptr %1253, i64 %1809
  %1811 = load double, ptr %1810, align 8, !tbaa !18
  %1812 = fptosi double %1811 to i8
  %1813 = load i8, ptr %1255, align 1, !tbaa !11
  %1814 = sext i8 %1813 to i32
  %1815 = tail call i8 @llvm.abs.i8(i8 %1812, i1 false)
  %1816 = zext i8 %1815 to i32
  %1817 = icmp slt i32 %1814, %1816
  %1818 = select i1 %1817, i8 %1815, i8 %1813
  store i8 %1818, ptr %1255, align 1, !tbaa !11
  %1819 = add nuw nsw i32 %1732, 1
  br i1 %1580, label %1820, label %1870

1820:                                             ; preds = %1808
  %1821 = load i32, ptr %4, align 4, !tbaa !5
  %1822 = load i32, ptr %12, align 4, !tbaa !5
  %1823 = add nsw i32 %1822, -1
  %1824 = icmp slt i32 %1821, %1823
  br i1 %1824, label %1847, label %1825

1825:                                             ; preds = %1820
  %1826 = icmp eq i32 %1821, %1823
  br i1 %1826, label %1827, label %1863

1827:                                             ; preds = %1825
  store i32 0, ptr %4, align 4, !tbaa !5
  %1828 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1828, ptr %6, align 4, !tbaa !5
  br i1 %1585, label %1870, label %1829

1829:                                             ; preds = %1827, %1857
  %1830 = phi i64 [ %1861, %1857 ], [ 1, %1827 ]
  %1831 = getelementptr inbounds i32, ptr %4, i64 %1830
  %1832 = load i32, ptr %1831, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %12, i64 %1830
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = add nsw i32 %1834, -1
  %1836 = icmp slt i32 %1832, %1835
  br i1 %1836, label %1837, label %1855

1837:                                             ; preds = %1829
  br i1 %1824, label %1847, label %1838

1838:                                             ; preds = %1837
  %1839 = shl i64 %1830, 32
  %1840 = add i64 %1839, -4294967296
  %1841 = ashr exact i64 %1840, 32
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1841
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1830
  %1845 = load i32, ptr %1844, align 4, !tbaa !5
  %1846 = add nsw i32 %1845, %1843
  store i32 %1846, ptr %1844, align 4, !tbaa !5
  br label %1865

1847:                                             ; preds = %1820, %1837
  %1848 = phi i32 [ %1832, %1837 ], [ %1821, %1820 ]
  %1849 = phi ptr [ %1831, %1837 ], [ %4, %1820 ]
  %1850 = phi i64 [ %1830, %1837 ], [ 0, %1820 ]
  %1851 = add nsw i32 %1848, 1
  store i32 %1851, ptr %1849, align 4, !tbaa !5
  %1852 = getelementptr inbounds i32, ptr %7, i64 %1850
  %1853 = load i32, ptr %1852, align 4, !tbaa !5
  %1854 = getelementptr inbounds i32, ptr %6, i64 %1850
  br label %1865

1855:                                             ; preds = %1829
  %1856 = icmp eq i32 %1832, %1835
  br i1 %1856, label %1857, label %1863

1857:                                             ; preds = %1855
  store i32 0, ptr %1831, align 4, !tbaa !5
  %1858 = getelementptr inbounds i32, ptr %8, i64 %1830
  %1859 = load i32, ptr %1858, align 4, !tbaa !5
  %1860 = getelementptr inbounds i32, ptr %6, i64 %1830
  store i32 %1859, ptr %1860, align 4, !tbaa !5
  %1861 = add nuw nsw i64 %1830, 1
  %1862 = icmp eq i64 %1861, %1583
  br i1 %1862, label %1870, label %1829, !llvm.loop !1002

1863:                                             ; preds = %1825, %1855
  %1864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1865:                                             ; preds = %1838, %1847
  %1866 = phi ptr [ %1854, %1847 ], [ %1831, %1838 ]
  %1867 = phi i32 [ %1853, %1847 ], [ 1, %1838 ]
  %1868 = load i32, ptr %1866, align 4, !tbaa !5
  %1869 = add nsw i32 %1868, %1867
  store i32 %1869, ptr %1866, align 4, !tbaa !5
  br label %1870

1870:                                             ; preds = %1857, %1865, %1827, %1808
  %1871 = icmp eq i32 %1819, %5
  br i1 %1871, label %5579, label %1731, !llvm.loop !1003

1872:                                             ; preds = %1261
  %1873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1941, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

1874:                                             ; preds = %18
  %1875 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1876 = load ptr, ptr %1875, align 8, !tbaa !9
  %1877 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1878 = load ptr, ptr %1877, align 8, !tbaa !9
  store i16 0, ptr %1878, align 2, !tbaa !78
  %1879 = icmp eq i32 %13, 0
  br i1 %1879, label %1880, label %1884

1880:                                             ; preds = %1874
  %1881 = load double, ptr %1876, align 8, !tbaa !18
  %1882 = fptosi double %1881 to i16
  %1883 = tail call i16 @llvm.abs.i16(i16 %1882, i1 false)
  store i16 %1883, ptr %1878, align 2, !tbaa !78
  br label %5579

1884:                                             ; preds = %1874
  switch i32 %1, label %2495 [
    i32 1, label %1885
    i32 0, label %2195
  ]

1885:                                             ; preds = %1884
  %1886 = getelementptr inbounds i32, ptr %3, i64 %19
  %1887 = load i32, ptr %1886, align 4, !tbaa !5
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp sgt i32 %5, 0
  br i1 %1888, label %1899, label %1890

1890:                                             ; preds = %1885
  br i1 %1889, label %1891, label %5579

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %2051

1899:                                             ; preds = %1885
  br i1 %1889, label %1900, label %5579

1900:                                             ; preds = %1899
  %1901 = icmp sgt i32 %13, 1
  %1902 = icmp sgt i32 %13, 0
  %1903 = add i32 %13, -2
  %1904 = zext i32 %1903 to i64
  %1905 = zext i32 %13 to i64
  %1906 = add nuw i32 %5, 1
  %1907 = icmp eq i32 %13, 1
  br label %1908

1908:                                             ; preds = %1900, %2049
  %1909 = phi i16 [ 0, %1900 ], [ %1999, %2049 ]
  %1910 = phi i32 [ 0, %1900 ], [ %2001, %2049 ]
  %1911 = phi double [ 0.000000e+00, %1900 ], [ %2000, %2049 ]
  %1912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1901, label %1913, label %1982

1913:                                             ; preds = %1908, %1972
  %1914 = phi i32 [ %1981, %1972 ], [ 0, %1908 ]
  %1915 = phi i64 [ %1923, %1972 ], [ %1905, %1908 ]
  %1916 = phi i64 [ %1980, %1972 ], [ %1904, %1908 ]
  %1917 = phi i32 [ %1978, %1972 ], [ %1912, %1908 ]
  %1918 = sub i32 %1903, %1914
  %1919 = tail call i32 @llvm.smin.i32(i32 %1918, i32 0)
  %1920 = sub i32 %1918, %1919
  %1921 = zext i32 %1920 to i64
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = add nsw i64 %1915, -1
  %1924 = icmp ult i32 %1920, 31
  br i1 %1924, label %1960, label %1925

1925:                                             ; preds = %1913
  %1926 = and i64 %1922, 8589934560
  %1927 = sub i64 %1916, %1926
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = phi i64 [ 0, %1925 ], [ %1952, %1928 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1948, %1928 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1949, %1928 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1950, %1928 ]
  %1933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1951, %1928 ]
  %1934 = sub i64 %1916, %1929
  %1935 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1936 = getelementptr inbounds i32, ptr %1935, i64 -7
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !5
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1935, i64 -15
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !5
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = getelementptr inbounds i32, ptr %1935, i64 -23
  %1943 = load <8 x i32>, ptr %1942, align 4, !tbaa !5
  %1944 = shufflevector <8 x i32> %1943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1945 = getelementptr inbounds i32, ptr %1935, i64 -31
  %1946 = load <8 x i32>, ptr %1945, align 4, !tbaa !5
  %1947 = shufflevector <8 x i32> %1946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1948 = mul <8 x i32> %1938, %1930
  %1949 = mul <8 x i32> %1941, %1931
  %1950 = mul <8 x i32> %1944, %1932
  %1951 = mul <8 x i32> %1947, %1933
  %1952 = add nuw i64 %1929, 32
  %1953 = icmp eq i64 %1952, %1926
  br i1 %1953, label %1954, label %1928, !llvm.loop !1004

1954:                                             ; preds = %1928
  %1955 = mul <8 x i32> %1949, %1948
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = mul <8 x i32> %1951, %1956
  %1958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1957)
  %1959 = icmp eq i64 %1922, %1926
  br i1 %1959, label %1972, label %1960

1960:                                             ; preds = %1913, %1954
  %1961 = phi i64 [ %1916, %1913 ], [ %1927, %1954 ]
  %1962 = phi i32 [ 1, %1913 ], [ %1958, %1954 ]
  br label %1963

1963:                                             ; preds = %1960, %1963
  %1964 = phi i64 [ %1969, %1963 ], [ %1961, %1960 ]
  %1965 = phi i32 [ %1968, %1963 ], [ %1962, %1960 ]
  %1966 = getelementptr inbounds i32, ptr %9, i64 %1964
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = mul nsw i32 %1967, %1965
  %1969 = add nsw i64 %1964, -1
  %1970 = trunc i64 %1964 to i32
  %1971 = icmp sgt i32 %1970, 0
  br i1 %1971, label %1963, label %1972, !llvm.loop !1005

1972:                                             ; preds = %1963, %1954
  %1973 = phi i32 [ %1958, %1954 ], [ %1968, %1963 ]
  %1974 = and i64 %1923, 4294967295
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1974
  %1976 = load i32, ptr %1975, align 4, !tbaa !5
  %1977 = mul nsw i32 %1976, %1973
  %1978 = add nsw i32 %1977, %1917
  %1979 = icmp sgt i64 %1915, 2
  %1980 = add nsw i64 %1916, -1
  %1981 = add i32 %1914, 1
  br i1 %1979, label %1913, label %1982, !llvm.loop !1006

1982:                                             ; preds = %1972, %1908
  %1983 = phi i32 [ %1912, %1908 ], [ %1978, %1972 ]
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds double, ptr %2, i64 %1984
  %1986 = load double, ptr %1985, align 8, !tbaa !18
  %1987 = getelementptr inbounds double, ptr %1876, i64 %1984
  %1988 = load double, ptr %1987, align 8, !tbaa !18
  %1989 = fptosi double %1988 to i16
  %1990 = sitofp i16 %1909 to double
  %1991 = sitofp i16 %1989 to double
  %1992 = fmul fast double %1986, %1991
  %1993 = fcmp fast uge double %1992, 0.000000e+00
  %1994 = fneg fast double %1992
  %1995 = tail call fast double @llvm.fabs.f64(double %1992)
  %1996 = fcmp fast ole double %1995, %1990
  %1997 = select nnan ninf i1 %1993, double %1992, double %1994
  %1998 = select i1 %1996, double %1990, double %1997
  %1999 = fptosi double %1998 to i16
  %2000 = fadd fast double %1986, %1911
  %2001 = add nuw nsw i32 %1910, 1
  br i1 %1902, label %2002, label %2049

2002:                                             ; preds = %1982
  %2003 = load i32, ptr %4, align 4, !tbaa !5
  %2004 = load i32, ptr %12, align 4, !tbaa !5
  %2005 = add nsw i32 %2004, -1
  %2006 = icmp slt i32 %2003, %2005
  br i1 %2006, label %2026, label %2007

2007:                                             ; preds = %2002
  %2008 = icmp eq i32 %2003, %2005
  br i1 %2008, label %2009, label %2042

2009:                                             ; preds = %2007
  store i32 0, ptr %4, align 4, !tbaa !5
  %2010 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2010, ptr %6, align 4, !tbaa !5
  br i1 %1907, label %2049, label %2011

2011:                                             ; preds = %2009, %2036
  %2012 = phi i64 [ %2040, %2036 ], [ 1, %2009 ]
  %2013 = getelementptr inbounds i32, ptr %4, i64 %2012
  %2014 = load i32, ptr %2013, align 4, !tbaa !5
  %2015 = getelementptr inbounds i32, ptr %12, i64 %2012
  %2016 = load i32, ptr %2015, align 4, !tbaa !5
  %2017 = add nsw i32 %2016, -1
  %2018 = icmp slt i32 %2014, %2017
  br i1 %2018, label %2019, label %2034

2019:                                             ; preds = %2011
  br i1 %2006, label %2026, label %2020

2020:                                             ; preds = %2019
  %2021 = getelementptr inbounds i32, ptr %7, i64 %2012
  %2022 = load i32, ptr %2021, align 4, !tbaa !5
  %2023 = getelementptr inbounds i32, ptr %6, i64 %2012
  %2024 = load i32, ptr %2023, align 4, !tbaa !5
  %2025 = add nsw i32 %2024, %2022
  store i32 %2025, ptr %2023, align 4, !tbaa !5
  br label %2044

2026:                                             ; preds = %2002, %2019
  %2027 = phi i32 [ %2014, %2019 ], [ %2003, %2002 ]
  %2028 = phi ptr [ %2013, %2019 ], [ %4, %2002 ]
  %2029 = phi i64 [ %2012, %2019 ], [ 0, %2002 ]
  %2030 = add nsw i32 %2027, 1
  store i32 %2030, ptr %2028, align 4, !tbaa !5
  %2031 = getelementptr inbounds i32, ptr %7, i64 %2029
  %2032 = load i32, ptr %2031, align 4, !tbaa !5
  %2033 = getelementptr inbounds i32, ptr %6, i64 %2029
  br label %2044

2034:                                             ; preds = %2011
  %2035 = icmp eq i32 %2014, %2017
  br i1 %2035, label %2036, label %2042

2036:                                             ; preds = %2034
  store i32 0, ptr %2013, align 4, !tbaa !5
  %2037 = getelementptr inbounds i32, ptr %8, i64 %2012
  %2038 = load i32, ptr %2037, align 4, !tbaa !5
  %2039 = getelementptr inbounds i32, ptr %6, i64 %2012
  store i32 %2038, ptr %2039, align 4, !tbaa !5
  %2040 = add nuw nsw i64 %2012, 1
  %2041 = icmp eq i64 %2040, %1905
  br i1 %2041, label %2049, label %2011, !llvm.loop !1007

2042:                                             ; preds = %2007, %2034
  store i16 %1999, ptr %1878, align 2, !tbaa !78
  %2043 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2044:                                             ; preds = %2020, %2026
  %2045 = phi ptr [ %2033, %2026 ], [ %2013, %2020 ]
  %2046 = phi i32 [ %2032, %2026 ], [ 1, %2020 ]
  %2047 = load i32, ptr %2045, align 4, !tbaa !5
  %2048 = add nsw i32 %2047, %2046
  store i32 %2048, ptr %2045, align 4, !tbaa !5
  br label %2049

2049:                                             ; preds = %2036, %2044, %2009, %1982
  %2050 = icmp eq i32 %2001, %5
  br i1 %2050, label %5573, label %1908, !llvm.loop !1008

2051:                                             ; preds = %1891, %2193
  %2052 = phi i16 [ 0, %1891 ], [ %2141, %2193 ]
  %2053 = phi i32 [ 0, %1891 ], [ %2142, %2193 ]
  %2054 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1892, label %2055, label %2124

2055:                                             ; preds = %2051, %2114
  %2056 = phi i32 [ %2123, %2114 ], [ 0, %2051 ]
  %2057 = phi i64 [ %2065, %2114 ], [ %1896, %2051 ]
  %2058 = phi i64 [ %2122, %2114 ], [ %1895, %2051 ]
  %2059 = phi i32 [ %2120, %2114 ], [ %2054, %2051 ]
  %2060 = sub i32 %1894, %2056
  %2061 = tail call i32 @llvm.smin.i32(i32 %2060, i32 0)
  %2062 = sub i32 %2060, %2061
  %2063 = zext i32 %2062 to i64
  %2064 = add nuw nsw i64 %2063, 1
  %2065 = add nsw i64 %2057, -1
  %2066 = icmp ult i32 %2062, 31
  br i1 %2066, label %2102, label %2067

2067:                                             ; preds = %2055
  %2068 = and i64 %2064, 8589934560
  %2069 = sub i64 %2058, %2068
  br label %2070

2070:                                             ; preds = %2070, %2067
  %2071 = phi i64 [ 0, %2067 ], [ %2094, %2070 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2090, %2070 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2091, %2070 ]
  %2074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2092, %2070 ]
  %2075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2093, %2070 ]
  %2076 = sub i64 %2058, %2071
  %2077 = getelementptr inbounds i32, ptr %11, i64 %2076
  %2078 = getelementptr inbounds i32, ptr %2077, i64 -7
  %2079 = load <8 x i32>, ptr %2078, align 4, !tbaa !5
  %2080 = shufflevector <8 x i32> %2079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2081 = getelementptr inbounds i32, ptr %2077, i64 -15
  %2082 = load <8 x i32>, ptr %2081, align 4, !tbaa !5
  %2083 = shufflevector <8 x i32> %2082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2084 = getelementptr inbounds i32, ptr %2077, i64 -23
  %2085 = load <8 x i32>, ptr %2084, align 4, !tbaa !5
  %2086 = shufflevector <8 x i32> %2085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2087 = getelementptr inbounds i32, ptr %2077, i64 -31
  %2088 = load <8 x i32>, ptr %2087, align 4, !tbaa !5
  %2089 = shufflevector <8 x i32> %2088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2090 = mul <8 x i32> %2080, %2072
  %2091 = mul <8 x i32> %2083, %2073
  %2092 = mul <8 x i32> %2086, %2074
  %2093 = mul <8 x i32> %2089, %2075
  %2094 = add nuw i64 %2071, 32
  %2095 = icmp eq i64 %2094, %2068
  br i1 %2095, label %2096, label %2070, !llvm.loop !1009

2096:                                             ; preds = %2070
  %2097 = mul <8 x i32> %2091, %2090
  %2098 = mul <8 x i32> %2092, %2097
  %2099 = mul <8 x i32> %2093, %2098
  %2100 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2099)
  %2101 = icmp eq i64 %2064, %2068
  br i1 %2101, label %2114, label %2102

2102:                                             ; preds = %2055, %2096
  %2103 = phi i64 [ %2058, %2055 ], [ %2069, %2096 ]
  %2104 = phi i32 [ 1, %2055 ], [ %2100, %2096 ]
  br label %2105

2105:                                             ; preds = %2102, %2105
  %2106 = phi i64 [ %2111, %2105 ], [ %2103, %2102 ]
  %2107 = phi i32 [ %2110, %2105 ], [ %2104, %2102 ]
  %2108 = getelementptr inbounds i32, ptr %11, i64 %2106
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = mul nsw i32 %2109, %2107
  %2111 = add nsw i64 %2106, -1
  %2112 = trunc i64 %2106 to i32
  %2113 = icmp sgt i32 %2112, 0
  br i1 %2113, label %2105, label %2114, !llvm.loop !1010

2114:                                             ; preds = %2105, %2096
  %2115 = phi i32 [ %2100, %2096 ], [ %2110, %2105 ]
  %2116 = and i64 %2065, 4294967295
  %2117 = getelementptr inbounds i32, ptr %6, i64 %2116
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = mul nsw i32 %2118, %2115
  %2120 = add nsw i32 %2119, %2059
  %2121 = icmp sgt i64 %2057, 2
  %2122 = add nsw i64 %2058, -1
  %2123 = add i32 %2056, 1
  br i1 %2121, label %2055, label %2124, !llvm.loop !1011

2124:                                             ; preds = %2114, %2051
  %2125 = phi i32 [ %2054, %2051 ], [ %2120, %2114 ]
  %2126 = icmp slt i32 %2125, %5
  br i1 %2126, label %2129, label %2127

2127:                                             ; preds = %2124
  %2128 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

2129:                                             ; preds = %2124
  %2130 = sext i32 %2125 to i64
  %2131 = getelementptr inbounds double, ptr %1876, i64 %2130
  %2132 = load double, ptr %2131, align 8, !tbaa !18
  %2133 = fptosi double %2132 to i16
  %2134 = sitofp i16 %2052 to double
  %2135 = sitofp i16 %2133 to double
  %2136 = icmp slt i16 %2133, 0
  %2137 = fneg fast double %2135
  %2138 = select i1 %2136, double %2137, double %2135
  %2139 = fcmp fast ole double %2138, %2134
  %2140 = select fast i1 %2139, double %2134, double %2138
  %2141 = fptosi double %2140 to i16
  store i16 %2141, ptr %1878, align 2, !tbaa !78
  %2142 = add nuw nsw i32 %2053, 1
  br i1 %1893, label %2143, label %2193

2143:                                             ; preds = %2129
  %2144 = load i32, ptr %4, align 4, !tbaa !5
  %2145 = load i32, ptr %12, align 4, !tbaa !5
  %2146 = add nsw i32 %2145, -1
  %2147 = icmp slt i32 %2144, %2146
  br i1 %2147, label %2170, label %2148

2148:                                             ; preds = %2143
  %2149 = icmp eq i32 %2144, %2146
  br i1 %2149, label %2150, label %2186

2150:                                             ; preds = %2148
  store i32 0, ptr %4, align 4, !tbaa !5
  %2151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2151, ptr %6, align 4, !tbaa !5
  br i1 %1898, label %2193, label %2152

2152:                                             ; preds = %2150, %2180
  %2153 = phi i64 [ %2184, %2180 ], [ 1, %2150 ]
  %2154 = getelementptr inbounds i32, ptr %4, i64 %2153
  %2155 = load i32, ptr %2154, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %12, i64 %2153
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = add nsw i32 %2157, -1
  %2159 = icmp slt i32 %2155, %2158
  br i1 %2159, label %2160, label %2178

2160:                                             ; preds = %2152
  br i1 %2147, label %2170, label %2161

2161:                                             ; preds = %2160
  %2162 = shl i64 %2153, 32
  %2163 = add i64 %2162, -4294967296
  %2164 = ashr exact i64 %2163, 32
  %2165 = getelementptr inbounds i32, ptr %7, i64 %2164
  %2166 = load i32, ptr %2165, align 4, !tbaa !5
  %2167 = getelementptr inbounds i32, ptr %6, i64 %2153
  %2168 = load i32, ptr %2167, align 4, !tbaa !5
  %2169 = add nsw i32 %2168, %2166
  store i32 %2169, ptr %2167, align 4, !tbaa !5
  br label %2188

2170:                                             ; preds = %2143, %2160
  %2171 = phi i32 [ %2155, %2160 ], [ %2144, %2143 ]
  %2172 = phi ptr [ %2154, %2160 ], [ %4, %2143 ]
  %2173 = phi i64 [ %2153, %2160 ], [ 0, %2143 ]
  %2174 = add nsw i32 %2171, 1
  store i32 %2174, ptr %2172, align 4, !tbaa !5
  %2175 = getelementptr inbounds i32, ptr %7, i64 %2173
  %2176 = load i32, ptr %2175, align 4, !tbaa !5
  %2177 = getelementptr inbounds i32, ptr %6, i64 %2173
  br label %2188

2178:                                             ; preds = %2152
  %2179 = icmp eq i32 %2155, %2158
  br i1 %2179, label %2180, label %2186

2180:                                             ; preds = %2178
  store i32 0, ptr %2154, align 4, !tbaa !5
  %2181 = getelementptr inbounds i32, ptr %8, i64 %2153
  %2182 = load i32, ptr %2181, align 4, !tbaa !5
  %2183 = getelementptr inbounds i32, ptr %6, i64 %2153
  store i32 %2182, ptr %2183, align 4, !tbaa !5
  %2184 = add nuw nsw i64 %2153, 1
  %2185 = icmp eq i64 %2184, %1896
  br i1 %2185, label %2193, label %2152, !llvm.loop !1012

2186:                                             ; preds = %2148, %2178
  %2187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2188:                                             ; preds = %2161, %2170
  %2189 = phi ptr [ %2177, %2170 ], [ %2154, %2161 ]
  %2190 = phi i32 [ %2176, %2170 ], [ 1, %2161 ]
  %2191 = load i32, ptr %2189, align 4, !tbaa !5
  %2192 = add nsw i32 %2191, %2190
  store i32 %2192, ptr %2189, align 4, !tbaa !5
  br label %2193

2193:                                             ; preds = %2180, %2188, %2150, %2129
  %2194 = icmp eq i32 %2142, %5
  br i1 %2194, label %5579, label %2051, !llvm.loop !1013

2195:                                             ; preds = %1884
  %2196 = getelementptr inbounds i32, ptr %3, i64 %19
  %2197 = load i32, ptr %2196, align 4, !tbaa !5
  %2198 = icmp eq i32 %2197, 0
  %2199 = icmp sgt i32 %5, 0
  br i1 %2198, label %2209, label %2200

2200:                                             ; preds = %2195
  br i1 %2199, label %2201, label %5579

2201:                                             ; preds = %2200
  %2202 = icmp sgt i32 %13, 1
  %2203 = icmp sgt i32 %13, 0
  %2204 = add i32 %13, -2
  %2205 = zext i32 %2204 to i64
  %2206 = zext i32 %13 to i64
  %2207 = add nuw i32 %5, 1
  %2208 = icmp eq i32 %13, 1
  br label %2354

2209:                                             ; preds = %2195
  br i1 %2199, label %2210, label %5579

2210:                                             ; preds = %2209
  %2211 = icmp sgt i32 %13, 1
  %2212 = icmp sgt i32 %13, 0
  %2213 = add i32 %13, -2
  %2214 = zext i32 %2213 to i64
  %2215 = zext i32 %13 to i64
  %2216 = add nuw i32 %5, 1
  %2217 = icmp eq i32 %13, 1
  br label %2218

2218:                                             ; preds = %2210, %2352
  %2219 = phi i16 [ 0, %2210 ], [ %2302, %2352 ]
  %2220 = phi i32 [ 0, %2210 ], [ %2304, %2352 ]
  %2221 = phi double [ 0.000000e+00, %2210 ], [ %2303, %2352 ]
  %2222 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2211, label %2223, label %2292

2223:                                             ; preds = %2218, %2282
  %2224 = phi i32 [ %2291, %2282 ], [ 0, %2218 ]
  %2225 = phi i64 [ %2233, %2282 ], [ %2215, %2218 ]
  %2226 = phi i64 [ %2290, %2282 ], [ %2214, %2218 ]
  %2227 = phi i32 [ %2288, %2282 ], [ %2222, %2218 ]
  %2228 = sub i32 %2213, %2224
  %2229 = tail call i32 @llvm.smin.i32(i32 %2228, i32 0)
  %2230 = sub i32 %2228, %2229
  %2231 = zext i32 %2230 to i64
  %2232 = add nuw nsw i64 %2231, 1
  %2233 = add nsw i64 %2225, -1
  %2234 = icmp ult i32 %2230, 31
  br i1 %2234, label %2270, label %2235

2235:                                             ; preds = %2223
  %2236 = and i64 %2232, 8589934560
  %2237 = sub i64 %2226, %2236
  br label %2238

2238:                                             ; preds = %2238, %2235
  %2239 = phi i64 [ 0, %2235 ], [ %2262, %2238 ]
  %2240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2258, %2238 ]
  %2241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2259, %2238 ]
  %2242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2260, %2238 ]
  %2243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2261, %2238 ]
  %2244 = sub i64 %2226, %2239
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2246 = getelementptr inbounds i32, ptr %2245, i64 -7
  %2247 = load <8 x i32>, ptr %2246, align 4, !tbaa !5
  %2248 = shufflevector <8 x i32> %2247, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2249 = getelementptr inbounds i32, ptr %2245, i64 -15
  %2250 = load <8 x i32>, ptr %2249, align 4, !tbaa !5
  %2251 = shufflevector <8 x i32> %2250, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2252 = getelementptr inbounds i32, ptr %2245, i64 -23
  %2253 = load <8 x i32>, ptr %2252, align 4, !tbaa !5
  %2254 = shufflevector <8 x i32> %2253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2255 = getelementptr inbounds i32, ptr %2245, i64 -31
  %2256 = load <8 x i32>, ptr %2255, align 4, !tbaa !5
  %2257 = shufflevector <8 x i32> %2256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2258 = mul <8 x i32> %2248, %2240
  %2259 = mul <8 x i32> %2251, %2241
  %2260 = mul <8 x i32> %2254, %2242
  %2261 = mul <8 x i32> %2257, %2243
  %2262 = add nuw i64 %2239, 32
  %2263 = icmp eq i64 %2262, %2236
  br i1 %2263, label %2264, label %2238, !llvm.loop !1014

2264:                                             ; preds = %2238
  %2265 = mul <8 x i32> %2259, %2258
  %2266 = mul <8 x i32> %2260, %2265
  %2267 = mul <8 x i32> %2261, %2266
  %2268 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2267)
  %2269 = icmp eq i64 %2232, %2236
  br i1 %2269, label %2282, label %2270

2270:                                             ; preds = %2223, %2264
  %2271 = phi i64 [ %2226, %2223 ], [ %2237, %2264 ]
  %2272 = phi i32 [ 1, %2223 ], [ %2268, %2264 ]
  br label %2273

2273:                                             ; preds = %2270, %2273
  %2274 = phi i64 [ %2279, %2273 ], [ %2271, %2270 ]
  %2275 = phi i32 [ %2278, %2273 ], [ %2272, %2270 ]
  %2276 = getelementptr inbounds i32, ptr %9, i64 %2274
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = mul nsw i32 %2277, %2275
  %2279 = add nsw i64 %2274, -1
  %2280 = trunc i64 %2274 to i32
  %2281 = icmp sgt i32 %2280, 0
  br i1 %2281, label %2273, label %2282, !llvm.loop !1015

2282:                                             ; preds = %2273, %2264
  %2283 = phi i32 [ %2268, %2264 ], [ %2278, %2273 ]
  %2284 = and i64 %2233, 4294967295
  %2285 = getelementptr inbounds i32, ptr %6, i64 %2284
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = mul nsw i32 %2286, %2283
  %2288 = add nsw i32 %2287, %2227
  %2289 = icmp sgt i64 %2225, 2
  %2290 = add nsw i64 %2226, -1
  %2291 = add i32 %2224, 1
  br i1 %2289, label %2223, label %2292, !llvm.loop !1016

2292:                                             ; preds = %2282, %2218
  %2293 = phi i32 [ %2222, %2218 ], [ %2288, %2282 ]
  %2294 = sext i32 %2293 to i64
  %2295 = getelementptr inbounds double, ptr %1876, i64 %2294
  %2296 = load double, ptr %2295, align 8, !tbaa !18
  %2297 = fptosi double %2296 to i16
  %2298 = sext i16 %2219 to i32
  %2299 = tail call i16 @llvm.abs.i16(i16 %2297, i1 false)
  %2300 = zext i16 %2299 to i32
  %2301 = icmp slt i32 %2298, %2300
  %2302 = select i1 %2301, i16 %2299, i16 %2219
  %2303 = fadd fast double %2221, 1.000000e+00
  %2304 = add nuw nsw i32 %2220, 1
  br i1 %2212, label %2305, label %2352

2305:                                             ; preds = %2292
  %2306 = load i32, ptr %4, align 4, !tbaa !5
  %2307 = load i32, ptr %12, align 4, !tbaa !5
  %2308 = add nsw i32 %2307, -1
  %2309 = icmp slt i32 %2306, %2308
  br i1 %2309, label %2329, label %2310

2310:                                             ; preds = %2305
  %2311 = icmp eq i32 %2306, %2308
  br i1 %2311, label %2312, label %2345

2312:                                             ; preds = %2310
  store i32 0, ptr %4, align 4, !tbaa !5
  %2313 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2313, ptr %6, align 4, !tbaa !5
  br i1 %2217, label %2352, label %2314

2314:                                             ; preds = %2312, %2339
  %2315 = phi i64 [ %2343, %2339 ], [ 1, %2312 ]
  %2316 = getelementptr inbounds i32, ptr %4, i64 %2315
  %2317 = load i32, ptr %2316, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %12, i64 %2315
  %2319 = load i32, ptr %2318, align 4, !tbaa !5
  %2320 = add nsw i32 %2319, -1
  %2321 = icmp slt i32 %2317, %2320
  br i1 %2321, label %2322, label %2337

2322:                                             ; preds = %2314
  br i1 %2309, label %2329, label %2323

2323:                                             ; preds = %2322
  %2324 = getelementptr inbounds i32, ptr %7, i64 %2315
  %2325 = load i32, ptr %2324, align 4, !tbaa !5
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2315
  %2327 = load i32, ptr %2326, align 4, !tbaa !5
  %2328 = add nsw i32 %2327, %2325
  store i32 %2328, ptr %2326, align 4, !tbaa !5
  br label %2347

2329:                                             ; preds = %2305, %2322
  %2330 = phi i32 [ %2317, %2322 ], [ %2306, %2305 ]
  %2331 = phi ptr [ %2316, %2322 ], [ %4, %2305 ]
  %2332 = phi i64 [ %2315, %2322 ], [ 0, %2305 ]
  %2333 = add nsw i32 %2330, 1
  store i32 %2333, ptr %2331, align 4, !tbaa !5
  %2334 = getelementptr inbounds i32, ptr %7, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !5
  %2336 = getelementptr inbounds i32, ptr %6, i64 %2332
  br label %2347

2337:                                             ; preds = %2314
  %2338 = icmp eq i32 %2317, %2320
  br i1 %2338, label %2339, label %2345

2339:                                             ; preds = %2337
  store i32 0, ptr %2316, align 4, !tbaa !5
  %2340 = getelementptr inbounds i32, ptr %8, i64 %2315
  %2341 = load i32, ptr %2340, align 4, !tbaa !5
  %2342 = getelementptr inbounds i32, ptr %6, i64 %2315
  store i32 %2341, ptr %2342, align 4, !tbaa !5
  %2343 = add nuw nsw i64 %2315, 1
  %2344 = icmp eq i64 %2343, %2215
  br i1 %2344, label %2352, label %2314, !llvm.loop !1017

2345:                                             ; preds = %2310, %2337
  store i16 %2302, ptr %1878, align 2, !tbaa !78
  %2346 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2347:                                             ; preds = %2323, %2329
  %2348 = phi ptr [ %2336, %2329 ], [ %2316, %2323 ]
  %2349 = phi i32 [ %2335, %2329 ], [ 1, %2323 ]
  %2350 = load i32, ptr %2348, align 4, !tbaa !5
  %2351 = add nsw i32 %2350, %2349
  store i32 %2351, ptr %2348, align 4, !tbaa !5
  br label %2352

2352:                                             ; preds = %2339, %2347, %2312, %2292
  %2353 = icmp eq i32 %2304, %5
  br i1 %2353, label %5574, label %2218, !llvm.loop !1018

2354:                                             ; preds = %2201, %2493
  %2355 = phi i16 [ 0, %2201 ], [ %2441, %2493 ]
  %2356 = phi i32 [ 0, %2201 ], [ %2442, %2493 ]
  %2357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2202, label %2358, label %2427

2358:                                             ; preds = %2354, %2417
  %2359 = phi i32 [ %2426, %2417 ], [ 0, %2354 ]
  %2360 = phi i64 [ %2368, %2417 ], [ %2206, %2354 ]
  %2361 = phi i64 [ %2425, %2417 ], [ %2205, %2354 ]
  %2362 = phi i32 [ %2423, %2417 ], [ %2357, %2354 ]
  %2363 = sub i32 %2204, %2359
  %2364 = tail call i32 @llvm.smin.i32(i32 %2363, i32 0)
  %2365 = sub i32 %2363, %2364
  %2366 = zext i32 %2365 to i64
  %2367 = add nuw nsw i64 %2366, 1
  %2368 = add nsw i64 %2360, -1
  %2369 = icmp ult i32 %2365, 31
  br i1 %2369, label %2405, label %2370

2370:                                             ; preds = %2358
  %2371 = and i64 %2367, 8589934560
  %2372 = sub i64 %2361, %2371
  br label %2373

2373:                                             ; preds = %2373, %2370
  %2374 = phi i64 [ 0, %2370 ], [ %2397, %2373 ]
  %2375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2393, %2373 ]
  %2376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2394, %2373 ]
  %2377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2395, %2373 ]
  %2378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2396, %2373 ]
  %2379 = sub i64 %2361, %2374
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2381 = getelementptr inbounds i32, ptr %2380, i64 -7
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !5
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2380, i64 -15
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !5
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = getelementptr inbounds i32, ptr %2380, i64 -23
  %2388 = load <8 x i32>, ptr %2387, align 4, !tbaa !5
  %2389 = shufflevector <8 x i32> %2388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2390 = getelementptr inbounds i32, ptr %2380, i64 -31
  %2391 = load <8 x i32>, ptr %2390, align 4, !tbaa !5
  %2392 = shufflevector <8 x i32> %2391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2393 = mul <8 x i32> %2383, %2375
  %2394 = mul <8 x i32> %2386, %2376
  %2395 = mul <8 x i32> %2389, %2377
  %2396 = mul <8 x i32> %2392, %2378
  %2397 = add nuw i64 %2374, 32
  %2398 = icmp eq i64 %2397, %2371
  br i1 %2398, label %2399, label %2373, !llvm.loop !1019

2399:                                             ; preds = %2373
  %2400 = mul <8 x i32> %2394, %2393
  %2401 = mul <8 x i32> %2395, %2400
  %2402 = mul <8 x i32> %2396, %2401
  %2403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2402)
  %2404 = icmp eq i64 %2367, %2371
  br i1 %2404, label %2417, label %2405

2405:                                             ; preds = %2358, %2399
  %2406 = phi i64 [ %2361, %2358 ], [ %2372, %2399 ]
  %2407 = phi i32 [ 1, %2358 ], [ %2403, %2399 ]
  br label %2408

2408:                                             ; preds = %2405, %2408
  %2409 = phi i64 [ %2414, %2408 ], [ %2406, %2405 ]
  %2410 = phi i32 [ %2413, %2408 ], [ %2407, %2405 ]
  %2411 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2412 = load i32, ptr %2411, align 4, !tbaa !5
  %2413 = mul nsw i32 %2412, %2410
  %2414 = add nsw i64 %2409, -1
  %2415 = trunc i64 %2409 to i32
  %2416 = icmp sgt i32 %2415, 0
  br i1 %2416, label %2408, label %2417, !llvm.loop !1020

2417:                                             ; preds = %2408, %2399
  %2418 = phi i32 [ %2403, %2399 ], [ %2413, %2408 ]
  %2419 = and i64 %2368, 4294967295
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = mul nsw i32 %2421, %2418
  %2423 = add nsw i32 %2422, %2362
  %2424 = icmp sgt i64 %2360, 2
  %2425 = add nsw i64 %2361, -1
  %2426 = add i32 %2359, 1
  br i1 %2424, label %2358, label %2427, !llvm.loop !1021

2427:                                             ; preds = %2417, %2354
  %2428 = phi i32 [ %2357, %2354 ], [ %2423, %2417 ]
  %2429 = icmp slt i32 %2428, %5
  br i1 %2429, label %2432, label %2430

2430:                                             ; preds = %2427
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

2432:                                             ; preds = %2427
  %2433 = sext i32 %2428 to i64
  %2434 = getelementptr inbounds double, ptr %1876, i64 %2433
  %2435 = load double, ptr %2434, align 8, !tbaa !18
  %2436 = fptosi double %2435 to i16
  %2437 = sext i16 %2355 to i32
  %2438 = tail call i16 @llvm.abs.i16(i16 %2436, i1 false)
  %2439 = zext i16 %2438 to i32
  %2440 = icmp slt i32 %2437, %2439
  %2441 = select i1 %2440, i16 %2438, i16 %2355
  store i16 %2441, ptr %1878, align 2, !tbaa !78
  %2442 = add nuw nsw i32 %2356, 1
  br i1 %2203, label %2443, label %2493

2443:                                             ; preds = %2432
  %2444 = load i32, ptr %4, align 4, !tbaa !5
  %2445 = load i32, ptr %12, align 4, !tbaa !5
  %2446 = add nsw i32 %2445, -1
  %2447 = icmp slt i32 %2444, %2446
  br i1 %2447, label %2470, label %2448

2448:                                             ; preds = %2443
  %2449 = icmp eq i32 %2444, %2446
  br i1 %2449, label %2450, label %2486

2450:                                             ; preds = %2448
  store i32 0, ptr %4, align 4, !tbaa !5
  %2451 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2451, ptr %6, align 4, !tbaa !5
  br i1 %2208, label %2493, label %2452

2452:                                             ; preds = %2450, %2480
  %2453 = phi i64 [ %2484, %2480 ], [ 1, %2450 ]
  %2454 = getelementptr inbounds i32, ptr %4, i64 %2453
  %2455 = load i32, ptr %2454, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %12, i64 %2453
  %2457 = load i32, ptr %2456, align 4, !tbaa !5
  %2458 = add nsw i32 %2457, -1
  %2459 = icmp slt i32 %2455, %2458
  br i1 %2459, label %2460, label %2478

2460:                                             ; preds = %2452
  br i1 %2447, label %2470, label %2461

2461:                                             ; preds = %2460
  %2462 = shl i64 %2453, 32
  %2463 = add i64 %2462, -4294967296
  %2464 = ashr exact i64 %2463, 32
  %2465 = getelementptr inbounds i32, ptr %7, i64 %2464
  %2466 = load i32, ptr %2465, align 4, !tbaa !5
  %2467 = getelementptr inbounds i32, ptr %6, i64 %2453
  %2468 = load i32, ptr %2467, align 4, !tbaa !5
  %2469 = add nsw i32 %2468, %2466
  store i32 %2469, ptr %2467, align 4, !tbaa !5
  br label %2488

2470:                                             ; preds = %2443, %2460
  %2471 = phi i32 [ %2455, %2460 ], [ %2444, %2443 ]
  %2472 = phi ptr [ %2454, %2460 ], [ %4, %2443 ]
  %2473 = phi i64 [ %2453, %2460 ], [ 0, %2443 ]
  %2474 = add nsw i32 %2471, 1
  store i32 %2474, ptr %2472, align 4, !tbaa !5
  %2475 = getelementptr inbounds i32, ptr %7, i64 %2473
  %2476 = load i32, ptr %2475, align 4, !tbaa !5
  %2477 = getelementptr inbounds i32, ptr %6, i64 %2473
  br label %2488

2478:                                             ; preds = %2452
  %2479 = icmp eq i32 %2455, %2458
  br i1 %2479, label %2480, label %2486

2480:                                             ; preds = %2478
  store i32 0, ptr %2454, align 4, !tbaa !5
  %2481 = getelementptr inbounds i32, ptr %8, i64 %2453
  %2482 = load i32, ptr %2481, align 4, !tbaa !5
  %2483 = getelementptr inbounds i32, ptr %6, i64 %2453
  store i32 %2482, ptr %2483, align 4, !tbaa !5
  %2484 = add nuw nsw i64 %2453, 1
  %2485 = icmp eq i64 %2484, %2206
  br i1 %2485, label %2493, label %2452, !llvm.loop !1022

2486:                                             ; preds = %2448, %2478
  %2487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2488:                                             ; preds = %2461, %2470
  %2489 = phi ptr [ %2477, %2470 ], [ %2454, %2461 ]
  %2490 = phi i32 [ %2476, %2470 ], [ 1, %2461 ]
  %2491 = load i32, ptr %2489, align 4, !tbaa !5
  %2492 = add nsw i32 %2491, %2490
  store i32 %2492, ptr %2489, align 4, !tbaa !5
  br label %2493

2493:                                             ; preds = %2480, %2488, %2450, %2432
  %2494 = icmp eq i32 %2442, %5
  br i1 %2494, label %5579, label %2354, !llvm.loop !1023

2495:                                             ; preds = %1884
  %2496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1946, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

2497:                                             ; preds = %18
  %2498 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2499 = load ptr, ptr %2498, align 8, !tbaa !9
  %2500 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2501 = load ptr, ptr %2500, align 8, !tbaa !9
  store i32 0, ptr %2501, align 4, !tbaa !5
  %2502 = icmp eq i32 %13, 0
  br i1 %2502, label %2503, label %2509

2503:                                             ; preds = %2497
  %2504 = load double, ptr %2499, align 8, !tbaa !18
  %2505 = fptosi double %2504 to i32
  %2506 = icmp eq i32 %2505, 0
  %2507 = tail call i32 @llvm.abs.i32(i32 %2505, i1 true)
  %2508 = select i1 %2506, i32 0, i32 %2507
  store i32 %2508, ptr %2501, align 4, !tbaa !5
  br label %5579

2509:                                             ; preds = %2497
  switch i32 %1, label %3114 [
    i32 1, label %2510
    i32 0, label %2820
  ]

2510:                                             ; preds = %2509
  %2511 = getelementptr inbounds i32, ptr %3, i64 %19
  %2512 = load i32, ptr %2511, align 4, !tbaa !5
  %2513 = icmp eq i32 %2512, 0
  %2514 = icmp sgt i32 %5, 0
  br i1 %2513, label %2524, label %2515

2515:                                             ; preds = %2510
  br i1 %2514, label %2516, label %5579

2516:                                             ; preds = %2515
  %2517 = icmp sgt i32 %13, 1
  %2518 = icmp sgt i32 %13, 0
  %2519 = add i32 %13, -2
  %2520 = zext i32 %2519 to i64
  %2521 = zext i32 %13 to i64
  %2522 = add nuw i32 %5, 1
  %2523 = icmp eq i32 %13, 1
  br label %2676

2524:                                             ; preds = %2510
  br i1 %2514, label %2525, label %5579

2525:                                             ; preds = %2524
  %2526 = icmp sgt i32 %13, 1
  %2527 = icmp sgt i32 %13, 0
  %2528 = add i32 %13, -2
  %2529 = zext i32 %2528 to i64
  %2530 = zext i32 %13 to i64
  %2531 = add nuw i32 %5, 1
  %2532 = icmp eq i32 %13, 1
  br label %2533

2533:                                             ; preds = %2525, %2674
  %2534 = phi i32 [ 0, %2525 ], [ %2626, %2674 ]
  %2535 = phi double [ 0.000000e+00, %2525 ], [ %2625, %2674 ]
  %2536 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2526, label %2537, label %2606

2537:                                             ; preds = %2533, %2596
  %2538 = phi i32 [ %2605, %2596 ], [ 0, %2533 ]
  %2539 = phi i64 [ %2547, %2596 ], [ %2530, %2533 ]
  %2540 = phi i64 [ %2604, %2596 ], [ %2529, %2533 ]
  %2541 = phi i32 [ %2602, %2596 ], [ %2536, %2533 ]
  %2542 = sub i32 %2528, %2538
  %2543 = tail call i32 @llvm.smin.i32(i32 %2542, i32 0)
  %2544 = sub i32 %2542, %2543
  %2545 = zext i32 %2544 to i64
  %2546 = add nuw nsw i64 %2545, 1
  %2547 = add nsw i64 %2539, -1
  %2548 = icmp ult i32 %2544, 31
  br i1 %2548, label %2584, label %2549

2549:                                             ; preds = %2537
  %2550 = and i64 %2546, 8589934560
  %2551 = sub i64 %2540, %2550
  br label %2552

2552:                                             ; preds = %2552, %2549
  %2553 = phi i64 [ 0, %2549 ], [ %2576, %2552 ]
  %2554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2572, %2552 ]
  %2555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2573, %2552 ]
  %2556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2574, %2552 ]
  %2557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2575, %2552 ]
  %2558 = sub i64 %2540, %2553
  %2559 = getelementptr inbounds i32, ptr %9, i64 %2558
  %2560 = getelementptr inbounds i32, ptr %2559, i64 -7
  %2561 = load <8 x i32>, ptr %2560, align 4, !tbaa !5
  %2562 = shufflevector <8 x i32> %2561, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2563 = getelementptr inbounds i32, ptr %2559, i64 -15
  %2564 = load <8 x i32>, ptr %2563, align 4, !tbaa !5
  %2565 = shufflevector <8 x i32> %2564, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2566 = getelementptr inbounds i32, ptr %2559, i64 -23
  %2567 = load <8 x i32>, ptr %2566, align 4, !tbaa !5
  %2568 = shufflevector <8 x i32> %2567, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2569 = getelementptr inbounds i32, ptr %2559, i64 -31
  %2570 = load <8 x i32>, ptr %2569, align 4, !tbaa !5
  %2571 = shufflevector <8 x i32> %2570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2572 = mul <8 x i32> %2562, %2554
  %2573 = mul <8 x i32> %2565, %2555
  %2574 = mul <8 x i32> %2568, %2556
  %2575 = mul <8 x i32> %2571, %2557
  %2576 = add nuw i64 %2553, 32
  %2577 = icmp eq i64 %2576, %2550
  br i1 %2577, label %2578, label %2552, !llvm.loop !1024

2578:                                             ; preds = %2552
  %2579 = mul <8 x i32> %2573, %2572
  %2580 = mul <8 x i32> %2574, %2579
  %2581 = mul <8 x i32> %2575, %2580
  %2582 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2581)
  %2583 = icmp eq i64 %2546, %2550
  br i1 %2583, label %2596, label %2584

2584:                                             ; preds = %2537, %2578
  %2585 = phi i64 [ %2540, %2537 ], [ %2551, %2578 ]
  %2586 = phi i32 [ 1, %2537 ], [ %2582, %2578 ]
  br label %2587

2587:                                             ; preds = %2584, %2587
  %2588 = phi i64 [ %2593, %2587 ], [ %2585, %2584 ]
  %2589 = phi i32 [ %2592, %2587 ], [ %2586, %2584 ]
  %2590 = getelementptr inbounds i32, ptr %9, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !5
  %2592 = mul nsw i32 %2591, %2589
  %2593 = add nsw i64 %2588, -1
  %2594 = trunc i64 %2588 to i32
  %2595 = icmp sgt i32 %2594, 0
  br i1 %2595, label %2587, label %2596, !llvm.loop !1025

2596:                                             ; preds = %2587, %2578
  %2597 = phi i32 [ %2582, %2578 ], [ %2592, %2587 ]
  %2598 = and i64 %2547, 4294967295
  %2599 = getelementptr inbounds i32, ptr %6, i64 %2598
  %2600 = load i32, ptr %2599, align 4, !tbaa !5
  %2601 = mul nsw i32 %2600, %2597
  %2602 = add nsw i32 %2601, %2541
  %2603 = icmp sgt i64 %2539, 2
  %2604 = add nsw i64 %2540, -1
  %2605 = add i32 %2538, 1
  br i1 %2603, label %2537, label %2606, !llvm.loop !1026

2606:                                             ; preds = %2596, %2533
  %2607 = phi i32 [ %2536, %2533 ], [ %2602, %2596 ]
  %2608 = sext i32 %2607 to i64
  %2609 = getelementptr inbounds double, ptr %2, i64 %2608
  %2610 = load double, ptr %2609, align 8, !tbaa !18
  %2611 = getelementptr inbounds double, ptr %2499, i64 %2608
  %2612 = load double, ptr %2611, align 8, !tbaa !18
  %2613 = fptosi double %2612 to i32
  %2614 = load i32, ptr %2501, align 4, !tbaa !5
  %2615 = sitofp i32 %2614 to double
  %2616 = sitofp i32 %2613 to double
  %2617 = fmul fast double %2610, %2616
  %2618 = fcmp fast uge double %2617, 0.000000e+00
  %2619 = fneg fast double %2617
  %2620 = tail call fast double @llvm.fabs.f64(double %2617)
  %2621 = fcmp fast ole double %2620, %2615
  %2622 = select nnan ninf i1 %2618, double %2617, double %2619
  %2623 = select i1 %2621, double %2615, double %2622
  %2624 = fptosi double %2623 to i32
  store i32 %2624, ptr %2501, align 4, !tbaa !5
  %2625 = fadd fast double %2610, %2535
  %2626 = add nuw nsw i32 %2534, 1
  br i1 %2527, label %2627, label %2674

2627:                                             ; preds = %2606
  %2628 = load i32, ptr %4, align 4, !tbaa !5
  %2629 = load i32, ptr %12, align 4, !tbaa !5
  %2630 = add nsw i32 %2629, -1
  %2631 = icmp slt i32 %2628, %2630
  br i1 %2631, label %2651, label %2632

2632:                                             ; preds = %2627
  %2633 = icmp eq i32 %2628, %2630
  br i1 %2633, label %2634, label %2667

2634:                                             ; preds = %2632
  store i32 0, ptr %4, align 4, !tbaa !5
  %2635 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2635, ptr %6, align 4, !tbaa !5
  br i1 %2532, label %2674, label %2636

2636:                                             ; preds = %2634, %2661
  %2637 = phi i64 [ %2665, %2661 ], [ 1, %2634 ]
  %2638 = getelementptr inbounds i32, ptr %4, i64 %2637
  %2639 = load i32, ptr %2638, align 4, !tbaa !5
  %2640 = getelementptr inbounds i32, ptr %12, i64 %2637
  %2641 = load i32, ptr %2640, align 4, !tbaa !5
  %2642 = add nsw i32 %2641, -1
  %2643 = icmp slt i32 %2639, %2642
  br i1 %2643, label %2644, label %2659

2644:                                             ; preds = %2636
  br i1 %2631, label %2651, label %2645

2645:                                             ; preds = %2644
  %2646 = getelementptr inbounds i32, ptr %7, i64 %2637
  %2647 = load i32, ptr %2646, align 4, !tbaa !5
  %2648 = getelementptr inbounds i32, ptr %6, i64 %2637
  %2649 = load i32, ptr %2648, align 4, !tbaa !5
  %2650 = add nsw i32 %2649, %2647
  store i32 %2650, ptr %2648, align 4, !tbaa !5
  br label %2669

2651:                                             ; preds = %2627, %2644
  %2652 = phi i32 [ %2639, %2644 ], [ %2628, %2627 ]
  %2653 = phi ptr [ %2638, %2644 ], [ %4, %2627 ]
  %2654 = phi i64 [ %2637, %2644 ], [ 0, %2627 ]
  %2655 = add nsw i32 %2652, 1
  store i32 %2655, ptr %2653, align 4, !tbaa !5
  %2656 = getelementptr inbounds i32, ptr %7, i64 %2654
  %2657 = load i32, ptr %2656, align 4, !tbaa !5
  %2658 = getelementptr inbounds i32, ptr %6, i64 %2654
  br label %2669

2659:                                             ; preds = %2636
  %2660 = icmp eq i32 %2639, %2642
  br i1 %2660, label %2661, label %2667

2661:                                             ; preds = %2659
  store i32 0, ptr %2638, align 4, !tbaa !5
  %2662 = getelementptr inbounds i32, ptr %8, i64 %2637
  %2663 = load i32, ptr %2662, align 4, !tbaa !5
  %2664 = getelementptr inbounds i32, ptr %6, i64 %2637
  store i32 %2663, ptr %2664, align 4, !tbaa !5
  %2665 = add nuw nsw i64 %2637, 1
  %2666 = icmp eq i64 %2665, %2530
  br i1 %2666, label %2674, label %2636, !llvm.loop !1027

2667:                                             ; preds = %2632, %2659
  %2668 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2669:                                             ; preds = %2645, %2651
  %2670 = phi ptr [ %2658, %2651 ], [ %2638, %2645 ]
  %2671 = phi i32 [ %2657, %2651 ], [ 1, %2645 ]
  %2672 = load i32, ptr %2670, align 4, !tbaa !5
  %2673 = add nsw i32 %2672, %2671
  store i32 %2673, ptr %2670, align 4, !tbaa !5
  br label %2674

2674:                                             ; preds = %2661, %2669, %2634, %2606
  %2675 = icmp eq i32 %2626, %5
  br i1 %2675, label %5579, label %2533, !llvm.loop !1028

2676:                                             ; preds = %2516, %2818
  %2677 = phi i32 [ 0, %2516 ], [ %2767, %2818 ]
  %2678 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2517, label %2679, label %2748

2679:                                             ; preds = %2676, %2738
  %2680 = phi i32 [ %2747, %2738 ], [ 0, %2676 ]
  %2681 = phi i64 [ %2689, %2738 ], [ %2521, %2676 ]
  %2682 = phi i64 [ %2746, %2738 ], [ %2520, %2676 ]
  %2683 = phi i32 [ %2744, %2738 ], [ %2678, %2676 ]
  %2684 = sub i32 %2519, %2680
  %2685 = tail call i32 @llvm.smin.i32(i32 %2684, i32 0)
  %2686 = sub i32 %2684, %2685
  %2687 = zext i32 %2686 to i64
  %2688 = add nuw nsw i64 %2687, 1
  %2689 = add nsw i64 %2681, -1
  %2690 = icmp ult i32 %2686, 31
  br i1 %2690, label %2726, label %2691

2691:                                             ; preds = %2679
  %2692 = and i64 %2688, 8589934560
  %2693 = sub i64 %2682, %2692
  br label %2694

2694:                                             ; preds = %2694, %2691
  %2695 = phi i64 [ 0, %2691 ], [ %2718, %2694 ]
  %2696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2714, %2694 ]
  %2697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2715, %2694 ]
  %2698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2716, %2694 ]
  %2699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2717, %2694 ]
  %2700 = sub i64 %2682, %2695
  %2701 = getelementptr inbounds i32, ptr %11, i64 %2700
  %2702 = getelementptr inbounds i32, ptr %2701, i64 -7
  %2703 = load <8 x i32>, ptr %2702, align 4, !tbaa !5
  %2704 = shufflevector <8 x i32> %2703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2705 = getelementptr inbounds i32, ptr %2701, i64 -15
  %2706 = load <8 x i32>, ptr %2705, align 4, !tbaa !5
  %2707 = shufflevector <8 x i32> %2706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2708 = getelementptr inbounds i32, ptr %2701, i64 -23
  %2709 = load <8 x i32>, ptr %2708, align 4, !tbaa !5
  %2710 = shufflevector <8 x i32> %2709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2711 = getelementptr inbounds i32, ptr %2701, i64 -31
  %2712 = load <8 x i32>, ptr %2711, align 4, !tbaa !5
  %2713 = shufflevector <8 x i32> %2712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2714 = mul <8 x i32> %2704, %2696
  %2715 = mul <8 x i32> %2707, %2697
  %2716 = mul <8 x i32> %2710, %2698
  %2717 = mul <8 x i32> %2713, %2699
  %2718 = add nuw i64 %2695, 32
  %2719 = icmp eq i64 %2718, %2692
  br i1 %2719, label %2720, label %2694, !llvm.loop !1029

2720:                                             ; preds = %2694
  %2721 = mul <8 x i32> %2715, %2714
  %2722 = mul <8 x i32> %2716, %2721
  %2723 = mul <8 x i32> %2717, %2722
  %2724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2723)
  %2725 = icmp eq i64 %2688, %2692
  br i1 %2725, label %2738, label %2726

2726:                                             ; preds = %2679, %2720
  %2727 = phi i64 [ %2682, %2679 ], [ %2693, %2720 ]
  %2728 = phi i32 [ 1, %2679 ], [ %2724, %2720 ]
  br label %2729

2729:                                             ; preds = %2726, %2729
  %2730 = phi i64 [ %2735, %2729 ], [ %2727, %2726 ]
  %2731 = phi i32 [ %2734, %2729 ], [ %2728, %2726 ]
  %2732 = getelementptr inbounds i32, ptr %11, i64 %2730
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = mul nsw i32 %2733, %2731
  %2735 = add nsw i64 %2730, -1
  %2736 = trunc i64 %2730 to i32
  %2737 = icmp sgt i32 %2736, 0
  br i1 %2737, label %2729, label %2738, !llvm.loop !1030

2738:                                             ; preds = %2729, %2720
  %2739 = phi i32 [ %2724, %2720 ], [ %2734, %2729 ]
  %2740 = and i64 %2689, 4294967295
  %2741 = getelementptr inbounds i32, ptr %6, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = mul nsw i32 %2742, %2739
  %2744 = add nsw i32 %2743, %2683
  %2745 = icmp sgt i64 %2681, 2
  %2746 = add nsw i64 %2682, -1
  %2747 = add i32 %2680, 1
  br i1 %2745, label %2679, label %2748, !llvm.loop !1031

2748:                                             ; preds = %2738, %2676
  %2749 = phi i32 [ %2678, %2676 ], [ %2744, %2738 ]
  %2750 = icmp slt i32 %2749, %5
  br i1 %2750, label %2753, label %2751

2751:                                             ; preds = %2748
  %2752 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

2753:                                             ; preds = %2748
  %2754 = sext i32 %2749 to i64
  %2755 = getelementptr inbounds double, ptr %2499, i64 %2754
  %2756 = load double, ptr %2755, align 8, !tbaa !18
  %2757 = fptosi double %2756 to i32
  %2758 = load i32, ptr %2501, align 4, !tbaa !5
  %2759 = sitofp i32 %2758 to double
  %2760 = sitofp i32 %2757 to double
  %2761 = icmp slt i32 %2757, 0
  %2762 = fneg fast double %2760
  %2763 = select i1 %2761, double %2762, double %2760
  %2764 = fcmp fast ole double %2763, %2759
  %2765 = select fast i1 %2764, double %2759, double %2763
  %2766 = fptosi double %2765 to i32
  store i32 %2766, ptr %2501, align 4, !tbaa !5
  %2767 = add nuw nsw i32 %2677, 1
  br i1 %2518, label %2768, label %2818

2768:                                             ; preds = %2753
  %2769 = load i32, ptr %4, align 4, !tbaa !5
  %2770 = load i32, ptr %12, align 4, !tbaa !5
  %2771 = add nsw i32 %2770, -1
  %2772 = icmp slt i32 %2769, %2771
  br i1 %2772, label %2795, label %2773

2773:                                             ; preds = %2768
  %2774 = icmp eq i32 %2769, %2771
  br i1 %2774, label %2775, label %2811

2775:                                             ; preds = %2773
  store i32 0, ptr %4, align 4, !tbaa !5
  %2776 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2776, ptr %6, align 4, !tbaa !5
  br i1 %2523, label %2818, label %2777

2777:                                             ; preds = %2775, %2805
  %2778 = phi i64 [ %2809, %2805 ], [ 1, %2775 ]
  %2779 = getelementptr inbounds i32, ptr %4, i64 %2778
  %2780 = load i32, ptr %2779, align 4, !tbaa !5
  %2781 = getelementptr inbounds i32, ptr %12, i64 %2778
  %2782 = load i32, ptr %2781, align 4, !tbaa !5
  %2783 = add nsw i32 %2782, -1
  %2784 = icmp slt i32 %2780, %2783
  br i1 %2784, label %2785, label %2803

2785:                                             ; preds = %2777
  br i1 %2772, label %2795, label %2786

2786:                                             ; preds = %2785
  %2787 = shl i64 %2778, 32
  %2788 = add i64 %2787, -4294967296
  %2789 = ashr exact i64 %2788, 32
  %2790 = getelementptr inbounds i32, ptr %7, i64 %2789
  %2791 = load i32, ptr %2790, align 4, !tbaa !5
  %2792 = getelementptr inbounds i32, ptr %6, i64 %2778
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = add nsw i32 %2793, %2791
  store i32 %2794, ptr %2792, align 4, !tbaa !5
  br label %2813

2795:                                             ; preds = %2768, %2785
  %2796 = phi i32 [ %2780, %2785 ], [ %2769, %2768 ]
  %2797 = phi ptr [ %2779, %2785 ], [ %4, %2768 ]
  %2798 = phi i64 [ %2778, %2785 ], [ 0, %2768 ]
  %2799 = add nsw i32 %2796, 1
  store i32 %2799, ptr %2797, align 4, !tbaa !5
  %2800 = getelementptr inbounds i32, ptr %7, i64 %2798
  %2801 = load i32, ptr %2800, align 4, !tbaa !5
  %2802 = getelementptr inbounds i32, ptr %6, i64 %2798
  br label %2813

2803:                                             ; preds = %2777
  %2804 = icmp eq i32 %2780, %2783
  br i1 %2804, label %2805, label %2811

2805:                                             ; preds = %2803
  store i32 0, ptr %2779, align 4, !tbaa !5
  %2806 = getelementptr inbounds i32, ptr %8, i64 %2778
  %2807 = load i32, ptr %2806, align 4, !tbaa !5
  %2808 = getelementptr inbounds i32, ptr %6, i64 %2778
  store i32 %2807, ptr %2808, align 4, !tbaa !5
  %2809 = add nuw nsw i64 %2778, 1
  %2810 = icmp eq i64 %2809, %2521
  br i1 %2810, label %2818, label %2777, !llvm.loop !1032

2811:                                             ; preds = %2773, %2803
  %2812 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2813:                                             ; preds = %2786, %2795
  %2814 = phi ptr [ %2802, %2795 ], [ %2779, %2786 ]
  %2815 = phi i32 [ %2801, %2795 ], [ 1, %2786 ]
  %2816 = load i32, ptr %2814, align 4, !tbaa !5
  %2817 = add nsw i32 %2816, %2815
  store i32 %2817, ptr %2814, align 4, !tbaa !5
  br label %2818

2818:                                             ; preds = %2805, %2813, %2775, %2753
  %2819 = icmp eq i32 %2767, %5
  br i1 %2819, label %5579, label %2676, !llvm.loop !1033

2820:                                             ; preds = %2509
  %2821 = getelementptr inbounds i32, ptr %3, i64 %19
  %2822 = load i32, ptr %2821, align 4, !tbaa !5
  %2823 = icmp eq i32 %2822, 0
  %2824 = icmp sgt i32 %5, 0
  br i1 %2823, label %2834, label %2825

2825:                                             ; preds = %2820
  br i1 %2824, label %2826, label %5579

2826:                                             ; preds = %2825
  %2827 = icmp sgt i32 %13, 1
  %2828 = icmp sgt i32 %13, 0
  %2829 = add i32 %13, -2
  %2830 = zext i32 %2829 to i64
  %2831 = zext i32 %13 to i64
  %2832 = add nuw i32 %5, 1
  %2833 = icmp eq i32 %13, 1
  br label %2976

2834:                                             ; preds = %2820
  br i1 %2824, label %2835, label %5579

2835:                                             ; preds = %2834
  %2836 = icmp sgt i32 %13, 1
  %2837 = icmp sgt i32 %13, 0
  %2838 = add i32 %13, -2
  %2839 = zext i32 %2838 to i64
  %2840 = zext i32 %13 to i64
  %2841 = add nuw i32 %5, 1
  %2842 = icmp eq i32 %13, 1
  br label %2843

2843:                                             ; preds = %2835, %2974
  %2844 = phi i32 [ 0, %2835 ], [ %2926, %2974 ]
  %2845 = phi double [ 0.000000e+00, %2835 ], [ %2925, %2974 ]
  %2846 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2836, label %2847, label %2916

2847:                                             ; preds = %2843, %2906
  %2848 = phi i32 [ %2915, %2906 ], [ 0, %2843 ]
  %2849 = phi i64 [ %2857, %2906 ], [ %2840, %2843 ]
  %2850 = phi i64 [ %2914, %2906 ], [ %2839, %2843 ]
  %2851 = phi i32 [ %2912, %2906 ], [ %2846, %2843 ]
  %2852 = sub i32 %2838, %2848
  %2853 = tail call i32 @llvm.smin.i32(i32 %2852, i32 0)
  %2854 = sub i32 %2852, %2853
  %2855 = zext i32 %2854 to i64
  %2856 = add nuw nsw i64 %2855, 1
  %2857 = add nsw i64 %2849, -1
  %2858 = icmp ult i32 %2854, 31
  br i1 %2858, label %2894, label %2859

2859:                                             ; preds = %2847
  %2860 = and i64 %2856, 8589934560
  %2861 = sub i64 %2850, %2860
  br label %2862

2862:                                             ; preds = %2862, %2859
  %2863 = phi i64 [ 0, %2859 ], [ %2886, %2862 ]
  %2864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2882, %2862 ]
  %2865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2883, %2862 ]
  %2866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2884, %2862 ]
  %2867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2885, %2862 ]
  %2868 = sub i64 %2850, %2863
  %2869 = getelementptr inbounds i32, ptr %9, i64 %2868
  %2870 = getelementptr inbounds i32, ptr %2869, i64 -7
  %2871 = load <8 x i32>, ptr %2870, align 4, !tbaa !5
  %2872 = shufflevector <8 x i32> %2871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2873 = getelementptr inbounds i32, ptr %2869, i64 -15
  %2874 = load <8 x i32>, ptr %2873, align 4, !tbaa !5
  %2875 = shufflevector <8 x i32> %2874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2876 = getelementptr inbounds i32, ptr %2869, i64 -23
  %2877 = load <8 x i32>, ptr %2876, align 4, !tbaa !5
  %2878 = shufflevector <8 x i32> %2877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2879 = getelementptr inbounds i32, ptr %2869, i64 -31
  %2880 = load <8 x i32>, ptr %2879, align 4, !tbaa !5
  %2881 = shufflevector <8 x i32> %2880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2882 = mul <8 x i32> %2872, %2864
  %2883 = mul <8 x i32> %2875, %2865
  %2884 = mul <8 x i32> %2878, %2866
  %2885 = mul <8 x i32> %2881, %2867
  %2886 = add nuw i64 %2863, 32
  %2887 = icmp eq i64 %2886, %2860
  br i1 %2887, label %2888, label %2862, !llvm.loop !1034

2888:                                             ; preds = %2862
  %2889 = mul <8 x i32> %2883, %2882
  %2890 = mul <8 x i32> %2884, %2889
  %2891 = mul <8 x i32> %2885, %2890
  %2892 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2891)
  %2893 = icmp eq i64 %2856, %2860
  br i1 %2893, label %2906, label %2894

2894:                                             ; preds = %2847, %2888
  %2895 = phi i64 [ %2850, %2847 ], [ %2861, %2888 ]
  %2896 = phi i32 [ 1, %2847 ], [ %2892, %2888 ]
  br label %2897

2897:                                             ; preds = %2894, %2897
  %2898 = phi i64 [ %2903, %2897 ], [ %2895, %2894 ]
  %2899 = phi i32 [ %2902, %2897 ], [ %2896, %2894 ]
  %2900 = getelementptr inbounds i32, ptr %9, i64 %2898
  %2901 = load i32, ptr %2900, align 4, !tbaa !5
  %2902 = mul nsw i32 %2901, %2899
  %2903 = add nsw i64 %2898, -1
  %2904 = trunc i64 %2898 to i32
  %2905 = icmp sgt i32 %2904, 0
  br i1 %2905, label %2897, label %2906, !llvm.loop !1035

2906:                                             ; preds = %2897, %2888
  %2907 = phi i32 [ %2892, %2888 ], [ %2902, %2897 ]
  %2908 = and i64 %2857, 4294967295
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2908
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = mul nsw i32 %2910, %2907
  %2912 = add nsw i32 %2911, %2851
  %2913 = icmp sgt i64 %2849, 2
  %2914 = add nsw i64 %2850, -1
  %2915 = add i32 %2848, 1
  br i1 %2913, label %2847, label %2916, !llvm.loop !1036

2916:                                             ; preds = %2906, %2843
  %2917 = phi i32 [ %2846, %2843 ], [ %2912, %2906 ]
  %2918 = sext i32 %2917 to i64
  %2919 = getelementptr inbounds double, ptr %2499, i64 %2918
  %2920 = load double, ptr %2919, align 8, !tbaa !18
  %2921 = fptosi double %2920 to i32
  %2922 = load i32, ptr %2501, align 4, !tbaa !5
  %2923 = tail call i32 @llvm.abs.i32(i32 %2921, i1 true)
  %2924 = tail call i32 @llvm.smax.i32(i32 %2922, i32 %2923)
  store i32 %2924, ptr %2501, align 4, !tbaa !5
  %2925 = fadd fast double %2845, 1.000000e+00
  %2926 = add nuw nsw i32 %2844, 1
  br i1 %2837, label %2927, label %2974

2927:                                             ; preds = %2916
  %2928 = load i32, ptr %4, align 4, !tbaa !5
  %2929 = load i32, ptr %12, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, -1
  %2931 = icmp slt i32 %2928, %2930
  br i1 %2931, label %2951, label %2932

2932:                                             ; preds = %2927
  %2933 = icmp eq i32 %2928, %2930
  br i1 %2933, label %2934, label %2967

2934:                                             ; preds = %2932
  store i32 0, ptr %4, align 4, !tbaa !5
  %2935 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2935, ptr %6, align 4, !tbaa !5
  br i1 %2842, label %2974, label %2936

2936:                                             ; preds = %2934, %2961
  %2937 = phi i64 [ %2965, %2961 ], [ 1, %2934 ]
  %2938 = getelementptr inbounds i32, ptr %4, i64 %2937
  %2939 = load i32, ptr %2938, align 4, !tbaa !5
  %2940 = getelementptr inbounds i32, ptr %12, i64 %2937
  %2941 = load i32, ptr %2940, align 4, !tbaa !5
  %2942 = add nsw i32 %2941, -1
  %2943 = icmp slt i32 %2939, %2942
  br i1 %2943, label %2944, label %2959

2944:                                             ; preds = %2936
  br i1 %2931, label %2951, label %2945

2945:                                             ; preds = %2944
  %2946 = getelementptr inbounds i32, ptr %7, i64 %2937
  %2947 = load i32, ptr %2946, align 4, !tbaa !5
  %2948 = getelementptr inbounds i32, ptr %6, i64 %2937
  %2949 = load i32, ptr %2948, align 4, !tbaa !5
  %2950 = add nsw i32 %2949, %2947
  store i32 %2950, ptr %2948, align 4, !tbaa !5
  br label %2969

2951:                                             ; preds = %2927, %2944
  %2952 = phi i32 [ %2939, %2944 ], [ %2928, %2927 ]
  %2953 = phi ptr [ %2938, %2944 ], [ %4, %2927 ]
  %2954 = phi i64 [ %2937, %2944 ], [ 0, %2927 ]
  %2955 = add nsw i32 %2952, 1
  store i32 %2955, ptr %2953, align 4, !tbaa !5
  %2956 = getelementptr inbounds i32, ptr %7, i64 %2954
  %2957 = load i32, ptr %2956, align 4, !tbaa !5
  %2958 = getelementptr inbounds i32, ptr %6, i64 %2954
  br label %2969

2959:                                             ; preds = %2936
  %2960 = icmp eq i32 %2939, %2942
  br i1 %2960, label %2961, label %2967

2961:                                             ; preds = %2959
  store i32 0, ptr %2938, align 4, !tbaa !5
  %2962 = getelementptr inbounds i32, ptr %8, i64 %2937
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = getelementptr inbounds i32, ptr %6, i64 %2937
  store i32 %2963, ptr %2964, align 4, !tbaa !5
  %2965 = add nuw nsw i64 %2937, 1
  %2966 = icmp eq i64 %2965, %2840
  br i1 %2966, label %2974, label %2936, !llvm.loop !1037

2967:                                             ; preds = %2932, %2959
  %2968 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2969:                                             ; preds = %2945, %2951
  %2970 = phi ptr [ %2958, %2951 ], [ %2938, %2945 ]
  %2971 = phi i32 [ %2957, %2951 ], [ 1, %2945 ]
  %2972 = load i32, ptr %2970, align 4, !tbaa !5
  %2973 = add nsw i32 %2972, %2971
  store i32 %2973, ptr %2970, align 4, !tbaa !5
  br label %2974

2974:                                             ; preds = %2961, %2969, %2934, %2916
  %2975 = icmp eq i32 %2926, %5
  br i1 %2975, label %5579, label %2843, !llvm.loop !1038

2976:                                             ; preds = %2826, %3112
  %2977 = phi i32 [ 0, %2826 ], [ %3061, %3112 ]
  %2978 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2827, label %2979, label %3048

2979:                                             ; preds = %2976, %3038
  %2980 = phi i32 [ %3047, %3038 ], [ 0, %2976 ]
  %2981 = phi i64 [ %2989, %3038 ], [ %2831, %2976 ]
  %2982 = phi i64 [ %3046, %3038 ], [ %2830, %2976 ]
  %2983 = phi i32 [ %3044, %3038 ], [ %2978, %2976 ]
  %2984 = sub i32 %2829, %2980
  %2985 = tail call i32 @llvm.smin.i32(i32 %2984, i32 0)
  %2986 = sub i32 %2984, %2985
  %2987 = zext i32 %2986 to i64
  %2988 = add nuw nsw i64 %2987, 1
  %2989 = add nsw i64 %2981, -1
  %2990 = icmp ult i32 %2986, 31
  br i1 %2990, label %3026, label %2991

2991:                                             ; preds = %2979
  %2992 = and i64 %2988, 8589934560
  %2993 = sub i64 %2982, %2992
  br label %2994

2994:                                             ; preds = %2994, %2991
  %2995 = phi i64 [ 0, %2991 ], [ %3018, %2994 ]
  %2996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3014, %2994 ]
  %2997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3015, %2994 ]
  %2998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3016, %2994 ]
  %2999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3017, %2994 ]
  %3000 = sub i64 %2982, %2995
  %3001 = getelementptr inbounds i32, ptr %11, i64 %3000
  %3002 = getelementptr inbounds i32, ptr %3001, i64 -7
  %3003 = load <8 x i32>, ptr %3002, align 4, !tbaa !5
  %3004 = shufflevector <8 x i32> %3003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3005 = getelementptr inbounds i32, ptr %3001, i64 -15
  %3006 = load <8 x i32>, ptr %3005, align 4, !tbaa !5
  %3007 = shufflevector <8 x i32> %3006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3008 = getelementptr inbounds i32, ptr %3001, i64 -23
  %3009 = load <8 x i32>, ptr %3008, align 4, !tbaa !5
  %3010 = shufflevector <8 x i32> %3009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3011 = getelementptr inbounds i32, ptr %3001, i64 -31
  %3012 = load <8 x i32>, ptr %3011, align 4, !tbaa !5
  %3013 = shufflevector <8 x i32> %3012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3014 = mul <8 x i32> %3004, %2996
  %3015 = mul <8 x i32> %3007, %2997
  %3016 = mul <8 x i32> %3010, %2998
  %3017 = mul <8 x i32> %3013, %2999
  %3018 = add nuw i64 %2995, 32
  %3019 = icmp eq i64 %3018, %2992
  br i1 %3019, label %3020, label %2994, !llvm.loop !1039

3020:                                             ; preds = %2994
  %3021 = mul <8 x i32> %3015, %3014
  %3022 = mul <8 x i32> %3016, %3021
  %3023 = mul <8 x i32> %3017, %3022
  %3024 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3023)
  %3025 = icmp eq i64 %2988, %2992
  br i1 %3025, label %3038, label %3026

3026:                                             ; preds = %2979, %3020
  %3027 = phi i64 [ %2982, %2979 ], [ %2993, %3020 ]
  %3028 = phi i32 [ 1, %2979 ], [ %3024, %3020 ]
  br label %3029

3029:                                             ; preds = %3026, %3029
  %3030 = phi i64 [ %3035, %3029 ], [ %3027, %3026 ]
  %3031 = phi i32 [ %3034, %3029 ], [ %3028, %3026 ]
  %3032 = getelementptr inbounds i32, ptr %11, i64 %3030
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = mul nsw i32 %3033, %3031
  %3035 = add nsw i64 %3030, -1
  %3036 = trunc i64 %3030 to i32
  %3037 = icmp sgt i32 %3036, 0
  br i1 %3037, label %3029, label %3038, !llvm.loop !1040

3038:                                             ; preds = %3029, %3020
  %3039 = phi i32 [ %3024, %3020 ], [ %3034, %3029 ]
  %3040 = and i64 %2989, 4294967295
  %3041 = getelementptr inbounds i32, ptr %6, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = mul nsw i32 %3042, %3039
  %3044 = add nsw i32 %3043, %2983
  %3045 = icmp sgt i64 %2981, 2
  %3046 = add nsw i64 %2982, -1
  %3047 = add i32 %2980, 1
  br i1 %3045, label %2979, label %3048, !llvm.loop !1041

3048:                                             ; preds = %3038, %2976
  %3049 = phi i32 [ %2978, %2976 ], [ %3044, %3038 ]
  %3050 = icmp slt i32 %3049, %5
  br i1 %3050, label %3053, label %3051

3051:                                             ; preds = %3048
  %3052 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3053:                                             ; preds = %3048
  %3054 = sext i32 %3049 to i64
  %3055 = getelementptr inbounds double, ptr %2499, i64 %3054
  %3056 = load double, ptr %3055, align 8, !tbaa !18
  %3057 = fptosi double %3056 to i32
  %3058 = load i32, ptr %2501, align 4, !tbaa !5
  %3059 = tail call i32 @llvm.abs.i32(i32 %3057, i1 true)
  %3060 = tail call i32 @llvm.smax.i32(i32 %3058, i32 %3059)
  store i32 %3060, ptr %2501, align 4, !tbaa !5
  %3061 = add nuw nsw i32 %2977, 1
  br i1 %2828, label %3062, label %3112

3062:                                             ; preds = %3053
  %3063 = load i32, ptr %4, align 4, !tbaa !5
  %3064 = load i32, ptr %12, align 4, !tbaa !5
  %3065 = add nsw i32 %3064, -1
  %3066 = icmp slt i32 %3063, %3065
  br i1 %3066, label %3089, label %3067

3067:                                             ; preds = %3062
  %3068 = icmp eq i32 %3063, %3065
  br i1 %3068, label %3069, label %3105

3069:                                             ; preds = %3067
  store i32 0, ptr %4, align 4, !tbaa !5
  %3070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3070, ptr %6, align 4, !tbaa !5
  br i1 %2833, label %3112, label %3071

3071:                                             ; preds = %3069, %3099
  %3072 = phi i64 [ %3103, %3099 ], [ 1, %3069 ]
  %3073 = getelementptr inbounds i32, ptr %4, i64 %3072
  %3074 = load i32, ptr %3073, align 4, !tbaa !5
  %3075 = getelementptr inbounds i32, ptr %12, i64 %3072
  %3076 = load i32, ptr %3075, align 4, !tbaa !5
  %3077 = add nsw i32 %3076, -1
  %3078 = icmp slt i32 %3074, %3077
  br i1 %3078, label %3079, label %3097

3079:                                             ; preds = %3071
  br i1 %3066, label %3089, label %3080

3080:                                             ; preds = %3079
  %3081 = shl i64 %3072, 32
  %3082 = add i64 %3081, -4294967296
  %3083 = ashr exact i64 %3082, 32
  %3084 = getelementptr inbounds i32, ptr %7, i64 %3083
  %3085 = load i32, ptr %3084, align 4, !tbaa !5
  %3086 = getelementptr inbounds i32, ptr %6, i64 %3072
  %3087 = load i32, ptr %3086, align 4, !tbaa !5
  %3088 = add nsw i32 %3087, %3085
  store i32 %3088, ptr %3086, align 4, !tbaa !5
  br label %3107

3089:                                             ; preds = %3062, %3079
  %3090 = phi i32 [ %3074, %3079 ], [ %3063, %3062 ]
  %3091 = phi ptr [ %3073, %3079 ], [ %4, %3062 ]
  %3092 = phi i64 [ %3072, %3079 ], [ 0, %3062 ]
  %3093 = add nsw i32 %3090, 1
  store i32 %3093, ptr %3091, align 4, !tbaa !5
  %3094 = getelementptr inbounds i32, ptr %7, i64 %3092
  %3095 = load i32, ptr %3094, align 4, !tbaa !5
  %3096 = getelementptr inbounds i32, ptr %6, i64 %3092
  br label %3107

3097:                                             ; preds = %3071
  %3098 = icmp eq i32 %3074, %3077
  br i1 %3098, label %3099, label %3105

3099:                                             ; preds = %3097
  store i32 0, ptr %3073, align 4, !tbaa !5
  %3100 = getelementptr inbounds i32, ptr %8, i64 %3072
  %3101 = load i32, ptr %3100, align 4, !tbaa !5
  %3102 = getelementptr inbounds i32, ptr %6, i64 %3072
  store i32 %3101, ptr %3102, align 4, !tbaa !5
  %3103 = add nuw nsw i64 %3072, 1
  %3104 = icmp eq i64 %3103, %2831
  br i1 %3104, label %3112, label %3071, !llvm.loop !1042

3105:                                             ; preds = %3067, %3097
  %3106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3107:                                             ; preds = %3080, %3089
  %3108 = phi ptr [ %3096, %3089 ], [ %3073, %3080 ]
  %3109 = phi i32 [ %3095, %3089 ], [ 1, %3080 ]
  %3110 = load i32, ptr %3108, align 4, !tbaa !5
  %3111 = add nsw i32 %3110, %3109
  store i32 %3111, ptr %3108, align 4, !tbaa !5
  br label %3112

3112:                                             ; preds = %3099, %3107, %3069, %3053
  %3113 = icmp eq i32 %3061, %5
  br i1 %3113, label %5579, label %2976, !llvm.loop !1043

3114:                                             ; preds = %2509
  %3115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1951, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

3116:                                             ; preds = %18
  %3117 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3118 = load ptr, ptr %3117, align 8, !tbaa !9
  %3119 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3120 = load ptr, ptr %3119, align 8, !tbaa !9
  store i64 0, ptr %3120, align 8, !tbaa !120
  %3121 = icmp eq i32 %13, 0
  br i1 %3121, label %3122, label %3128

3122:                                             ; preds = %3116
  %3123 = load double, ptr %3118, align 8, !tbaa !18
  %3124 = fptosi double %3123 to i64
  %3125 = icmp eq i64 %3124, 0
  %3126 = tail call i64 @llvm.abs.i64(i64 %3124, i1 true)
  %3127 = select i1 %3125, i64 0, i64 %3126
  store i64 %3127, ptr %3120, align 8, !tbaa !120
  br label %5579

3128:                                             ; preds = %3116
  switch i32 %1, label %3733 [
    i32 1, label %3129
    i32 0, label %3439
  ]

3129:                                             ; preds = %3128
  %3130 = getelementptr inbounds i32, ptr %3, i64 %19
  %3131 = load i32, ptr %3130, align 4, !tbaa !5
  %3132 = icmp eq i32 %3131, 0
  %3133 = icmp sgt i32 %5, 0
  br i1 %3132, label %3143, label %3134

3134:                                             ; preds = %3129
  br i1 %3133, label %3135, label %5579

3135:                                             ; preds = %3134
  %3136 = icmp sgt i32 %13, 1
  %3137 = icmp sgt i32 %13, 0
  %3138 = add i32 %13, -2
  %3139 = zext i32 %3138 to i64
  %3140 = zext i32 %13 to i64
  %3141 = add nuw i32 %5, 1
  %3142 = icmp eq i32 %13, 1
  br label %3295

3143:                                             ; preds = %3129
  br i1 %3133, label %3144, label %5579

3144:                                             ; preds = %3143
  %3145 = icmp sgt i32 %13, 1
  %3146 = icmp sgt i32 %13, 0
  %3147 = add i32 %13, -2
  %3148 = zext i32 %3147 to i64
  %3149 = zext i32 %13 to i64
  %3150 = add nuw i32 %5, 1
  %3151 = icmp eq i32 %13, 1
  br label %3152

3152:                                             ; preds = %3144, %3293
  %3153 = phi i64 [ 0, %3144 ], [ %3243, %3293 ]
  %3154 = phi i32 [ 0, %3144 ], [ %3245, %3293 ]
  %3155 = phi double [ 0.000000e+00, %3144 ], [ %3244, %3293 ]
  %3156 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3145, label %3157, label %3226

3157:                                             ; preds = %3152, %3216
  %3158 = phi i32 [ %3225, %3216 ], [ 0, %3152 ]
  %3159 = phi i64 [ %3167, %3216 ], [ %3149, %3152 ]
  %3160 = phi i64 [ %3224, %3216 ], [ %3148, %3152 ]
  %3161 = phi i32 [ %3222, %3216 ], [ %3156, %3152 ]
  %3162 = sub i32 %3147, %3158
  %3163 = tail call i32 @llvm.smin.i32(i32 %3162, i32 0)
  %3164 = sub i32 %3162, %3163
  %3165 = zext i32 %3164 to i64
  %3166 = add nuw nsw i64 %3165, 1
  %3167 = add nsw i64 %3159, -1
  %3168 = icmp ult i32 %3164, 31
  br i1 %3168, label %3204, label %3169

3169:                                             ; preds = %3157
  %3170 = and i64 %3166, 8589934560
  %3171 = sub i64 %3160, %3170
  br label %3172

3172:                                             ; preds = %3172, %3169
  %3173 = phi i64 [ 0, %3169 ], [ %3196, %3172 ]
  %3174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3192, %3172 ]
  %3175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3193, %3172 ]
  %3176 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3194, %3172 ]
  %3177 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3195, %3172 ]
  %3178 = sub i64 %3160, %3173
  %3179 = getelementptr inbounds i32, ptr %9, i64 %3178
  %3180 = getelementptr inbounds i32, ptr %3179, i64 -7
  %3181 = load <8 x i32>, ptr %3180, align 4, !tbaa !5
  %3182 = shufflevector <8 x i32> %3181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3183 = getelementptr inbounds i32, ptr %3179, i64 -15
  %3184 = load <8 x i32>, ptr %3183, align 4, !tbaa !5
  %3185 = shufflevector <8 x i32> %3184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3186 = getelementptr inbounds i32, ptr %3179, i64 -23
  %3187 = load <8 x i32>, ptr %3186, align 4, !tbaa !5
  %3188 = shufflevector <8 x i32> %3187, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3189 = getelementptr inbounds i32, ptr %3179, i64 -31
  %3190 = load <8 x i32>, ptr %3189, align 4, !tbaa !5
  %3191 = shufflevector <8 x i32> %3190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3192 = mul <8 x i32> %3182, %3174
  %3193 = mul <8 x i32> %3185, %3175
  %3194 = mul <8 x i32> %3188, %3176
  %3195 = mul <8 x i32> %3191, %3177
  %3196 = add nuw i64 %3173, 32
  %3197 = icmp eq i64 %3196, %3170
  br i1 %3197, label %3198, label %3172, !llvm.loop !1044

3198:                                             ; preds = %3172
  %3199 = mul <8 x i32> %3193, %3192
  %3200 = mul <8 x i32> %3194, %3199
  %3201 = mul <8 x i32> %3195, %3200
  %3202 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3201)
  %3203 = icmp eq i64 %3166, %3170
  br i1 %3203, label %3216, label %3204

3204:                                             ; preds = %3157, %3198
  %3205 = phi i64 [ %3160, %3157 ], [ %3171, %3198 ]
  %3206 = phi i32 [ 1, %3157 ], [ %3202, %3198 ]
  br label %3207

3207:                                             ; preds = %3204, %3207
  %3208 = phi i64 [ %3213, %3207 ], [ %3205, %3204 ]
  %3209 = phi i32 [ %3212, %3207 ], [ %3206, %3204 ]
  %3210 = getelementptr inbounds i32, ptr %9, i64 %3208
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = mul nsw i32 %3211, %3209
  %3213 = add nsw i64 %3208, -1
  %3214 = trunc i64 %3208 to i32
  %3215 = icmp sgt i32 %3214, 0
  br i1 %3215, label %3207, label %3216, !llvm.loop !1045

3216:                                             ; preds = %3207, %3198
  %3217 = phi i32 [ %3202, %3198 ], [ %3212, %3207 ]
  %3218 = and i64 %3167, 4294967295
  %3219 = getelementptr inbounds i32, ptr %6, i64 %3218
  %3220 = load i32, ptr %3219, align 4, !tbaa !5
  %3221 = mul nsw i32 %3220, %3217
  %3222 = add nsw i32 %3221, %3161
  %3223 = icmp sgt i64 %3159, 2
  %3224 = add nsw i64 %3160, -1
  %3225 = add i32 %3158, 1
  br i1 %3223, label %3157, label %3226, !llvm.loop !1046

3226:                                             ; preds = %3216, %3152
  %3227 = phi i32 [ %3156, %3152 ], [ %3222, %3216 ]
  %3228 = sext i32 %3227 to i64
  %3229 = getelementptr inbounds double, ptr %2, i64 %3228
  %3230 = load double, ptr %3229, align 8, !tbaa !18
  %3231 = getelementptr inbounds double, ptr %3118, i64 %3228
  %3232 = load double, ptr %3231, align 8, !tbaa !18
  %3233 = fptosi double %3232 to i64
  %3234 = sitofp i64 %3153 to double
  %3235 = sitofp i64 %3233 to double
  %3236 = fmul fast double %3230, %3235
  %3237 = fcmp fast uge double %3236, 0.000000e+00
  %3238 = fneg fast double %3236
  %3239 = tail call fast double @llvm.fabs.f64(double %3236)
  %3240 = fcmp fast ole double %3239, %3234
  %3241 = select nnan ninf i1 %3237, double %3236, double %3238
  %3242 = select i1 %3240, double %3234, double %3241
  %3243 = fptosi double %3242 to i64
  %3244 = fadd fast double %3230, %3155
  %3245 = add nuw nsw i32 %3154, 1
  br i1 %3146, label %3246, label %3293

3246:                                             ; preds = %3226
  %3247 = load i32, ptr %4, align 4, !tbaa !5
  %3248 = load i32, ptr %12, align 4, !tbaa !5
  %3249 = add nsw i32 %3248, -1
  %3250 = icmp slt i32 %3247, %3249
  br i1 %3250, label %3270, label %3251

3251:                                             ; preds = %3246
  %3252 = icmp eq i32 %3247, %3249
  br i1 %3252, label %3253, label %3286

3253:                                             ; preds = %3251
  store i32 0, ptr %4, align 4, !tbaa !5
  %3254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3254, ptr %6, align 4, !tbaa !5
  br i1 %3151, label %3293, label %3255

3255:                                             ; preds = %3253, %3280
  %3256 = phi i64 [ %3284, %3280 ], [ 1, %3253 ]
  %3257 = getelementptr inbounds i32, ptr %4, i64 %3256
  %3258 = load i32, ptr %3257, align 4, !tbaa !5
  %3259 = getelementptr inbounds i32, ptr %12, i64 %3256
  %3260 = load i32, ptr %3259, align 4, !tbaa !5
  %3261 = add nsw i32 %3260, -1
  %3262 = icmp slt i32 %3258, %3261
  br i1 %3262, label %3263, label %3278

3263:                                             ; preds = %3255
  br i1 %3250, label %3270, label %3264

3264:                                             ; preds = %3263
  %3265 = getelementptr inbounds i32, ptr %7, i64 %3256
  %3266 = load i32, ptr %3265, align 4, !tbaa !5
  %3267 = getelementptr inbounds i32, ptr %6, i64 %3256
  %3268 = load i32, ptr %3267, align 4, !tbaa !5
  %3269 = add nsw i32 %3268, %3266
  store i32 %3269, ptr %3267, align 4, !tbaa !5
  br label %3288

3270:                                             ; preds = %3246, %3263
  %3271 = phi i32 [ %3258, %3263 ], [ %3247, %3246 ]
  %3272 = phi ptr [ %3257, %3263 ], [ %4, %3246 ]
  %3273 = phi i64 [ %3256, %3263 ], [ 0, %3246 ]
  %3274 = add nsw i32 %3271, 1
  store i32 %3274, ptr %3272, align 4, !tbaa !5
  %3275 = getelementptr inbounds i32, ptr %7, i64 %3273
  %3276 = load i32, ptr %3275, align 4, !tbaa !5
  %3277 = getelementptr inbounds i32, ptr %6, i64 %3273
  br label %3288

3278:                                             ; preds = %3255
  %3279 = icmp eq i32 %3258, %3261
  br i1 %3279, label %3280, label %3286

3280:                                             ; preds = %3278
  store i32 0, ptr %3257, align 4, !tbaa !5
  %3281 = getelementptr inbounds i32, ptr %8, i64 %3256
  %3282 = load i32, ptr %3281, align 4, !tbaa !5
  %3283 = getelementptr inbounds i32, ptr %6, i64 %3256
  store i32 %3282, ptr %3283, align 4, !tbaa !5
  %3284 = add nuw nsw i64 %3256, 1
  %3285 = icmp eq i64 %3284, %3149
  br i1 %3285, label %3293, label %3255, !llvm.loop !1047

3286:                                             ; preds = %3251, %3278
  store i64 %3243, ptr %3120, align 8, !tbaa !120
  %3287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3288:                                             ; preds = %3264, %3270
  %3289 = phi ptr [ %3277, %3270 ], [ %3257, %3264 ]
  %3290 = phi i32 [ %3276, %3270 ], [ 1, %3264 ]
  %3291 = load i32, ptr %3289, align 4, !tbaa !5
  %3292 = add nsw i32 %3291, %3290
  store i32 %3292, ptr %3289, align 4, !tbaa !5
  br label %3293

3293:                                             ; preds = %3280, %3288, %3253, %3226
  %3294 = icmp eq i32 %3245, %5
  br i1 %3294, label %5575, label %3152, !llvm.loop !1048

3295:                                             ; preds = %3135, %3437
  %3296 = phi i64 [ 0, %3135 ], [ %3385, %3437 ]
  %3297 = phi i32 [ 0, %3135 ], [ %3386, %3437 ]
  %3298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3136, label %3299, label %3368

3299:                                             ; preds = %3295, %3358
  %3300 = phi i32 [ %3367, %3358 ], [ 0, %3295 ]
  %3301 = phi i64 [ %3309, %3358 ], [ %3140, %3295 ]
  %3302 = phi i64 [ %3366, %3358 ], [ %3139, %3295 ]
  %3303 = phi i32 [ %3364, %3358 ], [ %3298, %3295 ]
  %3304 = sub i32 %3138, %3300
  %3305 = tail call i32 @llvm.smin.i32(i32 %3304, i32 0)
  %3306 = sub i32 %3304, %3305
  %3307 = zext i32 %3306 to i64
  %3308 = add nuw nsw i64 %3307, 1
  %3309 = add nsw i64 %3301, -1
  %3310 = icmp ult i32 %3306, 31
  br i1 %3310, label %3346, label %3311

3311:                                             ; preds = %3299
  %3312 = and i64 %3308, 8589934560
  %3313 = sub i64 %3302, %3312
  br label %3314

3314:                                             ; preds = %3314, %3311
  %3315 = phi i64 [ 0, %3311 ], [ %3338, %3314 ]
  %3316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3334, %3314 ]
  %3317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3335, %3314 ]
  %3318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3336, %3314 ]
  %3319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3337, %3314 ]
  %3320 = sub i64 %3302, %3315
  %3321 = getelementptr inbounds i32, ptr %11, i64 %3320
  %3322 = getelementptr inbounds i32, ptr %3321, i64 -7
  %3323 = load <8 x i32>, ptr %3322, align 4, !tbaa !5
  %3324 = shufflevector <8 x i32> %3323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3325 = getelementptr inbounds i32, ptr %3321, i64 -15
  %3326 = load <8 x i32>, ptr %3325, align 4, !tbaa !5
  %3327 = shufflevector <8 x i32> %3326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3328 = getelementptr inbounds i32, ptr %3321, i64 -23
  %3329 = load <8 x i32>, ptr %3328, align 4, !tbaa !5
  %3330 = shufflevector <8 x i32> %3329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3331 = getelementptr inbounds i32, ptr %3321, i64 -31
  %3332 = load <8 x i32>, ptr %3331, align 4, !tbaa !5
  %3333 = shufflevector <8 x i32> %3332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3334 = mul <8 x i32> %3324, %3316
  %3335 = mul <8 x i32> %3327, %3317
  %3336 = mul <8 x i32> %3330, %3318
  %3337 = mul <8 x i32> %3333, %3319
  %3338 = add nuw i64 %3315, 32
  %3339 = icmp eq i64 %3338, %3312
  br i1 %3339, label %3340, label %3314, !llvm.loop !1049

3340:                                             ; preds = %3314
  %3341 = mul <8 x i32> %3335, %3334
  %3342 = mul <8 x i32> %3336, %3341
  %3343 = mul <8 x i32> %3337, %3342
  %3344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3343)
  %3345 = icmp eq i64 %3308, %3312
  br i1 %3345, label %3358, label %3346

3346:                                             ; preds = %3299, %3340
  %3347 = phi i64 [ %3302, %3299 ], [ %3313, %3340 ]
  %3348 = phi i32 [ 1, %3299 ], [ %3344, %3340 ]
  br label %3349

3349:                                             ; preds = %3346, %3349
  %3350 = phi i64 [ %3355, %3349 ], [ %3347, %3346 ]
  %3351 = phi i32 [ %3354, %3349 ], [ %3348, %3346 ]
  %3352 = getelementptr inbounds i32, ptr %11, i64 %3350
  %3353 = load i32, ptr %3352, align 4, !tbaa !5
  %3354 = mul nsw i32 %3353, %3351
  %3355 = add nsw i64 %3350, -1
  %3356 = trunc i64 %3350 to i32
  %3357 = icmp sgt i32 %3356, 0
  br i1 %3357, label %3349, label %3358, !llvm.loop !1050

3358:                                             ; preds = %3349, %3340
  %3359 = phi i32 [ %3344, %3340 ], [ %3354, %3349 ]
  %3360 = and i64 %3309, 4294967295
  %3361 = getelementptr inbounds i32, ptr %6, i64 %3360
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = mul nsw i32 %3362, %3359
  %3364 = add nsw i32 %3363, %3303
  %3365 = icmp sgt i64 %3301, 2
  %3366 = add nsw i64 %3302, -1
  %3367 = add i32 %3300, 1
  br i1 %3365, label %3299, label %3368, !llvm.loop !1051

3368:                                             ; preds = %3358, %3295
  %3369 = phi i32 [ %3298, %3295 ], [ %3364, %3358 ]
  %3370 = icmp slt i32 %3369, %5
  br i1 %3370, label %3373, label %3371

3371:                                             ; preds = %3368
  %3372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3373:                                             ; preds = %3368
  %3374 = sext i32 %3369 to i64
  %3375 = getelementptr inbounds double, ptr %3118, i64 %3374
  %3376 = load double, ptr %3375, align 8, !tbaa !18
  %3377 = fptosi double %3376 to i64
  %3378 = sitofp i64 %3296 to double
  %3379 = sitofp i64 %3377 to double
  %3380 = icmp slt i64 %3377, 0
  %3381 = fneg fast double %3379
  %3382 = select i1 %3380, double %3381, double %3379
  %3383 = fcmp fast ole double %3382, %3378
  %3384 = select fast i1 %3383, double %3378, double %3382
  %3385 = fptosi double %3384 to i64
  store i64 %3385, ptr %3120, align 8, !tbaa !120
  %3386 = add nuw nsw i32 %3297, 1
  br i1 %3137, label %3387, label %3437

3387:                                             ; preds = %3373
  %3388 = load i32, ptr %4, align 4, !tbaa !5
  %3389 = load i32, ptr %12, align 4, !tbaa !5
  %3390 = add nsw i32 %3389, -1
  %3391 = icmp slt i32 %3388, %3390
  br i1 %3391, label %3414, label %3392

3392:                                             ; preds = %3387
  %3393 = icmp eq i32 %3388, %3390
  br i1 %3393, label %3394, label %3430

3394:                                             ; preds = %3392
  store i32 0, ptr %4, align 4, !tbaa !5
  %3395 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3395, ptr %6, align 4, !tbaa !5
  br i1 %3142, label %3437, label %3396

3396:                                             ; preds = %3394, %3424
  %3397 = phi i64 [ %3428, %3424 ], [ 1, %3394 ]
  %3398 = getelementptr inbounds i32, ptr %4, i64 %3397
  %3399 = load i32, ptr %3398, align 4, !tbaa !5
  %3400 = getelementptr inbounds i32, ptr %12, i64 %3397
  %3401 = load i32, ptr %3400, align 4, !tbaa !5
  %3402 = add nsw i32 %3401, -1
  %3403 = icmp slt i32 %3399, %3402
  br i1 %3403, label %3404, label %3422

3404:                                             ; preds = %3396
  br i1 %3391, label %3414, label %3405

3405:                                             ; preds = %3404
  %3406 = shl i64 %3397, 32
  %3407 = add i64 %3406, -4294967296
  %3408 = ashr exact i64 %3407, 32
  %3409 = getelementptr inbounds i32, ptr %7, i64 %3408
  %3410 = load i32, ptr %3409, align 4, !tbaa !5
  %3411 = getelementptr inbounds i32, ptr %6, i64 %3397
  %3412 = load i32, ptr %3411, align 4, !tbaa !5
  %3413 = add nsw i32 %3412, %3410
  store i32 %3413, ptr %3411, align 4, !tbaa !5
  br label %3432

3414:                                             ; preds = %3387, %3404
  %3415 = phi i32 [ %3399, %3404 ], [ %3388, %3387 ]
  %3416 = phi ptr [ %3398, %3404 ], [ %4, %3387 ]
  %3417 = phi i64 [ %3397, %3404 ], [ 0, %3387 ]
  %3418 = add nsw i32 %3415, 1
  store i32 %3418, ptr %3416, align 4, !tbaa !5
  %3419 = getelementptr inbounds i32, ptr %7, i64 %3417
  %3420 = load i32, ptr %3419, align 4, !tbaa !5
  %3421 = getelementptr inbounds i32, ptr %6, i64 %3417
  br label %3432

3422:                                             ; preds = %3396
  %3423 = icmp eq i32 %3399, %3402
  br i1 %3423, label %3424, label %3430

3424:                                             ; preds = %3422
  store i32 0, ptr %3398, align 4, !tbaa !5
  %3425 = getelementptr inbounds i32, ptr %8, i64 %3397
  %3426 = load i32, ptr %3425, align 4, !tbaa !5
  %3427 = getelementptr inbounds i32, ptr %6, i64 %3397
  store i32 %3426, ptr %3427, align 4, !tbaa !5
  %3428 = add nuw nsw i64 %3397, 1
  %3429 = icmp eq i64 %3428, %3140
  br i1 %3429, label %3437, label %3396, !llvm.loop !1052

3430:                                             ; preds = %3392, %3422
  %3431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3432:                                             ; preds = %3405, %3414
  %3433 = phi ptr [ %3421, %3414 ], [ %3398, %3405 ]
  %3434 = phi i32 [ %3420, %3414 ], [ 1, %3405 ]
  %3435 = load i32, ptr %3433, align 4, !tbaa !5
  %3436 = add nsw i32 %3435, %3434
  store i32 %3436, ptr %3433, align 4, !tbaa !5
  br label %3437

3437:                                             ; preds = %3424, %3432, %3394, %3373
  %3438 = icmp eq i32 %3386, %5
  br i1 %3438, label %5579, label %3295, !llvm.loop !1053

3439:                                             ; preds = %3128
  %3440 = getelementptr inbounds i32, ptr %3, i64 %19
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = icmp eq i32 %3441, 0
  %3443 = icmp sgt i32 %5, 0
  br i1 %3442, label %3453, label %3444

3444:                                             ; preds = %3439
  br i1 %3443, label %3445, label %5579

3445:                                             ; preds = %3444
  %3446 = icmp sgt i32 %13, 1
  %3447 = icmp sgt i32 %13, 0
  %3448 = add i32 %13, -2
  %3449 = zext i32 %3448 to i64
  %3450 = zext i32 %13 to i64
  %3451 = add nuw i32 %5, 1
  %3452 = icmp eq i32 %13, 1
  br label %3595

3453:                                             ; preds = %3439
  br i1 %3443, label %3454, label %5579

3454:                                             ; preds = %3453
  %3455 = icmp sgt i32 %13, 1
  %3456 = icmp sgt i32 %13, 0
  %3457 = add i32 %13, -2
  %3458 = zext i32 %3457 to i64
  %3459 = zext i32 %13 to i64
  %3460 = add nuw i32 %5, 1
  %3461 = icmp eq i32 %13, 1
  br label %3462

3462:                                             ; preds = %3454, %3593
  %3463 = phi i64 [ 0, %3454 ], [ %3543, %3593 ]
  %3464 = phi i32 [ 0, %3454 ], [ %3545, %3593 ]
  %3465 = phi double [ 0.000000e+00, %3454 ], [ %3544, %3593 ]
  %3466 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3455, label %3467, label %3536

3467:                                             ; preds = %3462, %3526
  %3468 = phi i32 [ %3535, %3526 ], [ 0, %3462 ]
  %3469 = phi i64 [ %3477, %3526 ], [ %3459, %3462 ]
  %3470 = phi i64 [ %3534, %3526 ], [ %3458, %3462 ]
  %3471 = phi i32 [ %3532, %3526 ], [ %3466, %3462 ]
  %3472 = sub i32 %3457, %3468
  %3473 = tail call i32 @llvm.smin.i32(i32 %3472, i32 0)
  %3474 = sub i32 %3472, %3473
  %3475 = zext i32 %3474 to i64
  %3476 = add nuw nsw i64 %3475, 1
  %3477 = add nsw i64 %3469, -1
  %3478 = icmp ult i32 %3474, 31
  br i1 %3478, label %3514, label %3479

3479:                                             ; preds = %3467
  %3480 = and i64 %3476, 8589934560
  %3481 = sub i64 %3470, %3480
  br label %3482

3482:                                             ; preds = %3482, %3479
  %3483 = phi i64 [ 0, %3479 ], [ %3506, %3482 ]
  %3484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3502, %3482 ]
  %3485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3503, %3482 ]
  %3486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3504, %3482 ]
  %3487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3505, %3482 ]
  %3488 = sub i64 %3470, %3483
  %3489 = getelementptr inbounds i32, ptr %9, i64 %3488
  %3490 = getelementptr inbounds i32, ptr %3489, i64 -7
  %3491 = load <8 x i32>, ptr %3490, align 4, !tbaa !5
  %3492 = shufflevector <8 x i32> %3491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3493 = getelementptr inbounds i32, ptr %3489, i64 -15
  %3494 = load <8 x i32>, ptr %3493, align 4, !tbaa !5
  %3495 = shufflevector <8 x i32> %3494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3496 = getelementptr inbounds i32, ptr %3489, i64 -23
  %3497 = load <8 x i32>, ptr %3496, align 4, !tbaa !5
  %3498 = shufflevector <8 x i32> %3497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3499 = getelementptr inbounds i32, ptr %3489, i64 -31
  %3500 = load <8 x i32>, ptr %3499, align 4, !tbaa !5
  %3501 = shufflevector <8 x i32> %3500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3502 = mul <8 x i32> %3492, %3484
  %3503 = mul <8 x i32> %3495, %3485
  %3504 = mul <8 x i32> %3498, %3486
  %3505 = mul <8 x i32> %3501, %3487
  %3506 = add nuw i64 %3483, 32
  %3507 = icmp eq i64 %3506, %3480
  br i1 %3507, label %3508, label %3482, !llvm.loop !1054

3508:                                             ; preds = %3482
  %3509 = mul <8 x i32> %3503, %3502
  %3510 = mul <8 x i32> %3504, %3509
  %3511 = mul <8 x i32> %3505, %3510
  %3512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3511)
  %3513 = icmp eq i64 %3476, %3480
  br i1 %3513, label %3526, label %3514

3514:                                             ; preds = %3467, %3508
  %3515 = phi i64 [ %3470, %3467 ], [ %3481, %3508 ]
  %3516 = phi i32 [ 1, %3467 ], [ %3512, %3508 ]
  br label %3517

3517:                                             ; preds = %3514, %3517
  %3518 = phi i64 [ %3523, %3517 ], [ %3515, %3514 ]
  %3519 = phi i32 [ %3522, %3517 ], [ %3516, %3514 ]
  %3520 = getelementptr inbounds i32, ptr %9, i64 %3518
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = mul nsw i32 %3521, %3519
  %3523 = add nsw i64 %3518, -1
  %3524 = trunc i64 %3518 to i32
  %3525 = icmp sgt i32 %3524, 0
  br i1 %3525, label %3517, label %3526, !llvm.loop !1055

3526:                                             ; preds = %3517, %3508
  %3527 = phi i32 [ %3512, %3508 ], [ %3522, %3517 ]
  %3528 = and i64 %3477, 4294967295
  %3529 = getelementptr inbounds i32, ptr %6, i64 %3528
  %3530 = load i32, ptr %3529, align 4, !tbaa !5
  %3531 = mul nsw i32 %3530, %3527
  %3532 = add nsw i32 %3531, %3471
  %3533 = icmp sgt i64 %3469, 2
  %3534 = add nsw i64 %3470, -1
  %3535 = add i32 %3468, 1
  br i1 %3533, label %3467, label %3536, !llvm.loop !1056

3536:                                             ; preds = %3526, %3462
  %3537 = phi i32 [ %3466, %3462 ], [ %3532, %3526 ]
  %3538 = sext i32 %3537 to i64
  %3539 = getelementptr inbounds double, ptr %3118, i64 %3538
  %3540 = load double, ptr %3539, align 8, !tbaa !18
  %3541 = fptosi double %3540 to i64
  %3542 = tail call i64 @llvm.abs.i64(i64 %3541, i1 true)
  %3543 = tail call i64 @llvm.smax.i64(i64 %3463, i64 %3542)
  %3544 = fadd fast double %3465, 1.000000e+00
  %3545 = add nuw nsw i32 %3464, 1
  br i1 %3456, label %3546, label %3593

3546:                                             ; preds = %3536
  %3547 = load i32, ptr %4, align 4, !tbaa !5
  %3548 = load i32, ptr %12, align 4, !tbaa !5
  %3549 = add nsw i32 %3548, -1
  %3550 = icmp slt i32 %3547, %3549
  br i1 %3550, label %3570, label %3551

3551:                                             ; preds = %3546
  %3552 = icmp eq i32 %3547, %3549
  br i1 %3552, label %3553, label %3586

3553:                                             ; preds = %3551
  store i32 0, ptr %4, align 4, !tbaa !5
  %3554 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3554, ptr %6, align 4, !tbaa !5
  br i1 %3461, label %3593, label %3555

3555:                                             ; preds = %3553, %3580
  %3556 = phi i64 [ %3584, %3580 ], [ 1, %3553 ]
  %3557 = getelementptr inbounds i32, ptr %4, i64 %3556
  %3558 = load i32, ptr %3557, align 4, !tbaa !5
  %3559 = getelementptr inbounds i32, ptr %12, i64 %3556
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = add nsw i32 %3560, -1
  %3562 = icmp slt i32 %3558, %3561
  br i1 %3562, label %3563, label %3578

3563:                                             ; preds = %3555
  br i1 %3550, label %3570, label %3564

3564:                                             ; preds = %3563
  %3565 = getelementptr inbounds i32, ptr %7, i64 %3556
  %3566 = load i32, ptr %3565, align 4, !tbaa !5
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3556
  %3568 = load i32, ptr %3567, align 4, !tbaa !5
  %3569 = add nsw i32 %3568, %3566
  store i32 %3569, ptr %3567, align 4, !tbaa !5
  br label %3588

3570:                                             ; preds = %3546, %3563
  %3571 = phi i32 [ %3558, %3563 ], [ %3547, %3546 ]
  %3572 = phi ptr [ %3557, %3563 ], [ %4, %3546 ]
  %3573 = phi i64 [ %3556, %3563 ], [ 0, %3546 ]
  %3574 = add nsw i32 %3571, 1
  store i32 %3574, ptr %3572, align 4, !tbaa !5
  %3575 = getelementptr inbounds i32, ptr %7, i64 %3573
  %3576 = load i32, ptr %3575, align 4, !tbaa !5
  %3577 = getelementptr inbounds i32, ptr %6, i64 %3573
  br label %3588

3578:                                             ; preds = %3555
  %3579 = icmp eq i32 %3558, %3561
  br i1 %3579, label %3580, label %3586

3580:                                             ; preds = %3578
  store i32 0, ptr %3557, align 4, !tbaa !5
  %3581 = getelementptr inbounds i32, ptr %8, i64 %3556
  %3582 = load i32, ptr %3581, align 4, !tbaa !5
  %3583 = getelementptr inbounds i32, ptr %6, i64 %3556
  store i32 %3582, ptr %3583, align 4, !tbaa !5
  %3584 = add nuw nsw i64 %3556, 1
  %3585 = icmp eq i64 %3584, %3459
  br i1 %3585, label %3593, label %3555, !llvm.loop !1057

3586:                                             ; preds = %3551, %3578
  store i64 %3543, ptr %3120, align 8, !tbaa !120
  %3587 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3588:                                             ; preds = %3564, %3570
  %3589 = phi ptr [ %3577, %3570 ], [ %3557, %3564 ]
  %3590 = phi i32 [ %3576, %3570 ], [ 1, %3564 ]
  %3591 = load i32, ptr %3589, align 4, !tbaa !5
  %3592 = add nsw i32 %3591, %3590
  store i32 %3592, ptr %3589, align 4, !tbaa !5
  br label %3593

3593:                                             ; preds = %3580, %3588, %3553, %3536
  %3594 = icmp eq i32 %3545, %5
  br i1 %3594, label %5576, label %3462, !llvm.loop !1058

3595:                                             ; preds = %3445, %3731
  %3596 = phi i64 [ 0, %3445 ], [ %3679, %3731 ]
  %3597 = phi i32 [ 0, %3445 ], [ %3680, %3731 ]
  %3598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3446, label %3599, label %3668

3599:                                             ; preds = %3595, %3658
  %3600 = phi i32 [ %3667, %3658 ], [ 0, %3595 ]
  %3601 = phi i64 [ %3609, %3658 ], [ %3450, %3595 ]
  %3602 = phi i64 [ %3666, %3658 ], [ %3449, %3595 ]
  %3603 = phi i32 [ %3664, %3658 ], [ %3598, %3595 ]
  %3604 = sub i32 %3448, %3600
  %3605 = tail call i32 @llvm.smin.i32(i32 %3604, i32 0)
  %3606 = sub i32 %3604, %3605
  %3607 = zext i32 %3606 to i64
  %3608 = add nuw nsw i64 %3607, 1
  %3609 = add nsw i64 %3601, -1
  %3610 = icmp ult i32 %3606, 31
  br i1 %3610, label %3646, label %3611

3611:                                             ; preds = %3599
  %3612 = and i64 %3608, 8589934560
  %3613 = sub i64 %3602, %3612
  br label %3614

3614:                                             ; preds = %3614, %3611
  %3615 = phi i64 [ 0, %3611 ], [ %3638, %3614 ]
  %3616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3634, %3614 ]
  %3617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3635, %3614 ]
  %3618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3636, %3614 ]
  %3619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3637, %3614 ]
  %3620 = sub i64 %3602, %3615
  %3621 = getelementptr inbounds i32, ptr %11, i64 %3620
  %3622 = getelementptr inbounds i32, ptr %3621, i64 -7
  %3623 = load <8 x i32>, ptr %3622, align 4, !tbaa !5
  %3624 = shufflevector <8 x i32> %3623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3625 = getelementptr inbounds i32, ptr %3621, i64 -15
  %3626 = load <8 x i32>, ptr %3625, align 4, !tbaa !5
  %3627 = shufflevector <8 x i32> %3626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3628 = getelementptr inbounds i32, ptr %3621, i64 -23
  %3629 = load <8 x i32>, ptr %3628, align 4, !tbaa !5
  %3630 = shufflevector <8 x i32> %3629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3631 = getelementptr inbounds i32, ptr %3621, i64 -31
  %3632 = load <8 x i32>, ptr %3631, align 4, !tbaa !5
  %3633 = shufflevector <8 x i32> %3632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3634 = mul <8 x i32> %3624, %3616
  %3635 = mul <8 x i32> %3627, %3617
  %3636 = mul <8 x i32> %3630, %3618
  %3637 = mul <8 x i32> %3633, %3619
  %3638 = add nuw i64 %3615, 32
  %3639 = icmp eq i64 %3638, %3612
  br i1 %3639, label %3640, label %3614, !llvm.loop !1059

3640:                                             ; preds = %3614
  %3641 = mul <8 x i32> %3635, %3634
  %3642 = mul <8 x i32> %3636, %3641
  %3643 = mul <8 x i32> %3637, %3642
  %3644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3643)
  %3645 = icmp eq i64 %3608, %3612
  br i1 %3645, label %3658, label %3646

3646:                                             ; preds = %3599, %3640
  %3647 = phi i64 [ %3602, %3599 ], [ %3613, %3640 ]
  %3648 = phi i32 [ 1, %3599 ], [ %3644, %3640 ]
  br label %3649

3649:                                             ; preds = %3646, %3649
  %3650 = phi i64 [ %3655, %3649 ], [ %3647, %3646 ]
  %3651 = phi i32 [ %3654, %3649 ], [ %3648, %3646 ]
  %3652 = getelementptr inbounds i32, ptr %11, i64 %3650
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = mul nsw i32 %3653, %3651
  %3655 = add nsw i64 %3650, -1
  %3656 = trunc i64 %3650 to i32
  %3657 = icmp sgt i32 %3656, 0
  br i1 %3657, label %3649, label %3658, !llvm.loop !1060

3658:                                             ; preds = %3649, %3640
  %3659 = phi i32 [ %3644, %3640 ], [ %3654, %3649 ]
  %3660 = and i64 %3609, 4294967295
  %3661 = getelementptr inbounds i32, ptr %6, i64 %3660
  %3662 = load i32, ptr %3661, align 4, !tbaa !5
  %3663 = mul nsw i32 %3662, %3659
  %3664 = add nsw i32 %3663, %3603
  %3665 = icmp sgt i64 %3601, 2
  %3666 = add nsw i64 %3602, -1
  %3667 = add i32 %3600, 1
  br i1 %3665, label %3599, label %3668, !llvm.loop !1061

3668:                                             ; preds = %3658, %3595
  %3669 = phi i32 [ %3598, %3595 ], [ %3664, %3658 ]
  %3670 = icmp slt i32 %3669, %5
  br i1 %3670, label %3673, label %3671

3671:                                             ; preds = %3668
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3673:                                             ; preds = %3668
  %3674 = sext i32 %3669 to i64
  %3675 = getelementptr inbounds double, ptr %3118, i64 %3674
  %3676 = load double, ptr %3675, align 8, !tbaa !18
  %3677 = fptosi double %3676 to i64
  %3678 = tail call i64 @llvm.abs.i64(i64 %3677, i1 true)
  %3679 = tail call i64 @llvm.smax.i64(i64 %3596, i64 %3678)
  store i64 %3679, ptr %3120, align 8, !tbaa !120
  %3680 = add nuw nsw i32 %3597, 1
  br i1 %3447, label %3681, label %3731

3681:                                             ; preds = %3673
  %3682 = load i32, ptr %4, align 4, !tbaa !5
  %3683 = load i32, ptr %12, align 4, !tbaa !5
  %3684 = add nsw i32 %3683, -1
  %3685 = icmp slt i32 %3682, %3684
  br i1 %3685, label %3708, label %3686

3686:                                             ; preds = %3681
  %3687 = icmp eq i32 %3682, %3684
  br i1 %3687, label %3688, label %3724

3688:                                             ; preds = %3686
  store i32 0, ptr %4, align 4, !tbaa !5
  %3689 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3689, ptr %6, align 4, !tbaa !5
  br i1 %3452, label %3731, label %3690

3690:                                             ; preds = %3688, %3718
  %3691 = phi i64 [ %3722, %3718 ], [ 1, %3688 ]
  %3692 = getelementptr inbounds i32, ptr %4, i64 %3691
  %3693 = load i32, ptr %3692, align 4, !tbaa !5
  %3694 = getelementptr inbounds i32, ptr %12, i64 %3691
  %3695 = load i32, ptr %3694, align 4, !tbaa !5
  %3696 = add nsw i32 %3695, -1
  %3697 = icmp slt i32 %3693, %3696
  br i1 %3697, label %3698, label %3716

3698:                                             ; preds = %3690
  br i1 %3685, label %3708, label %3699

3699:                                             ; preds = %3698
  %3700 = shl i64 %3691, 32
  %3701 = add i64 %3700, -4294967296
  %3702 = ashr exact i64 %3701, 32
  %3703 = getelementptr inbounds i32, ptr %7, i64 %3702
  %3704 = load i32, ptr %3703, align 4, !tbaa !5
  %3705 = getelementptr inbounds i32, ptr %6, i64 %3691
  %3706 = load i32, ptr %3705, align 4, !tbaa !5
  %3707 = add nsw i32 %3706, %3704
  store i32 %3707, ptr %3705, align 4, !tbaa !5
  br label %3726

3708:                                             ; preds = %3681, %3698
  %3709 = phi i32 [ %3693, %3698 ], [ %3682, %3681 ]
  %3710 = phi ptr [ %3692, %3698 ], [ %4, %3681 ]
  %3711 = phi i64 [ %3691, %3698 ], [ 0, %3681 ]
  %3712 = add nsw i32 %3709, 1
  store i32 %3712, ptr %3710, align 4, !tbaa !5
  %3713 = getelementptr inbounds i32, ptr %7, i64 %3711
  %3714 = load i32, ptr %3713, align 4, !tbaa !5
  %3715 = getelementptr inbounds i32, ptr %6, i64 %3711
  br label %3726

3716:                                             ; preds = %3690
  %3717 = icmp eq i32 %3693, %3696
  br i1 %3717, label %3718, label %3724

3718:                                             ; preds = %3716
  store i32 0, ptr %3692, align 4, !tbaa !5
  %3719 = getelementptr inbounds i32, ptr %8, i64 %3691
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = getelementptr inbounds i32, ptr %6, i64 %3691
  store i32 %3720, ptr %3721, align 4, !tbaa !5
  %3722 = add nuw nsw i64 %3691, 1
  %3723 = icmp eq i64 %3722, %3450
  br i1 %3723, label %3731, label %3690, !llvm.loop !1062

3724:                                             ; preds = %3686, %3716
  %3725 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3726:                                             ; preds = %3699, %3708
  %3727 = phi ptr [ %3715, %3708 ], [ %3692, %3699 ]
  %3728 = phi i32 [ %3714, %3708 ], [ 1, %3699 ]
  %3729 = load i32, ptr %3727, align 4, !tbaa !5
  %3730 = add nsw i32 %3729, %3728
  store i32 %3730, ptr %3727, align 4, !tbaa !5
  br label %3731

3731:                                             ; preds = %3718, %3726, %3688, %3673
  %3732 = icmp eq i32 %3680, %5
  br i1 %3732, label %5579, label %3595, !llvm.loop !1063

3733:                                             ; preds = %3128
  %3734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1956, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

3735:                                             ; preds = %18
  %3736 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3737 = load ptr, ptr %3736, align 8, !tbaa !9
  %3738 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3739 = load ptr, ptr %3738, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3739, align 8, !tbaa !18
  %3740 = icmp eq i32 %13, 0
  br i1 %3740, label %3741, label %3746

3741:                                             ; preds = %3735
  %3742 = load double, ptr %3737, align 8, !tbaa !18
  %3743 = fcmp fast oeq double %3742, 0.000000e+00
  %3744 = tail call fast double @llvm.fabs.f64(double %3742)
  %3745 = select fast i1 %3743, double 0.000000e+00, double %3744
  store double %3745, ptr %3739, align 8, !tbaa !18
  br label %5579

3746:                                             ; preds = %3735
  switch i32 %1, label %4342 [
    i32 1, label %3747
    i32 0, label %4050
  ]

3747:                                             ; preds = %3746
  %3748 = getelementptr inbounds i32, ptr %3, i64 %19
  %3749 = load i32, ptr %3748, align 4, !tbaa !5
  %3750 = icmp eq i32 %3749, 0
  %3751 = icmp sgt i32 %5, 0
  br i1 %3750, label %3761, label %3752

3752:                                             ; preds = %3747
  br i1 %3751, label %3753, label %5579

3753:                                             ; preds = %3752
  %3754 = icmp sgt i32 %13, 1
  %3755 = icmp sgt i32 %13, 0
  %3756 = add i32 %13, -2
  %3757 = zext i32 %3756 to i64
  %3758 = zext i32 %13 to i64
  %3759 = add nuw i32 %5, 1
  %3760 = icmp eq i32 %13, 1
  br label %3909

3761:                                             ; preds = %3747
  br i1 %3751, label %3762, label %5579

3762:                                             ; preds = %3761
  %3763 = icmp sgt i32 %13, 1
  %3764 = icmp sgt i32 %13, 0
  %3765 = add i32 %13, -2
  %3766 = zext i32 %3765 to i64
  %3767 = zext i32 %13 to i64
  %3768 = add nuw i32 %5, 1
  %3769 = icmp eq i32 %13, 1
  br label %3770

3770:                                             ; preds = %3762, %3907
  %3771 = phi double [ 0.000000e+00, %3762 ], [ %3857, %3907 ]
  %3772 = phi i32 [ 0, %3762 ], [ %3859, %3907 ]
  %3773 = phi double [ 0.000000e+00, %3762 ], [ %3858, %3907 ]
  %3774 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3763, label %3775, label %3844

3775:                                             ; preds = %3770, %3834
  %3776 = phi i32 [ %3843, %3834 ], [ 0, %3770 ]
  %3777 = phi i64 [ %3785, %3834 ], [ %3767, %3770 ]
  %3778 = phi i64 [ %3842, %3834 ], [ %3766, %3770 ]
  %3779 = phi i32 [ %3840, %3834 ], [ %3774, %3770 ]
  %3780 = sub i32 %3765, %3776
  %3781 = tail call i32 @llvm.smin.i32(i32 %3780, i32 0)
  %3782 = sub i32 %3780, %3781
  %3783 = zext i32 %3782 to i64
  %3784 = add nuw nsw i64 %3783, 1
  %3785 = add nsw i64 %3777, -1
  %3786 = icmp ult i32 %3782, 31
  br i1 %3786, label %3822, label %3787

3787:                                             ; preds = %3775
  %3788 = and i64 %3784, 8589934560
  %3789 = sub i64 %3778, %3788
  br label %3790

3790:                                             ; preds = %3790, %3787
  %3791 = phi i64 [ 0, %3787 ], [ %3814, %3790 ]
  %3792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3810, %3790 ]
  %3793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3811, %3790 ]
  %3794 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3812, %3790 ]
  %3795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3813, %3790 ]
  %3796 = sub i64 %3778, %3791
  %3797 = getelementptr inbounds i32, ptr %9, i64 %3796
  %3798 = getelementptr inbounds i32, ptr %3797, i64 -7
  %3799 = load <8 x i32>, ptr %3798, align 4, !tbaa !5
  %3800 = shufflevector <8 x i32> %3799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3801 = getelementptr inbounds i32, ptr %3797, i64 -15
  %3802 = load <8 x i32>, ptr %3801, align 4, !tbaa !5
  %3803 = shufflevector <8 x i32> %3802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3804 = getelementptr inbounds i32, ptr %3797, i64 -23
  %3805 = load <8 x i32>, ptr %3804, align 4, !tbaa !5
  %3806 = shufflevector <8 x i32> %3805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3807 = getelementptr inbounds i32, ptr %3797, i64 -31
  %3808 = load <8 x i32>, ptr %3807, align 4, !tbaa !5
  %3809 = shufflevector <8 x i32> %3808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3810 = mul <8 x i32> %3800, %3792
  %3811 = mul <8 x i32> %3803, %3793
  %3812 = mul <8 x i32> %3806, %3794
  %3813 = mul <8 x i32> %3809, %3795
  %3814 = add nuw i64 %3791, 32
  %3815 = icmp eq i64 %3814, %3788
  br i1 %3815, label %3816, label %3790, !llvm.loop !1064

3816:                                             ; preds = %3790
  %3817 = mul <8 x i32> %3811, %3810
  %3818 = mul <8 x i32> %3812, %3817
  %3819 = mul <8 x i32> %3813, %3818
  %3820 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3819)
  %3821 = icmp eq i64 %3784, %3788
  br i1 %3821, label %3834, label %3822

3822:                                             ; preds = %3775, %3816
  %3823 = phi i64 [ %3778, %3775 ], [ %3789, %3816 ]
  %3824 = phi i32 [ 1, %3775 ], [ %3820, %3816 ]
  br label %3825

3825:                                             ; preds = %3822, %3825
  %3826 = phi i64 [ %3831, %3825 ], [ %3823, %3822 ]
  %3827 = phi i32 [ %3830, %3825 ], [ %3824, %3822 ]
  %3828 = getelementptr inbounds i32, ptr %9, i64 %3826
  %3829 = load i32, ptr %3828, align 4, !tbaa !5
  %3830 = mul nsw i32 %3829, %3827
  %3831 = add nsw i64 %3826, -1
  %3832 = trunc i64 %3826 to i32
  %3833 = icmp sgt i32 %3832, 0
  br i1 %3833, label %3825, label %3834, !llvm.loop !1065

3834:                                             ; preds = %3825, %3816
  %3835 = phi i32 [ %3820, %3816 ], [ %3830, %3825 ]
  %3836 = and i64 %3785, 4294967295
  %3837 = getelementptr inbounds i32, ptr %6, i64 %3836
  %3838 = load i32, ptr %3837, align 4, !tbaa !5
  %3839 = mul nsw i32 %3838, %3835
  %3840 = add nsw i32 %3839, %3779
  %3841 = icmp sgt i64 %3777, 2
  %3842 = add nsw i64 %3778, -1
  %3843 = add i32 %3776, 1
  br i1 %3841, label %3775, label %3844, !llvm.loop !1066

3844:                                             ; preds = %3834, %3770
  %3845 = phi i32 [ %3774, %3770 ], [ %3840, %3834 ]
  %3846 = sext i32 %3845 to i64
  %3847 = getelementptr inbounds double, ptr %2, i64 %3846
  %3848 = load double, ptr %3847, align 8, !tbaa !18
  %3849 = getelementptr inbounds double, ptr %3737, i64 %3846
  %3850 = load double, ptr %3849, align 8, !tbaa !18
  %3851 = fmul fast double %3850, %3848
  %3852 = fcmp fast uge double %3851, 0.000000e+00
  %3853 = fneg fast double %3851
  %3854 = tail call fast double @llvm.fabs.f64(double %3851)
  %3855 = fcmp fast oge double %3771, %3854
  %3856 = select nnan ninf i1 %3852, double %3851, double %3853
  %3857 = select i1 %3855, double %3771, double %3856
  store double %3857, ptr %3739, align 8, !tbaa !18
  %3858 = fadd fast double %3848, %3773
  %3859 = add nuw nsw i32 %3772, 1
  br i1 %3764, label %3860, label %3907

3860:                                             ; preds = %3844
  %3861 = load i32, ptr %4, align 4, !tbaa !5
  %3862 = load i32, ptr %12, align 4, !tbaa !5
  %3863 = add nsw i32 %3862, -1
  %3864 = icmp slt i32 %3861, %3863
  br i1 %3864, label %3884, label %3865

3865:                                             ; preds = %3860
  %3866 = icmp eq i32 %3861, %3863
  br i1 %3866, label %3867, label %3900

3867:                                             ; preds = %3865
  store i32 0, ptr %4, align 4, !tbaa !5
  %3868 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3868, ptr %6, align 4, !tbaa !5
  br i1 %3769, label %3907, label %3869

3869:                                             ; preds = %3867, %3894
  %3870 = phi i64 [ %3898, %3894 ], [ 1, %3867 ]
  %3871 = getelementptr inbounds i32, ptr %4, i64 %3870
  %3872 = load i32, ptr %3871, align 4, !tbaa !5
  %3873 = getelementptr inbounds i32, ptr %12, i64 %3870
  %3874 = load i32, ptr %3873, align 4, !tbaa !5
  %3875 = add nsw i32 %3874, -1
  %3876 = icmp slt i32 %3872, %3875
  br i1 %3876, label %3877, label %3892

3877:                                             ; preds = %3869
  br i1 %3864, label %3884, label %3878

3878:                                             ; preds = %3877
  %3879 = getelementptr inbounds i32, ptr %7, i64 %3870
  %3880 = load i32, ptr %3879, align 4, !tbaa !5
  %3881 = getelementptr inbounds i32, ptr %6, i64 %3870
  %3882 = load i32, ptr %3881, align 4, !tbaa !5
  %3883 = add nsw i32 %3882, %3880
  store i32 %3883, ptr %3881, align 4, !tbaa !5
  br label %3902

3884:                                             ; preds = %3860, %3877
  %3885 = phi i32 [ %3872, %3877 ], [ %3861, %3860 ]
  %3886 = phi ptr [ %3871, %3877 ], [ %4, %3860 ]
  %3887 = phi i64 [ %3870, %3877 ], [ 0, %3860 ]
  %3888 = add nsw i32 %3885, 1
  store i32 %3888, ptr %3886, align 4, !tbaa !5
  %3889 = getelementptr inbounds i32, ptr %7, i64 %3887
  %3890 = load i32, ptr %3889, align 4, !tbaa !5
  %3891 = getelementptr inbounds i32, ptr %6, i64 %3887
  br label %3902

3892:                                             ; preds = %3869
  %3893 = icmp eq i32 %3872, %3875
  br i1 %3893, label %3894, label %3900

3894:                                             ; preds = %3892
  store i32 0, ptr %3871, align 4, !tbaa !5
  %3895 = getelementptr inbounds i32, ptr %8, i64 %3870
  %3896 = load i32, ptr %3895, align 4, !tbaa !5
  %3897 = getelementptr inbounds i32, ptr %6, i64 %3870
  store i32 %3896, ptr %3897, align 4, !tbaa !5
  %3898 = add nuw nsw i64 %3870, 1
  %3899 = icmp eq i64 %3898, %3767
  br i1 %3899, label %3907, label %3869, !llvm.loop !1067

3900:                                             ; preds = %3865, %3892
  %3901 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3902:                                             ; preds = %3878, %3884
  %3903 = phi ptr [ %3891, %3884 ], [ %3871, %3878 ]
  %3904 = phi i32 [ %3890, %3884 ], [ 1, %3878 ]
  %3905 = load i32, ptr %3903, align 4, !tbaa !5
  %3906 = add nsw i32 %3905, %3904
  store i32 %3906, ptr %3903, align 4, !tbaa !5
  br label %3907

3907:                                             ; preds = %3894, %3902, %3867, %3844
  %3908 = icmp eq i32 %3859, %5
  br i1 %3908, label %5579, label %3770, !llvm.loop !1068

3909:                                             ; preds = %3753, %4048
  %3910 = phi double [ 0.000000e+00, %3753 ], [ %3996, %4048 ]
  %3911 = phi i32 [ 0, %3753 ], [ %3997, %4048 ]
  %3912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3754, label %3913, label %3982

3913:                                             ; preds = %3909, %3972
  %3914 = phi i32 [ %3981, %3972 ], [ 0, %3909 ]
  %3915 = phi i64 [ %3923, %3972 ], [ %3758, %3909 ]
  %3916 = phi i64 [ %3980, %3972 ], [ %3757, %3909 ]
  %3917 = phi i32 [ %3978, %3972 ], [ %3912, %3909 ]
  %3918 = sub i32 %3756, %3914
  %3919 = tail call i32 @llvm.smin.i32(i32 %3918, i32 0)
  %3920 = sub i32 %3918, %3919
  %3921 = zext i32 %3920 to i64
  %3922 = add nuw nsw i64 %3921, 1
  %3923 = add nsw i64 %3915, -1
  %3924 = icmp ult i32 %3920, 31
  br i1 %3924, label %3960, label %3925

3925:                                             ; preds = %3913
  %3926 = and i64 %3922, 8589934560
  %3927 = sub i64 %3916, %3926
  br label %3928

3928:                                             ; preds = %3928, %3925
  %3929 = phi i64 [ 0, %3925 ], [ %3952, %3928 ]
  %3930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3948, %3928 ]
  %3931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3949, %3928 ]
  %3932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3950, %3928 ]
  %3933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3951, %3928 ]
  %3934 = sub i64 %3916, %3929
  %3935 = getelementptr inbounds i32, ptr %11, i64 %3934
  %3936 = getelementptr inbounds i32, ptr %3935, i64 -7
  %3937 = load <8 x i32>, ptr %3936, align 4, !tbaa !5
  %3938 = shufflevector <8 x i32> %3937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3939 = getelementptr inbounds i32, ptr %3935, i64 -15
  %3940 = load <8 x i32>, ptr %3939, align 4, !tbaa !5
  %3941 = shufflevector <8 x i32> %3940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3942 = getelementptr inbounds i32, ptr %3935, i64 -23
  %3943 = load <8 x i32>, ptr %3942, align 4, !tbaa !5
  %3944 = shufflevector <8 x i32> %3943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3945 = getelementptr inbounds i32, ptr %3935, i64 -31
  %3946 = load <8 x i32>, ptr %3945, align 4, !tbaa !5
  %3947 = shufflevector <8 x i32> %3946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3948 = mul <8 x i32> %3938, %3930
  %3949 = mul <8 x i32> %3941, %3931
  %3950 = mul <8 x i32> %3944, %3932
  %3951 = mul <8 x i32> %3947, %3933
  %3952 = add nuw i64 %3929, 32
  %3953 = icmp eq i64 %3952, %3926
  br i1 %3953, label %3954, label %3928, !llvm.loop !1069

3954:                                             ; preds = %3928
  %3955 = mul <8 x i32> %3949, %3948
  %3956 = mul <8 x i32> %3950, %3955
  %3957 = mul <8 x i32> %3951, %3956
  %3958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3957)
  %3959 = icmp eq i64 %3922, %3926
  br i1 %3959, label %3972, label %3960

3960:                                             ; preds = %3913, %3954
  %3961 = phi i64 [ %3916, %3913 ], [ %3927, %3954 ]
  %3962 = phi i32 [ 1, %3913 ], [ %3958, %3954 ]
  br label %3963

3963:                                             ; preds = %3960, %3963
  %3964 = phi i64 [ %3969, %3963 ], [ %3961, %3960 ]
  %3965 = phi i32 [ %3968, %3963 ], [ %3962, %3960 ]
  %3966 = getelementptr inbounds i32, ptr %11, i64 %3964
  %3967 = load i32, ptr %3966, align 4, !tbaa !5
  %3968 = mul nsw i32 %3967, %3965
  %3969 = add nsw i64 %3964, -1
  %3970 = trunc i64 %3964 to i32
  %3971 = icmp sgt i32 %3970, 0
  br i1 %3971, label %3963, label %3972, !llvm.loop !1070

3972:                                             ; preds = %3963, %3954
  %3973 = phi i32 [ %3958, %3954 ], [ %3968, %3963 ]
  %3974 = and i64 %3923, 4294967295
  %3975 = getelementptr inbounds i32, ptr %6, i64 %3974
  %3976 = load i32, ptr %3975, align 4, !tbaa !5
  %3977 = mul nsw i32 %3976, %3973
  %3978 = add nsw i32 %3977, %3917
  %3979 = icmp sgt i64 %3915, 2
  %3980 = add nsw i64 %3916, -1
  %3981 = add i32 %3914, 1
  br i1 %3979, label %3913, label %3982, !llvm.loop !1071

3982:                                             ; preds = %3972, %3909
  %3983 = phi i32 [ %3912, %3909 ], [ %3978, %3972 ]
  %3984 = icmp slt i32 %3983, %5
  br i1 %3984, label %3987, label %3985

3985:                                             ; preds = %3982
  %3986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3987:                                             ; preds = %3982
  %3988 = sext i32 %3983 to i64
  %3989 = getelementptr inbounds double, ptr %3737, i64 %3988
  %3990 = load double, ptr %3989, align 8, !tbaa !18
  %3991 = fcmp fast uge double %3990, 0.000000e+00
  %3992 = fneg fast double %3990
  %3993 = tail call fast double @llvm.fabs.f64(double %3990)
  %3994 = fcmp fast oge double %3910, %3993
  %3995 = select nnan ninf i1 %3991, double %3990, double %3992
  %3996 = select i1 %3994, double %3910, double %3995
  store double %3996, ptr %3739, align 8, !tbaa !18
  %3997 = add nuw nsw i32 %3911, 1
  br i1 %3755, label %3998, label %4048

3998:                                             ; preds = %3987
  %3999 = load i32, ptr %4, align 4, !tbaa !5
  %4000 = load i32, ptr %12, align 4, !tbaa !5
  %4001 = add nsw i32 %4000, -1
  %4002 = icmp slt i32 %3999, %4001
  br i1 %4002, label %4025, label %4003

4003:                                             ; preds = %3998
  %4004 = icmp eq i32 %3999, %4001
  br i1 %4004, label %4005, label %4041

4005:                                             ; preds = %4003
  store i32 0, ptr %4, align 4, !tbaa !5
  %4006 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4006, ptr %6, align 4, !tbaa !5
  br i1 %3760, label %4048, label %4007

4007:                                             ; preds = %4005, %4035
  %4008 = phi i64 [ %4039, %4035 ], [ 1, %4005 ]
  %4009 = getelementptr inbounds i32, ptr %4, i64 %4008
  %4010 = load i32, ptr %4009, align 4, !tbaa !5
  %4011 = getelementptr inbounds i32, ptr %12, i64 %4008
  %4012 = load i32, ptr %4011, align 4, !tbaa !5
  %4013 = add nsw i32 %4012, -1
  %4014 = icmp slt i32 %4010, %4013
  br i1 %4014, label %4015, label %4033

4015:                                             ; preds = %4007
  br i1 %4002, label %4025, label %4016

4016:                                             ; preds = %4015
  %4017 = shl i64 %4008, 32
  %4018 = add i64 %4017, -4294967296
  %4019 = ashr exact i64 %4018, 32
  %4020 = getelementptr inbounds i32, ptr %7, i64 %4019
  %4021 = load i32, ptr %4020, align 4, !tbaa !5
  %4022 = getelementptr inbounds i32, ptr %6, i64 %4008
  %4023 = load i32, ptr %4022, align 4, !tbaa !5
  %4024 = add nsw i32 %4023, %4021
  store i32 %4024, ptr %4022, align 4, !tbaa !5
  br label %4043

4025:                                             ; preds = %3998, %4015
  %4026 = phi i32 [ %4010, %4015 ], [ %3999, %3998 ]
  %4027 = phi ptr [ %4009, %4015 ], [ %4, %3998 ]
  %4028 = phi i64 [ %4008, %4015 ], [ 0, %3998 ]
  %4029 = add nsw i32 %4026, 1
  store i32 %4029, ptr %4027, align 4, !tbaa !5
  %4030 = getelementptr inbounds i32, ptr %7, i64 %4028
  %4031 = load i32, ptr %4030, align 4, !tbaa !5
  %4032 = getelementptr inbounds i32, ptr %6, i64 %4028
  br label %4043

4033:                                             ; preds = %4007
  %4034 = icmp eq i32 %4010, %4013
  br i1 %4034, label %4035, label %4041

4035:                                             ; preds = %4033
  store i32 0, ptr %4009, align 4, !tbaa !5
  %4036 = getelementptr inbounds i32, ptr %8, i64 %4008
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = getelementptr inbounds i32, ptr %6, i64 %4008
  store i32 %4037, ptr %4038, align 4, !tbaa !5
  %4039 = add nuw nsw i64 %4008, 1
  %4040 = icmp eq i64 %4039, %3758
  br i1 %4040, label %4048, label %4007, !llvm.loop !1072

4041:                                             ; preds = %4003, %4033
  %4042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4043:                                             ; preds = %4016, %4025
  %4044 = phi ptr [ %4032, %4025 ], [ %4009, %4016 ]
  %4045 = phi i32 [ %4031, %4025 ], [ 1, %4016 ]
  %4046 = load i32, ptr %4044, align 4, !tbaa !5
  %4047 = add nsw i32 %4046, %4045
  store i32 %4047, ptr %4044, align 4, !tbaa !5
  br label %4048

4048:                                             ; preds = %4035, %4043, %4005, %3987
  %4049 = icmp eq i32 %3997, %5
  br i1 %4049, label %5579, label %3909, !llvm.loop !1073

4050:                                             ; preds = %3746
  %4051 = getelementptr inbounds i32, ptr %3, i64 %19
  %4052 = load i32, ptr %4051, align 4, !tbaa !5
  %4053 = icmp eq i32 %4052, 0
  %4054 = icmp sgt i32 %5, 0
  br i1 %4053, label %4064, label %4055

4055:                                             ; preds = %4050
  br i1 %4054, label %4056, label %5579

4056:                                             ; preds = %4055
  %4057 = icmp sgt i32 %13, 1
  %4058 = icmp sgt i32 %13, 0
  %4059 = add i32 %13, -2
  %4060 = zext i32 %4059 to i64
  %4061 = zext i32 %13 to i64
  %4062 = add nuw i32 %5, 1
  %4063 = icmp eq i32 %13, 1
  br label %4205

4064:                                             ; preds = %4050
  br i1 %4054, label %4065, label %5579

4065:                                             ; preds = %4064
  %4066 = icmp sgt i32 %13, 1
  %4067 = icmp sgt i32 %13, 0
  %4068 = add i32 %13, -2
  %4069 = zext i32 %4068 to i64
  %4070 = zext i32 %13 to i64
  %4071 = add nuw i32 %5, 1
  %4072 = icmp eq i32 %13, 1
  br label %4073

4073:                                             ; preds = %4065, %4203
  %4074 = phi double [ 0.000000e+00, %4065 ], [ %4153, %4203 ]
  %4075 = phi i32 [ 0, %4065 ], [ %4155, %4203 ]
  %4076 = phi double [ 0.000000e+00, %4065 ], [ %4154, %4203 ]
  %4077 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4066, label %4078, label %4147

4078:                                             ; preds = %4073, %4137
  %4079 = phi i32 [ %4146, %4137 ], [ 0, %4073 ]
  %4080 = phi i64 [ %4088, %4137 ], [ %4070, %4073 ]
  %4081 = phi i64 [ %4145, %4137 ], [ %4069, %4073 ]
  %4082 = phi i32 [ %4143, %4137 ], [ %4077, %4073 ]
  %4083 = sub i32 %4068, %4079
  %4084 = tail call i32 @llvm.smin.i32(i32 %4083, i32 0)
  %4085 = sub i32 %4083, %4084
  %4086 = zext i32 %4085 to i64
  %4087 = add nuw nsw i64 %4086, 1
  %4088 = add nsw i64 %4080, -1
  %4089 = icmp ult i32 %4085, 31
  br i1 %4089, label %4125, label %4090

4090:                                             ; preds = %4078
  %4091 = and i64 %4087, 8589934560
  %4092 = sub i64 %4081, %4091
  br label %4093

4093:                                             ; preds = %4093, %4090
  %4094 = phi i64 [ 0, %4090 ], [ %4117, %4093 ]
  %4095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4113, %4093 ]
  %4096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4114, %4093 ]
  %4097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4115, %4093 ]
  %4098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4116, %4093 ]
  %4099 = sub i64 %4081, %4094
  %4100 = getelementptr inbounds i32, ptr %9, i64 %4099
  %4101 = getelementptr inbounds i32, ptr %4100, i64 -7
  %4102 = load <8 x i32>, ptr %4101, align 4, !tbaa !5
  %4103 = shufflevector <8 x i32> %4102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4104 = getelementptr inbounds i32, ptr %4100, i64 -15
  %4105 = load <8 x i32>, ptr %4104, align 4, !tbaa !5
  %4106 = shufflevector <8 x i32> %4105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4107 = getelementptr inbounds i32, ptr %4100, i64 -23
  %4108 = load <8 x i32>, ptr %4107, align 4, !tbaa !5
  %4109 = shufflevector <8 x i32> %4108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4110 = getelementptr inbounds i32, ptr %4100, i64 -31
  %4111 = load <8 x i32>, ptr %4110, align 4, !tbaa !5
  %4112 = shufflevector <8 x i32> %4111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4113 = mul <8 x i32> %4103, %4095
  %4114 = mul <8 x i32> %4106, %4096
  %4115 = mul <8 x i32> %4109, %4097
  %4116 = mul <8 x i32> %4112, %4098
  %4117 = add nuw i64 %4094, 32
  %4118 = icmp eq i64 %4117, %4091
  br i1 %4118, label %4119, label %4093, !llvm.loop !1074

4119:                                             ; preds = %4093
  %4120 = mul <8 x i32> %4114, %4113
  %4121 = mul <8 x i32> %4115, %4120
  %4122 = mul <8 x i32> %4116, %4121
  %4123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4122)
  %4124 = icmp eq i64 %4087, %4091
  br i1 %4124, label %4137, label %4125

4125:                                             ; preds = %4078, %4119
  %4126 = phi i64 [ %4081, %4078 ], [ %4092, %4119 ]
  %4127 = phi i32 [ 1, %4078 ], [ %4123, %4119 ]
  br label %4128

4128:                                             ; preds = %4125, %4128
  %4129 = phi i64 [ %4134, %4128 ], [ %4126, %4125 ]
  %4130 = phi i32 [ %4133, %4128 ], [ %4127, %4125 ]
  %4131 = getelementptr inbounds i32, ptr %9, i64 %4129
  %4132 = load i32, ptr %4131, align 4, !tbaa !5
  %4133 = mul nsw i32 %4132, %4130
  %4134 = add nsw i64 %4129, -1
  %4135 = trunc i64 %4129 to i32
  %4136 = icmp sgt i32 %4135, 0
  br i1 %4136, label %4128, label %4137, !llvm.loop !1075

4137:                                             ; preds = %4128, %4119
  %4138 = phi i32 [ %4123, %4119 ], [ %4133, %4128 ]
  %4139 = and i64 %4088, 4294967295
  %4140 = getelementptr inbounds i32, ptr %6, i64 %4139
  %4141 = load i32, ptr %4140, align 4, !tbaa !5
  %4142 = mul nsw i32 %4141, %4138
  %4143 = add nsw i32 %4142, %4082
  %4144 = icmp sgt i64 %4080, 2
  %4145 = add nsw i64 %4081, -1
  %4146 = add i32 %4079, 1
  br i1 %4144, label %4078, label %4147, !llvm.loop !1076

4147:                                             ; preds = %4137, %4073
  %4148 = phi i32 [ %4077, %4073 ], [ %4143, %4137 ]
  %4149 = sext i32 %4148 to i64
  %4150 = getelementptr inbounds double, ptr %3737, i64 %4149
  %4151 = load double, ptr %4150, align 8, !tbaa !18
  %4152 = tail call fast double @llvm.fabs.f64(double %4151)
  %4153 = tail call fast double @llvm.maxnum.f64(double %4074, double %4152)
  store double %4153, ptr %3739, align 8, !tbaa !18
  %4154 = fadd fast double %4076, 1.000000e+00
  %4155 = add nuw nsw i32 %4075, 1
  br i1 %4067, label %4156, label %4203

4156:                                             ; preds = %4147
  %4157 = load i32, ptr %4, align 4, !tbaa !5
  %4158 = load i32, ptr %12, align 4, !tbaa !5
  %4159 = add nsw i32 %4158, -1
  %4160 = icmp slt i32 %4157, %4159
  br i1 %4160, label %4180, label %4161

4161:                                             ; preds = %4156
  %4162 = icmp eq i32 %4157, %4159
  br i1 %4162, label %4163, label %4196

4163:                                             ; preds = %4161
  store i32 0, ptr %4, align 4, !tbaa !5
  %4164 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4164, ptr %6, align 4, !tbaa !5
  br i1 %4072, label %4203, label %4165

4165:                                             ; preds = %4163, %4190
  %4166 = phi i64 [ %4194, %4190 ], [ 1, %4163 ]
  %4167 = getelementptr inbounds i32, ptr %4, i64 %4166
  %4168 = load i32, ptr %4167, align 4, !tbaa !5
  %4169 = getelementptr inbounds i32, ptr %12, i64 %4166
  %4170 = load i32, ptr %4169, align 4, !tbaa !5
  %4171 = add nsw i32 %4170, -1
  %4172 = icmp slt i32 %4168, %4171
  br i1 %4172, label %4173, label %4188

4173:                                             ; preds = %4165
  br i1 %4160, label %4180, label %4174

4174:                                             ; preds = %4173
  %4175 = getelementptr inbounds i32, ptr %7, i64 %4166
  %4176 = load i32, ptr %4175, align 4, !tbaa !5
  %4177 = getelementptr inbounds i32, ptr %6, i64 %4166
  %4178 = load i32, ptr %4177, align 4, !tbaa !5
  %4179 = add nsw i32 %4178, %4176
  store i32 %4179, ptr %4177, align 4, !tbaa !5
  br label %4198

4180:                                             ; preds = %4156, %4173
  %4181 = phi i32 [ %4168, %4173 ], [ %4157, %4156 ]
  %4182 = phi ptr [ %4167, %4173 ], [ %4, %4156 ]
  %4183 = phi i64 [ %4166, %4173 ], [ 0, %4156 ]
  %4184 = add nsw i32 %4181, 1
  store i32 %4184, ptr %4182, align 4, !tbaa !5
  %4185 = getelementptr inbounds i32, ptr %7, i64 %4183
  %4186 = load i32, ptr %4185, align 4, !tbaa !5
  %4187 = getelementptr inbounds i32, ptr %6, i64 %4183
  br label %4198

4188:                                             ; preds = %4165
  %4189 = icmp eq i32 %4168, %4171
  br i1 %4189, label %4190, label %4196

4190:                                             ; preds = %4188
  store i32 0, ptr %4167, align 4, !tbaa !5
  %4191 = getelementptr inbounds i32, ptr %8, i64 %4166
  %4192 = load i32, ptr %4191, align 4, !tbaa !5
  %4193 = getelementptr inbounds i32, ptr %6, i64 %4166
  store i32 %4192, ptr %4193, align 4, !tbaa !5
  %4194 = add nuw nsw i64 %4166, 1
  %4195 = icmp eq i64 %4194, %4070
  br i1 %4195, label %4203, label %4165, !llvm.loop !1077

4196:                                             ; preds = %4161, %4188
  %4197 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4198:                                             ; preds = %4174, %4180
  %4199 = phi ptr [ %4187, %4180 ], [ %4167, %4174 ]
  %4200 = phi i32 [ %4186, %4180 ], [ 1, %4174 ]
  %4201 = load i32, ptr %4199, align 4, !tbaa !5
  %4202 = add nsw i32 %4201, %4200
  store i32 %4202, ptr %4199, align 4, !tbaa !5
  br label %4203

4203:                                             ; preds = %4190, %4198, %4163, %4147
  %4204 = icmp eq i32 %4155, %5
  br i1 %4204, label %5579, label %4073, !llvm.loop !1078

4205:                                             ; preds = %4056, %4340
  %4206 = phi double [ 0.000000e+00, %4056 ], [ %4288, %4340 ]
  %4207 = phi i32 [ 0, %4056 ], [ %4289, %4340 ]
  %4208 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4057, label %4209, label %4278

4209:                                             ; preds = %4205, %4268
  %4210 = phi i32 [ %4277, %4268 ], [ 0, %4205 ]
  %4211 = phi i64 [ %4219, %4268 ], [ %4061, %4205 ]
  %4212 = phi i64 [ %4276, %4268 ], [ %4060, %4205 ]
  %4213 = phi i32 [ %4274, %4268 ], [ %4208, %4205 ]
  %4214 = sub i32 %4059, %4210
  %4215 = tail call i32 @llvm.smin.i32(i32 %4214, i32 0)
  %4216 = sub i32 %4214, %4215
  %4217 = zext i32 %4216 to i64
  %4218 = add nuw nsw i64 %4217, 1
  %4219 = add nsw i64 %4211, -1
  %4220 = icmp ult i32 %4216, 31
  br i1 %4220, label %4256, label %4221

4221:                                             ; preds = %4209
  %4222 = and i64 %4218, 8589934560
  %4223 = sub i64 %4212, %4222
  br label %4224

4224:                                             ; preds = %4224, %4221
  %4225 = phi i64 [ 0, %4221 ], [ %4248, %4224 ]
  %4226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4244, %4224 ]
  %4227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4245, %4224 ]
  %4228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4246, %4224 ]
  %4229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4247, %4224 ]
  %4230 = sub i64 %4212, %4225
  %4231 = getelementptr inbounds i32, ptr %11, i64 %4230
  %4232 = getelementptr inbounds i32, ptr %4231, i64 -7
  %4233 = load <8 x i32>, ptr %4232, align 4, !tbaa !5
  %4234 = shufflevector <8 x i32> %4233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4235 = getelementptr inbounds i32, ptr %4231, i64 -15
  %4236 = load <8 x i32>, ptr %4235, align 4, !tbaa !5
  %4237 = shufflevector <8 x i32> %4236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4238 = getelementptr inbounds i32, ptr %4231, i64 -23
  %4239 = load <8 x i32>, ptr %4238, align 4, !tbaa !5
  %4240 = shufflevector <8 x i32> %4239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4241 = getelementptr inbounds i32, ptr %4231, i64 -31
  %4242 = load <8 x i32>, ptr %4241, align 4, !tbaa !5
  %4243 = shufflevector <8 x i32> %4242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4244 = mul <8 x i32> %4234, %4226
  %4245 = mul <8 x i32> %4237, %4227
  %4246 = mul <8 x i32> %4240, %4228
  %4247 = mul <8 x i32> %4243, %4229
  %4248 = add nuw i64 %4225, 32
  %4249 = icmp eq i64 %4248, %4222
  br i1 %4249, label %4250, label %4224, !llvm.loop !1079

4250:                                             ; preds = %4224
  %4251 = mul <8 x i32> %4245, %4244
  %4252 = mul <8 x i32> %4246, %4251
  %4253 = mul <8 x i32> %4247, %4252
  %4254 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4253)
  %4255 = icmp eq i64 %4218, %4222
  br i1 %4255, label %4268, label %4256

4256:                                             ; preds = %4209, %4250
  %4257 = phi i64 [ %4212, %4209 ], [ %4223, %4250 ]
  %4258 = phi i32 [ 1, %4209 ], [ %4254, %4250 ]
  br label %4259

4259:                                             ; preds = %4256, %4259
  %4260 = phi i64 [ %4265, %4259 ], [ %4257, %4256 ]
  %4261 = phi i32 [ %4264, %4259 ], [ %4258, %4256 ]
  %4262 = getelementptr inbounds i32, ptr %11, i64 %4260
  %4263 = load i32, ptr %4262, align 4, !tbaa !5
  %4264 = mul nsw i32 %4263, %4261
  %4265 = add nsw i64 %4260, -1
  %4266 = trunc i64 %4260 to i32
  %4267 = icmp sgt i32 %4266, 0
  br i1 %4267, label %4259, label %4268, !llvm.loop !1080

4268:                                             ; preds = %4259, %4250
  %4269 = phi i32 [ %4254, %4250 ], [ %4264, %4259 ]
  %4270 = and i64 %4219, 4294967295
  %4271 = getelementptr inbounds i32, ptr %6, i64 %4270
  %4272 = load i32, ptr %4271, align 4, !tbaa !5
  %4273 = mul nsw i32 %4272, %4269
  %4274 = add nsw i32 %4273, %4213
  %4275 = icmp sgt i64 %4211, 2
  %4276 = add nsw i64 %4212, -1
  %4277 = add i32 %4210, 1
  br i1 %4275, label %4209, label %4278, !llvm.loop !1081

4278:                                             ; preds = %4268, %4205
  %4279 = phi i32 [ %4208, %4205 ], [ %4274, %4268 ]
  %4280 = icmp slt i32 %4279, %5
  br i1 %4280, label %4283, label %4281

4281:                                             ; preds = %4278
  %4282 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

4283:                                             ; preds = %4278
  %4284 = sext i32 %4279 to i64
  %4285 = getelementptr inbounds double, ptr %3737, i64 %4284
  %4286 = load double, ptr %4285, align 8, !tbaa !18
  %4287 = tail call fast double @llvm.fabs.f64(double %4286)
  %4288 = tail call fast double @llvm.maxnum.f64(double %4206, double %4287)
  store double %4288, ptr %3739, align 8, !tbaa !18
  %4289 = add nuw nsw i32 %4207, 1
  br i1 %4058, label %4290, label %4340

4290:                                             ; preds = %4283
  %4291 = load i32, ptr %4, align 4, !tbaa !5
  %4292 = load i32, ptr %12, align 4, !tbaa !5
  %4293 = add nsw i32 %4292, -1
  %4294 = icmp slt i32 %4291, %4293
  br i1 %4294, label %4317, label %4295

4295:                                             ; preds = %4290
  %4296 = icmp eq i32 %4291, %4293
  br i1 %4296, label %4297, label %4333

4297:                                             ; preds = %4295
  store i32 0, ptr %4, align 4, !tbaa !5
  %4298 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4298, ptr %6, align 4, !tbaa !5
  br i1 %4063, label %4340, label %4299

4299:                                             ; preds = %4297, %4327
  %4300 = phi i64 [ %4331, %4327 ], [ 1, %4297 ]
  %4301 = getelementptr inbounds i32, ptr %4, i64 %4300
  %4302 = load i32, ptr %4301, align 4, !tbaa !5
  %4303 = getelementptr inbounds i32, ptr %12, i64 %4300
  %4304 = load i32, ptr %4303, align 4, !tbaa !5
  %4305 = add nsw i32 %4304, -1
  %4306 = icmp slt i32 %4302, %4305
  br i1 %4306, label %4307, label %4325

4307:                                             ; preds = %4299
  br i1 %4294, label %4317, label %4308

4308:                                             ; preds = %4307
  %4309 = shl i64 %4300, 32
  %4310 = add i64 %4309, -4294967296
  %4311 = ashr exact i64 %4310, 32
  %4312 = getelementptr inbounds i32, ptr %7, i64 %4311
  %4313 = load i32, ptr %4312, align 4, !tbaa !5
  %4314 = getelementptr inbounds i32, ptr %6, i64 %4300
  %4315 = load i32, ptr %4314, align 4, !tbaa !5
  %4316 = add nsw i32 %4315, %4313
  store i32 %4316, ptr %4314, align 4, !tbaa !5
  br label %4335

4317:                                             ; preds = %4290, %4307
  %4318 = phi i32 [ %4302, %4307 ], [ %4291, %4290 ]
  %4319 = phi ptr [ %4301, %4307 ], [ %4, %4290 ]
  %4320 = phi i64 [ %4300, %4307 ], [ 0, %4290 ]
  %4321 = add nsw i32 %4318, 1
  store i32 %4321, ptr %4319, align 4, !tbaa !5
  %4322 = getelementptr inbounds i32, ptr %7, i64 %4320
  %4323 = load i32, ptr %4322, align 4, !tbaa !5
  %4324 = getelementptr inbounds i32, ptr %6, i64 %4320
  br label %4335

4325:                                             ; preds = %4299
  %4326 = icmp eq i32 %4302, %4305
  br i1 %4326, label %4327, label %4333

4327:                                             ; preds = %4325
  store i32 0, ptr %4301, align 4, !tbaa !5
  %4328 = getelementptr inbounds i32, ptr %8, i64 %4300
  %4329 = load i32, ptr %4328, align 4, !tbaa !5
  %4330 = getelementptr inbounds i32, ptr %6, i64 %4300
  store i32 %4329, ptr %4330, align 4, !tbaa !5
  %4331 = add nuw nsw i64 %4300, 1
  %4332 = icmp eq i64 %4331, %4061
  br i1 %4332, label %4340, label %4299, !llvm.loop !1082

4333:                                             ; preds = %4295, %4325
  %4334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4335:                                             ; preds = %4308, %4317
  %4336 = phi ptr [ %4324, %4317 ], [ %4301, %4308 ]
  %4337 = phi i32 [ %4323, %4317 ], [ 1, %4308 ]
  %4338 = load i32, ptr %4336, align 4, !tbaa !5
  %4339 = add nsw i32 %4338, %4337
  store i32 %4339, ptr %4336, align 4, !tbaa !5
  br label %4340

4340:                                             ; preds = %4327, %4335, %4297, %4283
  %4341 = icmp eq i32 %4289, %5
  br i1 %4341, label %5579, label %4205, !llvm.loop !1083

4342:                                             ; preds = %3746
  %4343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1960, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

4344:                                             ; preds = %18
  %4345 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4346 = load ptr, ptr %4345, align 8, !tbaa !9
  %4347 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4348 = load ptr, ptr %4347, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4348, align 4, !tbaa !162
  %4349 = icmp eq i32 %13, 0
  br i1 %4349, label %4350, label %4356

4350:                                             ; preds = %4344
  %4351 = load double, ptr %4346, align 8, !tbaa !18
  %4352 = fptrunc double %4351 to float
  %4353 = fcmp fast oeq float %4352, 0.000000e+00
  %4354 = tail call fast float @llvm.fabs.f32(float %4352)
  %4355 = select fast i1 %4353, float 0.000000e+00, float %4354
  store float %4355, ptr %4348, align 4, !tbaa !162
  br label %5579

4356:                                             ; preds = %4344
  switch i32 %1, label %4962 [
    i32 1, label %4357
    i32 0, label %4668
  ]

4357:                                             ; preds = %4356
  %4358 = getelementptr inbounds i32, ptr %3, i64 %19
  %4359 = load i32, ptr %4358, align 4, !tbaa !5
  %4360 = icmp eq i32 %4359, 0
  %4361 = icmp sgt i32 %5, 0
  br i1 %4360, label %4371, label %4362

4362:                                             ; preds = %4357
  br i1 %4361, label %4363, label %5579

4363:                                             ; preds = %4362
  %4364 = icmp sgt i32 %13, 1
  %4365 = icmp sgt i32 %13, 0
  %4366 = add i32 %13, -2
  %4367 = zext i32 %4366 to i64
  %4368 = zext i32 %13 to i64
  %4369 = add nuw i32 %5, 1
  %4370 = icmp eq i32 %13, 1
  br label %4523

4371:                                             ; preds = %4357
  br i1 %4361, label %4372, label %5579

4372:                                             ; preds = %4371
  %4373 = icmp sgt i32 %13, 1
  %4374 = icmp sgt i32 %13, 0
  %4375 = add i32 %13, -2
  %4376 = zext i32 %4375 to i64
  %4377 = zext i32 %13 to i64
  %4378 = add nuw i32 %5, 1
  %4379 = icmp eq i32 %13, 1
  br label %4380

4380:                                             ; preds = %4372, %4521
  %4381 = phi float [ 0.000000e+00, %4372 ], [ %4471, %4521 ]
  %4382 = phi i32 [ 0, %4372 ], [ %4473, %4521 ]
  %4383 = phi double [ 0.000000e+00, %4372 ], [ %4472, %4521 ]
  %4384 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4373, label %4385, label %4454

4385:                                             ; preds = %4380, %4444
  %4386 = phi i32 [ %4453, %4444 ], [ 0, %4380 ]
  %4387 = phi i64 [ %4395, %4444 ], [ %4377, %4380 ]
  %4388 = phi i64 [ %4452, %4444 ], [ %4376, %4380 ]
  %4389 = phi i32 [ %4450, %4444 ], [ %4384, %4380 ]
  %4390 = sub i32 %4375, %4386
  %4391 = tail call i32 @llvm.smin.i32(i32 %4390, i32 0)
  %4392 = sub i32 %4390, %4391
  %4393 = zext i32 %4392 to i64
  %4394 = add nuw nsw i64 %4393, 1
  %4395 = add nsw i64 %4387, -1
  %4396 = icmp ult i32 %4392, 31
  br i1 %4396, label %4432, label %4397

4397:                                             ; preds = %4385
  %4398 = and i64 %4394, 8589934560
  %4399 = sub i64 %4388, %4398
  br label %4400

4400:                                             ; preds = %4400, %4397
  %4401 = phi i64 [ 0, %4397 ], [ %4424, %4400 ]
  %4402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4420, %4400 ]
  %4403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4421, %4400 ]
  %4404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4422, %4400 ]
  %4405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4423, %4400 ]
  %4406 = sub i64 %4388, %4401
  %4407 = getelementptr inbounds i32, ptr %9, i64 %4406
  %4408 = getelementptr inbounds i32, ptr %4407, i64 -7
  %4409 = load <8 x i32>, ptr %4408, align 4, !tbaa !5
  %4410 = shufflevector <8 x i32> %4409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4411 = getelementptr inbounds i32, ptr %4407, i64 -15
  %4412 = load <8 x i32>, ptr %4411, align 4, !tbaa !5
  %4413 = shufflevector <8 x i32> %4412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4414 = getelementptr inbounds i32, ptr %4407, i64 -23
  %4415 = load <8 x i32>, ptr %4414, align 4, !tbaa !5
  %4416 = shufflevector <8 x i32> %4415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4417 = getelementptr inbounds i32, ptr %4407, i64 -31
  %4418 = load <8 x i32>, ptr %4417, align 4, !tbaa !5
  %4419 = shufflevector <8 x i32> %4418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4420 = mul <8 x i32> %4410, %4402
  %4421 = mul <8 x i32> %4413, %4403
  %4422 = mul <8 x i32> %4416, %4404
  %4423 = mul <8 x i32> %4419, %4405
  %4424 = add nuw i64 %4401, 32
  %4425 = icmp eq i64 %4424, %4398
  br i1 %4425, label %4426, label %4400, !llvm.loop !1084

4426:                                             ; preds = %4400
  %4427 = mul <8 x i32> %4421, %4420
  %4428 = mul <8 x i32> %4422, %4427
  %4429 = mul <8 x i32> %4423, %4428
  %4430 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4429)
  %4431 = icmp eq i64 %4394, %4398
  br i1 %4431, label %4444, label %4432

4432:                                             ; preds = %4385, %4426
  %4433 = phi i64 [ %4388, %4385 ], [ %4399, %4426 ]
  %4434 = phi i32 [ 1, %4385 ], [ %4430, %4426 ]
  br label %4435

4435:                                             ; preds = %4432, %4435
  %4436 = phi i64 [ %4441, %4435 ], [ %4433, %4432 ]
  %4437 = phi i32 [ %4440, %4435 ], [ %4434, %4432 ]
  %4438 = getelementptr inbounds i32, ptr %9, i64 %4436
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = mul nsw i32 %4439, %4437
  %4441 = add nsw i64 %4436, -1
  %4442 = trunc i64 %4436 to i32
  %4443 = icmp sgt i32 %4442, 0
  br i1 %4443, label %4435, label %4444, !llvm.loop !1085

4444:                                             ; preds = %4435, %4426
  %4445 = phi i32 [ %4430, %4426 ], [ %4440, %4435 ]
  %4446 = and i64 %4395, 4294967295
  %4447 = getelementptr inbounds i32, ptr %6, i64 %4446
  %4448 = load i32, ptr %4447, align 4, !tbaa !5
  %4449 = mul nsw i32 %4448, %4445
  %4450 = add nsw i32 %4449, %4389
  %4451 = icmp sgt i64 %4387, 2
  %4452 = add nsw i64 %4388, -1
  %4453 = add i32 %4386, 1
  br i1 %4451, label %4385, label %4454, !llvm.loop !1086

4454:                                             ; preds = %4444, %4380
  %4455 = phi i32 [ %4384, %4380 ], [ %4450, %4444 ]
  %4456 = sext i32 %4455 to i64
  %4457 = getelementptr inbounds double, ptr %2, i64 %4456
  %4458 = load double, ptr %4457, align 8, !tbaa !18
  %4459 = getelementptr inbounds double, ptr %4346, i64 %4456
  %4460 = load double, ptr %4459, align 8, !tbaa !18
  %4461 = fptrunc double %4460 to float
  %4462 = fpext float %4381 to double
  %4463 = fpext float %4461 to double
  %4464 = fmul fast double %4458, %4463
  %4465 = fcmp fast uge double %4464, 0.000000e+00
  %4466 = fneg fast double %4464
  %4467 = tail call fast double @llvm.fabs.f64(double %4464)
  %4468 = fcmp fast ole double %4467, %4462
  %4469 = select nnan ninf i1 %4465, double %4464, double %4466
  %4470 = fptrunc double %4469 to float
  %4471 = select i1 %4468, float %4381, float %4470
  %4472 = fadd fast double %4458, %4383
  %4473 = add nuw nsw i32 %4382, 1
  br i1 %4374, label %4474, label %4521

4474:                                             ; preds = %4454
  %4475 = load i32, ptr %4, align 4, !tbaa !5
  %4476 = load i32, ptr %12, align 4, !tbaa !5
  %4477 = add nsw i32 %4476, -1
  %4478 = icmp slt i32 %4475, %4477
  br i1 %4478, label %4498, label %4479

4479:                                             ; preds = %4474
  %4480 = icmp eq i32 %4475, %4477
  br i1 %4480, label %4481, label %4514

4481:                                             ; preds = %4479
  store i32 0, ptr %4, align 4, !tbaa !5
  %4482 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4482, ptr %6, align 4, !tbaa !5
  br i1 %4379, label %4521, label %4483

4483:                                             ; preds = %4481, %4508
  %4484 = phi i64 [ %4512, %4508 ], [ 1, %4481 ]
  %4485 = getelementptr inbounds i32, ptr %4, i64 %4484
  %4486 = load i32, ptr %4485, align 4, !tbaa !5
  %4487 = getelementptr inbounds i32, ptr %12, i64 %4484
  %4488 = load i32, ptr %4487, align 4, !tbaa !5
  %4489 = add nsw i32 %4488, -1
  %4490 = icmp slt i32 %4486, %4489
  br i1 %4490, label %4491, label %4506

4491:                                             ; preds = %4483
  br i1 %4478, label %4498, label %4492

4492:                                             ; preds = %4491
  %4493 = getelementptr inbounds i32, ptr %7, i64 %4484
  %4494 = load i32, ptr %4493, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %6, i64 %4484
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = add nsw i32 %4496, %4494
  store i32 %4497, ptr %4495, align 4, !tbaa !5
  br label %4516

4498:                                             ; preds = %4474, %4491
  %4499 = phi i32 [ %4486, %4491 ], [ %4475, %4474 ]
  %4500 = phi ptr [ %4485, %4491 ], [ %4, %4474 ]
  %4501 = phi i64 [ %4484, %4491 ], [ 0, %4474 ]
  %4502 = add nsw i32 %4499, 1
  store i32 %4502, ptr %4500, align 4, !tbaa !5
  %4503 = getelementptr inbounds i32, ptr %7, i64 %4501
  %4504 = load i32, ptr %4503, align 4, !tbaa !5
  %4505 = getelementptr inbounds i32, ptr %6, i64 %4501
  br label %4516

4506:                                             ; preds = %4483
  %4507 = icmp eq i32 %4486, %4489
  br i1 %4507, label %4508, label %4514

4508:                                             ; preds = %4506
  store i32 0, ptr %4485, align 4, !tbaa !5
  %4509 = getelementptr inbounds i32, ptr %8, i64 %4484
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = getelementptr inbounds i32, ptr %6, i64 %4484
  store i32 %4510, ptr %4511, align 4, !tbaa !5
  %4512 = add nuw nsw i64 %4484, 1
  %4513 = icmp eq i64 %4512, %4377
  br i1 %4513, label %4521, label %4483, !llvm.loop !1087

4514:                                             ; preds = %4479, %4506
  store float %4471, ptr %4348, align 4, !tbaa !162
  %4515 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4516:                                             ; preds = %4492, %4498
  %4517 = phi ptr [ %4505, %4498 ], [ %4485, %4492 ]
  %4518 = phi i32 [ %4504, %4498 ], [ 1, %4492 ]
  %4519 = load i32, ptr %4517, align 4, !tbaa !5
  %4520 = add nsw i32 %4519, %4518
  store i32 %4520, ptr %4517, align 4, !tbaa !5
  br label %4521

4521:                                             ; preds = %4508, %4516, %4481, %4454
  %4522 = icmp eq i32 %4473, %5
  br i1 %4522, label %5577, label %4380, !llvm.loop !1088

4523:                                             ; preds = %4363, %4666
  %4524 = phi float [ 0.000000e+00, %4363 ], [ %4614, %4666 ]
  %4525 = phi i32 [ 0, %4363 ], [ %4615, %4666 ]
  %4526 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4364, label %4527, label %4596

4527:                                             ; preds = %4523, %4586
  %4528 = phi i32 [ %4595, %4586 ], [ 0, %4523 ]
  %4529 = phi i64 [ %4537, %4586 ], [ %4368, %4523 ]
  %4530 = phi i64 [ %4594, %4586 ], [ %4367, %4523 ]
  %4531 = phi i32 [ %4592, %4586 ], [ %4526, %4523 ]
  %4532 = sub i32 %4366, %4528
  %4533 = tail call i32 @llvm.smin.i32(i32 %4532, i32 0)
  %4534 = sub i32 %4532, %4533
  %4535 = zext i32 %4534 to i64
  %4536 = add nuw nsw i64 %4535, 1
  %4537 = add nsw i64 %4529, -1
  %4538 = icmp ult i32 %4534, 31
  br i1 %4538, label %4574, label %4539

4539:                                             ; preds = %4527
  %4540 = and i64 %4536, 8589934560
  %4541 = sub i64 %4530, %4540
  br label %4542

4542:                                             ; preds = %4542, %4539
  %4543 = phi i64 [ 0, %4539 ], [ %4566, %4542 ]
  %4544 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4562, %4542 ]
  %4545 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4563, %4542 ]
  %4546 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4564, %4542 ]
  %4547 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4565, %4542 ]
  %4548 = sub i64 %4530, %4543
  %4549 = getelementptr inbounds i32, ptr %11, i64 %4548
  %4550 = getelementptr inbounds i32, ptr %4549, i64 -7
  %4551 = load <8 x i32>, ptr %4550, align 4, !tbaa !5
  %4552 = shufflevector <8 x i32> %4551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4553 = getelementptr inbounds i32, ptr %4549, i64 -15
  %4554 = load <8 x i32>, ptr %4553, align 4, !tbaa !5
  %4555 = shufflevector <8 x i32> %4554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4556 = getelementptr inbounds i32, ptr %4549, i64 -23
  %4557 = load <8 x i32>, ptr %4556, align 4, !tbaa !5
  %4558 = shufflevector <8 x i32> %4557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4559 = getelementptr inbounds i32, ptr %4549, i64 -31
  %4560 = load <8 x i32>, ptr %4559, align 4, !tbaa !5
  %4561 = shufflevector <8 x i32> %4560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4562 = mul <8 x i32> %4552, %4544
  %4563 = mul <8 x i32> %4555, %4545
  %4564 = mul <8 x i32> %4558, %4546
  %4565 = mul <8 x i32> %4561, %4547
  %4566 = add nuw i64 %4543, 32
  %4567 = icmp eq i64 %4566, %4540
  br i1 %4567, label %4568, label %4542, !llvm.loop !1089

4568:                                             ; preds = %4542
  %4569 = mul <8 x i32> %4563, %4562
  %4570 = mul <8 x i32> %4564, %4569
  %4571 = mul <8 x i32> %4565, %4570
  %4572 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4571)
  %4573 = icmp eq i64 %4536, %4540
  br i1 %4573, label %4586, label %4574

4574:                                             ; preds = %4527, %4568
  %4575 = phi i64 [ %4530, %4527 ], [ %4541, %4568 ]
  %4576 = phi i32 [ 1, %4527 ], [ %4572, %4568 ]
  br label %4577

4577:                                             ; preds = %4574, %4577
  %4578 = phi i64 [ %4583, %4577 ], [ %4575, %4574 ]
  %4579 = phi i32 [ %4582, %4577 ], [ %4576, %4574 ]
  %4580 = getelementptr inbounds i32, ptr %11, i64 %4578
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = mul nsw i32 %4581, %4579
  %4583 = add nsw i64 %4578, -1
  %4584 = trunc i64 %4578 to i32
  %4585 = icmp sgt i32 %4584, 0
  br i1 %4585, label %4577, label %4586, !llvm.loop !1090

4586:                                             ; preds = %4577, %4568
  %4587 = phi i32 [ %4572, %4568 ], [ %4582, %4577 ]
  %4588 = and i64 %4537, 4294967295
  %4589 = getelementptr inbounds i32, ptr %6, i64 %4588
  %4590 = load i32, ptr %4589, align 4, !tbaa !5
  %4591 = mul nsw i32 %4590, %4587
  %4592 = add nsw i32 %4591, %4531
  %4593 = icmp sgt i64 %4529, 2
  %4594 = add nsw i64 %4530, -1
  %4595 = add i32 %4528, 1
  br i1 %4593, label %4527, label %4596, !llvm.loop !1091

4596:                                             ; preds = %4586, %4523
  %4597 = phi i32 [ %4526, %4523 ], [ %4592, %4586 ]
  %4598 = icmp slt i32 %4597, %5
  br i1 %4598, label %4601, label %4599

4599:                                             ; preds = %4596
  %4600 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

4601:                                             ; preds = %4596
  %4602 = sext i32 %4597 to i64
  %4603 = getelementptr inbounds double, ptr %4346, i64 %4602
  %4604 = load double, ptr %4603, align 8, !tbaa !18
  %4605 = fptrunc double %4604 to float
  %4606 = fpext float %4524 to double
  %4607 = fpext float %4605 to double
  %4608 = fcmp fast uge float %4605, 0.000000e+00
  %4609 = fneg fast double %4607
  %4610 = select fast i1 %4608, double %4607, double %4609
  %4611 = fcmp fast ole double %4610, %4606
  %4612 = fptrunc double %4609 to float
  %4613 = select i1 %4608, float %4605, float %4612
  %4614 = select i1 %4611, float %4524, float %4613
  store float %4614, ptr %4348, align 4, !tbaa !162
  %4615 = add nuw nsw i32 %4525, 1
  br i1 %4365, label %4616, label %4666

4616:                                             ; preds = %4601
  %4617 = load i32, ptr %4, align 4, !tbaa !5
  %4618 = load i32, ptr %12, align 4, !tbaa !5
  %4619 = add nsw i32 %4618, -1
  %4620 = icmp slt i32 %4617, %4619
  br i1 %4620, label %4643, label %4621

4621:                                             ; preds = %4616
  %4622 = icmp eq i32 %4617, %4619
  br i1 %4622, label %4623, label %4659

4623:                                             ; preds = %4621
  store i32 0, ptr %4, align 4, !tbaa !5
  %4624 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4624, ptr %6, align 4, !tbaa !5
  br i1 %4370, label %4666, label %4625

4625:                                             ; preds = %4623, %4653
  %4626 = phi i64 [ %4657, %4653 ], [ 1, %4623 ]
  %4627 = getelementptr inbounds i32, ptr %4, i64 %4626
  %4628 = load i32, ptr %4627, align 4, !tbaa !5
  %4629 = getelementptr inbounds i32, ptr %12, i64 %4626
  %4630 = load i32, ptr %4629, align 4, !tbaa !5
  %4631 = add nsw i32 %4630, -1
  %4632 = icmp slt i32 %4628, %4631
  br i1 %4632, label %4633, label %4651

4633:                                             ; preds = %4625
  br i1 %4620, label %4643, label %4634

4634:                                             ; preds = %4633
  %4635 = shl i64 %4626, 32
  %4636 = add i64 %4635, -4294967296
  %4637 = ashr exact i64 %4636, 32
  %4638 = getelementptr inbounds i32, ptr %7, i64 %4637
  %4639 = load i32, ptr %4638, align 4, !tbaa !5
  %4640 = getelementptr inbounds i32, ptr %6, i64 %4626
  %4641 = load i32, ptr %4640, align 4, !tbaa !5
  %4642 = add nsw i32 %4641, %4639
  store i32 %4642, ptr %4640, align 4, !tbaa !5
  br label %4661

4643:                                             ; preds = %4616, %4633
  %4644 = phi i32 [ %4628, %4633 ], [ %4617, %4616 ]
  %4645 = phi ptr [ %4627, %4633 ], [ %4, %4616 ]
  %4646 = phi i64 [ %4626, %4633 ], [ 0, %4616 ]
  %4647 = add nsw i32 %4644, 1
  store i32 %4647, ptr %4645, align 4, !tbaa !5
  %4648 = getelementptr inbounds i32, ptr %7, i64 %4646
  %4649 = load i32, ptr %4648, align 4, !tbaa !5
  %4650 = getelementptr inbounds i32, ptr %6, i64 %4646
  br label %4661

4651:                                             ; preds = %4625
  %4652 = icmp eq i32 %4628, %4631
  br i1 %4652, label %4653, label %4659

4653:                                             ; preds = %4651
  store i32 0, ptr %4627, align 4, !tbaa !5
  %4654 = getelementptr inbounds i32, ptr %8, i64 %4626
  %4655 = load i32, ptr %4654, align 4, !tbaa !5
  %4656 = getelementptr inbounds i32, ptr %6, i64 %4626
  store i32 %4655, ptr %4656, align 4, !tbaa !5
  %4657 = add nuw nsw i64 %4626, 1
  %4658 = icmp eq i64 %4657, %4368
  br i1 %4658, label %4666, label %4625, !llvm.loop !1092

4659:                                             ; preds = %4621, %4651
  %4660 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4661:                                             ; preds = %4634, %4643
  %4662 = phi ptr [ %4650, %4643 ], [ %4627, %4634 ]
  %4663 = phi i32 [ %4649, %4643 ], [ 1, %4634 ]
  %4664 = load i32, ptr %4662, align 4, !tbaa !5
  %4665 = add nsw i32 %4664, %4663
  store i32 %4665, ptr %4662, align 4, !tbaa !5
  br label %4666

4666:                                             ; preds = %4653, %4661, %4623, %4601
  %4667 = icmp eq i32 %4615, %5
  br i1 %4667, label %5579, label %4523, !llvm.loop !1093

4668:                                             ; preds = %4356
  %4669 = getelementptr inbounds i32, ptr %3, i64 %19
  %4670 = load i32, ptr %4669, align 4, !tbaa !5
  %4671 = icmp eq i32 %4670, 0
  %4672 = icmp sgt i32 %5, 0
  br i1 %4671, label %4682, label %4673

4673:                                             ; preds = %4668
  br i1 %4672, label %4674, label %5579

4674:                                             ; preds = %4673
  %4675 = icmp sgt i32 %13, 1
  %4676 = icmp sgt i32 %13, 0
  %4677 = add i32 %13, -2
  %4678 = zext i32 %4677 to i64
  %4679 = zext i32 %13 to i64
  %4680 = add nuw i32 %5, 1
  %4681 = icmp eq i32 %13, 1
  br label %4824

4682:                                             ; preds = %4668
  br i1 %4672, label %4683, label %5579

4683:                                             ; preds = %4682
  %4684 = icmp sgt i32 %13, 1
  %4685 = icmp sgt i32 %13, 0
  %4686 = add i32 %13, -2
  %4687 = zext i32 %4686 to i64
  %4688 = zext i32 %13 to i64
  %4689 = add nuw i32 %5, 1
  %4690 = icmp eq i32 %13, 1
  br label %4691

4691:                                             ; preds = %4683, %4822
  %4692 = phi float [ 0.000000e+00, %4683 ], [ %4772, %4822 ]
  %4693 = phi i32 [ 0, %4683 ], [ %4774, %4822 ]
  %4694 = phi double [ 0.000000e+00, %4683 ], [ %4773, %4822 ]
  %4695 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4684, label %4696, label %4765

4696:                                             ; preds = %4691, %4755
  %4697 = phi i32 [ %4764, %4755 ], [ 0, %4691 ]
  %4698 = phi i64 [ %4706, %4755 ], [ %4688, %4691 ]
  %4699 = phi i64 [ %4763, %4755 ], [ %4687, %4691 ]
  %4700 = phi i32 [ %4761, %4755 ], [ %4695, %4691 ]
  %4701 = sub i32 %4686, %4697
  %4702 = tail call i32 @llvm.smin.i32(i32 %4701, i32 0)
  %4703 = sub i32 %4701, %4702
  %4704 = zext i32 %4703 to i64
  %4705 = add nuw nsw i64 %4704, 1
  %4706 = add nsw i64 %4698, -1
  %4707 = icmp ult i32 %4703, 31
  br i1 %4707, label %4743, label %4708

4708:                                             ; preds = %4696
  %4709 = and i64 %4705, 8589934560
  %4710 = sub i64 %4699, %4709
  br label %4711

4711:                                             ; preds = %4711, %4708
  %4712 = phi i64 [ 0, %4708 ], [ %4735, %4711 ]
  %4713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4731, %4711 ]
  %4714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4732, %4711 ]
  %4715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4733, %4711 ]
  %4716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4734, %4711 ]
  %4717 = sub i64 %4699, %4712
  %4718 = getelementptr inbounds i32, ptr %9, i64 %4717
  %4719 = getelementptr inbounds i32, ptr %4718, i64 -7
  %4720 = load <8 x i32>, ptr %4719, align 4, !tbaa !5
  %4721 = shufflevector <8 x i32> %4720, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4722 = getelementptr inbounds i32, ptr %4718, i64 -15
  %4723 = load <8 x i32>, ptr %4722, align 4, !tbaa !5
  %4724 = shufflevector <8 x i32> %4723, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4725 = getelementptr inbounds i32, ptr %4718, i64 -23
  %4726 = load <8 x i32>, ptr %4725, align 4, !tbaa !5
  %4727 = shufflevector <8 x i32> %4726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4728 = getelementptr inbounds i32, ptr %4718, i64 -31
  %4729 = load <8 x i32>, ptr %4728, align 4, !tbaa !5
  %4730 = shufflevector <8 x i32> %4729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4731 = mul <8 x i32> %4721, %4713
  %4732 = mul <8 x i32> %4724, %4714
  %4733 = mul <8 x i32> %4727, %4715
  %4734 = mul <8 x i32> %4730, %4716
  %4735 = add nuw i64 %4712, 32
  %4736 = icmp eq i64 %4735, %4709
  br i1 %4736, label %4737, label %4711, !llvm.loop !1094

4737:                                             ; preds = %4711
  %4738 = mul <8 x i32> %4732, %4731
  %4739 = mul <8 x i32> %4733, %4738
  %4740 = mul <8 x i32> %4734, %4739
  %4741 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4740)
  %4742 = icmp eq i64 %4705, %4709
  br i1 %4742, label %4755, label %4743

4743:                                             ; preds = %4696, %4737
  %4744 = phi i64 [ %4699, %4696 ], [ %4710, %4737 ]
  %4745 = phi i32 [ 1, %4696 ], [ %4741, %4737 ]
  br label %4746

4746:                                             ; preds = %4743, %4746
  %4747 = phi i64 [ %4752, %4746 ], [ %4744, %4743 ]
  %4748 = phi i32 [ %4751, %4746 ], [ %4745, %4743 ]
  %4749 = getelementptr inbounds i32, ptr %9, i64 %4747
  %4750 = load i32, ptr %4749, align 4, !tbaa !5
  %4751 = mul nsw i32 %4750, %4748
  %4752 = add nsw i64 %4747, -1
  %4753 = trunc i64 %4747 to i32
  %4754 = icmp sgt i32 %4753, 0
  br i1 %4754, label %4746, label %4755, !llvm.loop !1095

4755:                                             ; preds = %4746, %4737
  %4756 = phi i32 [ %4741, %4737 ], [ %4751, %4746 ]
  %4757 = and i64 %4706, 4294967295
  %4758 = getelementptr inbounds i32, ptr %6, i64 %4757
  %4759 = load i32, ptr %4758, align 4, !tbaa !5
  %4760 = mul nsw i32 %4759, %4756
  %4761 = add nsw i32 %4760, %4700
  %4762 = icmp sgt i64 %4698, 2
  %4763 = add nsw i64 %4699, -1
  %4764 = add i32 %4697, 1
  br i1 %4762, label %4696, label %4765, !llvm.loop !1096

4765:                                             ; preds = %4755, %4691
  %4766 = phi i32 [ %4695, %4691 ], [ %4761, %4755 ]
  %4767 = sext i32 %4766 to i64
  %4768 = getelementptr inbounds double, ptr %4346, i64 %4767
  %4769 = load double, ptr %4768, align 8, !tbaa !18
  %4770 = fptrunc double %4769 to float
  %4771 = tail call fast float @llvm.fabs.f32(float %4770)
  %4772 = tail call fast float @llvm.maxnum.f32(float %4692, float %4771)
  %4773 = fadd fast double %4694, 1.000000e+00
  %4774 = add nuw nsw i32 %4693, 1
  br i1 %4685, label %4775, label %4822

4775:                                             ; preds = %4765
  %4776 = load i32, ptr %4, align 4, !tbaa !5
  %4777 = load i32, ptr %12, align 4, !tbaa !5
  %4778 = add nsw i32 %4777, -1
  %4779 = icmp slt i32 %4776, %4778
  br i1 %4779, label %4799, label %4780

4780:                                             ; preds = %4775
  %4781 = icmp eq i32 %4776, %4778
  br i1 %4781, label %4782, label %4815

4782:                                             ; preds = %4780
  store i32 0, ptr %4, align 4, !tbaa !5
  %4783 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4783, ptr %6, align 4, !tbaa !5
  br i1 %4690, label %4822, label %4784

4784:                                             ; preds = %4782, %4809
  %4785 = phi i64 [ %4813, %4809 ], [ 1, %4782 ]
  %4786 = getelementptr inbounds i32, ptr %4, i64 %4785
  %4787 = load i32, ptr %4786, align 4, !tbaa !5
  %4788 = getelementptr inbounds i32, ptr %12, i64 %4785
  %4789 = load i32, ptr %4788, align 4, !tbaa !5
  %4790 = add nsw i32 %4789, -1
  %4791 = icmp slt i32 %4787, %4790
  br i1 %4791, label %4792, label %4807

4792:                                             ; preds = %4784
  br i1 %4779, label %4799, label %4793

4793:                                             ; preds = %4792
  %4794 = getelementptr inbounds i32, ptr %7, i64 %4785
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = getelementptr inbounds i32, ptr %6, i64 %4785
  %4797 = load i32, ptr %4796, align 4, !tbaa !5
  %4798 = add nsw i32 %4797, %4795
  store i32 %4798, ptr %4796, align 4, !tbaa !5
  br label %4817

4799:                                             ; preds = %4775, %4792
  %4800 = phi i32 [ %4787, %4792 ], [ %4776, %4775 ]
  %4801 = phi ptr [ %4786, %4792 ], [ %4, %4775 ]
  %4802 = phi i64 [ %4785, %4792 ], [ 0, %4775 ]
  %4803 = add nsw i32 %4800, 1
  store i32 %4803, ptr %4801, align 4, !tbaa !5
  %4804 = getelementptr inbounds i32, ptr %7, i64 %4802
  %4805 = load i32, ptr %4804, align 4, !tbaa !5
  %4806 = getelementptr inbounds i32, ptr %6, i64 %4802
  br label %4817

4807:                                             ; preds = %4784
  %4808 = icmp eq i32 %4787, %4790
  br i1 %4808, label %4809, label %4815

4809:                                             ; preds = %4807
  store i32 0, ptr %4786, align 4, !tbaa !5
  %4810 = getelementptr inbounds i32, ptr %8, i64 %4785
  %4811 = load i32, ptr %4810, align 4, !tbaa !5
  %4812 = getelementptr inbounds i32, ptr %6, i64 %4785
  store i32 %4811, ptr %4812, align 4, !tbaa !5
  %4813 = add nuw nsw i64 %4785, 1
  %4814 = icmp eq i64 %4813, %4688
  br i1 %4814, label %4822, label %4784, !llvm.loop !1097

4815:                                             ; preds = %4780, %4807
  store float %4772, ptr %4348, align 4, !tbaa !162
  %4816 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4817:                                             ; preds = %4793, %4799
  %4818 = phi ptr [ %4806, %4799 ], [ %4786, %4793 ]
  %4819 = phi i32 [ %4805, %4799 ], [ 1, %4793 ]
  %4820 = load i32, ptr %4818, align 4, !tbaa !5
  %4821 = add nsw i32 %4820, %4819
  store i32 %4821, ptr %4818, align 4, !tbaa !5
  br label %4822

4822:                                             ; preds = %4809, %4817, %4782, %4765
  %4823 = icmp eq i32 %4774, %5
  br i1 %4823, label %5578, label %4691, !llvm.loop !1098

4824:                                             ; preds = %4674, %4960
  %4825 = phi float [ 0.000000e+00, %4674 ], [ %4908, %4960 ]
  %4826 = phi i32 [ 0, %4674 ], [ %4909, %4960 ]
  %4827 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4675, label %4828, label %4897

4828:                                             ; preds = %4824, %4887
  %4829 = phi i32 [ %4896, %4887 ], [ 0, %4824 ]
  %4830 = phi i64 [ %4838, %4887 ], [ %4679, %4824 ]
  %4831 = phi i64 [ %4895, %4887 ], [ %4678, %4824 ]
  %4832 = phi i32 [ %4893, %4887 ], [ %4827, %4824 ]
  %4833 = sub i32 %4677, %4829
  %4834 = tail call i32 @llvm.smin.i32(i32 %4833, i32 0)
  %4835 = sub i32 %4833, %4834
  %4836 = zext i32 %4835 to i64
  %4837 = add nuw nsw i64 %4836, 1
  %4838 = add nsw i64 %4830, -1
  %4839 = icmp ult i32 %4835, 31
  br i1 %4839, label %4875, label %4840

4840:                                             ; preds = %4828
  %4841 = and i64 %4837, 8589934560
  %4842 = sub i64 %4831, %4841
  br label %4843

4843:                                             ; preds = %4843, %4840
  %4844 = phi i64 [ 0, %4840 ], [ %4867, %4843 ]
  %4845 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4863, %4843 ]
  %4846 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4864, %4843 ]
  %4847 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4865, %4843 ]
  %4848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4866, %4843 ]
  %4849 = sub i64 %4831, %4844
  %4850 = getelementptr inbounds i32, ptr %11, i64 %4849
  %4851 = getelementptr inbounds i32, ptr %4850, i64 -7
  %4852 = load <8 x i32>, ptr %4851, align 4, !tbaa !5
  %4853 = shufflevector <8 x i32> %4852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4854 = getelementptr inbounds i32, ptr %4850, i64 -15
  %4855 = load <8 x i32>, ptr %4854, align 4, !tbaa !5
  %4856 = shufflevector <8 x i32> %4855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4857 = getelementptr inbounds i32, ptr %4850, i64 -23
  %4858 = load <8 x i32>, ptr %4857, align 4, !tbaa !5
  %4859 = shufflevector <8 x i32> %4858, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4860 = getelementptr inbounds i32, ptr %4850, i64 -31
  %4861 = load <8 x i32>, ptr %4860, align 4, !tbaa !5
  %4862 = shufflevector <8 x i32> %4861, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4863 = mul <8 x i32> %4853, %4845
  %4864 = mul <8 x i32> %4856, %4846
  %4865 = mul <8 x i32> %4859, %4847
  %4866 = mul <8 x i32> %4862, %4848
  %4867 = add nuw i64 %4844, 32
  %4868 = icmp eq i64 %4867, %4841
  br i1 %4868, label %4869, label %4843, !llvm.loop !1099

4869:                                             ; preds = %4843
  %4870 = mul <8 x i32> %4864, %4863
  %4871 = mul <8 x i32> %4865, %4870
  %4872 = mul <8 x i32> %4866, %4871
  %4873 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4872)
  %4874 = icmp eq i64 %4837, %4841
  br i1 %4874, label %4887, label %4875

4875:                                             ; preds = %4828, %4869
  %4876 = phi i64 [ %4831, %4828 ], [ %4842, %4869 ]
  %4877 = phi i32 [ 1, %4828 ], [ %4873, %4869 ]
  br label %4878

4878:                                             ; preds = %4875, %4878
  %4879 = phi i64 [ %4884, %4878 ], [ %4876, %4875 ]
  %4880 = phi i32 [ %4883, %4878 ], [ %4877, %4875 ]
  %4881 = getelementptr inbounds i32, ptr %11, i64 %4879
  %4882 = load i32, ptr %4881, align 4, !tbaa !5
  %4883 = mul nsw i32 %4882, %4880
  %4884 = add nsw i64 %4879, -1
  %4885 = trunc i64 %4879 to i32
  %4886 = icmp sgt i32 %4885, 0
  br i1 %4886, label %4878, label %4887, !llvm.loop !1100

4887:                                             ; preds = %4878, %4869
  %4888 = phi i32 [ %4873, %4869 ], [ %4883, %4878 ]
  %4889 = and i64 %4838, 4294967295
  %4890 = getelementptr inbounds i32, ptr %6, i64 %4889
  %4891 = load i32, ptr %4890, align 4, !tbaa !5
  %4892 = mul nsw i32 %4891, %4888
  %4893 = add nsw i32 %4892, %4832
  %4894 = icmp sgt i64 %4830, 2
  %4895 = add nsw i64 %4831, -1
  %4896 = add i32 %4829, 1
  br i1 %4894, label %4828, label %4897, !llvm.loop !1101

4897:                                             ; preds = %4887, %4824
  %4898 = phi i32 [ %4827, %4824 ], [ %4893, %4887 ]
  %4899 = icmp slt i32 %4898, %5
  br i1 %4899, label %4902, label %4900

4900:                                             ; preds = %4897
  %4901 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

4902:                                             ; preds = %4897
  %4903 = sext i32 %4898 to i64
  %4904 = getelementptr inbounds double, ptr %4346, i64 %4903
  %4905 = load double, ptr %4904, align 8, !tbaa !18
  %4906 = fptrunc double %4905 to float
  %4907 = tail call fast float @llvm.fabs.f32(float %4906)
  %4908 = tail call fast float @llvm.maxnum.f32(float %4825, float %4907)
  store float %4908, ptr %4348, align 4, !tbaa !162
  %4909 = add nuw nsw i32 %4826, 1
  br i1 %4676, label %4910, label %4960

4910:                                             ; preds = %4902
  %4911 = load i32, ptr %4, align 4, !tbaa !5
  %4912 = load i32, ptr %12, align 4, !tbaa !5
  %4913 = add nsw i32 %4912, -1
  %4914 = icmp slt i32 %4911, %4913
  br i1 %4914, label %4937, label %4915

4915:                                             ; preds = %4910
  %4916 = icmp eq i32 %4911, %4913
  br i1 %4916, label %4917, label %4953

4917:                                             ; preds = %4915
  store i32 0, ptr %4, align 4, !tbaa !5
  %4918 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4918, ptr %6, align 4, !tbaa !5
  br i1 %4681, label %4960, label %4919

4919:                                             ; preds = %4917, %4947
  %4920 = phi i64 [ %4951, %4947 ], [ 1, %4917 ]
  %4921 = getelementptr inbounds i32, ptr %4, i64 %4920
  %4922 = load i32, ptr %4921, align 4, !tbaa !5
  %4923 = getelementptr inbounds i32, ptr %12, i64 %4920
  %4924 = load i32, ptr %4923, align 4, !tbaa !5
  %4925 = add nsw i32 %4924, -1
  %4926 = icmp slt i32 %4922, %4925
  br i1 %4926, label %4927, label %4945

4927:                                             ; preds = %4919
  br i1 %4914, label %4937, label %4928

4928:                                             ; preds = %4927
  %4929 = shl i64 %4920, 32
  %4930 = add i64 %4929, -4294967296
  %4931 = ashr exact i64 %4930, 32
  %4932 = getelementptr inbounds i32, ptr %7, i64 %4931
  %4933 = load i32, ptr %4932, align 4, !tbaa !5
  %4934 = getelementptr inbounds i32, ptr %6, i64 %4920
  %4935 = load i32, ptr %4934, align 4, !tbaa !5
  %4936 = add nsw i32 %4935, %4933
  store i32 %4936, ptr %4934, align 4, !tbaa !5
  br label %4955

4937:                                             ; preds = %4910, %4927
  %4938 = phi i32 [ %4922, %4927 ], [ %4911, %4910 ]
  %4939 = phi ptr [ %4921, %4927 ], [ %4, %4910 ]
  %4940 = phi i64 [ %4920, %4927 ], [ 0, %4910 ]
  %4941 = add nsw i32 %4938, 1
  store i32 %4941, ptr %4939, align 4, !tbaa !5
  %4942 = getelementptr inbounds i32, ptr %7, i64 %4940
  %4943 = load i32, ptr %4942, align 4, !tbaa !5
  %4944 = getelementptr inbounds i32, ptr %6, i64 %4940
  br label %4955

4945:                                             ; preds = %4919
  %4946 = icmp eq i32 %4922, %4925
  br i1 %4946, label %4947, label %4953

4947:                                             ; preds = %4945
  store i32 0, ptr %4921, align 4, !tbaa !5
  %4948 = getelementptr inbounds i32, ptr %8, i64 %4920
  %4949 = load i32, ptr %4948, align 4, !tbaa !5
  %4950 = getelementptr inbounds i32, ptr %6, i64 %4920
  store i32 %4949, ptr %4950, align 4, !tbaa !5
  %4951 = add nuw nsw i64 %4920, 1
  %4952 = icmp eq i64 %4951, %4679
  br i1 %4952, label %4960, label %4919, !llvm.loop !1102

4953:                                             ; preds = %4915, %4945
  %4954 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4955:                                             ; preds = %4928, %4937
  %4956 = phi ptr [ %4944, %4937 ], [ %4921, %4928 ]
  %4957 = phi i32 [ %4943, %4937 ], [ 1, %4928 ]
  %4958 = load i32, ptr %4956, align 4, !tbaa !5
  %4959 = add nsw i32 %4958, %4957
  store i32 %4959, ptr %4956, align 4, !tbaa !5
  br label %4960

4960:                                             ; preds = %4947, %4955, %4917, %4902
  %4961 = icmp eq i32 %4909, %5
  br i1 %4961, label %5579, label %4824, !llvm.loop !1103

4962:                                             ; preds = %4356
  %4963 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1964, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

4964:                                             ; preds = %18
  %4965 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4966 = load ptr, ptr %4965, align 8, !tbaa !9
  %4967 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4968 = load ptr, ptr %4967, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4968, align 8, !tbaa !18
  %4969 = icmp eq i32 %13, 0
  br i1 %4969, label %4970, label %4975

4970:                                             ; preds = %4964
  %4971 = load double, ptr %4966, align 8, !tbaa !18
  %4972 = fcmp fast oeq double %4971, 0.000000e+00
  %4973 = tail call fast double @llvm.fabs.f64(double %4971)
  %4974 = select fast i1 %4972, double 0.000000e+00, double %4973
  store double %4974, ptr %4968, align 8, !tbaa !18
  br label %5579

4975:                                             ; preds = %4964
  switch i32 %1, label %5571 [
    i32 1, label %4976
    i32 0, label %5279
  ]

4976:                                             ; preds = %4975
  %4977 = getelementptr inbounds i32, ptr %3, i64 %19
  %4978 = load i32, ptr %4977, align 4, !tbaa !5
  %4979 = icmp eq i32 %4978, 0
  %4980 = icmp sgt i32 %5, 0
  br i1 %4979, label %4990, label %4981

4981:                                             ; preds = %4976
  br i1 %4980, label %4982, label %5579

4982:                                             ; preds = %4981
  %4983 = icmp sgt i32 %13, 1
  %4984 = icmp sgt i32 %13, 0
  %4985 = add i32 %13, -2
  %4986 = zext i32 %4985 to i64
  %4987 = zext i32 %13 to i64
  %4988 = add nuw i32 %5, 1
  %4989 = icmp eq i32 %13, 1
  br label %5138

4990:                                             ; preds = %4976
  br i1 %4980, label %4991, label %5579

4991:                                             ; preds = %4990
  %4992 = icmp sgt i32 %13, 1
  %4993 = icmp sgt i32 %13, 0
  %4994 = add i32 %13, -2
  %4995 = zext i32 %4994 to i64
  %4996 = zext i32 %13 to i64
  %4997 = add nuw i32 %5, 1
  %4998 = icmp eq i32 %13, 1
  br label %4999

4999:                                             ; preds = %4991, %5136
  %5000 = phi double [ 0.000000e+00, %4991 ], [ %5086, %5136 ]
  %5001 = phi i32 [ 0, %4991 ], [ %5088, %5136 ]
  %5002 = phi double [ 0.000000e+00, %4991 ], [ %5087, %5136 ]
  %5003 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4992, label %5004, label %5073

5004:                                             ; preds = %4999, %5063
  %5005 = phi i32 [ %5072, %5063 ], [ 0, %4999 ]
  %5006 = phi i64 [ %5014, %5063 ], [ %4996, %4999 ]
  %5007 = phi i64 [ %5071, %5063 ], [ %4995, %4999 ]
  %5008 = phi i32 [ %5069, %5063 ], [ %5003, %4999 ]
  %5009 = sub i32 %4994, %5005
  %5010 = tail call i32 @llvm.smin.i32(i32 %5009, i32 0)
  %5011 = sub i32 %5009, %5010
  %5012 = zext i32 %5011 to i64
  %5013 = add nuw nsw i64 %5012, 1
  %5014 = add nsw i64 %5006, -1
  %5015 = icmp ult i32 %5011, 31
  br i1 %5015, label %5051, label %5016

5016:                                             ; preds = %5004
  %5017 = and i64 %5013, 8589934560
  %5018 = sub i64 %5007, %5017
  br label %5019

5019:                                             ; preds = %5019, %5016
  %5020 = phi i64 [ 0, %5016 ], [ %5043, %5019 ]
  %5021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5039, %5019 ]
  %5022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5040, %5019 ]
  %5023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5041, %5019 ]
  %5024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5042, %5019 ]
  %5025 = sub i64 %5007, %5020
  %5026 = getelementptr inbounds i32, ptr %9, i64 %5025
  %5027 = getelementptr inbounds i32, ptr %5026, i64 -7
  %5028 = load <8 x i32>, ptr %5027, align 4, !tbaa !5
  %5029 = shufflevector <8 x i32> %5028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5030 = getelementptr inbounds i32, ptr %5026, i64 -15
  %5031 = load <8 x i32>, ptr %5030, align 4, !tbaa !5
  %5032 = shufflevector <8 x i32> %5031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5033 = getelementptr inbounds i32, ptr %5026, i64 -23
  %5034 = load <8 x i32>, ptr %5033, align 4, !tbaa !5
  %5035 = shufflevector <8 x i32> %5034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5036 = getelementptr inbounds i32, ptr %5026, i64 -31
  %5037 = load <8 x i32>, ptr %5036, align 4, !tbaa !5
  %5038 = shufflevector <8 x i32> %5037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5039 = mul <8 x i32> %5029, %5021
  %5040 = mul <8 x i32> %5032, %5022
  %5041 = mul <8 x i32> %5035, %5023
  %5042 = mul <8 x i32> %5038, %5024
  %5043 = add nuw i64 %5020, 32
  %5044 = icmp eq i64 %5043, %5017
  br i1 %5044, label %5045, label %5019, !llvm.loop !1104

5045:                                             ; preds = %5019
  %5046 = mul <8 x i32> %5040, %5039
  %5047 = mul <8 x i32> %5041, %5046
  %5048 = mul <8 x i32> %5042, %5047
  %5049 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5048)
  %5050 = icmp eq i64 %5013, %5017
  br i1 %5050, label %5063, label %5051

5051:                                             ; preds = %5004, %5045
  %5052 = phi i64 [ %5007, %5004 ], [ %5018, %5045 ]
  %5053 = phi i32 [ 1, %5004 ], [ %5049, %5045 ]
  br label %5054

5054:                                             ; preds = %5051, %5054
  %5055 = phi i64 [ %5060, %5054 ], [ %5052, %5051 ]
  %5056 = phi i32 [ %5059, %5054 ], [ %5053, %5051 ]
  %5057 = getelementptr inbounds i32, ptr %9, i64 %5055
  %5058 = load i32, ptr %5057, align 4, !tbaa !5
  %5059 = mul nsw i32 %5058, %5056
  %5060 = add nsw i64 %5055, -1
  %5061 = trunc i64 %5055 to i32
  %5062 = icmp sgt i32 %5061, 0
  br i1 %5062, label %5054, label %5063, !llvm.loop !1105

5063:                                             ; preds = %5054, %5045
  %5064 = phi i32 [ %5049, %5045 ], [ %5059, %5054 ]
  %5065 = and i64 %5014, 4294967295
  %5066 = getelementptr inbounds i32, ptr %6, i64 %5065
  %5067 = load i32, ptr %5066, align 4, !tbaa !5
  %5068 = mul nsw i32 %5067, %5064
  %5069 = add nsw i32 %5068, %5008
  %5070 = icmp sgt i64 %5006, 2
  %5071 = add nsw i64 %5007, -1
  %5072 = add i32 %5005, 1
  br i1 %5070, label %5004, label %5073, !llvm.loop !1106

5073:                                             ; preds = %5063, %4999
  %5074 = phi i32 [ %5003, %4999 ], [ %5069, %5063 ]
  %5075 = sext i32 %5074 to i64
  %5076 = getelementptr inbounds double, ptr %2, i64 %5075
  %5077 = load double, ptr %5076, align 8, !tbaa !18
  %5078 = getelementptr inbounds double, ptr %4966, i64 %5075
  %5079 = load double, ptr %5078, align 8, !tbaa !18
  %5080 = fmul fast double %5079, %5077
  %5081 = fcmp fast uge double %5080, 0.000000e+00
  %5082 = fneg fast double %5080
  %5083 = tail call fast double @llvm.fabs.f64(double %5080)
  %5084 = fcmp fast oge double %5000, %5083
  %5085 = select nnan ninf i1 %5081, double %5080, double %5082
  %5086 = select i1 %5084, double %5000, double %5085
  store double %5086, ptr %4968, align 8, !tbaa !18
  %5087 = fadd fast double %5077, %5002
  %5088 = add nuw nsw i32 %5001, 1
  br i1 %4993, label %5089, label %5136

5089:                                             ; preds = %5073
  %5090 = load i32, ptr %4, align 4, !tbaa !5
  %5091 = load i32, ptr %12, align 4, !tbaa !5
  %5092 = add nsw i32 %5091, -1
  %5093 = icmp slt i32 %5090, %5092
  br i1 %5093, label %5113, label %5094

5094:                                             ; preds = %5089
  %5095 = icmp eq i32 %5090, %5092
  br i1 %5095, label %5096, label %5129

5096:                                             ; preds = %5094
  store i32 0, ptr %4, align 4, !tbaa !5
  %5097 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5097, ptr %6, align 4, !tbaa !5
  br i1 %4998, label %5136, label %5098

5098:                                             ; preds = %5096, %5123
  %5099 = phi i64 [ %5127, %5123 ], [ 1, %5096 ]
  %5100 = getelementptr inbounds i32, ptr %4, i64 %5099
  %5101 = load i32, ptr %5100, align 4, !tbaa !5
  %5102 = getelementptr inbounds i32, ptr %12, i64 %5099
  %5103 = load i32, ptr %5102, align 4, !tbaa !5
  %5104 = add nsw i32 %5103, -1
  %5105 = icmp slt i32 %5101, %5104
  br i1 %5105, label %5106, label %5121

5106:                                             ; preds = %5098
  br i1 %5093, label %5113, label %5107

5107:                                             ; preds = %5106
  %5108 = getelementptr inbounds i32, ptr %7, i64 %5099
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = getelementptr inbounds i32, ptr %6, i64 %5099
  %5111 = load i32, ptr %5110, align 4, !tbaa !5
  %5112 = add nsw i32 %5111, %5109
  store i32 %5112, ptr %5110, align 4, !tbaa !5
  br label %5131

5113:                                             ; preds = %5089, %5106
  %5114 = phi i32 [ %5101, %5106 ], [ %5090, %5089 ]
  %5115 = phi ptr [ %5100, %5106 ], [ %4, %5089 ]
  %5116 = phi i64 [ %5099, %5106 ], [ 0, %5089 ]
  %5117 = add nsw i32 %5114, 1
  store i32 %5117, ptr %5115, align 4, !tbaa !5
  %5118 = getelementptr inbounds i32, ptr %7, i64 %5116
  %5119 = load i32, ptr %5118, align 4, !tbaa !5
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5116
  br label %5131

5121:                                             ; preds = %5098
  %5122 = icmp eq i32 %5101, %5104
  br i1 %5122, label %5123, label %5129

5123:                                             ; preds = %5121
  store i32 0, ptr %5100, align 4, !tbaa !5
  %5124 = getelementptr inbounds i32, ptr %8, i64 %5099
  %5125 = load i32, ptr %5124, align 4, !tbaa !5
  %5126 = getelementptr inbounds i32, ptr %6, i64 %5099
  store i32 %5125, ptr %5126, align 4, !tbaa !5
  %5127 = add nuw nsw i64 %5099, 1
  %5128 = icmp eq i64 %5127, %4996
  br i1 %5128, label %5136, label %5098, !llvm.loop !1107

5129:                                             ; preds = %5094, %5121
  %5130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5131:                                             ; preds = %5107, %5113
  %5132 = phi ptr [ %5120, %5113 ], [ %5100, %5107 ]
  %5133 = phi i32 [ %5119, %5113 ], [ 1, %5107 ]
  %5134 = load i32, ptr %5132, align 4, !tbaa !5
  %5135 = add nsw i32 %5134, %5133
  store i32 %5135, ptr %5132, align 4, !tbaa !5
  br label %5136

5136:                                             ; preds = %5123, %5131, %5096, %5073
  %5137 = icmp eq i32 %5088, %5
  br i1 %5137, label %5579, label %4999, !llvm.loop !1108

5138:                                             ; preds = %4982, %5277
  %5139 = phi double [ 0.000000e+00, %4982 ], [ %5225, %5277 ]
  %5140 = phi i32 [ 0, %4982 ], [ %5226, %5277 ]
  %5141 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4983, label %5142, label %5211

5142:                                             ; preds = %5138, %5201
  %5143 = phi i32 [ %5210, %5201 ], [ 0, %5138 ]
  %5144 = phi i64 [ %5152, %5201 ], [ %4987, %5138 ]
  %5145 = phi i64 [ %5209, %5201 ], [ %4986, %5138 ]
  %5146 = phi i32 [ %5207, %5201 ], [ %5141, %5138 ]
  %5147 = sub i32 %4985, %5143
  %5148 = tail call i32 @llvm.smin.i32(i32 %5147, i32 0)
  %5149 = sub i32 %5147, %5148
  %5150 = zext i32 %5149 to i64
  %5151 = add nuw nsw i64 %5150, 1
  %5152 = add nsw i64 %5144, -1
  %5153 = icmp ult i32 %5149, 31
  br i1 %5153, label %5189, label %5154

5154:                                             ; preds = %5142
  %5155 = and i64 %5151, 8589934560
  %5156 = sub i64 %5145, %5155
  br label %5157

5157:                                             ; preds = %5157, %5154
  %5158 = phi i64 [ 0, %5154 ], [ %5181, %5157 ]
  %5159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5177, %5157 ]
  %5160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5178, %5157 ]
  %5161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5179, %5157 ]
  %5162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5180, %5157 ]
  %5163 = sub i64 %5145, %5158
  %5164 = getelementptr inbounds i32, ptr %11, i64 %5163
  %5165 = getelementptr inbounds i32, ptr %5164, i64 -7
  %5166 = load <8 x i32>, ptr %5165, align 4, !tbaa !5
  %5167 = shufflevector <8 x i32> %5166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5168 = getelementptr inbounds i32, ptr %5164, i64 -15
  %5169 = load <8 x i32>, ptr %5168, align 4, !tbaa !5
  %5170 = shufflevector <8 x i32> %5169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5171 = getelementptr inbounds i32, ptr %5164, i64 -23
  %5172 = load <8 x i32>, ptr %5171, align 4, !tbaa !5
  %5173 = shufflevector <8 x i32> %5172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5174 = getelementptr inbounds i32, ptr %5164, i64 -31
  %5175 = load <8 x i32>, ptr %5174, align 4, !tbaa !5
  %5176 = shufflevector <8 x i32> %5175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5177 = mul <8 x i32> %5167, %5159
  %5178 = mul <8 x i32> %5170, %5160
  %5179 = mul <8 x i32> %5173, %5161
  %5180 = mul <8 x i32> %5176, %5162
  %5181 = add nuw i64 %5158, 32
  %5182 = icmp eq i64 %5181, %5155
  br i1 %5182, label %5183, label %5157, !llvm.loop !1109

5183:                                             ; preds = %5157
  %5184 = mul <8 x i32> %5178, %5177
  %5185 = mul <8 x i32> %5179, %5184
  %5186 = mul <8 x i32> %5180, %5185
  %5187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5186)
  %5188 = icmp eq i64 %5151, %5155
  br i1 %5188, label %5201, label %5189

5189:                                             ; preds = %5142, %5183
  %5190 = phi i64 [ %5145, %5142 ], [ %5156, %5183 ]
  %5191 = phi i32 [ 1, %5142 ], [ %5187, %5183 ]
  br label %5192

5192:                                             ; preds = %5189, %5192
  %5193 = phi i64 [ %5198, %5192 ], [ %5190, %5189 ]
  %5194 = phi i32 [ %5197, %5192 ], [ %5191, %5189 ]
  %5195 = getelementptr inbounds i32, ptr %11, i64 %5193
  %5196 = load i32, ptr %5195, align 4, !tbaa !5
  %5197 = mul nsw i32 %5196, %5194
  %5198 = add nsw i64 %5193, -1
  %5199 = trunc i64 %5193 to i32
  %5200 = icmp sgt i32 %5199, 0
  br i1 %5200, label %5192, label %5201, !llvm.loop !1110

5201:                                             ; preds = %5192, %5183
  %5202 = phi i32 [ %5187, %5183 ], [ %5197, %5192 ]
  %5203 = and i64 %5152, 4294967295
  %5204 = getelementptr inbounds i32, ptr %6, i64 %5203
  %5205 = load i32, ptr %5204, align 4, !tbaa !5
  %5206 = mul nsw i32 %5205, %5202
  %5207 = add nsw i32 %5206, %5146
  %5208 = icmp sgt i64 %5144, 2
  %5209 = add nsw i64 %5145, -1
  %5210 = add i32 %5143, 1
  br i1 %5208, label %5142, label %5211, !llvm.loop !1111

5211:                                             ; preds = %5201, %5138
  %5212 = phi i32 [ %5141, %5138 ], [ %5207, %5201 ]
  %5213 = icmp slt i32 %5212, %5
  br i1 %5213, label %5216, label %5214

5214:                                             ; preds = %5211
  %5215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

5216:                                             ; preds = %5211
  %5217 = sext i32 %5212 to i64
  %5218 = getelementptr inbounds double, ptr %4966, i64 %5217
  %5219 = load double, ptr %5218, align 8, !tbaa !18
  %5220 = fcmp fast uge double %5219, 0.000000e+00
  %5221 = fneg fast double %5219
  %5222 = tail call fast double @llvm.fabs.f64(double %5219)
  %5223 = fcmp fast oge double %5139, %5222
  %5224 = select nnan ninf i1 %5220, double %5219, double %5221
  %5225 = select i1 %5223, double %5139, double %5224
  store double %5225, ptr %4968, align 8, !tbaa !18
  %5226 = add nuw nsw i32 %5140, 1
  br i1 %4984, label %5227, label %5277

5227:                                             ; preds = %5216
  %5228 = load i32, ptr %4, align 4, !tbaa !5
  %5229 = load i32, ptr %12, align 4, !tbaa !5
  %5230 = add nsw i32 %5229, -1
  %5231 = icmp slt i32 %5228, %5230
  br i1 %5231, label %5254, label %5232

5232:                                             ; preds = %5227
  %5233 = icmp eq i32 %5228, %5230
  br i1 %5233, label %5234, label %5270

5234:                                             ; preds = %5232
  store i32 0, ptr %4, align 4, !tbaa !5
  %5235 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5235, ptr %6, align 4, !tbaa !5
  br i1 %4989, label %5277, label %5236

5236:                                             ; preds = %5234, %5264
  %5237 = phi i64 [ %5268, %5264 ], [ 1, %5234 ]
  %5238 = getelementptr inbounds i32, ptr %4, i64 %5237
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = getelementptr inbounds i32, ptr %12, i64 %5237
  %5241 = load i32, ptr %5240, align 4, !tbaa !5
  %5242 = add nsw i32 %5241, -1
  %5243 = icmp slt i32 %5239, %5242
  br i1 %5243, label %5244, label %5262

5244:                                             ; preds = %5236
  br i1 %5231, label %5254, label %5245

5245:                                             ; preds = %5244
  %5246 = shl i64 %5237, 32
  %5247 = add i64 %5246, -4294967296
  %5248 = ashr exact i64 %5247, 32
  %5249 = getelementptr inbounds i32, ptr %7, i64 %5248
  %5250 = load i32, ptr %5249, align 4, !tbaa !5
  %5251 = getelementptr inbounds i32, ptr %6, i64 %5237
  %5252 = load i32, ptr %5251, align 4, !tbaa !5
  %5253 = add nsw i32 %5252, %5250
  store i32 %5253, ptr %5251, align 4, !tbaa !5
  br label %5272

5254:                                             ; preds = %5227, %5244
  %5255 = phi i32 [ %5239, %5244 ], [ %5228, %5227 ]
  %5256 = phi ptr [ %5238, %5244 ], [ %4, %5227 ]
  %5257 = phi i64 [ %5237, %5244 ], [ 0, %5227 ]
  %5258 = add nsw i32 %5255, 1
  store i32 %5258, ptr %5256, align 4, !tbaa !5
  %5259 = getelementptr inbounds i32, ptr %7, i64 %5257
  %5260 = load i32, ptr %5259, align 4, !tbaa !5
  %5261 = getelementptr inbounds i32, ptr %6, i64 %5257
  br label %5272

5262:                                             ; preds = %5236
  %5263 = icmp eq i32 %5239, %5242
  br i1 %5263, label %5264, label %5270

5264:                                             ; preds = %5262
  store i32 0, ptr %5238, align 4, !tbaa !5
  %5265 = getelementptr inbounds i32, ptr %8, i64 %5237
  %5266 = load i32, ptr %5265, align 4, !tbaa !5
  %5267 = getelementptr inbounds i32, ptr %6, i64 %5237
  store i32 %5266, ptr %5267, align 4, !tbaa !5
  %5268 = add nuw nsw i64 %5237, 1
  %5269 = icmp eq i64 %5268, %4987
  br i1 %5269, label %5277, label %5236, !llvm.loop !1112

5270:                                             ; preds = %5232, %5262
  %5271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5272:                                             ; preds = %5245, %5254
  %5273 = phi ptr [ %5261, %5254 ], [ %5238, %5245 ]
  %5274 = phi i32 [ %5260, %5254 ], [ 1, %5245 ]
  %5275 = load i32, ptr %5273, align 4, !tbaa !5
  %5276 = add nsw i32 %5275, %5274
  store i32 %5276, ptr %5273, align 4, !tbaa !5
  br label %5277

5277:                                             ; preds = %5264, %5272, %5234, %5216
  %5278 = icmp eq i32 %5226, %5
  br i1 %5278, label %5579, label %5138, !llvm.loop !1113

5279:                                             ; preds = %4975
  %5280 = getelementptr inbounds i32, ptr %3, i64 %19
  %5281 = load i32, ptr %5280, align 4, !tbaa !5
  %5282 = icmp eq i32 %5281, 0
  %5283 = icmp sgt i32 %5, 0
  br i1 %5282, label %5293, label %5284

5284:                                             ; preds = %5279
  br i1 %5283, label %5285, label %5579

5285:                                             ; preds = %5284
  %5286 = icmp sgt i32 %13, 1
  %5287 = icmp sgt i32 %13, 0
  %5288 = add i32 %13, -2
  %5289 = zext i32 %5288 to i64
  %5290 = zext i32 %13 to i64
  %5291 = add nuw i32 %5, 1
  %5292 = icmp eq i32 %13, 1
  br label %5434

5293:                                             ; preds = %5279
  br i1 %5283, label %5294, label %5579

5294:                                             ; preds = %5293
  %5295 = icmp sgt i32 %13, 1
  %5296 = icmp sgt i32 %13, 0
  %5297 = add i32 %13, -2
  %5298 = zext i32 %5297 to i64
  %5299 = zext i32 %13 to i64
  %5300 = add nuw i32 %5, 1
  %5301 = icmp eq i32 %13, 1
  br label %5302

5302:                                             ; preds = %5294, %5432
  %5303 = phi double [ 0.000000e+00, %5294 ], [ %5382, %5432 ]
  %5304 = phi i32 [ 0, %5294 ], [ %5384, %5432 ]
  %5305 = phi double [ 0.000000e+00, %5294 ], [ %5383, %5432 ]
  %5306 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5295, label %5307, label %5376

5307:                                             ; preds = %5302, %5366
  %5308 = phi i32 [ %5375, %5366 ], [ 0, %5302 ]
  %5309 = phi i64 [ %5317, %5366 ], [ %5299, %5302 ]
  %5310 = phi i64 [ %5374, %5366 ], [ %5298, %5302 ]
  %5311 = phi i32 [ %5372, %5366 ], [ %5306, %5302 ]
  %5312 = sub i32 %5297, %5308
  %5313 = tail call i32 @llvm.smin.i32(i32 %5312, i32 0)
  %5314 = sub i32 %5312, %5313
  %5315 = zext i32 %5314 to i64
  %5316 = add nuw nsw i64 %5315, 1
  %5317 = add nsw i64 %5309, -1
  %5318 = icmp ult i32 %5314, 31
  br i1 %5318, label %5354, label %5319

5319:                                             ; preds = %5307
  %5320 = and i64 %5316, 8589934560
  %5321 = sub i64 %5310, %5320
  br label %5322

5322:                                             ; preds = %5322, %5319
  %5323 = phi i64 [ 0, %5319 ], [ %5346, %5322 ]
  %5324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5342, %5322 ]
  %5325 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5343, %5322 ]
  %5326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5344, %5322 ]
  %5327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5345, %5322 ]
  %5328 = sub i64 %5310, %5323
  %5329 = getelementptr inbounds i32, ptr %9, i64 %5328
  %5330 = getelementptr inbounds i32, ptr %5329, i64 -7
  %5331 = load <8 x i32>, ptr %5330, align 4, !tbaa !5
  %5332 = shufflevector <8 x i32> %5331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5333 = getelementptr inbounds i32, ptr %5329, i64 -15
  %5334 = load <8 x i32>, ptr %5333, align 4, !tbaa !5
  %5335 = shufflevector <8 x i32> %5334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5336 = getelementptr inbounds i32, ptr %5329, i64 -23
  %5337 = load <8 x i32>, ptr %5336, align 4, !tbaa !5
  %5338 = shufflevector <8 x i32> %5337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5339 = getelementptr inbounds i32, ptr %5329, i64 -31
  %5340 = load <8 x i32>, ptr %5339, align 4, !tbaa !5
  %5341 = shufflevector <8 x i32> %5340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5342 = mul <8 x i32> %5332, %5324
  %5343 = mul <8 x i32> %5335, %5325
  %5344 = mul <8 x i32> %5338, %5326
  %5345 = mul <8 x i32> %5341, %5327
  %5346 = add nuw i64 %5323, 32
  %5347 = icmp eq i64 %5346, %5320
  br i1 %5347, label %5348, label %5322, !llvm.loop !1114

5348:                                             ; preds = %5322
  %5349 = mul <8 x i32> %5343, %5342
  %5350 = mul <8 x i32> %5344, %5349
  %5351 = mul <8 x i32> %5345, %5350
  %5352 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5351)
  %5353 = icmp eq i64 %5316, %5320
  br i1 %5353, label %5366, label %5354

5354:                                             ; preds = %5307, %5348
  %5355 = phi i64 [ %5310, %5307 ], [ %5321, %5348 ]
  %5356 = phi i32 [ 1, %5307 ], [ %5352, %5348 ]
  br label %5357

5357:                                             ; preds = %5354, %5357
  %5358 = phi i64 [ %5363, %5357 ], [ %5355, %5354 ]
  %5359 = phi i32 [ %5362, %5357 ], [ %5356, %5354 ]
  %5360 = getelementptr inbounds i32, ptr %9, i64 %5358
  %5361 = load i32, ptr %5360, align 4, !tbaa !5
  %5362 = mul nsw i32 %5361, %5359
  %5363 = add nsw i64 %5358, -1
  %5364 = trunc i64 %5358 to i32
  %5365 = icmp sgt i32 %5364, 0
  br i1 %5365, label %5357, label %5366, !llvm.loop !1115

5366:                                             ; preds = %5357, %5348
  %5367 = phi i32 [ %5352, %5348 ], [ %5362, %5357 ]
  %5368 = and i64 %5317, 4294967295
  %5369 = getelementptr inbounds i32, ptr %6, i64 %5368
  %5370 = load i32, ptr %5369, align 4, !tbaa !5
  %5371 = mul nsw i32 %5370, %5367
  %5372 = add nsw i32 %5371, %5311
  %5373 = icmp sgt i64 %5309, 2
  %5374 = add nsw i64 %5310, -1
  %5375 = add i32 %5308, 1
  br i1 %5373, label %5307, label %5376, !llvm.loop !1116

5376:                                             ; preds = %5366, %5302
  %5377 = phi i32 [ %5306, %5302 ], [ %5372, %5366 ]
  %5378 = sext i32 %5377 to i64
  %5379 = getelementptr inbounds double, ptr %4966, i64 %5378
  %5380 = load double, ptr %5379, align 8, !tbaa !18
  %5381 = tail call fast double @llvm.fabs.f64(double %5380)
  %5382 = tail call fast double @llvm.maxnum.f64(double %5303, double %5381)
  store double %5382, ptr %4968, align 8, !tbaa !18
  %5383 = fadd fast double %5305, 1.000000e+00
  %5384 = add nuw nsw i32 %5304, 1
  br i1 %5296, label %5385, label %5432

5385:                                             ; preds = %5376
  %5386 = load i32, ptr %4, align 4, !tbaa !5
  %5387 = load i32, ptr %12, align 4, !tbaa !5
  %5388 = add nsw i32 %5387, -1
  %5389 = icmp slt i32 %5386, %5388
  br i1 %5389, label %5409, label %5390

5390:                                             ; preds = %5385
  %5391 = icmp eq i32 %5386, %5388
  br i1 %5391, label %5392, label %5425

5392:                                             ; preds = %5390
  store i32 0, ptr %4, align 4, !tbaa !5
  %5393 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5393, ptr %6, align 4, !tbaa !5
  br i1 %5301, label %5432, label %5394

5394:                                             ; preds = %5392, %5419
  %5395 = phi i64 [ %5423, %5419 ], [ 1, %5392 ]
  %5396 = getelementptr inbounds i32, ptr %4, i64 %5395
  %5397 = load i32, ptr %5396, align 4, !tbaa !5
  %5398 = getelementptr inbounds i32, ptr %12, i64 %5395
  %5399 = load i32, ptr %5398, align 4, !tbaa !5
  %5400 = add nsw i32 %5399, -1
  %5401 = icmp slt i32 %5397, %5400
  br i1 %5401, label %5402, label %5417

5402:                                             ; preds = %5394
  br i1 %5389, label %5409, label %5403

5403:                                             ; preds = %5402
  %5404 = getelementptr inbounds i32, ptr %7, i64 %5395
  %5405 = load i32, ptr %5404, align 4, !tbaa !5
  %5406 = getelementptr inbounds i32, ptr %6, i64 %5395
  %5407 = load i32, ptr %5406, align 4, !tbaa !5
  %5408 = add nsw i32 %5407, %5405
  store i32 %5408, ptr %5406, align 4, !tbaa !5
  br label %5427

5409:                                             ; preds = %5385, %5402
  %5410 = phi i32 [ %5397, %5402 ], [ %5386, %5385 ]
  %5411 = phi ptr [ %5396, %5402 ], [ %4, %5385 ]
  %5412 = phi i64 [ %5395, %5402 ], [ 0, %5385 ]
  %5413 = add nsw i32 %5410, 1
  store i32 %5413, ptr %5411, align 4, !tbaa !5
  %5414 = getelementptr inbounds i32, ptr %7, i64 %5412
  %5415 = load i32, ptr %5414, align 4, !tbaa !5
  %5416 = getelementptr inbounds i32, ptr %6, i64 %5412
  br label %5427

5417:                                             ; preds = %5394
  %5418 = icmp eq i32 %5397, %5400
  br i1 %5418, label %5419, label %5425

5419:                                             ; preds = %5417
  store i32 0, ptr %5396, align 4, !tbaa !5
  %5420 = getelementptr inbounds i32, ptr %8, i64 %5395
  %5421 = load i32, ptr %5420, align 4, !tbaa !5
  %5422 = getelementptr inbounds i32, ptr %6, i64 %5395
  store i32 %5421, ptr %5422, align 4, !tbaa !5
  %5423 = add nuw nsw i64 %5395, 1
  %5424 = icmp eq i64 %5423, %5299
  br i1 %5424, label %5432, label %5394, !llvm.loop !1117

5425:                                             ; preds = %5390, %5417
  %5426 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5427:                                             ; preds = %5403, %5409
  %5428 = phi ptr [ %5416, %5409 ], [ %5396, %5403 ]
  %5429 = phi i32 [ %5415, %5409 ], [ 1, %5403 ]
  %5430 = load i32, ptr %5428, align 4, !tbaa !5
  %5431 = add nsw i32 %5430, %5429
  store i32 %5431, ptr %5428, align 4, !tbaa !5
  br label %5432

5432:                                             ; preds = %5419, %5427, %5392, %5376
  %5433 = icmp eq i32 %5384, %5
  br i1 %5433, label %5579, label %5302, !llvm.loop !1118

5434:                                             ; preds = %5285, %5569
  %5435 = phi double [ 0.000000e+00, %5285 ], [ %5517, %5569 ]
  %5436 = phi i32 [ 0, %5285 ], [ %5518, %5569 ]
  %5437 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5286, label %5438, label %5507

5438:                                             ; preds = %5434, %5497
  %5439 = phi i32 [ %5506, %5497 ], [ 0, %5434 ]
  %5440 = phi i64 [ %5448, %5497 ], [ %5290, %5434 ]
  %5441 = phi i64 [ %5505, %5497 ], [ %5289, %5434 ]
  %5442 = phi i32 [ %5503, %5497 ], [ %5437, %5434 ]
  %5443 = sub i32 %5288, %5439
  %5444 = tail call i32 @llvm.smin.i32(i32 %5443, i32 0)
  %5445 = sub i32 %5443, %5444
  %5446 = zext i32 %5445 to i64
  %5447 = add nuw nsw i64 %5446, 1
  %5448 = add nsw i64 %5440, -1
  %5449 = icmp ult i32 %5445, 31
  br i1 %5449, label %5485, label %5450

5450:                                             ; preds = %5438
  %5451 = and i64 %5447, 8589934560
  %5452 = sub i64 %5441, %5451
  br label %5453

5453:                                             ; preds = %5453, %5450
  %5454 = phi i64 [ 0, %5450 ], [ %5477, %5453 ]
  %5455 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5473, %5453 ]
  %5456 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5474, %5453 ]
  %5457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5475, %5453 ]
  %5458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5476, %5453 ]
  %5459 = sub i64 %5441, %5454
  %5460 = getelementptr inbounds i32, ptr %11, i64 %5459
  %5461 = getelementptr inbounds i32, ptr %5460, i64 -7
  %5462 = load <8 x i32>, ptr %5461, align 4, !tbaa !5
  %5463 = shufflevector <8 x i32> %5462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5464 = getelementptr inbounds i32, ptr %5460, i64 -15
  %5465 = load <8 x i32>, ptr %5464, align 4, !tbaa !5
  %5466 = shufflevector <8 x i32> %5465, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5467 = getelementptr inbounds i32, ptr %5460, i64 -23
  %5468 = load <8 x i32>, ptr %5467, align 4, !tbaa !5
  %5469 = shufflevector <8 x i32> %5468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5470 = getelementptr inbounds i32, ptr %5460, i64 -31
  %5471 = load <8 x i32>, ptr %5470, align 4, !tbaa !5
  %5472 = shufflevector <8 x i32> %5471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5473 = mul <8 x i32> %5463, %5455
  %5474 = mul <8 x i32> %5466, %5456
  %5475 = mul <8 x i32> %5469, %5457
  %5476 = mul <8 x i32> %5472, %5458
  %5477 = add nuw i64 %5454, 32
  %5478 = icmp eq i64 %5477, %5451
  br i1 %5478, label %5479, label %5453, !llvm.loop !1119

5479:                                             ; preds = %5453
  %5480 = mul <8 x i32> %5474, %5473
  %5481 = mul <8 x i32> %5475, %5480
  %5482 = mul <8 x i32> %5476, %5481
  %5483 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5482)
  %5484 = icmp eq i64 %5447, %5451
  br i1 %5484, label %5497, label %5485

5485:                                             ; preds = %5438, %5479
  %5486 = phi i64 [ %5441, %5438 ], [ %5452, %5479 ]
  %5487 = phi i32 [ 1, %5438 ], [ %5483, %5479 ]
  br label %5488

5488:                                             ; preds = %5485, %5488
  %5489 = phi i64 [ %5494, %5488 ], [ %5486, %5485 ]
  %5490 = phi i32 [ %5493, %5488 ], [ %5487, %5485 ]
  %5491 = getelementptr inbounds i32, ptr %11, i64 %5489
  %5492 = load i32, ptr %5491, align 4, !tbaa !5
  %5493 = mul nsw i32 %5492, %5490
  %5494 = add nsw i64 %5489, -1
  %5495 = trunc i64 %5489 to i32
  %5496 = icmp sgt i32 %5495, 0
  br i1 %5496, label %5488, label %5497, !llvm.loop !1120

5497:                                             ; preds = %5488, %5479
  %5498 = phi i32 [ %5483, %5479 ], [ %5493, %5488 ]
  %5499 = and i64 %5448, 4294967295
  %5500 = getelementptr inbounds i32, ptr %6, i64 %5499
  %5501 = load i32, ptr %5500, align 4, !tbaa !5
  %5502 = mul nsw i32 %5501, %5498
  %5503 = add nsw i32 %5502, %5442
  %5504 = icmp sgt i64 %5440, 2
  %5505 = add nsw i64 %5441, -1
  %5506 = add i32 %5439, 1
  br i1 %5504, label %5438, label %5507, !llvm.loop !1121

5507:                                             ; preds = %5497, %5434
  %5508 = phi i32 [ %5437, %5434 ], [ %5503, %5497 ]
  %5509 = icmp slt i32 %5508, %5
  br i1 %5509, label %5512, label %5510

5510:                                             ; preds = %5507
  %5511 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

5512:                                             ; preds = %5507
  %5513 = sext i32 %5508 to i64
  %5514 = getelementptr inbounds double, ptr %4966, i64 %5513
  %5515 = load double, ptr %5514, align 8, !tbaa !18
  %5516 = tail call fast double @llvm.fabs.f64(double %5515)
  %5517 = tail call fast double @llvm.maxnum.f64(double %5435, double %5516)
  store double %5517, ptr %4968, align 8, !tbaa !18
  %5518 = add nuw nsw i32 %5436, 1
  br i1 %5287, label %5519, label %5569

5519:                                             ; preds = %5512
  %5520 = load i32, ptr %4, align 4, !tbaa !5
  %5521 = load i32, ptr %12, align 4, !tbaa !5
  %5522 = add nsw i32 %5521, -1
  %5523 = icmp slt i32 %5520, %5522
  br i1 %5523, label %5546, label %5524

5524:                                             ; preds = %5519
  %5525 = icmp eq i32 %5520, %5522
  br i1 %5525, label %5526, label %5562

5526:                                             ; preds = %5524
  store i32 0, ptr %4, align 4, !tbaa !5
  %5527 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5527, ptr %6, align 4, !tbaa !5
  br i1 %5292, label %5569, label %5528

5528:                                             ; preds = %5526, %5556
  %5529 = phi i64 [ %5560, %5556 ], [ 1, %5526 ]
  %5530 = getelementptr inbounds i32, ptr %4, i64 %5529
  %5531 = load i32, ptr %5530, align 4, !tbaa !5
  %5532 = getelementptr inbounds i32, ptr %12, i64 %5529
  %5533 = load i32, ptr %5532, align 4, !tbaa !5
  %5534 = add nsw i32 %5533, -1
  %5535 = icmp slt i32 %5531, %5534
  br i1 %5535, label %5536, label %5554

5536:                                             ; preds = %5528
  br i1 %5523, label %5546, label %5537

5537:                                             ; preds = %5536
  %5538 = shl i64 %5529, 32
  %5539 = add i64 %5538, -4294967296
  %5540 = ashr exact i64 %5539, 32
  %5541 = getelementptr inbounds i32, ptr %7, i64 %5540
  %5542 = load i32, ptr %5541, align 4, !tbaa !5
  %5543 = getelementptr inbounds i32, ptr %6, i64 %5529
  %5544 = load i32, ptr %5543, align 4, !tbaa !5
  %5545 = add nsw i32 %5544, %5542
  store i32 %5545, ptr %5543, align 4, !tbaa !5
  br label %5564

5546:                                             ; preds = %5519, %5536
  %5547 = phi i32 [ %5531, %5536 ], [ %5520, %5519 ]
  %5548 = phi ptr [ %5530, %5536 ], [ %4, %5519 ]
  %5549 = phi i64 [ %5529, %5536 ], [ 0, %5519 ]
  %5550 = add nsw i32 %5547, 1
  store i32 %5550, ptr %5548, align 4, !tbaa !5
  %5551 = getelementptr inbounds i32, ptr %7, i64 %5549
  %5552 = load i32, ptr %5551, align 4, !tbaa !5
  %5553 = getelementptr inbounds i32, ptr %6, i64 %5549
  br label %5564

5554:                                             ; preds = %5528
  %5555 = icmp eq i32 %5531, %5534
  br i1 %5555, label %5556, label %5562

5556:                                             ; preds = %5554
  store i32 0, ptr %5530, align 4, !tbaa !5
  %5557 = getelementptr inbounds i32, ptr %8, i64 %5529
  %5558 = load i32, ptr %5557, align 4, !tbaa !5
  %5559 = getelementptr inbounds i32, ptr %6, i64 %5529
  store i32 %5558, ptr %5559, align 4, !tbaa !5
  %5560 = add nuw nsw i64 %5529, 1
  %5561 = icmp eq i64 %5560, %5290
  br i1 %5561, label %5569, label %5528, !llvm.loop !1122

5562:                                             ; preds = %5524, %5554
  %5563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5564:                                             ; preds = %5537, %5546
  %5565 = phi ptr [ %5553, %5546 ], [ %5530, %5537 ]
  %5566 = phi i32 [ %5552, %5546 ], [ 1, %5537 ]
  %5567 = load i32, ptr %5565, align 4, !tbaa !5
  %5568 = add nsw i32 %5567, %5566
  store i32 %5568, ptr %5565, align 4, !tbaa !5
  br label %5569

5569:                                             ; preds = %5556, %5564, %5526, %5512
  %5570 = icmp eq i32 %5518, %5
  br i1 %5570, label %5579, label %5434, !llvm.loop !1123

5571:                                             ; preds = %4975
  %5572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1969, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

5573:                                             ; preds = %2049
  store i16 %1999, ptr %1878, align 2, !tbaa !78
  br label %5579

5574:                                             ; preds = %2352
  store i16 %2302, ptr %1878, align 2, !tbaa !78
  br label %5579

5575:                                             ; preds = %3293
  store i64 %3243, ptr %3120, align 8, !tbaa !120
  br label %5579

5576:                                             ; preds = %3593
  store i64 %3543, ptr %3120, align 8, !tbaa !120
  br label %5579

5577:                                             ; preds = %4521
  store float %4471, ptr %4348, align 4, !tbaa !162
  br label %5579

5578:                                             ; preds = %4822
  store float %4772, ptr %4348, align 4, !tbaa !162
  br label %5579

5579:                                             ; preds = %5569, %5432, %5277, %5136, %4960, %4666, %4340, %4203, %4048, %3907, %3731, %3437, %3112, %2974, %2818, %2674, %2493, %2193, %1870, %1729, %1570, %1426, %1247, %1109, %953, %809, %628, %491, %336, %196, %5284, %5293, %4981, %4990, %4673, %4682, %5578, %4362, %4371, %5577, %4055, %4064, %3752, %3761, %3444, %3453, %5576, %3134, %3143, %5575, %2825, %2834, %2515, %2524, %2200, %2209, %5574, %1890, %1899, %5573, %1577, %1586, %1267, %1276, %960, %969, %650, %659, %343, %352, %37, %46, %4970, %5571, %4350, %4962, %3741, %4342, %3122, %3733, %2503, %3114, %1880, %2495, %1257, %1872, %638, %1249, %28, %630, %18
  %5580 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1872 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %2495 ], [ 0.000000e+00, %1880 ], [ 0.000000e+00, %3114 ], [ 0.000000e+00, %2503 ], [ 0.000000e+00, %3733 ], [ 0.000000e+00, %3122 ], [ 0.000000e+00, %4342 ], [ 0.000000e+00, %3741 ], [ 0.000000e+00, %4962 ], [ 0.000000e+00, %4350 ], [ 0.000000e+00, %5571 ], [ 0.000000e+00, %4970 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %659 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %969 ], [ 0.000000e+00, %960 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1267 ], [ 0.000000e+00, %1586 ], [ 0.000000e+00, %1577 ], [ %2000, %5573 ], [ 0.000000e+00, %1899 ], [ 0.000000e+00, %1890 ], [ %2303, %5574 ], [ 0.000000e+00, %2209 ], [ 0.000000e+00, %2200 ], [ 0.000000e+00, %2524 ], [ 0.000000e+00, %2515 ], [ 0.000000e+00, %2834 ], [ 0.000000e+00, %2825 ], [ %3244, %5575 ], [ 0.000000e+00, %3143 ], [ 0.000000e+00, %3134 ], [ %3544, %5576 ], [ 0.000000e+00, %3453 ], [ 0.000000e+00, %3444 ], [ 0.000000e+00, %3761 ], [ 0.000000e+00, %3752 ], [ 0.000000e+00, %4064 ], [ 0.000000e+00, %4055 ], [ %4472, %5577 ], [ 0.000000e+00, %4371 ], [ 0.000000e+00, %4362 ], [ %4773, %5578 ], [ 0.000000e+00, %4682 ], [ 0.000000e+00, %4673 ], [ 0.000000e+00, %4990 ], [ 0.000000e+00, %4981 ], [ 0.000000e+00, %5293 ], [ 0.000000e+00, %5284 ], [ %147, %196 ], [ 0.000000e+00, %336 ], [ %442, %491 ], [ 0.000000e+00, %628 ], [ %760, %809 ], [ 0.000000e+00, %953 ], [ %1060, %1109 ], [ 0.000000e+00, %1247 ], [ %1377, %1426 ], [ 0.000000e+00, %1570 ], [ %1680, %1729 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %2193 ], [ 0.000000e+00, %2493 ], [ %2625, %2674 ], [ 0.000000e+00, %2818 ], [ %2925, %2974 ], [ 0.000000e+00, %3112 ], [ 0.000000e+00, %3437 ], [ 0.000000e+00, %3731 ], [ %3858, %3907 ], [ 0.000000e+00, %4048 ], [ %4154, %4203 ], [ 0.000000e+00, %4340 ], [ 0.000000e+00, %4666 ], [ 0.000000e+00, %4960 ], [ %5087, %5136 ], [ 0.000000e+00, %5277 ], [ %5383, %5432 ], [ 0.000000e+00, %5569 ]
  %5581 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1249 ], [ 1, %638 ], [ 1, %1872 ], [ 1, %1257 ], [ 1, %2495 ], [ 1, %1880 ], [ 1, %3114 ], [ 1, %2503 ], [ 1, %3733 ], [ 1, %3122 ], [ 1, %4342 ], [ 1, %3741 ], [ 1, %4962 ], [ 1, %4350 ], [ 1, %5571 ], [ 1, %4970 ], [ 1, %46 ], [ 1, %37 ], [ 1, %352 ], [ 1, %343 ], [ 1, %659 ], [ 1, %650 ], [ 1, %969 ], [ 1, %960 ], [ 1, %1276 ], [ 1, %1267 ], [ 1, %1586 ], [ 1, %1577 ], [ %1906, %5573 ], [ 1, %1899 ], [ 1, %1890 ], [ %2216, %5574 ], [ 1, %2209 ], [ 1, %2200 ], [ 1, %2524 ], [ 1, %2515 ], [ 1, %2834 ], [ 1, %2825 ], [ %3150, %5575 ], [ 1, %3143 ], [ 1, %3134 ], [ %3460, %5576 ], [ 1, %3453 ], [ 1, %3444 ], [ 1, %3761 ], [ 1, %3752 ], [ 1, %4064 ], [ 1, %4055 ], [ %4378, %5577 ], [ 1, %4371 ], [ 1, %4362 ], [ %4689, %5578 ], [ 1, %4682 ], [ 1, %4673 ], [ 1, %4990 ], [ 1, %4981 ], [ 1, %5293 ], [ 1, %5284 ], [ %53, %196 ], [ %44, %336 ], [ %359, %491 ], [ %350, %628 ], [ %666, %809 ], [ %657, %953 ], [ %976, %1109 ], [ %967, %1247 ], [ %1283, %1426 ], [ %1274, %1570 ], [ %1593, %1729 ], [ %1584, %1870 ], [ %1897, %2193 ], [ %2207, %2493 ], [ %2531, %2674 ], [ %2522, %2818 ], [ %2841, %2974 ], [ %2832, %3112 ], [ %3141, %3437 ], [ %3451, %3731 ], [ %3768, %3907 ], [ %3759, %4048 ], [ %4071, %4203 ], [ %4062, %4340 ], [ %4369, %4666 ], [ %4680, %4960 ], [ %4997, %5136 ], [ %4988, %5277 ], [ %5300, %5432 ], [ %5291, %5569 ]
  %5582 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5581, ptr noundef nonnull @.str.5) #3
  %5583 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5580, ptr noundef nonnull @.str.6) #3
  br label %5584

5584:                                             ; preds = %5129, %5214, %5270, %5425, %5510, %5562, %4514, %4599, %4659, %4815, %4900, %4953, %3900, %3985, %4041, %4196, %4281, %4333, %3286, %3371, %3430, %3586, %3671, %3724, %2667, %2751, %2811, %2967, %3051, %3105, %2042, %2127, %2186, %2345, %2430, %2486, %1419, %1503, %1563, %1722, %1806, %1863, %802, %886, %946, %1102, %1186, %1240, %189, %273, %329, %484, %568, %621, %5579
  %5585 = phi i32 [ 0, %5579 ], [ -1, %621 ], [ -1, %568 ], [ -1, %484 ], [ -1, %329 ], [ -1, %273 ], [ -1, %189 ], [ -1, %1240 ], [ -1, %1186 ], [ -1, %1102 ], [ -1, %946 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1863 ], [ -1, %1806 ], [ -1, %1722 ], [ -1, %1563 ], [ -1, %1503 ], [ -1, %1419 ], [ -1, %2486 ], [ -1, %2430 ], [ -1, %2345 ], [ -1, %2186 ], [ -1, %2127 ], [ -1, %2042 ], [ -1, %3105 ], [ -1, %3051 ], [ -1, %2967 ], [ -1, %2811 ], [ -1, %2751 ], [ -1, %2667 ], [ -1, %3724 ], [ -1, %3671 ], [ -1, %3586 ], [ -1, %3430 ], [ -1, %3371 ], [ -1, %3286 ], [ -1, %4333 ], [ -1, %4281 ], [ -1, %4196 ], [ -1, %4041 ], [ -1, %3985 ], [ -1, %3900 ], [ -1, %4953 ], [ -1, %4900 ], [ -1, %4815 ], [ -1, %4659 ], [ -1, %4599 ], [ -1, %4514 ], [ -1, %5562 ], [ -1, %5510 ], [ -1, %5425 ], [ -1, %5270 ], [ -1, %5214 ], [ -1, %5129 ]
  ret i32 %5585
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5594 [
    i32 101, label %22
    i32 102, label %632
    i32 103, label %1251
    i32 104, label %1874
    i32 105, label %2497
    i32 106, label %3116
    i32 107, label %3735
    i32 108, label %4354
    i32 109, label %4969
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !162
  %30 = fptoui float %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5594

31:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %32
    i32 0, label %338
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5594

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %198

46:                                               ; preds = %32
  br i1 %36, label %47, label %5594

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %196
  %56 = phi i32 [ 0, %47 ], [ %148, %196 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %147, %196 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !1124

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !1125

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !1126

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds float, ptr %24, i64 %130
  %134 = load float, ptr %133, align 4, !tbaa !162
  %135 = fptoui float %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = fcmp fast uge double %139, 0.000000e+00
  %141 = fneg fast double %139
  %142 = tail call fast double @llvm.fabs.f64(double %139)
  %143 = fcmp fast ole double %142, %137
  %144 = select nnan ninf i1 %140, double %139, double %141
  %145 = select i1 %143, double %137, double %144
  %146 = fptoui double %145 to i8
  store i8 %146, ptr %26, align 1, !tbaa !11
  %147 = fadd fast double %132, %57
  %148 = add nuw nsw i32 %56, 1
  br i1 %49, label %149, label %196

149:                                              ; preds = %128
  %150 = load i32, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %12, align 4, !tbaa !5
  %152 = add nsw i32 %151, -1
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, %152
  br i1 %155, label %156, label %189

156:                                              ; preds = %154
  store i32 0, ptr %4, align 4, !tbaa !5
  %157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %157, ptr %6, align 4, !tbaa !5
  br i1 %54, label %196, label %158

158:                                              ; preds = %156, %183
  %159 = phi i64 [ %187, %183 ], [ 1, %156 ]
  %160 = getelementptr inbounds i32, ptr %4, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !5
  %162 = getelementptr inbounds i32, ptr %12, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = add nsw i32 %163, -1
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %181

166:                                              ; preds = %158
  br i1 %153, label %173, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds i32, ptr %7, i64 %159
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = getelementptr inbounds i32, ptr %6, i64 %159
  %171 = load i32, ptr %170, align 4, !tbaa !5
  %172 = add nsw i32 %171, %169
  store i32 %172, ptr %170, align 4, !tbaa !5
  br label %191

173:                                              ; preds = %149, %166
  %174 = phi i32 [ %161, %166 ], [ %150, %149 ]
  %175 = phi ptr [ %160, %166 ], [ %4, %149 ]
  %176 = phi i64 [ %159, %166 ], [ 0, %149 ]
  %177 = add nsw i32 %174, 1
  store i32 %177, ptr %175, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %7, i64 %176
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %176
  br label %191

181:                                              ; preds = %158
  %182 = icmp eq i32 %161, %164
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  store i32 0, ptr %160, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %8, i64 %159
  %185 = load i32, ptr %184, align 4, !tbaa !5
  %186 = getelementptr inbounds i32, ptr %6, i64 %159
  store i32 %185, ptr %186, align 4, !tbaa !5
  %187 = add nuw nsw i64 %159, 1
  %188 = icmp eq i64 %187, %52
  br i1 %188, label %196, label %158, !llvm.loop !1127

189:                                              ; preds = %154, %181
  %190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

191:                                              ; preds = %167, %173
  %192 = phi ptr [ %180, %173 ], [ %160, %167 ]
  %193 = phi i32 [ %179, %173 ], [ 1, %167 ]
  %194 = load i32, ptr %192, align 4, !tbaa !5
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %192, align 4, !tbaa !5
  br label %196

196:                                              ; preds = %183, %191, %156, %128
  %197 = icmp eq i32 %148, %5
  br i1 %197, label %5594, label %55, !llvm.loop !1128

198:                                              ; preds = %38, %336
  %199 = phi i32 [ 0, %38 ], [ %285, %336 ]
  %200 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %201, label %270

201:                                              ; preds = %198, %260
  %202 = phi i32 [ %269, %260 ], [ 0, %198 ]
  %203 = phi i64 [ %211, %260 ], [ %43, %198 ]
  %204 = phi i64 [ %268, %260 ], [ %42, %198 ]
  %205 = phi i32 [ %266, %260 ], [ %200, %198 ]
  %206 = sub i32 %41, %202
  %207 = tail call i32 @llvm.smin.i32(i32 %206, i32 0)
  %208 = sub i32 %206, %207
  %209 = zext i32 %208 to i64
  %210 = add nuw nsw i64 %209, 1
  %211 = add nsw i64 %203, -1
  %212 = icmp ult i32 %208, 31
  br i1 %212, label %248, label %213

213:                                              ; preds = %201
  %214 = and i64 %210, 8589934560
  %215 = sub i64 %204, %214
  br label %216

216:                                              ; preds = %216, %213
  %217 = phi i64 [ 0, %213 ], [ %240, %216 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %236, %216 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %237, %216 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %238, %216 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %239, %216 ]
  %222 = sub i64 %204, %217
  %223 = getelementptr inbounds i32, ptr %11, i64 %222
  %224 = getelementptr inbounds i32, ptr %223, i64 -7
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %223, i64 -15
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %223, i64 -23
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %223, i64 -31
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !5
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = mul <8 x i32> %226, %218
  %237 = mul <8 x i32> %229, %219
  %238 = mul <8 x i32> %232, %220
  %239 = mul <8 x i32> %235, %221
  %240 = add nuw i64 %217, 32
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %216, !llvm.loop !1129

242:                                              ; preds = %216
  %243 = mul <8 x i32> %237, %236
  %244 = mul <8 x i32> %238, %243
  %245 = mul <8 x i32> %239, %244
  %246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %245)
  %247 = icmp eq i64 %210, %214
  br i1 %247, label %260, label %248

248:                                              ; preds = %201, %242
  %249 = phi i64 [ %204, %201 ], [ %215, %242 ]
  %250 = phi i32 [ 1, %201 ], [ %246, %242 ]
  br label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %257, %251 ], [ %249, %248 ]
  %253 = phi i32 [ %256, %251 ], [ %250, %248 ]
  %254 = getelementptr inbounds i32, ptr %11, i64 %252
  %255 = load i32, ptr %254, align 4, !tbaa !5
  %256 = mul nsw i32 %255, %253
  %257 = add nsw i64 %252, -1
  %258 = trunc i64 %252 to i32
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %251, label %260, !llvm.loop !1130

260:                                              ; preds = %251, %242
  %261 = phi i32 [ %246, %242 ], [ %256, %251 ]
  %262 = and i64 %211, 4294967295
  %263 = getelementptr inbounds i32, ptr %6, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !5
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %205
  %267 = icmp sgt i64 %203, 2
  %268 = add nsw i64 %204, -1
  %269 = add i32 %202, 1
  br i1 %267, label %201, label %270, !llvm.loop !1131

270:                                              ; preds = %260, %198
  %271 = phi i32 [ %200, %198 ], [ %266, %260 ]
  %272 = icmp slt i32 %271, %5
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

275:                                              ; preds = %270
  %276 = sext i32 %271 to i64
  %277 = getelementptr inbounds float, ptr %24, i64 %276
  %278 = load float, ptr %277, align 4, !tbaa !162
  %279 = fptoui float %278 to i8
  %280 = load i8, ptr %26, align 1, !tbaa !11
  %281 = uitofp i8 %280 to double
  %282 = uitofp i8 %279 to double
  %283 = tail call fast double @llvm.maxnum.f64(double %281, double %282)
  %284 = fptoui double %283 to i8
  store i8 %284, ptr %26, align 1, !tbaa !11
  %285 = add nuw nsw i32 %199, 1
  br i1 %40, label %286, label %336

286:                                              ; preds = %275
  %287 = load i32, ptr %4, align 4, !tbaa !5
  %288 = load i32, ptr %12, align 4, !tbaa !5
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !5
  %294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %294, ptr %6, align 4, !tbaa !5
  br i1 %45, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !5
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !5
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %43
  br i1 %328, label %336, label %295, !llvm.loop !1132

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !5
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !5
  br label %336

336:                                              ; preds = %323, %331, %293, %275
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5594, label %198, !llvm.loop !1133

338:                                              ; preds = %31
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !5
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5594

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %493

352:                                              ; preds = %338
  br i1 %342, label %353, label %5594

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %491
  %362 = phi i32 [ 0, %353 ], [ %443, %491 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %442, %491 ]
  %364 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !1134

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !5
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !1135

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !5
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !1136

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds float, ptr %24, i64 %436
  %438 = load float, ptr %437, align 4, !tbaa !162
  %439 = fptoui float %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = tail call i8 @llvm.umax.i8(i8 %440, i8 %439)
  store i8 %441, ptr %26, align 1, !tbaa !11
  %442 = fadd fast double %363, 1.000000e+00
  %443 = add nuw nsw i32 %362, 1
  br i1 %355, label %444, label %491

444:                                              ; preds = %434
  %445 = load i32, ptr %4, align 4, !tbaa !5
  %446 = load i32, ptr %12, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %468, label %449

449:                                              ; preds = %444
  %450 = icmp eq i32 %445, %447
  br i1 %450, label %451, label %484

451:                                              ; preds = %449
  store i32 0, ptr %4, align 4, !tbaa !5
  %452 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %452, ptr %6, align 4, !tbaa !5
  br i1 %360, label %491, label %453

453:                                              ; preds = %451, %478
  %454 = phi i64 [ %482, %478 ], [ 1, %451 ]
  %455 = getelementptr inbounds i32, ptr %4, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %12, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, -1
  %460 = icmp slt i32 %456, %459
  br i1 %460, label %461, label %476

461:                                              ; preds = %453
  br i1 %448, label %468, label %462

462:                                              ; preds = %461
  %463 = getelementptr inbounds i32, ptr %7, i64 %454
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %6, i64 %454
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = add nsw i32 %466, %464
  store i32 %467, ptr %465, align 4, !tbaa !5
  br label %486

468:                                              ; preds = %444, %461
  %469 = phi i32 [ %456, %461 ], [ %445, %444 ]
  %470 = phi ptr [ %455, %461 ], [ %4, %444 ]
  %471 = phi i64 [ %454, %461 ], [ 0, %444 ]
  %472 = add nsw i32 %469, 1
  store i32 %472, ptr %470, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %7, i64 %471
  %474 = load i32, ptr %473, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %6, i64 %471
  br label %486

476:                                              ; preds = %453
  %477 = icmp eq i32 %456, %459
  br i1 %477, label %478, label %484

478:                                              ; preds = %476
  store i32 0, ptr %455, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %8, i64 %454
  %480 = load i32, ptr %479, align 4, !tbaa !5
  %481 = getelementptr inbounds i32, ptr %6, i64 %454
  store i32 %480, ptr %481, align 4, !tbaa !5
  %482 = add nuw nsw i64 %454, 1
  %483 = icmp eq i64 %482, %358
  br i1 %483, label %491, label %453, !llvm.loop !1137

484:                                              ; preds = %449, %476
  %485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

486:                                              ; preds = %462, %468
  %487 = phi ptr [ %475, %468 ], [ %455, %462 ]
  %488 = phi i32 [ %474, %468 ], [ 1, %462 ]
  %489 = load i32, ptr %487, align 4, !tbaa !5
  %490 = add nsw i32 %489, %488
  store i32 %490, ptr %487, align 4, !tbaa !5
  br label %491

491:                                              ; preds = %478, %486, %451, %434
  %492 = icmp eq i32 %443, %5
  br i1 %492, label %5594, label %361, !llvm.loop !1138

493:                                              ; preds = %344, %628
  %494 = phi i32 [ 0, %344 ], [ %577, %628 ]
  %495 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %345, label %496, label %565

496:                                              ; preds = %493, %555
  %497 = phi i32 [ %564, %555 ], [ 0, %493 ]
  %498 = phi i64 [ %506, %555 ], [ %349, %493 ]
  %499 = phi i64 [ %563, %555 ], [ %348, %493 ]
  %500 = phi i32 [ %561, %555 ], [ %495, %493 ]
  %501 = sub i32 %347, %497
  %502 = tail call i32 @llvm.smin.i32(i32 %501, i32 0)
  %503 = sub i32 %501, %502
  %504 = zext i32 %503 to i64
  %505 = add nuw nsw i64 %504, 1
  %506 = add nsw i64 %498, -1
  %507 = icmp ult i32 %503, 31
  br i1 %507, label %543, label %508

508:                                              ; preds = %496
  %509 = and i64 %505, 8589934560
  %510 = sub i64 %499, %509
  br label %511

511:                                              ; preds = %511, %508
  %512 = phi i64 [ 0, %508 ], [ %535, %511 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %531, %511 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %532, %511 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %533, %511 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %534, %511 ]
  %517 = sub i64 %499, %512
  %518 = getelementptr inbounds i32, ptr %11, i64 %517
  %519 = getelementptr inbounds i32, ptr %518, i64 -7
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !5
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %518, i64 -15
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !5
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %518, i64 -23
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !5
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %518, i64 -31
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !5
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = mul <8 x i32> %521, %513
  %532 = mul <8 x i32> %524, %514
  %533 = mul <8 x i32> %527, %515
  %534 = mul <8 x i32> %530, %516
  %535 = add nuw i64 %512, 32
  %536 = icmp eq i64 %535, %509
  br i1 %536, label %537, label %511, !llvm.loop !1139

537:                                              ; preds = %511
  %538 = mul <8 x i32> %532, %531
  %539 = mul <8 x i32> %533, %538
  %540 = mul <8 x i32> %534, %539
  %541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %540)
  %542 = icmp eq i64 %505, %509
  br i1 %542, label %555, label %543

543:                                              ; preds = %496, %537
  %544 = phi i64 [ %499, %496 ], [ %510, %537 ]
  %545 = phi i32 [ 1, %496 ], [ %541, %537 ]
  br label %546

546:                                              ; preds = %543, %546
  %547 = phi i64 [ %552, %546 ], [ %544, %543 ]
  %548 = phi i32 [ %551, %546 ], [ %545, %543 ]
  %549 = getelementptr inbounds i32, ptr %11, i64 %547
  %550 = load i32, ptr %549, align 4, !tbaa !5
  %551 = mul nsw i32 %550, %548
  %552 = add nsw i64 %547, -1
  %553 = trunc i64 %547 to i32
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %546, label %555, !llvm.loop !1140

555:                                              ; preds = %546, %537
  %556 = phi i32 [ %541, %537 ], [ %551, %546 ]
  %557 = and i64 %506, 4294967295
  %558 = getelementptr inbounds i32, ptr %6, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !5
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %500
  %562 = icmp sgt i64 %498, 2
  %563 = add nsw i64 %499, -1
  %564 = add i32 %497, 1
  br i1 %562, label %496, label %565, !llvm.loop !1141

565:                                              ; preds = %555, %493
  %566 = phi i32 [ %495, %493 ], [ %561, %555 ]
  %567 = icmp slt i32 %566, %5
  br i1 %567, label %570, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

570:                                              ; preds = %565
  %571 = sext i32 %566 to i64
  %572 = getelementptr inbounds float, ptr %24, i64 %571
  %573 = load float, ptr %572, align 4, !tbaa !162
  %574 = fptoui float %573 to i8
  %575 = load i8, ptr %26, align 1, !tbaa !11
  %576 = tail call i8 @llvm.umax.i8(i8 %575, i8 %574)
  store i8 %576, ptr %26, align 1, !tbaa !11
  %577 = add nuw nsw i32 %494, 1
  br i1 %346, label %578, label %628

578:                                              ; preds = %570
  %579 = load i32, ptr %4, align 4, !tbaa !5
  %580 = load i32, ptr %12, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !5
  %586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %586, ptr %6, align 4, !tbaa !5
  br i1 %351, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !5
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !5
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %349
  br i1 %620, label %628, label %587, !llvm.loop !1142

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !5
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %628

628:                                              ; preds = %615, %623, %585, %570
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %5594, label %493, !llvm.loop !1143

630:                                              ; preds = %31
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2246, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !9
  store i32 0, ptr %636, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %644

638:                                              ; preds = %632
  %639 = load float, ptr %634, align 4, !tbaa !162
  %640 = fptosi float %639 to i32
  %641 = icmp eq i32 %640, 0
  %642 = tail call i32 @llvm.abs.i32(i32 %640, i1 true)
  %643 = select i1 %641, i32 0, i32 %642
  store i32 %643, ptr %636, align 4, !tbaa !5
  br label %5594

644:                                              ; preds = %632
  switch i32 %1, label %1249 [
    i32 1, label %645
    i32 0, label %955
  ]

645:                                              ; preds = %644
  %646 = getelementptr inbounds i32, ptr %3, i64 %19
  %647 = load i32, ptr %646, align 4, !tbaa !5
  %648 = icmp eq i32 %647, 0
  %649 = icmp sgt i32 %5, 0
  br i1 %648, label %659, label %650

650:                                              ; preds = %645
  br i1 %649, label %651, label %5594

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %811

659:                                              ; preds = %645
  br i1 %649, label %660, label %5594

660:                                              ; preds = %659
  %661 = icmp sgt i32 %13, 1
  %662 = icmp sgt i32 %13, 0
  %663 = add i32 %13, -2
  %664 = zext i32 %663 to i64
  %665 = zext i32 %13 to i64
  %666 = add nuw i32 %5, 1
  %667 = icmp eq i32 %13, 1
  br label %668

668:                                              ; preds = %660, %809
  %669 = phi i32 [ 0, %660 ], [ %761, %809 ]
  %670 = phi double [ 0.000000e+00, %660 ], [ %760, %809 ]
  %671 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %661, label %672, label %741

672:                                              ; preds = %668, %731
  %673 = phi i32 [ %740, %731 ], [ 0, %668 ]
  %674 = phi i64 [ %682, %731 ], [ %665, %668 ]
  %675 = phi i64 [ %739, %731 ], [ %664, %668 ]
  %676 = phi i32 [ %737, %731 ], [ %671, %668 ]
  %677 = sub i32 %663, %673
  %678 = tail call i32 @llvm.smin.i32(i32 %677, i32 0)
  %679 = sub i32 %677, %678
  %680 = zext i32 %679 to i64
  %681 = add nuw nsw i64 %680, 1
  %682 = add nsw i64 %674, -1
  %683 = icmp ult i32 %679, 31
  br i1 %683, label %719, label %684

684:                                              ; preds = %672
  %685 = and i64 %681, 8589934560
  %686 = sub i64 %675, %685
  br label %687

687:                                              ; preds = %687, %684
  %688 = phi i64 [ 0, %684 ], [ %711, %687 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %707, %687 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %708, %687 ]
  %691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %709, %687 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %710, %687 ]
  %693 = sub i64 %675, %688
  %694 = getelementptr inbounds i32, ptr %9, i64 %693
  %695 = getelementptr inbounds i32, ptr %694, i64 -7
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %694, i64 -15
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %694, i64 -23
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %694, i64 -31
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = mul <8 x i32> %697, %689
  %708 = mul <8 x i32> %700, %690
  %709 = mul <8 x i32> %703, %691
  %710 = mul <8 x i32> %706, %692
  %711 = add nuw i64 %688, 32
  %712 = icmp eq i64 %711, %685
  br i1 %712, label %713, label %687, !llvm.loop !1144

713:                                              ; preds = %687
  %714 = mul <8 x i32> %708, %707
  %715 = mul <8 x i32> %709, %714
  %716 = mul <8 x i32> %710, %715
  %717 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %716)
  %718 = icmp eq i64 %681, %685
  br i1 %718, label %731, label %719

719:                                              ; preds = %672, %713
  %720 = phi i64 [ %675, %672 ], [ %686, %713 ]
  %721 = phi i32 [ 1, %672 ], [ %717, %713 ]
  br label %722

722:                                              ; preds = %719, %722
  %723 = phi i64 [ %728, %722 ], [ %720, %719 ]
  %724 = phi i32 [ %727, %722 ], [ %721, %719 ]
  %725 = getelementptr inbounds i32, ptr %9, i64 %723
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %724
  %728 = add nsw i64 %723, -1
  %729 = trunc i64 %723 to i32
  %730 = icmp sgt i32 %729, 0
  br i1 %730, label %722, label %731, !llvm.loop !1145

731:                                              ; preds = %722, %713
  %732 = phi i32 [ %717, %713 ], [ %727, %722 ]
  %733 = and i64 %682, 4294967295
  %734 = getelementptr inbounds i32, ptr %6, i64 %733
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = mul nsw i32 %735, %732
  %737 = add nsw i32 %736, %676
  %738 = icmp sgt i64 %674, 2
  %739 = add nsw i64 %675, -1
  %740 = add i32 %673, 1
  br i1 %738, label %672, label %741, !llvm.loop !1146

741:                                              ; preds = %731, %668
  %742 = phi i32 [ %671, %668 ], [ %737, %731 ]
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds double, ptr %2, i64 %743
  %745 = load double, ptr %744, align 8, !tbaa !18
  %746 = getelementptr inbounds float, ptr %634, i64 %743
  %747 = load float, ptr %746, align 4, !tbaa !162
  %748 = fptosi float %747 to i32
  %749 = load i32, ptr %636, align 4, !tbaa !5
  %750 = sitofp i32 %749 to double
  %751 = sitofp i32 %748 to double
  %752 = fmul fast double %745, %751
  %753 = fcmp fast uge double %752, 0.000000e+00
  %754 = fneg fast double %752
  %755 = tail call fast double @llvm.fabs.f64(double %752)
  %756 = fcmp fast ole double %755, %750
  %757 = select nnan ninf i1 %753, double %752, double %754
  %758 = select i1 %756, double %750, double %757
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %636, align 4, !tbaa !5
  %760 = fadd fast double %745, %670
  %761 = add nuw nsw i32 %669, 1
  br i1 %662, label %762, label %809

762:                                              ; preds = %741
  %763 = load i32, ptr %4, align 4, !tbaa !5
  %764 = load i32, ptr %12, align 4, !tbaa !5
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !5
  %770 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %770, ptr %6, align 4, !tbaa !5
  br i1 %667, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !5
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !5
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !5
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !5
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !5
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !5
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %665
  br i1 %801, label %809, label %771, !llvm.loop !1147

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !5
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !5
  br label %809

809:                                              ; preds = %796, %804, %769, %741
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %5594, label %668, !llvm.loop !1148

811:                                              ; preds = %651, %953
  %812 = phi i32 [ 0, %651 ], [ %902, %953 ]
  %813 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %656, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %655, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %654, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !5
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !5
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !5
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !1149

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !1150

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !5
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !1151

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds float, ptr %634, i64 %889
  %891 = load float, ptr %890, align 4, !tbaa !162
  %892 = fptosi float %891 to i32
  %893 = load i32, ptr %636, align 4, !tbaa !5
  %894 = sitofp i32 %893 to double
  %895 = sitofp i32 %892 to double
  %896 = icmp slt i32 %892, 0
  %897 = fneg fast double %895
  %898 = select i1 %896, double %897, double %895
  %899 = fcmp fast ole double %898, %894
  %900 = select fast i1 %899, double %894, double %898
  %901 = fptosi double %900 to i32
  store i32 %901, ptr %636, align 4, !tbaa !5
  %902 = add nuw nsw i32 %812, 1
  br i1 %653, label %903, label %953

903:                                              ; preds = %888
  %904 = load i32, ptr %4, align 4, !tbaa !5
  %905 = load i32, ptr %12, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %904, %906
  br i1 %907, label %930, label %908

908:                                              ; preds = %903
  %909 = icmp eq i32 %904, %906
  br i1 %909, label %910, label %946

910:                                              ; preds = %908
  store i32 0, ptr %4, align 4, !tbaa !5
  %911 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %911, ptr %6, align 4, !tbaa !5
  br i1 %658, label %953, label %912

912:                                              ; preds = %910, %940
  %913 = phi i64 [ %944, %940 ], [ 1, %910 ]
  %914 = getelementptr inbounds i32, ptr %4, i64 %913
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = getelementptr inbounds i32, ptr %12, i64 %913
  %917 = load i32, ptr %916, align 4, !tbaa !5
  %918 = add nsw i32 %917, -1
  %919 = icmp slt i32 %915, %918
  br i1 %919, label %920, label %938

920:                                              ; preds = %912
  br i1 %907, label %930, label %921

921:                                              ; preds = %920
  %922 = shl i64 %913, 32
  %923 = add i64 %922, -4294967296
  %924 = ashr exact i64 %923, 32
  %925 = getelementptr inbounds i32, ptr %7, i64 %924
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %6, i64 %913
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = add nsw i32 %928, %926
  store i32 %929, ptr %927, align 4, !tbaa !5
  br label %948

930:                                              ; preds = %903, %920
  %931 = phi i32 [ %915, %920 ], [ %904, %903 ]
  %932 = phi ptr [ %914, %920 ], [ %4, %903 ]
  %933 = phi i64 [ %913, %920 ], [ 0, %903 ]
  %934 = add nsw i32 %931, 1
  store i32 %934, ptr %932, align 4, !tbaa !5
  %935 = getelementptr inbounds i32, ptr %7, i64 %933
  %936 = load i32, ptr %935, align 4, !tbaa !5
  %937 = getelementptr inbounds i32, ptr %6, i64 %933
  br label %948

938:                                              ; preds = %912
  %939 = icmp eq i32 %915, %918
  br i1 %939, label %940, label %946

940:                                              ; preds = %938
  store i32 0, ptr %914, align 4, !tbaa !5
  %941 = getelementptr inbounds i32, ptr %8, i64 %913
  %942 = load i32, ptr %941, align 4, !tbaa !5
  %943 = getelementptr inbounds i32, ptr %6, i64 %913
  store i32 %942, ptr %943, align 4, !tbaa !5
  %944 = add nuw nsw i64 %913, 1
  %945 = icmp eq i64 %944, %656
  br i1 %945, label %953, label %912, !llvm.loop !1152

946:                                              ; preds = %908, %938
  %947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

948:                                              ; preds = %921, %930
  %949 = phi ptr [ %937, %930 ], [ %914, %921 ]
  %950 = phi i32 [ %936, %930 ], [ 1, %921 ]
  %951 = load i32, ptr %949, align 4, !tbaa !5
  %952 = add nsw i32 %951, %950
  store i32 %952, ptr %949, align 4, !tbaa !5
  br label %953

953:                                              ; preds = %940, %948, %910, %888
  %954 = icmp eq i32 %902, %5
  br i1 %954, label %5594, label %811, !llvm.loop !1153

955:                                              ; preds = %644
  %956 = getelementptr inbounds i32, ptr %3, i64 %19
  %957 = load i32, ptr %956, align 4, !tbaa !5
  %958 = icmp eq i32 %957, 0
  %959 = icmp sgt i32 %5, 0
  br i1 %958, label %969, label %960

960:                                              ; preds = %955
  br i1 %959, label %961, label %5594

961:                                              ; preds = %960
  %962 = icmp sgt i32 %13, 1
  %963 = icmp sgt i32 %13, 0
  %964 = add i32 %13, -2
  %965 = zext i32 %964 to i64
  %966 = zext i32 %13 to i64
  %967 = add nuw i32 %5, 1
  %968 = icmp eq i32 %13, 1
  br label %1111

969:                                              ; preds = %955
  br i1 %959, label %970, label %5594

970:                                              ; preds = %969
  %971 = icmp sgt i32 %13, 1
  %972 = icmp sgt i32 %13, 0
  %973 = add i32 %13, -2
  %974 = zext i32 %973 to i64
  %975 = zext i32 %13 to i64
  %976 = add nuw i32 %5, 1
  %977 = icmp eq i32 %13, 1
  br label %978

978:                                              ; preds = %970, %1109
  %979 = phi i32 [ 0, %970 ], [ %1061, %1109 ]
  %980 = phi double [ 0.000000e+00, %970 ], [ %1060, %1109 ]
  %981 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %971, label %982, label %1051

982:                                              ; preds = %978, %1041
  %983 = phi i32 [ %1050, %1041 ], [ 0, %978 ]
  %984 = phi i64 [ %992, %1041 ], [ %975, %978 ]
  %985 = phi i64 [ %1049, %1041 ], [ %974, %978 ]
  %986 = phi i32 [ %1047, %1041 ], [ %981, %978 ]
  %987 = sub i32 %973, %983
  %988 = tail call i32 @llvm.smin.i32(i32 %987, i32 0)
  %989 = sub i32 %987, %988
  %990 = zext i32 %989 to i64
  %991 = add nuw nsw i64 %990, 1
  %992 = add nsw i64 %984, -1
  %993 = icmp ult i32 %989, 31
  br i1 %993, label %1029, label %994

994:                                              ; preds = %982
  %995 = and i64 %991, 8589934560
  %996 = sub i64 %985, %995
  br label %997

997:                                              ; preds = %997, %994
  %998 = phi i64 [ 0, %994 ], [ %1021, %997 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1017, %997 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1018, %997 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1019, %997 ]
  %1002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1020, %997 ]
  %1003 = sub i64 %985, %998
  %1004 = getelementptr inbounds i32, ptr %9, i64 %1003
  %1005 = getelementptr inbounds i32, ptr %1004, i64 -7
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !5
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = getelementptr inbounds i32, ptr %1004, i64 -15
  %1009 = load <8 x i32>, ptr %1008, align 4, !tbaa !5
  %1010 = shufflevector <8 x i32> %1009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1011 = getelementptr inbounds i32, ptr %1004, i64 -23
  %1012 = load <8 x i32>, ptr %1011, align 4, !tbaa !5
  %1013 = shufflevector <8 x i32> %1012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1014 = getelementptr inbounds i32, ptr %1004, i64 -31
  %1015 = load <8 x i32>, ptr %1014, align 4, !tbaa !5
  %1016 = shufflevector <8 x i32> %1015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1017 = mul <8 x i32> %1007, %999
  %1018 = mul <8 x i32> %1010, %1000
  %1019 = mul <8 x i32> %1013, %1001
  %1020 = mul <8 x i32> %1016, %1002
  %1021 = add nuw i64 %998, 32
  %1022 = icmp eq i64 %1021, %995
  br i1 %1022, label %1023, label %997, !llvm.loop !1154

1023:                                             ; preds = %997
  %1024 = mul <8 x i32> %1018, %1017
  %1025 = mul <8 x i32> %1019, %1024
  %1026 = mul <8 x i32> %1020, %1025
  %1027 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1026)
  %1028 = icmp eq i64 %991, %995
  br i1 %1028, label %1041, label %1029

1029:                                             ; preds = %982, %1023
  %1030 = phi i64 [ %985, %982 ], [ %996, %1023 ]
  %1031 = phi i32 [ 1, %982 ], [ %1027, %1023 ]
  br label %1032

1032:                                             ; preds = %1029, %1032
  %1033 = phi i64 [ %1038, %1032 ], [ %1030, %1029 ]
  %1034 = phi i32 [ %1037, %1032 ], [ %1031, %1029 ]
  %1035 = getelementptr inbounds i32, ptr %9, i64 %1033
  %1036 = load i32, ptr %1035, align 4, !tbaa !5
  %1037 = mul nsw i32 %1036, %1034
  %1038 = add nsw i64 %1033, -1
  %1039 = trunc i64 %1033 to i32
  %1040 = icmp sgt i32 %1039, 0
  br i1 %1040, label %1032, label %1041, !llvm.loop !1155

1041:                                             ; preds = %1032, %1023
  %1042 = phi i32 [ %1027, %1023 ], [ %1037, %1032 ]
  %1043 = and i64 %992, 4294967295
  %1044 = getelementptr inbounds i32, ptr %6, i64 %1043
  %1045 = load i32, ptr %1044, align 4, !tbaa !5
  %1046 = mul nsw i32 %1045, %1042
  %1047 = add nsw i32 %1046, %986
  %1048 = icmp sgt i64 %984, 2
  %1049 = add nsw i64 %985, -1
  %1050 = add i32 %983, 1
  br i1 %1048, label %982, label %1051, !llvm.loop !1156

1051:                                             ; preds = %1041, %978
  %1052 = phi i32 [ %981, %978 ], [ %1047, %1041 ]
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds float, ptr %634, i64 %1053
  %1055 = load float, ptr %1054, align 4, !tbaa !162
  %1056 = fptosi float %1055 to i32
  %1057 = load i32, ptr %636, align 4, !tbaa !5
  %1058 = tail call i32 @llvm.abs.i32(i32 %1056, i1 true)
  %1059 = tail call i32 @llvm.smax.i32(i32 %1057, i32 %1058)
  store i32 %1059, ptr %636, align 4, !tbaa !5
  %1060 = fadd fast double %980, 1.000000e+00
  %1061 = add nuw nsw i32 %979, 1
  br i1 %972, label %1062, label %1109

1062:                                             ; preds = %1051
  %1063 = load i32, ptr %4, align 4, !tbaa !5
  %1064 = load i32, ptr %12, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1063, %1065
  br i1 %1066, label %1086, label %1067

1067:                                             ; preds = %1062
  %1068 = icmp eq i32 %1063, %1065
  br i1 %1068, label %1069, label %1102

1069:                                             ; preds = %1067
  store i32 0, ptr %4, align 4, !tbaa !5
  %1070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1070, ptr %6, align 4, !tbaa !5
  br i1 %977, label %1109, label %1071

1071:                                             ; preds = %1069, %1096
  %1072 = phi i64 [ %1100, %1096 ], [ 1, %1069 ]
  %1073 = getelementptr inbounds i32, ptr %4, i64 %1072
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %12, i64 %1072
  %1076 = load i32, ptr %1075, align 4, !tbaa !5
  %1077 = add nsw i32 %1076, -1
  %1078 = icmp slt i32 %1074, %1077
  br i1 %1078, label %1079, label %1094

1079:                                             ; preds = %1071
  br i1 %1066, label %1086, label %1080

1080:                                             ; preds = %1079
  %1081 = getelementptr inbounds i32, ptr %7, i64 %1072
  %1082 = load i32, ptr %1081, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %6, i64 %1072
  %1084 = load i32, ptr %1083, align 4, !tbaa !5
  %1085 = add nsw i32 %1084, %1082
  store i32 %1085, ptr %1083, align 4, !tbaa !5
  br label %1104

1086:                                             ; preds = %1062, %1079
  %1087 = phi i32 [ %1074, %1079 ], [ %1063, %1062 ]
  %1088 = phi ptr [ %1073, %1079 ], [ %4, %1062 ]
  %1089 = phi i64 [ %1072, %1079 ], [ 0, %1062 ]
  %1090 = add nsw i32 %1087, 1
  store i32 %1090, ptr %1088, align 4, !tbaa !5
  %1091 = getelementptr inbounds i32, ptr %7, i64 %1089
  %1092 = load i32, ptr %1091, align 4, !tbaa !5
  %1093 = getelementptr inbounds i32, ptr %6, i64 %1089
  br label %1104

1094:                                             ; preds = %1071
  %1095 = icmp eq i32 %1074, %1077
  br i1 %1095, label %1096, label %1102

1096:                                             ; preds = %1094
  store i32 0, ptr %1073, align 4, !tbaa !5
  %1097 = getelementptr inbounds i32, ptr %8, i64 %1072
  %1098 = load i32, ptr %1097, align 4, !tbaa !5
  %1099 = getelementptr inbounds i32, ptr %6, i64 %1072
  store i32 %1098, ptr %1099, align 4, !tbaa !5
  %1100 = add nuw nsw i64 %1072, 1
  %1101 = icmp eq i64 %1100, %975
  br i1 %1101, label %1109, label %1071, !llvm.loop !1157

1102:                                             ; preds = %1067, %1094
  %1103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

1104:                                             ; preds = %1080, %1086
  %1105 = phi ptr [ %1093, %1086 ], [ %1073, %1080 ]
  %1106 = phi i32 [ %1092, %1086 ], [ 1, %1080 ]
  %1107 = load i32, ptr %1105, align 4, !tbaa !5
  %1108 = add nsw i32 %1107, %1106
  store i32 %1108, ptr %1105, align 4, !tbaa !5
  br label %1109

1109:                                             ; preds = %1096, %1104, %1069, %1051
  %1110 = icmp eq i32 %1061, %5
  br i1 %1110, label %5594, label %978, !llvm.loop !1158

1111:                                             ; preds = %961, %1247
  %1112 = phi i32 [ 0, %961 ], [ %1196, %1247 ]
  %1113 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %962, label %1114, label %1183

1114:                                             ; preds = %1111, %1173
  %1115 = phi i32 [ %1182, %1173 ], [ 0, %1111 ]
  %1116 = phi i64 [ %1124, %1173 ], [ %966, %1111 ]
  %1117 = phi i64 [ %1181, %1173 ], [ %965, %1111 ]
  %1118 = phi i32 [ %1179, %1173 ], [ %1113, %1111 ]
  %1119 = sub i32 %964, %1115
  %1120 = tail call i32 @llvm.smin.i32(i32 %1119, i32 0)
  %1121 = sub i32 %1119, %1120
  %1122 = zext i32 %1121 to i64
  %1123 = add nuw nsw i64 %1122, 1
  %1124 = add nsw i64 %1116, -1
  %1125 = icmp ult i32 %1121, 31
  br i1 %1125, label %1161, label %1126

1126:                                             ; preds = %1114
  %1127 = and i64 %1123, 8589934560
  %1128 = sub i64 %1117, %1127
  br label %1129

1129:                                             ; preds = %1129, %1126
  %1130 = phi i64 [ 0, %1126 ], [ %1153, %1129 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1149, %1129 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1150, %1129 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1151, %1129 ]
  %1134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1152, %1129 ]
  %1135 = sub i64 %1117, %1130
  %1136 = getelementptr inbounds i32, ptr %11, i64 %1135
  %1137 = getelementptr inbounds i32, ptr %1136, i64 -7
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = getelementptr inbounds i32, ptr %1136, i64 -15
  %1141 = load <8 x i32>, ptr %1140, align 4, !tbaa !5
  %1142 = shufflevector <8 x i32> %1141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1143 = getelementptr inbounds i32, ptr %1136, i64 -23
  %1144 = load <8 x i32>, ptr %1143, align 4, !tbaa !5
  %1145 = shufflevector <8 x i32> %1144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1146 = getelementptr inbounds i32, ptr %1136, i64 -31
  %1147 = load <8 x i32>, ptr %1146, align 4, !tbaa !5
  %1148 = shufflevector <8 x i32> %1147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1149 = mul <8 x i32> %1139, %1131
  %1150 = mul <8 x i32> %1142, %1132
  %1151 = mul <8 x i32> %1145, %1133
  %1152 = mul <8 x i32> %1148, %1134
  %1153 = add nuw i64 %1130, 32
  %1154 = icmp eq i64 %1153, %1127
  br i1 %1154, label %1155, label %1129, !llvm.loop !1159

1155:                                             ; preds = %1129
  %1156 = mul <8 x i32> %1150, %1149
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = mul <8 x i32> %1152, %1157
  %1159 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1158)
  %1160 = icmp eq i64 %1123, %1127
  br i1 %1160, label %1173, label %1161

1161:                                             ; preds = %1114, %1155
  %1162 = phi i64 [ %1117, %1114 ], [ %1128, %1155 ]
  %1163 = phi i32 [ 1, %1114 ], [ %1159, %1155 ]
  br label %1164

1164:                                             ; preds = %1161, %1164
  %1165 = phi i64 [ %1170, %1164 ], [ %1162, %1161 ]
  %1166 = phi i32 [ %1169, %1164 ], [ %1163, %1161 ]
  %1167 = getelementptr inbounds i32, ptr %11, i64 %1165
  %1168 = load i32, ptr %1167, align 4, !tbaa !5
  %1169 = mul nsw i32 %1168, %1166
  %1170 = add nsw i64 %1165, -1
  %1171 = trunc i64 %1165 to i32
  %1172 = icmp sgt i32 %1171, 0
  br i1 %1172, label %1164, label %1173, !llvm.loop !1160

1173:                                             ; preds = %1164, %1155
  %1174 = phi i32 [ %1159, %1155 ], [ %1169, %1164 ]
  %1175 = and i64 %1124, 4294967295
  %1176 = getelementptr inbounds i32, ptr %6, i64 %1175
  %1177 = load i32, ptr %1176, align 4, !tbaa !5
  %1178 = mul nsw i32 %1177, %1174
  %1179 = add nsw i32 %1178, %1118
  %1180 = icmp sgt i64 %1116, 2
  %1181 = add nsw i64 %1117, -1
  %1182 = add i32 %1115, 1
  br i1 %1180, label %1114, label %1183, !llvm.loop !1161

1183:                                             ; preds = %1173, %1111
  %1184 = phi i32 [ %1113, %1111 ], [ %1179, %1173 ]
  %1185 = icmp slt i32 %1184, %5
  br i1 %1185, label %1188, label %1186

1186:                                             ; preds = %1183
  %1187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

1188:                                             ; preds = %1183
  %1189 = sext i32 %1184 to i64
  %1190 = getelementptr inbounds float, ptr %634, i64 %1189
  %1191 = load float, ptr %1190, align 4, !tbaa !162
  %1192 = fptosi float %1191 to i32
  %1193 = load i32, ptr %636, align 4, !tbaa !5
  %1194 = tail call i32 @llvm.abs.i32(i32 %1192, i1 true)
  %1195 = tail call i32 @llvm.smax.i32(i32 %1193, i32 %1194)
  store i32 %1195, ptr %636, align 4, !tbaa !5
  %1196 = add nuw nsw i32 %1112, 1
  br i1 %963, label %1197, label %1247

1197:                                             ; preds = %1188
  %1198 = load i32, ptr %4, align 4, !tbaa !5
  %1199 = load i32, ptr %12, align 4, !tbaa !5
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !5
  %1205 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1205, ptr %6, align 4, !tbaa !5
  br i1 %968, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !5
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !5
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !5
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !5
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !5
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !5
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %966
  br i1 %1239, label %1247, label %1206, !llvm.loop !1162

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !5
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !5
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1188
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %5594, label %1111, !llvm.loop !1163

1249:                                             ; preds = %644
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2249, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !9
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !9
  store i8 0, ptr %1255, align 1, !tbaa !11
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1261

1257:                                             ; preds = %1251
  %1258 = load float, ptr %1253, align 4, !tbaa !162
  %1259 = fptosi float %1258 to i8
  %1260 = tail call i8 @llvm.abs.i8(i8 %1259, i1 false)
  store i8 %1260, ptr %1255, align 1, !tbaa !11
  br label %5594

1261:                                             ; preds = %1251
  switch i32 %1, label %1872 [
    i32 1, label %1262
    i32 0, label %1572
  ]

1262:                                             ; preds = %1261
  %1263 = getelementptr inbounds i32, ptr %3, i64 %19
  %1264 = load i32, ptr %1263, align 4, !tbaa !5
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp sgt i32 %5, 0
  br i1 %1265, label %1276, label %1267

1267:                                             ; preds = %1262
  br i1 %1266, label %1268, label %5594

1268:                                             ; preds = %1267
  %1269 = icmp sgt i32 %13, 1
  %1270 = icmp sgt i32 %13, 0
  %1271 = add i32 %13, -2
  %1272 = zext i32 %1271 to i64
  %1273 = zext i32 %13 to i64
  %1274 = add nuw i32 %5, 1
  %1275 = icmp eq i32 %13, 1
  br label %1428

1276:                                             ; preds = %1262
  br i1 %1266, label %1277, label %5594

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1285

1285:                                             ; preds = %1277, %1426
  %1286 = phi i32 [ 0, %1277 ], [ %1378, %1426 ]
  %1287 = phi double [ 0.000000e+00, %1277 ], [ %1377, %1426 ]
  %1288 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1278, label %1289, label %1358

1289:                                             ; preds = %1285, %1348
  %1290 = phi i32 [ %1357, %1348 ], [ 0, %1285 ]
  %1291 = phi i64 [ %1299, %1348 ], [ %1282, %1285 ]
  %1292 = phi i64 [ %1356, %1348 ], [ %1281, %1285 ]
  %1293 = phi i32 [ %1354, %1348 ], [ %1288, %1285 ]
  %1294 = sub i32 %1280, %1290
  %1295 = tail call i32 @llvm.smin.i32(i32 %1294, i32 0)
  %1296 = sub i32 %1294, %1295
  %1297 = zext i32 %1296 to i64
  %1298 = add nuw nsw i64 %1297, 1
  %1299 = add nsw i64 %1291, -1
  %1300 = icmp ult i32 %1296, 31
  br i1 %1300, label %1336, label %1301

1301:                                             ; preds = %1289
  %1302 = and i64 %1298, 8589934560
  %1303 = sub i64 %1292, %1302
  br label %1304

1304:                                             ; preds = %1304, %1301
  %1305 = phi i64 [ 0, %1301 ], [ %1328, %1304 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1324, %1304 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1325, %1304 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1326, %1304 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1327, %1304 ]
  %1310 = sub i64 %1292, %1305
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1310
  %1312 = getelementptr inbounds i32, ptr %1311, i64 -7
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !5
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1311, i64 -15
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !5
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1311, i64 -23
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !5
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = getelementptr inbounds i32, ptr %1311, i64 -31
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = mul <8 x i32> %1314, %1306
  %1325 = mul <8 x i32> %1317, %1307
  %1326 = mul <8 x i32> %1320, %1308
  %1327 = mul <8 x i32> %1323, %1309
  %1328 = add nuw i64 %1305, 32
  %1329 = icmp eq i64 %1328, %1302
  br i1 %1329, label %1330, label %1304, !llvm.loop !1164

1330:                                             ; preds = %1304
  %1331 = mul <8 x i32> %1325, %1324
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1333)
  %1335 = icmp eq i64 %1298, %1302
  br i1 %1335, label %1348, label %1336

1336:                                             ; preds = %1289, %1330
  %1337 = phi i64 [ %1292, %1289 ], [ %1303, %1330 ]
  %1338 = phi i32 [ 1, %1289 ], [ %1334, %1330 ]
  br label %1339

1339:                                             ; preds = %1336, %1339
  %1340 = phi i64 [ %1345, %1339 ], [ %1337, %1336 ]
  %1341 = phi i32 [ %1344, %1339 ], [ %1338, %1336 ]
  %1342 = getelementptr inbounds i32, ptr %9, i64 %1340
  %1343 = load i32, ptr %1342, align 4, !tbaa !5
  %1344 = mul nsw i32 %1343, %1341
  %1345 = add nsw i64 %1340, -1
  %1346 = trunc i64 %1340 to i32
  %1347 = icmp sgt i32 %1346, 0
  br i1 %1347, label %1339, label %1348, !llvm.loop !1165

1348:                                             ; preds = %1339, %1330
  %1349 = phi i32 [ %1334, %1330 ], [ %1344, %1339 ]
  %1350 = and i64 %1299, 4294967295
  %1351 = getelementptr inbounds i32, ptr %6, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1349
  %1354 = add nsw i32 %1353, %1293
  %1355 = icmp sgt i64 %1291, 2
  %1356 = add nsw i64 %1292, -1
  %1357 = add i32 %1290, 1
  br i1 %1355, label %1289, label %1358, !llvm.loop !1166

1358:                                             ; preds = %1348, %1285
  %1359 = phi i32 [ %1288, %1285 ], [ %1354, %1348 ]
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds double, ptr %2, i64 %1360
  %1362 = load double, ptr %1361, align 8, !tbaa !18
  %1363 = getelementptr inbounds float, ptr %1253, i64 %1360
  %1364 = load float, ptr %1363, align 4, !tbaa !162
  %1365 = fptosi float %1364 to i8
  %1366 = load i8, ptr %1255, align 1, !tbaa !11
  %1367 = sitofp i8 %1366 to double
  %1368 = sitofp i8 %1365 to double
  %1369 = fmul fast double %1362, %1368
  %1370 = fcmp fast uge double %1369, 0.000000e+00
  %1371 = fneg fast double %1369
  %1372 = tail call fast double @llvm.fabs.f64(double %1369)
  %1373 = fcmp fast ole double %1372, %1367
  %1374 = select nnan ninf i1 %1370, double %1369, double %1371
  %1375 = select i1 %1373, double %1367, double %1374
  %1376 = fptosi double %1375 to i8
  store i8 %1376, ptr %1255, align 1, !tbaa !11
  %1377 = fadd fast double %1362, %1287
  %1378 = add nuw nsw i32 %1286, 1
  br i1 %1279, label %1379, label %1426

1379:                                             ; preds = %1358
  %1380 = load i32, ptr %4, align 4, !tbaa !5
  %1381 = load i32, ptr %12, align 4, !tbaa !5
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1380, %1382
  br i1 %1383, label %1403, label %1384

1384:                                             ; preds = %1379
  %1385 = icmp eq i32 %1380, %1382
  br i1 %1385, label %1386, label %1419

1386:                                             ; preds = %1384
  store i32 0, ptr %4, align 4, !tbaa !5
  %1387 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1387, ptr %6, align 4, !tbaa !5
  br i1 %1284, label %1426, label %1388

1388:                                             ; preds = %1386, %1413
  %1389 = phi i64 [ %1417, %1413 ], [ 1, %1386 ]
  %1390 = getelementptr inbounds i32, ptr %4, i64 %1389
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %12, i64 %1389
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, -1
  %1395 = icmp slt i32 %1391, %1394
  br i1 %1395, label %1396, label %1411

1396:                                             ; preds = %1388
  br i1 %1383, label %1403, label %1397

1397:                                             ; preds = %1396
  %1398 = getelementptr inbounds i32, ptr %7, i64 %1389
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1389
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = add nsw i32 %1401, %1399
  store i32 %1402, ptr %1400, align 4, !tbaa !5
  br label %1421

1403:                                             ; preds = %1379, %1396
  %1404 = phi i32 [ %1391, %1396 ], [ %1380, %1379 ]
  %1405 = phi ptr [ %1390, %1396 ], [ %4, %1379 ]
  %1406 = phi i64 [ %1389, %1396 ], [ 0, %1379 ]
  %1407 = add nsw i32 %1404, 1
  store i32 %1407, ptr %1405, align 4, !tbaa !5
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1406
  br label %1421

1411:                                             ; preds = %1388
  %1412 = icmp eq i32 %1391, %1394
  br i1 %1412, label %1413, label %1419

1413:                                             ; preds = %1411
  store i32 0, ptr %1390, align 4, !tbaa !5
  %1414 = getelementptr inbounds i32, ptr %8, i64 %1389
  %1415 = load i32, ptr %1414, align 4, !tbaa !5
  %1416 = getelementptr inbounds i32, ptr %6, i64 %1389
  store i32 %1415, ptr %1416, align 4, !tbaa !5
  %1417 = add nuw nsw i64 %1389, 1
  %1418 = icmp eq i64 %1417, %1282
  br i1 %1418, label %1426, label %1388, !llvm.loop !1167

1419:                                             ; preds = %1384, %1411
  %1420 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

1421:                                             ; preds = %1397, %1403
  %1422 = phi ptr [ %1410, %1403 ], [ %1390, %1397 ]
  %1423 = phi i32 [ %1409, %1403 ], [ 1, %1397 ]
  %1424 = load i32, ptr %1422, align 4, !tbaa !5
  %1425 = add nsw i32 %1424, %1423
  store i32 %1425, ptr %1422, align 4, !tbaa !5
  br label %1426

1426:                                             ; preds = %1413, %1421, %1386, %1358
  %1427 = icmp eq i32 %1378, %5
  br i1 %1427, label %5594, label %1285, !llvm.loop !1168

1428:                                             ; preds = %1268, %1570
  %1429 = phi i32 [ 0, %1268 ], [ %1519, %1570 ]
  %1430 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1431, label %1500

1431:                                             ; preds = %1428, %1490
  %1432 = phi i32 [ %1499, %1490 ], [ 0, %1428 ]
  %1433 = phi i64 [ %1441, %1490 ], [ %1273, %1428 ]
  %1434 = phi i64 [ %1498, %1490 ], [ %1272, %1428 ]
  %1435 = phi i32 [ %1496, %1490 ], [ %1430, %1428 ]
  %1436 = sub i32 %1271, %1432
  %1437 = tail call i32 @llvm.smin.i32(i32 %1436, i32 0)
  %1438 = sub i32 %1436, %1437
  %1439 = zext i32 %1438 to i64
  %1440 = add nuw nsw i64 %1439, 1
  %1441 = add nsw i64 %1433, -1
  %1442 = icmp ult i32 %1438, 31
  br i1 %1442, label %1478, label %1443

1443:                                             ; preds = %1431
  %1444 = and i64 %1440, 8589934560
  %1445 = sub i64 %1434, %1444
  br label %1446

1446:                                             ; preds = %1446, %1443
  %1447 = phi i64 [ 0, %1443 ], [ %1470, %1446 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1466, %1446 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1467, %1446 ]
  %1450 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1468, %1446 ]
  %1451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1469, %1446 ]
  %1452 = sub i64 %1434, %1447
  %1453 = getelementptr inbounds i32, ptr %11, i64 %1452
  %1454 = getelementptr inbounds i32, ptr %1453, i64 -7
  %1455 = load <8 x i32>, ptr %1454, align 4, !tbaa !5
  %1456 = shufflevector <8 x i32> %1455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1457 = getelementptr inbounds i32, ptr %1453, i64 -15
  %1458 = load <8 x i32>, ptr %1457, align 4, !tbaa !5
  %1459 = shufflevector <8 x i32> %1458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1460 = getelementptr inbounds i32, ptr %1453, i64 -23
  %1461 = load <8 x i32>, ptr %1460, align 4, !tbaa !5
  %1462 = shufflevector <8 x i32> %1461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1463 = getelementptr inbounds i32, ptr %1453, i64 -31
  %1464 = load <8 x i32>, ptr %1463, align 4, !tbaa !5
  %1465 = shufflevector <8 x i32> %1464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1466 = mul <8 x i32> %1456, %1448
  %1467 = mul <8 x i32> %1459, %1449
  %1468 = mul <8 x i32> %1462, %1450
  %1469 = mul <8 x i32> %1465, %1451
  %1470 = add nuw i64 %1447, 32
  %1471 = icmp eq i64 %1470, %1444
  br i1 %1471, label %1472, label %1446, !llvm.loop !1169

1472:                                             ; preds = %1446
  %1473 = mul <8 x i32> %1467, %1466
  %1474 = mul <8 x i32> %1468, %1473
  %1475 = mul <8 x i32> %1469, %1474
  %1476 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1475)
  %1477 = icmp eq i64 %1440, %1444
  br i1 %1477, label %1490, label %1478

1478:                                             ; preds = %1431, %1472
  %1479 = phi i64 [ %1434, %1431 ], [ %1445, %1472 ]
  %1480 = phi i32 [ 1, %1431 ], [ %1476, %1472 ]
  br label %1481

1481:                                             ; preds = %1478, %1481
  %1482 = phi i64 [ %1487, %1481 ], [ %1479, %1478 ]
  %1483 = phi i32 [ %1486, %1481 ], [ %1480, %1478 ]
  %1484 = getelementptr inbounds i32, ptr %11, i64 %1482
  %1485 = load i32, ptr %1484, align 4, !tbaa !5
  %1486 = mul nsw i32 %1485, %1483
  %1487 = add nsw i64 %1482, -1
  %1488 = trunc i64 %1482 to i32
  %1489 = icmp sgt i32 %1488, 0
  br i1 %1489, label %1481, label %1490, !llvm.loop !1170

1490:                                             ; preds = %1481, %1472
  %1491 = phi i32 [ %1476, %1472 ], [ %1486, %1481 ]
  %1492 = and i64 %1441, 4294967295
  %1493 = getelementptr inbounds i32, ptr %6, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !5
  %1495 = mul nsw i32 %1494, %1491
  %1496 = add nsw i32 %1495, %1435
  %1497 = icmp sgt i64 %1433, 2
  %1498 = add nsw i64 %1434, -1
  %1499 = add i32 %1432, 1
  br i1 %1497, label %1431, label %1500, !llvm.loop !1171

1500:                                             ; preds = %1490, %1428
  %1501 = phi i32 [ %1430, %1428 ], [ %1496, %1490 ]
  %1502 = icmp slt i32 %1501, %5
  br i1 %1502, label %1505, label %1503

1503:                                             ; preds = %1500
  %1504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

1505:                                             ; preds = %1500
  %1506 = sext i32 %1501 to i64
  %1507 = getelementptr inbounds float, ptr %1253, i64 %1506
  %1508 = load float, ptr %1507, align 4, !tbaa !162
  %1509 = fptosi float %1508 to i8
  %1510 = load i8, ptr %1255, align 1, !tbaa !11
  %1511 = sitofp i8 %1510 to double
  %1512 = sitofp i8 %1509 to double
  %1513 = icmp slt i8 %1509, 0
  %1514 = fneg fast double %1512
  %1515 = select i1 %1513, double %1514, double %1512
  %1516 = fcmp fast ole double %1515, %1511
  %1517 = select fast i1 %1516, double %1511, double %1515
  %1518 = fptosi double %1517 to i8
  store i8 %1518, ptr %1255, align 1, !tbaa !11
  %1519 = add nuw nsw i32 %1429, 1
  br i1 %1270, label %1520, label %1570

1520:                                             ; preds = %1505
  %1521 = load i32, ptr %4, align 4, !tbaa !5
  %1522 = load i32, ptr %12, align 4, !tbaa !5
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1521, %1523
  br i1 %1524, label %1547, label %1525

1525:                                             ; preds = %1520
  %1526 = icmp eq i32 %1521, %1523
  br i1 %1526, label %1527, label %1563

1527:                                             ; preds = %1525
  store i32 0, ptr %4, align 4, !tbaa !5
  %1528 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1528, ptr %6, align 4, !tbaa !5
  br i1 %1275, label %1570, label %1529

1529:                                             ; preds = %1527, %1557
  %1530 = phi i64 [ %1561, %1557 ], [ 1, %1527 ]
  %1531 = getelementptr inbounds i32, ptr %4, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %12, i64 %1530
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = add nsw i32 %1534, -1
  %1536 = icmp slt i32 %1532, %1535
  br i1 %1536, label %1537, label %1555

1537:                                             ; preds = %1529
  br i1 %1524, label %1547, label %1538

1538:                                             ; preds = %1537
  %1539 = shl i64 %1530, 32
  %1540 = add i64 %1539, -4294967296
  %1541 = ashr exact i64 %1540, 32
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1530
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = add nsw i32 %1545, %1543
  store i32 %1546, ptr %1544, align 4, !tbaa !5
  br label %1565

1547:                                             ; preds = %1520, %1537
  %1548 = phi i32 [ %1532, %1537 ], [ %1521, %1520 ]
  %1549 = phi ptr [ %1531, %1537 ], [ %4, %1520 ]
  %1550 = phi i64 [ %1530, %1537 ], [ 0, %1520 ]
  %1551 = add nsw i32 %1548, 1
  store i32 %1551, ptr %1549, align 4, !tbaa !5
  %1552 = getelementptr inbounds i32, ptr %7, i64 %1550
  %1553 = load i32, ptr %1552, align 4, !tbaa !5
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1550
  br label %1565

1555:                                             ; preds = %1529
  %1556 = icmp eq i32 %1532, %1535
  br i1 %1556, label %1557, label %1563

1557:                                             ; preds = %1555
  store i32 0, ptr %1531, align 4, !tbaa !5
  %1558 = getelementptr inbounds i32, ptr %8, i64 %1530
  %1559 = load i32, ptr %1558, align 4, !tbaa !5
  %1560 = getelementptr inbounds i32, ptr %6, i64 %1530
  store i32 %1559, ptr %1560, align 4, !tbaa !5
  %1561 = add nuw nsw i64 %1530, 1
  %1562 = icmp eq i64 %1561, %1273
  br i1 %1562, label %1570, label %1529, !llvm.loop !1172

1563:                                             ; preds = %1525, %1555
  %1564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

1565:                                             ; preds = %1538, %1547
  %1566 = phi ptr [ %1554, %1547 ], [ %1531, %1538 ]
  %1567 = phi i32 [ %1553, %1547 ], [ 1, %1538 ]
  %1568 = load i32, ptr %1566, align 4, !tbaa !5
  %1569 = add nsw i32 %1568, %1567
  store i32 %1569, ptr %1566, align 4, !tbaa !5
  br label %1570

1570:                                             ; preds = %1557, %1565, %1527, %1505
  %1571 = icmp eq i32 %1519, %5
  br i1 %1571, label %5594, label %1428, !llvm.loop !1173

1572:                                             ; preds = %1261
  %1573 = getelementptr inbounds i32, ptr %3, i64 %19
  %1574 = load i32, ptr %1573, align 4, !tbaa !5
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp sgt i32 %5, 0
  br i1 %1575, label %1586, label %1577

1577:                                             ; preds = %1572
  br i1 %1576, label %1578, label %5594

1578:                                             ; preds = %1577
  %1579 = icmp sgt i32 %13, 1
  %1580 = icmp sgt i32 %13, 0
  %1581 = add i32 %13, -2
  %1582 = zext i32 %1581 to i64
  %1583 = zext i32 %13 to i64
  %1584 = add nuw i32 %5, 1
  %1585 = icmp eq i32 %13, 1
  br label %1731

1586:                                             ; preds = %1572
  br i1 %1576, label %1587, label %5594

1587:                                             ; preds = %1586
  %1588 = icmp sgt i32 %13, 1
  %1589 = icmp sgt i32 %13, 0
  %1590 = add i32 %13, -2
  %1591 = zext i32 %1590 to i64
  %1592 = zext i32 %13 to i64
  %1593 = add nuw i32 %5, 1
  %1594 = icmp eq i32 %13, 1
  br label %1595

1595:                                             ; preds = %1587, %1729
  %1596 = phi i32 [ 0, %1587 ], [ %1681, %1729 ]
  %1597 = phi double [ 0.000000e+00, %1587 ], [ %1680, %1729 ]
  %1598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1588, label %1599, label %1668

1599:                                             ; preds = %1595, %1658
  %1600 = phi i32 [ %1667, %1658 ], [ 0, %1595 ]
  %1601 = phi i64 [ %1609, %1658 ], [ %1592, %1595 ]
  %1602 = phi i64 [ %1666, %1658 ], [ %1591, %1595 ]
  %1603 = phi i32 [ %1664, %1658 ], [ %1598, %1595 ]
  %1604 = sub i32 %1590, %1600
  %1605 = tail call i32 @llvm.smin.i32(i32 %1604, i32 0)
  %1606 = sub i32 %1604, %1605
  %1607 = zext i32 %1606 to i64
  %1608 = add nuw nsw i64 %1607, 1
  %1609 = add nsw i64 %1601, -1
  %1610 = icmp ult i32 %1606, 31
  br i1 %1610, label %1646, label %1611

1611:                                             ; preds = %1599
  %1612 = and i64 %1608, 8589934560
  %1613 = sub i64 %1602, %1612
  br label %1614

1614:                                             ; preds = %1614, %1611
  %1615 = phi i64 [ 0, %1611 ], [ %1638, %1614 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1634, %1614 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1635, %1614 ]
  %1618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1636, %1614 ]
  %1619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1637, %1614 ]
  %1620 = sub i64 %1602, %1615
  %1621 = getelementptr inbounds i32, ptr %9, i64 %1620
  %1622 = getelementptr inbounds i32, ptr %1621, i64 -7
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !5
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1621, i64 -15
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !5
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = getelementptr inbounds i32, ptr %1621, i64 -23
  %1629 = load <8 x i32>, ptr %1628, align 4, !tbaa !5
  %1630 = shufflevector <8 x i32> %1629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1631 = getelementptr inbounds i32, ptr %1621, i64 -31
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !5
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = mul <8 x i32> %1624, %1616
  %1635 = mul <8 x i32> %1627, %1617
  %1636 = mul <8 x i32> %1630, %1618
  %1637 = mul <8 x i32> %1633, %1619
  %1638 = add nuw i64 %1615, 32
  %1639 = icmp eq i64 %1638, %1612
  br i1 %1639, label %1640, label %1614, !llvm.loop !1174

1640:                                             ; preds = %1614
  %1641 = mul <8 x i32> %1635, %1634
  %1642 = mul <8 x i32> %1636, %1641
  %1643 = mul <8 x i32> %1637, %1642
  %1644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1643)
  %1645 = icmp eq i64 %1608, %1612
  br i1 %1645, label %1658, label %1646

1646:                                             ; preds = %1599, %1640
  %1647 = phi i64 [ %1602, %1599 ], [ %1613, %1640 ]
  %1648 = phi i32 [ 1, %1599 ], [ %1644, %1640 ]
  br label %1649

1649:                                             ; preds = %1646, %1649
  %1650 = phi i64 [ %1655, %1649 ], [ %1647, %1646 ]
  %1651 = phi i32 [ %1654, %1649 ], [ %1648, %1646 ]
  %1652 = getelementptr inbounds i32, ptr %9, i64 %1650
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = mul nsw i32 %1653, %1651
  %1655 = add nsw i64 %1650, -1
  %1656 = trunc i64 %1650 to i32
  %1657 = icmp sgt i32 %1656, 0
  br i1 %1657, label %1649, label %1658, !llvm.loop !1175

1658:                                             ; preds = %1649, %1640
  %1659 = phi i32 [ %1644, %1640 ], [ %1654, %1649 ]
  %1660 = and i64 %1609, 4294967295
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1660
  %1662 = load i32, ptr %1661, align 4, !tbaa !5
  %1663 = mul nsw i32 %1662, %1659
  %1664 = add nsw i32 %1663, %1603
  %1665 = icmp sgt i64 %1601, 2
  %1666 = add nsw i64 %1602, -1
  %1667 = add i32 %1600, 1
  br i1 %1665, label %1599, label %1668, !llvm.loop !1176

1668:                                             ; preds = %1658, %1595
  %1669 = phi i32 [ %1598, %1595 ], [ %1664, %1658 ]
  %1670 = sext i32 %1669 to i64
  %1671 = getelementptr inbounds float, ptr %1253, i64 %1670
  %1672 = load float, ptr %1671, align 4, !tbaa !162
  %1673 = fptosi float %1672 to i8
  %1674 = load i8, ptr %1255, align 1, !tbaa !11
  %1675 = sext i8 %1674 to i32
  %1676 = tail call i8 @llvm.abs.i8(i8 %1673, i1 false)
  %1677 = zext i8 %1676 to i32
  %1678 = icmp slt i32 %1675, %1677
  %1679 = select i1 %1678, i8 %1676, i8 %1674
  store i8 %1679, ptr %1255, align 1, !tbaa !11
  %1680 = fadd fast double %1597, 1.000000e+00
  %1681 = add nuw nsw i32 %1596, 1
  br i1 %1589, label %1682, label %1729

1682:                                             ; preds = %1668
  %1683 = load i32, ptr %4, align 4, !tbaa !5
  %1684 = load i32, ptr %12, align 4, !tbaa !5
  %1685 = add nsw i32 %1684, -1
  %1686 = icmp slt i32 %1683, %1685
  br i1 %1686, label %1706, label %1687

1687:                                             ; preds = %1682
  %1688 = icmp eq i32 %1683, %1685
  br i1 %1688, label %1689, label %1722

1689:                                             ; preds = %1687
  store i32 0, ptr %4, align 4, !tbaa !5
  %1690 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1690, ptr %6, align 4, !tbaa !5
  br i1 %1594, label %1729, label %1691

1691:                                             ; preds = %1689, %1716
  %1692 = phi i64 [ %1720, %1716 ], [ 1, %1689 ]
  %1693 = getelementptr inbounds i32, ptr %4, i64 %1692
  %1694 = load i32, ptr %1693, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %12, i64 %1692
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, -1
  %1698 = icmp slt i32 %1694, %1697
  br i1 %1698, label %1699, label %1714

1699:                                             ; preds = %1691
  br i1 %1686, label %1706, label %1700

1700:                                             ; preds = %1699
  %1701 = getelementptr inbounds i32, ptr %7, i64 %1692
  %1702 = load i32, ptr %1701, align 4, !tbaa !5
  %1703 = getelementptr inbounds i32, ptr %6, i64 %1692
  %1704 = load i32, ptr %1703, align 4, !tbaa !5
  %1705 = add nsw i32 %1704, %1702
  store i32 %1705, ptr %1703, align 4, !tbaa !5
  br label %1724

1706:                                             ; preds = %1682, %1699
  %1707 = phi i32 [ %1694, %1699 ], [ %1683, %1682 ]
  %1708 = phi ptr [ %1693, %1699 ], [ %4, %1682 ]
  %1709 = phi i64 [ %1692, %1699 ], [ 0, %1682 ]
  %1710 = add nsw i32 %1707, 1
  store i32 %1710, ptr %1708, align 4, !tbaa !5
  %1711 = getelementptr inbounds i32, ptr %7, i64 %1709
  %1712 = load i32, ptr %1711, align 4, !tbaa !5
  %1713 = getelementptr inbounds i32, ptr %6, i64 %1709
  br label %1724

1714:                                             ; preds = %1691
  %1715 = icmp eq i32 %1694, %1697
  br i1 %1715, label %1716, label %1722

1716:                                             ; preds = %1714
  store i32 0, ptr %1693, align 4, !tbaa !5
  %1717 = getelementptr inbounds i32, ptr %8, i64 %1692
  %1718 = load i32, ptr %1717, align 4, !tbaa !5
  %1719 = getelementptr inbounds i32, ptr %6, i64 %1692
  store i32 %1718, ptr %1719, align 4, !tbaa !5
  %1720 = add nuw nsw i64 %1692, 1
  %1721 = icmp eq i64 %1720, %1592
  br i1 %1721, label %1729, label %1691, !llvm.loop !1177

1722:                                             ; preds = %1687, %1714
  %1723 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

1724:                                             ; preds = %1700, %1706
  %1725 = phi ptr [ %1713, %1706 ], [ %1693, %1700 ]
  %1726 = phi i32 [ %1712, %1706 ], [ 1, %1700 ]
  %1727 = load i32, ptr %1725, align 4, !tbaa !5
  %1728 = add nsw i32 %1727, %1726
  store i32 %1728, ptr %1725, align 4, !tbaa !5
  br label %1729

1729:                                             ; preds = %1716, %1724, %1689, %1668
  %1730 = icmp eq i32 %1681, %5
  br i1 %1730, label %5594, label %1595, !llvm.loop !1178

1731:                                             ; preds = %1578, %1870
  %1732 = phi i32 [ 0, %1578 ], [ %1819, %1870 ]
  %1733 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1579, label %1734, label %1803

1734:                                             ; preds = %1731, %1793
  %1735 = phi i32 [ %1802, %1793 ], [ 0, %1731 ]
  %1736 = phi i64 [ %1744, %1793 ], [ %1583, %1731 ]
  %1737 = phi i64 [ %1801, %1793 ], [ %1582, %1731 ]
  %1738 = phi i32 [ %1799, %1793 ], [ %1733, %1731 ]
  %1739 = sub i32 %1581, %1735
  %1740 = tail call i32 @llvm.smin.i32(i32 %1739, i32 0)
  %1741 = sub i32 %1739, %1740
  %1742 = zext i32 %1741 to i64
  %1743 = add nuw nsw i64 %1742, 1
  %1744 = add nsw i64 %1736, -1
  %1745 = icmp ult i32 %1741, 31
  br i1 %1745, label %1781, label %1746

1746:                                             ; preds = %1734
  %1747 = and i64 %1743, 8589934560
  %1748 = sub i64 %1737, %1747
  br label %1749

1749:                                             ; preds = %1749, %1746
  %1750 = phi i64 [ 0, %1746 ], [ %1773, %1749 ]
  %1751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1769, %1749 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1770, %1749 ]
  %1753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1771, %1749 ]
  %1754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1772, %1749 ]
  %1755 = sub i64 %1737, %1750
  %1756 = getelementptr inbounds i32, ptr %11, i64 %1755
  %1757 = getelementptr inbounds i32, ptr %1756, i64 -7
  %1758 = load <8 x i32>, ptr %1757, align 4, !tbaa !5
  %1759 = shufflevector <8 x i32> %1758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1760 = getelementptr inbounds i32, ptr %1756, i64 -15
  %1761 = load <8 x i32>, ptr %1760, align 4, !tbaa !5
  %1762 = shufflevector <8 x i32> %1761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1763 = getelementptr inbounds i32, ptr %1756, i64 -23
  %1764 = load <8 x i32>, ptr %1763, align 4, !tbaa !5
  %1765 = shufflevector <8 x i32> %1764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1766 = getelementptr inbounds i32, ptr %1756, i64 -31
  %1767 = load <8 x i32>, ptr %1766, align 4, !tbaa !5
  %1768 = shufflevector <8 x i32> %1767, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1769 = mul <8 x i32> %1759, %1751
  %1770 = mul <8 x i32> %1762, %1752
  %1771 = mul <8 x i32> %1765, %1753
  %1772 = mul <8 x i32> %1768, %1754
  %1773 = add nuw i64 %1750, 32
  %1774 = icmp eq i64 %1773, %1747
  br i1 %1774, label %1775, label %1749, !llvm.loop !1179

1775:                                             ; preds = %1749
  %1776 = mul <8 x i32> %1770, %1769
  %1777 = mul <8 x i32> %1771, %1776
  %1778 = mul <8 x i32> %1772, %1777
  %1779 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1778)
  %1780 = icmp eq i64 %1743, %1747
  br i1 %1780, label %1793, label %1781

1781:                                             ; preds = %1734, %1775
  %1782 = phi i64 [ %1737, %1734 ], [ %1748, %1775 ]
  %1783 = phi i32 [ 1, %1734 ], [ %1779, %1775 ]
  br label %1784

1784:                                             ; preds = %1781, %1784
  %1785 = phi i64 [ %1790, %1784 ], [ %1782, %1781 ]
  %1786 = phi i32 [ %1789, %1784 ], [ %1783, %1781 ]
  %1787 = getelementptr inbounds i32, ptr %11, i64 %1785
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = mul nsw i32 %1788, %1786
  %1790 = add nsw i64 %1785, -1
  %1791 = trunc i64 %1785 to i32
  %1792 = icmp sgt i32 %1791, 0
  br i1 %1792, label %1784, label %1793, !llvm.loop !1180

1793:                                             ; preds = %1784, %1775
  %1794 = phi i32 [ %1779, %1775 ], [ %1789, %1784 ]
  %1795 = and i64 %1744, 4294967295
  %1796 = getelementptr inbounds i32, ptr %6, i64 %1795
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = mul nsw i32 %1797, %1794
  %1799 = add nsw i32 %1798, %1738
  %1800 = icmp sgt i64 %1736, 2
  %1801 = add nsw i64 %1737, -1
  %1802 = add i32 %1735, 1
  br i1 %1800, label %1734, label %1803, !llvm.loop !1181

1803:                                             ; preds = %1793, %1731
  %1804 = phi i32 [ %1733, %1731 ], [ %1799, %1793 ]
  %1805 = icmp slt i32 %1804, %5
  br i1 %1805, label %1808, label %1806

1806:                                             ; preds = %1803
  %1807 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

1808:                                             ; preds = %1803
  %1809 = sext i32 %1804 to i64
  %1810 = getelementptr inbounds float, ptr %1253, i64 %1809
  %1811 = load float, ptr %1810, align 4, !tbaa !162
  %1812 = fptosi float %1811 to i8
  %1813 = load i8, ptr %1255, align 1, !tbaa !11
  %1814 = sext i8 %1813 to i32
  %1815 = tail call i8 @llvm.abs.i8(i8 %1812, i1 false)
  %1816 = zext i8 %1815 to i32
  %1817 = icmp slt i32 %1814, %1816
  %1818 = select i1 %1817, i8 %1815, i8 %1813
  store i8 %1818, ptr %1255, align 1, !tbaa !11
  %1819 = add nuw nsw i32 %1732, 1
  br i1 %1580, label %1820, label %1870

1820:                                             ; preds = %1808
  %1821 = load i32, ptr %4, align 4, !tbaa !5
  %1822 = load i32, ptr %12, align 4, !tbaa !5
  %1823 = add nsw i32 %1822, -1
  %1824 = icmp slt i32 %1821, %1823
  br i1 %1824, label %1847, label %1825

1825:                                             ; preds = %1820
  %1826 = icmp eq i32 %1821, %1823
  br i1 %1826, label %1827, label %1863

1827:                                             ; preds = %1825
  store i32 0, ptr %4, align 4, !tbaa !5
  %1828 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1828, ptr %6, align 4, !tbaa !5
  br i1 %1585, label %1870, label %1829

1829:                                             ; preds = %1827, %1857
  %1830 = phi i64 [ %1861, %1857 ], [ 1, %1827 ]
  %1831 = getelementptr inbounds i32, ptr %4, i64 %1830
  %1832 = load i32, ptr %1831, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %12, i64 %1830
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = add nsw i32 %1834, -1
  %1836 = icmp slt i32 %1832, %1835
  br i1 %1836, label %1837, label %1855

1837:                                             ; preds = %1829
  br i1 %1824, label %1847, label %1838

1838:                                             ; preds = %1837
  %1839 = shl i64 %1830, 32
  %1840 = add i64 %1839, -4294967296
  %1841 = ashr exact i64 %1840, 32
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1841
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1830
  %1845 = load i32, ptr %1844, align 4, !tbaa !5
  %1846 = add nsw i32 %1845, %1843
  store i32 %1846, ptr %1844, align 4, !tbaa !5
  br label %1865

1847:                                             ; preds = %1820, %1837
  %1848 = phi i32 [ %1832, %1837 ], [ %1821, %1820 ]
  %1849 = phi ptr [ %1831, %1837 ], [ %4, %1820 ]
  %1850 = phi i64 [ %1830, %1837 ], [ 0, %1820 ]
  %1851 = add nsw i32 %1848, 1
  store i32 %1851, ptr %1849, align 4, !tbaa !5
  %1852 = getelementptr inbounds i32, ptr %7, i64 %1850
  %1853 = load i32, ptr %1852, align 4, !tbaa !5
  %1854 = getelementptr inbounds i32, ptr %6, i64 %1850
  br label %1865

1855:                                             ; preds = %1829
  %1856 = icmp eq i32 %1832, %1835
  br i1 %1856, label %1857, label %1863

1857:                                             ; preds = %1855
  store i32 0, ptr %1831, align 4, !tbaa !5
  %1858 = getelementptr inbounds i32, ptr %8, i64 %1830
  %1859 = load i32, ptr %1858, align 4, !tbaa !5
  %1860 = getelementptr inbounds i32, ptr %6, i64 %1830
  store i32 %1859, ptr %1860, align 4, !tbaa !5
  %1861 = add nuw nsw i64 %1830, 1
  %1862 = icmp eq i64 %1861, %1583
  br i1 %1862, label %1870, label %1829, !llvm.loop !1182

1863:                                             ; preds = %1825, %1855
  %1864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

1865:                                             ; preds = %1838, %1847
  %1866 = phi ptr [ %1854, %1847 ], [ %1831, %1838 ]
  %1867 = phi i32 [ %1853, %1847 ], [ 1, %1838 ]
  %1868 = load i32, ptr %1866, align 4, !tbaa !5
  %1869 = add nsw i32 %1868, %1867
  store i32 %1869, ptr %1866, align 4, !tbaa !5
  br label %1870

1870:                                             ; preds = %1857, %1865, %1827, %1808
  %1871 = icmp eq i32 %1819, %5
  br i1 %1871, label %5594, label %1731, !llvm.loop !1183

1872:                                             ; preds = %1261
  %1873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2253, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

1874:                                             ; preds = %18
  %1875 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1876 = load ptr, ptr %1875, align 8, !tbaa !9
  %1877 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1878 = load ptr, ptr %1877, align 8, !tbaa !9
  store i16 0, ptr %1878, align 2, !tbaa !78
  %1879 = icmp eq i32 %13, 0
  br i1 %1879, label %1880, label %1884

1880:                                             ; preds = %1874
  %1881 = load float, ptr %1876, align 4, !tbaa !162
  %1882 = fptosi float %1881 to i16
  %1883 = tail call i16 @llvm.abs.i16(i16 %1882, i1 false)
  store i16 %1883, ptr %1878, align 2, !tbaa !78
  br label %5594

1884:                                             ; preds = %1874
  switch i32 %1, label %2495 [
    i32 1, label %1885
    i32 0, label %2195
  ]

1885:                                             ; preds = %1884
  %1886 = getelementptr inbounds i32, ptr %3, i64 %19
  %1887 = load i32, ptr %1886, align 4, !tbaa !5
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp sgt i32 %5, 0
  br i1 %1888, label %1899, label %1890

1890:                                             ; preds = %1885
  br i1 %1889, label %1891, label %5594

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %2051

1899:                                             ; preds = %1885
  br i1 %1889, label %1900, label %5594

1900:                                             ; preds = %1899
  %1901 = icmp sgt i32 %13, 1
  %1902 = icmp sgt i32 %13, 0
  %1903 = add i32 %13, -2
  %1904 = zext i32 %1903 to i64
  %1905 = zext i32 %13 to i64
  %1906 = add nuw i32 %5, 1
  %1907 = icmp eq i32 %13, 1
  br label %1908

1908:                                             ; preds = %1900, %2049
  %1909 = phi i16 [ 0, %1900 ], [ %1999, %2049 ]
  %1910 = phi i32 [ 0, %1900 ], [ %2001, %2049 ]
  %1911 = phi double [ 0.000000e+00, %1900 ], [ %2000, %2049 ]
  %1912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1901, label %1913, label %1982

1913:                                             ; preds = %1908, %1972
  %1914 = phi i32 [ %1981, %1972 ], [ 0, %1908 ]
  %1915 = phi i64 [ %1923, %1972 ], [ %1905, %1908 ]
  %1916 = phi i64 [ %1980, %1972 ], [ %1904, %1908 ]
  %1917 = phi i32 [ %1978, %1972 ], [ %1912, %1908 ]
  %1918 = sub i32 %1903, %1914
  %1919 = tail call i32 @llvm.smin.i32(i32 %1918, i32 0)
  %1920 = sub i32 %1918, %1919
  %1921 = zext i32 %1920 to i64
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = add nsw i64 %1915, -1
  %1924 = icmp ult i32 %1920, 31
  br i1 %1924, label %1960, label %1925

1925:                                             ; preds = %1913
  %1926 = and i64 %1922, 8589934560
  %1927 = sub i64 %1916, %1926
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = phi i64 [ 0, %1925 ], [ %1952, %1928 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1948, %1928 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1949, %1928 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1950, %1928 ]
  %1933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1951, %1928 ]
  %1934 = sub i64 %1916, %1929
  %1935 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1936 = getelementptr inbounds i32, ptr %1935, i64 -7
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !5
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1935, i64 -15
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !5
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = getelementptr inbounds i32, ptr %1935, i64 -23
  %1943 = load <8 x i32>, ptr %1942, align 4, !tbaa !5
  %1944 = shufflevector <8 x i32> %1943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1945 = getelementptr inbounds i32, ptr %1935, i64 -31
  %1946 = load <8 x i32>, ptr %1945, align 4, !tbaa !5
  %1947 = shufflevector <8 x i32> %1946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1948 = mul <8 x i32> %1938, %1930
  %1949 = mul <8 x i32> %1941, %1931
  %1950 = mul <8 x i32> %1944, %1932
  %1951 = mul <8 x i32> %1947, %1933
  %1952 = add nuw i64 %1929, 32
  %1953 = icmp eq i64 %1952, %1926
  br i1 %1953, label %1954, label %1928, !llvm.loop !1184

1954:                                             ; preds = %1928
  %1955 = mul <8 x i32> %1949, %1948
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = mul <8 x i32> %1951, %1956
  %1958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1957)
  %1959 = icmp eq i64 %1922, %1926
  br i1 %1959, label %1972, label %1960

1960:                                             ; preds = %1913, %1954
  %1961 = phi i64 [ %1916, %1913 ], [ %1927, %1954 ]
  %1962 = phi i32 [ 1, %1913 ], [ %1958, %1954 ]
  br label %1963

1963:                                             ; preds = %1960, %1963
  %1964 = phi i64 [ %1969, %1963 ], [ %1961, %1960 ]
  %1965 = phi i32 [ %1968, %1963 ], [ %1962, %1960 ]
  %1966 = getelementptr inbounds i32, ptr %9, i64 %1964
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = mul nsw i32 %1967, %1965
  %1969 = add nsw i64 %1964, -1
  %1970 = trunc i64 %1964 to i32
  %1971 = icmp sgt i32 %1970, 0
  br i1 %1971, label %1963, label %1972, !llvm.loop !1185

1972:                                             ; preds = %1963, %1954
  %1973 = phi i32 [ %1958, %1954 ], [ %1968, %1963 ]
  %1974 = and i64 %1923, 4294967295
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1974
  %1976 = load i32, ptr %1975, align 4, !tbaa !5
  %1977 = mul nsw i32 %1976, %1973
  %1978 = add nsw i32 %1977, %1917
  %1979 = icmp sgt i64 %1915, 2
  %1980 = add nsw i64 %1916, -1
  %1981 = add i32 %1914, 1
  br i1 %1979, label %1913, label %1982, !llvm.loop !1186

1982:                                             ; preds = %1972, %1908
  %1983 = phi i32 [ %1912, %1908 ], [ %1978, %1972 ]
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds double, ptr %2, i64 %1984
  %1986 = load double, ptr %1985, align 8, !tbaa !18
  %1987 = getelementptr inbounds float, ptr %1876, i64 %1984
  %1988 = load float, ptr %1987, align 4, !tbaa !162
  %1989 = fptosi float %1988 to i16
  %1990 = sitofp i16 %1909 to double
  %1991 = sitofp i16 %1989 to double
  %1992 = fmul fast double %1986, %1991
  %1993 = fcmp fast uge double %1992, 0.000000e+00
  %1994 = fneg fast double %1992
  %1995 = tail call fast double @llvm.fabs.f64(double %1992)
  %1996 = fcmp fast ole double %1995, %1990
  %1997 = select nnan ninf i1 %1993, double %1992, double %1994
  %1998 = select i1 %1996, double %1990, double %1997
  %1999 = fptosi double %1998 to i16
  %2000 = fadd fast double %1986, %1911
  %2001 = add nuw nsw i32 %1910, 1
  br i1 %1902, label %2002, label %2049

2002:                                             ; preds = %1982
  %2003 = load i32, ptr %4, align 4, !tbaa !5
  %2004 = load i32, ptr %12, align 4, !tbaa !5
  %2005 = add nsw i32 %2004, -1
  %2006 = icmp slt i32 %2003, %2005
  br i1 %2006, label %2026, label %2007

2007:                                             ; preds = %2002
  %2008 = icmp eq i32 %2003, %2005
  br i1 %2008, label %2009, label %2042

2009:                                             ; preds = %2007
  store i32 0, ptr %4, align 4, !tbaa !5
  %2010 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2010, ptr %6, align 4, !tbaa !5
  br i1 %1907, label %2049, label %2011

2011:                                             ; preds = %2009, %2036
  %2012 = phi i64 [ %2040, %2036 ], [ 1, %2009 ]
  %2013 = getelementptr inbounds i32, ptr %4, i64 %2012
  %2014 = load i32, ptr %2013, align 4, !tbaa !5
  %2015 = getelementptr inbounds i32, ptr %12, i64 %2012
  %2016 = load i32, ptr %2015, align 4, !tbaa !5
  %2017 = add nsw i32 %2016, -1
  %2018 = icmp slt i32 %2014, %2017
  br i1 %2018, label %2019, label %2034

2019:                                             ; preds = %2011
  br i1 %2006, label %2026, label %2020

2020:                                             ; preds = %2019
  %2021 = getelementptr inbounds i32, ptr %7, i64 %2012
  %2022 = load i32, ptr %2021, align 4, !tbaa !5
  %2023 = getelementptr inbounds i32, ptr %6, i64 %2012
  %2024 = load i32, ptr %2023, align 4, !tbaa !5
  %2025 = add nsw i32 %2024, %2022
  store i32 %2025, ptr %2023, align 4, !tbaa !5
  br label %2044

2026:                                             ; preds = %2002, %2019
  %2027 = phi i32 [ %2014, %2019 ], [ %2003, %2002 ]
  %2028 = phi ptr [ %2013, %2019 ], [ %4, %2002 ]
  %2029 = phi i64 [ %2012, %2019 ], [ 0, %2002 ]
  %2030 = add nsw i32 %2027, 1
  store i32 %2030, ptr %2028, align 4, !tbaa !5
  %2031 = getelementptr inbounds i32, ptr %7, i64 %2029
  %2032 = load i32, ptr %2031, align 4, !tbaa !5
  %2033 = getelementptr inbounds i32, ptr %6, i64 %2029
  br label %2044

2034:                                             ; preds = %2011
  %2035 = icmp eq i32 %2014, %2017
  br i1 %2035, label %2036, label %2042

2036:                                             ; preds = %2034
  store i32 0, ptr %2013, align 4, !tbaa !5
  %2037 = getelementptr inbounds i32, ptr %8, i64 %2012
  %2038 = load i32, ptr %2037, align 4, !tbaa !5
  %2039 = getelementptr inbounds i32, ptr %6, i64 %2012
  store i32 %2038, ptr %2039, align 4, !tbaa !5
  %2040 = add nuw nsw i64 %2012, 1
  %2041 = icmp eq i64 %2040, %1905
  br i1 %2041, label %2049, label %2011, !llvm.loop !1187

2042:                                             ; preds = %2007, %2034
  store i16 %1999, ptr %1878, align 2, !tbaa !78
  %2043 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2044:                                             ; preds = %2020, %2026
  %2045 = phi ptr [ %2033, %2026 ], [ %2013, %2020 ]
  %2046 = phi i32 [ %2032, %2026 ], [ 1, %2020 ]
  %2047 = load i32, ptr %2045, align 4, !tbaa !5
  %2048 = add nsw i32 %2047, %2046
  store i32 %2048, ptr %2045, align 4, !tbaa !5
  br label %2049

2049:                                             ; preds = %2036, %2044, %2009, %1982
  %2050 = icmp eq i32 %2001, %5
  br i1 %2050, label %5588, label %1908, !llvm.loop !1188

2051:                                             ; preds = %1891, %2193
  %2052 = phi i16 [ 0, %1891 ], [ %2141, %2193 ]
  %2053 = phi i32 [ 0, %1891 ], [ %2142, %2193 ]
  %2054 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1892, label %2055, label %2124

2055:                                             ; preds = %2051, %2114
  %2056 = phi i32 [ %2123, %2114 ], [ 0, %2051 ]
  %2057 = phi i64 [ %2065, %2114 ], [ %1896, %2051 ]
  %2058 = phi i64 [ %2122, %2114 ], [ %1895, %2051 ]
  %2059 = phi i32 [ %2120, %2114 ], [ %2054, %2051 ]
  %2060 = sub i32 %1894, %2056
  %2061 = tail call i32 @llvm.smin.i32(i32 %2060, i32 0)
  %2062 = sub i32 %2060, %2061
  %2063 = zext i32 %2062 to i64
  %2064 = add nuw nsw i64 %2063, 1
  %2065 = add nsw i64 %2057, -1
  %2066 = icmp ult i32 %2062, 31
  br i1 %2066, label %2102, label %2067

2067:                                             ; preds = %2055
  %2068 = and i64 %2064, 8589934560
  %2069 = sub i64 %2058, %2068
  br label %2070

2070:                                             ; preds = %2070, %2067
  %2071 = phi i64 [ 0, %2067 ], [ %2094, %2070 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2090, %2070 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2091, %2070 ]
  %2074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2092, %2070 ]
  %2075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2093, %2070 ]
  %2076 = sub i64 %2058, %2071
  %2077 = getelementptr inbounds i32, ptr %11, i64 %2076
  %2078 = getelementptr inbounds i32, ptr %2077, i64 -7
  %2079 = load <8 x i32>, ptr %2078, align 4, !tbaa !5
  %2080 = shufflevector <8 x i32> %2079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2081 = getelementptr inbounds i32, ptr %2077, i64 -15
  %2082 = load <8 x i32>, ptr %2081, align 4, !tbaa !5
  %2083 = shufflevector <8 x i32> %2082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2084 = getelementptr inbounds i32, ptr %2077, i64 -23
  %2085 = load <8 x i32>, ptr %2084, align 4, !tbaa !5
  %2086 = shufflevector <8 x i32> %2085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2087 = getelementptr inbounds i32, ptr %2077, i64 -31
  %2088 = load <8 x i32>, ptr %2087, align 4, !tbaa !5
  %2089 = shufflevector <8 x i32> %2088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2090 = mul <8 x i32> %2080, %2072
  %2091 = mul <8 x i32> %2083, %2073
  %2092 = mul <8 x i32> %2086, %2074
  %2093 = mul <8 x i32> %2089, %2075
  %2094 = add nuw i64 %2071, 32
  %2095 = icmp eq i64 %2094, %2068
  br i1 %2095, label %2096, label %2070, !llvm.loop !1189

2096:                                             ; preds = %2070
  %2097 = mul <8 x i32> %2091, %2090
  %2098 = mul <8 x i32> %2092, %2097
  %2099 = mul <8 x i32> %2093, %2098
  %2100 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2099)
  %2101 = icmp eq i64 %2064, %2068
  br i1 %2101, label %2114, label %2102

2102:                                             ; preds = %2055, %2096
  %2103 = phi i64 [ %2058, %2055 ], [ %2069, %2096 ]
  %2104 = phi i32 [ 1, %2055 ], [ %2100, %2096 ]
  br label %2105

2105:                                             ; preds = %2102, %2105
  %2106 = phi i64 [ %2111, %2105 ], [ %2103, %2102 ]
  %2107 = phi i32 [ %2110, %2105 ], [ %2104, %2102 ]
  %2108 = getelementptr inbounds i32, ptr %11, i64 %2106
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = mul nsw i32 %2109, %2107
  %2111 = add nsw i64 %2106, -1
  %2112 = trunc i64 %2106 to i32
  %2113 = icmp sgt i32 %2112, 0
  br i1 %2113, label %2105, label %2114, !llvm.loop !1190

2114:                                             ; preds = %2105, %2096
  %2115 = phi i32 [ %2100, %2096 ], [ %2110, %2105 ]
  %2116 = and i64 %2065, 4294967295
  %2117 = getelementptr inbounds i32, ptr %6, i64 %2116
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = mul nsw i32 %2118, %2115
  %2120 = add nsw i32 %2119, %2059
  %2121 = icmp sgt i64 %2057, 2
  %2122 = add nsw i64 %2058, -1
  %2123 = add i32 %2056, 1
  br i1 %2121, label %2055, label %2124, !llvm.loop !1191

2124:                                             ; preds = %2114, %2051
  %2125 = phi i32 [ %2054, %2051 ], [ %2120, %2114 ]
  %2126 = icmp slt i32 %2125, %5
  br i1 %2126, label %2129, label %2127

2127:                                             ; preds = %2124
  %2128 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

2129:                                             ; preds = %2124
  %2130 = sext i32 %2125 to i64
  %2131 = getelementptr inbounds float, ptr %1876, i64 %2130
  %2132 = load float, ptr %2131, align 4, !tbaa !162
  %2133 = fptosi float %2132 to i16
  %2134 = sitofp i16 %2052 to double
  %2135 = sitofp i16 %2133 to double
  %2136 = icmp slt i16 %2133, 0
  %2137 = fneg fast double %2135
  %2138 = select i1 %2136, double %2137, double %2135
  %2139 = fcmp fast ole double %2138, %2134
  %2140 = select fast i1 %2139, double %2134, double %2138
  %2141 = fptosi double %2140 to i16
  store i16 %2141, ptr %1878, align 2, !tbaa !78
  %2142 = add nuw nsw i32 %2053, 1
  br i1 %1893, label %2143, label %2193

2143:                                             ; preds = %2129
  %2144 = load i32, ptr %4, align 4, !tbaa !5
  %2145 = load i32, ptr %12, align 4, !tbaa !5
  %2146 = add nsw i32 %2145, -1
  %2147 = icmp slt i32 %2144, %2146
  br i1 %2147, label %2170, label %2148

2148:                                             ; preds = %2143
  %2149 = icmp eq i32 %2144, %2146
  br i1 %2149, label %2150, label %2186

2150:                                             ; preds = %2148
  store i32 0, ptr %4, align 4, !tbaa !5
  %2151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2151, ptr %6, align 4, !tbaa !5
  br i1 %1898, label %2193, label %2152

2152:                                             ; preds = %2150, %2180
  %2153 = phi i64 [ %2184, %2180 ], [ 1, %2150 ]
  %2154 = getelementptr inbounds i32, ptr %4, i64 %2153
  %2155 = load i32, ptr %2154, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %12, i64 %2153
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = add nsw i32 %2157, -1
  %2159 = icmp slt i32 %2155, %2158
  br i1 %2159, label %2160, label %2178

2160:                                             ; preds = %2152
  br i1 %2147, label %2170, label %2161

2161:                                             ; preds = %2160
  %2162 = shl i64 %2153, 32
  %2163 = add i64 %2162, -4294967296
  %2164 = ashr exact i64 %2163, 32
  %2165 = getelementptr inbounds i32, ptr %7, i64 %2164
  %2166 = load i32, ptr %2165, align 4, !tbaa !5
  %2167 = getelementptr inbounds i32, ptr %6, i64 %2153
  %2168 = load i32, ptr %2167, align 4, !tbaa !5
  %2169 = add nsw i32 %2168, %2166
  store i32 %2169, ptr %2167, align 4, !tbaa !5
  br label %2188

2170:                                             ; preds = %2143, %2160
  %2171 = phi i32 [ %2155, %2160 ], [ %2144, %2143 ]
  %2172 = phi ptr [ %2154, %2160 ], [ %4, %2143 ]
  %2173 = phi i64 [ %2153, %2160 ], [ 0, %2143 ]
  %2174 = add nsw i32 %2171, 1
  store i32 %2174, ptr %2172, align 4, !tbaa !5
  %2175 = getelementptr inbounds i32, ptr %7, i64 %2173
  %2176 = load i32, ptr %2175, align 4, !tbaa !5
  %2177 = getelementptr inbounds i32, ptr %6, i64 %2173
  br label %2188

2178:                                             ; preds = %2152
  %2179 = icmp eq i32 %2155, %2158
  br i1 %2179, label %2180, label %2186

2180:                                             ; preds = %2178
  store i32 0, ptr %2154, align 4, !tbaa !5
  %2181 = getelementptr inbounds i32, ptr %8, i64 %2153
  %2182 = load i32, ptr %2181, align 4, !tbaa !5
  %2183 = getelementptr inbounds i32, ptr %6, i64 %2153
  store i32 %2182, ptr %2183, align 4, !tbaa !5
  %2184 = add nuw nsw i64 %2153, 1
  %2185 = icmp eq i64 %2184, %1896
  br i1 %2185, label %2193, label %2152, !llvm.loop !1192

2186:                                             ; preds = %2148, %2178
  %2187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2188:                                             ; preds = %2161, %2170
  %2189 = phi ptr [ %2177, %2170 ], [ %2154, %2161 ]
  %2190 = phi i32 [ %2176, %2170 ], [ 1, %2161 ]
  %2191 = load i32, ptr %2189, align 4, !tbaa !5
  %2192 = add nsw i32 %2191, %2190
  store i32 %2192, ptr %2189, align 4, !tbaa !5
  br label %2193

2193:                                             ; preds = %2180, %2188, %2150, %2129
  %2194 = icmp eq i32 %2142, %5
  br i1 %2194, label %5594, label %2051, !llvm.loop !1193

2195:                                             ; preds = %1884
  %2196 = getelementptr inbounds i32, ptr %3, i64 %19
  %2197 = load i32, ptr %2196, align 4, !tbaa !5
  %2198 = icmp eq i32 %2197, 0
  %2199 = icmp sgt i32 %5, 0
  br i1 %2198, label %2209, label %2200

2200:                                             ; preds = %2195
  br i1 %2199, label %2201, label %5594

2201:                                             ; preds = %2200
  %2202 = icmp sgt i32 %13, 1
  %2203 = icmp sgt i32 %13, 0
  %2204 = add i32 %13, -2
  %2205 = zext i32 %2204 to i64
  %2206 = zext i32 %13 to i64
  %2207 = add nuw i32 %5, 1
  %2208 = icmp eq i32 %13, 1
  br label %2354

2209:                                             ; preds = %2195
  br i1 %2199, label %2210, label %5594

2210:                                             ; preds = %2209
  %2211 = icmp sgt i32 %13, 1
  %2212 = icmp sgt i32 %13, 0
  %2213 = add i32 %13, -2
  %2214 = zext i32 %2213 to i64
  %2215 = zext i32 %13 to i64
  %2216 = add nuw i32 %5, 1
  %2217 = icmp eq i32 %13, 1
  br label %2218

2218:                                             ; preds = %2210, %2352
  %2219 = phi i16 [ 0, %2210 ], [ %2302, %2352 ]
  %2220 = phi i32 [ 0, %2210 ], [ %2304, %2352 ]
  %2221 = phi double [ 0.000000e+00, %2210 ], [ %2303, %2352 ]
  %2222 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2211, label %2223, label %2292

2223:                                             ; preds = %2218, %2282
  %2224 = phi i32 [ %2291, %2282 ], [ 0, %2218 ]
  %2225 = phi i64 [ %2233, %2282 ], [ %2215, %2218 ]
  %2226 = phi i64 [ %2290, %2282 ], [ %2214, %2218 ]
  %2227 = phi i32 [ %2288, %2282 ], [ %2222, %2218 ]
  %2228 = sub i32 %2213, %2224
  %2229 = tail call i32 @llvm.smin.i32(i32 %2228, i32 0)
  %2230 = sub i32 %2228, %2229
  %2231 = zext i32 %2230 to i64
  %2232 = add nuw nsw i64 %2231, 1
  %2233 = add nsw i64 %2225, -1
  %2234 = icmp ult i32 %2230, 31
  br i1 %2234, label %2270, label %2235

2235:                                             ; preds = %2223
  %2236 = and i64 %2232, 8589934560
  %2237 = sub i64 %2226, %2236
  br label %2238

2238:                                             ; preds = %2238, %2235
  %2239 = phi i64 [ 0, %2235 ], [ %2262, %2238 ]
  %2240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2258, %2238 ]
  %2241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2259, %2238 ]
  %2242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2260, %2238 ]
  %2243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2261, %2238 ]
  %2244 = sub i64 %2226, %2239
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2246 = getelementptr inbounds i32, ptr %2245, i64 -7
  %2247 = load <8 x i32>, ptr %2246, align 4, !tbaa !5
  %2248 = shufflevector <8 x i32> %2247, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2249 = getelementptr inbounds i32, ptr %2245, i64 -15
  %2250 = load <8 x i32>, ptr %2249, align 4, !tbaa !5
  %2251 = shufflevector <8 x i32> %2250, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2252 = getelementptr inbounds i32, ptr %2245, i64 -23
  %2253 = load <8 x i32>, ptr %2252, align 4, !tbaa !5
  %2254 = shufflevector <8 x i32> %2253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2255 = getelementptr inbounds i32, ptr %2245, i64 -31
  %2256 = load <8 x i32>, ptr %2255, align 4, !tbaa !5
  %2257 = shufflevector <8 x i32> %2256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2258 = mul <8 x i32> %2248, %2240
  %2259 = mul <8 x i32> %2251, %2241
  %2260 = mul <8 x i32> %2254, %2242
  %2261 = mul <8 x i32> %2257, %2243
  %2262 = add nuw i64 %2239, 32
  %2263 = icmp eq i64 %2262, %2236
  br i1 %2263, label %2264, label %2238, !llvm.loop !1194

2264:                                             ; preds = %2238
  %2265 = mul <8 x i32> %2259, %2258
  %2266 = mul <8 x i32> %2260, %2265
  %2267 = mul <8 x i32> %2261, %2266
  %2268 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2267)
  %2269 = icmp eq i64 %2232, %2236
  br i1 %2269, label %2282, label %2270

2270:                                             ; preds = %2223, %2264
  %2271 = phi i64 [ %2226, %2223 ], [ %2237, %2264 ]
  %2272 = phi i32 [ 1, %2223 ], [ %2268, %2264 ]
  br label %2273

2273:                                             ; preds = %2270, %2273
  %2274 = phi i64 [ %2279, %2273 ], [ %2271, %2270 ]
  %2275 = phi i32 [ %2278, %2273 ], [ %2272, %2270 ]
  %2276 = getelementptr inbounds i32, ptr %9, i64 %2274
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = mul nsw i32 %2277, %2275
  %2279 = add nsw i64 %2274, -1
  %2280 = trunc i64 %2274 to i32
  %2281 = icmp sgt i32 %2280, 0
  br i1 %2281, label %2273, label %2282, !llvm.loop !1195

2282:                                             ; preds = %2273, %2264
  %2283 = phi i32 [ %2268, %2264 ], [ %2278, %2273 ]
  %2284 = and i64 %2233, 4294967295
  %2285 = getelementptr inbounds i32, ptr %6, i64 %2284
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = mul nsw i32 %2286, %2283
  %2288 = add nsw i32 %2287, %2227
  %2289 = icmp sgt i64 %2225, 2
  %2290 = add nsw i64 %2226, -1
  %2291 = add i32 %2224, 1
  br i1 %2289, label %2223, label %2292, !llvm.loop !1196

2292:                                             ; preds = %2282, %2218
  %2293 = phi i32 [ %2222, %2218 ], [ %2288, %2282 ]
  %2294 = sext i32 %2293 to i64
  %2295 = getelementptr inbounds float, ptr %1876, i64 %2294
  %2296 = load float, ptr %2295, align 4, !tbaa !162
  %2297 = fptosi float %2296 to i16
  %2298 = sext i16 %2219 to i32
  %2299 = tail call i16 @llvm.abs.i16(i16 %2297, i1 false)
  %2300 = zext i16 %2299 to i32
  %2301 = icmp slt i32 %2298, %2300
  %2302 = select i1 %2301, i16 %2299, i16 %2219
  %2303 = fadd fast double %2221, 1.000000e+00
  %2304 = add nuw nsw i32 %2220, 1
  br i1 %2212, label %2305, label %2352

2305:                                             ; preds = %2292
  %2306 = load i32, ptr %4, align 4, !tbaa !5
  %2307 = load i32, ptr %12, align 4, !tbaa !5
  %2308 = add nsw i32 %2307, -1
  %2309 = icmp slt i32 %2306, %2308
  br i1 %2309, label %2329, label %2310

2310:                                             ; preds = %2305
  %2311 = icmp eq i32 %2306, %2308
  br i1 %2311, label %2312, label %2345

2312:                                             ; preds = %2310
  store i32 0, ptr %4, align 4, !tbaa !5
  %2313 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2313, ptr %6, align 4, !tbaa !5
  br i1 %2217, label %2352, label %2314

2314:                                             ; preds = %2312, %2339
  %2315 = phi i64 [ %2343, %2339 ], [ 1, %2312 ]
  %2316 = getelementptr inbounds i32, ptr %4, i64 %2315
  %2317 = load i32, ptr %2316, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %12, i64 %2315
  %2319 = load i32, ptr %2318, align 4, !tbaa !5
  %2320 = add nsw i32 %2319, -1
  %2321 = icmp slt i32 %2317, %2320
  br i1 %2321, label %2322, label %2337

2322:                                             ; preds = %2314
  br i1 %2309, label %2329, label %2323

2323:                                             ; preds = %2322
  %2324 = getelementptr inbounds i32, ptr %7, i64 %2315
  %2325 = load i32, ptr %2324, align 4, !tbaa !5
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2315
  %2327 = load i32, ptr %2326, align 4, !tbaa !5
  %2328 = add nsw i32 %2327, %2325
  store i32 %2328, ptr %2326, align 4, !tbaa !5
  br label %2347

2329:                                             ; preds = %2305, %2322
  %2330 = phi i32 [ %2317, %2322 ], [ %2306, %2305 ]
  %2331 = phi ptr [ %2316, %2322 ], [ %4, %2305 ]
  %2332 = phi i64 [ %2315, %2322 ], [ 0, %2305 ]
  %2333 = add nsw i32 %2330, 1
  store i32 %2333, ptr %2331, align 4, !tbaa !5
  %2334 = getelementptr inbounds i32, ptr %7, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !5
  %2336 = getelementptr inbounds i32, ptr %6, i64 %2332
  br label %2347

2337:                                             ; preds = %2314
  %2338 = icmp eq i32 %2317, %2320
  br i1 %2338, label %2339, label %2345

2339:                                             ; preds = %2337
  store i32 0, ptr %2316, align 4, !tbaa !5
  %2340 = getelementptr inbounds i32, ptr %8, i64 %2315
  %2341 = load i32, ptr %2340, align 4, !tbaa !5
  %2342 = getelementptr inbounds i32, ptr %6, i64 %2315
  store i32 %2341, ptr %2342, align 4, !tbaa !5
  %2343 = add nuw nsw i64 %2315, 1
  %2344 = icmp eq i64 %2343, %2215
  br i1 %2344, label %2352, label %2314, !llvm.loop !1197

2345:                                             ; preds = %2310, %2337
  store i16 %2302, ptr %1878, align 2, !tbaa !78
  %2346 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2347:                                             ; preds = %2323, %2329
  %2348 = phi ptr [ %2336, %2329 ], [ %2316, %2323 ]
  %2349 = phi i32 [ %2335, %2329 ], [ 1, %2323 ]
  %2350 = load i32, ptr %2348, align 4, !tbaa !5
  %2351 = add nsw i32 %2350, %2349
  store i32 %2351, ptr %2348, align 4, !tbaa !5
  br label %2352

2352:                                             ; preds = %2339, %2347, %2312, %2292
  %2353 = icmp eq i32 %2304, %5
  br i1 %2353, label %5589, label %2218, !llvm.loop !1198

2354:                                             ; preds = %2201, %2493
  %2355 = phi i16 [ 0, %2201 ], [ %2441, %2493 ]
  %2356 = phi i32 [ 0, %2201 ], [ %2442, %2493 ]
  %2357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2202, label %2358, label %2427

2358:                                             ; preds = %2354, %2417
  %2359 = phi i32 [ %2426, %2417 ], [ 0, %2354 ]
  %2360 = phi i64 [ %2368, %2417 ], [ %2206, %2354 ]
  %2361 = phi i64 [ %2425, %2417 ], [ %2205, %2354 ]
  %2362 = phi i32 [ %2423, %2417 ], [ %2357, %2354 ]
  %2363 = sub i32 %2204, %2359
  %2364 = tail call i32 @llvm.smin.i32(i32 %2363, i32 0)
  %2365 = sub i32 %2363, %2364
  %2366 = zext i32 %2365 to i64
  %2367 = add nuw nsw i64 %2366, 1
  %2368 = add nsw i64 %2360, -1
  %2369 = icmp ult i32 %2365, 31
  br i1 %2369, label %2405, label %2370

2370:                                             ; preds = %2358
  %2371 = and i64 %2367, 8589934560
  %2372 = sub i64 %2361, %2371
  br label %2373

2373:                                             ; preds = %2373, %2370
  %2374 = phi i64 [ 0, %2370 ], [ %2397, %2373 ]
  %2375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2393, %2373 ]
  %2376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2394, %2373 ]
  %2377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2395, %2373 ]
  %2378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2396, %2373 ]
  %2379 = sub i64 %2361, %2374
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2381 = getelementptr inbounds i32, ptr %2380, i64 -7
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !5
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2380, i64 -15
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !5
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = getelementptr inbounds i32, ptr %2380, i64 -23
  %2388 = load <8 x i32>, ptr %2387, align 4, !tbaa !5
  %2389 = shufflevector <8 x i32> %2388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2390 = getelementptr inbounds i32, ptr %2380, i64 -31
  %2391 = load <8 x i32>, ptr %2390, align 4, !tbaa !5
  %2392 = shufflevector <8 x i32> %2391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2393 = mul <8 x i32> %2383, %2375
  %2394 = mul <8 x i32> %2386, %2376
  %2395 = mul <8 x i32> %2389, %2377
  %2396 = mul <8 x i32> %2392, %2378
  %2397 = add nuw i64 %2374, 32
  %2398 = icmp eq i64 %2397, %2371
  br i1 %2398, label %2399, label %2373, !llvm.loop !1199

2399:                                             ; preds = %2373
  %2400 = mul <8 x i32> %2394, %2393
  %2401 = mul <8 x i32> %2395, %2400
  %2402 = mul <8 x i32> %2396, %2401
  %2403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2402)
  %2404 = icmp eq i64 %2367, %2371
  br i1 %2404, label %2417, label %2405

2405:                                             ; preds = %2358, %2399
  %2406 = phi i64 [ %2361, %2358 ], [ %2372, %2399 ]
  %2407 = phi i32 [ 1, %2358 ], [ %2403, %2399 ]
  br label %2408

2408:                                             ; preds = %2405, %2408
  %2409 = phi i64 [ %2414, %2408 ], [ %2406, %2405 ]
  %2410 = phi i32 [ %2413, %2408 ], [ %2407, %2405 ]
  %2411 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2412 = load i32, ptr %2411, align 4, !tbaa !5
  %2413 = mul nsw i32 %2412, %2410
  %2414 = add nsw i64 %2409, -1
  %2415 = trunc i64 %2409 to i32
  %2416 = icmp sgt i32 %2415, 0
  br i1 %2416, label %2408, label %2417, !llvm.loop !1200

2417:                                             ; preds = %2408, %2399
  %2418 = phi i32 [ %2403, %2399 ], [ %2413, %2408 ]
  %2419 = and i64 %2368, 4294967295
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = mul nsw i32 %2421, %2418
  %2423 = add nsw i32 %2422, %2362
  %2424 = icmp sgt i64 %2360, 2
  %2425 = add nsw i64 %2361, -1
  %2426 = add i32 %2359, 1
  br i1 %2424, label %2358, label %2427, !llvm.loop !1201

2427:                                             ; preds = %2417, %2354
  %2428 = phi i32 [ %2357, %2354 ], [ %2423, %2417 ]
  %2429 = icmp slt i32 %2428, %5
  br i1 %2429, label %2432, label %2430

2430:                                             ; preds = %2427
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

2432:                                             ; preds = %2427
  %2433 = sext i32 %2428 to i64
  %2434 = getelementptr inbounds float, ptr %1876, i64 %2433
  %2435 = load float, ptr %2434, align 4, !tbaa !162
  %2436 = fptosi float %2435 to i16
  %2437 = sext i16 %2355 to i32
  %2438 = tail call i16 @llvm.abs.i16(i16 %2436, i1 false)
  %2439 = zext i16 %2438 to i32
  %2440 = icmp slt i32 %2437, %2439
  %2441 = select i1 %2440, i16 %2438, i16 %2355
  store i16 %2441, ptr %1878, align 2, !tbaa !78
  %2442 = add nuw nsw i32 %2356, 1
  br i1 %2203, label %2443, label %2493

2443:                                             ; preds = %2432
  %2444 = load i32, ptr %4, align 4, !tbaa !5
  %2445 = load i32, ptr %12, align 4, !tbaa !5
  %2446 = add nsw i32 %2445, -1
  %2447 = icmp slt i32 %2444, %2446
  br i1 %2447, label %2470, label %2448

2448:                                             ; preds = %2443
  %2449 = icmp eq i32 %2444, %2446
  br i1 %2449, label %2450, label %2486

2450:                                             ; preds = %2448
  store i32 0, ptr %4, align 4, !tbaa !5
  %2451 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2451, ptr %6, align 4, !tbaa !5
  br i1 %2208, label %2493, label %2452

2452:                                             ; preds = %2450, %2480
  %2453 = phi i64 [ %2484, %2480 ], [ 1, %2450 ]
  %2454 = getelementptr inbounds i32, ptr %4, i64 %2453
  %2455 = load i32, ptr %2454, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %12, i64 %2453
  %2457 = load i32, ptr %2456, align 4, !tbaa !5
  %2458 = add nsw i32 %2457, -1
  %2459 = icmp slt i32 %2455, %2458
  br i1 %2459, label %2460, label %2478

2460:                                             ; preds = %2452
  br i1 %2447, label %2470, label %2461

2461:                                             ; preds = %2460
  %2462 = shl i64 %2453, 32
  %2463 = add i64 %2462, -4294967296
  %2464 = ashr exact i64 %2463, 32
  %2465 = getelementptr inbounds i32, ptr %7, i64 %2464
  %2466 = load i32, ptr %2465, align 4, !tbaa !5
  %2467 = getelementptr inbounds i32, ptr %6, i64 %2453
  %2468 = load i32, ptr %2467, align 4, !tbaa !5
  %2469 = add nsw i32 %2468, %2466
  store i32 %2469, ptr %2467, align 4, !tbaa !5
  br label %2488

2470:                                             ; preds = %2443, %2460
  %2471 = phi i32 [ %2455, %2460 ], [ %2444, %2443 ]
  %2472 = phi ptr [ %2454, %2460 ], [ %4, %2443 ]
  %2473 = phi i64 [ %2453, %2460 ], [ 0, %2443 ]
  %2474 = add nsw i32 %2471, 1
  store i32 %2474, ptr %2472, align 4, !tbaa !5
  %2475 = getelementptr inbounds i32, ptr %7, i64 %2473
  %2476 = load i32, ptr %2475, align 4, !tbaa !5
  %2477 = getelementptr inbounds i32, ptr %6, i64 %2473
  br label %2488

2478:                                             ; preds = %2452
  %2479 = icmp eq i32 %2455, %2458
  br i1 %2479, label %2480, label %2486

2480:                                             ; preds = %2478
  store i32 0, ptr %2454, align 4, !tbaa !5
  %2481 = getelementptr inbounds i32, ptr %8, i64 %2453
  %2482 = load i32, ptr %2481, align 4, !tbaa !5
  %2483 = getelementptr inbounds i32, ptr %6, i64 %2453
  store i32 %2482, ptr %2483, align 4, !tbaa !5
  %2484 = add nuw nsw i64 %2453, 1
  %2485 = icmp eq i64 %2484, %2206
  br i1 %2485, label %2493, label %2452, !llvm.loop !1202

2486:                                             ; preds = %2448, %2478
  %2487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2488:                                             ; preds = %2461, %2470
  %2489 = phi ptr [ %2477, %2470 ], [ %2454, %2461 ]
  %2490 = phi i32 [ %2476, %2470 ], [ 1, %2461 ]
  %2491 = load i32, ptr %2489, align 4, !tbaa !5
  %2492 = add nsw i32 %2491, %2490
  store i32 %2492, ptr %2489, align 4, !tbaa !5
  br label %2493

2493:                                             ; preds = %2480, %2488, %2450, %2432
  %2494 = icmp eq i32 %2442, %5
  br i1 %2494, label %5594, label %2354, !llvm.loop !1203

2495:                                             ; preds = %1884
  %2496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2258, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

2497:                                             ; preds = %18
  %2498 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2499 = load ptr, ptr %2498, align 8, !tbaa !9
  %2500 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2501 = load ptr, ptr %2500, align 8, !tbaa !9
  store i32 0, ptr %2501, align 4, !tbaa !5
  %2502 = icmp eq i32 %13, 0
  br i1 %2502, label %2503, label %2509

2503:                                             ; preds = %2497
  %2504 = load float, ptr %2499, align 4, !tbaa !162
  %2505 = fptosi float %2504 to i32
  %2506 = icmp eq i32 %2505, 0
  %2507 = tail call i32 @llvm.abs.i32(i32 %2505, i1 true)
  %2508 = select i1 %2506, i32 0, i32 %2507
  store i32 %2508, ptr %2501, align 4, !tbaa !5
  br label %5594

2509:                                             ; preds = %2497
  switch i32 %1, label %3114 [
    i32 1, label %2510
    i32 0, label %2820
  ]

2510:                                             ; preds = %2509
  %2511 = getelementptr inbounds i32, ptr %3, i64 %19
  %2512 = load i32, ptr %2511, align 4, !tbaa !5
  %2513 = icmp eq i32 %2512, 0
  %2514 = icmp sgt i32 %5, 0
  br i1 %2513, label %2524, label %2515

2515:                                             ; preds = %2510
  br i1 %2514, label %2516, label %5594

2516:                                             ; preds = %2515
  %2517 = icmp sgt i32 %13, 1
  %2518 = icmp sgt i32 %13, 0
  %2519 = add i32 %13, -2
  %2520 = zext i32 %2519 to i64
  %2521 = zext i32 %13 to i64
  %2522 = add nuw i32 %5, 1
  %2523 = icmp eq i32 %13, 1
  br label %2676

2524:                                             ; preds = %2510
  br i1 %2514, label %2525, label %5594

2525:                                             ; preds = %2524
  %2526 = icmp sgt i32 %13, 1
  %2527 = icmp sgt i32 %13, 0
  %2528 = add i32 %13, -2
  %2529 = zext i32 %2528 to i64
  %2530 = zext i32 %13 to i64
  %2531 = add nuw i32 %5, 1
  %2532 = icmp eq i32 %13, 1
  br label %2533

2533:                                             ; preds = %2525, %2674
  %2534 = phi i32 [ 0, %2525 ], [ %2626, %2674 ]
  %2535 = phi double [ 0.000000e+00, %2525 ], [ %2625, %2674 ]
  %2536 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2526, label %2537, label %2606

2537:                                             ; preds = %2533, %2596
  %2538 = phi i32 [ %2605, %2596 ], [ 0, %2533 ]
  %2539 = phi i64 [ %2547, %2596 ], [ %2530, %2533 ]
  %2540 = phi i64 [ %2604, %2596 ], [ %2529, %2533 ]
  %2541 = phi i32 [ %2602, %2596 ], [ %2536, %2533 ]
  %2542 = sub i32 %2528, %2538
  %2543 = tail call i32 @llvm.smin.i32(i32 %2542, i32 0)
  %2544 = sub i32 %2542, %2543
  %2545 = zext i32 %2544 to i64
  %2546 = add nuw nsw i64 %2545, 1
  %2547 = add nsw i64 %2539, -1
  %2548 = icmp ult i32 %2544, 31
  br i1 %2548, label %2584, label %2549

2549:                                             ; preds = %2537
  %2550 = and i64 %2546, 8589934560
  %2551 = sub i64 %2540, %2550
  br label %2552

2552:                                             ; preds = %2552, %2549
  %2553 = phi i64 [ 0, %2549 ], [ %2576, %2552 ]
  %2554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2572, %2552 ]
  %2555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2573, %2552 ]
  %2556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2574, %2552 ]
  %2557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2575, %2552 ]
  %2558 = sub i64 %2540, %2553
  %2559 = getelementptr inbounds i32, ptr %9, i64 %2558
  %2560 = getelementptr inbounds i32, ptr %2559, i64 -7
  %2561 = load <8 x i32>, ptr %2560, align 4, !tbaa !5
  %2562 = shufflevector <8 x i32> %2561, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2563 = getelementptr inbounds i32, ptr %2559, i64 -15
  %2564 = load <8 x i32>, ptr %2563, align 4, !tbaa !5
  %2565 = shufflevector <8 x i32> %2564, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2566 = getelementptr inbounds i32, ptr %2559, i64 -23
  %2567 = load <8 x i32>, ptr %2566, align 4, !tbaa !5
  %2568 = shufflevector <8 x i32> %2567, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2569 = getelementptr inbounds i32, ptr %2559, i64 -31
  %2570 = load <8 x i32>, ptr %2569, align 4, !tbaa !5
  %2571 = shufflevector <8 x i32> %2570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2572 = mul <8 x i32> %2562, %2554
  %2573 = mul <8 x i32> %2565, %2555
  %2574 = mul <8 x i32> %2568, %2556
  %2575 = mul <8 x i32> %2571, %2557
  %2576 = add nuw i64 %2553, 32
  %2577 = icmp eq i64 %2576, %2550
  br i1 %2577, label %2578, label %2552, !llvm.loop !1204

2578:                                             ; preds = %2552
  %2579 = mul <8 x i32> %2573, %2572
  %2580 = mul <8 x i32> %2574, %2579
  %2581 = mul <8 x i32> %2575, %2580
  %2582 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2581)
  %2583 = icmp eq i64 %2546, %2550
  br i1 %2583, label %2596, label %2584

2584:                                             ; preds = %2537, %2578
  %2585 = phi i64 [ %2540, %2537 ], [ %2551, %2578 ]
  %2586 = phi i32 [ 1, %2537 ], [ %2582, %2578 ]
  br label %2587

2587:                                             ; preds = %2584, %2587
  %2588 = phi i64 [ %2593, %2587 ], [ %2585, %2584 ]
  %2589 = phi i32 [ %2592, %2587 ], [ %2586, %2584 ]
  %2590 = getelementptr inbounds i32, ptr %9, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !5
  %2592 = mul nsw i32 %2591, %2589
  %2593 = add nsw i64 %2588, -1
  %2594 = trunc i64 %2588 to i32
  %2595 = icmp sgt i32 %2594, 0
  br i1 %2595, label %2587, label %2596, !llvm.loop !1205

2596:                                             ; preds = %2587, %2578
  %2597 = phi i32 [ %2582, %2578 ], [ %2592, %2587 ]
  %2598 = and i64 %2547, 4294967295
  %2599 = getelementptr inbounds i32, ptr %6, i64 %2598
  %2600 = load i32, ptr %2599, align 4, !tbaa !5
  %2601 = mul nsw i32 %2600, %2597
  %2602 = add nsw i32 %2601, %2541
  %2603 = icmp sgt i64 %2539, 2
  %2604 = add nsw i64 %2540, -1
  %2605 = add i32 %2538, 1
  br i1 %2603, label %2537, label %2606, !llvm.loop !1206

2606:                                             ; preds = %2596, %2533
  %2607 = phi i32 [ %2536, %2533 ], [ %2602, %2596 ]
  %2608 = sext i32 %2607 to i64
  %2609 = getelementptr inbounds double, ptr %2, i64 %2608
  %2610 = load double, ptr %2609, align 8, !tbaa !18
  %2611 = getelementptr inbounds float, ptr %2499, i64 %2608
  %2612 = load float, ptr %2611, align 4, !tbaa !162
  %2613 = fptosi float %2612 to i32
  %2614 = load i32, ptr %2501, align 4, !tbaa !5
  %2615 = sitofp i32 %2614 to double
  %2616 = sitofp i32 %2613 to double
  %2617 = fmul fast double %2610, %2616
  %2618 = fcmp fast uge double %2617, 0.000000e+00
  %2619 = fneg fast double %2617
  %2620 = tail call fast double @llvm.fabs.f64(double %2617)
  %2621 = fcmp fast ole double %2620, %2615
  %2622 = select nnan ninf i1 %2618, double %2617, double %2619
  %2623 = select i1 %2621, double %2615, double %2622
  %2624 = fptosi double %2623 to i32
  store i32 %2624, ptr %2501, align 4, !tbaa !5
  %2625 = fadd fast double %2610, %2535
  %2626 = add nuw nsw i32 %2534, 1
  br i1 %2527, label %2627, label %2674

2627:                                             ; preds = %2606
  %2628 = load i32, ptr %4, align 4, !tbaa !5
  %2629 = load i32, ptr %12, align 4, !tbaa !5
  %2630 = add nsw i32 %2629, -1
  %2631 = icmp slt i32 %2628, %2630
  br i1 %2631, label %2651, label %2632

2632:                                             ; preds = %2627
  %2633 = icmp eq i32 %2628, %2630
  br i1 %2633, label %2634, label %2667

2634:                                             ; preds = %2632
  store i32 0, ptr %4, align 4, !tbaa !5
  %2635 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2635, ptr %6, align 4, !tbaa !5
  br i1 %2532, label %2674, label %2636

2636:                                             ; preds = %2634, %2661
  %2637 = phi i64 [ %2665, %2661 ], [ 1, %2634 ]
  %2638 = getelementptr inbounds i32, ptr %4, i64 %2637
  %2639 = load i32, ptr %2638, align 4, !tbaa !5
  %2640 = getelementptr inbounds i32, ptr %12, i64 %2637
  %2641 = load i32, ptr %2640, align 4, !tbaa !5
  %2642 = add nsw i32 %2641, -1
  %2643 = icmp slt i32 %2639, %2642
  br i1 %2643, label %2644, label %2659

2644:                                             ; preds = %2636
  br i1 %2631, label %2651, label %2645

2645:                                             ; preds = %2644
  %2646 = getelementptr inbounds i32, ptr %7, i64 %2637
  %2647 = load i32, ptr %2646, align 4, !tbaa !5
  %2648 = getelementptr inbounds i32, ptr %6, i64 %2637
  %2649 = load i32, ptr %2648, align 4, !tbaa !5
  %2650 = add nsw i32 %2649, %2647
  store i32 %2650, ptr %2648, align 4, !tbaa !5
  br label %2669

2651:                                             ; preds = %2627, %2644
  %2652 = phi i32 [ %2639, %2644 ], [ %2628, %2627 ]
  %2653 = phi ptr [ %2638, %2644 ], [ %4, %2627 ]
  %2654 = phi i64 [ %2637, %2644 ], [ 0, %2627 ]
  %2655 = add nsw i32 %2652, 1
  store i32 %2655, ptr %2653, align 4, !tbaa !5
  %2656 = getelementptr inbounds i32, ptr %7, i64 %2654
  %2657 = load i32, ptr %2656, align 4, !tbaa !5
  %2658 = getelementptr inbounds i32, ptr %6, i64 %2654
  br label %2669

2659:                                             ; preds = %2636
  %2660 = icmp eq i32 %2639, %2642
  br i1 %2660, label %2661, label %2667

2661:                                             ; preds = %2659
  store i32 0, ptr %2638, align 4, !tbaa !5
  %2662 = getelementptr inbounds i32, ptr %8, i64 %2637
  %2663 = load i32, ptr %2662, align 4, !tbaa !5
  %2664 = getelementptr inbounds i32, ptr %6, i64 %2637
  store i32 %2663, ptr %2664, align 4, !tbaa !5
  %2665 = add nuw nsw i64 %2637, 1
  %2666 = icmp eq i64 %2665, %2530
  br i1 %2666, label %2674, label %2636, !llvm.loop !1207

2667:                                             ; preds = %2632, %2659
  %2668 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2669:                                             ; preds = %2645, %2651
  %2670 = phi ptr [ %2658, %2651 ], [ %2638, %2645 ]
  %2671 = phi i32 [ %2657, %2651 ], [ 1, %2645 ]
  %2672 = load i32, ptr %2670, align 4, !tbaa !5
  %2673 = add nsw i32 %2672, %2671
  store i32 %2673, ptr %2670, align 4, !tbaa !5
  br label %2674

2674:                                             ; preds = %2661, %2669, %2634, %2606
  %2675 = icmp eq i32 %2626, %5
  br i1 %2675, label %5594, label %2533, !llvm.loop !1208

2676:                                             ; preds = %2516, %2818
  %2677 = phi i32 [ 0, %2516 ], [ %2767, %2818 ]
  %2678 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2517, label %2679, label %2748

2679:                                             ; preds = %2676, %2738
  %2680 = phi i32 [ %2747, %2738 ], [ 0, %2676 ]
  %2681 = phi i64 [ %2689, %2738 ], [ %2521, %2676 ]
  %2682 = phi i64 [ %2746, %2738 ], [ %2520, %2676 ]
  %2683 = phi i32 [ %2744, %2738 ], [ %2678, %2676 ]
  %2684 = sub i32 %2519, %2680
  %2685 = tail call i32 @llvm.smin.i32(i32 %2684, i32 0)
  %2686 = sub i32 %2684, %2685
  %2687 = zext i32 %2686 to i64
  %2688 = add nuw nsw i64 %2687, 1
  %2689 = add nsw i64 %2681, -1
  %2690 = icmp ult i32 %2686, 31
  br i1 %2690, label %2726, label %2691

2691:                                             ; preds = %2679
  %2692 = and i64 %2688, 8589934560
  %2693 = sub i64 %2682, %2692
  br label %2694

2694:                                             ; preds = %2694, %2691
  %2695 = phi i64 [ 0, %2691 ], [ %2718, %2694 ]
  %2696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2714, %2694 ]
  %2697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2715, %2694 ]
  %2698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2716, %2694 ]
  %2699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2717, %2694 ]
  %2700 = sub i64 %2682, %2695
  %2701 = getelementptr inbounds i32, ptr %11, i64 %2700
  %2702 = getelementptr inbounds i32, ptr %2701, i64 -7
  %2703 = load <8 x i32>, ptr %2702, align 4, !tbaa !5
  %2704 = shufflevector <8 x i32> %2703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2705 = getelementptr inbounds i32, ptr %2701, i64 -15
  %2706 = load <8 x i32>, ptr %2705, align 4, !tbaa !5
  %2707 = shufflevector <8 x i32> %2706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2708 = getelementptr inbounds i32, ptr %2701, i64 -23
  %2709 = load <8 x i32>, ptr %2708, align 4, !tbaa !5
  %2710 = shufflevector <8 x i32> %2709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2711 = getelementptr inbounds i32, ptr %2701, i64 -31
  %2712 = load <8 x i32>, ptr %2711, align 4, !tbaa !5
  %2713 = shufflevector <8 x i32> %2712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2714 = mul <8 x i32> %2704, %2696
  %2715 = mul <8 x i32> %2707, %2697
  %2716 = mul <8 x i32> %2710, %2698
  %2717 = mul <8 x i32> %2713, %2699
  %2718 = add nuw i64 %2695, 32
  %2719 = icmp eq i64 %2718, %2692
  br i1 %2719, label %2720, label %2694, !llvm.loop !1209

2720:                                             ; preds = %2694
  %2721 = mul <8 x i32> %2715, %2714
  %2722 = mul <8 x i32> %2716, %2721
  %2723 = mul <8 x i32> %2717, %2722
  %2724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2723)
  %2725 = icmp eq i64 %2688, %2692
  br i1 %2725, label %2738, label %2726

2726:                                             ; preds = %2679, %2720
  %2727 = phi i64 [ %2682, %2679 ], [ %2693, %2720 ]
  %2728 = phi i32 [ 1, %2679 ], [ %2724, %2720 ]
  br label %2729

2729:                                             ; preds = %2726, %2729
  %2730 = phi i64 [ %2735, %2729 ], [ %2727, %2726 ]
  %2731 = phi i32 [ %2734, %2729 ], [ %2728, %2726 ]
  %2732 = getelementptr inbounds i32, ptr %11, i64 %2730
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = mul nsw i32 %2733, %2731
  %2735 = add nsw i64 %2730, -1
  %2736 = trunc i64 %2730 to i32
  %2737 = icmp sgt i32 %2736, 0
  br i1 %2737, label %2729, label %2738, !llvm.loop !1210

2738:                                             ; preds = %2729, %2720
  %2739 = phi i32 [ %2724, %2720 ], [ %2734, %2729 ]
  %2740 = and i64 %2689, 4294967295
  %2741 = getelementptr inbounds i32, ptr %6, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = mul nsw i32 %2742, %2739
  %2744 = add nsw i32 %2743, %2683
  %2745 = icmp sgt i64 %2681, 2
  %2746 = add nsw i64 %2682, -1
  %2747 = add i32 %2680, 1
  br i1 %2745, label %2679, label %2748, !llvm.loop !1211

2748:                                             ; preds = %2738, %2676
  %2749 = phi i32 [ %2678, %2676 ], [ %2744, %2738 ]
  %2750 = icmp slt i32 %2749, %5
  br i1 %2750, label %2753, label %2751

2751:                                             ; preds = %2748
  %2752 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

2753:                                             ; preds = %2748
  %2754 = sext i32 %2749 to i64
  %2755 = getelementptr inbounds float, ptr %2499, i64 %2754
  %2756 = load float, ptr %2755, align 4, !tbaa !162
  %2757 = fptosi float %2756 to i32
  %2758 = load i32, ptr %2501, align 4, !tbaa !5
  %2759 = sitofp i32 %2758 to double
  %2760 = sitofp i32 %2757 to double
  %2761 = icmp slt i32 %2757, 0
  %2762 = fneg fast double %2760
  %2763 = select i1 %2761, double %2762, double %2760
  %2764 = fcmp fast ole double %2763, %2759
  %2765 = select fast i1 %2764, double %2759, double %2763
  %2766 = fptosi double %2765 to i32
  store i32 %2766, ptr %2501, align 4, !tbaa !5
  %2767 = add nuw nsw i32 %2677, 1
  br i1 %2518, label %2768, label %2818

2768:                                             ; preds = %2753
  %2769 = load i32, ptr %4, align 4, !tbaa !5
  %2770 = load i32, ptr %12, align 4, !tbaa !5
  %2771 = add nsw i32 %2770, -1
  %2772 = icmp slt i32 %2769, %2771
  br i1 %2772, label %2795, label %2773

2773:                                             ; preds = %2768
  %2774 = icmp eq i32 %2769, %2771
  br i1 %2774, label %2775, label %2811

2775:                                             ; preds = %2773
  store i32 0, ptr %4, align 4, !tbaa !5
  %2776 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2776, ptr %6, align 4, !tbaa !5
  br i1 %2523, label %2818, label %2777

2777:                                             ; preds = %2775, %2805
  %2778 = phi i64 [ %2809, %2805 ], [ 1, %2775 ]
  %2779 = getelementptr inbounds i32, ptr %4, i64 %2778
  %2780 = load i32, ptr %2779, align 4, !tbaa !5
  %2781 = getelementptr inbounds i32, ptr %12, i64 %2778
  %2782 = load i32, ptr %2781, align 4, !tbaa !5
  %2783 = add nsw i32 %2782, -1
  %2784 = icmp slt i32 %2780, %2783
  br i1 %2784, label %2785, label %2803

2785:                                             ; preds = %2777
  br i1 %2772, label %2795, label %2786

2786:                                             ; preds = %2785
  %2787 = shl i64 %2778, 32
  %2788 = add i64 %2787, -4294967296
  %2789 = ashr exact i64 %2788, 32
  %2790 = getelementptr inbounds i32, ptr %7, i64 %2789
  %2791 = load i32, ptr %2790, align 4, !tbaa !5
  %2792 = getelementptr inbounds i32, ptr %6, i64 %2778
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = add nsw i32 %2793, %2791
  store i32 %2794, ptr %2792, align 4, !tbaa !5
  br label %2813

2795:                                             ; preds = %2768, %2785
  %2796 = phi i32 [ %2780, %2785 ], [ %2769, %2768 ]
  %2797 = phi ptr [ %2779, %2785 ], [ %4, %2768 ]
  %2798 = phi i64 [ %2778, %2785 ], [ 0, %2768 ]
  %2799 = add nsw i32 %2796, 1
  store i32 %2799, ptr %2797, align 4, !tbaa !5
  %2800 = getelementptr inbounds i32, ptr %7, i64 %2798
  %2801 = load i32, ptr %2800, align 4, !tbaa !5
  %2802 = getelementptr inbounds i32, ptr %6, i64 %2798
  br label %2813

2803:                                             ; preds = %2777
  %2804 = icmp eq i32 %2780, %2783
  br i1 %2804, label %2805, label %2811

2805:                                             ; preds = %2803
  store i32 0, ptr %2779, align 4, !tbaa !5
  %2806 = getelementptr inbounds i32, ptr %8, i64 %2778
  %2807 = load i32, ptr %2806, align 4, !tbaa !5
  %2808 = getelementptr inbounds i32, ptr %6, i64 %2778
  store i32 %2807, ptr %2808, align 4, !tbaa !5
  %2809 = add nuw nsw i64 %2778, 1
  %2810 = icmp eq i64 %2809, %2521
  br i1 %2810, label %2818, label %2777, !llvm.loop !1212

2811:                                             ; preds = %2773, %2803
  %2812 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2813:                                             ; preds = %2786, %2795
  %2814 = phi ptr [ %2802, %2795 ], [ %2779, %2786 ]
  %2815 = phi i32 [ %2801, %2795 ], [ 1, %2786 ]
  %2816 = load i32, ptr %2814, align 4, !tbaa !5
  %2817 = add nsw i32 %2816, %2815
  store i32 %2817, ptr %2814, align 4, !tbaa !5
  br label %2818

2818:                                             ; preds = %2805, %2813, %2775, %2753
  %2819 = icmp eq i32 %2767, %5
  br i1 %2819, label %5594, label %2676, !llvm.loop !1213

2820:                                             ; preds = %2509
  %2821 = getelementptr inbounds i32, ptr %3, i64 %19
  %2822 = load i32, ptr %2821, align 4, !tbaa !5
  %2823 = icmp eq i32 %2822, 0
  %2824 = icmp sgt i32 %5, 0
  br i1 %2823, label %2834, label %2825

2825:                                             ; preds = %2820
  br i1 %2824, label %2826, label %5594

2826:                                             ; preds = %2825
  %2827 = icmp sgt i32 %13, 1
  %2828 = icmp sgt i32 %13, 0
  %2829 = add i32 %13, -2
  %2830 = zext i32 %2829 to i64
  %2831 = zext i32 %13 to i64
  %2832 = add nuw i32 %5, 1
  %2833 = icmp eq i32 %13, 1
  br label %2976

2834:                                             ; preds = %2820
  br i1 %2824, label %2835, label %5594

2835:                                             ; preds = %2834
  %2836 = icmp sgt i32 %13, 1
  %2837 = icmp sgt i32 %13, 0
  %2838 = add i32 %13, -2
  %2839 = zext i32 %2838 to i64
  %2840 = zext i32 %13 to i64
  %2841 = add nuw i32 %5, 1
  %2842 = icmp eq i32 %13, 1
  br label %2843

2843:                                             ; preds = %2835, %2974
  %2844 = phi i32 [ 0, %2835 ], [ %2926, %2974 ]
  %2845 = phi double [ 0.000000e+00, %2835 ], [ %2925, %2974 ]
  %2846 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2836, label %2847, label %2916

2847:                                             ; preds = %2843, %2906
  %2848 = phi i32 [ %2915, %2906 ], [ 0, %2843 ]
  %2849 = phi i64 [ %2857, %2906 ], [ %2840, %2843 ]
  %2850 = phi i64 [ %2914, %2906 ], [ %2839, %2843 ]
  %2851 = phi i32 [ %2912, %2906 ], [ %2846, %2843 ]
  %2852 = sub i32 %2838, %2848
  %2853 = tail call i32 @llvm.smin.i32(i32 %2852, i32 0)
  %2854 = sub i32 %2852, %2853
  %2855 = zext i32 %2854 to i64
  %2856 = add nuw nsw i64 %2855, 1
  %2857 = add nsw i64 %2849, -1
  %2858 = icmp ult i32 %2854, 31
  br i1 %2858, label %2894, label %2859

2859:                                             ; preds = %2847
  %2860 = and i64 %2856, 8589934560
  %2861 = sub i64 %2850, %2860
  br label %2862

2862:                                             ; preds = %2862, %2859
  %2863 = phi i64 [ 0, %2859 ], [ %2886, %2862 ]
  %2864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2882, %2862 ]
  %2865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2883, %2862 ]
  %2866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2884, %2862 ]
  %2867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2885, %2862 ]
  %2868 = sub i64 %2850, %2863
  %2869 = getelementptr inbounds i32, ptr %9, i64 %2868
  %2870 = getelementptr inbounds i32, ptr %2869, i64 -7
  %2871 = load <8 x i32>, ptr %2870, align 4, !tbaa !5
  %2872 = shufflevector <8 x i32> %2871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2873 = getelementptr inbounds i32, ptr %2869, i64 -15
  %2874 = load <8 x i32>, ptr %2873, align 4, !tbaa !5
  %2875 = shufflevector <8 x i32> %2874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2876 = getelementptr inbounds i32, ptr %2869, i64 -23
  %2877 = load <8 x i32>, ptr %2876, align 4, !tbaa !5
  %2878 = shufflevector <8 x i32> %2877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2879 = getelementptr inbounds i32, ptr %2869, i64 -31
  %2880 = load <8 x i32>, ptr %2879, align 4, !tbaa !5
  %2881 = shufflevector <8 x i32> %2880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2882 = mul <8 x i32> %2872, %2864
  %2883 = mul <8 x i32> %2875, %2865
  %2884 = mul <8 x i32> %2878, %2866
  %2885 = mul <8 x i32> %2881, %2867
  %2886 = add nuw i64 %2863, 32
  %2887 = icmp eq i64 %2886, %2860
  br i1 %2887, label %2888, label %2862, !llvm.loop !1214

2888:                                             ; preds = %2862
  %2889 = mul <8 x i32> %2883, %2882
  %2890 = mul <8 x i32> %2884, %2889
  %2891 = mul <8 x i32> %2885, %2890
  %2892 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2891)
  %2893 = icmp eq i64 %2856, %2860
  br i1 %2893, label %2906, label %2894

2894:                                             ; preds = %2847, %2888
  %2895 = phi i64 [ %2850, %2847 ], [ %2861, %2888 ]
  %2896 = phi i32 [ 1, %2847 ], [ %2892, %2888 ]
  br label %2897

2897:                                             ; preds = %2894, %2897
  %2898 = phi i64 [ %2903, %2897 ], [ %2895, %2894 ]
  %2899 = phi i32 [ %2902, %2897 ], [ %2896, %2894 ]
  %2900 = getelementptr inbounds i32, ptr %9, i64 %2898
  %2901 = load i32, ptr %2900, align 4, !tbaa !5
  %2902 = mul nsw i32 %2901, %2899
  %2903 = add nsw i64 %2898, -1
  %2904 = trunc i64 %2898 to i32
  %2905 = icmp sgt i32 %2904, 0
  br i1 %2905, label %2897, label %2906, !llvm.loop !1215

2906:                                             ; preds = %2897, %2888
  %2907 = phi i32 [ %2892, %2888 ], [ %2902, %2897 ]
  %2908 = and i64 %2857, 4294967295
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2908
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = mul nsw i32 %2910, %2907
  %2912 = add nsw i32 %2911, %2851
  %2913 = icmp sgt i64 %2849, 2
  %2914 = add nsw i64 %2850, -1
  %2915 = add i32 %2848, 1
  br i1 %2913, label %2847, label %2916, !llvm.loop !1216

2916:                                             ; preds = %2906, %2843
  %2917 = phi i32 [ %2846, %2843 ], [ %2912, %2906 ]
  %2918 = sext i32 %2917 to i64
  %2919 = getelementptr inbounds float, ptr %2499, i64 %2918
  %2920 = load float, ptr %2919, align 4, !tbaa !162
  %2921 = fptosi float %2920 to i32
  %2922 = load i32, ptr %2501, align 4, !tbaa !5
  %2923 = tail call i32 @llvm.abs.i32(i32 %2921, i1 true)
  %2924 = tail call i32 @llvm.smax.i32(i32 %2922, i32 %2923)
  store i32 %2924, ptr %2501, align 4, !tbaa !5
  %2925 = fadd fast double %2845, 1.000000e+00
  %2926 = add nuw nsw i32 %2844, 1
  br i1 %2837, label %2927, label %2974

2927:                                             ; preds = %2916
  %2928 = load i32, ptr %4, align 4, !tbaa !5
  %2929 = load i32, ptr %12, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, -1
  %2931 = icmp slt i32 %2928, %2930
  br i1 %2931, label %2951, label %2932

2932:                                             ; preds = %2927
  %2933 = icmp eq i32 %2928, %2930
  br i1 %2933, label %2934, label %2967

2934:                                             ; preds = %2932
  store i32 0, ptr %4, align 4, !tbaa !5
  %2935 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2935, ptr %6, align 4, !tbaa !5
  br i1 %2842, label %2974, label %2936

2936:                                             ; preds = %2934, %2961
  %2937 = phi i64 [ %2965, %2961 ], [ 1, %2934 ]
  %2938 = getelementptr inbounds i32, ptr %4, i64 %2937
  %2939 = load i32, ptr %2938, align 4, !tbaa !5
  %2940 = getelementptr inbounds i32, ptr %12, i64 %2937
  %2941 = load i32, ptr %2940, align 4, !tbaa !5
  %2942 = add nsw i32 %2941, -1
  %2943 = icmp slt i32 %2939, %2942
  br i1 %2943, label %2944, label %2959

2944:                                             ; preds = %2936
  br i1 %2931, label %2951, label %2945

2945:                                             ; preds = %2944
  %2946 = getelementptr inbounds i32, ptr %7, i64 %2937
  %2947 = load i32, ptr %2946, align 4, !tbaa !5
  %2948 = getelementptr inbounds i32, ptr %6, i64 %2937
  %2949 = load i32, ptr %2948, align 4, !tbaa !5
  %2950 = add nsw i32 %2949, %2947
  store i32 %2950, ptr %2948, align 4, !tbaa !5
  br label %2969

2951:                                             ; preds = %2927, %2944
  %2952 = phi i32 [ %2939, %2944 ], [ %2928, %2927 ]
  %2953 = phi ptr [ %2938, %2944 ], [ %4, %2927 ]
  %2954 = phi i64 [ %2937, %2944 ], [ 0, %2927 ]
  %2955 = add nsw i32 %2952, 1
  store i32 %2955, ptr %2953, align 4, !tbaa !5
  %2956 = getelementptr inbounds i32, ptr %7, i64 %2954
  %2957 = load i32, ptr %2956, align 4, !tbaa !5
  %2958 = getelementptr inbounds i32, ptr %6, i64 %2954
  br label %2969

2959:                                             ; preds = %2936
  %2960 = icmp eq i32 %2939, %2942
  br i1 %2960, label %2961, label %2967

2961:                                             ; preds = %2959
  store i32 0, ptr %2938, align 4, !tbaa !5
  %2962 = getelementptr inbounds i32, ptr %8, i64 %2937
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = getelementptr inbounds i32, ptr %6, i64 %2937
  store i32 %2963, ptr %2964, align 4, !tbaa !5
  %2965 = add nuw nsw i64 %2937, 1
  %2966 = icmp eq i64 %2965, %2840
  br i1 %2966, label %2974, label %2936, !llvm.loop !1217

2967:                                             ; preds = %2932, %2959
  %2968 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

2969:                                             ; preds = %2945, %2951
  %2970 = phi ptr [ %2958, %2951 ], [ %2938, %2945 ]
  %2971 = phi i32 [ %2957, %2951 ], [ 1, %2945 ]
  %2972 = load i32, ptr %2970, align 4, !tbaa !5
  %2973 = add nsw i32 %2972, %2971
  store i32 %2973, ptr %2970, align 4, !tbaa !5
  br label %2974

2974:                                             ; preds = %2961, %2969, %2934, %2916
  %2975 = icmp eq i32 %2926, %5
  br i1 %2975, label %5594, label %2843, !llvm.loop !1218

2976:                                             ; preds = %2826, %3112
  %2977 = phi i32 [ 0, %2826 ], [ %3061, %3112 ]
  %2978 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2827, label %2979, label %3048

2979:                                             ; preds = %2976, %3038
  %2980 = phi i32 [ %3047, %3038 ], [ 0, %2976 ]
  %2981 = phi i64 [ %2989, %3038 ], [ %2831, %2976 ]
  %2982 = phi i64 [ %3046, %3038 ], [ %2830, %2976 ]
  %2983 = phi i32 [ %3044, %3038 ], [ %2978, %2976 ]
  %2984 = sub i32 %2829, %2980
  %2985 = tail call i32 @llvm.smin.i32(i32 %2984, i32 0)
  %2986 = sub i32 %2984, %2985
  %2987 = zext i32 %2986 to i64
  %2988 = add nuw nsw i64 %2987, 1
  %2989 = add nsw i64 %2981, -1
  %2990 = icmp ult i32 %2986, 31
  br i1 %2990, label %3026, label %2991

2991:                                             ; preds = %2979
  %2992 = and i64 %2988, 8589934560
  %2993 = sub i64 %2982, %2992
  br label %2994

2994:                                             ; preds = %2994, %2991
  %2995 = phi i64 [ 0, %2991 ], [ %3018, %2994 ]
  %2996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3014, %2994 ]
  %2997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3015, %2994 ]
  %2998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3016, %2994 ]
  %2999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3017, %2994 ]
  %3000 = sub i64 %2982, %2995
  %3001 = getelementptr inbounds i32, ptr %11, i64 %3000
  %3002 = getelementptr inbounds i32, ptr %3001, i64 -7
  %3003 = load <8 x i32>, ptr %3002, align 4, !tbaa !5
  %3004 = shufflevector <8 x i32> %3003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3005 = getelementptr inbounds i32, ptr %3001, i64 -15
  %3006 = load <8 x i32>, ptr %3005, align 4, !tbaa !5
  %3007 = shufflevector <8 x i32> %3006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3008 = getelementptr inbounds i32, ptr %3001, i64 -23
  %3009 = load <8 x i32>, ptr %3008, align 4, !tbaa !5
  %3010 = shufflevector <8 x i32> %3009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3011 = getelementptr inbounds i32, ptr %3001, i64 -31
  %3012 = load <8 x i32>, ptr %3011, align 4, !tbaa !5
  %3013 = shufflevector <8 x i32> %3012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3014 = mul <8 x i32> %3004, %2996
  %3015 = mul <8 x i32> %3007, %2997
  %3016 = mul <8 x i32> %3010, %2998
  %3017 = mul <8 x i32> %3013, %2999
  %3018 = add nuw i64 %2995, 32
  %3019 = icmp eq i64 %3018, %2992
  br i1 %3019, label %3020, label %2994, !llvm.loop !1219

3020:                                             ; preds = %2994
  %3021 = mul <8 x i32> %3015, %3014
  %3022 = mul <8 x i32> %3016, %3021
  %3023 = mul <8 x i32> %3017, %3022
  %3024 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3023)
  %3025 = icmp eq i64 %2988, %2992
  br i1 %3025, label %3038, label %3026

3026:                                             ; preds = %2979, %3020
  %3027 = phi i64 [ %2982, %2979 ], [ %2993, %3020 ]
  %3028 = phi i32 [ 1, %2979 ], [ %3024, %3020 ]
  br label %3029

3029:                                             ; preds = %3026, %3029
  %3030 = phi i64 [ %3035, %3029 ], [ %3027, %3026 ]
  %3031 = phi i32 [ %3034, %3029 ], [ %3028, %3026 ]
  %3032 = getelementptr inbounds i32, ptr %11, i64 %3030
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = mul nsw i32 %3033, %3031
  %3035 = add nsw i64 %3030, -1
  %3036 = trunc i64 %3030 to i32
  %3037 = icmp sgt i32 %3036, 0
  br i1 %3037, label %3029, label %3038, !llvm.loop !1220

3038:                                             ; preds = %3029, %3020
  %3039 = phi i32 [ %3024, %3020 ], [ %3034, %3029 ]
  %3040 = and i64 %2989, 4294967295
  %3041 = getelementptr inbounds i32, ptr %6, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = mul nsw i32 %3042, %3039
  %3044 = add nsw i32 %3043, %2983
  %3045 = icmp sgt i64 %2981, 2
  %3046 = add nsw i64 %2982, -1
  %3047 = add i32 %2980, 1
  br i1 %3045, label %2979, label %3048, !llvm.loop !1221

3048:                                             ; preds = %3038, %2976
  %3049 = phi i32 [ %2978, %2976 ], [ %3044, %3038 ]
  %3050 = icmp slt i32 %3049, %5
  br i1 %3050, label %3053, label %3051

3051:                                             ; preds = %3048
  %3052 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

3053:                                             ; preds = %3048
  %3054 = sext i32 %3049 to i64
  %3055 = getelementptr inbounds float, ptr %2499, i64 %3054
  %3056 = load float, ptr %3055, align 4, !tbaa !162
  %3057 = fptosi float %3056 to i32
  %3058 = load i32, ptr %2501, align 4, !tbaa !5
  %3059 = tail call i32 @llvm.abs.i32(i32 %3057, i1 true)
  %3060 = tail call i32 @llvm.smax.i32(i32 %3058, i32 %3059)
  store i32 %3060, ptr %2501, align 4, !tbaa !5
  %3061 = add nuw nsw i32 %2977, 1
  br i1 %2828, label %3062, label %3112

3062:                                             ; preds = %3053
  %3063 = load i32, ptr %4, align 4, !tbaa !5
  %3064 = load i32, ptr %12, align 4, !tbaa !5
  %3065 = add nsw i32 %3064, -1
  %3066 = icmp slt i32 %3063, %3065
  br i1 %3066, label %3089, label %3067

3067:                                             ; preds = %3062
  %3068 = icmp eq i32 %3063, %3065
  br i1 %3068, label %3069, label %3105

3069:                                             ; preds = %3067
  store i32 0, ptr %4, align 4, !tbaa !5
  %3070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3070, ptr %6, align 4, !tbaa !5
  br i1 %2833, label %3112, label %3071

3071:                                             ; preds = %3069, %3099
  %3072 = phi i64 [ %3103, %3099 ], [ 1, %3069 ]
  %3073 = getelementptr inbounds i32, ptr %4, i64 %3072
  %3074 = load i32, ptr %3073, align 4, !tbaa !5
  %3075 = getelementptr inbounds i32, ptr %12, i64 %3072
  %3076 = load i32, ptr %3075, align 4, !tbaa !5
  %3077 = add nsw i32 %3076, -1
  %3078 = icmp slt i32 %3074, %3077
  br i1 %3078, label %3079, label %3097

3079:                                             ; preds = %3071
  br i1 %3066, label %3089, label %3080

3080:                                             ; preds = %3079
  %3081 = shl i64 %3072, 32
  %3082 = add i64 %3081, -4294967296
  %3083 = ashr exact i64 %3082, 32
  %3084 = getelementptr inbounds i32, ptr %7, i64 %3083
  %3085 = load i32, ptr %3084, align 4, !tbaa !5
  %3086 = getelementptr inbounds i32, ptr %6, i64 %3072
  %3087 = load i32, ptr %3086, align 4, !tbaa !5
  %3088 = add nsw i32 %3087, %3085
  store i32 %3088, ptr %3086, align 4, !tbaa !5
  br label %3107

3089:                                             ; preds = %3062, %3079
  %3090 = phi i32 [ %3074, %3079 ], [ %3063, %3062 ]
  %3091 = phi ptr [ %3073, %3079 ], [ %4, %3062 ]
  %3092 = phi i64 [ %3072, %3079 ], [ 0, %3062 ]
  %3093 = add nsw i32 %3090, 1
  store i32 %3093, ptr %3091, align 4, !tbaa !5
  %3094 = getelementptr inbounds i32, ptr %7, i64 %3092
  %3095 = load i32, ptr %3094, align 4, !tbaa !5
  %3096 = getelementptr inbounds i32, ptr %6, i64 %3092
  br label %3107

3097:                                             ; preds = %3071
  %3098 = icmp eq i32 %3074, %3077
  br i1 %3098, label %3099, label %3105

3099:                                             ; preds = %3097
  store i32 0, ptr %3073, align 4, !tbaa !5
  %3100 = getelementptr inbounds i32, ptr %8, i64 %3072
  %3101 = load i32, ptr %3100, align 4, !tbaa !5
  %3102 = getelementptr inbounds i32, ptr %6, i64 %3072
  store i32 %3101, ptr %3102, align 4, !tbaa !5
  %3103 = add nuw nsw i64 %3072, 1
  %3104 = icmp eq i64 %3103, %2831
  br i1 %3104, label %3112, label %3071, !llvm.loop !1222

3105:                                             ; preds = %3067, %3097
  %3106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

3107:                                             ; preds = %3080, %3089
  %3108 = phi ptr [ %3096, %3089 ], [ %3073, %3080 ]
  %3109 = phi i32 [ %3095, %3089 ], [ 1, %3080 ]
  %3110 = load i32, ptr %3108, align 4, !tbaa !5
  %3111 = add nsw i32 %3110, %3109
  store i32 %3111, ptr %3108, align 4, !tbaa !5
  br label %3112

3112:                                             ; preds = %3099, %3107, %3069, %3053
  %3113 = icmp eq i32 %3061, %5
  br i1 %3113, label %5594, label %2976, !llvm.loop !1223

3114:                                             ; preds = %2509
  %3115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

3116:                                             ; preds = %18
  %3117 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3118 = load ptr, ptr %3117, align 8, !tbaa !9
  %3119 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3120 = load ptr, ptr %3119, align 8, !tbaa !9
  store i64 0, ptr %3120, align 8, !tbaa !120
  %3121 = icmp eq i32 %13, 0
  br i1 %3121, label %3122, label %3128

3122:                                             ; preds = %3116
  %3123 = load float, ptr %3118, align 4, !tbaa !162
  %3124 = fptosi float %3123 to i64
  %3125 = icmp eq i64 %3124, 0
  %3126 = tail call i64 @llvm.abs.i64(i64 %3124, i1 true)
  %3127 = select i1 %3125, i64 0, i64 %3126
  store i64 %3127, ptr %3120, align 8, !tbaa !120
  br label %5594

3128:                                             ; preds = %3116
  switch i32 %1, label %3733 [
    i32 1, label %3129
    i32 0, label %3439
  ]

3129:                                             ; preds = %3128
  %3130 = getelementptr inbounds i32, ptr %3, i64 %19
  %3131 = load i32, ptr %3130, align 4, !tbaa !5
  %3132 = icmp eq i32 %3131, 0
  %3133 = icmp sgt i32 %5, 0
  br i1 %3132, label %3143, label %3134

3134:                                             ; preds = %3129
  br i1 %3133, label %3135, label %5594

3135:                                             ; preds = %3134
  %3136 = icmp sgt i32 %13, 1
  %3137 = icmp sgt i32 %13, 0
  %3138 = add i32 %13, -2
  %3139 = zext i32 %3138 to i64
  %3140 = zext i32 %13 to i64
  %3141 = add nuw i32 %5, 1
  %3142 = icmp eq i32 %13, 1
  br label %3295

3143:                                             ; preds = %3129
  br i1 %3133, label %3144, label %5594

3144:                                             ; preds = %3143
  %3145 = icmp sgt i32 %13, 1
  %3146 = icmp sgt i32 %13, 0
  %3147 = add i32 %13, -2
  %3148 = zext i32 %3147 to i64
  %3149 = zext i32 %13 to i64
  %3150 = add nuw i32 %5, 1
  %3151 = icmp eq i32 %13, 1
  br label %3152

3152:                                             ; preds = %3144, %3293
  %3153 = phi i64 [ 0, %3144 ], [ %3243, %3293 ]
  %3154 = phi i32 [ 0, %3144 ], [ %3245, %3293 ]
  %3155 = phi double [ 0.000000e+00, %3144 ], [ %3244, %3293 ]
  %3156 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3145, label %3157, label %3226

3157:                                             ; preds = %3152, %3216
  %3158 = phi i32 [ %3225, %3216 ], [ 0, %3152 ]
  %3159 = phi i64 [ %3167, %3216 ], [ %3149, %3152 ]
  %3160 = phi i64 [ %3224, %3216 ], [ %3148, %3152 ]
  %3161 = phi i32 [ %3222, %3216 ], [ %3156, %3152 ]
  %3162 = sub i32 %3147, %3158
  %3163 = tail call i32 @llvm.smin.i32(i32 %3162, i32 0)
  %3164 = sub i32 %3162, %3163
  %3165 = zext i32 %3164 to i64
  %3166 = add nuw nsw i64 %3165, 1
  %3167 = add nsw i64 %3159, -1
  %3168 = icmp ult i32 %3164, 31
  br i1 %3168, label %3204, label %3169

3169:                                             ; preds = %3157
  %3170 = and i64 %3166, 8589934560
  %3171 = sub i64 %3160, %3170
  br label %3172

3172:                                             ; preds = %3172, %3169
  %3173 = phi i64 [ 0, %3169 ], [ %3196, %3172 ]
  %3174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3192, %3172 ]
  %3175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3193, %3172 ]
  %3176 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3194, %3172 ]
  %3177 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3195, %3172 ]
  %3178 = sub i64 %3160, %3173
  %3179 = getelementptr inbounds i32, ptr %9, i64 %3178
  %3180 = getelementptr inbounds i32, ptr %3179, i64 -7
  %3181 = load <8 x i32>, ptr %3180, align 4, !tbaa !5
  %3182 = shufflevector <8 x i32> %3181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3183 = getelementptr inbounds i32, ptr %3179, i64 -15
  %3184 = load <8 x i32>, ptr %3183, align 4, !tbaa !5
  %3185 = shufflevector <8 x i32> %3184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3186 = getelementptr inbounds i32, ptr %3179, i64 -23
  %3187 = load <8 x i32>, ptr %3186, align 4, !tbaa !5
  %3188 = shufflevector <8 x i32> %3187, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3189 = getelementptr inbounds i32, ptr %3179, i64 -31
  %3190 = load <8 x i32>, ptr %3189, align 4, !tbaa !5
  %3191 = shufflevector <8 x i32> %3190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3192 = mul <8 x i32> %3182, %3174
  %3193 = mul <8 x i32> %3185, %3175
  %3194 = mul <8 x i32> %3188, %3176
  %3195 = mul <8 x i32> %3191, %3177
  %3196 = add nuw i64 %3173, 32
  %3197 = icmp eq i64 %3196, %3170
  br i1 %3197, label %3198, label %3172, !llvm.loop !1224

3198:                                             ; preds = %3172
  %3199 = mul <8 x i32> %3193, %3192
  %3200 = mul <8 x i32> %3194, %3199
  %3201 = mul <8 x i32> %3195, %3200
  %3202 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3201)
  %3203 = icmp eq i64 %3166, %3170
  br i1 %3203, label %3216, label %3204

3204:                                             ; preds = %3157, %3198
  %3205 = phi i64 [ %3160, %3157 ], [ %3171, %3198 ]
  %3206 = phi i32 [ 1, %3157 ], [ %3202, %3198 ]
  br label %3207

3207:                                             ; preds = %3204, %3207
  %3208 = phi i64 [ %3213, %3207 ], [ %3205, %3204 ]
  %3209 = phi i32 [ %3212, %3207 ], [ %3206, %3204 ]
  %3210 = getelementptr inbounds i32, ptr %9, i64 %3208
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = mul nsw i32 %3211, %3209
  %3213 = add nsw i64 %3208, -1
  %3214 = trunc i64 %3208 to i32
  %3215 = icmp sgt i32 %3214, 0
  br i1 %3215, label %3207, label %3216, !llvm.loop !1225

3216:                                             ; preds = %3207, %3198
  %3217 = phi i32 [ %3202, %3198 ], [ %3212, %3207 ]
  %3218 = and i64 %3167, 4294967295
  %3219 = getelementptr inbounds i32, ptr %6, i64 %3218
  %3220 = load i32, ptr %3219, align 4, !tbaa !5
  %3221 = mul nsw i32 %3220, %3217
  %3222 = add nsw i32 %3221, %3161
  %3223 = icmp sgt i64 %3159, 2
  %3224 = add nsw i64 %3160, -1
  %3225 = add i32 %3158, 1
  br i1 %3223, label %3157, label %3226, !llvm.loop !1226

3226:                                             ; preds = %3216, %3152
  %3227 = phi i32 [ %3156, %3152 ], [ %3222, %3216 ]
  %3228 = sext i32 %3227 to i64
  %3229 = getelementptr inbounds double, ptr %2, i64 %3228
  %3230 = load double, ptr %3229, align 8, !tbaa !18
  %3231 = getelementptr inbounds float, ptr %3118, i64 %3228
  %3232 = load float, ptr %3231, align 4, !tbaa !162
  %3233 = fptosi float %3232 to i64
  %3234 = sitofp i64 %3153 to double
  %3235 = sitofp i64 %3233 to double
  %3236 = fmul fast double %3230, %3235
  %3237 = fcmp fast uge double %3236, 0.000000e+00
  %3238 = fneg fast double %3236
  %3239 = tail call fast double @llvm.fabs.f64(double %3236)
  %3240 = fcmp fast ole double %3239, %3234
  %3241 = select nnan ninf i1 %3237, double %3236, double %3238
  %3242 = select i1 %3240, double %3234, double %3241
  %3243 = fptosi double %3242 to i64
  %3244 = fadd fast double %3230, %3155
  %3245 = add nuw nsw i32 %3154, 1
  br i1 %3146, label %3246, label %3293

3246:                                             ; preds = %3226
  %3247 = load i32, ptr %4, align 4, !tbaa !5
  %3248 = load i32, ptr %12, align 4, !tbaa !5
  %3249 = add nsw i32 %3248, -1
  %3250 = icmp slt i32 %3247, %3249
  br i1 %3250, label %3270, label %3251

3251:                                             ; preds = %3246
  %3252 = icmp eq i32 %3247, %3249
  br i1 %3252, label %3253, label %3286

3253:                                             ; preds = %3251
  store i32 0, ptr %4, align 4, !tbaa !5
  %3254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3254, ptr %6, align 4, !tbaa !5
  br i1 %3151, label %3293, label %3255

3255:                                             ; preds = %3253, %3280
  %3256 = phi i64 [ %3284, %3280 ], [ 1, %3253 ]
  %3257 = getelementptr inbounds i32, ptr %4, i64 %3256
  %3258 = load i32, ptr %3257, align 4, !tbaa !5
  %3259 = getelementptr inbounds i32, ptr %12, i64 %3256
  %3260 = load i32, ptr %3259, align 4, !tbaa !5
  %3261 = add nsw i32 %3260, -1
  %3262 = icmp slt i32 %3258, %3261
  br i1 %3262, label %3263, label %3278

3263:                                             ; preds = %3255
  br i1 %3250, label %3270, label %3264

3264:                                             ; preds = %3263
  %3265 = getelementptr inbounds i32, ptr %7, i64 %3256
  %3266 = load i32, ptr %3265, align 4, !tbaa !5
  %3267 = getelementptr inbounds i32, ptr %6, i64 %3256
  %3268 = load i32, ptr %3267, align 4, !tbaa !5
  %3269 = add nsw i32 %3268, %3266
  store i32 %3269, ptr %3267, align 4, !tbaa !5
  br label %3288

3270:                                             ; preds = %3246, %3263
  %3271 = phi i32 [ %3258, %3263 ], [ %3247, %3246 ]
  %3272 = phi ptr [ %3257, %3263 ], [ %4, %3246 ]
  %3273 = phi i64 [ %3256, %3263 ], [ 0, %3246 ]
  %3274 = add nsw i32 %3271, 1
  store i32 %3274, ptr %3272, align 4, !tbaa !5
  %3275 = getelementptr inbounds i32, ptr %7, i64 %3273
  %3276 = load i32, ptr %3275, align 4, !tbaa !5
  %3277 = getelementptr inbounds i32, ptr %6, i64 %3273
  br label %3288

3278:                                             ; preds = %3255
  %3279 = icmp eq i32 %3258, %3261
  br i1 %3279, label %3280, label %3286

3280:                                             ; preds = %3278
  store i32 0, ptr %3257, align 4, !tbaa !5
  %3281 = getelementptr inbounds i32, ptr %8, i64 %3256
  %3282 = load i32, ptr %3281, align 4, !tbaa !5
  %3283 = getelementptr inbounds i32, ptr %6, i64 %3256
  store i32 %3282, ptr %3283, align 4, !tbaa !5
  %3284 = add nuw nsw i64 %3256, 1
  %3285 = icmp eq i64 %3284, %3149
  br i1 %3285, label %3293, label %3255, !llvm.loop !1227

3286:                                             ; preds = %3251, %3278
  store i64 %3243, ptr %3120, align 8, !tbaa !120
  %3287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

3288:                                             ; preds = %3264, %3270
  %3289 = phi ptr [ %3277, %3270 ], [ %3257, %3264 ]
  %3290 = phi i32 [ %3276, %3270 ], [ 1, %3264 ]
  %3291 = load i32, ptr %3289, align 4, !tbaa !5
  %3292 = add nsw i32 %3291, %3290
  store i32 %3292, ptr %3289, align 4, !tbaa !5
  br label %3293

3293:                                             ; preds = %3280, %3288, %3253, %3226
  %3294 = icmp eq i32 %3245, %5
  br i1 %3294, label %5590, label %3152, !llvm.loop !1228

3295:                                             ; preds = %3135, %3437
  %3296 = phi i64 [ 0, %3135 ], [ %3385, %3437 ]
  %3297 = phi i32 [ 0, %3135 ], [ %3386, %3437 ]
  %3298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3136, label %3299, label %3368

3299:                                             ; preds = %3295, %3358
  %3300 = phi i32 [ %3367, %3358 ], [ 0, %3295 ]
  %3301 = phi i64 [ %3309, %3358 ], [ %3140, %3295 ]
  %3302 = phi i64 [ %3366, %3358 ], [ %3139, %3295 ]
  %3303 = phi i32 [ %3364, %3358 ], [ %3298, %3295 ]
  %3304 = sub i32 %3138, %3300
  %3305 = tail call i32 @llvm.smin.i32(i32 %3304, i32 0)
  %3306 = sub i32 %3304, %3305
  %3307 = zext i32 %3306 to i64
  %3308 = add nuw nsw i64 %3307, 1
  %3309 = add nsw i64 %3301, -1
  %3310 = icmp ult i32 %3306, 31
  br i1 %3310, label %3346, label %3311

3311:                                             ; preds = %3299
  %3312 = and i64 %3308, 8589934560
  %3313 = sub i64 %3302, %3312
  br label %3314

3314:                                             ; preds = %3314, %3311
  %3315 = phi i64 [ 0, %3311 ], [ %3338, %3314 ]
  %3316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3334, %3314 ]
  %3317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3335, %3314 ]
  %3318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3336, %3314 ]
  %3319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3337, %3314 ]
  %3320 = sub i64 %3302, %3315
  %3321 = getelementptr inbounds i32, ptr %11, i64 %3320
  %3322 = getelementptr inbounds i32, ptr %3321, i64 -7
  %3323 = load <8 x i32>, ptr %3322, align 4, !tbaa !5
  %3324 = shufflevector <8 x i32> %3323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3325 = getelementptr inbounds i32, ptr %3321, i64 -15
  %3326 = load <8 x i32>, ptr %3325, align 4, !tbaa !5
  %3327 = shufflevector <8 x i32> %3326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3328 = getelementptr inbounds i32, ptr %3321, i64 -23
  %3329 = load <8 x i32>, ptr %3328, align 4, !tbaa !5
  %3330 = shufflevector <8 x i32> %3329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3331 = getelementptr inbounds i32, ptr %3321, i64 -31
  %3332 = load <8 x i32>, ptr %3331, align 4, !tbaa !5
  %3333 = shufflevector <8 x i32> %3332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3334 = mul <8 x i32> %3324, %3316
  %3335 = mul <8 x i32> %3327, %3317
  %3336 = mul <8 x i32> %3330, %3318
  %3337 = mul <8 x i32> %3333, %3319
  %3338 = add nuw i64 %3315, 32
  %3339 = icmp eq i64 %3338, %3312
  br i1 %3339, label %3340, label %3314, !llvm.loop !1229

3340:                                             ; preds = %3314
  %3341 = mul <8 x i32> %3335, %3334
  %3342 = mul <8 x i32> %3336, %3341
  %3343 = mul <8 x i32> %3337, %3342
  %3344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3343)
  %3345 = icmp eq i64 %3308, %3312
  br i1 %3345, label %3358, label %3346

3346:                                             ; preds = %3299, %3340
  %3347 = phi i64 [ %3302, %3299 ], [ %3313, %3340 ]
  %3348 = phi i32 [ 1, %3299 ], [ %3344, %3340 ]
  br label %3349

3349:                                             ; preds = %3346, %3349
  %3350 = phi i64 [ %3355, %3349 ], [ %3347, %3346 ]
  %3351 = phi i32 [ %3354, %3349 ], [ %3348, %3346 ]
  %3352 = getelementptr inbounds i32, ptr %11, i64 %3350
  %3353 = load i32, ptr %3352, align 4, !tbaa !5
  %3354 = mul nsw i32 %3353, %3351
  %3355 = add nsw i64 %3350, -1
  %3356 = trunc i64 %3350 to i32
  %3357 = icmp sgt i32 %3356, 0
  br i1 %3357, label %3349, label %3358, !llvm.loop !1230

3358:                                             ; preds = %3349, %3340
  %3359 = phi i32 [ %3344, %3340 ], [ %3354, %3349 ]
  %3360 = and i64 %3309, 4294967295
  %3361 = getelementptr inbounds i32, ptr %6, i64 %3360
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = mul nsw i32 %3362, %3359
  %3364 = add nsw i32 %3363, %3303
  %3365 = icmp sgt i64 %3301, 2
  %3366 = add nsw i64 %3302, -1
  %3367 = add i32 %3300, 1
  br i1 %3365, label %3299, label %3368, !llvm.loop !1231

3368:                                             ; preds = %3358, %3295
  %3369 = phi i32 [ %3298, %3295 ], [ %3364, %3358 ]
  %3370 = icmp slt i32 %3369, %5
  br i1 %3370, label %3373, label %3371

3371:                                             ; preds = %3368
  %3372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

3373:                                             ; preds = %3368
  %3374 = sext i32 %3369 to i64
  %3375 = getelementptr inbounds float, ptr %3118, i64 %3374
  %3376 = load float, ptr %3375, align 4, !tbaa !162
  %3377 = fptosi float %3376 to i64
  %3378 = sitofp i64 %3296 to double
  %3379 = sitofp i64 %3377 to double
  %3380 = icmp slt i64 %3377, 0
  %3381 = fneg fast double %3379
  %3382 = select i1 %3380, double %3381, double %3379
  %3383 = fcmp fast ole double %3382, %3378
  %3384 = select fast i1 %3383, double %3378, double %3382
  %3385 = fptosi double %3384 to i64
  store i64 %3385, ptr %3120, align 8, !tbaa !120
  %3386 = add nuw nsw i32 %3297, 1
  br i1 %3137, label %3387, label %3437

3387:                                             ; preds = %3373
  %3388 = load i32, ptr %4, align 4, !tbaa !5
  %3389 = load i32, ptr %12, align 4, !tbaa !5
  %3390 = add nsw i32 %3389, -1
  %3391 = icmp slt i32 %3388, %3390
  br i1 %3391, label %3414, label %3392

3392:                                             ; preds = %3387
  %3393 = icmp eq i32 %3388, %3390
  br i1 %3393, label %3394, label %3430

3394:                                             ; preds = %3392
  store i32 0, ptr %4, align 4, !tbaa !5
  %3395 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3395, ptr %6, align 4, !tbaa !5
  br i1 %3142, label %3437, label %3396

3396:                                             ; preds = %3394, %3424
  %3397 = phi i64 [ %3428, %3424 ], [ 1, %3394 ]
  %3398 = getelementptr inbounds i32, ptr %4, i64 %3397
  %3399 = load i32, ptr %3398, align 4, !tbaa !5
  %3400 = getelementptr inbounds i32, ptr %12, i64 %3397
  %3401 = load i32, ptr %3400, align 4, !tbaa !5
  %3402 = add nsw i32 %3401, -1
  %3403 = icmp slt i32 %3399, %3402
  br i1 %3403, label %3404, label %3422

3404:                                             ; preds = %3396
  br i1 %3391, label %3414, label %3405

3405:                                             ; preds = %3404
  %3406 = shl i64 %3397, 32
  %3407 = add i64 %3406, -4294967296
  %3408 = ashr exact i64 %3407, 32
  %3409 = getelementptr inbounds i32, ptr %7, i64 %3408
  %3410 = load i32, ptr %3409, align 4, !tbaa !5
  %3411 = getelementptr inbounds i32, ptr %6, i64 %3397
  %3412 = load i32, ptr %3411, align 4, !tbaa !5
  %3413 = add nsw i32 %3412, %3410
  store i32 %3413, ptr %3411, align 4, !tbaa !5
  br label %3432

3414:                                             ; preds = %3387, %3404
  %3415 = phi i32 [ %3399, %3404 ], [ %3388, %3387 ]
  %3416 = phi ptr [ %3398, %3404 ], [ %4, %3387 ]
  %3417 = phi i64 [ %3397, %3404 ], [ 0, %3387 ]
  %3418 = add nsw i32 %3415, 1
  store i32 %3418, ptr %3416, align 4, !tbaa !5
  %3419 = getelementptr inbounds i32, ptr %7, i64 %3417
  %3420 = load i32, ptr %3419, align 4, !tbaa !5
  %3421 = getelementptr inbounds i32, ptr %6, i64 %3417
  br label %3432

3422:                                             ; preds = %3396
  %3423 = icmp eq i32 %3399, %3402
  br i1 %3423, label %3424, label %3430

3424:                                             ; preds = %3422
  store i32 0, ptr %3398, align 4, !tbaa !5
  %3425 = getelementptr inbounds i32, ptr %8, i64 %3397
  %3426 = load i32, ptr %3425, align 4, !tbaa !5
  %3427 = getelementptr inbounds i32, ptr %6, i64 %3397
  store i32 %3426, ptr %3427, align 4, !tbaa !5
  %3428 = add nuw nsw i64 %3397, 1
  %3429 = icmp eq i64 %3428, %3140
  br i1 %3429, label %3437, label %3396, !llvm.loop !1232

3430:                                             ; preds = %3392, %3422
  %3431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

3432:                                             ; preds = %3405, %3414
  %3433 = phi ptr [ %3421, %3414 ], [ %3398, %3405 ]
  %3434 = phi i32 [ %3420, %3414 ], [ 1, %3405 ]
  %3435 = load i32, ptr %3433, align 4, !tbaa !5
  %3436 = add nsw i32 %3435, %3434
  store i32 %3436, ptr %3433, align 4, !tbaa !5
  br label %3437

3437:                                             ; preds = %3424, %3432, %3394, %3373
  %3438 = icmp eq i32 %3386, %5
  br i1 %3438, label %5594, label %3295, !llvm.loop !1233

3439:                                             ; preds = %3128
  %3440 = getelementptr inbounds i32, ptr %3, i64 %19
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = icmp eq i32 %3441, 0
  %3443 = icmp sgt i32 %5, 0
  br i1 %3442, label %3453, label %3444

3444:                                             ; preds = %3439
  br i1 %3443, label %3445, label %5594

3445:                                             ; preds = %3444
  %3446 = icmp sgt i32 %13, 1
  %3447 = icmp sgt i32 %13, 0
  %3448 = add i32 %13, -2
  %3449 = zext i32 %3448 to i64
  %3450 = zext i32 %13 to i64
  %3451 = add nuw i32 %5, 1
  %3452 = icmp eq i32 %13, 1
  br label %3595

3453:                                             ; preds = %3439
  br i1 %3443, label %3454, label %5594

3454:                                             ; preds = %3453
  %3455 = icmp sgt i32 %13, 1
  %3456 = icmp sgt i32 %13, 0
  %3457 = add i32 %13, -2
  %3458 = zext i32 %3457 to i64
  %3459 = zext i32 %13 to i64
  %3460 = add nuw i32 %5, 1
  %3461 = icmp eq i32 %13, 1
  br label %3462

3462:                                             ; preds = %3454, %3593
  %3463 = phi i64 [ 0, %3454 ], [ %3543, %3593 ]
  %3464 = phi i32 [ 0, %3454 ], [ %3545, %3593 ]
  %3465 = phi double [ 0.000000e+00, %3454 ], [ %3544, %3593 ]
  %3466 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3455, label %3467, label %3536

3467:                                             ; preds = %3462, %3526
  %3468 = phi i32 [ %3535, %3526 ], [ 0, %3462 ]
  %3469 = phi i64 [ %3477, %3526 ], [ %3459, %3462 ]
  %3470 = phi i64 [ %3534, %3526 ], [ %3458, %3462 ]
  %3471 = phi i32 [ %3532, %3526 ], [ %3466, %3462 ]
  %3472 = sub i32 %3457, %3468
  %3473 = tail call i32 @llvm.smin.i32(i32 %3472, i32 0)
  %3474 = sub i32 %3472, %3473
  %3475 = zext i32 %3474 to i64
  %3476 = add nuw nsw i64 %3475, 1
  %3477 = add nsw i64 %3469, -1
  %3478 = icmp ult i32 %3474, 31
  br i1 %3478, label %3514, label %3479

3479:                                             ; preds = %3467
  %3480 = and i64 %3476, 8589934560
  %3481 = sub i64 %3470, %3480
  br label %3482

3482:                                             ; preds = %3482, %3479
  %3483 = phi i64 [ 0, %3479 ], [ %3506, %3482 ]
  %3484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3502, %3482 ]
  %3485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3503, %3482 ]
  %3486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3504, %3482 ]
  %3487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3505, %3482 ]
  %3488 = sub i64 %3470, %3483
  %3489 = getelementptr inbounds i32, ptr %9, i64 %3488
  %3490 = getelementptr inbounds i32, ptr %3489, i64 -7
  %3491 = load <8 x i32>, ptr %3490, align 4, !tbaa !5
  %3492 = shufflevector <8 x i32> %3491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3493 = getelementptr inbounds i32, ptr %3489, i64 -15
  %3494 = load <8 x i32>, ptr %3493, align 4, !tbaa !5
  %3495 = shufflevector <8 x i32> %3494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3496 = getelementptr inbounds i32, ptr %3489, i64 -23
  %3497 = load <8 x i32>, ptr %3496, align 4, !tbaa !5
  %3498 = shufflevector <8 x i32> %3497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3499 = getelementptr inbounds i32, ptr %3489, i64 -31
  %3500 = load <8 x i32>, ptr %3499, align 4, !tbaa !5
  %3501 = shufflevector <8 x i32> %3500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3502 = mul <8 x i32> %3492, %3484
  %3503 = mul <8 x i32> %3495, %3485
  %3504 = mul <8 x i32> %3498, %3486
  %3505 = mul <8 x i32> %3501, %3487
  %3506 = add nuw i64 %3483, 32
  %3507 = icmp eq i64 %3506, %3480
  br i1 %3507, label %3508, label %3482, !llvm.loop !1234

3508:                                             ; preds = %3482
  %3509 = mul <8 x i32> %3503, %3502
  %3510 = mul <8 x i32> %3504, %3509
  %3511 = mul <8 x i32> %3505, %3510
  %3512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3511)
  %3513 = icmp eq i64 %3476, %3480
  br i1 %3513, label %3526, label %3514

3514:                                             ; preds = %3467, %3508
  %3515 = phi i64 [ %3470, %3467 ], [ %3481, %3508 ]
  %3516 = phi i32 [ 1, %3467 ], [ %3512, %3508 ]
  br label %3517

3517:                                             ; preds = %3514, %3517
  %3518 = phi i64 [ %3523, %3517 ], [ %3515, %3514 ]
  %3519 = phi i32 [ %3522, %3517 ], [ %3516, %3514 ]
  %3520 = getelementptr inbounds i32, ptr %9, i64 %3518
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = mul nsw i32 %3521, %3519
  %3523 = add nsw i64 %3518, -1
  %3524 = trunc i64 %3518 to i32
  %3525 = icmp sgt i32 %3524, 0
  br i1 %3525, label %3517, label %3526, !llvm.loop !1235

3526:                                             ; preds = %3517, %3508
  %3527 = phi i32 [ %3512, %3508 ], [ %3522, %3517 ]
  %3528 = and i64 %3477, 4294967295
  %3529 = getelementptr inbounds i32, ptr %6, i64 %3528
  %3530 = load i32, ptr %3529, align 4, !tbaa !5
  %3531 = mul nsw i32 %3530, %3527
  %3532 = add nsw i32 %3531, %3471
  %3533 = icmp sgt i64 %3469, 2
  %3534 = add nsw i64 %3470, -1
  %3535 = add i32 %3468, 1
  br i1 %3533, label %3467, label %3536, !llvm.loop !1236

3536:                                             ; preds = %3526, %3462
  %3537 = phi i32 [ %3466, %3462 ], [ %3532, %3526 ]
  %3538 = sext i32 %3537 to i64
  %3539 = getelementptr inbounds float, ptr %3118, i64 %3538
  %3540 = load float, ptr %3539, align 4, !tbaa !162
  %3541 = fptosi float %3540 to i64
  %3542 = tail call i64 @llvm.abs.i64(i64 %3541, i1 true)
  %3543 = tail call i64 @llvm.smax.i64(i64 %3463, i64 %3542)
  %3544 = fadd fast double %3465, 1.000000e+00
  %3545 = add nuw nsw i32 %3464, 1
  br i1 %3456, label %3546, label %3593

3546:                                             ; preds = %3536
  %3547 = load i32, ptr %4, align 4, !tbaa !5
  %3548 = load i32, ptr %12, align 4, !tbaa !5
  %3549 = add nsw i32 %3548, -1
  %3550 = icmp slt i32 %3547, %3549
  br i1 %3550, label %3570, label %3551

3551:                                             ; preds = %3546
  %3552 = icmp eq i32 %3547, %3549
  br i1 %3552, label %3553, label %3586

3553:                                             ; preds = %3551
  store i32 0, ptr %4, align 4, !tbaa !5
  %3554 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3554, ptr %6, align 4, !tbaa !5
  br i1 %3461, label %3593, label %3555

3555:                                             ; preds = %3553, %3580
  %3556 = phi i64 [ %3584, %3580 ], [ 1, %3553 ]
  %3557 = getelementptr inbounds i32, ptr %4, i64 %3556
  %3558 = load i32, ptr %3557, align 4, !tbaa !5
  %3559 = getelementptr inbounds i32, ptr %12, i64 %3556
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = add nsw i32 %3560, -1
  %3562 = icmp slt i32 %3558, %3561
  br i1 %3562, label %3563, label %3578

3563:                                             ; preds = %3555
  br i1 %3550, label %3570, label %3564

3564:                                             ; preds = %3563
  %3565 = getelementptr inbounds i32, ptr %7, i64 %3556
  %3566 = load i32, ptr %3565, align 4, !tbaa !5
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3556
  %3568 = load i32, ptr %3567, align 4, !tbaa !5
  %3569 = add nsw i32 %3568, %3566
  store i32 %3569, ptr %3567, align 4, !tbaa !5
  br label %3588

3570:                                             ; preds = %3546, %3563
  %3571 = phi i32 [ %3558, %3563 ], [ %3547, %3546 ]
  %3572 = phi ptr [ %3557, %3563 ], [ %4, %3546 ]
  %3573 = phi i64 [ %3556, %3563 ], [ 0, %3546 ]
  %3574 = add nsw i32 %3571, 1
  store i32 %3574, ptr %3572, align 4, !tbaa !5
  %3575 = getelementptr inbounds i32, ptr %7, i64 %3573
  %3576 = load i32, ptr %3575, align 4, !tbaa !5
  %3577 = getelementptr inbounds i32, ptr %6, i64 %3573
  br label %3588

3578:                                             ; preds = %3555
  %3579 = icmp eq i32 %3558, %3561
  br i1 %3579, label %3580, label %3586

3580:                                             ; preds = %3578
  store i32 0, ptr %3557, align 4, !tbaa !5
  %3581 = getelementptr inbounds i32, ptr %8, i64 %3556
  %3582 = load i32, ptr %3581, align 4, !tbaa !5
  %3583 = getelementptr inbounds i32, ptr %6, i64 %3556
  store i32 %3582, ptr %3583, align 4, !tbaa !5
  %3584 = add nuw nsw i64 %3556, 1
  %3585 = icmp eq i64 %3584, %3459
  br i1 %3585, label %3593, label %3555, !llvm.loop !1237

3586:                                             ; preds = %3551, %3578
  store i64 %3543, ptr %3120, align 8, !tbaa !120
  %3587 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

3588:                                             ; preds = %3564, %3570
  %3589 = phi ptr [ %3577, %3570 ], [ %3557, %3564 ]
  %3590 = phi i32 [ %3576, %3570 ], [ 1, %3564 ]
  %3591 = load i32, ptr %3589, align 4, !tbaa !5
  %3592 = add nsw i32 %3591, %3590
  store i32 %3592, ptr %3589, align 4, !tbaa !5
  br label %3593

3593:                                             ; preds = %3580, %3588, %3553, %3536
  %3594 = icmp eq i32 %3545, %5
  br i1 %3594, label %5591, label %3462, !llvm.loop !1238

3595:                                             ; preds = %3445, %3731
  %3596 = phi i64 [ 0, %3445 ], [ %3679, %3731 ]
  %3597 = phi i32 [ 0, %3445 ], [ %3680, %3731 ]
  %3598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3446, label %3599, label %3668

3599:                                             ; preds = %3595, %3658
  %3600 = phi i32 [ %3667, %3658 ], [ 0, %3595 ]
  %3601 = phi i64 [ %3609, %3658 ], [ %3450, %3595 ]
  %3602 = phi i64 [ %3666, %3658 ], [ %3449, %3595 ]
  %3603 = phi i32 [ %3664, %3658 ], [ %3598, %3595 ]
  %3604 = sub i32 %3448, %3600
  %3605 = tail call i32 @llvm.smin.i32(i32 %3604, i32 0)
  %3606 = sub i32 %3604, %3605
  %3607 = zext i32 %3606 to i64
  %3608 = add nuw nsw i64 %3607, 1
  %3609 = add nsw i64 %3601, -1
  %3610 = icmp ult i32 %3606, 31
  br i1 %3610, label %3646, label %3611

3611:                                             ; preds = %3599
  %3612 = and i64 %3608, 8589934560
  %3613 = sub i64 %3602, %3612
  br label %3614

3614:                                             ; preds = %3614, %3611
  %3615 = phi i64 [ 0, %3611 ], [ %3638, %3614 ]
  %3616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3634, %3614 ]
  %3617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3635, %3614 ]
  %3618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3636, %3614 ]
  %3619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3637, %3614 ]
  %3620 = sub i64 %3602, %3615
  %3621 = getelementptr inbounds i32, ptr %11, i64 %3620
  %3622 = getelementptr inbounds i32, ptr %3621, i64 -7
  %3623 = load <8 x i32>, ptr %3622, align 4, !tbaa !5
  %3624 = shufflevector <8 x i32> %3623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3625 = getelementptr inbounds i32, ptr %3621, i64 -15
  %3626 = load <8 x i32>, ptr %3625, align 4, !tbaa !5
  %3627 = shufflevector <8 x i32> %3626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3628 = getelementptr inbounds i32, ptr %3621, i64 -23
  %3629 = load <8 x i32>, ptr %3628, align 4, !tbaa !5
  %3630 = shufflevector <8 x i32> %3629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3631 = getelementptr inbounds i32, ptr %3621, i64 -31
  %3632 = load <8 x i32>, ptr %3631, align 4, !tbaa !5
  %3633 = shufflevector <8 x i32> %3632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3634 = mul <8 x i32> %3624, %3616
  %3635 = mul <8 x i32> %3627, %3617
  %3636 = mul <8 x i32> %3630, %3618
  %3637 = mul <8 x i32> %3633, %3619
  %3638 = add nuw i64 %3615, 32
  %3639 = icmp eq i64 %3638, %3612
  br i1 %3639, label %3640, label %3614, !llvm.loop !1239

3640:                                             ; preds = %3614
  %3641 = mul <8 x i32> %3635, %3634
  %3642 = mul <8 x i32> %3636, %3641
  %3643 = mul <8 x i32> %3637, %3642
  %3644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3643)
  %3645 = icmp eq i64 %3608, %3612
  br i1 %3645, label %3658, label %3646

3646:                                             ; preds = %3599, %3640
  %3647 = phi i64 [ %3602, %3599 ], [ %3613, %3640 ]
  %3648 = phi i32 [ 1, %3599 ], [ %3644, %3640 ]
  br label %3649

3649:                                             ; preds = %3646, %3649
  %3650 = phi i64 [ %3655, %3649 ], [ %3647, %3646 ]
  %3651 = phi i32 [ %3654, %3649 ], [ %3648, %3646 ]
  %3652 = getelementptr inbounds i32, ptr %11, i64 %3650
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = mul nsw i32 %3653, %3651
  %3655 = add nsw i64 %3650, -1
  %3656 = trunc i64 %3650 to i32
  %3657 = icmp sgt i32 %3656, 0
  br i1 %3657, label %3649, label %3658, !llvm.loop !1240

3658:                                             ; preds = %3649, %3640
  %3659 = phi i32 [ %3644, %3640 ], [ %3654, %3649 ]
  %3660 = and i64 %3609, 4294967295
  %3661 = getelementptr inbounds i32, ptr %6, i64 %3660
  %3662 = load i32, ptr %3661, align 4, !tbaa !5
  %3663 = mul nsw i32 %3662, %3659
  %3664 = add nsw i32 %3663, %3603
  %3665 = icmp sgt i64 %3601, 2
  %3666 = add nsw i64 %3602, -1
  %3667 = add i32 %3600, 1
  br i1 %3665, label %3599, label %3668, !llvm.loop !1241

3668:                                             ; preds = %3658, %3595
  %3669 = phi i32 [ %3598, %3595 ], [ %3664, %3658 ]
  %3670 = icmp slt i32 %3669, %5
  br i1 %3670, label %3673, label %3671

3671:                                             ; preds = %3668
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

3673:                                             ; preds = %3668
  %3674 = sext i32 %3669 to i64
  %3675 = getelementptr inbounds float, ptr %3118, i64 %3674
  %3676 = load float, ptr %3675, align 4, !tbaa !162
  %3677 = fptosi float %3676 to i64
  %3678 = tail call i64 @llvm.abs.i64(i64 %3677, i1 true)
  %3679 = tail call i64 @llvm.smax.i64(i64 %3596, i64 %3678)
  store i64 %3679, ptr %3120, align 8, !tbaa !120
  %3680 = add nuw nsw i32 %3597, 1
  br i1 %3447, label %3681, label %3731

3681:                                             ; preds = %3673
  %3682 = load i32, ptr %4, align 4, !tbaa !5
  %3683 = load i32, ptr %12, align 4, !tbaa !5
  %3684 = add nsw i32 %3683, -1
  %3685 = icmp slt i32 %3682, %3684
  br i1 %3685, label %3708, label %3686

3686:                                             ; preds = %3681
  %3687 = icmp eq i32 %3682, %3684
  br i1 %3687, label %3688, label %3724

3688:                                             ; preds = %3686
  store i32 0, ptr %4, align 4, !tbaa !5
  %3689 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3689, ptr %6, align 4, !tbaa !5
  br i1 %3452, label %3731, label %3690

3690:                                             ; preds = %3688, %3718
  %3691 = phi i64 [ %3722, %3718 ], [ 1, %3688 ]
  %3692 = getelementptr inbounds i32, ptr %4, i64 %3691
  %3693 = load i32, ptr %3692, align 4, !tbaa !5
  %3694 = getelementptr inbounds i32, ptr %12, i64 %3691
  %3695 = load i32, ptr %3694, align 4, !tbaa !5
  %3696 = add nsw i32 %3695, -1
  %3697 = icmp slt i32 %3693, %3696
  br i1 %3697, label %3698, label %3716

3698:                                             ; preds = %3690
  br i1 %3685, label %3708, label %3699

3699:                                             ; preds = %3698
  %3700 = shl i64 %3691, 32
  %3701 = add i64 %3700, -4294967296
  %3702 = ashr exact i64 %3701, 32
  %3703 = getelementptr inbounds i32, ptr %7, i64 %3702
  %3704 = load i32, ptr %3703, align 4, !tbaa !5
  %3705 = getelementptr inbounds i32, ptr %6, i64 %3691
  %3706 = load i32, ptr %3705, align 4, !tbaa !5
  %3707 = add nsw i32 %3706, %3704
  store i32 %3707, ptr %3705, align 4, !tbaa !5
  br label %3726

3708:                                             ; preds = %3681, %3698
  %3709 = phi i32 [ %3693, %3698 ], [ %3682, %3681 ]
  %3710 = phi ptr [ %3692, %3698 ], [ %4, %3681 ]
  %3711 = phi i64 [ %3691, %3698 ], [ 0, %3681 ]
  %3712 = add nsw i32 %3709, 1
  store i32 %3712, ptr %3710, align 4, !tbaa !5
  %3713 = getelementptr inbounds i32, ptr %7, i64 %3711
  %3714 = load i32, ptr %3713, align 4, !tbaa !5
  %3715 = getelementptr inbounds i32, ptr %6, i64 %3711
  br label %3726

3716:                                             ; preds = %3690
  %3717 = icmp eq i32 %3693, %3696
  br i1 %3717, label %3718, label %3724

3718:                                             ; preds = %3716
  store i32 0, ptr %3692, align 4, !tbaa !5
  %3719 = getelementptr inbounds i32, ptr %8, i64 %3691
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = getelementptr inbounds i32, ptr %6, i64 %3691
  store i32 %3720, ptr %3721, align 4, !tbaa !5
  %3722 = add nuw nsw i64 %3691, 1
  %3723 = icmp eq i64 %3722, %3450
  br i1 %3723, label %3731, label %3690, !llvm.loop !1242

3724:                                             ; preds = %3686, %3716
  %3725 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

3726:                                             ; preds = %3699, %3708
  %3727 = phi ptr [ %3715, %3708 ], [ %3692, %3699 ]
  %3728 = phi i32 [ %3714, %3708 ], [ 1, %3699 ]
  %3729 = load i32, ptr %3727, align 4, !tbaa !5
  %3730 = add nsw i32 %3729, %3728
  store i32 %3730, ptr %3727, align 4, !tbaa !5
  br label %3731

3731:                                             ; preds = %3718, %3726, %3688, %3673
  %3732 = icmp eq i32 %3680, %5
  br i1 %3732, label %5594, label %3595, !llvm.loop !1243

3733:                                             ; preds = %3128
  %3734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

3735:                                             ; preds = %18
  %3736 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3737 = load ptr, ptr %3736, align 8, !tbaa !9
  %3738 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3739 = load ptr, ptr %3738, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3739, align 8, !tbaa !18
  %3740 = icmp eq i32 %13, 0
  br i1 %3740, label %3741, label %3749

3741:                                             ; preds = %3735
  %3742 = load float, ptr %3737, align 4, !tbaa !162
  %3743 = fpext float %3742 to double
  %3744 = fcmp fast olt float %3742, 0.000000e+00
  %3745 = fneg fast double %3743
  %3746 = select fast i1 %3744, double %3745, double %3743
  %3747 = fcmp fast ole double %3746, 0.000000e+00
  %3748 = select fast i1 %3747, double 0.000000e+00, double %3746
  store double %3748, ptr %3739, align 8, !tbaa !18
  br label %5594

3749:                                             ; preds = %3735
  switch i32 %1, label %4352 [
    i32 1, label %3750
    i32 0, label %4054
  ]

3750:                                             ; preds = %3749
  %3751 = getelementptr inbounds i32, ptr %3, i64 %19
  %3752 = load i32, ptr %3751, align 4, !tbaa !5
  %3753 = icmp eq i32 %3752, 0
  %3754 = icmp sgt i32 %5, 0
  br i1 %3753, label %3764, label %3755

3755:                                             ; preds = %3750
  br i1 %3754, label %3756, label %5594

3756:                                             ; preds = %3755
  %3757 = icmp sgt i32 %13, 1
  %3758 = icmp sgt i32 %13, 0
  %3759 = add i32 %13, -2
  %3760 = zext i32 %3759 to i64
  %3761 = zext i32 %13 to i64
  %3762 = add nuw i32 %5, 1
  %3763 = icmp eq i32 %13, 1
  br label %3913

3764:                                             ; preds = %3750
  br i1 %3754, label %3765, label %5594

3765:                                             ; preds = %3764
  %3766 = icmp sgt i32 %13, 1
  %3767 = icmp sgt i32 %13, 0
  %3768 = add i32 %13, -2
  %3769 = zext i32 %3768 to i64
  %3770 = zext i32 %13 to i64
  %3771 = add nuw i32 %5, 1
  %3772 = icmp eq i32 %13, 1
  br label %3773

3773:                                             ; preds = %3765, %3911
  %3774 = phi double [ 0.000000e+00, %3765 ], [ %3861, %3911 ]
  %3775 = phi i32 [ 0, %3765 ], [ %3863, %3911 ]
  %3776 = phi double [ 0.000000e+00, %3765 ], [ %3862, %3911 ]
  %3777 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3766, label %3778, label %3847

3778:                                             ; preds = %3773, %3837
  %3779 = phi i32 [ %3846, %3837 ], [ 0, %3773 ]
  %3780 = phi i64 [ %3788, %3837 ], [ %3770, %3773 ]
  %3781 = phi i64 [ %3845, %3837 ], [ %3769, %3773 ]
  %3782 = phi i32 [ %3843, %3837 ], [ %3777, %3773 ]
  %3783 = sub i32 %3768, %3779
  %3784 = tail call i32 @llvm.smin.i32(i32 %3783, i32 0)
  %3785 = sub i32 %3783, %3784
  %3786 = zext i32 %3785 to i64
  %3787 = add nuw nsw i64 %3786, 1
  %3788 = add nsw i64 %3780, -1
  %3789 = icmp ult i32 %3785, 31
  br i1 %3789, label %3825, label %3790

3790:                                             ; preds = %3778
  %3791 = and i64 %3787, 8589934560
  %3792 = sub i64 %3781, %3791
  br label %3793

3793:                                             ; preds = %3793, %3790
  %3794 = phi i64 [ 0, %3790 ], [ %3817, %3793 ]
  %3795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3813, %3793 ]
  %3796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3814, %3793 ]
  %3797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3815, %3793 ]
  %3798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3816, %3793 ]
  %3799 = sub i64 %3781, %3794
  %3800 = getelementptr inbounds i32, ptr %9, i64 %3799
  %3801 = getelementptr inbounds i32, ptr %3800, i64 -7
  %3802 = load <8 x i32>, ptr %3801, align 4, !tbaa !5
  %3803 = shufflevector <8 x i32> %3802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3804 = getelementptr inbounds i32, ptr %3800, i64 -15
  %3805 = load <8 x i32>, ptr %3804, align 4, !tbaa !5
  %3806 = shufflevector <8 x i32> %3805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3807 = getelementptr inbounds i32, ptr %3800, i64 -23
  %3808 = load <8 x i32>, ptr %3807, align 4, !tbaa !5
  %3809 = shufflevector <8 x i32> %3808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3810 = getelementptr inbounds i32, ptr %3800, i64 -31
  %3811 = load <8 x i32>, ptr %3810, align 4, !tbaa !5
  %3812 = shufflevector <8 x i32> %3811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3813 = mul <8 x i32> %3803, %3795
  %3814 = mul <8 x i32> %3806, %3796
  %3815 = mul <8 x i32> %3809, %3797
  %3816 = mul <8 x i32> %3812, %3798
  %3817 = add nuw i64 %3794, 32
  %3818 = icmp eq i64 %3817, %3791
  br i1 %3818, label %3819, label %3793, !llvm.loop !1244

3819:                                             ; preds = %3793
  %3820 = mul <8 x i32> %3814, %3813
  %3821 = mul <8 x i32> %3815, %3820
  %3822 = mul <8 x i32> %3816, %3821
  %3823 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3822)
  %3824 = icmp eq i64 %3787, %3791
  br i1 %3824, label %3837, label %3825

3825:                                             ; preds = %3778, %3819
  %3826 = phi i64 [ %3781, %3778 ], [ %3792, %3819 ]
  %3827 = phi i32 [ 1, %3778 ], [ %3823, %3819 ]
  br label %3828

3828:                                             ; preds = %3825, %3828
  %3829 = phi i64 [ %3834, %3828 ], [ %3826, %3825 ]
  %3830 = phi i32 [ %3833, %3828 ], [ %3827, %3825 ]
  %3831 = getelementptr inbounds i32, ptr %9, i64 %3829
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = mul nsw i32 %3832, %3830
  %3834 = add nsw i64 %3829, -1
  %3835 = trunc i64 %3829 to i32
  %3836 = icmp sgt i32 %3835, 0
  br i1 %3836, label %3828, label %3837, !llvm.loop !1245

3837:                                             ; preds = %3828, %3819
  %3838 = phi i32 [ %3823, %3819 ], [ %3833, %3828 ]
  %3839 = and i64 %3788, 4294967295
  %3840 = getelementptr inbounds i32, ptr %6, i64 %3839
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = mul nsw i32 %3841, %3838
  %3843 = add nsw i32 %3842, %3782
  %3844 = icmp sgt i64 %3780, 2
  %3845 = add nsw i64 %3781, -1
  %3846 = add i32 %3779, 1
  br i1 %3844, label %3778, label %3847, !llvm.loop !1246

3847:                                             ; preds = %3837, %3773
  %3848 = phi i32 [ %3777, %3773 ], [ %3843, %3837 ]
  %3849 = sext i32 %3848 to i64
  %3850 = getelementptr inbounds double, ptr %2, i64 %3849
  %3851 = load double, ptr %3850, align 8, !tbaa !18
  %3852 = getelementptr inbounds float, ptr %3737, i64 %3849
  %3853 = load float, ptr %3852, align 4, !tbaa !162
  %3854 = fpext float %3853 to double
  %3855 = fmul fast double %3851, %3854
  %3856 = fcmp fast uge double %3855, 0.000000e+00
  %3857 = fneg fast double %3855
  %3858 = tail call fast double @llvm.fabs.f64(double %3855)
  %3859 = fcmp fast oge double %3774, %3858
  %3860 = select nnan ninf i1 %3856, double %3855, double %3857
  %3861 = select i1 %3859, double %3774, double %3860
  store double %3861, ptr %3739, align 8, !tbaa !18
  %3862 = fadd fast double %3851, %3776
  %3863 = add nuw nsw i32 %3775, 1
  br i1 %3767, label %3864, label %3911

3864:                                             ; preds = %3847
  %3865 = load i32, ptr %4, align 4, !tbaa !5
  %3866 = load i32, ptr %12, align 4, !tbaa !5
  %3867 = add nsw i32 %3866, -1
  %3868 = icmp slt i32 %3865, %3867
  br i1 %3868, label %3888, label %3869

3869:                                             ; preds = %3864
  %3870 = icmp eq i32 %3865, %3867
  br i1 %3870, label %3871, label %3904

3871:                                             ; preds = %3869
  store i32 0, ptr %4, align 4, !tbaa !5
  %3872 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3872, ptr %6, align 4, !tbaa !5
  br i1 %3772, label %3911, label %3873

3873:                                             ; preds = %3871, %3898
  %3874 = phi i64 [ %3902, %3898 ], [ 1, %3871 ]
  %3875 = getelementptr inbounds i32, ptr %4, i64 %3874
  %3876 = load i32, ptr %3875, align 4, !tbaa !5
  %3877 = getelementptr inbounds i32, ptr %12, i64 %3874
  %3878 = load i32, ptr %3877, align 4, !tbaa !5
  %3879 = add nsw i32 %3878, -1
  %3880 = icmp slt i32 %3876, %3879
  br i1 %3880, label %3881, label %3896

3881:                                             ; preds = %3873
  br i1 %3868, label %3888, label %3882

3882:                                             ; preds = %3881
  %3883 = getelementptr inbounds i32, ptr %7, i64 %3874
  %3884 = load i32, ptr %3883, align 4, !tbaa !5
  %3885 = getelementptr inbounds i32, ptr %6, i64 %3874
  %3886 = load i32, ptr %3885, align 4, !tbaa !5
  %3887 = add nsw i32 %3886, %3884
  store i32 %3887, ptr %3885, align 4, !tbaa !5
  br label %3906

3888:                                             ; preds = %3864, %3881
  %3889 = phi i32 [ %3876, %3881 ], [ %3865, %3864 ]
  %3890 = phi ptr [ %3875, %3881 ], [ %4, %3864 ]
  %3891 = phi i64 [ %3874, %3881 ], [ 0, %3864 ]
  %3892 = add nsw i32 %3889, 1
  store i32 %3892, ptr %3890, align 4, !tbaa !5
  %3893 = getelementptr inbounds i32, ptr %7, i64 %3891
  %3894 = load i32, ptr %3893, align 4, !tbaa !5
  %3895 = getelementptr inbounds i32, ptr %6, i64 %3891
  br label %3906

3896:                                             ; preds = %3873
  %3897 = icmp eq i32 %3876, %3879
  br i1 %3897, label %3898, label %3904

3898:                                             ; preds = %3896
  store i32 0, ptr %3875, align 4, !tbaa !5
  %3899 = getelementptr inbounds i32, ptr %8, i64 %3874
  %3900 = load i32, ptr %3899, align 4, !tbaa !5
  %3901 = getelementptr inbounds i32, ptr %6, i64 %3874
  store i32 %3900, ptr %3901, align 4, !tbaa !5
  %3902 = add nuw nsw i64 %3874, 1
  %3903 = icmp eq i64 %3902, %3770
  br i1 %3903, label %3911, label %3873, !llvm.loop !1247

3904:                                             ; preds = %3869, %3896
  %3905 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

3906:                                             ; preds = %3882, %3888
  %3907 = phi ptr [ %3895, %3888 ], [ %3875, %3882 ]
  %3908 = phi i32 [ %3894, %3888 ], [ 1, %3882 ]
  %3909 = load i32, ptr %3907, align 4, !tbaa !5
  %3910 = add nsw i32 %3909, %3908
  store i32 %3910, ptr %3907, align 4, !tbaa !5
  br label %3911

3911:                                             ; preds = %3898, %3906, %3871, %3847
  %3912 = icmp eq i32 %3863, %5
  br i1 %3912, label %5594, label %3773, !llvm.loop !1248

3913:                                             ; preds = %3756, %4052
  %3914 = phi double [ 0.000000e+00, %3756 ], [ %4000, %4052 ]
  %3915 = phi i32 [ 0, %3756 ], [ %4001, %4052 ]
  %3916 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3757, label %3917, label %3986

3917:                                             ; preds = %3913, %3976
  %3918 = phi i32 [ %3985, %3976 ], [ 0, %3913 ]
  %3919 = phi i64 [ %3927, %3976 ], [ %3761, %3913 ]
  %3920 = phi i64 [ %3984, %3976 ], [ %3760, %3913 ]
  %3921 = phi i32 [ %3982, %3976 ], [ %3916, %3913 ]
  %3922 = sub i32 %3759, %3918
  %3923 = tail call i32 @llvm.smin.i32(i32 %3922, i32 0)
  %3924 = sub i32 %3922, %3923
  %3925 = zext i32 %3924 to i64
  %3926 = add nuw nsw i64 %3925, 1
  %3927 = add nsw i64 %3919, -1
  %3928 = icmp ult i32 %3924, 31
  br i1 %3928, label %3964, label %3929

3929:                                             ; preds = %3917
  %3930 = and i64 %3926, 8589934560
  %3931 = sub i64 %3920, %3930
  br label %3932

3932:                                             ; preds = %3932, %3929
  %3933 = phi i64 [ 0, %3929 ], [ %3956, %3932 ]
  %3934 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3929 ], [ %3952, %3932 ]
  %3935 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3929 ], [ %3953, %3932 ]
  %3936 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3929 ], [ %3954, %3932 ]
  %3937 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3929 ], [ %3955, %3932 ]
  %3938 = sub i64 %3920, %3933
  %3939 = getelementptr inbounds i32, ptr %11, i64 %3938
  %3940 = getelementptr inbounds i32, ptr %3939, i64 -7
  %3941 = load <8 x i32>, ptr %3940, align 4, !tbaa !5
  %3942 = shufflevector <8 x i32> %3941, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3943 = getelementptr inbounds i32, ptr %3939, i64 -15
  %3944 = load <8 x i32>, ptr %3943, align 4, !tbaa !5
  %3945 = shufflevector <8 x i32> %3944, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3946 = getelementptr inbounds i32, ptr %3939, i64 -23
  %3947 = load <8 x i32>, ptr %3946, align 4, !tbaa !5
  %3948 = shufflevector <8 x i32> %3947, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3949 = getelementptr inbounds i32, ptr %3939, i64 -31
  %3950 = load <8 x i32>, ptr %3949, align 4, !tbaa !5
  %3951 = shufflevector <8 x i32> %3950, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3952 = mul <8 x i32> %3942, %3934
  %3953 = mul <8 x i32> %3945, %3935
  %3954 = mul <8 x i32> %3948, %3936
  %3955 = mul <8 x i32> %3951, %3937
  %3956 = add nuw i64 %3933, 32
  %3957 = icmp eq i64 %3956, %3930
  br i1 %3957, label %3958, label %3932, !llvm.loop !1249

3958:                                             ; preds = %3932
  %3959 = mul <8 x i32> %3953, %3952
  %3960 = mul <8 x i32> %3954, %3959
  %3961 = mul <8 x i32> %3955, %3960
  %3962 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3961)
  %3963 = icmp eq i64 %3926, %3930
  br i1 %3963, label %3976, label %3964

3964:                                             ; preds = %3917, %3958
  %3965 = phi i64 [ %3920, %3917 ], [ %3931, %3958 ]
  %3966 = phi i32 [ 1, %3917 ], [ %3962, %3958 ]
  br label %3967

3967:                                             ; preds = %3964, %3967
  %3968 = phi i64 [ %3973, %3967 ], [ %3965, %3964 ]
  %3969 = phi i32 [ %3972, %3967 ], [ %3966, %3964 ]
  %3970 = getelementptr inbounds i32, ptr %11, i64 %3968
  %3971 = load i32, ptr %3970, align 4, !tbaa !5
  %3972 = mul nsw i32 %3971, %3969
  %3973 = add nsw i64 %3968, -1
  %3974 = trunc i64 %3968 to i32
  %3975 = icmp sgt i32 %3974, 0
  br i1 %3975, label %3967, label %3976, !llvm.loop !1250

3976:                                             ; preds = %3967, %3958
  %3977 = phi i32 [ %3962, %3958 ], [ %3972, %3967 ]
  %3978 = and i64 %3927, 4294967295
  %3979 = getelementptr inbounds i32, ptr %6, i64 %3978
  %3980 = load i32, ptr %3979, align 4, !tbaa !5
  %3981 = mul nsw i32 %3980, %3977
  %3982 = add nsw i32 %3981, %3921
  %3983 = icmp sgt i64 %3919, 2
  %3984 = add nsw i64 %3920, -1
  %3985 = add i32 %3918, 1
  br i1 %3983, label %3917, label %3986, !llvm.loop !1251

3986:                                             ; preds = %3976, %3913
  %3987 = phi i32 [ %3916, %3913 ], [ %3982, %3976 ]
  %3988 = icmp slt i32 %3987, %5
  br i1 %3988, label %3991, label %3989

3989:                                             ; preds = %3986
  %3990 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

3991:                                             ; preds = %3986
  %3992 = sext i32 %3987 to i64
  %3993 = getelementptr inbounds float, ptr %3737, i64 %3992
  %3994 = load float, ptr %3993, align 4, !tbaa !162
  %3995 = fpext float %3994 to double
  %3996 = fcmp fast uge float %3994, 0.000000e+00
  %3997 = fneg fast double %3995
  %3998 = select i1 %3996, double %3995, double %3997
  %3999 = fcmp fast oge double %3914, %3998
  %4000 = select i1 %3999, double %3914, double %3998
  store double %4000, ptr %3739, align 8, !tbaa !18
  %4001 = add nuw nsw i32 %3915, 1
  br i1 %3758, label %4002, label %4052

4002:                                             ; preds = %3991
  %4003 = load i32, ptr %4, align 4, !tbaa !5
  %4004 = load i32, ptr %12, align 4, !tbaa !5
  %4005 = add nsw i32 %4004, -1
  %4006 = icmp slt i32 %4003, %4005
  br i1 %4006, label %4029, label %4007

4007:                                             ; preds = %4002
  %4008 = icmp eq i32 %4003, %4005
  br i1 %4008, label %4009, label %4045

4009:                                             ; preds = %4007
  store i32 0, ptr %4, align 4, !tbaa !5
  %4010 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4010, ptr %6, align 4, !tbaa !5
  br i1 %3763, label %4052, label %4011

4011:                                             ; preds = %4009, %4039
  %4012 = phi i64 [ %4043, %4039 ], [ 1, %4009 ]
  %4013 = getelementptr inbounds i32, ptr %4, i64 %4012
  %4014 = load i32, ptr %4013, align 4, !tbaa !5
  %4015 = getelementptr inbounds i32, ptr %12, i64 %4012
  %4016 = load i32, ptr %4015, align 4, !tbaa !5
  %4017 = add nsw i32 %4016, -1
  %4018 = icmp slt i32 %4014, %4017
  br i1 %4018, label %4019, label %4037

4019:                                             ; preds = %4011
  br i1 %4006, label %4029, label %4020

4020:                                             ; preds = %4019
  %4021 = shl i64 %4012, 32
  %4022 = add i64 %4021, -4294967296
  %4023 = ashr exact i64 %4022, 32
  %4024 = getelementptr inbounds i32, ptr %7, i64 %4023
  %4025 = load i32, ptr %4024, align 4, !tbaa !5
  %4026 = getelementptr inbounds i32, ptr %6, i64 %4012
  %4027 = load i32, ptr %4026, align 4, !tbaa !5
  %4028 = add nsw i32 %4027, %4025
  store i32 %4028, ptr %4026, align 4, !tbaa !5
  br label %4047

4029:                                             ; preds = %4002, %4019
  %4030 = phi i32 [ %4014, %4019 ], [ %4003, %4002 ]
  %4031 = phi ptr [ %4013, %4019 ], [ %4, %4002 ]
  %4032 = phi i64 [ %4012, %4019 ], [ 0, %4002 ]
  %4033 = add nsw i32 %4030, 1
  store i32 %4033, ptr %4031, align 4, !tbaa !5
  %4034 = getelementptr inbounds i32, ptr %7, i64 %4032
  %4035 = load i32, ptr %4034, align 4, !tbaa !5
  %4036 = getelementptr inbounds i32, ptr %6, i64 %4032
  br label %4047

4037:                                             ; preds = %4011
  %4038 = icmp eq i32 %4014, %4017
  br i1 %4038, label %4039, label %4045

4039:                                             ; preds = %4037
  store i32 0, ptr %4013, align 4, !tbaa !5
  %4040 = getelementptr inbounds i32, ptr %8, i64 %4012
  %4041 = load i32, ptr %4040, align 4, !tbaa !5
  %4042 = getelementptr inbounds i32, ptr %6, i64 %4012
  store i32 %4041, ptr %4042, align 4, !tbaa !5
  %4043 = add nuw nsw i64 %4012, 1
  %4044 = icmp eq i64 %4043, %3761
  br i1 %4044, label %4052, label %4011, !llvm.loop !1252

4045:                                             ; preds = %4007, %4037
  %4046 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4047:                                             ; preds = %4020, %4029
  %4048 = phi ptr [ %4036, %4029 ], [ %4013, %4020 ]
  %4049 = phi i32 [ %4035, %4029 ], [ 1, %4020 ]
  %4050 = load i32, ptr %4048, align 4, !tbaa !5
  %4051 = add nsw i32 %4050, %4049
  store i32 %4051, ptr %4048, align 4, !tbaa !5
  br label %4052

4052:                                             ; preds = %4039, %4047, %4009, %3991
  %4053 = icmp eq i32 %4001, %5
  br i1 %4053, label %5594, label %3913, !llvm.loop !1253

4054:                                             ; preds = %3749
  %4055 = getelementptr inbounds i32, ptr %3, i64 %19
  %4056 = load i32, ptr %4055, align 4, !tbaa !5
  %4057 = icmp eq i32 %4056, 0
  %4058 = icmp sgt i32 %5, 0
  br i1 %4057, label %4068, label %4059

4059:                                             ; preds = %4054
  br i1 %4058, label %4060, label %5594

4060:                                             ; preds = %4059
  %4061 = icmp sgt i32 %13, 1
  %4062 = icmp sgt i32 %13, 0
  %4063 = add i32 %13, -2
  %4064 = zext i32 %4063 to i64
  %4065 = zext i32 %13 to i64
  %4066 = add nuw i32 %5, 1
  %4067 = icmp eq i32 %13, 1
  br label %4212

4068:                                             ; preds = %4054
  br i1 %4058, label %4069, label %5594

4069:                                             ; preds = %4068
  %4070 = icmp sgt i32 %13, 1
  %4071 = icmp sgt i32 %13, 0
  %4072 = add i32 %13, -2
  %4073 = zext i32 %4072 to i64
  %4074 = zext i32 %13 to i64
  %4075 = add nuw i32 %5, 1
  %4076 = icmp eq i32 %13, 1
  br label %4077

4077:                                             ; preds = %4069, %4210
  %4078 = phi double [ 0.000000e+00, %4069 ], [ %4160, %4210 ]
  %4079 = phi i32 [ 0, %4069 ], [ %4162, %4210 ]
  %4080 = phi double [ 0.000000e+00, %4069 ], [ %4161, %4210 ]
  %4081 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4070, label %4082, label %4151

4082:                                             ; preds = %4077, %4141
  %4083 = phi i32 [ %4150, %4141 ], [ 0, %4077 ]
  %4084 = phi i64 [ %4092, %4141 ], [ %4074, %4077 ]
  %4085 = phi i64 [ %4149, %4141 ], [ %4073, %4077 ]
  %4086 = phi i32 [ %4147, %4141 ], [ %4081, %4077 ]
  %4087 = sub i32 %4072, %4083
  %4088 = tail call i32 @llvm.smin.i32(i32 %4087, i32 0)
  %4089 = sub i32 %4087, %4088
  %4090 = zext i32 %4089 to i64
  %4091 = add nuw nsw i64 %4090, 1
  %4092 = add nsw i64 %4084, -1
  %4093 = icmp ult i32 %4089, 31
  br i1 %4093, label %4129, label %4094

4094:                                             ; preds = %4082
  %4095 = and i64 %4091, 8589934560
  %4096 = sub i64 %4085, %4095
  br label %4097

4097:                                             ; preds = %4097, %4094
  %4098 = phi i64 [ 0, %4094 ], [ %4121, %4097 ]
  %4099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4094 ], [ %4117, %4097 ]
  %4100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4094 ], [ %4118, %4097 ]
  %4101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4094 ], [ %4119, %4097 ]
  %4102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4094 ], [ %4120, %4097 ]
  %4103 = sub i64 %4085, %4098
  %4104 = getelementptr inbounds i32, ptr %9, i64 %4103
  %4105 = getelementptr inbounds i32, ptr %4104, i64 -7
  %4106 = load <8 x i32>, ptr %4105, align 4, !tbaa !5
  %4107 = shufflevector <8 x i32> %4106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4108 = getelementptr inbounds i32, ptr %4104, i64 -15
  %4109 = load <8 x i32>, ptr %4108, align 4, !tbaa !5
  %4110 = shufflevector <8 x i32> %4109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4111 = getelementptr inbounds i32, ptr %4104, i64 -23
  %4112 = load <8 x i32>, ptr %4111, align 4, !tbaa !5
  %4113 = shufflevector <8 x i32> %4112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4114 = getelementptr inbounds i32, ptr %4104, i64 -31
  %4115 = load <8 x i32>, ptr %4114, align 4, !tbaa !5
  %4116 = shufflevector <8 x i32> %4115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4117 = mul <8 x i32> %4107, %4099
  %4118 = mul <8 x i32> %4110, %4100
  %4119 = mul <8 x i32> %4113, %4101
  %4120 = mul <8 x i32> %4116, %4102
  %4121 = add nuw i64 %4098, 32
  %4122 = icmp eq i64 %4121, %4095
  br i1 %4122, label %4123, label %4097, !llvm.loop !1254

4123:                                             ; preds = %4097
  %4124 = mul <8 x i32> %4118, %4117
  %4125 = mul <8 x i32> %4119, %4124
  %4126 = mul <8 x i32> %4120, %4125
  %4127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4126)
  %4128 = icmp eq i64 %4091, %4095
  br i1 %4128, label %4141, label %4129

4129:                                             ; preds = %4082, %4123
  %4130 = phi i64 [ %4085, %4082 ], [ %4096, %4123 ]
  %4131 = phi i32 [ 1, %4082 ], [ %4127, %4123 ]
  br label %4132

4132:                                             ; preds = %4129, %4132
  %4133 = phi i64 [ %4138, %4132 ], [ %4130, %4129 ]
  %4134 = phi i32 [ %4137, %4132 ], [ %4131, %4129 ]
  %4135 = getelementptr inbounds i32, ptr %9, i64 %4133
  %4136 = load i32, ptr %4135, align 4, !tbaa !5
  %4137 = mul nsw i32 %4136, %4134
  %4138 = add nsw i64 %4133, -1
  %4139 = trunc i64 %4133 to i32
  %4140 = icmp sgt i32 %4139, 0
  br i1 %4140, label %4132, label %4141, !llvm.loop !1255

4141:                                             ; preds = %4132, %4123
  %4142 = phi i32 [ %4127, %4123 ], [ %4137, %4132 ]
  %4143 = and i64 %4092, 4294967295
  %4144 = getelementptr inbounds i32, ptr %6, i64 %4143
  %4145 = load i32, ptr %4144, align 4, !tbaa !5
  %4146 = mul nsw i32 %4145, %4142
  %4147 = add nsw i32 %4146, %4086
  %4148 = icmp sgt i64 %4084, 2
  %4149 = add nsw i64 %4085, -1
  %4150 = add i32 %4083, 1
  br i1 %4148, label %4082, label %4151, !llvm.loop !1256

4151:                                             ; preds = %4141, %4077
  %4152 = phi i32 [ %4081, %4077 ], [ %4147, %4141 ]
  %4153 = sext i32 %4152 to i64
  %4154 = getelementptr inbounds float, ptr %3737, i64 %4153
  %4155 = load float, ptr %4154, align 4, !tbaa !162
  %4156 = fpext float %4155 to double
  %4157 = fcmp fast olt float %4155, 0.000000e+00
  %4158 = fneg fast double %4156
  %4159 = select fast i1 %4157, double %4158, double %4156
  %4160 = tail call fast double @llvm.maxnum.f64(double %4078, double %4159)
  %4161 = fadd fast double %4080, 1.000000e+00
  %4162 = add nuw nsw i32 %4079, 1
  br i1 %4071, label %4163, label %4210

4163:                                             ; preds = %4151
  %4164 = load i32, ptr %4, align 4, !tbaa !5
  %4165 = load i32, ptr %12, align 4, !tbaa !5
  %4166 = add nsw i32 %4165, -1
  %4167 = icmp slt i32 %4164, %4166
  br i1 %4167, label %4187, label %4168

4168:                                             ; preds = %4163
  %4169 = icmp eq i32 %4164, %4166
  br i1 %4169, label %4170, label %4203

4170:                                             ; preds = %4168
  store i32 0, ptr %4, align 4, !tbaa !5
  %4171 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4171, ptr %6, align 4, !tbaa !5
  br i1 %4076, label %4210, label %4172

4172:                                             ; preds = %4170, %4197
  %4173 = phi i64 [ %4201, %4197 ], [ 1, %4170 ]
  %4174 = getelementptr inbounds i32, ptr %4, i64 %4173
  %4175 = load i32, ptr %4174, align 4, !tbaa !5
  %4176 = getelementptr inbounds i32, ptr %12, i64 %4173
  %4177 = load i32, ptr %4176, align 4, !tbaa !5
  %4178 = add nsw i32 %4177, -1
  %4179 = icmp slt i32 %4175, %4178
  br i1 %4179, label %4180, label %4195

4180:                                             ; preds = %4172
  br i1 %4167, label %4187, label %4181

4181:                                             ; preds = %4180
  %4182 = getelementptr inbounds i32, ptr %7, i64 %4173
  %4183 = load i32, ptr %4182, align 4, !tbaa !5
  %4184 = getelementptr inbounds i32, ptr %6, i64 %4173
  %4185 = load i32, ptr %4184, align 4, !tbaa !5
  %4186 = add nsw i32 %4185, %4183
  store i32 %4186, ptr %4184, align 4, !tbaa !5
  br label %4205

4187:                                             ; preds = %4163, %4180
  %4188 = phi i32 [ %4175, %4180 ], [ %4164, %4163 ]
  %4189 = phi ptr [ %4174, %4180 ], [ %4, %4163 ]
  %4190 = phi i64 [ %4173, %4180 ], [ 0, %4163 ]
  %4191 = add nsw i32 %4188, 1
  store i32 %4191, ptr %4189, align 4, !tbaa !5
  %4192 = getelementptr inbounds i32, ptr %7, i64 %4190
  %4193 = load i32, ptr %4192, align 4, !tbaa !5
  %4194 = getelementptr inbounds i32, ptr %6, i64 %4190
  br label %4205

4195:                                             ; preds = %4172
  %4196 = icmp eq i32 %4175, %4178
  br i1 %4196, label %4197, label %4203

4197:                                             ; preds = %4195
  store i32 0, ptr %4174, align 4, !tbaa !5
  %4198 = getelementptr inbounds i32, ptr %8, i64 %4173
  %4199 = load i32, ptr %4198, align 4, !tbaa !5
  %4200 = getelementptr inbounds i32, ptr %6, i64 %4173
  store i32 %4199, ptr %4200, align 4, !tbaa !5
  %4201 = add nuw nsw i64 %4173, 1
  %4202 = icmp eq i64 %4201, %4074
  br i1 %4202, label %4210, label %4172, !llvm.loop !1257

4203:                                             ; preds = %4168, %4195
  store double %4160, ptr %3739, align 8, !tbaa !18
  %4204 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4205:                                             ; preds = %4181, %4187
  %4206 = phi ptr [ %4194, %4187 ], [ %4174, %4181 ]
  %4207 = phi i32 [ %4193, %4187 ], [ 1, %4181 ]
  %4208 = load i32, ptr %4206, align 4, !tbaa !5
  %4209 = add nsw i32 %4208, %4207
  store i32 %4209, ptr %4206, align 4, !tbaa !5
  br label %4210

4210:                                             ; preds = %4197, %4205, %4170, %4151
  %4211 = icmp eq i32 %4162, %5
  br i1 %4211, label %5592, label %4077, !llvm.loop !1258

4212:                                             ; preds = %4060, %4350
  %4213 = phi double [ 0.000000e+00, %4060 ], [ %4298, %4350 ]
  %4214 = phi i32 [ 0, %4060 ], [ %4299, %4350 ]
  %4215 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4061, label %4216, label %4285

4216:                                             ; preds = %4212, %4275
  %4217 = phi i32 [ %4284, %4275 ], [ 0, %4212 ]
  %4218 = phi i64 [ %4226, %4275 ], [ %4065, %4212 ]
  %4219 = phi i64 [ %4283, %4275 ], [ %4064, %4212 ]
  %4220 = phi i32 [ %4281, %4275 ], [ %4215, %4212 ]
  %4221 = sub i32 %4063, %4217
  %4222 = tail call i32 @llvm.smin.i32(i32 %4221, i32 0)
  %4223 = sub i32 %4221, %4222
  %4224 = zext i32 %4223 to i64
  %4225 = add nuw nsw i64 %4224, 1
  %4226 = add nsw i64 %4218, -1
  %4227 = icmp ult i32 %4223, 31
  br i1 %4227, label %4263, label %4228

4228:                                             ; preds = %4216
  %4229 = and i64 %4225, 8589934560
  %4230 = sub i64 %4219, %4229
  br label %4231

4231:                                             ; preds = %4231, %4228
  %4232 = phi i64 [ 0, %4228 ], [ %4255, %4231 ]
  %4233 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4228 ], [ %4251, %4231 ]
  %4234 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4228 ], [ %4252, %4231 ]
  %4235 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4228 ], [ %4253, %4231 ]
  %4236 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4228 ], [ %4254, %4231 ]
  %4237 = sub i64 %4219, %4232
  %4238 = getelementptr inbounds i32, ptr %11, i64 %4237
  %4239 = getelementptr inbounds i32, ptr %4238, i64 -7
  %4240 = load <8 x i32>, ptr %4239, align 4, !tbaa !5
  %4241 = shufflevector <8 x i32> %4240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4242 = getelementptr inbounds i32, ptr %4238, i64 -15
  %4243 = load <8 x i32>, ptr %4242, align 4, !tbaa !5
  %4244 = shufflevector <8 x i32> %4243, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4245 = getelementptr inbounds i32, ptr %4238, i64 -23
  %4246 = load <8 x i32>, ptr %4245, align 4, !tbaa !5
  %4247 = shufflevector <8 x i32> %4246, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4248 = getelementptr inbounds i32, ptr %4238, i64 -31
  %4249 = load <8 x i32>, ptr %4248, align 4, !tbaa !5
  %4250 = shufflevector <8 x i32> %4249, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4251 = mul <8 x i32> %4241, %4233
  %4252 = mul <8 x i32> %4244, %4234
  %4253 = mul <8 x i32> %4247, %4235
  %4254 = mul <8 x i32> %4250, %4236
  %4255 = add nuw i64 %4232, 32
  %4256 = icmp eq i64 %4255, %4229
  br i1 %4256, label %4257, label %4231, !llvm.loop !1259

4257:                                             ; preds = %4231
  %4258 = mul <8 x i32> %4252, %4251
  %4259 = mul <8 x i32> %4253, %4258
  %4260 = mul <8 x i32> %4254, %4259
  %4261 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4260)
  %4262 = icmp eq i64 %4225, %4229
  br i1 %4262, label %4275, label %4263

4263:                                             ; preds = %4216, %4257
  %4264 = phi i64 [ %4219, %4216 ], [ %4230, %4257 ]
  %4265 = phi i32 [ 1, %4216 ], [ %4261, %4257 ]
  br label %4266

4266:                                             ; preds = %4263, %4266
  %4267 = phi i64 [ %4272, %4266 ], [ %4264, %4263 ]
  %4268 = phi i32 [ %4271, %4266 ], [ %4265, %4263 ]
  %4269 = getelementptr inbounds i32, ptr %11, i64 %4267
  %4270 = load i32, ptr %4269, align 4, !tbaa !5
  %4271 = mul nsw i32 %4270, %4268
  %4272 = add nsw i64 %4267, -1
  %4273 = trunc i64 %4267 to i32
  %4274 = icmp sgt i32 %4273, 0
  br i1 %4274, label %4266, label %4275, !llvm.loop !1260

4275:                                             ; preds = %4266, %4257
  %4276 = phi i32 [ %4261, %4257 ], [ %4271, %4266 ]
  %4277 = and i64 %4226, 4294967295
  %4278 = getelementptr inbounds i32, ptr %6, i64 %4277
  %4279 = load i32, ptr %4278, align 4, !tbaa !5
  %4280 = mul nsw i32 %4279, %4276
  %4281 = add nsw i32 %4280, %4220
  %4282 = icmp sgt i64 %4218, 2
  %4283 = add nsw i64 %4219, -1
  %4284 = add i32 %4217, 1
  br i1 %4282, label %4216, label %4285, !llvm.loop !1261

4285:                                             ; preds = %4275, %4212
  %4286 = phi i32 [ %4215, %4212 ], [ %4281, %4275 ]
  %4287 = icmp slt i32 %4286, %5
  br i1 %4287, label %4290, label %4288

4288:                                             ; preds = %4285
  %4289 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

4290:                                             ; preds = %4285
  %4291 = sext i32 %4286 to i64
  %4292 = getelementptr inbounds float, ptr %3737, i64 %4291
  %4293 = load float, ptr %4292, align 4, !tbaa !162
  %4294 = fpext float %4293 to double
  %4295 = fcmp fast olt float %4293, 0.000000e+00
  %4296 = fneg fast double %4294
  %4297 = select fast i1 %4295, double %4296, double %4294
  %4298 = tail call fast double @llvm.maxnum.f64(double %4213, double %4297)
  store double %4298, ptr %3739, align 8, !tbaa !18
  %4299 = add nuw nsw i32 %4214, 1
  br i1 %4062, label %4300, label %4350

4300:                                             ; preds = %4290
  %4301 = load i32, ptr %4, align 4, !tbaa !5
  %4302 = load i32, ptr %12, align 4, !tbaa !5
  %4303 = add nsw i32 %4302, -1
  %4304 = icmp slt i32 %4301, %4303
  br i1 %4304, label %4327, label %4305

4305:                                             ; preds = %4300
  %4306 = icmp eq i32 %4301, %4303
  br i1 %4306, label %4307, label %4343

4307:                                             ; preds = %4305
  store i32 0, ptr %4, align 4, !tbaa !5
  %4308 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4308, ptr %6, align 4, !tbaa !5
  br i1 %4067, label %4350, label %4309

4309:                                             ; preds = %4307, %4337
  %4310 = phi i64 [ %4341, %4337 ], [ 1, %4307 ]
  %4311 = getelementptr inbounds i32, ptr %4, i64 %4310
  %4312 = load i32, ptr %4311, align 4, !tbaa !5
  %4313 = getelementptr inbounds i32, ptr %12, i64 %4310
  %4314 = load i32, ptr %4313, align 4, !tbaa !5
  %4315 = add nsw i32 %4314, -1
  %4316 = icmp slt i32 %4312, %4315
  br i1 %4316, label %4317, label %4335

4317:                                             ; preds = %4309
  br i1 %4304, label %4327, label %4318

4318:                                             ; preds = %4317
  %4319 = shl i64 %4310, 32
  %4320 = add i64 %4319, -4294967296
  %4321 = ashr exact i64 %4320, 32
  %4322 = getelementptr inbounds i32, ptr %7, i64 %4321
  %4323 = load i32, ptr %4322, align 4, !tbaa !5
  %4324 = getelementptr inbounds i32, ptr %6, i64 %4310
  %4325 = load i32, ptr %4324, align 4, !tbaa !5
  %4326 = add nsw i32 %4325, %4323
  store i32 %4326, ptr %4324, align 4, !tbaa !5
  br label %4345

4327:                                             ; preds = %4300, %4317
  %4328 = phi i32 [ %4312, %4317 ], [ %4301, %4300 ]
  %4329 = phi ptr [ %4311, %4317 ], [ %4, %4300 ]
  %4330 = phi i64 [ %4310, %4317 ], [ 0, %4300 ]
  %4331 = add nsw i32 %4328, 1
  store i32 %4331, ptr %4329, align 4, !tbaa !5
  %4332 = getelementptr inbounds i32, ptr %7, i64 %4330
  %4333 = load i32, ptr %4332, align 4, !tbaa !5
  %4334 = getelementptr inbounds i32, ptr %6, i64 %4330
  br label %4345

4335:                                             ; preds = %4309
  %4336 = icmp eq i32 %4312, %4315
  br i1 %4336, label %4337, label %4343

4337:                                             ; preds = %4335
  store i32 0, ptr %4311, align 4, !tbaa !5
  %4338 = getelementptr inbounds i32, ptr %8, i64 %4310
  %4339 = load i32, ptr %4338, align 4, !tbaa !5
  %4340 = getelementptr inbounds i32, ptr %6, i64 %4310
  store i32 %4339, ptr %4340, align 4, !tbaa !5
  %4341 = add nuw nsw i64 %4310, 1
  %4342 = icmp eq i64 %4341, %4065
  br i1 %4342, label %4350, label %4309, !llvm.loop !1262

4343:                                             ; preds = %4305, %4335
  %4344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4345:                                             ; preds = %4318, %4327
  %4346 = phi ptr [ %4334, %4327 ], [ %4311, %4318 ]
  %4347 = phi i32 [ %4333, %4327 ], [ 1, %4318 ]
  %4348 = load i32, ptr %4346, align 4, !tbaa !5
  %4349 = add nsw i32 %4348, %4347
  store i32 %4349, ptr %4346, align 4, !tbaa !5
  br label %4350

4350:                                             ; preds = %4337, %4345, %4307, %4290
  %4351 = icmp eq i32 %4299, %5
  br i1 %4351, label %5594, label %4212, !llvm.loop !1263

4352:                                             ; preds = %3749
  %4353 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2272, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

4354:                                             ; preds = %18
  %4355 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4356 = load ptr, ptr %4355, align 8, !tbaa !9
  %4357 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4358 = load ptr, ptr %4357, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4358, align 4, !tbaa !162
  %4359 = icmp eq i32 %13, 0
  br i1 %4359, label %4360, label %4365

4360:                                             ; preds = %4354
  %4361 = load float, ptr %4356, align 4, !tbaa !162
  %4362 = fcmp fast oeq float %4361, 0.000000e+00
  %4363 = tail call fast float @llvm.fabs.f32(float %4361)
  %4364 = select fast i1 %4362, float 0.000000e+00, float %4363
  store float %4364, ptr %4358, align 4, !tbaa !162
  br label %5594

4365:                                             ; preds = %4354
  switch i32 %1, label %4967 [
    i32 1, label %4366
    i32 0, label %4675
  ]

4366:                                             ; preds = %4365
  %4367 = getelementptr inbounds i32, ptr %3, i64 %19
  %4368 = load i32, ptr %4367, align 4, !tbaa !5
  %4369 = icmp eq i32 %4368, 0
  %4370 = icmp sgt i32 %5, 0
  br i1 %4369, label %4380, label %4371

4371:                                             ; preds = %4366
  br i1 %4370, label %4372, label %5594

4372:                                             ; preds = %4371
  %4373 = icmp sgt i32 %13, 1
  %4374 = icmp sgt i32 %13, 0
  %4375 = add i32 %13, -2
  %4376 = zext i32 %4375 to i64
  %4377 = zext i32 %13 to i64
  %4378 = add nuw i32 %5, 1
  %4379 = icmp eq i32 %13, 1
  br label %4531

4380:                                             ; preds = %4366
  br i1 %4370, label %4381, label %5594

4381:                                             ; preds = %4380
  %4382 = icmp sgt i32 %13, 1
  %4383 = icmp sgt i32 %13, 0
  %4384 = add i32 %13, -2
  %4385 = zext i32 %4384 to i64
  %4386 = zext i32 %13 to i64
  %4387 = add nuw i32 %5, 1
  %4388 = icmp eq i32 %13, 1
  br label %4389

4389:                                             ; preds = %4381, %4529
  %4390 = phi float [ 0.000000e+00, %4381 ], [ %4479, %4529 ]
  %4391 = phi i32 [ 0, %4381 ], [ %4481, %4529 ]
  %4392 = phi double [ 0.000000e+00, %4381 ], [ %4480, %4529 ]
  %4393 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4382, label %4394, label %4463

4394:                                             ; preds = %4389, %4453
  %4395 = phi i32 [ %4462, %4453 ], [ 0, %4389 ]
  %4396 = phi i64 [ %4404, %4453 ], [ %4386, %4389 ]
  %4397 = phi i64 [ %4461, %4453 ], [ %4385, %4389 ]
  %4398 = phi i32 [ %4459, %4453 ], [ %4393, %4389 ]
  %4399 = sub i32 %4384, %4395
  %4400 = tail call i32 @llvm.smin.i32(i32 %4399, i32 0)
  %4401 = sub i32 %4399, %4400
  %4402 = zext i32 %4401 to i64
  %4403 = add nuw nsw i64 %4402, 1
  %4404 = add nsw i64 %4396, -1
  %4405 = icmp ult i32 %4401, 31
  br i1 %4405, label %4441, label %4406

4406:                                             ; preds = %4394
  %4407 = and i64 %4403, 8589934560
  %4408 = sub i64 %4397, %4407
  br label %4409

4409:                                             ; preds = %4409, %4406
  %4410 = phi i64 [ 0, %4406 ], [ %4433, %4409 ]
  %4411 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4406 ], [ %4429, %4409 ]
  %4412 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4406 ], [ %4430, %4409 ]
  %4413 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4406 ], [ %4431, %4409 ]
  %4414 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4406 ], [ %4432, %4409 ]
  %4415 = sub i64 %4397, %4410
  %4416 = getelementptr inbounds i32, ptr %9, i64 %4415
  %4417 = getelementptr inbounds i32, ptr %4416, i64 -7
  %4418 = load <8 x i32>, ptr %4417, align 4, !tbaa !5
  %4419 = shufflevector <8 x i32> %4418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4420 = getelementptr inbounds i32, ptr %4416, i64 -15
  %4421 = load <8 x i32>, ptr %4420, align 4, !tbaa !5
  %4422 = shufflevector <8 x i32> %4421, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4423 = getelementptr inbounds i32, ptr %4416, i64 -23
  %4424 = load <8 x i32>, ptr %4423, align 4, !tbaa !5
  %4425 = shufflevector <8 x i32> %4424, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4426 = getelementptr inbounds i32, ptr %4416, i64 -31
  %4427 = load <8 x i32>, ptr %4426, align 4, !tbaa !5
  %4428 = shufflevector <8 x i32> %4427, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4429 = mul <8 x i32> %4419, %4411
  %4430 = mul <8 x i32> %4422, %4412
  %4431 = mul <8 x i32> %4425, %4413
  %4432 = mul <8 x i32> %4428, %4414
  %4433 = add nuw i64 %4410, 32
  %4434 = icmp eq i64 %4433, %4407
  br i1 %4434, label %4435, label %4409, !llvm.loop !1264

4435:                                             ; preds = %4409
  %4436 = mul <8 x i32> %4430, %4429
  %4437 = mul <8 x i32> %4431, %4436
  %4438 = mul <8 x i32> %4432, %4437
  %4439 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4438)
  %4440 = icmp eq i64 %4403, %4407
  br i1 %4440, label %4453, label %4441

4441:                                             ; preds = %4394, %4435
  %4442 = phi i64 [ %4397, %4394 ], [ %4408, %4435 ]
  %4443 = phi i32 [ 1, %4394 ], [ %4439, %4435 ]
  br label %4444

4444:                                             ; preds = %4441, %4444
  %4445 = phi i64 [ %4450, %4444 ], [ %4442, %4441 ]
  %4446 = phi i32 [ %4449, %4444 ], [ %4443, %4441 ]
  %4447 = getelementptr inbounds i32, ptr %9, i64 %4445
  %4448 = load i32, ptr %4447, align 4, !tbaa !5
  %4449 = mul nsw i32 %4448, %4446
  %4450 = add nsw i64 %4445, -1
  %4451 = trunc i64 %4445 to i32
  %4452 = icmp sgt i32 %4451, 0
  br i1 %4452, label %4444, label %4453, !llvm.loop !1265

4453:                                             ; preds = %4444, %4435
  %4454 = phi i32 [ %4439, %4435 ], [ %4449, %4444 ]
  %4455 = and i64 %4404, 4294967295
  %4456 = getelementptr inbounds i32, ptr %6, i64 %4455
  %4457 = load i32, ptr %4456, align 4, !tbaa !5
  %4458 = mul nsw i32 %4457, %4454
  %4459 = add nsw i32 %4458, %4398
  %4460 = icmp sgt i64 %4396, 2
  %4461 = add nsw i64 %4397, -1
  %4462 = add i32 %4395, 1
  br i1 %4460, label %4394, label %4463, !llvm.loop !1266

4463:                                             ; preds = %4453, %4389
  %4464 = phi i32 [ %4393, %4389 ], [ %4459, %4453 ]
  %4465 = sext i32 %4464 to i64
  %4466 = getelementptr inbounds double, ptr %2, i64 %4465
  %4467 = load double, ptr %4466, align 8, !tbaa !18
  %4468 = getelementptr inbounds float, ptr %4356, i64 %4465
  %4469 = load float, ptr %4468, align 4, !tbaa !162
  %4470 = fpext float %4390 to double
  %4471 = fpext float %4469 to double
  %4472 = fmul fast double %4467, %4471
  %4473 = fcmp fast uge double %4472, 0.000000e+00
  %4474 = fneg fast double %4472
  %4475 = tail call fast double @llvm.fabs.f64(double %4472)
  %4476 = fcmp fast ole double %4475, %4470
  %4477 = select nnan ninf i1 %4473, double %4472, double %4474
  %4478 = fptrunc double %4477 to float
  %4479 = select i1 %4476, float %4390, float %4478
  store float %4479, ptr %4358, align 4, !tbaa !162
  %4480 = fadd fast double %4467, %4392
  %4481 = add nuw nsw i32 %4391, 1
  br i1 %4383, label %4482, label %4529

4482:                                             ; preds = %4463
  %4483 = load i32, ptr %4, align 4, !tbaa !5
  %4484 = load i32, ptr %12, align 4, !tbaa !5
  %4485 = add nsw i32 %4484, -1
  %4486 = icmp slt i32 %4483, %4485
  br i1 %4486, label %4506, label %4487

4487:                                             ; preds = %4482
  %4488 = icmp eq i32 %4483, %4485
  br i1 %4488, label %4489, label %4522

4489:                                             ; preds = %4487
  store i32 0, ptr %4, align 4, !tbaa !5
  %4490 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4490, ptr %6, align 4, !tbaa !5
  br i1 %4388, label %4529, label %4491

4491:                                             ; preds = %4489, %4516
  %4492 = phi i64 [ %4520, %4516 ], [ 1, %4489 ]
  %4493 = getelementptr inbounds i32, ptr %4, i64 %4492
  %4494 = load i32, ptr %4493, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %12, i64 %4492
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = add nsw i32 %4496, -1
  %4498 = icmp slt i32 %4494, %4497
  br i1 %4498, label %4499, label %4514

4499:                                             ; preds = %4491
  br i1 %4486, label %4506, label %4500

4500:                                             ; preds = %4499
  %4501 = getelementptr inbounds i32, ptr %7, i64 %4492
  %4502 = load i32, ptr %4501, align 4, !tbaa !5
  %4503 = getelementptr inbounds i32, ptr %6, i64 %4492
  %4504 = load i32, ptr %4503, align 4, !tbaa !5
  %4505 = add nsw i32 %4504, %4502
  store i32 %4505, ptr %4503, align 4, !tbaa !5
  br label %4524

4506:                                             ; preds = %4482, %4499
  %4507 = phi i32 [ %4494, %4499 ], [ %4483, %4482 ]
  %4508 = phi ptr [ %4493, %4499 ], [ %4, %4482 ]
  %4509 = phi i64 [ %4492, %4499 ], [ 0, %4482 ]
  %4510 = add nsw i32 %4507, 1
  store i32 %4510, ptr %4508, align 4, !tbaa !5
  %4511 = getelementptr inbounds i32, ptr %7, i64 %4509
  %4512 = load i32, ptr %4511, align 4, !tbaa !5
  %4513 = getelementptr inbounds i32, ptr %6, i64 %4509
  br label %4524

4514:                                             ; preds = %4491
  %4515 = icmp eq i32 %4494, %4497
  br i1 %4515, label %4516, label %4522

4516:                                             ; preds = %4514
  store i32 0, ptr %4493, align 4, !tbaa !5
  %4517 = getelementptr inbounds i32, ptr %8, i64 %4492
  %4518 = load i32, ptr %4517, align 4, !tbaa !5
  %4519 = getelementptr inbounds i32, ptr %6, i64 %4492
  store i32 %4518, ptr %4519, align 4, !tbaa !5
  %4520 = add nuw nsw i64 %4492, 1
  %4521 = icmp eq i64 %4520, %4386
  br i1 %4521, label %4529, label %4491, !llvm.loop !1267

4522:                                             ; preds = %4487, %4514
  %4523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4524:                                             ; preds = %4500, %4506
  %4525 = phi ptr [ %4513, %4506 ], [ %4493, %4500 ]
  %4526 = phi i32 [ %4512, %4506 ], [ 1, %4500 ]
  %4527 = load i32, ptr %4525, align 4, !tbaa !5
  %4528 = add nsw i32 %4527, %4526
  store i32 %4528, ptr %4525, align 4, !tbaa !5
  br label %4529

4529:                                             ; preds = %4516, %4524, %4489, %4463
  %4530 = icmp eq i32 %4481, %5
  br i1 %4530, label %5594, label %4389, !llvm.loop !1268

4531:                                             ; preds = %4372, %4673
  %4532 = phi float [ 0.000000e+00, %4372 ], [ %4621, %4673 ]
  %4533 = phi i32 [ 0, %4372 ], [ %4622, %4673 ]
  %4534 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4373, label %4535, label %4604

4535:                                             ; preds = %4531, %4594
  %4536 = phi i32 [ %4603, %4594 ], [ 0, %4531 ]
  %4537 = phi i64 [ %4545, %4594 ], [ %4377, %4531 ]
  %4538 = phi i64 [ %4602, %4594 ], [ %4376, %4531 ]
  %4539 = phi i32 [ %4600, %4594 ], [ %4534, %4531 ]
  %4540 = sub i32 %4375, %4536
  %4541 = tail call i32 @llvm.smin.i32(i32 %4540, i32 0)
  %4542 = sub i32 %4540, %4541
  %4543 = zext i32 %4542 to i64
  %4544 = add nuw nsw i64 %4543, 1
  %4545 = add nsw i64 %4537, -1
  %4546 = icmp ult i32 %4542, 31
  br i1 %4546, label %4582, label %4547

4547:                                             ; preds = %4535
  %4548 = and i64 %4544, 8589934560
  %4549 = sub i64 %4538, %4548
  br label %4550

4550:                                             ; preds = %4550, %4547
  %4551 = phi i64 [ 0, %4547 ], [ %4574, %4550 ]
  %4552 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4547 ], [ %4570, %4550 ]
  %4553 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4547 ], [ %4571, %4550 ]
  %4554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4547 ], [ %4572, %4550 ]
  %4555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4547 ], [ %4573, %4550 ]
  %4556 = sub i64 %4538, %4551
  %4557 = getelementptr inbounds i32, ptr %11, i64 %4556
  %4558 = getelementptr inbounds i32, ptr %4557, i64 -7
  %4559 = load <8 x i32>, ptr %4558, align 4, !tbaa !5
  %4560 = shufflevector <8 x i32> %4559, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4561 = getelementptr inbounds i32, ptr %4557, i64 -15
  %4562 = load <8 x i32>, ptr %4561, align 4, !tbaa !5
  %4563 = shufflevector <8 x i32> %4562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4564 = getelementptr inbounds i32, ptr %4557, i64 -23
  %4565 = load <8 x i32>, ptr %4564, align 4, !tbaa !5
  %4566 = shufflevector <8 x i32> %4565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4567 = getelementptr inbounds i32, ptr %4557, i64 -31
  %4568 = load <8 x i32>, ptr %4567, align 4, !tbaa !5
  %4569 = shufflevector <8 x i32> %4568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4570 = mul <8 x i32> %4560, %4552
  %4571 = mul <8 x i32> %4563, %4553
  %4572 = mul <8 x i32> %4566, %4554
  %4573 = mul <8 x i32> %4569, %4555
  %4574 = add nuw i64 %4551, 32
  %4575 = icmp eq i64 %4574, %4548
  br i1 %4575, label %4576, label %4550, !llvm.loop !1269

4576:                                             ; preds = %4550
  %4577 = mul <8 x i32> %4571, %4570
  %4578 = mul <8 x i32> %4572, %4577
  %4579 = mul <8 x i32> %4573, %4578
  %4580 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4579)
  %4581 = icmp eq i64 %4544, %4548
  br i1 %4581, label %4594, label %4582

4582:                                             ; preds = %4535, %4576
  %4583 = phi i64 [ %4538, %4535 ], [ %4549, %4576 ]
  %4584 = phi i32 [ 1, %4535 ], [ %4580, %4576 ]
  br label %4585

4585:                                             ; preds = %4582, %4585
  %4586 = phi i64 [ %4591, %4585 ], [ %4583, %4582 ]
  %4587 = phi i32 [ %4590, %4585 ], [ %4584, %4582 ]
  %4588 = getelementptr inbounds i32, ptr %11, i64 %4586
  %4589 = load i32, ptr %4588, align 4, !tbaa !5
  %4590 = mul nsw i32 %4589, %4587
  %4591 = add nsw i64 %4586, -1
  %4592 = trunc i64 %4586 to i32
  %4593 = icmp sgt i32 %4592, 0
  br i1 %4593, label %4585, label %4594, !llvm.loop !1270

4594:                                             ; preds = %4585, %4576
  %4595 = phi i32 [ %4580, %4576 ], [ %4590, %4585 ]
  %4596 = and i64 %4545, 4294967295
  %4597 = getelementptr inbounds i32, ptr %6, i64 %4596
  %4598 = load i32, ptr %4597, align 4, !tbaa !5
  %4599 = mul nsw i32 %4598, %4595
  %4600 = add nsw i32 %4599, %4539
  %4601 = icmp sgt i64 %4537, 2
  %4602 = add nsw i64 %4538, -1
  %4603 = add i32 %4536, 1
  br i1 %4601, label %4535, label %4604, !llvm.loop !1271

4604:                                             ; preds = %4594, %4531
  %4605 = phi i32 [ %4534, %4531 ], [ %4600, %4594 ]
  %4606 = icmp slt i32 %4605, %5
  br i1 %4606, label %4609, label %4607

4607:                                             ; preds = %4604
  %4608 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

4609:                                             ; preds = %4604
  %4610 = sext i32 %4605 to i64
  %4611 = getelementptr inbounds float, ptr %4356, i64 %4610
  %4612 = load float, ptr %4611, align 4, !tbaa !162
  %4613 = fpext float %4532 to double
  %4614 = fpext float %4612 to double
  %4615 = fcmp fast uge float %4612, 0.000000e+00
  %4616 = fneg fast double %4614
  %4617 = select fast i1 %4615, double %4614, double %4616
  %4618 = fcmp fast ole double %4617, %4613
  %4619 = fptrunc double %4616 to float
  %4620 = select i1 %4615, float %4612, float %4619
  %4621 = select i1 %4618, float %4532, float %4620
  store float %4621, ptr %4358, align 4, !tbaa !162
  %4622 = add nuw nsw i32 %4533, 1
  br i1 %4374, label %4623, label %4673

4623:                                             ; preds = %4609
  %4624 = load i32, ptr %4, align 4, !tbaa !5
  %4625 = load i32, ptr %12, align 4, !tbaa !5
  %4626 = add nsw i32 %4625, -1
  %4627 = icmp slt i32 %4624, %4626
  br i1 %4627, label %4650, label %4628

4628:                                             ; preds = %4623
  %4629 = icmp eq i32 %4624, %4626
  br i1 %4629, label %4630, label %4666

4630:                                             ; preds = %4628
  store i32 0, ptr %4, align 4, !tbaa !5
  %4631 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4631, ptr %6, align 4, !tbaa !5
  br i1 %4379, label %4673, label %4632

4632:                                             ; preds = %4630, %4660
  %4633 = phi i64 [ %4664, %4660 ], [ 1, %4630 ]
  %4634 = getelementptr inbounds i32, ptr %4, i64 %4633
  %4635 = load i32, ptr %4634, align 4, !tbaa !5
  %4636 = getelementptr inbounds i32, ptr %12, i64 %4633
  %4637 = load i32, ptr %4636, align 4, !tbaa !5
  %4638 = add nsw i32 %4637, -1
  %4639 = icmp slt i32 %4635, %4638
  br i1 %4639, label %4640, label %4658

4640:                                             ; preds = %4632
  br i1 %4627, label %4650, label %4641

4641:                                             ; preds = %4640
  %4642 = shl i64 %4633, 32
  %4643 = add i64 %4642, -4294967296
  %4644 = ashr exact i64 %4643, 32
  %4645 = getelementptr inbounds i32, ptr %7, i64 %4644
  %4646 = load i32, ptr %4645, align 4, !tbaa !5
  %4647 = getelementptr inbounds i32, ptr %6, i64 %4633
  %4648 = load i32, ptr %4647, align 4, !tbaa !5
  %4649 = add nsw i32 %4648, %4646
  store i32 %4649, ptr %4647, align 4, !tbaa !5
  br label %4668

4650:                                             ; preds = %4623, %4640
  %4651 = phi i32 [ %4635, %4640 ], [ %4624, %4623 ]
  %4652 = phi ptr [ %4634, %4640 ], [ %4, %4623 ]
  %4653 = phi i64 [ %4633, %4640 ], [ 0, %4623 ]
  %4654 = add nsw i32 %4651, 1
  store i32 %4654, ptr %4652, align 4, !tbaa !5
  %4655 = getelementptr inbounds i32, ptr %7, i64 %4653
  %4656 = load i32, ptr %4655, align 4, !tbaa !5
  %4657 = getelementptr inbounds i32, ptr %6, i64 %4653
  br label %4668

4658:                                             ; preds = %4632
  %4659 = icmp eq i32 %4635, %4638
  br i1 %4659, label %4660, label %4666

4660:                                             ; preds = %4658
  store i32 0, ptr %4634, align 4, !tbaa !5
  %4661 = getelementptr inbounds i32, ptr %8, i64 %4633
  %4662 = load i32, ptr %4661, align 4, !tbaa !5
  %4663 = getelementptr inbounds i32, ptr %6, i64 %4633
  store i32 %4662, ptr %4663, align 4, !tbaa !5
  %4664 = add nuw nsw i64 %4633, 1
  %4665 = icmp eq i64 %4664, %4377
  br i1 %4665, label %4673, label %4632, !llvm.loop !1272

4666:                                             ; preds = %4628, %4658
  %4667 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4668:                                             ; preds = %4641, %4650
  %4669 = phi ptr [ %4657, %4650 ], [ %4634, %4641 ]
  %4670 = phi i32 [ %4656, %4650 ], [ 1, %4641 ]
  %4671 = load i32, ptr %4669, align 4, !tbaa !5
  %4672 = add nsw i32 %4671, %4670
  store i32 %4672, ptr %4669, align 4, !tbaa !5
  br label %4673

4673:                                             ; preds = %4660, %4668, %4630, %4609
  %4674 = icmp eq i32 %4622, %5
  br i1 %4674, label %5594, label %4531, !llvm.loop !1273

4675:                                             ; preds = %4365
  %4676 = getelementptr inbounds i32, ptr %3, i64 %19
  %4677 = load i32, ptr %4676, align 4, !tbaa !5
  %4678 = icmp eq i32 %4677, 0
  %4679 = icmp sgt i32 %5, 0
  br i1 %4678, label %4689, label %4680

4680:                                             ; preds = %4675
  br i1 %4679, label %4681, label %5594

4681:                                             ; preds = %4680
  %4682 = icmp sgt i32 %13, 1
  %4683 = icmp sgt i32 %13, 0
  %4684 = add i32 %13, -2
  %4685 = zext i32 %4684 to i64
  %4686 = zext i32 %13 to i64
  %4687 = add nuw i32 %5, 1
  %4688 = icmp eq i32 %13, 1
  br label %4830

4689:                                             ; preds = %4675
  br i1 %4679, label %4690, label %5594

4690:                                             ; preds = %4689
  %4691 = icmp sgt i32 %13, 1
  %4692 = icmp sgt i32 %13, 0
  %4693 = add i32 %13, -2
  %4694 = zext i32 %4693 to i64
  %4695 = zext i32 %13 to i64
  %4696 = add nuw i32 %5, 1
  %4697 = icmp eq i32 %13, 1
  br label %4698

4698:                                             ; preds = %4690, %4828
  %4699 = phi float [ 0.000000e+00, %4690 ], [ %4778, %4828 ]
  %4700 = phi i32 [ 0, %4690 ], [ %4780, %4828 ]
  %4701 = phi double [ 0.000000e+00, %4690 ], [ %4779, %4828 ]
  %4702 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4691, label %4703, label %4772

4703:                                             ; preds = %4698, %4762
  %4704 = phi i32 [ %4771, %4762 ], [ 0, %4698 ]
  %4705 = phi i64 [ %4713, %4762 ], [ %4695, %4698 ]
  %4706 = phi i64 [ %4770, %4762 ], [ %4694, %4698 ]
  %4707 = phi i32 [ %4768, %4762 ], [ %4702, %4698 ]
  %4708 = sub i32 %4693, %4704
  %4709 = tail call i32 @llvm.smin.i32(i32 %4708, i32 0)
  %4710 = sub i32 %4708, %4709
  %4711 = zext i32 %4710 to i64
  %4712 = add nuw nsw i64 %4711, 1
  %4713 = add nsw i64 %4705, -1
  %4714 = icmp ult i32 %4710, 31
  br i1 %4714, label %4750, label %4715

4715:                                             ; preds = %4703
  %4716 = and i64 %4712, 8589934560
  %4717 = sub i64 %4706, %4716
  br label %4718

4718:                                             ; preds = %4718, %4715
  %4719 = phi i64 [ 0, %4715 ], [ %4742, %4718 ]
  %4720 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4738, %4718 ]
  %4721 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4739, %4718 ]
  %4722 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4740, %4718 ]
  %4723 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4715 ], [ %4741, %4718 ]
  %4724 = sub i64 %4706, %4719
  %4725 = getelementptr inbounds i32, ptr %9, i64 %4724
  %4726 = getelementptr inbounds i32, ptr %4725, i64 -7
  %4727 = load <8 x i32>, ptr %4726, align 4, !tbaa !5
  %4728 = shufflevector <8 x i32> %4727, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4729 = getelementptr inbounds i32, ptr %4725, i64 -15
  %4730 = load <8 x i32>, ptr %4729, align 4, !tbaa !5
  %4731 = shufflevector <8 x i32> %4730, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4732 = getelementptr inbounds i32, ptr %4725, i64 -23
  %4733 = load <8 x i32>, ptr %4732, align 4, !tbaa !5
  %4734 = shufflevector <8 x i32> %4733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4735 = getelementptr inbounds i32, ptr %4725, i64 -31
  %4736 = load <8 x i32>, ptr %4735, align 4, !tbaa !5
  %4737 = shufflevector <8 x i32> %4736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4738 = mul <8 x i32> %4728, %4720
  %4739 = mul <8 x i32> %4731, %4721
  %4740 = mul <8 x i32> %4734, %4722
  %4741 = mul <8 x i32> %4737, %4723
  %4742 = add nuw i64 %4719, 32
  %4743 = icmp eq i64 %4742, %4716
  br i1 %4743, label %4744, label %4718, !llvm.loop !1274

4744:                                             ; preds = %4718
  %4745 = mul <8 x i32> %4739, %4738
  %4746 = mul <8 x i32> %4740, %4745
  %4747 = mul <8 x i32> %4741, %4746
  %4748 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4747)
  %4749 = icmp eq i64 %4712, %4716
  br i1 %4749, label %4762, label %4750

4750:                                             ; preds = %4703, %4744
  %4751 = phi i64 [ %4706, %4703 ], [ %4717, %4744 ]
  %4752 = phi i32 [ 1, %4703 ], [ %4748, %4744 ]
  br label %4753

4753:                                             ; preds = %4750, %4753
  %4754 = phi i64 [ %4759, %4753 ], [ %4751, %4750 ]
  %4755 = phi i32 [ %4758, %4753 ], [ %4752, %4750 ]
  %4756 = getelementptr inbounds i32, ptr %9, i64 %4754
  %4757 = load i32, ptr %4756, align 4, !tbaa !5
  %4758 = mul nsw i32 %4757, %4755
  %4759 = add nsw i64 %4754, -1
  %4760 = trunc i64 %4754 to i32
  %4761 = icmp sgt i32 %4760, 0
  br i1 %4761, label %4753, label %4762, !llvm.loop !1275

4762:                                             ; preds = %4753, %4744
  %4763 = phi i32 [ %4748, %4744 ], [ %4758, %4753 ]
  %4764 = and i64 %4713, 4294967295
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4764
  %4766 = load i32, ptr %4765, align 4, !tbaa !5
  %4767 = mul nsw i32 %4766, %4763
  %4768 = add nsw i32 %4767, %4707
  %4769 = icmp sgt i64 %4705, 2
  %4770 = add nsw i64 %4706, -1
  %4771 = add i32 %4704, 1
  br i1 %4769, label %4703, label %4772, !llvm.loop !1276

4772:                                             ; preds = %4762, %4698
  %4773 = phi i32 [ %4702, %4698 ], [ %4768, %4762 ]
  %4774 = sext i32 %4773 to i64
  %4775 = getelementptr inbounds float, ptr %4356, i64 %4774
  %4776 = load float, ptr %4775, align 4, !tbaa !162
  %4777 = tail call fast float @llvm.fabs.f32(float %4776)
  %4778 = tail call fast float @llvm.maxnum.f32(float %4699, float %4777)
  store float %4778, ptr %4358, align 4, !tbaa !162
  %4779 = fadd fast double %4701, 1.000000e+00
  %4780 = add nuw nsw i32 %4700, 1
  br i1 %4692, label %4781, label %4828

4781:                                             ; preds = %4772
  %4782 = load i32, ptr %4, align 4, !tbaa !5
  %4783 = load i32, ptr %12, align 4, !tbaa !5
  %4784 = add nsw i32 %4783, -1
  %4785 = icmp slt i32 %4782, %4784
  br i1 %4785, label %4805, label %4786

4786:                                             ; preds = %4781
  %4787 = icmp eq i32 %4782, %4784
  br i1 %4787, label %4788, label %4821

4788:                                             ; preds = %4786
  store i32 0, ptr %4, align 4, !tbaa !5
  %4789 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4789, ptr %6, align 4, !tbaa !5
  br i1 %4697, label %4828, label %4790

4790:                                             ; preds = %4788, %4815
  %4791 = phi i64 [ %4819, %4815 ], [ 1, %4788 ]
  %4792 = getelementptr inbounds i32, ptr %4, i64 %4791
  %4793 = load i32, ptr %4792, align 4, !tbaa !5
  %4794 = getelementptr inbounds i32, ptr %12, i64 %4791
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = add nsw i32 %4795, -1
  %4797 = icmp slt i32 %4793, %4796
  br i1 %4797, label %4798, label %4813

4798:                                             ; preds = %4790
  br i1 %4785, label %4805, label %4799

4799:                                             ; preds = %4798
  %4800 = getelementptr inbounds i32, ptr %7, i64 %4791
  %4801 = load i32, ptr %4800, align 4, !tbaa !5
  %4802 = getelementptr inbounds i32, ptr %6, i64 %4791
  %4803 = load i32, ptr %4802, align 4, !tbaa !5
  %4804 = add nsw i32 %4803, %4801
  store i32 %4804, ptr %4802, align 4, !tbaa !5
  br label %4823

4805:                                             ; preds = %4781, %4798
  %4806 = phi i32 [ %4793, %4798 ], [ %4782, %4781 ]
  %4807 = phi ptr [ %4792, %4798 ], [ %4, %4781 ]
  %4808 = phi i64 [ %4791, %4798 ], [ 0, %4781 ]
  %4809 = add nsw i32 %4806, 1
  store i32 %4809, ptr %4807, align 4, !tbaa !5
  %4810 = getelementptr inbounds i32, ptr %7, i64 %4808
  %4811 = load i32, ptr %4810, align 4, !tbaa !5
  %4812 = getelementptr inbounds i32, ptr %6, i64 %4808
  br label %4823

4813:                                             ; preds = %4790
  %4814 = icmp eq i32 %4793, %4796
  br i1 %4814, label %4815, label %4821

4815:                                             ; preds = %4813
  store i32 0, ptr %4792, align 4, !tbaa !5
  %4816 = getelementptr inbounds i32, ptr %8, i64 %4791
  %4817 = load i32, ptr %4816, align 4, !tbaa !5
  %4818 = getelementptr inbounds i32, ptr %6, i64 %4791
  store i32 %4817, ptr %4818, align 4, !tbaa !5
  %4819 = add nuw nsw i64 %4791, 1
  %4820 = icmp eq i64 %4819, %4695
  br i1 %4820, label %4828, label %4790, !llvm.loop !1277

4821:                                             ; preds = %4786, %4813
  %4822 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4823:                                             ; preds = %4799, %4805
  %4824 = phi ptr [ %4812, %4805 ], [ %4792, %4799 ]
  %4825 = phi i32 [ %4811, %4805 ], [ 1, %4799 ]
  %4826 = load i32, ptr %4824, align 4, !tbaa !5
  %4827 = add nsw i32 %4826, %4825
  store i32 %4827, ptr %4824, align 4, !tbaa !5
  br label %4828

4828:                                             ; preds = %4815, %4823, %4788, %4772
  %4829 = icmp eq i32 %4780, %5
  br i1 %4829, label %5594, label %4698, !llvm.loop !1278

4830:                                             ; preds = %4681, %4965
  %4831 = phi float [ 0.000000e+00, %4681 ], [ %4913, %4965 ]
  %4832 = phi i32 [ 0, %4681 ], [ %4914, %4965 ]
  %4833 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4682, label %4834, label %4903

4834:                                             ; preds = %4830, %4893
  %4835 = phi i32 [ %4902, %4893 ], [ 0, %4830 ]
  %4836 = phi i64 [ %4844, %4893 ], [ %4686, %4830 ]
  %4837 = phi i64 [ %4901, %4893 ], [ %4685, %4830 ]
  %4838 = phi i32 [ %4899, %4893 ], [ %4833, %4830 ]
  %4839 = sub i32 %4684, %4835
  %4840 = tail call i32 @llvm.smin.i32(i32 %4839, i32 0)
  %4841 = sub i32 %4839, %4840
  %4842 = zext i32 %4841 to i64
  %4843 = add nuw nsw i64 %4842, 1
  %4844 = add nsw i64 %4836, -1
  %4845 = icmp ult i32 %4841, 31
  br i1 %4845, label %4881, label %4846

4846:                                             ; preds = %4834
  %4847 = and i64 %4843, 8589934560
  %4848 = sub i64 %4837, %4847
  br label %4849

4849:                                             ; preds = %4849, %4846
  %4850 = phi i64 [ 0, %4846 ], [ %4873, %4849 ]
  %4851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4846 ], [ %4869, %4849 ]
  %4852 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4846 ], [ %4870, %4849 ]
  %4853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4846 ], [ %4871, %4849 ]
  %4854 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4846 ], [ %4872, %4849 ]
  %4855 = sub i64 %4837, %4850
  %4856 = getelementptr inbounds i32, ptr %11, i64 %4855
  %4857 = getelementptr inbounds i32, ptr %4856, i64 -7
  %4858 = load <8 x i32>, ptr %4857, align 4, !tbaa !5
  %4859 = shufflevector <8 x i32> %4858, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4860 = getelementptr inbounds i32, ptr %4856, i64 -15
  %4861 = load <8 x i32>, ptr %4860, align 4, !tbaa !5
  %4862 = shufflevector <8 x i32> %4861, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4863 = getelementptr inbounds i32, ptr %4856, i64 -23
  %4864 = load <8 x i32>, ptr %4863, align 4, !tbaa !5
  %4865 = shufflevector <8 x i32> %4864, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4866 = getelementptr inbounds i32, ptr %4856, i64 -31
  %4867 = load <8 x i32>, ptr %4866, align 4, !tbaa !5
  %4868 = shufflevector <8 x i32> %4867, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4869 = mul <8 x i32> %4859, %4851
  %4870 = mul <8 x i32> %4862, %4852
  %4871 = mul <8 x i32> %4865, %4853
  %4872 = mul <8 x i32> %4868, %4854
  %4873 = add nuw i64 %4850, 32
  %4874 = icmp eq i64 %4873, %4847
  br i1 %4874, label %4875, label %4849, !llvm.loop !1279

4875:                                             ; preds = %4849
  %4876 = mul <8 x i32> %4870, %4869
  %4877 = mul <8 x i32> %4871, %4876
  %4878 = mul <8 x i32> %4872, %4877
  %4879 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4878)
  %4880 = icmp eq i64 %4843, %4847
  br i1 %4880, label %4893, label %4881

4881:                                             ; preds = %4834, %4875
  %4882 = phi i64 [ %4837, %4834 ], [ %4848, %4875 ]
  %4883 = phi i32 [ 1, %4834 ], [ %4879, %4875 ]
  br label %4884

4884:                                             ; preds = %4881, %4884
  %4885 = phi i64 [ %4890, %4884 ], [ %4882, %4881 ]
  %4886 = phi i32 [ %4889, %4884 ], [ %4883, %4881 ]
  %4887 = getelementptr inbounds i32, ptr %11, i64 %4885
  %4888 = load i32, ptr %4887, align 4, !tbaa !5
  %4889 = mul nsw i32 %4888, %4886
  %4890 = add nsw i64 %4885, -1
  %4891 = trunc i64 %4885 to i32
  %4892 = icmp sgt i32 %4891, 0
  br i1 %4892, label %4884, label %4893, !llvm.loop !1280

4893:                                             ; preds = %4884, %4875
  %4894 = phi i32 [ %4879, %4875 ], [ %4889, %4884 ]
  %4895 = and i64 %4844, 4294967295
  %4896 = getelementptr inbounds i32, ptr %6, i64 %4895
  %4897 = load i32, ptr %4896, align 4, !tbaa !5
  %4898 = mul nsw i32 %4897, %4894
  %4899 = add nsw i32 %4898, %4838
  %4900 = icmp sgt i64 %4836, 2
  %4901 = add nsw i64 %4837, -1
  %4902 = add i32 %4835, 1
  br i1 %4900, label %4834, label %4903, !llvm.loop !1281

4903:                                             ; preds = %4893, %4830
  %4904 = phi i32 [ %4833, %4830 ], [ %4899, %4893 ]
  %4905 = icmp slt i32 %4904, %5
  br i1 %4905, label %4908, label %4906

4906:                                             ; preds = %4903
  %4907 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

4908:                                             ; preds = %4903
  %4909 = sext i32 %4904 to i64
  %4910 = getelementptr inbounds float, ptr %4356, i64 %4909
  %4911 = load float, ptr %4910, align 4, !tbaa !162
  %4912 = tail call fast float @llvm.fabs.f32(float %4911)
  %4913 = tail call fast float @llvm.maxnum.f32(float %4831, float %4912)
  store float %4913, ptr %4358, align 4, !tbaa !162
  %4914 = add nuw nsw i32 %4832, 1
  br i1 %4683, label %4915, label %4965

4915:                                             ; preds = %4908
  %4916 = load i32, ptr %4, align 4, !tbaa !5
  %4917 = load i32, ptr %12, align 4, !tbaa !5
  %4918 = add nsw i32 %4917, -1
  %4919 = icmp slt i32 %4916, %4918
  br i1 %4919, label %4942, label %4920

4920:                                             ; preds = %4915
  %4921 = icmp eq i32 %4916, %4918
  br i1 %4921, label %4922, label %4958

4922:                                             ; preds = %4920
  store i32 0, ptr %4, align 4, !tbaa !5
  %4923 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4923, ptr %6, align 4, !tbaa !5
  br i1 %4688, label %4965, label %4924

4924:                                             ; preds = %4922, %4952
  %4925 = phi i64 [ %4956, %4952 ], [ 1, %4922 ]
  %4926 = getelementptr inbounds i32, ptr %4, i64 %4925
  %4927 = load i32, ptr %4926, align 4, !tbaa !5
  %4928 = getelementptr inbounds i32, ptr %12, i64 %4925
  %4929 = load i32, ptr %4928, align 4, !tbaa !5
  %4930 = add nsw i32 %4929, -1
  %4931 = icmp slt i32 %4927, %4930
  br i1 %4931, label %4932, label %4950

4932:                                             ; preds = %4924
  br i1 %4919, label %4942, label %4933

4933:                                             ; preds = %4932
  %4934 = shl i64 %4925, 32
  %4935 = add i64 %4934, -4294967296
  %4936 = ashr exact i64 %4935, 32
  %4937 = getelementptr inbounds i32, ptr %7, i64 %4936
  %4938 = load i32, ptr %4937, align 4, !tbaa !5
  %4939 = getelementptr inbounds i32, ptr %6, i64 %4925
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = add nsw i32 %4940, %4938
  store i32 %4941, ptr %4939, align 4, !tbaa !5
  br label %4960

4942:                                             ; preds = %4915, %4932
  %4943 = phi i32 [ %4927, %4932 ], [ %4916, %4915 ]
  %4944 = phi ptr [ %4926, %4932 ], [ %4, %4915 ]
  %4945 = phi i64 [ %4925, %4932 ], [ 0, %4915 ]
  %4946 = add nsw i32 %4943, 1
  store i32 %4946, ptr %4944, align 4, !tbaa !5
  %4947 = getelementptr inbounds i32, ptr %7, i64 %4945
  %4948 = load i32, ptr %4947, align 4, !tbaa !5
  %4949 = getelementptr inbounds i32, ptr %6, i64 %4945
  br label %4960

4950:                                             ; preds = %4924
  %4951 = icmp eq i32 %4927, %4930
  br i1 %4951, label %4952, label %4958

4952:                                             ; preds = %4950
  store i32 0, ptr %4926, align 4, !tbaa !5
  %4953 = getelementptr inbounds i32, ptr %8, i64 %4925
  %4954 = load i32, ptr %4953, align 4, !tbaa !5
  %4955 = getelementptr inbounds i32, ptr %6, i64 %4925
  store i32 %4954, ptr %4955, align 4, !tbaa !5
  %4956 = add nuw nsw i64 %4925, 1
  %4957 = icmp eq i64 %4956, %4686
  br i1 %4957, label %4965, label %4924, !llvm.loop !1282

4958:                                             ; preds = %4920, %4950
  %4959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

4960:                                             ; preds = %4933, %4942
  %4961 = phi ptr [ %4949, %4942 ], [ %4926, %4933 ]
  %4962 = phi i32 [ %4948, %4942 ], [ 1, %4933 ]
  %4963 = load i32, ptr %4961, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, %4962
  store i32 %4964, ptr %4961, align 4, !tbaa !5
  br label %4965

4965:                                             ; preds = %4952, %4960, %4922, %4908
  %4966 = icmp eq i32 %4914, %5
  br i1 %4966, label %5594, label %4830, !llvm.loop !1283

4967:                                             ; preds = %4365
  %4968 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2276, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

4969:                                             ; preds = %18
  %4970 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4971 = load ptr, ptr %4970, align 8, !tbaa !9
  %4972 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4973 = load ptr, ptr %4972, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4973, align 8, !tbaa !18
  %4974 = icmp eq i32 %13, 0
  br i1 %4974, label %4975, label %4983

4975:                                             ; preds = %4969
  %4976 = load float, ptr %4971, align 4, !tbaa !162
  %4977 = fpext float %4976 to double
  %4978 = fcmp fast olt float %4976, 0.000000e+00
  %4979 = fneg fast double %4977
  %4980 = select fast i1 %4978, double %4979, double %4977
  %4981 = fcmp fast ole double %4980, 0.000000e+00
  %4982 = select fast i1 %4981, double 0.000000e+00, double %4980
  store double %4982, ptr %4973, align 8, !tbaa !18
  br label %5594

4983:                                             ; preds = %4969
  switch i32 %1, label %5586 [
    i32 1, label %4984
    i32 0, label %5288
  ]

4984:                                             ; preds = %4983
  %4985 = getelementptr inbounds i32, ptr %3, i64 %19
  %4986 = load i32, ptr %4985, align 4, !tbaa !5
  %4987 = icmp eq i32 %4986, 0
  %4988 = icmp sgt i32 %5, 0
  br i1 %4987, label %4998, label %4989

4989:                                             ; preds = %4984
  br i1 %4988, label %4990, label %5594

4990:                                             ; preds = %4989
  %4991 = icmp sgt i32 %13, 1
  %4992 = icmp sgt i32 %13, 0
  %4993 = add i32 %13, -2
  %4994 = zext i32 %4993 to i64
  %4995 = zext i32 %13 to i64
  %4996 = add nuw i32 %5, 1
  %4997 = icmp eq i32 %13, 1
  br label %5147

4998:                                             ; preds = %4984
  br i1 %4988, label %4999, label %5594

4999:                                             ; preds = %4998
  %5000 = icmp sgt i32 %13, 1
  %5001 = icmp sgt i32 %13, 0
  %5002 = add i32 %13, -2
  %5003 = zext i32 %5002 to i64
  %5004 = zext i32 %13 to i64
  %5005 = add nuw i32 %5, 1
  %5006 = icmp eq i32 %13, 1
  br label %5007

5007:                                             ; preds = %4999, %5145
  %5008 = phi double [ 0.000000e+00, %4999 ], [ %5095, %5145 ]
  %5009 = phi i32 [ 0, %4999 ], [ %5097, %5145 ]
  %5010 = phi double [ 0.000000e+00, %4999 ], [ %5096, %5145 ]
  %5011 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5000, label %5012, label %5081

5012:                                             ; preds = %5007, %5071
  %5013 = phi i32 [ %5080, %5071 ], [ 0, %5007 ]
  %5014 = phi i64 [ %5022, %5071 ], [ %5004, %5007 ]
  %5015 = phi i64 [ %5079, %5071 ], [ %5003, %5007 ]
  %5016 = phi i32 [ %5077, %5071 ], [ %5011, %5007 ]
  %5017 = sub i32 %5002, %5013
  %5018 = tail call i32 @llvm.smin.i32(i32 %5017, i32 0)
  %5019 = sub i32 %5017, %5018
  %5020 = zext i32 %5019 to i64
  %5021 = add nuw nsw i64 %5020, 1
  %5022 = add nsw i64 %5014, -1
  %5023 = icmp ult i32 %5019, 31
  br i1 %5023, label %5059, label %5024

5024:                                             ; preds = %5012
  %5025 = and i64 %5021, 8589934560
  %5026 = sub i64 %5015, %5025
  br label %5027

5027:                                             ; preds = %5027, %5024
  %5028 = phi i64 [ 0, %5024 ], [ %5051, %5027 ]
  %5029 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5024 ], [ %5047, %5027 ]
  %5030 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5024 ], [ %5048, %5027 ]
  %5031 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5024 ], [ %5049, %5027 ]
  %5032 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5024 ], [ %5050, %5027 ]
  %5033 = sub i64 %5015, %5028
  %5034 = getelementptr inbounds i32, ptr %9, i64 %5033
  %5035 = getelementptr inbounds i32, ptr %5034, i64 -7
  %5036 = load <8 x i32>, ptr %5035, align 4, !tbaa !5
  %5037 = shufflevector <8 x i32> %5036, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5038 = getelementptr inbounds i32, ptr %5034, i64 -15
  %5039 = load <8 x i32>, ptr %5038, align 4, !tbaa !5
  %5040 = shufflevector <8 x i32> %5039, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5041 = getelementptr inbounds i32, ptr %5034, i64 -23
  %5042 = load <8 x i32>, ptr %5041, align 4, !tbaa !5
  %5043 = shufflevector <8 x i32> %5042, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5044 = getelementptr inbounds i32, ptr %5034, i64 -31
  %5045 = load <8 x i32>, ptr %5044, align 4, !tbaa !5
  %5046 = shufflevector <8 x i32> %5045, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5047 = mul <8 x i32> %5037, %5029
  %5048 = mul <8 x i32> %5040, %5030
  %5049 = mul <8 x i32> %5043, %5031
  %5050 = mul <8 x i32> %5046, %5032
  %5051 = add nuw i64 %5028, 32
  %5052 = icmp eq i64 %5051, %5025
  br i1 %5052, label %5053, label %5027, !llvm.loop !1284

5053:                                             ; preds = %5027
  %5054 = mul <8 x i32> %5048, %5047
  %5055 = mul <8 x i32> %5049, %5054
  %5056 = mul <8 x i32> %5050, %5055
  %5057 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5056)
  %5058 = icmp eq i64 %5021, %5025
  br i1 %5058, label %5071, label %5059

5059:                                             ; preds = %5012, %5053
  %5060 = phi i64 [ %5015, %5012 ], [ %5026, %5053 ]
  %5061 = phi i32 [ 1, %5012 ], [ %5057, %5053 ]
  br label %5062

5062:                                             ; preds = %5059, %5062
  %5063 = phi i64 [ %5068, %5062 ], [ %5060, %5059 ]
  %5064 = phi i32 [ %5067, %5062 ], [ %5061, %5059 ]
  %5065 = getelementptr inbounds i32, ptr %9, i64 %5063
  %5066 = load i32, ptr %5065, align 4, !tbaa !5
  %5067 = mul nsw i32 %5066, %5064
  %5068 = add nsw i64 %5063, -1
  %5069 = trunc i64 %5063 to i32
  %5070 = icmp sgt i32 %5069, 0
  br i1 %5070, label %5062, label %5071, !llvm.loop !1285

5071:                                             ; preds = %5062, %5053
  %5072 = phi i32 [ %5057, %5053 ], [ %5067, %5062 ]
  %5073 = and i64 %5022, 4294967295
  %5074 = getelementptr inbounds i32, ptr %6, i64 %5073
  %5075 = load i32, ptr %5074, align 4, !tbaa !5
  %5076 = mul nsw i32 %5075, %5072
  %5077 = add nsw i32 %5076, %5016
  %5078 = icmp sgt i64 %5014, 2
  %5079 = add nsw i64 %5015, -1
  %5080 = add i32 %5013, 1
  br i1 %5078, label %5012, label %5081, !llvm.loop !1286

5081:                                             ; preds = %5071, %5007
  %5082 = phi i32 [ %5011, %5007 ], [ %5077, %5071 ]
  %5083 = sext i32 %5082 to i64
  %5084 = getelementptr inbounds double, ptr %2, i64 %5083
  %5085 = load double, ptr %5084, align 8, !tbaa !18
  %5086 = getelementptr inbounds float, ptr %4971, i64 %5083
  %5087 = load float, ptr %5086, align 4, !tbaa !162
  %5088 = fpext float %5087 to double
  %5089 = fmul fast double %5085, %5088
  %5090 = fcmp fast uge double %5089, 0.000000e+00
  %5091 = fneg fast double %5089
  %5092 = tail call fast double @llvm.fabs.f64(double %5089)
  %5093 = fcmp fast oge double %5008, %5092
  %5094 = select nnan ninf i1 %5090, double %5089, double %5091
  %5095 = select i1 %5093, double %5008, double %5094
  store double %5095, ptr %4973, align 8, !tbaa !18
  %5096 = fadd fast double %5085, %5010
  %5097 = add nuw nsw i32 %5009, 1
  br i1 %5001, label %5098, label %5145

5098:                                             ; preds = %5081
  %5099 = load i32, ptr %4, align 4, !tbaa !5
  %5100 = load i32, ptr %12, align 4, !tbaa !5
  %5101 = add nsw i32 %5100, -1
  %5102 = icmp slt i32 %5099, %5101
  br i1 %5102, label %5122, label %5103

5103:                                             ; preds = %5098
  %5104 = icmp eq i32 %5099, %5101
  br i1 %5104, label %5105, label %5138

5105:                                             ; preds = %5103
  store i32 0, ptr %4, align 4, !tbaa !5
  %5106 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5106, ptr %6, align 4, !tbaa !5
  br i1 %5006, label %5145, label %5107

5107:                                             ; preds = %5105, %5132
  %5108 = phi i64 [ %5136, %5132 ], [ 1, %5105 ]
  %5109 = getelementptr inbounds i32, ptr %4, i64 %5108
  %5110 = load i32, ptr %5109, align 4, !tbaa !5
  %5111 = getelementptr inbounds i32, ptr %12, i64 %5108
  %5112 = load i32, ptr %5111, align 4, !tbaa !5
  %5113 = add nsw i32 %5112, -1
  %5114 = icmp slt i32 %5110, %5113
  br i1 %5114, label %5115, label %5130

5115:                                             ; preds = %5107
  br i1 %5102, label %5122, label %5116

5116:                                             ; preds = %5115
  %5117 = getelementptr inbounds i32, ptr %7, i64 %5108
  %5118 = load i32, ptr %5117, align 4, !tbaa !5
  %5119 = getelementptr inbounds i32, ptr %6, i64 %5108
  %5120 = load i32, ptr %5119, align 4, !tbaa !5
  %5121 = add nsw i32 %5120, %5118
  store i32 %5121, ptr %5119, align 4, !tbaa !5
  br label %5140

5122:                                             ; preds = %5098, %5115
  %5123 = phi i32 [ %5110, %5115 ], [ %5099, %5098 ]
  %5124 = phi ptr [ %5109, %5115 ], [ %4, %5098 ]
  %5125 = phi i64 [ %5108, %5115 ], [ 0, %5098 ]
  %5126 = add nsw i32 %5123, 1
  store i32 %5126, ptr %5124, align 4, !tbaa !5
  %5127 = getelementptr inbounds i32, ptr %7, i64 %5125
  %5128 = load i32, ptr %5127, align 4, !tbaa !5
  %5129 = getelementptr inbounds i32, ptr %6, i64 %5125
  br label %5140

5130:                                             ; preds = %5107
  %5131 = icmp eq i32 %5110, %5113
  br i1 %5131, label %5132, label %5138

5132:                                             ; preds = %5130
  store i32 0, ptr %5109, align 4, !tbaa !5
  %5133 = getelementptr inbounds i32, ptr %8, i64 %5108
  %5134 = load i32, ptr %5133, align 4, !tbaa !5
  %5135 = getelementptr inbounds i32, ptr %6, i64 %5108
  store i32 %5134, ptr %5135, align 4, !tbaa !5
  %5136 = add nuw nsw i64 %5108, 1
  %5137 = icmp eq i64 %5136, %5004
  br i1 %5137, label %5145, label %5107, !llvm.loop !1287

5138:                                             ; preds = %5103, %5130
  %5139 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

5140:                                             ; preds = %5116, %5122
  %5141 = phi ptr [ %5129, %5122 ], [ %5109, %5116 ]
  %5142 = phi i32 [ %5128, %5122 ], [ 1, %5116 ]
  %5143 = load i32, ptr %5141, align 4, !tbaa !5
  %5144 = add nsw i32 %5143, %5142
  store i32 %5144, ptr %5141, align 4, !tbaa !5
  br label %5145

5145:                                             ; preds = %5132, %5140, %5105, %5081
  %5146 = icmp eq i32 %5097, %5
  br i1 %5146, label %5594, label %5007, !llvm.loop !1288

5147:                                             ; preds = %4990, %5286
  %5148 = phi double [ 0.000000e+00, %4990 ], [ %5234, %5286 ]
  %5149 = phi i32 [ 0, %4990 ], [ %5235, %5286 ]
  %5150 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4991, label %5151, label %5220

5151:                                             ; preds = %5147, %5210
  %5152 = phi i32 [ %5219, %5210 ], [ 0, %5147 ]
  %5153 = phi i64 [ %5161, %5210 ], [ %4995, %5147 ]
  %5154 = phi i64 [ %5218, %5210 ], [ %4994, %5147 ]
  %5155 = phi i32 [ %5216, %5210 ], [ %5150, %5147 ]
  %5156 = sub i32 %4993, %5152
  %5157 = tail call i32 @llvm.smin.i32(i32 %5156, i32 0)
  %5158 = sub i32 %5156, %5157
  %5159 = zext i32 %5158 to i64
  %5160 = add nuw nsw i64 %5159, 1
  %5161 = add nsw i64 %5153, -1
  %5162 = icmp ult i32 %5158, 31
  br i1 %5162, label %5198, label %5163

5163:                                             ; preds = %5151
  %5164 = and i64 %5160, 8589934560
  %5165 = sub i64 %5154, %5164
  br label %5166

5166:                                             ; preds = %5166, %5163
  %5167 = phi i64 [ 0, %5163 ], [ %5190, %5166 ]
  %5168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5163 ], [ %5186, %5166 ]
  %5169 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5163 ], [ %5187, %5166 ]
  %5170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5163 ], [ %5188, %5166 ]
  %5171 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5163 ], [ %5189, %5166 ]
  %5172 = sub i64 %5154, %5167
  %5173 = getelementptr inbounds i32, ptr %11, i64 %5172
  %5174 = getelementptr inbounds i32, ptr %5173, i64 -7
  %5175 = load <8 x i32>, ptr %5174, align 4, !tbaa !5
  %5176 = shufflevector <8 x i32> %5175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5177 = getelementptr inbounds i32, ptr %5173, i64 -15
  %5178 = load <8 x i32>, ptr %5177, align 4, !tbaa !5
  %5179 = shufflevector <8 x i32> %5178, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5180 = getelementptr inbounds i32, ptr %5173, i64 -23
  %5181 = load <8 x i32>, ptr %5180, align 4, !tbaa !5
  %5182 = shufflevector <8 x i32> %5181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5183 = getelementptr inbounds i32, ptr %5173, i64 -31
  %5184 = load <8 x i32>, ptr %5183, align 4, !tbaa !5
  %5185 = shufflevector <8 x i32> %5184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5186 = mul <8 x i32> %5176, %5168
  %5187 = mul <8 x i32> %5179, %5169
  %5188 = mul <8 x i32> %5182, %5170
  %5189 = mul <8 x i32> %5185, %5171
  %5190 = add nuw i64 %5167, 32
  %5191 = icmp eq i64 %5190, %5164
  br i1 %5191, label %5192, label %5166, !llvm.loop !1289

5192:                                             ; preds = %5166
  %5193 = mul <8 x i32> %5187, %5186
  %5194 = mul <8 x i32> %5188, %5193
  %5195 = mul <8 x i32> %5189, %5194
  %5196 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5195)
  %5197 = icmp eq i64 %5160, %5164
  br i1 %5197, label %5210, label %5198

5198:                                             ; preds = %5151, %5192
  %5199 = phi i64 [ %5154, %5151 ], [ %5165, %5192 ]
  %5200 = phi i32 [ 1, %5151 ], [ %5196, %5192 ]
  br label %5201

5201:                                             ; preds = %5198, %5201
  %5202 = phi i64 [ %5207, %5201 ], [ %5199, %5198 ]
  %5203 = phi i32 [ %5206, %5201 ], [ %5200, %5198 ]
  %5204 = getelementptr inbounds i32, ptr %11, i64 %5202
  %5205 = load i32, ptr %5204, align 4, !tbaa !5
  %5206 = mul nsw i32 %5205, %5203
  %5207 = add nsw i64 %5202, -1
  %5208 = trunc i64 %5202 to i32
  %5209 = icmp sgt i32 %5208, 0
  br i1 %5209, label %5201, label %5210, !llvm.loop !1290

5210:                                             ; preds = %5201, %5192
  %5211 = phi i32 [ %5196, %5192 ], [ %5206, %5201 ]
  %5212 = and i64 %5161, 4294967295
  %5213 = getelementptr inbounds i32, ptr %6, i64 %5212
  %5214 = load i32, ptr %5213, align 4, !tbaa !5
  %5215 = mul nsw i32 %5214, %5211
  %5216 = add nsw i32 %5215, %5155
  %5217 = icmp sgt i64 %5153, 2
  %5218 = add nsw i64 %5154, -1
  %5219 = add i32 %5152, 1
  br i1 %5217, label %5151, label %5220, !llvm.loop !1291

5220:                                             ; preds = %5210, %5147
  %5221 = phi i32 [ %5150, %5147 ], [ %5216, %5210 ]
  %5222 = icmp slt i32 %5221, %5
  br i1 %5222, label %5225, label %5223

5223:                                             ; preds = %5220
  %5224 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

5225:                                             ; preds = %5220
  %5226 = sext i32 %5221 to i64
  %5227 = getelementptr inbounds float, ptr %4971, i64 %5226
  %5228 = load float, ptr %5227, align 4, !tbaa !162
  %5229 = fpext float %5228 to double
  %5230 = fcmp fast uge float %5228, 0.000000e+00
  %5231 = fneg fast double %5229
  %5232 = select i1 %5230, double %5229, double %5231
  %5233 = fcmp fast oge double %5148, %5232
  %5234 = select i1 %5233, double %5148, double %5232
  store double %5234, ptr %4973, align 8, !tbaa !18
  %5235 = add nuw nsw i32 %5149, 1
  br i1 %4992, label %5236, label %5286

5236:                                             ; preds = %5225
  %5237 = load i32, ptr %4, align 4, !tbaa !5
  %5238 = load i32, ptr %12, align 4, !tbaa !5
  %5239 = add nsw i32 %5238, -1
  %5240 = icmp slt i32 %5237, %5239
  br i1 %5240, label %5263, label %5241

5241:                                             ; preds = %5236
  %5242 = icmp eq i32 %5237, %5239
  br i1 %5242, label %5243, label %5279

5243:                                             ; preds = %5241
  store i32 0, ptr %4, align 4, !tbaa !5
  %5244 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5244, ptr %6, align 4, !tbaa !5
  br i1 %4997, label %5286, label %5245

5245:                                             ; preds = %5243, %5273
  %5246 = phi i64 [ %5277, %5273 ], [ 1, %5243 ]
  %5247 = getelementptr inbounds i32, ptr %4, i64 %5246
  %5248 = load i32, ptr %5247, align 4, !tbaa !5
  %5249 = getelementptr inbounds i32, ptr %12, i64 %5246
  %5250 = load i32, ptr %5249, align 4, !tbaa !5
  %5251 = add nsw i32 %5250, -1
  %5252 = icmp slt i32 %5248, %5251
  br i1 %5252, label %5253, label %5271

5253:                                             ; preds = %5245
  br i1 %5240, label %5263, label %5254

5254:                                             ; preds = %5253
  %5255 = shl i64 %5246, 32
  %5256 = add i64 %5255, -4294967296
  %5257 = ashr exact i64 %5256, 32
  %5258 = getelementptr inbounds i32, ptr %7, i64 %5257
  %5259 = load i32, ptr %5258, align 4, !tbaa !5
  %5260 = getelementptr inbounds i32, ptr %6, i64 %5246
  %5261 = load i32, ptr %5260, align 4, !tbaa !5
  %5262 = add nsw i32 %5261, %5259
  store i32 %5262, ptr %5260, align 4, !tbaa !5
  br label %5281

5263:                                             ; preds = %5236, %5253
  %5264 = phi i32 [ %5248, %5253 ], [ %5237, %5236 ]
  %5265 = phi ptr [ %5247, %5253 ], [ %4, %5236 ]
  %5266 = phi i64 [ %5246, %5253 ], [ 0, %5236 ]
  %5267 = add nsw i32 %5264, 1
  store i32 %5267, ptr %5265, align 4, !tbaa !5
  %5268 = getelementptr inbounds i32, ptr %7, i64 %5266
  %5269 = load i32, ptr %5268, align 4, !tbaa !5
  %5270 = getelementptr inbounds i32, ptr %6, i64 %5266
  br label %5281

5271:                                             ; preds = %5245
  %5272 = icmp eq i32 %5248, %5251
  br i1 %5272, label %5273, label %5279

5273:                                             ; preds = %5271
  store i32 0, ptr %5247, align 4, !tbaa !5
  %5274 = getelementptr inbounds i32, ptr %8, i64 %5246
  %5275 = load i32, ptr %5274, align 4, !tbaa !5
  %5276 = getelementptr inbounds i32, ptr %6, i64 %5246
  store i32 %5275, ptr %5276, align 4, !tbaa !5
  %5277 = add nuw nsw i64 %5246, 1
  %5278 = icmp eq i64 %5277, %4995
  br i1 %5278, label %5286, label %5245, !llvm.loop !1292

5279:                                             ; preds = %5241, %5271
  %5280 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

5281:                                             ; preds = %5254, %5263
  %5282 = phi ptr [ %5270, %5263 ], [ %5247, %5254 ]
  %5283 = phi i32 [ %5269, %5263 ], [ 1, %5254 ]
  %5284 = load i32, ptr %5282, align 4, !tbaa !5
  %5285 = add nsw i32 %5284, %5283
  store i32 %5285, ptr %5282, align 4, !tbaa !5
  br label %5286

5286:                                             ; preds = %5273, %5281, %5243, %5225
  %5287 = icmp eq i32 %5235, %5
  br i1 %5287, label %5594, label %5147, !llvm.loop !1293

5288:                                             ; preds = %4983
  %5289 = getelementptr inbounds i32, ptr %3, i64 %19
  %5290 = load i32, ptr %5289, align 4, !tbaa !5
  %5291 = icmp eq i32 %5290, 0
  %5292 = icmp sgt i32 %5, 0
  br i1 %5291, label %5302, label %5293

5293:                                             ; preds = %5288
  br i1 %5292, label %5294, label %5594

5294:                                             ; preds = %5293
  %5295 = icmp sgt i32 %13, 1
  %5296 = icmp sgt i32 %13, 0
  %5297 = add i32 %13, -2
  %5298 = zext i32 %5297 to i64
  %5299 = zext i32 %13 to i64
  %5300 = add nuw i32 %5, 1
  %5301 = icmp eq i32 %13, 1
  br label %5446

5302:                                             ; preds = %5288
  br i1 %5292, label %5303, label %5594

5303:                                             ; preds = %5302
  %5304 = icmp sgt i32 %13, 1
  %5305 = icmp sgt i32 %13, 0
  %5306 = add i32 %13, -2
  %5307 = zext i32 %5306 to i64
  %5308 = zext i32 %13 to i64
  %5309 = add nuw i32 %5, 1
  %5310 = icmp eq i32 %13, 1
  br label %5311

5311:                                             ; preds = %5303, %5444
  %5312 = phi double [ 0.000000e+00, %5303 ], [ %5394, %5444 ]
  %5313 = phi i32 [ 0, %5303 ], [ %5396, %5444 ]
  %5314 = phi double [ 0.000000e+00, %5303 ], [ %5395, %5444 ]
  %5315 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5304, label %5316, label %5385

5316:                                             ; preds = %5311, %5375
  %5317 = phi i32 [ %5384, %5375 ], [ 0, %5311 ]
  %5318 = phi i64 [ %5326, %5375 ], [ %5308, %5311 ]
  %5319 = phi i64 [ %5383, %5375 ], [ %5307, %5311 ]
  %5320 = phi i32 [ %5381, %5375 ], [ %5315, %5311 ]
  %5321 = sub i32 %5306, %5317
  %5322 = tail call i32 @llvm.smin.i32(i32 %5321, i32 0)
  %5323 = sub i32 %5321, %5322
  %5324 = zext i32 %5323 to i64
  %5325 = add nuw nsw i64 %5324, 1
  %5326 = add nsw i64 %5318, -1
  %5327 = icmp ult i32 %5323, 31
  br i1 %5327, label %5363, label %5328

5328:                                             ; preds = %5316
  %5329 = and i64 %5325, 8589934560
  %5330 = sub i64 %5319, %5329
  br label %5331

5331:                                             ; preds = %5331, %5328
  %5332 = phi i64 [ 0, %5328 ], [ %5355, %5331 ]
  %5333 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5328 ], [ %5351, %5331 ]
  %5334 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5328 ], [ %5352, %5331 ]
  %5335 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5328 ], [ %5353, %5331 ]
  %5336 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5328 ], [ %5354, %5331 ]
  %5337 = sub i64 %5319, %5332
  %5338 = getelementptr inbounds i32, ptr %9, i64 %5337
  %5339 = getelementptr inbounds i32, ptr %5338, i64 -7
  %5340 = load <8 x i32>, ptr %5339, align 4, !tbaa !5
  %5341 = shufflevector <8 x i32> %5340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5342 = getelementptr inbounds i32, ptr %5338, i64 -15
  %5343 = load <8 x i32>, ptr %5342, align 4, !tbaa !5
  %5344 = shufflevector <8 x i32> %5343, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5345 = getelementptr inbounds i32, ptr %5338, i64 -23
  %5346 = load <8 x i32>, ptr %5345, align 4, !tbaa !5
  %5347 = shufflevector <8 x i32> %5346, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5348 = getelementptr inbounds i32, ptr %5338, i64 -31
  %5349 = load <8 x i32>, ptr %5348, align 4, !tbaa !5
  %5350 = shufflevector <8 x i32> %5349, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5351 = mul <8 x i32> %5341, %5333
  %5352 = mul <8 x i32> %5344, %5334
  %5353 = mul <8 x i32> %5347, %5335
  %5354 = mul <8 x i32> %5350, %5336
  %5355 = add nuw i64 %5332, 32
  %5356 = icmp eq i64 %5355, %5329
  br i1 %5356, label %5357, label %5331, !llvm.loop !1294

5357:                                             ; preds = %5331
  %5358 = mul <8 x i32> %5352, %5351
  %5359 = mul <8 x i32> %5353, %5358
  %5360 = mul <8 x i32> %5354, %5359
  %5361 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5360)
  %5362 = icmp eq i64 %5325, %5329
  br i1 %5362, label %5375, label %5363

5363:                                             ; preds = %5316, %5357
  %5364 = phi i64 [ %5319, %5316 ], [ %5330, %5357 ]
  %5365 = phi i32 [ 1, %5316 ], [ %5361, %5357 ]
  br label %5366

5366:                                             ; preds = %5363, %5366
  %5367 = phi i64 [ %5372, %5366 ], [ %5364, %5363 ]
  %5368 = phi i32 [ %5371, %5366 ], [ %5365, %5363 ]
  %5369 = getelementptr inbounds i32, ptr %9, i64 %5367
  %5370 = load i32, ptr %5369, align 4, !tbaa !5
  %5371 = mul nsw i32 %5370, %5368
  %5372 = add nsw i64 %5367, -1
  %5373 = trunc i64 %5367 to i32
  %5374 = icmp sgt i32 %5373, 0
  br i1 %5374, label %5366, label %5375, !llvm.loop !1295

5375:                                             ; preds = %5366, %5357
  %5376 = phi i32 [ %5361, %5357 ], [ %5371, %5366 ]
  %5377 = and i64 %5326, 4294967295
  %5378 = getelementptr inbounds i32, ptr %6, i64 %5377
  %5379 = load i32, ptr %5378, align 4, !tbaa !5
  %5380 = mul nsw i32 %5379, %5376
  %5381 = add nsw i32 %5380, %5320
  %5382 = icmp sgt i64 %5318, 2
  %5383 = add nsw i64 %5319, -1
  %5384 = add i32 %5317, 1
  br i1 %5382, label %5316, label %5385, !llvm.loop !1296

5385:                                             ; preds = %5375, %5311
  %5386 = phi i32 [ %5315, %5311 ], [ %5381, %5375 ]
  %5387 = sext i32 %5386 to i64
  %5388 = getelementptr inbounds float, ptr %4971, i64 %5387
  %5389 = load float, ptr %5388, align 4, !tbaa !162
  %5390 = fpext float %5389 to double
  %5391 = fcmp fast olt float %5389, 0.000000e+00
  %5392 = fneg fast double %5390
  %5393 = select fast i1 %5391, double %5392, double %5390
  %5394 = tail call fast double @llvm.maxnum.f64(double %5312, double %5393)
  %5395 = fadd fast double %5314, 1.000000e+00
  %5396 = add nuw nsw i32 %5313, 1
  br i1 %5305, label %5397, label %5444

5397:                                             ; preds = %5385
  %5398 = load i32, ptr %4, align 4, !tbaa !5
  %5399 = load i32, ptr %12, align 4, !tbaa !5
  %5400 = add nsw i32 %5399, -1
  %5401 = icmp slt i32 %5398, %5400
  br i1 %5401, label %5421, label %5402

5402:                                             ; preds = %5397
  %5403 = icmp eq i32 %5398, %5400
  br i1 %5403, label %5404, label %5437

5404:                                             ; preds = %5402
  store i32 0, ptr %4, align 4, !tbaa !5
  %5405 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5405, ptr %6, align 4, !tbaa !5
  br i1 %5310, label %5444, label %5406

5406:                                             ; preds = %5404, %5431
  %5407 = phi i64 [ %5435, %5431 ], [ 1, %5404 ]
  %5408 = getelementptr inbounds i32, ptr %4, i64 %5407
  %5409 = load i32, ptr %5408, align 4, !tbaa !5
  %5410 = getelementptr inbounds i32, ptr %12, i64 %5407
  %5411 = load i32, ptr %5410, align 4, !tbaa !5
  %5412 = add nsw i32 %5411, -1
  %5413 = icmp slt i32 %5409, %5412
  br i1 %5413, label %5414, label %5429

5414:                                             ; preds = %5406
  br i1 %5401, label %5421, label %5415

5415:                                             ; preds = %5414
  %5416 = getelementptr inbounds i32, ptr %7, i64 %5407
  %5417 = load i32, ptr %5416, align 4, !tbaa !5
  %5418 = getelementptr inbounds i32, ptr %6, i64 %5407
  %5419 = load i32, ptr %5418, align 4, !tbaa !5
  %5420 = add nsw i32 %5419, %5417
  store i32 %5420, ptr %5418, align 4, !tbaa !5
  br label %5439

5421:                                             ; preds = %5397, %5414
  %5422 = phi i32 [ %5409, %5414 ], [ %5398, %5397 ]
  %5423 = phi ptr [ %5408, %5414 ], [ %4, %5397 ]
  %5424 = phi i64 [ %5407, %5414 ], [ 0, %5397 ]
  %5425 = add nsw i32 %5422, 1
  store i32 %5425, ptr %5423, align 4, !tbaa !5
  %5426 = getelementptr inbounds i32, ptr %7, i64 %5424
  %5427 = load i32, ptr %5426, align 4, !tbaa !5
  %5428 = getelementptr inbounds i32, ptr %6, i64 %5424
  br label %5439

5429:                                             ; preds = %5406
  %5430 = icmp eq i32 %5409, %5412
  br i1 %5430, label %5431, label %5437

5431:                                             ; preds = %5429
  store i32 0, ptr %5408, align 4, !tbaa !5
  %5432 = getelementptr inbounds i32, ptr %8, i64 %5407
  %5433 = load i32, ptr %5432, align 4, !tbaa !5
  %5434 = getelementptr inbounds i32, ptr %6, i64 %5407
  store i32 %5433, ptr %5434, align 4, !tbaa !5
  %5435 = add nuw nsw i64 %5407, 1
  %5436 = icmp eq i64 %5435, %5308
  br i1 %5436, label %5444, label %5406, !llvm.loop !1297

5437:                                             ; preds = %5402, %5429
  store double %5394, ptr %4973, align 8, !tbaa !18
  %5438 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

5439:                                             ; preds = %5415, %5421
  %5440 = phi ptr [ %5428, %5421 ], [ %5408, %5415 ]
  %5441 = phi i32 [ %5427, %5421 ], [ 1, %5415 ]
  %5442 = load i32, ptr %5440, align 4, !tbaa !5
  %5443 = add nsw i32 %5442, %5441
  store i32 %5443, ptr %5440, align 4, !tbaa !5
  br label %5444

5444:                                             ; preds = %5431, %5439, %5404, %5385
  %5445 = icmp eq i32 %5396, %5
  br i1 %5445, label %5593, label %5311, !llvm.loop !1298

5446:                                             ; preds = %5294, %5584
  %5447 = phi double [ 0.000000e+00, %5294 ], [ %5532, %5584 ]
  %5448 = phi i32 [ 0, %5294 ], [ %5533, %5584 ]
  %5449 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5295, label %5450, label %5519

5450:                                             ; preds = %5446, %5509
  %5451 = phi i32 [ %5518, %5509 ], [ 0, %5446 ]
  %5452 = phi i64 [ %5460, %5509 ], [ %5299, %5446 ]
  %5453 = phi i64 [ %5517, %5509 ], [ %5298, %5446 ]
  %5454 = phi i32 [ %5515, %5509 ], [ %5449, %5446 ]
  %5455 = sub i32 %5297, %5451
  %5456 = tail call i32 @llvm.smin.i32(i32 %5455, i32 0)
  %5457 = sub i32 %5455, %5456
  %5458 = zext i32 %5457 to i64
  %5459 = add nuw nsw i64 %5458, 1
  %5460 = add nsw i64 %5452, -1
  %5461 = icmp ult i32 %5457, 31
  br i1 %5461, label %5497, label %5462

5462:                                             ; preds = %5450
  %5463 = and i64 %5459, 8589934560
  %5464 = sub i64 %5453, %5463
  br label %5465

5465:                                             ; preds = %5465, %5462
  %5466 = phi i64 [ 0, %5462 ], [ %5489, %5465 ]
  %5467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5462 ], [ %5485, %5465 ]
  %5468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5462 ], [ %5486, %5465 ]
  %5469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5462 ], [ %5487, %5465 ]
  %5470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5462 ], [ %5488, %5465 ]
  %5471 = sub i64 %5453, %5466
  %5472 = getelementptr inbounds i32, ptr %11, i64 %5471
  %5473 = getelementptr inbounds i32, ptr %5472, i64 -7
  %5474 = load <8 x i32>, ptr %5473, align 4, !tbaa !5
  %5475 = shufflevector <8 x i32> %5474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5476 = getelementptr inbounds i32, ptr %5472, i64 -15
  %5477 = load <8 x i32>, ptr %5476, align 4, !tbaa !5
  %5478 = shufflevector <8 x i32> %5477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5479 = getelementptr inbounds i32, ptr %5472, i64 -23
  %5480 = load <8 x i32>, ptr %5479, align 4, !tbaa !5
  %5481 = shufflevector <8 x i32> %5480, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5482 = getelementptr inbounds i32, ptr %5472, i64 -31
  %5483 = load <8 x i32>, ptr %5482, align 4, !tbaa !5
  %5484 = shufflevector <8 x i32> %5483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5485 = mul <8 x i32> %5475, %5467
  %5486 = mul <8 x i32> %5478, %5468
  %5487 = mul <8 x i32> %5481, %5469
  %5488 = mul <8 x i32> %5484, %5470
  %5489 = add nuw i64 %5466, 32
  %5490 = icmp eq i64 %5489, %5463
  br i1 %5490, label %5491, label %5465, !llvm.loop !1299

5491:                                             ; preds = %5465
  %5492 = mul <8 x i32> %5486, %5485
  %5493 = mul <8 x i32> %5487, %5492
  %5494 = mul <8 x i32> %5488, %5493
  %5495 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5494)
  %5496 = icmp eq i64 %5459, %5463
  br i1 %5496, label %5509, label %5497

5497:                                             ; preds = %5450, %5491
  %5498 = phi i64 [ %5453, %5450 ], [ %5464, %5491 ]
  %5499 = phi i32 [ 1, %5450 ], [ %5495, %5491 ]
  br label %5500

5500:                                             ; preds = %5497, %5500
  %5501 = phi i64 [ %5506, %5500 ], [ %5498, %5497 ]
  %5502 = phi i32 [ %5505, %5500 ], [ %5499, %5497 ]
  %5503 = getelementptr inbounds i32, ptr %11, i64 %5501
  %5504 = load i32, ptr %5503, align 4, !tbaa !5
  %5505 = mul nsw i32 %5504, %5502
  %5506 = add nsw i64 %5501, -1
  %5507 = trunc i64 %5501 to i32
  %5508 = icmp sgt i32 %5507, 0
  br i1 %5508, label %5500, label %5509, !llvm.loop !1300

5509:                                             ; preds = %5500, %5491
  %5510 = phi i32 [ %5495, %5491 ], [ %5505, %5500 ]
  %5511 = and i64 %5460, 4294967295
  %5512 = getelementptr inbounds i32, ptr %6, i64 %5511
  %5513 = load i32, ptr %5512, align 4, !tbaa !5
  %5514 = mul nsw i32 %5513, %5510
  %5515 = add nsw i32 %5514, %5454
  %5516 = icmp sgt i64 %5452, 2
  %5517 = add nsw i64 %5453, -1
  %5518 = add i32 %5451, 1
  br i1 %5516, label %5450, label %5519, !llvm.loop !1301

5519:                                             ; preds = %5509, %5446
  %5520 = phi i32 [ %5449, %5446 ], [ %5515, %5509 ]
  %5521 = icmp slt i32 %5520, %5
  br i1 %5521, label %5524, label %5522

5522:                                             ; preds = %5519
  %5523 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5599

5524:                                             ; preds = %5519
  %5525 = sext i32 %5520 to i64
  %5526 = getelementptr inbounds float, ptr %4971, i64 %5525
  %5527 = load float, ptr %5526, align 4, !tbaa !162
  %5528 = fpext float %5527 to double
  %5529 = fcmp fast olt float %5527, 0.000000e+00
  %5530 = fneg fast double %5528
  %5531 = select fast i1 %5529, double %5530, double %5528
  %5532 = tail call fast double @llvm.maxnum.f64(double %5447, double %5531)
  store double %5532, ptr %4973, align 8, !tbaa !18
  %5533 = add nuw nsw i32 %5448, 1
  br i1 %5296, label %5534, label %5584

5534:                                             ; preds = %5524
  %5535 = load i32, ptr %4, align 4, !tbaa !5
  %5536 = load i32, ptr %12, align 4, !tbaa !5
  %5537 = add nsw i32 %5536, -1
  %5538 = icmp slt i32 %5535, %5537
  br i1 %5538, label %5561, label %5539

5539:                                             ; preds = %5534
  %5540 = icmp eq i32 %5535, %5537
  br i1 %5540, label %5541, label %5577

5541:                                             ; preds = %5539
  store i32 0, ptr %4, align 4, !tbaa !5
  %5542 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5542, ptr %6, align 4, !tbaa !5
  br i1 %5301, label %5584, label %5543

5543:                                             ; preds = %5541, %5571
  %5544 = phi i64 [ %5575, %5571 ], [ 1, %5541 ]
  %5545 = getelementptr inbounds i32, ptr %4, i64 %5544
  %5546 = load i32, ptr %5545, align 4, !tbaa !5
  %5547 = getelementptr inbounds i32, ptr %12, i64 %5544
  %5548 = load i32, ptr %5547, align 4, !tbaa !5
  %5549 = add nsw i32 %5548, -1
  %5550 = icmp slt i32 %5546, %5549
  br i1 %5550, label %5551, label %5569

5551:                                             ; preds = %5543
  br i1 %5538, label %5561, label %5552

5552:                                             ; preds = %5551
  %5553 = shl i64 %5544, 32
  %5554 = add i64 %5553, -4294967296
  %5555 = ashr exact i64 %5554, 32
  %5556 = getelementptr inbounds i32, ptr %7, i64 %5555
  %5557 = load i32, ptr %5556, align 4, !tbaa !5
  %5558 = getelementptr inbounds i32, ptr %6, i64 %5544
  %5559 = load i32, ptr %5558, align 4, !tbaa !5
  %5560 = add nsw i32 %5559, %5557
  store i32 %5560, ptr %5558, align 4, !tbaa !5
  br label %5579

5561:                                             ; preds = %5534, %5551
  %5562 = phi i32 [ %5546, %5551 ], [ %5535, %5534 ]
  %5563 = phi ptr [ %5545, %5551 ], [ %4, %5534 ]
  %5564 = phi i64 [ %5544, %5551 ], [ 0, %5534 ]
  %5565 = add nsw i32 %5562, 1
  store i32 %5565, ptr %5563, align 4, !tbaa !5
  %5566 = getelementptr inbounds i32, ptr %7, i64 %5564
  %5567 = load i32, ptr %5566, align 4, !tbaa !5
  %5568 = getelementptr inbounds i32, ptr %6, i64 %5564
  br label %5579

5569:                                             ; preds = %5543
  %5570 = icmp eq i32 %5546, %5549
  br i1 %5570, label %5571, label %5577

5571:                                             ; preds = %5569
  store i32 0, ptr %5545, align 4, !tbaa !5
  %5572 = getelementptr inbounds i32, ptr %8, i64 %5544
  %5573 = load i32, ptr %5572, align 4, !tbaa !5
  %5574 = getelementptr inbounds i32, ptr %6, i64 %5544
  store i32 %5573, ptr %5574, align 4, !tbaa !5
  %5575 = add nuw nsw i64 %5544, 1
  %5576 = icmp eq i64 %5575, %5299
  br i1 %5576, label %5584, label %5543, !llvm.loop !1302

5577:                                             ; preds = %5539, %5569
  %5578 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5599

5579:                                             ; preds = %5552, %5561
  %5580 = phi ptr [ %5568, %5561 ], [ %5545, %5552 ]
  %5581 = phi i32 [ %5567, %5561 ], [ 1, %5552 ]
  %5582 = load i32, ptr %5580, align 4, !tbaa !5
  %5583 = add nsw i32 %5582, %5581
  store i32 %5583, ptr %5580, align 4, !tbaa !5
  br label %5584

5584:                                             ; preds = %5571, %5579, %5541, %5524
  %5585 = icmp eq i32 %5533, %5
  br i1 %5585, label %5594, label %5446, !llvm.loop !1303

5586:                                             ; preds = %4983
  %5587 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2281, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5594

5588:                                             ; preds = %2049
  store i16 %1999, ptr %1878, align 2, !tbaa !78
  br label %5594

5589:                                             ; preds = %2352
  store i16 %2302, ptr %1878, align 2, !tbaa !78
  br label %5594

5590:                                             ; preds = %3293
  store i64 %3243, ptr %3120, align 8, !tbaa !120
  br label %5594

5591:                                             ; preds = %3593
  store i64 %3543, ptr %3120, align 8, !tbaa !120
  br label %5594

5592:                                             ; preds = %4210
  store double %4160, ptr %3739, align 8, !tbaa !18
  br label %5594

5593:                                             ; preds = %5444
  store double %5394, ptr %4973, align 8, !tbaa !18
  br label %5594

5594:                                             ; preds = %5584, %5286, %5145, %4965, %4828, %4673, %4529, %4350, %4052, %3911, %3731, %3437, %3112, %2974, %2818, %2674, %2493, %2193, %1870, %1729, %1570, %1426, %1247, %1109, %953, %809, %628, %491, %336, %196, %5293, %5302, %5593, %4989, %4998, %4680, %4689, %4371, %4380, %4059, %4068, %5592, %3755, %3764, %3444, %3453, %5591, %3134, %3143, %5590, %2825, %2834, %2515, %2524, %2200, %2209, %5589, %1890, %1899, %5588, %1577, %1586, %1267, %1276, %960, %969, %650, %659, %343, %352, %37, %46, %4975, %5586, %4360, %4967, %3741, %4352, %3122, %3733, %2503, %3114, %1880, %2495, %1257, %1872, %638, %1249, %28, %630, %18
  %5595 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1872 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %2495 ], [ 0.000000e+00, %1880 ], [ 0.000000e+00, %3114 ], [ 0.000000e+00, %2503 ], [ 0.000000e+00, %3733 ], [ 0.000000e+00, %3122 ], [ 0.000000e+00, %4352 ], [ 0.000000e+00, %3741 ], [ 0.000000e+00, %4967 ], [ 0.000000e+00, %4360 ], [ 0.000000e+00, %5586 ], [ 0.000000e+00, %4975 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %659 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %969 ], [ 0.000000e+00, %960 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1267 ], [ 0.000000e+00, %1586 ], [ 0.000000e+00, %1577 ], [ %2000, %5588 ], [ 0.000000e+00, %1899 ], [ 0.000000e+00, %1890 ], [ %2303, %5589 ], [ 0.000000e+00, %2209 ], [ 0.000000e+00, %2200 ], [ 0.000000e+00, %2524 ], [ 0.000000e+00, %2515 ], [ 0.000000e+00, %2834 ], [ 0.000000e+00, %2825 ], [ %3244, %5590 ], [ 0.000000e+00, %3143 ], [ 0.000000e+00, %3134 ], [ %3544, %5591 ], [ 0.000000e+00, %3453 ], [ 0.000000e+00, %3444 ], [ 0.000000e+00, %3764 ], [ 0.000000e+00, %3755 ], [ %4161, %5592 ], [ 0.000000e+00, %4068 ], [ 0.000000e+00, %4059 ], [ 0.000000e+00, %4380 ], [ 0.000000e+00, %4371 ], [ 0.000000e+00, %4689 ], [ 0.000000e+00, %4680 ], [ 0.000000e+00, %4998 ], [ 0.000000e+00, %4989 ], [ %5395, %5593 ], [ 0.000000e+00, %5302 ], [ 0.000000e+00, %5293 ], [ %147, %196 ], [ 0.000000e+00, %336 ], [ %442, %491 ], [ 0.000000e+00, %628 ], [ %760, %809 ], [ 0.000000e+00, %953 ], [ %1060, %1109 ], [ 0.000000e+00, %1247 ], [ %1377, %1426 ], [ 0.000000e+00, %1570 ], [ %1680, %1729 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %2193 ], [ 0.000000e+00, %2493 ], [ %2625, %2674 ], [ 0.000000e+00, %2818 ], [ %2925, %2974 ], [ 0.000000e+00, %3112 ], [ 0.000000e+00, %3437 ], [ 0.000000e+00, %3731 ], [ %3862, %3911 ], [ 0.000000e+00, %4052 ], [ 0.000000e+00, %4350 ], [ %4480, %4529 ], [ 0.000000e+00, %4673 ], [ %4779, %4828 ], [ 0.000000e+00, %4965 ], [ %5096, %5145 ], [ 0.000000e+00, %5286 ], [ 0.000000e+00, %5584 ]
  %5596 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1249 ], [ 1, %638 ], [ 1, %1872 ], [ 1, %1257 ], [ 1, %2495 ], [ 1, %1880 ], [ 1, %3114 ], [ 1, %2503 ], [ 1, %3733 ], [ 1, %3122 ], [ 1, %4352 ], [ 1, %3741 ], [ 1, %4967 ], [ 1, %4360 ], [ 1, %5586 ], [ 1, %4975 ], [ 1, %46 ], [ 1, %37 ], [ 1, %352 ], [ 1, %343 ], [ 1, %659 ], [ 1, %650 ], [ 1, %969 ], [ 1, %960 ], [ 1, %1276 ], [ 1, %1267 ], [ 1, %1586 ], [ 1, %1577 ], [ %1906, %5588 ], [ 1, %1899 ], [ 1, %1890 ], [ %2216, %5589 ], [ 1, %2209 ], [ 1, %2200 ], [ 1, %2524 ], [ 1, %2515 ], [ 1, %2834 ], [ 1, %2825 ], [ %3150, %5590 ], [ 1, %3143 ], [ 1, %3134 ], [ %3460, %5591 ], [ 1, %3453 ], [ 1, %3444 ], [ 1, %3764 ], [ 1, %3755 ], [ %4075, %5592 ], [ 1, %4068 ], [ 1, %4059 ], [ 1, %4380 ], [ 1, %4371 ], [ 1, %4689 ], [ 1, %4680 ], [ 1, %4998 ], [ 1, %4989 ], [ %5309, %5593 ], [ 1, %5302 ], [ 1, %5293 ], [ %53, %196 ], [ %44, %336 ], [ %359, %491 ], [ %350, %628 ], [ %666, %809 ], [ %657, %953 ], [ %976, %1109 ], [ %967, %1247 ], [ %1283, %1426 ], [ %1274, %1570 ], [ %1593, %1729 ], [ %1584, %1870 ], [ %1897, %2193 ], [ %2207, %2493 ], [ %2531, %2674 ], [ %2522, %2818 ], [ %2841, %2974 ], [ %2832, %3112 ], [ %3141, %3437 ], [ %3451, %3731 ], [ %3771, %3911 ], [ %3762, %4052 ], [ %4066, %4350 ], [ %4387, %4529 ], [ %4378, %4673 ], [ %4696, %4828 ], [ %4687, %4965 ], [ %5005, %5145 ], [ %4996, %5286 ], [ %5300, %5584 ]
  %5597 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5596, ptr noundef nonnull @.str.5) #3
  %5598 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5595, ptr noundef nonnull @.str.6) #3
  br label %5599

5599:                                             ; preds = %5138, %5223, %5279, %5437, %5522, %5577, %4522, %4607, %4666, %4821, %4906, %4958, %3904, %3989, %4045, %4203, %4288, %4343, %3286, %3371, %3430, %3586, %3671, %3724, %2667, %2751, %2811, %2967, %3051, %3105, %2042, %2127, %2186, %2345, %2430, %2486, %1419, %1503, %1563, %1722, %1806, %1863, %802, %886, %946, %1102, %1186, %1240, %189, %273, %329, %484, %568, %621, %5594
  %5600 = phi i32 [ 0, %5594 ], [ -1, %621 ], [ -1, %568 ], [ -1, %484 ], [ -1, %329 ], [ -1, %273 ], [ -1, %189 ], [ -1, %1240 ], [ -1, %1186 ], [ -1, %1102 ], [ -1, %946 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1863 ], [ -1, %1806 ], [ -1, %1722 ], [ -1, %1563 ], [ -1, %1503 ], [ -1, %1419 ], [ -1, %2486 ], [ -1, %2430 ], [ -1, %2345 ], [ -1, %2186 ], [ -1, %2127 ], [ -1, %2042 ], [ -1, %3105 ], [ -1, %3051 ], [ -1, %2967 ], [ -1, %2811 ], [ -1, %2751 ], [ -1, %2667 ], [ -1, %3724 ], [ -1, %3671 ], [ -1, %3586 ], [ -1, %3430 ], [ -1, %3371 ], [ -1, %3286 ], [ -1, %4343 ], [ -1, %4288 ], [ -1, %4203 ], [ -1, %4045 ], [ -1, %3989 ], [ -1, %3904 ], [ -1, %4958 ], [ -1, %4906 ], [ -1, %4821 ], [ -1, %4666 ], [ -1, %4607 ], [ -1, %4522 ], [ -1, %5577 ], [ -1, %5522 ], [ -1, %5437 ], [ -1, %5279 ], [ -1, %5223 ], [ -1, %5138 ]
  ret i32 %5600
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_NormInf_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5579 [
    i32 101, label %22
    i32 102, label %632
    i32 103, label %1251
    i32 104, label %1874
    i32 105, label %2497
    i32 106, label %3116
    i32 107, label %3735
    i32 108, label %4344
    i32 109, label %4964
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5579

31:                                               ; preds = %22
  switch i32 %1, label %630 [
    i32 1, label %32
    i32 0, label %338
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5579

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %198

46:                                               ; preds = %32
  br i1 %36, label %47, label %5579

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %196
  %56 = phi i32 [ 0, %47 ], [ %148, %196 ]
  %57 = phi double [ 0.000000e+00, %47 ], [ %147, %196 ]
  %58 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %59, label %128

59:                                               ; preds = %55, %118
  %60 = phi i32 [ %127, %118 ], [ 0, %55 ]
  %61 = phi i64 [ %69, %118 ], [ %52, %55 ]
  %62 = phi i64 [ %126, %118 ], [ %51, %55 ]
  %63 = phi i32 [ %124, %118 ], [ %58, %55 ]
  %64 = sub i32 %50, %60
  %65 = tail call i32 @llvm.smin.i32(i32 %64, i32 0)
  %66 = sub i32 %64, %65
  %67 = zext i32 %66 to i64
  %68 = add nuw nsw i64 %67, 1
  %69 = add nsw i64 %61, -1
  %70 = icmp ult i32 %66, 31
  br i1 %70, label %106, label %71

71:                                               ; preds = %59
  %72 = and i64 %68, 8589934560
  %73 = sub i64 %62, %72
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i64 [ 0, %71 ], [ %98, %74 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %94, %74 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %95, %74 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %96, %74 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %71 ], [ %97, %74 ]
  %80 = sub i64 %62, %75
  %81 = getelementptr inbounds i32, ptr %9, i64 %80
  %82 = getelementptr inbounds i32, ptr %81, i64 -7
  %83 = load <8 x i32>, ptr %82, align 4, !tbaa !5
  %84 = shufflevector <8 x i32> %83, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %85 = getelementptr inbounds i32, ptr %81, i64 -15
  %86 = load <8 x i32>, ptr %85, align 4, !tbaa !5
  %87 = shufflevector <8 x i32> %86, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %88 = getelementptr inbounds i32, ptr %81, i64 -23
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !5
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %81, i64 -31
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !5
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = mul <8 x i32> %84, %76
  %95 = mul <8 x i32> %87, %77
  %96 = mul <8 x i32> %90, %78
  %97 = mul <8 x i32> %93, %79
  %98 = add nuw i64 %75, 32
  %99 = icmp eq i64 %98, %72
  br i1 %99, label %100, label %74, !llvm.loop !1304

100:                                              ; preds = %74
  %101 = mul <8 x i32> %95, %94
  %102 = mul <8 x i32> %96, %101
  %103 = mul <8 x i32> %97, %102
  %104 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %103)
  %105 = icmp eq i64 %68, %72
  br i1 %105, label %118, label %106

106:                                              ; preds = %59, %100
  %107 = phi i64 [ %62, %59 ], [ %73, %100 ]
  %108 = phi i32 [ 1, %59 ], [ %104, %100 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, ptr %9, i64 %110
  %113 = load i32, ptr %112, align 4, !tbaa !5
  %114 = mul nsw i32 %113, %111
  %115 = add nsw i64 %110, -1
  %116 = trunc i64 %110 to i32
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %109, label %118, !llvm.loop !1305

118:                                              ; preds = %109, %100
  %119 = phi i32 [ %104, %100 ], [ %114, %109 ]
  %120 = and i64 %69, 4294967295
  %121 = getelementptr inbounds i32, ptr %6, i64 %120
  %122 = load i32, ptr %121, align 4, !tbaa !5
  %123 = mul nsw i32 %122, %119
  %124 = add nsw i32 %123, %63
  %125 = icmp sgt i64 %61, 2
  %126 = add nsw i64 %62, -1
  %127 = add i32 %60, 1
  br i1 %125, label %59, label %128, !llvm.loop !1306

128:                                              ; preds = %118, %55
  %129 = phi i32 [ %58, %55 ], [ %124, %118 ]
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds double, ptr %2, i64 %130
  %132 = load double, ptr %131, align 8, !tbaa !18
  %133 = getelementptr inbounds double, ptr %24, i64 %130
  %134 = load double, ptr %133, align 8, !tbaa !18
  %135 = fptoui double %134 to i8
  %136 = load i8, ptr %26, align 1, !tbaa !11
  %137 = uitofp i8 %136 to double
  %138 = uitofp i8 %135 to double
  %139 = fmul fast double %132, %138
  %140 = fcmp fast uge double %139, 0.000000e+00
  %141 = fneg fast double %139
  %142 = tail call fast double @llvm.fabs.f64(double %139)
  %143 = fcmp fast ole double %142, %137
  %144 = select nnan ninf i1 %140, double %139, double %141
  %145 = select i1 %143, double %137, double %144
  %146 = fptoui double %145 to i8
  store i8 %146, ptr %26, align 1, !tbaa !11
  %147 = fadd fast double %132, %57
  %148 = add nuw nsw i32 %56, 1
  br i1 %49, label %149, label %196

149:                                              ; preds = %128
  %150 = load i32, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %12, align 4, !tbaa !5
  %152 = add nsw i32 %151, -1
  %153 = icmp slt i32 %150, %152
  br i1 %153, label %173, label %154

154:                                              ; preds = %149
  %155 = icmp eq i32 %150, %152
  br i1 %155, label %156, label %189

156:                                              ; preds = %154
  store i32 0, ptr %4, align 4, !tbaa !5
  %157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %157, ptr %6, align 4, !tbaa !5
  br i1 %54, label %196, label %158

158:                                              ; preds = %156, %183
  %159 = phi i64 [ %187, %183 ], [ 1, %156 ]
  %160 = getelementptr inbounds i32, ptr %4, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !5
  %162 = getelementptr inbounds i32, ptr %12, i64 %159
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = add nsw i32 %163, -1
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %181

166:                                              ; preds = %158
  br i1 %153, label %173, label %167

167:                                              ; preds = %166
  %168 = getelementptr inbounds i32, ptr %7, i64 %159
  %169 = load i32, ptr %168, align 4, !tbaa !5
  %170 = getelementptr inbounds i32, ptr %6, i64 %159
  %171 = load i32, ptr %170, align 4, !tbaa !5
  %172 = add nsw i32 %171, %169
  store i32 %172, ptr %170, align 4, !tbaa !5
  br label %191

173:                                              ; preds = %149, %166
  %174 = phi i32 [ %161, %166 ], [ %150, %149 ]
  %175 = phi ptr [ %160, %166 ], [ %4, %149 ]
  %176 = phi i64 [ %159, %166 ], [ 0, %149 ]
  %177 = add nsw i32 %174, 1
  store i32 %177, ptr %175, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %7, i64 %176
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %176
  br label %191

181:                                              ; preds = %158
  %182 = icmp eq i32 %161, %164
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  store i32 0, ptr %160, align 4, !tbaa !5
  %184 = getelementptr inbounds i32, ptr %8, i64 %159
  %185 = load i32, ptr %184, align 4, !tbaa !5
  %186 = getelementptr inbounds i32, ptr %6, i64 %159
  store i32 %185, ptr %186, align 4, !tbaa !5
  %187 = add nuw nsw i64 %159, 1
  %188 = icmp eq i64 %187, %52
  br i1 %188, label %196, label %158, !llvm.loop !1307

189:                                              ; preds = %154, %181
  %190 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

191:                                              ; preds = %167, %173
  %192 = phi ptr [ %180, %173 ], [ %160, %167 ]
  %193 = phi i32 [ %179, %173 ], [ 1, %167 ]
  %194 = load i32, ptr %192, align 4, !tbaa !5
  %195 = add nsw i32 %194, %193
  store i32 %195, ptr %192, align 4, !tbaa !5
  br label %196

196:                                              ; preds = %183, %191, %156, %128
  %197 = icmp eq i32 %148, %5
  br i1 %197, label %5579, label %55, !llvm.loop !1308

198:                                              ; preds = %38, %336
  %199 = phi i32 [ 0, %38 ], [ %285, %336 ]
  %200 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %201, label %270

201:                                              ; preds = %198, %260
  %202 = phi i32 [ %269, %260 ], [ 0, %198 ]
  %203 = phi i64 [ %211, %260 ], [ %43, %198 ]
  %204 = phi i64 [ %268, %260 ], [ %42, %198 ]
  %205 = phi i32 [ %266, %260 ], [ %200, %198 ]
  %206 = sub i32 %41, %202
  %207 = tail call i32 @llvm.smin.i32(i32 %206, i32 0)
  %208 = sub i32 %206, %207
  %209 = zext i32 %208 to i64
  %210 = add nuw nsw i64 %209, 1
  %211 = add nsw i64 %203, -1
  %212 = icmp ult i32 %208, 31
  br i1 %212, label %248, label %213

213:                                              ; preds = %201
  %214 = and i64 %210, 8589934560
  %215 = sub i64 %204, %214
  br label %216

216:                                              ; preds = %216, %213
  %217 = phi i64 [ 0, %213 ], [ %240, %216 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %236, %216 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %237, %216 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %238, %216 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %213 ], [ %239, %216 ]
  %222 = sub i64 %204, %217
  %223 = getelementptr inbounds i32, ptr %11, i64 %222
  %224 = getelementptr inbounds i32, ptr %223, i64 -7
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %223, i64 -15
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %223, i64 -23
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !5
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %223, i64 -31
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !5
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = mul <8 x i32> %226, %218
  %237 = mul <8 x i32> %229, %219
  %238 = mul <8 x i32> %232, %220
  %239 = mul <8 x i32> %235, %221
  %240 = add nuw i64 %217, 32
  %241 = icmp eq i64 %240, %214
  br i1 %241, label %242, label %216, !llvm.loop !1309

242:                                              ; preds = %216
  %243 = mul <8 x i32> %237, %236
  %244 = mul <8 x i32> %238, %243
  %245 = mul <8 x i32> %239, %244
  %246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %245)
  %247 = icmp eq i64 %210, %214
  br i1 %247, label %260, label %248

248:                                              ; preds = %201, %242
  %249 = phi i64 [ %204, %201 ], [ %215, %242 ]
  %250 = phi i32 [ 1, %201 ], [ %246, %242 ]
  br label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %257, %251 ], [ %249, %248 ]
  %253 = phi i32 [ %256, %251 ], [ %250, %248 ]
  %254 = getelementptr inbounds i32, ptr %11, i64 %252
  %255 = load i32, ptr %254, align 4, !tbaa !5
  %256 = mul nsw i32 %255, %253
  %257 = add nsw i64 %252, -1
  %258 = trunc i64 %252 to i32
  %259 = icmp sgt i32 %258, 0
  br i1 %259, label %251, label %260, !llvm.loop !1310

260:                                              ; preds = %251, %242
  %261 = phi i32 [ %246, %242 ], [ %256, %251 ]
  %262 = and i64 %211, 4294967295
  %263 = getelementptr inbounds i32, ptr %6, i64 %262
  %264 = load i32, ptr %263, align 4, !tbaa !5
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %205
  %267 = icmp sgt i64 %203, 2
  %268 = add nsw i64 %204, -1
  %269 = add i32 %202, 1
  br i1 %267, label %201, label %270, !llvm.loop !1311

270:                                              ; preds = %260, %198
  %271 = phi i32 [ %200, %198 ], [ %266, %260 ]
  %272 = icmp slt i32 %271, %5
  br i1 %272, label %275, label %273

273:                                              ; preds = %270
  %274 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

275:                                              ; preds = %270
  %276 = sext i32 %271 to i64
  %277 = getelementptr inbounds double, ptr %24, i64 %276
  %278 = load double, ptr %277, align 8, !tbaa !18
  %279 = fptoui double %278 to i8
  %280 = load i8, ptr %26, align 1, !tbaa !11
  %281 = uitofp i8 %280 to double
  %282 = uitofp i8 %279 to double
  %283 = tail call fast double @llvm.maxnum.f64(double %281, double %282)
  %284 = fptoui double %283 to i8
  store i8 %284, ptr %26, align 1, !tbaa !11
  %285 = add nuw nsw i32 %199, 1
  br i1 %40, label %286, label %336

286:                                              ; preds = %275
  %287 = load i32, ptr %4, align 4, !tbaa !5
  %288 = load i32, ptr %12, align 4, !tbaa !5
  %289 = add nsw i32 %288, -1
  %290 = icmp slt i32 %287, %289
  br i1 %290, label %313, label %291

291:                                              ; preds = %286
  %292 = icmp eq i32 %287, %289
  br i1 %292, label %293, label %329

293:                                              ; preds = %291
  store i32 0, ptr %4, align 4, !tbaa !5
  %294 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %294, ptr %6, align 4, !tbaa !5
  br i1 %45, label %336, label %295

295:                                              ; preds = %293, %323
  %296 = phi i64 [ %327, %323 ], [ 1, %293 ]
  %297 = getelementptr inbounds i32, ptr %4, i64 %296
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = getelementptr inbounds i32, ptr %12, i64 %296
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = add nsw i32 %300, -1
  %302 = icmp slt i32 %298, %301
  br i1 %302, label %303, label %321

303:                                              ; preds = %295
  br i1 %290, label %313, label %304

304:                                              ; preds = %303
  %305 = shl i64 %296, 32
  %306 = add i64 %305, -4294967296
  %307 = ashr exact i64 %306, 32
  %308 = getelementptr inbounds i32, ptr %7, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %296
  %311 = load i32, ptr %310, align 4, !tbaa !5
  %312 = add nsw i32 %311, %309
  store i32 %312, ptr %310, align 4, !tbaa !5
  br label %331

313:                                              ; preds = %286, %303
  %314 = phi i32 [ %298, %303 ], [ %287, %286 ]
  %315 = phi ptr [ %297, %303 ], [ %4, %286 ]
  %316 = phi i64 [ %296, %303 ], [ 0, %286 ]
  %317 = add nsw i32 %314, 1
  store i32 %317, ptr %315, align 4, !tbaa !5
  %318 = getelementptr inbounds i32, ptr %7, i64 %316
  %319 = load i32, ptr %318, align 4, !tbaa !5
  %320 = getelementptr inbounds i32, ptr %6, i64 %316
  br label %331

321:                                              ; preds = %295
  %322 = icmp eq i32 %298, %301
  br i1 %322, label %323, label %329

323:                                              ; preds = %321
  store i32 0, ptr %297, align 4, !tbaa !5
  %324 = getelementptr inbounds i32, ptr %8, i64 %296
  %325 = load i32, ptr %324, align 4, !tbaa !5
  %326 = getelementptr inbounds i32, ptr %6, i64 %296
  store i32 %325, ptr %326, align 4, !tbaa !5
  %327 = add nuw nsw i64 %296, 1
  %328 = icmp eq i64 %327, %43
  br i1 %328, label %336, label %295, !llvm.loop !1312

329:                                              ; preds = %291, %321
  %330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

331:                                              ; preds = %304, %313
  %332 = phi ptr [ %320, %313 ], [ %297, %304 ]
  %333 = phi i32 [ %319, %313 ], [ 1, %304 ]
  %334 = load i32, ptr %332, align 4, !tbaa !5
  %335 = add nsw i32 %334, %333
  store i32 %335, ptr %332, align 4, !tbaa !5
  br label %336

336:                                              ; preds = %323, %331, %293, %275
  %337 = icmp eq i32 %285, %5
  br i1 %337, label %5579, label %198, !llvm.loop !1313

338:                                              ; preds = %31
  %339 = getelementptr inbounds i32, ptr %3, i64 %19
  %340 = load i32, ptr %339, align 4, !tbaa !5
  %341 = icmp eq i32 %340, 0
  %342 = icmp sgt i32 %5, 0
  br i1 %341, label %352, label %343

343:                                              ; preds = %338
  br i1 %342, label %344, label %5579

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %493

352:                                              ; preds = %338
  br i1 %342, label %353, label %5579

353:                                              ; preds = %352
  %354 = icmp sgt i32 %13, 1
  %355 = icmp sgt i32 %13, 0
  %356 = add i32 %13, -2
  %357 = zext i32 %356 to i64
  %358 = zext i32 %13 to i64
  %359 = add nuw i32 %5, 1
  %360 = icmp eq i32 %13, 1
  br label %361

361:                                              ; preds = %353, %491
  %362 = phi i32 [ 0, %353 ], [ %443, %491 ]
  %363 = phi double [ 0.000000e+00, %353 ], [ %442, %491 ]
  %364 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %354, label %365, label %434

365:                                              ; preds = %361, %424
  %366 = phi i32 [ %433, %424 ], [ 0, %361 ]
  %367 = phi i64 [ %375, %424 ], [ %358, %361 ]
  %368 = phi i64 [ %432, %424 ], [ %357, %361 ]
  %369 = phi i32 [ %430, %424 ], [ %364, %361 ]
  %370 = sub i32 %356, %366
  %371 = tail call i32 @llvm.smin.i32(i32 %370, i32 0)
  %372 = sub i32 %370, %371
  %373 = zext i32 %372 to i64
  %374 = add nuw nsw i64 %373, 1
  %375 = add nsw i64 %367, -1
  %376 = icmp ult i32 %372, 31
  br i1 %376, label %412, label %377

377:                                              ; preds = %365
  %378 = and i64 %374, 8589934560
  %379 = sub i64 %368, %378
  br label %380

380:                                              ; preds = %380, %377
  %381 = phi i64 [ 0, %377 ], [ %404, %380 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %400, %380 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %401, %380 ]
  %384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %402, %380 ]
  %385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %377 ], [ %403, %380 ]
  %386 = sub i64 %368, %381
  %387 = getelementptr inbounds i32, ptr %9, i64 %386
  %388 = getelementptr inbounds i32, ptr %387, i64 -7
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !5
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %387, i64 -15
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !5
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = getelementptr inbounds i32, ptr %387, i64 -23
  %395 = load <8 x i32>, ptr %394, align 4, !tbaa !5
  %396 = shufflevector <8 x i32> %395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %397 = getelementptr inbounds i32, ptr %387, i64 -31
  %398 = load <8 x i32>, ptr %397, align 4, !tbaa !5
  %399 = shufflevector <8 x i32> %398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %400 = mul <8 x i32> %390, %382
  %401 = mul <8 x i32> %393, %383
  %402 = mul <8 x i32> %396, %384
  %403 = mul <8 x i32> %399, %385
  %404 = add nuw i64 %381, 32
  %405 = icmp eq i64 %404, %378
  br i1 %405, label %406, label %380, !llvm.loop !1314

406:                                              ; preds = %380
  %407 = mul <8 x i32> %401, %400
  %408 = mul <8 x i32> %402, %407
  %409 = mul <8 x i32> %403, %408
  %410 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %409)
  %411 = icmp eq i64 %374, %378
  br i1 %411, label %424, label %412

412:                                              ; preds = %365, %406
  %413 = phi i64 [ %368, %365 ], [ %379, %406 ]
  %414 = phi i32 [ 1, %365 ], [ %410, %406 ]
  br label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %421, %415 ], [ %413, %412 ]
  %417 = phi i32 [ %420, %415 ], [ %414, %412 ]
  %418 = getelementptr inbounds i32, ptr %9, i64 %416
  %419 = load i32, ptr %418, align 4, !tbaa !5
  %420 = mul nsw i32 %419, %417
  %421 = add nsw i64 %416, -1
  %422 = trunc i64 %416 to i32
  %423 = icmp sgt i32 %422, 0
  br i1 %423, label %415, label %424, !llvm.loop !1315

424:                                              ; preds = %415, %406
  %425 = phi i32 [ %410, %406 ], [ %420, %415 ]
  %426 = and i64 %375, 4294967295
  %427 = getelementptr inbounds i32, ptr %6, i64 %426
  %428 = load i32, ptr %427, align 4, !tbaa !5
  %429 = mul nsw i32 %428, %425
  %430 = add nsw i32 %429, %369
  %431 = icmp sgt i64 %367, 2
  %432 = add nsw i64 %368, -1
  %433 = add i32 %366, 1
  br i1 %431, label %365, label %434, !llvm.loop !1316

434:                                              ; preds = %424, %361
  %435 = phi i32 [ %364, %361 ], [ %430, %424 ]
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds double, ptr %24, i64 %436
  %438 = load double, ptr %437, align 8, !tbaa !18
  %439 = fptoui double %438 to i8
  %440 = load i8, ptr %26, align 1, !tbaa !11
  %441 = tail call i8 @llvm.umax.i8(i8 %440, i8 %439)
  store i8 %441, ptr %26, align 1, !tbaa !11
  %442 = fadd fast double %363, 1.000000e+00
  %443 = add nuw nsw i32 %362, 1
  br i1 %355, label %444, label %491

444:                                              ; preds = %434
  %445 = load i32, ptr %4, align 4, !tbaa !5
  %446 = load i32, ptr %12, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %468, label %449

449:                                              ; preds = %444
  %450 = icmp eq i32 %445, %447
  br i1 %450, label %451, label %484

451:                                              ; preds = %449
  store i32 0, ptr %4, align 4, !tbaa !5
  %452 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %452, ptr %6, align 4, !tbaa !5
  br i1 %360, label %491, label %453

453:                                              ; preds = %451, %478
  %454 = phi i64 [ %482, %478 ], [ 1, %451 ]
  %455 = getelementptr inbounds i32, ptr %4, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %12, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = add nsw i32 %458, -1
  %460 = icmp slt i32 %456, %459
  br i1 %460, label %461, label %476

461:                                              ; preds = %453
  br i1 %448, label %468, label %462

462:                                              ; preds = %461
  %463 = getelementptr inbounds i32, ptr %7, i64 %454
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %6, i64 %454
  %466 = load i32, ptr %465, align 4, !tbaa !5
  %467 = add nsw i32 %466, %464
  store i32 %467, ptr %465, align 4, !tbaa !5
  br label %486

468:                                              ; preds = %444, %461
  %469 = phi i32 [ %456, %461 ], [ %445, %444 ]
  %470 = phi ptr [ %455, %461 ], [ %4, %444 ]
  %471 = phi i64 [ %454, %461 ], [ 0, %444 ]
  %472 = add nsw i32 %469, 1
  store i32 %472, ptr %470, align 4, !tbaa !5
  %473 = getelementptr inbounds i32, ptr %7, i64 %471
  %474 = load i32, ptr %473, align 4, !tbaa !5
  %475 = getelementptr inbounds i32, ptr %6, i64 %471
  br label %486

476:                                              ; preds = %453
  %477 = icmp eq i32 %456, %459
  br i1 %477, label %478, label %484

478:                                              ; preds = %476
  store i32 0, ptr %455, align 4, !tbaa !5
  %479 = getelementptr inbounds i32, ptr %8, i64 %454
  %480 = load i32, ptr %479, align 4, !tbaa !5
  %481 = getelementptr inbounds i32, ptr %6, i64 %454
  store i32 %480, ptr %481, align 4, !tbaa !5
  %482 = add nuw nsw i64 %454, 1
  %483 = icmp eq i64 %482, %358
  br i1 %483, label %491, label %453, !llvm.loop !1317

484:                                              ; preds = %449, %476
  %485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

486:                                              ; preds = %462, %468
  %487 = phi ptr [ %475, %468 ], [ %455, %462 ]
  %488 = phi i32 [ %474, %468 ], [ 1, %462 ]
  %489 = load i32, ptr %487, align 4, !tbaa !5
  %490 = add nsw i32 %489, %488
  store i32 %490, ptr %487, align 4, !tbaa !5
  br label %491

491:                                              ; preds = %478, %486, %451, %434
  %492 = icmp eq i32 %443, %5
  br i1 %492, label %5579, label %361, !llvm.loop !1318

493:                                              ; preds = %344, %628
  %494 = phi i32 [ 0, %344 ], [ %577, %628 ]
  %495 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %345, label %496, label %565

496:                                              ; preds = %493, %555
  %497 = phi i32 [ %564, %555 ], [ 0, %493 ]
  %498 = phi i64 [ %506, %555 ], [ %349, %493 ]
  %499 = phi i64 [ %563, %555 ], [ %348, %493 ]
  %500 = phi i32 [ %561, %555 ], [ %495, %493 ]
  %501 = sub i32 %347, %497
  %502 = tail call i32 @llvm.smin.i32(i32 %501, i32 0)
  %503 = sub i32 %501, %502
  %504 = zext i32 %503 to i64
  %505 = add nuw nsw i64 %504, 1
  %506 = add nsw i64 %498, -1
  %507 = icmp ult i32 %503, 31
  br i1 %507, label %543, label %508

508:                                              ; preds = %496
  %509 = and i64 %505, 8589934560
  %510 = sub i64 %499, %509
  br label %511

511:                                              ; preds = %511, %508
  %512 = phi i64 [ 0, %508 ], [ %535, %511 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %531, %511 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %532, %511 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %533, %511 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %534, %511 ]
  %517 = sub i64 %499, %512
  %518 = getelementptr inbounds i32, ptr %11, i64 %517
  %519 = getelementptr inbounds i32, ptr %518, i64 -7
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !5
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %518, i64 -15
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !5
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %518, i64 -23
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !5
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %518, i64 -31
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !5
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = mul <8 x i32> %521, %513
  %532 = mul <8 x i32> %524, %514
  %533 = mul <8 x i32> %527, %515
  %534 = mul <8 x i32> %530, %516
  %535 = add nuw i64 %512, 32
  %536 = icmp eq i64 %535, %509
  br i1 %536, label %537, label %511, !llvm.loop !1319

537:                                              ; preds = %511
  %538 = mul <8 x i32> %532, %531
  %539 = mul <8 x i32> %533, %538
  %540 = mul <8 x i32> %534, %539
  %541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %540)
  %542 = icmp eq i64 %505, %509
  br i1 %542, label %555, label %543

543:                                              ; preds = %496, %537
  %544 = phi i64 [ %499, %496 ], [ %510, %537 ]
  %545 = phi i32 [ 1, %496 ], [ %541, %537 ]
  br label %546

546:                                              ; preds = %543, %546
  %547 = phi i64 [ %552, %546 ], [ %544, %543 ]
  %548 = phi i32 [ %551, %546 ], [ %545, %543 ]
  %549 = getelementptr inbounds i32, ptr %11, i64 %547
  %550 = load i32, ptr %549, align 4, !tbaa !5
  %551 = mul nsw i32 %550, %548
  %552 = add nsw i64 %547, -1
  %553 = trunc i64 %547 to i32
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %546, label %555, !llvm.loop !1320

555:                                              ; preds = %546, %537
  %556 = phi i32 [ %541, %537 ], [ %551, %546 ]
  %557 = and i64 %506, 4294967295
  %558 = getelementptr inbounds i32, ptr %6, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !5
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %500
  %562 = icmp sgt i64 %498, 2
  %563 = add nsw i64 %499, -1
  %564 = add i32 %497, 1
  br i1 %562, label %496, label %565, !llvm.loop !1321

565:                                              ; preds = %555, %493
  %566 = phi i32 [ %495, %493 ], [ %561, %555 ]
  %567 = icmp slt i32 %566, %5
  br i1 %567, label %570, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

570:                                              ; preds = %565
  %571 = sext i32 %566 to i64
  %572 = getelementptr inbounds double, ptr %24, i64 %571
  %573 = load double, ptr %572, align 8, !tbaa !18
  %574 = fptoui double %573 to i8
  %575 = load i8, ptr %26, align 1, !tbaa !11
  %576 = tail call i8 @llvm.umax.i8(i8 %575, i8 %574)
  store i8 %576, ptr %26, align 1, !tbaa !11
  %577 = add nuw nsw i32 %494, 1
  br i1 %346, label %578, label %628

578:                                              ; preds = %570
  %579 = load i32, ptr %4, align 4, !tbaa !5
  %580 = load i32, ptr %12, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %579, %581
  br i1 %582, label %605, label %583

583:                                              ; preds = %578
  %584 = icmp eq i32 %579, %581
  br i1 %584, label %585, label %621

585:                                              ; preds = %583
  store i32 0, ptr %4, align 4, !tbaa !5
  %586 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %586, ptr %6, align 4, !tbaa !5
  br i1 %351, label %628, label %587

587:                                              ; preds = %585, %615
  %588 = phi i64 [ %619, %615 ], [ 1, %585 ]
  %589 = getelementptr inbounds i32, ptr %4, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = getelementptr inbounds i32, ptr %12, i64 %588
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %590, %593
  br i1 %594, label %595, label %613

595:                                              ; preds = %587
  br i1 %582, label %605, label %596

596:                                              ; preds = %595
  %597 = shl i64 %588, 32
  %598 = add i64 %597, -4294967296
  %599 = ashr exact i64 %598, 32
  %600 = getelementptr inbounds i32, ptr %7, i64 %599
  %601 = load i32, ptr %600, align 4, !tbaa !5
  %602 = getelementptr inbounds i32, ptr %6, i64 %588
  %603 = load i32, ptr %602, align 4, !tbaa !5
  %604 = add nsw i32 %603, %601
  store i32 %604, ptr %602, align 4, !tbaa !5
  br label %623

605:                                              ; preds = %578, %595
  %606 = phi i32 [ %590, %595 ], [ %579, %578 ]
  %607 = phi ptr [ %589, %595 ], [ %4, %578 ]
  %608 = phi i64 [ %588, %595 ], [ 0, %578 ]
  %609 = add nsw i32 %606, 1
  store i32 %609, ptr %607, align 4, !tbaa !5
  %610 = getelementptr inbounds i32, ptr %7, i64 %608
  %611 = load i32, ptr %610, align 4, !tbaa !5
  %612 = getelementptr inbounds i32, ptr %6, i64 %608
  br label %623

613:                                              ; preds = %587
  %614 = icmp eq i32 %590, %593
  br i1 %614, label %615, label %621

615:                                              ; preds = %613
  store i32 0, ptr %589, align 4, !tbaa !5
  %616 = getelementptr inbounds i32, ptr %8, i64 %588
  %617 = load i32, ptr %616, align 4, !tbaa !5
  %618 = getelementptr inbounds i32, ptr %6, i64 %588
  store i32 %617, ptr %618, align 4, !tbaa !5
  %619 = add nuw nsw i64 %588, 1
  %620 = icmp eq i64 %619, %349
  br i1 %620, label %628, label %587, !llvm.loop !1322

621:                                              ; preds = %583, %613
  %622 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

623:                                              ; preds = %596, %605
  %624 = phi ptr [ %612, %605 ], [ %589, %596 ]
  %625 = phi i32 [ %611, %605 ], [ 1, %596 ]
  %626 = load i32, ptr %624, align 4, !tbaa !5
  %627 = add nsw i32 %626, %625
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %628

628:                                              ; preds = %615, %623, %585, %570
  %629 = icmp eq i32 %577, %5
  br i1 %629, label %5579, label %493, !llvm.loop !1323

630:                                              ; preds = %31
  %631 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

632:                                              ; preds = %18
  %633 = getelementptr inbounds ptr, ptr %14, i64 %19
  %634 = load ptr, ptr %633, align 8, !tbaa !9
  %635 = getelementptr inbounds ptr, ptr %16, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !9
  store i32 0, ptr %636, align 4, !tbaa !5
  %637 = icmp eq i32 %13, 0
  br i1 %637, label %638, label %644

638:                                              ; preds = %632
  %639 = load double, ptr %634, align 8, !tbaa !18
  %640 = fptosi double %639 to i32
  %641 = icmp eq i32 %640, 0
  %642 = tail call i32 @llvm.abs.i32(i32 %640, i1 true)
  %643 = select i1 %641, i32 0, i32 %642
  store i32 %643, ptr %636, align 4, !tbaa !5
  br label %5579

644:                                              ; preds = %632
  switch i32 %1, label %1249 [
    i32 1, label %645
    i32 0, label %955
  ]

645:                                              ; preds = %644
  %646 = getelementptr inbounds i32, ptr %3, i64 %19
  %647 = load i32, ptr %646, align 4, !tbaa !5
  %648 = icmp eq i32 %647, 0
  %649 = icmp sgt i32 %5, 0
  br i1 %648, label %659, label %650

650:                                              ; preds = %645
  br i1 %649, label %651, label %5579

651:                                              ; preds = %650
  %652 = icmp sgt i32 %13, 1
  %653 = icmp sgt i32 %13, 0
  %654 = add i32 %13, -2
  %655 = zext i32 %654 to i64
  %656 = zext i32 %13 to i64
  %657 = add nuw i32 %5, 1
  %658 = icmp eq i32 %13, 1
  br label %811

659:                                              ; preds = %645
  br i1 %649, label %660, label %5579

660:                                              ; preds = %659
  %661 = icmp sgt i32 %13, 1
  %662 = icmp sgt i32 %13, 0
  %663 = add i32 %13, -2
  %664 = zext i32 %663 to i64
  %665 = zext i32 %13 to i64
  %666 = add nuw i32 %5, 1
  %667 = icmp eq i32 %13, 1
  br label %668

668:                                              ; preds = %660, %809
  %669 = phi i32 [ 0, %660 ], [ %761, %809 ]
  %670 = phi double [ 0.000000e+00, %660 ], [ %760, %809 ]
  %671 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %661, label %672, label %741

672:                                              ; preds = %668, %731
  %673 = phi i32 [ %740, %731 ], [ 0, %668 ]
  %674 = phi i64 [ %682, %731 ], [ %665, %668 ]
  %675 = phi i64 [ %739, %731 ], [ %664, %668 ]
  %676 = phi i32 [ %737, %731 ], [ %671, %668 ]
  %677 = sub i32 %663, %673
  %678 = tail call i32 @llvm.smin.i32(i32 %677, i32 0)
  %679 = sub i32 %677, %678
  %680 = zext i32 %679 to i64
  %681 = add nuw nsw i64 %680, 1
  %682 = add nsw i64 %674, -1
  %683 = icmp ult i32 %679, 31
  br i1 %683, label %719, label %684

684:                                              ; preds = %672
  %685 = and i64 %681, 8589934560
  %686 = sub i64 %675, %685
  br label %687

687:                                              ; preds = %687, %684
  %688 = phi i64 [ 0, %684 ], [ %711, %687 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %707, %687 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %708, %687 ]
  %691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %709, %687 ]
  %692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %684 ], [ %710, %687 ]
  %693 = sub i64 %675, %688
  %694 = getelementptr inbounds i32, ptr %9, i64 %693
  %695 = getelementptr inbounds i32, ptr %694, i64 -7
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !5
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %694, i64 -15
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !5
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %694, i64 -23
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !5
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = getelementptr inbounds i32, ptr %694, i64 -31
  %705 = load <8 x i32>, ptr %704, align 4, !tbaa !5
  %706 = shufflevector <8 x i32> %705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %707 = mul <8 x i32> %697, %689
  %708 = mul <8 x i32> %700, %690
  %709 = mul <8 x i32> %703, %691
  %710 = mul <8 x i32> %706, %692
  %711 = add nuw i64 %688, 32
  %712 = icmp eq i64 %711, %685
  br i1 %712, label %713, label %687, !llvm.loop !1324

713:                                              ; preds = %687
  %714 = mul <8 x i32> %708, %707
  %715 = mul <8 x i32> %709, %714
  %716 = mul <8 x i32> %710, %715
  %717 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %716)
  %718 = icmp eq i64 %681, %685
  br i1 %718, label %731, label %719

719:                                              ; preds = %672, %713
  %720 = phi i64 [ %675, %672 ], [ %686, %713 ]
  %721 = phi i32 [ 1, %672 ], [ %717, %713 ]
  br label %722

722:                                              ; preds = %719, %722
  %723 = phi i64 [ %728, %722 ], [ %720, %719 ]
  %724 = phi i32 [ %727, %722 ], [ %721, %719 ]
  %725 = getelementptr inbounds i32, ptr %9, i64 %723
  %726 = load i32, ptr %725, align 4, !tbaa !5
  %727 = mul nsw i32 %726, %724
  %728 = add nsw i64 %723, -1
  %729 = trunc i64 %723 to i32
  %730 = icmp sgt i32 %729, 0
  br i1 %730, label %722, label %731, !llvm.loop !1325

731:                                              ; preds = %722, %713
  %732 = phi i32 [ %717, %713 ], [ %727, %722 ]
  %733 = and i64 %682, 4294967295
  %734 = getelementptr inbounds i32, ptr %6, i64 %733
  %735 = load i32, ptr %734, align 4, !tbaa !5
  %736 = mul nsw i32 %735, %732
  %737 = add nsw i32 %736, %676
  %738 = icmp sgt i64 %674, 2
  %739 = add nsw i64 %675, -1
  %740 = add i32 %673, 1
  br i1 %738, label %672, label %741, !llvm.loop !1326

741:                                              ; preds = %731, %668
  %742 = phi i32 [ %671, %668 ], [ %737, %731 ]
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds double, ptr %2, i64 %743
  %745 = load double, ptr %744, align 8, !tbaa !18
  %746 = getelementptr inbounds double, ptr %634, i64 %743
  %747 = load double, ptr %746, align 8, !tbaa !18
  %748 = fptosi double %747 to i32
  %749 = load i32, ptr %636, align 4, !tbaa !5
  %750 = sitofp i32 %749 to double
  %751 = sitofp i32 %748 to double
  %752 = fmul fast double %745, %751
  %753 = fcmp fast uge double %752, 0.000000e+00
  %754 = fneg fast double %752
  %755 = tail call fast double @llvm.fabs.f64(double %752)
  %756 = fcmp fast ole double %755, %750
  %757 = select nnan ninf i1 %753, double %752, double %754
  %758 = select i1 %756, double %750, double %757
  %759 = fptosi double %758 to i32
  store i32 %759, ptr %636, align 4, !tbaa !5
  %760 = fadd fast double %745, %670
  %761 = add nuw nsw i32 %669, 1
  br i1 %662, label %762, label %809

762:                                              ; preds = %741
  %763 = load i32, ptr %4, align 4, !tbaa !5
  %764 = load i32, ptr %12, align 4, !tbaa !5
  %765 = add nsw i32 %764, -1
  %766 = icmp slt i32 %763, %765
  br i1 %766, label %786, label %767

767:                                              ; preds = %762
  %768 = icmp eq i32 %763, %765
  br i1 %768, label %769, label %802

769:                                              ; preds = %767
  store i32 0, ptr %4, align 4, !tbaa !5
  %770 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %770, ptr %6, align 4, !tbaa !5
  br i1 %667, label %809, label %771

771:                                              ; preds = %769, %796
  %772 = phi i64 [ %800, %796 ], [ 1, %769 ]
  %773 = getelementptr inbounds i32, ptr %4, i64 %772
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %12, i64 %772
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = add nsw i32 %776, -1
  %778 = icmp slt i32 %774, %777
  br i1 %778, label %779, label %794

779:                                              ; preds = %771
  br i1 %766, label %786, label %780

780:                                              ; preds = %779
  %781 = getelementptr inbounds i32, ptr %7, i64 %772
  %782 = load i32, ptr %781, align 4, !tbaa !5
  %783 = getelementptr inbounds i32, ptr %6, i64 %772
  %784 = load i32, ptr %783, align 4, !tbaa !5
  %785 = add nsw i32 %784, %782
  store i32 %785, ptr %783, align 4, !tbaa !5
  br label %804

786:                                              ; preds = %762, %779
  %787 = phi i32 [ %774, %779 ], [ %763, %762 ]
  %788 = phi ptr [ %773, %779 ], [ %4, %762 ]
  %789 = phi i64 [ %772, %779 ], [ 0, %762 ]
  %790 = add nsw i32 %787, 1
  store i32 %790, ptr %788, align 4, !tbaa !5
  %791 = getelementptr inbounds i32, ptr %7, i64 %789
  %792 = load i32, ptr %791, align 4, !tbaa !5
  %793 = getelementptr inbounds i32, ptr %6, i64 %789
  br label %804

794:                                              ; preds = %771
  %795 = icmp eq i32 %774, %777
  br i1 %795, label %796, label %802

796:                                              ; preds = %794
  store i32 0, ptr %773, align 4, !tbaa !5
  %797 = getelementptr inbounds i32, ptr %8, i64 %772
  %798 = load i32, ptr %797, align 4, !tbaa !5
  %799 = getelementptr inbounds i32, ptr %6, i64 %772
  store i32 %798, ptr %799, align 4, !tbaa !5
  %800 = add nuw nsw i64 %772, 1
  %801 = icmp eq i64 %800, %665
  br i1 %801, label %809, label %771, !llvm.loop !1327

802:                                              ; preds = %767, %794
  %803 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

804:                                              ; preds = %780, %786
  %805 = phi ptr [ %793, %786 ], [ %773, %780 ]
  %806 = phi i32 [ %792, %786 ], [ 1, %780 ]
  %807 = load i32, ptr %805, align 4, !tbaa !5
  %808 = add nsw i32 %807, %806
  store i32 %808, ptr %805, align 4, !tbaa !5
  br label %809

809:                                              ; preds = %796, %804, %769, %741
  %810 = icmp eq i32 %761, %5
  br i1 %810, label %5579, label %668, !llvm.loop !1328

811:                                              ; preds = %651, %953
  %812 = phi i32 [ 0, %651 ], [ %902, %953 ]
  %813 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %652, label %814, label %883

814:                                              ; preds = %811, %873
  %815 = phi i32 [ %882, %873 ], [ 0, %811 ]
  %816 = phi i64 [ %824, %873 ], [ %656, %811 ]
  %817 = phi i64 [ %881, %873 ], [ %655, %811 ]
  %818 = phi i32 [ %879, %873 ], [ %813, %811 ]
  %819 = sub i32 %654, %815
  %820 = tail call i32 @llvm.smin.i32(i32 %819, i32 0)
  %821 = sub i32 %819, %820
  %822 = zext i32 %821 to i64
  %823 = add nuw nsw i64 %822, 1
  %824 = add nsw i64 %816, -1
  %825 = icmp ult i32 %821, 31
  br i1 %825, label %861, label %826

826:                                              ; preds = %814
  %827 = and i64 %823, 8589934560
  %828 = sub i64 %817, %827
  br label %829

829:                                              ; preds = %829, %826
  %830 = phi i64 [ 0, %826 ], [ %853, %829 ]
  %831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %849, %829 ]
  %832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %850, %829 ]
  %833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %851, %829 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %826 ], [ %852, %829 ]
  %835 = sub i64 %817, %830
  %836 = getelementptr inbounds i32, ptr %11, i64 %835
  %837 = getelementptr inbounds i32, ptr %836, i64 -7
  %838 = load <8 x i32>, ptr %837, align 4, !tbaa !5
  %839 = shufflevector <8 x i32> %838, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %840 = getelementptr inbounds i32, ptr %836, i64 -15
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !5
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %836, i64 -23
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !5
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %836, i64 -31
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !5
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = mul <8 x i32> %839, %831
  %850 = mul <8 x i32> %842, %832
  %851 = mul <8 x i32> %845, %833
  %852 = mul <8 x i32> %848, %834
  %853 = add nuw i64 %830, 32
  %854 = icmp eq i64 %853, %827
  br i1 %854, label %855, label %829, !llvm.loop !1329

855:                                              ; preds = %829
  %856 = mul <8 x i32> %850, %849
  %857 = mul <8 x i32> %851, %856
  %858 = mul <8 x i32> %852, %857
  %859 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %858)
  %860 = icmp eq i64 %823, %827
  br i1 %860, label %873, label %861

861:                                              ; preds = %814, %855
  %862 = phi i64 [ %817, %814 ], [ %828, %855 ]
  %863 = phi i32 [ 1, %814 ], [ %859, %855 ]
  br label %864

864:                                              ; preds = %861, %864
  %865 = phi i64 [ %870, %864 ], [ %862, %861 ]
  %866 = phi i32 [ %869, %864 ], [ %863, %861 ]
  %867 = getelementptr inbounds i32, ptr %11, i64 %865
  %868 = load i32, ptr %867, align 4, !tbaa !5
  %869 = mul nsw i32 %868, %866
  %870 = add nsw i64 %865, -1
  %871 = trunc i64 %865 to i32
  %872 = icmp sgt i32 %871, 0
  br i1 %872, label %864, label %873, !llvm.loop !1330

873:                                              ; preds = %864, %855
  %874 = phi i32 [ %859, %855 ], [ %869, %864 ]
  %875 = and i64 %824, 4294967295
  %876 = getelementptr inbounds i32, ptr %6, i64 %875
  %877 = load i32, ptr %876, align 4, !tbaa !5
  %878 = mul nsw i32 %877, %874
  %879 = add nsw i32 %878, %818
  %880 = icmp sgt i64 %816, 2
  %881 = add nsw i64 %817, -1
  %882 = add i32 %815, 1
  br i1 %880, label %814, label %883, !llvm.loop !1331

883:                                              ; preds = %873, %811
  %884 = phi i32 [ %813, %811 ], [ %879, %873 ]
  %885 = icmp slt i32 %884, %5
  br i1 %885, label %888, label %886

886:                                              ; preds = %883
  %887 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

888:                                              ; preds = %883
  %889 = sext i32 %884 to i64
  %890 = getelementptr inbounds double, ptr %634, i64 %889
  %891 = load double, ptr %890, align 8, !tbaa !18
  %892 = fptosi double %891 to i32
  %893 = load i32, ptr %636, align 4, !tbaa !5
  %894 = sitofp i32 %893 to double
  %895 = sitofp i32 %892 to double
  %896 = icmp slt i32 %892, 0
  %897 = fneg fast double %895
  %898 = select i1 %896, double %897, double %895
  %899 = fcmp fast ole double %898, %894
  %900 = select fast i1 %899, double %894, double %898
  %901 = fptosi double %900 to i32
  store i32 %901, ptr %636, align 4, !tbaa !5
  %902 = add nuw nsw i32 %812, 1
  br i1 %653, label %903, label %953

903:                                              ; preds = %888
  %904 = load i32, ptr %4, align 4, !tbaa !5
  %905 = load i32, ptr %12, align 4, !tbaa !5
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %904, %906
  br i1 %907, label %930, label %908

908:                                              ; preds = %903
  %909 = icmp eq i32 %904, %906
  br i1 %909, label %910, label %946

910:                                              ; preds = %908
  store i32 0, ptr %4, align 4, !tbaa !5
  %911 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %911, ptr %6, align 4, !tbaa !5
  br i1 %658, label %953, label %912

912:                                              ; preds = %910, %940
  %913 = phi i64 [ %944, %940 ], [ 1, %910 ]
  %914 = getelementptr inbounds i32, ptr %4, i64 %913
  %915 = load i32, ptr %914, align 4, !tbaa !5
  %916 = getelementptr inbounds i32, ptr %12, i64 %913
  %917 = load i32, ptr %916, align 4, !tbaa !5
  %918 = add nsw i32 %917, -1
  %919 = icmp slt i32 %915, %918
  br i1 %919, label %920, label %938

920:                                              ; preds = %912
  br i1 %907, label %930, label %921

921:                                              ; preds = %920
  %922 = shl i64 %913, 32
  %923 = add i64 %922, -4294967296
  %924 = ashr exact i64 %923, 32
  %925 = getelementptr inbounds i32, ptr %7, i64 %924
  %926 = load i32, ptr %925, align 4, !tbaa !5
  %927 = getelementptr inbounds i32, ptr %6, i64 %913
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = add nsw i32 %928, %926
  store i32 %929, ptr %927, align 4, !tbaa !5
  br label %948

930:                                              ; preds = %903, %920
  %931 = phi i32 [ %915, %920 ], [ %904, %903 ]
  %932 = phi ptr [ %914, %920 ], [ %4, %903 ]
  %933 = phi i64 [ %913, %920 ], [ 0, %903 ]
  %934 = add nsw i32 %931, 1
  store i32 %934, ptr %932, align 4, !tbaa !5
  %935 = getelementptr inbounds i32, ptr %7, i64 %933
  %936 = load i32, ptr %935, align 4, !tbaa !5
  %937 = getelementptr inbounds i32, ptr %6, i64 %933
  br label %948

938:                                              ; preds = %912
  %939 = icmp eq i32 %915, %918
  br i1 %939, label %940, label %946

940:                                              ; preds = %938
  store i32 0, ptr %914, align 4, !tbaa !5
  %941 = getelementptr inbounds i32, ptr %8, i64 %913
  %942 = load i32, ptr %941, align 4, !tbaa !5
  %943 = getelementptr inbounds i32, ptr %6, i64 %913
  store i32 %942, ptr %943, align 4, !tbaa !5
  %944 = add nuw nsw i64 %913, 1
  %945 = icmp eq i64 %944, %656
  br i1 %945, label %953, label %912, !llvm.loop !1332

946:                                              ; preds = %908, %938
  %947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

948:                                              ; preds = %921, %930
  %949 = phi ptr [ %937, %930 ], [ %914, %921 ]
  %950 = phi i32 [ %936, %930 ], [ 1, %921 ]
  %951 = load i32, ptr %949, align 4, !tbaa !5
  %952 = add nsw i32 %951, %950
  store i32 %952, ptr %949, align 4, !tbaa !5
  br label %953

953:                                              ; preds = %940, %948, %910, %888
  %954 = icmp eq i32 %902, %5
  br i1 %954, label %5579, label %811, !llvm.loop !1333

955:                                              ; preds = %644
  %956 = getelementptr inbounds i32, ptr %3, i64 %19
  %957 = load i32, ptr %956, align 4, !tbaa !5
  %958 = icmp eq i32 %957, 0
  %959 = icmp sgt i32 %5, 0
  br i1 %958, label %969, label %960

960:                                              ; preds = %955
  br i1 %959, label %961, label %5579

961:                                              ; preds = %960
  %962 = icmp sgt i32 %13, 1
  %963 = icmp sgt i32 %13, 0
  %964 = add i32 %13, -2
  %965 = zext i32 %964 to i64
  %966 = zext i32 %13 to i64
  %967 = add nuw i32 %5, 1
  %968 = icmp eq i32 %13, 1
  br label %1111

969:                                              ; preds = %955
  br i1 %959, label %970, label %5579

970:                                              ; preds = %969
  %971 = icmp sgt i32 %13, 1
  %972 = icmp sgt i32 %13, 0
  %973 = add i32 %13, -2
  %974 = zext i32 %973 to i64
  %975 = zext i32 %13 to i64
  %976 = add nuw i32 %5, 1
  %977 = icmp eq i32 %13, 1
  br label %978

978:                                              ; preds = %970, %1109
  %979 = phi i32 [ 0, %970 ], [ %1061, %1109 ]
  %980 = phi double [ 0.000000e+00, %970 ], [ %1060, %1109 ]
  %981 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %971, label %982, label %1051

982:                                              ; preds = %978, %1041
  %983 = phi i32 [ %1050, %1041 ], [ 0, %978 ]
  %984 = phi i64 [ %992, %1041 ], [ %975, %978 ]
  %985 = phi i64 [ %1049, %1041 ], [ %974, %978 ]
  %986 = phi i32 [ %1047, %1041 ], [ %981, %978 ]
  %987 = sub i32 %973, %983
  %988 = tail call i32 @llvm.smin.i32(i32 %987, i32 0)
  %989 = sub i32 %987, %988
  %990 = zext i32 %989 to i64
  %991 = add nuw nsw i64 %990, 1
  %992 = add nsw i64 %984, -1
  %993 = icmp ult i32 %989, 31
  br i1 %993, label %1029, label %994

994:                                              ; preds = %982
  %995 = and i64 %991, 8589934560
  %996 = sub i64 %985, %995
  br label %997

997:                                              ; preds = %997, %994
  %998 = phi i64 [ 0, %994 ], [ %1021, %997 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1017, %997 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1018, %997 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1019, %997 ]
  %1002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %994 ], [ %1020, %997 ]
  %1003 = sub i64 %985, %998
  %1004 = getelementptr inbounds i32, ptr %9, i64 %1003
  %1005 = getelementptr inbounds i32, ptr %1004, i64 -7
  %1006 = load <8 x i32>, ptr %1005, align 4, !tbaa !5
  %1007 = shufflevector <8 x i32> %1006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1008 = getelementptr inbounds i32, ptr %1004, i64 -15
  %1009 = load <8 x i32>, ptr %1008, align 4, !tbaa !5
  %1010 = shufflevector <8 x i32> %1009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1011 = getelementptr inbounds i32, ptr %1004, i64 -23
  %1012 = load <8 x i32>, ptr %1011, align 4, !tbaa !5
  %1013 = shufflevector <8 x i32> %1012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1014 = getelementptr inbounds i32, ptr %1004, i64 -31
  %1015 = load <8 x i32>, ptr %1014, align 4, !tbaa !5
  %1016 = shufflevector <8 x i32> %1015, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1017 = mul <8 x i32> %1007, %999
  %1018 = mul <8 x i32> %1010, %1000
  %1019 = mul <8 x i32> %1013, %1001
  %1020 = mul <8 x i32> %1016, %1002
  %1021 = add nuw i64 %998, 32
  %1022 = icmp eq i64 %1021, %995
  br i1 %1022, label %1023, label %997, !llvm.loop !1334

1023:                                             ; preds = %997
  %1024 = mul <8 x i32> %1018, %1017
  %1025 = mul <8 x i32> %1019, %1024
  %1026 = mul <8 x i32> %1020, %1025
  %1027 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1026)
  %1028 = icmp eq i64 %991, %995
  br i1 %1028, label %1041, label %1029

1029:                                             ; preds = %982, %1023
  %1030 = phi i64 [ %985, %982 ], [ %996, %1023 ]
  %1031 = phi i32 [ 1, %982 ], [ %1027, %1023 ]
  br label %1032

1032:                                             ; preds = %1029, %1032
  %1033 = phi i64 [ %1038, %1032 ], [ %1030, %1029 ]
  %1034 = phi i32 [ %1037, %1032 ], [ %1031, %1029 ]
  %1035 = getelementptr inbounds i32, ptr %9, i64 %1033
  %1036 = load i32, ptr %1035, align 4, !tbaa !5
  %1037 = mul nsw i32 %1036, %1034
  %1038 = add nsw i64 %1033, -1
  %1039 = trunc i64 %1033 to i32
  %1040 = icmp sgt i32 %1039, 0
  br i1 %1040, label %1032, label %1041, !llvm.loop !1335

1041:                                             ; preds = %1032, %1023
  %1042 = phi i32 [ %1027, %1023 ], [ %1037, %1032 ]
  %1043 = and i64 %992, 4294967295
  %1044 = getelementptr inbounds i32, ptr %6, i64 %1043
  %1045 = load i32, ptr %1044, align 4, !tbaa !5
  %1046 = mul nsw i32 %1045, %1042
  %1047 = add nsw i32 %1046, %986
  %1048 = icmp sgt i64 %984, 2
  %1049 = add nsw i64 %985, -1
  %1050 = add i32 %983, 1
  br i1 %1048, label %982, label %1051, !llvm.loop !1336

1051:                                             ; preds = %1041, %978
  %1052 = phi i32 [ %981, %978 ], [ %1047, %1041 ]
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds double, ptr %634, i64 %1053
  %1055 = load double, ptr %1054, align 8, !tbaa !18
  %1056 = fptosi double %1055 to i32
  %1057 = load i32, ptr %636, align 4, !tbaa !5
  %1058 = tail call i32 @llvm.abs.i32(i32 %1056, i1 true)
  %1059 = tail call i32 @llvm.smax.i32(i32 %1057, i32 %1058)
  store i32 %1059, ptr %636, align 4, !tbaa !5
  %1060 = fadd fast double %980, 1.000000e+00
  %1061 = add nuw nsw i32 %979, 1
  br i1 %972, label %1062, label %1109

1062:                                             ; preds = %1051
  %1063 = load i32, ptr %4, align 4, !tbaa !5
  %1064 = load i32, ptr %12, align 4, !tbaa !5
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1063, %1065
  br i1 %1066, label %1086, label %1067

1067:                                             ; preds = %1062
  %1068 = icmp eq i32 %1063, %1065
  br i1 %1068, label %1069, label %1102

1069:                                             ; preds = %1067
  store i32 0, ptr %4, align 4, !tbaa !5
  %1070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1070, ptr %6, align 4, !tbaa !5
  br i1 %977, label %1109, label %1071

1071:                                             ; preds = %1069, %1096
  %1072 = phi i64 [ %1100, %1096 ], [ 1, %1069 ]
  %1073 = getelementptr inbounds i32, ptr %4, i64 %1072
  %1074 = load i32, ptr %1073, align 4, !tbaa !5
  %1075 = getelementptr inbounds i32, ptr %12, i64 %1072
  %1076 = load i32, ptr %1075, align 4, !tbaa !5
  %1077 = add nsw i32 %1076, -1
  %1078 = icmp slt i32 %1074, %1077
  br i1 %1078, label %1079, label %1094

1079:                                             ; preds = %1071
  br i1 %1066, label %1086, label %1080

1080:                                             ; preds = %1079
  %1081 = getelementptr inbounds i32, ptr %7, i64 %1072
  %1082 = load i32, ptr %1081, align 4, !tbaa !5
  %1083 = getelementptr inbounds i32, ptr %6, i64 %1072
  %1084 = load i32, ptr %1083, align 4, !tbaa !5
  %1085 = add nsw i32 %1084, %1082
  store i32 %1085, ptr %1083, align 4, !tbaa !5
  br label %1104

1086:                                             ; preds = %1062, %1079
  %1087 = phi i32 [ %1074, %1079 ], [ %1063, %1062 ]
  %1088 = phi ptr [ %1073, %1079 ], [ %4, %1062 ]
  %1089 = phi i64 [ %1072, %1079 ], [ 0, %1062 ]
  %1090 = add nsw i32 %1087, 1
  store i32 %1090, ptr %1088, align 4, !tbaa !5
  %1091 = getelementptr inbounds i32, ptr %7, i64 %1089
  %1092 = load i32, ptr %1091, align 4, !tbaa !5
  %1093 = getelementptr inbounds i32, ptr %6, i64 %1089
  br label %1104

1094:                                             ; preds = %1071
  %1095 = icmp eq i32 %1074, %1077
  br i1 %1095, label %1096, label %1102

1096:                                             ; preds = %1094
  store i32 0, ptr %1073, align 4, !tbaa !5
  %1097 = getelementptr inbounds i32, ptr %8, i64 %1072
  %1098 = load i32, ptr %1097, align 4, !tbaa !5
  %1099 = getelementptr inbounds i32, ptr %6, i64 %1072
  store i32 %1098, ptr %1099, align 4, !tbaa !5
  %1100 = add nuw nsw i64 %1072, 1
  %1101 = icmp eq i64 %1100, %975
  br i1 %1101, label %1109, label %1071, !llvm.loop !1337

1102:                                             ; preds = %1067, %1094
  %1103 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1104:                                             ; preds = %1080, %1086
  %1105 = phi ptr [ %1093, %1086 ], [ %1073, %1080 ]
  %1106 = phi i32 [ %1092, %1086 ], [ 1, %1080 ]
  %1107 = load i32, ptr %1105, align 4, !tbaa !5
  %1108 = add nsw i32 %1107, %1106
  store i32 %1108, ptr %1105, align 4, !tbaa !5
  br label %1109

1109:                                             ; preds = %1096, %1104, %1069, %1051
  %1110 = icmp eq i32 %1061, %5
  br i1 %1110, label %5579, label %978, !llvm.loop !1338

1111:                                             ; preds = %961, %1247
  %1112 = phi i32 [ 0, %961 ], [ %1196, %1247 ]
  %1113 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %962, label %1114, label %1183

1114:                                             ; preds = %1111, %1173
  %1115 = phi i32 [ %1182, %1173 ], [ 0, %1111 ]
  %1116 = phi i64 [ %1124, %1173 ], [ %966, %1111 ]
  %1117 = phi i64 [ %1181, %1173 ], [ %965, %1111 ]
  %1118 = phi i32 [ %1179, %1173 ], [ %1113, %1111 ]
  %1119 = sub i32 %964, %1115
  %1120 = tail call i32 @llvm.smin.i32(i32 %1119, i32 0)
  %1121 = sub i32 %1119, %1120
  %1122 = zext i32 %1121 to i64
  %1123 = add nuw nsw i64 %1122, 1
  %1124 = add nsw i64 %1116, -1
  %1125 = icmp ult i32 %1121, 31
  br i1 %1125, label %1161, label %1126

1126:                                             ; preds = %1114
  %1127 = and i64 %1123, 8589934560
  %1128 = sub i64 %1117, %1127
  br label %1129

1129:                                             ; preds = %1129, %1126
  %1130 = phi i64 [ 0, %1126 ], [ %1153, %1129 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1149, %1129 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1150, %1129 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1151, %1129 ]
  %1134 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1126 ], [ %1152, %1129 ]
  %1135 = sub i64 %1117, %1130
  %1136 = getelementptr inbounds i32, ptr %11, i64 %1135
  %1137 = getelementptr inbounds i32, ptr %1136, i64 -7
  %1138 = load <8 x i32>, ptr %1137, align 4, !tbaa !5
  %1139 = shufflevector <8 x i32> %1138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1140 = getelementptr inbounds i32, ptr %1136, i64 -15
  %1141 = load <8 x i32>, ptr %1140, align 4, !tbaa !5
  %1142 = shufflevector <8 x i32> %1141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1143 = getelementptr inbounds i32, ptr %1136, i64 -23
  %1144 = load <8 x i32>, ptr %1143, align 4, !tbaa !5
  %1145 = shufflevector <8 x i32> %1144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1146 = getelementptr inbounds i32, ptr %1136, i64 -31
  %1147 = load <8 x i32>, ptr %1146, align 4, !tbaa !5
  %1148 = shufflevector <8 x i32> %1147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1149 = mul <8 x i32> %1139, %1131
  %1150 = mul <8 x i32> %1142, %1132
  %1151 = mul <8 x i32> %1145, %1133
  %1152 = mul <8 x i32> %1148, %1134
  %1153 = add nuw i64 %1130, 32
  %1154 = icmp eq i64 %1153, %1127
  br i1 %1154, label %1155, label %1129, !llvm.loop !1339

1155:                                             ; preds = %1129
  %1156 = mul <8 x i32> %1150, %1149
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = mul <8 x i32> %1152, %1157
  %1159 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1158)
  %1160 = icmp eq i64 %1123, %1127
  br i1 %1160, label %1173, label %1161

1161:                                             ; preds = %1114, %1155
  %1162 = phi i64 [ %1117, %1114 ], [ %1128, %1155 ]
  %1163 = phi i32 [ 1, %1114 ], [ %1159, %1155 ]
  br label %1164

1164:                                             ; preds = %1161, %1164
  %1165 = phi i64 [ %1170, %1164 ], [ %1162, %1161 ]
  %1166 = phi i32 [ %1169, %1164 ], [ %1163, %1161 ]
  %1167 = getelementptr inbounds i32, ptr %11, i64 %1165
  %1168 = load i32, ptr %1167, align 4, !tbaa !5
  %1169 = mul nsw i32 %1168, %1166
  %1170 = add nsw i64 %1165, -1
  %1171 = trunc i64 %1165 to i32
  %1172 = icmp sgt i32 %1171, 0
  br i1 %1172, label %1164, label %1173, !llvm.loop !1340

1173:                                             ; preds = %1164, %1155
  %1174 = phi i32 [ %1159, %1155 ], [ %1169, %1164 ]
  %1175 = and i64 %1124, 4294967295
  %1176 = getelementptr inbounds i32, ptr %6, i64 %1175
  %1177 = load i32, ptr %1176, align 4, !tbaa !5
  %1178 = mul nsw i32 %1177, %1174
  %1179 = add nsw i32 %1178, %1118
  %1180 = icmp sgt i64 %1116, 2
  %1181 = add nsw i64 %1117, -1
  %1182 = add i32 %1115, 1
  br i1 %1180, label %1114, label %1183, !llvm.loop !1341

1183:                                             ; preds = %1173, %1111
  %1184 = phi i32 [ %1113, %1111 ], [ %1179, %1173 ]
  %1185 = icmp slt i32 %1184, %5
  br i1 %1185, label %1188, label %1186

1186:                                             ; preds = %1183
  %1187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

1188:                                             ; preds = %1183
  %1189 = sext i32 %1184 to i64
  %1190 = getelementptr inbounds double, ptr %634, i64 %1189
  %1191 = load double, ptr %1190, align 8, !tbaa !18
  %1192 = fptosi double %1191 to i32
  %1193 = load i32, ptr %636, align 4, !tbaa !5
  %1194 = tail call i32 @llvm.abs.i32(i32 %1192, i1 true)
  %1195 = tail call i32 @llvm.smax.i32(i32 %1193, i32 %1194)
  store i32 %1195, ptr %636, align 4, !tbaa !5
  %1196 = add nuw nsw i32 %1112, 1
  br i1 %963, label %1197, label %1247

1197:                                             ; preds = %1188
  %1198 = load i32, ptr %4, align 4, !tbaa !5
  %1199 = load i32, ptr %12, align 4, !tbaa !5
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !5
  %1205 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1205, ptr %6, align 4, !tbaa !5
  br i1 %968, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !5
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !5
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !5
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !5
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !5
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !5
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !5
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !5
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !5
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !5
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %966
  br i1 %1239, label %1247, label %1206, !llvm.loop !1342

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !5
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !5
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1188
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %5579, label %1111, !llvm.loop !1343

1249:                                             ; preds = %644
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !9
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !9
  store i8 0, ptr %1255, align 1, !tbaa !11
  %1256 = icmp eq i32 %13, 0
  br i1 %1256, label %1257, label %1261

1257:                                             ; preds = %1251
  %1258 = load double, ptr %1253, align 8, !tbaa !18
  %1259 = fptosi double %1258 to i8
  %1260 = tail call i8 @llvm.abs.i8(i8 %1259, i1 false)
  store i8 %1260, ptr %1255, align 1, !tbaa !11
  br label %5579

1261:                                             ; preds = %1251
  switch i32 %1, label %1872 [
    i32 1, label %1262
    i32 0, label %1572
  ]

1262:                                             ; preds = %1261
  %1263 = getelementptr inbounds i32, ptr %3, i64 %19
  %1264 = load i32, ptr %1263, align 4, !tbaa !5
  %1265 = icmp eq i32 %1264, 0
  %1266 = icmp sgt i32 %5, 0
  br i1 %1265, label %1276, label %1267

1267:                                             ; preds = %1262
  br i1 %1266, label %1268, label %5579

1268:                                             ; preds = %1267
  %1269 = icmp sgt i32 %13, 1
  %1270 = icmp sgt i32 %13, 0
  %1271 = add i32 %13, -2
  %1272 = zext i32 %1271 to i64
  %1273 = zext i32 %13 to i64
  %1274 = add nuw i32 %5, 1
  %1275 = icmp eq i32 %13, 1
  br label %1428

1276:                                             ; preds = %1262
  br i1 %1266, label %1277, label %5579

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1285

1285:                                             ; preds = %1277, %1426
  %1286 = phi i32 [ 0, %1277 ], [ %1378, %1426 ]
  %1287 = phi double [ 0.000000e+00, %1277 ], [ %1377, %1426 ]
  %1288 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1278, label %1289, label %1358

1289:                                             ; preds = %1285, %1348
  %1290 = phi i32 [ %1357, %1348 ], [ 0, %1285 ]
  %1291 = phi i64 [ %1299, %1348 ], [ %1282, %1285 ]
  %1292 = phi i64 [ %1356, %1348 ], [ %1281, %1285 ]
  %1293 = phi i32 [ %1354, %1348 ], [ %1288, %1285 ]
  %1294 = sub i32 %1280, %1290
  %1295 = tail call i32 @llvm.smin.i32(i32 %1294, i32 0)
  %1296 = sub i32 %1294, %1295
  %1297 = zext i32 %1296 to i64
  %1298 = add nuw nsw i64 %1297, 1
  %1299 = add nsw i64 %1291, -1
  %1300 = icmp ult i32 %1296, 31
  br i1 %1300, label %1336, label %1301

1301:                                             ; preds = %1289
  %1302 = and i64 %1298, 8589934560
  %1303 = sub i64 %1292, %1302
  br label %1304

1304:                                             ; preds = %1304, %1301
  %1305 = phi i64 [ 0, %1301 ], [ %1328, %1304 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1324, %1304 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1325, %1304 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1326, %1304 ]
  %1309 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1301 ], [ %1327, %1304 ]
  %1310 = sub i64 %1292, %1305
  %1311 = getelementptr inbounds i32, ptr %9, i64 %1310
  %1312 = getelementptr inbounds i32, ptr %1311, i64 -7
  %1313 = load <8 x i32>, ptr %1312, align 4, !tbaa !5
  %1314 = shufflevector <8 x i32> %1313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1315 = getelementptr inbounds i32, ptr %1311, i64 -15
  %1316 = load <8 x i32>, ptr %1315, align 4, !tbaa !5
  %1317 = shufflevector <8 x i32> %1316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1318 = getelementptr inbounds i32, ptr %1311, i64 -23
  %1319 = load <8 x i32>, ptr %1318, align 4, !tbaa !5
  %1320 = shufflevector <8 x i32> %1319, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1321 = getelementptr inbounds i32, ptr %1311, i64 -31
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !5
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = mul <8 x i32> %1314, %1306
  %1325 = mul <8 x i32> %1317, %1307
  %1326 = mul <8 x i32> %1320, %1308
  %1327 = mul <8 x i32> %1323, %1309
  %1328 = add nuw i64 %1305, 32
  %1329 = icmp eq i64 %1328, %1302
  br i1 %1329, label %1330, label %1304, !llvm.loop !1344

1330:                                             ; preds = %1304
  %1331 = mul <8 x i32> %1325, %1324
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = mul <8 x i32> %1327, %1332
  %1334 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1333)
  %1335 = icmp eq i64 %1298, %1302
  br i1 %1335, label %1348, label %1336

1336:                                             ; preds = %1289, %1330
  %1337 = phi i64 [ %1292, %1289 ], [ %1303, %1330 ]
  %1338 = phi i32 [ 1, %1289 ], [ %1334, %1330 ]
  br label %1339

1339:                                             ; preds = %1336, %1339
  %1340 = phi i64 [ %1345, %1339 ], [ %1337, %1336 ]
  %1341 = phi i32 [ %1344, %1339 ], [ %1338, %1336 ]
  %1342 = getelementptr inbounds i32, ptr %9, i64 %1340
  %1343 = load i32, ptr %1342, align 4, !tbaa !5
  %1344 = mul nsw i32 %1343, %1341
  %1345 = add nsw i64 %1340, -1
  %1346 = trunc i64 %1340 to i32
  %1347 = icmp sgt i32 %1346, 0
  br i1 %1347, label %1339, label %1348, !llvm.loop !1345

1348:                                             ; preds = %1339, %1330
  %1349 = phi i32 [ %1334, %1330 ], [ %1344, %1339 ]
  %1350 = and i64 %1299, 4294967295
  %1351 = getelementptr inbounds i32, ptr %6, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = mul nsw i32 %1352, %1349
  %1354 = add nsw i32 %1353, %1293
  %1355 = icmp sgt i64 %1291, 2
  %1356 = add nsw i64 %1292, -1
  %1357 = add i32 %1290, 1
  br i1 %1355, label %1289, label %1358, !llvm.loop !1346

1358:                                             ; preds = %1348, %1285
  %1359 = phi i32 [ %1288, %1285 ], [ %1354, %1348 ]
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds double, ptr %2, i64 %1360
  %1362 = load double, ptr %1361, align 8, !tbaa !18
  %1363 = getelementptr inbounds double, ptr %1253, i64 %1360
  %1364 = load double, ptr %1363, align 8, !tbaa !18
  %1365 = fptosi double %1364 to i8
  %1366 = load i8, ptr %1255, align 1, !tbaa !11
  %1367 = sitofp i8 %1366 to double
  %1368 = sitofp i8 %1365 to double
  %1369 = fmul fast double %1362, %1368
  %1370 = fcmp fast uge double %1369, 0.000000e+00
  %1371 = fneg fast double %1369
  %1372 = tail call fast double @llvm.fabs.f64(double %1369)
  %1373 = fcmp fast ole double %1372, %1367
  %1374 = select nnan ninf i1 %1370, double %1369, double %1371
  %1375 = select i1 %1373, double %1367, double %1374
  %1376 = fptosi double %1375 to i8
  store i8 %1376, ptr %1255, align 1, !tbaa !11
  %1377 = fadd fast double %1362, %1287
  %1378 = add nuw nsw i32 %1286, 1
  br i1 %1279, label %1379, label %1426

1379:                                             ; preds = %1358
  %1380 = load i32, ptr %4, align 4, !tbaa !5
  %1381 = load i32, ptr %12, align 4, !tbaa !5
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1380, %1382
  br i1 %1383, label %1403, label %1384

1384:                                             ; preds = %1379
  %1385 = icmp eq i32 %1380, %1382
  br i1 %1385, label %1386, label %1419

1386:                                             ; preds = %1384
  store i32 0, ptr %4, align 4, !tbaa !5
  %1387 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1387, ptr %6, align 4, !tbaa !5
  br i1 %1284, label %1426, label %1388

1388:                                             ; preds = %1386, %1413
  %1389 = phi i64 [ %1417, %1413 ], [ 1, %1386 ]
  %1390 = getelementptr inbounds i32, ptr %4, i64 %1389
  %1391 = load i32, ptr %1390, align 4, !tbaa !5
  %1392 = getelementptr inbounds i32, ptr %12, i64 %1389
  %1393 = load i32, ptr %1392, align 4, !tbaa !5
  %1394 = add nsw i32 %1393, -1
  %1395 = icmp slt i32 %1391, %1394
  br i1 %1395, label %1396, label %1411

1396:                                             ; preds = %1388
  br i1 %1383, label %1403, label %1397

1397:                                             ; preds = %1396
  %1398 = getelementptr inbounds i32, ptr %7, i64 %1389
  %1399 = load i32, ptr %1398, align 4, !tbaa !5
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1389
  %1401 = load i32, ptr %1400, align 4, !tbaa !5
  %1402 = add nsw i32 %1401, %1399
  store i32 %1402, ptr %1400, align 4, !tbaa !5
  br label %1421

1403:                                             ; preds = %1379, %1396
  %1404 = phi i32 [ %1391, %1396 ], [ %1380, %1379 ]
  %1405 = phi ptr [ %1390, %1396 ], [ %4, %1379 ]
  %1406 = phi i64 [ %1389, %1396 ], [ 0, %1379 ]
  %1407 = add nsw i32 %1404, 1
  store i32 %1407, ptr %1405, align 4, !tbaa !5
  %1408 = getelementptr inbounds i32, ptr %7, i64 %1406
  %1409 = load i32, ptr %1408, align 4, !tbaa !5
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1406
  br label %1421

1411:                                             ; preds = %1388
  %1412 = icmp eq i32 %1391, %1394
  br i1 %1412, label %1413, label %1419

1413:                                             ; preds = %1411
  store i32 0, ptr %1390, align 4, !tbaa !5
  %1414 = getelementptr inbounds i32, ptr %8, i64 %1389
  %1415 = load i32, ptr %1414, align 4, !tbaa !5
  %1416 = getelementptr inbounds i32, ptr %6, i64 %1389
  store i32 %1415, ptr %1416, align 4, !tbaa !5
  %1417 = add nuw nsw i64 %1389, 1
  %1418 = icmp eq i64 %1417, %1282
  br i1 %1418, label %1426, label %1388, !llvm.loop !1347

1419:                                             ; preds = %1384, %1411
  %1420 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1421:                                             ; preds = %1397, %1403
  %1422 = phi ptr [ %1410, %1403 ], [ %1390, %1397 ]
  %1423 = phi i32 [ %1409, %1403 ], [ 1, %1397 ]
  %1424 = load i32, ptr %1422, align 4, !tbaa !5
  %1425 = add nsw i32 %1424, %1423
  store i32 %1425, ptr %1422, align 4, !tbaa !5
  br label %1426

1426:                                             ; preds = %1413, %1421, %1386, %1358
  %1427 = icmp eq i32 %1378, %5
  br i1 %1427, label %5579, label %1285, !llvm.loop !1348

1428:                                             ; preds = %1268, %1570
  %1429 = phi i32 [ 0, %1268 ], [ %1519, %1570 ]
  %1430 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1269, label %1431, label %1500

1431:                                             ; preds = %1428, %1490
  %1432 = phi i32 [ %1499, %1490 ], [ 0, %1428 ]
  %1433 = phi i64 [ %1441, %1490 ], [ %1273, %1428 ]
  %1434 = phi i64 [ %1498, %1490 ], [ %1272, %1428 ]
  %1435 = phi i32 [ %1496, %1490 ], [ %1430, %1428 ]
  %1436 = sub i32 %1271, %1432
  %1437 = tail call i32 @llvm.smin.i32(i32 %1436, i32 0)
  %1438 = sub i32 %1436, %1437
  %1439 = zext i32 %1438 to i64
  %1440 = add nuw nsw i64 %1439, 1
  %1441 = add nsw i64 %1433, -1
  %1442 = icmp ult i32 %1438, 31
  br i1 %1442, label %1478, label %1443

1443:                                             ; preds = %1431
  %1444 = and i64 %1440, 8589934560
  %1445 = sub i64 %1434, %1444
  br label %1446

1446:                                             ; preds = %1446, %1443
  %1447 = phi i64 [ 0, %1443 ], [ %1470, %1446 ]
  %1448 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1466, %1446 ]
  %1449 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1467, %1446 ]
  %1450 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1468, %1446 ]
  %1451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1443 ], [ %1469, %1446 ]
  %1452 = sub i64 %1434, %1447
  %1453 = getelementptr inbounds i32, ptr %11, i64 %1452
  %1454 = getelementptr inbounds i32, ptr %1453, i64 -7
  %1455 = load <8 x i32>, ptr %1454, align 4, !tbaa !5
  %1456 = shufflevector <8 x i32> %1455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1457 = getelementptr inbounds i32, ptr %1453, i64 -15
  %1458 = load <8 x i32>, ptr %1457, align 4, !tbaa !5
  %1459 = shufflevector <8 x i32> %1458, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1460 = getelementptr inbounds i32, ptr %1453, i64 -23
  %1461 = load <8 x i32>, ptr %1460, align 4, !tbaa !5
  %1462 = shufflevector <8 x i32> %1461, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1463 = getelementptr inbounds i32, ptr %1453, i64 -31
  %1464 = load <8 x i32>, ptr %1463, align 4, !tbaa !5
  %1465 = shufflevector <8 x i32> %1464, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1466 = mul <8 x i32> %1456, %1448
  %1467 = mul <8 x i32> %1459, %1449
  %1468 = mul <8 x i32> %1462, %1450
  %1469 = mul <8 x i32> %1465, %1451
  %1470 = add nuw i64 %1447, 32
  %1471 = icmp eq i64 %1470, %1444
  br i1 %1471, label %1472, label %1446, !llvm.loop !1349

1472:                                             ; preds = %1446
  %1473 = mul <8 x i32> %1467, %1466
  %1474 = mul <8 x i32> %1468, %1473
  %1475 = mul <8 x i32> %1469, %1474
  %1476 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1475)
  %1477 = icmp eq i64 %1440, %1444
  br i1 %1477, label %1490, label %1478

1478:                                             ; preds = %1431, %1472
  %1479 = phi i64 [ %1434, %1431 ], [ %1445, %1472 ]
  %1480 = phi i32 [ 1, %1431 ], [ %1476, %1472 ]
  br label %1481

1481:                                             ; preds = %1478, %1481
  %1482 = phi i64 [ %1487, %1481 ], [ %1479, %1478 ]
  %1483 = phi i32 [ %1486, %1481 ], [ %1480, %1478 ]
  %1484 = getelementptr inbounds i32, ptr %11, i64 %1482
  %1485 = load i32, ptr %1484, align 4, !tbaa !5
  %1486 = mul nsw i32 %1485, %1483
  %1487 = add nsw i64 %1482, -1
  %1488 = trunc i64 %1482 to i32
  %1489 = icmp sgt i32 %1488, 0
  br i1 %1489, label %1481, label %1490, !llvm.loop !1350

1490:                                             ; preds = %1481, %1472
  %1491 = phi i32 [ %1476, %1472 ], [ %1486, %1481 ]
  %1492 = and i64 %1441, 4294967295
  %1493 = getelementptr inbounds i32, ptr %6, i64 %1492
  %1494 = load i32, ptr %1493, align 4, !tbaa !5
  %1495 = mul nsw i32 %1494, %1491
  %1496 = add nsw i32 %1495, %1435
  %1497 = icmp sgt i64 %1433, 2
  %1498 = add nsw i64 %1434, -1
  %1499 = add i32 %1432, 1
  br i1 %1497, label %1431, label %1500, !llvm.loop !1351

1500:                                             ; preds = %1490, %1428
  %1501 = phi i32 [ %1430, %1428 ], [ %1496, %1490 ]
  %1502 = icmp slt i32 %1501, %5
  br i1 %1502, label %1505, label %1503

1503:                                             ; preds = %1500
  %1504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

1505:                                             ; preds = %1500
  %1506 = sext i32 %1501 to i64
  %1507 = getelementptr inbounds double, ptr %1253, i64 %1506
  %1508 = load double, ptr %1507, align 8, !tbaa !18
  %1509 = fptosi double %1508 to i8
  %1510 = load i8, ptr %1255, align 1, !tbaa !11
  %1511 = sitofp i8 %1510 to double
  %1512 = sitofp i8 %1509 to double
  %1513 = icmp slt i8 %1509, 0
  %1514 = fneg fast double %1512
  %1515 = select i1 %1513, double %1514, double %1512
  %1516 = fcmp fast ole double %1515, %1511
  %1517 = select fast i1 %1516, double %1511, double %1515
  %1518 = fptosi double %1517 to i8
  store i8 %1518, ptr %1255, align 1, !tbaa !11
  %1519 = add nuw nsw i32 %1429, 1
  br i1 %1270, label %1520, label %1570

1520:                                             ; preds = %1505
  %1521 = load i32, ptr %4, align 4, !tbaa !5
  %1522 = load i32, ptr %12, align 4, !tbaa !5
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1521, %1523
  br i1 %1524, label %1547, label %1525

1525:                                             ; preds = %1520
  %1526 = icmp eq i32 %1521, %1523
  br i1 %1526, label %1527, label %1563

1527:                                             ; preds = %1525
  store i32 0, ptr %4, align 4, !tbaa !5
  %1528 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1528, ptr %6, align 4, !tbaa !5
  br i1 %1275, label %1570, label %1529

1529:                                             ; preds = %1527, %1557
  %1530 = phi i64 [ %1561, %1557 ], [ 1, %1527 ]
  %1531 = getelementptr inbounds i32, ptr %4, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !5
  %1533 = getelementptr inbounds i32, ptr %12, i64 %1530
  %1534 = load i32, ptr %1533, align 4, !tbaa !5
  %1535 = add nsw i32 %1534, -1
  %1536 = icmp slt i32 %1532, %1535
  br i1 %1536, label %1537, label %1555

1537:                                             ; preds = %1529
  br i1 %1524, label %1547, label %1538

1538:                                             ; preds = %1537
  %1539 = shl i64 %1530, 32
  %1540 = add i64 %1539, -4294967296
  %1541 = ashr exact i64 %1540, 32
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !5
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1530
  %1545 = load i32, ptr %1544, align 4, !tbaa !5
  %1546 = add nsw i32 %1545, %1543
  store i32 %1546, ptr %1544, align 4, !tbaa !5
  br label %1565

1547:                                             ; preds = %1520, %1537
  %1548 = phi i32 [ %1532, %1537 ], [ %1521, %1520 ]
  %1549 = phi ptr [ %1531, %1537 ], [ %4, %1520 ]
  %1550 = phi i64 [ %1530, %1537 ], [ 0, %1520 ]
  %1551 = add nsw i32 %1548, 1
  store i32 %1551, ptr %1549, align 4, !tbaa !5
  %1552 = getelementptr inbounds i32, ptr %7, i64 %1550
  %1553 = load i32, ptr %1552, align 4, !tbaa !5
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1550
  br label %1565

1555:                                             ; preds = %1529
  %1556 = icmp eq i32 %1532, %1535
  br i1 %1556, label %1557, label %1563

1557:                                             ; preds = %1555
  store i32 0, ptr %1531, align 4, !tbaa !5
  %1558 = getelementptr inbounds i32, ptr %8, i64 %1530
  %1559 = load i32, ptr %1558, align 4, !tbaa !5
  %1560 = getelementptr inbounds i32, ptr %6, i64 %1530
  store i32 %1559, ptr %1560, align 4, !tbaa !5
  %1561 = add nuw nsw i64 %1530, 1
  %1562 = icmp eq i64 %1561, %1273
  br i1 %1562, label %1570, label %1529, !llvm.loop !1352

1563:                                             ; preds = %1525, %1555
  %1564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1565:                                             ; preds = %1538, %1547
  %1566 = phi ptr [ %1554, %1547 ], [ %1531, %1538 ]
  %1567 = phi i32 [ %1553, %1547 ], [ 1, %1538 ]
  %1568 = load i32, ptr %1566, align 4, !tbaa !5
  %1569 = add nsw i32 %1568, %1567
  store i32 %1569, ptr %1566, align 4, !tbaa !5
  br label %1570

1570:                                             ; preds = %1557, %1565, %1527, %1505
  %1571 = icmp eq i32 %1519, %5
  br i1 %1571, label %5579, label %1428, !llvm.loop !1353

1572:                                             ; preds = %1261
  %1573 = getelementptr inbounds i32, ptr %3, i64 %19
  %1574 = load i32, ptr %1573, align 4, !tbaa !5
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp sgt i32 %5, 0
  br i1 %1575, label %1586, label %1577

1577:                                             ; preds = %1572
  br i1 %1576, label %1578, label %5579

1578:                                             ; preds = %1577
  %1579 = icmp sgt i32 %13, 1
  %1580 = icmp sgt i32 %13, 0
  %1581 = add i32 %13, -2
  %1582 = zext i32 %1581 to i64
  %1583 = zext i32 %13 to i64
  %1584 = add nuw i32 %5, 1
  %1585 = icmp eq i32 %13, 1
  br label %1731

1586:                                             ; preds = %1572
  br i1 %1576, label %1587, label %5579

1587:                                             ; preds = %1586
  %1588 = icmp sgt i32 %13, 1
  %1589 = icmp sgt i32 %13, 0
  %1590 = add i32 %13, -2
  %1591 = zext i32 %1590 to i64
  %1592 = zext i32 %13 to i64
  %1593 = add nuw i32 %5, 1
  %1594 = icmp eq i32 %13, 1
  br label %1595

1595:                                             ; preds = %1587, %1729
  %1596 = phi i32 [ 0, %1587 ], [ %1681, %1729 ]
  %1597 = phi double [ 0.000000e+00, %1587 ], [ %1680, %1729 ]
  %1598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1588, label %1599, label %1668

1599:                                             ; preds = %1595, %1658
  %1600 = phi i32 [ %1667, %1658 ], [ 0, %1595 ]
  %1601 = phi i64 [ %1609, %1658 ], [ %1592, %1595 ]
  %1602 = phi i64 [ %1666, %1658 ], [ %1591, %1595 ]
  %1603 = phi i32 [ %1664, %1658 ], [ %1598, %1595 ]
  %1604 = sub i32 %1590, %1600
  %1605 = tail call i32 @llvm.smin.i32(i32 %1604, i32 0)
  %1606 = sub i32 %1604, %1605
  %1607 = zext i32 %1606 to i64
  %1608 = add nuw nsw i64 %1607, 1
  %1609 = add nsw i64 %1601, -1
  %1610 = icmp ult i32 %1606, 31
  br i1 %1610, label %1646, label %1611

1611:                                             ; preds = %1599
  %1612 = and i64 %1608, 8589934560
  %1613 = sub i64 %1602, %1612
  br label %1614

1614:                                             ; preds = %1614, %1611
  %1615 = phi i64 [ 0, %1611 ], [ %1638, %1614 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1634, %1614 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1635, %1614 ]
  %1618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1636, %1614 ]
  %1619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1637, %1614 ]
  %1620 = sub i64 %1602, %1615
  %1621 = getelementptr inbounds i32, ptr %9, i64 %1620
  %1622 = getelementptr inbounds i32, ptr %1621, i64 -7
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !5
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1621, i64 -15
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !5
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = getelementptr inbounds i32, ptr %1621, i64 -23
  %1629 = load <8 x i32>, ptr %1628, align 4, !tbaa !5
  %1630 = shufflevector <8 x i32> %1629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1631 = getelementptr inbounds i32, ptr %1621, i64 -31
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !5
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = mul <8 x i32> %1624, %1616
  %1635 = mul <8 x i32> %1627, %1617
  %1636 = mul <8 x i32> %1630, %1618
  %1637 = mul <8 x i32> %1633, %1619
  %1638 = add nuw i64 %1615, 32
  %1639 = icmp eq i64 %1638, %1612
  br i1 %1639, label %1640, label %1614, !llvm.loop !1354

1640:                                             ; preds = %1614
  %1641 = mul <8 x i32> %1635, %1634
  %1642 = mul <8 x i32> %1636, %1641
  %1643 = mul <8 x i32> %1637, %1642
  %1644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1643)
  %1645 = icmp eq i64 %1608, %1612
  br i1 %1645, label %1658, label %1646

1646:                                             ; preds = %1599, %1640
  %1647 = phi i64 [ %1602, %1599 ], [ %1613, %1640 ]
  %1648 = phi i32 [ 1, %1599 ], [ %1644, %1640 ]
  br label %1649

1649:                                             ; preds = %1646, %1649
  %1650 = phi i64 [ %1655, %1649 ], [ %1647, %1646 ]
  %1651 = phi i32 [ %1654, %1649 ], [ %1648, %1646 ]
  %1652 = getelementptr inbounds i32, ptr %9, i64 %1650
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = mul nsw i32 %1653, %1651
  %1655 = add nsw i64 %1650, -1
  %1656 = trunc i64 %1650 to i32
  %1657 = icmp sgt i32 %1656, 0
  br i1 %1657, label %1649, label %1658, !llvm.loop !1355

1658:                                             ; preds = %1649, %1640
  %1659 = phi i32 [ %1644, %1640 ], [ %1654, %1649 ]
  %1660 = and i64 %1609, 4294967295
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1660
  %1662 = load i32, ptr %1661, align 4, !tbaa !5
  %1663 = mul nsw i32 %1662, %1659
  %1664 = add nsw i32 %1663, %1603
  %1665 = icmp sgt i64 %1601, 2
  %1666 = add nsw i64 %1602, -1
  %1667 = add i32 %1600, 1
  br i1 %1665, label %1599, label %1668, !llvm.loop !1356

1668:                                             ; preds = %1658, %1595
  %1669 = phi i32 [ %1598, %1595 ], [ %1664, %1658 ]
  %1670 = sext i32 %1669 to i64
  %1671 = getelementptr inbounds double, ptr %1253, i64 %1670
  %1672 = load double, ptr %1671, align 8, !tbaa !18
  %1673 = fptosi double %1672 to i8
  %1674 = load i8, ptr %1255, align 1, !tbaa !11
  %1675 = sext i8 %1674 to i32
  %1676 = tail call i8 @llvm.abs.i8(i8 %1673, i1 false)
  %1677 = zext i8 %1676 to i32
  %1678 = icmp slt i32 %1675, %1677
  %1679 = select i1 %1678, i8 %1676, i8 %1674
  store i8 %1679, ptr %1255, align 1, !tbaa !11
  %1680 = fadd fast double %1597, 1.000000e+00
  %1681 = add nuw nsw i32 %1596, 1
  br i1 %1589, label %1682, label %1729

1682:                                             ; preds = %1668
  %1683 = load i32, ptr %4, align 4, !tbaa !5
  %1684 = load i32, ptr %12, align 4, !tbaa !5
  %1685 = add nsw i32 %1684, -1
  %1686 = icmp slt i32 %1683, %1685
  br i1 %1686, label %1706, label %1687

1687:                                             ; preds = %1682
  %1688 = icmp eq i32 %1683, %1685
  br i1 %1688, label %1689, label %1722

1689:                                             ; preds = %1687
  store i32 0, ptr %4, align 4, !tbaa !5
  %1690 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1690, ptr %6, align 4, !tbaa !5
  br i1 %1594, label %1729, label %1691

1691:                                             ; preds = %1689, %1716
  %1692 = phi i64 [ %1720, %1716 ], [ 1, %1689 ]
  %1693 = getelementptr inbounds i32, ptr %4, i64 %1692
  %1694 = load i32, ptr %1693, align 4, !tbaa !5
  %1695 = getelementptr inbounds i32, ptr %12, i64 %1692
  %1696 = load i32, ptr %1695, align 4, !tbaa !5
  %1697 = add nsw i32 %1696, -1
  %1698 = icmp slt i32 %1694, %1697
  br i1 %1698, label %1699, label %1714

1699:                                             ; preds = %1691
  br i1 %1686, label %1706, label %1700

1700:                                             ; preds = %1699
  %1701 = getelementptr inbounds i32, ptr %7, i64 %1692
  %1702 = load i32, ptr %1701, align 4, !tbaa !5
  %1703 = getelementptr inbounds i32, ptr %6, i64 %1692
  %1704 = load i32, ptr %1703, align 4, !tbaa !5
  %1705 = add nsw i32 %1704, %1702
  store i32 %1705, ptr %1703, align 4, !tbaa !5
  br label %1724

1706:                                             ; preds = %1682, %1699
  %1707 = phi i32 [ %1694, %1699 ], [ %1683, %1682 ]
  %1708 = phi ptr [ %1693, %1699 ], [ %4, %1682 ]
  %1709 = phi i64 [ %1692, %1699 ], [ 0, %1682 ]
  %1710 = add nsw i32 %1707, 1
  store i32 %1710, ptr %1708, align 4, !tbaa !5
  %1711 = getelementptr inbounds i32, ptr %7, i64 %1709
  %1712 = load i32, ptr %1711, align 4, !tbaa !5
  %1713 = getelementptr inbounds i32, ptr %6, i64 %1709
  br label %1724

1714:                                             ; preds = %1691
  %1715 = icmp eq i32 %1694, %1697
  br i1 %1715, label %1716, label %1722

1716:                                             ; preds = %1714
  store i32 0, ptr %1693, align 4, !tbaa !5
  %1717 = getelementptr inbounds i32, ptr %8, i64 %1692
  %1718 = load i32, ptr %1717, align 4, !tbaa !5
  %1719 = getelementptr inbounds i32, ptr %6, i64 %1692
  store i32 %1718, ptr %1719, align 4, !tbaa !5
  %1720 = add nuw nsw i64 %1692, 1
  %1721 = icmp eq i64 %1720, %1592
  br i1 %1721, label %1729, label %1691, !llvm.loop !1357

1722:                                             ; preds = %1687, %1714
  %1723 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1724:                                             ; preds = %1700, %1706
  %1725 = phi ptr [ %1713, %1706 ], [ %1693, %1700 ]
  %1726 = phi i32 [ %1712, %1706 ], [ 1, %1700 ]
  %1727 = load i32, ptr %1725, align 4, !tbaa !5
  %1728 = add nsw i32 %1727, %1726
  store i32 %1728, ptr %1725, align 4, !tbaa !5
  br label %1729

1729:                                             ; preds = %1716, %1724, %1689, %1668
  %1730 = icmp eq i32 %1681, %5
  br i1 %1730, label %5579, label %1595, !llvm.loop !1358

1731:                                             ; preds = %1578, %1870
  %1732 = phi i32 [ 0, %1578 ], [ %1819, %1870 ]
  %1733 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1579, label %1734, label %1803

1734:                                             ; preds = %1731, %1793
  %1735 = phi i32 [ %1802, %1793 ], [ 0, %1731 ]
  %1736 = phi i64 [ %1744, %1793 ], [ %1583, %1731 ]
  %1737 = phi i64 [ %1801, %1793 ], [ %1582, %1731 ]
  %1738 = phi i32 [ %1799, %1793 ], [ %1733, %1731 ]
  %1739 = sub i32 %1581, %1735
  %1740 = tail call i32 @llvm.smin.i32(i32 %1739, i32 0)
  %1741 = sub i32 %1739, %1740
  %1742 = zext i32 %1741 to i64
  %1743 = add nuw nsw i64 %1742, 1
  %1744 = add nsw i64 %1736, -1
  %1745 = icmp ult i32 %1741, 31
  br i1 %1745, label %1781, label %1746

1746:                                             ; preds = %1734
  %1747 = and i64 %1743, 8589934560
  %1748 = sub i64 %1737, %1747
  br label %1749

1749:                                             ; preds = %1749, %1746
  %1750 = phi i64 [ 0, %1746 ], [ %1773, %1749 ]
  %1751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1769, %1749 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1770, %1749 ]
  %1753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1771, %1749 ]
  %1754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1746 ], [ %1772, %1749 ]
  %1755 = sub i64 %1737, %1750
  %1756 = getelementptr inbounds i32, ptr %11, i64 %1755
  %1757 = getelementptr inbounds i32, ptr %1756, i64 -7
  %1758 = load <8 x i32>, ptr %1757, align 4, !tbaa !5
  %1759 = shufflevector <8 x i32> %1758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1760 = getelementptr inbounds i32, ptr %1756, i64 -15
  %1761 = load <8 x i32>, ptr %1760, align 4, !tbaa !5
  %1762 = shufflevector <8 x i32> %1761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1763 = getelementptr inbounds i32, ptr %1756, i64 -23
  %1764 = load <8 x i32>, ptr %1763, align 4, !tbaa !5
  %1765 = shufflevector <8 x i32> %1764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1766 = getelementptr inbounds i32, ptr %1756, i64 -31
  %1767 = load <8 x i32>, ptr %1766, align 4, !tbaa !5
  %1768 = shufflevector <8 x i32> %1767, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1769 = mul <8 x i32> %1759, %1751
  %1770 = mul <8 x i32> %1762, %1752
  %1771 = mul <8 x i32> %1765, %1753
  %1772 = mul <8 x i32> %1768, %1754
  %1773 = add nuw i64 %1750, 32
  %1774 = icmp eq i64 %1773, %1747
  br i1 %1774, label %1775, label %1749, !llvm.loop !1359

1775:                                             ; preds = %1749
  %1776 = mul <8 x i32> %1770, %1769
  %1777 = mul <8 x i32> %1771, %1776
  %1778 = mul <8 x i32> %1772, %1777
  %1779 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1778)
  %1780 = icmp eq i64 %1743, %1747
  br i1 %1780, label %1793, label %1781

1781:                                             ; preds = %1734, %1775
  %1782 = phi i64 [ %1737, %1734 ], [ %1748, %1775 ]
  %1783 = phi i32 [ 1, %1734 ], [ %1779, %1775 ]
  br label %1784

1784:                                             ; preds = %1781, %1784
  %1785 = phi i64 [ %1790, %1784 ], [ %1782, %1781 ]
  %1786 = phi i32 [ %1789, %1784 ], [ %1783, %1781 ]
  %1787 = getelementptr inbounds i32, ptr %11, i64 %1785
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = mul nsw i32 %1788, %1786
  %1790 = add nsw i64 %1785, -1
  %1791 = trunc i64 %1785 to i32
  %1792 = icmp sgt i32 %1791, 0
  br i1 %1792, label %1784, label %1793, !llvm.loop !1360

1793:                                             ; preds = %1784, %1775
  %1794 = phi i32 [ %1779, %1775 ], [ %1789, %1784 ]
  %1795 = and i64 %1744, 4294967295
  %1796 = getelementptr inbounds i32, ptr %6, i64 %1795
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = mul nsw i32 %1797, %1794
  %1799 = add nsw i32 %1798, %1738
  %1800 = icmp sgt i64 %1736, 2
  %1801 = add nsw i64 %1737, -1
  %1802 = add i32 %1735, 1
  br i1 %1800, label %1734, label %1803, !llvm.loop !1361

1803:                                             ; preds = %1793, %1731
  %1804 = phi i32 [ %1733, %1731 ], [ %1799, %1793 ]
  %1805 = icmp slt i32 %1804, %5
  br i1 %1805, label %1808, label %1806

1806:                                             ; preds = %1803
  %1807 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

1808:                                             ; preds = %1803
  %1809 = sext i32 %1804 to i64
  %1810 = getelementptr inbounds double, ptr %1253, i64 %1809
  %1811 = load double, ptr %1810, align 8, !tbaa !18
  %1812 = fptosi double %1811 to i8
  %1813 = load i8, ptr %1255, align 1, !tbaa !11
  %1814 = sext i8 %1813 to i32
  %1815 = tail call i8 @llvm.abs.i8(i8 %1812, i1 false)
  %1816 = zext i8 %1815 to i32
  %1817 = icmp slt i32 %1814, %1816
  %1818 = select i1 %1817, i8 %1815, i8 %1813
  store i8 %1818, ptr %1255, align 1, !tbaa !11
  %1819 = add nuw nsw i32 %1732, 1
  br i1 %1580, label %1820, label %1870

1820:                                             ; preds = %1808
  %1821 = load i32, ptr %4, align 4, !tbaa !5
  %1822 = load i32, ptr %12, align 4, !tbaa !5
  %1823 = add nsw i32 %1822, -1
  %1824 = icmp slt i32 %1821, %1823
  br i1 %1824, label %1847, label %1825

1825:                                             ; preds = %1820
  %1826 = icmp eq i32 %1821, %1823
  br i1 %1826, label %1827, label %1863

1827:                                             ; preds = %1825
  store i32 0, ptr %4, align 4, !tbaa !5
  %1828 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1828, ptr %6, align 4, !tbaa !5
  br i1 %1585, label %1870, label %1829

1829:                                             ; preds = %1827, %1857
  %1830 = phi i64 [ %1861, %1857 ], [ 1, %1827 ]
  %1831 = getelementptr inbounds i32, ptr %4, i64 %1830
  %1832 = load i32, ptr %1831, align 4, !tbaa !5
  %1833 = getelementptr inbounds i32, ptr %12, i64 %1830
  %1834 = load i32, ptr %1833, align 4, !tbaa !5
  %1835 = add nsw i32 %1834, -1
  %1836 = icmp slt i32 %1832, %1835
  br i1 %1836, label %1837, label %1855

1837:                                             ; preds = %1829
  br i1 %1824, label %1847, label %1838

1838:                                             ; preds = %1837
  %1839 = shl i64 %1830, 32
  %1840 = add i64 %1839, -4294967296
  %1841 = ashr exact i64 %1840, 32
  %1842 = getelementptr inbounds i32, ptr %7, i64 %1841
  %1843 = load i32, ptr %1842, align 4, !tbaa !5
  %1844 = getelementptr inbounds i32, ptr %6, i64 %1830
  %1845 = load i32, ptr %1844, align 4, !tbaa !5
  %1846 = add nsw i32 %1845, %1843
  store i32 %1846, ptr %1844, align 4, !tbaa !5
  br label %1865

1847:                                             ; preds = %1820, %1837
  %1848 = phi i32 [ %1832, %1837 ], [ %1821, %1820 ]
  %1849 = phi ptr [ %1831, %1837 ], [ %4, %1820 ]
  %1850 = phi i64 [ %1830, %1837 ], [ 0, %1820 ]
  %1851 = add nsw i32 %1848, 1
  store i32 %1851, ptr %1849, align 4, !tbaa !5
  %1852 = getelementptr inbounds i32, ptr %7, i64 %1850
  %1853 = load i32, ptr %1852, align 4, !tbaa !5
  %1854 = getelementptr inbounds i32, ptr %6, i64 %1850
  br label %1865

1855:                                             ; preds = %1829
  %1856 = icmp eq i32 %1832, %1835
  br i1 %1856, label %1857, label %1863

1857:                                             ; preds = %1855
  store i32 0, ptr %1831, align 4, !tbaa !5
  %1858 = getelementptr inbounds i32, ptr %8, i64 %1830
  %1859 = load i32, ptr %1858, align 4, !tbaa !5
  %1860 = getelementptr inbounds i32, ptr %6, i64 %1830
  store i32 %1859, ptr %1860, align 4, !tbaa !5
  %1861 = add nuw nsw i64 %1830, 1
  %1862 = icmp eq i64 %1861, %1583
  br i1 %1862, label %1870, label %1829, !llvm.loop !1362

1863:                                             ; preds = %1825, %1855
  %1864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

1865:                                             ; preds = %1838, %1847
  %1866 = phi ptr [ %1854, %1847 ], [ %1831, %1838 ]
  %1867 = phi i32 [ %1853, %1847 ], [ 1, %1838 ]
  %1868 = load i32, ptr %1866, align 4, !tbaa !5
  %1869 = add nsw i32 %1868, %1867
  store i32 %1869, ptr %1866, align 4, !tbaa !5
  br label %1870

1870:                                             ; preds = %1857, %1865, %1827, %1808
  %1871 = icmp eq i32 %1819, %5
  br i1 %1871, label %5579, label %1731, !llvm.loop !1363

1872:                                             ; preds = %1261
  %1873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2566, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

1874:                                             ; preds = %18
  %1875 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1876 = load ptr, ptr %1875, align 8, !tbaa !9
  %1877 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1878 = load ptr, ptr %1877, align 8, !tbaa !9
  store i16 0, ptr %1878, align 2, !tbaa !78
  %1879 = icmp eq i32 %13, 0
  br i1 %1879, label %1880, label %1884

1880:                                             ; preds = %1874
  %1881 = load double, ptr %1876, align 8, !tbaa !18
  %1882 = fptosi double %1881 to i16
  %1883 = tail call i16 @llvm.abs.i16(i16 %1882, i1 false)
  store i16 %1883, ptr %1878, align 2, !tbaa !78
  br label %5579

1884:                                             ; preds = %1874
  switch i32 %1, label %2495 [
    i32 1, label %1885
    i32 0, label %2195
  ]

1885:                                             ; preds = %1884
  %1886 = getelementptr inbounds i32, ptr %3, i64 %19
  %1887 = load i32, ptr %1886, align 4, !tbaa !5
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp sgt i32 %5, 0
  br i1 %1888, label %1899, label %1890

1890:                                             ; preds = %1885
  br i1 %1889, label %1891, label %5579

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %2051

1899:                                             ; preds = %1885
  br i1 %1889, label %1900, label %5579

1900:                                             ; preds = %1899
  %1901 = icmp sgt i32 %13, 1
  %1902 = icmp sgt i32 %13, 0
  %1903 = add i32 %13, -2
  %1904 = zext i32 %1903 to i64
  %1905 = zext i32 %13 to i64
  %1906 = add nuw i32 %5, 1
  %1907 = icmp eq i32 %13, 1
  br label %1908

1908:                                             ; preds = %1900, %2049
  %1909 = phi i16 [ 0, %1900 ], [ %1999, %2049 ]
  %1910 = phi i32 [ 0, %1900 ], [ %2001, %2049 ]
  %1911 = phi double [ 0.000000e+00, %1900 ], [ %2000, %2049 ]
  %1912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1901, label %1913, label %1982

1913:                                             ; preds = %1908, %1972
  %1914 = phi i32 [ %1981, %1972 ], [ 0, %1908 ]
  %1915 = phi i64 [ %1923, %1972 ], [ %1905, %1908 ]
  %1916 = phi i64 [ %1980, %1972 ], [ %1904, %1908 ]
  %1917 = phi i32 [ %1978, %1972 ], [ %1912, %1908 ]
  %1918 = sub i32 %1903, %1914
  %1919 = tail call i32 @llvm.smin.i32(i32 %1918, i32 0)
  %1920 = sub i32 %1918, %1919
  %1921 = zext i32 %1920 to i64
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = add nsw i64 %1915, -1
  %1924 = icmp ult i32 %1920, 31
  br i1 %1924, label %1960, label %1925

1925:                                             ; preds = %1913
  %1926 = and i64 %1922, 8589934560
  %1927 = sub i64 %1916, %1926
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = phi i64 [ 0, %1925 ], [ %1952, %1928 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1948, %1928 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1949, %1928 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1950, %1928 ]
  %1933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1951, %1928 ]
  %1934 = sub i64 %1916, %1929
  %1935 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1936 = getelementptr inbounds i32, ptr %1935, i64 -7
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !5
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1935, i64 -15
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !5
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = getelementptr inbounds i32, ptr %1935, i64 -23
  %1943 = load <8 x i32>, ptr %1942, align 4, !tbaa !5
  %1944 = shufflevector <8 x i32> %1943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1945 = getelementptr inbounds i32, ptr %1935, i64 -31
  %1946 = load <8 x i32>, ptr %1945, align 4, !tbaa !5
  %1947 = shufflevector <8 x i32> %1946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1948 = mul <8 x i32> %1938, %1930
  %1949 = mul <8 x i32> %1941, %1931
  %1950 = mul <8 x i32> %1944, %1932
  %1951 = mul <8 x i32> %1947, %1933
  %1952 = add nuw i64 %1929, 32
  %1953 = icmp eq i64 %1952, %1926
  br i1 %1953, label %1954, label %1928, !llvm.loop !1364

1954:                                             ; preds = %1928
  %1955 = mul <8 x i32> %1949, %1948
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = mul <8 x i32> %1951, %1956
  %1958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1957)
  %1959 = icmp eq i64 %1922, %1926
  br i1 %1959, label %1972, label %1960

1960:                                             ; preds = %1913, %1954
  %1961 = phi i64 [ %1916, %1913 ], [ %1927, %1954 ]
  %1962 = phi i32 [ 1, %1913 ], [ %1958, %1954 ]
  br label %1963

1963:                                             ; preds = %1960, %1963
  %1964 = phi i64 [ %1969, %1963 ], [ %1961, %1960 ]
  %1965 = phi i32 [ %1968, %1963 ], [ %1962, %1960 ]
  %1966 = getelementptr inbounds i32, ptr %9, i64 %1964
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = mul nsw i32 %1967, %1965
  %1969 = add nsw i64 %1964, -1
  %1970 = trunc i64 %1964 to i32
  %1971 = icmp sgt i32 %1970, 0
  br i1 %1971, label %1963, label %1972, !llvm.loop !1365

1972:                                             ; preds = %1963, %1954
  %1973 = phi i32 [ %1958, %1954 ], [ %1968, %1963 ]
  %1974 = and i64 %1923, 4294967295
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1974
  %1976 = load i32, ptr %1975, align 4, !tbaa !5
  %1977 = mul nsw i32 %1976, %1973
  %1978 = add nsw i32 %1977, %1917
  %1979 = icmp sgt i64 %1915, 2
  %1980 = add nsw i64 %1916, -1
  %1981 = add i32 %1914, 1
  br i1 %1979, label %1913, label %1982, !llvm.loop !1366

1982:                                             ; preds = %1972, %1908
  %1983 = phi i32 [ %1912, %1908 ], [ %1978, %1972 ]
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds double, ptr %2, i64 %1984
  %1986 = load double, ptr %1985, align 8, !tbaa !18
  %1987 = getelementptr inbounds double, ptr %1876, i64 %1984
  %1988 = load double, ptr %1987, align 8, !tbaa !18
  %1989 = fptosi double %1988 to i16
  %1990 = sitofp i16 %1909 to double
  %1991 = sitofp i16 %1989 to double
  %1992 = fmul fast double %1986, %1991
  %1993 = fcmp fast uge double %1992, 0.000000e+00
  %1994 = fneg fast double %1992
  %1995 = tail call fast double @llvm.fabs.f64(double %1992)
  %1996 = fcmp fast ole double %1995, %1990
  %1997 = select nnan ninf i1 %1993, double %1992, double %1994
  %1998 = select i1 %1996, double %1990, double %1997
  %1999 = fptosi double %1998 to i16
  %2000 = fadd fast double %1986, %1911
  %2001 = add nuw nsw i32 %1910, 1
  br i1 %1902, label %2002, label %2049

2002:                                             ; preds = %1982
  %2003 = load i32, ptr %4, align 4, !tbaa !5
  %2004 = load i32, ptr %12, align 4, !tbaa !5
  %2005 = add nsw i32 %2004, -1
  %2006 = icmp slt i32 %2003, %2005
  br i1 %2006, label %2026, label %2007

2007:                                             ; preds = %2002
  %2008 = icmp eq i32 %2003, %2005
  br i1 %2008, label %2009, label %2042

2009:                                             ; preds = %2007
  store i32 0, ptr %4, align 4, !tbaa !5
  %2010 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2010, ptr %6, align 4, !tbaa !5
  br i1 %1907, label %2049, label %2011

2011:                                             ; preds = %2009, %2036
  %2012 = phi i64 [ %2040, %2036 ], [ 1, %2009 ]
  %2013 = getelementptr inbounds i32, ptr %4, i64 %2012
  %2014 = load i32, ptr %2013, align 4, !tbaa !5
  %2015 = getelementptr inbounds i32, ptr %12, i64 %2012
  %2016 = load i32, ptr %2015, align 4, !tbaa !5
  %2017 = add nsw i32 %2016, -1
  %2018 = icmp slt i32 %2014, %2017
  br i1 %2018, label %2019, label %2034

2019:                                             ; preds = %2011
  br i1 %2006, label %2026, label %2020

2020:                                             ; preds = %2019
  %2021 = getelementptr inbounds i32, ptr %7, i64 %2012
  %2022 = load i32, ptr %2021, align 4, !tbaa !5
  %2023 = getelementptr inbounds i32, ptr %6, i64 %2012
  %2024 = load i32, ptr %2023, align 4, !tbaa !5
  %2025 = add nsw i32 %2024, %2022
  store i32 %2025, ptr %2023, align 4, !tbaa !5
  br label %2044

2026:                                             ; preds = %2002, %2019
  %2027 = phi i32 [ %2014, %2019 ], [ %2003, %2002 ]
  %2028 = phi ptr [ %2013, %2019 ], [ %4, %2002 ]
  %2029 = phi i64 [ %2012, %2019 ], [ 0, %2002 ]
  %2030 = add nsw i32 %2027, 1
  store i32 %2030, ptr %2028, align 4, !tbaa !5
  %2031 = getelementptr inbounds i32, ptr %7, i64 %2029
  %2032 = load i32, ptr %2031, align 4, !tbaa !5
  %2033 = getelementptr inbounds i32, ptr %6, i64 %2029
  br label %2044

2034:                                             ; preds = %2011
  %2035 = icmp eq i32 %2014, %2017
  br i1 %2035, label %2036, label %2042

2036:                                             ; preds = %2034
  store i32 0, ptr %2013, align 4, !tbaa !5
  %2037 = getelementptr inbounds i32, ptr %8, i64 %2012
  %2038 = load i32, ptr %2037, align 4, !tbaa !5
  %2039 = getelementptr inbounds i32, ptr %6, i64 %2012
  store i32 %2038, ptr %2039, align 4, !tbaa !5
  %2040 = add nuw nsw i64 %2012, 1
  %2041 = icmp eq i64 %2040, %1905
  br i1 %2041, label %2049, label %2011, !llvm.loop !1367

2042:                                             ; preds = %2007, %2034
  store i16 %1999, ptr %1878, align 2, !tbaa !78
  %2043 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2044:                                             ; preds = %2020, %2026
  %2045 = phi ptr [ %2033, %2026 ], [ %2013, %2020 ]
  %2046 = phi i32 [ %2032, %2026 ], [ 1, %2020 ]
  %2047 = load i32, ptr %2045, align 4, !tbaa !5
  %2048 = add nsw i32 %2047, %2046
  store i32 %2048, ptr %2045, align 4, !tbaa !5
  br label %2049

2049:                                             ; preds = %2036, %2044, %2009, %1982
  %2050 = icmp eq i32 %2001, %5
  br i1 %2050, label %5573, label %1908, !llvm.loop !1368

2051:                                             ; preds = %1891, %2193
  %2052 = phi i16 [ 0, %1891 ], [ %2141, %2193 ]
  %2053 = phi i32 [ 0, %1891 ], [ %2142, %2193 ]
  %2054 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1892, label %2055, label %2124

2055:                                             ; preds = %2051, %2114
  %2056 = phi i32 [ %2123, %2114 ], [ 0, %2051 ]
  %2057 = phi i64 [ %2065, %2114 ], [ %1896, %2051 ]
  %2058 = phi i64 [ %2122, %2114 ], [ %1895, %2051 ]
  %2059 = phi i32 [ %2120, %2114 ], [ %2054, %2051 ]
  %2060 = sub i32 %1894, %2056
  %2061 = tail call i32 @llvm.smin.i32(i32 %2060, i32 0)
  %2062 = sub i32 %2060, %2061
  %2063 = zext i32 %2062 to i64
  %2064 = add nuw nsw i64 %2063, 1
  %2065 = add nsw i64 %2057, -1
  %2066 = icmp ult i32 %2062, 31
  br i1 %2066, label %2102, label %2067

2067:                                             ; preds = %2055
  %2068 = and i64 %2064, 8589934560
  %2069 = sub i64 %2058, %2068
  br label %2070

2070:                                             ; preds = %2070, %2067
  %2071 = phi i64 [ 0, %2067 ], [ %2094, %2070 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2090, %2070 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2091, %2070 ]
  %2074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2092, %2070 ]
  %2075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2067 ], [ %2093, %2070 ]
  %2076 = sub i64 %2058, %2071
  %2077 = getelementptr inbounds i32, ptr %11, i64 %2076
  %2078 = getelementptr inbounds i32, ptr %2077, i64 -7
  %2079 = load <8 x i32>, ptr %2078, align 4, !tbaa !5
  %2080 = shufflevector <8 x i32> %2079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2081 = getelementptr inbounds i32, ptr %2077, i64 -15
  %2082 = load <8 x i32>, ptr %2081, align 4, !tbaa !5
  %2083 = shufflevector <8 x i32> %2082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2084 = getelementptr inbounds i32, ptr %2077, i64 -23
  %2085 = load <8 x i32>, ptr %2084, align 4, !tbaa !5
  %2086 = shufflevector <8 x i32> %2085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2087 = getelementptr inbounds i32, ptr %2077, i64 -31
  %2088 = load <8 x i32>, ptr %2087, align 4, !tbaa !5
  %2089 = shufflevector <8 x i32> %2088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2090 = mul <8 x i32> %2080, %2072
  %2091 = mul <8 x i32> %2083, %2073
  %2092 = mul <8 x i32> %2086, %2074
  %2093 = mul <8 x i32> %2089, %2075
  %2094 = add nuw i64 %2071, 32
  %2095 = icmp eq i64 %2094, %2068
  br i1 %2095, label %2096, label %2070, !llvm.loop !1369

2096:                                             ; preds = %2070
  %2097 = mul <8 x i32> %2091, %2090
  %2098 = mul <8 x i32> %2092, %2097
  %2099 = mul <8 x i32> %2093, %2098
  %2100 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2099)
  %2101 = icmp eq i64 %2064, %2068
  br i1 %2101, label %2114, label %2102

2102:                                             ; preds = %2055, %2096
  %2103 = phi i64 [ %2058, %2055 ], [ %2069, %2096 ]
  %2104 = phi i32 [ 1, %2055 ], [ %2100, %2096 ]
  br label %2105

2105:                                             ; preds = %2102, %2105
  %2106 = phi i64 [ %2111, %2105 ], [ %2103, %2102 ]
  %2107 = phi i32 [ %2110, %2105 ], [ %2104, %2102 ]
  %2108 = getelementptr inbounds i32, ptr %11, i64 %2106
  %2109 = load i32, ptr %2108, align 4, !tbaa !5
  %2110 = mul nsw i32 %2109, %2107
  %2111 = add nsw i64 %2106, -1
  %2112 = trunc i64 %2106 to i32
  %2113 = icmp sgt i32 %2112, 0
  br i1 %2113, label %2105, label %2114, !llvm.loop !1370

2114:                                             ; preds = %2105, %2096
  %2115 = phi i32 [ %2100, %2096 ], [ %2110, %2105 ]
  %2116 = and i64 %2065, 4294967295
  %2117 = getelementptr inbounds i32, ptr %6, i64 %2116
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = mul nsw i32 %2118, %2115
  %2120 = add nsw i32 %2119, %2059
  %2121 = icmp sgt i64 %2057, 2
  %2122 = add nsw i64 %2058, -1
  %2123 = add i32 %2056, 1
  br i1 %2121, label %2055, label %2124, !llvm.loop !1371

2124:                                             ; preds = %2114, %2051
  %2125 = phi i32 [ %2054, %2051 ], [ %2120, %2114 ]
  %2126 = icmp slt i32 %2125, %5
  br i1 %2126, label %2129, label %2127

2127:                                             ; preds = %2124
  %2128 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

2129:                                             ; preds = %2124
  %2130 = sext i32 %2125 to i64
  %2131 = getelementptr inbounds double, ptr %1876, i64 %2130
  %2132 = load double, ptr %2131, align 8, !tbaa !18
  %2133 = fptosi double %2132 to i16
  %2134 = sitofp i16 %2052 to double
  %2135 = sitofp i16 %2133 to double
  %2136 = icmp slt i16 %2133, 0
  %2137 = fneg fast double %2135
  %2138 = select i1 %2136, double %2137, double %2135
  %2139 = fcmp fast ole double %2138, %2134
  %2140 = select fast i1 %2139, double %2134, double %2138
  %2141 = fptosi double %2140 to i16
  store i16 %2141, ptr %1878, align 2, !tbaa !78
  %2142 = add nuw nsw i32 %2053, 1
  br i1 %1893, label %2143, label %2193

2143:                                             ; preds = %2129
  %2144 = load i32, ptr %4, align 4, !tbaa !5
  %2145 = load i32, ptr %12, align 4, !tbaa !5
  %2146 = add nsw i32 %2145, -1
  %2147 = icmp slt i32 %2144, %2146
  br i1 %2147, label %2170, label %2148

2148:                                             ; preds = %2143
  %2149 = icmp eq i32 %2144, %2146
  br i1 %2149, label %2150, label %2186

2150:                                             ; preds = %2148
  store i32 0, ptr %4, align 4, !tbaa !5
  %2151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2151, ptr %6, align 4, !tbaa !5
  br i1 %1898, label %2193, label %2152

2152:                                             ; preds = %2150, %2180
  %2153 = phi i64 [ %2184, %2180 ], [ 1, %2150 ]
  %2154 = getelementptr inbounds i32, ptr %4, i64 %2153
  %2155 = load i32, ptr %2154, align 4, !tbaa !5
  %2156 = getelementptr inbounds i32, ptr %12, i64 %2153
  %2157 = load i32, ptr %2156, align 4, !tbaa !5
  %2158 = add nsw i32 %2157, -1
  %2159 = icmp slt i32 %2155, %2158
  br i1 %2159, label %2160, label %2178

2160:                                             ; preds = %2152
  br i1 %2147, label %2170, label %2161

2161:                                             ; preds = %2160
  %2162 = shl i64 %2153, 32
  %2163 = add i64 %2162, -4294967296
  %2164 = ashr exact i64 %2163, 32
  %2165 = getelementptr inbounds i32, ptr %7, i64 %2164
  %2166 = load i32, ptr %2165, align 4, !tbaa !5
  %2167 = getelementptr inbounds i32, ptr %6, i64 %2153
  %2168 = load i32, ptr %2167, align 4, !tbaa !5
  %2169 = add nsw i32 %2168, %2166
  store i32 %2169, ptr %2167, align 4, !tbaa !5
  br label %2188

2170:                                             ; preds = %2143, %2160
  %2171 = phi i32 [ %2155, %2160 ], [ %2144, %2143 ]
  %2172 = phi ptr [ %2154, %2160 ], [ %4, %2143 ]
  %2173 = phi i64 [ %2153, %2160 ], [ 0, %2143 ]
  %2174 = add nsw i32 %2171, 1
  store i32 %2174, ptr %2172, align 4, !tbaa !5
  %2175 = getelementptr inbounds i32, ptr %7, i64 %2173
  %2176 = load i32, ptr %2175, align 4, !tbaa !5
  %2177 = getelementptr inbounds i32, ptr %6, i64 %2173
  br label %2188

2178:                                             ; preds = %2152
  %2179 = icmp eq i32 %2155, %2158
  br i1 %2179, label %2180, label %2186

2180:                                             ; preds = %2178
  store i32 0, ptr %2154, align 4, !tbaa !5
  %2181 = getelementptr inbounds i32, ptr %8, i64 %2153
  %2182 = load i32, ptr %2181, align 4, !tbaa !5
  %2183 = getelementptr inbounds i32, ptr %6, i64 %2153
  store i32 %2182, ptr %2183, align 4, !tbaa !5
  %2184 = add nuw nsw i64 %2153, 1
  %2185 = icmp eq i64 %2184, %1896
  br i1 %2185, label %2193, label %2152, !llvm.loop !1372

2186:                                             ; preds = %2148, %2178
  %2187 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2188:                                             ; preds = %2161, %2170
  %2189 = phi ptr [ %2177, %2170 ], [ %2154, %2161 ]
  %2190 = phi i32 [ %2176, %2170 ], [ 1, %2161 ]
  %2191 = load i32, ptr %2189, align 4, !tbaa !5
  %2192 = add nsw i32 %2191, %2190
  store i32 %2192, ptr %2189, align 4, !tbaa !5
  br label %2193

2193:                                             ; preds = %2180, %2188, %2150, %2129
  %2194 = icmp eq i32 %2142, %5
  br i1 %2194, label %5579, label %2051, !llvm.loop !1373

2195:                                             ; preds = %1884
  %2196 = getelementptr inbounds i32, ptr %3, i64 %19
  %2197 = load i32, ptr %2196, align 4, !tbaa !5
  %2198 = icmp eq i32 %2197, 0
  %2199 = icmp sgt i32 %5, 0
  br i1 %2198, label %2209, label %2200

2200:                                             ; preds = %2195
  br i1 %2199, label %2201, label %5579

2201:                                             ; preds = %2200
  %2202 = icmp sgt i32 %13, 1
  %2203 = icmp sgt i32 %13, 0
  %2204 = add i32 %13, -2
  %2205 = zext i32 %2204 to i64
  %2206 = zext i32 %13 to i64
  %2207 = add nuw i32 %5, 1
  %2208 = icmp eq i32 %13, 1
  br label %2354

2209:                                             ; preds = %2195
  br i1 %2199, label %2210, label %5579

2210:                                             ; preds = %2209
  %2211 = icmp sgt i32 %13, 1
  %2212 = icmp sgt i32 %13, 0
  %2213 = add i32 %13, -2
  %2214 = zext i32 %2213 to i64
  %2215 = zext i32 %13 to i64
  %2216 = add nuw i32 %5, 1
  %2217 = icmp eq i32 %13, 1
  br label %2218

2218:                                             ; preds = %2210, %2352
  %2219 = phi i16 [ 0, %2210 ], [ %2302, %2352 ]
  %2220 = phi i32 [ 0, %2210 ], [ %2304, %2352 ]
  %2221 = phi double [ 0.000000e+00, %2210 ], [ %2303, %2352 ]
  %2222 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2211, label %2223, label %2292

2223:                                             ; preds = %2218, %2282
  %2224 = phi i32 [ %2291, %2282 ], [ 0, %2218 ]
  %2225 = phi i64 [ %2233, %2282 ], [ %2215, %2218 ]
  %2226 = phi i64 [ %2290, %2282 ], [ %2214, %2218 ]
  %2227 = phi i32 [ %2288, %2282 ], [ %2222, %2218 ]
  %2228 = sub i32 %2213, %2224
  %2229 = tail call i32 @llvm.smin.i32(i32 %2228, i32 0)
  %2230 = sub i32 %2228, %2229
  %2231 = zext i32 %2230 to i64
  %2232 = add nuw nsw i64 %2231, 1
  %2233 = add nsw i64 %2225, -1
  %2234 = icmp ult i32 %2230, 31
  br i1 %2234, label %2270, label %2235

2235:                                             ; preds = %2223
  %2236 = and i64 %2232, 8589934560
  %2237 = sub i64 %2226, %2236
  br label %2238

2238:                                             ; preds = %2238, %2235
  %2239 = phi i64 [ 0, %2235 ], [ %2262, %2238 ]
  %2240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2258, %2238 ]
  %2241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2259, %2238 ]
  %2242 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2260, %2238 ]
  %2243 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2235 ], [ %2261, %2238 ]
  %2244 = sub i64 %2226, %2239
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2244
  %2246 = getelementptr inbounds i32, ptr %2245, i64 -7
  %2247 = load <8 x i32>, ptr %2246, align 4, !tbaa !5
  %2248 = shufflevector <8 x i32> %2247, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2249 = getelementptr inbounds i32, ptr %2245, i64 -15
  %2250 = load <8 x i32>, ptr %2249, align 4, !tbaa !5
  %2251 = shufflevector <8 x i32> %2250, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2252 = getelementptr inbounds i32, ptr %2245, i64 -23
  %2253 = load <8 x i32>, ptr %2252, align 4, !tbaa !5
  %2254 = shufflevector <8 x i32> %2253, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2255 = getelementptr inbounds i32, ptr %2245, i64 -31
  %2256 = load <8 x i32>, ptr %2255, align 4, !tbaa !5
  %2257 = shufflevector <8 x i32> %2256, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2258 = mul <8 x i32> %2248, %2240
  %2259 = mul <8 x i32> %2251, %2241
  %2260 = mul <8 x i32> %2254, %2242
  %2261 = mul <8 x i32> %2257, %2243
  %2262 = add nuw i64 %2239, 32
  %2263 = icmp eq i64 %2262, %2236
  br i1 %2263, label %2264, label %2238, !llvm.loop !1374

2264:                                             ; preds = %2238
  %2265 = mul <8 x i32> %2259, %2258
  %2266 = mul <8 x i32> %2260, %2265
  %2267 = mul <8 x i32> %2261, %2266
  %2268 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2267)
  %2269 = icmp eq i64 %2232, %2236
  br i1 %2269, label %2282, label %2270

2270:                                             ; preds = %2223, %2264
  %2271 = phi i64 [ %2226, %2223 ], [ %2237, %2264 ]
  %2272 = phi i32 [ 1, %2223 ], [ %2268, %2264 ]
  br label %2273

2273:                                             ; preds = %2270, %2273
  %2274 = phi i64 [ %2279, %2273 ], [ %2271, %2270 ]
  %2275 = phi i32 [ %2278, %2273 ], [ %2272, %2270 ]
  %2276 = getelementptr inbounds i32, ptr %9, i64 %2274
  %2277 = load i32, ptr %2276, align 4, !tbaa !5
  %2278 = mul nsw i32 %2277, %2275
  %2279 = add nsw i64 %2274, -1
  %2280 = trunc i64 %2274 to i32
  %2281 = icmp sgt i32 %2280, 0
  br i1 %2281, label %2273, label %2282, !llvm.loop !1375

2282:                                             ; preds = %2273, %2264
  %2283 = phi i32 [ %2268, %2264 ], [ %2278, %2273 ]
  %2284 = and i64 %2233, 4294967295
  %2285 = getelementptr inbounds i32, ptr %6, i64 %2284
  %2286 = load i32, ptr %2285, align 4, !tbaa !5
  %2287 = mul nsw i32 %2286, %2283
  %2288 = add nsw i32 %2287, %2227
  %2289 = icmp sgt i64 %2225, 2
  %2290 = add nsw i64 %2226, -1
  %2291 = add i32 %2224, 1
  br i1 %2289, label %2223, label %2292, !llvm.loop !1376

2292:                                             ; preds = %2282, %2218
  %2293 = phi i32 [ %2222, %2218 ], [ %2288, %2282 ]
  %2294 = sext i32 %2293 to i64
  %2295 = getelementptr inbounds double, ptr %1876, i64 %2294
  %2296 = load double, ptr %2295, align 8, !tbaa !18
  %2297 = fptosi double %2296 to i16
  %2298 = sext i16 %2219 to i32
  %2299 = tail call i16 @llvm.abs.i16(i16 %2297, i1 false)
  %2300 = zext i16 %2299 to i32
  %2301 = icmp slt i32 %2298, %2300
  %2302 = select i1 %2301, i16 %2299, i16 %2219
  %2303 = fadd fast double %2221, 1.000000e+00
  %2304 = add nuw nsw i32 %2220, 1
  br i1 %2212, label %2305, label %2352

2305:                                             ; preds = %2292
  %2306 = load i32, ptr %4, align 4, !tbaa !5
  %2307 = load i32, ptr %12, align 4, !tbaa !5
  %2308 = add nsw i32 %2307, -1
  %2309 = icmp slt i32 %2306, %2308
  br i1 %2309, label %2329, label %2310

2310:                                             ; preds = %2305
  %2311 = icmp eq i32 %2306, %2308
  br i1 %2311, label %2312, label %2345

2312:                                             ; preds = %2310
  store i32 0, ptr %4, align 4, !tbaa !5
  %2313 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2313, ptr %6, align 4, !tbaa !5
  br i1 %2217, label %2352, label %2314

2314:                                             ; preds = %2312, %2339
  %2315 = phi i64 [ %2343, %2339 ], [ 1, %2312 ]
  %2316 = getelementptr inbounds i32, ptr %4, i64 %2315
  %2317 = load i32, ptr %2316, align 4, !tbaa !5
  %2318 = getelementptr inbounds i32, ptr %12, i64 %2315
  %2319 = load i32, ptr %2318, align 4, !tbaa !5
  %2320 = add nsw i32 %2319, -1
  %2321 = icmp slt i32 %2317, %2320
  br i1 %2321, label %2322, label %2337

2322:                                             ; preds = %2314
  br i1 %2309, label %2329, label %2323

2323:                                             ; preds = %2322
  %2324 = getelementptr inbounds i32, ptr %7, i64 %2315
  %2325 = load i32, ptr %2324, align 4, !tbaa !5
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2315
  %2327 = load i32, ptr %2326, align 4, !tbaa !5
  %2328 = add nsw i32 %2327, %2325
  store i32 %2328, ptr %2326, align 4, !tbaa !5
  br label %2347

2329:                                             ; preds = %2305, %2322
  %2330 = phi i32 [ %2317, %2322 ], [ %2306, %2305 ]
  %2331 = phi ptr [ %2316, %2322 ], [ %4, %2305 ]
  %2332 = phi i64 [ %2315, %2322 ], [ 0, %2305 ]
  %2333 = add nsw i32 %2330, 1
  store i32 %2333, ptr %2331, align 4, !tbaa !5
  %2334 = getelementptr inbounds i32, ptr %7, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !5
  %2336 = getelementptr inbounds i32, ptr %6, i64 %2332
  br label %2347

2337:                                             ; preds = %2314
  %2338 = icmp eq i32 %2317, %2320
  br i1 %2338, label %2339, label %2345

2339:                                             ; preds = %2337
  store i32 0, ptr %2316, align 4, !tbaa !5
  %2340 = getelementptr inbounds i32, ptr %8, i64 %2315
  %2341 = load i32, ptr %2340, align 4, !tbaa !5
  %2342 = getelementptr inbounds i32, ptr %6, i64 %2315
  store i32 %2341, ptr %2342, align 4, !tbaa !5
  %2343 = add nuw nsw i64 %2315, 1
  %2344 = icmp eq i64 %2343, %2215
  br i1 %2344, label %2352, label %2314, !llvm.loop !1377

2345:                                             ; preds = %2310, %2337
  store i16 %2302, ptr %1878, align 2, !tbaa !78
  %2346 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2347:                                             ; preds = %2323, %2329
  %2348 = phi ptr [ %2336, %2329 ], [ %2316, %2323 ]
  %2349 = phi i32 [ %2335, %2329 ], [ 1, %2323 ]
  %2350 = load i32, ptr %2348, align 4, !tbaa !5
  %2351 = add nsw i32 %2350, %2349
  store i32 %2351, ptr %2348, align 4, !tbaa !5
  br label %2352

2352:                                             ; preds = %2339, %2347, %2312, %2292
  %2353 = icmp eq i32 %2304, %5
  br i1 %2353, label %5574, label %2218, !llvm.loop !1378

2354:                                             ; preds = %2201, %2493
  %2355 = phi i16 [ 0, %2201 ], [ %2441, %2493 ]
  %2356 = phi i32 [ 0, %2201 ], [ %2442, %2493 ]
  %2357 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2202, label %2358, label %2427

2358:                                             ; preds = %2354, %2417
  %2359 = phi i32 [ %2426, %2417 ], [ 0, %2354 ]
  %2360 = phi i64 [ %2368, %2417 ], [ %2206, %2354 ]
  %2361 = phi i64 [ %2425, %2417 ], [ %2205, %2354 ]
  %2362 = phi i32 [ %2423, %2417 ], [ %2357, %2354 ]
  %2363 = sub i32 %2204, %2359
  %2364 = tail call i32 @llvm.smin.i32(i32 %2363, i32 0)
  %2365 = sub i32 %2363, %2364
  %2366 = zext i32 %2365 to i64
  %2367 = add nuw nsw i64 %2366, 1
  %2368 = add nsw i64 %2360, -1
  %2369 = icmp ult i32 %2365, 31
  br i1 %2369, label %2405, label %2370

2370:                                             ; preds = %2358
  %2371 = and i64 %2367, 8589934560
  %2372 = sub i64 %2361, %2371
  br label %2373

2373:                                             ; preds = %2373, %2370
  %2374 = phi i64 [ 0, %2370 ], [ %2397, %2373 ]
  %2375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2393, %2373 ]
  %2376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2394, %2373 ]
  %2377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2395, %2373 ]
  %2378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2396, %2373 ]
  %2379 = sub i64 %2361, %2374
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2381 = getelementptr inbounds i32, ptr %2380, i64 -7
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !5
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2380, i64 -15
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !5
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = getelementptr inbounds i32, ptr %2380, i64 -23
  %2388 = load <8 x i32>, ptr %2387, align 4, !tbaa !5
  %2389 = shufflevector <8 x i32> %2388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2390 = getelementptr inbounds i32, ptr %2380, i64 -31
  %2391 = load <8 x i32>, ptr %2390, align 4, !tbaa !5
  %2392 = shufflevector <8 x i32> %2391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2393 = mul <8 x i32> %2383, %2375
  %2394 = mul <8 x i32> %2386, %2376
  %2395 = mul <8 x i32> %2389, %2377
  %2396 = mul <8 x i32> %2392, %2378
  %2397 = add nuw i64 %2374, 32
  %2398 = icmp eq i64 %2397, %2371
  br i1 %2398, label %2399, label %2373, !llvm.loop !1379

2399:                                             ; preds = %2373
  %2400 = mul <8 x i32> %2394, %2393
  %2401 = mul <8 x i32> %2395, %2400
  %2402 = mul <8 x i32> %2396, %2401
  %2403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2402)
  %2404 = icmp eq i64 %2367, %2371
  br i1 %2404, label %2417, label %2405

2405:                                             ; preds = %2358, %2399
  %2406 = phi i64 [ %2361, %2358 ], [ %2372, %2399 ]
  %2407 = phi i32 [ 1, %2358 ], [ %2403, %2399 ]
  br label %2408

2408:                                             ; preds = %2405, %2408
  %2409 = phi i64 [ %2414, %2408 ], [ %2406, %2405 ]
  %2410 = phi i32 [ %2413, %2408 ], [ %2407, %2405 ]
  %2411 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2412 = load i32, ptr %2411, align 4, !tbaa !5
  %2413 = mul nsw i32 %2412, %2410
  %2414 = add nsw i64 %2409, -1
  %2415 = trunc i64 %2409 to i32
  %2416 = icmp sgt i32 %2415, 0
  br i1 %2416, label %2408, label %2417, !llvm.loop !1380

2417:                                             ; preds = %2408, %2399
  %2418 = phi i32 [ %2403, %2399 ], [ %2413, %2408 ]
  %2419 = and i64 %2368, 4294967295
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !5
  %2422 = mul nsw i32 %2421, %2418
  %2423 = add nsw i32 %2422, %2362
  %2424 = icmp sgt i64 %2360, 2
  %2425 = add nsw i64 %2361, -1
  %2426 = add i32 %2359, 1
  br i1 %2424, label %2358, label %2427, !llvm.loop !1381

2427:                                             ; preds = %2417, %2354
  %2428 = phi i32 [ %2357, %2354 ], [ %2423, %2417 ]
  %2429 = icmp slt i32 %2428, %5
  br i1 %2429, label %2432, label %2430

2430:                                             ; preds = %2427
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

2432:                                             ; preds = %2427
  %2433 = sext i32 %2428 to i64
  %2434 = getelementptr inbounds double, ptr %1876, i64 %2433
  %2435 = load double, ptr %2434, align 8, !tbaa !18
  %2436 = fptosi double %2435 to i16
  %2437 = sext i16 %2355 to i32
  %2438 = tail call i16 @llvm.abs.i16(i16 %2436, i1 false)
  %2439 = zext i16 %2438 to i32
  %2440 = icmp slt i32 %2437, %2439
  %2441 = select i1 %2440, i16 %2438, i16 %2355
  store i16 %2441, ptr %1878, align 2, !tbaa !78
  %2442 = add nuw nsw i32 %2356, 1
  br i1 %2203, label %2443, label %2493

2443:                                             ; preds = %2432
  %2444 = load i32, ptr %4, align 4, !tbaa !5
  %2445 = load i32, ptr %12, align 4, !tbaa !5
  %2446 = add nsw i32 %2445, -1
  %2447 = icmp slt i32 %2444, %2446
  br i1 %2447, label %2470, label %2448

2448:                                             ; preds = %2443
  %2449 = icmp eq i32 %2444, %2446
  br i1 %2449, label %2450, label %2486

2450:                                             ; preds = %2448
  store i32 0, ptr %4, align 4, !tbaa !5
  %2451 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2451, ptr %6, align 4, !tbaa !5
  br i1 %2208, label %2493, label %2452

2452:                                             ; preds = %2450, %2480
  %2453 = phi i64 [ %2484, %2480 ], [ 1, %2450 ]
  %2454 = getelementptr inbounds i32, ptr %4, i64 %2453
  %2455 = load i32, ptr %2454, align 4, !tbaa !5
  %2456 = getelementptr inbounds i32, ptr %12, i64 %2453
  %2457 = load i32, ptr %2456, align 4, !tbaa !5
  %2458 = add nsw i32 %2457, -1
  %2459 = icmp slt i32 %2455, %2458
  br i1 %2459, label %2460, label %2478

2460:                                             ; preds = %2452
  br i1 %2447, label %2470, label %2461

2461:                                             ; preds = %2460
  %2462 = shl i64 %2453, 32
  %2463 = add i64 %2462, -4294967296
  %2464 = ashr exact i64 %2463, 32
  %2465 = getelementptr inbounds i32, ptr %7, i64 %2464
  %2466 = load i32, ptr %2465, align 4, !tbaa !5
  %2467 = getelementptr inbounds i32, ptr %6, i64 %2453
  %2468 = load i32, ptr %2467, align 4, !tbaa !5
  %2469 = add nsw i32 %2468, %2466
  store i32 %2469, ptr %2467, align 4, !tbaa !5
  br label %2488

2470:                                             ; preds = %2443, %2460
  %2471 = phi i32 [ %2455, %2460 ], [ %2444, %2443 ]
  %2472 = phi ptr [ %2454, %2460 ], [ %4, %2443 ]
  %2473 = phi i64 [ %2453, %2460 ], [ 0, %2443 ]
  %2474 = add nsw i32 %2471, 1
  store i32 %2474, ptr %2472, align 4, !tbaa !5
  %2475 = getelementptr inbounds i32, ptr %7, i64 %2473
  %2476 = load i32, ptr %2475, align 4, !tbaa !5
  %2477 = getelementptr inbounds i32, ptr %6, i64 %2473
  br label %2488

2478:                                             ; preds = %2452
  %2479 = icmp eq i32 %2455, %2458
  br i1 %2479, label %2480, label %2486

2480:                                             ; preds = %2478
  store i32 0, ptr %2454, align 4, !tbaa !5
  %2481 = getelementptr inbounds i32, ptr %8, i64 %2453
  %2482 = load i32, ptr %2481, align 4, !tbaa !5
  %2483 = getelementptr inbounds i32, ptr %6, i64 %2453
  store i32 %2482, ptr %2483, align 4, !tbaa !5
  %2484 = add nuw nsw i64 %2453, 1
  %2485 = icmp eq i64 %2484, %2206
  br i1 %2485, label %2493, label %2452, !llvm.loop !1382

2486:                                             ; preds = %2448, %2478
  %2487 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2488:                                             ; preds = %2461, %2470
  %2489 = phi ptr [ %2477, %2470 ], [ %2454, %2461 ]
  %2490 = phi i32 [ %2476, %2470 ], [ 1, %2461 ]
  %2491 = load i32, ptr %2489, align 4, !tbaa !5
  %2492 = add nsw i32 %2491, %2490
  store i32 %2492, ptr %2489, align 4, !tbaa !5
  br label %2493

2493:                                             ; preds = %2480, %2488, %2450, %2432
  %2494 = icmp eq i32 %2442, %5
  br i1 %2494, label %5579, label %2354, !llvm.loop !1383

2495:                                             ; preds = %1884
  %2496 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2571, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

2497:                                             ; preds = %18
  %2498 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2499 = load ptr, ptr %2498, align 8, !tbaa !9
  %2500 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2501 = load ptr, ptr %2500, align 8, !tbaa !9
  store i32 0, ptr %2501, align 4, !tbaa !5
  %2502 = icmp eq i32 %13, 0
  br i1 %2502, label %2503, label %2509

2503:                                             ; preds = %2497
  %2504 = load double, ptr %2499, align 8, !tbaa !18
  %2505 = fptosi double %2504 to i32
  %2506 = icmp eq i32 %2505, 0
  %2507 = tail call i32 @llvm.abs.i32(i32 %2505, i1 true)
  %2508 = select i1 %2506, i32 0, i32 %2507
  store i32 %2508, ptr %2501, align 4, !tbaa !5
  br label %5579

2509:                                             ; preds = %2497
  switch i32 %1, label %3114 [
    i32 1, label %2510
    i32 0, label %2820
  ]

2510:                                             ; preds = %2509
  %2511 = getelementptr inbounds i32, ptr %3, i64 %19
  %2512 = load i32, ptr %2511, align 4, !tbaa !5
  %2513 = icmp eq i32 %2512, 0
  %2514 = icmp sgt i32 %5, 0
  br i1 %2513, label %2524, label %2515

2515:                                             ; preds = %2510
  br i1 %2514, label %2516, label %5579

2516:                                             ; preds = %2515
  %2517 = icmp sgt i32 %13, 1
  %2518 = icmp sgt i32 %13, 0
  %2519 = add i32 %13, -2
  %2520 = zext i32 %2519 to i64
  %2521 = zext i32 %13 to i64
  %2522 = add nuw i32 %5, 1
  %2523 = icmp eq i32 %13, 1
  br label %2676

2524:                                             ; preds = %2510
  br i1 %2514, label %2525, label %5579

2525:                                             ; preds = %2524
  %2526 = icmp sgt i32 %13, 1
  %2527 = icmp sgt i32 %13, 0
  %2528 = add i32 %13, -2
  %2529 = zext i32 %2528 to i64
  %2530 = zext i32 %13 to i64
  %2531 = add nuw i32 %5, 1
  %2532 = icmp eq i32 %13, 1
  br label %2533

2533:                                             ; preds = %2525, %2674
  %2534 = phi i32 [ 0, %2525 ], [ %2626, %2674 ]
  %2535 = phi double [ 0.000000e+00, %2525 ], [ %2625, %2674 ]
  %2536 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2526, label %2537, label %2606

2537:                                             ; preds = %2533, %2596
  %2538 = phi i32 [ %2605, %2596 ], [ 0, %2533 ]
  %2539 = phi i64 [ %2547, %2596 ], [ %2530, %2533 ]
  %2540 = phi i64 [ %2604, %2596 ], [ %2529, %2533 ]
  %2541 = phi i32 [ %2602, %2596 ], [ %2536, %2533 ]
  %2542 = sub i32 %2528, %2538
  %2543 = tail call i32 @llvm.smin.i32(i32 %2542, i32 0)
  %2544 = sub i32 %2542, %2543
  %2545 = zext i32 %2544 to i64
  %2546 = add nuw nsw i64 %2545, 1
  %2547 = add nsw i64 %2539, -1
  %2548 = icmp ult i32 %2544, 31
  br i1 %2548, label %2584, label %2549

2549:                                             ; preds = %2537
  %2550 = and i64 %2546, 8589934560
  %2551 = sub i64 %2540, %2550
  br label %2552

2552:                                             ; preds = %2552, %2549
  %2553 = phi i64 [ 0, %2549 ], [ %2576, %2552 ]
  %2554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2572, %2552 ]
  %2555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2573, %2552 ]
  %2556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2574, %2552 ]
  %2557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2549 ], [ %2575, %2552 ]
  %2558 = sub i64 %2540, %2553
  %2559 = getelementptr inbounds i32, ptr %9, i64 %2558
  %2560 = getelementptr inbounds i32, ptr %2559, i64 -7
  %2561 = load <8 x i32>, ptr %2560, align 4, !tbaa !5
  %2562 = shufflevector <8 x i32> %2561, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2563 = getelementptr inbounds i32, ptr %2559, i64 -15
  %2564 = load <8 x i32>, ptr %2563, align 4, !tbaa !5
  %2565 = shufflevector <8 x i32> %2564, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2566 = getelementptr inbounds i32, ptr %2559, i64 -23
  %2567 = load <8 x i32>, ptr %2566, align 4, !tbaa !5
  %2568 = shufflevector <8 x i32> %2567, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2569 = getelementptr inbounds i32, ptr %2559, i64 -31
  %2570 = load <8 x i32>, ptr %2569, align 4, !tbaa !5
  %2571 = shufflevector <8 x i32> %2570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2572 = mul <8 x i32> %2562, %2554
  %2573 = mul <8 x i32> %2565, %2555
  %2574 = mul <8 x i32> %2568, %2556
  %2575 = mul <8 x i32> %2571, %2557
  %2576 = add nuw i64 %2553, 32
  %2577 = icmp eq i64 %2576, %2550
  br i1 %2577, label %2578, label %2552, !llvm.loop !1384

2578:                                             ; preds = %2552
  %2579 = mul <8 x i32> %2573, %2572
  %2580 = mul <8 x i32> %2574, %2579
  %2581 = mul <8 x i32> %2575, %2580
  %2582 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2581)
  %2583 = icmp eq i64 %2546, %2550
  br i1 %2583, label %2596, label %2584

2584:                                             ; preds = %2537, %2578
  %2585 = phi i64 [ %2540, %2537 ], [ %2551, %2578 ]
  %2586 = phi i32 [ 1, %2537 ], [ %2582, %2578 ]
  br label %2587

2587:                                             ; preds = %2584, %2587
  %2588 = phi i64 [ %2593, %2587 ], [ %2585, %2584 ]
  %2589 = phi i32 [ %2592, %2587 ], [ %2586, %2584 ]
  %2590 = getelementptr inbounds i32, ptr %9, i64 %2588
  %2591 = load i32, ptr %2590, align 4, !tbaa !5
  %2592 = mul nsw i32 %2591, %2589
  %2593 = add nsw i64 %2588, -1
  %2594 = trunc i64 %2588 to i32
  %2595 = icmp sgt i32 %2594, 0
  br i1 %2595, label %2587, label %2596, !llvm.loop !1385

2596:                                             ; preds = %2587, %2578
  %2597 = phi i32 [ %2582, %2578 ], [ %2592, %2587 ]
  %2598 = and i64 %2547, 4294967295
  %2599 = getelementptr inbounds i32, ptr %6, i64 %2598
  %2600 = load i32, ptr %2599, align 4, !tbaa !5
  %2601 = mul nsw i32 %2600, %2597
  %2602 = add nsw i32 %2601, %2541
  %2603 = icmp sgt i64 %2539, 2
  %2604 = add nsw i64 %2540, -1
  %2605 = add i32 %2538, 1
  br i1 %2603, label %2537, label %2606, !llvm.loop !1386

2606:                                             ; preds = %2596, %2533
  %2607 = phi i32 [ %2536, %2533 ], [ %2602, %2596 ]
  %2608 = sext i32 %2607 to i64
  %2609 = getelementptr inbounds double, ptr %2, i64 %2608
  %2610 = load double, ptr %2609, align 8, !tbaa !18
  %2611 = getelementptr inbounds double, ptr %2499, i64 %2608
  %2612 = load double, ptr %2611, align 8, !tbaa !18
  %2613 = fptosi double %2612 to i32
  %2614 = load i32, ptr %2501, align 4, !tbaa !5
  %2615 = sitofp i32 %2614 to double
  %2616 = sitofp i32 %2613 to double
  %2617 = fmul fast double %2610, %2616
  %2618 = fcmp fast uge double %2617, 0.000000e+00
  %2619 = fneg fast double %2617
  %2620 = tail call fast double @llvm.fabs.f64(double %2617)
  %2621 = fcmp fast ole double %2620, %2615
  %2622 = select nnan ninf i1 %2618, double %2617, double %2619
  %2623 = select i1 %2621, double %2615, double %2622
  %2624 = fptosi double %2623 to i32
  store i32 %2624, ptr %2501, align 4, !tbaa !5
  %2625 = fadd fast double %2610, %2535
  %2626 = add nuw nsw i32 %2534, 1
  br i1 %2527, label %2627, label %2674

2627:                                             ; preds = %2606
  %2628 = load i32, ptr %4, align 4, !tbaa !5
  %2629 = load i32, ptr %12, align 4, !tbaa !5
  %2630 = add nsw i32 %2629, -1
  %2631 = icmp slt i32 %2628, %2630
  br i1 %2631, label %2651, label %2632

2632:                                             ; preds = %2627
  %2633 = icmp eq i32 %2628, %2630
  br i1 %2633, label %2634, label %2667

2634:                                             ; preds = %2632
  store i32 0, ptr %4, align 4, !tbaa !5
  %2635 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2635, ptr %6, align 4, !tbaa !5
  br i1 %2532, label %2674, label %2636

2636:                                             ; preds = %2634, %2661
  %2637 = phi i64 [ %2665, %2661 ], [ 1, %2634 ]
  %2638 = getelementptr inbounds i32, ptr %4, i64 %2637
  %2639 = load i32, ptr %2638, align 4, !tbaa !5
  %2640 = getelementptr inbounds i32, ptr %12, i64 %2637
  %2641 = load i32, ptr %2640, align 4, !tbaa !5
  %2642 = add nsw i32 %2641, -1
  %2643 = icmp slt i32 %2639, %2642
  br i1 %2643, label %2644, label %2659

2644:                                             ; preds = %2636
  br i1 %2631, label %2651, label %2645

2645:                                             ; preds = %2644
  %2646 = getelementptr inbounds i32, ptr %7, i64 %2637
  %2647 = load i32, ptr %2646, align 4, !tbaa !5
  %2648 = getelementptr inbounds i32, ptr %6, i64 %2637
  %2649 = load i32, ptr %2648, align 4, !tbaa !5
  %2650 = add nsw i32 %2649, %2647
  store i32 %2650, ptr %2648, align 4, !tbaa !5
  br label %2669

2651:                                             ; preds = %2627, %2644
  %2652 = phi i32 [ %2639, %2644 ], [ %2628, %2627 ]
  %2653 = phi ptr [ %2638, %2644 ], [ %4, %2627 ]
  %2654 = phi i64 [ %2637, %2644 ], [ 0, %2627 ]
  %2655 = add nsw i32 %2652, 1
  store i32 %2655, ptr %2653, align 4, !tbaa !5
  %2656 = getelementptr inbounds i32, ptr %7, i64 %2654
  %2657 = load i32, ptr %2656, align 4, !tbaa !5
  %2658 = getelementptr inbounds i32, ptr %6, i64 %2654
  br label %2669

2659:                                             ; preds = %2636
  %2660 = icmp eq i32 %2639, %2642
  br i1 %2660, label %2661, label %2667

2661:                                             ; preds = %2659
  store i32 0, ptr %2638, align 4, !tbaa !5
  %2662 = getelementptr inbounds i32, ptr %8, i64 %2637
  %2663 = load i32, ptr %2662, align 4, !tbaa !5
  %2664 = getelementptr inbounds i32, ptr %6, i64 %2637
  store i32 %2663, ptr %2664, align 4, !tbaa !5
  %2665 = add nuw nsw i64 %2637, 1
  %2666 = icmp eq i64 %2665, %2530
  br i1 %2666, label %2674, label %2636, !llvm.loop !1387

2667:                                             ; preds = %2632, %2659
  %2668 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2669:                                             ; preds = %2645, %2651
  %2670 = phi ptr [ %2658, %2651 ], [ %2638, %2645 ]
  %2671 = phi i32 [ %2657, %2651 ], [ 1, %2645 ]
  %2672 = load i32, ptr %2670, align 4, !tbaa !5
  %2673 = add nsw i32 %2672, %2671
  store i32 %2673, ptr %2670, align 4, !tbaa !5
  br label %2674

2674:                                             ; preds = %2661, %2669, %2634, %2606
  %2675 = icmp eq i32 %2626, %5
  br i1 %2675, label %5579, label %2533, !llvm.loop !1388

2676:                                             ; preds = %2516, %2818
  %2677 = phi i32 [ 0, %2516 ], [ %2767, %2818 ]
  %2678 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2517, label %2679, label %2748

2679:                                             ; preds = %2676, %2738
  %2680 = phi i32 [ %2747, %2738 ], [ 0, %2676 ]
  %2681 = phi i64 [ %2689, %2738 ], [ %2521, %2676 ]
  %2682 = phi i64 [ %2746, %2738 ], [ %2520, %2676 ]
  %2683 = phi i32 [ %2744, %2738 ], [ %2678, %2676 ]
  %2684 = sub i32 %2519, %2680
  %2685 = tail call i32 @llvm.smin.i32(i32 %2684, i32 0)
  %2686 = sub i32 %2684, %2685
  %2687 = zext i32 %2686 to i64
  %2688 = add nuw nsw i64 %2687, 1
  %2689 = add nsw i64 %2681, -1
  %2690 = icmp ult i32 %2686, 31
  br i1 %2690, label %2726, label %2691

2691:                                             ; preds = %2679
  %2692 = and i64 %2688, 8589934560
  %2693 = sub i64 %2682, %2692
  br label %2694

2694:                                             ; preds = %2694, %2691
  %2695 = phi i64 [ 0, %2691 ], [ %2718, %2694 ]
  %2696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2714, %2694 ]
  %2697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2715, %2694 ]
  %2698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2716, %2694 ]
  %2699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2691 ], [ %2717, %2694 ]
  %2700 = sub i64 %2682, %2695
  %2701 = getelementptr inbounds i32, ptr %11, i64 %2700
  %2702 = getelementptr inbounds i32, ptr %2701, i64 -7
  %2703 = load <8 x i32>, ptr %2702, align 4, !tbaa !5
  %2704 = shufflevector <8 x i32> %2703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2705 = getelementptr inbounds i32, ptr %2701, i64 -15
  %2706 = load <8 x i32>, ptr %2705, align 4, !tbaa !5
  %2707 = shufflevector <8 x i32> %2706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2708 = getelementptr inbounds i32, ptr %2701, i64 -23
  %2709 = load <8 x i32>, ptr %2708, align 4, !tbaa !5
  %2710 = shufflevector <8 x i32> %2709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2711 = getelementptr inbounds i32, ptr %2701, i64 -31
  %2712 = load <8 x i32>, ptr %2711, align 4, !tbaa !5
  %2713 = shufflevector <8 x i32> %2712, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2714 = mul <8 x i32> %2704, %2696
  %2715 = mul <8 x i32> %2707, %2697
  %2716 = mul <8 x i32> %2710, %2698
  %2717 = mul <8 x i32> %2713, %2699
  %2718 = add nuw i64 %2695, 32
  %2719 = icmp eq i64 %2718, %2692
  br i1 %2719, label %2720, label %2694, !llvm.loop !1389

2720:                                             ; preds = %2694
  %2721 = mul <8 x i32> %2715, %2714
  %2722 = mul <8 x i32> %2716, %2721
  %2723 = mul <8 x i32> %2717, %2722
  %2724 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2723)
  %2725 = icmp eq i64 %2688, %2692
  br i1 %2725, label %2738, label %2726

2726:                                             ; preds = %2679, %2720
  %2727 = phi i64 [ %2682, %2679 ], [ %2693, %2720 ]
  %2728 = phi i32 [ 1, %2679 ], [ %2724, %2720 ]
  br label %2729

2729:                                             ; preds = %2726, %2729
  %2730 = phi i64 [ %2735, %2729 ], [ %2727, %2726 ]
  %2731 = phi i32 [ %2734, %2729 ], [ %2728, %2726 ]
  %2732 = getelementptr inbounds i32, ptr %11, i64 %2730
  %2733 = load i32, ptr %2732, align 4, !tbaa !5
  %2734 = mul nsw i32 %2733, %2731
  %2735 = add nsw i64 %2730, -1
  %2736 = trunc i64 %2730 to i32
  %2737 = icmp sgt i32 %2736, 0
  br i1 %2737, label %2729, label %2738, !llvm.loop !1390

2738:                                             ; preds = %2729, %2720
  %2739 = phi i32 [ %2724, %2720 ], [ %2734, %2729 ]
  %2740 = and i64 %2689, 4294967295
  %2741 = getelementptr inbounds i32, ptr %6, i64 %2740
  %2742 = load i32, ptr %2741, align 4, !tbaa !5
  %2743 = mul nsw i32 %2742, %2739
  %2744 = add nsw i32 %2743, %2683
  %2745 = icmp sgt i64 %2681, 2
  %2746 = add nsw i64 %2682, -1
  %2747 = add i32 %2680, 1
  br i1 %2745, label %2679, label %2748, !llvm.loop !1391

2748:                                             ; preds = %2738, %2676
  %2749 = phi i32 [ %2678, %2676 ], [ %2744, %2738 ]
  %2750 = icmp slt i32 %2749, %5
  br i1 %2750, label %2753, label %2751

2751:                                             ; preds = %2748
  %2752 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

2753:                                             ; preds = %2748
  %2754 = sext i32 %2749 to i64
  %2755 = getelementptr inbounds double, ptr %2499, i64 %2754
  %2756 = load double, ptr %2755, align 8, !tbaa !18
  %2757 = fptosi double %2756 to i32
  %2758 = load i32, ptr %2501, align 4, !tbaa !5
  %2759 = sitofp i32 %2758 to double
  %2760 = sitofp i32 %2757 to double
  %2761 = icmp slt i32 %2757, 0
  %2762 = fneg fast double %2760
  %2763 = select i1 %2761, double %2762, double %2760
  %2764 = fcmp fast ole double %2763, %2759
  %2765 = select fast i1 %2764, double %2759, double %2763
  %2766 = fptosi double %2765 to i32
  store i32 %2766, ptr %2501, align 4, !tbaa !5
  %2767 = add nuw nsw i32 %2677, 1
  br i1 %2518, label %2768, label %2818

2768:                                             ; preds = %2753
  %2769 = load i32, ptr %4, align 4, !tbaa !5
  %2770 = load i32, ptr %12, align 4, !tbaa !5
  %2771 = add nsw i32 %2770, -1
  %2772 = icmp slt i32 %2769, %2771
  br i1 %2772, label %2795, label %2773

2773:                                             ; preds = %2768
  %2774 = icmp eq i32 %2769, %2771
  br i1 %2774, label %2775, label %2811

2775:                                             ; preds = %2773
  store i32 0, ptr %4, align 4, !tbaa !5
  %2776 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2776, ptr %6, align 4, !tbaa !5
  br i1 %2523, label %2818, label %2777

2777:                                             ; preds = %2775, %2805
  %2778 = phi i64 [ %2809, %2805 ], [ 1, %2775 ]
  %2779 = getelementptr inbounds i32, ptr %4, i64 %2778
  %2780 = load i32, ptr %2779, align 4, !tbaa !5
  %2781 = getelementptr inbounds i32, ptr %12, i64 %2778
  %2782 = load i32, ptr %2781, align 4, !tbaa !5
  %2783 = add nsw i32 %2782, -1
  %2784 = icmp slt i32 %2780, %2783
  br i1 %2784, label %2785, label %2803

2785:                                             ; preds = %2777
  br i1 %2772, label %2795, label %2786

2786:                                             ; preds = %2785
  %2787 = shl i64 %2778, 32
  %2788 = add i64 %2787, -4294967296
  %2789 = ashr exact i64 %2788, 32
  %2790 = getelementptr inbounds i32, ptr %7, i64 %2789
  %2791 = load i32, ptr %2790, align 4, !tbaa !5
  %2792 = getelementptr inbounds i32, ptr %6, i64 %2778
  %2793 = load i32, ptr %2792, align 4, !tbaa !5
  %2794 = add nsw i32 %2793, %2791
  store i32 %2794, ptr %2792, align 4, !tbaa !5
  br label %2813

2795:                                             ; preds = %2768, %2785
  %2796 = phi i32 [ %2780, %2785 ], [ %2769, %2768 ]
  %2797 = phi ptr [ %2779, %2785 ], [ %4, %2768 ]
  %2798 = phi i64 [ %2778, %2785 ], [ 0, %2768 ]
  %2799 = add nsw i32 %2796, 1
  store i32 %2799, ptr %2797, align 4, !tbaa !5
  %2800 = getelementptr inbounds i32, ptr %7, i64 %2798
  %2801 = load i32, ptr %2800, align 4, !tbaa !5
  %2802 = getelementptr inbounds i32, ptr %6, i64 %2798
  br label %2813

2803:                                             ; preds = %2777
  %2804 = icmp eq i32 %2780, %2783
  br i1 %2804, label %2805, label %2811

2805:                                             ; preds = %2803
  store i32 0, ptr %2779, align 4, !tbaa !5
  %2806 = getelementptr inbounds i32, ptr %8, i64 %2778
  %2807 = load i32, ptr %2806, align 4, !tbaa !5
  %2808 = getelementptr inbounds i32, ptr %6, i64 %2778
  store i32 %2807, ptr %2808, align 4, !tbaa !5
  %2809 = add nuw nsw i64 %2778, 1
  %2810 = icmp eq i64 %2809, %2521
  br i1 %2810, label %2818, label %2777, !llvm.loop !1392

2811:                                             ; preds = %2773, %2803
  %2812 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2813:                                             ; preds = %2786, %2795
  %2814 = phi ptr [ %2802, %2795 ], [ %2779, %2786 ]
  %2815 = phi i32 [ %2801, %2795 ], [ 1, %2786 ]
  %2816 = load i32, ptr %2814, align 4, !tbaa !5
  %2817 = add nsw i32 %2816, %2815
  store i32 %2817, ptr %2814, align 4, !tbaa !5
  br label %2818

2818:                                             ; preds = %2805, %2813, %2775, %2753
  %2819 = icmp eq i32 %2767, %5
  br i1 %2819, label %5579, label %2676, !llvm.loop !1393

2820:                                             ; preds = %2509
  %2821 = getelementptr inbounds i32, ptr %3, i64 %19
  %2822 = load i32, ptr %2821, align 4, !tbaa !5
  %2823 = icmp eq i32 %2822, 0
  %2824 = icmp sgt i32 %5, 0
  br i1 %2823, label %2834, label %2825

2825:                                             ; preds = %2820
  br i1 %2824, label %2826, label %5579

2826:                                             ; preds = %2825
  %2827 = icmp sgt i32 %13, 1
  %2828 = icmp sgt i32 %13, 0
  %2829 = add i32 %13, -2
  %2830 = zext i32 %2829 to i64
  %2831 = zext i32 %13 to i64
  %2832 = add nuw i32 %5, 1
  %2833 = icmp eq i32 %13, 1
  br label %2976

2834:                                             ; preds = %2820
  br i1 %2824, label %2835, label %5579

2835:                                             ; preds = %2834
  %2836 = icmp sgt i32 %13, 1
  %2837 = icmp sgt i32 %13, 0
  %2838 = add i32 %13, -2
  %2839 = zext i32 %2838 to i64
  %2840 = zext i32 %13 to i64
  %2841 = add nuw i32 %5, 1
  %2842 = icmp eq i32 %13, 1
  br label %2843

2843:                                             ; preds = %2835, %2974
  %2844 = phi i32 [ 0, %2835 ], [ %2926, %2974 ]
  %2845 = phi double [ 0.000000e+00, %2835 ], [ %2925, %2974 ]
  %2846 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2836, label %2847, label %2916

2847:                                             ; preds = %2843, %2906
  %2848 = phi i32 [ %2915, %2906 ], [ 0, %2843 ]
  %2849 = phi i64 [ %2857, %2906 ], [ %2840, %2843 ]
  %2850 = phi i64 [ %2914, %2906 ], [ %2839, %2843 ]
  %2851 = phi i32 [ %2912, %2906 ], [ %2846, %2843 ]
  %2852 = sub i32 %2838, %2848
  %2853 = tail call i32 @llvm.smin.i32(i32 %2852, i32 0)
  %2854 = sub i32 %2852, %2853
  %2855 = zext i32 %2854 to i64
  %2856 = add nuw nsw i64 %2855, 1
  %2857 = add nsw i64 %2849, -1
  %2858 = icmp ult i32 %2854, 31
  br i1 %2858, label %2894, label %2859

2859:                                             ; preds = %2847
  %2860 = and i64 %2856, 8589934560
  %2861 = sub i64 %2850, %2860
  br label %2862

2862:                                             ; preds = %2862, %2859
  %2863 = phi i64 [ 0, %2859 ], [ %2886, %2862 ]
  %2864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2882, %2862 ]
  %2865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2883, %2862 ]
  %2866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2884, %2862 ]
  %2867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2859 ], [ %2885, %2862 ]
  %2868 = sub i64 %2850, %2863
  %2869 = getelementptr inbounds i32, ptr %9, i64 %2868
  %2870 = getelementptr inbounds i32, ptr %2869, i64 -7
  %2871 = load <8 x i32>, ptr %2870, align 4, !tbaa !5
  %2872 = shufflevector <8 x i32> %2871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2873 = getelementptr inbounds i32, ptr %2869, i64 -15
  %2874 = load <8 x i32>, ptr %2873, align 4, !tbaa !5
  %2875 = shufflevector <8 x i32> %2874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2876 = getelementptr inbounds i32, ptr %2869, i64 -23
  %2877 = load <8 x i32>, ptr %2876, align 4, !tbaa !5
  %2878 = shufflevector <8 x i32> %2877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2879 = getelementptr inbounds i32, ptr %2869, i64 -31
  %2880 = load <8 x i32>, ptr %2879, align 4, !tbaa !5
  %2881 = shufflevector <8 x i32> %2880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2882 = mul <8 x i32> %2872, %2864
  %2883 = mul <8 x i32> %2875, %2865
  %2884 = mul <8 x i32> %2878, %2866
  %2885 = mul <8 x i32> %2881, %2867
  %2886 = add nuw i64 %2863, 32
  %2887 = icmp eq i64 %2886, %2860
  br i1 %2887, label %2888, label %2862, !llvm.loop !1394

2888:                                             ; preds = %2862
  %2889 = mul <8 x i32> %2883, %2882
  %2890 = mul <8 x i32> %2884, %2889
  %2891 = mul <8 x i32> %2885, %2890
  %2892 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2891)
  %2893 = icmp eq i64 %2856, %2860
  br i1 %2893, label %2906, label %2894

2894:                                             ; preds = %2847, %2888
  %2895 = phi i64 [ %2850, %2847 ], [ %2861, %2888 ]
  %2896 = phi i32 [ 1, %2847 ], [ %2892, %2888 ]
  br label %2897

2897:                                             ; preds = %2894, %2897
  %2898 = phi i64 [ %2903, %2897 ], [ %2895, %2894 ]
  %2899 = phi i32 [ %2902, %2897 ], [ %2896, %2894 ]
  %2900 = getelementptr inbounds i32, ptr %9, i64 %2898
  %2901 = load i32, ptr %2900, align 4, !tbaa !5
  %2902 = mul nsw i32 %2901, %2899
  %2903 = add nsw i64 %2898, -1
  %2904 = trunc i64 %2898 to i32
  %2905 = icmp sgt i32 %2904, 0
  br i1 %2905, label %2897, label %2906, !llvm.loop !1395

2906:                                             ; preds = %2897, %2888
  %2907 = phi i32 [ %2892, %2888 ], [ %2902, %2897 ]
  %2908 = and i64 %2857, 4294967295
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2908
  %2910 = load i32, ptr %2909, align 4, !tbaa !5
  %2911 = mul nsw i32 %2910, %2907
  %2912 = add nsw i32 %2911, %2851
  %2913 = icmp sgt i64 %2849, 2
  %2914 = add nsw i64 %2850, -1
  %2915 = add i32 %2848, 1
  br i1 %2913, label %2847, label %2916, !llvm.loop !1396

2916:                                             ; preds = %2906, %2843
  %2917 = phi i32 [ %2846, %2843 ], [ %2912, %2906 ]
  %2918 = sext i32 %2917 to i64
  %2919 = getelementptr inbounds double, ptr %2499, i64 %2918
  %2920 = load double, ptr %2919, align 8, !tbaa !18
  %2921 = fptosi double %2920 to i32
  %2922 = load i32, ptr %2501, align 4, !tbaa !5
  %2923 = tail call i32 @llvm.abs.i32(i32 %2921, i1 true)
  %2924 = tail call i32 @llvm.smax.i32(i32 %2922, i32 %2923)
  store i32 %2924, ptr %2501, align 4, !tbaa !5
  %2925 = fadd fast double %2845, 1.000000e+00
  %2926 = add nuw nsw i32 %2844, 1
  br i1 %2837, label %2927, label %2974

2927:                                             ; preds = %2916
  %2928 = load i32, ptr %4, align 4, !tbaa !5
  %2929 = load i32, ptr %12, align 4, !tbaa !5
  %2930 = add nsw i32 %2929, -1
  %2931 = icmp slt i32 %2928, %2930
  br i1 %2931, label %2951, label %2932

2932:                                             ; preds = %2927
  %2933 = icmp eq i32 %2928, %2930
  br i1 %2933, label %2934, label %2967

2934:                                             ; preds = %2932
  store i32 0, ptr %4, align 4, !tbaa !5
  %2935 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2935, ptr %6, align 4, !tbaa !5
  br i1 %2842, label %2974, label %2936

2936:                                             ; preds = %2934, %2961
  %2937 = phi i64 [ %2965, %2961 ], [ 1, %2934 ]
  %2938 = getelementptr inbounds i32, ptr %4, i64 %2937
  %2939 = load i32, ptr %2938, align 4, !tbaa !5
  %2940 = getelementptr inbounds i32, ptr %12, i64 %2937
  %2941 = load i32, ptr %2940, align 4, !tbaa !5
  %2942 = add nsw i32 %2941, -1
  %2943 = icmp slt i32 %2939, %2942
  br i1 %2943, label %2944, label %2959

2944:                                             ; preds = %2936
  br i1 %2931, label %2951, label %2945

2945:                                             ; preds = %2944
  %2946 = getelementptr inbounds i32, ptr %7, i64 %2937
  %2947 = load i32, ptr %2946, align 4, !tbaa !5
  %2948 = getelementptr inbounds i32, ptr %6, i64 %2937
  %2949 = load i32, ptr %2948, align 4, !tbaa !5
  %2950 = add nsw i32 %2949, %2947
  store i32 %2950, ptr %2948, align 4, !tbaa !5
  br label %2969

2951:                                             ; preds = %2927, %2944
  %2952 = phi i32 [ %2939, %2944 ], [ %2928, %2927 ]
  %2953 = phi ptr [ %2938, %2944 ], [ %4, %2927 ]
  %2954 = phi i64 [ %2937, %2944 ], [ 0, %2927 ]
  %2955 = add nsw i32 %2952, 1
  store i32 %2955, ptr %2953, align 4, !tbaa !5
  %2956 = getelementptr inbounds i32, ptr %7, i64 %2954
  %2957 = load i32, ptr %2956, align 4, !tbaa !5
  %2958 = getelementptr inbounds i32, ptr %6, i64 %2954
  br label %2969

2959:                                             ; preds = %2936
  %2960 = icmp eq i32 %2939, %2942
  br i1 %2960, label %2961, label %2967

2961:                                             ; preds = %2959
  store i32 0, ptr %2938, align 4, !tbaa !5
  %2962 = getelementptr inbounds i32, ptr %8, i64 %2937
  %2963 = load i32, ptr %2962, align 4, !tbaa !5
  %2964 = getelementptr inbounds i32, ptr %6, i64 %2937
  store i32 %2963, ptr %2964, align 4, !tbaa !5
  %2965 = add nuw nsw i64 %2937, 1
  %2966 = icmp eq i64 %2965, %2840
  br i1 %2966, label %2974, label %2936, !llvm.loop !1397

2967:                                             ; preds = %2932, %2959
  %2968 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

2969:                                             ; preds = %2945, %2951
  %2970 = phi ptr [ %2958, %2951 ], [ %2938, %2945 ]
  %2971 = phi i32 [ %2957, %2951 ], [ 1, %2945 ]
  %2972 = load i32, ptr %2970, align 4, !tbaa !5
  %2973 = add nsw i32 %2972, %2971
  store i32 %2973, ptr %2970, align 4, !tbaa !5
  br label %2974

2974:                                             ; preds = %2961, %2969, %2934, %2916
  %2975 = icmp eq i32 %2926, %5
  br i1 %2975, label %5579, label %2843, !llvm.loop !1398

2976:                                             ; preds = %2826, %3112
  %2977 = phi i32 [ 0, %2826 ], [ %3061, %3112 ]
  %2978 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2827, label %2979, label %3048

2979:                                             ; preds = %2976, %3038
  %2980 = phi i32 [ %3047, %3038 ], [ 0, %2976 ]
  %2981 = phi i64 [ %2989, %3038 ], [ %2831, %2976 ]
  %2982 = phi i64 [ %3046, %3038 ], [ %2830, %2976 ]
  %2983 = phi i32 [ %3044, %3038 ], [ %2978, %2976 ]
  %2984 = sub i32 %2829, %2980
  %2985 = tail call i32 @llvm.smin.i32(i32 %2984, i32 0)
  %2986 = sub i32 %2984, %2985
  %2987 = zext i32 %2986 to i64
  %2988 = add nuw nsw i64 %2987, 1
  %2989 = add nsw i64 %2981, -1
  %2990 = icmp ult i32 %2986, 31
  br i1 %2990, label %3026, label %2991

2991:                                             ; preds = %2979
  %2992 = and i64 %2988, 8589934560
  %2993 = sub i64 %2982, %2992
  br label %2994

2994:                                             ; preds = %2994, %2991
  %2995 = phi i64 [ 0, %2991 ], [ %3018, %2994 ]
  %2996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3014, %2994 ]
  %2997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3015, %2994 ]
  %2998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3016, %2994 ]
  %2999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2991 ], [ %3017, %2994 ]
  %3000 = sub i64 %2982, %2995
  %3001 = getelementptr inbounds i32, ptr %11, i64 %3000
  %3002 = getelementptr inbounds i32, ptr %3001, i64 -7
  %3003 = load <8 x i32>, ptr %3002, align 4, !tbaa !5
  %3004 = shufflevector <8 x i32> %3003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3005 = getelementptr inbounds i32, ptr %3001, i64 -15
  %3006 = load <8 x i32>, ptr %3005, align 4, !tbaa !5
  %3007 = shufflevector <8 x i32> %3006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3008 = getelementptr inbounds i32, ptr %3001, i64 -23
  %3009 = load <8 x i32>, ptr %3008, align 4, !tbaa !5
  %3010 = shufflevector <8 x i32> %3009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3011 = getelementptr inbounds i32, ptr %3001, i64 -31
  %3012 = load <8 x i32>, ptr %3011, align 4, !tbaa !5
  %3013 = shufflevector <8 x i32> %3012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3014 = mul <8 x i32> %3004, %2996
  %3015 = mul <8 x i32> %3007, %2997
  %3016 = mul <8 x i32> %3010, %2998
  %3017 = mul <8 x i32> %3013, %2999
  %3018 = add nuw i64 %2995, 32
  %3019 = icmp eq i64 %3018, %2992
  br i1 %3019, label %3020, label %2994, !llvm.loop !1399

3020:                                             ; preds = %2994
  %3021 = mul <8 x i32> %3015, %3014
  %3022 = mul <8 x i32> %3016, %3021
  %3023 = mul <8 x i32> %3017, %3022
  %3024 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3023)
  %3025 = icmp eq i64 %2988, %2992
  br i1 %3025, label %3038, label %3026

3026:                                             ; preds = %2979, %3020
  %3027 = phi i64 [ %2982, %2979 ], [ %2993, %3020 ]
  %3028 = phi i32 [ 1, %2979 ], [ %3024, %3020 ]
  br label %3029

3029:                                             ; preds = %3026, %3029
  %3030 = phi i64 [ %3035, %3029 ], [ %3027, %3026 ]
  %3031 = phi i32 [ %3034, %3029 ], [ %3028, %3026 ]
  %3032 = getelementptr inbounds i32, ptr %11, i64 %3030
  %3033 = load i32, ptr %3032, align 4, !tbaa !5
  %3034 = mul nsw i32 %3033, %3031
  %3035 = add nsw i64 %3030, -1
  %3036 = trunc i64 %3030 to i32
  %3037 = icmp sgt i32 %3036, 0
  br i1 %3037, label %3029, label %3038, !llvm.loop !1400

3038:                                             ; preds = %3029, %3020
  %3039 = phi i32 [ %3024, %3020 ], [ %3034, %3029 ]
  %3040 = and i64 %2989, 4294967295
  %3041 = getelementptr inbounds i32, ptr %6, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !5
  %3043 = mul nsw i32 %3042, %3039
  %3044 = add nsw i32 %3043, %2983
  %3045 = icmp sgt i64 %2981, 2
  %3046 = add nsw i64 %2982, -1
  %3047 = add i32 %2980, 1
  br i1 %3045, label %2979, label %3048, !llvm.loop !1401

3048:                                             ; preds = %3038, %2976
  %3049 = phi i32 [ %2978, %2976 ], [ %3044, %3038 ]
  %3050 = icmp slt i32 %3049, %5
  br i1 %3050, label %3053, label %3051

3051:                                             ; preds = %3048
  %3052 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3053:                                             ; preds = %3048
  %3054 = sext i32 %3049 to i64
  %3055 = getelementptr inbounds double, ptr %2499, i64 %3054
  %3056 = load double, ptr %3055, align 8, !tbaa !18
  %3057 = fptosi double %3056 to i32
  %3058 = load i32, ptr %2501, align 4, !tbaa !5
  %3059 = tail call i32 @llvm.abs.i32(i32 %3057, i1 true)
  %3060 = tail call i32 @llvm.smax.i32(i32 %3058, i32 %3059)
  store i32 %3060, ptr %2501, align 4, !tbaa !5
  %3061 = add nuw nsw i32 %2977, 1
  br i1 %2828, label %3062, label %3112

3062:                                             ; preds = %3053
  %3063 = load i32, ptr %4, align 4, !tbaa !5
  %3064 = load i32, ptr %12, align 4, !tbaa !5
  %3065 = add nsw i32 %3064, -1
  %3066 = icmp slt i32 %3063, %3065
  br i1 %3066, label %3089, label %3067

3067:                                             ; preds = %3062
  %3068 = icmp eq i32 %3063, %3065
  br i1 %3068, label %3069, label %3105

3069:                                             ; preds = %3067
  store i32 0, ptr %4, align 4, !tbaa !5
  %3070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3070, ptr %6, align 4, !tbaa !5
  br i1 %2833, label %3112, label %3071

3071:                                             ; preds = %3069, %3099
  %3072 = phi i64 [ %3103, %3099 ], [ 1, %3069 ]
  %3073 = getelementptr inbounds i32, ptr %4, i64 %3072
  %3074 = load i32, ptr %3073, align 4, !tbaa !5
  %3075 = getelementptr inbounds i32, ptr %12, i64 %3072
  %3076 = load i32, ptr %3075, align 4, !tbaa !5
  %3077 = add nsw i32 %3076, -1
  %3078 = icmp slt i32 %3074, %3077
  br i1 %3078, label %3079, label %3097

3079:                                             ; preds = %3071
  br i1 %3066, label %3089, label %3080

3080:                                             ; preds = %3079
  %3081 = shl i64 %3072, 32
  %3082 = add i64 %3081, -4294967296
  %3083 = ashr exact i64 %3082, 32
  %3084 = getelementptr inbounds i32, ptr %7, i64 %3083
  %3085 = load i32, ptr %3084, align 4, !tbaa !5
  %3086 = getelementptr inbounds i32, ptr %6, i64 %3072
  %3087 = load i32, ptr %3086, align 4, !tbaa !5
  %3088 = add nsw i32 %3087, %3085
  store i32 %3088, ptr %3086, align 4, !tbaa !5
  br label %3107

3089:                                             ; preds = %3062, %3079
  %3090 = phi i32 [ %3074, %3079 ], [ %3063, %3062 ]
  %3091 = phi ptr [ %3073, %3079 ], [ %4, %3062 ]
  %3092 = phi i64 [ %3072, %3079 ], [ 0, %3062 ]
  %3093 = add nsw i32 %3090, 1
  store i32 %3093, ptr %3091, align 4, !tbaa !5
  %3094 = getelementptr inbounds i32, ptr %7, i64 %3092
  %3095 = load i32, ptr %3094, align 4, !tbaa !5
  %3096 = getelementptr inbounds i32, ptr %6, i64 %3092
  br label %3107

3097:                                             ; preds = %3071
  %3098 = icmp eq i32 %3074, %3077
  br i1 %3098, label %3099, label %3105

3099:                                             ; preds = %3097
  store i32 0, ptr %3073, align 4, !tbaa !5
  %3100 = getelementptr inbounds i32, ptr %8, i64 %3072
  %3101 = load i32, ptr %3100, align 4, !tbaa !5
  %3102 = getelementptr inbounds i32, ptr %6, i64 %3072
  store i32 %3101, ptr %3102, align 4, !tbaa !5
  %3103 = add nuw nsw i64 %3072, 1
  %3104 = icmp eq i64 %3103, %2831
  br i1 %3104, label %3112, label %3071, !llvm.loop !1402

3105:                                             ; preds = %3067, %3097
  %3106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3107:                                             ; preds = %3080, %3089
  %3108 = phi ptr [ %3096, %3089 ], [ %3073, %3080 ]
  %3109 = phi i32 [ %3095, %3089 ], [ 1, %3080 ]
  %3110 = load i32, ptr %3108, align 4, !tbaa !5
  %3111 = add nsw i32 %3110, %3109
  store i32 %3111, ptr %3108, align 4, !tbaa !5
  br label %3112

3112:                                             ; preds = %3099, %3107, %3069, %3053
  %3113 = icmp eq i32 %3061, %5
  br i1 %3113, label %5579, label %2976, !llvm.loop !1403

3114:                                             ; preds = %2509
  %3115 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2576, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

3116:                                             ; preds = %18
  %3117 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3118 = load ptr, ptr %3117, align 8, !tbaa !9
  %3119 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3120 = load ptr, ptr %3119, align 8, !tbaa !9
  store i64 0, ptr %3120, align 8, !tbaa !120
  %3121 = icmp eq i32 %13, 0
  br i1 %3121, label %3122, label %3128

3122:                                             ; preds = %3116
  %3123 = load double, ptr %3118, align 8, !tbaa !18
  %3124 = fptosi double %3123 to i64
  %3125 = icmp eq i64 %3124, 0
  %3126 = tail call i64 @llvm.abs.i64(i64 %3124, i1 true)
  %3127 = select i1 %3125, i64 0, i64 %3126
  store i64 %3127, ptr %3120, align 8, !tbaa !120
  br label %5579

3128:                                             ; preds = %3116
  switch i32 %1, label %3733 [
    i32 1, label %3129
    i32 0, label %3439
  ]

3129:                                             ; preds = %3128
  %3130 = getelementptr inbounds i32, ptr %3, i64 %19
  %3131 = load i32, ptr %3130, align 4, !tbaa !5
  %3132 = icmp eq i32 %3131, 0
  %3133 = icmp sgt i32 %5, 0
  br i1 %3132, label %3143, label %3134

3134:                                             ; preds = %3129
  br i1 %3133, label %3135, label %5579

3135:                                             ; preds = %3134
  %3136 = icmp sgt i32 %13, 1
  %3137 = icmp sgt i32 %13, 0
  %3138 = add i32 %13, -2
  %3139 = zext i32 %3138 to i64
  %3140 = zext i32 %13 to i64
  %3141 = add nuw i32 %5, 1
  %3142 = icmp eq i32 %13, 1
  br label %3295

3143:                                             ; preds = %3129
  br i1 %3133, label %3144, label %5579

3144:                                             ; preds = %3143
  %3145 = icmp sgt i32 %13, 1
  %3146 = icmp sgt i32 %13, 0
  %3147 = add i32 %13, -2
  %3148 = zext i32 %3147 to i64
  %3149 = zext i32 %13 to i64
  %3150 = add nuw i32 %5, 1
  %3151 = icmp eq i32 %13, 1
  br label %3152

3152:                                             ; preds = %3144, %3293
  %3153 = phi i64 [ 0, %3144 ], [ %3243, %3293 ]
  %3154 = phi i32 [ 0, %3144 ], [ %3245, %3293 ]
  %3155 = phi double [ 0.000000e+00, %3144 ], [ %3244, %3293 ]
  %3156 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3145, label %3157, label %3226

3157:                                             ; preds = %3152, %3216
  %3158 = phi i32 [ %3225, %3216 ], [ 0, %3152 ]
  %3159 = phi i64 [ %3167, %3216 ], [ %3149, %3152 ]
  %3160 = phi i64 [ %3224, %3216 ], [ %3148, %3152 ]
  %3161 = phi i32 [ %3222, %3216 ], [ %3156, %3152 ]
  %3162 = sub i32 %3147, %3158
  %3163 = tail call i32 @llvm.smin.i32(i32 %3162, i32 0)
  %3164 = sub i32 %3162, %3163
  %3165 = zext i32 %3164 to i64
  %3166 = add nuw nsw i64 %3165, 1
  %3167 = add nsw i64 %3159, -1
  %3168 = icmp ult i32 %3164, 31
  br i1 %3168, label %3204, label %3169

3169:                                             ; preds = %3157
  %3170 = and i64 %3166, 8589934560
  %3171 = sub i64 %3160, %3170
  br label %3172

3172:                                             ; preds = %3172, %3169
  %3173 = phi i64 [ 0, %3169 ], [ %3196, %3172 ]
  %3174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3192, %3172 ]
  %3175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3193, %3172 ]
  %3176 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3194, %3172 ]
  %3177 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3169 ], [ %3195, %3172 ]
  %3178 = sub i64 %3160, %3173
  %3179 = getelementptr inbounds i32, ptr %9, i64 %3178
  %3180 = getelementptr inbounds i32, ptr %3179, i64 -7
  %3181 = load <8 x i32>, ptr %3180, align 4, !tbaa !5
  %3182 = shufflevector <8 x i32> %3181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3183 = getelementptr inbounds i32, ptr %3179, i64 -15
  %3184 = load <8 x i32>, ptr %3183, align 4, !tbaa !5
  %3185 = shufflevector <8 x i32> %3184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3186 = getelementptr inbounds i32, ptr %3179, i64 -23
  %3187 = load <8 x i32>, ptr %3186, align 4, !tbaa !5
  %3188 = shufflevector <8 x i32> %3187, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3189 = getelementptr inbounds i32, ptr %3179, i64 -31
  %3190 = load <8 x i32>, ptr %3189, align 4, !tbaa !5
  %3191 = shufflevector <8 x i32> %3190, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3192 = mul <8 x i32> %3182, %3174
  %3193 = mul <8 x i32> %3185, %3175
  %3194 = mul <8 x i32> %3188, %3176
  %3195 = mul <8 x i32> %3191, %3177
  %3196 = add nuw i64 %3173, 32
  %3197 = icmp eq i64 %3196, %3170
  br i1 %3197, label %3198, label %3172, !llvm.loop !1404

3198:                                             ; preds = %3172
  %3199 = mul <8 x i32> %3193, %3192
  %3200 = mul <8 x i32> %3194, %3199
  %3201 = mul <8 x i32> %3195, %3200
  %3202 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3201)
  %3203 = icmp eq i64 %3166, %3170
  br i1 %3203, label %3216, label %3204

3204:                                             ; preds = %3157, %3198
  %3205 = phi i64 [ %3160, %3157 ], [ %3171, %3198 ]
  %3206 = phi i32 [ 1, %3157 ], [ %3202, %3198 ]
  br label %3207

3207:                                             ; preds = %3204, %3207
  %3208 = phi i64 [ %3213, %3207 ], [ %3205, %3204 ]
  %3209 = phi i32 [ %3212, %3207 ], [ %3206, %3204 ]
  %3210 = getelementptr inbounds i32, ptr %9, i64 %3208
  %3211 = load i32, ptr %3210, align 4, !tbaa !5
  %3212 = mul nsw i32 %3211, %3209
  %3213 = add nsw i64 %3208, -1
  %3214 = trunc i64 %3208 to i32
  %3215 = icmp sgt i32 %3214, 0
  br i1 %3215, label %3207, label %3216, !llvm.loop !1405

3216:                                             ; preds = %3207, %3198
  %3217 = phi i32 [ %3202, %3198 ], [ %3212, %3207 ]
  %3218 = and i64 %3167, 4294967295
  %3219 = getelementptr inbounds i32, ptr %6, i64 %3218
  %3220 = load i32, ptr %3219, align 4, !tbaa !5
  %3221 = mul nsw i32 %3220, %3217
  %3222 = add nsw i32 %3221, %3161
  %3223 = icmp sgt i64 %3159, 2
  %3224 = add nsw i64 %3160, -1
  %3225 = add i32 %3158, 1
  br i1 %3223, label %3157, label %3226, !llvm.loop !1406

3226:                                             ; preds = %3216, %3152
  %3227 = phi i32 [ %3156, %3152 ], [ %3222, %3216 ]
  %3228 = sext i32 %3227 to i64
  %3229 = getelementptr inbounds double, ptr %2, i64 %3228
  %3230 = load double, ptr %3229, align 8, !tbaa !18
  %3231 = getelementptr inbounds double, ptr %3118, i64 %3228
  %3232 = load double, ptr %3231, align 8, !tbaa !18
  %3233 = fptosi double %3232 to i64
  %3234 = sitofp i64 %3153 to double
  %3235 = sitofp i64 %3233 to double
  %3236 = fmul fast double %3230, %3235
  %3237 = fcmp fast uge double %3236, 0.000000e+00
  %3238 = fneg fast double %3236
  %3239 = tail call fast double @llvm.fabs.f64(double %3236)
  %3240 = fcmp fast ole double %3239, %3234
  %3241 = select nnan ninf i1 %3237, double %3236, double %3238
  %3242 = select i1 %3240, double %3234, double %3241
  %3243 = fptosi double %3242 to i64
  %3244 = fadd fast double %3230, %3155
  %3245 = add nuw nsw i32 %3154, 1
  br i1 %3146, label %3246, label %3293

3246:                                             ; preds = %3226
  %3247 = load i32, ptr %4, align 4, !tbaa !5
  %3248 = load i32, ptr %12, align 4, !tbaa !5
  %3249 = add nsw i32 %3248, -1
  %3250 = icmp slt i32 %3247, %3249
  br i1 %3250, label %3270, label %3251

3251:                                             ; preds = %3246
  %3252 = icmp eq i32 %3247, %3249
  br i1 %3252, label %3253, label %3286

3253:                                             ; preds = %3251
  store i32 0, ptr %4, align 4, !tbaa !5
  %3254 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3254, ptr %6, align 4, !tbaa !5
  br i1 %3151, label %3293, label %3255

3255:                                             ; preds = %3253, %3280
  %3256 = phi i64 [ %3284, %3280 ], [ 1, %3253 ]
  %3257 = getelementptr inbounds i32, ptr %4, i64 %3256
  %3258 = load i32, ptr %3257, align 4, !tbaa !5
  %3259 = getelementptr inbounds i32, ptr %12, i64 %3256
  %3260 = load i32, ptr %3259, align 4, !tbaa !5
  %3261 = add nsw i32 %3260, -1
  %3262 = icmp slt i32 %3258, %3261
  br i1 %3262, label %3263, label %3278

3263:                                             ; preds = %3255
  br i1 %3250, label %3270, label %3264

3264:                                             ; preds = %3263
  %3265 = getelementptr inbounds i32, ptr %7, i64 %3256
  %3266 = load i32, ptr %3265, align 4, !tbaa !5
  %3267 = getelementptr inbounds i32, ptr %6, i64 %3256
  %3268 = load i32, ptr %3267, align 4, !tbaa !5
  %3269 = add nsw i32 %3268, %3266
  store i32 %3269, ptr %3267, align 4, !tbaa !5
  br label %3288

3270:                                             ; preds = %3246, %3263
  %3271 = phi i32 [ %3258, %3263 ], [ %3247, %3246 ]
  %3272 = phi ptr [ %3257, %3263 ], [ %4, %3246 ]
  %3273 = phi i64 [ %3256, %3263 ], [ 0, %3246 ]
  %3274 = add nsw i32 %3271, 1
  store i32 %3274, ptr %3272, align 4, !tbaa !5
  %3275 = getelementptr inbounds i32, ptr %7, i64 %3273
  %3276 = load i32, ptr %3275, align 4, !tbaa !5
  %3277 = getelementptr inbounds i32, ptr %6, i64 %3273
  br label %3288

3278:                                             ; preds = %3255
  %3279 = icmp eq i32 %3258, %3261
  br i1 %3279, label %3280, label %3286

3280:                                             ; preds = %3278
  store i32 0, ptr %3257, align 4, !tbaa !5
  %3281 = getelementptr inbounds i32, ptr %8, i64 %3256
  %3282 = load i32, ptr %3281, align 4, !tbaa !5
  %3283 = getelementptr inbounds i32, ptr %6, i64 %3256
  store i32 %3282, ptr %3283, align 4, !tbaa !5
  %3284 = add nuw nsw i64 %3256, 1
  %3285 = icmp eq i64 %3284, %3149
  br i1 %3285, label %3293, label %3255, !llvm.loop !1407

3286:                                             ; preds = %3251, %3278
  store i64 %3243, ptr %3120, align 8, !tbaa !120
  %3287 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3288:                                             ; preds = %3264, %3270
  %3289 = phi ptr [ %3277, %3270 ], [ %3257, %3264 ]
  %3290 = phi i32 [ %3276, %3270 ], [ 1, %3264 ]
  %3291 = load i32, ptr %3289, align 4, !tbaa !5
  %3292 = add nsw i32 %3291, %3290
  store i32 %3292, ptr %3289, align 4, !tbaa !5
  br label %3293

3293:                                             ; preds = %3280, %3288, %3253, %3226
  %3294 = icmp eq i32 %3245, %5
  br i1 %3294, label %5575, label %3152, !llvm.loop !1408

3295:                                             ; preds = %3135, %3437
  %3296 = phi i64 [ 0, %3135 ], [ %3385, %3437 ]
  %3297 = phi i32 [ 0, %3135 ], [ %3386, %3437 ]
  %3298 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3136, label %3299, label %3368

3299:                                             ; preds = %3295, %3358
  %3300 = phi i32 [ %3367, %3358 ], [ 0, %3295 ]
  %3301 = phi i64 [ %3309, %3358 ], [ %3140, %3295 ]
  %3302 = phi i64 [ %3366, %3358 ], [ %3139, %3295 ]
  %3303 = phi i32 [ %3364, %3358 ], [ %3298, %3295 ]
  %3304 = sub i32 %3138, %3300
  %3305 = tail call i32 @llvm.smin.i32(i32 %3304, i32 0)
  %3306 = sub i32 %3304, %3305
  %3307 = zext i32 %3306 to i64
  %3308 = add nuw nsw i64 %3307, 1
  %3309 = add nsw i64 %3301, -1
  %3310 = icmp ult i32 %3306, 31
  br i1 %3310, label %3346, label %3311

3311:                                             ; preds = %3299
  %3312 = and i64 %3308, 8589934560
  %3313 = sub i64 %3302, %3312
  br label %3314

3314:                                             ; preds = %3314, %3311
  %3315 = phi i64 [ 0, %3311 ], [ %3338, %3314 ]
  %3316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3334, %3314 ]
  %3317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3335, %3314 ]
  %3318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3336, %3314 ]
  %3319 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3311 ], [ %3337, %3314 ]
  %3320 = sub i64 %3302, %3315
  %3321 = getelementptr inbounds i32, ptr %11, i64 %3320
  %3322 = getelementptr inbounds i32, ptr %3321, i64 -7
  %3323 = load <8 x i32>, ptr %3322, align 4, !tbaa !5
  %3324 = shufflevector <8 x i32> %3323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3325 = getelementptr inbounds i32, ptr %3321, i64 -15
  %3326 = load <8 x i32>, ptr %3325, align 4, !tbaa !5
  %3327 = shufflevector <8 x i32> %3326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3328 = getelementptr inbounds i32, ptr %3321, i64 -23
  %3329 = load <8 x i32>, ptr %3328, align 4, !tbaa !5
  %3330 = shufflevector <8 x i32> %3329, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3331 = getelementptr inbounds i32, ptr %3321, i64 -31
  %3332 = load <8 x i32>, ptr %3331, align 4, !tbaa !5
  %3333 = shufflevector <8 x i32> %3332, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3334 = mul <8 x i32> %3324, %3316
  %3335 = mul <8 x i32> %3327, %3317
  %3336 = mul <8 x i32> %3330, %3318
  %3337 = mul <8 x i32> %3333, %3319
  %3338 = add nuw i64 %3315, 32
  %3339 = icmp eq i64 %3338, %3312
  br i1 %3339, label %3340, label %3314, !llvm.loop !1409

3340:                                             ; preds = %3314
  %3341 = mul <8 x i32> %3335, %3334
  %3342 = mul <8 x i32> %3336, %3341
  %3343 = mul <8 x i32> %3337, %3342
  %3344 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3343)
  %3345 = icmp eq i64 %3308, %3312
  br i1 %3345, label %3358, label %3346

3346:                                             ; preds = %3299, %3340
  %3347 = phi i64 [ %3302, %3299 ], [ %3313, %3340 ]
  %3348 = phi i32 [ 1, %3299 ], [ %3344, %3340 ]
  br label %3349

3349:                                             ; preds = %3346, %3349
  %3350 = phi i64 [ %3355, %3349 ], [ %3347, %3346 ]
  %3351 = phi i32 [ %3354, %3349 ], [ %3348, %3346 ]
  %3352 = getelementptr inbounds i32, ptr %11, i64 %3350
  %3353 = load i32, ptr %3352, align 4, !tbaa !5
  %3354 = mul nsw i32 %3353, %3351
  %3355 = add nsw i64 %3350, -1
  %3356 = trunc i64 %3350 to i32
  %3357 = icmp sgt i32 %3356, 0
  br i1 %3357, label %3349, label %3358, !llvm.loop !1410

3358:                                             ; preds = %3349, %3340
  %3359 = phi i32 [ %3344, %3340 ], [ %3354, %3349 ]
  %3360 = and i64 %3309, 4294967295
  %3361 = getelementptr inbounds i32, ptr %6, i64 %3360
  %3362 = load i32, ptr %3361, align 4, !tbaa !5
  %3363 = mul nsw i32 %3362, %3359
  %3364 = add nsw i32 %3363, %3303
  %3365 = icmp sgt i64 %3301, 2
  %3366 = add nsw i64 %3302, -1
  %3367 = add i32 %3300, 1
  br i1 %3365, label %3299, label %3368, !llvm.loop !1411

3368:                                             ; preds = %3358, %3295
  %3369 = phi i32 [ %3298, %3295 ], [ %3364, %3358 ]
  %3370 = icmp slt i32 %3369, %5
  br i1 %3370, label %3373, label %3371

3371:                                             ; preds = %3368
  %3372 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3373:                                             ; preds = %3368
  %3374 = sext i32 %3369 to i64
  %3375 = getelementptr inbounds double, ptr %3118, i64 %3374
  %3376 = load double, ptr %3375, align 8, !tbaa !18
  %3377 = fptosi double %3376 to i64
  %3378 = sitofp i64 %3296 to double
  %3379 = sitofp i64 %3377 to double
  %3380 = icmp slt i64 %3377, 0
  %3381 = fneg fast double %3379
  %3382 = select i1 %3380, double %3381, double %3379
  %3383 = fcmp fast ole double %3382, %3378
  %3384 = select fast i1 %3383, double %3378, double %3382
  %3385 = fptosi double %3384 to i64
  store i64 %3385, ptr %3120, align 8, !tbaa !120
  %3386 = add nuw nsw i32 %3297, 1
  br i1 %3137, label %3387, label %3437

3387:                                             ; preds = %3373
  %3388 = load i32, ptr %4, align 4, !tbaa !5
  %3389 = load i32, ptr %12, align 4, !tbaa !5
  %3390 = add nsw i32 %3389, -1
  %3391 = icmp slt i32 %3388, %3390
  br i1 %3391, label %3414, label %3392

3392:                                             ; preds = %3387
  %3393 = icmp eq i32 %3388, %3390
  br i1 %3393, label %3394, label %3430

3394:                                             ; preds = %3392
  store i32 0, ptr %4, align 4, !tbaa !5
  %3395 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3395, ptr %6, align 4, !tbaa !5
  br i1 %3142, label %3437, label %3396

3396:                                             ; preds = %3394, %3424
  %3397 = phi i64 [ %3428, %3424 ], [ 1, %3394 ]
  %3398 = getelementptr inbounds i32, ptr %4, i64 %3397
  %3399 = load i32, ptr %3398, align 4, !tbaa !5
  %3400 = getelementptr inbounds i32, ptr %12, i64 %3397
  %3401 = load i32, ptr %3400, align 4, !tbaa !5
  %3402 = add nsw i32 %3401, -1
  %3403 = icmp slt i32 %3399, %3402
  br i1 %3403, label %3404, label %3422

3404:                                             ; preds = %3396
  br i1 %3391, label %3414, label %3405

3405:                                             ; preds = %3404
  %3406 = shl i64 %3397, 32
  %3407 = add i64 %3406, -4294967296
  %3408 = ashr exact i64 %3407, 32
  %3409 = getelementptr inbounds i32, ptr %7, i64 %3408
  %3410 = load i32, ptr %3409, align 4, !tbaa !5
  %3411 = getelementptr inbounds i32, ptr %6, i64 %3397
  %3412 = load i32, ptr %3411, align 4, !tbaa !5
  %3413 = add nsw i32 %3412, %3410
  store i32 %3413, ptr %3411, align 4, !tbaa !5
  br label %3432

3414:                                             ; preds = %3387, %3404
  %3415 = phi i32 [ %3399, %3404 ], [ %3388, %3387 ]
  %3416 = phi ptr [ %3398, %3404 ], [ %4, %3387 ]
  %3417 = phi i64 [ %3397, %3404 ], [ 0, %3387 ]
  %3418 = add nsw i32 %3415, 1
  store i32 %3418, ptr %3416, align 4, !tbaa !5
  %3419 = getelementptr inbounds i32, ptr %7, i64 %3417
  %3420 = load i32, ptr %3419, align 4, !tbaa !5
  %3421 = getelementptr inbounds i32, ptr %6, i64 %3417
  br label %3432

3422:                                             ; preds = %3396
  %3423 = icmp eq i32 %3399, %3402
  br i1 %3423, label %3424, label %3430

3424:                                             ; preds = %3422
  store i32 0, ptr %3398, align 4, !tbaa !5
  %3425 = getelementptr inbounds i32, ptr %8, i64 %3397
  %3426 = load i32, ptr %3425, align 4, !tbaa !5
  %3427 = getelementptr inbounds i32, ptr %6, i64 %3397
  store i32 %3426, ptr %3427, align 4, !tbaa !5
  %3428 = add nuw nsw i64 %3397, 1
  %3429 = icmp eq i64 %3428, %3140
  br i1 %3429, label %3437, label %3396, !llvm.loop !1412

3430:                                             ; preds = %3392, %3422
  %3431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3432:                                             ; preds = %3405, %3414
  %3433 = phi ptr [ %3421, %3414 ], [ %3398, %3405 ]
  %3434 = phi i32 [ %3420, %3414 ], [ 1, %3405 ]
  %3435 = load i32, ptr %3433, align 4, !tbaa !5
  %3436 = add nsw i32 %3435, %3434
  store i32 %3436, ptr %3433, align 4, !tbaa !5
  br label %3437

3437:                                             ; preds = %3424, %3432, %3394, %3373
  %3438 = icmp eq i32 %3386, %5
  br i1 %3438, label %5579, label %3295, !llvm.loop !1413

3439:                                             ; preds = %3128
  %3440 = getelementptr inbounds i32, ptr %3, i64 %19
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = icmp eq i32 %3441, 0
  %3443 = icmp sgt i32 %5, 0
  br i1 %3442, label %3453, label %3444

3444:                                             ; preds = %3439
  br i1 %3443, label %3445, label %5579

3445:                                             ; preds = %3444
  %3446 = icmp sgt i32 %13, 1
  %3447 = icmp sgt i32 %13, 0
  %3448 = add i32 %13, -2
  %3449 = zext i32 %3448 to i64
  %3450 = zext i32 %13 to i64
  %3451 = add nuw i32 %5, 1
  %3452 = icmp eq i32 %13, 1
  br label %3595

3453:                                             ; preds = %3439
  br i1 %3443, label %3454, label %5579

3454:                                             ; preds = %3453
  %3455 = icmp sgt i32 %13, 1
  %3456 = icmp sgt i32 %13, 0
  %3457 = add i32 %13, -2
  %3458 = zext i32 %3457 to i64
  %3459 = zext i32 %13 to i64
  %3460 = add nuw i32 %5, 1
  %3461 = icmp eq i32 %13, 1
  br label %3462

3462:                                             ; preds = %3454, %3593
  %3463 = phi i64 [ 0, %3454 ], [ %3543, %3593 ]
  %3464 = phi i32 [ 0, %3454 ], [ %3545, %3593 ]
  %3465 = phi double [ 0.000000e+00, %3454 ], [ %3544, %3593 ]
  %3466 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3455, label %3467, label %3536

3467:                                             ; preds = %3462, %3526
  %3468 = phi i32 [ %3535, %3526 ], [ 0, %3462 ]
  %3469 = phi i64 [ %3477, %3526 ], [ %3459, %3462 ]
  %3470 = phi i64 [ %3534, %3526 ], [ %3458, %3462 ]
  %3471 = phi i32 [ %3532, %3526 ], [ %3466, %3462 ]
  %3472 = sub i32 %3457, %3468
  %3473 = tail call i32 @llvm.smin.i32(i32 %3472, i32 0)
  %3474 = sub i32 %3472, %3473
  %3475 = zext i32 %3474 to i64
  %3476 = add nuw nsw i64 %3475, 1
  %3477 = add nsw i64 %3469, -1
  %3478 = icmp ult i32 %3474, 31
  br i1 %3478, label %3514, label %3479

3479:                                             ; preds = %3467
  %3480 = and i64 %3476, 8589934560
  %3481 = sub i64 %3470, %3480
  br label %3482

3482:                                             ; preds = %3482, %3479
  %3483 = phi i64 [ 0, %3479 ], [ %3506, %3482 ]
  %3484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3502, %3482 ]
  %3485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3503, %3482 ]
  %3486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3504, %3482 ]
  %3487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3479 ], [ %3505, %3482 ]
  %3488 = sub i64 %3470, %3483
  %3489 = getelementptr inbounds i32, ptr %9, i64 %3488
  %3490 = getelementptr inbounds i32, ptr %3489, i64 -7
  %3491 = load <8 x i32>, ptr %3490, align 4, !tbaa !5
  %3492 = shufflevector <8 x i32> %3491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3493 = getelementptr inbounds i32, ptr %3489, i64 -15
  %3494 = load <8 x i32>, ptr %3493, align 4, !tbaa !5
  %3495 = shufflevector <8 x i32> %3494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3496 = getelementptr inbounds i32, ptr %3489, i64 -23
  %3497 = load <8 x i32>, ptr %3496, align 4, !tbaa !5
  %3498 = shufflevector <8 x i32> %3497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3499 = getelementptr inbounds i32, ptr %3489, i64 -31
  %3500 = load <8 x i32>, ptr %3499, align 4, !tbaa !5
  %3501 = shufflevector <8 x i32> %3500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3502 = mul <8 x i32> %3492, %3484
  %3503 = mul <8 x i32> %3495, %3485
  %3504 = mul <8 x i32> %3498, %3486
  %3505 = mul <8 x i32> %3501, %3487
  %3506 = add nuw i64 %3483, 32
  %3507 = icmp eq i64 %3506, %3480
  br i1 %3507, label %3508, label %3482, !llvm.loop !1414

3508:                                             ; preds = %3482
  %3509 = mul <8 x i32> %3503, %3502
  %3510 = mul <8 x i32> %3504, %3509
  %3511 = mul <8 x i32> %3505, %3510
  %3512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3511)
  %3513 = icmp eq i64 %3476, %3480
  br i1 %3513, label %3526, label %3514

3514:                                             ; preds = %3467, %3508
  %3515 = phi i64 [ %3470, %3467 ], [ %3481, %3508 ]
  %3516 = phi i32 [ 1, %3467 ], [ %3512, %3508 ]
  br label %3517

3517:                                             ; preds = %3514, %3517
  %3518 = phi i64 [ %3523, %3517 ], [ %3515, %3514 ]
  %3519 = phi i32 [ %3522, %3517 ], [ %3516, %3514 ]
  %3520 = getelementptr inbounds i32, ptr %9, i64 %3518
  %3521 = load i32, ptr %3520, align 4, !tbaa !5
  %3522 = mul nsw i32 %3521, %3519
  %3523 = add nsw i64 %3518, -1
  %3524 = trunc i64 %3518 to i32
  %3525 = icmp sgt i32 %3524, 0
  br i1 %3525, label %3517, label %3526, !llvm.loop !1415

3526:                                             ; preds = %3517, %3508
  %3527 = phi i32 [ %3512, %3508 ], [ %3522, %3517 ]
  %3528 = and i64 %3477, 4294967295
  %3529 = getelementptr inbounds i32, ptr %6, i64 %3528
  %3530 = load i32, ptr %3529, align 4, !tbaa !5
  %3531 = mul nsw i32 %3530, %3527
  %3532 = add nsw i32 %3531, %3471
  %3533 = icmp sgt i64 %3469, 2
  %3534 = add nsw i64 %3470, -1
  %3535 = add i32 %3468, 1
  br i1 %3533, label %3467, label %3536, !llvm.loop !1416

3536:                                             ; preds = %3526, %3462
  %3537 = phi i32 [ %3466, %3462 ], [ %3532, %3526 ]
  %3538 = sext i32 %3537 to i64
  %3539 = getelementptr inbounds double, ptr %3118, i64 %3538
  %3540 = load double, ptr %3539, align 8, !tbaa !18
  %3541 = fptosi double %3540 to i64
  %3542 = tail call i64 @llvm.abs.i64(i64 %3541, i1 true)
  %3543 = tail call i64 @llvm.smax.i64(i64 %3463, i64 %3542)
  %3544 = fadd fast double %3465, 1.000000e+00
  %3545 = add nuw nsw i32 %3464, 1
  br i1 %3456, label %3546, label %3593

3546:                                             ; preds = %3536
  %3547 = load i32, ptr %4, align 4, !tbaa !5
  %3548 = load i32, ptr %12, align 4, !tbaa !5
  %3549 = add nsw i32 %3548, -1
  %3550 = icmp slt i32 %3547, %3549
  br i1 %3550, label %3570, label %3551

3551:                                             ; preds = %3546
  %3552 = icmp eq i32 %3547, %3549
  br i1 %3552, label %3553, label %3586

3553:                                             ; preds = %3551
  store i32 0, ptr %4, align 4, !tbaa !5
  %3554 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3554, ptr %6, align 4, !tbaa !5
  br i1 %3461, label %3593, label %3555

3555:                                             ; preds = %3553, %3580
  %3556 = phi i64 [ %3584, %3580 ], [ 1, %3553 ]
  %3557 = getelementptr inbounds i32, ptr %4, i64 %3556
  %3558 = load i32, ptr %3557, align 4, !tbaa !5
  %3559 = getelementptr inbounds i32, ptr %12, i64 %3556
  %3560 = load i32, ptr %3559, align 4, !tbaa !5
  %3561 = add nsw i32 %3560, -1
  %3562 = icmp slt i32 %3558, %3561
  br i1 %3562, label %3563, label %3578

3563:                                             ; preds = %3555
  br i1 %3550, label %3570, label %3564

3564:                                             ; preds = %3563
  %3565 = getelementptr inbounds i32, ptr %7, i64 %3556
  %3566 = load i32, ptr %3565, align 4, !tbaa !5
  %3567 = getelementptr inbounds i32, ptr %6, i64 %3556
  %3568 = load i32, ptr %3567, align 4, !tbaa !5
  %3569 = add nsw i32 %3568, %3566
  store i32 %3569, ptr %3567, align 4, !tbaa !5
  br label %3588

3570:                                             ; preds = %3546, %3563
  %3571 = phi i32 [ %3558, %3563 ], [ %3547, %3546 ]
  %3572 = phi ptr [ %3557, %3563 ], [ %4, %3546 ]
  %3573 = phi i64 [ %3556, %3563 ], [ 0, %3546 ]
  %3574 = add nsw i32 %3571, 1
  store i32 %3574, ptr %3572, align 4, !tbaa !5
  %3575 = getelementptr inbounds i32, ptr %7, i64 %3573
  %3576 = load i32, ptr %3575, align 4, !tbaa !5
  %3577 = getelementptr inbounds i32, ptr %6, i64 %3573
  br label %3588

3578:                                             ; preds = %3555
  %3579 = icmp eq i32 %3558, %3561
  br i1 %3579, label %3580, label %3586

3580:                                             ; preds = %3578
  store i32 0, ptr %3557, align 4, !tbaa !5
  %3581 = getelementptr inbounds i32, ptr %8, i64 %3556
  %3582 = load i32, ptr %3581, align 4, !tbaa !5
  %3583 = getelementptr inbounds i32, ptr %6, i64 %3556
  store i32 %3582, ptr %3583, align 4, !tbaa !5
  %3584 = add nuw nsw i64 %3556, 1
  %3585 = icmp eq i64 %3584, %3459
  br i1 %3585, label %3593, label %3555, !llvm.loop !1417

3586:                                             ; preds = %3551, %3578
  store i64 %3543, ptr %3120, align 8, !tbaa !120
  %3587 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3588:                                             ; preds = %3564, %3570
  %3589 = phi ptr [ %3577, %3570 ], [ %3557, %3564 ]
  %3590 = phi i32 [ %3576, %3570 ], [ 1, %3564 ]
  %3591 = load i32, ptr %3589, align 4, !tbaa !5
  %3592 = add nsw i32 %3591, %3590
  store i32 %3592, ptr %3589, align 4, !tbaa !5
  br label %3593

3593:                                             ; preds = %3580, %3588, %3553, %3536
  %3594 = icmp eq i32 %3545, %5
  br i1 %3594, label %5576, label %3462, !llvm.loop !1418

3595:                                             ; preds = %3445, %3731
  %3596 = phi i64 [ 0, %3445 ], [ %3679, %3731 ]
  %3597 = phi i32 [ 0, %3445 ], [ %3680, %3731 ]
  %3598 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3446, label %3599, label %3668

3599:                                             ; preds = %3595, %3658
  %3600 = phi i32 [ %3667, %3658 ], [ 0, %3595 ]
  %3601 = phi i64 [ %3609, %3658 ], [ %3450, %3595 ]
  %3602 = phi i64 [ %3666, %3658 ], [ %3449, %3595 ]
  %3603 = phi i32 [ %3664, %3658 ], [ %3598, %3595 ]
  %3604 = sub i32 %3448, %3600
  %3605 = tail call i32 @llvm.smin.i32(i32 %3604, i32 0)
  %3606 = sub i32 %3604, %3605
  %3607 = zext i32 %3606 to i64
  %3608 = add nuw nsw i64 %3607, 1
  %3609 = add nsw i64 %3601, -1
  %3610 = icmp ult i32 %3606, 31
  br i1 %3610, label %3646, label %3611

3611:                                             ; preds = %3599
  %3612 = and i64 %3608, 8589934560
  %3613 = sub i64 %3602, %3612
  br label %3614

3614:                                             ; preds = %3614, %3611
  %3615 = phi i64 [ 0, %3611 ], [ %3638, %3614 ]
  %3616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3634, %3614 ]
  %3617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3635, %3614 ]
  %3618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3636, %3614 ]
  %3619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3611 ], [ %3637, %3614 ]
  %3620 = sub i64 %3602, %3615
  %3621 = getelementptr inbounds i32, ptr %11, i64 %3620
  %3622 = getelementptr inbounds i32, ptr %3621, i64 -7
  %3623 = load <8 x i32>, ptr %3622, align 4, !tbaa !5
  %3624 = shufflevector <8 x i32> %3623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3625 = getelementptr inbounds i32, ptr %3621, i64 -15
  %3626 = load <8 x i32>, ptr %3625, align 4, !tbaa !5
  %3627 = shufflevector <8 x i32> %3626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3628 = getelementptr inbounds i32, ptr %3621, i64 -23
  %3629 = load <8 x i32>, ptr %3628, align 4, !tbaa !5
  %3630 = shufflevector <8 x i32> %3629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3631 = getelementptr inbounds i32, ptr %3621, i64 -31
  %3632 = load <8 x i32>, ptr %3631, align 4, !tbaa !5
  %3633 = shufflevector <8 x i32> %3632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3634 = mul <8 x i32> %3624, %3616
  %3635 = mul <8 x i32> %3627, %3617
  %3636 = mul <8 x i32> %3630, %3618
  %3637 = mul <8 x i32> %3633, %3619
  %3638 = add nuw i64 %3615, 32
  %3639 = icmp eq i64 %3638, %3612
  br i1 %3639, label %3640, label %3614, !llvm.loop !1419

3640:                                             ; preds = %3614
  %3641 = mul <8 x i32> %3635, %3634
  %3642 = mul <8 x i32> %3636, %3641
  %3643 = mul <8 x i32> %3637, %3642
  %3644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3643)
  %3645 = icmp eq i64 %3608, %3612
  br i1 %3645, label %3658, label %3646

3646:                                             ; preds = %3599, %3640
  %3647 = phi i64 [ %3602, %3599 ], [ %3613, %3640 ]
  %3648 = phi i32 [ 1, %3599 ], [ %3644, %3640 ]
  br label %3649

3649:                                             ; preds = %3646, %3649
  %3650 = phi i64 [ %3655, %3649 ], [ %3647, %3646 ]
  %3651 = phi i32 [ %3654, %3649 ], [ %3648, %3646 ]
  %3652 = getelementptr inbounds i32, ptr %11, i64 %3650
  %3653 = load i32, ptr %3652, align 4, !tbaa !5
  %3654 = mul nsw i32 %3653, %3651
  %3655 = add nsw i64 %3650, -1
  %3656 = trunc i64 %3650 to i32
  %3657 = icmp sgt i32 %3656, 0
  br i1 %3657, label %3649, label %3658, !llvm.loop !1420

3658:                                             ; preds = %3649, %3640
  %3659 = phi i32 [ %3644, %3640 ], [ %3654, %3649 ]
  %3660 = and i64 %3609, 4294967295
  %3661 = getelementptr inbounds i32, ptr %6, i64 %3660
  %3662 = load i32, ptr %3661, align 4, !tbaa !5
  %3663 = mul nsw i32 %3662, %3659
  %3664 = add nsw i32 %3663, %3603
  %3665 = icmp sgt i64 %3601, 2
  %3666 = add nsw i64 %3602, -1
  %3667 = add i32 %3600, 1
  br i1 %3665, label %3599, label %3668, !llvm.loop !1421

3668:                                             ; preds = %3658, %3595
  %3669 = phi i32 [ %3598, %3595 ], [ %3664, %3658 ]
  %3670 = icmp slt i32 %3669, %5
  br i1 %3670, label %3673, label %3671

3671:                                             ; preds = %3668
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3673:                                             ; preds = %3668
  %3674 = sext i32 %3669 to i64
  %3675 = getelementptr inbounds double, ptr %3118, i64 %3674
  %3676 = load double, ptr %3675, align 8, !tbaa !18
  %3677 = fptosi double %3676 to i64
  %3678 = tail call i64 @llvm.abs.i64(i64 %3677, i1 true)
  %3679 = tail call i64 @llvm.smax.i64(i64 %3596, i64 %3678)
  store i64 %3679, ptr %3120, align 8, !tbaa !120
  %3680 = add nuw nsw i32 %3597, 1
  br i1 %3447, label %3681, label %3731

3681:                                             ; preds = %3673
  %3682 = load i32, ptr %4, align 4, !tbaa !5
  %3683 = load i32, ptr %12, align 4, !tbaa !5
  %3684 = add nsw i32 %3683, -1
  %3685 = icmp slt i32 %3682, %3684
  br i1 %3685, label %3708, label %3686

3686:                                             ; preds = %3681
  %3687 = icmp eq i32 %3682, %3684
  br i1 %3687, label %3688, label %3724

3688:                                             ; preds = %3686
  store i32 0, ptr %4, align 4, !tbaa !5
  %3689 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3689, ptr %6, align 4, !tbaa !5
  br i1 %3452, label %3731, label %3690

3690:                                             ; preds = %3688, %3718
  %3691 = phi i64 [ %3722, %3718 ], [ 1, %3688 ]
  %3692 = getelementptr inbounds i32, ptr %4, i64 %3691
  %3693 = load i32, ptr %3692, align 4, !tbaa !5
  %3694 = getelementptr inbounds i32, ptr %12, i64 %3691
  %3695 = load i32, ptr %3694, align 4, !tbaa !5
  %3696 = add nsw i32 %3695, -1
  %3697 = icmp slt i32 %3693, %3696
  br i1 %3697, label %3698, label %3716

3698:                                             ; preds = %3690
  br i1 %3685, label %3708, label %3699

3699:                                             ; preds = %3698
  %3700 = shl i64 %3691, 32
  %3701 = add i64 %3700, -4294967296
  %3702 = ashr exact i64 %3701, 32
  %3703 = getelementptr inbounds i32, ptr %7, i64 %3702
  %3704 = load i32, ptr %3703, align 4, !tbaa !5
  %3705 = getelementptr inbounds i32, ptr %6, i64 %3691
  %3706 = load i32, ptr %3705, align 4, !tbaa !5
  %3707 = add nsw i32 %3706, %3704
  store i32 %3707, ptr %3705, align 4, !tbaa !5
  br label %3726

3708:                                             ; preds = %3681, %3698
  %3709 = phi i32 [ %3693, %3698 ], [ %3682, %3681 ]
  %3710 = phi ptr [ %3692, %3698 ], [ %4, %3681 ]
  %3711 = phi i64 [ %3691, %3698 ], [ 0, %3681 ]
  %3712 = add nsw i32 %3709, 1
  store i32 %3712, ptr %3710, align 4, !tbaa !5
  %3713 = getelementptr inbounds i32, ptr %7, i64 %3711
  %3714 = load i32, ptr %3713, align 4, !tbaa !5
  %3715 = getelementptr inbounds i32, ptr %6, i64 %3711
  br label %3726

3716:                                             ; preds = %3690
  %3717 = icmp eq i32 %3693, %3696
  br i1 %3717, label %3718, label %3724

3718:                                             ; preds = %3716
  store i32 0, ptr %3692, align 4, !tbaa !5
  %3719 = getelementptr inbounds i32, ptr %8, i64 %3691
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = getelementptr inbounds i32, ptr %6, i64 %3691
  store i32 %3720, ptr %3721, align 4, !tbaa !5
  %3722 = add nuw nsw i64 %3691, 1
  %3723 = icmp eq i64 %3722, %3450
  br i1 %3723, label %3731, label %3690, !llvm.loop !1422

3724:                                             ; preds = %3686, %3716
  %3725 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3726:                                             ; preds = %3699, %3708
  %3727 = phi ptr [ %3715, %3708 ], [ %3692, %3699 ]
  %3728 = phi i32 [ %3714, %3708 ], [ 1, %3699 ]
  %3729 = load i32, ptr %3727, align 4, !tbaa !5
  %3730 = add nsw i32 %3729, %3728
  store i32 %3730, ptr %3727, align 4, !tbaa !5
  br label %3731

3731:                                             ; preds = %3718, %3726, %3688, %3673
  %3732 = icmp eq i32 %3680, %5
  br i1 %3732, label %5579, label %3595, !llvm.loop !1423

3733:                                             ; preds = %3128
  %3734 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2581, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

3735:                                             ; preds = %18
  %3736 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3737 = load ptr, ptr %3736, align 8, !tbaa !9
  %3738 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3739 = load ptr, ptr %3738, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3739, align 8, !tbaa !18
  %3740 = icmp eq i32 %13, 0
  br i1 %3740, label %3741, label %3746

3741:                                             ; preds = %3735
  %3742 = load double, ptr %3737, align 8, !tbaa !18
  %3743 = fcmp fast oeq double %3742, 0.000000e+00
  %3744 = tail call fast double @llvm.fabs.f64(double %3742)
  %3745 = select fast i1 %3743, double 0.000000e+00, double %3744
  store double %3745, ptr %3739, align 8, !tbaa !18
  br label %5579

3746:                                             ; preds = %3735
  switch i32 %1, label %4342 [
    i32 1, label %3747
    i32 0, label %4050
  ]

3747:                                             ; preds = %3746
  %3748 = getelementptr inbounds i32, ptr %3, i64 %19
  %3749 = load i32, ptr %3748, align 4, !tbaa !5
  %3750 = icmp eq i32 %3749, 0
  %3751 = icmp sgt i32 %5, 0
  br i1 %3750, label %3761, label %3752

3752:                                             ; preds = %3747
  br i1 %3751, label %3753, label %5579

3753:                                             ; preds = %3752
  %3754 = icmp sgt i32 %13, 1
  %3755 = icmp sgt i32 %13, 0
  %3756 = add i32 %13, -2
  %3757 = zext i32 %3756 to i64
  %3758 = zext i32 %13 to i64
  %3759 = add nuw i32 %5, 1
  %3760 = icmp eq i32 %13, 1
  br label %3909

3761:                                             ; preds = %3747
  br i1 %3751, label %3762, label %5579

3762:                                             ; preds = %3761
  %3763 = icmp sgt i32 %13, 1
  %3764 = icmp sgt i32 %13, 0
  %3765 = add i32 %13, -2
  %3766 = zext i32 %3765 to i64
  %3767 = zext i32 %13 to i64
  %3768 = add nuw i32 %5, 1
  %3769 = icmp eq i32 %13, 1
  br label %3770

3770:                                             ; preds = %3762, %3907
  %3771 = phi double [ 0.000000e+00, %3762 ], [ %3857, %3907 ]
  %3772 = phi i32 [ 0, %3762 ], [ %3859, %3907 ]
  %3773 = phi double [ 0.000000e+00, %3762 ], [ %3858, %3907 ]
  %3774 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3763, label %3775, label %3844

3775:                                             ; preds = %3770, %3834
  %3776 = phi i32 [ %3843, %3834 ], [ 0, %3770 ]
  %3777 = phi i64 [ %3785, %3834 ], [ %3767, %3770 ]
  %3778 = phi i64 [ %3842, %3834 ], [ %3766, %3770 ]
  %3779 = phi i32 [ %3840, %3834 ], [ %3774, %3770 ]
  %3780 = sub i32 %3765, %3776
  %3781 = tail call i32 @llvm.smin.i32(i32 %3780, i32 0)
  %3782 = sub i32 %3780, %3781
  %3783 = zext i32 %3782 to i64
  %3784 = add nuw nsw i64 %3783, 1
  %3785 = add nsw i64 %3777, -1
  %3786 = icmp ult i32 %3782, 31
  br i1 %3786, label %3822, label %3787

3787:                                             ; preds = %3775
  %3788 = and i64 %3784, 8589934560
  %3789 = sub i64 %3778, %3788
  br label %3790

3790:                                             ; preds = %3790, %3787
  %3791 = phi i64 [ 0, %3787 ], [ %3814, %3790 ]
  %3792 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3810, %3790 ]
  %3793 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3811, %3790 ]
  %3794 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3812, %3790 ]
  %3795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3787 ], [ %3813, %3790 ]
  %3796 = sub i64 %3778, %3791
  %3797 = getelementptr inbounds i32, ptr %9, i64 %3796
  %3798 = getelementptr inbounds i32, ptr %3797, i64 -7
  %3799 = load <8 x i32>, ptr %3798, align 4, !tbaa !5
  %3800 = shufflevector <8 x i32> %3799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3801 = getelementptr inbounds i32, ptr %3797, i64 -15
  %3802 = load <8 x i32>, ptr %3801, align 4, !tbaa !5
  %3803 = shufflevector <8 x i32> %3802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3804 = getelementptr inbounds i32, ptr %3797, i64 -23
  %3805 = load <8 x i32>, ptr %3804, align 4, !tbaa !5
  %3806 = shufflevector <8 x i32> %3805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3807 = getelementptr inbounds i32, ptr %3797, i64 -31
  %3808 = load <8 x i32>, ptr %3807, align 4, !tbaa !5
  %3809 = shufflevector <8 x i32> %3808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3810 = mul <8 x i32> %3800, %3792
  %3811 = mul <8 x i32> %3803, %3793
  %3812 = mul <8 x i32> %3806, %3794
  %3813 = mul <8 x i32> %3809, %3795
  %3814 = add nuw i64 %3791, 32
  %3815 = icmp eq i64 %3814, %3788
  br i1 %3815, label %3816, label %3790, !llvm.loop !1424

3816:                                             ; preds = %3790
  %3817 = mul <8 x i32> %3811, %3810
  %3818 = mul <8 x i32> %3812, %3817
  %3819 = mul <8 x i32> %3813, %3818
  %3820 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3819)
  %3821 = icmp eq i64 %3784, %3788
  br i1 %3821, label %3834, label %3822

3822:                                             ; preds = %3775, %3816
  %3823 = phi i64 [ %3778, %3775 ], [ %3789, %3816 ]
  %3824 = phi i32 [ 1, %3775 ], [ %3820, %3816 ]
  br label %3825

3825:                                             ; preds = %3822, %3825
  %3826 = phi i64 [ %3831, %3825 ], [ %3823, %3822 ]
  %3827 = phi i32 [ %3830, %3825 ], [ %3824, %3822 ]
  %3828 = getelementptr inbounds i32, ptr %9, i64 %3826
  %3829 = load i32, ptr %3828, align 4, !tbaa !5
  %3830 = mul nsw i32 %3829, %3827
  %3831 = add nsw i64 %3826, -1
  %3832 = trunc i64 %3826 to i32
  %3833 = icmp sgt i32 %3832, 0
  br i1 %3833, label %3825, label %3834, !llvm.loop !1425

3834:                                             ; preds = %3825, %3816
  %3835 = phi i32 [ %3820, %3816 ], [ %3830, %3825 ]
  %3836 = and i64 %3785, 4294967295
  %3837 = getelementptr inbounds i32, ptr %6, i64 %3836
  %3838 = load i32, ptr %3837, align 4, !tbaa !5
  %3839 = mul nsw i32 %3838, %3835
  %3840 = add nsw i32 %3839, %3779
  %3841 = icmp sgt i64 %3777, 2
  %3842 = add nsw i64 %3778, -1
  %3843 = add i32 %3776, 1
  br i1 %3841, label %3775, label %3844, !llvm.loop !1426

3844:                                             ; preds = %3834, %3770
  %3845 = phi i32 [ %3774, %3770 ], [ %3840, %3834 ]
  %3846 = sext i32 %3845 to i64
  %3847 = getelementptr inbounds double, ptr %2, i64 %3846
  %3848 = load double, ptr %3847, align 8, !tbaa !18
  %3849 = getelementptr inbounds double, ptr %3737, i64 %3846
  %3850 = load double, ptr %3849, align 8, !tbaa !18
  %3851 = fmul fast double %3850, %3848
  %3852 = fcmp fast uge double %3851, 0.000000e+00
  %3853 = fneg fast double %3851
  %3854 = tail call fast double @llvm.fabs.f64(double %3851)
  %3855 = fcmp fast oge double %3771, %3854
  %3856 = select nnan ninf i1 %3852, double %3851, double %3853
  %3857 = select i1 %3855, double %3771, double %3856
  store double %3857, ptr %3739, align 8, !tbaa !18
  %3858 = fadd fast double %3848, %3773
  %3859 = add nuw nsw i32 %3772, 1
  br i1 %3764, label %3860, label %3907

3860:                                             ; preds = %3844
  %3861 = load i32, ptr %4, align 4, !tbaa !5
  %3862 = load i32, ptr %12, align 4, !tbaa !5
  %3863 = add nsw i32 %3862, -1
  %3864 = icmp slt i32 %3861, %3863
  br i1 %3864, label %3884, label %3865

3865:                                             ; preds = %3860
  %3866 = icmp eq i32 %3861, %3863
  br i1 %3866, label %3867, label %3900

3867:                                             ; preds = %3865
  store i32 0, ptr %4, align 4, !tbaa !5
  %3868 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3868, ptr %6, align 4, !tbaa !5
  br i1 %3769, label %3907, label %3869

3869:                                             ; preds = %3867, %3894
  %3870 = phi i64 [ %3898, %3894 ], [ 1, %3867 ]
  %3871 = getelementptr inbounds i32, ptr %4, i64 %3870
  %3872 = load i32, ptr %3871, align 4, !tbaa !5
  %3873 = getelementptr inbounds i32, ptr %12, i64 %3870
  %3874 = load i32, ptr %3873, align 4, !tbaa !5
  %3875 = add nsw i32 %3874, -1
  %3876 = icmp slt i32 %3872, %3875
  br i1 %3876, label %3877, label %3892

3877:                                             ; preds = %3869
  br i1 %3864, label %3884, label %3878

3878:                                             ; preds = %3877
  %3879 = getelementptr inbounds i32, ptr %7, i64 %3870
  %3880 = load i32, ptr %3879, align 4, !tbaa !5
  %3881 = getelementptr inbounds i32, ptr %6, i64 %3870
  %3882 = load i32, ptr %3881, align 4, !tbaa !5
  %3883 = add nsw i32 %3882, %3880
  store i32 %3883, ptr %3881, align 4, !tbaa !5
  br label %3902

3884:                                             ; preds = %3860, %3877
  %3885 = phi i32 [ %3872, %3877 ], [ %3861, %3860 ]
  %3886 = phi ptr [ %3871, %3877 ], [ %4, %3860 ]
  %3887 = phi i64 [ %3870, %3877 ], [ 0, %3860 ]
  %3888 = add nsw i32 %3885, 1
  store i32 %3888, ptr %3886, align 4, !tbaa !5
  %3889 = getelementptr inbounds i32, ptr %7, i64 %3887
  %3890 = load i32, ptr %3889, align 4, !tbaa !5
  %3891 = getelementptr inbounds i32, ptr %6, i64 %3887
  br label %3902

3892:                                             ; preds = %3869
  %3893 = icmp eq i32 %3872, %3875
  br i1 %3893, label %3894, label %3900

3894:                                             ; preds = %3892
  store i32 0, ptr %3871, align 4, !tbaa !5
  %3895 = getelementptr inbounds i32, ptr %8, i64 %3870
  %3896 = load i32, ptr %3895, align 4, !tbaa !5
  %3897 = getelementptr inbounds i32, ptr %6, i64 %3870
  store i32 %3896, ptr %3897, align 4, !tbaa !5
  %3898 = add nuw nsw i64 %3870, 1
  %3899 = icmp eq i64 %3898, %3767
  br i1 %3899, label %3907, label %3869, !llvm.loop !1427

3900:                                             ; preds = %3865, %3892
  %3901 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

3902:                                             ; preds = %3878, %3884
  %3903 = phi ptr [ %3891, %3884 ], [ %3871, %3878 ]
  %3904 = phi i32 [ %3890, %3884 ], [ 1, %3878 ]
  %3905 = load i32, ptr %3903, align 4, !tbaa !5
  %3906 = add nsw i32 %3905, %3904
  store i32 %3906, ptr %3903, align 4, !tbaa !5
  br label %3907

3907:                                             ; preds = %3894, %3902, %3867, %3844
  %3908 = icmp eq i32 %3859, %5
  br i1 %3908, label %5579, label %3770, !llvm.loop !1428

3909:                                             ; preds = %3753, %4048
  %3910 = phi double [ 0.000000e+00, %3753 ], [ %3996, %4048 ]
  %3911 = phi i32 [ 0, %3753 ], [ %3997, %4048 ]
  %3912 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3754, label %3913, label %3982

3913:                                             ; preds = %3909, %3972
  %3914 = phi i32 [ %3981, %3972 ], [ 0, %3909 ]
  %3915 = phi i64 [ %3923, %3972 ], [ %3758, %3909 ]
  %3916 = phi i64 [ %3980, %3972 ], [ %3757, %3909 ]
  %3917 = phi i32 [ %3978, %3972 ], [ %3912, %3909 ]
  %3918 = sub i32 %3756, %3914
  %3919 = tail call i32 @llvm.smin.i32(i32 %3918, i32 0)
  %3920 = sub i32 %3918, %3919
  %3921 = zext i32 %3920 to i64
  %3922 = add nuw nsw i64 %3921, 1
  %3923 = add nsw i64 %3915, -1
  %3924 = icmp ult i32 %3920, 31
  br i1 %3924, label %3960, label %3925

3925:                                             ; preds = %3913
  %3926 = and i64 %3922, 8589934560
  %3927 = sub i64 %3916, %3926
  br label %3928

3928:                                             ; preds = %3928, %3925
  %3929 = phi i64 [ 0, %3925 ], [ %3952, %3928 ]
  %3930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3948, %3928 ]
  %3931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3949, %3928 ]
  %3932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3950, %3928 ]
  %3933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3925 ], [ %3951, %3928 ]
  %3934 = sub i64 %3916, %3929
  %3935 = getelementptr inbounds i32, ptr %11, i64 %3934
  %3936 = getelementptr inbounds i32, ptr %3935, i64 -7
  %3937 = load <8 x i32>, ptr %3936, align 4, !tbaa !5
  %3938 = shufflevector <8 x i32> %3937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3939 = getelementptr inbounds i32, ptr %3935, i64 -15
  %3940 = load <8 x i32>, ptr %3939, align 4, !tbaa !5
  %3941 = shufflevector <8 x i32> %3940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3942 = getelementptr inbounds i32, ptr %3935, i64 -23
  %3943 = load <8 x i32>, ptr %3942, align 4, !tbaa !5
  %3944 = shufflevector <8 x i32> %3943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3945 = getelementptr inbounds i32, ptr %3935, i64 -31
  %3946 = load <8 x i32>, ptr %3945, align 4, !tbaa !5
  %3947 = shufflevector <8 x i32> %3946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3948 = mul <8 x i32> %3938, %3930
  %3949 = mul <8 x i32> %3941, %3931
  %3950 = mul <8 x i32> %3944, %3932
  %3951 = mul <8 x i32> %3947, %3933
  %3952 = add nuw i64 %3929, 32
  %3953 = icmp eq i64 %3952, %3926
  br i1 %3953, label %3954, label %3928, !llvm.loop !1429

3954:                                             ; preds = %3928
  %3955 = mul <8 x i32> %3949, %3948
  %3956 = mul <8 x i32> %3950, %3955
  %3957 = mul <8 x i32> %3951, %3956
  %3958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3957)
  %3959 = icmp eq i64 %3922, %3926
  br i1 %3959, label %3972, label %3960

3960:                                             ; preds = %3913, %3954
  %3961 = phi i64 [ %3916, %3913 ], [ %3927, %3954 ]
  %3962 = phi i32 [ 1, %3913 ], [ %3958, %3954 ]
  br label %3963

3963:                                             ; preds = %3960, %3963
  %3964 = phi i64 [ %3969, %3963 ], [ %3961, %3960 ]
  %3965 = phi i32 [ %3968, %3963 ], [ %3962, %3960 ]
  %3966 = getelementptr inbounds i32, ptr %11, i64 %3964
  %3967 = load i32, ptr %3966, align 4, !tbaa !5
  %3968 = mul nsw i32 %3967, %3965
  %3969 = add nsw i64 %3964, -1
  %3970 = trunc i64 %3964 to i32
  %3971 = icmp sgt i32 %3970, 0
  br i1 %3971, label %3963, label %3972, !llvm.loop !1430

3972:                                             ; preds = %3963, %3954
  %3973 = phi i32 [ %3958, %3954 ], [ %3968, %3963 ]
  %3974 = and i64 %3923, 4294967295
  %3975 = getelementptr inbounds i32, ptr %6, i64 %3974
  %3976 = load i32, ptr %3975, align 4, !tbaa !5
  %3977 = mul nsw i32 %3976, %3973
  %3978 = add nsw i32 %3977, %3917
  %3979 = icmp sgt i64 %3915, 2
  %3980 = add nsw i64 %3916, -1
  %3981 = add i32 %3914, 1
  br i1 %3979, label %3913, label %3982, !llvm.loop !1431

3982:                                             ; preds = %3972, %3909
  %3983 = phi i32 [ %3912, %3909 ], [ %3978, %3972 ]
  %3984 = icmp slt i32 %3983, %5
  br i1 %3984, label %3987, label %3985

3985:                                             ; preds = %3982
  %3986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

3987:                                             ; preds = %3982
  %3988 = sext i32 %3983 to i64
  %3989 = getelementptr inbounds double, ptr %3737, i64 %3988
  %3990 = load double, ptr %3989, align 8, !tbaa !18
  %3991 = fcmp fast uge double %3990, 0.000000e+00
  %3992 = fneg fast double %3990
  %3993 = tail call fast double @llvm.fabs.f64(double %3990)
  %3994 = fcmp fast oge double %3910, %3993
  %3995 = select nnan ninf i1 %3991, double %3990, double %3992
  %3996 = select i1 %3994, double %3910, double %3995
  store double %3996, ptr %3739, align 8, !tbaa !18
  %3997 = add nuw nsw i32 %3911, 1
  br i1 %3755, label %3998, label %4048

3998:                                             ; preds = %3987
  %3999 = load i32, ptr %4, align 4, !tbaa !5
  %4000 = load i32, ptr %12, align 4, !tbaa !5
  %4001 = add nsw i32 %4000, -1
  %4002 = icmp slt i32 %3999, %4001
  br i1 %4002, label %4025, label %4003

4003:                                             ; preds = %3998
  %4004 = icmp eq i32 %3999, %4001
  br i1 %4004, label %4005, label %4041

4005:                                             ; preds = %4003
  store i32 0, ptr %4, align 4, !tbaa !5
  %4006 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4006, ptr %6, align 4, !tbaa !5
  br i1 %3760, label %4048, label %4007

4007:                                             ; preds = %4005, %4035
  %4008 = phi i64 [ %4039, %4035 ], [ 1, %4005 ]
  %4009 = getelementptr inbounds i32, ptr %4, i64 %4008
  %4010 = load i32, ptr %4009, align 4, !tbaa !5
  %4011 = getelementptr inbounds i32, ptr %12, i64 %4008
  %4012 = load i32, ptr %4011, align 4, !tbaa !5
  %4013 = add nsw i32 %4012, -1
  %4014 = icmp slt i32 %4010, %4013
  br i1 %4014, label %4015, label %4033

4015:                                             ; preds = %4007
  br i1 %4002, label %4025, label %4016

4016:                                             ; preds = %4015
  %4017 = shl i64 %4008, 32
  %4018 = add i64 %4017, -4294967296
  %4019 = ashr exact i64 %4018, 32
  %4020 = getelementptr inbounds i32, ptr %7, i64 %4019
  %4021 = load i32, ptr %4020, align 4, !tbaa !5
  %4022 = getelementptr inbounds i32, ptr %6, i64 %4008
  %4023 = load i32, ptr %4022, align 4, !tbaa !5
  %4024 = add nsw i32 %4023, %4021
  store i32 %4024, ptr %4022, align 4, !tbaa !5
  br label %4043

4025:                                             ; preds = %3998, %4015
  %4026 = phi i32 [ %4010, %4015 ], [ %3999, %3998 ]
  %4027 = phi ptr [ %4009, %4015 ], [ %4, %3998 ]
  %4028 = phi i64 [ %4008, %4015 ], [ 0, %3998 ]
  %4029 = add nsw i32 %4026, 1
  store i32 %4029, ptr %4027, align 4, !tbaa !5
  %4030 = getelementptr inbounds i32, ptr %7, i64 %4028
  %4031 = load i32, ptr %4030, align 4, !tbaa !5
  %4032 = getelementptr inbounds i32, ptr %6, i64 %4028
  br label %4043

4033:                                             ; preds = %4007
  %4034 = icmp eq i32 %4010, %4013
  br i1 %4034, label %4035, label %4041

4035:                                             ; preds = %4033
  store i32 0, ptr %4009, align 4, !tbaa !5
  %4036 = getelementptr inbounds i32, ptr %8, i64 %4008
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = getelementptr inbounds i32, ptr %6, i64 %4008
  store i32 %4037, ptr %4038, align 4, !tbaa !5
  %4039 = add nuw nsw i64 %4008, 1
  %4040 = icmp eq i64 %4039, %3758
  br i1 %4040, label %4048, label %4007, !llvm.loop !1432

4041:                                             ; preds = %4003, %4033
  %4042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4043:                                             ; preds = %4016, %4025
  %4044 = phi ptr [ %4032, %4025 ], [ %4009, %4016 ]
  %4045 = phi i32 [ %4031, %4025 ], [ 1, %4016 ]
  %4046 = load i32, ptr %4044, align 4, !tbaa !5
  %4047 = add nsw i32 %4046, %4045
  store i32 %4047, ptr %4044, align 4, !tbaa !5
  br label %4048

4048:                                             ; preds = %4035, %4043, %4005, %3987
  %4049 = icmp eq i32 %3997, %5
  br i1 %4049, label %5579, label %3909, !llvm.loop !1433

4050:                                             ; preds = %3746
  %4051 = getelementptr inbounds i32, ptr %3, i64 %19
  %4052 = load i32, ptr %4051, align 4, !tbaa !5
  %4053 = icmp eq i32 %4052, 0
  %4054 = icmp sgt i32 %5, 0
  br i1 %4053, label %4064, label %4055

4055:                                             ; preds = %4050
  br i1 %4054, label %4056, label %5579

4056:                                             ; preds = %4055
  %4057 = icmp sgt i32 %13, 1
  %4058 = icmp sgt i32 %13, 0
  %4059 = add i32 %13, -2
  %4060 = zext i32 %4059 to i64
  %4061 = zext i32 %13 to i64
  %4062 = add nuw i32 %5, 1
  %4063 = icmp eq i32 %13, 1
  br label %4205

4064:                                             ; preds = %4050
  br i1 %4054, label %4065, label %5579

4065:                                             ; preds = %4064
  %4066 = icmp sgt i32 %13, 1
  %4067 = icmp sgt i32 %13, 0
  %4068 = add i32 %13, -2
  %4069 = zext i32 %4068 to i64
  %4070 = zext i32 %13 to i64
  %4071 = add nuw i32 %5, 1
  %4072 = icmp eq i32 %13, 1
  br label %4073

4073:                                             ; preds = %4065, %4203
  %4074 = phi double [ 0.000000e+00, %4065 ], [ %4153, %4203 ]
  %4075 = phi i32 [ 0, %4065 ], [ %4155, %4203 ]
  %4076 = phi double [ 0.000000e+00, %4065 ], [ %4154, %4203 ]
  %4077 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4066, label %4078, label %4147

4078:                                             ; preds = %4073, %4137
  %4079 = phi i32 [ %4146, %4137 ], [ 0, %4073 ]
  %4080 = phi i64 [ %4088, %4137 ], [ %4070, %4073 ]
  %4081 = phi i64 [ %4145, %4137 ], [ %4069, %4073 ]
  %4082 = phi i32 [ %4143, %4137 ], [ %4077, %4073 ]
  %4083 = sub i32 %4068, %4079
  %4084 = tail call i32 @llvm.smin.i32(i32 %4083, i32 0)
  %4085 = sub i32 %4083, %4084
  %4086 = zext i32 %4085 to i64
  %4087 = add nuw nsw i64 %4086, 1
  %4088 = add nsw i64 %4080, -1
  %4089 = icmp ult i32 %4085, 31
  br i1 %4089, label %4125, label %4090

4090:                                             ; preds = %4078
  %4091 = and i64 %4087, 8589934560
  %4092 = sub i64 %4081, %4091
  br label %4093

4093:                                             ; preds = %4093, %4090
  %4094 = phi i64 [ 0, %4090 ], [ %4117, %4093 ]
  %4095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4113, %4093 ]
  %4096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4114, %4093 ]
  %4097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4115, %4093 ]
  %4098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4090 ], [ %4116, %4093 ]
  %4099 = sub i64 %4081, %4094
  %4100 = getelementptr inbounds i32, ptr %9, i64 %4099
  %4101 = getelementptr inbounds i32, ptr %4100, i64 -7
  %4102 = load <8 x i32>, ptr %4101, align 4, !tbaa !5
  %4103 = shufflevector <8 x i32> %4102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4104 = getelementptr inbounds i32, ptr %4100, i64 -15
  %4105 = load <8 x i32>, ptr %4104, align 4, !tbaa !5
  %4106 = shufflevector <8 x i32> %4105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4107 = getelementptr inbounds i32, ptr %4100, i64 -23
  %4108 = load <8 x i32>, ptr %4107, align 4, !tbaa !5
  %4109 = shufflevector <8 x i32> %4108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4110 = getelementptr inbounds i32, ptr %4100, i64 -31
  %4111 = load <8 x i32>, ptr %4110, align 4, !tbaa !5
  %4112 = shufflevector <8 x i32> %4111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4113 = mul <8 x i32> %4103, %4095
  %4114 = mul <8 x i32> %4106, %4096
  %4115 = mul <8 x i32> %4109, %4097
  %4116 = mul <8 x i32> %4112, %4098
  %4117 = add nuw i64 %4094, 32
  %4118 = icmp eq i64 %4117, %4091
  br i1 %4118, label %4119, label %4093, !llvm.loop !1434

4119:                                             ; preds = %4093
  %4120 = mul <8 x i32> %4114, %4113
  %4121 = mul <8 x i32> %4115, %4120
  %4122 = mul <8 x i32> %4116, %4121
  %4123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4122)
  %4124 = icmp eq i64 %4087, %4091
  br i1 %4124, label %4137, label %4125

4125:                                             ; preds = %4078, %4119
  %4126 = phi i64 [ %4081, %4078 ], [ %4092, %4119 ]
  %4127 = phi i32 [ 1, %4078 ], [ %4123, %4119 ]
  br label %4128

4128:                                             ; preds = %4125, %4128
  %4129 = phi i64 [ %4134, %4128 ], [ %4126, %4125 ]
  %4130 = phi i32 [ %4133, %4128 ], [ %4127, %4125 ]
  %4131 = getelementptr inbounds i32, ptr %9, i64 %4129
  %4132 = load i32, ptr %4131, align 4, !tbaa !5
  %4133 = mul nsw i32 %4132, %4130
  %4134 = add nsw i64 %4129, -1
  %4135 = trunc i64 %4129 to i32
  %4136 = icmp sgt i32 %4135, 0
  br i1 %4136, label %4128, label %4137, !llvm.loop !1435

4137:                                             ; preds = %4128, %4119
  %4138 = phi i32 [ %4123, %4119 ], [ %4133, %4128 ]
  %4139 = and i64 %4088, 4294967295
  %4140 = getelementptr inbounds i32, ptr %6, i64 %4139
  %4141 = load i32, ptr %4140, align 4, !tbaa !5
  %4142 = mul nsw i32 %4141, %4138
  %4143 = add nsw i32 %4142, %4082
  %4144 = icmp sgt i64 %4080, 2
  %4145 = add nsw i64 %4081, -1
  %4146 = add i32 %4079, 1
  br i1 %4144, label %4078, label %4147, !llvm.loop !1436

4147:                                             ; preds = %4137, %4073
  %4148 = phi i32 [ %4077, %4073 ], [ %4143, %4137 ]
  %4149 = sext i32 %4148 to i64
  %4150 = getelementptr inbounds double, ptr %3737, i64 %4149
  %4151 = load double, ptr %4150, align 8, !tbaa !18
  %4152 = tail call fast double @llvm.fabs.f64(double %4151)
  %4153 = tail call fast double @llvm.maxnum.f64(double %4074, double %4152)
  store double %4153, ptr %3739, align 8, !tbaa !18
  %4154 = fadd fast double %4076, 1.000000e+00
  %4155 = add nuw nsw i32 %4075, 1
  br i1 %4067, label %4156, label %4203

4156:                                             ; preds = %4147
  %4157 = load i32, ptr %4, align 4, !tbaa !5
  %4158 = load i32, ptr %12, align 4, !tbaa !5
  %4159 = add nsw i32 %4158, -1
  %4160 = icmp slt i32 %4157, %4159
  br i1 %4160, label %4180, label %4161

4161:                                             ; preds = %4156
  %4162 = icmp eq i32 %4157, %4159
  br i1 %4162, label %4163, label %4196

4163:                                             ; preds = %4161
  store i32 0, ptr %4, align 4, !tbaa !5
  %4164 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4164, ptr %6, align 4, !tbaa !5
  br i1 %4072, label %4203, label %4165

4165:                                             ; preds = %4163, %4190
  %4166 = phi i64 [ %4194, %4190 ], [ 1, %4163 ]
  %4167 = getelementptr inbounds i32, ptr %4, i64 %4166
  %4168 = load i32, ptr %4167, align 4, !tbaa !5
  %4169 = getelementptr inbounds i32, ptr %12, i64 %4166
  %4170 = load i32, ptr %4169, align 4, !tbaa !5
  %4171 = add nsw i32 %4170, -1
  %4172 = icmp slt i32 %4168, %4171
  br i1 %4172, label %4173, label %4188

4173:                                             ; preds = %4165
  br i1 %4160, label %4180, label %4174

4174:                                             ; preds = %4173
  %4175 = getelementptr inbounds i32, ptr %7, i64 %4166
  %4176 = load i32, ptr %4175, align 4, !tbaa !5
  %4177 = getelementptr inbounds i32, ptr %6, i64 %4166
  %4178 = load i32, ptr %4177, align 4, !tbaa !5
  %4179 = add nsw i32 %4178, %4176
  store i32 %4179, ptr %4177, align 4, !tbaa !5
  br label %4198

4180:                                             ; preds = %4156, %4173
  %4181 = phi i32 [ %4168, %4173 ], [ %4157, %4156 ]
  %4182 = phi ptr [ %4167, %4173 ], [ %4, %4156 ]
  %4183 = phi i64 [ %4166, %4173 ], [ 0, %4156 ]
  %4184 = add nsw i32 %4181, 1
  store i32 %4184, ptr %4182, align 4, !tbaa !5
  %4185 = getelementptr inbounds i32, ptr %7, i64 %4183
  %4186 = load i32, ptr %4185, align 4, !tbaa !5
  %4187 = getelementptr inbounds i32, ptr %6, i64 %4183
  br label %4198

4188:                                             ; preds = %4165
  %4189 = icmp eq i32 %4168, %4171
  br i1 %4189, label %4190, label %4196

4190:                                             ; preds = %4188
  store i32 0, ptr %4167, align 4, !tbaa !5
  %4191 = getelementptr inbounds i32, ptr %8, i64 %4166
  %4192 = load i32, ptr %4191, align 4, !tbaa !5
  %4193 = getelementptr inbounds i32, ptr %6, i64 %4166
  store i32 %4192, ptr %4193, align 4, !tbaa !5
  %4194 = add nuw nsw i64 %4166, 1
  %4195 = icmp eq i64 %4194, %4070
  br i1 %4195, label %4203, label %4165, !llvm.loop !1437

4196:                                             ; preds = %4161, %4188
  %4197 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4198:                                             ; preds = %4174, %4180
  %4199 = phi ptr [ %4187, %4180 ], [ %4167, %4174 ]
  %4200 = phi i32 [ %4186, %4180 ], [ 1, %4174 ]
  %4201 = load i32, ptr %4199, align 4, !tbaa !5
  %4202 = add nsw i32 %4201, %4200
  store i32 %4202, ptr %4199, align 4, !tbaa !5
  br label %4203

4203:                                             ; preds = %4190, %4198, %4163, %4147
  %4204 = icmp eq i32 %4155, %5
  br i1 %4204, label %5579, label %4073, !llvm.loop !1438

4205:                                             ; preds = %4056, %4340
  %4206 = phi double [ 0.000000e+00, %4056 ], [ %4288, %4340 ]
  %4207 = phi i32 [ 0, %4056 ], [ %4289, %4340 ]
  %4208 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4057, label %4209, label %4278

4209:                                             ; preds = %4205, %4268
  %4210 = phi i32 [ %4277, %4268 ], [ 0, %4205 ]
  %4211 = phi i64 [ %4219, %4268 ], [ %4061, %4205 ]
  %4212 = phi i64 [ %4276, %4268 ], [ %4060, %4205 ]
  %4213 = phi i32 [ %4274, %4268 ], [ %4208, %4205 ]
  %4214 = sub i32 %4059, %4210
  %4215 = tail call i32 @llvm.smin.i32(i32 %4214, i32 0)
  %4216 = sub i32 %4214, %4215
  %4217 = zext i32 %4216 to i64
  %4218 = add nuw nsw i64 %4217, 1
  %4219 = add nsw i64 %4211, -1
  %4220 = icmp ult i32 %4216, 31
  br i1 %4220, label %4256, label %4221

4221:                                             ; preds = %4209
  %4222 = and i64 %4218, 8589934560
  %4223 = sub i64 %4212, %4222
  br label %4224

4224:                                             ; preds = %4224, %4221
  %4225 = phi i64 [ 0, %4221 ], [ %4248, %4224 ]
  %4226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4244, %4224 ]
  %4227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4245, %4224 ]
  %4228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4246, %4224 ]
  %4229 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4221 ], [ %4247, %4224 ]
  %4230 = sub i64 %4212, %4225
  %4231 = getelementptr inbounds i32, ptr %11, i64 %4230
  %4232 = getelementptr inbounds i32, ptr %4231, i64 -7
  %4233 = load <8 x i32>, ptr %4232, align 4, !tbaa !5
  %4234 = shufflevector <8 x i32> %4233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4235 = getelementptr inbounds i32, ptr %4231, i64 -15
  %4236 = load <8 x i32>, ptr %4235, align 4, !tbaa !5
  %4237 = shufflevector <8 x i32> %4236, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4238 = getelementptr inbounds i32, ptr %4231, i64 -23
  %4239 = load <8 x i32>, ptr %4238, align 4, !tbaa !5
  %4240 = shufflevector <8 x i32> %4239, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4241 = getelementptr inbounds i32, ptr %4231, i64 -31
  %4242 = load <8 x i32>, ptr %4241, align 4, !tbaa !5
  %4243 = shufflevector <8 x i32> %4242, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4244 = mul <8 x i32> %4234, %4226
  %4245 = mul <8 x i32> %4237, %4227
  %4246 = mul <8 x i32> %4240, %4228
  %4247 = mul <8 x i32> %4243, %4229
  %4248 = add nuw i64 %4225, 32
  %4249 = icmp eq i64 %4248, %4222
  br i1 %4249, label %4250, label %4224, !llvm.loop !1439

4250:                                             ; preds = %4224
  %4251 = mul <8 x i32> %4245, %4244
  %4252 = mul <8 x i32> %4246, %4251
  %4253 = mul <8 x i32> %4247, %4252
  %4254 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4253)
  %4255 = icmp eq i64 %4218, %4222
  br i1 %4255, label %4268, label %4256

4256:                                             ; preds = %4209, %4250
  %4257 = phi i64 [ %4212, %4209 ], [ %4223, %4250 ]
  %4258 = phi i32 [ 1, %4209 ], [ %4254, %4250 ]
  br label %4259

4259:                                             ; preds = %4256, %4259
  %4260 = phi i64 [ %4265, %4259 ], [ %4257, %4256 ]
  %4261 = phi i32 [ %4264, %4259 ], [ %4258, %4256 ]
  %4262 = getelementptr inbounds i32, ptr %11, i64 %4260
  %4263 = load i32, ptr %4262, align 4, !tbaa !5
  %4264 = mul nsw i32 %4263, %4261
  %4265 = add nsw i64 %4260, -1
  %4266 = trunc i64 %4260 to i32
  %4267 = icmp sgt i32 %4266, 0
  br i1 %4267, label %4259, label %4268, !llvm.loop !1440

4268:                                             ; preds = %4259, %4250
  %4269 = phi i32 [ %4254, %4250 ], [ %4264, %4259 ]
  %4270 = and i64 %4219, 4294967295
  %4271 = getelementptr inbounds i32, ptr %6, i64 %4270
  %4272 = load i32, ptr %4271, align 4, !tbaa !5
  %4273 = mul nsw i32 %4272, %4269
  %4274 = add nsw i32 %4273, %4213
  %4275 = icmp sgt i64 %4211, 2
  %4276 = add nsw i64 %4212, -1
  %4277 = add i32 %4210, 1
  br i1 %4275, label %4209, label %4278, !llvm.loop !1441

4278:                                             ; preds = %4268, %4205
  %4279 = phi i32 [ %4208, %4205 ], [ %4274, %4268 ]
  %4280 = icmp slt i32 %4279, %5
  br i1 %4280, label %4283, label %4281

4281:                                             ; preds = %4278
  %4282 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

4283:                                             ; preds = %4278
  %4284 = sext i32 %4279 to i64
  %4285 = getelementptr inbounds double, ptr %3737, i64 %4284
  %4286 = load double, ptr %4285, align 8, !tbaa !18
  %4287 = tail call fast double @llvm.fabs.f64(double %4286)
  %4288 = tail call fast double @llvm.maxnum.f64(double %4206, double %4287)
  store double %4288, ptr %3739, align 8, !tbaa !18
  %4289 = add nuw nsw i32 %4207, 1
  br i1 %4058, label %4290, label %4340

4290:                                             ; preds = %4283
  %4291 = load i32, ptr %4, align 4, !tbaa !5
  %4292 = load i32, ptr %12, align 4, !tbaa !5
  %4293 = add nsw i32 %4292, -1
  %4294 = icmp slt i32 %4291, %4293
  br i1 %4294, label %4317, label %4295

4295:                                             ; preds = %4290
  %4296 = icmp eq i32 %4291, %4293
  br i1 %4296, label %4297, label %4333

4297:                                             ; preds = %4295
  store i32 0, ptr %4, align 4, !tbaa !5
  %4298 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4298, ptr %6, align 4, !tbaa !5
  br i1 %4063, label %4340, label %4299

4299:                                             ; preds = %4297, %4327
  %4300 = phi i64 [ %4331, %4327 ], [ 1, %4297 ]
  %4301 = getelementptr inbounds i32, ptr %4, i64 %4300
  %4302 = load i32, ptr %4301, align 4, !tbaa !5
  %4303 = getelementptr inbounds i32, ptr %12, i64 %4300
  %4304 = load i32, ptr %4303, align 4, !tbaa !5
  %4305 = add nsw i32 %4304, -1
  %4306 = icmp slt i32 %4302, %4305
  br i1 %4306, label %4307, label %4325

4307:                                             ; preds = %4299
  br i1 %4294, label %4317, label %4308

4308:                                             ; preds = %4307
  %4309 = shl i64 %4300, 32
  %4310 = add i64 %4309, -4294967296
  %4311 = ashr exact i64 %4310, 32
  %4312 = getelementptr inbounds i32, ptr %7, i64 %4311
  %4313 = load i32, ptr %4312, align 4, !tbaa !5
  %4314 = getelementptr inbounds i32, ptr %6, i64 %4300
  %4315 = load i32, ptr %4314, align 4, !tbaa !5
  %4316 = add nsw i32 %4315, %4313
  store i32 %4316, ptr %4314, align 4, !tbaa !5
  br label %4335

4317:                                             ; preds = %4290, %4307
  %4318 = phi i32 [ %4302, %4307 ], [ %4291, %4290 ]
  %4319 = phi ptr [ %4301, %4307 ], [ %4, %4290 ]
  %4320 = phi i64 [ %4300, %4307 ], [ 0, %4290 ]
  %4321 = add nsw i32 %4318, 1
  store i32 %4321, ptr %4319, align 4, !tbaa !5
  %4322 = getelementptr inbounds i32, ptr %7, i64 %4320
  %4323 = load i32, ptr %4322, align 4, !tbaa !5
  %4324 = getelementptr inbounds i32, ptr %6, i64 %4320
  br label %4335

4325:                                             ; preds = %4299
  %4326 = icmp eq i32 %4302, %4305
  br i1 %4326, label %4327, label %4333

4327:                                             ; preds = %4325
  store i32 0, ptr %4301, align 4, !tbaa !5
  %4328 = getelementptr inbounds i32, ptr %8, i64 %4300
  %4329 = load i32, ptr %4328, align 4, !tbaa !5
  %4330 = getelementptr inbounds i32, ptr %6, i64 %4300
  store i32 %4329, ptr %4330, align 4, !tbaa !5
  %4331 = add nuw nsw i64 %4300, 1
  %4332 = icmp eq i64 %4331, %4061
  br i1 %4332, label %4340, label %4299, !llvm.loop !1442

4333:                                             ; preds = %4295, %4325
  %4334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4335:                                             ; preds = %4308, %4317
  %4336 = phi ptr [ %4324, %4317 ], [ %4301, %4308 ]
  %4337 = phi i32 [ %4323, %4317 ], [ 1, %4308 ]
  %4338 = load i32, ptr %4336, align 4, !tbaa !5
  %4339 = add nsw i32 %4338, %4337
  store i32 %4339, ptr %4336, align 4, !tbaa !5
  br label %4340

4340:                                             ; preds = %4327, %4335, %4297, %4283
  %4341 = icmp eq i32 %4289, %5
  br i1 %4341, label %5579, label %4205, !llvm.loop !1443

4342:                                             ; preds = %3746
  %4343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2585, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

4344:                                             ; preds = %18
  %4345 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4346 = load ptr, ptr %4345, align 8, !tbaa !9
  %4347 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4348 = load ptr, ptr %4347, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4348, align 4, !tbaa !162
  %4349 = icmp eq i32 %13, 0
  br i1 %4349, label %4350, label %4356

4350:                                             ; preds = %4344
  %4351 = load double, ptr %4346, align 8, !tbaa !18
  %4352 = fptrunc double %4351 to float
  %4353 = fcmp fast oeq float %4352, 0.000000e+00
  %4354 = tail call fast float @llvm.fabs.f32(float %4352)
  %4355 = select fast i1 %4353, float 0.000000e+00, float %4354
  store float %4355, ptr %4348, align 4, !tbaa !162
  br label %5579

4356:                                             ; preds = %4344
  switch i32 %1, label %4962 [
    i32 1, label %4357
    i32 0, label %4668
  ]

4357:                                             ; preds = %4356
  %4358 = getelementptr inbounds i32, ptr %3, i64 %19
  %4359 = load i32, ptr %4358, align 4, !tbaa !5
  %4360 = icmp eq i32 %4359, 0
  %4361 = icmp sgt i32 %5, 0
  br i1 %4360, label %4371, label %4362

4362:                                             ; preds = %4357
  br i1 %4361, label %4363, label %5579

4363:                                             ; preds = %4362
  %4364 = icmp sgt i32 %13, 1
  %4365 = icmp sgt i32 %13, 0
  %4366 = add i32 %13, -2
  %4367 = zext i32 %4366 to i64
  %4368 = zext i32 %13 to i64
  %4369 = add nuw i32 %5, 1
  %4370 = icmp eq i32 %13, 1
  br label %4523

4371:                                             ; preds = %4357
  br i1 %4361, label %4372, label %5579

4372:                                             ; preds = %4371
  %4373 = icmp sgt i32 %13, 1
  %4374 = icmp sgt i32 %13, 0
  %4375 = add i32 %13, -2
  %4376 = zext i32 %4375 to i64
  %4377 = zext i32 %13 to i64
  %4378 = add nuw i32 %5, 1
  %4379 = icmp eq i32 %13, 1
  br label %4380

4380:                                             ; preds = %4372, %4521
  %4381 = phi float [ 0.000000e+00, %4372 ], [ %4471, %4521 ]
  %4382 = phi i32 [ 0, %4372 ], [ %4473, %4521 ]
  %4383 = phi double [ 0.000000e+00, %4372 ], [ %4472, %4521 ]
  %4384 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4373, label %4385, label %4454

4385:                                             ; preds = %4380, %4444
  %4386 = phi i32 [ %4453, %4444 ], [ 0, %4380 ]
  %4387 = phi i64 [ %4395, %4444 ], [ %4377, %4380 ]
  %4388 = phi i64 [ %4452, %4444 ], [ %4376, %4380 ]
  %4389 = phi i32 [ %4450, %4444 ], [ %4384, %4380 ]
  %4390 = sub i32 %4375, %4386
  %4391 = tail call i32 @llvm.smin.i32(i32 %4390, i32 0)
  %4392 = sub i32 %4390, %4391
  %4393 = zext i32 %4392 to i64
  %4394 = add nuw nsw i64 %4393, 1
  %4395 = add nsw i64 %4387, -1
  %4396 = icmp ult i32 %4392, 31
  br i1 %4396, label %4432, label %4397

4397:                                             ; preds = %4385
  %4398 = and i64 %4394, 8589934560
  %4399 = sub i64 %4388, %4398
  br label %4400

4400:                                             ; preds = %4400, %4397
  %4401 = phi i64 [ 0, %4397 ], [ %4424, %4400 ]
  %4402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4420, %4400 ]
  %4403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4421, %4400 ]
  %4404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4422, %4400 ]
  %4405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4423, %4400 ]
  %4406 = sub i64 %4388, %4401
  %4407 = getelementptr inbounds i32, ptr %9, i64 %4406
  %4408 = getelementptr inbounds i32, ptr %4407, i64 -7
  %4409 = load <8 x i32>, ptr %4408, align 4, !tbaa !5
  %4410 = shufflevector <8 x i32> %4409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4411 = getelementptr inbounds i32, ptr %4407, i64 -15
  %4412 = load <8 x i32>, ptr %4411, align 4, !tbaa !5
  %4413 = shufflevector <8 x i32> %4412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4414 = getelementptr inbounds i32, ptr %4407, i64 -23
  %4415 = load <8 x i32>, ptr %4414, align 4, !tbaa !5
  %4416 = shufflevector <8 x i32> %4415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4417 = getelementptr inbounds i32, ptr %4407, i64 -31
  %4418 = load <8 x i32>, ptr %4417, align 4, !tbaa !5
  %4419 = shufflevector <8 x i32> %4418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4420 = mul <8 x i32> %4410, %4402
  %4421 = mul <8 x i32> %4413, %4403
  %4422 = mul <8 x i32> %4416, %4404
  %4423 = mul <8 x i32> %4419, %4405
  %4424 = add nuw i64 %4401, 32
  %4425 = icmp eq i64 %4424, %4398
  br i1 %4425, label %4426, label %4400, !llvm.loop !1444

4426:                                             ; preds = %4400
  %4427 = mul <8 x i32> %4421, %4420
  %4428 = mul <8 x i32> %4422, %4427
  %4429 = mul <8 x i32> %4423, %4428
  %4430 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4429)
  %4431 = icmp eq i64 %4394, %4398
  br i1 %4431, label %4444, label %4432

4432:                                             ; preds = %4385, %4426
  %4433 = phi i64 [ %4388, %4385 ], [ %4399, %4426 ]
  %4434 = phi i32 [ 1, %4385 ], [ %4430, %4426 ]
  br label %4435

4435:                                             ; preds = %4432, %4435
  %4436 = phi i64 [ %4441, %4435 ], [ %4433, %4432 ]
  %4437 = phi i32 [ %4440, %4435 ], [ %4434, %4432 ]
  %4438 = getelementptr inbounds i32, ptr %9, i64 %4436
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = mul nsw i32 %4439, %4437
  %4441 = add nsw i64 %4436, -1
  %4442 = trunc i64 %4436 to i32
  %4443 = icmp sgt i32 %4442, 0
  br i1 %4443, label %4435, label %4444, !llvm.loop !1445

4444:                                             ; preds = %4435, %4426
  %4445 = phi i32 [ %4430, %4426 ], [ %4440, %4435 ]
  %4446 = and i64 %4395, 4294967295
  %4447 = getelementptr inbounds i32, ptr %6, i64 %4446
  %4448 = load i32, ptr %4447, align 4, !tbaa !5
  %4449 = mul nsw i32 %4448, %4445
  %4450 = add nsw i32 %4449, %4389
  %4451 = icmp sgt i64 %4387, 2
  %4452 = add nsw i64 %4388, -1
  %4453 = add i32 %4386, 1
  br i1 %4451, label %4385, label %4454, !llvm.loop !1446

4454:                                             ; preds = %4444, %4380
  %4455 = phi i32 [ %4384, %4380 ], [ %4450, %4444 ]
  %4456 = sext i32 %4455 to i64
  %4457 = getelementptr inbounds double, ptr %2, i64 %4456
  %4458 = load double, ptr %4457, align 8, !tbaa !18
  %4459 = getelementptr inbounds double, ptr %4346, i64 %4456
  %4460 = load double, ptr %4459, align 8, !tbaa !18
  %4461 = fptrunc double %4460 to float
  %4462 = fpext float %4381 to double
  %4463 = fpext float %4461 to double
  %4464 = fmul fast double %4458, %4463
  %4465 = fcmp fast uge double %4464, 0.000000e+00
  %4466 = fneg fast double %4464
  %4467 = tail call fast double @llvm.fabs.f64(double %4464)
  %4468 = fcmp fast ole double %4467, %4462
  %4469 = select nnan ninf i1 %4465, double %4464, double %4466
  %4470 = fptrunc double %4469 to float
  %4471 = select i1 %4468, float %4381, float %4470
  %4472 = fadd fast double %4458, %4383
  %4473 = add nuw nsw i32 %4382, 1
  br i1 %4374, label %4474, label %4521

4474:                                             ; preds = %4454
  %4475 = load i32, ptr %4, align 4, !tbaa !5
  %4476 = load i32, ptr %12, align 4, !tbaa !5
  %4477 = add nsw i32 %4476, -1
  %4478 = icmp slt i32 %4475, %4477
  br i1 %4478, label %4498, label %4479

4479:                                             ; preds = %4474
  %4480 = icmp eq i32 %4475, %4477
  br i1 %4480, label %4481, label %4514

4481:                                             ; preds = %4479
  store i32 0, ptr %4, align 4, !tbaa !5
  %4482 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4482, ptr %6, align 4, !tbaa !5
  br i1 %4379, label %4521, label %4483

4483:                                             ; preds = %4481, %4508
  %4484 = phi i64 [ %4512, %4508 ], [ 1, %4481 ]
  %4485 = getelementptr inbounds i32, ptr %4, i64 %4484
  %4486 = load i32, ptr %4485, align 4, !tbaa !5
  %4487 = getelementptr inbounds i32, ptr %12, i64 %4484
  %4488 = load i32, ptr %4487, align 4, !tbaa !5
  %4489 = add nsw i32 %4488, -1
  %4490 = icmp slt i32 %4486, %4489
  br i1 %4490, label %4491, label %4506

4491:                                             ; preds = %4483
  br i1 %4478, label %4498, label %4492

4492:                                             ; preds = %4491
  %4493 = getelementptr inbounds i32, ptr %7, i64 %4484
  %4494 = load i32, ptr %4493, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %6, i64 %4484
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = add nsw i32 %4496, %4494
  store i32 %4497, ptr %4495, align 4, !tbaa !5
  br label %4516

4498:                                             ; preds = %4474, %4491
  %4499 = phi i32 [ %4486, %4491 ], [ %4475, %4474 ]
  %4500 = phi ptr [ %4485, %4491 ], [ %4, %4474 ]
  %4501 = phi i64 [ %4484, %4491 ], [ 0, %4474 ]
  %4502 = add nsw i32 %4499, 1
  store i32 %4502, ptr %4500, align 4, !tbaa !5
  %4503 = getelementptr inbounds i32, ptr %7, i64 %4501
  %4504 = load i32, ptr %4503, align 4, !tbaa !5
  %4505 = getelementptr inbounds i32, ptr %6, i64 %4501
  br label %4516

4506:                                             ; preds = %4483
  %4507 = icmp eq i32 %4486, %4489
  br i1 %4507, label %4508, label %4514

4508:                                             ; preds = %4506
  store i32 0, ptr %4485, align 4, !tbaa !5
  %4509 = getelementptr inbounds i32, ptr %8, i64 %4484
  %4510 = load i32, ptr %4509, align 4, !tbaa !5
  %4511 = getelementptr inbounds i32, ptr %6, i64 %4484
  store i32 %4510, ptr %4511, align 4, !tbaa !5
  %4512 = add nuw nsw i64 %4484, 1
  %4513 = icmp eq i64 %4512, %4377
  br i1 %4513, label %4521, label %4483, !llvm.loop !1447

4514:                                             ; preds = %4479, %4506
  store float %4471, ptr %4348, align 4, !tbaa !162
  %4515 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4516:                                             ; preds = %4492, %4498
  %4517 = phi ptr [ %4505, %4498 ], [ %4485, %4492 ]
  %4518 = phi i32 [ %4504, %4498 ], [ 1, %4492 ]
  %4519 = load i32, ptr %4517, align 4, !tbaa !5
  %4520 = add nsw i32 %4519, %4518
  store i32 %4520, ptr %4517, align 4, !tbaa !5
  br label %4521

4521:                                             ; preds = %4508, %4516, %4481, %4454
  %4522 = icmp eq i32 %4473, %5
  br i1 %4522, label %5577, label %4380, !llvm.loop !1448

4523:                                             ; preds = %4363, %4666
  %4524 = phi float [ 0.000000e+00, %4363 ], [ %4614, %4666 ]
  %4525 = phi i32 [ 0, %4363 ], [ %4615, %4666 ]
  %4526 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4364, label %4527, label %4596

4527:                                             ; preds = %4523, %4586
  %4528 = phi i32 [ %4595, %4586 ], [ 0, %4523 ]
  %4529 = phi i64 [ %4537, %4586 ], [ %4368, %4523 ]
  %4530 = phi i64 [ %4594, %4586 ], [ %4367, %4523 ]
  %4531 = phi i32 [ %4592, %4586 ], [ %4526, %4523 ]
  %4532 = sub i32 %4366, %4528
  %4533 = tail call i32 @llvm.smin.i32(i32 %4532, i32 0)
  %4534 = sub i32 %4532, %4533
  %4535 = zext i32 %4534 to i64
  %4536 = add nuw nsw i64 %4535, 1
  %4537 = add nsw i64 %4529, -1
  %4538 = icmp ult i32 %4534, 31
  br i1 %4538, label %4574, label %4539

4539:                                             ; preds = %4527
  %4540 = and i64 %4536, 8589934560
  %4541 = sub i64 %4530, %4540
  br label %4542

4542:                                             ; preds = %4542, %4539
  %4543 = phi i64 [ 0, %4539 ], [ %4566, %4542 ]
  %4544 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4562, %4542 ]
  %4545 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4563, %4542 ]
  %4546 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4564, %4542 ]
  %4547 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4539 ], [ %4565, %4542 ]
  %4548 = sub i64 %4530, %4543
  %4549 = getelementptr inbounds i32, ptr %11, i64 %4548
  %4550 = getelementptr inbounds i32, ptr %4549, i64 -7
  %4551 = load <8 x i32>, ptr %4550, align 4, !tbaa !5
  %4552 = shufflevector <8 x i32> %4551, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4553 = getelementptr inbounds i32, ptr %4549, i64 -15
  %4554 = load <8 x i32>, ptr %4553, align 4, !tbaa !5
  %4555 = shufflevector <8 x i32> %4554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4556 = getelementptr inbounds i32, ptr %4549, i64 -23
  %4557 = load <8 x i32>, ptr %4556, align 4, !tbaa !5
  %4558 = shufflevector <8 x i32> %4557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4559 = getelementptr inbounds i32, ptr %4549, i64 -31
  %4560 = load <8 x i32>, ptr %4559, align 4, !tbaa !5
  %4561 = shufflevector <8 x i32> %4560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4562 = mul <8 x i32> %4552, %4544
  %4563 = mul <8 x i32> %4555, %4545
  %4564 = mul <8 x i32> %4558, %4546
  %4565 = mul <8 x i32> %4561, %4547
  %4566 = add nuw i64 %4543, 32
  %4567 = icmp eq i64 %4566, %4540
  br i1 %4567, label %4568, label %4542, !llvm.loop !1449

4568:                                             ; preds = %4542
  %4569 = mul <8 x i32> %4563, %4562
  %4570 = mul <8 x i32> %4564, %4569
  %4571 = mul <8 x i32> %4565, %4570
  %4572 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4571)
  %4573 = icmp eq i64 %4536, %4540
  br i1 %4573, label %4586, label %4574

4574:                                             ; preds = %4527, %4568
  %4575 = phi i64 [ %4530, %4527 ], [ %4541, %4568 ]
  %4576 = phi i32 [ 1, %4527 ], [ %4572, %4568 ]
  br label %4577

4577:                                             ; preds = %4574, %4577
  %4578 = phi i64 [ %4583, %4577 ], [ %4575, %4574 ]
  %4579 = phi i32 [ %4582, %4577 ], [ %4576, %4574 ]
  %4580 = getelementptr inbounds i32, ptr %11, i64 %4578
  %4581 = load i32, ptr %4580, align 4, !tbaa !5
  %4582 = mul nsw i32 %4581, %4579
  %4583 = add nsw i64 %4578, -1
  %4584 = trunc i64 %4578 to i32
  %4585 = icmp sgt i32 %4584, 0
  br i1 %4585, label %4577, label %4586, !llvm.loop !1450

4586:                                             ; preds = %4577, %4568
  %4587 = phi i32 [ %4572, %4568 ], [ %4582, %4577 ]
  %4588 = and i64 %4537, 4294967295
  %4589 = getelementptr inbounds i32, ptr %6, i64 %4588
  %4590 = load i32, ptr %4589, align 4, !tbaa !5
  %4591 = mul nsw i32 %4590, %4587
  %4592 = add nsw i32 %4591, %4531
  %4593 = icmp sgt i64 %4529, 2
  %4594 = add nsw i64 %4530, -1
  %4595 = add i32 %4528, 1
  br i1 %4593, label %4527, label %4596, !llvm.loop !1451

4596:                                             ; preds = %4586, %4523
  %4597 = phi i32 [ %4526, %4523 ], [ %4592, %4586 ]
  %4598 = icmp slt i32 %4597, %5
  br i1 %4598, label %4601, label %4599

4599:                                             ; preds = %4596
  %4600 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

4601:                                             ; preds = %4596
  %4602 = sext i32 %4597 to i64
  %4603 = getelementptr inbounds double, ptr %4346, i64 %4602
  %4604 = load double, ptr %4603, align 8, !tbaa !18
  %4605 = fptrunc double %4604 to float
  %4606 = fpext float %4524 to double
  %4607 = fpext float %4605 to double
  %4608 = fcmp fast uge float %4605, 0.000000e+00
  %4609 = fneg fast double %4607
  %4610 = select fast i1 %4608, double %4607, double %4609
  %4611 = fcmp fast ole double %4610, %4606
  %4612 = fptrunc double %4609 to float
  %4613 = select i1 %4608, float %4605, float %4612
  %4614 = select i1 %4611, float %4524, float %4613
  store float %4614, ptr %4348, align 4, !tbaa !162
  %4615 = add nuw nsw i32 %4525, 1
  br i1 %4365, label %4616, label %4666

4616:                                             ; preds = %4601
  %4617 = load i32, ptr %4, align 4, !tbaa !5
  %4618 = load i32, ptr %12, align 4, !tbaa !5
  %4619 = add nsw i32 %4618, -1
  %4620 = icmp slt i32 %4617, %4619
  br i1 %4620, label %4643, label %4621

4621:                                             ; preds = %4616
  %4622 = icmp eq i32 %4617, %4619
  br i1 %4622, label %4623, label %4659

4623:                                             ; preds = %4621
  store i32 0, ptr %4, align 4, !tbaa !5
  %4624 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4624, ptr %6, align 4, !tbaa !5
  br i1 %4370, label %4666, label %4625

4625:                                             ; preds = %4623, %4653
  %4626 = phi i64 [ %4657, %4653 ], [ 1, %4623 ]
  %4627 = getelementptr inbounds i32, ptr %4, i64 %4626
  %4628 = load i32, ptr %4627, align 4, !tbaa !5
  %4629 = getelementptr inbounds i32, ptr %12, i64 %4626
  %4630 = load i32, ptr %4629, align 4, !tbaa !5
  %4631 = add nsw i32 %4630, -1
  %4632 = icmp slt i32 %4628, %4631
  br i1 %4632, label %4633, label %4651

4633:                                             ; preds = %4625
  br i1 %4620, label %4643, label %4634

4634:                                             ; preds = %4633
  %4635 = shl i64 %4626, 32
  %4636 = add i64 %4635, -4294967296
  %4637 = ashr exact i64 %4636, 32
  %4638 = getelementptr inbounds i32, ptr %7, i64 %4637
  %4639 = load i32, ptr %4638, align 4, !tbaa !5
  %4640 = getelementptr inbounds i32, ptr %6, i64 %4626
  %4641 = load i32, ptr %4640, align 4, !tbaa !5
  %4642 = add nsw i32 %4641, %4639
  store i32 %4642, ptr %4640, align 4, !tbaa !5
  br label %4661

4643:                                             ; preds = %4616, %4633
  %4644 = phi i32 [ %4628, %4633 ], [ %4617, %4616 ]
  %4645 = phi ptr [ %4627, %4633 ], [ %4, %4616 ]
  %4646 = phi i64 [ %4626, %4633 ], [ 0, %4616 ]
  %4647 = add nsw i32 %4644, 1
  store i32 %4647, ptr %4645, align 4, !tbaa !5
  %4648 = getelementptr inbounds i32, ptr %7, i64 %4646
  %4649 = load i32, ptr %4648, align 4, !tbaa !5
  %4650 = getelementptr inbounds i32, ptr %6, i64 %4646
  br label %4661

4651:                                             ; preds = %4625
  %4652 = icmp eq i32 %4628, %4631
  br i1 %4652, label %4653, label %4659

4653:                                             ; preds = %4651
  store i32 0, ptr %4627, align 4, !tbaa !5
  %4654 = getelementptr inbounds i32, ptr %8, i64 %4626
  %4655 = load i32, ptr %4654, align 4, !tbaa !5
  %4656 = getelementptr inbounds i32, ptr %6, i64 %4626
  store i32 %4655, ptr %4656, align 4, !tbaa !5
  %4657 = add nuw nsw i64 %4626, 1
  %4658 = icmp eq i64 %4657, %4368
  br i1 %4658, label %4666, label %4625, !llvm.loop !1452

4659:                                             ; preds = %4621, %4651
  %4660 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4661:                                             ; preds = %4634, %4643
  %4662 = phi ptr [ %4650, %4643 ], [ %4627, %4634 ]
  %4663 = phi i32 [ %4649, %4643 ], [ 1, %4634 ]
  %4664 = load i32, ptr %4662, align 4, !tbaa !5
  %4665 = add nsw i32 %4664, %4663
  store i32 %4665, ptr %4662, align 4, !tbaa !5
  br label %4666

4666:                                             ; preds = %4653, %4661, %4623, %4601
  %4667 = icmp eq i32 %4615, %5
  br i1 %4667, label %5579, label %4523, !llvm.loop !1453

4668:                                             ; preds = %4356
  %4669 = getelementptr inbounds i32, ptr %3, i64 %19
  %4670 = load i32, ptr %4669, align 4, !tbaa !5
  %4671 = icmp eq i32 %4670, 0
  %4672 = icmp sgt i32 %5, 0
  br i1 %4671, label %4682, label %4673

4673:                                             ; preds = %4668
  br i1 %4672, label %4674, label %5579

4674:                                             ; preds = %4673
  %4675 = icmp sgt i32 %13, 1
  %4676 = icmp sgt i32 %13, 0
  %4677 = add i32 %13, -2
  %4678 = zext i32 %4677 to i64
  %4679 = zext i32 %13 to i64
  %4680 = add nuw i32 %5, 1
  %4681 = icmp eq i32 %13, 1
  br label %4824

4682:                                             ; preds = %4668
  br i1 %4672, label %4683, label %5579

4683:                                             ; preds = %4682
  %4684 = icmp sgt i32 %13, 1
  %4685 = icmp sgt i32 %13, 0
  %4686 = add i32 %13, -2
  %4687 = zext i32 %4686 to i64
  %4688 = zext i32 %13 to i64
  %4689 = add nuw i32 %5, 1
  %4690 = icmp eq i32 %13, 1
  br label %4691

4691:                                             ; preds = %4683, %4822
  %4692 = phi float [ 0.000000e+00, %4683 ], [ %4772, %4822 ]
  %4693 = phi i32 [ 0, %4683 ], [ %4774, %4822 ]
  %4694 = phi double [ 0.000000e+00, %4683 ], [ %4773, %4822 ]
  %4695 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4684, label %4696, label %4765

4696:                                             ; preds = %4691, %4755
  %4697 = phi i32 [ %4764, %4755 ], [ 0, %4691 ]
  %4698 = phi i64 [ %4706, %4755 ], [ %4688, %4691 ]
  %4699 = phi i64 [ %4763, %4755 ], [ %4687, %4691 ]
  %4700 = phi i32 [ %4761, %4755 ], [ %4695, %4691 ]
  %4701 = sub i32 %4686, %4697
  %4702 = tail call i32 @llvm.smin.i32(i32 %4701, i32 0)
  %4703 = sub i32 %4701, %4702
  %4704 = zext i32 %4703 to i64
  %4705 = add nuw nsw i64 %4704, 1
  %4706 = add nsw i64 %4698, -1
  %4707 = icmp ult i32 %4703, 31
  br i1 %4707, label %4743, label %4708

4708:                                             ; preds = %4696
  %4709 = and i64 %4705, 8589934560
  %4710 = sub i64 %4699, %4709
  br label %4711

4711:                                             ; preds = %4711, %4708
  %4712 = phi i64 [ 0, %4708 ], [ %4735, %4711 ]
  %4713 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4731, %4711 ]
  %4714 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4732, %4711 ]
  %4715 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4733, %4711 ]
  %4716 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4708 ], [ %4734, %4711 ]
  %4717 = sub i64 %4699, %4712
  %4718 = getelementptr inbounds i32, ptr %9, i64 %4717
  %4719 = getelementptr inbounds i32, ptr %4718, i64 -7
  %4720 = load <8 x i32>, ptr %4719, align 4, !tbaa !5
  %4721 = shufflevector <8 x i32> %4720, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4722 = getelementptr inbounds i32, ptr %4718, i64 -15
  %4723 = load <8 x i32>, ptr %4722, align 4, !tbaa !5
  %4724 = shufflevector <8 x i32> %4723, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4725 = getelementptr inbounds i32, ptr %4718, i64 -23
  %4726 = load <8 x i32>, ptr %4725, align 4, !tbaa !5
  %4727 = shufflevector <8 x i32> %4726, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4728 = getelementptr inbounds i32, ptr %4718, i64 -31
  %4729 = load <8 x i32>, ptr %4728, align 4, !tbaa !5
  %4730 = shufflevector <8 x i32> %4729, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4731 = mul <8 x i32> %4721, %4713
  %4732 = mul <8 x i32> %4724, %4714
  %4733 = mul <8 x i32> %4727, %4715
  %4734 = mul <8 x i32> %4730, %4716
  %4735 = add nuw i64 %4712, 32
  %4736 = icmp eq i64 %4735, %4709
  br i1 %4736, label %4737, label %4711, !llvm.loop !1454

4737:                                             ; preds = %4711
  %4738 = mul <8 x i32> %4732, %4731
  %4739 = mul <8 x i32> %4733, %4738
  %4740 = mul <8 x i32> %4734, %4739
  %4741 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4740)
  %4742 = icmp eq i64 %4705, %4709
  br i1 %4742, label %4755, label %4743

4743:                                             ; preds = %4696, %4737
  %4744 = phi i64 [ %4699, %4696 ], [ %4710, %4737 ]
  %4745 = phi i32 [ 1, %4696 ], [ %4741, %4737 ]
  br label %4746

4746:                                             ; preds = %4743, %4746
  %4747 = phi i64 [ %4752, %4746 ], [ %4744, %4743 ]
  %4748 = phi i32 [ %4751, %4746 ], [ %4745, %4743 ]
  %4749 = getelementptr inbounds i32, ptr %9, i64 %4747
  %4750 = load i32, ptr %4749, align 4, !tbaa !5
  %4751 = mul nsw i32 %4750, %4748
  %4752 = add nsw i64 %4747, -1
  %4753 = trunc i64 %4747 to i32
  %4754 = icmp sgt i32 %4753, 0
  br i1 %4754, label %4746, label %4755, !llvm.loop !1455

4755:                                             ; preds = %4746, %4737
  %4756 = phi i32 [ %4741, %4737 ], [ %4751, %4746 ]
  %4757 = and i64 %4706, 4294967295
  %4758 = getelementptr inbounds i32, ptr %6, i64 %4757
  %4759 = load i32, ptr %4758, align 4, !tbaa !5
  %4760 = mul nsw i32 %4759, %4756
  %4761 = add nsw i32 %4760, %4700
  %4762 = icmp sgt i64 %4698, 2
  %4763 = add nsw i64 %4699, -1
  %4764 = add i32 %4697, 1
  br i1 %4762, label %4696, label %4765, !llvm.loop !1456

4765:                                             ; preds = %4755, %4691
  %4766 = phi i32 [ %4695, %4691 ], [ %4761, %4755 ]
  %4767 = sext i32 %4766 to i64
  %4768 = getelementptr inbounds double, ptr %4346, i64 %4767
  %4769 = load double, ptr %4768, align 8, !tbaa !18
  %4770 = fptrunc double %4769 to float
  %4771 = tail call fast float @llvm.fabs.f32(float %4770)
  %4772 = tail call fast float @llvm.maxnum.f32(float %4692, float %4771)
  %4773 = fadd fast double %4694, 1.000000e+00
  %4774 = add nuw nsw i32 %4693, 1
  br i1 %4685, label %4775, label %4822

4775:                                             ; preds = %4765
  %4776 = load i32, ptr %4, align 4, !tbaa !5
  %4777 = load i32, ptr %12, align 4, !tbaa !5
  %4778 = add nsw i32 %4777, -1
  %4779 = icmp slt i32 %4776, %4778
  br i1 %4779, label %4799, label %4780

4780:                                             ; preds = %4775
  %4781 = icmp eq i32 %4776, %4778
  br i1 %4781, label %4782, label %4815

4782:                                             ; preds = %4780
  store i32 0, ptr %4, align 4, !tbaa !5
  %4783 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4783, ptr %6, align 4, !tbaa !5
  br i1 %4690, label %4822, label %4784

4784:                                             ; preds = %4782, %4809
  %4785 = phi i64 [ %4813, %4809 ], [ 1, %4782 ]
  %4786 = getelementptr inbounds i32, ptr %4, i64 %4785
  %4787 = load i32, ptr %4786, align 4, !tbaa !5
  %4788 = getelementptr inbounds i32, ptr %12, i64 %4785
  %4789 = load i32, ptr %4788, align 4, !tbaa !5
  %4790 = add nsw i32 %4789, -1
  %4791 = icmp slt i32 %4787, %4790
  br i1 %4791, label %4792, label %4807

4792:                                             ; preds = %4784
  br i1 %4779, label %4799, label %4793

4793:                                             ; preds = %4792
  %4794 = getelementptr inbounds i32, ptr %7, i64 %4785
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = getelementptr inbounds i32, ptr %6, i64 %4785
  %4797 = load i32, ptr %4796, align 4, !tbaa !5
  %4798 = add nsw i32 %4797, %4795
  store i32 %4798, ptr %4796, align 4, !tbaa !5
  br label %4817

4799:                                             ; preds = %4775, %4792
  %4800 = phi i32 [ %4787, %4792 ], [ %4776, %4775 ]
  %4801 = phi ptr [ %4786, %4792 ], [ %4, %4775 ]
  %4802 = phi i64 [ %4785, %4792 ], [ 0, %4775 ]
  %4803 = add nsw i32 %4800, 1
  store i32 %4803, ptr %4801, align 4, !tbaa !5
  %4804 = getelementptr inbounds i32, ptr %7, i64 %4802
  %4805 = load i32, ptr %4804, align 4, !tbaa !5
  %4806 = getelementptr inbounds i32, ptr %6, i64 %4802
  br label %4817

4807:                                             ; preds = %4784
  %4808 = icmp eq i32 %4787, %4790
  br i1 %4808, label %4809, label %4815

4809:                                             ; preds = %4807
  store i32 0, ptr %4786, align 4, !tbaa !5
  %4810 = getelementptr inbounds i32, ptr %8, i64 %4785
  %4811 = load i32, ptr %4810, align 4, !tbaa !5
  %4812 = getelementptr inbounds i32, ptr %6, i64 %4785
  store i32 %4811, ptr %4812, align 4, !tbaa !5
  %4813 = add nuw nsw i64 %4785, 1
  %4814 = icmp eq i64 %4813, %4688
  br i1 %4814, label %4822, label %4784, !llvm.loop !1457

4815:                                             ; preds = %4780, %4807
  store float %4772, ptr %4348, align 4, !tbaa !162
  %4816 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4817:                                             ; preds = %4793, %4799
  %4818 = phi ptr [ %4806, %4799 ], [ %4786, %4793 ]
  %4819 = phi i32 [ %4805, %4799 ], [ 1, %4793 ]
  %4820 = load i32, ptr %4818, align 4, !tbaa !5
  %4821 = add nsw i32 %4820, %4819
  store i32 %4821, ptr %4818, align 4, !tbaa !5
  br label %4822

4822:                                             ; preds = %4809, %4817, %4782, %4765
  %4823 = icmp eq i32 %4774, %5
  br i1 %4823, label %5578, label %4691, !llvm.loop !1458

4824:                                             ; preds = %4674, %4960
  %4825 = phi float [ 0.000000e+00, %4674 ], [ %4908, %4960 ]
  %4826 = phi i32 [ 0, %4674 ], [ %4909, %4960 ]
  %4827 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4675, label %4828, label %4897

4828:                                             ; preds = %4824, %4887
  %4829 = phi i32 [ %4896, %4887 ], [ 0, %4824 ]
  %4830 = phi i64 [ %4838, %4887 ], [ %4679, %4824 ]
  %4831 = phi i64 [ %4895, %4887 ], [ %4678, %4824 ]
  %4832 = phi i32 [ %4893, %4887 ], [ %4827, %4824 ]
  %4833 = sub i32 %4677, %4829
  %4834 = tail call i32 @llvm.smin.i32(i32 %4833, i32 0)
  %4835 = sub i32 %4833, %4834
  %4836 = zext i32 %4835 to i64
  %4837 = add nuw nsw i64 %4836, 1
  %4838 = add nsw i64 %4830, -1
  %4839 = icmp ult i32 %4835, 31
  br i1 %4839, label %4875, label %4840

4840:                                             ; preds = %4828
  %4841 = and i64 %4837, 8589934560
  %4842 = sub i64 %4831, %4841
  br label %4843

4843:                                             ; preds = %4843, %4840
  %4844 = phi i64 [ 0, %4840 ], [ %4867, %4843 ]
  %4845 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4863, %4843 ]
  %4846 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4864, %4843 ]
  %4847 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4865, %4843 ]
  %4848 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4840 ], [ %4866, %4843 ]
  %4849 = sub i64 %4831, %4844
  %4850 = getelementptr inbounds i32, ptr %11, i64 %4849
  %4851 = getelementptr inbounds i32, ptr %4850, i64 -7
  %4852 = load <8 x i32>, ptr %4851, align 4, !tbaa !5
  %4853 = shufflevector <8 x i32> %4852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4854 = getelementptr inbounds i32, ptr %4850, i64 -15
  %4855 = load <8 x i32>, ptr %4854, align 4, !tbaa !5
  %4856 = shufflevector <8 x i32> %4855, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4857 = getelementptr inbounds i32, ptr %4850, i64 -23
  %4858 = load <8 x i32>, ptr %4857, align 4, !tbaa !5
  %4859 = shufflevector <8 x i32> %4858, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4860 = getelementptr inbounds i32, ptr %4850, i64 -31
  %4861 = load <8 x i32>, ptr %4860, align 4, !tbaa !5
  %4862 = shufflevector <8 x i32> %4861, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4863 = mul <8 x i32> %4853, %4845
  %4864 = mul <8 x i32> %4856, %4846
  %4865 = mul <8 x i32> %4859, %4847
  %4866 = mul <8 x i32> %4862, %4848
  %4867 = add nuw i64 %4844, 32
  %4868 = icmp eq i64 %4867, %4841
  br i1 %4868, label %4869, label %4843, !llvm.loop !1459

4869:                                             ; preds = %4843
  %4870 = mul <8 x i32> %4864, %4863
  %4871 = mul <8 x i32> %4865, %4870
  %4872 = mul <8 x i32> %4866, %4871
  %4873 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4872)
  %4874 = icmp eq i64 %4837, %4841
  br i1 %4874, label %4887, label %4875

4875:                                             ; preds = %4828, %4869
  %4876 = phi i64 [ %4831, %4828 ], [ %4842, %4869 ]
  %4877 = phi i32 [ 1, %4828 ], [ %4873, %4869 ]
  br label %4878

4878:                                             ; preds = %4875, %4878
  %4879 = phi i64 [ %4884, %4878 ], [ %4876, %4875 ]
  %4880 = phi i32 [ %4883, %4878 ], [ %4877, %4875 ]
  %4881 = getelementptr inbounds i32, ptr %11, i64 %4879
  %4882 = load i32, ptr %4881, align 4, !tbaa !5
  %4883 = mul nsw i32 %4882, %4880
  %4884 = add nsw i64 %4879, -1
  %4885 = trunc i64 %4879 to i32
  %4886 = icmp sgt i32 %4885, 0
  br i1 %4886, label %4878, label %4887, !llvm.loop !1460

4887:                                             ; preds = %4878, %4869
  %4888 = phi i32 [ %4873, %4869 ], [ %4883, %4878 ]
  %4889 = and i64 %4838, 4294967295
  %4890 = getelementptr inbounds i32, ptr %6, i64 %4889
  %4891 = load i32, ptr %4890, align 4, !tbaa !5
  %4892 = mul nsw i32 %4891, %4888
  %4893 = add nsw i32 %4892, %4832
  %4894 = icmp sgt i64 %4830, 2
  %4895 = add nsw i64 %4831, -1
  %4896 = add i32 %4829, 1
  br i1 %4894, label %4828, label %4897, !llvm.loop !1461

4897:                                             ; preds = %4887, %4824
  %4898 = phi i32 [ %4827, %4824 ], [ %4893, %4887 ]
  %4899 = icmp slt i32 %4898, %5
  br i1 %4899, label %4902, label %4900

4900:                                             ; preds = %4897
  %4901 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

4902:                                             ; preds = %4897
  %4903 = sext i32 %4898 to i64
  %4904 = getelementptr inbounds double, ptr %4346, i64 %4903
  %4905 = load double, ptr %4904, align 8, !tbaa !18
  %4906 = fptrunc double %4905 to float
  %4907 = tail call fast float @llvm.fabs.f32(float %4906)
  %4908 = tail call fast float @llvm.maxnum.f32(float %4825, float %4907)
  store float %4908, ptr %4348, align 4, !tbaa !162
  %4909 = add nuw nsw i32 %4826, 1
  br i1 %4676, label %4910, label %4960

4910:                                             ; preds = %4902
  %4911 = load i32, ptr %4, align 4, !tbaa !5
  %4912 = load i32, ptr %12, align 4, !tbaa !5
  %4913 = add nsw i32 %4912, -1
  %4914 = icmp slt i32 %4911, %4913
  br i1 %4914, label %4937, label %4915

4915:                                             ; preds = %4910
  %4916 = icmp eq i32 %4911, %4913
  br i1 %4916, label %4917, label %4953

4917:                                             ; preds = %4915
  store i32 0, ptr %4, align 4, !tbaa !5
  %4918 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4918, ptr %6, align 4, !tbaa !5
  br i1 %4681, label %4960, label %4919

4919:                                             ; preds = %4917, %4947
  %4920 = phi i64 [ %4951, %4947 ], [ 1, %4917 ]
  %4921 = getelementptr inbounds i32, ptr %4, i64 %4920
  %4922 = load i32, ptr %4921, align 4, !tbaa !5
  %4923 = getelementptr inbounds i32, ptr %12, i64 %4920
  %4924 = load i32, ptr %4923, align 4, !tbaa !5
  %4925 = add nsw i32 %4924, -1
  %4926 = icmp slt i32 %4922, %4925
  br i1 %4926, label %4927, label %4945

4927:                                             ; preds = %4919
  br i1 %4914, label %4937, label %4928

4928:                                             ; preds = %4927
  %4929 = shl i64 %4920, 32
  %4930 = add i64 %4929, -4294967296
  %4931 = ashr exact i64 %4930, 32
  %4932 = getelementptr inbounds i32, ptr %7, i64 %4931
  %4933 = load i32, ptr %4932, align 4, !tbaa !5
  %4934 = getelementptr inbounds i32, ptr %6, i64 %4920
  %4935 = load i32, ptr %4934, align 4, !tbaa !5
  %4936 = add nsw i32 %4935, %4933
  store i32 %4936, ptr %4934, align 4, !tbaa !5
  br label %4955

4937:                                             ; preds = %4910, %4927
  %4938 = phi i32 [ %4922, %4927 ], [ %4911, %4910 ]
  %4939 = phi ptr [ %4921, %4927 ], [ %4, %4910 ]
  %4940 = phi i64 [ %4920, %4927 ], [ 0, %4910 ]
  %4941 = add nsw i32 %4938, 1
  store i32 %4941, ptr %4939, align 4, !tbaa !5
  %4942 = getelementptr inbounds i32, ptr %7, i64 %4940
  %4943 = load i32, ptr %4942, align 4, !tbaa !5
  %4944 = getelementptr inbounds i32, ptr %6, i64 %4940
  br label %4955

4945:                                             ; preds = %4919
  %4946 = icmp eq i32 %4922, %4925
  br i1 %4946, label %4947, label %4953

4947:                                             ; preds = %4945
  store i32 0, ptr %4921, align 4, !tbaa !5
  %4948 = getelementptr inbounds i32, ptr %8, i64 %4920
  %4949 = load i32, ptr %4948, align 4, !tbaa !5
  %4950 = getelementptr inbounds i32, ptr %6, i64 %4920
  store i32 %4949, ptr %4950, align 4, !tbaa !5
  %4951 = add nuw nsw i64 %4920, 1
  %4952 = icmp eq i64 %4951, %4679
  br i1 %4952, label %4960, label %4919, !llvm.loop !1462

4953:                                             ; preds = %4915, %4945
  %4954 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

4955:                                             ; preds = %4928, %4937
  %4956 = phi ptr [ %4944, %4937 ], [ %4921, %4928 ]
  %4957 = phi i32 [ %4943, %4937 ], [ 1, %4928 ]
  %4958 = load i32, ptr %4956, align 4, !tbaa !5
  %4959 = add nsw i32 %4958, %4957
  store i32 %4959, ptr %4956, align 4, !tbaa !5
  br label %4960

4960:                                             ; preds = %4947, %4955, %4917, %4902
  %4961 = icmp eq i32 %4909, %5
  br i1 %4961, label %5579, label %4824, !llvm.loop !1463

4962:                                             ; preds = %4356
  %4963 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2589, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

4964:                                             ; preds = %18
  %4965 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4966 = load ptr, ptr %4965, align 8, !tbaa !9
  %4967 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4968 = load ptr, ptr %4967, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4968, align 8, !tbaa !18
  %4969 = icmp eq i32 %13, 0
  br i1 %4969, label %4970, label %4975

4970:                                             ; preds = %4964
  %4971 = load double, ptr %4966, align 8, !tbaa !18
  %4972 = fcmp fast oeq double %4971, 0.000000e+00
  %4973 = tail call fast double @llvm.fabs.f64(double %4971)
  %4974 = select fast i1 %4972, double 0.000000e+00, double %4973
  store double %4974, ptr %4968, align 8, !tbaa !18
  br label %5579

4975:                                             ; preds = %4964
  switch i32 %1, label %5571 [
    i32 1, label %4976
    i32 0, label %5279
  ]

4976:                                             ; preds = %4975
  %4977 = getelementptr inbounds i32, ptr %3, i64 %19
  %4978 = load i32, ptr %4977, align 4, !tbaa !5
  %4979 = icmp eq i32 %4978, 0
  %4980 = icmp sgt i32 %5, 0
  br i1 %4979, label %4990, label %4981

4981:                                             ; preds = %4976
  br i1 %4980, label %4982, label %5579

4982:                                             ; preds = %4981
  %4983 = icmp sgt i32 %13, 1
  %4984 = icmp sgt i32 %13, 0
  %4985 = add i32 %13, -2
  %4986 = zext i32 %4985 to i64
  %4987 = zext i32 %13 to i64
  %4988 = add nuw i32 %5, 1
  %4989 = icmp eq i32 %13, 1
  br label %5138

4990:                                             ; preds = %4976
  br i1 %4980, label %4991, label %5579

4991:                                             ; preds = %4990
  %4992 = icmp sgt i32 %13, 1
  %4993 = icmp sgt i32 %13, 0
  %4994 = add i32 %13, -2
  %4995 = zext i32 %4994 to i64
  %4996 = zext i32 %13 to i64
  %4997 = add nuw i32 %5, 1
  %4998 = icmp eq i32 %13, 1
  br label %4999

4999:                                             ; preds = %4991, %5136
  %5000 = phi double [ 0.000000e+00, %4991 ], [ %5086, %5136 ]
  %5001 = phi i32 [ 0, %4991 ], [ %5088, %5136 ]
  %5002 = phi double [ 0.000000e+00, %4991 ], [ %5087, %5136 ]
  %5003 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4992, label %5004, label %5073

5004:                                             ; preds = %4999, %5063
  %5005 = phi i32 [ %5072, %5063 ], [ 0, %4999 ]
  %5006 = phi i64 [ %5014, %5063 ], [ %4996, %4999 ]
  %5007 = phi i64 [ %5071, %5063 ], [ %4995, %4999 ]
  %5008 = phi i32 [ %5069, %5063 ], [ %5003, %4999 ]
  %5009 = sub i32 %4994, %5005
  %5010 = tail call i32 @llvm.smin.i32(i32 %5009, i32 0)
  %5011 = sub i32 %5009, %5010
  %5012 = zext i32 %5011 to i64
  %5013 = add nuw nsw i64 %5012, 1
  %5014 = add nsw i64 %5006, -1
  %5015 = icmp ult i32 %5011, 31
  br i1 %5015, label %5051, label %5016

5016:                                             ; preds = %5004
  %5017 = and i64 %5013, 8589934560
  %5018 = sub i64 %5007, %5017
  br label %5019

5019:                                             ; preds = %5019, %5016
  %5020 = phi i64 [ 0, %5016 ], [ %5043, %5019 ]
  %5021 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5039, %5019 ]
  %5022 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5040, %5019 ]
  %5023 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5041, %5019 ]
  %5024 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5016 ], [ %5042, %5019 ]
  %5025 = sub i64 %5007, %5020
  %5026 = getelementptr inbounds i32, ptr %9, i64 %5025
  %5027 = getelementptr inbounds i32, ptr %5026, i64 -7
  %5028 = load <8 x i32>, ptr %5027, align 4, !tbaa !5
  %5029 = shufflevector <8 x i32> %5028, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5030 = getelementptr inbounds i32, ptr %5026, i64 -15
  %5031 = load <8 x i32>, ptr %5030, align 4, !tbaa !5
  %5032 = shufflevector <8 x i32> %5031, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5033 = getelementptr inbounds i32, ptr %5026, i64 -23
  %5034 = load <8 x i32>, ptr %5033, align 4, !tbaa !5
  %5035 = shufflevector <8 x i32> %5034, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5036 = getelementptr inbounds i32, ptr %5026, i64 -31
  %5037 = load <8 x i32>, ptr %5036, align 4, !tbaa !5
  %5038 = shufflevector <8 x i32> %5037, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5039 = mul <8 x i32> %5029, %5021
  %5040 = mul <8 x i32> %5032, %5022
  %5041 = mul <8 x i32> %5035, %5023
  %5042 = mul <8 x i32> %5038, %5024
  %5043 = add nuw i64 %5020, 32
  %5044 = icmp eq i64 %5043, %5017
  br i1 %5044, label %5045, label %5019, !llvm.loop !1464

5045:                                             ; preds = %5019
  %5046 = mul <8 x i32> %5040, %5039
  %5047 = mul <8 x i32> %5041, %5046
  %5048 = mul <8 x i32> %5042, %5047
  %5049 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5048)
  %5050 = icmp eq i64 %5013, %5017
  br i1 %5050, label %5063, label %5051

5051:                                             ; preds = %5004, %5045
  %5052 = phi i64 [ %5007, %5004 ], [ %5018, %5045 ]
  %5053 = phi i32 [ 1, %5004 ], [ %5049, %5045 ]
  br label %5054

5054:                                             ; preds = %5051, %5054
  %5055 = phi i64 [ %5060, %5054 ], [ %5052, %5051 ]
  %5056 = phi i32 [ %5059, %5054 ], [ %5053, %5051 ]
  %5057 = getelementptr inbounds i32, ptr %9, i64 %5055
  %5058 = load i32, ptr %5057, align 4, !tbaa !5
  %5059 = mul nsw i32 %5058, %5056
  %5060 = add nsw i64 %5055, -1
  %5061 = trunc i64 %5055 to i32
  %5062 = icmp sgt i32 %5061, 0
  br i1 %5062, label %5054, label %5063, !llvm.loop !1465

5063:                                             ; preds = %5054, %5045
  %5064 = phi i32 [ %5049, %5045 ], [ %5059, %5054 ]
  %5065 = and i64 %5014, 4294967295
  %5066 = getelementptr inbounds i32, ptr %6, i64 %5065
  %5067 = load i32, ptr %5066, align 4, !tbaa !5
  %5068 = mul nsw i32 %5067, %5064
  %5069 = add nsw i32 %5068, %5008
  %5070 = icmp sgt i64 %5006, 2
  %5071 = add nsw i64 %5007, -1
  %5072 = add i32 %5005, 1
  br i1 %5070, label %5004, label %5073, !llvm.loop !1466

5073:                                             ; preds = %5063, %4999
  %5074 = phi i32 [ %5003, %4999 ], [ %5069, %5063 ]
  %5075 = sext i32 %5074 to i64
  %5076 = getelementptr inbounds double, ptr %2, i64 %5075
  %5077 = load double, ptr %5076, align 8, !tbaa !18
  %5078 = getelementptr inbounds double, ptr %4966, i64 %5075
  %5079 = load double, ptr %5078, align 8, !tbaa !18
  %5080 = fmul fast double %5079, %5077
  %5081 = fcmp fast uge double %5080, 0.000000e+00
  %5082 = fneg fast double %5080
  %5083 = tail call fast double @llvm.fabs.f64(double %5080)
  %5084 = fcmp fast oge double %5000, %5083
  %5085 = select nnan ninf i1 %5081, double %5080, double %5082
  %5086 = select i1 %5084, double %5000, double %5085
  store double %5086, ptr %4968, align 8, !tbaa !18
  %5087 = fadd fast double %5077, %5002
  %5088 = add nuw nsw i32 %5001, 1
  br i1 %4993, label %5089, label %5136

5089:                                             ; preds = %5073
  %5090 = load i32, ptr %4, align 4, !tbaa !5
  %5091 = load i32, ptr %12, align 4, !tbaa !5
  %5092 = add nsw i32 %5091, -1
  %5093 = icmp slt i32 %5090, %5092
  br i1 %5093, label %5113, label %5094

5094:                                             ; preds = %5089
  %5095 = icmp eq i32 %5090, %5092
  br i1 %5095, label %5096, label %5129

5096:                                             ; preds = %5094
  store i32 0, ptr %4, align 4, !tbaa !5
  %5097 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5097, ptr %6, align 4, !tbaa !5
  br i1 %4998, label %5136, label %5098

5098:                                             ; preds = %5096, %5123
  %5099 = phi i64 [ %5127, %5123 ], [ 1, %5096 ]
  %5100 = getelementptr inbounds i32, ptr %4, i64 %5099
  %5101 = load i32, ptr %5100, align 4, !tbaa !5
  %5102 = getelementptr inbounds i32, ptr %12, i64 %5099
  %5103 = load i32, ptr %5102, align 4, !tbaa !5
  %5104 = add nsw i32 %5103, -1
  %5105 = icmp slt i32 %5101, %5104
  br i1 %5105, label %5106, label %5121

5106:                                             ; preds = %5098
  br i1 %5093, label %5113, label %5107

5107:                                             ; preds = %5106
  %5108 = getelementptr inbounds i32, ptr %7, i64 %5099
  %5109 = load i32, ptr %5108, align 4, !tbaa !5
  %5110 = getelementptr inbounds i32, ptr %6, i64 %5099
  %5111 = load i32, ptr %5110, align 4, !tbaa !5
  %5112 = add nsw i32 %5111, %5109
  store i32 %5112, ptr %5110, align 4, !tbaa !5
  br label %5131

5113:                                             ; preds = %5089, %5106
  %5114 = phi i32 [ %5101, %5106 ], [ %5090, %5089 ]
  %5115 = phi ptr [ %5100, %5106 ], [ %4, %5089 ]
  %5116 = phi i64 [ %5099, %5106 ], [ 0, %5089 ]
  %5117 = add nsw i32 %5114, 1
  store i32 %5117, ptr %5115, align 4, !tbaa !5
  %5118 = getelementptr inbounds i32, ptr %7, i64 %5116
  %5119 = load i32, ptr %5118, align 4, !tbaa !5
  %5120 = getelementptr inbounds i32, ptr %6, i64 %5116
  br label %5131

5121:                                             ; preds = %5098
  %5122 = icmp eq i32 %5101, %5104
  br i1 %5122, label %5123, label %5129

5123:                                             ; preds = %5121
  store i32 0, ptr %5100, align 4, !tbaa !5
  %5124 = getelementptr inbounds i32, ptr %8, i64 %5099
  %5125 = load i32, ptr %5124, align 4, !tbaa !5
  %5126 = getelementptr inbounds i32, ptr %6, i64 %5099
  store i32 %5125, ptr %5126, align 4, !tbaa !5
  %5127 = add nuw nsw i64 %5099, 1
  %5128 = icmp eq i64 %5127, %4996
  br i1 %5128, label %5136, label %5098, !llvm.loop !1467

5129:                                             ; preds = %5094, %5121
  %5130 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5131:                                             ; preds = %5107, %5113
  %5132 = phi ptr [ %5120, %5113 ], [ %5100, %5107 ]
  %5133 = phi i32 [ %5119, %5113 ], [ 1, %5107 ]
  %5134 = load i32, ptr %5132, align 4, !tbaa !5
  %5135 = add nsw i32 %5134, %5133
  store i32 %5135, ptr %5132, align 4, !tbaa !5
  br label %5136

5136:                                             ; preds = %5123, %5131, %5096, %5073
  %5137 = icmp eq i32 %5088, %5
  br i1 %5137, label %5579, label %4999, !llvm.loop !1468

5138:                                             ; preds = %4982, %5277
  %5139 = phi double [ 0.000000e+00, %4982 ], [ %5225, %5277 ]
  %5140 = phi i32 [ 0, %4982 ], [ %5226, %5277 ]
  %5141 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4983, label %5142, label %5211

5142:                                             ; preds = %5138, %5201
  %5143 = phi i32 [ %5210, %5201 ], [ 0, %5138 ]
  %5144 = phi i64 [ %5152, %5201 ], [ %4987, %5138 ]
  %5145 = phi i64 [ %5209, %5201 ], [ %4986, %5138 ]
  %5146 = phi i32 [ %5207, %5201 ], [ %5141, %5138 ]
  %5147 = sub i32 %4985, %5143
  %5148 = tail call i32 @llvm.smin.i32(i32 %5147, i32 0)
  %5149 = sub i32 %5147, %5148
  %5150 = zext i32 %5149 to i64
  %5151 = add nuw nsw i64 %5150, 1
  %5152 = add nsw i64 %5144, -1
  %5153 = icmp ult i32 %5149, 31
  br i1 %5153, label %5189, label %5154

5154:                                             ; preds = %5142
  %5155 = and i64 %5151, 8589934560
  %5156 = sub i64 %5145, %5155
  br label %5157

5157:                                             ; preds = %5157, %5154
  %5158 = phi i64 [ 0, %5154 ], [ %5181, %5157 ]
  %5159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5177, %5157 ]
  %5160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5178, %5157 ]
  %5161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5179, %5157 ]
  %5162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5154 ], [ %5180, %5157 ]
  %5163 = sub i64 %5145, %5158
  %5164 = getelementptr inbounds i32, ptr %11, i64 %5163
  %5165 = getelementptr inbounds i32, ptr %5164, i64 -7
  %5166 = load <8 x i32>, ptr %5165, align 4, !tbaa !5
  %5167 = shufflevector <8 x i32> %5166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5168 = getelementptr inbounds i32, ptr %5164, i64 -15
  %5169 = load <8 x i32>, ptr %5168, align 4, !tbaa !5
  %5170 = shufflevector <8 x i32> %5169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5171 = getelementptr inbounds i32, ptr %5164, i64 -23
  %5172 = load <8 x i32>, ptr %5171, align 4, !tbaa !5
  %5173 = shufflevector <8 x i32> %5172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5174 = getelementptr inbounds i32, ptr %5164, i64 -31
  %5175 = load <8 x i32>, ptr %5174, align 4, !tbaa !5
  %5176 = shufflevector <8 x i32> %5175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5177 = mul <8 x i32> %5167, %5159
  %5178 = mul <8 x i32> %5170, %5160
  %5179 = mul <8 x i32> %5173, %5161
  %5180 = mul <8 x i32> %5176, %5162
  %5181 = add nuw i64 %5158, 32
  %5182 = icmp eq i64 %5181, %5155
  br i1 %5182, label %5183, label %5157, !llvm.loop !1469

5183:                                             ; preds = %5157
  %5184 = mul <8 x i32> %5178, %5177
  %5185 = mul <8 x i32> %5179, %5184
  %5186 = mul <8 x i32> %5180, %5185
  %5187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5186)
  %5188 = icmp eq i64 %5151, %5155
  br i1 %5188, label %5201, label %5189

5189:                                             ; preds = %5142, %5183
  %5190 = phi i64 [ %5145, %5142 ], [ %5156, %5183 ]
  %5191 = phi i32 [ 1, %5142 ], [ %5187, %5183 ]
  br label %5192

5192:                                             ; preds = %5189, %5192
  %5193 = phi i64 [ %5198, %5192 ], [ %5190, %5189 ]
  %5194 = phi i32 [ %5197, %5192 ], [ %5191, %5189 ]
  %5195 = getelementptr inbounds i32, ptr %11, i64 %5193
  %5196 = load i32, ptr %5195, align 4, !tbaa !5
  %5197 = mul nsw i32 %5196, %5194
  %5198 = add nsw i64 %5193, -1
  %5199 = trunc i64 %5193 to i32
  %5200 = icmp sgt i32 %5199, 0
  br i1 %5200, label %5192, label %5201, !llvm.loop !1470

5201:                                             ; preds = %5192, %5183
  %5202 = phi i32 [ %5187, %5183 ], [ %5197, %5192 ]
  %5203 = and i64 %5152, 4294967295
  %5204 = getelementptr inbounds i32, ptr %6, i64 %5203
  %5205 = load i32, ptr %5204, align 4, !tbaa !5
  %5206 = mul nsw i32 %5205, %5202
  %5207 = add nsw i32 %5206, %5146
  %5208 = icmp sgt i64 %5144, 2
  %5209 = add nsw i64 %5145, -1
  %5210 = add i32 %5143, 1
  br i1 %5208, label %5142, label %5211, !llvm.loop !1471

5211:                                             ; preds = %5201, %5138
  %5212 = phi i32 [ %5141, %5138 ], [ %5207, %5201 ]
  %5213 = icmp slt i32 %5212, %5
  br i1 %5213, label %5216, label %5214

5214:                                             ; preds = %5211
  %5215 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

5216:                                             ; preds = %5211
  %5217 = sext i32 %5212 to i64
  %5218 = getelementptr inbounds double, ptr %4966, i64 %5217
  %5219 = load double, ptr %5218, align 8, !tbaa !18
  %5220 = fcmp fast uge double %5219, 0.000000e+00
  %5221 = fneg fast double %5219
  %5222 = tail call fast double @llvm.fabs.f64(double %5219)
  %5223 = fcmp fast oge double %5139, %5222
  %5224 = select nnan ninf i1 %5220, double %5219, double %5221
  %5225 = select i1 %5223, double %5139, double %5224
  store double %5225, ptr %4968, align 8, !tbaa !18
  %5226 = add nuw nsw i32 %5140, 1
  br i1 %4984, label %5227, label %5277

5227:                                             ; preds = %5216
  %5228 = load i32, ptr %4, align 4, !tbaa !5
  %5229 = load i32, ptr %12, align 4, !tbaa !5
  %5230 = add nsw i32 %5229, -1
  %5231 = icmp slt i32 %5228, %5230
  br i1 %5231, label %5254, label %5232

5232:                                             ; preds = %5227
  %5233 = icmp eq i32 %5228, %5230
  br i1 %5233, label %5234, label %5270

5234:                                             ; preds = %5232
  store i32 0, ptr %4, align 4, !tbaa !5
  %5235 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5235, ptr %6, align 4, !tbaa !5
  br i1 %4989, label %5277, label %5236

5236:                                             ; preds = %5234, %5264
  %5237 = phi i64 [ %5268, %5264 ], [ 1, %5234 ]
  %5238 = getelementptr inbounds i32, ptr %4, i64 %5237
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = getelementptr inbounds i32, ptr %12, i64 %5237
  %5241 = load i32, ptr %5240, align 4, !tbaa !5
  %5242 = add nsw i32 %5241, -1
  %5243 = icmp slt i32 %5239, %5242
  br i1 %5243, label %5244, label %5262

5244:                                             ; preds = %5236
  br i1 %5231, label %5254, label %5245

5245:                                             ; preds = %5244
  %5246 = shl i64 %5237, 32
  %5247 = add i64 %5246, -4294967296
  %5248 = ashr exact i64 %5247, 32
  %5249 = getelementptr inbounds i32, ptr %7, i64 %5248
  %5250 = load i32, ptr %5249, align 4, !tbaa !5
  %5251 = getelementptr inbounds i32, ptr %6, i64 %5237
  %5252 = load i32, ptr %5251, align 4, !tbaa !5
  %5253 = add nsw i32 %5252, %5250
  store i32 %5253, ptr %5251, align 4, !tbaa !5
  br label %5272

5254:                                             ; preds = %5227, %5244
  %5255 = phi i32 [ %5239, %5244 ], [ %5228, %5227 ]
  %5256 = phi ptr [ %5238, %5244 ], [ %4, %5227 ]
  %5257 = phi i64 [ %5237, %5244 ], [ 0, %5227 ]
  %5258 = add nsw i32 %5255, 1
  store i32 %5258, ptr %5256, align 4, !tbaa !5
  %5259 = getelementptr inbounds i32, ptr %7, i64 %5257
  %5260 = load i32, ptr %5259, align 4, !tbaa !5
  %5261 = getelementptr inbounds i32, ptr %6, i64 %5257
  br label %5272

5262:                                             ; preds = %5236
  %5263 = icmp eq i32 %5239, %5242
  br i1 %5263, label %5264, label %5270

5264:                                             ; preds = %5262
  store i32 0, ptr %5238, align 4, !tbaa !5
  %5265 = getelementptr inbounds i32, ptr %8, i64 %5237
  %5266 = load i32, ptr %5265, align 4, !tbaa !5
  %5267 = getelementptr inbounds i32, ptr %6, i64 %5237
  store i32 %5266, ptr %5267, align 4, !tbaa !5
  %5268 = add nuw nsw i64 %5237, 1
  %5269 = icmp eq i64 %5268, %4987
  br i1 %5269, label %5277, label %5236, !llvm.loop !1472

5270:                                             ; preds = %5232, %5262
  %5271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5272:                                             ; preds = %5245, %5254
  %5273 = phi ptr [ %5261, %5254 ], [ %5238, %5245 ]
  %5274 = phi i32 [ %5260, %5254 ], [ 1, %5245 ]
  %5275 = load i32, ptr %5273, align 4, !tbaa !5
  %5276 = add nsw i32 %5275, %5274
  store i32 %5276, ptr %5273, align 4, !tbaa !5
  br label %5277

5277:                                             ; preds = %5264, %5272, %5234, %5216
  %5278 = icmp eq i32 %5226, %5
  br i1 %5278, label %5579, label %5138, !llvm.loop !1473

5279:                                             ; preds = %4975
  %5280 = getelementptr inbounds i32, ptr %3, i64 %19
  %5281 = load i32, ptr %5280, align 4, !tbaa !5
  %5282 = icmp eq i32 %5281, 0
  %5283 = icmp sgt i32 %5, 0
  br i1 %5282, label %5293, label %5284

5284:                                             ; preds = %5279
  br i1 %5283, label %5285, label %5579

5285:                                             ; preds = %5284
  %5286 = icmp sgt i32 %13, 1
  %5287 = icmp sgt i32 %13, 0
  %5288 = add i32 %13, -2
  %5289 = zext i32 %5288 to i64
  %5290 = zext i32 %13 to i64
  %5291 = add nuw i32 %5, 1
  %5292 = icmp eq i32 %13, 1
  br label %5434

5293:                                             ; preds = %5279
  br i1 %5283, label %5294, label %5579

5294:                                             ; preds = %5293
  %5295 = icmp sgt i32 %13, 1
  %5296 = icmp sgt i32 %13, 0
  %5297 = add i32 %13, -2
  %5298 = zext i32 %5297 to i64
  %5299 = zext i32 %13 to i64
  %5300 = add nuw i32 %5, 1
  %5301 = icmp eq i32 %13, 1
  br label %5302

5302:                                             ; preds = %5294, %5432
  %5303 = phi double [ 0.000000e+00, %5294 ], [ %5382, %5432 ]
  %5304 = phi i32 [ 0, %5294 ], [ %5384, %5432 ]
  %5305 = phi double [ 0.000000e+00, %5294 ], [ %5383, %5432 ]
  %5306 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5295, label %5307, label %5376

5307:                                             ; preds = %5302, %5366
  %5308 = phi i32 [ %5375, %5366 ], [ 0, %5302 ]
  %5309 = phi i64 [ %5317, %5366 ], [ %5299, %5302 ]
  %5310 = phi i64 [ %5374, %5366 ], [ %5298, %5302 ]
  %5311 = phi i32 [ %5372, %5366 ], [ %5306, %5302 ]
  %5312 = sub i32 %5297, %5308
  %5313 = tail call i32 @llvm.smin.i32(i32 %5312, i32 0)
  %5314 = sub i32 %5312, %5313
  %5315 = zext i32 %5314 to i64
  %5316 = add nuw nsw i64 %5315, 1
  %5317 = add nsw i64 %5309, -1
  %5318 = icmp ult i32 %5314, 31
  br i1 %5318, label %5354, label %5319

5319:                                             ; preds = %5307
  %5320 = and i64 %5316, 8589934560
  %5321 = sub i64 %5310, %5320
  br label %5322

5322:                                             ; preds = %5322, %5319
  %5323 = phi i64 [ 0, %5319 ], [ %5346, %5322 ]
  %5324 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5342, %5322 ]
  %5325 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5343, %5322 ]
  %5326 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5344, %5322 ]
  %5327 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5319 ], [ %5345, %5322 ]
  %5328 = sub i64 %5310, %5323
  %5329 = getelementptr inbounds i32, ptr %9, i64 %5328
  %5330 = getelementptr inbounds i32, ptr %5329, i64 -7
  %5331 = load <8 x i32>, ptr %5330, align 4, !tbaa !5
  %5332 = shufflevector <8 x i32> %5331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5333 = getelementptr inbounds i32, ptr %5329, i64 -15
  %5334 = load <8 x i32>, ptr %5333, align 4, !tbaa !5
  %5335 = shufflevector <8 x i32> %5334, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5336 = getelementptr inbounds i32, ptr %5329, i64 -23
  %5337 = load <8 x i32>, ptr %5336, align 4, !tbaa !5
  %5338 = shufflevector <8 x i32> %5337, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5339 = getelementptr inbounds i32, ptr %5329, i64 -31
  %5340 = load <8 x i32>, ptr %5339, align 4, !tbaa !5
  %5341 = shufflevector <8 x i32> %5340, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5342 = mul <8 x i32> %5332, %5324
  %5343 = mul <8 x i32> %5335, %5325
  %5344 = mul <8 x i32> %5338, %5326
  %5345 = mul <8 x i32> %5341, %5327
  %5346 = add nuw i64 %5323, 32
  %5347 = icmp eq i64 %5346, %5320
  br i1 %5347, label %5348, label %5322, !llvm.loop !1474

5348:                                             ; preds = %5322
  %5349 = mul <8 x i32> %5343, %5342
  %5350 = mul <8 x i32> %5344, %5349
  %5351 = mul <8 x i32> %5345, %5350
  %5352 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5351)
  %5353 = icmp eq i64 %5316, %5320
  br i1 %5353, label %5366, label %5354

5354:                                             ; preds = %5307, %5348
  %5355 = phi i64 [ %5310, %5307 ], [ %5321, %5348 ]
  %5356 = phi i32 [ 1, %5307 ], [ %5352, %5348 ]
  br label %5357

5357:                                             ; preds = %5354, %5357
  %5358 = phi i64 [ %5363, %5357 ], [ %5355, %5354 ]
  %5359 = phi i32 [ %5362, %5357 ], [ %5356, %5354 ]
  %5360 = getelementptr inbounds i32, ptr %9, i64 %5358
  %5361 = load i32, ptr %5360, align 4, !tbaa !5
  %5362 = mul nsw i32 %5361, %5359
  %5363 = add nsw i64 %5358, -1
  %5364 = trunc i64 %5358 to i32
  %5365 = icmp sgt i32 %5364, 0
  br i1 %5365, label %5357, label %5366, !llvm.loop !1475

5366:                                             ; preds = %5357, %5348
  %5367 = phi i32 [ %5352, %5348 ], [ %5362, %5357 ]
  %5368 = and i64 %5317, 4294967295
  %5369 = getelementptr inbounds i32, ptr %6, i64 %5368
  %5370 = load i32, ptr %5369, align 4, !tbaa !5
  %5371 = mul nsw i32 %5370, %5367
  %5372 = add nsw i32 %5371, %5311
  %5373 = icmp sgt i64 %5309, 2
  %5374 = add nsw i64 %5310, -1
  %5375 = add i32 %5308, 1
  br i1 %5373, label %5307, label %5376, !llvm.loop !1476

5376:                                             ; preds = %5366, %5302
  %5377 = phi i32 [ %5306, %5302 ], [ %5372, %5366 ]
  %5378 = sext i32 %5377 to i64
  %5379 = getelementptr inbounds double, ptr %4966, i64 %5378
  %5380 = load double, ptr %5379, align 8, !tbaa !18
  %5381 = tail call fast double @llvm.fabs.f64(double %5380)
  %5382 = tail call fast double @llvm.maxnum.f64(double %5303, double %5381)
  store double %5382, ptr %4968, align 8, !tbaa !18
  %5383 = fadd fast double %5305, 1.000000e+00
  %5384 = add nuw nsw i32 %5304, 1
  br i1 %5296, label %5385, label %5432

5385:                                             ; preds = %5376
  %5386 = load i32, ptr %4, align 4, !tbaa !5
  %5387 = load i32, ptr %12, align 4, !tbaa !5
  %5388 = add nsw i32 %5387, -1
  %5389 = icmp slt i32 %5386, %5388
  br i1 %5389, label %5409, label %5390

5390:                                             ; preds = %5385
  %5391 = icmp eq i32 %5386, %5388
  br i1 %5391, label %5392, label %5425

5392:                                             ; preds = %5390
  store i32 0, ptr %4, align 4, !tbaa !5
  %5393 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5393, ptr %6, align 4, !tbaa !5
  br i1 %5301, label %5432, label %5394

5394:                                             ; preds = %5392, %5419
  %5395 = phi i64 [ %5423, %5419 ], [ 1, %5392 ]
  %5396 = getelementptr inbounds i32, ptr %4, i64 %5395
  %5397 = load i32, ptr %5396, align 4, !tbaa !5
  %5398 = getelementptr inbounds i32, ptr %12, i64 %5395
  %5399 = load i32, ptr %5398, align 4, !tbaa !5
  %5400 = add nsw i32 %5399, -1
  %5401 = icmp slt i32 %5397, %5400
  br i1 %5401, label %5402, label %5417

5402:                                             ; preds = %5394
  br i1 %5389, label %5409, label %5403

5403:                                             ; preds = %5402
  %5404 = getelementptr inbounds i32, ptr %7, i64 %5395
  %5405 = load i32, ptr %5404, align 4, !tbaa !5
  %5406 = getelementptr inbounds i32, ptr %6, i64 %5395
  %5407 = load i32, ptr %5406, align 4, !tbaa !5
  %5408 = add nsw i32 %5407, %5405
  store i32 %5408, ptr %5406, align 4, !tbaa !5
  br label %5427

5409:                                             ; preds = %5385, %5402
  %5410 = phi i32 [ %5397, %5402 ], [ %5386, %5385 ]
  %5411 = phi ptr [ %5396, %5402 ], [ %4, %5385 ]
  %5412 = phi i64 [ %5395, %5402 ], [ 0, %5385 ]
  %5413 = add nsw i32 %5410, 1
  store i32 %5413, ptr %5411, align 4, !tbaa !5
  %5414 = getelementptr inbounds i32, ptr %7, i64 %5412
  %5415 = load i32, ptr %5414, align 4, !tbaa !5
  %5416 = getelementptr inbounds i32, ptr %6, i64 %5412
  br label %5427

5417:                                             ; preds = %5394
  %5418 = icmp eq i32 %5397, %5400
  br i1 %5418, label %5419, label %5425

5419:                                             ; preds = %5417
  store i32 0, ptr %5396, align 4, !tbaa !5
  %5420 = getelementptr inbounds i32, ptr %8, i64 %5395
  %5421 = load i32, ptr %5420, align 4, !tbaa !5
  %5422 = getelementptr inbounds i32, ptr %6, i64 %5395
  store i32 %5421, ptr %5422, align 4, !tbaa !5
  %5423 = add nuw nsw i64 %5395, 1
  %5424 = icmp eq i64 %5423, %5299
  br i1 %5424, label %5432, label %5394, !llvm.loop !1477

5425:                                             ; preds = %5390, %5417
  %5426 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5427:                                             ; preds = %5403, %5409
  %5428 = phi ptr [ %5416, %5409 ], [ %5396, %5403 ]
  %5429 = phi i32 [ %5415, %5409 ], [ 1, %5403 ]
  %5430 = load i32, ptr %5428, align 4, !tbaa !5
  %5431 = add nsw i32 %5430, %5429
  store i32 %5431, ptr %5428, align 4, !tbaa !5
  br label %5432

5432:                                             ; preds = %5419, %5427, %5392, %5376
  %5433 = icmp eq i32 %5384, %5
  br i1 %5433, label %5579, label %5302, !llvm.loop !1478

5434:                                             ; preds = %5285, %5569
  %5435 = phi double [ 0.000000e+00, %5285 ], [ %5517, %5569 ]
  %5436 = phi i32 [ 0, %5285 ], [ %5518, %5569 ]
  %5437 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5286, label %5438, label %5507

5438:                                             ; preds = %5434, %5497
  %5439 = phi i32 [ %5506, %5497 ], [ 0, %5434 ]
  %5440 = phi i64 [ %5448, %5497 ], [ %5290, %5434 ]
  %5441 = phi i64 [ %5505, %5497 ], [ %5289, %5434 ]
  %5442 = phi i32 [ %5503, %5497 ], [ %5437, %5434 ]
  %5443 = sub i32 %5288, %5439
  %5444 = tail call i32 @llvm.smin.i32(i32 %5443, i32 0)
  %5445 = sub i32 %5443, %5444
  %5446 = zext i32 %5445 to i64
  %5447 = add nuw nsw i64 %5446, 1
  %5448 = add nsw i64 %5440, -1
  %5449 = icmp ult i32 %5445, 31
  br i1 %5449, label %5485, label %5450

5450:                                             ; preds = %5438
  %5451 = and i64 %5447, 8589934560
  %5452 = sub i64 %5441, %5451
  br label %5453

5453:                                             ; preds = %5453, %5450
  %5454 = phi i64 [ 0, %5450 ], [ %5477, %5453 ]
  %5455 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5473, %5453 ]
  %5456 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5474, %5453 ]
  %5457 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5475, %5453 ]
  %5458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5450 ], [ %5476, %5453 ]
  %5459 = sub i64 %5441, %5454
  %5460 = getelementptr inbounds i32, ptr %11, i64 %5459
  %5461 = getelementptr inbounds i32, ptr %5460, i64 -7
  %5462 = load <8 x i32>, ptr %5461, align 4, !tbaa !5
  %5463 = shufflevector <8 x i32> %5462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5464 = getelementptr inbounds i32, ptr %5460, i64 -15
  %5465 = load <8 x i32>, ptr %5464, align 4, !tbaa !5
  %5466 = shufflevector <8 x i32> %5465, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5467 = getelementptr inbounds i32, ptr %5460, i64 -23
  %5468 = load <8 x i32>, ptr %5467, align 4, !tbaa !5
  %5469 = shufflevector <8 x i32> %5468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5470 = getelementptr inbounds i32, ptr %5460, i64 -31
  %5471 = load <8 x i32>, ptr %5470, align 4, !tbaa !5
  %5472 = shufflevector <8 x i32> %5471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5473 = mul <8 x i32> %5463, %5455
  %5474 = mul <8 x i32> %5466, %5456
  %5475 = mul <8 x i32> %5469, %5457
  %5476 = mul <8 x i32> %5472, %5458
  %5477 = add nuw i64 %5454, 32
  %5478 = icmp eq i64 %5477, %5451
  br i1 %5478, label %5479, label %5453, !llvm.loop !1479

5479:                                             ; preds = %5453
  %5480 = mul <8 x i32> %5474, %5473
  %5481 = mul <8 x i32> %5475, %5480
  %5482 = mul <8 x i32> %5476, %5481
  %5483 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5482)
  %5484 = icmp eq i64 %5447, %5451
  br i1 %5484, label %5497, label %5485

5485:                                             ; preds = %5438, %5479
  %5486 = phi i64 [ %5441, %5438 ], [ %5452, %5479 ]
  %5487 = phi i32 [ 1, %5438 ], [ %5483, %5479 ]
  br label %5488

5488:                                             ; preds = %5485, %5488
  %5489 = phi i64 [ %5494, %5488 ], [ %5486, %5485 ]
  %5490 = phi i32 [ %5493, %5488 ], [ %5487, %5485 ]
  %5491 = getelementptr inbounds i32, ptr %11, i64 %5489
  %5492 = load i32, ptr %5491, align 4, !tbaa !5
  %5493 = mul nsw i32 %5492, %5490
  %5494 = add nsw i64 %5489, -1
  %5495 = trunc i64 %5489 to i32
  %5496 = icmp sgt i32 %5495, 0
  br i1 %5496, label %5488, label %5497, !llvm.loop !1480

5497:                                             ; preds = %5488, %5479
  %5498 = phi i32 [ %5483, %5479 ], [ %5493, %5488 ]
  %5499 = and i64 %5448, 4294967295
  %5500 = getelementptr inbounds i32, ptr %6, i64 %5499
  %5501 = load i32, ptr %5500, align 4, !tbaa !5
  %5502 = mul nsw i32 %5501, %5498
  %5503 = add nsw i32 %5502, %5442
  %5504 = icmp sgt i64 %5440, 2
  %5505 = add nsw i64 %5441, -1
  %5506 = add i32 %5439, 1
  br i1 %5504, label %5438, label %5507, !llvm.loop !1481

5507:                                             ; preds = %5497, %5434
  %5508 = phi i32 [ %5437, %5434 ], [ %5503, %5497 ]
  %5509 = icmp slt i32 %5508, %5
  br i1 %5509, label %5512, label %5510

5510:                                             ; preds = %5507
  %5511 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5584

5512:                                             ; preds = %5507
  %5513 = sext i32 %5508 to i64
  %5514 = getelementptr inbounds double, ptr %4966, i64 %5513
  %5515 = load double, ptr %5514, align 8, !tbaa !18
  %5516 = tail call fast double @llvm.fabs.f64(double %5515)
  %5517 = tail call fast double @llvm.maxnum.f64(double %5435, double %5516)
  store double %5517, ptr %4968, align 8, !tbaa !18
  %5518 = add nuw nsw i32 %5436, 1
  br i1 %5287, label %5519, label %5569

5519:                                             ; preds = %5512
  %5520 = load i32, ptr %4, align 4, !tbaa !5
  %5521 = load i32, ptr %12, align 4, !tbaa !5
  %5522 = add nsw i32 %5521, -1
  %5523 = icmp slt i32 %5520, %5522
  br i1 %5523, label %5546, label %5524

5524:                                             ; preds = %5519
  %5525 = icmp eq i32 %5520, %5522
  br i1 %5525, label %5526, label %5562

5526:                                             ; preds = %5524
  store i32 0, ptr %4, align 4, !tbaa !5
  %5527 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5527, ptr %6, align 4, !tbaa !5
  br i1 %5292, label %5569, label %5528

5528:                                             ; preds = %5526, %5556
  %5529 = phi i64 [ %5560, %5556 ], [ 1, %5526 ]
  %5530 = getelementptr inbounds i32, ptr %4, i64 %5529
  %5531 = load i32, ptr %5530, align 4, !tbaa !5
  %5532 = getelementptr inbounds i32, ptr %12, i64 %5529
  %5533 = load i32, ptr %5532, align 4, !tbaa !5
  %5534 = add nsw i32 %5533, -1
  %5535 = icmp slt i32 %5531, %5534
  br i1 %5535, label %5536, label %5554

5536:                                             ; preds = %5528
  br i1 %5523, label %5546, label %5537

5537:                                             ; preds = %5536
  %5538 = shl i64 %5529, 32
  %5539 = add i64 %5538, -4294967296
  %5540 = ashr exact i64 %5539, 32
  %5541 = getelementptr inbounds i32, ptr %7, i64 %5540
  %5542 = load i32, ptr %5541, align 4, !tbaa !5
  %5543 = getelementptr inbounds i32, ptr %6, i64 %5529
  %5544 = load i32, ptr %5543, align 4, !tbaa !5
  %5545 = add nsw i32 %5544, %5542
  store i32 %5545, ptr %5543, align 4, !tbaa !5
  br label %5564

5546:                                             ; preds = %5519, %5536
  %5547 = phi i32 [ %5531, %5536 ], [ %5520, %5519 ]
  %5548 = phi ptr [ %5530, %5536 ], [ %4, %5519 ]
  %5549 = phi i64 [ %5529, %5536 ], [ 0, %5519 ]
  %5550 = add nsw i32 %5547, 1
  store i32 %5550, ptr %5548, align 4, !tbaa !5
  %5551 = getelementptr inbounds i32, ptr %7, i64 %5549
  %5552 = load i32, ptr %5551, align 4, !tbaa !5
  %5553 = getelementptr inbounds i32, ptr %6, i64 %5549
  br label %5564

5554:                                             ; preds = %5528
  %5555 = icmp eq i32 %5531, %5534
  br i1 %5555, label %5556, label %5562

5556:                                             ; preds = %5554
  store i32 0, ptr %5530, align 4, !tbaa !5
  %5557 = getelementptr inbounds i32, ptr %8, i64 %5529
  %5558 = load i32, ptr %5557, align 4, !tbaa !5
  %5559 = getelementptr inbounds i32, ptr %6, i64 %5529
  store i32 %5558, ptr %5559, align 4, !tbaa !5
  %5560 = add nuw nsw i64 %5529, 1
  %5561 = icmp eq i64 %5560, %5290
  br i1 %5561, label %5569, label %5528, !llvm.loop !1482

5562:                                             ; preds = %5524, %5554
  %5563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5584

5564:                                             ; preds = %5537, %5546
  %5565 = phi ptr [ %5553, %5546 ], [ %5530, %5537 ]
  %5566 = phi i32 [ %5552, %5546 ], [ 1, %5537 ]
  %5567 = load i32, ptr %5565, align 4, !tbaa !5
  %5568 = add nsw i32 %5567, %5566
  store i32 %5568, ptr %5565, align 4, !tbaa !5
  br label %5569

5569:                                             ; preds = %5556, %5564, %5526, %5512
  %5570 = icmp eq i32 %5518, %5
  br i1 %5570, label %5579, label %5434, !llvm.loop !1483

5571:                                             ; preds = %4975
  %5572 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2594, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5579

5573:                                             ; preds = %2049
  store i16 %1999, ptr %1878, align 2, !tbaa !78
  br label %5579

5574:                                             ; preds = %2352
  store i16 %2302, ptr %1878, align 2, !tbaa !78
  br label %5579

5575:                                             ; preds = %3293
  store i64 %3243, ptr %3120, align 8, !tbaa !120
  br label %5579

5576:                                             ; preds = %3593
  store i64 %3543, ptr %3120, align 8, !tbaa !120
  br label %5579

5577:                                             ; preds = %4521
  store float %4471, ptr %4348, align 4, !tbaa !162
  br label %5579

5578:                                             ; preds = %4822
  store float %4772, ptr %4348, align 4, !tbaa !162
  br label %5579

5579:                                             ; preds = %5569, %5432, %5277, %5136, %4960, %4666, %4340, %4203, %4048, %3907, %3731, %3437, %3112, %2974, %2818, %2674, %2493, %2193, %1870, %1729, %1570, %1426, %1247, %1109, %953, %809, %628, %491, %336, %196, %5284, %5293, %4981, %4990, %4673, %4682, %5578, %4362, %4371, %5577, %4055, %4064, %3752, %3761, %3444, %3453, %5576, %3134, %3143, %5575, %2825, %2834, %2515, %2524, %2200, %2209, %5574, %1890, %1899, %5573, %1577, %1586, %1267, %1276, %960, %969, %650, %659, %343, %352, %37, %46, %4970, %5571, %4350, %4962, %3741, %4342, %3122, %3733, %2503, %3114, %1880, %2495, %1257, %1872, %638, %1249, %28, %630, %18
  %5580 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %630 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %638 ], [ 0.000000e+00, %1872 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %2495 ], [ 0.000000e+00, %1880 ], [ 0.000000e+00, %3114 ], [ 0.000000e+00, %2503 ], [ 0.000000e+00, %3733 ], [ 0.000000e+00, %3122 ], [ 0.000000e+00, %4342 ], [ 0.000000e+00, %3741 ], [ 0.000000e+00, %4962 ], [ 0.000000e+00, %4350 ], [ 0.000000e+00, %5571 ], [ 0.000000e+00, %4970 ], [ 0.000000e+00, %46 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %352 ], [ 0.000000e+00, %343 ], [ 0.000000e+00, %659 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %969 ], [ 0.000000e+00, %960 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1267 ], [ 0.000000e+00, %1586 ], [ 0.000000e+00, %1577 ], [ %2000, %5573 ], [ 0.000000e+00, %1899 ], [ 0.000000e+00, %1890 ], [ %2303, %5574 ], [ 0.000000e+00, %2209 ], [ 0.000000e+00, %2200 ], [ 0.000000e+00, %2524 ], [ 0.000000e+00, %2515 ], [ 0.000000e+00, %2834 ], [ 0.000000e+00, %2825 ], [ %3244, %5575 ], [ 0.000000e+00, %3143 ], [ 0.000000e+00, %3134 ], [ %3544, %5576 ], [ 0.000000e+00, %3453 ], [ 0.000000e+00, %3444 ], [ 0.000000e+00, %3761 ], [ 0.000000e+00, %3752 ], [ 0.000000e+00, %4064 ], [ 0.000000e+00, %4055 ], [ %4472, %5577 ], [ 0.000000e+00, %4371 ], [ 0.000000e+00, %4362 ], [ %4773, %5578 ], [ 0.000000e+00, %4682 ], [ 0.000000e+00, %4673 ], [ 0.000000e+00, %4990 ], [ 0.000000e+00, %4981 ], [ 0.000000e+00, %5293 ], [ 0.000000e+00, %5284 ], [ %147, %196 ], [ 0.000000e+00, %336 ], [ %442, %491 ], [ 0.000000e+00, %628 ], [ %760, %809 ], [ 0.000000e+00, %953 ], [ %1060, %1109 ], [ 0.000000e+00, %1247 ], [ %1377, %1426 ], [ 0.000000e+00, %1570 ], [ %1680, %1729 ], [ 0.000000e+00, %1870 ], [ 0.000000e+00, %2193 ], [ 0.000000e+00, %2493 ], [ %2625, %2674 ], [ 0.000000e+00, %2818 ], [ %2925, %2974 ], [ 0.000000e+00, %3112 ], [ 0.000000e+00, %3437 ], [ 0.000000e+00, %3731 ], [ %3858, %3907 ], [ 0.000000e+00, %4048 ], [ %4154, %4203 ], [ 0.000000e+00, %4340 ], [ 0.000000e+00, %4666 ], [ 0.000000e+00, %4960 ], [ %5087, %5136 ], [ 0.000000e+00, %5277 ], [ %5383, %5432 ], [ 0.000000e+00, %5569 ]
  %5581 = phi i32 [ %10, %18 ], [ 1, %630 ], [ 1, %28 ], [ 1, %1249 ], [ 1, %638 ], [ 1, %1872 ], [ 1, %1257 ], [ 1, %2495 ], [ 1, %1880 ], [ 1, %3114 ], [ 1, %2503 ], [ 1, %3733 ], [ 1, %3122 ], [ 1, %4342 ], [ 1, %3741 ], [ 1, %4962 ], [ 1, %4350 ], [ 1, %5571 ], [ 1, %4970 ], [ 1, %46 ], [ 1, %37 ], [ 1, %352 ], [ 1, %343 ], [ 1, %659 ], [ 1, %650 ], [ 1, %969 ], [ 1, %960 ], [ 1, %1276 ], [ 1, %1267 ], [ 1, %1586 ], [ 1, %1577 ], [ %1906, %5573 ], [ 1, %1899 ], [ 1, %1890 ], [ %2216, %5574 ], [ 1, %2209 ], [ 1, %2200 ], [ 1, %2524 ], [ 1, %2515 ], [ 1, %2834 ], [ 1, %2825 ], [ %3150, %5575 ], [ 1, %3143 ], [ 1, %3134 ], [ %3460, %5576 ], [ 1, %3453 ], [ 1, %3444 ], [ 1, %3761 ], [ 1, %3752 ], [ 1, %4064 ], [ 1, %4055 ], [ %4378, %5577 ], [ 1, %4371 ], [ 1, %4362 ], [ %4689, %5578 ], [ 1, %4682 ], [ 1, %4673 ], [ 1, %4990 ], [ 1, %4981 ], [ 1, %5293 ], [ 1, %5284 ], [ %53, %196 ], [ %44, %336 ], [ %359, %491 ], [ %350, %628 ], [ %666, %809 ], [ %657, %953 ], [ %976, %1109 ], [ %967, %1247 ], [ %1283, %1426 ], [ %1274, %1570 ], [ %1593, %1729 ], [ %1584, %1870 ], [ %1897, %2193 ], [ %2207, %2493 ], [ %2531, %2674 ], [ %2522, %2818 ], [ %2841, %2974 ], [ %2832, %3112 ], [ %3141, %3437 ], [ %3451, %3731 ], [ %3768, %3907 ], [ %3759, %4048 ], [ %4071, %4203 ], [ %4062, %4340 ], [ %4369, %4666 ], [ %4680, %4960 ], [ %4997, %5136 ], [ %4988, %5277 ], [ %5300, %5432 ], [ %5291, %5569 ]
  %5582 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5581, ptr noundef nonnull @.str.5) #3
  %5583 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5580, ptr noundef nonnull @.str.6) #3
  br label %5584

5584:                                             ; preds = %5129, %5214, %5270, %5425, %5510, %5562, %4514, %4599, %4659, %4815, %4900, %4953, %3900, %3985, %4041, %4196, %4281, %4333, %3286, %3371, %3430, %3586, %3671, %3724, %2667, %2751, %2811, %2967, %3051, %3105, %2042, %2127, %2186, %2345, %2430, %2486, %1419, %1503, %1563, %1722, %1806, %1863, %802, %886, %946, %1102, %1186, %1240, %189, %273, %329, %484, %568, %621, %5579
  %5585 = phi i32 [ 0, %5579 ], [ -1, %621 ], [ -1, %568 ], [ -1, %484 ], [ -1, %329 ], [ -1, %273 ], [ -1, %189 ], [ -1, %1240 ], [ -1, %1186 ], [ -1, %1102 ], [ -1, %946 ], [ -1, %886 ], [ -1, %802 ], [ -1, %1863 ], [ -1, %1806 ], [ -1, %1722 ], [ -1, %1563 ], [ -1, %1503 ], [ -1, %1419 ], [ -1, %2486 ], [ -1, %2430 ], [ -1, %2345 ], [ -1, %2186 ], [ -1, %2127 ], [ -1, %2042 ], [ -1, %3105 ], [ -1, %3051 ], [ -1, %2967 ], [ -1, %2811 ], [ -1, %2751 ], [ -1, %2667 ], [ -1, %3724 ], [ -1, %3671 ], [ -1, %3586 ], [ -1, %3430 ], [ -1, %3371 ], [ -1, %3286 ], [ -1, %4333 ], [ -1, %4281 ], [ -1, %4196 ], [ -1, %4041 ], [ -1, %3985 ], [ -1, %3900 ], [ -1, %4953 ], [ -1, %4900 ], [ -1, %4815 ], [ -1, %4659 ], [ -1, %4599 ], [ -1, %4514 ], [ -1, %5562 ], [ -1, %5510 ], [ -1, %5425 ], [ -1, %5270 ], [ -1, %5214 ], [ -1, %5129 ]
  ret i32 %5585
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.abs.i8(i8, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.abs.i64(i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.maxnum.f64(double, double) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.umax.i8(i8, i8) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14, !15}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !13, !15, !14}
!17 = distinct !{!17, !13}
!18 = !{!19, !19, i64 0}
!19 = !{!"double", !7, i64 0}
!20 = distinct !{!20, !13, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13, !14, !15}
!24 = distinct !{!24, !13, !15, !14}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13, !21}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13, !14, !15}
!29 = distinct !{!29, !13, !15, !14}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13, !21}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13, !14, !15}
!34 = distinct !{!34, !13, !15, !14}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13, !21}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13, !14, !15}
!39 = distinct !{!39, !13, !15, !14}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13, !21}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13, !14, !15}
!44 = distinct !{!44, !13, !15, !14}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13, !21}
!47 = distinct !{!47, !13}
!48 = distinct !{!48, !13, !14, !15}
!49 = distinct !{!49, !13, !15, !14}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13, !21}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13, !14, !15}
!54 = distinct !{!54, !13, !15, !14}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13, !21}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13, !14, !15}
!59 = distinct !{!59, !13, !15, !14}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !13, !21}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13, !14, !15}
!64 = distinct !{!64, !13, !15, !14}
!65 = distinct !{!65, !13}
!66 = distinct !{!66, !13, !21}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13, !14, !15}
!69 = distinct !{!69, !13, !15, !14}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13, !21}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !13, !14, !15}
!74 = distinct !{!74, !13, !15, !14}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13, !21}
!77 = distinct !{!77, !13}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !7, i64 0}
!80 = distinct !{!80, !13, !14, !15}
!81 = distinct !{!81, !13, !15, !14}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !21}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13, !14, !15}
!86 = distinct !{!86, !13, !15, !14}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13, !21}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13, !14, !15}
!91 = distinct !{!91, !13, !15, !14}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13, !21}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !13, !14, !15}
!96 = distinct !{!96, !13, !15, !14}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13, !21}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13, !14, !15}
!101 = distinct !{!101, !13, !15, !14}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13, !21}
!104 = distinct !{!104, !13}
!105 = distinct !{!105, !13, !14, !15}
!106 = distinct !{!106, !13, !15, !14}
!107 = distinct !{!107, !13}
!108 = distinct !{!108, !13, !21}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13, !14, !15}
!111 = distinct !{!111, !13, !15, !14}
!112 = distinct !{!112, !13}
!113 = distinct !{!113, !13, !21}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13, !14, !15}
!116 = distinct !{!116, !13, !15, !14}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13, !21}
!119 = distinct !{!119, !13}
!120 = !{!121, !121, i64 0}
!121 = !{!"long", !7, i64 0}
!122 = distinct !{!122, !13, !14, !15}
!123 = distinct !{!123, !13, !15, !14}
!124 = distinct !{!124, !13}
!125 = distinct !{!125, !13, !21}
!126 = distinct !{!126, !13}
!127 = distinct !{!127, !13, !14, !15}
!128 = distinct !{!128, !13, !15, !14}
!129 = distinct !{!129, !13}
!130 = distinct !{!130, !13, !21}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13, !14, !15}
!133 = distinct !{!133, !13, !15, !14}
!134 = distinct !{!134, !13}
!135 = distinct !{!135, !13, !21}
!136 = distinct !{!136, !13}
!137 = distinct !{!137, !13, !14, !15}
!138 = distinct !{!138, !13, !15, !14}
!139 = distinct !{!139, !13}
!140 = distinct !{!140, !13, !21}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !13, !14, !15}
!143 = distinct !{!143, !13, !15, !14}
!144 = distinct !{!144, !13}
!145 = distinct !{!145, !13, !21}
!146 = distinct !{!146, !13}
!147 = distinct !{!147, !13, !14, !15}
!148 = distinct !{!148, !13, !15, !14}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13, !21}
!151 = distinct !{!151, !13}
!152 = distinct !{!152, !13, !14, !15}
!153 = distinct !{!153, !13, !15, !14}
!154 = distinct !{!154, !13}
!155 = distinct !{!155, !13, !21}
!156 = distinct !{!156, !13}
!157 = distinct !{!157, !13, !14, !15}
!158 = distinct !{!158, !13, !15, !14}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !13, !21}
!161 = distinct !{!161, !13}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !7, i64 0}
!164 = distinct !{!164, !13, !14, !15}
!165 = distinct !{!165, !13, !15, !14}
!166 = distinct !{!166, !13}
!167 = distinct !{!167, !13, !21}
!168 = distinct !{!168, !13}
!169 = distinct !{!169, !13, !14, !15}
!170 = distinct !{!170, !13, !15, !14}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13, !21}
!173 = distinct !{!173, !13}
!174 = distinct !{!174, !13, !14, !15}
!175 = distinct !{!175, !13, !15, !14}
!176 = distinct !{!176, !13}
!177 = distinct !{!177, !13, !21}
!178 = distinct !{!178, !13}
!179 = distinct !{!179, !13, !14, !15}
!180 = distinct !{!180, !13, !15, !14}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !13, !21}
!183 = distinct !{!183, !13}
!184 = distinct !{!184, !13, !14, !15}
!185 = distinct !{!185, !13, !15, !14}
!186 = distinct !{!186, !13}
!187 = distinct !{!187, !13, !21}
!188 = distinct !{!188, !13}
!189 = distinct !{!189, !13, !14, !15}
!190 = distinct !{!190, !13, !15, !14}
!191 = distinct !{!191, !13}
!192 = distinct !{!192, !13, !21}
!193 = distinct !{!193, !13}
!194 = distinct !{!194, !13, !14, !15}
!195 = distinct !{!195, !13, !15, !14}
!196 = distinct !{!196, !13}
!197 = distinct !{!197, !13, !21}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13, !14, !15}
!200 = distinct !{!200, !13, !15, !14}
!201 = distinct !{!201, !13}
!202 = distinct !{!202, !13, !21}
!203 = distinct !{!203, !13}
!204 = distinct !{!204, !13, !14, !15}
!205 = distinct !{!205, !13, !15, !14}
!206 = distinct !{!206, !13}
!207 = distinct !{!207, !13, !21}
!208 = distinct !{!208, !13}
!209 = distinct !{!209, !13, !14, !15}
!210 = distinct !{!210, !13, !15, !14}
!211 = distinct !{!211, !13}
!212 = distinct !{!212, !13, !21}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !13, !14, !15}
!215 = distinct !{!215, !13, !15, !14}
!216 = distinct !{!216, !13}
!217 = distinct !{!217, !13, !21}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !13, !14, !15}
!220 = distinct !{!220, !13, !15, !14}
!221 = distinct !{!221, !13}
!222 = distinct !{!222, !13, !21}
!223 = distinct !{!223, !13}
!224 = distinct !{!224, !13, !14, !15}
!225 = distinct !{!225, !13, !15, !14}
!226 = distinct !{!226, !13}
!227 = distinct !{!227, !13, !21}
!228 = distinct !{!228, !13}
!229 = distinct !{!229, !13, !14, !15}
!230 = distinct !{!230, !13, !15, !14}
!231 = distinct !{!231, !13}
!232 = distinct !{!232, !13, !21}
!233 = distinct !{!233, !13}
!234 = distinct !{!234, !13, !14, !15}
!235 = distinct !{!235, !13, !15, !14}
!236 = distinct !{!236, !13}
!237 = distinct !{!237, !13, !21}
!238 = distinct !{!238, !13}
!239 = distinct !{!239, !13, !14, !15}
!240 = distinct !{!240, !13, !15, !14}
!241 = distinct !{!241, !13}
!242 = distinct !{!242, !13, !21}
!243 = distinct !{!243, !13}
!244 = distinct !{!244, !13, !14, !15}
!245 = distinct !{!245, !13, !15, !14}
!246 = distinct !{!246, !13}
!247 = distinct !{!247, !13, !21}
!248 = distinct !{!248, !13}
!249 = distinct !{!249, !13, !14, !15}
!250 = distinct !{!250, !13, !15, !14}
!251 = distinct !{!251, !13}
!252 = distinct !{!252, !13, !21}
!253 = distinct !{!253, !13}
!254 = distinct !{!254, !13, !14, !15}
!255 = distinct !{!255, !13, !15, !14}
!256 = distinct !{!256, !13}
!257 = distinct !{!257, !13, !21}
!258 = distinct !{!258, !13}
!259 = distinct !{!259, !13, !14, !15}
!260 = distinct !{!260, !13, !15, !14}
!261 = distinct !{!261, !13}
!262 = distinct !{!262, !13, !21}
!263 = distinct !{!263, !13}
!264 = distinct !{!264, !13, !14, !15}
!265 = distinct !{!265, !13, !15, !14}
!266 = distinct !{!266, !13}
!267 = distinct !{!267, !13, !21}
!268 = distinct !{!268, !13}
!269 = distinct !{!269, !13, !14, !15}
!270 = distinct !{!270, !13, !15, !14}
!271 = distinct !{!271, !13}
!272 = distinct !{!272, !13, !21}
!273 = distinct !{!273, !13}
!274 = distinct !{!274, !13, !14, !15}
!275 = distinct !{!275, !13, !15, !14}
!276 = distinct !{!276, !13}
!277 = distinct !{!277, !13, !21}
!278 = distinct !{!278, !13}
!279 = distinct !{!279, !13, !14, !15}
!280 = distinct !{!280, !13, !15, !14}
!281 = distinct !{!281, !13}
!282 = distinct !{!282, !13, !21}
!283 = distinct !{!283, !13}
!284 = distinct !{!284, !13, !14, !15}
!285 = distinct !{!285, !13, !15, !14}
!286 = distinct !{!286, !13}
!287 = distinct !{!287, !13, !21}
!288 = distinct !{!288, !13}
!289 = distinct !{!289, !13, !14, !15}
!290 = distinct !{!290, !13, !15, !14}
!291 = distinct !{!291, !13}
!292 = distinct !{!292, !13, !21}
!293 = distinct !{!293, !13}
!294 = distinct !{!294, !13, !14, !15}
!295 = distinct !{!295, !13, !15, !14}
!296 = distinct !{!296, !13}
!297 = distinct !{!297, !13, !21}
!298 = distinct !{!298, !13}
!299 = distinct !{!299, !13, !14, !15}
!300 = distinct !{!300, !13, !15, !14}
!301 = distinct !{!301, !13}
!302 = distinct !{!302, !13, !21}
!303 = distinct !{!303, !13}
!304 = distinct !{!304, !13, !14, !15}
!305 = distinct !{!305, !13, !15, !14}
!306 = distinct !{!306, !13}
!307 = distinct !{!307, !13, !21}
!308 = distinct !{!308, !13}
!309 = distinct !{!309, !13, !14, !15}
!310 = distinct !{!310, !13, !15, !14}
!311 = distinct !{!311, !13}
!312 = distinct !{!312, !13, !21}
!313 = distinct !{!313, !13}
!314 = distinct !{!314, !13, !14, !15}
!315 = distinct !{!315, !13, !15, !14}
!316 = distinct !{!316, !13}
!317 = distinct !{!317, !13, !21}
!318 = distinct !{!318, !13}
!319 = distinct !{!319, !13, !14, !15}
!320 = distinct !{!320, !13, !15, !14}
!321 = distinct !{!321, !13}
!322 = distinct !{!322, !13, !21}
!323 = distinct !{!323, !13}
!324 = distinct !{!324, !13, !14, !15}
!325 = distinct !{!325, !13, !15, !14}
!326 = distinct !{!326, !13}
!327 = distinct !{!327, !13, !21}
!328 = distinct !{!328, !13}
!329 = distinct !{!329, !13, !14, !15}
!330 = distinct !{!330, !13, !15, !14}
!331 = distinct !{!331, !13}
!332 = distinct !{!332, !13, !21}
!333 = distinct !{!333, !13}
!334 = distinct !{!334, !13, !14, !15}
!335 = distinct !{!335, !13, !15, !14}
!336 = distinct !{!336, !13}
!337 = distinct !{!337, !13, !21}
!338 = distinct !{!338, !13}
!339 = distinct !{!339, !13, !14, !15}
!340 = distinct !{!340, !13, !15, !14}
!341 = distinct !{!341, !13}
!342 = distinct !{!342, !13, !21}
!343 = distinct !{!343, !13}
!344 = distinct !{!344, !13, !14, !15}
!345 = distinct !{!345, !13, !15, !14}
!346 = distinct !{!346, !13}
!347 = distinct !{!347, !13, !21}
!348 = distinct !{!348, !13}
!349 = distinct !{!349, !13, !14, !15}
!350 = distinct !{!350, !13, !15, !14}
!351 = distinct !{!351, !13}
!352 = distinct !{!352, !13, !21}
!353 = distinct !{!353, !13}
!354 = distinct !{!354, !13, !14, !15}
!355 = distinct !{!355, !13, !15, !14}
!356 = distinct !{!356, !13}
!357 = distinct !{!357, !13, !21}
!358 = distinct !{!358, !13}
!359 = distinct !{!359, !13, !14, !15}
!360 = distinct !{!360, !13, !15, !14}
!361 = distinct !{!361, !13}
!362 = distinct !{!362, !13, !21}
!363 = distinct !{!363, !13}
!364 = distinct !{!364, !13, !14, !15}
!365 = distinct !{!365, !13, !15, !14}
!366 = distinct !{!366, !13}
!367 = distinct !{!367, !13, !21}
!368 = distinct !{!368, !13}
!369 = distinct !{!369, !13, !14, !15}
!370 = distinct !{!370, !13, !15, !14}
!371 = distinct !{!371, !13}
!372 = distinct !{!372, !13, !21}
!373 = distinct !{!373, !13}
!374 = distinct !{!374, !13, !14, !15}
!375 = distinct !{!375, !13, !15, !14}
!376 = distinct !{!376, !13}
!377 = distinct !{!377, !13, !21}
!378 = distinct !{!378, !13}
!379 = distinct !{!379, !13, !14, !15}
!380 = distinct !{!380, !13, !15, !14}
!381 = distinct !{!381, !13}
!382 = distinct !{!382, !13, !21}
!383 = distinct !{!383, !13}
!384 = distinct !{!384, !13, !14, !15}
!385 = distinct !{!385, !13, !15, !14}
!386 = distinct !{!386, !13}
!387 = distinct !{!387, !13, !21}
!388 = distinct !{!388, !13}
!389 = distinct !{!389, !13, !14, !15}
!390 = distinct !{!390, !13, !15, !14}
!391 = distinct !{!391, !13}
!392 = distinct !{!392, !13, !21}
!393 = distinct !{!393, !13}
!394 = distinct !{!394, !13, !14, !15}
!395 = distinct !{!395, !13, !15, !14}
!396 = distinct !{!396, !13}
!397 = distinct !{!397, !13, !21}
!398 = distinct !{!398, !13}
!399 = distinct !{!399, !13, !14, !15}
!400 = distinct !{!400, !13, !15, !14}
!401 = distinct !{!401, !13}
!402 = distinct !{!402, !13, !21}
!403 = distinct !{!403, !13}
!404 = distinct !{!404, !13, !14, !15}
!405 = distinct !{!405, !13, !15, !14}
!406 = distinct !{!406, !13}
!407 = distinct !{!407, !13, !21}
!408 = distinct !{!408, !13}
!409 = distinct !{!409, !13, !14, !15}
!410 = distinct !{!410, !13, !15, !14}
!411 = distinct !{!411, !13}
!412 = distinct !{!412, !13, !21}
!413 = distinct !{!413, !13}
!414 = distinct !{!414, !13, !14, !15}
!415 = distinct !{!415, !13, !15, !14}
!416 = distinct !{!416, !13}
!417 = distinct !{!417, !13, !21}
!418 = distinct !{!418, !13}
!419 = distinct !{!419, !13, !14, !15}
!420 = distinct !{!420, !13, !15, !14}
!421 = distinct !{!421, !13}
!422 = distinct !{!422, !13, !21}
!423 = distinct !{!423, !13}
!424 = distinct !{!424, !13, !14, !15}
!425 = distinct !{!425, !13, !15, !14}
!426 = distinct !{!426, !13}
!427 = distinct !{!427, !13, !21}
!428 = distinct !{!428, !13}
!429 = distinct !{!429, !13, !14, !15}
!430 = distinct !{!430, !13, !15, !14}
!431 = distinct !{!431, !13}
!432 = distinct !{!432, !13, !21}
!433 = distinct !{!433, !13}
!434 = distinct !{!434, !13, !14, !15}
!435 = distinct !{!435, !13, !15, !14}
!436 = distinct !{!436, !13}
!437 = distinct !{!437, !13, !21}
!438 = distinct !{!438, !13}
!439 = distinct !{!439, !13, !14, !15}
!440 = distinct !{!440, !13, !15, !14}
!441 = distinct !{!441, !13}
!442 = distinct !{!442, !13, !21}
!443 = distinct !{!443, !13}
!444 = distinct !{!444, !13, !14, !15}
!445 = distinct !{!445, !13, !15, !14}
!446 = distinct !{!446, !13}
!447 = distinct !{!447, !13, !21}
!448 = distinct !{!448, !13}
!449 = distinct !{!449, !13, !14, !15}
!450 = distinct !{!450, !13, !15, !14}
!451 = distinct !{!451, !13}
!452 = distinct !{!452, !13, !21}
!453 = distinct !{!453, !13}
!454 = distinct !{!454, !13, !14, !15}
!455 = distinct !{!455, !13, !15, !14}
!456 = distinct !{!456, !13}
!457 = distinct !{!457, !13, !21}
!458 = distinct !{!458, !13}
!459 = distinct !{!459, !13, !14, !15}
!460 = distinct !{!460, !13, !15, !14}
!461 = distinct !{!461, !13}
!462 = distinct !{!462, !13, !21}
!463 = distinct !{!463, !13}
!464 = distinct !{!464, !13, !14, !15}
!465 = distinct !{!465, !13, !15, !14}
!466 = distinct !{!466, !13}
!467 = distinct !{!467, !13, !21}
!468 = distinct !{!468, !13}
!469 = distinct !{!469, !13, !14, !15}
!470 = distinct !{!470, !13, !15, !14}
!471 = distinct !{!471, !13}
!472 = distinct !{!472, !13, !21}
!473 = distinct !{!473, !13}
!474 = distinct !{!474, !13, !14, !15}
!475 = distinct !{!475, !13, !15, !14}
!476 = distinct !{!476, !13}
!477 = distinct !{!477, !13, !21}
!478 = distinct !{!478, !13}
!479 = distinct !{!479, !13, !14, !15}
!480 = distinct !{!480, !13, !15, !14}
!481 = distinct !{!481, !13}
!482 = distinct !{!482, !13, !21}
!483 = distinct !{!483, !13}
!484 = distinct !{!484, !13, !14, !15}
!485 = distinct !{!485, !13, !15, !14}
!486 = distinct !{!486, !13}
!487 = distinct !{!487, !13, !21}
!488 = distinct !{!488, !13}
!489 = distinct !{!489, !13, !14, !15}
!490 = distinct !{!490, !13, !15, !14}
!491 = distinct !{!491, !13}
!492 = distinct !{!492, !13, !21}
!493 = distinct !{!493, !13}
!494 = distinct !{!494, !13, !14, !15}
!495 = distinct !{!495, !13, !15, !14}
!496 = distinct !{!496, !13}
!497 = distinct !{!497, !13, !21}
!498 = distinct !{!498, !13}
!499 = distinct !{!499, !13, !14, !15}
!500 = distinct !{!500, !13, !15, !14}
!501 = distinct !{!501, !13}
!502 = distinct !{!502, !13, !21}
!503 = distinct !{!503, !13}
!504 = distinct !{!504, !13, !14, !15}
!505 = distinct !{!505, !13, !15, !14}
!506 = distinct !{!506, !13}
!507 = distinct !{!507, !13, !21}
!508 = distinct !{!508, !13}
!509 = distinct !{!509, !13, !14, !15}
!510 = distinct !{!510, !13, !15, !14}
!511 = distinct !{!511, !13}
!512 = distinct !{!512, !13, !21}
!513 = distinct !{!513, !13}
!514 = distinct !{!514, !13, !14, !15}
!515 = distinct !{!515, !13, !15, !14}
!516 = distinct !{!516, !13}
!517 = distinct !{!517, !13, !21}
!518 = distinct !{!518, !13}
!519 = distinct !{!519, !13, !14, !15}
!520 = distinct !{!520, !13, !15, !14}
!521 = distinct !{!521, !13}
!522 = distinct !{!522, !13, !21}
!523 = distinct !{!523, !13}
!524 = distinct !{!524, !13, !14, !15}
!525 = distinct !{!525, !13, !15, !14}
!526 = distinct !{!526, !13}
!527 = distinct !{!527, !13, !21}
!528 = distinct !{!528, !13}
!529 = distinct !{!529, !13, !14, !15}
!530 = distinct !{!530, !13, !15, !14}
!531 = distinct !{!531, !13}
!532 = distinct !{!532, !13, !21}
!533 = distinct !{!533, !13}
!534 = distinct !{!534, !13, !14, !15}
!535 = distinct !{!535, !13, !15, !14}
!536 = distinct !{!536, !13}
!537 = distinct !{!537, !13, !21}
!538 = distinct !{!538, !13}
!539 = distinct !{!539, !13, !14, !15}
!540 = distinct !{!540, !13, !15, !14}
!541 = distinct !{!541, !13}
!542 = distinct !{!542, !13, !21}
!543 = distinct !{!543, !13}
!544 = distinct !{!544, !13, !14, !15}
!545 = distinct !{!545, !13, !15, !14}
!546 = distinct !{!546, !13}
!547 = distinct !{!547, !13, !21}
!548 = distinct !{!548, !13}
!549 = distinct !{!549, !13, !14, !15}
!550 = distinct !{!550, !13, !15, !14}
!551 = distinct !{!551, !13}
!552 = distinct !{!552, !13, !21}
!553 = distinct !{!553, !13}
!554 = distinct !{!554, !13, !14, !15}
!555 = distinct !{!555, !13, !15, !14}
!556 = distinct !{!556, !13}
!557 = distinct !{!557, !13, !21}
!558 = distinct !{!558, !13}
!559 = distinct !{!559, !13, !14, !15}
!560 = distinct !{!560, !13, !15, !14}
!561 = distinct !{!561, !13}
!562 = distinct !{!562, !13, !21}
!563 = distinct !{!563, !13}
!564 = distinct !{!564, !13, !14, !15}
!565 = distinct !{!565, !13, !15, !14}
!566 = distinct !{!566, !13}
!567 = distinct !{!567, !13, !21}
!568 = distinct !{!568, !13}
!569 = distinct !{!569, !13, !14, !15}
!570 = distinct !{!570, !13, !15, !14}
!571 = distinct !{!571, !13}
!572 = distinct !{!572, !13, !21}
!573 = distinct !{!573, !13}
!574 = distinct !{!574, !13, !14, !15}
!575 = distinct !{!575, !13, !15, !14}
!576 = distinct !{!576, !13}
!577 = distinct !{!577, !13, !21}
!578 = distinct !{!578, !13}
!579 = distinct !{!579, !13, !14, !15}
!580 = distinct !{!580, !13, !15, !14}
!581 = distinct !{!581, !13}
!582 = distinct !{!582, !13, !21}
!583 = distinct !{!583, !13}
!584 = distinct !{!584, !13, !14, !15}
!585 = distinct !{!585, !13, !15, !14}
!586 = distinct !{!586, !13}
!587 = distinct !{!587, !13, !21}
!588 = distinct !{!588, !13}
!589 = distinct !{!589, !13, !14, !15}
!590 = distinct !{!590, !13, !15, !14}
!591 = distinct !{!591, !13}
!592 = distinct !{!592, !13, !21}
!593 = distinct !{!593, !13}
!594 = distinct !{!594, !13, !14, !15}
!595 = distinct !{!595, !13, !15, !14}
!596 = distinct !{!596, !13}
!597 = distinct !{!597, !13, !21}
!598 = distinct !{!598, !13}
!599 = distinct !{!599, !13, !14, !15}
!600 = distinct !{!600, !13, !15, !14}
!601 = distinct !{!601, !13}
!602 = distinct !{!602, !13, !21}
!603 = distinct !{!603, !13}
!604 = distinct !{!604, !13, !14, !15}
!605 = distinct !{!605, !13, !15, !14}
!606 = distinct !{!606, !13}
!607 = distinct !{!607, !13, !21}
!608 = distinct !{!608, !13}
!609 = distinct !{!609, !13, !14, !15}
!610 = distinct !{!610, !13, !15, !14}
!611 = distinct !{!611, !13}
!612 = distinct !{!612, !13, !21}
!613 = distinct !{!613, !13}
!614 = distinct !{!614, !13, !14, !15}
!615 = distinct !{!615, !13, !15, !14}
!616 = distinct !{!616, !13}
!617 = distinct !{!617, !13, !21}
!618 = distinct !{!618, !13}
!619 = distinct !{!619, !13, !14, !15}
!620 = distinct !{!620, !13, !15, !14}
!621 = distinct !{!621, !13}
!622 = distinct !{!622, !13, !21}
!623 = distinct !{!623, !13}
!624 = distinct !{!624, !13, !14, !15}
!625 = distinct !{!625, !13, !15, !14}
!626 = distinct !{!626, !13}
!627 = distinct !{!627, !13, !21}
!628 = distinct !{!628, !13}
!629 = distinct !{!629, !13, !14, !15}
!630 = distinct !{!630, !13, !15, !14}
!631 = distinct !{!631, !13}
!632 = distinct !{!632, !13, !21}
!633 = distinct !{!633, !13}
!634 = distinct !{!634, !13, !14, !15}
!635 = distinct !{!635, !13, !15, !14}
!636 = distinct !{!636, !13}
!637 = distinct !{!637, !13, !21}
!638 = distinct !{!638, !13}
!639 = distinct !{!639, !13, !14, !15}
!640 = distinct !{!640, !13, !15, !14}
!641 = distinct !{!641, !13}
!642 = distinct !{!642, !13, !21}
!643 = distinct !{!643, !13}
!644 = distinct !{!644, !13, !14, !15}
!645 = distinct !{!645, !13, !15, !14}
!646 = distinct !{!646, !13}
!647 = distinct !{!647, !13, !21}
!648 = distinct !{!648, !13}
!649 = distinct !{!649, !13, !14, !15}
!650 = distinct !{!650, !13, !15, !14}
!651 = distinct !{!651, !13}
!652 = distinct !{!652, !13, !21}
!653 = distinct !{!653, !13}
!654 = distinct !{!654, !13, !14, !15}
!655 = distinct !{!655, !13, !15, !14}
!656 = distinct !{!656, !13}
!657 = distinct !{!657, !13, !21}
!658 = distinct !{!658, !13}
!659 = distinct !{!659, !13, !14, !15}
!660 = distinct !{!660, !13, !15, !14}
!661 = distinct !{!661, !13}
!662 = distinct !{!662, !13, !21}
!663 = distinct !{!663, !13}
!664 = distinct !{!664, !13, !14, !15}
!665 = distinct !{!665, !13, !15, !14}
!666 = distinct !{!666, !13}
!667 = distinct !{!667, !13, !21}
!668 = distinct !{!668, !13}
!669 = distinct !{!669, !13, !14, !15}
!670 = distinct !{!670, !13, !15, !14}
!671 = distinct !{!671, !13}
!672 = distinct !{!672, !13, !21}
!673 = distinct !{!673, !13}
!674 = distinct !{!674, !13, !14, !15}
!675 = distinct !{!675, !13, !15, !14}
!676 = distinct !{!676, !13}
!677 = distinct !{!677, !13, !21}
!678 = distinct !{!678, !13}
!679 = distinct !{!679, !13, !14, !15}
!680 = distinct !{!680, !13, !15, !14}
!681 = distinct !{!681, !13}
!682 = distinct !{!682, !13, !21}
!683 = distinct !{!683, !13}
!684 = distinct !{!684, !13, !14, !15}
!685 = distinct !{!685, !13, !15, !14}
!686 = distinct !{!686, !13}
!687 = distinct !{!687, !13, !21}
!688 = distinct !{!688, !13}
!689 = distinct !{!689, !13, !14, !15}
!690 = distinct !{!690, !13, !15, !14}
!691 = distinct !{!691, !13}
!692 = distinct !{!692, !13, !21}
!693 = distinct !{!693, !13}
!694 = distinct !{!694, !13, !14, !15}
!695 = distinct !{!695, !13, !15, !14}
!696 = distinct !{!696, !13}
!697 = distinct !{!697, !13, !21}
!698 = distinct !{!698, !13}
!699 = distinct !{!699, !13, !14, !15}
!700 = distinct !{!700, !13, !15, !14}
!701 = distinct !{!701, !13}
!702 = distinct !{!702, !13, !21}
!703 = distinct !{!703, !13}
!704 = distinct !{!704, !13, !14, !15}
!705 = distinct !{!705, !13, !15, !14}
!706 = distinct !{!706, !13}
!707 = distinct !{!707, !13, !21}
!708 = distinct !{!708, !13}
!709 = distinct !{!709, !13, !14, !15}
!710 = distinct !{!710, !13, !15, !14}
!711 = distinct !{!711, !13}
!712 = distinct !{!712, !13, !21}
!713 = distinct !{!713, !13}
!714 = distinct !{!714, !13, !14, !15}
!715 = distinct !{!715, !13, !15, !14}
!716 = distinct !{!716, !13}
!717 = distinct !{!717, !13, !21}
!718 = distinct !{!718, !13}
!719 = distinct !{!719, !13, !14, !15}
!720 = distinct !{!720, !13, !15, !14}
!721 = distinct !{!721, !13}
!722 = distinct !{!722, !13, !21}
!723 = distinct !{!723, !13}
!724 = distinct !{!724, !13, !14, !15}
!725 = distinct !{!725, !13, !15, !14}
!726 = distinct !{!726, !13}
!727 = distinct !{!727, !13, !21}
!728 = distinct !{!728, !13}
!729 = distinct !{!729, !13, !14, !15}
!730 = distinct !{!730, !13, !15, !14}
!731 = distinct !{!731, !13}
!732 = distinct !{!732, !13, !21}
!733 = distinct !{!733, !13}
!734 = distinct !{!734, !13, !14, !15}
!735 = distinct !{!735, !13, !15, !14}
!736 = distinct !{!736, !13}
!737 = distinct !{!737, !13, !21}
!738 = distinct !{!738, !13}
!739 = distinct !{!739, !13, !14, !15}
!740 = distinct !{!740, !13, !15, !14}
!741 = distinct !{!741, !13}
!742 = distinct !{!742, !13, !21}
!743 = distinct !{!743, !13}
!744 = distinct !{!744, !13, !14, !15}
!745 = distinct !{!745, !13, !15, !14}
!746 = distinct !{!746, !13}
!747 = distinct !{!747, !13, !21}
!748 = distinct !{!748, !13}
!749 = distinct !{!749, !13, !14, !15}
!750 = distinct !{!750, !13, !15, !14}
!751 = distinct !{!751, !13}
!752 = distinct !{!752, !13, !21}
!753 = distinct !{!753, !13}
!754 = distinct !{!754, !13, !14, !15}
!755 = distinct !{!755, !13, !15, !14}
!756 = distinct !{!756, !13}
!757 = distinct !{!757, !13, !21}
!758 = distinct !{!758, !13}
!759 = distinct !{!759, !13, !14, !15}
!760 = distinct !{!760, !13, !15, !14}
!761 = distinct !{!761, !13}
!762 = distinct !{!762, !13, !21}
!763 = distinct !{!763, !13}
!764 = distinct !{!764, !13, !14, !15}
!765 = distinct !{!765, !13, !15, !14}
!766 = distinct !{!766, !13}
!767 = distinct !{!767, !13, !21}
!768 = distinct !{!768, !13}
!769 = distinct !{!769, !13, !14, !15}
!770 = distinct !{!770, !13, !15, !14}
!771 = distinct !{!771, !13}
!772 = distinct !{!772, !13, !21}
!773 = distinct !{!773, !13}
!774 = distinct !{!774, !13, !14, !15}
!775 = distinct !{!775, !13, !15, !14}
!776 = distinct !{!776, !13}
!777 = distinct !{!777, !13, !21}
!778 = distinct !{!778, !13}
!779 = distinct !{!779, !13, !14, !15}
!780 = distinct !{!780, !13, !15, !14}
!781 = distinct !{!781, !13}
!782 = distinct !{!782, !13, !21}
!783 = distinct !{!783, !13}
!784 = distinct !{!784, !13, !14, !15}
!785 = distinct !{!785, !13, !15, !14}
!786 = distinct !{!786, !13}
!787 = distinct !{!787, !13, !21}
!788 = distinct !{!788, !13}
!789 = distinct !{!789, !13, !14, !15}
!790 = distinct !{!790, !13, !15, !14}
!791 = distinct !{!791, !13}
!792 = distinct !{!792, !13, !21}
!793 = distinct !{!793, !13}
!794 = distinct !{!794, !13, !14, !15}
!795 = distinct !{!795, !13, !15, !14}
!796 = distinct !{!796, !13}
!797 = distinct !{!797, !13, !21}
!798 = distinct !{!798, !13}
!799 = distinct !{!799, !13, !14, !15}
!800 = distinct !{!800, !13, !15, !14}
!801 = distinct !{!801, !13}
!802 = distinct !{!802, !13, !21}
!803 = distinct !{!803, !13}
!804 = distinct !{!804, !13, !14, !15}
!805 = distinct !{!805, !13, !15, !14}
!806 = distinct !{!806, !13}
!807 = distinct !{!807, !13, !21}
!808 = distinct !{!808, !13}
!809 = distinct !{!809, !13, !14, !15}
!810 = distinct !{!810, !13, !15, !14}
!811 = distinct !{!811, !13}
!812 = distinct !{!812, !13, !21}
!813 = distinct !{!813, !13}
!814 = distinct !{!814, !13, !14, !15}
!815 = distinct !{!815, !13, !15, !14}
!816 = distinct !{!816, !13}
!817 = distinct !{!817, !13, !21}
!818 = distinct !{!818, !13}
!819 = distinct !{!819, !13, !14, !15}
!820 = distinct !{!820, !13, !15, !14}
!821 = distinct !{!821, !13}
!822 = distinct !{!822, !13, !21}
!823 = distinct !{!823, !13}
!824 = distinct !{!824, !13, !14, !15}
!825 = distinct !{!825, !13, !15, !14}
!826 = distinct !{!826, !13}
!827 = distinct !{!827, !13, !21}
!828 = distinct !{!828, !13}
!829 = distinct !{!829, !13, !14, !15}
!830 = distinct !{!830, !13, !15, !14}
!831 = distinct !{!831, !13}
!832 = distinct !{!832, !13, !21}
!833 = distinct !{!833, !13}
!834 = distinct !{!834, !13, !14, !15}
!835 = distinct !{!835, !13, !15, !14}
!836 = distinct !{!836, !13}
!837 = distinct !{!837, !13, !21}
!838 = distinct !{!838, !13}
!839 = distinct !{!839, !13, !14, !15}
!840 = distinct !{!840, !13, !15, !14}
!841 = distinct !{!841, !13}
!842 = distinct !{!842, !13, !21}
!843 = distinct !{!843, !13}
!844 = distinct !{!844, !13, !14, !15}
!845 = distinct !{!845, !13, !15, !14}
!846 = distinct !{!846, !13}
!847 = distinct !{!847, !13, !21}
!848 = distinct !{!848, !13}
!849 = distinct !{!849, !13, !14, !15}
!850 = distinct !{!850, !13, !15, !14}
!851 = distinct !{!851, !13}
!852 = distinct !{!852, !13, !21}
!853 = distinct !{!853, !13}
!854 = distinct !{!854, !13, !14, !15}
!855 = distinct !{!855, !13, !15, !14}
!856 = distinct !{!856, !13}
!857 = distinct !{!857, !13, !21}
!858 = distinct !{!858, !13}
!859 = distinct !{!859, !13, !14, !15}
!860 = distinct !{!860, !13, !15, !14}
!861 = distinct !{!861, !13}
!862 = distinct !{!862, !13, !21}
!863 = distinct !{!863, !13}
!864 = distinct !{!864, !13, !14, !15}
!865 = distinct !{!865, !13, !15, !14}
!866 = distinct !{!866, !13}
!867 = distinct !{!867, !13, !21}
!868 = distinct !{!868, !13}
!869 = distinct !{!869, !13, !14, !15}
!870 = distinct !{!870, !13, !15, !14}
!871 = distinct !{!871, !13}
!872 = distinct !{!872, !13, !21}
!873 = distinct !{!873, !13}
!874 = distinct !{!874, !13, !14, !15}
!875 = distinct !{!875, !13, !15, !14}
!876 = distinct !{!876, !13}
!877 = distinct !{!877, !13, !21}
!878 = distinct !{!878, !13}
!879 = distinct !{!879, !13, !14, !15}
!880 = distinct !{!880, !13, !15, !14}
!881 = distinct !{!881, !13}
!882 = distinct !{!882, !13, !21}
!883 = distinct !{!883, !13}
!884 = distinct !{!884, !13, !14, !15}
!885 = distinct !{!885, !13, !15, !14}
!886 = distinct !{!886, !13}
!887 = distinct !{!887, !13, !21}
!888 = distinct !{!888, !13}
!889 = distinct !{!889, !13, !14, !15}
!890 = distinct !{!890, !13, !15, !14}
!891 = distinct !{!891, !13}
!892 = distinct !{!892, !13, !21}
!893 = distinct !{!893, !13}
!894 = distinct !{!894, !13, !14, !15}
!895 = distinct !{!895, !13, !15, !14}
!896 = distinct !{!896, !13}
!897 = distinct !{!897, !13, !21}
!898 = distinct !{!898, !13}
!899 = distinct !{!899, !13, !14, !15}
!900 = distinct !{!900, !13, !15, !14}
!901 = distinct !{!901, !13}
!902 = distinct !{!902, !13, !21}
!903 = distinct !{!903, !13}
!904 = distinct !{!904, !13, !14, !15}
!905 = distinct !{!905, !13, !15, !14}
!906 = distinct !{!906, !13}
!907 = distinct !{!907, !13, !21}
!908 = distinct !{!908, !13}
!909 = distinct !{!909, !13, !14, !15}
!910 = distinct !{!910, !13, !15, !14}
!911 = distinct !{!911, !13}
!912 = distinct !{!912, !13, !21}
!913 = distinct !{!913, !13}
!914 = distinct !{!914, !13, !14, !15}
!915 = distinct !{!915, !13, !15, !14}
!916 = distinct !{!916, !13}
!917 = distinct !{!917, !13, !21}
!918 = distinct !{!918, !13}
!919 = distinct !{!919, !13, !14, !15}
!920 = distinct !{!920, !13, !15, !14}
!921 = distinct !{!921, !13}
!922 = distinct !{!922, !13, !21}
!923 = distinct !{!923, !13}
!924 = distinct !{!924, !13, !14, !15}
!925 = distinct !{!925, !13, !15, !14}
!926 = distinct !{!926, !13}
!927 = distinct !{!927, !13, !21}
!928 = distinct !{!928, !13}
!929 = distinct !{!929, !13, !14, !15}
!930 = distinct !{!930, !13, !15, !14}
!931 = distinct !{!931, !13}
!932 = distinct !{!932, !13, !21}
!933 = distinct !{!933, !13}
!934 = distinct !{!934, !13, !14, !15}
!935 = distinct !{!935, !13, !15, !14}
!936 = distinct !{!936, !13}
!937 = distinct !{!937, !13, !21}
!938 = distinct !{!938, !13}
!939 = distinct !{!939, !13, !14, !15}
!940 = distinct !{!940, !13, !15, !14}
!941 = distinct !{!941, !13}
!942 = distinct !{!942, !13, !21}
!943 = distinct !{!943, !13}
!944 = distinct !{!944, !13, !14, !15}
!945 = distinct !{!945, !13, !15, !14}
!946 = distinct !{!946, !13}
!947 = distinct !{!947, !13, !21}
!948 = distinct !{!948, !13}
!949 = distinct !{!949, !13, !14, !15}
!950 = distinct !{!950, !13, !15, !14}
!951 = distinct !{!951, !13}
!952 = distinct !{!952, !13, !21}
!953 = distinct !{!953, !13}
!954 = distinct !{!954, !13, !14, !15}
!955 = distinct !{!955, !13, !15, !14}
!956 = distinct !{!956, !13}
!957 = distinct !{!957, !13, !21}
!958 = distinct !{!958, !13}
!959 = distinct !{!959, !13, !14, !15}
!960 = distinct !{!960, !13, !15, !14}
!961 = distinct !{!961, !13}
!962 = distinct !{!962, !13, !21}
!963 = distinct !{!963, !13}
!964 = distinct !{!964, !13, !14, !15}
!965 = distinct !{!965, !13, !15, !14}
!966 = distinct !{!966, !13}
!967 = distinct !{!967, !13, !21}
!968 = distinct !{!968, !13}
!969 = distinct !{!969, !13, !14, !15}
!970 = distinct !{!970, !13, !15, !14}
!971 = distinct !{!971, !13}
!972 = distinct !{!972, !13, !21}
!973 = distinct !{!973, !13}
!974 = distinct !{!974, !13, !14, !15}
!975 = distinct !{!975, !13, !15, !14}
!976 = distinct !{!976, !13}
!977 = distinct !{!977, !13, !21}
!978 = distinct !{!978, !13}
!979 = distinct !{!979, !13, !14, !15}
!980 = distinct !{!980, !13, !15, !14}
!981 = distinct !{!981, !13}
!982 = distinct !{!982, !13, !21}
!983 = distinct !{!983, !13}
!984 = distinct !{!984, !13, !14, !15}
!985 = distinct !{!985, !13, !15, !14}
!986 = distinct !{!986, !13}
!987 = distinct !{!987, !13, !21}
!988 = distinct !{!988, !13}
!989 = distinct !{!989, !13, !14, !15}
!990 = distinct !{!990, !13, !15, !14}
!991 = distinct !{!991, !13}
!992 = distinct !{!992, !13, !21}
!993 = distinct !{!993, !13}
!994 = distinct !{!994, !13, !14, !15}
!995 = distinct !{!995, !13, !15, !14}
!996 = distinct !{!996, !13}
!997 = distinct !{!997, !13, !21}
!998 = distinct !{!998, !13}
!999 = distinct !{!999, !13, !14, !15}
!1000 = distinct !{!1000, !13, !15, !14}
!1001 = distinct !{!1001, !13}
!1002 = distinct !{!1002, !13, !21}
!1003 = distinct !{!1003, !13}
!1004 = distinct !{!1004, !13, !14, !15}
!1005 = distinct !{!1005, !13, !15, !14}
!1006 = distinct !{!1006, !13}
!1007 = distinct !{!1007, !13, !21}
!1008 = distinct !{!1008, !13}
!1009 = distinct !{!1009, !13, !14, !15}
!1010 = distinct !{!1010, !13, !15, !14}
!1011 = distinct !{!1011, !13}
!1012 = distinct !{!1012, !13, !21}
!1013 = distinct !{!1013, !13}
!1014 = distinct !{!1014, !13, !14, !15}
!1015 = distinct !{!1015, !13, !15, !14}
!1016 = distinct !{!1016, !13}
!1017 = distinct !{!1017, !13, !21}
!1018 = distinct !{!1018, !13}
!1019 = distinct !{!1019, !13, !14, !15}
!1020 = distinct !{!1020, !13, !15, !14}
!1021 = distinct !{!1021, !13}
!1022 = distinct !{!1022, !13, !21}
!1023 = distinct !{!1023, !13}
!1024 = distinct !{!1024, !13, !14, !15}
!1025 = distinct !{!1025, !13, !15, !14}
!1026 = distinct !{!1026, !13}
!1027 = distinct !{!1027, !13, !21}
!1028 = distinct !{!1028, !13}
!1029 = distinct !{!1029, !13, !14, !15}
!1030 = distinct !{!1030, !13, !15, !14}
!1031 = distinct !{!1031, !13}
!1032 = distinct !{!1032, !13, !21}
!1033 = distinct !{!1033, !13}
!1034 = distinct !{!1034, !13, !14, !15}
!1035 = distinct !{!1035, !13, !15, !14}
!1036 = distinct !{!1036, !13}
!1037 = distinct !{!1037, !13, !21}
!1038 = distinct !{!1038, !13}
!1039 = distinct !{!1039, !13, !14, !15}
!1040 = distinct !{!1040, !13, !15, !14}
!1041 = distinct !{!1041, !13}
!1042 = distinct !{!1042, !13, !21}
!1043 = distinct !{!1043, !13}
!1044 = distinct !{!1044, !13, !14, !15}
!1045 = distinct !{!1045, !13, !15, !14}
!1046 = distinct !{!1046, !13}
!1047 = distinct !{!1047, !13, !21}
!1048 = distinct !{!1048, !13}
!1049 = distinct !{!1049, !13, !14, !15}
!1050 = distinct !{!1050, !13, !15, !14}
!1051 = distinct !{!1051, !13}
!1052 = distinct !{!1052, !13, !21}
!1053 = distinct !{!1053, !13}
!1054 = distinct !{!1054, !13, !14, !15}
!1055 = distinct !{!1055, !13, !15, !14}
!1056 = distinct !{!1056, !13}
!1057 = distinct !{!1057, !13, !21}
!1058 = distinct !{!1058, !13}
!1059 = distinct !{!1059, !13, !14, !15}
!1060 = distinct !{!1060, !13, !15, !14}
!1061 = distinct !{!1061, !13}
!1062 = distinct !{!1062, !13, !21}
!1063 = distinct !{!1063, !13}
!1064 = distinct !{!1064, !13, !14, !15}
!1065 = distinct !{!1065, !13, !15, !14}
!1066 = distinct !{!1066, !13}
!1067 = distinct !{!1067, !13, !21}
!1068 = distinct !{!1068, !13}
!1069 = distinct !{!1069, !13, !14, !15}
!1070 = distinct !{!1070, !13, !15, !14}
!1071 = distinct !{!1071, !13}
!1072 = distinct !{!1072, !13, !21}
!1073 = distinct !{!1073, !13}
!1074 = distinct !{!1074, !13, !14, !15}
!1075 = distinct !{!1075, !13, !15, !14}
!1076 = distinct !{!1076, !13}
!1077 = distinct !{!1077, !13, !21}
!1078 = distinct !{!1078, !13}
!1079 = distinct !{!1079, !13, !14, !15}
!1080 = distinct !{!1080, !13, !15, !14}
!1081 = distinct !{!1081, !13}
!1082 = distinct !{!1082, !13, !21}
!1083 = distinct !{!1083, !13}
!1084 = distinct !{!1084, !13, !14, !15}
!1085 = distinct !{!1085, !13, !15, !14}
!1086 = distinct !{!1086, !13}
!1087 = distinct !{!1087, !13, !21}
!1088 = distinct !{!1088, !13}
!1089 = distinct !{!1089, !13, !14, !15}
!1090 = distinct !{!1090, !13, !15, !14}
!1091 = distinct !{!1091, !13}
!1092 = distinct !{!1092, !13, !21}
!1093 = distinct !{!1093, !13}
!1094 = distinct !{!1094, !13, !14, !15}
!1095 = distinct !{!1095, !13, !15, !14}
!1096 = distinct !{!1096, !13}
!1097 = distinct !{!1097, !13, !21}
!1098 = distinct !{!1098, !13}
!1099 = distinct !{!1099, !13, !14, !15}
!1100 = distinct !{!1100, !13, !15, !14}
!1101 = distinct !{!1101, !13}
!1102 = distinct !{!1102, !13, !21}
!1103 = distinct !{!1103, !13}
!1104 = distinct !{!1104, !13, !14, !15}
!1105 = distinct !{!1105, !13, !15, !14}
!1106 = distinct !{!1106, !13}
!1107 = distinct !{!1107, !13, !21}
!1108 = distinct !{!1108, !13}
!1109 = distinct !{!1109, !13, !14, !15}
!1110 = distinct !{!1110, !13, !15, !14}
!1111 = distinct !{!1111, !13}
!1112 = distinct !{!1112, !13, !21}
!1113 = distinct !{!1113, !13}
!1114 = distinct !{!1114, !13, !14, !15}
!1115 = distinct !{!1115, !13, !15, !14}
!1116 = distinct !{!1116, !13}
!1117 = distinct !{!1117, !13, !21}
!1118 = distinct !{!1118, !13}
!1119 = distinct !{!1119, !13, !14, !15}
!1120 = distinct !{!1120, !13, !15, !14}
!1121 = distinct !{!1121, !13}
!1122 = distinct !{!1122, !13, !21}
!1123 = distinct !{!1123, !13}
!1124 = distinct !{!1124, !13, !14, !15}
!1125 = distinct !{!1125, !13, !15, !14}
!1126 = distinct !{!1126, !13}
!1127 = distinct !{!1127, !13, !21}
!1128 = distinct !{!1128, !13}
!1129 = distinct !{!1129, !13, !14, !15}
!1130 = distinct !{!1130, !13, !15, !14}
!1131 = distinct !{!1131, !13}
!1132 = distinct !{!1132, !13, !21}
!1133 = distinct !{!1133, !13}
!1134 = distinct !{!1134, !13, !14, !15}
!1135 = distinct !{!1135, !13, !15, !14}
!1136 = distinct !{!1136, !13}
!1137 = distinct !{!1137, !13, !21}
!1138 = distinct !{!1138, !13}
!1139 = distinct !{!1139, !13, !14, !15}
!1140 = distinct !{!1140, !13, !15, !14}
!1141 = distinct !{!1141, !13}
!1142 = distinct !{!1142, !13, !21}
!1143 = distinct !{!1143, !13}
!1144 = distinct !{!1144, !13, !14, !15}
!1145 = distinct !{!1145, !13, !15, !14}
!1146 = distinct !{!1146, !13}
!1147 = distinct !{!1147, !13, !21}
!1148 = distinct !{!1148, !13}
!1149 = distinct !{!1149, !13, !14, !15}
!1150 = distinct !{!1150, !13, !15, !14}
!1151 = distinct !{!1151, !13}
!1152 = distinct !{!1152, !13, !21}
!1153 = distinct !{!1153, !13}
!1154 = distinct !{!1154, !13, !14, !15}
!1155 = distinct !{!1155, !13, !15, !14}
!1156 = distinct !{!1156, !13}
!1157 = distinct !{!1157, !13, !21}
!1158 = distinct !{!1158, !13}
!1159 = distinct !{!1159, !13, !14, !15}
!1160 = distinct !{!1160, !13, !15, !14}
!1161 = distinct !{!1161, !13}
!1162 = distinct !{!1162, !13, !21}
!1163 = distinct !{!1163, !13}
!1164 = distinct !{!1164, !13, !14, !15}
!1165 = distinct !{!1165, !13, !15, !14}
!1166 = distinct !{!1166, !13}
!1167 = distinct !{!1167, !13, !21}
!1168 = distinct !{!1168, !13}
!1169 = distinct !{!1169, !13, !14, !15}
!1170 = distinct !{!1170, !13, !15, !14}
!1171 = distinct !{!1171, !13}
!1172 = distinct !{!1172, !13, !21}
!1173 = distinct !{!1173, !13}
!1174 = distinct !{!1174, !13, !14, !15}
!1175 = distinct !{!1175, !13, !15, !14}
!1176 = distinct !{!1176, !13}
!1177 = distinct !{!1177, !13, !21}
!1178 = distinct !{!1178, !13}
!1179 = distinct !{!1179, !13, !14, !15}
!1180 = distinct !{!1180, !13, !15, !14}
!1181 = distinct !{!1181, !13}
!1182 = distinct !{!1182, !13, !21}
!1183 = distinct !{!1183, !13}
!1184 = distinct !{!1184, !13, !14, !15}
!1185 = distinct !{!1185, !13, !15, !14}
!1186 = distinct !{!1186, !13}
!1187 = distinct !{!1187, !13, !21}
!1188 = distinct !{!1188, !13}
!1189 = distinct !{!1189, !13, !14, !15}
!1190 = distinct !{!1190, !13, !15, !14}
!1191 = distinct !{!1191, !13}
!1192 = distinct !{!1192, !13, !21}
!1193 = distinct !{!1193, !13}
!1194 = distinct !{!1194, !13, !14, !15}
!1195 = distinct !{!1195, !13, !15, !14}
!1196 = distinct !{!1196, !13}
!1197 = distinct !{!1197, !13, !21}
!1198 = distinct !{!1198, !13}
!1199 = distinct !{!1199, !13, !14, !15}
!1200 = distinct !{!1200, !13, !15, !14}
!1201 = distinct !{!1201, !13}
!1202 = distinct !{!1202, !13, !21}
!1203 = distinct !{!1203, !13}
!1204 = distinct !{!1204, !13, !14, !15}
!1205 = distinct !{!1205, !13, !15, !14}
!1206 = distinct !{!1206, !13}
!1207 = distinct !{!1207, !13, !21}
!1208 = distinct !{!1208, !13}
!1209 = distinct !{!1209, !13, !14, !15}
!1210 = distinct !{!1210, !13, !15, !14}
!1211 = distinct !{!1211, !13}
!1212 = distinct !{!1212, !13, !21}
!1213 = distinct !{!1213, !13}
!1214 = distinct !{!1214, !13, !14, !15}
!1215 = distinct !{!1215, !13, !15, !14}
!1216 = distinct !{!1216, !13}
!1217 = distinct !{!1217, !13, !21}
!1218 = distinct !{!1218, !13}
!1219 = distinct !{!1219, !13, !14, !15}
!1220 = distinct !{!1220, !13, !15, !14}
!1221 = distinct !{!1221, !13}
!1222 = distinct !{!1222, !13, !21}
!1223 = distinct !{!1223, !13}
!1224 = distinct !{!1224, !13, !14, !15}
!1225 = distinct !{!1225, !13, !15, !14}
!1226 = distinct !{!1226, !13}
!1227 = distinct !{!1227, !13, !21}
!1228 = distinct !{!1228, !13}
!1229 = distinct !{!1229, !13, !14, !15}
!1230 = distinct !{!1230, !13, !15, !14}
!1231 = distinct !{!1231, !13}
!1232 = distinct !{!1232, !13, !21}
!1233 = distinct !{!1233, !13}
!1234 = distinct !{!1234, !13, !14, !15}
!1235 = distinct !{!1235, !13, !15, !14}
!1236 = distinct !{!1236, !13}
!1237 = distinct !{!1237, !13, !21}
!1238 = distinct !{!1238, !13}
!1239 = distinct !{!1239, !13, !14, !15}
!1240 = distinct !{!1240, !13, !15, !14}
!1241 = distinct !{!1241, !13}
!1242 = distinct !{!1242, !13, !21}
!1243 = distinct !{!1243, !13}
!1244 = distinct !{!1244, !13, !14, !15}
!1245 = distinct !{!1245, !13, !15, !14}
!1246 = distinct !{!1246, !13}
!1247 = distinct !{!1247, !13, !21}
!1248 = distinct !{!1248, !13}
!1249 = distinct !{!1249, !13, !14, !15}
!1250 = distinct !{!1250, !13, !15, !14}
!1251 = distinct !{!1251, !13}
!1252 = distinct !{!1252, !13, !21}
!1253 = distinct !{!1253, !13}
!1254 = distinct !{!1254, !13, !14, !15}
!1255 = distinct !{!1255, !13, !15, !14}
!1256 = distinct !{!1256, !13}
!1257 = distinct !{!1257, !13, !21}
!1258 = distinct !{!1258, !13}
!1259 = distinct !{!1259, !13, !14, !15}
!1260 = distinct !{!1260, !13, !15, !14}
!1261 = distinct !{!1261, !13}
!1262 = distinct !{!1262, !13, !21}
!1263 = distinct !{!1263, !13}
!1264 = distinct !{!1264, !13, !14, !15}
!1265 = distinct !{!1265, !13, !15, !14}
!1266 = distinct !{!1266, !13}
!1267 = distinct !{!1267, !13, !21}
!1268 = distinct !{!1268, !13}
!1269 = distinct !{!1269, !13, !14, !15}
!1270 = distinct !{!1270, !13, !15, !14}
!1271 = distinct !{!1271, !13}
!1272 = distinct !{!1272, !13, !21}
!1273 = distinct !{!1273, !13}
!1274 = distinct !{!1274, !13, !14, !15}
!1275 = distinct !{!1275, !13, !15, !14}
!1276 = distinct !{!1276, !13}
!1277 = distinct !{!1277, !13, !21}
!1278 = distinct !{!1278, !13}
!1279 = distinct !{!1279, !13, !14, !15}
!1280 = distinct !{!1280, !13, !15, !14}
!1281 = distinct !{!1281, !13}
!1282 = distinct !{!1282, !13, !21}
!1283 = distinct !{!1283, !13}
!1284 = distinct !{!1284, !13, !14, !15}
!1285 = distinct !{!1285, !13, !15, !14}
!1286 = distinct !{!1286, !13}
!1287 = distinct !{!1287, !13, !21}
!1288 = distinct !{!1288, !13}
!1289 = distinct !{!1289, !13, !14, !15}
!1290 = distinct !{!1290, !13, !15, !14}
!1291 = distinct !{!1291, !13}
!1292 = distinct !{!1292, !13, !21}
!1293 = distinct !{!1293, !13}
!1294 = distinct !{!1294, !13, !14, !15}
!1295 = distinct !{!1295, !13, !15, !14}
!1296 = distinct !{!1296, !13}
!1297 = distinct !{!1297, !13, !21}
!1298 = distinct !{!1298, !13}
!1299 = distinct !{!1299, !13, !14, !15}
!1300 = distinct !{!1300, !13, !15, !14}
!1301 = distinct !{!1301, !13}
!1302 = distinct !{!1302, !13, !21}
!1303 = distinct !{!1303, !13}
!1304 = distinct !{!1304, !13, !14, !15}
!1305 = distinct !{!1305, !13, !15, !14}
!1306 = distinct !{!1306, !13}
!1307 = distinct !{!1307, !13, !21}
!1308 = distinct !{!1308, !13}
!1309 = distinct !{!1309, !13, !14, !15}
!1310 = distinct !{!1310, !13, !15, !14}
!1311 = distinct !{!1311, !13}
!1312 = distinct !{!1312, !13, !21}
!1313 = distinct !{!1313, !13}
!1314 = distinct !{!1314, !13, !14, !15}
!1315 = distinct !{!1315, !13, !15, !14}
!1316 = distinct !{!1316, !13}
!1317 = distinct !{!1317, !13, !21}
!1318 = distinct !{!1318, !13}
!1319 = distinct !{!1319, !13, !14, !15}
!1320 = distinct !{!1320, !13, !15, !14}
!1321 = distinct !{!1321, !13}
!1322 = distinct !{!1322, !13, !21}
!1323 = distinct !{!1323, !13}
!1324 = distinct !{!1324, !13, !14, !15}
!1325 = distinct !{!1325, !13, !15, !14}
!1326 = distinct !{!1326, !13}
!1327 = distinct !{!1327, !13, !21}
!1328 = distinct !{!1328, !13}
!1329 = distinct !{!1329, !13, !14, !15}
!1330 = distinct !{!1330, !13, !15, !14}
!1331 = distinct !{!1331, !13}
!1332 = distinct !{!1332, !13, !21}
!1333 = distinct !{!1333, !13}
!1334 = distinct !{!1334, !13, !14, !15}
!1335 = distinct !{!1335, !13, !15, !14}
!1336 = distinct !{!1336, !13}
!1337 = distinct !{!1337, !13, !21}
!1338 = distinct !{!1338, !13}
!1339 = distinct !{!1339, !13, !14, !15}
!1340 = distinct !{!1340, !13, !15, !14}
!1341 = distinct !{!1341, !13}
!1342 = distinct !{!1342, !13, !21}
!1343 = distinct !{!1343, !13}
!1344 = distinct !{!1344, !13, !14, !15}
!1345 = distinct !{!1345, !13, !15, !14}
!1346 = distinct !{!1346, !13}
!1347 = distinct !{!1347, !13, !21}
!1348 = distinct !{!1348, !13}
!1349 = distinct !{!1349, !13, !14, !15}
!1350 = distinct !{!1350, !13, !15, !14}
!1351 = distinct !{!1351, !13}
!1352 = distinct !{!1352, !13, !21}
!1353 = distinct !{!1353, !13}
!1354 = distinct !{!1354, !13, !14, !15}
!1355 = distinct !{!1355, !13, !15, !14}
!1356 = distinct !{!1356, !13}
!1357 = distinct !{!1357, !13, !21}
!1358 = distinct !{!1358, !13}
!1359 = distinct !{!1359, !13, !14, !15}
!1360 = distinct !{!1360, !13, !15, !14}
!1361 = distinct !{!1361, !13}
!1362 = distinct !{!1362, !13, !21}
!1363 = distinct !{!1363, !13}
!1364 = distinct !{!1364, !13, !14, !15}
!1365 = distinct !{!1365, !13, !15, !14}
!1366 = distinct !{!1366, !13}
!1367 = distinct !{!1367, !13, !21}
!1368 = distinct !{!1368, !13}
!1369 = distinct !{!1369, !13, !14, !15}
!1370 = distinct !{!1370, !13, !15, !14}
!1371 = distinct !{!1371, !13}
!1372 = distinct !{!1372, !13, !21}
!1373 = distinct !{!1373, !13}
!1374 = distinct !{!1374, !13, !14, !15}
!1375 = distinct !{!1375, !13, !15, !14}
!1376 = distinct !{!1376, !13}
!1377 = distinct !{!1377, !13, !21}
!1378 = distinct !{!1378, !13}
!1379 = distinct !{!1379, !13, !14, !15}
!1380 = distinct !{!1380, !13, !15, !14}
!1381 = distinct !{!1381, !13}
!1382 = distinct !{!1382, !13, !21}
!1383 = distinct !{!1383, !13}
!1384 = distinct !{!1384, !13, !14, !15}
!1385 = distinct !{!1385, !13, !15, !14}
!1386 = distinct !{!1386, !13}
!1387 = distinct !{!1387, !13, !21}
!1388 = distinct !{!1388, !13}
!1389 = distinct !{!1389, !13, !14, !15}
!1390 = distinct !{!1390, !13, !15, !14}
!1391 = distinct !{!1391, !13}
!1392 = distinct !{!1392, !13, !21}
!1393 = distinct !{!1393, !13}
!1394 = distinct !{!1394, !13, !14, !15}
!1395 = distinct !{!1395, !13, !15, !14}
!1396 = distinct !{!1396, !13}
!1397 = distinct !{!1397, !13, !21}
!1398 = distinct !{!1398, !13}
!1399 = distinct !{!1399, !13, !14, !15}
!1400 = distinct !{!1400, !13, !15, !14}
!1401 = distinct !{!1401, !13}
!1402 = distinct !{!1402, !13, !21}
!1403 = distinct !{!1403, !13}
!1404 = distinct !{!1404, !13, !14, !15}
!1405 = distinct !{!1405, !13, !15, !14}
!1406 = distinct !{!1406, !13}
!1407 = distinct !{!1407, !13, !21}
!1408 = distinct !{!1408, !13}
!1409 = distinct !{!1409, !13, !14, !15}
!1410 = distinct !{!1410, !13, !15, !14}
!1411 = distinct !{!1411, !13}
!1412 = distinct !{!1412, !13, !21}
!1413 = distinct !{!1413, !13}
!1414 = distinct !{!1414, !13, !14, !15}
!1415 = distinct !{!1415, !13, !15, !14}
!1416 = distinct !{!1416, !13}
!1417 = distinct !{!1417, !13, !21}
!1418 = distinct !{!1418, !13}
!1419 = distinct !{!1419, !13, !14, !15}
!1420 = distinct !{!1420, !13, !15, !14}
!1421 = distinct !{!1421, !13}
!1422 = distinct !{!1422, !13, !21}
!1423 = distinct !{!1423, !13}
!1424 = distinct !{!1424, !13, !14, !15}
!1425 = distinct !{!1425, !13, !15, !14}
!1426 = distinct !{!1426, !13}
!1427 = distinct !{!1427, !13, !21}
!1428 = distinct !{!1428, !13}
!1429 = distinct !{!1429, !13, !14, !15}
!1430 = distinct !{!1430, !13, !15, !14}
!1431 = distinct !{!1431, !13}
!1432 = distinct !{!1432, !13, !21}
!1433 = distinct !{!1433, !13}
!1434 = distinct !{!1434, !13, !14, !15}
!1435 = distinct !{!1435, !13, !15, !14}
!1436 = distinct !{!1436, !13}
!1437 = distinct !{!1437, !13, !21}
!1438 = distinct !{!1438, !13}
!1439 = distinct !{!1439, !13, !14, !15}
!1440 = distinct !{!1440, !13, !15, !14}
!1441 = distinct !{!1441, !13}
!1442 = distinct !{!1442, !13, !21}
!1443 = distinct !{!1443, !13}
!1444 = distinct !{!1444, !13, !14, !15}
!1445 = distinct !{!1445, !13, !15, !14}
!1446 = distinct !{!1446, !13}
!1447 = distinct !{!1447, !13, !21}
!1448 = distinct !{!1448, !13}
!1449 = distinct !{!1449, !13, !14, !15}
!1450 = distinct !{!1450, !13, !15, !14}
!1451 = distinct !{!1451, !13}
!1452 = distinct !{!1452, !13, !21}
!1453 = distinct !{!1453, !13}
!1454 = distinct !{!1454, !13, !14, !15}
!1455 = distinct !{!1455, !13, !15, !14}
!1456 = distinct !{!1456, !13}
!1457 = distinct !{!1457, !13, !21}
!1458 = distinct !{!1458, !13}
!1459 = distinct !{!1459, !13, !14, !15}
!1460 = distinct !{!1460, !13, !15, !14}
!1461 = distinct !{!1461, !13}
!1462 = distinct !{!1462, !13, !21}
!1463 = distinct !{!1463, !13}
!1464 = distinct !{!1464, !13, !14, !15}
!1465 = distinct !{!1465, !13, !15, !14}
!1466 = distinct !{!1466, !13}
!1467 = distinct !{!1467, !13, !21}
!1468 = distinct !{!1468, !13}
!1469 = distinct !{!1469, !13, !14, !15}
!1470 = distinct !{!1470, !13, !15, !14}
!1471 = distinct !{!1471, !13}
!1472 = distinct !{!1472, !13, !21}
!1473 = distinct !{!1473, !13}
!1474 = distinct !{!1474, !13, !14, !15}
!1475 = distinct !{!1475, !13, !15, !14}
!1476 = distinct !{!1476, !13}
!1477 = distinct !{!1477, !13, !21}
!1478 = distinct !{!1478, !13}
!1479 = distinct !{!1479, !13, !14, !15}
!1480 = distinct !{!1480, !13, !15, !14}
!1481 = distinct !{!1481, !13}
!1482 = distinct !{!1482, !13, !21}
!1483 = distinct !{!1483, !13}
