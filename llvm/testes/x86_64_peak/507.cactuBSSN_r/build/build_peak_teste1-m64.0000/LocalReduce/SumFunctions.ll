; ModuleID = 'LocalReduce/SumFunctions.c'
source_filename = "LocalReduce/SumFunctions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c"LocalReduce/SumFunctions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5390 [
    i32 101, label %22
    i32 102, label %615
    i32 103, label %1212
    i32 104, label %1805
    i32 105, label %2405
    i32 106, label %3002
    i32 107, label %3601
    i32 108, label %4196
    i32 109, label %4795
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %5390

30:                                               ; preds = %22
  switch i32 %1, label %613 [
    i32 1, label %31
    i32 0, label %325
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %5390

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %189

45:                                               ; preds = %31
  br i1 %35, label %46, label %5390

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %187
  %55 = phi i32 [ 0, %46 ], [ %139, %187 ]
  %56 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %57, label %126

57:                                               ; preds = %54, %116
  %58 = phi i32 [ %125, %116 ], [ 0, %54 ]
  %59 = phi i64 [ %67, %116 ], [ %51, %54 ]
  %60 = phi i64 [ %124, %116 ], [ %50, %54 ]
  %61 = phi i32 [ %122, %116 ], [ %56, %54 ]
  %62 = sub i32 %49, %58
  %63 = tail call i32 @llvm.smin.i32(i32 %62, i32 0)
  %64 = sub i32 %62, %63
  %65 = zext i32 %64 to i64
  %66 = add nuw nsw i64 %65, 1
  %67 = add nsw i64 %59, -1
  %68 = icmp ult i32 %64, 31
  br i1 %68, label %104, label %69

69:                                               ; preds = %57
  %70 = and i64 %66, 8589934560
  %71 = sub i64 %60, %70
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi i64 [ 0, %69 ], [ %96, %72 ]
  %74 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %92, %72 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %93, %72 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %94, %72 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %95, %72 ]
  %78 = sub i64 %60, %73
  %79 = getelementptr inbounds i32, ptr %9, i64 %78
  %80 = getelementptr inbounds i32, ptr %79, i64 -7
  %81 = load <8 x i32>, ptr %80, align 4, !tbaa !5
  %82 = shufflevector <8 x i32> %81, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %83 = getelementptr inbounds i32, ptr %79, i64 -15
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %79, i64 -23
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %79, i64 -31
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = mul <8 x i32> %82, %74
  %93 = mul <8 x i32> %85, %75
  %94 = mul <8 x i32> %88, %76
  %95 = mul <8 x i32> %91, %77
  %96 = add nuw i64 %73, 32
  %97 = icmp eq i64 %96, %70
  br i1 %97, label %98, label %72, !llvm.loop !12

98:                                               ; preds = %72
  %99 = mul <8 x i32> %93, %92
  %100 = mul <8 x i32> %94, %99
  %101 = mul <8 x i32> %95, %100
  %102 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %101)
  %103 = icmp eq i64 %66, %70
  br i1 %103, label %116, label %104

104:                                              ; preds = %57, %98
  %105 = phi i64 [ %60, %57 ], [ %71, %98 ]
  %106 = phi i32 [ 1, %57 ], [ %102, %98 ]
  br label %107

107:                                              ; preds = %104, %107
  %108 = phi i64 [ %113, %107 ], [ %105, %104 ]
  %109 = phi i32 [ %112, %107 ], [ %106, %104 ]
  %110 = getelementptr inbounds i32, ptr %9, i64 %108
  %111 = load i32, ptr %110, align 4, !tbaa !5
  %112 = mul nsw i32 %111, %109
  %113 = add nsw i64 %108, -1
  %114 = trunc i64 %108 to i32
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %107, label %116, !llvm.loop !16

116:                                              ; preds = %107, %98
  %117 = phi i32 [ %102, %98 ], [ %112, %107 ]
  %118 = and i64 %67, 4294967295
  %119 = getelementptr inbounds i32, ptr %6, i64 %118
  %120 = load i32, ptr %119, align 4, !tbaa !5
  %121 = mul nsw i32 %120, %117
  %122 = add nsw i32 %121, %61
  %123 = icmp sgt i64 %59, 2
  %124 = add nsw i64 %60, -1
  %125 = add i32 %58, 1
  br i1 %123, label %57, label %126, !llvm.loop !17

126:                                              ; preds = %116, %54
  %127 = phi i32 [ %56, %54 ], [ %122, %116 ]
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds double, ptr %2, i64 %128
  %130 = load double, ptr %129, align 8, !tbaa !18
  %131 = getelementptr inbounds i8, ptr %24, i64 %128
  %132 = load i8, ptr %131, align 1, !tbaa !11
  %133 = load i8, ptr %26, align 1, !tbaa !11
  %134 = uitofp i8 %133 to double
  %135 = uitofp i8 %132 to double
  %136 = fmul fast double %130, %135
  %137 = fadd fast double %136, %134
  %138 = fptoui double %137 to i8
  store i8 %138, ptr %26, align 1, !tbaa !11
  %139 = add nuw nsw i32 %55, 1
  br i1 %48, label %140, label %187

140:                                              ; preds = %126
  %141 = load i32, ptr %4, align 4, !tbaa !5
  %142 = load i32, ptr %12, align 4, !tbaa !5
  %143 = add nsw i32 %142, -1
  %144 = icmp slt i32 %141, %143
  br i1 %144, label %164, label %145

145:                                              ; preds = %140
  %146 = icmp eq i32 %141, %143
  br i1 %146, label %147, label %180

147:                                              ; preds = %145
  store i32 0, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %148, ptr %6, align 4, !tbaa !5
  br i1 %53, label %187, label %149

149:                                              ; preds = %147, %174
  %150 = phi i64 [ %178, %174 ], [ 1, %147 ]
  %151 = getelementptr inbounds i32, ptr %4, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !5
  %153 = getelementptr inbounds i32, ptr %12, i64 %150
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %152, %155
  br i1 %156, label %157, label %172

157:                                              ; preds = %149
  br i1 %144, label %164, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds i32, ptr %7, i64 %150
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = getelementptr inbounds i32, ptr %6, i64 %150
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = add nsw i32 %162, %160
  store i32 %163, ptr %161, align 4, !tbaa !5
  br label %182

164:                                              ; preds = %140, %157
  %165 = phi i32 [ %152, %157 ], [ %141, %140 ]
  %166 = phi ptr [ %151, %157 ], [ %4, %140 ]
  %167 = phi i64 [ %150, %157 ], [ 0, %140 ]
  %168 = add nsw i32 %165, 1
  store i32 %168, ptr %166, align 4, !tbaa !5
  %169 = getelementptr inbounds i32, ptr %7, i64 %167
  %170 = load i32, ptr %169, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %6, i64 %167
  br label %182

172:                                              ; preds = %149
  %173 = icmp eq i32 %152, %155
  br i1 %173, label %174, label %180

174:                                              ; preds = %172
  store i32 0, ptr %151, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %8, i64 %150
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %150
  store i32 %176, ptr %177, align 4, !tbaa !5
  %178 = add nuw nsw i64 %150, 1
  %179 = icmp eq i64 %178, %51
  br i1 %179, label %187, label %149, !llvm.loop !20

180:                                              ; preds = %145, %172
  %181 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

182:                                              ; preds = %158, %164
  %183 = phi ptr [ %171, %164 ], [ %151, %158 ]
  %184 = phi i32 [ %170, %164 ], [ 1, %158 ]
  %185 = load i32, ptr %183, align 4, !tbaa !5
  %186 = add nsw i32 %185, %184
  store i32 %186, ptr %183, align 4, !tbaa !5
  br label %187

187:                                              ; preds = %174, %182, %147, %126
  %188 = icmp eq i32 %139, %5
  br i1 %188, label %5390, label %54, !llvm.loop !22

189:                                              ; preds = %37, %323
  %190 = phi i32 [ 0, %37 ], [ %272, %323 ]
  %191 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %192, label %261

192:                                              ; preds = %189, %251
  %193 = phi i32 [ %260, %251 ], [ 0, %189 ]
  %194 = phi i64 [ %202, %251 ], [ %42, %189 ]
  %195 = phi i64 [ %259, %251 ], [ %41, %189 ]
  %196 = phi i32 [ %257, %251 ], [ %191, %189 ]
  %197 = sub i32 %40, %193
  %198 = tail call i32 @llvm.smin.i32(i32 %197, i32 0)
  %199 = sub i32 %197, %198
  %200 = zext i32 %199 to i64
  %201 = add nuw nsw i64 %200, 1
  %202 = add nsw i64 %194, -1
  %203 = icmp ult i32 %199, 31
  br i1 %203, label %239, label %204

204:                                              ; preds = %192
  %205 = and i64 %201, 8589934560
  %206 = sub i64 %195, %205
  br label %207

207:                                              ; preds = %207, %204
  %208 = phi i64 [ 0, %204 ], [ %231, %207 ]
  %209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %227, %207 ]
  %210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %228, %207 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %229, %207 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %230, %207 ]
  %213 = sub i64 %195, %208
  %214 = getelementptr inbounds i32, ptr %11, i64 %213
  %215 = getelementptr inbounds i32, ptr %214, i64 -7
  %216 = load <8 x i32>, ptr %215, align 4, !tbaa !5
  %217 = shufflevector <8 x i32> %216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %218 = getelementptr inbounds i32, ptr %214, i64 -15
  %219 = load <8 x i32>, ptr %218, align 4, !tbaa !5
  %220 = shufflevector <8 x i32> %219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %221 = getelementptr inbounds i32, ptr %214, i64 -23
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %214, i64 -31
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = mul <8 x i32> %217, %209
  %228 = mul <8 x i32> %220, %210
  %229 = mul <8 x i32> %223, %211
  %230 = mul <8 x i32> %226, %212
  %231 = add nuw i64 %208, 32
  %232 = icmp eq i64 %231, %205
  br i1 %232, label %233, label %207, !llvm.loop !23

233:                                              ; preds = %207
  %234 = mul <8 x i32> %228, %227
  %235 = mul <8 x i32> %229, %234
  %236 = mul <8 x i32> %230, %235
  %237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %236)
  %238 = icmp eq i64 %201, %205
  br i1 %238, label %251, label %239

239:                                              ; preds = %192, %233
  %240 = phi i64 [ %195, %192 ], [ %206, %233 ]
  %241 = phi i32 [ 1, %192 ], [ %237, %233 ]
  br label %242

242:                                              ; preds = %239, %242
  %243 = phi i64 [ %248, %242 ], [ %240, %239 ]
  %244 = phi i32 [ %247, %242 ], [ %241, %239 ]
  %245 = getelementptr inbounds i32, ptr %11, i64 %243
  %246 = load i32, ptr %245, align 4, !tbaa !5
  %247 = mul nsw i32 %246, %244
  %248 = add nsw i64 %243, -1
  %249 = trunc i64 %243 to i32
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %242, label %251, !llvm.loop !24

251:                                              ; preds = %242, %233
  %252 = phi i32 [ %237, %233 ], [ %247, %242 ]
  %253 = and i64 %202, 4294967295
  %254 = getelementptr inbounds i32, ptr %6, i64 %253
  %255 = load i32, ptr %254, align 4, !tbaa !5
  %256 = mul nsw i32 %255, %252
  %257 = add nsw i32 %256, %196
  %258 = icmp sgt i64 %194, 2
  %259 = add nsw i64 %195, -1
  %260 = add i32 %193, 1
  br i1 %258, label %192, label %261, !llvm.loop !25

261:                                              ; preds = %251, %189
  %262 = phi i32 [ %191, %189 ], [ %257, %251 ]
  %263 = icmp slt i32 %262, %5
  br i1 %263, label %266, label %264

264:                                              ; preds = %261
  %265 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

266:                                              ; preds = %261
  %267 = sext i32 %262 to i64
  %268 = getelementptr inbounds i8, ptr %24, i64 %267
  %269 = load i8, ptr %268, align 1, !tbaa !11
  %270 = load i8, ptr %26, align 1, !tbaa !11
  %271 = add i8 %270, %269
  store i8 %271, ptr %26, align 1, !tbaa !11
  %272 = add nuw nsw i32 %190, 1
  br i1 %39, label %273, label %323

273:                                              ; preds = %266
  %274 = load i32, ptr %4, align 4, !tbaa !5
  %275 = load i32, ptr %12, align 4, !tbaa !5
  %276 = add nsw i32 %275, -1
  %277 = icmp slt i32 %274, %276
  br i1 %277, label %300, label %278

278:                                              ; preds = %273
  %279 = icmp eq i32 %274, %276
  br i1 %279, label %280, label %316

280:                                              ; preds = %278
  store i32 0, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %281, ptr %6, align 4, !tbaa !5
  br i1 %44, label %323, label %282

282:                                              ; preds = %280, %310
  %283 = phi i64 [ %314, %310 ], [ 1, %280 ]
  %284 = getelementptr inbounds i32, ptr %4, i64 %283
  %285 = load i32, ptr %284, align 4, !tbaa !5
  %286 = getelementptr inbounds i32, ptr %12, i64 %283
  %287 = load i32, ptr %286, align 4, !tbaa !5
  %288 = add nsw i32 %287, -1
  %289 = icmp slt i32 %285, %288
  br i1 %289, label %290, label %308

290:                                              ; preds = %282
  br i1 %277, label %300, label %291

291:                                              ; preds = %290
  %292 = shl i64 %283, 32
  %293 = add i64 %292, -4294967296
  %294 = ashr exact i64 %293, 32
  %295 = getelementptr inbounds i32, ptr %7, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = getelementptr inbounds i32, ptr %6, i64 %283
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = add nsw i32 %298, %296
  store i32 %299, ptr %297, align 4, !tbaa !5
  br label %318

300:                                              ; preds = %273, %290
  %301 = phi i32 [ %285, %290 ], [ %274, %273 ]
  %302 = phi ptr [ %284, %290 ], [ %4, %273 ]
  %303 = phi i64 [ %283, %290 ], [ 0, %273 ]
  %304 = add nsw i32 %301, 1
  store i32 %304, ptr %302, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %7, i64 %303
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = getelementptr inbounds i32, ptr %6, i64 %303
  br label %318

308:                                              ; preds = %282
  %309 = icmp eq i32 %285, %288
  br i1 %309, label %310, label %316

310:                                              ; preds = %308
  store i32 0, ptr %284, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %8, i64 %283
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %283
  store i32 %312, ptr %313, align 4, !tbaa !5
  %314 = add nuw nsw i64 %283, 1
  %315 = icmp eq i64 %314, %42
  br i1 %315, label %323, label %282, !llvm.loop !26

316:                                              ; preds = %278, %308
  %317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

318:                                              ; preds = %291, %300
  %319 = phi ptr [ %307, %300 ], [ %284, %291 ]
  %320 = phi i32 [ %306, %300 ], [ 1, %291 ]
  %321 = load i32, ptr %319, align 4, !tbaa !5
  %322 = add nsw i32 %321, %320
  store i32 %322, ptr %319, align 4, !tbaa !5
  br label %323

323:                                              ; preds = %310, %318, %280, %266
  %324 = icmp eq i32 %272, %5
  br i1 %324, label %5390, label %189, !llvm.loop !27

325:                                              ; preds = %30
  %326 = getelementptr inbounds i32, ptr %3, i64 %19
  %327 = load i32, ptr %326, align 4, !tbaa !5
  %328 = icmp eq i32 %327, 0
  %329 = icmp sgt i32 %5, 0
  br i1 %328, label %339, label %330

330:                                              ; preds = %325
  br i1 %329, label %331, label %5390

331:                                              ; preds = %330
  %332 = icmp sgt i32 %13, 1
  %333 = icmp sgt i32 %13, 0
  %334 = add i32 %13, -2
  %335 = zext i32 %334 to i64
  %336 = zext i32 %13 to i64
  %337 = add nuw i32 %5, 1
  %338 = icmp eq i32 %13, 1
  br label %477

339:                                              ; preds = %325
  br i1 %329, label %340, label %5390

340:                                              ; preds = %339
  %341 = icmp sgt i32 %13, 1
  %342 = icmp sgt i32 %13, 0
  %343 = add i32 %13, -2
  %344 = zext i32 %343 to i64
  %345 = zext i32 %13 to i64
  %346 = add nuw i32 %5, 1
  %347 = icmp eq i32 %13, 1
  br label %348

348:                                              ; preds = %340, %475
  %349 = phi i32 [ 0, %340 ], [ %427, %475 ]
  %350 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %341, label %351, label %420

351:                                              ; preds = %348, %410
  %352 = phi i32 [ %419, %410 ], [ 0, %348 ]
  %353 = phi i64 [ %361, %410 ], [ %345, %348 ]
  %354 = phi i64 [ %418, %410 ], [ %344, %348 ]
  %355 = phi i32 [ %416, %410 ], [ %350, %348 ]
  %356 = sub i32 %343, %352
  %357 = tail call i32 @llvm.smin.i32(i32 %356, i32 0)
  %358 = sub i32 %356, %357
  %359 = zext i32 %358 to i64
  %360 = add nuw nsw i64 %359, 1
  %361 = add nsw i64 %353, -1
  %362 = icmp ult i32 %358, 31
  br i1 %362, label %398, label %363

363:                                              ; preds = %351
  %364 = and i64 %360, 8589934560
  %365 = sub i64 %354, %364
  br label %366

366:                                              ; preds = %366, %363
  %367 = phi i64 [ 0, %363 ], [ %390, %366 ]
  %368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %386, %366 ]
  %369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %387, %366 ]
  %370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %388, %366 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %389, %366 ]
  %372 = sub i64 %354, %367
  %373 = getelementptr inbounds i32, ptr %9, i64 %372
  %374 = getelementptr inbounds i32, ptr %373, i64 -7
  %375 = load <8 x i32>, ptr %374, align 4, !tbaa !5
  %376 = shufflevector <8 x i32> %375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %377 = getelementptr inbounds i32, ptr %373, i64 -15
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %373, i64 -23
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %373, i64 -31
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = mul <8 x i32> %376, %368
  %387 = mul <8 x i32> %379, %369
  %388 = mul <8 x i32> %382, %370
  %389 = mul <8 x i32> %385, %371
  %390 = add nuw i64 %367, 32
  %391 = icmp eq i64 %390, %364
  br i1 %391, label %392, label %366, !llvm.loop !28

392:                                              ; preds = %366
  %393 = mul <8 x i32> %387, %386
  %394 = mul <8 x i32> %388, %393
  %395 = mul <8 x i32> %389, %394
  %396 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %395)
  %397 = icmp eq i64 %360, %364
  br i1 %397, label %410, label %398

398:                                              ; preds = %351, %392
  %399 = phi i64 [ %354, %351 ], [ %365, %392 ]
  %400 = phi i32 [ 1, %351 ], [ %396, %392 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i64 [ %407, %401 ], [ %399, %398 ]
  %403 = phi i32 [ %406, %401 ], [ %400, %398 ]
  %404 = getelementptr inbounds i32, ptr %9, i64 %402
  %405 = load i32, ptr %404, align 4, !tbaa !5
  %406 = mul nsw i32 %405, %403
  %407 = add nsw i64 %402, -1
  %408 = trunc i64 %402 to i32
  %409 = icmp sgt i32 %408, 0
  br i1 %409, label %401, label %410, !llvm.loop !29

410:                                              ; preds = %401, %392
  %411 = phi i32 [ %396, %392 ], [ %406, %401 ]
  %412 = and i64 %361, 4294967295
  %413 = getelementptr inbounds i32, ptr %6, i64 %412
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %411
  %416 = add nsw i32 %415, %355
  %417 = icmp sgt i64 %353, 2
  %418 = add nsw i64 %354, -1
  %419 = add i32 %352, 1
  br i1 %417, label %351, label %420, !llvm.loop !30

420:                                              ; preds = %410, %348
  %421 = phi i32 [ %350, %348 ], [ %416, %410 ]
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i8, ptr %24, i64 %422
  %424 = load i8, ptr %423, align 1, !tbaa !11
  %425 = load i8, ptr %26, align 1, !tbaa !11
  %426 = add i8 %425, %424
  store i8 %426, ptr %26, align 1, !tbaa !11
  %427 = add nuw nsw i32 %349, 1
  br i1 %342, label %428, label %475

428:                                              ; preds = %420
  %429 = load i32, ptr %4, align 4, !tbaa !5
  %430 = load i32, ptr %12, align 4, !tbaa !5
  %431 = add nsw i32 %430, -1
  %432 = icmp slt i32 %429, %431
  br i1 %432, label %452, label %433

433:                                              ; preds = %428
  %434 = icmp eq i32 %429, %431
  br i1 %434, label %435, label %468

435:                                              ; preds = %433
  store i32 0, ptr %4, align 4, !tbaa !5
  %436 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %436, ptr %6, align 4, !tbaa !5
  br i1 %347, label %475, label %437

437:                                              ; preds = %435, %462
  %438 = phi i64 [ %466, %462 ], [ 1, %435 ]
  %439 = getelementptr inbounds i32, ptr %4, i64 %438
  %440 = load i32, ptr %439, align 4, !tbaa !5
  %441 = getelementptr inbounds i32, ptr %12, i64 %438
  %442 = load i32, ptr %441, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %440, %443
  br i1 %444, label %445, label %460

445:                                              ; preds = %437
  br i1 %432, label %452, label %446

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %7, i64 %438
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %6, i64 %438
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, %448
  store i32 %451, ptr %449, align 4, !tbaa !5
  br label %470

452:                                              ; preds = %428, %445
  %453 = phi i32 [ %440, %445 ], [ %429, %428 ]
  %454 = phi ptr [ %439, %445 ], [ %4, %428 ]
  %455 = phi i64 [ %438, %445 ], [ 0, %428 ]
  %456 = add nsw i32 %453, 1
  store i32 %456, ptr %454, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %7, i64 %455
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = getelementptr inbounds i32, ptr %6, i64 %455
  br label %470

460:                                              ; preds = %437
  %461 = icmp eq i32 %440, %443
  br i1 %461, label %462, label %468

462:                                              ; preds = %460
  store i32 0, ptr %439, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %8, i64 %438
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %6, i64 %438
  store i32 %464, ptr %465, align 4, !tbaa !5
  %466 = add nuw nsw i64 %438, 1
  %467 = icmp eq i64 %466, %345
  br i1 %467, label %475, label %437, !llvm.loop !31

468:                                              ; preds = %433, %460
  %469 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

470:                                              ; preds = %446, %452
  %471 = phi ptr [ %459, %452 ], [ %439, %446 ]
  %472 = phi i32 [ %458, %452 ], [ 1, %446 ]
  %473 = load i32, ptr %471, align 4, !tbaa !5
  %474 = add nsw i32 %473, %472
  store i32 %474, ptr %471, align 4, !tbaa !5
  br label %475

475:                                              ; preds = %462, %470, %435, %420
  %476 = icmp eq i32 %427, %5
  br i1 %476, label %5390, label %348, !llvm.loop !32

477:                                              ; preds = %331, %611
  %478 = phi i32 [ 0, %331 ], [ %560, %611 ]
  %479 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %332, label %480, label %549

480:                                              ; preds = %477, %539
  %481 = phi i32 [ %548, %539 ], [ 0, %477 ]
  %482 = phi i64 [ %490, %539 ], [ %336, %477 ]
  %483 = phi i64 [ %547, %539 ], [ %335, %477 ]
  %484 = phi i32 [ %545, %539 ], [ %479, %477 ]
  %485 = sub i32 %334, %481
  %486 = tail call i32 @llvm.smin.i32(i32 %485, i32 0)
  %487 = sub i32 %485, %486
  %488 = zext i32 %487 to i64
  %489 = add nuw nsw i64 %488, 1
  %490 = add nsw i64 %482, -1
  %491 = icmp ult i32 %487, 31
  br i1 %491, label %527, label %492

492:                                              ; preds = %480
  %493 = and i64 %489, 8589934560
  %494 = sub i64 %483, %493
  br label %495

495:                                              ; preds = %495, %492
  %496 = phi i64 [ 0, %492 ], [ %519, %495 ]
  %497 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %515, %495 ]
  %498 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %516, %495 ]
  %499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %517, %495 ]
  %500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %518, %495 ]
  %501 = sub i64 %483, %496
  %502 = getelementptr inbounds i32, ptr %11, i64 %501
  %503 = getelementptr inbounds i32, ptr %502, i64 -7
  %504 = load <8 x i32>, ptr %503, align 4, !tbaa !5
  %505 = shufflevector <8 x i32> %504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %506 = getelementptr inbounds i32, ptr %502, i64 -15
  %507 = load <8 x i32>, ptr %506, align 4, !tbaa !5
  %508 = shufflevector <8 x i32> %507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %509 = getelementptr inbounds i32, ptr %502, i64 -23
  %510 = load <8 x i32>, ptr %509, align 4, !tbaa !5
  %511 = shufflevector <8 x i32> %510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %512 = getelementptr inbounds i32, ptr %502, i64 -31
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = mul <8 x i32> %505, %497
  %516 = mul <8 x i32> %508, %498
  %517 = mul <8 x i32> %511, %499
  %518 = mul <8 x i32> %514, %500
  %519 = add nuw i64 %496, 32
  %520 = icmp eq i64 %519, %493
  br i1 %520, label %521, label %495, !llvm.loop !33

521:                                              ; preds = %495
  %522 = mul <8 x i32> %516, %515
  %523 = mul <8 x i32> %517, %522
  %524 = mul <8 x i32> %518, %523
  %525 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %524)
  %526 = icmp eq i64 %489, %493
  br i1 %526, label %539, label %527

527:                                              ; preds = %480, %521
  %528 = phi i64 [ %483, %480 ], [ %494, %521 ]
  %529 = phi i32 [ 1, %480 ], [ %525, %521 ]
  br label %530

530:                                              ; preds = %527, %530
  %531 = phi i64 [ %536, %530 ], [ %528, %527 ]
  %532 = phi i32 [ %535, %530 ], [ %529, %527 ]
  %533 = getelementptr inbounds i32, ptr %11, i64 %531
  %534 = load i32, ptr %533, align 4, !tbaa !5
  %535 = mul nsw i32 %534, %532
  %536 = add nsw i64 %531, -1
  %537 = trunc i64 %531 to i32
  %538 = icmp sgt i32 %537, 0
  br i1 %538, label %530, label %539, !llvm.loop !34

539:                                              ; preds = %530, %521
  %540 = phi i32 [ %525, %521 ], [ %535, %530 ]
  %541 = and i64 %490, 4294967295
  %542 = getelementptr inbounds i32, ptr %6, i64 %541
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %540
  %545 = add nsw i32 %544, %484
  %546 = icmp sgt i64 %482, 2
  %547 = add nsw i64 %483, -1
  %548 = add i32 %481, 1
  br i1 %546, label %480, label %549, !llvm.loop !35

549:                                              ; preds = %539, %477
  %550 = phi i32 [ %479, %477 ], [ %545, %539 ]
  %551 = icmp slt i32 %550, %5
  br i1 %551, label %554, label %552

552:                                              ; preds = %549
  %553 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

554:                                              ; preds = %549
  %555 = sext i32 %550 to i64
  %556 = getelementptr inbounds i8, ptr %24, i64 %555
  %557 = load i8, ptr %556, align 1, !tbaa !11
  %558 = load i8, ptr %26, align 1, !tbaa !11
  %559 = add i8 %558, %557
  store i8 %559, ptr %26, align 1, !tbaa !11
  %560 = add nuw nsw i32 %478, 1
  br i1 %333, label %561, label %611

561:                                              ; preds = %554
  %562 = load i32, ptr %4, align 4, !tbaa !5
  %563 = load i32, ptr %12, align 4, !tbaa !5
  %564 = add nsw i32 %563, -1
  %565 = icmp slt i32 %562, %564
  br i1 %565, label %588, label %566

566:                                              ; preds = %561
  %567 = icmp eq i32 %562, %564
  br i1 %567, label %568, label %604

568:                                              ; preds = %566
  store i32 0, ptr %4, align 4, !tbaa !5
  %569 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %569, ptr %6, align 4, !tbaa !5
  br i1 %338, label %611, label %570

570:                                              ; preds = %568, %598
  %571 = phi i64 [ %602, %598 ], [ 1, %568 ]
  %572 = getelementptr inbounds i32, ptr %4, i64 %571
  %573 = load i32, ptr %572, align 4, !tbaa !5
  %574 = getelementptr inbounds i32, ptr %12, i64 %571
  %575 = load i32, ptr %574, align 4, !tbaa !5
  %576 = add nsw i32 %575, -1
  %577 = icmp slt i32 %573, %576
  br i1 %577, label %578, label %596

578:                                              ; preds = %570
  br i1 %565, label %588, label %579

579:                                              ; preds = %578
  %580 = shl i64 %571, 32
  %581 = add i64 %580, -4294967296
  %582 = ashr exact i64 %581, 32
  %583 = getelementptr inbounds i32, ptr %7, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = getelementptr inbounds i32, ptr %6, i64 %571
  %586 = load i32, ptr %585, align 4, !tbaa !5
  %587 = add nsw i32 %586, %584
  store i32 %587, ptr %585, align 4, !tbaa !5
  br label %606

588:                                              ; preds = %561, %578
  %589 = phi i32 [ %573, %578 ], [ %562, %561 ]
  %590 = phi ptr [ %572, %578 ], [ %4, %561 ]
  %591 = phi i64 [ %571, %578 ], [ 0, %561 ]
  %592 = add nsw i32 %589, 1
  store i32 %592, ptr %590, align 4, !tbaa !5
  %593 = getelementptr inbounds i32, ptr %7, i64 %591
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %591
  br label %606

596:                                              ; preds = %570
  %597 = icmp eq i32 %573, %576
  br i1 %597, label %598, label %604

598:                                              ; preds = %596
  store i32 0, ptr %572, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %8, i64 %571
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = getelementptr inbounds i32, ptr %6, i64 %571
  store i32 %600, ptr %601, align 4, !tbaa !5
  %602 = add nuw nsw i64 %571, 1
  %603 = icmp eq i64 %602, %336
  br i1 %603, label %611, label %570, !llvm.loop !36

604:                                              ; preds = %566, %596
  %605 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

606:                                              ; preds = %579, %588
  %607 = phi ptr [ %595, %588 ], [ %572, %579 ]
  %608 = phi i32 [ %594, %588 ], [ 1, %579 ]
  %609 = load i32, ptr %607, align 4, !tbaa !5
  %610 = add nsw i32 %609, %608
  store i32 %610, ptr %607, align 4, !tbaa !5
  br label %611

611:                                              ; preds = %598, %606, %568, %554
  %612 = icmp eq i32 %560, %5
  br i1 %612, label %5390, label %477, !llvm.loop !37

613:                                              ; preds = %30
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 53, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

615:                                              ; preds = %18
  %616 = getelementptr inbounds ptr, ptr %14, i64 %19
  %617 = load ptr, ptr %616, align 8, !tbaa !9
  %618 = getelementptr inbounds ptr, ptr %16, i64 %19
  %619 = load ptr, ptr %618, align 8, !tbaa !9
  store i32 0, ptr %619, align 4, !tbaa !5
  %620 = icmp eq i32 %13, 0
  br i1 %620, label %621, label %624

621:                                              ; preds = %615
  %622 = load i8, ptr %617, align 1, !tbaa !11
  %623 = zext i8 %622 to i32
  store i32 %623, ptr %619, align 4, !tbaa !5
  br label %5390

624:                                              ; preds = %615
  switch i32 %1, label %1210 [
    i32 1, label %625
    i32 0, label %920
  ]

625:                                              ; preds = %624
  %626 = getelementptr inbounds i32, ptr %3, i64 %19
  %627 = load i32, ptr %626, align 4, !tbaa !5
  %628 = icmp eq i32 %627, 0
  %629 = icmp sgt i32 %5, 0
  br i1 %628, label %639, label %630

630:                                              ; preds = %625
  br i1 %629, label %631, label %5390

631:                                              ; preds = %630
  %632 = icmp sgt i32 %13, 1
  %633 = icmp sgt i32 %13, 0
  %634 = add i32 %13, -2
  %635 = zext i32 %634 to i64
  %636 = zext i32 %13 to i64
  %637 = add nuw i32 %5, 1
  %638 = icmp eq i32 %13, 1
  br label %783

639:                                              ; preds = %625
  br i1 %629, label %640, label %5390

640:                                              ; preds = %639
  %641 = icmp sgt i32 %13, 1
  %642 = icmp sgt i32 %13, 0
  %643 = add i32 %13, -2
  %644 = zext i32 %643 to i64
  %645 = zext i32 %13 to i64
  %646 = add nuw i32 %5, 1
  %647 = icmp eq i32 %13, 1
  br label %648

648:                                              ; preds = %640, %781
  %649 = phi i32 [ 0, %640 ], [ %733, %781 ]
  %650 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %641, label %651, label %720

651:                                              ; preds = %648, %710
  %652 = phi i32 [ %719, %710 ], [ 0, %648 ]
  %653 = phi i64 [ %661, %710 ], [ %645, %648 ]
  %654 = phi i64 [ %718, %710 ], [ %644, %648 ]
  %655 = phi i32 [ %716, %710 ], [ %650, %648 ]
  %656 = sub i32 %643, %652
  %657 = tail call i32 @llvm.smin.i32(i32 %656, i32 0)
  %658 = sub i32 %656, %657
  %659 = zext i32 %658 to i64
  %660 = add nuw nsw i64 %659, 1
  %661 = add nsw i64 %653, -1
  %662 = icmp ult i32 %658, 31
  br i1 %662, label %698, label %663

663:                                              ; preds = %651
  %664 = and i64 %660, 8589934560
  %665 = sub i64 %654, %664
  br label %666

666:                                              ; preds = %666, %663
  %667 = phi i64 [ 0, %663 ], [ %690, %666 ]
  %668 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %686, %666 ]
  %669 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %687, %666 ]
  %670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %688, %666 ]
  %671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %689, %666 ]
  %672 = sub i64 %654, %667
  %673 = getelementptr inbounds i32, ptr %9, i64 %672
  %674 = getelementptr inbounds i32, ptr %673, i64 -7
  %675 = load <8 x i32>, ptr %674, align 4, !tbaa !5
  %676 = shufflevector <8 x i32> %675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %677 = getelementptr inbounds i32, ptr %673, i64 -15
  %678 = load <8 x i32>, ptr %677, align 4, !tbaa !5
  %679 = shufflevector <8 x i32> %678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %680 = getelementptr inbounds i32, ptr %673, i64 -23
  %681 = load <8 x i32>, ptr %680, align 4, !tbaa !5
  %682 = shufflevector <8 x i32> %681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %683 = getelementptr inbounds i32, ptr %673, i64 -31
  %684 = load <8 x i32>, ptr %683, align 4, !tbaa !5
  %685 = shufflevector <8 x i32> %684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %686 = mul <8 x i32> %676, %668
  %687 = mul <8 x i32> %679, %669
  %688 = mul <8 x i32> %682, %670
  %689 = mul <8 x i32> %685, %671
  %690 = add nuw i64 %667, 32
  %691 = icmp eq i64 %690, %664
  br i1 %691, label %692, label %666, !llvm.loop !38

692:                                              ; preds = %666
  %693 = mul <8 x i32> %687, %686
  %694 = mul <8 x i32> %688, %693
  %695 = mul <8 x i32> %689, %694
  %696 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %695)
  %697 = icmp eq i64 %660, %664
  br i1 %697, label %710, label %698

698:                                              ; preds = %651, %692
  %699 = phi i64 [ %654, %651 ], [ %665, %692 ]
  %700 = phi i32 [ 1, %651 ], [ %696, %692 ]
  br label %701

701:                                              ; preds = %698, %701
  %702 = phi i64 [ %707, %701 ], [ %699, %698 ]
  %703 = phi i32 [ %706, %701 ], [ %700, %698 ]
  %704 = getelementptr inbounds i32, ptr %9, i64 %702
  %705 = load i32, ptr %704, align 4, !tbaa !5
  %706 = mul nsw i32 %705, %703
  %707 = add nsw i64 %702, -1
  %708 = trunc i64 %702 to i32
  %709 = icmp sgt i32 %708, 0
  br i1 %709, label %701, label %710, !llvm.loop !39

710:                                              ; preds = %701, %692
  %711 = phi i32 [ %696, %692 ], [ %706, %701 ]
  %712 = and i64 %661, 4294967295
  %713 = getelementptr inbounds i32, ptr %6, i64 %712
  %714 = load i32, ptr %713, align 4, !tbaa !5
  %715 = mul nsw i32 %714, %711
  %716 = add nsw i32 %715, %655
  %717 = icmp sgt i64 %653, 2
  %718 = add nsw i64 %654, -1
  %719 = add i32 %652, 1
  br i1 %717, label %651, label %720, !llvm.loop !40

720:                                              ; preds = %710, %648
  %721 = phi i32 [ %650, %648 ], [ %716, %710 ]
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds double, ptr %2, i64 %722
  %724 = load double, ptr %723, align 8, !tbaa !18
  %725 = getelementptr inbounds i8, ptr %617, i64 %722
  %726 = load i8, ptr %725, align 1, !tbaa !11
  %727 = load i32, ptr %619, align 4, !tbaa !5
  %728 = sitofp i32 %727 to double
  %729 = uitofp i8 %726 to double
  %730 = fmul fast double %724, %729
  %731 = fadd fast double %730, %728
  %732 = fptosi double %731 to i32
  store i32 %732, ptr %619, align 4, !tbaa !5
  %733 = add nuw nsw i32 %649, 1
  br i1 %642, label %734, label %781

734:                                              ; preds = %720
  %735 = load i32, ptr %4, align 4, !tbaa !5
  %736 = load i32, ptr %12, align 4, !tbaa !5
  %737 = add nsw i32 %736, -1
  %738 = icmp slt i32 %735, %737
  br i1 %738, label %758, label %739

739:                                              ; preds = %734
  %740 = icmp eq i32 %735, %737
  br i1 %740, label %741, label %774

741:                                              ; preds = %739
  store i32 0, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %742, ptr %6, align 4, !tbaa !5
  br i1 %647, label %781, label %743

743:                                              ; preds = %741, %768
  %744 = phi i64 [ %772, %768 ], [ 1, %741 ]
  %745 = getelementptr inbounds i32, ptr %4, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !5
  %747 = getelementptr inbounds i32, ptr %12, i64 %744
  %748 = load i32, ptr %747, align 4, !tbaa !5
  %749 = add nsw i32 %748, -1
  %750 = icmp slt i32 %746, %749
  br i1 %750, label %751, label %766

751:                                              ; preds = %743
  br i1 %738, label %758, label %752

752:                                              ; preds = %751
  %753 = getelementptr inbounds i32, ptr %7, i64 %744
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = getelementptr inbounds i32, ptr %6, i64 %744
  %756 = load i32, ptr %755, align 4, !tbaa !5
  %757 = add nsw i32 %756, %754
  store i32 %757, ptr %755, align 4, !tbaa !5
  br label %776

758:                                              ; preds = %734, %751
  %759 = phi i32 [ %746, %751 ], [ %735, %734 ]
  %760 = phi ptr [ %745, %751 ], [ %4, %734 ]
  %761 = phi i64 [ %744, %751 ], [ 0, %734 ]
  %762 = add nsw i32 %759, 1
  store i32 %762, ptr %760, align 4, !tbaa !5
  %763 = getelementptr inbounds i32, ptr %7, i64 %761
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = getelementptr inbounds i32, ptr %6, i64 %761
  br label %776

766:                                              ; preds = %743
  %767 = icmp eq i32 %746, %749
  br i1 %767, label %768, label %774

768:                                              ; preds = %766
  store i32 0, ptr %745, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %8, i64 %744
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %744
  store i32 %770, ptr %771, align 4, !tbaa !5
  %772 = add nuw nsw i64 %744, 1
  %773 = icmp eq i64 %772, %645
  br i1 %773, label %781, label %743, !llvm.loop !41

774:                                              ; preds = %739, %766
  %775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

776:                                              ; preds = %752, %758
  %777 = phi ptr [ %765, %758 ], [ %745, %752 ]
  %778 = phi i32 [ %764, %758 ], [ 1, %752 ]
  %779 = load i32, ptr %777, align 4, !tbaa !5
  %780 = add nsw i32 %779, %778
  store i32 %780, ptr %777, align 4, !tbaa !5
  br label %781

781:                                              ; preds = %768, %776, %741, %720
  %782 = icmp eq i32 %733, %5
  br i1 %782, label %5390, label %648, !llvm.loop !42

783:                                              ; preds = %631, %918
  %784 = phi i32 [ 0, %631 ], [ %867, %918 ]
  %785 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %632, label %786, label %855

786:                                              ; preds = %783, %845
  %787 = phi i32 [ %854, %845 ], [ 0, %783 ]
  %788 = phi i64 [ %796, %845 ], [ %636, %783 ]
  %789 = phi i64 [ %853, %845 ], [ %635, %783 ]
  %790 = phi i32 [ %851, %845 ], [ %785, %783 ]
  %791 = sub i32 %634, %787
  %792 = tail call i32 @llvm.smin.i32(i32 %791, i32 0)
  %793 = sub i32 %791, %792
  %794 = zext i32 %793 to i64
  %795 = add nuw nsw i64 %794, 1
  %796 = add nsw i64 %788, -1
  %797 = icmp ult i32 %793, 31
  br i1 %797, label %833, label %798

798:                                              ; preds = %786
  %799 = and i64 %795, 8589934560
  %800 = sub i64 %789, %799
  br label %801

801:                                              ; preds = %801, %798
  %802 = phi i64 [ 0, %798 ], [ %825, %801 ]
  %803 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %821, %801 ]
  %804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %822, %801 ]
  %805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %823, %801 ]
  %806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %824, %801 ]
  %807 = sub i64 %789, %802
  %808 = getelementptr inbounds i32, ptr %11, i64 %807
  %809 = getelementptr inbounds i32, ptr %808, i64 -7
  %810 = load <8 x i32>, ptr %809, align 4, !tbaa !5
  %811 = shufflevector <8 x i32> %810, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %812 = getelementptr inbounds i32, ptr %808, i64 -15
  %813 = load <8 x i32>, ptr %812, align 4, !tbaa !5
  %814 = shufflevector <8 x i32> %813, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %815 = getelementptr inbounds i32, ptr %808, i64 -23
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %808, i64 -31
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = mul <8 x i32> %811, %803
  %822 = mul <8 x i32> %814, %804
  %823 = mul <8 x i32> %817, %805
  %824 = mul <8 x i32> %820, %806
  %825 = add nuw i64 %802, 32
  %826 = icmp eq i64 %825, %799
  br i1 %826, label %827, label %801, !llvm.loop !43

827:                                              ; preds = %801
  %828 = mul <8 x i32> %822, %821
  %829 = mul <8 x i32> %823, %828
  %830 = mul <8 x i32> %824, %829
  %831 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %830)
  %832 = icmp eq i64 %795, %799
  br i1 %832, label %845, label %833

833:                                              ; preds = %786, %827
  %834 = phi i64 [ %789, %786 ], [ %800, %827 ]
  %835 = phi i32 [ 1, %786 ], [ %831, %827 ]
  br label %836

836:                                              ; preds = %833, %836
  %837 = phi i64 [ %842, %836 ], [ %834, %833 ]
  %838 = phi i32 [ %841, %836 ], [ %835, %833 ]
  %839 = getelementptr inbounds i32, ptr %11, i64 %837
  %840 = load i32, ptr %839, align 4, !tbaa !5
  %841 = mul nsw i32 %840, %838
  %842 = add nsw i64 %837, -1
  %843 = trunc i64 %837 to i32
  %844 = icmp sgt i32 %843, 0
  br i1 %844, label %836, label %845, !llvm.loop !44

845:                                              ; preds = %836, %827
  %846 = phi i32 [ %831, %827 ], [ %841, %836 ]
  %847 = and i64 %796, 4294967295
  %848 = getelementptr inbounds i32, ptr %6, i64 %847
  %849 = load i32, ptr %848, align 4, !tbaa !5
  %850 = mul nsw i32 %849, %846
  %851 = add nsw i32 %850, %790
  %852 = icmp sgt i64 %788, 2
  %853 = add nsw i64 %789, -1
  %854 = add i32 %787, 1
  br i1 %852, label %786, label %855, !llvm.loop !45

855:                                              ; preds = %845, %783
  %856 = phi i32 [ %785, %783 ], [ %851, %845 ]
  %857 = icmp slt i32 %856, %5
  br i1 %857, label %860, label %858

858:                                              ; preds = %855
  %859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

860:                                              ; preds = %855
  %861 = sext i32 %856 to i64
  %862 = getelementptr inbounds i8, ptr %617, i64 %861
  %863 = load i8, ptr %862, align 1, !tbaa !11
  %864 = load i32, ptr %619, align 4, !tbaa !5
  %865 = zext i8 %863 to i32
  %866 = add i32 %864, %865
  store i32 %866, ptr %619, align 4, !tbaa !5
  %867 = add nuw nsw i32 %784, 1
  br i1 %633, label %868, label %918

868:                                              ; preds = %860
  %869 = load i32, ptr %4, align 4, !tbaa !5
  %870 = load i32, ptr %12, align 4, !tbaa !5
  %871 = add nsw i32 %870, -1
  %872 = icmp slt i32 %869, %871
  br i1 %872, label %895, label %873

873:                                              ; preds = %868
  %874 = icmp eq i32 %869, %871
  br i1 %874, label %875, label %911

875:                                              ; preds = %873
  store i32 0, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %876, ptr %6, align 4, !tbaa !5
  br i1 %638, label %918, label %877

877:                                              ; preds = %875, %905
  %878 = phi i64 [ %909, %905 ], [ 1, %875 ]
  %879 = getelementptr inbounds i32, ptr %4, i64 %878
  %880 = load i32, ptr %879, align 4, !tbaa !5
  %881 = getelementptr inbounds i32, ptr %12, i64 %878
  %882 = load i32, ptr %881, align 4, !tbaa !5
  %883 = add nsw i32 %882, -1
  %884 = icmp slt i32 %880, %883
  br i1 %884, label %885, label %903

885:                                              ; preds = %877
  br i1 %872, label %895, label %886

886:                                              ; preds = %885
  %887 = shl i64 %878, 32
  %888 = add i64 %887, -4294967296
  %889 = ashr exact i64 %888, 32
  %890 = getelementptr inbounds i32, ptr %7, i64 %889
  %891 = load i32, ptr %890, align 4, !tbaa !5
  %892 = getelementptr inbounds i32, ptr %6, i64 %878
  %893 = load i32, ptr %892, align 4, !tbaa !5
  %894 = add nsw i32 %893, %891
  store i32 %894, ptr %892, align 4, !tbaa !5
  br label %913

895:                                              ; preds = %868, %885
  %896 = phi i32 [ %880, %885 ], [ %869, %868 ]
  %897 = phi ptr [ %879, %885 ], [ %4, %868 ]
  %898 = phi i64 [ %878, %885 ], [ 0, %868 ]
  %899 = add nsw i32 %896, 1
  store i32 %899, ptr %897, align 4, !tbaa !5
  %900 = getelementptr inbounds i32, ptr %7, i64 %898
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = getelementptr inbounds i32, ptr %6, i64 %898
  br label %913

903:                                              ; preds = %877
  %904 = icmp eq i32 %880, %883
  br i1 %904, label %905, label %911

905:                                              ; preds = %903
  store i32 0, ptr %879, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %8, i64 %878
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %878
  store i32 %907, ptr %908, align 4, !tbaa !5
  %909 = add nuw nsw i64 %878, 1
  %910 = icmp eq i64 %909, %636
  br i1 %910, label %918, label %877, !llvm.loop !46

911:                                              ; preds = %873, %903
  %912 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

913:                                              ; preds = %886, %895
  %914 = phi ptr [ %902, %895 ], [ %879, %886 ]
  %915 = phi i32 [ %901, %895 ], [ 1, %886 ]
  %916 = load i32, ptr %914, align 4, !tbaa !5
  %917 = add nsw i32 %916, %915
  store i32 %917, ptr %914, align 4, !tbaa !5
  br label %918

918:                                              ; preds = %905, %913, %875, %860
  %919 = icmp eq i32 %867, %5
  br i1 %919, label %5390, label %783, !llvm.loop !47

920:                                              ; preds = %624
  %921 = getelementptr inbounds i32, ptr %3, i64 %19
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = icmp eq i32 %922, 0
  %924 = icmp sgt i32 %5, 0
  br i1 %923, label %934, label %925

925:                                              ; preds = %920
  br i1 %924, label %926, label %5390

926:                                              ; preds = %925
  %927 = icmp sgt i32 %13, 1
  %928 = icmp sgt i32 %13, 0
  %929 = add i32 %13, -2
  %930 = zext i32 %929 to i64
  %931 = zext i32 %13 to i64
  %932 = add nuw i32 %5, 1
  %933 = icmp eq i32 %13, 1
  br label %1073

934:                                              ; preds = %920
  br i1 %924, label %935, label %5390

935:                                              ; preds = %934
  %936 = icmp sgt i32 %13, 1
  %937 = icmp sgt i32 %13, 0
  %938 = add i32 %13, -2
  %939 = zext i32 %938 to i64
  %940 = zext i32 %13 to i64
  %941 = add nuw i32 %5, 1
  %942 = icmp eq i32 %13, 1
  br label %943

943:                                              ; preds = %935, %1071
  %944 = phi i32 [ 0, %935 ], [ %1023, %1071 ]
  %945 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %936, label %946, label %1015

946:                                              ; preds = %943, %1005
  %947 = phi i32 [ %1014, %1005 ], [ 0, %943 ]
  %948 = phi i64 [ %956, %1005 ], [ %940, %943 ]
  %949 = phi i64 [ %1013, %1005 ], [ %939, %943 ]
  %950 = phi i32 [ %1011, %1005 ], [ %945, %943 ]
  %951 = sub i32 %938, %947
  %952 = tail call i32 @llvm.smin.i32(i32 %951, i32 0)
  %953 = sub i32 %951, %952
  %954 = zext i32 %953 to i64
  %955 = add nuw nsw i64 %954, 1
  %956 = add nsw i64 %948, -1
  %957 = icmp ult i32 %953, 31
  br i1 %957, label %993, label %958

958:                                              ; preds = %946
  %959 = and i64 %955, 8589934560
  %960 = sub i64 %949, %959
  br label %961

961:                                              ; preds = %961, %958
  %962 = phi i64 [ 0, %958 ], [ %985, %961 ]
  %963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %981, %961 ]
  %964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %982, %961 ]
  %965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %983, %961 ]
  %966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %984, %961 ]
  %967 = sub i64 %949, %962
  %968 = getelementptr inbounds i32, ptr %9, i64 %967
  %969 = getelementptr inbounds i32, ptr %968, i64 -7
  %970 = load <8 x i32>, ptr %969, align 4, !tbaa !5
  %971 = shufflevector <8 x i32> %970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %972 = getelementptr inbounds i32, ptr %968, i64 -15
  %973 = load <8 x i32>, ptr %972, align 4, !tbaa !5
  %974 = shufflevector <8 x i32> %973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %975 = getelementptr inbounds i32, ptr %968, i64 -23
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %968, i64 -31
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = mul <8 x i32> %971, %963
  %982 = mul <8 x i32> %974, %964
  %983 = mul <8 x i32> %977, %965
  %984 = mul <8 x i32> %980, %966
  %985 = add nuw i64 %962, 32
  %986 = icmp eq i64 %985, %959
  br i1 %986, label %987, label %961, !llvm.loop !48

987:                                              ; preds = %961
  %988 = mul <8 x i32> %982, %981
  %989 = mul <8 x i32> %983, %988
  %990 = mul <8 x i32> %984, %989
  %991 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %990)
  %992 = icmp eq i64 %955, %959
  br i1 %992, label %1005, label %993

993:                                              ; preds = %946, %987
  %994 = phi i64 [ %949, %946 ], [ %960, %987 ]
  %995 = phi i32 [ 1, %946 ], [ %991, %987 ]
  br label %996

996:                                              ; preds = %993, %996
  %997 = phi i64 [ %1002, %996 ], [ %994, %993 ]
  %998 = phi i32 [ %1001, %996 ], [ %995, %993 ]
  %999 = getelementptr inbounds i32, ptr %9, i64 %997
  %1000 = load i32, ptr %999, align 4, !tbaa !5
  %1001 = mul nsw i32 %1000, %998
  %1002 = add nsw i64 %997, -1
  %1003 = trunc i64 %997 to i32
  %1004 = icmp sgt i32 %1003, 0
  br i1 %1004, label %996, label %1005, !llvm.loop !49

1005:                                             ; preds = %996, %987
  %1006 = phi i32 [ %991, %987 ], [ %1001, %996 ]
  %1007 = and i64 %956, 4294967295
  %1008 = getelementptr inbounds i32, ptr %6, i64 %1007
  %1009 = load i32, ptr %1008, align 4, !tbaa !5
  %1010 = mul nsw i32 %1009, %1006
  %1011 = add nsw i32 %1010, %950
  %1012 = icmp sgt i64 %948, 2
  %1013 = add nsw i64 %949, -1
  %1014 = add i32 %947, 1
  br i1 %1012, label %946, label %1015, !llvm.loop !50

1015:                                             ; preds = %1005, %943
  %1016 = phi i32 [ %945, %943 ], [ %1011, %1005 ]
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i8, ptr %617, i64 %1017
  %1019 = load i8, ptr %1018, align 1, !tbaa !11
  %1020 = zext i8 %1019 to i32
  %1021 = load i32, ptr %619, align 4, !tbaa !5
  %1022 = add nsw i32 %1021, %1020
  store i32 %1022, ptr %619, align 4, !tbaa !5
  %1023 = add nuw nsw i32 %944, 1
  br i1 %937, label %1024, label %1071

1024:                                             ; preds = %1015
  %1025 = load i32, ptr %4, align 4, !tbaa !5
  %1026 = load i32, ptr %12, align 4, !tbaa !5
  %1027 = add nsw i32 %1026, -1
  %1028 = icmp slt i32 %1025, %1027
  br i1 %1028, label %1048, label %1029

1029:                                             ; preds = %1024
  %1030 = icmp eq i32 %1025, %1027
  br i1 %1030, label %1031, label %1064

1031:                                             ; preds = %1029
  store i32 0, ptr %4, align 4, !tbaa !5
  %1032 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1032, ptr %6, align 4, !tbaa !5
  br i1 %942, label %1071, label %1033

1033:                                             ; preds = %1031, %1058
  %1034 = phi i64 [ %1062, %1058 ], [ 1, %1031 ]
  %1035 = getelementptr inbounds i32, ptr %4, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !5
  %1037 = getelementptr inbounds i32, ptr %12, i64 %1034
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = add nsw i32 %1038, -1
  %1040 = icmp slt i32 %1036, %1039
  br i1 %1040, label %1041, label %1056

1041:                                             ; preds = %1033
  br i1 %1028, label %1048, label %1042

1042:                                             ; preds = %1041
  %1043 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = getelementptr inbounds i32, ptr %6, i64 %1034
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = add nsw i32 %1046, %1044
  store i32 %1047, ptr %1045, align 4, !tbaa !5
  br label %1066

1048:                                             ; preds = %1024, %1041
  %1049 = phi i32 [ %1036, %1041 ], [ %1025, %1024 ]
  %1050 = phi ptr [ %1035, %1041 ], [ %4, %1024 ]
  %1051 = phi i64 [ %1034, %1041 ], [ 0, %1024 ]
  %1052 = add nsw i32 %1049, 1
  store i32 %1052, ptr %1050, align 4, !tbaa !5
  %1053 = getelementptr inbounds i32, ptr %7, i64 %1051
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %6, i64 %1051
  br label %1066

1056:                                             ; preds = %1033
  %1057 = icmp eq i32 %1036, %1039
  br i1 %1057, label %1058, label %1064

1058:                                             ; preds = %1056
  store i32 0, ptr %1035, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %8, i64 %1034
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %6, i64 %1034
  store i32 %1060, ptr %1061, align 4, !tbaa !5
  %1062 = add nuw nsw i64 %1034, 1
  %1063 = icmp eq i64 %1062, %940
  br i1 %1063, label %1071, label %1033, !llvm.loop !51

1064:                                             ; preds = %1029, %1056
  %1065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1066:                                             ; preds = %1042, %1048
  %1067 = phi ptr [ %1055, %1048 ], [ %1035, %1042 ]
  %1068 = phi i32 [ %1054, %1048 ], [ 1, %1042 ]
  %1069 = load i32, ptr %1067, align 4, !tbaa !5
  %1070 = add nsw i32 %1069, %1068
  store i32 %1070, ptr %1067, align 4, !tbaa !5
  br label %1071

1071:                                             ; preds = %1058, %1066, %1031, %1015
  %1072 = icmp eq i32 %1023, %5
  br i1 %1072, label %5390, label %943, !llvm.loop !52

1073:                                             ; preds = %926, %1208
  %1074 = phi i32 [ 0, %926 ], [ %1157, %1208 ]
  %1075 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %927, label %1076, label %1145

1076:                                             ; preds = %1073, %1135
  %1077 = phi i32 [ %1144, %1135 ], [ 0, %1073 ]
  %1078 = phi i64 [ %1086, %1135 ], [ %931, %1073 ]
  %1079 = phi i64 [ %1143, %1135 ], [ %930, %1073 ]
  %1080 = phi i32 [ %1141, %1135 ], [ %1075, %1073 ]
  %1081 = sub i32 %929, %1077
  %1082 = tail call i32 @llvm.smin.i32(i32 %1081, i32 0)
  %1083 = sub i32 %1081, %1082
  %1084 = zext i32 %1083 to i64
  %1085 = add nuw nsw i64 %1084, 1
  %1086 = add nsw i64 %1078, -1
  %1087 = icmp ult i32 %1083, 31
  br i1 %1087, label %1123, label %1088

1088:                                             ; preds = %1076
  %1089 = and i64 %1085, 8589934560
  %1090 = sub i64 %1079, %1089
  br label %1091

1091:                                             ; preds = %1091, %1088
  %1092 = phi i64 [ 0, %1088 ], [ %1115, %1091 ]
  %1093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1111, %1091 ]
  %1094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1112, %1091 ]
  %1095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1113, %1091 ]
  %1096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1114, %1091 ]
  %1097 = sub i64 %1079, %1092
  %1098 = getelementptr inbounds i32, ptr %11, i64 %1097
  %1099 = getelementptr inbounds i32, ptr %1098, i64 -7
  %1100 = load <8 x i32>, ptr %1099, align 4, !tbaa !5
  %1101 = shufflevector <8 x i32> %1100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1102 = getelementptr inbounds i32, ptr %1098, i64 -15
  %1103 = load <8 x i32>, ptr %1102, align 4, !tbaa !5
  %1104 = shufflevector <8 x i32> %1103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1105 = getelementptr inbounds i32, ptr %1098, i64 -23
  %1106 = load <8 x i32>, ptr %1105, align 4, !tbaa !5
  %1107 = shufflevector <8 x i32> %1106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1108 = getelementptr inbounds i32, ptr %1098, i64 -31
  %1109 = load <8 x i32>, ptr %1108, align 4, !tbaa !5
  %1110 = shufflevector <8 x i32> %1109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1111 = mul <8 x i32> %1101, %1093
  %1112 = mul <8 x i32> %1104, %1094
  %1113 = mul <8 x i32> %1107, %1095
  %1114 = mul <8 x i32> %1110, %1096
  %1115 = add nuw i64 %1092, 32
  %1116 = icmp eq i64 %1115, %1089
  br i1 %1116, label %1117, label %1091, !llvm.loop !53

1117:                                             ; preds = %1091
  %1118 = mul <8 x i32> %1112, %1111
  %1119 = mul <8 x i32> %1113, %1118
  %1120 = mul <8 x i32> %1114, %1119
  %1121 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1120)
  %1122 = icmp eq i64 %1085, %1089
  br i1 %1122, label %1135, label %1123

1123:                                             ; preds = %1076, %1117
  %1124 = phi i64 [ %1079, %1076 ], [ %1090, %1117 ]
  %1125 = phi i32 [ 1, %1076 ], [ %1121, %1117 ]
  br label %1126

1126:                                             ; preds = %1123, %1126
  %1127 = phi i64 [ %1132, %1126 ], [ %1124, %1123 ]
  %1128 = phi i32 [ %1131, %1126 ], [ %1125, %1123 ]
  %1129 = getelementptr inbounds i32, ptr %11, i64 %1127
  %1130 = load i32, ptr %1129, align 4, !tbaa !5
  %1131 = mul nsw i32 %1130, %1128
  %1132 = add nsw i64 %1127, -1
  %1133 = trunc i64 %1127 to i32
  %1134 = icmp sgt i32 %1133, 0
  br i1 %1134, label %1126, label %1135, !llvm.loop !54

1135:                                             ; preds = %1126, %1117
  %1136 = phi i32 [ %1121, %1117 ], [ %1131, %1126 ]
  %1137 = and i64 %1086, 4294967295
  %1138 = getelementptr inbounds i32, ptr %6, i64 %1137
  %1139 = load i32, ptr %1138, align 4, !tbaa !5
  %1140 = mul nsw i32 %1139, %1136
  %1141 = add nsw i32 %1140, %1080
  %1142 = icmp sgt i64 %1078, 2
  %1143 = add nsw i64 %1079, -1
  %1144 = add i32 %1077, 1
  br i1 %1142, label %1076, label %1145, !llvm.loop !55

1145:                                             ; preds = %1135, %1073
  %1146 = phi i32 [ %1075, %1073 ], [ %1141, %1135 ]
  %1147 = icmp slt i32 %1146, %5
  br i1 %1147, label %1150, label %1148

1148:                                             ; preds = %1145
  %1149 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

1150:                                             ; preds = %1145
  %1151 = sext i32 %1146 to i64
  %1152 = getelementptr inbounds i8, ptr %617, i64 %1151
  %1153 = load i8, ptr %1152, align 1, !tbaa !11
  %1154 = zext i8 %1153 to i32
  %1155 = load i32, ptr %619, align 4, !tbaa !5
  %1156 = add nsw i32 %1155, %1154
  store i32 %1156, ptr %619, align 4, !tbaa !5
  %1157 = add nuw nsw i32 %1074, 1
  br i1 %928, label %1158, label %1208

1158:                                             ; preds = %1150
  %1159 = load i32, ptr %4, align 4, !tbaa !5
  %1160 = load i32, ptr %12, align 4, !tbaa !5
  %1161 = add nsw i32 %1160, -1
  %1162 = icmp slt i32 %1159, %1161
  br i1 %1162, label %1185, label %1163

1163:                                             ; preds = %1158
  %1164 = icmp eq i32 %1159, %1161
  br i1 %1164, label %1165, label %1201

1165:                                             ; preds = %1163
  store i32 0, ptr %4, align 4, !tbaa !5
  %1166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1166, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1208, label %1167

1167:                                             ; preds = %1165, %1195
  %1168 = phi i64 [ %1199, %1195 ], [ 1, %1165 ]
  %1169 = getelementptr inbounds i32, ptr %4, i64 %1168
  %1170 = load i32, ptr %1169, align 4, !tbaa !5
  %1171 = getelementptr inbounds i32, ptr %12, i64 %1168
  %1172 = load i32, ptr %1171, align 4, !tbaa !5
  %1173 = add nsw i32 %1172, -1
  %1174 = icmp slt i32 %1170, %1173
  br i1 %1174, label %1175, label %1193

1175:                                             ; preds = %1167
  br i1 %1162, label %1185, label %1176

1176:                                             ; preds = %1175
  %1177 = shl i64 %1168, 32
  %1178 = add i64 %1177, -4294967296
  %1179 = ashr exact i64 %1178, 32
  %1180 = getelementptr inbounds i32, ptr %7, i64 %1179
  %1181 = load i32, ptr %1180, align 4, !tbaa !5
  %1182 = getelementptr inbounds i32, ptr %6, i64 %1168
  %1183 = load i32, ptr %1182, align 4, !tbaa !5
  %1184 = add nsw i32 %1183, %1181
  store i32 %1184, ptr %1182, align 4, !tbaa !5
  br label %1203

1185:                                             ; preds = %1158, %1175
  %1186 = phi i32 [ %1170, %1175 ], [ %1159, %1158 ]
  %1187 = phi ptr [ %1169, %1175 ], [ %4, %1158 ]
  %1188 = phi i64 [ %1168, %1175 ], [ 0, %1158 ]
  %1189 = add nsw i32 %1186, 1
  store i32 %1189, ptr %1187, align 4, !tbaa !5
  %1190 = getelementptr inbounds i32, ptr %7, i64 %1188
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = getelementptr inbounds i32, ptr %6, i64 %1188
  br label %1203

1193:                                             ; preds = %1167
  %1194 = icmp eq i32 %1170, %1173
  br i1 %1194, label %1195, label %1201

1195:                                             ; preds = %1193
  store i32 0, ptr %1169, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %8, i64 %1168
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %6, i64 %1168
  store i32 %1197, ptr %1198, align 4, !tbaa !5
  %1199 = add nuw nsw i64 %1168, 1
  %1200 = icmp eq i64 %1199, %931
  br i1 %1200, label %1208, label %1167, !llvm.loop !56

1201:                                             ; preds = %1163, %1193
  %1202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1203:                                             ; preds = %1176, %1185
  %1204 = phi ptr [ %1192, %1185 ], [ %1169, %1176 ]
  %1205 = phi i32 [ %1191, %1185 ], [ 1, %1176 ]
  %1206 = load i32, ptr %1204, align 4, !tbaa !5
  %1207 = add nsw i32 %1206, %1205
  store i32 %1207, ptr %1204, align 4, !tbaa !5
  br label %1208

1208:                                             ; preds = %1195, %1203, %1165, %1150
  %1209 = icmp eq i32 %1157, %5
  br i1 %1209, label %5390, label %1073, !llvm.loop !57

1210:                                             ; preds = %624
  %1211 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 56, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

1212:                                             ; preds = %18
  %1213 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1214 = load ptr, ptr %1213, align 8, !tbaa !9
  %1215 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1216 = load ptr, ptr %1215, align 8, !tbaa !9
  store i8 0, ptr %1216, align 1, !tbaa !11
  %1217 = icmp eq i32 %13, 0
  br i1 %1217, label %1218, label %1220

1218:                                             ; preds = %1212
  %1219 = load i8, ptr %1214, align 1, !tbaa !11
  store i8 %1219, ptr %1216, align 1, !tbaa !11
  br label %5390

1220:                                             ; preds = %1212
  switch i32 %1, label %1803 [
    i32 1, label %1221
    i32 0, label %1515
  ]

1221:                                             ; preds = %1220
  %1222 = getelementptr inbounds i32, ptr %3, i64 %19
  %1223 = load i32, ptr %1222, align 4, !tbaa !5
  %1224 = icmp eq i32 %1223, 0
  %1225 = icmp sgt i32 %5, 0
  br i1 %1224, label %1235, label %1226

1226:                                             ; preds = %1221
  br i1 %1225, label %1227, label %5390

1227:                                             ; preds = %1226
  %1228 = icmp sgt i32 %13, 1
  %1229 = icmp sgt i32 %13, 0
  %1230 = add i32 %13, -2
  %1231 = zext i32 %1230 to i64
  %1232 = zext i32 %13 to i64
  %1233 = add nuw i32 %5, 1
  %1234 = icmp eq i32 %13, 1
  br label %1379

1235:                                             ; preds = %1221
  br i1 %1225, label %1236, label %5390

1236:                                             ; preds = %1235
  %1237 = icmp sgt i32 %13, 1
  %1238 = icmp sgt i32 %13, 0
  %1239 = add i32 %13, -2
  %1240 = zext i32 %1239 to i64
  %1241 = zext i32 %13 to i64
  %1242 = add nuw i32 %5, 1
  %1243 = icmp eq i32 %13, 1
  br label %1244

1244:                                             ; preds = %1236, %1377
  %1245 = phi i32 [ 0, %1236 ], [ %1329, %1377 ]
  %1246 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1237, label %1247, label %1316

1247:                                             ; preds = %1244, %1306
  %1248 = phi i32 [ %1315, %1306 ], [ 0, %1244 ]
  %1249 = phi i64 [ %1257, %1306 ], [ %1241, %1244 ]
  %1250 = phi i64 [ %1314, %1306 ], [ %1240, %1244 ]
  %1251 = phi i32 [ %1312, %1306 ], [ %1246, %1244 ]
  %1252 = sub i32 %1239, %1248
  %1253 = tail call i32 @llvm.smin.i32(i32 %1252, i32 0)
  %1254 = sub i32 %1252, %1253
  %1255 = zext i32 %1254 to i64
  %1256 = add nuw nsw i64 %1255, 1
  %1257 = add nsw i64 %1249, -1
  %1258 = icmp ult i32 %1254, 31
  br i1 %1258, label %1294, label %1259

1259:                                             ; preds = %1247
  %1260 = and i64 %1256, 8589934560
  %1261 = sub i64 %1250, %1260
  br label %1262

1262:                                             ; preds = %1262, %1259
  %1263 = phi i64 [ 0, %1259 ], [ %1286, %1262 ]
  %1264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1259 ], [ %1282, %1262 ]
  %1265 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1259 ], [ %1283, %1262 ]
  %1266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1259 ], [ %1284, %1262 ]
  %1267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1259 ], [ %1285, %1262 ]
  %1268 = sub i64 %1250, %1263
  %1269 = getelementptr inbounds i32, ptr %9, i64 %1268
  %1270 = getelementptr inbounds i32, ptr %1269, i64 -7
  %1271 = load <8 x i32>, ptr %1270, align 4, !tbaa !5
  %1272 = shufflevector <8 x i32> %1271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1273 = getelementptr inbounds i32, ptr %1269, i64 -15
  %1274 = load <8 x i32>, ptr %1273, align 4, !tbaa !5
  %1275 = shufflevector <8 x i32> %1274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1276 = getelementptr inbounds i32, ptr %1269, i64 -23
  %1277 = load <8 x i32>, ptr %1276, align 4, !tbaa !5
  %1278 = shufflevector <8 x i32> %1277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1279 = getelementptr inbounds i32, ptr %1269, i64 -31
  %1280 = load <8 x i32>, ptr %1279, align 4, !tbaa !5
  %1281 = shufflevector <8 x i32> %1280, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1282 = mul <8 x i32> %1272, %1264
  %1283 = mul <8 x i32> %1275, %1265
  %1284 = mul <8 x i32> %1278, %1266
  %1285 = mul <8 x i32> %1281, %1267
  %1286 = add nuw i64 %1263, 32
  %1287 = icmp eq i64 %1286, %1260
  br i1 %1287, label %1288, label %1262, !llvm.loop !58

1288:                                             ; preds = %1262
  %1289 = mul <8 x i32> %1283, %1282
  %1290 = mul <8 x i32> %1284, %1289
  %1291 = mul <8 x i32> %1285, %1290
  %1292 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1291)
  %1293 = icmp eq i64 %1256, %1260
  br i1 %1293, label %1306, label %1294

1294:                                             ; preds = %1247, %1288
  %1295 = phi i64 [ %1250, %1247 ], [ %1261, %1288 ]
  %1296 = phi i32 [ 1, %1247 ], [ %1292, %1288 ]
  br label %1297

1297:                                             ; preds = %1294, %1297
  %1298 = phi i64 [ %1303, %1297 ], [ %1295, %1294 ]
  %1299 = phi i32 [ %1302, %1297 ], [ %1296, %1294 ]
  %1300 = getelementptr inbounds i32, ptr %9, i64 %1298
  %1301 = load i32, ptr %1300, align 4, !tbaa !5
  %1302 = mul nsw i32 %1301, %1299
  %1303 = add nsw i64 %1298, -1
  %1304 = trunc i64 %1298 to i32
  %1305 = icmp sgt i32 %1304, 0
  br i1 %1305, label %1297, label %1306, !llvm.loop !59

1306:                                             ; preds = %1297, %1288
  %1307 = phi i32 [ %1292, %1288 ], [ %1302, %1297 ]
  %1308 = and i64 %1257, 4294967295
  %1309 = getelementptr inbounds i32, ptr %6, i64 %1308
  %1310 = load i32, ptr %1309, align 4, !tbaa !5
  %1311 = mul nsw i32 %1310, %1307
  %1312 = add nsw i32 %1311, %1251
  %1313 = icmp sgt i64 %1249, 2
  %1314 = add nsw i64 %1250, -1
  %1315 = add i32 %1248, 1
  br i1 %1313, label %1247, label %1316, !llvm.loop !60

1316:                                             ; preds = %1306, %1244
  %1317 = phi i32 [ %1246, %1244 ], [ %1312, %1306 ]
  %1318 = sext i32 %1317 to i64
  %1319 = getelementptr inbounds double, ptr %2, i64 %1318
  %1320 = load double, ptr %1319, align 8, !tbaa !18
  %1321 = getelementptr inbounds i8, ptr %1214, i64 %1318
  %1322 = load i8, ptr %1321, align 1, !tbaa !11
  %1323 = load i8, ptr %1216, align 1, !tbaa !11
  %1324 = sitofp i8 %1323 to double
  %1325 = sitofp i8 %1322 to double
  %1326 = fmul fast double %1320, %1325
  %1327 = fadd fast double %1326, %1324
  %1328 = fptosi double %1327 to i8
  store i8 %1328, ptr %1216, align 1, !tbaa !11
  %1329 = add nuw nsw i32 %1245, 1
  br i1 %1238, label %1330, label %1377

1330:                                             ; preds = %1316
  %1331 = load i32, ptr %4, align 4, !tbaa !5
  %1332 = load i32, ptr %12, align 4, !tbaa !5
  %1333 = add nsw i32 %1332, -1
  %1334 = icmp slt i32 %1331, %1333
  br i1 %1334, label %1354, label %1335

1335:                                             ; preds = %1330
  %1336 = icmp eq i32 %1331, %1333
  br i1 %1336, label %1337, label %1370

1337:                                             ; preds = %1335
  store i32 0, ptr %4, align 4, !tbaa !5
  %1338 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1338, ptr %6, align 4, !tbaa !5
  br i1 %1243, label %1377, label %1339

1339:                                             ; preds = %1337, %1364
  %1340 = phi i64 [ %1368, %1364 ], [ 1, %1337 ]
  %1341 = getelementptr inbounds i32, ptr %4, i64 %1340
  %1342 = load i32, ptr %1341, align 4, !tbaa !5
  %1343 = getelementptr inbounds i32, ptr %12, i64 %1340
  %1344 = load i32, ptr %1343, align 4, !tbaa !5
  %1345 = add nsw i32 %1344, -1
  %1346 = icmp slt i32 %1342, %1345
  br i1 %1346, label %1347, label %1362

1347:                                             ; preds = %1339
  br i1 %1334, label %1354, label %1348

1348:                                             ; preds = %1347
  %1349 = getelementptr inbounds i32, ptr %7, i64 %1340
  %1350 = load i32, ptr %1349, align 4, !tbaa !5
  %1351 = getelementptr inbounds i32, ptr %6, i64 %1340
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = add nsw i32 %1352, %1350
  store i32 %1353, ptr %1351, align 4, !tbaa !5
  br label %1372

1354:                                             ; preds = %1330, %1347
  %1355 = phi i32 [ %1342, %1347 ], [ %1331, %1330 ]
  %1356 = phi ptr [ %1341, %1347 ], [ %4, %1330 ]
  %1357 = phi i64 [ %1340, %1347 ], [ 0, %1330 ]
  %1358 = add nsw i32 %1355, 1
  store i32 %1358, ptr %1356, align 4, !tbaa !5
  %1359 = getelementptr inbounds i32, ptr %7, i64 %1357
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = getelementptr inbounds i32, ptr %6, i64 %1357
  br label %1372

1362:                                             ; preds = %1339
  %1363 = icmp eq i32 %1342, %1345
  br i1 %1363, label %1364, label %1370

1364:                                             ; preds = %1362
  store i32 0, ptr %1341, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %8, i64 %1340
  %1366 = load i32, ptr %1365, align 4, !tbaa !5
  %1367 = getelementptr inbounds i32, ptr %6, i64 %1340
  store i32 %1366, ptr %1367, align 4, !tbaa !5
  %1368 = add nuw nsw i64 %1340, 1
  %1369 = icmp eq i64 %1368, %1241
  br i1 %1369, label %1377, label %1339, !llvm.loop !61

1370:                                             ; preds = %1335, %1362
  %1371 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1372:                                             ; preds = %1348, %1354
  %1373 = phi ptr [ %1361, %1354 ], [ %1341, %1348 ]
  %1374 = phi i32 [ %1360, %1354 ], [ 1, %1348 ]
  %1375 = load i32, ptr %1373, align 4, !tbaa !5
  %1376 = add nsw i32 %1375, %1374
  store i32 %1376, ptr %1373, align 4, !tbaa !5
  br label %1377

1377:                                             ; preds = %1364, %1372, %1337, %1316
  %1378 = icmp eq i32 %1329, %5
  br i1 %1378, label %5390, label %1244, !llvm.loop !62

1379:                                             ; preds = %1227, %1513
  %1380 = phi i32 [ 0, %1227 ], [ %1462, %1513 ]
  %1381 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1228, label %1382, label %1451

1382:                                             ; preds = %1379, %1441
  %1383 = phi i32 [ %1450, %1441 ], [ 0, %1379 ]
  %1384 = phi i64 [ %1392, %1441 ], [ %1232, %1379 ]
  %1385 = phi i64 [ %1449, %1441 ], [ %1231, %1379 ]
  %1386 = phi i32 [ %1447, %1441 ], [ %1381, %1379 ]
  %1387 = sub i32 %1230, %1383
  %1388 = tail call i32 @llvm.smin.i32(i32 %1387, i32 0)
  %1389 = sub i32 %1387, %1388
  %1390 = zext i32 %1389 to i64
  %1391 = add nuw nsw i64 %1390, 1
  %1392 = add nsw i64 %1384, -1
  %1393 = icmp ult i32 %1389, 31
  br i1 %1393, label %1429, label %1394

1394:                                             ; preds = %1382
  %1395 = and i64 %1391, 8589934560
  %1396 = sub i64 %1385, %1395
  br label %1397

1397:                                             ; preds = %1397, %1394
  %1398 = phi i64 [ 0, %1394 ], [ %1421, %1397 ]
  %1399 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1417, %1397 ]
  %1400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1418, %1397 ]
  %1401 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1419, %1397 ]
  %1402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1420, %1397 ]
  %1403 = sub i64 %1385, %1398
  %1404 = getelementptr inbounds i32, ptr %11, i64 %1403
  %1405 = getelementptr inbounds i32, ptr %1404, i64 -7
  %1406 = load <8 x i32>, ptr %1405, align 4, !tbaa !5
  %1407 = shufflevector <8 x i32> %1406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1408 = getelementptr inbounds i32, ptr %1404, i64 -15
  %1409 = load <8 x i32>, ptr %1408, align 4, !tbaa !5
  %1410 = shufflevector <8 x i32> %1409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1411 = getelementptr inbounds i32, ptr %1404, i64 -23
  %1412 = load <8 x i32>, ptr %1411, align 4, !tbaa !5
  %1413 = shufflevector <8 x i32> %1412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1414 = getelementptr inbounds i32, ptr %1404, i64 -31
  %1415 = load <8 x i32>, ptr %1414, align 4, !tbaa !5
  %1416 = shufflevector <8 x i32> %1415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1417 = mul <8 x i32> %1407, %1399
  %1418 = mul <8 x i32> %1410, %1400
  %1419 = mul <8 x i32> %1413, %1401
  %1420 = mul <8 x i32> %1416, %1402
  %1421 = add nuw i64 %1398, 32
  %1422 = icmp eq i64 %1421, %1395
  br i1 %1422, label %1423, label %1397, !llvm.loop !63

1423:                                             ; preds = %1397
  %1424 = mul <8 x i32> %1418, %1417
  %1425 = mul <8 x i32> %1419, %1424
  %1426 = mul <8 x i32> %1420, %1425
  %1427 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1426)
  %1428 = icmp eq i64 %1391, %1395
  br i1 %1428, label %1441, label %1429

1429:                                             ; preds = %1382, %1423
  %1430 = phi i64 [ %1385, %1382 ], [ %1396, %1423 ]
  %1431 = phi i32 [ 1, %1382 ], [ %1427, %1423 ]
  br label %1432

1432:                                             ; preds = %1429, %1432
  %1433 = phi i64 [ %1438, %1432 ], [ %1430, %1429 ]
  %1434 = phi i32 [ %1437, %1432 ], [ %1431, %1429 ]
  %1435 = getelementptr inbounds i32, ptr %11, i64 %1433
  %1436 = load i32, ptr %1435, align 4, !tbaa !5
  %1437 = mul nsw i32 %1436, %1434
  %1438 = add nsw i64 %1433, -1
  %1439 = trunc i64 %1433 to i32
  %1440 = icmp sgt i32 %1439, 0
  br i1 %1440, label %1432, label %1441, !llvm.loop !64

1441:                                             ; preds = %1432, %1423
  %1442 = phi i32 [ %1427, %1423 ], [ %1437, %1432 ]
  %1443 = and i64 %1392, 4294967295
  %1444 = getelementptr inbounds i32, ptr %6, i64 %1443
  %1445 = load i32, ptr %1444, align 4, !tbaa !5
  %1446 = mul nsw i32 %1445, %1442
  %1447 = add nsw i32 %1446, %1386
  %1448 = icmp sgt i64 %1384, 2
  %1449 = add nsw i64 %1385, -1
  %1450 = add i32 %1383, 1
  br i1 %1448, label %1382, label %1451, !llvm.loop !65

1451:                                             ; preds = %1441, %1379
  %1452 = phi i32 [ %1381, %1379 ], [ %1447, %1441 ]
  %1453 = icmp slt i32 %1452, %5
  br i1 %1453, label %1456, label %1454

1454:                                             ; preds = %1451
  %1455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

1456:                                             ; preds = %1451
  %1457 = sext i32 %1452 to i64
  %1458 = getelementptr inbounds i8, ptr %1214, i64 %1457
  %1459 = load i8, ptr %1458, align 1, !tbaa !11
  %1460 = load i8, ptr %1216, align 1, !tbaa !11
  %1461 = add i8 %1460, %1459
  store i8 %1461, ptr %1216, align 1, !tbaa !11
  %1462 = add nuw nsw i32 %1380, 1
  br i1 %1229, label %1463, label %1513

1463:                                             ; preds = %1456
  %1464 = load i32, ptr %4, align 4, !tbaa !5
  %1465 = load i32, ptr %12, align 4, !tbaa !5
  %1466 = add nsw i32 %1465, -1
  %1467 = icmp slt i32 %1464, %1466
  br i1 %1467, label %1490, label %1468

1468:                                             ; preds = %1463
  %1469 = icmp eq i32 %1464, %1466
  br i1 %1469, label %1470, label %1506

1470:                                             ; preds = %1468
  store i32 0, ptr %4, align 4, !tbaa !5
  %1471 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1471, ptr %6, align 4, !tbaa !5
  br i1 %1234, label %1513, label %1472

1472:                                             ; preds = %1470, %1500
  %1473 = phi i64 [ %1504, %1500 ], [ 1, %1470 ]
  %1474 = getelementptr inbounds i32, ptr %4, i64 %1473
  %1475 = load i32, ptr %1474, align 4, !tbaa !5
  %1476 = getelementptr inbounds i32, ptr %12, i64 %1473
  %1477 = load i32, ptr %1476, align 4, !tbaa !5
  %1478 = add nsw i32 %1477, -1
  %1479 = icmp slt i32 %1475, %1478
  br i1 %1479, label %1480, label %1498

1480:                                             ; preds = %1472
  br i1 %1467, label %1490, label %1481

1481:                                             ; preds = %1480
  %1482 = shl i64 %1473, 32
  %1483 = add i64 %1482, -4294967296
  %1484 = ashr exact i64 %1483, 32
  %1485 = getelementptr inbounds i32, ptr %7, i64 %1484
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = getelementptr inbounds i32, ptr %6, i64 %1473
  %1488 = load i32, ptr %1487, align 4, !tbaa !5
  %1489 = add nsw i32 %1488, %1486
  store i32 %1489, ptr %1487, align 4, !tbaa !5
  br label %1508

1490:                                             ; preds = %1463, %1480
  %1491 = phi i32 [ %1475, %1480 ], [ %1464, %1463 ]
  %1492 = phi ptr [ %1474, %1480 ], [ %4, %1463 ]
  %1493 = phi i64 [ %1473, %1480 ], [ 0, %1463 ]
  %1494 = add nsw i32 %1491, 1
  store i32 %1494, ptr %1492, align 4, !tbaa !5
  %1495 = getelementptr inbounds i32, ptr %7, i64 %1493
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = getelementptr inbounds i32, ptr %6, i64 %1493
  br label %1508

1498:                                             ; preds = %1472
  %1499 = icmp eq i32 %1475, %1478
  br i1 %1499, label %1500, label %1506

1500:                                             ; preds = %1498
  store i32 0, ptr %1474, align 4, !tbaa !5
  %1501 = getelementptr inbounds i32, ptr %8, i64 %1473
  %1502 = load i32, ptr %1501, align 4, !tbaa !5
  %1503 = getelementptr inbounds i32, ptr %6, i64 %1473
  store i32 %1502, ptr %1503, align 4, !tbaa !5
  %1504 = add nuw nsw i64 %1473, 1
  %1505 = icmp eq i64 %1504, %1232
  br i1 %1505, label %1513, label %1472, !llvm.loop !66

1506:                                             ; preds = %1468, %1498
  %1507 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1508:                                             ; preds = %1481, %1490
  %1509 = phi ptr [ %1497, %1490 ], [ %1474, %1481 ]
  %1510 = phi i32 [ %1496, %1490 ], [ 1, %1481 ]
  %1511 = load i32, ptr %1509, align 4, !tbaa !5
  %1512 = add nsw i32 %1511, %1510
  store i32 %1512, ptr %1509, align 4, !tbaa !5
  br label %1513

1513:                                             ; preds = %1500, %1508, %1470, %1456
  %1514 = icmp eq i32 %1462, %5
  br i1 %1514, label %5390, label %1379, !llvm.loop !67

1515:                                             ; preds = %1220
  %1516 = getelementptr inbounds i32, ptr %3, i64 %19
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp sgt i32 %5, 0
  br i1 %1518, label %1529, label %1520

1520:                                             ; preds = %1515
  br i1 %1519, label %1521, label %5390

1521:                                             ; preds = %1520
  %1522 = icmp sgt i32 %13, 1
  %1523 = icmp sgt i32 %13, 0
  %1524 = add i32 %13, -2
  %1525 = zext i32 %1524 to i64
  %1526 = zext i32 %13 to i64
  %1527 = add nuw i32 %5, 1
  %1528 = icmp eq i32 %13, 1
  br label %1667

1529:                                             ; preds = %1515
  br i1 %1519, label %1530, label %5390

1530:                                             ; preds = %1529
  %1531 = icmp sgt i32 %13, 1
  %1532 = icmp sgt i32 %13, 0
  %1533 = add i32 %13, -2
  %1534 = zext i32 %1533 to i64
  %1535 = zext i32 %13 to i64
  %1536 = add nuw i32 %5, 1
  %1537 = icmp eq i32 %13, 1
  br label %1538

1538:                                             ; preds = %1530, %1665
  %1539 = phi i32 [ 0, %1530 ], [ %1617, %1665 ]
  %1540 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1531, label %1541, label %1610

1541:                                             ; preds = %1538, %1600
  %1542 = phi i32 [ %1609, %1600 ], [ 0, %1538 ]
  %1543 = phi i64 [ %1551, %1600 ], [ %1535, %1538 ]
  %1544 = phi i64 [ %1608, %1600 ], [ %1534, %1538 ]
  %1545 = phi i32 [ %1606, %1600 ], [ %1540, %1538 ]
  %1546 = sub i32 %1533, %1542
  %1547 = tail call i32 @llvm.smin.i32(i32 %1546, i32 0)
  %1548 = sub i32 %1546, %1547
  %1549 = zext i32 %1548 to i64
  %1550 = add nuw nsw i64 %1549, 1
  %1551 = add nsw i64 %1543, -1
  %1552 = icmp ult i32 %1548, 31
  br i1 %1552, label %1588, label %1553

1553:                                             ; preds = %1541
  %1554 = and i64 %1550, 8589934560
  %1555 = sub i64 %1544, %1554
  br label %1556

1556:                                             ; preds = %1556, %1553
  %1557 = phi i64 [ 0, %1553 ], [ %1580, %1556 ]
  %1558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1553 ], [ %1576, %1556 ]
  %1559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1553 ], [ %1577, %1556 ]
  %1560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1553 ], [ %1578, %1556 ]
  %1561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1553 ], [ %1579, %1556 ]
  %1562 = sub i64 %1544, %1557
  %1563 = getelementptr inbounds i32, ptr %9, i64 %1562
  %1564 = getelementptr inbounds i32, ptr %1563, i64 -7
  %1565 = load <8 x i32>, ptr %1564, align 4, !tbaa !5
  %1566 = shufflevector <8 x i32> %1565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1567 = getelementptr inbounds i32, ptr %1563, i64 -15
  %1568 = load <8 x i32>, ptr %1567, align 4, !tbaa !5
  %1569 = shufflevector <8 x i32> %1568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1570 = getelementptr inbounds i32, ptr %1563, i64 -23
  %1571 = load <8 x i32>, ptr %1570, align 4, !tbaa !5
  %1572 = shufflevector <8 x i32> %1571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1573 = getelementptr inbounds i32, ptr %1563, i64 -31
  %1574 = load <8 x i32>, ptr %1573, align 4, !tbaa !5
  %1575 = shufflevector <8 x i32> %1574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1576 = mul <8 x i32> %1566, %1558
  %1577 = mul <8 x i32> %1569, %1559
  %1578 = mul <8 x i32> %1572, %1560
  %1579 = mul <8 x i32> %1575, %1561
  %1580 = add nuw i64 %1557, 32
  %1581 = icmp eq i64 %1580, %1554
  br i1 %1581, label %1582, label %1556, !llvm.loop !68

1582:                                             ; preds = %1556
  %1583 = mul <8 x i32> %1577, %1576
  %1584 = mul <8 x i32> %1578, %1583
  %1585 = mul <8 x i32> %1579, %1584
  %1586 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1585)
  %1587 = icmp eq i64 %1550, %1554
  br i1 %1587, label %1600, label %1588

1588:                                             ; preds = %1541, %1582
  %1589 = phi i64 [ %1544, %1541 ], [ %1555, %1582 ]
  %1590 = phi i32 [ 1, %1541 ], [ %1586, %1582 ]
  br label %1591

1591:                                             ; preds = %1588, %1591
  %1592 = phi i64 [ %1597, %1591 ], [ %1589, %1588 ]
  %1593 = phi i32 [ %1596, %1591 ], [ %1590, %1588 ]
  %1594 = getelementptr inbounds i32, ptr %9, i64 %1592
  %1595 = load i32, ptr %1594, align 4, !tbaa !5
  %1596 = mul nsw i32 %1595, %1593
  %1597 = add nsw i64 %1592, -1
  %1598 = trunc i64 %1592 to i32
  %1599 = icmp sgt i32 %1598, 0
  br i1 %1599, label %1591, label %1600, !llvm.loop !69

1600:                                             ; preds = %1591, %1582
  %1601 = phi i32 [ %1586, %1582 ], [ %1596, %1591 ]
  %1602 = and i64 %1551, 4294967295
  %1603 = getelementptr inbounds i32, ptr %6, i64 %1602
  %1604 = load i32, ptr %1603, align 4, !tbaa !5
  %1605 = mul nsw i32 %1604, %1601
  %1606 = add nsw i32 %1605, %1545
  %1607 = icmp sgt i64 %1543, 2
  %1608 = add nsw i64 %1544, -1
  %1609 = add i32 %1542, 1
  br i1 %1607, label %1541, label %1610, !llvm.loop !70

1610:                                             ; preds = %1600, %1538
  %1611 = phi i32 [ %1540, %1538 ], [ %1606, %1600 ]
  %1612 = sext i32 %1611 to i64
  %1613 = getelementptr inbounds i8, ptr %1214, i64 %1612
  %1614 = load i8, ptr %1613, align 1, !tbaa !11
  %1615 = load i8, ptr %1216, align 1, !tbaa !11
  %1616 = add i8 %1615, %1614
  store i8 %1616, ptr %1216, align 1, !tbaa !11
  %1617 = add nuw nsw i32 %1539, 1
  br i1 %1532, label %1618, label %1665

1618:                                             ; preds = %1610
  %1619 = load i32, ptr %4, align 4, !tbaa !5
  %1620 = load i32, ptr %12, align 4, !tbaa !5
  %1621 = add nsw i32 %1620, -1
  %1622 = icmp slt i32 %1619, %1621
  br i1 %1622, label %1642, label %1623

1623:                                             ; preds = %1618
  %1624 = icmp eq i32 %1619, %1621
  br i1 %1624, label %1625, label %1658

1625:                                             ; preds = %1623
  store i32 0, ptr %4, align 4, !tbaa !5
  %1626 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1626, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1665, label %1627

1627:                                             ; preds = %1625, %1652
  %1628 = phi i64 [ %1656, %1652 ], [ 1, %1625 ]
  %1629 = getelementptr inbounds i32, ptr %4, i64 %1628
  %1630 = load i32, ptr %1629, align 4, !tbaa !5
  %1631 = getelementptr inbounds i32, ptr %12, i64 %1628
  %1632 = load i32, ptr %1631, align 4, !tbaa !5
  %1633 = add nsw i32 %1632, -1
  %1634 = icmp slt i32 %1630, %1633
  br i1 %1634, label %1635, label %1650

1635:                                             ; preds = %1627
  br i1 %1622, label %1642, label %1636

1636:                                             ; preds = %1635
  %1637 = getelementptr inbounds i32, ptr %7, i64 %1628
  %1638 = load i32, ptr %1637, align 4, !tbaa !5
  %1639 = getelementptr inbounds i32, ptr %6, i64 %1628
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = add nsw i32 %1640, %1638
  store i32 %1641, ptr %1639, align 4, !tbaa !5
  br label %1660

1642:                                             ; preds = %1618, %1635
  %1643 = phi i32 [ %1630, %1635 ], [ %1619, %1618 ]
  %1644 = phi ptr [ %1629, %1635 ], [ %4, %1618 ]
  %1645 = phi i64 [ %1628, %1635 ], [ 0, %1618 ]
  %1646 = add nsw i32 %1643, 1
  store i32 %1646, ptr %1644, align 4, !tbaa !5
  %1647 = getelementptr inbounds i32, ptr %7, i64 %1645
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %6, i64 %1645
  br label %1660

1650:                                             ; preds = %1627
  %1651 = icmp eq i32 %1630, %1633
  br i1 %1651, label %1652, label %1658

1652:                                             ; preds = %1650
  store i32 0, ptr %1629, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %8, i64 %1628
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = getelementptr inbounds i32, ptr %6, i64 %1628
  store i32 %1654, ptr %1655, align 4, !tbaa !5
  %1656 = add nuw nsw i64 %1628, 1
  %1657 = icmp eq i64 %1656, %1535
  br i1 %1657, label %1665, label %1627, !llvm.loop !71

1658:                                             ; preds = %1623, %1650
  %1659 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1660:                                             ; preds = %1636, %1642
  %1661 = phi ptr [ %1649, %1642 ], [ %1629, %1636 ]
  %1662 = phi i32 [ %1648, %1642 ], [ 1, %1636 ]
  %1663 = load i32, ptr %1661, align 4, !tbaa !5
  %1664 = add nsw i32 %1663, %1662
  store i32 %1664, ptr %1661, align 4, !tbaa !5
  br label %1665

1665:                                             ; preds = %1652, %1660, %1625, %1610
  %1666 = icmp eq i32 %1617, %5
  br i1 %1666, label %5390, label %1538, !llvm.loop !72

1667:                                             ; preds = %1521, %1801
  %1668 = phi i32 [ 0, %1521 ], [ %1750, %1801 ]
  %1669 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1522, label %1670, label %1739

1670:                                             ; preds = %1667, %1729
  %1671 = phi i32 [ %1738, %1729 ], [ 0, %1667 ]
  %1672 = phi i64 [ %1680, %1729 ], [ %1526, %1667 ]
  %1673 = phi i64 [ %1737, %1729 ], [ %1525, %1667 ]
  %1674 = phi i32 [ %1735, %1729 ], [ %1669, %1667 ]
  %1675 = sub i32 %1524, %1671
  %1676 = tail call i32 @llvm.smin.i32(i32 %1675, i32 0)
  %1677 = sub i32 %1675, %1676
  %1678 = zext i32 %1677 to i64
  %1679 = add nuw nsw i64 %1678, 1
  %1680 = add nsw i64 %1672, -1
  %1681 = icmp ult i32 %1677, 31
  br i1 %1681, label %1717, label %1682

1682:                                             ; preds = %1670
  %1683 = and i64 %1679, 8589934560
  %1684 = sub i64 %1673, %1683
  br label %1685

1685:                                             ; preds = %1685, %1682
  %1686 = phi i64 [ 0, %1682 ], [ %1709, %1685 ]
  %1687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1682 ], [ %1705, %1685 ]
  %1688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1682 ], [ %1706, %1685 ]
  %1689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1682 ], [ %1707, %1685 ]
  %1690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1682 ], [ %1708, %1685 ]
  %1691 = sub i64 %1673, %1686
  %1692 = getelementptr inbounds i32, ptr %11, i64 %1691
  %1693 = getelementptr inbounds i32, ptr %1692, i64 -7
  %1694 = load <8 x i32>, ptr %1693, align 4, !tbaa !5
  %1695 = shufflevector <8 x i32> %1694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1696 = getelementptr inbounds i32, ptr %1692, i64 -15
  %1697 = load <8 x i32>, ptr %1696, align 4, !tbaa !5
  %1698 = shufflevector <8 x i32> %1697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1699 = getelementptr inbounds i32, ptr %1692, i64 -23
  %1700 = load <8 x i32>, ptr %1699, align 4, !tbaa !5
  %1701 = shufflevector <8 x i32> %1700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1702 = getelementptr inbounds i32, ptr %1692, i64 -31
  %1703 = load <8 x i32>, ptr %1702, align 4, !tbaa !5
  %1704 = shufflevector <8 x i32> %1703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1705 = mul <8 x i32> %1695, %1687
  %1706 = mul <8 x i32> %1698, %1688
  %1707 = mul <8 x i32> %1701, %1689
  %1708 = mul <8 x i32> %1704, %1690
  %1709 = add nuw i64 %1686, 32
  %1710 = icmp eq i64 %1709, %1683
  br i1 %1710, label %1711, label %1685, !llvm.loop !73

1711:                                             ; preds = %1685
  %1712 = mul <8 x i32> %1706, %1705
  %1713 = mul <8 x i32> %1707, %1712
  %1714 = mul <8 x i32> %1708, %1713
  %1715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1714)
  %1716 = icmp eq i64 %1679, %1683
  br i1 %1716, label %1729, label %1717

1717:                                             ; preds = %1670, %1711
  %1718 = phi i64 [ %1673, %1670 ], [ %1684, %1711 ]
  %1719 = phi i32 [ 1, %1670 ], [ %1715, %1711 ]
  br label %1720

1720:                                             ; preds = %1717, %1720
  %1721 = phi i64 [ %1726, %1720 ], [ %1718, %1717 ]
  %1722 = phi i32 [ %1725, %1720 ], [ %1719, %1717 ]
  %1723 = getelementptr inbounds i32, ptr %11, i64 %1721
  %1724 = load i32, ptr %1723, align 4, !tbaa !5
  %1725 = mul nsw i32 %1724, %1722
  %1726 = add nsw i64 %1721, -1
  %1727 = trunc i64 %1721 to i32
  %1728 = icmp sgt i32 %1727, 0
  br i1 %1728, label %1720, label %1729, !llvm.loop !74

1729:                                             ; preds = %1720, %1711
  %1730 = phi i32 [ %1715, %1711 ], [ %1725, %1720 ]
  %1731 = and i64 %1680, 4294967295
  %1732 = getelementptr inbounds i32, ptr %6, i64 %1731
  %1733 = load i32, ptr %1732, align 4, !tbaa !5
  %1734 = mul nsw i32 %1733, %1730
  %1735 = add nsw i32 %1734, %1674
  %1736 = icmp sgt i64 %1672, 2
  %1737 = add nsw i64 %1673, -1
  %1738 = add i32 %1671, 1
  br i1 %1736, label %1670, label %1739, !llvm.loop !75

1739:                                             ; preds = %1729, %1667
  %1740 = phi i32 [ %1669, %1667 ], [ %1735, %1729 ]
  %1741 = icmp slt i32 %1740, %5
  br i1 %1741, label %1744, label %1742

1742:                                             ; preds = %1739
  %1743 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

1744:                                             ; preds = %1739
  %1745 = sext i32 %1740 to i64
  %1746 = getelementptr inbounds i8, ptr %1214, i64 %1745
  %1747 = load i8, ptr %1746, align 1, !tbaa !11
  %1748 = load i8, ptr %1216, align 1, !tbaa !11
  %1749 = add i8 %1748, %1747
  store i8 %1749, ptr %1216, align 1, !tbaa !11
  %1750 = add nuw nsw i32 %1668, 1
  br i1 %1523, label %1751, label %1801

1751:                                             ; preds = %1744
  %1752 = load i32, ptr %4, align 4, !tbaa !5
  %1753 = load i32, ptr %12, align 4, !tbaa !5
  %1754 = add nsw i32 %1753, -1
  %1755 = icmp slt i32 %1752, %1754
  br i1 %1755, label %1778, label %1756

1756:                                             ; preds = %1751
  %1757 = icmp eq i32 %1752, %1754
  br i1 %1757, label %1758, label %1794

1758:                                             ; preds = %1756
  store i32 0, ptr %4, align 4, !tbaa !5
  %1759 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1759, ptr %6, align 4, !tbaa !5
  br i1 %1528, label %1801, label %1760

1760:                                             ; preds = %1758, %1788
  %1761 = phi i64 [ %1792, %1788 ], [ 1, %1758 ]
  %1762 = getelementptr inbounds i32, ptr %4, i64 %1761
  %1763 = load i32, ptr %1762, align 4, !tbaa !5
  %1764 = getelementptr inbounds i32, ptr %12, i64 %1761
  %1765 = load i32, ptr %1764, align 4, !tbaa !5
  %1766 = add nsw i32 %1765, -1
  %1767 = icmp slt i32 %1763, %1766
  br i1 %1767, label %1768, label %1786

1768:                                             ; preds = %1760
  br i1 %1755, label %1778, label %1769

1769:                                             ; preds = %1768
  %1770 = shl i64 %1761, 32
  %1771 = add i64 %1770, -4294967296
  %1772 = ashr exact i64 %1771, 32
  %1773 = getelementptr inbounds i32, ptr %7, i64 %1772
  %1774 = load i32, ptr %1773, align 4, !tbaa !5
  %1775 = getelementptr inbounds i32, ptr %6, i64 %1761
  %1776 = load i32, ptr %1775, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, %1774
  store i32 %1777, ptr %1775, align 4, !tbaa !5
  br label %1796

1778:                                             ; preds = %1751, %1768
  %1779 = phi i32 [ %1763, %1768 ], [ %1752, %1751 ]
  %1780 = phi ptr [ %1762, %1768 ], [ %4, %1751 ]
  %1781 = phi i64 [ %1761, %1768 ], [ 0, %1751 ]
  %1782 = add nsw i32 %1779, 1
  store i32 %1782, ptr %1780, align 4, !tbaa !5
  %1783 = getelementptr inbounds i32, ptr %7, i64 %1781
  %1784 = load i32, ptr %1783, align 4, !tbaa !5
  %1785 = getelementptr inbounds i32, ptr %6, i64 %1781
  br label %1796

1786:                                             ; preds = %1760
  %1787 = icmp eq i32 %1763, %1766
  br i1 %1787, label %1788, label %1794

1788:                                             ; preds = %1786
  store i32 0, ptr %1762, align 4, !tbaa !5
  %1789 = getelementptr inbounds i32, ptr %8, i64 %1761
  %1790 = load i32, ptr %1789, align 4, !tbaa !5
  %1791 = getelementptr inbounds i32, ptr %6, i64 %1761
  store i32 %1790, ptr %1791, align 4, !tbaa !5
  %1792 = add nuw nsw i64 %1761, 1
  %1793 = icmp eq i64 %1792, %1526
  br i1 %1793, label %1801, label %1760, !llvm.loop !76

1794:                                             ; preds = %1756, %1786
  %1795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1796:                                             ; preds = %1769, %1778
  %1797 = phi ptr [ %1785, %1778 ], [ %1762, %1769 ]
  %1798 = phi i32 [ %1784, %1778 ], [ 1, %1769 ]
  %1799 = load i32, ptr %1797, align 4, !tbaa !5
  %1800 = add nsw i32 %1799, %1798
  store i32 %1800, ptr %1797, align 4, !tbaa !5
  br label %1801

1801:                                             ; preds = %1788, %1796, %1758, %1744
  %1802 = icmp eq i32 %1750, %5
  br i1 %1802, label %5390, label %1667, !llvm.loop !77

1803:                                             ; preds = %1220
  %1804 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 60, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

1805:                                             ; preds = %18
  %1806 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1807 = load ptr, ptr %1806, align 8, !tbaa !9
  %1808 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1809 = load ptr, ptr %1808, align 8, !tbaa !9
  store i16 0, ptr %1809, align 2, !tbaa !78
  %1810 = icmp eq i32 %13, 0
  br i1 %1810, label %1811, label %1814

1811:                                             ; preds = %1805
  %1812 = load i8, ptr %1807, align 1, !tbaa !11
  %1813 = zext i8 %1812 to i16
  store i16 %1813, ptr %1809, align 2, !tbaa !78
  br label %5390

1814:                                             ; preds = %1805
  switch i32 %1, label %2403 [
    i32 1, label %1815
    i32 0, label %2113
  ]

1815:                                             ; preds = %1814
  %1816 = getelementptr inbounds i32, ptr %3, i64 %19
  %1817 = load i32, ptr %1816, align 4, !tbaa !5
  %1818 = icmp eq i32 %1817, 0
  %1819 = icmp sgt i32 %5, 0
  br i1 %1818, label %1829, label %1820

1820:                                             ; preds = %1815
  br i1 %1819, label %1821, label %5390

1821:                                             ; preds = %1820
  %1822 = icmp sgt i32 %13, 1
  %1823 = icmp sgt i32 %13, 0
  %1824 = add i32 %13, -2
  %1825 = zext i32 %1824 to i64
  %1826 = zext i32 %13 to i64
  %1827 = add nuw i32 %5, 1
  %1828 = icmp eq i32 %13, 1
  br label %1973

1829:                                             ; preds = %1815
  br i1 %1819, label %1830, label %5390

1830:                                             ; preds = %1829
  %1831 = icmp sgt i32 %13, 1
  %1832 = icmp sgt i32 %13, 0
  %1833 = add i32 %13, -2
  %1834 = zext i32 %1833 to i64
  %1835 = zext i32 %13 to i64
  %1836 = add nuw i32 %5, 1
  %1837 = icmp eq i32 %13, 1
  br label %1838

1838:                                             ; preds = %1830, %1971
  %1839 = phi i16 [ 0, %1830 ], [ %1922, %1971 ]
  %1840 = phi i32 [ 0, %1830 ], [ %1923, %1971 ]
  %1841 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1831, label %1842, label %1911

1842:                                             ; preds = %1838, %1901
  %1843 = phi i32 [ %1910, %1901 ], [ 0, %1838 ]
  %1844 = phi i64 [ %1852, %1901 ], [ %1835, %1838 ]
  %1845 = phi i64 [ %1909, %1901 ], [ %1834, %1838 ]
  %1846 = phi i32 [ %1907, %1901 ], [ %1841, %1838 ]
  %1847 = sub i32 %1833, %1843
  %1848 = tail call i32 @llvm.smin.i32(i32 %1847, i32 0)
  %1849 = sub i32 %1847, %1848
  %1850 = zext i32 %1849 to i64
  %1851 = add nuw nsw i64 %1850, 1
  %1852 = add nsw i64 %1844, -1
  %1853 = icmp ult i32 %1849, 31
  br i1 %1853, label %1889, label %1854

1854:                                             ; preds = %1842
  %1855 = and i64 %1851, 8589934560
  %1856 = sub i64 %1845, %1855
  br label %1857

1857:                                             ; preds = %1857, %1854
  %1858 = phi i64 [ 0, %1854 ], [ %1881, %1857 ]
  %1859 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1854 ], [ %1877, %1857 ]
  %1860 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1854 ], [ %1878, %1857 ]
  %1861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1854 ], [ %1879, %1857 ]
  %1862 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1854 ], [ %1880, %1857 ]
  %1863 = sub i64 %1845, %1858
  %1864 = getelementptr inbounds i32, ptr %9, i64 %1863
  %1865 = getelementptr inbounds i32, ptr %1864, i64 -7
  %1866 = load <8 x i32>, ptr %1865, align 4, !tbaa !5
  %1867 = shufflevector <8 x i32> %1866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1868 = getelementptr inbounds i32, ptr %1864, i64 -15
  %1869 = load <8 x i32>, ptr %1868, align 4, !tbaa !5
  %1870 = shufflevector <8 x i32> %1869, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1871 = getelementptr inbounds i32, ptr %1864, i64 -23
  %1872 = load <8 x i32>, ptr %1871, align 4, !tbaa !5
  %1873 = shufflevector <8 x i32> %1872, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1874 = getelementptr inbounds i32, ptr %1864, i64 -31
  %1875 = load <8 x i32>, ptr %1874, align 4, !tbaa !5
  %1876 = shufflevector <8 x i32> %1875, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1877 = mul <8 x i32> %1867, %1859
  %1878 = mul <8 x i32> %1870, %1860
  %1879 = mul <8 x i32> %1873, %1861
  %1880 = mul <8 x i32> %1876, %1862
  %1881 = add nuw i64 %1858, 32
  %1882 = icmp eq i64 %1881, %1855
  br i1 %1882, label %1883, label %1857, !llvm.loop !80

1883:                                             ; preds = %1857
  %1884 = mul <8 x i32> %1878, %1877
  %1885 = mul <8 x i32> %1879, %1884
  %1886 = mul <8 x i32> %1880, %1885
  %1887 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1886)
  %1888 = icmp eq i64 %1851, %1855
  br i1 %1888, label %1901, label %1889

1889:                                             ; preds = %1842, %1883
  %1890 = phi i64 [ %1845, %1842 ], [ %1856, %1883 ]
  %1891 = phi i32 [ 1, %1842 ], [ %1887, %1883 ]
  br label %1892

1892:                                             ; preds = %1889, %1892
  %1893 = phi i64 [ %1898, %1892 ], [ %1890, %1889 ]
  %1894 = phi i32 [ %1897, %1892 ], [ %1891, %1889 ]
  %1895 = getelementptr inbounds i32, ptr %9, i64 %1893
  %1896 = load i32, ptr %1895, align 4, !tbaa !5
  %1897 = mul nsw i32 %1896, %1894
  %1898 = add nsw i64 %1893, -1
  %1899 = trunc i64 %1893 to i32
  %1900 = icmp sgt i32 %1899, 0
  br i1 %1900, label %1892, label %1901, !llvm.loop !81

1901:                                             ; preds = %1892, %1883
  %1902 = phi i32 [ %1887, %1883 ], [ %1897, %1892 ]
  %1903 = and i64 %1852, 4294967295
  %1904 = getelementptr inbounds i32, ptr %6, i64 %1903
  %1905 = load i32, ptr %1904, align 4, !tbaa !5
  %1906 = mul nsw i32 %1905, %1902
  %1907 = add nsw i32 %1906, %1846
  %1908 = icmp sgt i64 %1844, 2
  %1909 = add nsw i64 %1845, -1
  %1910 = add i32 %1843, 1
  br i1 %1908, label %1842, label %1911, !llvm.loop !82

1911:                                             ; preds = %1901, %1838
  %1912 = phi i32 [ %1841, %1838 ], [ %1907, %1901 ]
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds double, ptr %2, i64 %1913
  %1915 = load double, ptr %1914, align 8, !tbaa !18
  %1916 = getelementptr inbounds i8, ptr %1807, i64 %1913
  %1917 = load i8, ptr %1916, align 1, !tbaa !11
  %1918 = sitofp i16 %1839 to double
  %1919 = uitofp i8 %1917 to double
  %1920 = fmul fast double %1915, %1919
  %1921 = fadd fast double %1920, %1918
  %1922 = fptosi double %1921 to i16
  store i16 %1922, ptr %1809, align 2, !tbaa !78
  %1923 = add nuw nsw i32 %1840, 1
  br i1 %1832, label %1924, label %1971

1924:                                             ; preds = %1911
  %1925 = load i32, ptr %4, align 4, !tbaa !5
  %1926 = load i32, ptr %12, align 4, !tbaa !5
  %1927 = add nsw i32 %1926, -1
  %1928 = icmp slt i32 %1925, %1927
  br i1 %1928, label %1948, label %1929

1929:                                             ; preds = %1924
  %1930 = icmp eq i32 %1925, %1927
  br i1 %1930, label %1931, label %1964

1931:                                             ; preds = %1929
  store i32 0, ptr %4, align 4, !tbaa !5
  %1932 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1932, ptr %6, align 4, !tbaa !5
  br i1 %1837, label %1971, label %1933

1933:                                             ; preds = %1931, %1958
  %1934 = phi i64 [ %1962, %1958 ], [ 1, %1931 ]
  %1935 = getelementptr inbounds i32, ptr %4, i64 %1934
  %1936 = load i32, ptr %1935, align 4, !tbaa !5
  %1937 = getelementptr inbounds i32, ptr %12, i64 %1934
  %1938 = load i32, ptr %1937, align 4, !tbaa !5
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1936, %1939
  br i1 %1940, label %1941, label %1956

1941:                                             ; preds = %1933
  br i1 %1928, label %1948, label %1942

1942:                                             ; preds = %1941
  %1943 = getelementptr inbounds i32, ptr %7, i64 %1934
  %1944 = load i32, ptr %1943, align 4, !tbaa !5
  %1945 = getelementptr inbounds i32, ptr %6, i64 %1934
  %1946 = load i32, ptr %1945, align 4, !tbaa !5
  %1947 = add nsw i32 %1946, %1944
  store i32 %1947, ptr %1945, align 4, !tbaa !5
  br label %1966

1948:                                             ; preds = %1924, %1941
  %1949 = phi i32 [ %1936, %1941 ], [ %1925, %1924 ]
  %1950 = phi ptr [ %1935, %1941 ], [ %4, %1924 ]
  %1951 = phi i64 [ %1934, %1941 ], [ 0, %1924 ]
  %1952 = add nsw i32 %1949, 1
  store i32 %1952, ptr %1950, align 4, !tbaa !5
  %1953 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1954 = load i32, ptr %1953, align 4, !tbaa !5
  %1955 = getelementptr inbounds i32, ptr %6, i64 %1951
  br label %1966

1956:                                             ; preds = %1933
  %1957 = icmp eq i32 %1936, %1939
  br i1 %1957, label %1958, label %1964

1958:                                             ; preds = %1956
  store i32 0, ptr %1935, align 4, !tbaa !5
  %1959 = getelementptr inbounds i32, ptr %8, i64 %1934
  %1960 = load i32, ptr %1959, align 4, !tbaa !5
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1934
  store i32 %1960, ptr %1961, align 4, !tbaa !5
  %1962 = add nuw nsw i64 %1934, 1
  %1963 = icmp eq i64 %1962, %1835
  br i1 %1963, label %1971, label %1933, !llvm.loop !83

1964:                                             ; preds = %1929, %1956
  %1965 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

1966:                                             ; preds = %1942, %1948
  %1967 = phi ptr [ %1955, %1948 ], [ %1935, %1942 ]
  %1968 = phi i32 [ %1954, %1948 ], [ 1, %1942 ]
  %1969 = load i32, ptr %1967, align 4, !tbaa !5
  %1970 = add nsw i32 %1969, %1968
  store i32 %1970, ptr %1967, align 4, !tbaa !5
  br label %1971

1971:                                             ; preds = %1958, %1966, %1931, %1911
  %1972 = icmp eq i32 %1923, %5
  br i1 %1972, label %5390, label %1838, !llvm.loop !84

1973:                                             ; preds = %1821, %2111
  %1974 = phi i32 [ 0, %1821 ], [ %2058, %2111 ]
  %1975 = phi i32 [ 0, %1821 ], [ %2060, %2111 ]
  %1976 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1822, label %1977, label %2046

1977:                                             ; preds = %1973, %2036
  %1978 = phi i32 [ %2045, %2036 ], [ 0, %1973 ]
  %1979 = phi i64 [ %1987, %2036 ], [ %1826, %1973 ]
  %1980 = phi i64 [ %2044, %2036 ], [ %1825, %1973 ]
  %1981 = phi i32 [ %2042, %2036 ], [ %1976, %1973 ]
  %1982 = sub i32 %1824, %1978
  %1983 = tail call i32 @llvm.smin.i32(i32 %1982, i32 0)
  %1984 = sub i32 %1982, %1983
  %1985 = zext i32 %1984 to i64
  %1986 = add nuw nsw i64 %1985, 1
  %1987 = add nsw i64 %1979, -1
  %1988 = icmp ult i32 %1984, 31
  br i1 %1988, label %2024, label %1989

1989:                                             ; preds = %1977
  %1990 = and i64 %1986, 8589934560
  %1991 = sub i64 %1980, %1990
  br label %1992

1992:                                             ; preds = %1992, %1989
  %1993 = phi i64 [ 0, %1989 ], [ %2016, %1992 ]
  %1994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2012, %1992 ]
  %1995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2013, %1992 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2014, %1992 ]
  %1997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1989 ], [ %2015, %1992 ]
  %1998 = sub i64 %1980, %1993
  %1999 = getelementptr inbounds i32, ptr %11, i64 %1998
  %2000 = getelementptr inbounds i32, ptr %1999, i64 -7
  %2001 = load <8 x i32>, ptr %2000, align 4, !tbaa !5
  %2002 = shufflevector <8 x i32> %2001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2003 = getelementptr inbounds i32, ptr %1999, i64 -15
  %2004 = load <8 x i32>, ptr %2003, align 4, !tbaa !5
  %2005 = shufflevector <8 x i32> %2004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2006 = getelementptr inbounds i32, ptr %1999, i64 -23
  %2007 = load <8 x i32>, ptr %2006, align 4, !tbaa !5
  %2008 = shufflevector <8 x i32> %2007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2009 = getelementptr inbounds i32, ptr %1999, i64 -31
  %2010 = load <8 x i32>, ptr %2009, align 4, !tbaa !5
  %2011 = shufflevector <8 x i32> %2010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2012 = mul <8 x i32> %2002, %1994
  %2013 = mul <8 x i32> %2005, %1995
  %2014 = mul <8 x i32> %2008, %1996
  %2015 = mul <8 x i32> %2011, %1997
  %2016 = add nuw i64 %1993, 32
  %2017 = icmp eq i64 %2016, %1990
  br i1 %2017, label %2018, label %1992, !llvm.loop !85

2018:                                             ; preds = %1992
  %2019 = mul <8 x i32> %2013, %2012
  %2020 = mul <8 x i32> %2014, %2019
  %2021 = mul <8 x i32> %2015, %2020
  %2022 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2021)
  %2023 = icmp eq i64 %1986, %1990
  br i1 %2023, label %2036, label %2024

2024:                                             ; preds = %1977, %2018
  %2025 = phi i64 [ %1980, %1977 ], [ %1991, %2018 ]
  %2026 = phi i32 [ 1, %1977 ], [ %2022, %2018 ]
  br label %2027

2027:                                             ; preds = %2024, %2027
  %2028 = phi i64 [ %2033, %2027 ], [ %2025, %2024 ]
  %2029 = phi i32 [ %2032, %2027 ], [ %2026, %2024 ]
  %2030 = getelementptr inbounds i32, ptr %11, i64 %2028
  %2031 = load i32, ptr %2030, align 4, !tbaa !5
  %2032 = mul nsw i32 %2031, %2029
  %2033 = add nsw i64 %2028, -1
  %2034 = trunc i64 %2028 to i32
  %2035 = icmp sgt i32 %2034, 0
  br i1 %2035, label %2027, label %2036, !llvm.loop !86

2036:                                             ; preds = %2027, %2018
  %2037 = phi i32 [ %2022, %2018 ], [ %2032, %2027 ]
  %2038 = and i64 %1987, 4294967295
  %2039 = getelementptr inbounds i32, ptr %6, i64 %2038
  %2040 = load i32, ptr %2039, align 4, !tbaa !5
  %2041 = mul nsw i32 %2040, %2037
  %2042 = add nsw i32 %2041, %1981
  %2043 = icmp sgt i64 %1979, 2
  %2044 = add nsw i64 %1980, -1
  %2045 = add i32 %1978, 1
  br i1 %2043, label %1977, label %2046, !llvm.loop !87

2046:                                             ; preds = %2036, %1973
  %2047 = phi i32 [ %1976, %1973 ], [ %2042, %2036 ]
  %2048 = icmp slt i32 %2047, %5
  br i1 %2048, label %2051, label %2049

2049:                                             ; preds = %2046
  %2050 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

2051:                                             ; preds = %2046
  %2052 = sext i32 %2047 to i64
  %2053 = getelementptr inbounds i8, ptr %1807, i64 %2052
  %2054 = load i8, ptr %2053, align 1, !tbaa !11
  %2055 = shl i32 %1974, 16
  %2056 = ashr exact i32 %2055, 16
  %2057 = zext i8 %2054 to i32
  %2058 = add nsw i32 %2056, %2057
  %2059 = trunc i32 %2058 to i16
  store i16 %2059, ptr %1809, align 2, !tbaa !78
  %2060 = add nuw nsw i32 %1975, 1
  br i1 %1823, label %2061, label %2111

2061:                                             ; preds = %2051
  %2062 = load i32, ptr %4, align 4, !tbaa !5
  %2063 = load i32, ptr %12, align 4, !tbaa !5
  %2064 = add nsw i32 %2063, -1
  %2065 = icmp slt i32 %2062, %2064
  br i1 %2065, label %2088, label %2066

2066:                                             ; preds = %2061
  %2067 = icmp eq i32 %2062, %2064
  br i1 %2067, label %2068, label %2104

2068:                                             ; preds = %2066
  store i32 0, ptr %4, align 4, !tbaa !5
  %2069 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2069, ptr %6, align 4, !tbaa !5
  br i1 %1828, label %2111, label %2070

2070:                                             ; preds = %2068, %2098
  %2071 = phi i64 [ %2102, %2098 ], [ 1, %2068 ]
  %2072 = getelementptr inbounds i32, ptr %4, i64 %2071
  %2073 = load i32, ptr %2072, align 4, !tbaa !5
  %2074 = getelementptr inbounds i32, ptr %12, i64 %2071
  %2075 = load i32, ptr %2074, align 4, !tbaa !5
  %2076 = add nsw i32 %2075, -1
  %2077 = icmp slt i32 %2073, %2076
  br i1 %2077, label %2078, label %2096

2078:                                             ; preds = %2070
  br i1 %2065, label %2088, label %2079

2079:                                             ; preds = %2078
  %2080 = shl i64 %2071, 32
  %2081 = add i64 %2080, -4294967296
  %2082 = ashr exact i64 %2081, 32
  %2083 = getelementptr inbounds i32, ptr %7, i64 %2082
  %2084 = load i32, ptr %2083, align 4, !tbaa !5
  %2085 = getelementptr inbounds i32, ptr %6, i64 %2071
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = add nsw i32 %2086, %2084
  store i32 %2087, ptr %2085, align 4, !tbaa !5
  br label %2106

2088:                                             ; preds = %2061, %2078
  %2089 = phi i32 [ %2073, %2078 ], [ %2062, %2061 ]
  %2090 = phi ptr [ %2072, %2078 ], [ %4, %2061 ]
  %2091 = phi i64 [ %2071, %2078 ], [ 0, %2061 ]
  %2092 = add nsw i32 %2089, 1
  store i32 %2092, ptr %2090, align 4, !tbaa !5
  %2093 = getelementptr inbounds i32, ptr %7, i64 %2091
  %2094 = load i32, ptr %2093, align 4, !tbaa !5
  %2095 = getelementptr inbounds i32, ptr %6, i64 %2091
  br label %2106

2096:                                             ; preds = %2070
  %2097 = icmp eq i32 %2073, %2076
  br i1 %2097, label %2098, label %2104

2098:                                             ; preds = %2096
  store i32 0, ptr %2072, align 4, !tbaa !5
  %2099 = getelementptr inbounds i32, ptr %8, i64 %2071
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = getelementptr inbounds i32, ptr %6, i64 %2071
  store i32 %2100, ptr %2101, align 4, !tbaa !5
  %2102 = add nuw nsw i64 %2071, 1
  %2103 = icmp eq i64 %2102, %1826
  br i1 %2103, label %2111, label %2070, !llvm.loop !88

2104:                                             ; preds = %2066, %2096
  %2105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2106:                                             ; preds = %2079, %2088
  %2107 = phi ptr [ %2095, %2088 ], [ %2072, %2079 ]
  %2108 = phi i32 [ %2094, %2088 ], [ 1, %2079 ]
  %2109 = load i32, ptr %2107, align 4, !tbaa !5
  %2110 = add nsw i32 %2109, %2108
  store i32 %2110, ptr %2107, align 4, !tbaa !5
  br label %2111

2111:                                             ; preds = %2098, %2106, %2068, %2051
  %2112 = icmp eq i32 %2060, %5
  br i1 %2112, label %5390, label %1973, !llvm.loop !89

2113:                                             ; preds = %1814
  %2114 = getelementptr inbounds i32, ptr %3, i64 %19
  %2115 = load i32, ptr %2114, align 4, !tbaa !5
  %2116 = icmp eq i32 %2115, 0
  %2117 = icmp sgt i32 %5, 0
  br i1 %2116, label %2127, label %2118

2118:                                             ; preds = %2113
  br i1 %2117, label %2119, label %5390

2119:                                             ; preds = %2118
  %2120 = icmp sgt i32 %13, 1
  %2121 = icmp sgt i32 %13, 0
  %2122 = add i32 %13, -2
  %2123 = zext i32 %2122 to i64
  %2124 = zext i32 %13 to i64
  %2125 = add nuw i32 %5, 1
  %2126 = icmp eq i32 %13, 1
  br label %2266

2127:                                             ; preds = %2113
  br i1 %2117, label %2128, label %5390

2128:                                             ; preds = %2127
  %2129 = icmp sgt i32 %13, 1
  %2130 = icmp sgt i32 %13, 0
  %2131 = add i32 %13, -2
  %2132 = zext i32 %2131 to i64
  %2133 = zext i32 %13 to i64
  %2134 = add nuw i32 %5, 1
  %2135 = icmp eq i32 %13, 1
  br label %2136

2136:                                             ; preds = %2128, %2264
  %2137 = phi i16 [ 0, %2128 ], [ %2215, %2264 ]
  %2138 = phi i32 [ 0, %2128 ], [ %2216, %2264 ]
  %2139 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2129, label %2140, label %2209

2140:                                             ; preds = %2136, %2199
  %2141 = phi i32 [ %2208, %2199 ], [ 0, %2136 ]
  %2142 = phi i64 [ %2150, %2199 ], [ %2133, %2136 ]
  %2143 = phi i64 [ %2207, %2199 ], [ %2132, %2136 ]
  %2144 = phi i32 [ %2205, %2199 ], [ %2139, %2136 ]
  %2145 = sub i32 %2131, %2141
  %2146 = tail call i32 @llvm.smin.i32(i32 %2145, i32 0)
  %2147 = sub i32 %2145, %2146
  %2148 = zext i32 %2147 to i64
  %2149 = add nuw nsw i64 %2148, 1
  %2150 = add nsw i64 %2142, -1
  %2151 = icmp ult i32 %2147, 31
  br i1 %2151, label %2187, label %2152

2152:                                             ; preds = %2140
  %2153 = and i64 %2149, 8589934560
  %2154 = sub i64 %2143, %2153
  br label %2155

2155:                                             ; preds = %2155, %2152
  %2156 = phi i64 [ 0, %2152 ], [ %2179, %2155 ]
  %2157 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2152 ], [ %2175, %2155 ]
  %2158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2152 ], [ %2176, %2155 ]
  %2159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2152 ], [ %2177, %2155 ]
  %2160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2152 ], [ %2178, %2155 ]
  %2161 = sub i64 %2143, %2156
  %2162 = getelementptr inbounds i32, ptr %9, i64 %2161
  %2163 = getelementptr inbounds i32, ptr %2162, i64 -7
  %2164 = load <8 x i32>, ptr %2163, align 4, !tbaa !5
  %2165 = shufflevector <8 x i32> %2164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2166 = getelementptr inbounds i32, ptr %2162, i64 -15
  %2167 = load <8 x i32>, ptr %2166, align 4, !tbaa !5
  %2168 = shufflevector <8 x i32> %2167, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2169 = getelementptr inbounds i32, ptr %2162, i64 -23
  %2170 = load <8 x i32>, ptr %2169, align 4, !tbaa !5
  %2171 = shufflevector <8 x i32> %2170, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2172 = getelementptr inbounds i32, ptr %2162, i64 -31
  %2173 = load <8 x i32>, ptr %2172, align 4, !tbaa !5
  %2174 = shufflevector <8 x i32> %2173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2175 = mul <8 x i32> %2165, %2157
  %2176 = mul <8 x i32> %2168, %2158
  %2177 = mul <8 x i32> %2171, %2159
  %2178 = mul <8 x i32> %2174, %2160
  %2179 = add nuw i64 %2156, 32
  %2180 = icmp eq i64 %2179, %2153
  br i1 %2180, label %2181, label %2155, !llvm.loop !90

2181:                                             ; preds = %2155
  %2182 = mul <8 x i32> %2176, %2175
  %2183 = mul <8 x i32> %2177, %2182
  %2184 = mul <8 x i32> %2178, %2183
  %2185 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2184)
  %2186 = icmp eq i64 %2149, %2153
  br i1 %2186, label %2199, label %2187

2187:                                             ; preds = %2140, %2181
  %2188 = phi i64 [ %2143, %2140 ], [ %2154, %2181 ]
  %2189 = phi i32 [ 1, %2140 ], [ %2185, %2181 ]
  br label %2190

2190:                                             ; preds = %2187, %2190
  %2191 = phi i64 [ %2196, %2190 ], [ %2188, %2187 ]
  %2192 = phi i32 [ %2195, %2190 ], [ %2189, %2187 ]
  %2193 = getelementptr inbounds i32, ptr %9, i64 %2191
  %2194 = load i32, ptr %2193, align 4, !tbaa !5
  %2195 = mul nsw i32 %2194, %2192
  %2196 = add nsw i64 %2191, -1
  %2197 = trunc i64 %2191 to i32
  %2198 = icmp sgt i32 %2197, 0
  br i1 %2198, label %2190, label %2199, !llvm.loop !91

2199:                                             ; preds = %2190, %2181
  %2200 = phi i32 [ %2185, %2181 ], [ %2195, %2190 ]
  %2201 = and i64 %2150, 4294967295
  %2202 = getelementptr inbounds i32, ptr %6, i64 %2201
  %2203 = load i32, ptr %2202, align 4, !tbaa !5
  %2204 = mul nsw i32 %2203, %2200
  %2205 = add nsw i32 %2204, %2144
  %2206 = icmp sgt i64 %2142, 2
  %2207 = add nsw i64 %2143, -1
  %2208 = add i32 %2141, 1
  br i1 %2206, label %2140, label %2209, !llvm.loop !92

2209:                                             ; preds = %2199, %2136
  %2210 = phi i32 [ %2139, %2136 ], [ %2205, %2199 ]
  %2211 = sext i32 %2210 to i64
  %2212 = getelementptr inbounds i8, ptr %1807, i64 %2211
  %2213 = load i8, ptr %2212, align 1, !tbaa !11
  %2214 = zext i8 %2213 to i16
  %2215 = add i16 %2137, %2214
  store i16 %2215, ptr %1809, align 2, !tbaa !78
  %2216 = add nuw nsw i32 %2138, 1
  br i1 %2130, label %2217, label %2264

2217:                                             ; preds = %2209
  %2218 = load i32, ptr %4, align 4, !tbaa !5
  %2219 = load i32, ptr %12, align 4, !tbaa !5
  %2220 = add nsw i32 %2219, -1
  %2221 = icmp slt i32 %2218, %2220
  br i1 %2221, label %2241, label %2222

2222:                                             ; preds = %2217
  %2223 = icmp eq i32 %2218, %2220
  br i1 %2223, label %2224, label %2257

2224:                                             ; preds = %2222
  store i32 0, ptr %4, align 4, !tbaa !5
  %2225 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2225, ptr %6, align 4, !tbaa !5
  br i1 %2135, label %2264, label %2226

2226:                                             ; preds = %2224, %2251
  %2227 = phi i64 [ %2255, %2251 ], [ 1, %2224 ]
  %2228 = getelementptr inbounds i32, ptr %4, i64 %2227
  %2229 = load i32, ptr %2228, align 4, !tbaa !5
  %2230 = getelementptr inbounds i32, ptr %12, i64 %2227
  %2231 = load i32, ptr %2230, align 4, !tbaa !5
  %2232 = add nsw i32 %2231, -1
  %2233 = icmp slt i32 %2229, %2232
  br i1 %2233, label %2234, label %2249

2234:                                             ; preds = %2226
  br i1 %2221, label %2241, label %2235

2235:                                             ; preds = %2234
  %2236 = getelementptr inbounds i32, ptr %7, i64 %2227
  %2237 = load i32, ptr %2236, align 4, !tbaa !5
  %2238 = getelementptr inbounds i32, ptr %6, i64 %2227
  %2239 = load i32, ptr %2238, align 4, !tbaa !5
  %2240 = add nsw i32 %2239, %2237
  store i32 %2240, ptr %2238, align 4, !tbaa !5
  br label %2259

2241:                                             ; preds = %2217, %2234
  %2242 = phi i32 [ %2229, %2234 ], [ %2218, %2217 ]
  %2243 = phi ptr [ %2228, %2234 ], [ %4, %2217 ]
  %2244 = phi i64 [ %2227, %2234 ], [ 0, %2217 ]
  %2245 = add nsw i32 %2242, 1
  store i32 %2245, ptr %2243, align 4, !tbaa !5
  %2246 = getelementptr inbounds i32, ptr %7, i64 %2244
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = getelementptr inbounds i32, ptr %6, i64 %2244
  br label %2259

2249:                                             ; preds = %2226
  %2250 = icmp eq i32 %2229, %2232
  br i1 %2250, label %2251, label %2257

2251:                                             ; preds = %2249
  store i32 0, ptr %2228, align 4, !tbaa !5
  %2252 = getelementptr inbounds i32, ptr %8, i64 %2227
  %2253 = load i32, ptr %2252, align 4, !tbaa !5
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2227
  store i32 %2253, ptr %2254, align 4, !tbaa !5
  %2255 = add nuw nsw i64 %2227, 1
  %2256 = icmp eq i64 %2255, %2133
  br i1 %2256, label %2264, label %2226, !llvm.loop !93

2257:                                             ; preds = %2222, %2249
  %2258 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2259:                                             ; preds = %2235, %2241
  %2260 = phi ptr [ %2248, %2241 ], [ %2228, %2235 ]
  %2261 = phi i32 [ %2247, %2241 ], [ 1, %2235 ]
  %2262 = load i32, ptr %2260, align 4, !tbaa !5
  %2263 = add nsw i32 %2262, %2261
  store i32 %2263, ptr %2260, align 4, !tbaa !5
  br label %2264

2264:                                             ; preds = %2251, %2259, %2224, %2209
  %2265 = icmp eq i32 %2216, %5
  br i1 %2265, label %5390, label %2136, !llvm.loop !94

2266:                                             ; preds = %2119, %2401
  %2267 = phi i16 [ 0, %2119 ], [ %2349, %2401 ]
  %2268 = phi i32 [ 0, %2119 ], [ %2350, %2401 ]
  %2269 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2120, label %2270, label %2339

2270:                                             ; preds = %2266, %2329
  %2271 = phi i32 [ %2338, %2329 ], [ 0, %2266 ]
  %2272 = phi i64 [ %2280, %2329 ], [ %2124, %2266 ]
  %2273 = phi i64 [ %2337, %2329 ], [ %2123, %2266 ]
  %2274 = phi i32 [ %2335, %2329 ], [ %2269, %2266 ]
  %2275 = sub i32 %2122, %2271
  %2276 = tail call i32 @llvm.smin.i32(i32 %2275, i32 0)
  %2277 = sub i32 %2275, %2276
  %2278 = zext i32 %2277 to i64
  %2279 = add nuw nsw i64 %2278, 1
  %2280 = add nsw i64 %2272, -1
  %2281 = icmp ult i32 %2277, 31
  br i1 %2281, label %2317, label %2282

2282:                                             ; preds = %2270
  %2283 = and i64 %2279, 8589934560
  %2284 = sub i64 %2273, %2283
  br label %2285

2285:                                             ; preds = %2285, %2282
  %2286 = phi i64 [ 0, %2282 ], [ %2309, %2285 ]
  %2287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2282 ], [ %2305, %2285 ]
  %2288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2282 ], [ %2306, %2285 ]
  %2289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2282 ], [ %2307, %2285 ]
  %2290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2282 ], [ %2308, %2285 ]
  %2291 = sub i64 %2273, %2286
  %2292 = getelementptr inbounds i32, ptr %11, i64 %2291
  %2293 = getelementptr inbounds i32, ptr %2292, i64 -7
  %2294 = load <8 x i32>, ptr %2293, align 4, !tbaa !5
  %2295 = shufflevector <8 x i32> %2294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2296 = getelementptr inbounds i32, ptr %2292, i64 -15
  %2297 = load <8 x i32>, ptr %2296, align 4, !tbaa !5
  %2298 = shufflevector <8 x i32> %2297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2299 = getelementptr inbounds i32, ptr %2292, i64 -23
  %2300 = load <8 x i32>, ptr %2299, align 4, !tbaa !5
  %2301 = shufflevector <8 x i32> %2300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2302 = getelementptr inbounds i32, ptr %2292, i64 -31
  %2303 = load <8 x i32>, ptr %2302, align 4, !tbaa !5
  %2304 = shufflevector <8 x i32> %2303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2305 = mul <8 x i32> %2295, %2287
  %2306 = mul <8 x i32> %2298, %2288
  %2307 = mul <8 x i32> %2301, %2289
  %2308 = mul <8 x i32> %2304, %2290
  %2309 = add nuw i64 %2286, 32
  %2310 = icmp eq i64 %2309, %2283
  br i1 %2310, label %2311, label %2285, !llvm.loop !95

2311:                                             ; preds = %2285
  %2312 = mul <8 x i32> %2306, %2305
  %2313 = mul <8 x i32> %2307, %2312
  %2314 = mul <8 x i32> %2308, %2313
  %2315 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2314)
  %2316 = icmp eq i64 %2279, %2283
  br i1 %2316, label %2329, label %2317

2317:                                             ; preds = %2270, %2311
  %2318 = phi i64 [ %2273, %2270 ], [ %2284, %2311 ]
  %2319 = phi i32 [ 1, %2270 ], [ %2315, %2311 ]
  br label %2320

2320:                                             ; preds = %2317, %2320
  %2321 = phi i64 [ %2326, %2320 ], [ %2318, %2317 ]
  %2322 = phi i32 [ %2325, %2320 ], [ %2319, %2317 ]
  %2323 = getelementptr inbounds i32, ptr %11, i64 %2321
  %2324 = load i32, ptr %2323, align 4, !tbaa !5
  %2325 = mul nsw i32 %2324, %2322
  %2326 = add nsw i64 %2321, -1
  %2327 = trunc i64 %2321 to i32
  %2328 = icmp sgt i32 %2327, 0
  br i1 %2328, label %2320, label %2329, !llvm.loop !96

2329:                                             ; preds = %2320, %2311
  %2330 = phi i32 [ %2315, %2311 ], [ %2325, %2320 ]
  %2331 = and i64 %2280, 4294967295
  %2332 = getelementptr inbounds i32, ptr %6, i64 %2331
  %2333 = load i32, ptr %2332, align 4, !tbaa !5
  %2334 = mul nsw i32 %2333, %2330
  %2335 = add nsw i32 %2334, %2274
  %2336 = icmp sgt i64 %2272, 2
  %2337 = add nsw i64 %2273, -1
  %2338 = add i32 %2271, 1
  br i1 %2336, label %2270, label %2339, !llvm.loop !97

2339:                                             ; preds = %2329, %2266
  %2340 = phi i32 [ %2269, %2266 ], [ %2335, %2329 ]
  %2341 = icmp slt i32 %2340, %5
  br i1 %2341, label %2344, label %2342

2342:                                             ; preds = %2339
  %2343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

2344:                                             ; preds = %2339
  %2345 = sext i32 %2340 to i64
  %2346 = getelementptr inbounds i8, ptr %1807, i64 %2345
  %2347 = load i8, ptr %2346, align 1, !tbaa !11
  %2348 = zext i8 %2347 to i16
  %2349 = add i16 %2267, %2348
  store i16 %2349, ptr %1809, align 2, !tbaa !78
  %2350 = add nuw nsw i32 %2268, 1
  br i1 %2121, label %2351, label %2401

2351:                                             ; preds = %2344
  %2352 = load i32, ptr %4, align 4, !tbaa !5
  %2353 = load i32, ptr %12, align 4, !tbaa !5
  %2354 = add nsw i32 %2353, -1
  %2355 = icmp slt i32 %2352, %2354
  br i1 %2355, label %2378, label %2356

2356:                                             ; preds = %2351
  %2357 = icmp eq i32 %2352, %2354
  br i1 %2357, label %2358, label %2394

2358:                                             ; preds = %2356
  store i32 0, ptr %4, align 4, !tbaa !5
  %2359 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2359, ptr %6, align 4, !tbaa !5
  br i1 %2126, label %2401, label %2360

2360:                                             ; preds = %2358, %2388
  %2361 = phi i64 [ %2392, %2388 ], [ 1, %2358 ]
  %2362 = getelementptr inbounds i32, ptr %4, i64 %2361
  %2363 = load i32, ptr %2362, align 4, !tbaa !5
  %2364 = getelementptr inbounds i32, ptr %12, i64 %2361
  %2365 = load i32, ptr %2364, align 4, !tbaa !5
  %2366 = add nsw i32 %2365, -1
  %2367 = icmp slt i32 %2363, %2366
  br i1 %2367, label %2368, label %2386

2368:                                             ; preds = %2360
  br i1 %2355, label %2378, label %2369

2369:                                             ; preds = %2368
  %2370 = shl i64 %2361, 32
  %2371 = add i64 %2370, -4294967296
  %2372 = ashr exact i64 %2371, 32
  %2373 = getelementptr inbounds i32, ptr %7, i64 %2372
  %2374 = load i32, ptr %2373, align 4, !tbaa !5
  %2375 = getelementptr inbounds i32, ptr %6, i64 %2361
  %2376 = load i32, ptr %2375, align 4, !tbaa !5
  %2377 = add nsw i32 %2376, %2374
  store i32 %2377, ptr %2375, align 4, !tbaa !5
  br label %2396

2378:                                             ; preds = %2351, %2368
  %2379 = phi i32 [ %2363, %2368 ], [ %2352, %2351 ]
  %2380 = phi ptr [ %2362, %2368 ], [ %4, %2351 ]
  %2381 = phi i64 [ %2361, %2368 ], [ 0, %2351 ]
  %2382 = add nsw i32 %2379, 1
  store i32 %2382, ptr %2380, align 4, !tbaa !5
  %2383 = getelementptr inbounds i32, ptr %7, i64 %2381
  %2384 = load i32, ptr %2383, align 4, !tbaa !5
  %2385 = getelementptr inbounds i32, ptr %6, i64 %2381
  br label %2396

2386:                                             ; preds = %2360
  %2387 = icmp eq i32 %2363, %2366
  br i1 %2387, label %2388, label %2394

2388:                                             ; preds = %2386
  store i32 0, ptr %2362, align 4, !tbaa !5
  %2389 = getelementptr inbounds i32, ptr %8, i64 %2361
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = getelementptr inbounds i32, ptr %6, i64 %2361
  store i32 %2390, ptr %2391, align 4, !tbaa !5
  %2392 = add nuw nsw i64 %2361, 1
  %2393 = icmp eq i64 %2392, %2124
  br i1 %2393, label %2401, label %2360, !llvm.loop !98

2394:                                             ; preds = %2356, %2386
  %2395 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2396:                                             ; preds = %2369, %2378
  %2397 = phi ptr [ %2385, %2378 ], [ %2362, %2369 ]
  %2398 = phi i32 [ %2384, %2378 ], [ 1, %2369 ]
  %2399 = load i32, ptr %2397, align 4, !tbaa !5
  %2400 = add nsw i32 %2399, %2398
  store i32 %2400, ptr %2397, align 4, !tbaa !5
  br label %2401

2401:                                             ; preds = %2388, %2396, %2358, %2344
  %2402 = icmp eq i32 %2350, %5
  br i1 %2402, label %5390, label %2266, !llvm.loop !99

2403:                                             ; preds = %1814
  %2404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 65, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

2405:                                             ; preds = %18
  %2406 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2407 = load ptr, ptr %2406, align 8, !tbaa !9
  %2408 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2409 = load ptr, ptr %2408, align 8, !tbaa !9
  store i32 0, ptr %2409, align 4, !tbaa !5
  %2410 = icmp eq i32 %13, 0
  br i1 %2410, label %2411, label %2414

2411:                                             ; preds = %2405
  %2412 = load i8, ptr %2407, align 1, !tbaa !11
  %2413 = zext i8 %2412 to i32
  store i32 %2413, ptr %2409, align 4, !tbaa !5
  br label %5390

2414:                                             ; preds = %2405
  switch i32 %1, label %3000 [
    i32 1, label %2415
    i32 0, label %2710
  ]

2415:                                             ; preds = %2414
  %2416 = getelementptr inbounds i32, ptr %3, i64 %19
  %2417 = load i32, ptr %2416, align 4, !tbaa !5
  %2418 = icmp eq i32 %2417, 0
  %2419 = icmp sgt i32 %5, 0
  br i1 %2418, label %2429, label %2420

2420:                                             ; preds = %2415
  br i1 %2419, label %2421, label %5390

2421:                                             ; preds = %2420
  %2422 = icmp sgt i32 %13, 1
  %2423 = icmp sgt i32 %13, 0
  %2424 = add i32 %13, -2
  %2425 = zext i32 %2424 to i64
  %2426 = zext i32 %13 to i64
  %2427 = add nuw i32 %5, 1
  %2428 = icmp eq i32 %13, 1
  br label %2573

2429:                                             ; preds = %2415
  br i1 %2419, label %2430, label %5390

2430:                                             ; preds = %2429
  %2431 = icmp sgt i32 %13, 1
  %2432 = icmp sgt i32 %13, 0
  %2433 = add i32 %13, -2
  %2434 = zext i32 %2433 to i64
  %2435 = zext i32 %13 to i64
  %2436 = add nuw i32 %5, 1
  %2437 = icmp eq i32 %13, 1
  br label %2438

2438:                                             ; preds = %2430, %2571
  %2439 = phi i32 [ 0, %2430 ], [ %2523, %2571 ]
  %2440 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2431, label %2441, label %2510

2441:                                             ; preds = %2438, %2500
  %2442 = phi i32 [ %2509, %2500 ], [ 0, %2438 ]
  %2443 = phi i64 [ %2451, %2500 ], [ %2435, %2438 ]
  %2444 = phi i64 [ %2508, %2500 ], [ %2434, %2438 ]
  %2445 = phi i32 [ %2506, %2500 ], [ %2440, %2438 ]
  %2446 = sub i32 %2433, %2442
  %2447 = tail call i32 @llvm.smin.i32(i32 %2446, i32 0)
  %2448 = sub i32 %2446, %2447
  %2449 = zext i32 %2448 to i64
  %2450 = add nuw nsw i64 %2449, 1
  %2451 = add nsw i64 %2443, -1
  %2452 = icmp ult i32 %2448, 31
  br i1 %2452, label %2488, label %2453

2453:                                             ; preds = %2441
  %2454 = and i64 %2450, 8589934560
  %2455 = sub i64 %2444, %2454
  br label %2456

2456:                                             ; preds = %2456, %2453
  %2457 = phi i64 [ 0, %2453 ], [ %2480, %2456 ]
  %2458 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2453 ], [ %2476, %2456 ]
  %2459 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2453 ], [ %2477, %2456 ]
  %2460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2453 ], [ %2478, %2456 ]
  %2461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2453 ], [ %2479, %2456 ]
  %2462 = sub i64 %2444, %2457
  %2463 = getelementptr inbounds i32, ptr %9, i64 %2462
  %2464 = getelementptr inbounds i32, ptr %2463, i64 -7
  %2465 = load <8 x i32>, ptr %2464, align 4, !tbaa !5
  %2466 = shufflevector <8 x i32> %2465, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2467 = getelementptr inbounds i32, ptr %2463, i64 -15
  %2468 = load <8 x i32>, ptr %2467, align 4, !tbaa !5
  %2469 = shufflevector <8 x i32> %2468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2470 = getelementptr inbounds i32, ptr %2463, i64 -23
  %2471 = load <8 x i32>, ptr %2470, align 4, !tbaa !5
  %2472 = shufflevector <8 x i32> %2471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2473 = getelementptr inbounds i32, ptr %2463, i64 -31
  %2474 = load <8 x i32>, ptr %2473, align 4, !tbaa !5
  %2475 = shufflevector <8 x i32> %2474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2476 = mul <8 x i32> %2466, %2458
  %2477 = mul <8 x i32> %2469, %2459
  %2478 = mul <8 x i32> %2472, %2460
  %2479 = mul <8 x i32> %2475, %2461
  %2480 = add nuw i64 %2457, 32
  %2481 = icmp eq i64 %2480, %2454
  br i1 %2481, label %2482, label %2456, !llvm.loop !100

2482:                                             ; preds = %2456
  %2483 = mul <8 x i32> %2477, %2476
  %2484 = mul <8 x i32> %2478, %2483
  %2485 = mul <8 x i32> %2479, %2484
  %2486 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2485)
  %2487 = icmp eq i64 %2450, %2454
  br i1 %2487, label %2500, label %2488

2488:                                             ; preds = %2441, %2482
  %2489 = phi i64 [ %2444, %2441 ], [ %2455, %2482 ]
  %2490 = phi i32 [ 1, %2441 ], [ %2486, %2482 ]
  br label %2491

2491:                                             ; preds = %2488, %2491
  %2492 = phi i64 [ %2497, %2491 ], [ %2489, %2488 ]
  %2493 = phi i32 [ %2496, %2491 ], [ %2490, %2488 ]
  %2494 = getelementptr inbounds i32, ptr %9, i64 %2492
  %2495 = load i32, ptr %2494, align 4, !tbaa !5
  %2496 = mul nsw i32 %2495, %2493
  %2497 = add nsw i64 %2492, -1
  %2498 = trunc i64 %2492 to i32
  %2499 = icmp sgt i32 %2498, 0
  br i1 %2499, label %2491, label %2500, !llvm.loop !101

2500:                                             ; preds = %2491, %2482
  %2501 = phi i32 [ %2486, %2482 ], [ %2496, %2491 ]
  %2502 = and i64 %2451, 4294967295
  %2503 = getelementptr inbounds i32, ptr %6, i64 %2502
  %2504 = load i32, ptr %2503, align 4, !tbaa !5
  %2505 = mul nsw i32 %2504, %2501
  %2506 = add nsw i32 %2505, %2445
  %2507 = icmp sgt i64 %2443, 2
  %2508 = add nsw i64 %2444, -1
  %2509 = add i32 %2442, 1
  br i1 %2507, label %2441, label %2510, !llvm.loop !102

2510:                                             ; preds = %2500, %2438
  %2511 = phi i32 [ %2440, %2438 ], [ %2506, %2500 ]
  %2512 = sext i32 %2511 to i64
  %2513 = getelementptr inbounds double, ptr %2, i64 %2512
  %2514 = load double, ptr %2513, align 8, !tbaa !18
  %2515 = getelementptr inbounds i8, ptr %2407, i64 %2512
  %2516 = load i8, ptr %2515, align 1, !tbaa !11
  %2517 = load i32, ptr %2409, align 4, !tbaa !5
  %2518 = sitofp i32 %2517 to double
  %2519 = uitofp i8 %2516 to double
  %2520 = fmul fast double %2514, %2519
  %2521 = fadd fast double %2520, %2518
  %2522 = fptosi double %2521 to i32
  store i32 %2522, ptr %2409, align 4, !tbaa !5
  %2523 = add nuw nsw i32 %2439, 1
  br i1 %2432, label %2524, label %2571

2524:                                             ; preds = %2510
  %2525 = load i32, ptr %4, align 4, !tbaa !5
  %2526 = load i32, ptr %12, align 4, !tbaa !5
  %2527 = add nsw i32 %2526, -1
  %2528 = icmp slt i32 %2525, %2527
  br i1 %2528, label %2548, label %2529

2529:                                             ; preds = %2524
  %2530 = icmp eq i32 %2525, %2527
  br i1 %2530, label %2531, label %2564

2531:                                             ; preds = %2529
  store i32 0, ptr %4, align 4, !tbaa !5
  %2532 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2532, ptr %6, align 4, !tbaa !5
  br i1 %2437, label %2571, label %2533

2533:                                             ; preds = %2531, %2558
  %2534 = phi i64 [ %2562, %2558 ], [ 1, %2531 ]
  %2535 = getelementptr inbounds i32, ptr %4, i64 %2534
  %2536 = load i32, ptr %2535, align 4, !tbaa !5
  %2537 = getelementptr inbounds i32, ptr %12, i64 %2534
  %2538 = load i32, ptr %2537, align 4, !tbaa !5
  %2539 = add nsw i32 %2538, -1
  %2540 = icmp slt i32 %2536, %2539
  br i1 %2540, label %2541, label %2556

2541:                                             ; preds = %2533
  br i1 %2528, label %2548, label %2542

2542:                                             ; preds = %2541
  %2543 = getelementptr inbounds i32, ptr %7, i64 %2534
  %2544 = load i32, ptr %2543, align 4, !tbaa !5
  %2545 = getelementptr inbounds i32, ptr %6, i64 %2534
  %2546 = load i32, ptr %2545, align 4, !tbaa !5
  %2547 = add nsw i32 %2546, %2544
  store i32 %2547, ptr %2545, align 4, !tbaa !5
  br label %2566

2548:                                             ; preds = %2524, %2541
  %2549 = phi i32 [ %2536, %2541 ], [ %2525, %2524 ]
  %2550 = phi ptr [ %2535, %2541 ], [ %4, %2524 ]
  %2551 = phi i64 [ %2534, %2541 ], [ 0, %2524 ]
  %2552 = add nsw i32 %2549, 1
  store i32 %2552, ptr %2550, align 4, !tbaa !5
  %2553 = getelementptr inbounds i32, ptr %7, i64 %2551
  %2554 = load i32, ptr %2553, align 4, !tbaa !5
  %2555 = getelementptr inbounds i32, ptr %6, i64 %2551
  br label %2566

2556:                                             ; preds = %2533
  %2557 = icmp eq i32 %2536, %2539
  br i1 %2557, label %2558, label %2564

2558:                                             ; preds = %2556
  store i32 0, ptr %2535, align 4, !tbaa !5
  %2559 = getelementptr inbounds i32, ptr %8, i64 %2534
  %2560 = load i32, ptr %2559, align 4, !tbaa !5
  %2561 = getelementptr inbounds i32, ptr %6, i64 %2534
  store i32 %2560, ptr %2561, align 4, !tbaa !5
  %2562 = add nuw nsw i64 %2534, 1
  %2563 = icmp eq i64 %2562, %2435
  br i1 %2563, label %2571, label %2533, !llvm.loop !103

2564:                                             ; preds = %2529, %2556
  %2565 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2566:                                             ; preds = %2542, %2548
  %2567 = phi ptr [ %2555, %2548 ], [ %2535, %2542 ]
  %2568 = phi i32 [ %2554, %2548 ], [ 1, %2542 ]
  %2569 = load i32, ptr %2567, align 4, !tbaa !5
  %2570 = add nsw i32 %2569, %2568
  store i32 %2570, ptr %2567, align 4, !tbaa !5
  br label %2571

2571:                                             ; preds = %2558, %2566, %2531, %2510
  %2572 = icmp eq i32 %2523, %5
  br i1 %2572, label %5390, label %2438, !llvm.loop !104

2573:                                             ; preds = %2421, %2708
  %2574 = phi i32 [ 0, %2421 ], [ %2657, %2708 ]
  %2575 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2422, label %2576, label %2645

2576:                                             ; preds = %2573, %2635
  %2577 = phi i32 [ %2644, %2635 ], [ 0, %2573 ]
  %2578 = phi i64 [ %2586, %2635 ], [ %2426, %2573 ]
  %2579 = phi i64 [ %2643, %2635 ], [ %2425, %2573 ]
  %2580 = phi i32 [ %2641, %2635 ], [ %2575, %2573 ]
  %2581 = sub i32 %2424, %2577
  %2582 = tail call i32 @llvm.smin.i32(i32 %2581, i32 0)
  %2583 = sub i32 %2581, %2582
  %2584 = zext i32 %2583 to i64
  %2585 = add nuw nsw i64 %2584, 1
  %2586 = add nsw i64 %2578, -1
  %2587 = icmp ult i32 %2583, 31
  br i1 %2587, label %2623, label %2588

2588:                                             ; preds = %2576
  %2589 = and i64 %2585, 8589934560
  %2590 = sub i64 %2579, %2589
  br label %2591

2591:                                             ; preds = %2591, %2588
  %2592 = phi i64 [ 0, %2588 ], [ %2615, %2591 ]
  %2593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2611, %2591 ]
  %2594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2612, %2591 ]
  %2595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2613, %2591 ]
  %2596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2614, %2591 ]
  %2597 = sub i64 %2579, %2592
  %2598 = getelementptr inbounds i32, ptr %11, i64 %2597
  %2599 = getelementptr inbounds i32, ptr %2598, i64 -7
  %2600 = load <8 x i32>, ptr %2599, align 4, !tbaa !5
  %2601 = shufflevector <8 x i32> %2600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2602 = getelementptr inbounds i32, ptr %2598, i64 -15
  %2603 = load <8 x i32>, ptr %2602, align 4, !tbaa !5
  %2604 = shufflevector <8 x i32> %2603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2605 = getelementptr inbounds i32, ptr %2598, i64 -23
  %2606 = load <8 x i32>, ptr %2605, align 4, !tbaa !5
  %2607 = shufflevector <8 x i32> %2606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2608 = getelementptr inbounds i32, ptr %2598, i64 -31
  %2609 = load <8 x i32>, ptr %2608, align 4, !tbaa !5
  %2610 = shufflevector <8 x i32> %2609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2611 = mul <8 x i32> %2601, %2593
  %2612 = mul <8 x i32> %2604, %2594
  %2613 = mul <8 x i32> %2607, %2595
  %2614 = mul <8 x i32> %2610, %2596
  %2615 = add nuw i64 %2592, 32
  %2616 = icmp eq i64 %2615, %2589
  br i1 %2616, label %2617, label %2591, !llvm.loop !105

2617:                                             ; preds = %2591
  %2618 = mul <8 x i32> %2612, %2611
  %2619 = mul <8 x i32> %2613, %2618
  %2620 = mul <8 x i32> %2614, %2619
  %2621 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2620)
  %2622 = icmp eq i64 %2585, %2589
  br i1 %2622, label %2635, label %2623

2623:                                             ; preds = %2576, %2617
  %2624 = phi i64 [ %2579, %2576 ], [ %2590, %2617 ]
  %2625 = phi i32 [ 1, %2576 ], [ %2621, %2617 ]
  br label %2626

2626:                                             ; preds = %2623, %2626
  %2627 = phi i64 [ %2632, %2626 ], [ %2624, %2623 ]
  %2628 = phi i32 [ %2631, %2626 ], [ %2625, %2623 ]
  %2629 = getelementptr inbounds i32, ptr %11, i64 %2627
  %2630 = load i32, ptr %2629, align 4, !tbaa !5
  %2631 = mul nsw i32 %2630, %2628
  %2632 = add nsw i64 %2627, -1
  %2633 = trunc i64 %2627 to i32
  %2634 = icmp sgt i32 %2633, 0
  br i1 %2634, label %2626, label %2635, !llvm.loop !106

2635:                                             ; preds = %2626, %2617
  %2636 = phi i32 [ %2621, %2617 ], [ %2631, %2626 ]
  %2637 = and i64 %2586, 4294967295
  %2638 = getelementptr inbounds i32, ptr %6, i64 %2637
  %2639 = load i32, ptr %2638, align 4, !tbaa !5
  %2640 = mul nsw i32 %2639, %2636
  %2641 = add nsw i32 %2640, %2580
  %2642 = icmp sgt i64 %2578, 2
  %2643 = add nsw i64 %2579, -1
  %2644 = add i32 %2577, 1
  br i1 %2642, label %2576, label %2645, !llvm.loop !107

2645:                                             ; preds = %2635, %2573
  %2646 = phi i32 [ %2575, %2573 ], [ %2641, %2635 ]
  %2647 = icmp slt i32 %2646, %5
  br i1 %2647, label %2650, label %2648

2648:                                             ; preds = %2645
  %2649 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

2650:                                             ; preds = %2645
  %2651 = sext i32 %2646 to i64
  %2652 = getelementptr inbounds i8, ptr %2407, i64 %2651
  %2653 = load i8, ptr %2652, align 1, !tbaa !11
  %2654 = load i32, ptr %2409, align 4, !tbaa !5
  %2655 = zext i8 %2653 to i32
  %2656 = add i32 %2654, %2655
  store i32 %2656, ptr %2409, align 4, !tbaa !5
  %2657 = add nuw nsw i32 %2574, 1
  br i1 %2423, label %2658, label %2708

2658:                                             ; preds = %2650
  %2659 = load i32, ptr %4, align 4, !tbaa !5
  %2660 = load i32, ptr %12, align 4, !tbaa !5
  %2661 = add nsw i32 %2660, -1
  %2662 = icmp slt i32 %2659, %2661
  br i1 %2662, label %2685, label %2663

2663:                                             ; preds = %2658
  %2664 = icmp eq i32 %2659, %2661
  br i1 %2664, label %2665, label %2701

2665:                                             ; preds = %2663
  store i32 0, ptr %4, align 4, !tbaa !5
  %2666 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2666, ptr %6, align 4, !tbaa !5
  br i1 %2428, label %2708, label %2667

2667:                                             ; preds = %2665, %2695
  %2668 = phi i64 [ %2699, %2695 ], [ 1, %2665 ]
  %2669 = getelementptr inbounds i32, ptr %4, i64 %2668
  %2670 = load i32, ptr %2669, align 4, !tbaa !5
  %2671 = getelementptr inbounds i32, ptr %12, i64 %2668
  %2672 = load i32, ptr %2671, align 4, !tbaa !5
  %2673 = add nsw i32 %2672, -1
  %2674 = icmp slt i32 %2670, %2673
  br i1 %2674, label %2675, label %2693

2675:                                             ; preds = %2667
  br i1 %2662, label %2685, label %2676

2676:                                             ; preds = %2675
  %2677 = shl i64 %2668, 32
  %2678 = add i64 %2677, -4294967296
  %2679 = ashr exact i64 %2678, 32
  %2680 = getelementptr inbounds i32, ptr %7, i64 %2679
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = getelementptr inbounds i32, ptr %6, i64 %2668
  %2683 = load i32, ptr %2682, align 4, !tbaa !5
  %2684 = add nsw i32 %2683, %2681
  store i32 %2684, ptr %2682, align 4, !tbaa !5
  br label %2703

2685:                                             ; preds = %2658, %2675
  %2686 = phi i32 [ %2670, %2675 ], [ %2659, %2658 ]
  %2687 = phi ptr [ %2669, %2675 ], [ %4, %2658 ]
  %2688 = phi i64 [ %2668, %2675 ], [ 0, %2658 ]
  %2689 = add nsw i32 %2686, 1
  store i32 %2689, ptr %2687, align 4, !tbaa !5
  %2690 = getelementptr inbounds i32, ptr %7, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !5
  %2692 = getelementptr inbounds i32, ptr %6, i64 %2688
  br label %2703

2693:                                             ; preds = %2667
  %2694 = icmp eq i32 %2670, %2673
  br i1 %2694, label %2695, label %2701

2695:                                             ; preds = %2693
  store i32 0, ptr %2669, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %8, i64 %2668
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = getelementptr inbounds i32, ptr %6, i64 %2668
  store i32 %2697, ptr %2698, align 4, !tbaa !5
  %2699 = add nuw nsw i64 %2668, 1
  %2700 = icmp eq i64 %2699, %2426
  br i1 %2700, label %2708, label %2667, !llvm.loop !108

2701:                                             ; preds = %2663, %2693
  %2702 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2703:                                             ; preds = %2676, %2685
  %2704 = phi ptr [ %2692, %2685 ], [ %2669, %2676 ]
  %2705 = phi i32 [ %2691, %2685 ], [ 1, %2676 ]
  %2706 = load i32, ptr %2704, align 4, !tbaa !5
  %2707 = add nsw i32 %2706, %2705
  store i32 %2707, ptr %2704, align 4, !tbaa !5
  br label %2708

2708:                                             ; preds = %2695, %2703, %2665, %2650
  %2709 = icmp eq i32 %2657, %5
  br i1 %2709, label %5390, label %2573, !llvm.loop !109

2710:                                             ; preds = %2414
  %2711 = getelementptr inbounds i32, ptr %3, i64 %19
  %2712 = load i32, ptr %2711, align 4, !tbaa !5
  %2713 = icmp eq i32 %2712, 0
  %2714 = icmp sgt i32 %5, 0
  br i1 %2713, label %2724, label %2715

2715:                                             ; preds = %2710
  br i1 %2714, label %2716, label %5390

2716:                                             ; preds = %2715
  %2717 = icmp sgt i32 %13, 1
  %2718 = icmp sgt i32 %13, 0
  %2719 = add i32 %13, -2
  %2720 = zext i32 %2719 to i64
  %2721 = zext i32 %13 to i64
  %2722 = add nuw i32 %5, 1
  %2723 = icmp eq i32 %13, 1
  br label %2863

2724:                                             ; preds = %2710
  br i1 %2714, label %2725, label %5390

2725:                                             ; preds = %2724
  %2726 = icmp sgt i32 %13, 1
  %2727 = icmp sgt i32 %13, 0
  %2728 = add i32 %13, -2
  %2729 = zext i32 %2728 to i64
  %2730 = zext i32 %13 to i64
  %2731 = add nuw i32 %5, 1
  %2732 = icmp eq i32 %13, 1
  br label %2733

2733:                                             ; preds = %2725, %2861
  %2734 = phi i32 [ 0, %2725 ], [ %2813, %2861 ]
  %2735 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2726, label %2736, label %2805

2736:                                             ; preds = %2733, %2795
  %2737 = phi i32 [ %2804, %2795 ], [ 0, %2733 ]
  %2738 = phi i64 [ %2746, %2795 ], [ %2730, %2733 ]
  %2739 = phi i64 [ %2803, %2795 ], [ %2729, %2733 ]
  %2740 = phi i32 [ %2801, %2795 ], [ %2735, %2733 ]
  %2741 = sub i32 %2728, %2737
  %2742 = tail call i32 @llvm.smin.i32(i32 %2741, i32 0)
  %2743 = sub i32 %2741, %2742
  %2744 = zext i32 %2743 to i64
  %2745 = add nuw nsw i64 %2744, 1
  %2746 = add nsw i64 %2738, -1
  %2747 = icmp ult i32 %2743, 31
  br i1 %2747, label %2783, label %2748

2748:                                             ; preds = %2736
  %2749 = and i64 %2745, 8589934560
  %2750 = sub i64 %2739, %2749
  br label %2751

2751:                                             ; preds = %2751, %2748
  %2752 = phi i64 [ 0, %2748 ], [ %2775, %2751 ]
  %2753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2771, %2751 ]
  %2754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2772, %2751 ]
  %2755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2773, %2751 ]
  %2756 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2774, %2751 ]
  %2757 = sub i64 %2739, %2752
  %2758 = getelementptr inbounds i32, ptr %9, i64 %2757
  %2759 = getelementptr inbounds i32, ptr %2758, i64 -7
  %2760 = load <8 x i32>, ptr %2759, align 4, !tbaa !5
  %2761 = shufflevector <8 x i32> %2760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2762 = getelementptr inbounds i32, ptr %2758, i64 -15
  %2763 = load <8 x i32>, ptr %2762, align 4, !tbaa !5
  %2764 = shufflevector <8 x i32> %2763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2765 = getelementptr inbounds i32, ptr %2758, i64 -23
  %2766 = load <8 x i32>, ptr %2765, align 4, !tbaa !5
  %2767 = shufflevector <8 x i32> %2766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2768 = getelementptr inbounds i32, ptr %2758, i64 -31
  %2769 = load <8 x i32>, ptr %2768, align 4, !tbaa !5
  %2770 = shufflevector <8 x i32> %2769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2771 = mul <8 x i32> %2761, %2753
  %2772 = mul <8 x i32> %2764, %2754
  %2773 = mul <8 x i32> %2767, %2755
  %2774 = mul <8 x i32> %2770, %2756
  %2775 = add nuw i64 %2752, 32
  %2776 = icmp eq i64 %2775, %2749
  br i1 %2776, label %2777, label %2751, !llvm.loop !110

2777:                                             ; preds = %2751
  %2778 = mul <8 x i32> %2772, %2771
  %2779 = mul <8 x i32> %2773, %2778
  %2780 = mul <8 x i32> %2774, %2779
  %2781 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2780)
  %2782 = icmp eq i64 %2745, %2749
  br i1 %2782, label %2795, label %2783

2783:                                             ; preds = %2736, %2777
  %2784 = phi i64 [ %2739, %2736 ], [ %2750, %2777 ]
  %2785 = phi i32 [ 1, %2736 ], [ %2781, %2777 ]
  br label %2786

2786:                                             ; preds = %2783, %2786
  %2787 = phi i64 [ %2792, %2786 ], [ %2784, %2783 ]
  %2788 = phi i32 [ %2791, %2786 ], [ %2785, %2783 ]
  %2789 = getelementptr inbounds i32, ptr %9, i64 %2787
  %2790 = load i32, ptr %2789, align 4, !tbaa !5
  %2791 = mul nsw i32 %2790, %2788
  %2792 = add nsw i64 %2787, -1
  %2793 = trunc i64 %2787 to i32
  %2794 = icmp sgt i32 %2793, 0
  br i1 %2794, label %2786, label %2795, !llvm.loop !111

2795:                                             ; preds = %2786, %2777
  %2796 = phi i32 [ %2781, %2777 ], [ %2791, %2786 ]
  %2797 = and i64 %2746, 4294967295
  %2798 = getelementptr inbounds i32, ptr %6, i64 %2797
  %2799 = load i32, ptr %2798, align 4, !tbaa !5
  %2800 = mul nsw i32 %2799, %2796
  %2801 = add nsw i32 %2800, %2740
  %2802 = icmp sgt i64 %2738, 2
  %2803 = add nsw i64 %2739, -1
  %2804 = add i32 %2737, 1
  br i1 %2802, label %2736, label %2805, !llvm.loop !112

2805:                                             ; preds = %2795, %2733
  %2806 = phi i32 [ %2735, %2733 ], [ %2801, %2795 ]
  %2807 = sext i32 %2806 to i64
  %2808 = getelementptr inbounds i8, ptr %2407, i64 %2807
  %2809 = load i8, ptr %2808, align 1, !tbaa !11
  %2810 = zext i8 %2809 to i32
  %2811 = load i32, ptr %2409, align 4, !tbaa !5
  %2812 = add nsw i32 %2811, %2810
  store i32 %2812, ptr %2409, align 4, !tbaa !5
  %2813 = add nuw nsw i32 %2734, 1
  br i1 %2727, label %2814, label %2861

2814:                                             ; preds = %2805
  %2815 = load i32, ptr %4, align 4, !tbaa !5
  %2816 = load i32, ptr %12, align 4, !tbaa !5
  %2817 = add nsw i32 %2816, -1
  %2818 = icmp slt i32 %2815, %2817
  br i1 %2818, label %2838, label %2819

2819:                                             ; preds = %2814
  %2820 = icmp eq i32 %2815, %2817
  br i1 %2820, label %2821, label %2854

2821:                                             ; preds = %2819
  store i32 0, ptr %4, align 4, !tbaa !5
  %2822 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2822, ptr %6, align 4, !tbaa !5
  br i1 %2732, label %2861, label %2823

2823:                                             ; preds = %2821, %2848
  %2824 = phi i64 [ %2852, %2848 ], [ 1, %2821 ]
  %2825 = getelementptr inbounds i32, ptr %4, i64 %2824
  %2826 = load i32, ptr %2825, align 4, !tbaa !5
  %2827 = getelementptr inbounds i32, ptr %12, i64 %2824
  %2828 = load i32, ptr %2827, align 4, !tbaa !5
  %2829 = add nsw i32 %2828, -1
  %2830 = icmp slt i32 %2826, %2829
  br i1 %2830, label %2831, label %2846

2831:                                             ; preds = %2823
  br i1 %2818, label %2838, label %2832

2832:                                             ; preds = %2831
  %2833 = getelementptr inbounds i32, ptr %7, i64 %2824
  %2834 = load i32, ptr %2833, align 4, !tbaa !5
  %2835 = getelementptr inbounds i32, ptr %6, i64 %2824
  %2836 = load i32, ptr %2835, align 4, !tbaa !5
  %2837 = add nsw i32 %2836, %2834
  store i32 %2837, ptr %2835, align 4, !tbaa !5
  br label %2856

2838:                                             ; preds = %2814, %2831
  %2839 = phi i32 [ %2826, %2831 ], [ %2815, %2814 ]
  %2840 = phi ptr [ %2825, %2831 ], [ %4, %2814 ]
  %2841 = phi i64 [ %2824, %2831 ], [ 0, %2814 ]
  %2842 = add nsw i32 %2839, 1
  store i32 %2842, ptr %2840, align 4, !tbaa !5
  %2843 = getelementptr inbounds i32, ptr %7, i64 %2841
  %2844 = load i32, ptr %2843, align 4, !tbaa !5
  %2845 = getelementptr inbounds i32, ptr %6, i64 %2841
  br label %2856

2846:                                             ; preds = %2823
  %2847 = icmp eq i32 %2826, %2829
  br i1 %2847, label %2848, label %2854

2848:                                             ; preds = %2846
  store i32 0, ptr %2825, align 4, !tbaa !5
  %2849 = getelementptr inbounds i32, ptr %8, i64 %2824
  %2850 = load i32, ptr %2849, align 4, !tbaa !5
  %2851 = getelementptr inbounds i32, ptr %6, i64 %2824
  store i32 %2850, ptr %2851, align 4, !tbaa !5
  %2852 = add nuw nsw i64 %2824, 1
  %2853 = icmp eq i64 %2852, %2730
  br i1 %2853, label %2861, label %2823, !llvm.loop !113

2854:                                             ; preds = %2819, %2846
  %2855 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2856:                                             ; preds = %2832, %2838
  %2857 = phi ptr [ %2845, %2838 ], [ %2825, %2832 ]
  %2858 = phi i32 [ %2844, %2838 ], [ 1, %2832 ]
  %2859 = load i32, ptr %2857, align 4, !tbaa !5
  %2860 = add nsw i32 %2859, %2858
  store i32 %2860, ptr %2857, align 4, !tbaa !5
  br label %2861

2861:                                             ; preds = %2848, %2856, %2821, %2805
  %2862 = icmp eq i32 %2813, %5
  br i1 %2862, label %5390, label %2733, !llvm.loop !114

2863:                                             ; preds = %2716, %2998
  %2864 = phi i32 [ 0, %2716 ], [ %2947, %2998 ]
  %2865 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2717, label %2866, label %2935

2866:                                             ; preds = %2863, %2925
  %2867 = phi i32 [ %2934, %2925 ], [ 0, %2863 ]
  %2868 = phi i64 [ %2876, %2925 ], [ %2721, %2863 ]
  %2869 = phi i64 [ %2933, %2925 ], [ %2720, %2863 ]
  %2870 = phi i32 [ %2931, %2925 ], [ %2865, %2863 ]
  %2871 = sub i32 %2719, %2867
  %2872 = tail call i32 @llvm.smin.i32(i32 %2871, i32 0)
  %2873 = sub i32 %2871, %2872
  %2874 = zext i32 %2873 to i64
  %2875 = add nuw nsw i64 %2874, 1
  %2876 = add nsw i64 %2868, -1
  %2877 = icmp ult i32 %2873, 31
  br i1 %2877, label %2913, label %2878

2878:                                             ; preds = %2866
  %2879 = and i64 %2875, 8589934560
  %2880 = sub i64 %2869, %2879
  br label %2881

2881:                                             ; preds = %2881, %2878
  %2882 = phi i64 [ 0, %2878 ], [ %2905, %2881 ]
  %2883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2901, %2881 ]
  %2884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2902, %2881 ]
  %2885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2903, %2881 ]
  %2886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2904, %2881 ]
  %2887 = sub i64 %2869, %2882
  %2888 = getelementptr inbounds i32, ptr %11, i64 %2887
  %2889 = getelementptr inbounds i32, ptr %2888, i64 -7
  %2890 = load <8 x i32>, ptr %2889, align 4, !tbaa !5
  %2891 = shufflevector <8 x i32> %2890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2892 = getelementptr inbounds i32, ptr %2888, i64 -15
  %2893 = load <8 x i32>, ptr %2892, align 4, !tbaa !5
  %2894 = shufflevector <8 x i32> %2893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2895 = getelementptr inbounds i32, ptr %2888, i64 -23
  %2896 = load <8 x i32>, ptr %2895, align 4, !tbaa !5
  %2897 = shufflevector <8 x i32> %2896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2898 = getelementptr inbounds i32, ptr %2888, i64 -31
  %2899 = load <8 x i32>, ptr %2898, align 4, !tbaa !5
  %2900 = shufflevector <8 x i32> %2899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2901 = mul <8 x i32> %2891, %2883
  %2902 = mul <8 x i32> %2894, %2884
  %2903 = mul <8 x i32> %2897, %2885
  %2904 = mul <8 x i32> %2900, %2886
  %2905 = add nuw i64 %2882, 32
  %2906 = icmp eq i64 %2905, %2879
  br i1 %2906, label %2907, label %2881, !llvm.loop !115

2907:                                             ; preds = %2881
  %2908 = mul <8 x i32> %2902, %2901
  %2909 = mul <8 x i32> %2903, %2908
  %2910 = mul <8 x i32> %2904, %2909
  %2911 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2910)
  %2912 = icmp eq i64 %2875, %2879
  br i1 %2912, label %2925, label %2913

2913:                                             ; preds = %2866, %2907
  %2914 = phi i64 [ %2869, %2866 ], [ %2880, %2907 ]
  %2915 = phi i32 [ 1, %2866 ], [ %2911, %2907 ]
  br label %2916

2916:                                             ; preds = %2913, %2916
  %2917 = phi i64 [ %2922, %2916 ], [ %2914, %2913 ]
  %2918 = phi i32 [ %2921, %2916 ], [ %2915, %2913 ]
  %2919 = getelementptr inbounds i32, ptr %11, i64 %2917
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = mul nsw i32 %2920, %2918
  %2922 = add nsw i64 %2917, -1
  %2923 = trunc i64 %2917 to i32
  %2924 = icmp sgt i32 %2923, 0
  br i1 %2924, label %2916, label %2925, !llvm.loop !116

2925:                                             ; preds = %2916, %2907
  %2926 = phi i32 [ %2911, %2907 ], [ %2921, %2916 ]
  %2927 = and i64 %2876, 4294967295
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2927
  %2929 = load i32, ptr %2928, align 4, !tbaa !5
  %2930 = mul nsw i32 %2929, %2926
  %2931 = add nsw i32 %2930, %2870
  %2932 = icmp sgt i64 %2868, 2
  %2933 = add nsw i64 %2869, -1
  %2934 = add i32 %2867, 1
  br i1 %2932, label %2866, label %2935, !llvm.loop !117

2935:                                             ; preds = %2925, %2863
  %2936 = phi i32 [ %2865, %2863 ], [ %2931, %2925 ]
  %2937 = icmp slt i32 %2936, %5
  br i1 %2937, label %2940, label %2938

2938:                                             ; preds = %2935
  %2939 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

2940:                                             ; preds = %2935
  %2941 = sext i32 %2936 to i64
  %2942 = getelementptr inbounds i8, ptr %2407, i64 %2941
  %2943 = load i8, ptr %2942, align 1, !tbaa !11
  %2944 = zext i8 %2943 to i32
  %2945 = load i32, ptr %2409, align 4, !tbaa !5
  %2946 = add nsw i32 %2945, %2944
  store i32 %2946, ptr %2409, align 4, !tbaa !5
  %2947 = add nuw nsw i32 %2864, 1
  br i1 %2718, label %2948, label %2998

2948:                                             ; preds = %2940
  %2949 = load i32, ptr %4, align 4, !tbaa !5
  %2950 = load i32, ptr %12, align 4, !tbaa !5
  %2951 = add nsw i32 %2950, -1
  %2952 = icmp slt i32 %2949, %2951
  br i1 %2952, label %2975, label %2953

2953:                                             ; preds = %2948
  %2954 = icmp eq i32 %2949, %2951
  br i1 %2954, label %2955, label %2991

2955:                                             ; preds = %2953
  store i32 0, ptr %4, align 4, !tbaa !5
  %2956 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2956, ptr %6, align 4, !tbaa !5
  br i1 %2723, label %2998, label %2957

2957:                                             ; preds = %2955, %2985
  %2958 = phi i64 [ %2989, %2985 ], [ 1, %2955 ]
  %2959 = getelementptr inbounds i32, ptr %4, i64 %2958
  %2960 = load i32, ptr %2959, align 4, !tbaa !5
  %2961 = getelementptr inbounds i32, ptr %12, i64 %2958
  %2962 = load i32, ptr %2961, align 4, !tbaa !5
  %2963 = add nsw i32 %2962, -1
  %2964 = icmp slt i32 %2960, %2963
  br i1 %2964, label %2965, label %2983

2965:                                             ; preds = %2957
  br i1 %2952, label %2975, label %2966

2966:                                             ; preds = %2965
  %2967 = shl i64 %2958, 32
  %2968 = add i64 %2967, -4294967296
  %2969 = ashr exact i64 %2968, 32
  %2970 = getelementptr inbounds i32, ptr %7, i64 %2969
  %2971 = load i32, ptr %2970, align 4, !tbaa !5
  %2972 = getelementptr inbounds i32, ptr %6, i64 %2958
  %2973 = load i32, ptr %2972, align 4, !tbaa !5
  %2974 = add nsw i32 %2973, %2971
  store i32 %2974, ptr %2972, align 4, !tbaa !5
  br label %2993

2975:                                             ; preds = %2948, %2965
  %2976 = phi i32 [ %2960, %2965 ], [ %2949, %2948 ]
  %2977 = phi ptr [ %2959, %2965 ], [ %4, %2948 ]
  %2978 = phi i64 [ %2958, %2965 ], [ 0, %2948 ]
  %2979 = add nsw i32 %2976, 1
  store i32 %2979, ptr %2977, align 4, !tbaa !5
  %2980 = getelementptr inbounds i32, ptr %7, i64 %2978
  %2981 = load i32, ptr %2980, align 4, !tbaa !5
  %2982 = getelementptr inbounds i32, ptr %6, i64 %2978
  br label %2993

2983:                                             ; preds = %2957
  %2984 = icmp eq i32 %2960, %2963
  br i1 %2984, label %2985, label %2991

2985:                                             ; preds = %2983
  store i32 0, ptr %2959, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %8, i64 %2958
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = getelementptr inbounds i32, ptr %6, i64 %2958
  store i32 %2987, ptr %2988, align 4, !tbaa !5
  %2989 = add nuw nsw i64 %2958, 1
  %2990 = icmp eq i64 %2989, %2721
  br i1 %2990, label %2998, label %2957, !llvm.loop !118

2991:                                             ; preds = %2953, %2983
  %2992 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

2993:                                             ; preds = %2966, %2975
  %2994 = phi ptr [ %2982, %2975 ], [ %2959, %2966 ]
  %2995 = phi i32 [ %2981, %2975 ], [ 1, %2966 ]
  %2996 = load i32, ptr %2994, align 4, !tbaa !5
  %2997 = add nsw i32 %2996, %2995
  store i32 %2997, ptr %2994, align 4, !tbaa !5
  br label %2998

2998:                                             ; preds = %2985, %2993, %2955, %2940
  %2999 = icmp eq i32 %2947, %5
  br i1 %2999, label %5390, label %2863, !llvm.loop !119

3000:                                             ; preds = %2414
  %3001 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 70, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

3002:                                             ; preds = %18
  %3003 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3004 = load ptr, ptr %3003, align 8, !tbaa !9
  %3005 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3006 = load ptr, ptr %3005, align 8, !tbaa !9
  store i64 0, ptr %3006, align 8, !tbaa !120
  %3007 = icmp eq i32 %13, 0
  br i1 %3007, label %3008, label %3011

3008:                                             ; preds = %3002
  %3009 = load i8, ptr %3004, align 1, !tbaa !11
  %3010 = zext i8 %3009 to i64
  store i64 %3010, ptr %3006, align 8, !tbaa !120
  br label %5390

3011:                                             ; preds = %3002
  switch i32 %1, label %3599 [
    i32 1, label %3012
    i32 0, label %3309
  ]

3012:                                             ; preds = %3011
  %3013 = getelementptr inbounds i32, ptr %3, i64 %19
  %3014 = load i32, ptr %3013, align 4, !tbaa !5
  %3015 = icmp eq i32 %3014, 0
  %3016 = icmp sgt i32 %5, 0
  br i1 %3015, label %3026, label %3017

3017:                                             ; preds = %3012
  br i1 %3016, label %3018, label %5390

3018:                                             ; preds = %3017
  %3019 = icmp sgt i32 %13, 1
  %3020 = icmp sgt i32 %13, 0
  %3021 = add i32 %13, -2
  %3022 = zext i32 %3021 to i64
  %3023 = zext i32 %13 to i64
  %3024 = add nuw i32 %5, 1
  %3025 = icmp eq i32 %13, 1
  br label %3170

3026:                                             ; preds = %3012
  br i1 %3016, label %3027, label %5390

3027:                                             ; preds = %3026
  %3028 = icmp sgt i32 %13, 1
  %3029 = icmp sgt i32 %13, 0
  %3030 = add i32 %13, -2
  %3031 = zext i32 %3030 to i64
  %3032 = zext i32 %13 to i64
  %3033 = add nuw i32 %5, 1
  %3034 = icmp eq i32 %13, 1
  br label %3035

3035:                                             ; preds = %3027, %3168
  %3036 = phi i64 [ 0, %3027 ], [ %3119, %3168 ]
  %3037 = phi i32 [ 0, %3027 ], [ %3120, %3168 ]
  %3038 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3028, label %3039, label %3108

3039:                                             ; preds = %3035, %3098
  %3040 = phi i32 [ %3107, %3098 ], [ 0, %3035 ]
  %3041 = phi i64 [ %3049, %3098 ], [ %3032, %3035 ]
  %3042 = phi i64 [ %3106, %3098 ], [ %3031, %3035 ]
  %3043 = phi i32 [ %3104, %3098 ], [ %3038, %3035 ]
  %3044 = sub i32 %3030, %3040
  %3045 = tail call i32 @llvm.smin.i32(i32 %3044, i32 0)
  %3046 = sub i32 %3044, %3045
  %3047 = zext i32 %3046 to i64
  %3048 = add nuw nsw i64 %3047, 1
  %3049 = add nsw i64 %3041, -1
  %3050 = icmp ult i32 %3046, 31
  br i1 %3050, label %3086, label %3051

3051:                                             ; preds = %3039
  %3052 = and i64 %3048, 8589934560
  %3053 = sub i64 %3042, %3052
  br label %3054

3054:                                             ; preds = %3054, %3051
  %3055 = phi i64 [ 0, %3051 ], [ %3078, %3054 ]
  %3056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3051 ], [ %3074, %3054 ]
  %3057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3051 ], [ %3075, %3054 ]
  %3058 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3051 ], [ %3076, %3054 ]
  %3059 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3051 ], [ %3077, %3054 ]
  %3060 = sub i64 %3042, %3055
  %3061 = getelementptr inbounds i32, ptr %9, i64 %3060
  %3062 = getelementptr inbounds i32, ptr %3061, i64 -7
  %3063 = load <8 x i32>, ptr %3062, align 4, !tbaa !5
  %3064 = shufflevector <8 x i32> %3063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3065 = getelementptr inbounds i32, ptr %3061, i64 -15
  %3066 = load <8 x i32>, ptr %3065, align 4, !tbaa !5
  %3067 = shufflevector <8 x i32> %3066, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3068 = getelementptr inbounds i32, ptr %3061, i64 -23
  %3069 = load <8 x i32>, ptr %3068, align 4, !tbaa !5
  %3070 = shufflevector <8 x i32> %3069, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3071 = getelementptr inbounds i32, ptr %3061, i64 -31
  %3072 = load <8 x i32>, ptr %3071, align 4, !tbaa !5
  %3073 = shufflevector <8 x i32> %3072, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3074 = mul <8 x i32> %3064, %3056
  %3075 = mul <8 x i32> %3067, %3057
  %3076 = mul <8 x i32> %3070, %3058
  %3077 = mul <8 x i32> %3073, %3059
  %3078 = add nuw i64 %3055, 32
  %3079 = icmp eq i64 %3078, %3052
  br i1 %3079, label %3080, label %3054, !llvm.loop !122

3080:                                             ; preds = %3054
  %3081 = mul <8 x i32> %3075, %3074
  %3082 = mul <8 x i32> %3076, %3081
  %3083 = mul <8 x i32> %3077, %3082
  %3084 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3083)
  %3085 = icmp eq i64 %3048, %3052
  br i1 %3085, label %3098, label %3086

3086:                                             ; preds = %3039, %3080
  %3087 = phi i64 [ %3042, %3039 ], [ %3053, %3080 ]
  %3088 = phi i32 [ 1, %3039 ], [ %3084, %3080 ]
  br label %3089

3089:                                             ; preds = %3086, %3089
  %3090 = phi i64 [ %3095, %3089 ], [ %3087, %3086 ]
  %3091 = phi i32 [ %3094, %3089 ], [ %3088, %3086 ]
  %3092 = getelementptr inbounds i32, ptr %9, i64 %3090
  %3093 = load i32, ptr %3092, align 4, !tbaa !5
  %3094 = mul nsw i32 %3093, %3091
  %3095 = add nsw i64 %3090, -1
  %3096 = trunc i64 %3090 to i32
  %3097 = icmp sgt i32 %3096, 0
  br i1 %3097, label %3089, label %3098, !llvm.loop !123

3098:                                             ; preds = %3089, %3080
  %3099 = phi i32 [ %3084, %3080 ], [ %3094, %3089 ]
  %3100 = and i64 %3049, 4294967295
  %3101 = getelementptr inbounds i32, ptr %6, i64 %3100
  %3102 = load i32, ptr %3101, align 4, !tbaa !5
  %3103 = mul nsw i32 %3102, %3099
  %3104 = add nsw i32 %3103, %3043
  %3105 = icmp sgt i64 %3041, 2
  %3106 = add nsw i64 %3042, -1
  %3107 = add i32 %3040, 1
  br i1 %3105, label %3039, label %3108, !llvm.loop !124

3108:                                             ; preds = %3098, %3035
  %3109 = phi i32 [ %3038, %3035 ], [ %3104, %3098 ]
  %3110 = sext i32 %3109 to i64
  %3111 = getelementptr inbounds double, ptr %2, i64 %3110
  %3112 = load double, ptr %3111, align 8, !tbaa !18
  %3113 = getelementptr inbounds i8, ptr %3004, i64 %3110
  %3114 = load i8, ptr %3113, align 1, !tbaa !11
  %3115 = sitofp i64 %3036 to double
  %3116 = uitofp i8 %3114 to double
  %3117 = fmul fast double %3112, %3116
  %3118 = fadd fast double %3117, %3115
  %3119 = fptosi double %3118 to i64
  store i64 %3119, ptr %3006, align 8, !tbaa !120
  %3120 = add nuw nsw i32 %3037, 1
  br i1 %3029, label %3121, label %3168

3121:                                             ; preds = %3108
  %3122 = load i32, ptr %4, align 4, !tbaa !5
  %3123 = load i32, ptr %12, align 4, !tbaa !5
  %3124 = add nsw i32 %3123, -1
  %3125 = icmp slt i32 %3122, %3124
  br i1 %3125, label %3145, label %3126

3126:                                             ; preds = %3121
  %3127 = icmp eq i32 %3122, %3124
  br i1 %3127, label %3128, label %3161

3128:                                             ; preds = %3126
  store i32 0, ptr %4, align 4, !tbaa !5
  %3129 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3129, ptr %6, align 4, !tbaa !5
  br i1 %3034, label %3168, label %3130

3130:                                             ; preds = %3128, %3155
  %3131 = phi i64 [ %3159, %3155 ], [ 1, %3128 ]
  %3132 = getelementptr inbounds i32, ptr %4, i64 %3131
  %3133 = load i32, ptr %3132, align 4, !tbaa !5
  %3134 = getelementptr inbounds i32, ptr %12, i64 %3131
  %3135 = load i32, ptr %3134, align 4, !tbaa !5
  %3136 = add nsw i32 %3135, -1
  %3137 = icmp slt i32 %3133, %3136
  br i1 %3137, label %3138, label %3153

3138:                                             ; preds = %3130
  br i1 %3125, label %3145, label %3139

3139:                                             ; preds = %3138
  %3140 = getelementptr inbounds i32, ptr %7, i64 %3131
  %3141 = load i32, ptr %3140, align 4, !tbaa !5
  %3142 = getelementptr inbounds i32, ptr %6, i64 %3131
  %3143 = load i32, ptr %3142, align 4, !tbaa !5
  %3144 = add nsw i32 %3143, %3141
  store i32 %3144, ptr %3142, align 4, !tbaa !5
  br label %3163

3145:                                             ; preds = %3121, %3138
  %3146 = phi i32 [ %3133, %3138 ], [ %3122, %3121 ]
  %3147 = phi ptr [ %3132, %3138 ], [ %4, %3121 ]
  %3148 = phi i64 [ %3131, %3138 ], [ 0, %3121 ]
  %3149 = add nsw i32 %3146, 1
  store i32 %3149, ptr %3147, align 4, !tbaa !5
  %3150 = getelementptr inbounds i32, ptr %7, i64 %3148
  %3151 = load i32, ptr %3150, align 4, !tbaa !5
  %3152 = getelementptr inbounds i32, ptr %6, i64 %3148
  br label %3163

3153:                                             ; preds = %3130
  %3154 = icmp eq i32 %3133, %3136
  br i1 %3154, label %3155, label %3161

3155:                                             ; preds = %3153
  store i32 0, ptr %3132, align 4, !tbaa !5
  %3156 = getelementptr inbounds i32, ptr %8, i64 %3131
  %3157 = load i32, ptr %3156, align 4, !tbaa !5
  %3158 = getelementptr inbounds i32, ptr %6, i64 %3131
  store i32 %3157, ptr %3158, align 4, !tbaa !5
  %3159 = add nuw nsw i64 %3131, 1
  %3160 = icmp eq i64 %3159, %3032
  br i1 %3160, label %3168, label %3130, !llvm.loop !125

3161:                                             ; preds = %3126, %3153
  %3162 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

3163:                                             ; preds = %3139, %3145
  %3164 = phi ptr [ %3152, %3145 ], [ %3132, %3139 ]
  %3165 = phi i32 [ %3151, %3145 ], [ 1, %3139 ]
  %3166 = load i32, ptr %3164, align 4, !tbaa !5
  %3167 = add nsw i32 %3166, %3165
  store i32 %3167, ptr %3164, align 4, !tbaa !5
  br label %3168

3168:                                             ; preds = %3155, %3163, %3128, %3108
  %3169 = icmp eq i32 %3120, %5
  br i1 %3169, label %5390, label %3035, !llvm.loop !126

3170:                                             ; preds = %3018, %3307
  %3171 = phi i64 [ 0, %3018 ], [ %3255, %3307 ]
  %3172 = phi i32 [ 0, %3018 ], [ %3256, %3307 ]
  %3173 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3019, label %3174, label %3243

3174:                                             ; preds = %3170, %3233
  %3175 = phi i32 [ %3242, %3233 ], [ 0, %3170 ]
  %3176 = phi i64 [ %3184, %3233 ], [ %3023, %3170 ]
  %3177 = phi i64 [ %3241, %3233 ], [ %3022, %3170 ]
  %3178 = phi i32 [ %3239, %3233 ], [ %3173, %3170 ]
  %3179 = sub i32 %3021, %3175
  %3180 = tail call i32 @llvm.smin.i32(i32 %3179, i32 0)
  %3181 = sub i32 %3179, %3180
  %3182 = zext i32 %3181 to i64
  %3183 = add nuw nsw i64 %3182, 1
  %3184 = add nsw i64 %3176, -1
  %3185 = icmp ult i32 %3181, 31
  br i1 %3185, label %3221, label %3186

3186:                                             ; preds = %3174
  %3187 = and i64 %3183, 8589934560
  %3188 = sub i64 %3177, %3187
  br label %3189

3189:                                             ; preds = %3189, %3186
  %3190 = phi i64 [ 0, %3186 ], [ %3213, %3189 ]
  %3191 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3186 ], [ %3209, %3189 ]
  %3192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3186 ], [ %3210, %3189 ]
  %3193 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3186 ], [ %3211, %3189 ]
  %3194 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3186 ], [ %3212, %3189 ]
  %3195 = sub i64 %3177, %3190
  %3196 = getelementptr inbounds i32, ptr %11, i64 %3195
  %3197 = getelementptr inbounds i32, ptr %3196, i64 -7
  %3198 = load <8 x i32>, ptr %3197, align 4, !tbaa !5
  %3199 = shufflevector <8 x i32> %3198, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3200 = getelementptr inbounds i32, ptr %3196, i64 -15
  %3201 = load <8 x i32>, ptr %3200, align 4, !tbaa !5
  %3202 = shufflevector <8 x i32> %3201, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3203 = getelementptr inbounds i32, ptr %3196, i64 -23
  %3204 = load <8 x i32>, ptr %3203, align 4, !tbaa !5
  %3205 = shufflevector <8 x i32> %3204, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3206 = getelementptr inbounds i32, ptr %3196, i64 -31
  %3207 = load <8 x i32>, ptr %3206, align 4, !tbaa !5
  %3208 = shufflevector <8 x i32> %3207, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3209 = mul <8 x i32> %3199, %3191
  %3210 = mul <8 x i32> %3202, %3192
  %3211 = mul <8 x i32> %3205, %3193
  %3212 = mul <8 x i32> %3208, %3194
  %3213 = add nuw i64 %3190, 32
  %3214 = icmp eq i64 %3213, %3187
  br i1 %3214, label %3215, label %3189, !llvm.loop !127

3215:                                             ; preds = %3189
  %3216 = mul <8 x i32> %3210, %3209
  %3217 = mul <8 x i32> %3211, %3216
  %3218 = mul <8 x i32> %3212, %3217
  %3219 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3218)
  %3220 = icmp eq i64 %3183, %3187
  br i1 %3220, label %3233, label %3221

3221:                                             ; preds = %3174, %3215
  %3222 = phi i64 [ %3177, %3174 ], [ %3188, %3215 ]
  %3223 = phi i32 [ 1, %3174 ], [ %3219, %3215 ]
  br label %3224

3224:                                             ; preds = %3221, %3224
  %3225 = phi i64 [ %3230, %3224 ], [ %3222, %3221 ]
  %3226 = phi i32 [ %3229, %3224 ], [ %3223, %3221 ]
  %3227 = getelementptr inbounds i32, ptr %11, i64 %3225
  %3228 = load i32, ptr %3227, align 4, !tbaa !5
  %3229 = mul nsw i32 %3228, %3226
  %3230 = add nsw i64 %3225, -1
  %3231 = trunc i64 %3225 to i32
  %3232 = icmp sgt i32 %3231, 0
  br i1 %3232, label %3224, label %3233, !llvm.loop !128

3233:                                             ; preds = %3224, %3215
  %3234 = phi i32 [ %3219, %3215 ], [ %3229, %3224 ]
  %3235 = and i64 %3184, 4294967295
  %3236 = getelementptr inbounds i32, ptr %6, i64 %3235
  %3237 = load i32, ptr %3236, align 4, !tbaa !5
  %3238 = mul nsw i32 %3237, %3234
  %3239 = add nsw i32 %3238, %3178
  %3240 = icmp sgt i64 %3176, 2
  %3241 = add nsw i64 %3177, -1
  %3242 = add i32 %3175, 1
  br i1 %3240, label %3174, label %3243, !llvm.loop !129

3243:                                             ; preds = %3233, %3170
  %3244 = phi i32 [ %3173, %3170 ], [ %3239, %3233 ]
  %3245 = icmp slt i32 %3244, %5
  br i1 %3245, label %3248, label %3246

3246:                                             ; preds = %3243
  %3247 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

3248:                                             ; preds = %3243
  %3249 = sext i32 %3244 to i64
  %3250 = getelementptr inbounds i8, ptr %3004, i64 %3249
  %3251 = load i8, ptr %3250, align 1, !tbaa !11
  %3252 = sitofp i64 %3171 to double
  %3253 = uitofp i8 %3251 to double
  %3254 = fadd fast double %3252, %3253
  %3255 = fptosi double %3254 to i64
  store i64 %3255, ptr %3006, align 8, !tbaa !120
  %3256 = add nuw nsw i32 %3172, 1
  br i1 %3020, label %3257, label %3307

3257:                                             ; preds = %3248
  %3258 = load i32, ptr %4, align 4, !tbaa !5
  %3259 = load i32, ptr %12, align 4, !tbaa !5
  %3260 = add nsw i32 %3259, -1
  %3261 = icmp slt i32 %3258, %3260
  br i1 %3261, label %3284, label %3262

3262:                                             ; preds = %3257
  %3263 = icmp eq i32 %3258, %3260
  br i1 %3263, label %3264, label %3300

3264:                                             ; preds = %3262
  store i32 0, ptr %4, align 4, !tbaa !5
  %3265 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3265, ptr %6, align 4, !tbaa !5
  br i1 %3025, label %3307, label %3266

3266:                                             ; preds = %3264, %3294
  %3267 = phi i64 [ %3298, %3294 ], [ 1, %3264 ]
  %3268 = getelementptr inbounds i32, ptr %4, i64 %3267
  %3269 = load i32, ptr %3268, align 4, !tbaa !5
  %3270 = getelementptr inbounds i32, ptr %12, i64 %3267
  %3271 = load i32, ptr %3270, align 4, !tbaa !5
  %3272 = add nsw i32 %3271, -1
  %3273 = icmp slt i32 %3269, %3272
  br i1 %3273, label %3274, label %3292

3274:                                             ; preds = %3266
  br i1 %3261, label %3284, label %3275

3275:                                             ; preds = %3274
  %3276 = shl i64 %3267, 32
  %3277 = add i64 %3276, -4294967296
  %3278 = ashr exact i64 %3277, 32
  %3279 = getelementptr inbounds i32, ptr %7, i64 %3278
  %3280 = load i32, ptr %3279, align 4, !tbaa !5
  %3281 = getelementptr inbounds i32, ptr %6, i64 %3267
  %3282 = load i32, ptr %3281, align 4, !tbaa !5
  %3283 = add nsw i32 %3282, %3280
  store i32 %3283, ptr %3281, align 4, !tbaa !5
  br label %3302

3284:                                             ; preds = %3257, %3274
  %3285 = phi i32 [ %3269, %3274 ], [ %3258, %3257 ]
  %3286 = phi ptr [ %3268, %3274 ], [ %4, %3257 ]
  %3287 = phi i64 [ %3267, %3274 ], [ 0, %3257 ]
  %3288 = add nsw i32 %3285, 1
  store i32 %3288, ptr %3286, align 4, !tbaa !5
  %3289 = getelementptr inbounds i32, ptr %7, i64 %3287
  %3290 = load i32, ptr %3289, align 4, !tbaa !5
  %3291 = getelementptr inbounds i32, ptr %6, i64 %3287
  br label %3302

3292:                                             ; preds = %3266
  %3293 = icmp eq i32 %3269, %3272
  br i1 %3293, label %3294, label %3300

3294:                                             ; preds = %3292
  store i32 0, ptr %3268, align 4, !tbaa !5
  %3295 = getelementptr inbounds i32, ptr %8, i64 %3267
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = getelementptr inbounds i32, ptr %6, i64 %3267
  store i32 %3296, ptr %3297, align 4, !tbaa !5
  %3298 = add nuw nsw i64 %3267, 1
  %3299 = icmp eq i64 %3298, %3023
  br i1 %3299, label %3307, label %3266, !llvm.loop !130

3300:                                             ; preds = %3262, %3292
  %3301 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

3302:                                             ; preds = %3275, %3284
  %3303 = phi ptr [ %3291, %3284 ], [ %3268, %3275 ]
  %3304 = phi i32 [ %3290, %3284 ], [ 1, %3275 ]
  %3305 = load i32, ptr %3303, align 4, !tbaa !5
  %3306 = add nsw i32 %3305, %3304
  store i32 %3306, ptr %3303, align 4, !tbaa !5
  br label %3307

3307:                                             ; preds = %3294, %3302, %3264, %3248
  %3308 = icmp eq i32 %3256, %5
  br i1 %3308, label %5390, label %3170, !llvm.loop !131

3309:                                             ; preds = %3011
  %3310 = getelementptr inbounds i32, ptr %3, i64 %19
  %3311 = load i32, ptr %3310, align 4, !tbaa !5
  %3312 = icmp eq i32 %3311, 0
  %3313 = icmp sgt i32 %5, 0
  br i1 %3312, label %3323, label %3314

3314:                                             ; preds = %3309
  br i1 %3313, label %3315, label %5390

3315:                                             ; preds = %3314
  %3316 = icmp sgt i32 %13, 1
  %3317 = icmp sgt i32 %13, 0
  %3318 = add i32 %13, -2
  %3319 = zext i32 %3318 to i64
  %3320 = zext i32 %13 to i64
  %3321 = add nuw i32 %5, 1
  %3322 = icmp eq i32 %13, 1
  br label %3462

3323:                                             ; preds = %3309
  br i1 %3313, label %3324, label %5390

3324:                                             ; preds = %3323
  %3325 = icmp sgt i32 %13, 1
  %3326 = icmp sgt i32 %13, 0
  %3327 = add i32 %13, -2
  %3328 = zext i32 %3327 to i64
  %3329 = zext i32 %13 to i64
  %3330 = add nuw i32 %5, 1
  %3331 = icmp eq i32 %13, 1
  br label %3332

3332:                                             ; preds = %3324, %3460
  %3333 = phi i64 [ 0, %3324 ], [ %3411, %3460 ]
  %3334 = phi i32 [ 0, %3324 ], [ %3412, %3460 ]
  %3335 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3325, label %3336, label %3405

3336:                                             ; preds = %3332, %3395
  %3337 = phi i32 [ %3404, %3395 ], [ 0, %3332 ]
  %3338 = phi i64 [ %3346, %3395 ], [ %3329, %3332 ]
  %3339 = phi i64 [ %3403, %3395 ], [ %3328, %3332 ]
  %3340 = phi i32 [ %3401, %3395 ], [ %3335, %3332 ]
  %3341 = sub i32 %3327, %3337
  %3342 = tail call i32 @llvm.smin.i32(i32 %3341, i32 0)
  %3343 = sub i32 %3341, %3342
  %3344 = zext i32 %3343 to i64
  %3345 = add nuw nsw i64 %3344, 1
  %3346 = add nsw i64 %3338, -1
  %3347 = icmp ult i32 %3343, 31
  br i1 %3347, label %3383, label %3348

3348:                                             ; preds = %3336
  %3349 = and i64 %3345, 8589934560
  %3350 = sub i64 %3339, %3349
  br label %3351

3351:                                             ; preds = %3351, %3348
  %3352 = phi i64 [ 0, %3348 ], [ %3375, %3351 ]
  %3353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3348 ], [ %3371, %3351 ]
  %3354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3348 ], [ %3372, %3351 ]
  %3355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3348 ], [ %3373, %3351 ]
  %3356 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3348 ], [ %3374, %3351 ]
  %3357 = sub i64 %3339, %3352
  %3358 = getelementptr inbounds i32, ptr %9, i64 %3357
  %3359 = getelementptr inbounds i32, ptr %3358, i64 -7
  %3360 = load <8 x i32>, ptr %3359, align 4, !tbaa !5
  %3361 = shufflevector <8 x i32> %3360, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3362 = getelementptr inbounds i32, ptr %3358, i64 -15
  %3363 = load <8 x i32>, ptr %3362, align 4, !tbaa !5
  %3364 = shufflevector <8 x i32> %3363, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3365 = getelementptr inbounds i32, ptr %3358, i64 -23
  %3366 = load <8 x i32>, ptr %3365, align 4, !tbaa !5
  %3367 = shufflevector <8 x i32> %3366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3368 = getelementptr inbounds i32, ptr %3358, i64 -31
  %3369 = load <8 x i32>, ptr %3368, align 4, !tbaa !5
  %3370 = shufflevector <8 x i32> %3369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3371 = mul <8 x i32> %3361, %3353
  %3372 = mul <8 x i32> %3364, %3354
  %3373 = mul <8 x i32> %3367, %3355
  %3374 = mul <8 x i32> %3370, %3356
  %3375 = add nuw i64 %3352, 32
  %3376 = icmp eq i64 %3375, %3349
  br i1 %3376, label %3377, label %3351, !llvm.loop !132

3377:                                             ; preds = %3351
  %3378 = mul <8 x i32> %3372, %3371
  %3379 = mul <8 x i32> %3373, %3378
  %3380 = mul <8 x i32> %3374, %3379
  %3381 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3380)
  %3382 = icmp eq i64 %3345, %3349
  br i1 %3382, label %3395, label %3383

3383:                                             ; preds = %3336, %3377
  %3384 = phi i64 [ %3339, %3336 ], [ %3350, %3377 ]
  %3385 = phi i32 [ 1, %3336 ], [ %3381, %3377 ]
  br label %3386

3386:                                             ; preds = %3383, %3386
  %3387 = phi i64 [ %3392, %3386 ], [ %3384, %3383 ]
  %3388 = phi i32 [ %3391, %3386 ], [ %3385, %3383 ]
  %3389 = getelementptr inbounds i32, ptr %9, i64 %3387
  %3390 = load i32, ptr %3389, align 4, !tbaa !5
  %3391 = mul nsw i32 %3390, %3388
  %3392 = add nsw i64 %3387, -1
  %3393 = trunc i64 %3387 to i32
  %3394 = icmp sgt i32 %3393, 0
  br i1 %3394, label %3386, label %3395, !llvm.loop !133

3395:                                             ; preds = %3386, %3377
  %3396 = phi i32 [ %3381, %3377 ], [ %3391, %3386 ]
  %3397 = and i64 %3346, 4294967295
  %3398 = getelementptr inbounds i32, ptr %6, i64 %3397
  %3399 = load i32, ptr %3398, align 4, !tbaa !5
  %3400 = mul nsw i32 %3399, %3396
  %3401 = add nsw i32 %3400, %3340
  %3402 = icmp sgt i64 %3338, 2
  %3403 = add nsw i64 %3339, -1
  %3404 = add i32 %3337, 1
  br i1 %3402, label %3336, label %3405, !llvm.loop !134

3405:                                             ; preds = %3395, %3332
  %3406 = phi i32 [ %3335, %3332 ], [ %3401, %3395 ]
  %3407 = sext i32 %3406 to i64
  %3408 = getelementptr inbounds i8, ptr %3004, i64 %3407
  %3409 = load i8, ptr %3408, align 1, !tbaa !11
  %3410 = zext i8 %3409 to i64
  %3411 = add nuw nsw i64 %3333, %3410
  store i64 %3411, ptr %3006, align 8, !tbaa !120
  %3412 = add nuw nsw i32 %3334, 1
  br i1 %3326, label %3413, label %3460

3413:                                             ; preds = %3405
  %3414 = load i32, ptr %4, align 4, !tbaa !5
  %3415 = load i32, ptr %12, align 4, !tbaa !5
  %3416 = add nsw i32 %3415, -1
  %3417 = icmp slt i32 %3414, %3416
  br i1 %3417, label %3437, label %3418

3418:                                             ; preds = %3413
  %3419 = icmp eq i32 %3414, %3416
  br i1 %3419, label %3420, label %3453

3420:                                             ; preds = %3418
  store i32 0, ptr %4, align 4, !tbaa !5
  %3421 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3421, ptr %6, align 4, !tbaa !5
  br i1 %3331, label %3460, label %3422

3422:                                             ; preds = %3420, %3447
  %3423 = phi i64 [ %3451, %3447 ], [ 1, %3420 ]
  %3424 = getelementptr inbounds i32, ptr %4, i64 %3423
  %3425 = load i32, ptr %3424, align 4, !tbaa !5
  %3426 = getelementptr inbounds i32, ptr %12, i64 %3423
  %3427 = load i32, ptr %3426, align 4, !tbaa !5
  %3428 = add nsw i32 %3427, -1
  %3429 = icmp slt i32 %3425, %3428
  br i1 %3429, label %3430, label %3445

3430:                                             ; preds = %3422
  br i1 %3417, label %3437, label %3431

3431:                                             ; preds = %3430
  %3432 = getelementptr inbounds i32, ptr %7, i64 %3423
  %3433 = load i32, ptr %3432, align 4, !tbaa !5
  %3434 = getelementptr inbounds i32, ptr %6, i64 %3423
  %3435 = load i32, ptr %3434, align 4, !tbaa !5
  %3436 = add nsw i32 %3435, %3433
  store i32 %3436, ptr %3434, align 4, !tbaa !5
  br label %3455

3437:                                             ; preds = %3413, %3430
  %3438 = phi i32 [ %3425, %3430 ], [ %3414, %3413 ]
  %3439 = phi ptr [ %3424, %3430 ], [ %4, %3413 ]
  %3440 = phi i64 [ %3423, %3430 ], [ 0, %3413 ]
  %3441 = add nsw i32 %3438, 1
  store i32 %3441, ptr %3439, align 4, !tbaa !5
  %3442 = getelementptr inbounds i32, ptr %7, i64 %3440
  %3443 = load i32, ptr %3442, align 4, !tbaa !5
  %3444 = getelementptr inbounds i32, ptr %6, i64 %3440
  br label %3455

3445:                                             ; preds = %3422
  %3446 = icmp eq i32 %3425, %3428
  br i1 %3446, label %3447, label %3453

3447:                                             ; preds = %3445
  store i32 0, ptr %3424, align 4, !tbaa !5
  %3448 = getelementptr inbounds i32, ptr %8, i64 %3423
  %3449 = load i32, ptr %3448, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %6, i64 %3423
  store i32 %3449, ptr %3450, align 4, !tbaa !5
  %3451 = add nuw nsw i64 %3423, 1
  %3452 = icmp eq i64 %3451, %3329
  br i1 %3452, label %3460, label %3422, !llvm.loop !135

3453:                                             ; preds = %3418, %3445
  %3454 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

3455:                                             ; preds = %3431, %3437
  %3456 = phi ptr [ %3444, %3437 ], [ %3424, %3431 ]
  %3457 = phi i32 [ %3443, %3437 ], [ 1, %3431 ]
  %3458 = load i32, ptr %3456, align 4, !tbaa !5
  %3459 = add nsw i32 %3458, %3457
  store i32 %3459, ptr %3456, align 4, !tbaa !5
  br label %3460

3460:                                             ; preds = %3447, %3455, %3420, %3405
  %3461 = icmp eq i32 %3412, %5
  br i1 %3461, label %5390, label %3332, !llvm.loop !136

3462:                                             ; preds = %3315, %3597
  %3463 = phi i64 [ 0, %3315 ], [ %3545, %3597 ]
  %3464 = phi i32 [ 0, %3315 ], [ %3546, %3597 ]
  %3465 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3316, label %3466, label %3535

3466:                                             ; preds = %3462, %3525
  %3467 = phi i32 [ %3534, %3525 ], [ 0, %3462 ]
  %3468 = phi i64 [ %3476, %3525 ], [ %3320, %3462 ]
  %3469 = phi i64 [ %3533, %3525 ], [ %3319, %3462 ]
  %3470 = phi i32 [ %3531, %3525 ], [ %3465, %3462 ]
  %3471 = sub i32 %3318, %3467
  %3472 = tail call i32 @llvm.smin.i32(i32 %3471, i32 0)
  %3473 = sub i32 %3471, %3472
  %3474 = zext i32 %3473 to i64
  %3475 = add nuw nsw i64 %3474, 1
  %3476 = add nsw i64 %3468, -1
  %3477 = icmp ult i32 %3473, 31
  br i1 %3477, label %3513, label %3478

3478:                                             ; preds = %3466
  %3479 = and i64 %3475, 8589934560
  %3480 = sub i64 %3469, %3479
  br label %3481

3481:                                             ; preds = %3481, %3478
  %3482 = phi i64 [ 0, %3478 ], [ %3505, %3481 ]
  %3483 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3478 ], [ %3501, %3481 ]
  %3484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3478 ], [ %3502, %3481 ]
  %3485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3478 ], [ %3503, %3481 ]
  %3486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3478 ], [ %3504, %3481 ]
  %3487 = sub i64 %3469, %3482
  %3488 = getelementptr inbounds i32, ptr %11, i64 %3487
  %3489 = getelementptr inbounds i32, ptr %3488, i64 -7
  %3490 = load <8 x i32>, ptr %3489, align 4, !tbaa !5
  %3491 = shufflevector <8 x i32> %3490, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3492 = getelementptr inbounds i32, ptr %3488, i64 -15
  %3493 = load <8 x i32>, ptr %3492, align 4, !tbaa !5
  %3494 = shufflevector <8 x i32> %3493, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3495 = getelementptr inbounds i32, ptr %3488, i64 -23
  %3496 = load <8 x i32>, ptr %3495, align 4, !tbaa !5
  %3497 = shufflevector <8 x i32> %3496, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3498 = getelementptr inbounds i32, ptr %3488, i64 -31
  %3499 = load <8 x i32>, ptr %3498, align 4, !tbaa !5
  %3500 = shufflevector <8 x i32> %3499, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3501 = mul <8 x i32> %3491, %3483
  %3502 = mul <8 x i32> %3494, %3484
  %3503 = mul <8 x i32> %3497, %3485
  %3504 = mul <8 x i32> %3500, %3486
  %3505 = add nuw i64 %3482, 32
  %3506 = icmp eq i64 %3505, %3479
  br i1 %3506, label %3507, label %3481, !llvm.loop !137

3507:                                             ; preds = %3481
  %3508 = mul <8 x i32> %3502, %3501
  %3509 = mul <8 x i32> %3503, %3508
  %3510 = mul <8 x i32> %3504, %3509
  %3511 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3510)
  %3512 = icmp eq i64 %3475, %3479
  br i1 %3512, label %3525, label %3513

3513:                                             ; preds = %3466, %3507
  %3514 = phi i64 [ %3469, %3466 ], [ %3480, %3507 ]
  %3515 = phi i32 [ 1, %3466 ], [ %3511, %3507 ]
  br label %3516

3516:                                             ; preds = %3513, %3516
  %3517 = phi i64 [ %3522, %3516 ], [ %3514, %3513 ]
  %3518 = phi i32 [ %3521, %3516 ], [ %3515, %3513 ]
  %3519 = getelementptr inbounds i32, ptr %11, i64 %3517
  %3520 = load i32, ptr %3519, align 4, !tbaa !5
  %3521 = mul nsw i32 %3520, %3518
  %3522 = add nsw i64 %3517, -1
  %3523 = trunc i64 %3517 to i32
  %3524 = icmp sgt i32 %3523, 0
  br i1 %3524, label %3516, label %3525, !llvm.loop !138

3525:                                             ; preds = %3516, %3507
  %3526 = phi i32 [ %3511, %3507 ], [ %3521, %3516 ]
  %3527 = and i64 %3476, 4294967295
  %3528 = getelementptr inbounds i32, ptr %6, i64 %3527
  %3529 = load i32, ptr %3528, align 4, !tbaa !5
  %3530 = mul nsw i32 %3529, %3526
  %3531 = add nsw i32 %3530, %3470
  %3532 = icmp sgt i64 %3468, 2
  %3533 = add nsw i64 %3469, -1
  %3534 = add i32 %3467, 1
  br i1 %3532, label %3466, label %3535, !llvm.loop !139

3535:                                             ; preds = %3525, %3462
  %3536 = phi i32 [ %3465, %3462 ], [ %3531, %3525 ]
  %3537 = icmp slt i32 %3536, %5
  br i1 %3537, label %3540, label %3538

3538:                                             ; preds = %3535
  %3539 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

3540:                                             ; preds = %3535
  %3541 = sext i32 %3536 to i64
  %3542 = getelementptr inbounds i8, ptr %3004, i64 %3541
  %3543 = load i8, ptr %3542, align 1, !tbaa !11
  %3544 = zext i8 %3543 to i64
  %3545 = add nuw nsw i64 %3463, %3544
  store i64 %3545, ptr %3006, align 8, !tbaa !120
  %3546 = add nuw nsw i32 %3464, 1
  br i1 %3317, label %3547, label %3597

3547:                                             ; preds = %3540
  %3548 = load i32, ptr %4, align 4, !tbaa !5
  %3549 = load i32, ptr %12, align 4, !tbaa !5
  %3550 = add nsw i32 %3549, -1
  %3551 = icmp slt i32 %3548, %3550
  br i1 %3551, label %3574, label %3552

3552:                                             ; preds = %3547
  %3553 = icmp eq i32 %3548, %3550
  br i1 %3553, label %3554, label %3590

3554:                                             ; preds = %3552
  store i32 0, ptr %4, align 4, !tbaa !5
  %3555 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3555, ptr %6, align 4, !tbaa !5
  br i1 %3322, label %3597, label %3556

3556:                                             ; preds = %3554, %3584
  %3557 = phi i64 [ %3588, %3584 ], [ 1, %3554 ]
  %3558 = getelementptr inbounds i32, ptr %4, i64 %3557
  %3559 = load i32, ptr %3558, align 4, !tbaa !5
  %3560 = getelementptr inbounds i32, ptr %12, i64 %3557
  %3561 = load i32, ptr %3560, align 4, !tbaa !5
  %3562 = add nsw i32 %3561, -1
  %3563 = icmp slt i32 %3559, %3562
  br i1 %3563, label %3564, label %3582

3564:                                             ; preds = %3556
  br i1 %3551, label %3574, label %3565

3565:                                             ; preds = %3564
  %3566 = shl i64 %3557, 32
  %3567 = add i64 %3566, -4294967296
  %3568 = ashr exact i64 %3567, 32
  %3569 = getelementptr inbounds i32, ptr %7, i64 %3568
  %3570 = load i32, ptr %3569, align 4, !tbaa !5
  %3571 = getelementptr inbounds i32, ptr %6, i64 %3557
  %3572 = load i32, ptr %3571, align 4, !tbaa !5
  %3573 = add nsw i32 %3572, %3570
  store i32 %3573, ptr %3571, align 4, !tbaa !5
  br label %3592

3574:                                             ; preds = %3547, %3564
  %3575 = phi i32 [ %3559, %3564 ], [ %3548, %3547 ]
  %3576 = phi ptr [ %3558, %3564 ], [ %4, %3547 ]
  %3577 = phi i64 [ %3557, %3564 ], [ 0, %3547 ]
  %3578 = add nsw i32 %3575, 1
  store i32 %3578, ptr %3576, align 4, !tbaa !5
  %3579 = getelementptr inbounds i32, ptr %7, i64 %3577
  %3580 = load i32, ptr %3579, align 4, !tbaa !5
  %3581 = getelementptr inbounds i32, ptr %6, i64 %3577
  br label %3592

3582:                                             ; preds = %3556
  %3583 = icmp eq i32 %3559, %3562
  br i1 %3583, label %3584, label %3590

3584:                                             ; preds = %3582
  store i32 0, ptr %3558, align 4, !tbaa !5
  %3585 = getelementptr inbounds i32, ptr %8, i64 %3557
  %3586 = load i32, ptr %3585, align 4, !tbaa !5
  %3587 = getelementptr inbounds i32, ptr %6, i64 %3557
  store i32 %3586, ptr %3587, align 4, !tbaa !5
  %3588 = add nuw nsw i64 %3557, 1
  %3589 = icmp eq i64 %3588, %3320
  br i1 %3589, label %3597, label %3556, !llvm.loop !140

3590:                                             ; preds = %3552, %3582
  %3591 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

3592:                                             ; preds = %3565, %3574
  %3593 = phi ptr [ %3581, %3574 ], [ %3558, %3565 ]
  %3594 = phi i32 [ %3580, %3574 ], [ 1, %3565 ]
  %3595 = load i32, ptr %3593, align 4, !tbaa !5
  %3596 = add nsw i32 %3595, %3594
  store i32 %3596, ptr %3593, align 4, !tbaa !5
  br label %3597

3597:                                             ; preds = %3584, %3592, %3554, %3540
  %3598 = icmp eq i32 %3546, %5
  br i1 %3598, label %5390, label %3462, !llvm.loop !141

3599:                                             ; preds = %3011
  %3600 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 75, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

3601:                                             ; preds = %18
  %3602 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3603 = load ptr, ptr %3602, align 8, !tbaa !9
  %3604 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3605 = load ptr, ptr %3604, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3605, align 8, !tbaa !18
  %3606 = icmp eq i32 %13, 0
  br i1 %3606, label %3607, label %3610

3607:                                             ; preds = %3601
  %3608 = load i8, ptr %3603, align 1, !tbaa !11
  %3609 = uitofp i8 %3608 to double
  store double %3609, ptr %3605, align 8, !tbaa !18
  br label %5390

3610:                                             ; preds = %3601
  switch i32 %1, label %4194 [
    i32 1, label %3611
    i32 0, label %3904
  ]

3611:                                             ; preds = %3610
  %3612 = getelementptr inbounds i32, ptr %3, i64 %19
  %3613 = load i32, ptr %3612, align 4, !tbaa !5
  %3614 = icmp eq i32 %3613, 0
  %3615 = icmp sgt i32 %5, 0
  br i1 %3614, label %3625, label %3616

3616:                                             ; preds = %3611
  br i1 %3615, label %3617, label %5390

3617:                                             ; preds = %3616
  %3618 = icmp sgt i32 %13, 1
  %3619 = icmp sgt i32 %13, 0
  %3620 = add i32 %13, -2
  %3621 = zext i32 %3620 to i64
  %3622 = zext i32 %13 to i64
  %3623 = add nuw i32 %5, 1
  %3624 = icmp eq i32 %13, 1
  br label %3767

3625:                                             ; preds = %3611
  br i1 %3615, label %3626, label %5390

3626:                                             ; preds = %3625
  %3627 = icmp sgt i32 %13, 1
  %3628 = icmp sgt i32 %13, 0
  %3629 = add i32 %13, -2
  %3630 = zext i32 %3629 to i64
  %3631 = zext i32 %13 to i64
  %3632 = add nuw i32 %5, 1
  %3633 = icmp eq i32 %13, 1
  br label %3634

3634:                                             ; preds = %3626, %3765
  %3635 = phi double [ 0.000000e+00, %3626 ], [ %3716, %3765 ]
  %3636 = phi i32 [ 0, %3626 ], [ %3717, %3765 ]
  %3637 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3627, label %3638, label %3707

3638:                                             ; preds = %3634, %3697
  %3639 = phi i32 [ %3706, %3697 ], [ 0, %3634 ]
  %3640 = phi i64 [ %3648, %3697 ], [ %3631, %3634 ]
  %3641 = phi i64 [ %3705, %3697 ], [ %3630, %3634 ]
  %3642 = phi i32 [ %3703, %3697 ], [ %3637, %3634 ]
  %3643 = sub i32 %3629, %3639
  %3644 = tail call i32 @llvm.smin.i32(i32 %3643, i32 0)
  %3645 = sub i32 %3643, %3644
  %3646 = zext i32 %3645 to i64
  %3647 = add nuw nsw i64 %3646, 1
  %3648 = add nsw i64 %3640, -1
  %3649 = icmp ult i32 %3645, 31
  br i1 %3649, label %3685, label %3650

3650:                                             ; preds = %3638
  %3651 = and i64 %3647, 8589934560
  %3652 = sub i64 %3641, %3651
  br label %3653

3653:                                             ; preds = %3653, %3650
  %3654 = phi i64 [ 0, %3650 ], [ %3677, %3653 ]
  %3655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3650 ], [ %3673, %3653 ]
  %3656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3650 ], [ %3674, %3653 ]
  %3657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3650 ], [ %3675, %3653 ]
  %3658 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3650 ], [ %3676, %3653 ]
  %3659 = sub i64 %3641, %3654
  %3660 = getelementptr inbounds i32, ptr %9, i64 %3659
  %3661 = getelementptr inbounds i32, ptr %3660, i64 -7
  %3662 = load <8 x i32>, ptr %3661, align 4, !tbaa !5
  %3663 = shufflevector <8 x i32> %3662, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3664 = getelementptr inbounds i32, ptr %3660, i64 -15
  %3665 = load <8 x i32>, ptr %3664, align 4, !tbaa !5
  %3666 = shufflevector <8 x i32> %3665, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3667 = getelementptr inbounds i32, ptr %3660, i64 -23
  %3668 = load <8 x i32>, ptr %3667, align 4, !tbaa !5
  %3669 = shufflevector <8 x i32> %3668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3670 = getelementptr inbounds i32, ptr %3660, i64 -31
  %3671 = load <8 x i32>, ptr %3670, align 4, !tbaa !5
  %3672 = shufflevector <8 x i32> %3671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3673 = mul <8 x i32> %3663, %3655
  %3674 = mul <8 x i32> %3666, %3656
  %3675 = mul <8 x i32> %3669, %3657
  %3676 = mul <8 x i32> %3672, %3658
  %3677 = add nuw i64 %3654, 32
  %3678 = icmp eq i64 %3677, %3651
  br i1 %3678, label %3679, label %3653, !llvm.loop !142

3679:                                             ; preds = %3653
  %3680 = mul <8 x i32> %3674, %3673
  %3681 = mul <8 x i32> %3675, %3680
  %3682 = mul <8 x i32> %3676, %3681
  %3683 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3682)
  %3684 = icmp eq i64 %3647, %3651
  br i1 %3684, label %3697, label %3685

3685:                                             ; preds = %3638, %3679
  %3686 = phi i64 [ %3641, %3638 ], [ %3652, %3679 ]
  %3687 = phi i32 [ 1, %3638 ], [ %3683, %3679 ]
  br label %3688

3688:                                             ; preds = %3685, %3688
  %3689 = phi i64 [ %3694, %3688 ], [ %3686, %3685 ]
  %3690 = phi i32 [ %3693, %3688 ], [ %3687, %3685 ]
  %3691 = getelementptr inbounds i32, ptr %9, i64 %3689
  %3692 = load i32, ptr %3691, align 4, !tbaa !5
  %3693 = mul nsw i32 %3692, %3690
  %3694 = add nsw i64 %3689, -1
  %3695 = trunc i64 %3689 to i32
  %3696 = icmp sgt i32 %3695, 0
  br i1 %3696, label %3688, label %3697, !llvm.loop !143

3697:                                             ; preds = %3688, %3679
  %3698 = phi i32 [ %3683, %3679 ], [ %3693, %3688 ]
  %3699 = and i64 %3648, 4294967295
  %3700 = getelementptr inbounds i32, ptr %6, i64 %3699
  %3701 = load i32, ptr %3700, align 4, !tbaa !5
  %3702 = mul nsw i32 %3701, %3698
  %3703 = add nsw i32 %3702, %3642
  %3704 = icmp sgt i64 %3640, 2
  %3705 = add nsw i64 %3641, -1
  %3706 = add i32 %3639, 1
  br i1 %3704, label %3638, label %3707, !llvm.loop !144

3707:                                             ; preds = %3697, %3634
  %3708 = phi i32 [ %3637, %3634 ], [ %3703, %3697 ]
  %3709 = sext i32 %3708 to i64
  %3710 = getelementptr inbounds double, ptr %2, i64 %3709
  %3711 = load double, ptr %3710, align 8, !tbaa !18
  %3712 = getelementptr inbounds i8, ptr %3603, i64 %3709
  %3713 = load i8, ptr %3712, align 1, !tbaa !11
  %3714 = uitofp i8 %3713 to double
  %3715 = fmul fast double %3711, %3714
  %3716 = fadd fast double %3715, %3635
  store double %3716, ptr %3605, align 8, !tbaa !18
  %3717 = add nuw nsw i32 %3636, 1
  br i1 %3628, label %3718, label %3765

3718:                                             ; preds = %3707
  %3719 = load i32, ptr %4, align 4, !tbaa !5
  %3720 = load i32, ptr %12, align 4, !tbaa !5
  %3721 = add nsw i32 %3720, -1
  %3722 = icmp slt i32 %3719, %3721
  br i1 %3722, label %3742, label %3723

3723:                                             ; preds = %3718
  %3724 = icmp eq i32 %3719, %3721
  br i1 %3724, label %3725, label %3758

3725:                                             ; preds = %3723
  store i32 0, ptr %4, align 4, !tbaa !5
  %3726 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3726, ptr %6, align 4, !tbaa !5
  br i1 %3633, label %3765, label %3727

3727:                                             ; preds = %3725, %3752
  %3728 = phi i64 [ %3756, %3752 ], [ 1, %3725 ]
  %3729 = getelementptr inbounds i32, ptr %4, i64 %3728
  %3730 = load i32, ptr %3729, align 4, !tbaa !5
  %3731 = getelementptr inbounds i32, ptr %12, i64 %3728
  %3732 = load i32, ptr %3731, align 4, !tbaa !5
  %3733 = add nsw i32 %3732, -1
  %3734 = icmp slt i32 %3730, %3733
  br i1 %3734, label %3735, label %3750

3735:                                             ; preds = %3727
  br i1 %3722, label %3742, label %3736

3736:                                             ; preds = %3735
  %3737 = getelementptr inbounds i32, ptr %7, i64 %3728
  %3738 = load i32, ptr %3737, align 4, !tbaa !5
  %3739 = getelementptr inbounds i32, ptr %6, i64 %3728
  %3740 = load i32, ptr %3739, align 4, !tbaa !5
  %3741 = add nsw i32 %3740, %3738
  store i32 %3741, ptr %3739, align 4, !tbaa !5
  br label %3760

3742:                                             ; preds = %3718, %3735
  %3743 = phi i32 [ %3730, %3735 ], [ %3719, %3718 ]
  %3744 = phi ptr [ %3729, %3735 ], [ %4, %3718 ]
  %3745 = phi i64 [ %3728, %3735 ], [ 0, %3718 ]
  %3746 = add nsw i32 %3743, 1
  store i32 %3746, ptr %3744, align 4, !tbaa !5
  %3747 = getelementptr inbounds i32, ptr %7, i64 %3745
  %3748 = load i32, ptr %3747, align 4, !tbaa !5
  %3749 = getelementptr inbounds i32, ptr %6, i64 %3745
  br label %3760

3750:                                             ; preds = %3727
  %3751 = icmp eq i32 %3730, %3733
  br i1 %3751, label %3752, label %3758

3752:                                             ; preds = %3750
  store i32 0, ptr %3729, align 4, !tbaa !5
  %3753 = getelementptr inbounds i32, ptr %8, i64 %3728
  %3754 = load i32, ptr %3753, align 4, !tbaa !5
  %3755 = getelementptr inbounds i32, ptr %6, i64 %3728
  store i32 %3754, ptr %3755, align 4, !tbaa !5
  %3756 = add nuw nsw i64 %3728, 1
  %3757 = icmp eq i64 %3756, %3631
  br i1 %3757, label %3765, label %3727, !llvm.loop !145

3758:                                             ; preds = %3723, %3750
  %3759 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

3760:                                             ; preds = %3736, %3742
  %3761 = phi ptr [ %3749, %3742 ], [ %3729, %3736 ]
  %3762 = phi i32 [ %3748, %3742 ], [ 1, %3736 ]
  %3763 = load i32, ptr %3761, align 4, !tbaa !5
  %3764 = add nsw i32 %3763, %3762
  store i32 %3764, ptr %3761, align 4, !tbaa !5
  br label %3765

3765:                                             ; preds = %3752, %3760, %3725, %3707
  %3766 = icmp eq i32 %3717, %5
  br i1 %3766, label %5390, label %3634, !llvm.loop !146

3767:                                             ; preds = %3617, %3902
  %3768 = phi double [ 0.000000e+00, %3617 ], [ %3850, %3902 ]
  %3769 = phi i32 [ 0, %3617 ], [ %3851, %3902 ]
  %3770 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3618, label %3771, label %3840

3771:                                             ; preds = %3767, %3830
  %3772 = phi i32 [ %3839, %3830 ], [ 0, %3767 ]
  %3773 = phi i64 [ %3781, %3830 ], [ %3622, %3767 ]
  %3774 = phi i64 [ %3838, %3830 ], [ %3621, %3767 ]
  %3775 = phi i32 [ %3836, %3830 ], [ %3770, %3767 ]
  %3776 = sub i32 %3620, %3772
  %3777 = tail call i32 @llvm.smin.i32(i32 %3776, i32 0)
  %3778 = sub i32 %3776, %3777
  %3779 = zext i32 %3778 to i64
  %3780 = add nuw nsw i64 %3779, 1
  %3781 = add nsw i64 %3773, -1
  %3782 = icmp ult i32 %3778, 31
  br i1 %3782, label %3818, label %3783

3783:                                             ; preds = %3771
  %3784 = and i64 %3780, 8589934560
  %3785 = sub i64 %3774, %3784
  br label %3786

3786:                                             ; preds = %3786, %3783
  %3787 = phi i64 [ 0, %3783 ], [ %3810, %3786 ]
  %3788 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3783 ], [ %3806, %3786 ]
  %3789 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3783 ], [ %3807, %3786 ]
  %3790 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3783 ], [ %3808, %3786 ]
  %3791 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3783 ], [ %3809, %3786 ]
  %3792 = sub i64 %3774, %3787
  %3793 = getelementptr inbounds i32, ptr %11, i64 %3792
  %3794 = getelementptr inbounds i32, ptr %3793, i64 -7
  %3795 = load <8 x i32>, ptr %3794, align 4, !tbaa !5
  %3796 = shufflevector <8 x i32> %3795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3797 = getelementptr inbounds i32, ptr %3793, i64 -15
  %3798 = load <8 x i32>, ptr %3797, align 4, !tbaa !5
  %3799 = shufflevector <8 x i32> %3798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3800 = getelementptr inbounds i32, ptr %3793, i64 -23
  %3801 = load <8 x i32>, ptr %3800, align 4, !tbaa !5
  %3802 = shufflevector <8 x i32> %3801, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3803 = getelementptr inbounds i32, ptr %3793, i64 -31
  %3804 = load <8 x i32>, ptr %3803, align 4, !tbaa !5
  %3805 = shufflevector <8 x i32> %3804, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3806 = mul <8 x i32> %3796, %3788
  %3807 = mul <8 x i32> %3799, %3789
  %3808 = mul <8 x i32> %3802, %3790
  %3809 = mul <8 x i32> %3805, %3791
  %3810 = add nuw i64 %3787, 32
  %3811 = icmp eq i64 %3810, %3784
  br i1 %3811, label %3812, label %3786, !llvm.loop !147

3812:                                             ; preds = %3786
  %3813 = mul <8 x i32> %3807, %3806
  %3814 = mul <8 x i32> %3808, %3813
  %3815 = mul <8 x i32> %3809, %3814
  %3816 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3815)
  %3817 = icmp eq i64 %3780, %3784
  br i1 %3817, label %3830, label %3818

3818:                                             ; preds = %3771, %3812
  %3819 = phi i64 [ %3774, %3771 ], [ %3785, %3812 ]
  %3820 = phi i32 [ 1, %3771 ], [ %3816, %3812 ]
  br label %3821

3821:                                             ; preds = %3818, %3821
  %3822 = phi i64 [ %3827, %3821 ], [ %3819, %3818 ]
  %3823 = phi i32 [ %3826, %3821 ], [ %3820, %3818 ]
  %3824 = getelementptr inbounds i32, ptr %11, i64 %3822
  %3825 = load i32, ptr %3824, align 4, !tbaa !5
  %3826 = mul nsw i32 %3825, %3823
  %3827 = add nsw i64 %3822, -1
  %3828 = trunc i64 %3822 to i32
  %3829 = icmp sgt i32 %3828, 0
  br i1 %3829, label %3821, label %3830, !llvm.loop !148

3830:                                             ; preds = %3821, %3812
  %3831 = phi i32 [ %3816, %3812 ], [ %3826, %3821 ]
  %3832 = and i64 %3781, 4294967295
  %3833 = getelementptr inbounds i32, ptr %6, i64 %3832
  %3834 = load i32, ptr %3833, align 4, !tbaa !5
  %3835 = mul nsw i32 %3834, %3831
  %3836 = add nsw i32 %3835, %3775
  %3837 = icmp sgt i64 %3773, 2
  %3838 = add nsw i64 %3774, -1
  %3839 = add i32 %3772, 1
  br i1 %3837, label %3771, label %3840, !llvm.loop !149

3840:                                             ; preds = %3830, %3767
  %3841 = phi i32 [ %3770, %3767 ], [ %3836, %3830 ]
  %3842 = icmp slt i32 %3841, %5
  br i1 %3842, label %3845, label %3843

3843:                                             ; preds = %3840
  %3844 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

3845:                                             ; preds = %3840
  %3846 = sext i32 %3841 to i64
  %3847 = getelementptr inbounds i8, ptr %3603, i64 %3846
  %3848 = load i8, ptr %3847, align 1, !tbaa !11
  %3849 = uitofp i8 %3848 to double
  %3850 = fadd fast double %3768, %3849
  store double %3850, ptr %3605, align 8, !tbaa !18
  %3851 = add nuw nsw i32 %3769, 1
  br i1 %3619, label %3852, label %3902

3852:                                             ; preds = %3845
  %3853 = load i32, ptr %4, align 4, !tbaa !5
  %3854 = load i32, ptr %12, align 4, !tbaa !5
  %3855 = add nsw i32 %3854, -1
  %3856 = icmp slt i32 %3853, %3855
  br i1 %3856, label %3879, label %3857

3857:                                             ; preds = %3852
  %3858 = icmp eq i32 %3853, %3855
  br i1 %3858, label %3859, label %3895

3859:                                             ; preds = %3857
  store i32 0, ptr %4, align 4, !tbaa !5
  %3860 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3860, ptr %6, align 4, !tbaa !5
  br i1 %3624, label %3902, label %3861

3861:                                             ; preds = %3859, %3889
  %3862 = phi i64 [ %3893, %3889 ], [ 1, %3859 ]
  %3863 = getelementptr inbounds i32, ptr %4, i64 %3862
  %3864 = load i32, ptr %3863, align 4, !tbaa !5
  %3865 = getelementptr inbounds i32, ptr %12, i64 %3862
  %3866 = load i32, ptr %3865, align 4, !tbaa !5
  %3867 = add nsw i32 %3866, -1
  %3868 = icmp slt i32 %3864, %3867
  br i1 %3868, label %3869, label %3887

3869:                                             ; preds = %3861
  br i1 %3856, label %3879, label %3870

3870:                                             ; preds = %3869
  %3871 = shl i64 %3862, 32
  %3872 = add i64 %3871, -4294967296
  %3873 = ashr exact i64 %3872, 32
  %3874 = getelementptr inbounds i32, ptr %7, i64 %3873
  %3875 = load i32, ptr %3874, align 4, !tbaa !5
  %3876 = getelementptr inbounds i32, ptr %6, i64 %3862
  %3877 = load i32, ptr %3876, align 4, !tbaa !5
  %3878 = add nsw i32 %3877, %3875
  store i32 %3878, ptr %3876, align 4, !tbaa !5
  br label %3897

3879:                                             ; preds = %3852, %3869
  %3880 = phi i32 [ %3864, %3869 ], [ %3853, %3852 ]
  %3881 = phi ptr [ %3863, %3869 ], [ %4, %3852 ]
  %3882 = phi i64 [ %3862, %3869 ], [ 0, %3852 ]
  %3883 = add nsw i32 %3880, 1
  store i32 %3883, ptr %3881, align 4, !tbaa !5
  %3884 = getelementptr inbounds i32, ptr %7, i64 %3882
  %3885 = load i32, ptr %3884, align 4, !tbaa !5
  %3886 = getelementptr inbounds i32, ptr %6, i64 %3882
  br label %3897

3887:                                             ; preds = %3861
  %3888 = icmp eq i32 %3864, %3867
  br i1 %3888, label %3889, label %3895

3889:                                             ; preds = %3887
  store i32 0, ptr %3863, align 4, !tbaa !5
  %3890 = getelementptr inbounds i32, ptr %8, i64 %3862
  %3891 = load i32, ptr %3890, align 4, !tbaa !5
  %3892 = getelementptr inbounds i32, ptr %6, i64 %3862
  store i32 %3891, ptr %3892, align 4, !tbaa !5
  %3893 = add nuw nsw i64 %3862, 1
  %3894 = icmp eq i64 %3893, %3622
  br i1 %3894, label %3902, label %3861, !llvm.loop !150

3895:                                             ; preds = %3857, %3887
  %3896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

3897:                                             ; preds = %3870, %3879
  %3898 = phi ptr [ %3886, %3879 ], [ %3863, %3870 ]
  %3899 = phi i32 [ %3885, %3879 ], [ 1, %3870 ]
  %3900 = load i32, ptr %3898, align 4, !tbaa !5
  %3901 = add nsw i32 %3900, %3899
  store i32 %3901, ptr %3898, align 4, !tbaa !5
  br label %3902

3902:                                             ; preds = %3889, %3897, %3859, %3845
  %3903 = icmp eq i32 %3851, %5
  br i1 %3903, label %5390, label %3767, !llvm.loop !151

3904:                                             ; preds = %3610
  %3905 = getelementptr inbounds i32, ptr %3, i64 %19
  %3906 = load i32, ptr %3905, align 4, !tbaa !5
  %3907 = icmp eq i32 %3906, 0
  %3908 = icmp sgt i32 %5, 0
  br i1 %3907, label %3918, label %3909

3909:                                             ; preds = %3904
  br i1 %3908, label %3910, label %5390

3910:                                             ; preds = %3909
  %3911 = icmp sgt i32 %13, 1
  %3912 = icmp sgt i32 %13, 0
  %3913 = add i32 %13, -2
  %3914 = zext i32 %3913 to i64
  %3915 = zext i32 %13 to i64
  %3916 = add nuw i32 %5, 1
  %3917 = icmp eq i32 %13, 1
  br label %4057

3918:                                             ; preds = %3904
  br i1 %3908, label %3919, label %5390

3919:                                             ; preds = %3918
  %3920 = icmp sgt i32 %13, 1
  %3921 = icmp sgt i32 %13, 0
  %3922 = add i32 %13, -2
  %3923 = zext i32 %3922 to i64
  %3924 = zext i32 %13 to i64
  %3925 = add nuw i32 %5, 1
  %3926 = icmp eq i32 %13, 1
  br label %3927

3927:                                             ; preds = %3919, %4055
  %3928 = phi double [ 0.000000e+00, %3919 ], [ %4006, %4055 ]
  %3929 = phi i32 [ 0, %3919 ], [ %4007, %4055 ]
  %3930 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3920, label %3931, label %4000

3931:                                             ; preds = %3927, %3990
  %3932 = phi i32 [ %3999, %3990 ], [ 0, %3927 ]
  %3933 = phi i64 [ %3941, %3990 ], [ %3924, %3927 ]
  %3934 = phi i64 [ %3998, %3990 ], [ %3923, %3927 ]
  %3935 = phi i32 [ %3996, %3990 ], [ %3930, %3927 ]
  %3936 = sub i32 %3922, %3932
  %3937 = tail call i32 @llvm.smin.i32(i32 %3936, i32 0)
  %3938 = sub i32 %3936, %3937
  %3939 = zext i32 %3938 to i64
  %3940 = add nuw nsw i64 %3939, 1
  %3941 = add nsw i64 %3933, -1
  %3942 = icmp ult i32 %3938, 31
  br i1 %3942, label %3978, label %3943

3943:                                             ; preds = %3931
  %3944 = and i64 %3940, 8589934560
  %3945 = sub i64 %3934, %3944
  br label %3946

3946:                                             ; preds = %3946, %3943
  %3947 = phi i64 [ 0, %3943 ], [ %3970, %3946 ]
  %3948 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3966, %3946 ]
  %3949 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3967, %3946 ]
  %3950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3968, %3946 ]
  %3951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3943 ], [ %3969, %3946 ]
  %3952 = sub i64 %3934, %3947
  %3953 = getelementptr inbounds i32, ptr %9, i64 %3952
  %3954 = getelementptr inbounds i32, ptr %3953, i64 -7
  %3955 = load <8 x i32>, ptr %3954, align 4, !tbaa !5
  %3956 = shufflevector <8 x i32> %3955, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3957 = getelementptr inbounds i32, ptr %3953, i64 -15
  %3958 = load <8 x i32>, ptr %3957, align 4, !tbaa !5
  %3959 = shufflevector <8 x i32> %3958, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3960 = getelementptr inbounds i32, ptr %3953, i64 -23
  %3961 = load <8 x i32>, ptr %3960, align 4, !tbaa !5
  %3962 = shufflevector <8 x i32> %3961, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3963 = getelementptr inbounds i32, ptr %3953, i64 -31
  %3964 = load <8 x i32>, ptr %3963, align 4, !tbaa !5
  %3965 = shufflevector <8 x i32> %3964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3966 = mul <8 x i32> %3956, %3948
  %3967 = mul <8 x i32> %3959, %3949
  %3968 = mul <8 x i32> %3962, %3950
  %3969 = mul <8 x i32> %3965, %3951
  %3970 = add nuw i64 %3947, 32
  %3971 = icmp eq i64 %3970, %3944
  br i1 %3971, label %3972, label %3946, !llvm.loop !152

3972:                                             ; preds = %3946
  %3973 = mul <8 x i32> %3967, %3966
  %3974 = mul <8 x i32> %3968, %3973
  %3975 = mul <8 x i32> %3969, %3974
  %3976 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3975)
  %3977 = icmp eq i64 %3940, %3944
  br i1 %3977, label %3990, label %3978

3978:                                             ; preds = %3931, %3972
  %3979 = phi i64 [ %3934, %3931 ], [ %3945, %3972 ]
  %3980 = phi i32 [ 1, %3931 ], [ %3976, %3972 ]
  br label %3981

3981:                                             ; preds = %3978, %3981
  %3982 = phi i64 [ %3987, %3981 ], [ %3979, %3978 ]
  %3983 = phi i32 [ %3986, %3981 ], [ %3980, %3978 ]
  %3984 = getelementptr inbounds i32, ptr %9, i64 %3982
  %3985 = load i32, ptr %3984, align 4, !tbaa !5
  %3986 = mul nsw i32 %3985, %3983
  %3987 = add nsw i64 %3982, -1
  %3988 = trunc i64 %3982 to i32
  %3989 = icmp sgt i32 %3988, 0
  br i1 %3989, label %3981, label %3990, !llvm.loop !153

3990:                                             ; preds = %3981, %3972
  %3991 = phi i32 [ %3976, %3972 ], [ %3986, %3981 ]
  %3992 = and i64 %3941, 4294967295
  %3993 = getelementptr inbounds i32, ptr %6, i64 %3992
  %3994 = load i32, ptr %3993, align 4, !tbaa !5
  %3995 = mul nsw i32 %3994, %3991
  %3996 = add nsw i32 %3995, %3935
  %3997 = icmp sgt i64 %3933, 2
  %3998 = add nsw i64 %3934, -1
  %3999 = add i32 %3932, 1
  br i1 %3997, label %3931, label %4000, !llvm.loop !154

4000:                                             ; preds = %3990, %3927
  %4001 = phi i32 [ %3930, %3927 ], [ %3996, %3990 ]
  %4002 = sext i32 %4001 to i64
  %4003 = getelementptr inbounds i8, ptr %3603, i64 %4002
  %4004 = load i8, ptr %4003, align 1, !tbaa !11
  %4005 = uitofp i8 %4004 to double
  %4006 = fadd fast double %3928, %4005
  store double %4006, ptr %3605, align 8, !tbaa !18
  %4007 = add nuw nsw i32 %3929, 1
  br i1 %3921, label %4008, label %4055

4008:                                             ; preds = %4000
  %4009 = load i32, ptr %4, align 4, !tbaa !5
  %4010 = load i32, ptr %12, align 4, !tbaa !5
  %4011 = add nsw i32 %4010, -1
  %4012 = icmp slt i32 %4009, %4011
  br i1 %4012, label %4032, label %4013

4013:                                             ; preds = %4008
  %4014 = icmp eq i32 %4009, %4011
  br i1 %4014, label %4015, label %4048

4015:                                             ; preds = %4013
  store i32 0, ptr %4, align 4, !tbaa !5
  %4016 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4016, ptr %6, align 4, !tbaa !5
  br i1 %3926, label %4055, label %4017

4017:                                             ; preds = %4015, %4042
  %4018 = phi i64 [ %4046, %4042 ], [ 1, %4015 ]
  %4019 = getelementptr inbounds i32, ptr %4, i64 %4018
  %4020 = load i32, ptr %4019, align 4, !tbaa !5
  %4021 = getelementptr inbounds i32, ptr %12, i64 %4018
  %4022 = load i32, ptr %4021, align 4, !tbaa !5
  %4023 = add nsw i32 %4022, -1
  %4024 = icmp slt i32 %4020, %4023
  br i1 %4024, label %4025, label %4040

4025:                                             ; preds = %4017
  br i1 %4012, label %4032, label %4026

4026:                                             ; preds = %4025
  %4027 = getelementptr inbounds i32, ptr %7, i64 %4018
  %4028 = load i32, ptr %4027, align 4, !tbaa !5
  %4029 = getelementptr inbounds i32, ptr %6, i64 %4018
  %4030 = load i32, ptr %4029, align 4, !tbaa !5
  %4031 = add nsw i32 %4030, %4028
  store i32 %4031, ptr %4029, align 4, !tbaa !5
  br label %4050

4032:                                             ; preds = %4008, %4025
  %4033 = phi i32 [ %4020, %4025 ], [ %4009, %4008 ]
  %4034 = phi ptr [ %4019, %4025 ], [ %4, %4008 ]
  %4035 = phi i64 [ %4018, %4025 ], [ 0, %4008 ]
  %4036 = add nsw i32 %4033, 1
  store i32 %4036, ptr %4034, align 4, !tbaa !5
  %4037 = getelementptr inbounds i32, ptr %7, i64 %4035
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = getelementptr inbounds i32, ptr %6, i64 %4035
  br label %4050

4040:                                             ; preds = %4017
  %4041 = icmp eq i32 %4020, %4023
  br i1 %4041, label %4042, label %4048

4042:                                             ; preds = %4040
  store i32 0, ptr %4019, align 4, !tbaa !5
  %4043 = getelementptr inbounds i32, ptr %8, i64 %4018
  %4044 = load i32, ptr %4043, align 4, !tbaa !5
  %4045 = getelementptr inbounds i32, ptr %6, i64 %4018
  store i32 %4044, ptr %4045, align 4, !tbaa !5
  %4046 = add nuw nsw i64 %4018, 1
  %4047 = icmp eq i64 %4046, %3924
  br i1 %4047, label %4055, label %4017, !llvm.loop !155

4048:                                             ; preds = %4013, %4040
  %4049 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4050:                                             ; preds = %4026, %4032
  %4051 = phi ptr [ %4039, %4032 ], [ %4019, %4026 ]
  %4052 = phi i32 [ %4038, %4032 ], [ 1, %4026 ]
  %4053 = load i32, ptr %4051, align 4, !tbaa !5
  %4054 = add nsw i32 %4053, %4052
  store i32 %4054, ptr %4051, align 4, !tbaa !5
  br label %4055

4055:                                             ; preds = %4042, %4050, %4015, %4000
  %4056 = icmp eq i32 %4007, %5
  br i1 %4056, label %5390, label %3927, !llvm.loop !156

4057:                                             ; preds = %3910, %4192
  %4058 = phi double [ 0.000000e+00, %3910 ], [ %4140, %4192 ]
  %4059 = phi i32 [ 0, %3910 ], [ %4141, %4192 ]
  %4060 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3911, label %4061, label %4130

4061:                                             ; preds = %4057, %4120
  %4062 = phi i32 [ %4129, %4120 ], [ 0, %4057 ]
  %4063 = phi i64 [ %4071, %4120 ], [ %3915, %4057 ]
  %4064 = phi i64 [ %4128, %4120 ], [ %3914, %4057 ]
  %4065 = phi i32 [ %4126, %4120 ], [ %4060, %4057 ]
  %4066 = sub i32 %3913, %4062
  %4067 = tail call i32 @llvm.smin.i32(i32 %4066, i32 0)
  %4068 = sub i32 %4066, %4067
  %4069 = zext i32 %4068 to i64
  %4070 = add nuw nsw i64 %4069, 1
  %4071 = add nsw i64 %4063, -1
  %4072 = icmp ult i32 %4068, 31
  br i1 %4072, label %4108, label %4073

4073:                                             ; preds = %4061
  %4074 = and i64 %4070, 8589934560
  %4075 = sub i64 %4064, %4074
  br label %4076

4076:                                             ; preds = %4076, %4073
  %4077 = phi i64 [ 0, %4073 ], [ %4100, %4076 ]
  %4078 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4073 ], [ %4096, %4076 ]
  %4079 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4073 ], [ %4097, %4076 ]
  %4080 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4073 ], [ %4098, %4076 ]
  %4081 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4073 ], [ %4099, %4076 ]
  %4082 = sub i64 %4064, %4077
  %4083 = getelementptr inbounds i32, ptr %11, i64 %4082
  %4084 = getelementptr inbounds i32, ptr %4083, i64 -7
  %4085 = load <8 x i32>, ptr %4084, align 4, !tbaa !5
  %4086 = shufflevector <8 x i32> %4085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4087 = getelementptr inbounds i32, ptr %4083, i64 -15
  %4088 = load <8 x i32>, ptr %4087, align 4, !tbaa !5
  %4089 = shufflevector <8 x i32> %4088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4090 = getelementptr inbounds i32, ptr %4083, i64 -23
  %4091 = load <8 x i32>, ptr %4090, align 4, !tbaa !5
  %4092 = shufflevector <8 x i32> %4091, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4093 = getelementptr inbounds i32, ptr %4083, i64 -31
  %4094 = load <8 x i32>, ptr %4093, align 4, !tbaa !5
  %4095 = shufflevector <8 x i32> %4094, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4096 = mul <8 x i32> %4086, %4078
  %4097 = mul <8 x i32> %4089, %4079
  %4098 = mul <8 x i32> %4092, %4080
  %4099 = mul <8 x i32> %4095, %4081
  %4100 = add nuw i64 %4077, 32
  %4101 = icmp eq i64 %4100, %4074
  br i1 %4101, label %4102, label %4076, !llvm.loop !157

4102:                                             ; preds = %4076
  %4103 = mul <8 x i32> %4097, %4096
  %4104 = mul <8 x i32> %4098, %4103
  %4105 = mul <8 x i32> %4099, %4104
  %4106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4105)
  %4107 = icmp eq i64 %4070, %4074
  br i1 %4107, label %4120, label %4108

4108:                                             ; preds = %4061, %4102
  %4109 = phi i64 [ %4064, %4061 ], [ %4075, %4102 ]
  %4110 = phi i32 [ 1, %4061 ], [ %4106, %4102 ]
  br label %4111

4111:                                             ; preds = %4108, %4111
  %4112 = phi i64 [ %4117, %4111 ], [ %4109, %4108 ]
  %4113 = phi i32 [ %4116, %4111 ], [ %4110, %4108 ]
  %4114 = getelementptr inbounds i32, ptr %11, i64 %4112
  %4115 = load i32, ptr %4114, align 4, !tbaa !5
  %4116 = mul nsw i32 %4115, %4113
  %4117 = add nsw i64 %4112, -1
  %4118 = trunc i64 %4112 to i32
  %4119 = icmp sgt i32 %4118, 0
  br i1 %4119, label %4111, label %4120, !llvm.loop !158

4120:                                             ; preds = %4111, %4102
  %4121 = phi i32 [ %4106, %4102 ], [ %4116, %4111 ]
  %4122 = and i64 %4071, 4294967295
  %4123 = getelementptr inbounds i32, ptr %6, i64 %4122
  %4124 = load i32, ptr %4123, align 4, !tbaa !5
  %4125 = mul nsw i32 %4124, %4121
  %4126 = add nsw i32 %4125, %4065
  %4127 = icmp sgt i64 %4063, 2
  %4128 = add nsw i64 %4064, -1
  %4129 = add i32 %4062, 1
  br i1 %4127, label %4061, label %4130, !llvm.loop !159

4130:                                             ; preds = %4120, %4057
  %4131 = phi i32 [ %4060, %4057 ], [ %4126, %4120 ]
  %4132 = icmp slt i32 %4131, %5
  br i1 %4132, label %4135, label %4133

4133:                                             ; preds = %4130
  %4134 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

4135:                                             ; preds = %4130
  %4136 = sext i32 %4131 to i64
  %4137 = getelementptr inbounds i8, ptr %3603, i64 %4136
  %4138 = load i8, ptr %4137, align 1, !tbaa !11
  %4139 = uitofp i8 %4138 to double
  %4140 = fadd fast double %4058, %4139
  store double %4140, ptr %3605, align 8, !tbaa !18
  %4141 = add nuw nsw i32 %4059, 1
  br i1 %3912, label %4142, label %4192

4142:                                             ; preds = %4135
  %4143 = load i32, ptr %4, align 4, !tbaa !5
  %4144 = load i32, ptr %12, align 4, !tbaa !5
  %4145 = add nsw i32 %4144, -1
  %4146 = icmp slt i32 %4143, %4145
  br i1 %4146, label %4169, label %4147

4147:                                             ; preds = %4142
  %4148 = icmp eq i32 %4143, %4145
  br i1 %4148, label %4149, label %4185

4149:                                             ; preds = %4147
  store i32 0, ptr %4, align 4, !tbaa !5
  %4150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4150, ptr %6, align 4, !tbaa !5
  br i1 %3917, label %4192, label %4151

4151:                                             ; preds = %4149, %4179
  %4152 = phi i64 [ %4183, %4179 ], [ 1, %4149 ]
  %4153 = getelementptr inbounds i32, ptr %4, i64 %4152
  %4154 = load i32, ptr %4153, align 4, !tbaa !5
  %4155 = getelementptr inbounds i32, ptr %12, i64 %4152
  %4156 = load i32, ptr %4155, align 4, !tbaa !5
  %4157 = add nsw i32 %4156, -1
  %4158 = icmp slt i32 %4154, %4157
  br i1 %4158, label %4159, label %4177

4159:                                             ; preds = %4151
  br i1 %4146, label %4169, label %4160

4160:                                             ; preds = %4159
  %4161 = shl i64 %4152, 32
  %4162 = add i64 %4161, -4294967296
  %4163 = ashr exact i64 %4162, 32
  %4164 = getelementptr inbounds i32, ptr %7, i64 %4163
  %4165 = load i32, ptr %4164, align 4, !tbaa !5
  %4166 = getelementptr inbounds i32, ptr %6, i64 %4152
  %4167 = load i32, ptr %4166, align 4, !tbaa !5
  %4168 = add nsw i32 %4167, %4165
  store i32 %4168, ptr %4166, align 4, !tbaa !5
  br label %4187

4169:                                             ; preds = %4142, %4159
  %4170 = phi i32 [ %4154, %4159 ], [ %4143, %4142 ]
  %4171 = phi ptr [ %4153, %4159 ], [ %4, %4142 ]
  %4172 = phi i64 [ %4152, %4159 ], [ 0, %4142 ]
  %4173 = add nsw i32 %4170, 1
  store i32 %4173, ptr %4171, align 4, !tbaa !5
  %4174 = getelementptr inbounds i32, ptr %7, i64 %4172
  %4175 = load i32, ptr %4174, align 4, !tbaa !5
  %4176 = getelementptr inbounds i32, ptr %6, i64 %4172
  br label %4187

4177:                                             ; preds = %4151
  %4178 = icmp eq i32 %4154, %4157
  br i1 %4178, label %4179, label %4185

4179:                                             ; preds = %4177
  store i32 0, ptr %4153, align 4, !tbaa !5
  %4180 = getelementptr inbounds i32, ptr %8, i64 %4152
  %4181 = load i32, ptr %4180, align 4, !tbaa !5
  %4182 = getelementptr inbounds i32, ptr %6, i64 %4152
  store i32 %4181, ptr %4182, align 4, !tbaa !5
  %4183 = add nuw nsw i64 %4152, 1
  %4184 = icmp eq i64 %4183, %3915
  br i1 %4184, label %4192, label %4151, !llvm.loop !160

4185:                                             ; preds = %4147, %4177
  %4186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4187:                                             ; preds = %4160, %4169
  %4188 = phi ptr [ %4176, %4169 ], [ %4153, %4160 ]
  %4189 = phi i32 [ %4175, %4169 ], [ 1, %4160 ]
  %4190 = load i32, ptr %4188, align 4, !tbaa !5
  %4191 = add nsw i32 %4190, %4189
  store i32 %4191, ptr %4188, align 4, !tbaa !5
  br label %4192

4192:                                             ; preds = %4179, %4187, %4149, %4135
  %4193 = icmp eq i32 %4141, %5
  br i1 %4193, label %5390, label %4057, !llvm.loop !161

4194:                                             ; preds = %3610
  %4195 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 79, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

4196:                                             ; preds = %18
  %4197 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4198 = load ptr, ptr %4197, align 8, !tbaa !9
  %4199 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4200 = load ptr, ptr %4199, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4200, align 4, !tbaa !162
  %4201 = icmp eq i32 %13, 0
  br i1 %4201, label %4202, label %4205

4202:                                             ; preds = %4196
  %4203 = load i8, ptr %4198, align 1, !tbaa !11
  %4204 = uitofp i8 %4203 to float
  store float %4204, ptr %4200, align 4, !tbaa !162
  br label %5390

4205:                                             ; preds = %4196
  switch i32 %1, label %4793 [
    i32 1, label %4206
    i32 0, label %4503
  ]

4206:                                             ; preds = %4205
  %4207 = getelementptr inbounds i32, ptr %3, i64 %19
  %4208 = load i32, ptr %4207, align 4, !tbaa !5
  %4209 = icmp eq i32 %4208, 0
  %4210 = icmp sgt i32 %5, 0
  br i1 %4209, label %4220, label %4211

4211:                                             ; preds = %4206
  br i1 %4210, label %4212, label %5390

4212:                                             ; preds = %4211
  %4213 = icmp sgt i32 %13, 1
  %4214 = icmp sgt i32 %13, 0
  %4215 = add i32 %13, -2
  %4216 = zext i32 %4215 to i64
  %4217 = zext i32 %13 to i64
  %4218 = add nuw i32 %5, 1
  %4219 = icmp eq i32 %13, 1
  br label %4364

4220:                                             ; preds = %4206
  br i1 %4210, label %4221, label %5390

4221:                                             ; preds = %4220
  %4222 = icmp sgt i32 %13, 1
  %4223 = icmp sgt i32 %13, 0
  %4224 = add i32 %13, -2
  %4225 = zext i32 %4224 to i64
  %4226 = zext i32 %13 to i64
  %4227 = add nuw i32 %5, 1
  %4228 = icmp eq i32 %13, 1
  br label %4229

4229:                                             ; preds = %4221, %4362
  %4230 = phi float [ 0.000000e+00, %4221 ], [ %4313, %4362 ]
  %4231 = phi i32 [ 0, %4221 ], [ %4314, %4362 ]
  %4232 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4222, label %4233, label %4302

4233:                                             ; preds = %4229, %4292
  %4234 = phi i32 [ %4301, %4292 ], [ 0, %4229 ]
  %4235 = phi i64 [ %4243, %4292 ], [ %4226, %4229 ]
  %4236 = phi i64 [ %4300, %4292 ], [ %4225, %4229 ]
  %4237 = phi i32 [ %4298, %4292 ], [ %4232, %4229 ]
  %4238 = sub i32 %4224, %4234
  %4239 = tail call i32 @llvm.smin.i32(i32 %4238, i32 0)
  %4240 = sub i32 %4238, %4239
  %4241 = zext i32 %4240 to i64
  %4242 = add nuw nsw i64 %4241, 1
  %4243 = add nsw i64 %4235, -1
  %4244 = icmp ult i32 %4240, 31
  br i1 %4244, label %4280, label %4245

4245:                                             ; preds = %4233
  %4246 = and i64 %4242, 8589934560
  %4247 = sub i64 %4236, %4246
  br label %4248

4248:                                             ; preds = %4248, %4245
  %4249 = phi i64 [ 0, %4245 ], [ %4272, %4248 ]
  %4250 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4245 ], [ %4268, %4248 ]
  %4251 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4245 ], [ %4269, %4248 ]
  %4252 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4245 ], [ %4270, %4248 ]
  %4253 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4245 ], [ %4271, %4248 ]
  %4254 = sub i64 %4236, %4249
  %4255 = getelementptr inbounds i32, ptr %9, i64 %4254
  %4256 = getelementptr inbounds i32, ptr %4255, i64 -7
  %4257 = load <8 x i32>, ptr %4256, align 4, !tbaa !5
  %4258 = shufflevector <8 x i32> %4257, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4259 = getelementptr inbounds i32, ptr %4255, i64 -15
  %4260 = load <8 x i32>, ptr %4259, align 4, !tbaa !5
  %4261 = shufflevector <8 x i32> %4260, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4262 = getelementptr inbounds i32, ptr %4255, i64 -23
  %4263 = load <8 x i32>, ptr %4262, align 4, !tbaa !5
  %4264 = shufflevector <8 x i32> %4263, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4265 = getelementptr inbounds i32, ptr %4255, i64 -31
  %4266 = load <8 x i32>, ptr %4265, align 4, !tbaa !5
  %4267 = shufflevector <8 x i32> %4266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4268 = mul <8 x i32> %4258, %4250
  %4269 = mul <8 x i32> %4261, %4251
  %4270 = mul <8 x i32> %4264, %4252
  %4271 = mul <8 x i32> %4267, %4253
  %4272 = add nuw i64 %4249, 32
  %4273 = icmp eq i64 %4272, %4246
  br i1 %4273, label %4274, label %4248, !llvm.loop !164

4274:                                             ; preds = %4248
  %4275 = mul <8 x i32> %4269, %4268
  %4276 = mul <8 x i32> %4270, %4275
  %4277 = mul <8 x i32> %4271, %4276
  %4278 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4277)
  %4279 = icmp eq i64 %4242, %4246
  br i1 %4279, label %4292, label %4280

4280:                                             ; preds = %4233, %4274
  %4281 = phi i64 [ %4236, %4233 ], [ %4247, %4274 ]
  %4282 = phi i32 [ 1, %4233 ], [ %4278, %4274 ]
  br label %4283

4283:                                             ; preds = %4280, %4283
  %4284 = phi i64 [ %4289, %4283 ], [ %4281, %4280 ]
  %4285 = phi i32 [ %4288, %4283 ], [ %4282, %4280 ]
  %4286 = getelementptr inbounds i32, ptr %9, i64 %4284
  %4287 = load i32, ptr %4286, align 4, !tbaa !5
  %4288 = mul nsw i32 %4287, %4285
  %4289 = add nsw i64 %4284, -1
  %4290 = trunc i64 %4284 to i32
  %4291 = icmp sgt i32 %4290, 0
  br i1 %4291, label %4283, label %4292, !llvm.loop !165

4292:                                             ; preds = %4283, %4274
  %4293 = phi i32 [ %4278, %4274 ], [ %4288, %4283 ]
  %4294 = and i64 %4243, 4294967295
  %4295 = getelementptr inbounds i32, ptr %6, i64 %4294
  %4296 = load i32, ptr %4295, align 4, !tbaa !5
  %4297 = mul nsw i32 %4296, %4293
  %4298 = add nsw i32 %4297, %4237
  %4299 = icmp sgt i64 %4235, 2
  %4300 = add nsw i64 %4236, -1
  %4301 = add i32 %4234, 1
  br i1 %4299, label %4233, label %4302, !llvm.loop !166

4302:                                             ; preds = %4292, %4229
  %4303 = phi i32 [ %4232, %4229 ], [ %4298, %4292 ]
  %4304 = sext i32 %4303 to i64
  %4305 = getelementptr inbounds double, ptr %2, i64 %4304
  %4306 = load double, ptr %4305, align 8, !tbaa !18
  %4307 = getelementptr inbounds i8, ptr %4198, i64 %4304
  %4308 = load i8, ptr %4307, align 1, !tbaa !11
  %4309 = fpext float %4230 to double
  %4310 = uitofp i8 %4308 to double
  %4311 = fmul fast double %4306, %4310
  %4312 = fadd fast double %4311, %4309
  %4313 = fptrunc double %4312 to float
  store float %4313, ptr %4200, align 4, !tbaa !162
  %4314 = add nuw nsw i32 %4231, 1
  br i1 %4223, label %4315, label %4362

4315:                                             ; preds = %4302
  %4316 = load i32, ptr %4, align 4, !tbaa !5
  %4317 = load i32, ptr %12, align 4, !tbaa !5
  %4318 = add nsw i32 %4317, -1
  %4319 = icmp slt i32 %4316, %4318
  br i1 %4319, label %4339, label %4320

4320:                                             ; preds = %4315
  %4321 = icmp eq i32 %4316, %4318
  br i1 %4321, label %4322, label %4355

4322:                                             ; preds = %4320
  store i32 0, ptr %4, align 4, !tbaa !5
  %4323 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4323, ptr %6, align 4, !tbaa !5
  br i1 %4228, label %4362, label %4324

4324:                                             ; preds = %4322, %4349
  %4325 = phi i64 [ %4353, %4349 ], [ 1, %4322 ]
  %4326 = getelementptr inbounds i32, ptr %4, i64 %4325
  %4327 = load i32, ptr %4326, align 4, !tbaa !5
  %4328 = getelementptr inbounds i32, ptr %12, i64 %4325
  %4329 = load i32, ptr %4328, align 4, !tbaa !5
  %4330 = add nsw i32 %4329, -1
  %4331 = icmp slt i32 %4327, %4330
  br i1 %4331, label %4332, label %4347

4332:                                             ; preds = %4324
  br i1 %4319, label %4339, label %4333

4333:                                             ; preds = %4332
  %4334 = getelementptr inbounds i32, ptr %7, i64 %4325
  %4335 = load i32, ptr %4334, align 4, !tbaa !5
  %4336 = getelementptr inbounds i32, ptr %6, i64 %4325
  %4337 = load i32, ptr %4336, align 4, !tbaa !5
  %4338 = add nsw i32 %4337, %4335
  store i32 %4338, ptr %4336, align 4, !tbaa !5
  br label %4357

4339:                                             ; preds = %4315, %4332
  %4340 = phi i32 [ %4327, %4332 ], [ %4316, %4315 ]
  %4341 = phi ptr [ %4326, %4332 ], [ %4, %4315 ]
  %4342 = phi i64 [ %4325, %4332 ], [ 0, %4315 ]
  %4343 = add nsw i32 %4340, 1
  store i32 %4343, ptr %4341, align 4, !tbaa !5
  %4344 = getelementptr inbounds i32, ptr %7, i64 %4342
  %4345 = load i32, ptr %4344, align 4, !tbaa !5
  %4346 = getelementptr inbounds i32, ptr %6, i64 %4342
  br label %4357

4347:                                             ; preds = %4324
  %4348 = icmp eq i32 %4327, %4330
  br i1 %4348, label %4349, label %4355

4349:                                             ; preds = %4347
  store i32 0, ptr %4326, align 4, !tbaa !5
  %4350 = getelementptr inbounds i32, ptr %8, i64 %4325
  %4351 = load i32, ptr %4350, align 4, !tbaa !5
  %4352 = getelementptr inbounds i32, ptr %6, i64 %4325
  store i32 %4351, ptr %4352, align 4, !tbaa !5
  %4353 = add nuw nsw i64 %4325, 1
  %4354 = icmp eq i64 %4353, %4226
  br i1 %4354, label %4362, label %4324, !llvm.loop !167

4355:                                             ; preds = %4320, %4347
  %4356 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4357:                                             ; preds = %4333, %4339
  %4358 = phi ptr [ %4346, %4339 ], [ %4326, %4333 ]
  %4359 = phi i32 [ %4345, %4339 ], [ 1, %4333 ]
  %4360 = load i32, ptr %4358, align 4, !tbaa !5
  %4361 = add nsw i32 %4360, %4359
  store i32 %4361, ptr %4358, align 4, !tbaa !5
  br label %4362

4362:                                             ; preds = %4349, %4357, %4322, %4302
  %4363 = icmp eq i32 %4314, %5
  br i1 %4363, label %5390, label %4229, !llvm.loop !168

4364:                                             ; preds = %4212, %4501
  %4365 = phi float [ 0.000000e+00, %4212 ], [ %4449, %4501 ]
  %4366 = phi i32 [ 0, %4212 ], [ %4450, %4501 ]
  %4367 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4213, label %4368, label %4437

4368:                                             ; preds = %4364, %4427
  %4369 = phi i32 [ %4436, %4427 ], [ 0, %4364 ]
  %4370 = phi i64 [ %4378, %4427 ], [ %4217, %4364 ]
  %4371 = phi i64 [ %4435, %4427 ], [ %4216, %4364 ]
  %4372 = phi i32 [ %4433, %4427 ], [ %4367, %4364 ]
  %4373 = sub i32 %4215, %4369
  %4374 = tail call i32 @llvm.smin.i32(i32 %4373, i32 0)
  %4375 = sub i32 %4373, %4374
  %4376 = zext i32 %4375 to i64
  %4377 = add nuw nsw i64 %4376, 1
  %4378 = add nsw i64 %4370, -1
  %4379 = icmp ult i32 %4375, 31
  br i1 %4379, label %4415, label %4380

4380:                                             ; preds = %4368
  %4381 = and i64 %4377, 8589934560
  %4382 = sub i64 %4371, %4381
  br label %4383

4383:                                             ; preds = %4383, %4380
  %4384 = phi i64 [ 0, %4380 ], [ %4407, %4383 ]
  %4385 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4380 ], [ %4403, %4383 ]
  %4386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4380 ], [ %4404, %4383 ]
  %4387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4380 ], [ %4405, %4383 ]
  %4388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4380 ], [ %4406, %4383 ]
  %4389 = sub i64 %4371, %4384
  %4390 = getelementptr inbounds i32, ptr %11, i64 %4389
  %4391 = getelementptr inbounds i32, ptr %4390, i64 -7
  %4392 = load <8 x i32>, ptr %4391, align 4, !tbaa !5
  %4393 = shufflevector <8 x i32> %4392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4394 = getelementptr inbounds i32, ptr %4390, i64 -15
  %4395 = load <8 x i32>, ptr %4394, align 4, !tbaa !5
  %4396 = shufflevector <8 x i32> %4395, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4397 = getelementptr inbounds i32, ptr %4390, i64 -23
  %4398 = load <8 x i32>, ptr %4397, align 4, !tbaa !5
  %4399 = shufflevector <8 x i32> %4398, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4400 = getelementptr inbounds i32, ptr %4390, i64 -31
  %4401 = load <8 x i32>, ptr %4400, align 4, !tbaa !5
  %4402 = shufflevector <8 x i32> %4401, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4403 = mul <8 x i32> %4393, %4385
  %4404 = mul <8 x i32> %4396, %4386
  %4405 = mul <8 x i32> %4399, %4387
  %4406 = mul <8 x i32> %4402, %4388
  %4407 = add nuw i64 %4384, 32
  %4408 = icmp eq i64 %4407, %4381
  br i1 %4408, label %4409, label %4383, !llvm.loop !169

4409:                                             ; preds = %4383
  %4410 = mul <8 x i32> %4404, %4403
  %4411 = mul <8 x i32> %4405, %4410
  %4412 = mul <8 x i32> %4406, %4411
  %4413 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4412)
  %4414 = icmp eq i64 %4377, %4381
  br i1 %4414, label %4427, label %4415

4415:                                             ; preds = %4368, %4409
  %4416 = phi i64 [ %4371, %4368 ], [ %4382, %4409 ]
  %4417 = phi i32 [ 1, %4368 ], [ %4413, %4409 ]
  br label %4418

4418:                                             ; preds = %4415, %4418
  %4419 = phi i64 [ %4424, %4418 ], [ %4416, %4415 ]
  %4420 = phi i32 [ %4423, %4418 ], [ %4417, %4415 ]
  %4421 = getelementptr inbounds i32, ptr %11, i64 %4419
  %4422 = load i32, ptr %4421, align 4, !tbaa !5
  %4423 = mul nsw i32 %4422, %4420
  %4424 = add nsw i64 %4419, -1
  %4425 = trunc i64 %4419 to i32
  %4426 = icmp sgt i32 %4425, 0
  br i1 %4426, label %4418, label %4427, !llvm.loop !170

4427:                                             ; preds = %4418, %4409
  %4428 = phi i32 [ %4413, %4409 ], [ %4423, %4418 ]
  %4429 = and i64 %4378, 4294967295
  %4430 = getelementptr inbounds i32, ptr %6, i64 %4429
  %4431 = load i32, ptr %4430, align 4, !tbaa !5
  %4432 = mul nsw i32 %4431, %4428
  %4433 = add nsw i32 %4432, %4372
  %4434 = icmp sgt i64 %4370, 2
  %4435 = add nsw i64 %4371, -1
  %4436 = add i32 %4369, 1
  br i1 %4434, label %4368, label %4437, !llvm.loop !171

4437:                                             ; preds = %4427, %4364
  %4438 = phi i32 [ %4367, %4364 ], [ %4433, %4427 ]
  %4439 = icmp slt i32 %4438, %5
  br i1 %4439, label %4442, label %4440

4440:                                             ; preds = %4437
  %4441 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

4442:                                             ; preds = %4437
  %4443 = sext i32 %4438 to i64
  %4444 = getelementptr inbounds i8, ptr %4198, i64 %4443
  %4445 = load i8, ptr %4444, align 1, !tbaa !11
  %4446 = fpext float %4365 to double
  %4447 = uitofp i8 %4445 to double
  %4448 = fadd fast double %4446, %4447
  %4449 = fptrunc double %4448 to float
  store float %4449, ptr %4200, align 4, !tbaa !162
  %4450 = add nuw nsw i32 %4366, 1
  br i1 %4214, label %4451, label %4501

4451:                                             ; preds = %4442
  %4452 = load i32, ptr %4, align 4, !tbaa !5
  %4453 = load i32, ptr %12, align 4, !tbaa !5
  %4454 = add nsw i32 %4453, -1
  %4455 = icmp slt i32 %4452, %4454
  br i1 %4455, label %4478, label %4456

4456:                                             ; preds = %4451
  %4457 = icmp eq i32 %4452, %4454
  br i1 %4457, label %4458, label %4494

4458:                                             ; preds = %4456
  store i32 0, ptr %4, align 4, !tbaa !5
  %4459 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4459, ptr %6, align 4, !tbaa !5
  br i1 %4219, label %4501, label %4460

4460:                                             ; preds = %4458, %4488
  %4461 = phi i64 [ %4492, %4488 ], [ 1, %4458 ]
  %4462 = getelementptr inbounds i32, ptr %4, i64 %4461
  %4463 = load i32, ptr %4462, align 4, !tbaa !5
  %4464 = getelementptr inbounds i32, ptr %12, i64 %4461
  %4465 = load i32, ptr %4464, align 4, !tbaa !5
  %4466 = add nsw i32 %4465, -1
  %4467 = icmp slt i32 %4463, %4466
  br i1 %4467, label %4468, label %4486

4468:                                             ; preds = %4460
  br i1 %4455, label %4478, label %4469

4469:                                             ; preds = %4468
  %4470 = shl i64 %4461, 32
  %4471 = add i64 %4470, -4294967296
  %4472 = ashr exact i64 %4471, 32
  %4473 = getelementptr inbounds i32, ptr %7, i64 %4472
  %4474 = load i32, ptr %4473, align 4, !tbaa !5
  %4475 = getelementptr inbounds i32, ptr %6, i64 %4461
  %4476 = load i32, ptr %4475, align 4, !tbaa !5
  %4477 = add nsw i32 %4476, %4474
  store i32 %4477, ptr %4475, align 4, !tbaa !5
  br label %4496

4478:                                             ; preds = %4451, %4468
  %4479 = phi i32 [ %4463, %4468 ], [ %4452, %4451 ]
  %4480 = phi ptr [ %4462, %4468 ], [ %4, %4451 ]
  %4481 = phi i64 [ %4461, %4468 ], [ 0, %4451 ]
  %4482 = add nsw i32 %4479, 1
  store i32 %4482, ptr %4480, align 4, !tbaa !5
  %4483 = getelementptr inbounds i32, ptr %7, i64 %4481
  %4484 = load i32, ptr %4483, align 4, !tbaa !5
  %4485 = getelementptr inbounds i32, ptr %6, i64 %4481
  br label %4496

4486:                                             ; preds = %4460
  %4487 = icmp eq i32 %4463, %4466
  br i1 %4487, label %4488, label %4494

4488:                                             ; preds = %4486
  store i32 0, ptr %4462, align 4, !tbaa !5
  %4489 = getelementptr inbounds i32, ptr %8, i64 %4461
  %4490 = load i32, ptr %4489, align 4, !tbaa !5
  %4491 = getelementptr inbounds i32, ptr %6, i64 %4461
  store i32 %4490, ptr %4491, align 4, !tbaa !5
  %4492 = add nuw nsw i64 %4461, 1
  %4493 = icmp eq i64 %4492, %4217
  br i1 %4493, label %4501, label %4460, !llvm.loop !172

4494:                                             ; preds = %4456, %4486
  %4495 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4496:                                             ; preds = %4469, %4478
  %4497 = phi ptr [ %4485, %4478 ], [ %4462, %4469 ]
  %4498 = phi i32 [ %4484, %4478 ], [ 1, %4469 ]
  %4499 = load i32, ptr %4497, align 4, !tbaa !5
  %4500 = add nsw i32 %4499, %4498
  store i32 %4500, ptr %4497, align 4, !tbaa !5
  br label %4501

4501:                                             ; preds = %4488, %4496, %4458, %4442
  %4502 = icmp eq i32 %4450, %5
  br i1 %4502, label %5390, label %4364, !llvm.loop !173

4503:                                             ; preds = %4205
  %4504 = getelementptr inbounds i32, ptr %3, i64 %19
  %4505 = load i32, ptr %4504, align 4, !tbaa !5
  %4506 = icmp eq i32 %4505, 0
  %4507 = icmp sgt i32 %5, 0
  br i1 %4506, label %4517, label %4508

4508:                                             ; preds = %4503
  br i1 %4507, label %4509, label %5390

4509:                                             ; preds = %4508
  %4510 = icmp sgt i32 %13, 1
  %4511 = icmp sgt i32 %13, 0
  %4512 = add i32 %13, -2
  %4513 = zext i32 %4512 to i64
  %4514 = zext i32 %13 to i64
  %4515 = add nuw i32 %5, 1
  %4516 = icmp eq i32 %13, 1
  br label %4656

4517:                                             ; preds = %4503
  br i1 %4507, label %4518, label %5390

4518:                                             ; preds = %4517
  %4519 = icmp sgt i32 %13, 1
  %4520 = icmp sgt i32 %13, 0
  %4521 = add i32 %13, -2
  %4522 = zext i32 %4521 to i64
  %4523 = zext i32 %13 to i64
  %4524 = add nuw i32 %5, 1
  %4525 = icmp eq i32 %13, 1
  br label %4526

4526:                                             ; preds = %4518, %4654
  %4527 = phi float [ 0.000000e+00, %4518 ], [ %4605, %4654 ]
  %4528 = phi i32 [ 0, %4518 ], [ %4606, %4654 ]
  %4529 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4519, label %4530, label %4599

4530:                                             ; preds = %4526, %4589
  %4531 = phi i32 [ %4598, %4589 ], [ 0, %4526 ]
  %4532 = phi i64 [ %4540, %4589 ], [ %4523, %4526 ]
  %4533 = phi i64 [ %4597, %4589 ], [ %4522, %4526 ]
  %4534 = phi i32 [ %4595, %4589 ], [ %4529, %4526 ]
  %4535 = sub i32 %4521, %4531
  %4536 = tail call i32 @llvm.smin.i32(i32 %4535, i32 0)
  %4537 = sub i32 %4535, %4536
  %4538 = zext i32 %4537 to i64
  %4539 = add nuw nsw i64 %4538, 1
  %4540 = add nsw i64 %4532, -1
  %4541 = icmp ult i32 %4537, 31
  br i1 %4541, label %4577, label %4542

4542:                                             ; preds = %4530
  %4543 = and i64 %4539, 8589934560
  %4544 = sub i64 %4533, %4543
  br label %4545

4545:                                             ; preds = %4545, %4542
  %4546 = phi i64 [ 0, %4542 ], [ %4569, %4545 ]
  %4547 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4542 ], [ %4565, %4545 ]
  %4548 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4542 ], [ %4566, %4545 ]
  %4549 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4542 ], [ %4567, %4545 ]
  %4550 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4542 ], [ %4568, %4545 ]
  %4551 = sub i64 %4533, %4546
  %4552 = getelementptr inbounds i32, ptr %9, i64 %4551
  %4553 = getelementptr inbounds i32, ptr %4552, i64 -7
  %4554 = load <8 x i32>, ptr %4553, align 4, !tbaa !5
  %4555 = shufflevector <8 x i32> %4554, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4556 = getelementptr inbounds i32, ptr %4552, i64 -15
  %4557 = load <8 x i32>, ptr %4556, align 4, !tbaa !5
  %4558 = shufflevector <8 x i32> %4557, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4559 = getelementptr inbounds i32, ptr %4552, i64 -23
  %4560 = load <8 x i32>, ptr %4559, align 4, !tbaa !5
  %4561 = shufflevector <8 x i32> %4560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4562 = getelementptr inbounds i32, ptr %4552, i64 -31
  %4563 = load <8 x i32>, ptr %4562, align 4, !tbaa !5
  %4564 = shufflevector <8 x i32> %4563, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4565 = mul <8 x i32> %4555, %4547
  %4566 = mul <8 x i32> %4558, %4548
  %4567 = mul <8 x i32> %4561, %4549
  %4568 = mul <8 x i32> %4564, %4550
  %4569 = add nuw i64 %4546, 32
  %4570 = icmp eq i64 %4569, %4543
  br i1 %4570, label %4571, label %4545, !llvm.loop !174

4571:                                             ; preds = %4545
  %4572 = mul <8 x i32> %4566, %4565
  %4573 = mul <8 x i32> %4567, %4572
  %4574 = mul <8 x i32> %4568, %4573
  %4575 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4574)
  %4576 = icmp eq i64 %4539, %4543
  br i1 %4576, label %4589, label %4577

4577:                                             ; preds = %4530, %4571
  %4578 = phi i64 [ %4533, %4530 ], [ %4544, %4571 ]
  %4579 = phi i32 [ 1, %4530 ], [ %4575, %4571 ]
  br label %4580

4580:                                             ; preds = %4577, %4580
  %4581 = phi i64 [ %4586, %4580 ], [ %4578, %4577 ]
  %4582 = phi i32 [ %4585, %4580 ], [ %4579, %4577 ]
  %4583 = getelementptr inbounds i32, ptr %9, i64 %4581
  %4584 = load i32, ptr %4583, align 4, !tbaa !5
  %4585 = mul nsw i32 %4584, %4582
  %4586 = add nsw i64 %4581, -1
  %4587 = trunc i64 %4581 to i32
  %4588 = icmp sgt i32 %4587, 0
  br i1 %4588, label %4580, label %4589, !llvm.loop !175

4589:                                             ; preds = %4580, %4571
  %4590 = phi i32 [ %4575, %4571 ], [ %4585, %4580 ]
  %4591 = and i64 %4540, 4294967295
  %4592 = getelementptr inbounds i32, ptr %6, i64 %4591
  %4593 = load i32, ptr %4592, align 4, !tbaa !5
  %4594 = mul nsw i32 %4593, %4590
  %4595 = add nsw i32 %4594, %4534
  %4596 = icmp sgt i64 %4532, 2
  %4597 = add nsw i64 %4533, -1
  %4598 = add i32 %4531, 1
  br i1 %4596, label %4530, label %4599, !llvm.loop !176

4599:                                             ; preds = %4589, %4526
  %4600 = phi i32 [ %4529, %4526 ], [ %4595, %4589 ]
  %4601 = sext i32 %4600 to i64
  %4602 = getelementptr inbounds i8, ptr %4198, i64 %4601
  %4603 = load i8, ptr %4602, align 1, !tbaa !11
  %4604 = uitofp i8 %4603 to float
  %4605 = fadd fast float %4527, %4604
  store float %4605, ptr %4200, align 4, !tbaa !162
  %4606 = add nuw nsw i32 %4528, 1
  br i1 %4520, label %4607, label %4654

4607:                                             ; preds = %4599
  %4608 = load i32, ptr %4, align 4, !tbaa !5
  %4609 = load i32, ptr %12, align 4, !tbaa !5
  %4610 = add nsw i32 %4609, -1
  %4611 = icmp slt i32 %4608, %4610
  br i1 %4611, label %4631, label %4612

4612:                                             ; preds = %4607
  %4613 = icmp eq i32 %4608, %4610
  br i1 %4613, label %4614, label %4647

4614:                                             ; preds = %4612
  store i32 0, ptr %4, align 4, !tbaa !5
  %4615 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4615, ptr %6, align 4, !tbaa !5
  br i1 %4525, label %4654, label %4616

4616:                                             ; preds = %4614, %4641
  %4617 = phi i64 [ %4645, %4641 ], [ 1, %4614 ]
  %4618 = getelementptr inbounds i32, ptr %4, i64 %4617
  %4619 = load i32, ptr %4618, align 4, !tbaa !5
  %4620 = getelementptr inbounds i32, ptr %12, i64 %4617
  %4621 = load i32, ptr %4620, align 4, !tbaa !5
  %4622 = add nsw i32 %4621, -1
  %4623 = icmp slt i32 %4619, %4622
  br i1 %4623, label %4624, label %4639

4624:                                             ; preds = %4616
  br i1 %4611, label %4631, label %4625

4625:                                             ; preds = %4624
  %4626 = getelementptr inbounds i32, ptr %7, i64 %4617
  %4627 = load i32, ptr %4626, align 4, !tbaa !5
  %4628 = getelementptr inbounds i32, ptr %6, i64 %4617
  %4629 = load i32, ptr %4628, align 4, !tbaa !5
  %4630 = add nsw i32 %4629, %4627
  store i32 %4630, ptr %4628, align 4, !tbaa !5
  br label %4649

4631:                                             ; preds = %4607, %4624
  %4632 = phi i32 [ %4619, %4624 ], [ %4608, %4607 ]
  %4633 = phi ptr [ %4618, %4624 ], [ %4, %4607 ]
  %4634 = phi i64 [ %4617, %4624 ], [ 0, %4607 ]
  %4635 = add nsw i32 %4632, 1
  store i32 %4635, ptr %4633, align 4, !tbaa !5
  %4636 = getelementptr inbounds i32, ptr %7, i64 %4634
  %4637 = load i32, ptr %4636, align 4, !tbaa !5
  %4638 = getelementptr inbounds i32, ptr %6, i64 %4634
  br label %4649

4639:                                             ; preds = %4616
  %4640 = icmp eq i32 %4619, %4622
  br i1 %4640, label %4641, label %4647

4641:                                             ; preds = %4639
  store i32 0, ptr %4618, align 4, !tbaa !5
  %4642 = getelementptr inbounds i32, ptr %8, i64 %4617
  %4643 = load i32, ptr %4642, align 4, !tbaa !5
  %4644 = getelementptr inbounds i32, ptr %6, i64 %4617
  store i32 %4643, ptr %4644, align 4, !tbaa !5
  %4645 = add nuw nsw i64 %4617, 1
  %4646 = icmp eq i64 %4645, %4523
  br i1 %4646, label %4654, label %4616, !llvm.loop !177

4647:                                             ; preds = %4612, %4639
  %4648 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4649:                                             ; preds = %4625, %4631
  %4650 = phi ptr [ %4638, %4631 ], [ %4618, %4625 ]
  %4651 = phi i32 [ %4637, %4631 ], [ 1, %4625 ]
  %4652 = load i32, ptr %4650, align 4, !tbaa !5
  %4653 = add nsw i32 %4652, %4651
  store i32 %4653, ptr %4650, align 4, !tbaa !5
  br label %4654

4654:                                             ; preds = %4641, %4649, %4614, %4599
  %4655 = icmp eq i32 %4606, %5
  br i1 %4655, label %5390, label %4526, !llvm.loop !178

4656:                                             ; preds = %4509, %4791
  %4657 = phi float [ 0.000000e+00, %4509 ], [ %4739, %4791 ]
  %4658 = phi i32 [ 0, %4509 ], [ %4740, %4791 ]
  %4659 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4510, label %4660, label %4729

4660:                                             ; preds = %4656, %4719
  %4661 = phi i32 [ %4728, %4719 ], [ 0, %4656 ]
  %4662 = phi i64 [ %4670, %4719 ], [ %4514, %4656 ]
  %4663 = phi i64 [ %4727, %4719 ], [ %4513, %4656 ]
  %4664 = phi i32 [ %4725, %4719 ], [ %4659, %4656 ]
  %4665 = sub i32 %4512, %4661
  %4666 = tail call i32 @llvm.smin.i32(i32 %4665, i32 0)
  %4667 = sub i32 %4665, %4666
  %4668 = zext i32 %4667 to i64
  %4669 = add nuw nsw i64 %4668, 1
  %4670 = add nsw i64 %4662, -1
  %4671 = icmp ult i32 %4667, 31
  br i1 %4671, label %4707, label %4672

4672:                                             ; preds = %4660
  %4673 = and i64 %4669, 8589934560
  %4674 = sub i64 %4663, %4673
  br label %4675

4675:                                             ; preds = %4675, %4672
  %4676 = phi i64 [ 0, %4672 ], [ %4699, %4675 ]
  %4677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4672 ], [ %4695, %4675 ]
  %4678 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4672 ], [ %4696, %4675 ]
  %4679 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4672 ], [ %4697, %4675 ]
  %4680 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4672 ], [ %4698, %4675 ]
  %4681 = sub i64 %4663, %4676
  %4682 = getelementptr inbounds i32, ptr %11, i64 %4681
  %4683 = getelementptr inbounds i32, ptr %4682, i64 -7
  %4684 = load <8 x i32>, ptr %4683, align 4, !tbaa !5
  %4685 = shufflevector <8 x i32> %4684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4686 = getelementptr inbounds i32, ptr %4682, i64 -15
  %4687 = load <8 x i32>, ptr %4686, align 4, !tbaa !5
  %4688 = shufflevector <8 x i32> %4687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4689 = getelementptr inbounds i32, ptr %4682, i64 -23
  %4690 = load <8 x i32>, ptr %4689, align 4, !tbaa !5
  %4691 = shufflevector <8 x i32> %4690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4692 = getelementptr inbounds i32, ptr %4682, i64 -31
  %4693 = load <8 x i32>, ptr %4692, align 4, !tbaa !5
  %4694 = shufflevector <8 x i32> %4693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4695 = mul <8 x i32> %4685, %4677
  %4696 = mul <8 x i32> %4688, %4678
  %4697 = mul <8 x i32> %4691, %4679
  %4698 = mul <8 x i32> %4694, %4680
  %4699 = add nuw i64 %4676, 32
  %4700 = icmp eq i64 %4699, %4673
  br i1 %4700, label %4701, label %4675, !llvm.loop !179

4701:                                             ; preds = %4675
  %4702 = mul <8 x i32> %4696, %4695
  %4703 = mul <8 x i32> %4697, %4702
  %4704 = mul <8 x i32> %4698, %4703
  %4705 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4704)
  %4706 = icmp eq i64 %4669, %4673
  br i1 %4706, label %4719, label %4707

4707:                                             ; preds = %4660, %4701
  %4708 = phi i64 [ %4663, %4660 ], [ %4674, %4701 ]
  %4709 = phi i32 [ 1, %4660 ], [ %4705, %4701 ]
  br label %4710

4710:                                             ; preds = %4707, %4710
  %4711 = phi i64 [ %4716, %4710 ], [ %4708, %4707 ]
  %4712 = phi i32 [ %4715, %4710 ], [ %4709, %4707 ]
  %4713 = getelementptr inbounds i32, ptr %11, i64 %4711
  %4714 = load i32, ptr %4713, align 4, !tbaa !5
  %4715 = mul nsw i32 %4714, %4712
  %4716 = add nsw i64 %4711, -1
  %4717 = trunc i64 %4711 to i32
  %4718 = icmp sgt i32 %4717, 0
  br i1 %4718, label %4710, label %4719, !llvm.loop !180

4719:                                             ; preds = %4710, %4701
  %4720 = phi i32 [ %4705, %4701 ], [ %4715, %4710 ]
  %4721 = and i64 %4670, 4294967295
  %4722 = getelementptr inbounds i32, ptr %6, i64 %4721
  %4723 = load i32, ptr %4722, align 4, !tbaa !5
  %4724 = mul nsw i32 %4723, %4720
  %4725 = add nsw i32 %4724, %4664
  %4726 = icmp sgt i64 %4662, 2
  %4727 = add nsw i64 %4663, -1
  %4728 = add i32 %4661, 1
  br i1 %4726, label %4660, label %4729, !llvm.loop !181

4729:                                             ; preds = %4719, %4656
  %4730 = phi i32 [ %4659, %4656 ], [ %4725, %4719 ]
  %4731 = icmp slt i32 %4730, %5
  br i1 %4731, label %4734, label %4732

4732:                                             ; preds = %4729
  %4733 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

4734:                                             ; preds = %4729
  %4735 = sext i32 %4730 to i64
  %4736 = getelementptr inbounds i8, ptr %4198, i64 %4735
  %4737 = load i8, ptr %4736, align 1, !tbaa !11
  %4738 = uitofp i8 %4737 to float
  %4739 = fadd fast float %4657, %4738
  store float %4739, ptr %4200, align 4, !tbaa !162
  %4740 = add nuw nsw i32 %4658, 1
  br i1 %4511, label %4741, label %4791

4741:                                             ; preds = %4734
  %4742 = load i32, ptr %4, align 4, !tbaa !5
  %4743 = load i32, ptr %12, align 4, !tbaa !5
  %4744 = add nsw i32 %4743, -1
  %4745 = icmp slt i32 %4742, %4744
  br i1 %4745, label %4768, label %4746

4746:                                             ; preds = %4741
  %4747 = icmp eq i32 %4742, %4744
  br i1 %4747, label %4748, label %4784

4748:                                             ; preds = %4746
  store i32 0, ptr %4, align 4, !tbaa !5
  %4749 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4749, ptr %6, align 4, !tbaa !5
  br i1 %4516, label %4791, label %4750

4750:                                             ; preds = %4748, %4778
  %4751 = phi i64 [ %4782, %4778 ], [ 1, %4748 ]
  %4752 = getelementptr inbounds i32, ptr %4, i64 %4751
  %4753 = load i32, ptr %4752, align 4, !tbaa !5
  %4754 = getelementptr inbounds i32, ptr %12, i64 %4751
  %4755 = load i32, ptr %4754, align 4, !tbaa !5
  %4756 = add nsw i32 %4755, -1
  %4757 = icmp slt i32 %4753, %4756
  br i1 %4757, label %4758, label %4776

4758:                                             ; preds = %4750
  br i1 %4745, label %4768, label %4759

4759:                                             ; preds = %4758
  %4760 = shl i64 %4751, 32
  %4761 = add i64 %4760, -4294967296
  %4762 = ashr exact i64 %4761, 32
  %4763 = getelementptr inbounds i32, ptr %7, i64 %4762
  %4764 = load i32, ptr %4763, align 4, !tbaa !5
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4751
  %4766 = load i32, ptr %4765, align 4, !tbaa !5
  %4767 = add nsw i32 %4766, %4764
  store i32 %4767, ptr %4765, align 4, !tbaa !5
  br label %4786

4768:                                             ; preds = %4741, %4758
  %4769 = phi i32 [ %4753, %4758 ], [ %4742, %4741 ]
  %4770 = phi ptr [ %4752, %4758 ], [ %4, %4741 ]
  %4771 = phi i64 [ %4751, %4758 ], [ 0, %4741 ]
  %4772 = add nsw i32 %4769, 1
  store i32 %4772, ptr %4770, align 4, !tbaa !5
  %4773 = getelementptr inbounds i32, ptr %7, i64 %4771
  %4774 = load i32, ptr %4773, align 4, !tbaa !5
  %4775 = getelementptr inbounds i32, ptr %6, i64 %4771
  br label %4786

4776:                                             ; preds = %4750
  %4777 = icmp eq i32 %4753, %4756
  br i1 %4777, label %4778, label %4784

4778:                                             ; preds = %4776
  store i32 0, ptr %4752, align 4, !tbaa !5
  %4779 = getelementptr inbounds i32, ptr %8, i64 %4751
  %4780 = load i32, ptr %4779, align 4, !tbaa !5
  %4781 = getelementptr inbounds i32, ptr %6, i64 %4751
  store i32 %4780, ptr %4781, align 4, !tbaa !5
  %4782 = add nuw nsw i64 %4751, 1
  %4783 = icmp eq i64 %4782, %4514
  br i1 %4783, label %4791, label %4750, !llvm.loop !182

4784:                                             ; preds = %4746, %4776
  %4785 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4786:                                             ; preds = %4759, %4768
  %4787 = phi ptr [ %4775, %4768 ], [ %4752, %4759 ]
  %4788 = phi i32 [ %4774, %4768 ], [ 1, %4759 ]
  %4789 = load i32, ptr %4787, align 4, !tbaa !5
  %4790 = add nsw i32 %4789, %4788
  store i32 %4790, ptr %4787, align 4, !tbaa !5
  br label %4791

4791:                                             ; preds = %4778, %4786, %4748, %4734
  %4792 = icmp eq i32 %4740, %5
  br i1 %4792, label %5390, label %4656, !llvm.loop !183

4793:                                             ; preds = %4205
  %4794 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 83, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

4795:                                             ; preds = %18
  %4796 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4797 = load ptr, ptr %4796, align 8, !tbaa !9
  %4798 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4799 = load ptr, ptr %4798, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4799, align 8, !tbaa !18
  %4800 = icmp eq i32 %13, 0
  br i1 %4800, label %4801, label %4804

4801:                                             ; preds = %4795
  %4802 = load i8, ptr %4797, align 1, !tbaa !11
  %4803 = uitofp i8 %4802 to double
  store double %4803, ptr %4799, align 8, !tbaa !18
  br label %5390

4804:                                             ; preds = %4795
  switch i32 %1, label %5388 [
    i32 1, label %4805
    i32 0, label %5098
  ]

4805:                                             ; preds = %4804
  %4806 = getelementptr inbounds i32, ptr %3, i64 %19
  %4807 = load i32, ptr %4806, align 4, !tbaa !5
  %4808 = icmp eq i32 %4807, 0
  %4809 = icmp sgt i32 %5, 0
  br i1 %4808, label %4819, label %4810

4810:                                             ; preds = %4805
  br i1 %4809, label %4811, label %5390

4811:                                             ; preds = %4810
  %4812 = icmp sgt i32 %13, 1
  %4813 = icmp sgt i32 %13, 0
  %4814 = add i32 %13, -2
  %4815 = zext i32 %4814 to i64
  %4816 = zext i32 %13 to i64
  %4817 = add nuw i32 %5, 1
  %4818 = icmp eq i32 %13, 1
  br label %4961

4819:                                             ; preds = %4805
  br i1 %4809, label %4820, label %5390

4820:                                             ; preds = %4819
  %4821 = icmp sgt i32 %13, 1
  %4822 = icmp sgt i32 %13, 0
  %4823 = add i32 %13, -2
  %4824 = zext i32 %4823 to i64
  %4825 = zext i32 %13 to i64
  %4826 = add nuw i32 %5, 1
  %4827 = icmp eq i32 %13, 1
  br label %4828

4828:                                             ; preds = %4820, %4959
  %4829 = phi double [ 0.000000e+00, %4820 ], [ %4910, %4959 ]
  %4830 = phi i32 [ 0, %4820 ], [ %4911, %4959 ]
  %4831 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4821, label %4832, label %4901

4832:                                             ; preds = %4828, %4891
  %4833 = phi i32 [ %4900, %4891 ], [ 0, %4828 ]
  %4834 = phi i64 [ %4842, %4891 ], [ %4825, %4828 ]
  %4835 = phi i64 [ %4899, %4891 ], [ %4824, %4828 ]
  %4836 = phi i32 [ %4897, %4891 ], [ %4831, %4828 ]
  %4837 = sub i32 %4823, %4833
  %4838 = tail call i32 @llvm.smin.i32(i32 %4837, i32 0)
  %4839 = sub i32 %4837, %4838
  %4840 = zext i32 %4839 to i64
  %4841 = add nuw nsw i64 %4840, 1
  %4842 = add nsw i64 %4834, -1
  %4843 = icmp ult i32 %4839, 31
  br i1 %4843, label %4879, label %4844

4844:                                             ; preds = %4832
  %4845 = and i64 %4841, 8589934560
  %4846 = sub i64 %4835, %4845
  br label %4847

4847:                                             ; preds = %4847, %4844
  %4848 = phi i64 [ 0, %4844 ], [ %4871, %4847 ]
  %4849 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4844 ], [ %4867, %4847 ]
  %4850 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4844 ], [ %4868, %4847 ]
  %4851 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4844 ], [ %4869, %4847 ]
  %4852 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4844 ], [ %4870, %4847 ]
  %4853 = sub i64 %4835, %4848
  %4854 = getelementptr inbounds i32, ptr %9, i64 %4853
  %4855 = getelementptr inbounds i32, ptr %4854, i64 -7
  %4856 = load <8 x i32>, ptr %4855, align 4, !tbaa !5
  %4857 = shufflevector <8 x i32> %4856, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4858 = getelementptr inbounds i32, ptr %4854, i64 -15
  %4859 = load <8 x i32>, ptr %4858, align 4, !tbaa !5
  %4860 = shufflevector <8 x i32> %4859, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4861 = getelementptr inbounds i32, ptr %4854, i64 -23
  %4862 = load <8 x i32>, ptr %4861, align 4, !tbaa !5
  %4863 = shufflevector <8 x i32> %4862, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4864 = getelementptr inbounds i32, ptr %4854, i64 -31
  %4865 = load <8 x i32>, ptr %4864, align 4, !tbaa !5
  %4866 = shufflevector <8 x i32> %4865, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4867 = mul <8 x i32> %4857, %4849
  %4868 = mul <8 x i32> %4860, %4850
  %4869 = mul <8 x i32> %4863, %4851
  %4870 = mul <8 x i32> %4866, %4852
  %4871 = add nuw i64 %4848, 32
  %4872 = icmp eq i64 %4871, %4845
  br i1 %4872, label %4873, label %4847, !llvm.loop !184

4873:                                             ; preds = %4847
  %4874 = mul <8 x i32> %4868, %4867
  %4875 = mul <8 x i32> %4869, %4874
  %4876 = mul <8 x i32> %4870, %4875
  %4877 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4876)
  %4878 = icmp eq i64 %4841, %4845
  br i1 %4878, label %4891, label %4879

4879:                                             ; preds = %4832, %4873
  %4880 = phi i64 [ %4835, %4832 ], [ %4846, %4873 ]
  %4881 = phi i32 [ 1, %4832 ], [ %4877, %4873 ]
  br label %4882

4882:                                             ; preds = %4879, %4882
  %4883 = phi i64 [ %4888, %4882 ], [ %4880, %4879 ]
  %4884 = phi i32 [ %4887, %4882 ], [ %4881, %4879 ]
  %4885 = getelementptr inbounds i32, ptr %9, i64 %4883
  %4886 = load i32, ptr %4885, align 4, !tbaa !5
  %4887 = mul nsw i32 %4886, %4884
  %4888 = add nsw i64 %4883, -1
  %4889 = trunc i64 %4883 to i32
  %4890 = icmp sgt i32 %4889, 0
  br i1 %4890, label %4882, label %4891, !llvm.loop !185

4891:                                             ; preds = %4882, %4873
  %4892 = phi i32 [ %4877, %4873 ], [ %4887, %4882 ]
  %4893 = and i64 %4842, 4294967295
  %4894 = getelementptr inbounds i32, ptr %6, i64 %4893
  %4895 = load i32, ptr %4894, align 4, !tbaa !5
  %4896 = mul nsw i32 %4895, %4892
  %4897 = add nsw i32 %4896, %4836
  %4898 = icmp sgt i64 %4834, 2
  %4899 = add nsw i64 %4835, -1
  %4900 = add i32 %4833, 1
  br i1 %4898, label %4832, label %4901, !llvm.loop !186

4901:                                             ; preds = %4891, %4828
  %4902 = phi i32 [ %4831, %4828 ], [ %4897, %4891 ]
  %4903 = sext i32 %4902 to i64
  %4904 = getelementptr inbounds double, ptr %2, i64 %4903
  %4905 = load double, ptr %4904, align 8, !tbaa !18
  %4906 = getelementptr inbounds i8, ptr %4797, i64 %4903
  %4907 = load i8, ptr %4906, align 1, !tbaa !11
  %4908 = uitofp i8 %4907 to double
  %4909 = fmul fast double %4905, %4908
  %4910 = fadd fast double %4909, %4829
  store double %4910, ptr %4799, align 8, !tbaa !18
  %4911 = add nuw nsw i32 %4830, 1
  br i1 %4822, label %4912, label %4959

4912:                                             ; preds = %4901
  %4913 = load i32, ptr %4, align 4, !tbaa !5
  %4914 = load i32, ptr %12, align 4, !tbaa !5
  %4915 = add nsw i32 %4914, -1
  %4916 = icmp slt i32 %4913, %4915
  br i1 %4916, label %4936, label %4917

4917:                                             ; preds = %4912
  %4918 = icmp eq i32 %4913, %4915
  br i1 %4918, label %4919, label %4952

4919:                                             ; preds = %4917
  store i32 0, ptr %4, align 4, !tbaa !5
  %4920 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4920, ptr %6, align 4, !tbaa !5
  br i1 %4827, label %4959, label %4921

4921:                                             ; preds = %4919, %4946
  %4922 = phi i64 [ %4950, %4946 ], [ 1, %4919 ]
  %4923 = getelementptr inbounds i32, ptr %4, i64 %4922
  %4924 = load i32, ptr %4923, align 4, !tbaa !5
  %4925 = getelementptr inbounds i32, ptr %12, i64 %4922
  %4926 = load i32, ptr %4925, align 4, !tbaa !5
  %4927 = add nsw i32 %4926, -1
  %4928 = icmp slt i32 %4924, %4927
  br i1 %4928, label %4929, label %4944

4929:                                             ; preds = %4921
  br i1 %4916, label %4936, label %4930

4930:                                             ; preds = %4929
  %4931 = getelementptr inbounds i32, ptr %7, i64 %4922
  %4932 = load i32, ptr %4931, align 4, !tbaa !5
  %4933 = getelementptr inbounds i32, ptr %6, i64 %4922
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = add nsw i32 %4934, %4932
  store i32 %4935, ptr %4933, align 4, !tbaa !5
  br label %4954

4936:                                             ; preds = %4912, %4929
  %4937 = phi i32 [ %4924, %4929 ], [ %4913, %4912 ]
  %4938 = phi ptr [ %4923, %4929 ], [ %4, %4912 ]
  %4939 = phi i64 [ %4922, %4929 ], [ 0, %4912 ]
  %4940 = add nsw i32 %4937, 1
  store i32 %4940, ptr %4938, align 4, !tbaa !5
  %4941 = getelementptr inbounds i32, ptr %7, i64 %4939
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = getelementptr inbounds i32, ptr %6, i64 %4939
  br label %4954

4944:                                             ; preds = %4921
  %4945 = icmp eq i32 %4924, %4927
  br i1 %4945, label %4946, label %4952

4946:                                             ; preds = %4944
  store i32 0, ptr %4923, align 4, !tbaa !5
  %4947 = getelementptr inbounds i32, ptr %8, i64 %4922
  %4948 = load i32, ptr %4947, align 4, !tbaa !5
  %4949 = getelementptr inbounds i32, ptr %6, i64 %4922
  store i32 %4948, ptr %4949, align 4, !tbaa !5
  %4950 = add nuw nsw i64 %4922, 1
  %4951 = icmp eq i64 %4950, %4825
  br i1 %4951, label %4959, label %4921, !llvm.loop !187

4952:                                             ; preds = %4917, %4944
  %4953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

4954:                                             ; preds = %4930, %4936
  %4955 = phi ptr [ %4943, %4936 ], [ %4923, %4930 ]
  %4956 = phi i32 [ %4942, %4936 ], [ 1, %4930 ]
  %4957 = load i32, ptr %4955, align 4, !tbaa !5
  %4958 = add nsw i32 %4957, %4956
  store i32 %4958, ptr %4955, align 4, !tbaa !5
  br label %4959

4959:                                             ; preds = %4946, %4954, %4919, %4901
  %4960 = icmp eq i32 %4911, %5
  br i1 %4960, label %5390, label %4828, !llvm.loop !188

4961:                                             ; preds = %4811, %5096
  %4962 = phi double [ 0.000000e+00, %4811 ], [ %5044, %5096 ]
  %4963 = phi i32 [ 0, %4811 ], [ %5045, %5096 ]
  %4964 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4812, label %4965, label %5034

4965:                                             ; preds = %4961, %5024
  %4966 = phi i32 [ %5033, %5024 ], [ 0, %4961 ]
  %4967 = phi i64 [ %4975, %5024 ], [ %4816, %4961 ]
  %4968 = phi i64 [ %5032, %5024 ], [ %4815, %4961 ]
  %4969 = phi i32 [ %5030, %5024 ], [ %4964, %4961 ]
  %4970 = sub i32 %4814, %4966
  %4971 = tail call i32 @llvm.smin.i32(i32 %4970, i32 0)
  %4972 = sub i32 %4970, %4971
  %4973 = zext i32 %4972 to i64
  %4974 = add nuw nsw i64 %4973, 1
  %4975 = add nsw i64 %4967, -1
  %4976 = icmp ult i32 %4972, 31
  br i1 %4976, label %5012, label %4977

4977:                                             ; preds = %4965
  %4978 = and i64 %4974, 8589934560
  %4979 = sub i64 %4968, %4978
  br label %4980

4980:                                             ; preds = %4980, %4977
  %4981 = phi i64 [ 0, %4977 ], [ %5004, %4980 ]
  %4982 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4977 ], [ %5000, %4980 ]
  %4983 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4977 ], [ %5001, %4980 ]
  %4984 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4977 ], [ %5002, %4980 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4977 ], [ %5003, %4980 ]
  %4986 = sub i64 %4968, %4981
  %4987 = getelementptr inbounds i32, ptr %11, i64 %4986
  %4988 = getelementptr inbounds i32, ptr %4987, i64 -7
  %4989 = load <8 x i32>, ptr %4988, align 4, !tbaa !5
  %4990 = shufflevector <8 x i32> %4989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4991 = getelementptr inbounds i32, ptr %4987, i64 -15
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !5
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4987, i64 -23
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !5
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4987, i64 -31
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !5
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = mul <8 x i32> %4990, %4982
  %5001 = mul <8 x i32> %4993, %4983
  %5002 = mul <8 x i32> %4996, %4984
  %5003 = mul <8 x i32> %4999, %4985
  %5004 = add nuw i64 %4981, 32
  %5005 = icmp eq i64 %5004, %4978
  br i1 %5005, label %5006, label %4980, !llvm.loop !189

5006:                                             ; preds = %4980
  %5007 = mul <8 x i32> %5001, %5000
  %5008 = mul <8 x i32> %5002, %5007
  %5009 = mul <8 x i32> %5003, %5008
  %5010 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5009)
  %5011 = icmp eq i64 %4974, %4978
  br i1 %5011, label %5024, label %5012

5012:                                             ; preds = %4965, %5006
  %5013 = phi i64 [ %4968, %4965 ], [ %4979, %5006 ]
  %5014 = phi i32 [ 1, %4965 ], [ %5010, %5006 ]
  br label %5015

5015:                                             ; preds = %5012, %5015
  %5016 = phi i64 [ %5021, %5015 ], [ %5013, %5012 ]
  %5017 = phi i32 [ %5020, %5015 ], [ %5014, %5012 ]
  %5018 = getelementptr inbounds i32, ptr %11, i64 %5016
  %5019 = load i32, ptr %5018, align 4, !tbaa !5
  %5020 = mul nsw i32 %5019, %5017
  %5021 = add nsw i64 %5016, -1
  %5022 = trunc i64 %5016 to i32
  %5023 = icmp sgt i32 %5022, 0
  br i1 %5023, label %5015, label %5024, !llvm.loop !190

5024:                                             ; preds = %5015, %5006
  %5025 = phi i32 [ %5010, %5006 ], [ %5020, %5015 ]
  %5026 = and i64 %4975, 4294967295
  %5027 = getelementptr inbounds i32, ptr %6, i64 %5026
  %5028 = load i32, ptr %5027, align 4, !tbaa !5
  %5029 = mul nsw i32 %5028, %5025
  %5030 = add nsw i32 %5029, %4969
  %5031 = icmp sgt i64 %4967, 2
  %5032 = add nsw i64 %4968, -1
  %5033 = add i32 %4966, 1
  br i1 %5031, label %4965, label %5034, !llvm.loop !191

5034:                                             ; preds = %5024, %4961
  %5035 = phi i32 [ %4964, %4961 ], [ %5030, %5024 ]
  %5036 = icmp slt i32 %5035, %5
  br i1 %5036, label %5039, label %5037

5037:                                             ; preds = %5034
  %5038 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

5039:                                             ; preds = %5034
  %5040 = sext i32 %5035 to i64
  %5041 = getelementptr inbounds i8, ptr %4797, i64 %5040
  %5042 = load i8, ptr %5041, align 1, !tbaa !11
  %5043 = uitofp i8 %5042 to double
  %5044 = fadd fast double %4962, %5043
  store double %5044, ptr %4799, align 8, !tbaa !18
  %5045 = add nuw nsw i32 %4963, 1
  br i1 %4813, label %5046, label %5096

5046:                                             ; preds = %5039
  %5047 = load i32, ptr %4, align 4, !tbaa !5
  %5048 = load i32, ptr %12, align 4, !tbaa !5
  %5049 = add nsw i32 %5048, -1
  %5050 = icmp slt i32 %5047, %5049
  br i1 %5050, label %5073, label %5051

5051:                                             ; preds = %5046
  %5052 = icmp eq i32 %5047, %5049
  br i1 %5052, label %5053, label %5089

5053:                                             ; preds = %5051
  store i32 0, ptr %4, align 4, !tbaa !5
  %5054 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5054, ptr %6, align 4, !tbaa !5
  br i1 %4818, label %5096, label %5055

5055:                                             ; preds = %5053, %5083
  %5056 = phi i64 [ %5087, %5083 ], [ 1, %5053 ]
  %5057 = getelementptr inbounds i32, ptr %4, i64 %5056
  %5058 = load i32, ptr %5057, align 4, !tbaa !5
  %5059 = getelementptr inbounds i32, ptr %12, i64 %5056
  %5060 = load i32, ptr %5059, align 4, !tbaa !5
  %5061 = add nsw i32 %5060, -1
  %5062 = icmp slt i32 %5058, %5061
  br i1 %5062, label %5063, label %5081

5063:                                             ; preds = %5055
  br i1 %5050, label %5073, label %5064

5064:                                             ; preds = %5063
  %5065 = shl i64 %5056, 32
  %5066 = add i64 %5065, -4294967296
  %5067 = ashr exact i64 %5066, 32
  %5068 = getelementptr inbounds i32, ptr %7, i64 %5067
  %5069 = load i32, ptr %5068, align 4, !tbaa !5
  %5070 = getelementptr inbounds i32, ptr %6, i64 %5056
  %5071 = load i32, ptr %5070, align 4, !tbaa !5
  %5072 = add nsw i32 %5071, %5069
  store i32 %5072, ptr %5070, align 4, !tbaa !5
  br label %5091

5073:                                             ; preds = %5046, %5063
  %5074 = phi i32 [ %5058, %5063 ], [ %5047, %5046 ]
  %5075 = phi ptr [ %5057, %5063 ], [ %4, %5046 ]
  %5076 = phi i64 [ %5056, %5063 ], [ 0, %5046 ]
  %5077 = add nsw i32 %5074, 1
  store i32 %5077, ptr %5075, align 4, !tbaa !5
  %5078 = getelementptr inbounds i32, ptr %7, i64 %5076
  %5079 = load i32, ptr %5078, align 4, !tbaa !5
  %5080 = getelementptr inbounds i32, ptr %6, i64 %5076
  br label %5091

5081:                                             ; preds = %5055
  %5082 = icmp eq i32 %5058, %5061
  br i1 %5082, label %5083, label %5089

5083:                                             ; preds = %5081
  store i32 0, ptr %5057, align 4, !tbaa !5
  %5084 = getelementptr inbounds i32, ptr %8, i64 %5056
  %5085 = load i32, ptr %5084, align 4, !tbaa !5
  %5086 = getelementptr inbounds i32, ptr %6, i64 %5056
  store i32 %5085, ptr %5086, align 4, !tbaa !5
  %5087 = add nuw nsw i64 %5056, 1
  %5088 = icmp eq i64 %5087, %4816
  br i1 %5088, label %5096, label %5055, !llvm.loop !192

5089:                                             ; preds = %5051, %5081
  %5090 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

5091:                                             ; preds = %5064, %5073
  %5092 = phi ptr [ %5080, %5073 ], [ %5057, %5064 ]
  %5093 = phi i32 [ %5079, %5073 ], [ 1, %5064 ]
  %5094 = load i32, ptr %5092, align 4, !tbaa !5
  %5095 = add nsw i32 %5094, %5093
  store i32 %5095, ptr %5092, align 4, !tbaa !5
  br label %5096

5096:                                             ; preds = %5083, %5091, %5053, %5039
  %5097 = icmp eq i32 %5045, %5
  br i1 %5097, label %5390, label %4961, !llvm.loop !193

5098:                                             ; preds = %4804
  %5099 = getelementptr inbounds i32, ptr %3, i64 %19
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = icmp eq i32 %5100, 0
  %5102 = icmp sgt i32 %5, 0
  br i1 %5101, label %5112, label %5103

5103:                                             ; preds = %5098
  br i1 %5102, label %5104, label %5390

5104:                                             ; preds = %5103
  %5105 = icmp sgt i32 %13, 1
  %5106 = icmp sgt i32 %13, 0
  %5107 = add i32 %13, -2
  %5108 = zext i32 %5107 to i64
  %5109 = zext i32 %13 to i64
  %5110 = add nuw i32 %5, 1
  %5111 = icmp eq i32 %13, 1
  br label %5251

5112:                                             ; preds = %5098
  br i1 %5102, label %5113, label %5390

5113:                                             ; preds = %5112
  %5114 = icmp sgt i32 %13, 1
  %5115 = icmp sgt i32 %13, 0
  %5116 = add i32 %13, -2
  %5117 = zext i32 %5116 to i64
  %5118 = zext i32 %13 to i64
  %5119 = add nuw i32 %5, 1
  %5120 = icmp eq i32 %13, 1
  br label %5121

5121:                                             ; preds = %5113, %5249
  %5122 = phi double [ 0.000000e+00, %5113 ], [ %5200, %5249 ]
  %5123 = phi i32 [ 0, %5113 ], [ %5201, %5249 ]
  %5124 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5114, label %5125, label %5194

5125:                                             ; preds = %5121, %5184
  %5126 = phi i32 [ %5193, %5184 ], [ 0, %5121 ]
  %5127 = phi i64 [ %5135, %5184 ], [ %5118, %5121 ]
  %5128 = phi i64 [ %5192, %5184 ], [ %5117, %5121 ]
  %5129 = phi i32 [ %5190, %5184 ], [ %5124, %5121 ]
  %5130 = sub i32 %5116, %5126
  %5131 = tail call i32 @llvm.smin.i32(i32 %5130, i32 0)
  %5132 = sub i32 %5130, %5131
  %5133 = zext i32 %5132 to i64
  %5134 = add nuw nsw i64 %5133, 1
  %5135 = add nsw i64 %5127, -1
  %5136 = icmp ult i32 %5132, 31
  br i1 %5136, label %5172, label %5137

5137:                                             ; preds = %5125
  %5138 = and i64 %5134, 8589934560
  %5139 = sub i64 %5128, %5138
  br label %5140

5140:                                             ; preds = %5140, %5137
  %5141 = phi i64 [ 0, %5137 ], [ %5164, %5140 ]
  %5142 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5137 ], [ %5160, %5140 ]
  %5143 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5137 ], [ %5161, %5140 ]
  %5144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5137 ], [ %5162, %5140 ]
  %5145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5137 ], [ %5163, %5140 ]
  %5146 = sub i64 %5128, %5141
  %5147 = getelementptr inbounds i32, ptr %9, i64 %5146
  %5148 = getelementptr inbounds i32, ptr %5147, i64 -7
  %5149 = load <8 x i32>, ptr %5148, align 4, !tbaa !5
  %5150 = shufflevector <8 x i32> %5149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5151 = getelementptr inbounds i32, ptr %5147, i64 -15
  %5152 = load <8 x i32>, ptr %5151, align 4, !tbaa !5
  %5153 = shufflevector <8 x i32> %5152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5154 = getelementptr inbounds i32, ptr %5147, i64 -23
  %5155 = load <8 x i32>, ptr %5154, align 4, !tbaa !5
  %5156 = shufflevector <8 x i32> %5155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5157 = getelementptr inbounds i32, ptr %5147, i64 -31
  %5158 = load <8 x i32>, ptr %5157, align 4, !tbaa !5
  %5159 = shufflevector <8 x i32> %5158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5160 = mul <8 x i32> %5150, %5142
  %5161 = mul <8 x i32> %5153, %5143
  %5162 = mul <8 x i32> %5156, %5144
  %5163 = mul <8 x i32> %5159, %5145
  %5164 = add nuw i64 %5141, 32
  %5165 = icmp eq i64 %5164, %5138
  br i1 %5165, label %5166, label %5140, !llvm.loop !194

5166:                                             ; preds = %5140
  %5167 = mul <8 x i32> %5161, %5160
  %5168 = mul <8 x i32> %5162, %5167
  %5169 = mul <8 x i32> %5163, %5168
  %5170 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5169)
  %5171 = icmp eq i64 %5134, %5138
  br i1 %5171, label %5184, label %5172

5172:                                             ; preds = %5125, %5166
  %5173 = phi i64 [ %5128, %5125 ], [ %5139, %5166 ]
  %5174 = phi i32 [ 1, %5125 ], [ %5170, %5166 ]
  br label %5175

5175:                                             ; preds = %5172, %5175
  %5176 = phi i64 [ %5181, %5175 ], [ %5173, %5172 ]
  %5177 = phi i32 [ %5180, %5175 ], [ %5174, %5172 ]
  %5178 = getelementptr inbounds i32, ptr %9, i64 %5176
  %5179 = load i32, ptr %5178, align 4, !tbaa !5
  %5180 = mul nsw i32 %5179, %5177
  %5181 = add nsw i64 %5176, -1
  %5182 = trunc i64 %5176 to i32
  %5183 = icmp sgt i32 %5182, 0
  br i1 %5183, label %5175, label %5184, !llvm.loop !195

5184:                                             ; preds = %5175, %5166
  %5185 = phi i32 [ %5170, %5166 ], [ %5180, %5175 ]
  %5186 = and i64 %5135, 4294967295
  %5187 = getelementptr inbounds i32, ptr %6, i64 %5186
  %5188 = load i32, ptr %5187, align 4, !tbaa !5
  %5189 = mul nsw i32 %5188, %5185
  %5190 = add nsw i32 %5189, %5129
  %5191 = icmp sgt i64 %5127, 2
  %5192 = add nsw i64 %5128, -1
  %5193 = add i32 %5126, 1
  br i1 %5191, label %5125, label %5194, !llvm.loop !196

5194:                                             ; preds = %5184, %5121
  %5195 = phi i32 [ %5124, %5121 ], [ %5190, %5184 ]
  %5196 = sext i32 %5195 to i64
  %5197 = getelementptr inbounds i8, ptr %4797, i64 %5196
  %5198 = load i8, ptr %5197, align 1, !tbaa !11
  %5199 = uitofp i8 %5198 to double
  %5200 = fadd fast double %5122, %5199
  store double %5200, ptr %4799, align 8, !tbaa !18
  %5201 = add nuw nsw i32 %5123, 1
  br i1 %5115, label %5202, label %5249

5202:                                             ; preds = %5194
  %5203 = load i32, ptr %4, align 4, !tbaa !5
  %5204 = load i32, ptr %12, align 4, !tbaa !5
  %5205 = add nsw i32 %5204, -1
  %5206 = icmp slt i32 %5203, %5205
  br i1 %5206, label %5226, label %5207

5207:                                             ; preds = %5202
  %5208 = icmp eq i32 %5203, %5205
  br i1 %5208, label %5209, label %5242

5209:                                             ; preds = %5207
  store i32 0, ptr %4, align 4, !tbaa !5
  %5210 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5210, ptr %6, align 4, !tbaa !5
  br i1 %5120, label %5249, label %5211

5211:                                             ; preds = %5209, %5236
  %5212 = phi i64 [ %5240, %5236 ], [ 1, %5209 ]
  %5213 = getelementptr inbounds i32, ptr %4, i64 %5212
  %5214 = load i32, ptr %5213, align 4, !tbaa !5
  %5215 = getelementptr inbounds i32, ptr %12, i64 %5212
  %5216 = load i32, ptr %5215, align 4, !tbaa !5
  %5217 = add nsw i32 %5216, -1
  %5218 = icmp slt i32 %5214, %5217
  br i1 %5218, label %5219, label %5234

5219:                                             ; preds = %5211
  br i1 %5206, label %5226, label %5220

5220:                                             ; preds = %5219
  %5221 = getelementptr inbounds i32, ptr %7, i64 %5212
  %5222 = load i32, ptr %5221, align 4, !tbaa !5
  %5223 = getelementptr inbounds i32, ptr %6, i64 %5212
  %5224 = load i32, ptr %5223, align 4, !tbaa !5
  %5225 = add nsw i32 %5224, %5222
  store i32 %5225, ptr %5223, align 4, !tbaa !5
  br label %5244

5226:                                             ; preds = %5202, %5219
  %5227 = phi i32 [ %5214, %5219 ], [ %5203, %5202 ]
  %5228 = phi ptr [ %5213, %5219 ], [ %4, %5202 ]
  %5229 = phi i64 [ %5212, %5219 ], [ 0, %5202 ]
  %5230 = add nsw i32 %5227, 1
  store i32 %5230, ptr %5228, align 4, !tbaa !5
  %5231 = getelementptr inbounds i32, ptr %7, i64 %5229
  %5232 = load i32, ptr %5231, align 4, !tbaa !5
  %5233 = getelementptr inbounds i32, ptr %6, i64 %5229
  br label %5244

5234:                                             ; preds = %5211
  %5235 = icmp eq i32 %5214, %5217
  br i1 %5235, label %5236, label %5242

5236:                                             ; preds = %5234
  store i32 0, ptr %5213, align 4, !tbaa !5
  %5237 = getelementptr inbounds i32, ptr %8, i64 %5212
  %5238 = load i32, ptr %5237, align 4, !tbaa !5
  %5239 = getelementptr inbounds i32, ptr %6, i64 %5212
  store i32 %5238, ptr %5239, align 4, !tbaa !5
  %5240 = add nuw nsw i64 %5212, 1
  %5241 = icmp eq i64 %5240, %5118
  br i1 %5241, label %5249, label %5211, !llvm.loop !197

5242:                                             ; preds = %5207, %5234
  %5243 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

5244:                                             ; preds = %5220, %5226
  %5245 = phi ptr [ %5233, %5226 ], [ %5213, %5220 ]
  %5246 = phi i32 [ %5232, %5226 ], [ 1, %5220 ]
  %5247 = load i32, ptr %5245, align 4, !tbaa !5
  %5248 = add nsw i32 %5247, %5246
  store i32 %5248, ptr %5245, align 4, !tbaa !5
  br label %5249

5249:                                             ; preds = %5236, %5244, %5209, %5194
  %5250 = icmp eq i32 %5201, %5
  br i1 %5250, label %5390, label %5121, !llvm.loop !198

5251:                                             ; preds = %5104, %5386
  %5252 = phi double [ 0.000000e+00, %5104 ], [ %5334, %5386 ]
  %5253 = phi i32 [ 0, %5104 ], [ %5335, %5386 ]
  %5254 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5105, label %5255, label %5324

5255:                                             ; preds = %5251, %5314
  %5256 = phi i32 [ %5323, %5314 ], [ 0, %5251 ]
  %5257 = phi i64 [ %5265, %5314 ], [ %5109, %5251 ]
  %5258 = phi i64 [ %5322, %5314 ], [ %5108, %5251 ]
  %5259 = phi i32 [ %5320, %5314 ], [ %5254, %5251 ]
  %5260 = sub i32 %5107, %5256
  %5261 = tail call i32 @llvm.smin.i32(i32 %5260, i32 0)
  %5262 = sub i32 %5260, %5261
  %5263 = zext i32 %5262 to i64
  %5264 = add nuw nsw i64 %5263, 1
  %5265 = add nsw i64 %5257, -1
  %5266 = icmp ult i32 %5262, 31
  br i1 %5266, label %5302, label %5267

5267:                                             ; preds = %5255
  %5268 = and i64 %5264, 8589934560
  %5269 = sub i64 %5258, %5268
  br label %5270

5270:                                             ; preds = %5270, %5267
  %5271 = phi i64 [ 0, %5267 ], [ %5294, %5270 ]
  %5272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5267 ], [ %5290, %5270 ]
  %5273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5267 ], [ %5291, %5270 ]
  %5274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5267 ], [ %5292, %5270 ]
  %5275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5267 ], [ %5293, %5270 ]
  %5276 = sub i64 %5258, %5271
  %5277 = getelementptr inbounds i32, ptr %11, i64 %5276
  %5278 = getelementptr inbounds i32, ptr %5277, i64 -7
  %5279 = load <8 x i32>, ptr %5278, align 4, !tbaa !5
  %5280 = shufflevector <8 x i32> %5279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5281 = getelementptr inbounds i32, ptr %5277, i64 -15
  %5282 = load <8 x i32>, ptr %5281, align 4, !tbaa !5
  %5283 = shufflevector <8 x i32> %5282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5284 = getelementptr inbounds i32, ptr %5277, i64 -23
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !5
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = getelementptr inbounds i32, ptr %5277, i64 -31
  %5288 = load <8 x i32>, ptr %5287, align 4, !tbaa !5
  %5289 = shufflevector <8 x i32> %5288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5290 = mul <8 x i32> %5280, %5272
  %5291 = mul <8 x i32> %5283, %5273
  %5292 = mul <8 x i32> %5286, %5274
  %5293 = mul <8 x i32> %5289, %5275
  %5294 = add nuw i64 %5271, 32
  %5295 = icmp eq i64 %5294, %5268
  br i1 %5295, label %5296, label %5270, !llvm.loop !199

5296:                                             ; preds = %5270
  %5297 = mul <8 x i32> %5291, %5290
  %5298 = mul <8 x i32> %5292, %5297
  %5299 = mul <8 x i32> %5293, %5298
  %5300 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5299)
  %5301 = icmp eq i64 %5264, %5268
  br i1 %5301, label %5314, label %5302

5302:                                             ; preds = %5255, %5296
  %5303 = phi i64 [ %5258, %5255 ], [ %5269, %5296 ]
  %5304 = phi i32 [ 1, %5255 ], [ %5300, %5296 ]
  br label %5305

5305:                                             ; preds = %5302, %5305
  %5306 = phi i64 [ %5311, %5305 ], [ %5303, %5302 ]
  %5307 = phi i32 [ %5310, %5305 ], [ %5304, %5302 ]
  %5308 = getelementptr inbounds i32, ptr %11, i64 %5306
  %5309 = load i32, ptr %5308, align 4, !tbaa !5
  %5310 = mul nsw i32 %5309, %5307
  %5311 = add nsw i64 %5306, -1
  %5312 = trunc i64 %5306 to i32
  %5313 = icmp sgt i32 %5312, 0
  br i1 %5313, label %5305, label %5314, !llvm.loop !200

5314:                                             ; preds = %5305, %5296
  %5315 = phi i32 [ %5300, %5296 ], [ %5310, %5305 ]
  %5316 = and i64 %5265, 4294967295
  %5317 = getelementptr inbounds i32, ptr %6, i64 %5316
  %5318 = load i32, ptr %5317, align 4, !tbaa !5
  %5319 = mul nsw i32 %5318, %5315
  %5320 = add nsw i32 %5319, %5259
  %5321 = icmp sgt i64 %5257, 2
  %5322 = add nsw i64 %5258, -1
  %5323 = add i32 %5256, 1
  br i1 %5321, label %5255, label %5324, !llvm.loop !201

5324:                                             ; preds = %5314, %5251
  %5325 = phi i32 [ %5254, %5251 ], [ %5320, %5314 ]
  %5326 = icmp slt i32 %5325, %5
  br i1 %5326, label %5329, label %5327

5327:                                             ; preds = %5324
  %5328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5390

5329:                                             ; preds = %5324
  %5330 = sext i32 %5325 to i64
  %5331 = getelementptr inbounds i8, ptr %4797, i64 %5330
  %5332 = load i8, ptr %5331, align 1, !tbaa !11
  %5333 = uitofp i8 %5332 to double
  %5334 = fadd fast double %5252, %5333
  store double %5334, ptr %4799, align 8, !tbaa !18
  %5335 = add nuw nsw i32 %5253, 1
  br i1 %5106, label %5336, label %5386

5336:                                             ; preds = %5329
  %5337 = load i32, ptr %4, align 4, !tbaa !5
  %5338 = load i32, ptr %12, align 4, !tbaa !5
  %5339 = add nsw i32 %5338, -1
  %5340 = icmp slt i32 %5337, %5339
  br i1 %5340, label %5363, label %5341

5341:                                             ; preds = %5336
  %5342 = icmp eq i32 %5337, %5339
  br i1 %5342, label %5343, label %5379

5343:                                             ; preds = %5341
  store i32 0, ptr %4, align 4, !tbaa !5
  %5344 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5344, ptr %6, align 4, !tbaa !5
  br i1 %5111, label %5386, label %5345

5345:                                             ; preds = %5343, %5373
  %5346 = phi i64 [ %5377, %5373 ], [ 1, %5343 ]
  %5347 = getelementptr inbounds i32, ptr %4, i64 %5346
  %5348 = load i32, ptr %5347, align 4, !tbaa !5
  %5349 = getelementptr inbounds i32, ptr %12, i64 %5346
  %5350 = load i32, ptr %5349, align 4, !tbaa !5
  %5351 = add nsw i32 %5350, -1
  %5352 = icmp slt i32 %5348, %5351
  br i1 %5352, label %5353, label %5371

5353:                                             ; preds = %5345
  br i1 %5340, label %5363, label %5354

5354:                                             ; preds = %5353
  %5355 = shl i64 %5346, 32
  %5356 = add i64 %5355, -4294967296
  %5357 = ashr exact i64 %5356, 32
  %5358 = getelementptr inbounds i32, ptr %7, i64 %5357
  %5359 = load i32, ptr %5358, align 4, !tbaa !5
  %5360 = getelementptr inbounds i32, ptr %6, i64 %5346
  %5361 = load i32, ptr %5360, align 4, !tbaa !5
  %5362 = add nsw i32 %5361, %5359
  store i32 %5362, ptr %5360, align 4, !tbaa !5
  br label %5381

5363:                                             ; preds = %5336, %5353
  %5364 = phi i32 [ %5348, %5353 ], [ %5337, %5336 ]
  %5365 = phi ptr [ %5347, %5353 ], [ %4, %5336 ]
  %5366 = phi i64 [ %5346, %5353 ], [ 0, %5336 ]
  %5367 = add nsw i32 %5364, 1
  store i32 %5367, ptr %5365, align 4, !tbaa !5
  %5368 = getelementptr inbounds i32, ptr %7, i64 %5366
  %5369 = load i32, ptr %5368, align 4, !tbaa !5
  %5370 = getelementptr inbounds i32, ptr %6, i64 %5366
  br label %5381

5371:                                             ; preds = %5345
  %5372 = icmp eq i32 %5348, %5351
  br i1 %5372, label %5373, label %5379

5373:                                             ; preds = %5371
  store i32 0, ptr %5347, align 4, !tbaa !5
  %5374 = getelementptr inbounds i32, ptr %8, i64 %5346
  %5375 = load i32, ptr %5374, align 4, !tbaa !5
  %5376 = getelementptr inbounds i32, ptr %6, i64 %5346
  store i32 %5375, ptr %5376, align 4, !tbaa !5
  %5377 = add nuw nsw i64 %5346, 1
  %5378 = icmp eq i64 %5377, %5109
  br i1 %5378, label %5386, label %5345, !llvm.loop !202

5379:                                             ; preds = %5341, %5371
  %5380 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5390

5381:                                             ; preds = %5354, %5363
  %5382 = phi ptr [ %5370, %5363 ], [ %5347, %5354 ]
  %5383 = phi i32 [ %5369, %5363 ], [ 1, %5354 ]
  %5384 = load i32, ptr %5382, align 4, !tbaa !5
  %5385 = add nsw i32 %5384, %5383
  store i32 %5385, ptr %5382, align 4, !tbaa !5
  br label %5386

5386:                                             ; preds = %5373, %5381, %5343, %5329
  %5387 = icmp eq i32 %5335, %5
  br i1 %5387, label %5390, label %5251, !llvm.loop !203

5388:                                             ; preds = %4804
  %5389 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 88, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5390

5390:                                             ; preds = %5386, %5249, %5096, %4959, %4791, %4654, %4501, %4362, %4192, %4055, %3902, %3765, %3597, %3460, %3307, %3168, %2998, %2861, %2708, %2571, %2401, %2264, %2111, %1971, %1801, %1665, %1513, %1377, %1208, %1071, %918, %781, %611, %475, %323, %187, %5103, %5112, %4810, %4819, %4508, %4517, %4211, %4220, %3909, %3918, %3616, %3625, %3314, %3323, %3017, %3026, %2715, %2724, %2420, %2429, %2118, %2127, %1820, %1829, %1520, %1529, %1226, %1235, %925, %934, %630, %639, %330, %339, %36, %45, %4801, %5388, %4202, %4793, %3607, %4194, %3008, %3599, %2411, %3000, %1811, %2403, %1218, %1803, %621, %1210, %28, %613, %18, %4952, %5037, %5089, %5242, %5327, %5379, %4355, %4440, %4494, %4647, %4732, %4784, %3758, %3843, %3895, %4048, %4133, %4185, %3161, %3246, %3300, %3453, %3538, %3590, %2564, %2648, %2701, %2854, %2938, %2991, %1964, %2049, %2104, %2257, %2342, %2394, %1370, %1454, %1506, %1658, %1742, %1794, %774, %858, %911, %1064, %1148, %1201, %180, %264, %316, %468, %552, %604
  %5391 = phi i32 [ -1, %604 ], [ -1, %552 ], [ -1, %468 ], [ -1, %316 ], [ -1, %264 ], [ -1, %180 ], [ -1, %1201 ], [ -1, %1148 ], [ -1, %1064 ], [ -1, %911 ], [ -1, %858 ], [ -1, %774 ], [ -1, %1794 ], [ -1, %1742 ], [ -1, %1658 ], [ -1, %1506 ], [ -1, %1454 ], [ -1, %1370 ], [ -1, %2394 ], [ -1, %2342 ], [ -1, %2257 ], [ -1, %2104 ], [ -1, %2049 ], [ -1, %1964 ], [ -1, %2991 ], [ -1, %2938 ], [ -1, %2854 ], [ -1, %2701 ], [ -1, %2648 ], [ -1, %2564 ], [ -1, %3590 ], [ -1, %3538 ], [ -1, %3453 ], [ -1, %3300 ], [ -1, %3246 ], [ -1, %3161 ], [ -1, %4185 ], [ -1, %4133 ], [ -1, %4048 ], [ -1, %3895 ], [ -1, %3843 ], [ -1, %3758 ], [ -1, %4784 ], [ -1, %4732 ], [ -1, %4647 ], [ -1, %4494 ], [ -1, %4440 ], [ -1, %4355 ], [ -1, %5379 ], [ -1, %5327 ], [ -1, %5242 ], [ -1, %5089 ], [ -1, %5037 ], [ -1, %4952 ], [ %10, %18 ], [ 1, %613 ], [ 1, %28 ], [ 1, %1210 ], [ 1, %621 ], [ 1, %1803 ], [ 1, %1218 ], [ 1, %2403 ], [ 1, %1811 ], [ 1, %3000 ], [ 1, %2411 ], [ 1, %3599 ], [ 1, %3008 ], [ 1, %4194 ], [ 1, %3607 ], [ 1, %4793 ], [ 1, %4202 ], [ 1, %5388 ], [ 1, %4801 ], [ 1, %45 ], [ 1, %36 ], [ 1, %339 ], [ 1, %330 ], [ 1, %639 ], [ 1, %630 ], [ 1, %934 ], [ 1, %925 ], [ 1, %1235 ], [ 1, %1226 ], [ 1, %1529 ], [ 1, %1520 ], [ 1, %1829 ], [ 1, %1820 ], [ 1, %2127 ], [ 1, %2118 ], [ 1, %2429 ], [ 1, %2420 ], [ 1, %2724 ], [ 1, %2715 ], [ 1, %3026 ], [ 1, %3017 ], [ 1, %3323 ], [ 1, %3314 ], [ 1, %3625 ], [ 1, %3616 ], [ 1, %3918 ], [ 1, %3909 ], [ 1, %4220 ], [ 1, %4211 ], [ 1, %4517 ], [ 1, %4508 ], [ 1, %4819 ], [ 1, %4810 ], [ 1, %5112 ], [ 1, %5103 ], [ %52, %187 ], [ %43, %323 ], [ %346, %475 ], [ %337, %611 ], [ %646, %781 ], [ %637, %918 ], [ %941, %1071 ], [ %932, %1208 ], [ %1242, %1377 ], [ %1233, %1513 ], [ %1536, %1665 ], [ %1527, %1801 ], [ %1836, %1971 ], [ %1827, %2111 ], [ %2134, %2264 ], [ %2125, %2401 ], [ %2436, %2571 ], [ %2427, %2708 ], [ %2731, %2861 ], [ %2722, %2998 ], [ %3033, %3168 ], [ %3024, %3307 ], [ %3330, %3460 ], [ %3321, %3597 ], [ %3632, %3765 ], [ %3623, %3902 ], [ %3925, %4055 ], [ %3916, %4192 ], [ %4227, %4362 ], [ %4218, %4501 ], [ %4524, %4654 ], [ %4515, %4791 ], [ %4826, %4959 ], [ %4817, %5096 ], [ %5119, %5249 ], [ %5110, %5386 ]
  ret i32 %5391
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5404 [
    i32 101, label %22
    i32 102, label %620
    i32 103, label %1213
    i32 104, label %1812
    i32 105, label %2416
    i32 106, label %3009
    i32 107, label %3608
    i32 108, label %4203
    i32 109, label %4801
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = trunc i32 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5404

31:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %32
    i32 0, label %328
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5404

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %191

46:                                               ; preds = %32
  br i1 %36, label %47, label %5404

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %189
  %56 = phi i32 [ 0, %47 ], [ %141, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !204

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !205

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !206

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i32, ptr %24, i64 %129
  %133 = load i32, ptr %132, align 4, !tbaa !5
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = and i32 %133, 255
  %137 = sitofp i32 %136 to double
  %138 = fmul fast double %131, %137
  %139 = fadd fast double %138, %135
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = add nuw nsw i32 %56, 1
  br i1 %49, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %54, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %52
  br i1 %181, label %189, label %151, !llvm.loop !207

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %5404, label %55, !llvm.loop !208

191:                                              ; preds = %38, %326
  %192 = phi i32 [ 0, %38 ], [ %275, %326 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %43, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %42, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %41, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !209

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !210

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !211

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds i32, ptr %24, i64 %269
  %271 = load i32, ptr %270, align 4, !tbaa !5
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = trunc i32 %271 to i8
  %274 = add i8 %272, %273
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %192, 1
  br i1 %40, label %276, label %326

276:                                              ; preds = %268
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %45, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %43
  br i1 %318, label %326, label %285, !llvm.loop !212

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %268
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %5404, label %191, !llvm.loop !213

328:                                              ; preds = %31
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %5404

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %481

342:                                              ; preds = %328
  br i1 %332, label %343, label %5404

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %479
  %352 = phi i32 [ 0, %343 ], [ %431, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %354, label %423

354:                                              ; preds = %351, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %351 ]
  %356 = phi i64 [ %364, %413 ], [ %348, %351 ]
  %357 = phi i64 [ %421, %413 ], [ %347, %351 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %351 ]
  %359 = sub i32 %346, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !214

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !215

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !216

423:                                              ; preds = %413, %351
  %424 = phi i32 [ %353, %351 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i32, ptr %24, i64 %425
  %427 = load i32, ptr %426, align 4, !tbaa !5
  %428 = load i8, ptr %26, align 1, !tbaa !11
  %429 = trunc i32 %427 to i8
  %430 = add i8 %428, %429
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = add nuw nsw i32 %352, 1
  br i1 %345, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %350, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %348
  br i1 %471, label %479, label %441, !llvm.loop !217

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %5404, label %351, !llvm.loop !218

481:                                              ; preds = %334, %616
  %482 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %339, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %338, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %337, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !219

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !220

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !221

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds i32, ptr %24, i64 %559
  %561 = load i32, ptr %560, align 4, !tbaa !5
  %562 = load i8, ptr %26, align 1, !tbaa !11
  %563 = trunc i32 %561 to i8
  %564 = add i8 %562, %563
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %482, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %558
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !222

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %558
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %5404, label %481, !llvm.loop !223

618:                                              ; preds = %31
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %628

626:                                              ; preds = %620
  %627 = load i32, ptr %622, align 4, !tbaa !5
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %5404

628:                                              ; preds = %620
  switch i32 %1, label %1211 [
    i32 1, label %629
    i32 0, label %923
  ]

629:                                              ; preds = %628
  %630 = getelementptr inbounds i32, ptr %3, i64 %19
  %631 = load i32, ptr %630, align 4, !tbaa !5
  %632 = icmp eq i32 %631, 0
  %633 = icmp sgt i32 %5, 0
  br i1 %632, label %643, label %634

634:                                              ; preds = %629
  br i1 %633, label %635, label %5404

635:                                              ; preds = %634
  %636 = icmp sgt i32 %13, 1
  %637 = icmp sgt i32 %13, 0
  %638 = add i32 %13, -2
  %639 = zext i32 %638 to i64
  %640 = zext i32 %13 to i64
  %641 = add nuw i32 %5, 1
  %642 = icmp eq i32 %13, 1
  br label %787

643:                                              ; preds = %629
  br i1 %633, label %644, label %5404

644:                                              ; preds = %643
  %645 = icmp sgt i32 %13, 1
  %646 = icmp sgt i32 %13, 0
  %647 = add i32 %13, -2
  %648 = zext i32 %647 to i64
  %649 = zext i32 %13 to i64
  %650 = add nuw i32 %5, 1
  %651 = icmp eq i32 %13, 1
  br label %652

652:                                              ; preds = %644, %785
  %653 = phi i32 [ 0, %644 ], [ %737, %785 ]
  %654 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %645, label %655, label %724

655:                                              ; preds = %652, %714
  %656 = phi i32 [ %723, %714 ], [ 0, %652 ]
  %657 = phi i64 [ %665, %714 ], [ %649, %652 ]
  %658 = phi i64 [ %722, %714 ], [ %648, %652 ]
  %659 = phi i32 [ %720, %714 ], [ %654, %652 ]
  %660 = sub i32 %647, %656
  %661 = tail call i32 @llvm.smin.i32(i32 %660, i32 0)
  %662 = sub i32 %660, %661
  %663 = zext i32 %662 to i64
  %664 = add nuw nsw i64 %663, 1
  %665 = add nsw i64 %657, -1
  %666 = icmp ult i32 %662, 31
  br i1 %666, label %702, label %667

667:                                              ; preds = %655
  %668 = and i64 %664, 8589934560
  %669 = sub i64 %658, %668
  br label %670

670:                                              ; preds = %670, %667
  %671 = phi i64 [ 0, %667 ], [ %694, %670 ]
  %672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %690, %670 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %691, %670 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %692, %670 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %693, %670 ]
  %676 = sub i64 %658, %671
  %677 = getelementptr inbounds i32, ptr %9, i64 %676
  %678 = getelementptr inbounds i32, ptr %677, i64 -7
  %679 = load <8 x i32>, ptr %678, align 4, !tbaa !5
  %680 = shufflevector <8 x i32> %679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %681 = getelementptr inbounds i32, ptr %677, i64 -15
  %682 = load <8 x i32>, ptr %681, align 4, !tbaa !5
  %683 = shufflevector <8 x i32> %682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %684 = getelementptr inbounds i32, ptr %677, i64 -23
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %677, i64 -31
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = mul <8 x i32> %680, %672
  %691 = mul <8 x i32> %683, %673
  %692 = mul <8 x i32> %686, %674
  %693 = mul <8 x i32> %689, %675
  %694 = add nuw i64 %671, 32
  %695 = icmp eq i64 %694, %668
  br i1 %695, label %696, label %670, !llvm.loop !224

696:                                              ; preds = %670
  %697 = mul <8 x i32> %691, %690
  %698 = mul <8 x i32> %692, %697
  %699 = mul <8 x i32> %693, %698
  %700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %699)
  %701 = icmp eq i64 %664, %668
  br i1 %701, label %714, label %702

702:                                              ; preds = %655, %696
  %703 = phi i64 [ %658, %655 ], [ %669, %696 ]
  %704 = phi i32 [ 1, %655 ], [ %700, %696 ]
  br label %705

705:                                              ; preds = %702, %705
  %706 = phi i64 [ %711, %705 ], [ %703, %702 ]
  %707 = phi i32 [ %710, %705 ], [ %704, %702 ]
  %708 = getelementptr inbounds i32, ptr %9, i64 %706
  %709 = load i32, ptr %708, align 4, !tbaa !5
  %710 = mul nsw i32 %709, %707
  %711 = add nsw i64 %706, -1
  %712 = trunc i64 %706 to i32
  %713 = icmp sgt i32 %712, 0
  br i1 %713, label %705, label %714, !llvm.loop !225

714:                                              ; preds = %705, %696
  %715 = phi i32 [ %700, %696 ], [ %710, %705 ]
  %716 = and i64 %665, 4294967295
  %717 = getelementptr inbounds i32, ptr %6, i64 %716
  %718 = load i32, ptr %717, align 4, !tbaa !5
  %719 = mul nsw i32 %718, %715
  %720 = add nsw i32 %719, %659
  %721 = icmp sgt i64 %657, 2
  %722 = add nsw i64 %658, -1
  %723 = add i32 %656, 1
  br i1 %721, label %655, label %724, !llvm.loop !226

724:                                              ; preds = %714, %652
  %725 = phi i32 [ %654, %652 ], [ %720, %714 ]
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds double, ptr %2, i64 %726
  %728 = load double, ptr %727, align 8, !tbaa !18
  %729 = getelementptr inbounds i32, ptr %622, i64 %726
  %730 = load i32, ptr %729, align 4, !tbaa !5
  %731 = load i32, ptr %624, align 4, !tbaa !5
  %732 = sitofp i32 %731 to double
  %733 = sitofp i32 %730 to double
  %734 = fmul fast double %728, %733
  %735 = fadd fast double %734, %732
  %736 = fptosi double %735 to i32
  store i32 %736, ptr %624, align 4, !tbaa !5
  %737 = add nuw nsw i32 %653, 1
  br i1 %646, label %738, label %785

738:                                              ; preds = %724
  %739 = load i32, ptr %4, align 4, !tbaa !5
  %740 = load i32, ptr %12, align 4, !tbaa !5
  %741 = add nsw i32 %740, -1
  %742 = icmp slt i32 %739, %741
  br i1 %742, label %762, label %743

743:                                              ; preds = %738
  %744 = icmp eq i32 %739, %741
  br i1 %744, label %745, label %778

745:                                              ; preds = %743
  store i32 0, ptr %4, align 4, !tbaa !5
  %746 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %746, ptr %6, align 4, !tbaa !5
  br i1 %651, label %785, label %747

747:                                              ; preds = %745, %772
  %748 = phi i64 [ %776, %772 ], [ 1, %745 ]
  %749 = getelementptr inbounds i32, ptr %4, i64 %748
  %750 = load i32, ptr %749, align 4, !tbaa !5
  %751 = getelementptr inbounds i32, ptr %12, i64 %748
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = add nsw i32 %752, -1
  %754 = icmp slt i32 %750, %753
  br i1 %754, label %755, label %770

755:                                              ; preds = %747
  br i1 %742, label %762, label %756

756:                                              ; preds = %755
  %757 = getelementptr inbounds i32, ptr %7, i64 %748
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = getelementptr inbounds i32, ptr %6, i64 %748
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = add nsw i32 %760, %758
  store i32 %761, ptr %759, align 4, !tbaa !5
  br label %780

762:                                              ; preds = %738, %755
  %763 = phi i32 [ %750, %755 ], [ %739, %738 ]
  %764 = phi ptr [ %749, %755 ], [ %4, %738 ]
  %765 = phi i64 [ %748, %755 ], [ 0, %738 ]
  %766 = add nsw i32 %763, 1
  store i32 %766, ptr %764, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %7, i64 %765
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %6, i64 %765
  br label %780

770:                                              ; preds = %747
  %771 = icmp eq i32 %750, %753
  br i1 %771, label %772, label %778

772:                                              ; preds = %770
  store i32 0, ptr %749, align 4, !tbaa !5
  %773 = getelementptr inbounds i32, ptr %8, i64 %748
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %748
  store i32 %774, ptr %775, align 4, !tbaa !5
  %776 = add nuw nsw i64 %748, 1
  %777 = icmp eq i64 %776, %649
  br i1 %777, label %785, label %747, !llvm.loop !227

778:                                              ; preds = %743, %770
  %779 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

780:                                              ; preds = %756, %762
  %781 = phi ptr [ %769, %762 ], [ %749, %756 ]
  %782 = phi i32 [ %768, %762 ], [ 1, %756 ]
  %783 = load i32, ptr %781, align 4, !tbaa !5
  %784 = add nsw i32 %783, %782
  store i32 %784, ptr %781, align 4, !tbaa !5
  br label %785

785:                                              ; preds = %772, %780, %745, %724
  %786 = icmp eq i32 %737, %5
  br i1 %786, label %5404, label %652, !llvm.loop !228

787:                                              ; preds = %635, %921
  %788 = phi i32 [ 0, %635 ], [ %870, %921 ]
  %789 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %636, label %790, label %859

790:                                              ; preds = %787, %849
  %791 = phi i32 [ %858, %849 ], [ 0, %787 ]
  %792 = phi i64 [ %800, %849 ], [ %640, %787 ]
  %793 = phi i64 [ %857, %849 ], [ %639, %787 ]
  %794 = phi i32 [ %855, %849 ], [ %789, %787 ]
  %795 = sub i32 %638, %791
  %796 = tail call i32 @llvm.smin.i32(i32 %795, i32 0)
  %797 = sub i32 %795, %796
  %798 = zext i32 %797 to i64
  %799 = add nuw nsw i64 %798, 1
  %800 = add nsw i64 %792, -1
  %801 = icmp ult i32 %797, 31
  br i1 %801, label %837, label %802

802:                                              ; preds = %790
  %803 = and i64 %799, 8589934560
  %804 = sub i64 %793, %803
  br label %805

805:                                              ; preds = %805, %802
  %806 = phi i64 [ 0, %802 ], [ %829, %805 ]
  %807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %825, %805 ]
  %808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %826, %805 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %827, %805 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %828, %805 ]
  %811 = sub i64 %793, %806
  %812 = getelementptr inbounds i32, ptr %11, i64 %811
  %813 = getelementptr inbounds i32, ptr %812, i64 -7
  %814 = load <8 x i32>, ptr %813, align 4, !tbaa !5
  %815 = shufflevector <8 x i32> %814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %816 = getelementptr inbounds i32, ptr %812, i64 -15
  %817 = load <8 x i32>, ptr %816, align 4, !tbaa !5
  %818 = shufflevector <8 x i32> %817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %819 = getelementptr inbounds i32, ptr %812, i64 -23
  %820 = load <8 x i32>, ptr %819, align 4, !tbaa !5
  %821 = shufflevector <8 x i32> %820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %822 = getelementptr inbounds i32, ptr %812, i64 -31
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = mul <8 x i32> %815, %807
  %826 = mul <8 x i32> %818, %808
  %827 = mul <8 x i32> %821, %809
  %828 = mul <8 x i32> %824, %810
  %829 = add nuw i64 %806, 32
  %830 = icmp eq i64 %829, %803
  br i1 %830, label %831, label %805, !llvm.loop !229

831:                                              ; preds = %805
  %832 = mul <8 x i32> %826, %825
  %833 = mul <8 x i32> %827, %832
  %834 = mul <8 x i32> %828, %833
  %835 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %834)
  %836 = icmp eq i64 %799, %803
  br i1 %836, label %849, label %837

837:                                              ; preds = %790, %831
  %838 = phi i64 [ %793, %790 ], [ %804, %831 ]
  %839 = phi i32 [ 1, %790 ], [ %835, %831 ]
  br label %840

840:                                              ; preds = %837, %840
  %841 = phi i64 [ %846, %840 ], [ %838, %837 ]
  %842 = phi i32 [ %845, %840 ], [ %839, %837 ]
  %843 = getelementptr inbounds i32, ptr %11, i64 %841
  %844 = load i32, ptr %843, align 4, !tbaa !5
  %845 = mul nsw i32 %844, %842
  %846 = add nsw i64 %841, -1
  %847 = trunc i64 %841 to i32
  %848 = icmp sgt i32 %847, 0
  br i1 %848, label %840, label %849, !llvm.loop !230

849:                                              ; preds = %840, %831
  %850 = phi i32 [ %835, %831 ], [ %845, %840 ]
  %851 = and i64 %800, 4294967295
  %852 = getelementptr inbounds i32, ptr %6, i64 %851
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %850
  %855 = add nsw i32 %854, %794
  %856 = icmp sgt i64 %792, 2
  %857 = add nsw i64 %793, -1
  %858 = add i32 %791, 1
  br i1 %856, label %790, label %859, !llvm.loop !231

859:                                              ; preds = %849, %787
  %860 = phi i32 [ %789, %787 ], [ %855, %849 ]
  %861 = icmp slt i32 %860, %5
  br i1 %861, label %864, label %862

862:                                              ; preds = %859
  %863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

864:                                              ; preds = %859
  %865 = sext i32 %860 to i64
  %866 = getelementptr inbounds i32, ptr %622, i64 %865
  %867 = load i32, ptr %866, align 4, !tbaa !5
  %868 = load i32, ptr %624, align 4, !tbaa !5
  %869 = add i32 %868, %867
  store i32 %869, ptr %624, align 4, !tbaa !5
  %870 = add nuw nsw i32 %788, 1
  br i1 %637, label %871, label %921

871:                                              ; preds = %864
  %872 = load i32, ptr %4, align 4, !tbaa !5
  %873 = load i32, ptr %12, align 4, !tbaa !5
  %874 = add nsw i32 %873, -1
  %875 = icmp slt i32 %872, %874
  br i1 %875, label %898, label %876

876:                                              ; preds = %871
  %877 = icmp eq i32 %872, %874
  br i1 %877, label %878, label %914

878:                                              ; preds = %876
  store i32 0, ptr %4, align 4, !tbaa !5
  %879 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %879, ptr %6, align 4, !tbaa !5
  br i1 %642, label %921, label %880

880:                                              ; preds = %878, %908
  %881 = phi i64 [ %912, %908 ], [ 1, %878 ]
  %882 = getelementptr inbounds i32, ptr %4, i64 %881
  %883 = load i32, ptr %882, align 4, !tbaa !5
  %884 = getelementptr inbounds i32, ptr %12, i64 %881
  %885 = load i32, ptr %884, align 4, !tbaa !5
  %886 = add nsw i32 %885, -1
  %887 = icmp slt i32 %883, %886
  br i1 %887, label %888, label %906

888:                                              ; preds = %880
  br i1 %875, label %898, label %889

889:                                              ; preds = %888
  %890 = shl i64 %881, 32
  %891 = add i64 %890, -4294967296
  %892 = ashr exact i64 %891, 32
  %893 = getelementptr inbounds i32, ptr %7, i64 %892
  %894 = load i32, ptr %893, align 4, !tbaa !5
  %895 = getelementptr inbounds i32, ptr %6, i64 %881
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = add nsw i32 %896, %894
  store i32 %897, ptr %895, align 4, !tbaa !5
  br label %916

898:                                              ; preds = %871, %888
  %899 = phi i32 [ %883, %888 ], [ %872, %871 ]
  %900 = phi ptr [ %882, %888 ], [ %4, %871 ]
  %901 = phi i64 [ %881, %888 ], [ 0, %871 ]
  %902 = add nsw i32 %899, 1
  store i32 %902, ptr %900, align 4, !tbaa !5
  %903 = getelementptr inbounds i32, ptr %7, i64 %901
  %904 = load i32, ptr %903, align 4, !tbaa !5
  %905 = getelementptr inbounds i32, ptr %6, i64 %901
  br label %916

906:                                              ; preds = %880
  %907 = icmp eq i32 %883, %886
  br i1 %907, label %908, label %914

908:                                              ; preds = %906
  store i32 0, ptr %882, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %8, i64 %881
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %6, i64 %881
  store i32 %910, ptr %911, align 4, !tbaa !5
  %912 = add nuw nsw i64 %881, 1
  %913 = icmp eq i64 %912, %640
  br i1 %913, label %921, label %880, !llvm.loop !232

914:                                              ; preds = %876, %906
  %915 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

916:                                              ; preds = %889, %898
  %917 = phi ptr [ %905, %898 ], [ %882, %889 ]
  %918 = phi i32 [ %904, %898 ], [ 1, %889 ]
  %919 = load i32, ptr %917, align 4, !tbaa !5
  %920 = add nsw i32 %919, %918
  store i32 %920, ptr %917, align 4, !tbaa !5
  br label %921

921:                                              ; preds = %908, %916, %878, %864
  %922 = icmp eq i32 %870, %5
  br i1 %922, label %5404, label %787, !llvm.loop !233

923:                                              ; preds = %628
  %924 = getelementptr inbounds i32, ptr %3, i64 %19
  %925 = load i32, ptr %924, align 4, !tbaa !5
  %926 = icmp eq i32 %925, 0
  %927 = icmp sgt i32 %5, 0
  br i1 %926, label %937, label %928

928:                                              ; preds = %923
  br i1 %927, label %929, label %5404

929:                                              ; preds = %928
  %930 = icmp sgt i32 %13, 1
  %931 = icmp sgt i32 %13, 0
  %932 = add i32 %13, -2
  %933 = zext i32 %932 to i64
  %934 = zext i32 %13 to i64
  %935 = add nuw i32 %5, 1
  %936 = icmp eq i32 %13, 1
  br label %1075

937:                                              ; preds = %923
  br i1 %927, label %938, label %5404

938:                                              ; preds = %937
  %939 = icmp sgt i32 %13, 1
  %940 = icmp sgt i32 %13, 0
  %941 = add i32 %13, -2
  %942 = zext i32 %941 to i64
  %943 = zext i32 %13 to i64
  %944 = add nuw i32 %5, 1
  %945 = icmp eq i32 %13, 1
  br label %946

946:                                              ; preds = %938, %1073
  %947 = phi i32 [ 0, %938 ], [ %1025, %1073 ]
  %948 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %939, label %949, label %1018

949:                                              ; preds = %946, %1008
  %950 = phi i32 [ %1017, %1008 ], [ 0, %946 ]
  %951 = phi i64 [ %959, %1008 ], [ %943, %946 ]
  %952 = phi i64 [ %1016, %1008 ], [ %942, %946 ]
  %953 = phi i32 [ %1014, %1008 ], [ %948, %946 ]
  %954 = sub i32 %941, %950
  %955 = tail call i32 @llvm.smin.i32(i32 %954, i32 0)
  %956 = sub i32 %954, %955
  %957 = zext i32 %956 to i64
  %958 = add nuw nsw i64 %957, 1
  %959 = add nsw i64 %951, -1
  %960 = icmp ult i32 %956, 31
  br i1 %960, label %996, label %961

961:                                              ; preds = %949
  %962 = and i64 %958, 8589934560
  %963 = sub i64 %952, %962
  br label %964

964:                                              ; preds = %964, %961
  %965 = phi i64 [ 0, %961 ], [ %988, %964 ]
  %966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %984, %964 ]
  %967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %985, %964 ]
  %968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %986, %964 ]
  %969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %987, %964 ]
  %970 = sub i64 %952, %965
  %971 = getelementptr inbounds i32, ptr %9, i64 %970
  %972 = getelementptr inbounds i32, ptr %971, i64 -7
  %973 = load <8 x i32>, ptr %972, align 4, !tbaa !5
  %974 = shufflevector <8 x i32> %973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %975 = getelementptr inbounds i32, ptr %971, i64 -15
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %971, i64 -23
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = getelementptr inbounds i32, ptr %971, i64 -31
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = mul <8 x i32> %974, %966
  %985 = mul <8 x i32> %977, %967
  %986 = mul <8 x i32> %980, %968
  %987 = mul <8 x i32> %983, %969
  %988 = add nuw i64 %965, 32
  %989 = icmp eq i64 %988, %962
  br i1 %989, label %990, label %964, !llvm.loop !234

990:                                              ; preds = %964
  %991 = mul <8 x i32> %985, %984
  %992 = mul <8 x i32> %986, %991
  %993 = mul <8 x i32> %987, %992
  %994 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %993)
  %995 = icmp eq i64 %958, %962
  br i1 %995, label %1008, label %996

996:                                              ; preds = %949, %990
  %997 = phi i64 [ %952, %949 ], [ %963, %990 ]
  %998 = phi i32 [ 1, %949 ], [ %994, %990 ]
  br label %999

999:                                              ; preds = %996, %999
  %1000 = phi i64 [ %1005, %999 ], [ %997, %996 ]
  %1001 = phi i32 [ %1004, %999 ], [ %998, %996 ]
  %1002 = getelementptr inbounds i32, ptr %9, i64 %1000
  %1003 = load i32, ptr %1002, align 4, !tbaa !5
  %1004 = mul nsw i32 %1003, %1001
  %1005 = add nsw i64 %1000, -1
  %1006 = trunc i64 %1000 to i32
  %1007 = icmp sgt i32 %1006, 0
  br i1 %1007, label %999, label %1008, !llvm.loop !235

1008:                                             ; preds = %999, %990
  %1009 = phi i32 [ %994, %990 ], [ %1004, %999 ]
  %1010 = and i64 %959, 4294967295
  %1011 = getelementptr inbounds i32, ptr %6, i64 %1010
  %1012 = load i32, ptr %1011, align 4, !tbaa !5
  %1013 = mul nsw i32 %1012, %1009
  %1014 = add nsw i32 %1013, %953
  %1015 = icmp sgt i64 %951, 2
  %1016 = add nsw i64 %952, -1
  %1017 = add i32 %950, 1
  br i1 %1015, label %949, label %1018, !llvm.loop !236

1018:                                             ; preds = %1008, %946
  %1019 = phi i32 [ %948, %946 ], [ %1014, %1008 ]
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds i32, ptr %622, i64 %1020
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = load i32, ptr %624, align 4, !tbaa !5
  %1024 = add nsw i32 %1023, %1022
  store i32 %1024, ptr %624, align 4, !tbaa !5
  %1025 = add nuw nsw i32 %947, 1
  br i1 %940, label %1026, label %1073

1026:                                             ; preds = %1018
  %1027 = load i32, ptr %4, align 4, !tbaa !5
  %1028 = load i32, ptr %12, align 4, !tbaa !5
  %1029 = add nsw i32 %1028, -1
  %1030 = icmp slt i32 %1027, %1029
  br i1 %1030, label %1050, label %1031

1031:                                             ; preds = %1026
  %1032 = icmp eq i32 %1027, %1029
  br i1 %1032, label %1033, label %1066

1033:                                             ; preds = %1031
  store i32 0, ptr %4, align 4, !tbaa !5
  %1034 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1034, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1073, label %1035

1035:                                             ; preds = %1033, %1060
  %1036 = phi i64 [ %1064, %1060 ], [ 1, %1033 ]
  %1037 = getelementptr inbounds i32, ptr %4, i64 %1036
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = getelementptr inbounds i32, ptr %12, i64 %1036
  %1040 = load i32, ptr %1039, align 4, !tbaa !5
  %1041 = add nsw i32 %1040, -1
  %1042 = icmp slt i32 %1038, %1041
  br i1 %1042, label %1043, label %1058

1043:                                             ; preds = %1035
  br i1 %1030, label %1050, label %1044

1044:                                             ; preds = %1043
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1036
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1036
  %1048 = load i32, ptr %1047, align 4, !tbaa !5
  %1049 = add nsw i32 %1048, %1046
  store i32 %1049, ptr %1047, align 4, !tbaa !5
  br label %1068

1050:                                             ; preds = %1026, %1043
  %1051 = phi i32 [ %1038, %1043 ], [ %1027, %1026 ]
  %1052 = phi ptr [ %1037, %1043 ], [ %4, %1026 ]
  %1053 = phi i64 [ %1036, %1043 ], [ 0, %1026 ]
  %1054 = add nsw i32 %1051, 1
  store i32 %1054, ptr %1052, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %7, i64 %1053
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = getelementptr inbounds i32, ptr %6, i64 %1053
  br label %1068

1058:                                             ; preds = %1035
  %1059 = icmp eq i32 %1038, %1041
  br i1 %1059, label %1060, label %1066

1060:                                             ; preds = %1058
  store i32 0, ptr %1037, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %8, i64 %1036
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1036
  store i32 %1062, ptr %1063, align 4, !tbaa !5
  %1064 = add nuw nsw i64 %1036, 1
  %1065 = icmp eq i64 %1064, %943
  br i1 %1065, label %1073, label %1035, !llvm.loop !237

1066:                                             ; preds = %1031, %1058
  %1067 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1068:                                             ; preds = %1044, %1050
  %1069 = phi ptr [ %1057, %1050 ], [ %1037, %1044 ]
  %1070 = phi i32 [ %1056, %1050 ], [ 1, %1044 ]
  %1071 = load i32, ptr %1069, align 4, !tbaa !5
  %1072 = add nsw i32 %1071, %1070
  store i32 %1072, ptr %1069, align 4, !tbaa !5
  br label %1073

1073:                                             ; preds = %1060, %1068, %1033, %1018
  %1074 = icmp eq i32 %1025, %5
  br i1 %1074, label %5404, label %946, !llvm.loop !238

1075:                                             ; preds = %929, %1209
  %1076 = phi i32 [ 0, %929 ], [ %1158, %1209 ]
  %1077 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %930, label %1078, label %1147

1078:                                             ; preds = %1075, %1137
  %1079 = phi i32 [ %1146, %1137 ], [ 0, %1075 ]
  %1080 = phi i64 [ %1088, %1137 ], [ %934, %1075 ]
  %1081 = phi i64 [ %1145, %1137 ], [ %933, %1075 ]
  %1082 = phi i32 [ %1143, %1137 ], [ %1077, %1075 ]
  %1083 = sub i32 %932, %1079
  %1084 = tail call i32 @llvm.smin.i32(i32 %1083, i32 0)
  %1085 = sub i32 %1083, %1084
  %1086 = zext i32 %1085 to i64
  %1087 = add nuw nsw i64 %1086, 1
  %1088 = add nsw i64 %1080, -1
  %1089 = icmp ult i32 %1085, 31
  br i1 %1089, label %1125, label %1090

1090:                                             ; preds = %1078
  %1091 = and i64 %1087, 8589934560
  %1092 = sub i64 %1081, %1091
  br label %1093

1093:                                             ; preds = %1093, %1090
  %1094 = phi i64 [ 0, %1090 ], [ %1117, %1093 ]
  %1095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1113, %1093 ]
  %1096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1114, %1093 ]
  %1097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1115, %1093 ]
  %1098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1116, %1093 ]
  %1099 = sub i64 %1081, %1094
  %1100 = getelementptr inbounds i32, ptr %11, i64 %1099
  %1101 = getelementptr inbounds i32, ptr %1100, i64 -7
  %1102 = load <8 x i32>, ptr %1101, align 4, !tbaa !5
  %1103 = shufflevector <8 x i32> %1102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1104 = getelementptr inbounds i32, ptr %1100, i64 -15
  %1105 = load <8 x i32>, ptr %1104, align 4, !tbaa !5
  %1106 = shufflevector <8 x i32> %1105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1107 = getelementptr inbounds i32, ptr %1100, i64 -23
  %1108 = load <8 x i32>, ptr %1107, align 4, !tbaa !5
  %1109 = shufflevector <8 x i32> %1108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1110 = getelementptr inbounds i32, ptr %1100, i64 -31
  %1111 = load <8 x i32>, ptr %1110, align 4, !tbaa !5
  %1112 = shufflevector <8 x i32> %1111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1113 = mul <8 x i32> %1103, %1095
  %1114 = mul <8 x i32> %1106, %1096
  %1115 = mul <8 x i32> %1109, %1097
  %1116 = mul <8 x i32> %1112, %1098
  %1117 = add nuw i64 %1094, 32
  %1118 = icmp eq i64 %1117, %1091
  br i1 %1118, label %1119, label %1093, !llvm.loop !239

1119:                                             ; preds = %1093
  %1120 = mul <8 x i32> %1114, %1113
  %1121 = mul <8 x i32> %1115, %1120
  %1122 = mul <8 x i32> %1116, %1121
  %1123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1122)
  %1124 = icmp eq i64 %1087, %1091
  br i1 %1124, label %1137, label %1125

1125:                                             ; preds = %1078, %1119
  %1126 = phi i64 [ %1081, %1078 ], [ %1092, %1119 ]
  %1127 = phi i32 [ 1, %1078 ], [ %1123, %1119 ]
  br label %1128

1128:                                             ; preds = %1125, %1128
  %1129 = phi i64 [ %1134, %1128 ], [ %1126, %1125 ]
  %1130 = phi i32 [ %1133, %1128 ], [ %1127, %1125 ]
  %1131 = getelementptr inbounds i32, ptr %11, i64 %1129
  %1132 = load i32, ptr %1131, align 4, !tbaa !5
  %1133 = mul nsw i32 %1132, %1130
  %1134 = add nsw i64 %1129, -1
  %1135 = trunc i64 %1129 to i32
  %1136 = icmp sgt i32 %1135, 0
  br i1 %1136, label %1128, label %1137, !llvm.loop !240

1137:                                             ; preds = %1128, %1119
  %1138 = phi i32 [ %1123, %1119 ], [ %1133, %1128 ]
  %1139 = and i64 %1088, 4294967295
  %1140 = getelementptr inbounds i32, ptr %6, i64 %1139
  %1141 = load i32, ptr %1140, align 4, !tbaa !5
  %1142 = mul nsw i32 %1141, %1138
  %1143 = add nsw i32 %1142, %1082
  %1144 = icmp sgt i64 %1080, 2
  %1145 = add nsw i64 %1081, -1
  %1146 = add i32 %1079, 1
  br i1 %1144, label %1078, label %1147, !llvm.loop !241

1147:                                             ; preds = %1137, %1075
  %1148 = phi i32 [ %1077, %1075 ], [ %1143, %1137 ]
  %1149 = icmp slt i32 %1148, %5
  br i1 %1149, label %1152, label %1150

1150:                                             ; preds = %1147
  %1151 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

1152:                                             ; preds = %1147
  %1153 = sext i32 %1148 to i64
  %1154 = getelementptr inbounds i32, ptr %622, i64 %1153
  %1155 = load i32, ptr %1154, align 4, !tbaa !5
  %1156 = load i32, ptr %624, align 4, !tbaa !5
  %1157 = add nsw i32 %1156, %1155
  store i32 %1157, ptr %624, align 4, !tbaa !5
  %1158 = add nuw nsw i32 %1076, 1
  br i1 %931, label %1159, label %1209

1159:                                             ; preds = %1152
  %1160 = load i32, ptr %4, align 4, !tbaa !5
  %1161 = load i32, ptr %12, align 4, !tbaa !5
  %1162 = add nsw i32 %1161, -1
  %1163 = icmp slt i32 %1160, %1162
  br i1 %1163, label %1186, label %1164

1164:                                             ; preds = %1159
  %1165 = icmp eq i32 %1160, %1162
  br i1 %1165, label %1166, label %1202

1166:                                             ; preds = %1164
  store i32 0, ptr %4, align 4, !tbaa !5
  %1167 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1167, ptr %6, align 4, !tbaa !5
  br i1 %936, label %1209, label %1168

1168:                                             ; preds = %1166, %1196
  %1169 = phi i64 [ %1200, %1196 ], [ 1, %1166 ]
  %1170 = getelementptr inbounds i32, ptr %4, i64 %1169
  %1171 = load i32, ptr %1170, align 4, !tbaa !5
  %1172 = getelementptr inbounds i32, ptr %12, i64 %1169
  %1173 = load i32, ptr %1172, align 4, !tbaa !5
  %1174 = add nsw i32 %1173, -1
  %1175 = icmp slt i32 %1171, %1174
  br i1 %1175, label %1176, label %1194

1176:                                             ; preds = %1168
  br i1 %1163, label %1186, label %1177

1177:                                             ; preds = %1176
  %1178 = shl i64 %1169, 32
  %1179 = add i64 %1178, -4294967296
  %1180 = ashr exact i64 %1179, 32
  %1181 = getelementptr inbounds i32, ptr %7, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !5
  %1183 = getelementptr inbounds i32, ptr %6, i64 %1169
  %1184 = load i32, ptr %1183, align 4, !tbaa !5
  %1185 = add nsw i32 %1184, %1182
  store i32 %1185, ptr %1183, align 4, !tbaa !5
  br label %1204

1186:                                             ; preds = %1159, %1176
  %1187 = phi i32 [ %1171, %1176 ], [ %1160, %1159 ]
  %1188 = phi ptr [ %1170, %1176 ], [ %4, %1159 ]
  %1189 = phi i64 [ %1169, %1176 ], [ 0, %1159 ]
  %1190 = add nsw i32 %1187, 1
  store i32 %1190, ptr %1188, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %7, i64 %1189
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = getelementptr inbounds i32, ptr %6, i64 %1189
  br label %1204

1194:                                             ; preds = %1168
  %1195 = icmp eq i32 %1171, %1174
  br i1 %1195, label %1196, label %1202

1196:                                             ; preds = %1194
  store i32 0, ptr %1170, align 4, !tbaa !5
  %1197 = getelementptr inbounds i32, ptr %8, i64 %1169
  %1198 = load i32, ptr %1197, align 4, !tbaa !5
  %1199 = getelementptr inbounds i32, ptr %6, i64 %1169
  store i32 %1198, ptr %1199, align 4, !tbaa !5
  %1200 = add nuw nsw i64 %1169, 1
  %1201 = icmp eq i64 %1200, %934
  br i1 %1201, label %1209, label %1168, !llvm.loop !242

1202:                                             ; preds = %1164, %1194
  %1203 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1204:                                             ; preds = %1177, %1186
  %1205 = phi ptr [ %1193, %1186 ], [ %1170, %1177 ]
  %1206 = phi i32 [ %1192, %1186 ], [ 1, %1177 ]
  %1207 = load i32, ptr %1205, align 4, !tbaa !5
  %1208 = add nsw i32 %1207, %1206
  store i32 %1208, ptr %1205, align 4, !tbaa !5
  br label %1209

1209:                                             ; preds = %1196, %1204, %1166, %1152
  %1210 = icmp eq i32 %1158, %5
  br i1 %1210, label %5404, label %1075, !llvm.loop !243

1211:                                             ; preds = %628
  %1212 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 294, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

1213:                                             ; preds = %18
  %1214 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1215 = load ptr, ptr %1214, align 8, !tbaa !9
  %1216 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1217 = load ptr, ptr %1216, align 8, !tbaa !9
  store i8 0, ptr %1217, align 1, !tbaa !11
  %1218 = icmp eq i32 %13, 0
  br i1 %1218, label %1219, label %1222

1219:                                             ; preds = %1213
  %1220 = load i32, ptr %1215, align 4, !tbaa !5
  %1221 = trunc i32 %1220 to i8
  store i8 %1221, ptr %1217, align 1, !tbaa !11
  br label %5404

1222:                                             ; preds = %1213
  switch i32 %1, label %1810 [
    i32 1, label %1223
    i32 0, label %1520
  ]

1223:                                             ; preds = %1222
  %1224 = getelementptr inbounds i32, ptr %3, i64 %19
  %1225 = load i32, ptr %1224, align 4, !tbaa !5
  %1226 = icmp eq i32 %1225, 0
  %1227 = icmp sgt i32 %5, 0
  br i1 %1226, label %1237, label %1228

1228:                                             ; preds = %1223
  br i1 %1227, label %1229, label %5404

1229:                                             ; preds = %1228
  %1230 = icmp sgt i32 %13, 1
  %1231 = icmp sgt i32 %13, 0
  %1232 = add i32 %13, -2
  %1233 = zext i32 %1232 to i64
  %1234 = zext i32 %13 to i64
  %1235 = add nuw i32 %5, 1
  %1236 = icmp eq i32 %13, 1
  br label %1383

1237:                                             ; preds = %1223
  br i1 %1227, label %1238, label %5404

1238:                                             ; preds = %1237
  %1239 = icmp sgt i32 %13, 1
  %1240 = icmp sgt i32 %13, 0
  %1241 = add i32 %13, -2
  %1242 = zext i32 %1241 to i64
  %1243 = zext i32 %13 to i64
  %1244 = add nuw i32 %5, 1
  %1245 = icmp eq i32 %13, 1
  br label %1246

1246:                                             ; preds = %1238, %1381
  %1247 = phi i32 [ 0, %1238 ], [ %1333, %1381 ]
  %1248 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1239, label %1249, label %1318

1249:                                             ; preds = %1246, %1308
  %1250 = phi i32 [ %1317, %1308 ], [ 0, %1246 ]
  %1251 = phi i64 [ %1259, %1308 ], [ %1243, %1246 ]
  %1252 = phi i64 [ %1316, %1308 ], [ %1242, %1246 ]
  %1253 = phi i32 [ %1314, %1308 ], [ %1248, %1246 ]
  %1254 = sub i32 %1241, %1250
  %1255 = tail call i32 @llvm.smin.i32(i32 %1254, i32 0)
  %1256 = sub i32 %1254, %1255
  %1257 = zext i32 %1256 to i64
  %1258 = add nuw nsw i64 %1257, 1
  %1259 = add nsw i64 %1251, -1
  %1260 = icmp ult i32 %1256, 31
  br i1 %1260, label %1296, label %1261

1261:                                             ; preds = %1249
  %1262 = and i64 %1258, 8589934560
  %1263 = sub i64 %1252, %1262
  br label %1264

1264:                                             ; preds = %1264, %1261
  %1265 = phi i64 [ 0, %1261 ], [ %1288, %1264 ]
  %1266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1284, %1264 ]
  %1267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1285, %1264 ]
  %1268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1286, %1264 ]
  %1269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1287, %1264 ]
  %1270 = sub i64 %1252, %1265
  %1271 = getelementptr inbounds i32, ptr %9, i64 %1270
  %1272 = getelementptr inbounds i32, ptr %1271, i64 -7
  %1273 = load <8 x i32>, ptr %1272, align 4, !tbaa !5
  %1274 = shufflevector <8 x i32> %1273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1275 = getelementptr inbounds i32, ptr %1271, i64 -15
  %1276 = load <8 x i32>, ptr %1275, align 4, !tbaa !5
  %1277 = shufflevector <8 x i32> %1276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1278 = getelementptr inbounds i32, ptr %1271, i64 -23
  %1279 = load <8 x i32>, ptr %1278, align 4, !tbaa !5
  %1280 = shufflevector <8 x i32> %1279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1281 = getelementptr inbounds i32, ptr %1271, i64 -31
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = mul <8 x i32> %1274, %1266
  %1285 = mul <8 x i32> %1277, %1267
  %1286 = mul <8 x i32> %1280, %1268
  %1287 = mul <8 x i32> %1283, %1269
  %1288 = add nuw i64 %1265, 32
  %1289 = icmp eq i64 %1288, %1262
  br i1 %1289, label %1290, label %1264, !llvm.loop !244

1290:                                             ; preds = %1264
  %1291 = mul <8 x i32> %1285, %1284
  %1292 = mul <8 x i32> %1286, %1291
  %1293 = mul <8 x i32> %1287, %1292
  %1294 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1293)
  %1295 = icmp eq i64 %1258, %1262
  br i1 %1295, label %1308, label %1296

1296:                                             ; preds = %1249, %1290
  %1297 = phi i64 [ %1252, %1249 ], [ %1263, %1290 ]
  %1298 = phi i32 [ 1, %1249 ], [ %1294, %1290 ]
  br label %1299

1299:                                             ; preds = %1296, %1299
  %1300 = phi i64 [ %1305, %1299 ], [ %1297, %1296 ]
  %1301 = phi i32 [ %1304, %1299 ], [ %1298, %1296 ]
  %1302 = getelementptr inbounds i32, ptr %9, i64 %1300
  %1303 = load i32, ptr %1302, align 4, !tbaa !5
  %1304 = mul nsw i32 %1303, %1301
  %1305 = add nsw i64 %1300, -1
  %1306 = trunc i64 %1300 to i32
  %1307 = icmp sgt i32 %1306, 0
  br i1 %1307, label %1299, label %1308, !llvm.loop !245

1308:                                             ; preds = %1299, %1290
  %1309 = phi i32 [ %1294, %1290 ], [ %1304, %1299 ]
  %1310 = and i64 %1259, 4294967295
  %1311 = getelementptr inbounds i32, ptr %6, i64 %1310
  %1312 = load i32, ptr %1311, align 4, !tbaa !5
  %1313 = mul nsw i32 %1312, %1309
  %1314 = add nsw i32 %1313, %1253
  %1315 = icmp sgt i64 %1251, 2
  %1316 = add nsw i64 %1252, -1
  %1317 = add i32 %1250, 1
  br i1 %1315, label %1249, label %1318, !llvm.loop !246

1318:                                             ; preds = %1308, %1246
  %1319 = phi i32 [ %1248, %1246 ], [ %1314, %1308 ]
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds double, ptr %2, i64 %1320
  %1322 = load double, ptr %1321, align 8, !tbaa !18
  %1323 = getelementptr inbounds i32, ptr %1215, i64 %1320
  %1324 = load i32, ptr %1323, align 4, !tbaa !5
  %1325 = load i8, ptr %1217, align 1, !tbaa !11
  %1326 = sitofp i8 %1325 to double
  %1327 = shl i32 %1324, 24
  %1328 = ashr exact i32 %1327, 24
  %1329 = sitofp i32 %1328 to double
  %1330 = fmul fast double %1322, %1329
  %1331 = fadd fast double %1330, %1326
  %1332 = fptosi double %1331 to i8
  store i8 %1332, ptr %1217, align 1, !tbaa !11
  %1333 = add nuw nsw i32 %1247, 1
  br i1 %1240, label %1334, label %1381

1334:                                             ; preds = %1318
  %1335 = load i32, ptr %4, align 4, !tbaa !5
  %1336 = load i32, ptr %12, align 4, !tbaa !5
  %1337 = add nsw i32 %1336, -1
  %1338 = icmp slt i32 %1335, %1337
  br i1 %1338, label %1358, label %1339

1339:                                             ; preds = %1334
  %1340 = icmp eq i32 %1335, %1337
  br i1 %1340, label %1341, label %1374

1341:                                             ; preds = %1339
  store i32 0, ptr %4, align 4, !tbaa !5
  %1342 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1342, ptr %6, align 4, !tbaa !5
  br i1 %1245, label %1381, label %1343

1343:                                             ; preds = %1341, %1368
  %1344 = phi i64 [ %1372, %1368 ], [ 1, %1341 ]
  %1345 = getelementptr inbounds i32, ptr %4, i64 %1344
  %1346 = load i32, ptr %1345, align 4, !tbaa !5
  %1347 = getelementptr inbounds i32, ptr %12, i64 %1344
  %1348 = load i32, ptr %1347, align 4, !tbaa !5
  %1349 = add nsw i32 %1348, -1
  %1350 = icmp slt i32 %1346, %1349
  br i1 %1350, label %1351, label %1366

1351:                                             ; preds = %1343
  br i1 %1338, label %1358, label %1352

1352:                                             ; preds = %1351
  %1353 = getelementptr inbounds i32, ptr %7, i64 %1344
  %1354 = load i32, ptr %1353, align 4, !tbaa !5
  %1355 = getelementptr inbounds i32, ptr %6, i64 %1344
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = add nsw i32 %1356, %1354
  store i32 %1357, ptr %1355, align 4, !tbaa !5
  br label %1376

1358:                                             ; preds = %1334, %1351
  %1359 = phi i32 [ %1346, %1351 ], [ %1335, %1334 ]
  %1360 = phi ptr [ %1345, %1351 ], [ %4, %1334 ]
  %1361 = phi i64 [ %1344, %1351 ], [ 0, %1334 ]
  %1362 = add nsw i32 %1359, 1
  store i32 %1362, ptr %1360, align 4, !tbaa !5
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1361
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1361
  br label %1376

1366:                                             ; preds = %1343
  %1367 = icmp eq i32 %1346, %1349
  br i1 %1367, label %1368, label %1374

1368:                                             ; preds = %1366
  store i32 0, ptr %1345, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %8, i64 %1344
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1344
  store i32 %1370, ptr %1371, align 4, !tbaa !5
  %1372 = add nuw nsw i64 %1344, 1
  %1373 = icmp eq i64 %1372, %1243
  br i1 %1373, label %1381, label %1343, !llvm.loop !247

1374:                                             ; preds = %1339, %1366
  %1375 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1376:                                             ; preds = %1352, %1358
  %1377 = phi ptr [ %1365, %1358 ], [ %1345, %1352 ]
  %1378 = phi i32 [ %1364, %1358 ], [ 1, %1352 ]
  %1379 = load i32, ptr %1377, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1378
  store i32 %1380, ptr %1377, align 4, !tbaa !5
  br label %1381

1381:                                             ; preds = %1368, %1376, %1341, %1318
  %1382 = icmp eq i32 %1333, %5
  br i1 %1382, label %5404, label %1246, !llvm.loop !248

1383:                                             ; preds = %1229, %1518
  %1384 = phi i32 [ 0, %1229 ], [ %1467, %1518 ]
  %1385 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1230, label %1386, label %1455

1386:                                             ; preds = %1383, %1445
  %1387 = phi i32 [ %1454, %1445 ], [ 0, %1383 ]
  %1388 = phi i64 [ %1396, %1445 ], [ %1234, %1383 ]
  %1389 = phi i64 [ %1453, %1445 ], [ %1233, %1383 ]
  %1390 = phi i32 [ %1451, %1445 ], [ %1385, %1383 ]
  %1391 = sub i32 %1232, %1387
  %1392 = tail call i32 @llvm.smin.i32(i32 %1391, i32 0)
  %1393 = sub i32 %1391, %1392
  %1394 = zext i32 %1393 to i64
  %1395 = add nuw nsw i64 %1394, 1
  %1396 = add nsw i64 %1388, -1
  %1397 = icmp ult i32 %1393, 31
  br i1 %1397, label %1433, label %1398

1398:                                             ; preds = %1386
  %1399 = and i64 %1395, 8589934560
  %1400 = sub i64 %1389, %1399
  br label %1401

1401:                                             ; preds = %1401, %1398
  %1402 = phi i64 [ 0, %1398 ], [ %1425, %1401 ]
  %1403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1421, %1401 ]
  %1404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1422, %1401 ]
  %1405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1423, %1401 ]
  %1406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1424, %1401 ]
  %1407 = sub i64 %1389, %1402
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1407
  %1409 = getelementptr inbounds i32, ptr %1408, i64 -7
  %1410 = load <8 x i32>, ptr %1409, align 4, !tbaa !5
  %1411 = shufflevector <8 x i32> %1410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1412 = getelementptr inbounds i32, ptr %1408, i64 -15
  %1413 = load <8 x i32>, ptr %1412, align 4, !tbaa !5
  %1414 = shufflevector <8 x i32> %1413, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1415 = getelementptr inbounds i32, ptr %1408, i64 -23
  %1416 = load <8 x i32>, ptr %1415, align 4, !tbaa !5
  %1417 = shufflevector <8 x i32> %1416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1418 = getelementptr inbounds i32, ptr %1408, i64 -31
  %1419 = load <8 x i32>, ptr %1418, align 4, !tbaa !5
  %1420 = shufflevector <8 x i32> %1419, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1421 = mul <8 x i32> %1411, %1403
  %1422 = mul <8 x i32> %1414, %1404
  %1423 = mul <8 x i32> %1417, %1405
  %1424 = mul <8 x i32> %1420, %1406
  %1425 = add nuw i64 %1402, 32
  %1426 = icmp eq i64 %1425, %1399
  br i1 %1426, label %1427, label %1401, !llvm.loop !249

1427:                                             ; preds = %1401
  %1428 = mul <8 x i32> %1422, %1421
  %1429 = mul <8 x i32> %1423, %1428
  %1430 = mul <8 x i32> %1424, %1429
  %1431 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1430)
  %1432 = icmp eq i64 %1395, %1399
  br i1 %1432, label %1445, label %1433

1433:                                             ; preds = %1386, %1427
  %1434 = phi i64 [ %1389, %1386 ], [ %1400, %1427 ]
  %1435 = phi i32 [ 1, %1386 ], [ %1431, %1427 ]
  br label %1436

1436:                                             ; preds = %1433, %1436
  %1437 = phi i64 [ %1442, %1436 ], [ %1434, %1433 ]
  %1438 = phi i32 [ %1441, %1436 ], [ %1435, %1433 ]
  %1439 = getelementptr inbounds i32, ptr %11, i64 %1437
  %1440 = load i32, ptr %1439, align 4, !tbaa !5
  %1441 = mul nsw i32 %1440, %1438
  %1442 = add nsw i64 %1437, -1
  %1443 = trunc i64 %1437 to i32
  %1444 = icmp sgt i32 %1443, 0
  br i1 %1444, label %1436, label %1445, !llvm.loop !250

1445:                                             ; preds = %1436, %1427
  %1446 = phi i32 [ %1431, %1427 ], [ %1441, %1436 ]
  %1447 = and i64 %1396, 4294967295
  %1448 = getelementptr inbounds i32, ptr %6, i64 %1447
  %1449 = load i32, ptr %1448, align 4, !tbaa !5
  %1450 = mul nsw i32 %1449, %1446
  %1451 = add nsw i32 %1450, %1390
  %1452 = icmp sgt i64 %1388, 2
  %1453 = add nsw i64 %1389, -1
  %1454 = add i32 %1387, 1
  br i1 %1452, label %1386, label %1455, !llvm.loop !251

1455:                                             ; preds = %1445, %1383
  %1456 = phi i32 [ %1385, %1383 ], [ %1451, %1445 ]
  %1457 = icmp slt i32 %1456, %5
  br i1 %1457, label %1460, label %1458

1458:                                             ; preds = %1455
  %1459 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

1460:                                             ; preds = %1455
  %1461 = sext i32 %1456 to i64
  %1462 = getelementptr inbounds i32, ptr %1215, i64 %1461
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = load i8, ptr %1217, align 1, !tbaa !11
  %1465 = trunc i32 %1463 to i8
  %1466 = add i8 %1464, %1465
  store i8 %1466, ptr %1217, align 1, !tbaa !11
  %1467 = add nuw nsw i32 %1384, 1
  br i1 %1231, label %1468, label %1518

1468:                                             ; preds = %1460
  %1469 = load i32, ptr %4, align 4, !tbaa !5
  %1470 = load i32, ptr %12, align 4, !tbaa !5
  %1471 = add nsw i32 %1470, -1
  %1472 = icmp slt i32 %1469, %1471
  br i1 %1472, label %1495, label %1473

1473:                                             ; preds = %1468
  %1474 = icmp eq i32 %1469, %1471
  br i1 %1474, label %1475, label %1511

1475:                                             ; preds = %1473
  store i32 0, ptr %4, align 4, !tbaa !5
  %1476 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1476, ptr %6, align 4, !tbaa !5
  br i1 %1236, label %1518, label %1477

1477:                                             ; preds = %1475, %1505
  %1478 = phi i64 [ %1509, %1505 ], [ 1, %1475 ]
  %1479 = getelementptr inbounds i32, ptr %4, i64 %1478
  %1480 = load i32, ptr %1479, align 4, !tbaa !5
  %1481 = getelementptr inbounds i32, ptr %12, i64 %1478
  %1482 = load i32, ptr %1481, align 4, !tbaa !5
  %1483 = add nsw i32 %1482, -1
  %1484 = icmp slt i32 %1480, %1483
  br i1 %1484, label %1485, label %1503

1485:                                             ; preds = %1477
  br i1 %1472, label %1495, label %1486

1486:                                             ; preds = %1485
  %1487 = shl i64 %1478, 32
  %1488 = add i64 %1487, -4294967296
  %1489 = ashr exact i64 %1488, 32
  %1490 = getelementptr inbounds i32, ptr %7, i64 %1489
  %1491 = load i32, ptr %1490, align 4, !tbaa !5
  %1492 = getelementptr inbounds i32, ptr %6, i64 %1478
  %1493 = load i32, ptr %1492, align 4, !tbaa !5
  %1494 = add nsw i32 %1493, %1491
  store i32 %1494, ptr %1492, align 4, !tbaa !5
  br label %1513

1495:                                             ; preds = %1468, %1485
  %1496 = phi i32 [ %1480, %1485 ], [ %1469, %1468 ]
  %1497 = phi ptr [ %1479, %1485 ], [ %4, %1468 ]
  %1498 = phi i64 [ %1478, %1485 ], [ 0, %1468 ]
  %1499 = add nsw i32 %1496, 1
  store i32 %1499, ptr %1497, align 4, !tbaa !5
  %1500 = getelementptr inbounds i32, ptr %7, i64 %1498
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = getelementptr inbounds i32, ptr %6, i64 %1498
  br label %1513

1503:                                             ; preds = %1477
  %1504 = icmp eq i32 %1480, %1483
  br i1 %1504, label %1505, label %1511

1505:                                             ; preds = %1503
  store i32 0, ptr %1479, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %8, i64 %1478
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = getelementptr inbounds i32, ptr %6, i64 %1478
  store i32 %1507, ptr %1508, align 4, !tbaa !5
  %1509 = add nuw nsw i64 %1478, 1
  %1510 = icmp eq i64 %1509, %1234
  br i1 %1510, label %1518, label %1477, !llvm.loop !252

1511:                                             ; preds = %1473, %1503
  %1512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1513:                                             ; preds = %1486, %1495
  %1514 = phi ptr [ %1502, %1495 ], [ %1479, %1486 ]
  %1515 = phi i32 [ %1501, %1495 ], [ 1, %1486 ]
  %1516 = load i32, ptr %1514, align 4, !tbaa !5
  %1517 = add nsw i32 %1516, %1515
  store i32 %1517, ptr %1514, align 4, !tbaa !5
  br label %1518

1518:                                             ; preds = %1505, %1513, %1475, %1460
  %1519 = icmp eq i32 %1467, %5
  br i1 %1519, label %5404, label %1383, !llvm.loop !253

1520:                                             ; preds = %1222
  %1521 = getelementptr inbounds i32, ptr %3, i64 %19
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = icmp eq i32 %1522, 0
  %1524 = icmp sgt i32 %5, 0
  br i1 %1523, label %1534, label %1525

1525:                                             ; preds = %1520
  br i1 %1524, label %1526, label %5404

1526:                                             ; preds = %1525
  %1527 = icmp sgt i32 %13, 1
  %1528 = icmp sgt i32 %13, 0
  %1529 = add i32 %13, -2
  %1530 = zext i32 %1529 to i64
  %1531 = zext i32 %13 to i64
  %1532 = add nuw i32 %5, 1
  %1533 = icmp eq i32 %13, 1
  br label %1673

1534:                                             ; preds = %1520
  br i1 %1524, label %1535, label %5404

1535:                                             ; preds = %1534
  %1536 = icmp sgt i32 %13, 1
  %1537 = icmp sgt i32 %13, 0
  %1538 = add i32 %13, -2
  %1539 = zext i32 %1538 to i64
  %1540 = zext i32 %13 to i64
  %1541 = add nuw i32 %5, 1
  %1542 = icmp eq i32 %13, 1
  br label %1543

1543:                                             ; preds = %1535, %1671
  %1544 = phi i32 [ 0, %1535 ], [ %1623, %1671 ]
  %1545 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1536, label %1546, label %1615

1546:                                             ; preds = %1543, %1605
  %1547 = phi i32 [ %1614, %1605 ], [ 0, %1543 ]
  %1548 = phi i64 [ %1556, %1605 ], [ %1540, %1543 ]
  %1549 = phi i64 [ %1613, %1605 ], [ %1539, %1543 ]
  %1550 = phi i32 [ %1611, %1605 ], [ %1545, %1543 ]
  %1551 = sub i32 %1538, %1547
  %1552 = tail call i32 @llvm.smin.i32(i32 %1551, i32 0)
  %1553 = sub i32 %1551, %1552
  %1554 = zext i32 %1553 to i64
  %1555 = add nuw nsw i64 %1554, 1
  %1556 = add nsw i64 %1548, -1
  %1557 = icmp ult i32 %1553, 31
  br i1 %1557, label %1593, label %1558

1558:                                             ; preds = %1546
  %1559 = and i64 %1555, 8589934560
  %1560 = sub i64 %1549, %1559
  br label %1561

1561:                                             ; preds = %1561, %1558
  %1562 = phi i64 [ 0, %1558 ], [ %1585, %1561 ]
  %1563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1581, %1561 ]
  %1564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1582, %1561 ]
  %1565 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1583, %1561 ]
  %1566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1584, %1561 ]
  %1567 = sub i64 %1549, %1562
  %1568 = getelementptr inbounds i32, ptr %9, i64 %1567
  %1569 = getelementptr inbounds i32, ptr %1568, i64 -7
  %1570 = load <8 x i32>, ptr %1569, align 4, !tbaa !5
  %1571 = shufflevector <8 x i32> %1570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1572 = getelementptr inbounds i32, ptr %1568, i64 -15
  %1573 = load <8 x i32>, ptr %1572, align 4, !tbaa !5
  %1574 = shufflevector <8 x i32> %1573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1575 = getelementptr inbounds i32, ptr %1568, i64 -23
  %1576 = load <8 x i32>, ptr %1575, align 4, !tbaa !5
  %1577 = shufflevector <8 x i32> %1576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1578 = getelementptr inbounds i32, ptr %1568, i64 -31
  %1579 = load <8 x i32>, ptr %1578, align 4, !tbaa !5
  %1580 = shufflevector <8 x i32> %1579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1581 = mul <8 x i32> %1571, %1563
  %1582 = mul <8 x i32> %1574, %1564
  %1583 = mul <8 x i32> %1577, %1565
  %1584 = mul <8 x i32> %1580, %1566
  %1585 = add nuw i64 %1562, 32
  %1586 = icmp eq i64 %1585, %1559
  br i1 %1586, label %1587, label %1561, !llvm.loop !254

1587:                                             ; preds = %1561
  %1588 = mul <8 x i32> %1582, %1581
  %1589 = mul <8 x i32> %1583, %1588
  %1590 = mul <8 x i32> %1584, %1589
  %1591 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1590)
  %1592 = icmp eq i64 %1555, %1559
  br i1 %1592, label %1605, label %1593

1593:                                             ; preds = %1546, %1587
  %1594 = phi i64 [ %1549, %1546 ], [ %1560, %1587 ]
  %1595 = phi i32 [ 1, %1546 ], [ %1591, %1587 ]
  br label %1596

1596:                                             ; preds = %1593, %1596
  %1597 = phi i64 [ %1602, %1596 ], [ %1594, %1593 ]
  %1598 = phi i32 [ %1601, %1596 ], [ %1595, %1593 ]
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1597
  %1600 = load i32, ptr %1599, align 4, !tbaa !5
  %1601 = mul nsw i32 %1600, %1598
  %1602 = add nsw i64 %1597, -1
  %1603 = trunc i64 %1597 to i32
  %1604 = icmp sgt i32 %1603, 0
  br i1 %1604, label %1596, label %1605, !llvm.loop !255

1605:                                             ; preds = %1596, %1587
  %1606 = phi i32 [ %1591, %1587 ], [ %1601, %1596 ]
  %1607 = and i64 %1556, 4294967295
  %1608 = getelementptr inbounds i32, ptr %6, i64 %1607
  %1609 = load i32, ptr %1608, align 4, !tbaa !5
  %1610 = mul nsw i32 %1609, %1606
  %1611 = add nsw i32 %1610, %1550
  %1612 = icmp sgt i64 %1548, 2
  %1613 = add nsw i64 %1549, -1
  %1614 = add i32 %1547, 1
  br i1 %1612, label %1546, label %1615, !llvm.loop !256

1615:                                             ; preds = %1605, %1543
  %1616 = phi i32 [ %1545, %1543 ], [ %1611, %1605 ]
  %1617 = sext i32 %1616 to i64
  %1618 = getelementptr inbounds i32, ptr %1215, i64 %1617
  %1619 = load i32, ptr %1618, align 4, !tbaa !5
  %1620 = load i8, ptr %1217, align 1, !tbaa !11
  %1621 = trunc i32 %1619 to i8
  %1622 = add i8 %1620, %1621
  store i8 %1622, ptr %1217, align 1, !tbaa !11
  %1623 = add nuw nsw i32 %1544, 1
  br i1 %1537, label %1624, label %1671

1624:                                             ; preds = %1615
  %1625 = load i32, ptr %4, align 4, !tbaa !5
  %1626 = load i32, ptr %12, align 4, !tbaa !5
  %1627 = add nsw i32 %1626, -1
  %1628 = icmp slt i32 %1625, %1627
  br i1 %1628, label %1648, label %1629

1629:                                             ; preds = %1624
  %1630 = icmp eq i32 %1625, %1627
  br i1 %1630, label %1631, label %1664

1631:                                             ; preds = %1629
  store i32 0, ptr %4, align 4, !tbaa !5
  %1632 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1632, ptr %6, align 4, !tbaa !5
  br i1 %1542, label %1671, label %1633

1633:                                             ; preds = %1631, %1658
  %1634 = phi i64 [ %1662, %1658 ], [ 1, %1631 ]
  %1635 = getelementptr inbounds i32, ptr %4, i64 %1634
  %1636 = load i32, ptr %1635, align 4, !tbaa !5
  %1637 = getelementptr inbounds i32, ptr %12, i64 %1634
  %1638 = load i32, ptr %1637, align 4, !tbaa !5
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1636, %1639
  br i1 %1640, label %1641, label %1656

1641:                                             ; preds = %1633
  br i1 %1628, label %1648, label %1642

1642:                                             ; preds = %1641
  %1643 = getelementptr inbounds i32, ptr %7, i64 %1634
  %1644 = load i32, ptr %1643, align 4, !tbaa !5
  %1645 = getelementptr inbounds i32, ptr %6, i64 %1634
  %1646 = load i32, ptr %1645, align 4, !tbaa !5
  %1647 = add nsw i32 %1646, %1644
  store i32 %1647, ptr %1645, align 4, !tbaa !5
  br label %1666

1648:                                             ; preds = %1624, %1641
  %1649 = phi i32 [ %1636, %1641 ], [ %1625, %1624 ]
  %1650 = phi ptr [ %1635, %1641 ], [ %4, %1624 ]
  %1651 = phi i64 [ %1634, %1641 ], [ 0, %1624 ]
  %1652 = add nsw i32 %1649, 1
  store i32 %1652, ptr %1650, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %7, i64 %1651
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = getelementptr inbounds i32, ptr %6, i64 %1651
  br label %1666

1656:                                             ; preds = %1633
  %1657 = icmp eq i32 %1636, %1639
  br i1 %1657, label %1658, label %1664

1658:                                             ; preds = %1656
  store i32 0, ptr %1635, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %8, i64 %1634
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1634
  store i32 %1660, ptr %1661, align 4, !tbaa !5
  %1662 = add nuw nsw i64 %1634, 1
  %1663 = icmp eq i64 %1662, %1540
  br i1 %1663, label %1671, label %1633, !llvm.loop !257

1664:                                             ; preds = %1629, %1656
  %1665 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1666:                                             ; preds = %1642, %1648
  %1667 = phi ptr [ %1655, %1648 ], [ %1635, %1642 ]
  %1668 = phi i32 [ %1654, %1648 ], [ 1, %1642 ]
  %1669 = load i32, ptr %1667, align 4, !tbaa !5
  %1670 = add nsw i32 %1669, %1668
  store i32 %1670, ptr %1667, align 4, !tbaa !5
  br label %1671

1671:                                             ; preds = %1658, %1666, %1631, %1615
  %1672 = icmp eq i32 %1623, %5
  br i1 %1672, label %5404, label %1543, !llvm.loop !258

1673:                                             ; preds = %1526, %1808
  %1674 = phi i32 [ 0, %1526 ], [ %1757, %1808 ]
  %1675 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1527, label %1676, label %1745

1676:                                             ; preds = %1673, %1735
  %1677 = phi i32 [ %1744, %1735 ], [ 0, %1673 ]
  %1678 = phi i64 [ %1686, %1735 ], [ %1531, %1673 ]
  %1679 = phi i64 [ %1743, %1735 ], [ %1530, %1673 ]
  %1680 = phi i32 [ %1741, %1735 ], [ %1675, %1673 ]
  %1681 = sub i32 %1529, %1677
  %1682 = tail call i32 @llvm.smin.i32(i32 %1681, i32 0)
  %1683 = sub i32 %1681, %1682
  %1684 = zext i32 %1683 to i64
  %1685 = add nuw nsw i64 %1684, 1
  %1686 = add nsw i64 %1678, -1
  %1687 = icmp ult i32 %1683, 31
  br i1 %1687, label %1723, label %1688

1688:                                             ; preds = %1676
  %1689 = and i64 %1685, 8589934560
  %1690 = sub i64 %1679, %1689
  br label %1691

1691:                                             ; preds = %1691, %1688
  %1692 = phi i64 [ 0, %1688 ], [ %1715, %1691 ]
  %1693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1711, %1691 ]
  %1694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1712, %1691 ]
  %1695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1713, %1691 ]
  %1696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1714, %1691 ]
  %1697 = sub i64 %1679, %1692
  %1698 = getelementptr inbounds i32, ptr %11, i64 %1697
  %1699 = getelementptr inbounds i32, ptr %1698, i64 -7
  %1700 = load <8 x i32>, ptr %1699, align 4, !tbaa !5
  %1701 = shufflevector <8 x i32> %1700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1702 = getelementptr inbounds i32, ptr %1698, i64 -15
  %1703 = load <8 x i32>, ptr %1702, align 4, !tbaa !5
  %1704 = shufflevector <8 x i32> %1703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1705 = getelementptr inbounds i32, ptr %1698, i64 -23
  %1706 = load <8 x i32>, ptr %1705, align 4, !tbaa !5
  %1707 = shufflevector <8 x i32> %1706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1708 = getelementptr inbounds i32, ptr %1698, i64 -31
  %1709 = load <8 x i32>, ptr %1708, align 4, !tbaa !5
  %1710 = shufflevector <8 x i32> %1709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1711 = mul <8 x i32> %1701, %1693
  %1712 = mul <8 x i32> %1704, %1694
  %1713 = mul <8 x i32> %1707, %1695
  %1714 = mul <8 x i32> %1710, %1696
  %1715 = add nuw i64 %1692, 32
  %1716 = icmp eq i64 %1715, %1689
  br i1 %1716, label %1717, label %1691, !llvm.loop !259

1717:                                             ; preds = %1691
  %1718 = mul <8 x i32> %1712, %1711
  %1719 = mul <8 x i32> %1713, %1718
  %1720 = mul <8 x i32> %1714, %1719
  %1721 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1720)
  %1722 = icmp eq i64 %1685, %1689
  br i1 %1722, label %1735, label %1723

1723:                                             ; preds = %1676, %1717
  %1724 = phi i64 [ %1679, %1676 ], [ %1690, %1717 ]
  %1725 = phi i32 [ 1, %1676 ], [ %1721, %1717 ]
  br label %1726

1726:                                             ; preds = %1723, %1726
  %1727 = phi i64 [ %1732, %1726 ], [ %1724, %1723 ]
  %1728 = phi i32 [ %1731, %1726 ], [ %1725, %1723 ]
  %1729 = getelementptr inbounds i32, ptr %11, i64 %1727
  %1730 = load i32, ptr %1729, align 4, !tbaa !5
  %1731 = mul nsw i32 %1730, %1728
  %1732 = add nsw i64 %1727, -1
  %1733 = trunc i64 %1727 to i32
  %1734 = icmp sgt i32 %1733, 0
  br i1 %1734, label %1726, label %1735, !llvm.loop !260

1735:                                             ; preds = %1726, %1717
  %1736 = phi i32 [ %1721, %1717 ], [ %1731, %1726 ]
  %1737 = and i64 %1686, 4294967295
  %1738 = getelementptr inbounds i32, ptr %6, i64 %1737
  %1739 = load i32, ptr %1738, align 4, !tbaa !5
  %1740 = mul nsw i32 %1739, %1736
  %1741 = add nsw i32 %1740, %1680
  %1742 = icmp sgt i64 %1678, 2
  %1743 = add nsw i64 %1679, -1
  %1744 = add i32 %1677, 1
  br i1 %1742, label %1676, label %1745, !llvm.loop !261

1745:                                             ; preds = %1735, %1673
  %1746 = phi i32 [ %1675, %1673 ], [ %1741, %1735 ]
  %1747 = icmp slt i32 %1746, %5
  br i1 %1747, label %1750, label %1748

1748:                                             ; preds = %1745
  %1749 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

1750:                                             ; preds = %1745
  %1751 = sext i32 %1746 to i64
  %1752 = getelementptr inbounds i32, ptr %1215, i64 %1751
  %1753 = load i32, ptr %1752, align 4, !tbaa !5
  %1754 = load i8, ptr %1217, align 1, !tbaa !11
  %1755 = trunc i32 %1753 to i8
  %1756 = add i8 %1754, %1755
  store i8 %1756, ptr %1217, align 1, !tbaa !11
  %1757 = add nuw nsw i32 %1674, 1
  br i1 %1528, label %1758, label %1808

1758:                                             ; preds = %1750
  %1759 = load i32, ptr %4, align 4, !tbaa !5
  %1760 = load i32, ptr %12, align 4, !tbaa !5
  %1761 = add nsw i32 %1760, -1
  %1762 = icmp slt i32 %1759, %1761
  br i1 %1762, label %1785, label %1763

1763:                                             ; preds = %1758
  %1764 = icmp eq i32 %1759, %1761
  br i1 %1764, label %1765, label %1801

1765:                                             ; preds = %1763
  store i32 0, ptr %4, align 4, !tbaa !5
  %1766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1766, ptr %6, align 4, !tbaa !5
  br i1 %1533, label %1808, label %1767

1767:                                             ; preds = %1765, %1795
  %1768 = phi i64 [ %1799, %1795 ], [ 1, %1765 ]
  %1769 = getelementptr inbounds i32, ptr %4, i64 %1768
  %1770 = load i32, ptr %1769, align 4, !tbaa !5
  %1771 = getelementptr inbounds i32, ptr %12, i64 %1768
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = add nsw i32 %1772, -1
  %1774 = icmp slt i32 %1770, %1773
  br i1 %1774, label %1775, label %1793

1775:                                             ; preds = %1767
  br i1 %1762, label %1785, label %1776

1776:                                             ; preds = %1775
  %1777 = shl i64 %1768, 32
  %1778 = add i64 %1777, -4294967296
  %1779 = ashr exact i64 %1778, 32
  %1780 = getelementptr inbounds i32, ptr %7, i64 %1779
  %1781 = load i32, ptr %1780, align 4, !tbaa !5
  %1782 = getelementptr inbounds i32, ptr %6, i64 %1768
  %1783 = load i32, ptr %1782, align 4, !tbaa !5
  %1784 = add nsw i32 %1783, %1781
  store i32 %1784, ptr %1782, align 4, !tbaa !5
  br label %1803

1785:                                             ; preds = %1758, %1775
  %1786 = phi i32 [ %1770, %1775 ], [ %1759, %1758 ]
  %1787 = phi ptr [ %1769, %1775 ], [ %4, %1758 ]
  %1788 = phi i64 [ %1768, %1775 ], [ 0, %1758 ]
  %1789 = add nsw i32 %1786, 1
  store i32 %1789, ptr %1787, align 4, !tbaa !5
  %1790 = getelementptr inbounds i32, ptr %7, i64 %1788
  %1791 = load i32, ptr %1790, align 4, !tbaa !5
  %1792 = getelementptr inbounds i32, ptr %6, i64 %1788
  br label %1803

1793:                                             ; preds = %1767
  %1794 = icmp eq i32 %1770, %1773
  br i1 %1794, label %1795, label %1801

1795:                                             ; preds = %1793
  store i32 0, ptr %1769, align 4, !tbaa !5
  %1796 = getelementptr inbounds i32, ptr %8, i64 %1768
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = getelementptr inbounds i32, ptr %6, i64 %1768
  store i32 %1797, ptr %1798, align 4, !tbaa !5
  %1799 = add nuw nsw i64 %1768, 1
  %1800 = icmp eq i64 %1799, %1531
  br i1 %1800, label %1808, label %1767, !llvm.loop !262

1801:                                             ; preds = %1763, %1793
  %1802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1803:                                             ; preds = %1776, %1785
  %1804 = phi ptr [ %1792, %1785 ], [ %1769, %1776 ]
  %1805 = phi i32 [ %1791, %1785 ], [ 1, %1776 ]
  %1806 = load i32, ptr %1804, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, %1805
  store i32 %1807, ptr %1804, align 4, !tbaa !5
  br label %1808

1808:                                             ; preds = %1795, %1803, %1765, %1750
  %1809 = icmp eq i32 %1757, %5
  br i1 %1809, label %5404, label %1673, !llvm.loop !263

1810:                                             ; preds = %1222
  %1811 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

1812:                                             ; preds = %18
  %1813 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1814 = load ptr, ptr %1813, align 8, !tbaa !9
  %1815 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1816 = load ptr, ptr %1815, align 8, !tbaa !9
  store i16 0, ptr %1816, align 2, !tbaa !78
  %1817 = icmp eq i32 %13, 0
  br i1 %1817, label %1818, label %1821

1818:                                             ; preds = %1812
  %1819 = load i32, ptr %1814, align 4, !tbaa !5
  %1820 = trunc i32 %1819 to i16
  store i16 %1820, ptr %1816, align 2, !tbaa !78
  br label %5404

1821:                                             ; preds = %1812
  switch i32 %1, label %2414 [
    i32 1, label %1822
    i32 0, label %2124
  ]

1822:                                             ; preds = %1821
  %1823 = getelementptr inbounds i32, ptr %3, i64 %19
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = icmp eq i32 %1824, 0
  %1826 = icmp sgt i32 %5, 0
  br i1 %1825, label %1836, label %1827

1827:                                             ; preds = %1822
  br i1 %1826, label %1828, label %5404

1828:                                             ; preds = %1827
  %1829 = icmp sgt i32 %13, 1
  %1830 = icmp sgt i32 %13, 0
  %1831 = add i32 %13, -2
  %1832 = zext i32 %1831 to i64
  %1833 = zext i32 %13 to i64
  %1834 = add nuw i32 %5, 1
  %1835 = icmp eq i32 %13, 1
  br label %1982

1836:                                             ; preds = %1822
  br i1 %1826, label %1837, label %5404

1837:                                             ; preds = %1836
  %1838 = icmp sgt i32 %13, 1
  %1839 = icmp sgt i32 %13, 0
  %1840 = add i32 %13, -2
  %1841 = zext i32 %1840 to i64
  %1842 = zext i32 %13 to i64
  %1843 = add nuw i32 %5, 1
  %1844 = icmp eq i32 %13, 1
  br label %1845

1845:                                             ; preds = %1837, %1980
  %1846 = phi i16 [ 0, %1837 ], [ %1931, %1980 ]
  %1847 = phi i32 [ 0, %1837 ], [ %1932, %1980 ]
  %1848 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1838, label %1849, label %1918

1849:                                             ; preds = %1845, %1908
  %1850 = phi i32 [ %1917, %1908 ], [ 0, %1845 ]
  %1851 = phi i64 [ %1859, %1908 ], [ %1842, %1845 ]
  %1852 = phi i64 [ %1916, %1908 ], [ %1841, %1845 ]
  %1853 = phi i32 [ %1914, %1908 ], [ %1848, %1845 ]
  %1854 = sub i32 %1840, %1850
  %1855 = tail call i32 @llvm.smin.i32(i32 %1854, i32 0)
  %1856 = sub i32 %1854, %1855
  %1857 = zext i32 %1856 to i64
  %1858 = add nuw nsw i64 %1857, 1
  %1859 = add nsw i64 %1851, -1
  %1860 = icmp ult i32 %1856, 31
  br i1 %1860, label %1896, label %1861

1861:                                             ; preds = %1849
  %1862 = and i64 %1858, 8589934560
  %1863 = sub i64 %1852, %1862
  br label %1864

1864:                                             ; preds = %1864, %1861
  %1865 = phi i64 [ 0, %1861 ], [ %1888, %1864 ]
  %1866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1884, %1864 ]
  %1867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1885, %1864 ]
  %1868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1886, %1864 ]
  %1869 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1887, %1864 ]
  %1870 = sub i64 %1852, %1865
  %1871 = getelementptr inbounds i32, ptr %9, i64 %1870
  %1872 = getelementptr inbounds i32, ptr %1871, i64 -7
  %1873 = load <8 x i32>, ptr %1872, align 4, !tbaa !5
  %1874 = shufflevector <8 x i32> %1873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1875 = getelementptr inbounds i32, ptr %1871, i64 -15
  %1876 = load <8 x i32>, ptr %1875, align 4, !tbaa !5
  %1877 = shufflevector <8 x i32> %1876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1878 = getelementptr inbounds i32, ptr %1871, i64 -23
  %1879 = load <8 x i32>, ptr %1878, align 4, !tbaa !5
  %1880 = shufflevector <8 x i32> %1879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1881 = getelementptr inbounds i32, ptr %1871, i64 -31
  %1882 = load <8 x i32>, ptr %1881, align 4, !tbaa !5
  %1883 = shufflevector <8 x i32> %1882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1884 = mul <8 x i32> %1874, %1866
  %1885 = mul <8 x i32> %1877, %1867
  %1886 = mul <8 x i32> %1880, %1868
  %1887 = mul <8 x i32> %1883, %1869
  %1888 = add nuw i64 %1865, 32
  %1889 = icmp eq i64 %1888, %1862
  br i1 %1889, label %1890, label %1864, !llvm.loop !264

1890:                                             ; preds = %1864
  %1891 = mul <8 x i32> %1885, %1884
  %1892 = mul <8 x i32> %1886, %1891
  %1893 = mul <8 x i32> %1887, %1892
  %1894 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1893)
  %1895 = icmp eq i64 %1858, %1862
  br i1 %1895, label %1908, label %1896

1896:                                             ; preds = %1849, %1890
  %1897 = phi i64 [ %1852, %1849 ], [ %1863, %1890 ]
  %1898 = phi i32 [ 1, %1849 ], [ %1894, %1890 ]
  br label %1899

1899:                                             ; preds = %1896, %1899
  %1900 = phi i64 [ %1905, %1899 ], [ %1897, %1896 ]
  %1901 = phi i32 [ %1904, %1899 ], [ %1898, %1896 ]
  %1902 = getelementptr inbounds i32, ptr %9, i64 %1900
  %1903 = load i32, ptr %1902, align 4, !tbaa !5
  %1904 = mul nsw i32 %1903, %1901
  %1905 = add nsw i64 %1900, -1
  %1906 = trunc i64 %1900 to i32
  %1907 = icmp sgt i32 %1906, 0
  br i1 %1907, label %1899, label %1908, !llvm.loop !265

1908:                                             ; preds = %1899, %1890
  %1909 = phi i32 [ %1894, %1890 ], [ %1904, %1899 ]
  %1910 = and i64 %1859, 4294967295
  %1911 = getelementptr inbounds i32, ptr %6, i64 %1910
  %1912 = load i32, ptr %1911, align 4, !tbaa !5
  %1913 = mul nsw i32 %1912, %1909
  %1914 = add nsw i32 %1913, %1853
  %1915 = icmp sgt i64 %1851, 2
  %1916 = add nsw i64 %1852, -1
  %1917 = add i32 %1850, 1
  br i1 %1915, label %1849, label %1918, !llvm.loop !266

1918:                                             ; preds = %1908, %1845
  %1919 = phi i32 [ %1848, %1845 ], [ %1914, %1908 ]
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds double, ptr %2, i64 %1920
  %1922 = load double, ptr %1921, align 8, !tbaa !18
  %1923 = getelementptr inbounds i32, ptr %1814, i64 %1920
  %1924 = load i32, ptr %1923, align 4, !tbaa !5
  %1925 = sitofp i16 %1846 to double
  %1926 = shl i32 %1924, 16
  %1927 = ashr exact i32 %1926, 16
  %1928 = sitofp i32 %1927 to double
  %1929 = fmul fast double %1922, %1928
  %1930 = fadd fast double %1929, %1925
  %1931 = fptosi double %1930 to i16
  %1932 = add nuw nsw i32 %1847, 1
  br i1 %1839, label %1933, label %1980

1933:                                             ; preds = %1918
  %1934 = load i32, ptr %4, align 4, !tbaa !5
  %1935 = load i32, ptr %12, align 4, !tbaa !5
  %1936 = add nsw i32 %1935, -1
  %1937 = icmp slt i32 %1934, %1936
  br i1 %1937, label %1957, label %1938

1938:                                             ; preds = %1933
  %1939 = icmp eq i32 %1934, %1936
  br i1 %1939, label %1940, label %1973

1940:                                             ; preds = %1938
  store i32 0, ptr %4, align 4, !tbaa !5
  %1941 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1941, ptr %6, align 4, !tbaa !5
  br i1 %1844, label %1980, label %1942

1942:                                             ; preds = %1940, %1967
  %1943 = phi i64 [ %1971, %1967 ], [ 1, %1940 ]
  %1944 = getelementptr inbounds i32, ptr %4, i64 %1943
  %1945 = load i32, ptr %1944, align 4, !tbaa !5
  %1946 = getelementptr inbounds i32, ptr %12, i64 %1943
  %1947 = load i32, ptr %1946, align 4, !tbaa !5
  %1948 = add nsw i32 %1947, -1
  %1949 = icmp slt i32 %1945, %1948
  br i1 %1949, label %1950, label %1965

1950:                                             ; preds = %1942
  br i1 %1937, label %1957, label %1951

1951:                                             ; preds = %1950
  %1952 = getelementptr inbounds i32, ptr %7, i64 %1943
  %1953 = load i32, ptr %1952, align 4, !tbaa !5
  %1954 = getelementptr inbounds i32, ptr %6, i64 %1943
  %1955 = load i32, ptr %1954, align 4, !tbaa !5
  %1956 = add nsw i32 %1955, %1953
  store i32 %1956, ptr %1954, align 4, !tbaa !5
  br label %1975

1957:                                             ; preds = %1933, %1950
  %1958 = phi i32 [ %1945, %1950 ], [ %1934, %1933 ]
  %1959 = phi ptr [ %1944, %1950 ], [ %4, %1933 ]
  %1960 = phi i64 [ %1943, %1950 ], [ 0, %1933 ]
  %1961 = add nsw i32 %1958, 1
  store i32 %1961, ptr %1959, align 4, !tbaa !5
  %1962 = getelementptr inbounds i32, ptr %7, i64 %1960
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = getelementptr inbounds i32, ptr %6, i64 %1960
  br label %1975

1965:                                             ; preds = %1942
  %1966 = icmp eq i32 %1945, %1948
  br i1 %1966, label %1967, label %1973

1967:                                             ; preds = %1965
  store i32 0, ptr %1944, align 4, !tbaa !5
  %1968 = getelementptr inbounds i32, ptr %8, i64 %1943
  %1969 = load i32, ptr %1968, align 4, !tbaa !5
  %1970 = getelementptr inbounds i32, ptr %6, i64 %1943
  store i32 %1969, ptr %1970, align 4, !tbaa !5
  %1971 = add nuw nsw i64 %1943, 1
  %1972 = icmp eq i64 %1971, %1842
  br i1 %1972, label %1980, label %1942, !llvm.loop !267

1973:                                             ; preds = %1938, %1965
  store i16 %1931, ptr %1816, align 2, !tbaa !78
  %1974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1975:                                             ; preds = %1951, %1957
  %1976 = phi ptr [ %1964, %1957 ], [ %1944, %1951 ]
  %1977 = phi i32 [ %1963, %1957 ], [ 1, %1951 ]
  %1978 = load i32, ptr %1976, align 4, !tbaa !5
  %1979 = add nsw i32 %1978, %1977
  store i32 %1979, ptr %1976, align 4, !tbaa !5
  br label %1980

1980:                                             ; preds = %1967, %1975, %1940, %1918
  %1981 = icmp eq i32 %1932, %5
  br i1 %1981, label %5396, label %1845, !llvm.loop !268

1982:                                             ; preds = %1828, %2122
  %1983 = phi i64 [ 0, %1828 ], [ %2069, %2122 ]
  %1984 = phi i32 [ 0, %1828 ], [ %2071, %2122 ]
  %1985 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1829, label %1986, label %2055

1986:                                             ; preds = %1982, %2045
  %1987 = phi i32 [ %2054, %2045 ], [ 0, %1982 ]
  %1988 = phi i64 [ %1996, %2045 ], [ %1833, %1982 ]
  %1989 = phi i64 [ %2053, %2045 ], [ %1832, %1982 ]
  %1990 = phi i32 [ %2051, %2045 ], [ %1985, %1982 ]
  %1991 = sub i32 %1831, %1987
  %1992 = tail call i32 @llvm.smin.i32(i32 %1991, i32 0)
  %1993 = sub i32 %1991, %1992
  %1994 = zext i32 %1993 to i64
  %1995 = add nuw nsw i64 %1994, 1
  %1996 = add nsw i64 %1988, -1
  %1997 = icmp ult i32 %1993, 31
  br i1 %1997, label %2033, label %1998

1998:                                             ; preds = %1986
  %1999 = and i64 %1995, 8589934560
  %2000 = sub i64 %1989, %1999
  br label %2001

2001:                                             ; preds = %2001, %1998
  %2002 = phi i64 [ 0, %1998 ], [ %2025, %2001 ]
  %2003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2021, %2001 ]
  %2004 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2022, %2001 ]
  %2005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2023, %2001 ]
  %2006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2024, %2001 ]
  %2007 = sub i64 %1989, %2002
  %2008 = getelementptr inbounds i32, ptr %11, i64 %2007
  %2009 = getelementptr inbounds i32, ptr %2008, i64 -7
  %2010 = load <8 x i32>, ptr %2009, align 4, !tbaa !5
  %2011 = shufflevector <8 x i32> %2010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2012 = getelementptr inbounds i32, ptr %2008, i64 -15
  %2013 = load <8 x i32>, ptr %2012, align 4, !tbaa !5
  %2014 = shufflevector <8 x i32> %2013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2015 = getelementptr inbounds i32, ptr %2008, i64 -23
  %2016 = load <8 x i32>, ptr %2015, align 4, !tbaa !5
  %2017 = shufflevector <8 x i32> %2016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2018 = getelementptr inbounds i32, ptr %2008, i64 -31
  %2019 = load <8 x i32>, ptr %2018, align 4, !tbaa !5
  %2020 = shufflevector <8 x i32> %2019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2021 = mul <8 x i32> %2011, %2003
  %2022 = mul <8 x i32> %2014, %2004
  %2023 = mul <8 x i32> %2017, %2005
  %2024 = mul <8 x i32> %2020, %2006
  %2025 = add nuw i64 %2002, 32
  %2026 = icmp eq i64 %2025, %1999
  br i1 %2026, label %2027, label %2001, !llvm.loop !269

2027:                                             ; preds = %2001
  %2028 = mul <8 x i32> %2022, %2021
  %2029 = mul <8 x i32> %2023, %2028
  %2030 = mul <8 x i32> %2024, %2029
  %2031 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2030)
  %2032 = icmp eq i64 %1995, %1999
  br i1 %2032, label %2045, label %2033

2033:                                             ; preds = %1986, %2027
  %2034 = phi i64 [ %1989, %1986 ], [ %2000, %2027 ]
  %2035 = phi i32 [ 1, %1986 ], [ %2031, %2027 ]
  br label %2036

2036:                                             ; preds = %2033, %2036
  %2037 = phi i64 [ %2042, %2036 ], [ %2034, %2033 ]
  %2038 = phi i32 [ %2041, %2036 ], [ %2035, %2033 ]
  %2039 = getelementptr inbounds i32, ptr %11, i64 %2037
  %2040 = load i32, ptr %2039, align 4, !tbaa !5
  %2041 = mul nsw i32 %2040, %2038
  %2042 = add nsw i64 %2037, -1
  %2043 = trunc i64 %2037 to i32
  %2044 = icmp sgt i32 %2043, 0
  br i1 %2044, label %2036, label %2045, !llvm.loop !270

2045:                                             ; preds = %2036, %2027
  %2046 = phi i32 [ %2031, %2027 ], [ %2041, %2036 ]
  %2047 = and i64 %1996, 4294967295
  %2048 = getelementptr inbounds i32, ptr %6, i64 %2047
  %2049 = load i32, ptr %2048, align 4, !tbaa !5
  %2050 = mul nsw i32 %2049, %2046
  %2051 = add nsw i32 %2050, %1990
  %2052 = icmp sgt i64 %1988, 2
  %2053 = add nsw i64 %1989, -1
  %2054 = add i32 %1987, 1
  br i1 %2052, label %1986, label %2055, !llvm.loop !271

2055:                                             ; preds = %2045, %1982
  %2056 = phi i32 [ %1985, %1982 ], [ %2051, %2045 ]
  %2057 = icmp slt i32 %2056, %5
  br i1 %2057, label %2060, label %2058

2058:                                             ; preds = %2055
  %2059 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2060:                                             ; preds = %2055
  %2061 = sext i32 %2056 to i64
  %2062 = getelementptr inbounds i32, ptr %1814, i64 %2061
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = shl i64 %1983, 48
  %2065 = ashr exact i64 %2064, 48
  %2066 = shl i32 %2063, 16
  %2067 = ashr exact i32 %2066, 16
  %2068 = sext i32 %2067 to i64
  %2069 = add nsw i64 %2065, %2068
  %2070 = trunc i64 %2069 to i16
  store i16 %2070, ptr %1816, align 2, !tbaa !78
  %2071 = add nuw nsw i32 %1984, 1
  br i1 %1830, label %2072, label %2122

2072:                                             ; preds = %2060
  %2073 = load i32, ptr %4, align 4, !tbaa !5
  %2074 = load i32, ptr %12, align 4, !tbaa !5
  %2075 = add nsw i32 %2074, -1
  %2076 = icmp slt i32 %2073, %2075
  br i1 %2076, label %2099, label %2077

2077:                                             ; preds = %2072
  %2078 = icmp eq i32 %2073, %2075
  br i1 %2078, label %2079, label %2115

2079:                                             ; preds = %2077
  store i32 0, ptr %4, align 4, !tbaa !5
  %2080 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2080, ptr %6, align 4, !tbaa !5
  br i1 %1835, label %2122, label %2081

2081:                                             ; preds = %2079, %2109
  %2082 = phi i64 [ %2113, %2109 ], [ 1, %2079 ]
  %2083 = getelementptr inbounds i32, ptr %4, i64 %2082
  %2084 = load i32, ptr %2083, align 4, !tbaa !5
  %2085 = getelementptr inbounds i32, ptr %12, i64 %2082
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = add nsw i32 %2086, -1
  %2088 = icmp slt i32 %2084, %2087
  br i1 %2088, label %2089, label %2107

2089:                                             ; preds = %2081
  br i1 %2076, label %2099, label %2090

2090:                                             ; preds = %2089
  %2091 = shl i64 %2082, 32
  %2092 = add i64 %2091, -4294967296
  %2093 = ashr exact i64 %2092, 32
  %2094 = getelementptr inbounds i32, ptr %7, i64 %2093
  %2095 = load i32, ptr %2094, align 4, !tbaa !5
  %2096 = getelementptr inbounds i32, ptr %6, i64 %2082
  %2097 = load i32, ptr %2096, align 4, !tbaa !5
  %2098 = add nsw i32 %2097, %2095
  store i32 %2098, ptr %2096, align 4, !tbaa !5
  br label %2117

2099:                                             ; preds = %2072, %2089
  %2100 = phi i32 [ %2084, %2089 ], [ %2073, %2072 ]
  %2101 = phi ptr [ %2083, %2089 ], [ %4, %2072 ]
  %2102 = phi i64 [ %2082, %2089 ], [ 0, %2072 ]
  %2103 = add nsw i32 %2100, 1
  store i32 %2103, ptr %2101, align 4, !tbaa !5
  %2104 = getelementptr inbounds i32, ptr %7, i64 %2102
  %2105 = load i32, ptr %2104, align 4, !tbaa !5
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2102
  br label %2117

2107:                                             ; preds = %2081
  %2108 = icmp eq i32 %2084, %2087
  br i1 %2108, label %2109, label %2115

2109:                                             ; preds = %2107
  store i32 0, ptr %2083, align 4, !tbaa !5
  %2110 = getelementptr inbounds i32, ptr %8, i64 %2082
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %6, i64 %2082
  store i32 %2111, ptr %2112, align 4, !tbaa !5
  %2113 = add nuw nsw i64 %2082, 1
  %2114 = icmp eq i64 %2113, %1833
  br i1 %2114, label %2122, label %2081, !llvm.loop !272

2115:                                             ; preds = %2077, %2107
  %2116 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2117:                                             ; preds = %2090, %2099
  %2118 = phi ptr [ %2106, %2099 ], [ %2083, %2090 ]
  %2119 = phi i32 [ %2105, %2099 ], [ 1, %2090 ]
  %2120 = load i32, ptr %2118, align 4, !tbaa !5
  %2121 = add nsw i32 %2120, %2119
  store i32 %2121, ptr %2118, align 4, !tbaa !5
  br label %2122

2122:                                             ; preds = %2109, %2117, %2079, %2060
  %2123 = icmp eq i32 %2071, %5
  br i1 %2123, label %5404, label %1982, !llvm.loop !273

2124:                                             ; preds = %1821
  %2125 = getelementptr inbounds i32, ptr %3, i64 %19
  %2126 = load i32, ptr %2125, align 4, !tbaa !5
  %2127 = icmp eq i32 %2126, 0
  %2128 = icmp sgt i32 %5, 0
  br i1 %2127, label %2138, label %2129

2129:                                             ; preds = %2124
  br i1 %2128, label %2130, label %5404

2130:                                             ; preds = %2129
  %2131 = icmp sgt i32 %13, 1
  %2132 = icmp sgt i32 %13, 0
  %2133 = add i32 %13, -2
  %2134 = zext i32 %2133 to i64
  %2135 = zext i32 %13 to i64
  %2136 = add nuw i32 %5, 1
  %2137 = icmp eq i32 %13, 1
  br label %2277

2138:                                             ; preds = %2124
  br i1 %2128, label %2139, label %5404

2139:                                             ; preds = %2138
  %2140 = icmp sgt i32 %13, 1
  %2141 = icmp sgt i32 %13, 0
  %2142 = add i32 %13, -2
  %2143 = zext i32 %2142 to i64
  %2144 = zext i32 %13 to i64
  %2145 = add nuw i32 %5, 1
  %2146 = icmp eq i32 %13, 1
  br label %2147

2147:                                             ; preds = %2139, %2275
  %2148 = phi i16 [ 0, %2139 ], [ %2226, %2275 ]
  %2149 = phi i32 [ 0, %2139 ], [ %2227, %2275 ]
  %2150 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2140, label %2151, label %2220

2151:                                             ; preds = %2147, %2210
  %2152 = phi i32 [ %2219, %2210 ], [ 0, %2147 ]
  %2153 = phi i64 [ %2161, %2210 ], [ %2144, %2147 ]
  %2154 = phi i64 [ %2218, %2210 ], [ %2143, %2147 ]
  %2155 = phi i32 [ %2216, %2210 ], [ %2150, %2147 ]
  %2156 = sub i32 %2142, %2152
  %2157 = tail call i32 @llvm.smin.i32(i32 %2156, i32 0)
  %2158 = sub i32 %2156, %2157
  %2159 = zext i32 %2158 to i64
  %2160 = add nuw nsw i64 %2159, 1
  %2161 = add nsw i64 %2153, -1
  %2162 = icmp ult i32 %2158, 31
  br i1 %2162, label %2198, label %2163

2163:                                             ; preds = %2151
  %2164 = and i64 %2160, 8589934560
  %2165 = sub i64 %2154, %2164
  br label %2166

2166:                                             ; preds = %2166, %2163
  %2167 = phi i64 [ 0, %2163 ], [ %2190, %2166 ]
  %2168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2186, %2166 ]
  %2169 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2187, %2166 ]
  %2170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2188, %2166 ]
  %2171 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2189, %2166 ]
  %2172 = sub i64 %2154, %2167
  %2173 = getelementptr inbounds i32, ptr %9, i64 %2172
  %2174 = getelementptr inbounds i32, ptr %2173, i64 -7
  %2175 = load <8 x i32>, ptr %2174, align 4, !tbaa !5
  %2176 = shufflevector <8 x i32> %2175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2177 = getelementptr inbounds i32, ptr %2173, i64 -15
  %2178 = load <8 x i32>, ptr %2177, align 4, !tbaa !5
  %2179 = shufflevector <8 x i32> %2178, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2180 = getelementptr inbounds i32, ptr %2173, i64 -23
  %2181 = load <8 x i32>, ptr %2180, align 4, !tbaa !5
  %2182 = shufflevector <8 x i32> %2181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2183 = getelementptr inbounds i32, ptr %2173, i64 -31
  %2184 = load <8 x i32>, ptr %2183, align 4, !tbaa !5
  %2185 = shufflevector <8 x i32> %2184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2186 = mul <8 x i32> %2176, %2168
  %2187 = mul <8 x i32> %2179, %2169
  %2188 = mul <8 x i32> %2182, %2170
  %2189 = mul <8 x i32> %2185, %2171
  %2190 = add nuw i64 %2167, 32
  %2191 = icmp eq i64 %2190, %2164
  br i1 %2191, label %2192, label %2166, !llvm.loop !274

2192:                                             ; preds = %2166
  %2193 = mul <8 x i32> %2187, %2186
  %2194 = mul <8 x i32> %2188, %2193
  %2195 = mul <8 x i32> %2189, %2194
  %2196 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2195)
  %2197 = icmp eq i64 %2160, %2164
  br i1 %2197, label %2210, label %2198

2198:                                             ; preds = %2151, %2192
  %2199 = phi i64 [ %2154, %2151 ], [ %2165, %2192 ]
  %2200 = phi i32 [ 1, %2151 ], [ %2196, %2192 ]
  br label %2201

2201:                                             ; preds = %2198, %2201
  %2202 = phi i64 [ %2207, %2201 ], [ %2199, %2198 ]
  %2203 = phi i32 [ %2206, %2201 ], [ %2200, %2198 ]
  %2204 = getelementptr inbounds i32, ptr %9, i64 %2202
  %2205 = load i32, ptr %2204, align 4, !tbaa !5
  %2206 = mul nsw i32 %2205, %2203
  %2207 = add nsw i64 %2202, -1
  %2208 = trunc i64 %2202 to i32
  %2209 = icmp sgt i32 %2208, 0
  br i1 %2209, label %2201, label %2210, !llvm.loop !275

2210:                                             ; preds = %2201, %2192
  %2211 = phi i32 [ %2196, %2192 ], [ %2206, %2201 ]
  %2212 = and i64 %2161, 4294967295
  %2213 = getelementptr inbounds i32, ptr %6, i64 %2212
  %2214 = load i32, ptr %2213, align 4, !tbaa !5
  %2215 = mul nsw i32 %2214, %2211
  %2216 = add nsw i32 %2215, %2155
  %2217 = icmp sgt i64 %2153, 2
  %2218 = add nsw i64 %2154, -1
  %2219 = add i32 %2152, 1
  br i1 %2217, label %2151, label %2220, !llvm.loop !276

2220:                                             ; preds = %2210, %2147
  %2221 = phi i32 [ %2150, %2147 ], [ %2216, %2210 ]
  %2222 = sext i32 %2221 to i64
  %2223 = getelementptr inbounds i32, ptr %1814, i64 %2222
  %2224 = load i32, ptr %2223, align 4, !tbaa !5
  %2225 = trunc i32 %2224 to i16
  %2226 = add i16 %2148, %2225
  %2227 = add nuw nsw i32 %2149, 1
  br i1 %2141, label %2228, label %2275

2228:                                             ; preds = %2220
  %2229 = load i32, ptr %4, align 4, !tbaa !5
  %2230 = load i32, ptr %12, align 4, !tbaa !5
  %2231 = add nsw i32 %2230, -1
  %2232 = icmp slt i32 %2229, %2231
  br i1 %2232, label %2252, label %2233

2233:                                             ; preds = %2228
  %2234 = icmp eq i32 %2229, %2231
  br i1 %2234, label %2235, label %2268

2235:                                             ; preds = %2233
  store i32 0, ptr %4, align 4, !tbaa !5
  %2236 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2236, ptr %6, align 4, !tbaa !5
  br i1 %2146, label %2275, label %2237

2237:                                             ; preds = %2235, %2262
  %2238 = phi i64 [ %2266, %2262 ], [ 1, %2235 ]
  %2239 = getelementptr inbounds i32, ptr %4, i64 %2238
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = getelementptr inbounds i32, ptr %12, i64 %2238
  %2242 = load i32, ptr %2241, align 4, !tbaa !5
  %2243 = add nsw i32 %2242, -1
  %2244 = icmp slt i32 %2240, %2243
  br i1 %2244, label %2245, label %2260

2245:                                             ; preds = %2237
  br i1 %2232, label %2252, label %2246

2246:                                             ; preds = %2245
  %2247 = getelementptr inbounds i32, ptr %7, i64 %2238
  %2248 = load i32, ptr %2247, align 4, !tbaa !5
  %2249 = getelementptr inbounds i32, ptr %6, i64 %2238
  %2250 = load i32, ptr %2249, align 4, !tbaa !5
  %2251 = add nsw i32 %2250, %2248
  store i32 %2251, ptr %2249, align 4, !tbaa !5
  br label %2270

2252:                                             ; preds = %2228, %2245
  %2253 = phi i32 [ %2240, %2245 ], [ %2229, %2228 ]
  %2254 = phi ptr [ %2239, %2245 ], [ %4, %2228 ]
  %2255 = phi i64 [ %2238, %2245 ], [ 0, %2228 ]
  %2256 = add nsw i32 %2253, 1
  store i32 %2256, ptr %2254, align 4, !tbaa !5
  %2257 = getelementptr inbounds i32, ptr %7, i64 %2255
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %6, i64 %2255
  br label %2270

2260:                                             ; preds = %2237
  %2261 = icmp eq i32 %2240, %2243
  br i1 %2261, label %2262, label %2268

2262:                                             ; preds = %2260
  store i32 0, ptr %2239, align 4, !tbaa !5
  %2263 = getelementptr inbounds i32, ptr %8, i64 %2238
  %2264 = load i32, ptr %2263, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %6, i64 %2238
  store i32 %2264, ptr %2265, align 4, !tbaa !5
  %2266 = add nuw nsw i64 %2238, 1
  %2267 = icmp eq i64 %2266, %2144
  br i1 %2267, label %2275, label %2237, !llvm.loop !277

2268:                                             ; preds = %2233, %2260
  store i16 %2226, ptr %1816, align 2, !tbaa !78
  %2269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2270:                                             ; preds = %2246, %2252
  %2271 = phi ptr [ %2259, %2252 ], [ %2239, %2246 ]
  %2272 = phi i32 [ %2258, %2252 ], [ 1, %2246 ]
  %2273 = load i32, ptr %2271, align 4, !tbaa !5
  %2274 = add nsw i32 %2273, %2272
  store i32 %2274, ptr %2271, align 4, !tbaa !5
  br label %2275

2275:                                             ; preds = %2262, %2270, %2235, %2220
  %2276 = icmp eq i32 %2227, %5
  br i1 %2276, label %5397, label %2147, !llvm.loop !278

2277:                                             ; preds = %2130, %2412
  %2278 = phi i16 [ 0, %2130 ], [ %2360, %2412 ]
  %2279 = phi i32 [ 0, %2130 ], [ %2361, %2412 ]
  %2280 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2131, label %2281, label %2350

2281:                                             ; preds = %2277, %2340
  %2282 = phi i32 [ %2349, %2340 ], [ 0, %2277 ]
  %2283 = phi i64 [ %2291, %2340 ], [ %2135, %2277 ]
  %2284 = phi i64 [ %2348, %2340 ], [ %2134, %2277 ]
  %2285 = phi i32 [ %2346, %2340 ], [ %2280, %2277 ]
  %2286 = sub i32 %2133, %2282
  %2287 = tail call i32 @llvm.smin.i32(i32 %2286, i32 0)
  %2288 = sub i32 %2286, %2287
  %2289 = zext i32 %2288 to i64
  %2290 = add nuw nsw i64 %2289, 1
  %2291 = add nsw i64 %2283, -1
  %2292 = icmp ult i32 %2288, 31
  br i1 %2292, label %2328, label %2293

2293:                                             ; preds = %2281
  %2294 = and i64 %2290, 8589934560
  %2295 = sub i64 %2284, %2294
  br label %2296

2296:                                             ; preds = %2296, %2293
  %2297 = phi i64 [ 0, %2293 ], [ %2320, %2296 ]
  %2298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2316, %2296 ]
  %2299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2317, %2296 ]
  %2300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2318, %2296 ]
  %2301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2319, %2296 ]
  %2302 = sub i64 %2284, %2297
  %2303 = getelementptr inbounds i32, ptr %11, i64 %2302
  %2304 = getelementptr inbounds i32, ptr %2303, i64 -7
  %2305 = load <8 x i32>, ptr %2304, align 4, !tbaa !5
  %2306 = shufflevector <8 x i32> %2305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2307 = getelementptr inbounds i32, ptr %2303, i64 -15
  %2308 = load <8 x i32>, ptr %2307, align 4, !tbaa !5
  %2309 = shufflevector <8 x i32> %2308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2310 = getelementptr inbounds i32, ptr %2303, i64 -23
  %2311 = load <8 x i32>, ptr %2310, align 4, !tbaa !5
  %2312 = shufflevector <8 x i32> %2311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2313 = getelementptr inbounds i32, ptr %2303, i64 -31
  %2314 = load <8 x i32>, ptr %2313, align 4, !tbaa !5
  %2315 = shufflevector <8 x i32> %2314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2316 = mul <8 x i32> %2306, %2298
  %2317 = mul <8 x i32> %2309, %2299
  %2318 = mul <8 x i32> %2312, %2300
  %2319 = mul <8 x i32> %2315, %2301
  %2320 = add nuw i64 %2297, 32
  %2321 = icmp eq i64 %2320, %2294
  br i1 %2321, label %2322, label %2296, !llvm.loop !279

2322:                                             ; preds = %2296
  %2323 = mul <8 x i32> %2317, %2316
  %2324 = mul <8 x i32> %2318, %2323
  %2325 = mul <8 x i32> %2319, %2324
  %2326 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2325)
  %2327 = icmp eq i64 %2290, %2294
  br i1 %2327, label %2340, label %2328

2328:                                             ; preds = %2281, %2322
  %2329 = phi i64 [ %2284, %2281 ], [ %2295, %2322 ]
  %2330 = phi i32 [ 1, %2281 ], [ %2326, %2322 ]
  br label %2331

2331:                                             ; preds = %2328, %2331
  %2332 = phi i64 [ %2337, %2331 ], [ %2329, %2328 ]
  %2333 = phi i32 [ %2336, %2331 ], [ %2330, %2328 ]
  %2334 = getelementptr inbounds i32, ptr %11, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !5
  %2336 = mul nsw i32 %2335, %2333
  %2337 = add nsw i64 %2332, -1
  %2338 = trunc i64 %2332 to i32
  %2339 = icmp sgt i32 %2338, 0
  br i1 %2339, label %2331, label %2340, !llvm.loop !280

2340:                                             ; preds = %2331, %2322
  %2341 = phi i32 [ %2326, %2322 ], [ %2336, %2331 ]
  %2342 = and i64 %2291, 4294967295
  %2343 = getelementptr inbounds i32, ptr %6, i64 %2342
  %2344 = load i32, ptr %2343, align 4, !tbaa !5
  %2345 = mul nsw i32 %2344, %2341
  %2346 = add nsw i32 %2345, %2285
  %2347 = icmp sgt i64 %2283, 2
  %2348 = add nsw i64 %2284, -1
  %2349 = add i32 %2282, 1
  br i1 %2347, label %2281, label %2350, !llvm.loop !281

2350:                                             ; preds = %2340, %2277
  %2351 = phi i32 [ %2280, %2277 ], [ %2346, %2340 ]
  %2352 = icmp slt i32 %2351, %5
  br i1 %2352, label %2355, label %2353

2353:                                             ; preds = %2350
  %2354 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2355:                                             ; preds = %2350
  %2356 = sext i32 %2351 to i64
  %2357 = getelementptr inbounds i32, ptr %1814, i64 %2356
  %2358 = load i32, ptr %2357, align 4, !tbaa !5
  %2359 = trunc i32 %2358 to i16
  %2360 = add i16 %2278, %2359
  store i16 %2360, ptr %1816, align 2, !tbaa !78
  %2361 = add nuw nsw i32 %2279, 1
  br i1 %2132, label %2362, label %2412

2362:                                             ; preds = %2355
  %2363 = load i32, ptr %4, align 4, !tbaa !5
  %2364 = load i32, ptr %12, align 4, !tbaa !5
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2363, %2365
  br i1 %2366, label %2389, label %2367

2367:                                             ; preds = %2362
  %2368 = icmp eq i32 %2363, %2365
  br i1 %2368, label %2369, label %2405

2369:                                             ; preds = %2367
  store i32 0, ptr %4, align 4, !tbaa !5
  %2370 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2370, ptr %6, align 4, !tbaa !5
  br i1 %2137, label %2412, label %2371

2371:                                             ; preds = %2369, %2399
  %2372 = phi i64 [ %2403, %2399 ], [ 1, %2369 ]
  %2373 = getelementptr inbounds i32, ptr %4, i64 %2372
  %2374 = load i32, ptr %2373, align 4, !tbaa !5
  %2375 = getelementptr inbounds i32, ptr %12, i64 %2372
  %2376 = load i32, ptr %2375, align 4, !tbaa !5
  %2377 = add nsw i32 %2376, -1
  %2378 = icmp slt i32 %2374, %2377
  br i1 %2378, label %2379, label %2397

2379:                                             ; preds = %2371
  br i1 %2366, label %2389, label %2380

2380:                                             ; preds = %2379
  %2381 = shl i64 %2372, 32
  %2382 = add i64 %2381, -4294967296
  %2383 = ashr exact i64 %2382, 32
  %2384 = getelementptr inbounds i32, ptr %7, i64 %2383
  %2385 = load i32, ptr %2384, align 4, !tbaa !5
  %2386 = getelementptr inbounds i32, ptr %6, i64 %2372
  %2387 = load i32, ptr %2386, align 4, !tbaa !5
  %2388 = add nsw i32 %2387, %2385
  store i32 %2388, ptr %2386, align 4, !tbaa !5
  br label %2407

2389:                                             ; preds = %2362, %2379
  %2390 = phi i32 [ %2374, %2379 ], [ %2363, %2362 ]
  %2391 = phi ptr [ %2373, %2379 ], [ %4, %2362 ]
  %2392 = phi i64 [ %2372, %2379 ], [ 0, %2362 ]
  %2393 = add nsw i32 %2390, 1
  store i32 %2393, ptr %2391, align 4, !tbaa !5
  %2394 = getelementptr inbounds i32, ptr %7, i64 %2392
  %2395 = load i32, ptr %2394, align 4, !tbaa !5
  %2396 = getelementptr inbounds i32, ptr %6, i64 %2392
  br label %2407

2397:                                             ; preds = %2371
  %2398 = icmp eq i32 %2374, %2377
  br i1 %2398, label %2399, label %2405

2399:                                             ; preds = %2397
  store i32 0, ptr %2373, align 4, !tbaa !5
  %2400 = getelementptr inbounds i32, ptr %8, i64 %2372
  %2401 = load i32, ptr %2400, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %6, i64 %2372
  store i32 %2401, ptr %2402, align 4, !tbaa !5
  %2403 = add nuw nsw i64 %2372, 1
  %2404 = icmp eq i64 %2403, %2135
  br i1 %2404, label %2412, label %2371, !llvm.loop !282

2405:                                             ; preds = %2367, %2397
  %2406 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2407:                                             ; preds = %2380, %2389
  %2408 = phi ptr [ %2396, %2389 ], [ %2373, %2380 ]
  %2409 = phi i32 [ %2395, %2389 ], [ 1, %2380 ]
  %2410 = load i32, ptr %2408, align 4, !tbaa !5
  %2411 = add nsw i32 %2410, %2409
  store i32 %2411, ptr %2408, align 4, !tbaa !5
  br label %2412

2412:                                             ; preds = %2399, %2407, %2369, %2355
  %2413 = icmp eq i32 %2361, %5
  br i1 %2413, label %5404, label %2277, !llvm.loop !283

2414:                                             ; preds = %1821
  %2415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 303, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

2416:                                             ; preds = %18
  %2417 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2418 = load ptr, ptr %2417, align 8, !tbaa !9
  %2419 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2420 = load ptr, ptr %2419, align 8, !tbaa !9
  store i32 0, ptr %2420, align 4, !tbaa !5
  %2421 = icmp eq i32 %13, 0
  br i1 %2421, label %2422, label %2424

2422:                                             ; preds = %2416
  %2423 = load i32, ptr %2418, align 4, !tbaa !5
  store i32 %2423, ptr %2420, align 4, !tbaa !5
  br label %5404

2424:                                             ; preds = %2416
  switch i32 %1, label %3007 [
    i32 1, label %2425
    i32 0, label %2719
  ]

2425:                                             ; preds = %2424
  %2426 = getelementptr inbounds i32, ptr %3, i64 %19
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = icmp eq i32 %2427, 0
  %2429 = icmp sgt i32 %5, 0
  br i1 %2428, label %2439, label %2430

2430:                                             ; preds = %2425
  br i1 %2429, label %2431, label %5404

2431:                                             ; preds = %2430
  %2432 = icmp sgt i32 %13, 1
  %2433 = icmp sgt i32 %13, 0
  %2434 = add i32 %13, -2
  %2435 = zext i32 %2434 to i64
  %2436 = zext i32 %13 to i64
  %2437 = add nuw i32 %5, 1
  %2438 = icmp eq i32 %13, 1
  br label %2583

2439:                                             ; preds = %2425
  br i1 %2429, label %2440, label %5404

2440:                                             ; preds = %2439
  %2441 = icmp sgt i32 %13, 1
  %2442 = icmp sgt i32 %13, 0
  %2443 = add i32 %13, -2
  %2444 = zext i32 %2443 to i64
  %2445 = zext i32 %13 to i64
  %2446 = add nuw i32 %5, 1
  %2447 = icmp eq i32 %13, 1
  br label %2448

2448:                                             ; preds = %2440, %2581
  %2449 = phi i32 [ 0, %2440 ], [ %2533, %2581 ]
  %2450 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2441, label %2451, label %2520

2451:                                             ; preds = %2448, %2510
  %2452 = phi i32 [ %2519, %2510 ], [ 0, %2448 ]
  %2453 = phi i64 [ %2461, %2510 ], [ %2445, %2448 ]
  %2454 = phi i64 [ %2518, %2510 ], [ %2444, %2448 ]
  %2455 = phi i32 [ %2516, %2510 ], [ %2450, %2448 ]
  %2456 = sub i32 %2443, %2452
  %2457 = tail call i32 @llvm.smin.i32(i32 %2456, i32 0)
  %2458 = sub i32 %2456, %2457
  %2459 = zext i32 %2458 to i64
  %2460 = add nuw nsw i64 %2459, 1
  %2461 = add nsw i64 %2453, -1
  %2462 = icmp ult i32 %2458, 31
  br i1 %2462, label %2498, label %2463

2463:                                             ; preds = %2451
  %2464 = and i64 %2460, 8589934560
  %2465 = sub i64 %2454, %2464
  br label %2466

2466:                                             ; preds = %2466, %2463
  %2467 = phi i64 [ 0, %2463 ], [ %2490, %2466 ]
  %2468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2486, %2466 ]
  %2469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2487, %2466 ]
  %2470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2488, %2466 ]
  %2471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2489, %2466 ]
  %2472 = sub i64 %2454, %2467
  %2473 = getelementptr inbounds i32, ptr %9, i64 %2472
  %2474 = getelementptr inbounds i32, ptr %2473, i64 -7
  %2475 = load <8 x i32>, ptr %2474, align 4, !tbaa !5
  %2476 = shufflevector <8 x i32> %2475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2477 = getelementptr inbounds i32, ptr %2473, i64 -15
  %2478 = load <8 x i32>, ptr %2477, align 4, !tbaa !5
  %2479 = shufflevector <8 x i32> %2478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2480 = getelementptr inbounds i32, ptr %2473, i64 -23
  %2481 = load <8 x i32>, ptr %2480, align 4, !tbaa !5
  %2482 = shufflevector <8 x i32> %2481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2483 = getelementptr inbounds i32, ptr %2473, i64 -31
  %2484 = load <8 x i32>, ptr %2483, align 4, !tbaa !5
  %2485 = shufflevector <8 x i32> %2484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2486 = mul <8 x i32> %2476, %2468
  %2487 = mul <8 x i32> %2479, %2469
  %2488 = mul <8 x i32> %2482, %2470
  %2489 = mul <8 x i32> %2485, %2471
  %2490 = add nuw i64 %2467, 32
  %2491 = icmp eq i64 %2490, %2464
  br i1 %2491, label %2492, label %2466, !llvm.loop !284

2492:                                             ; preds = %2466
  %2493 = mul <8 x i32> %2487, %2486
  %2494 = mul <8 x i32> %2488, %2493
  %2495 = mul <8 x i32> %2489, %2494
  %2496 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2495)
  %2497 = icmp eq i64 %2460, %2464
  br i1 %2497, label %2510, label %2498

2498:                                             ; preds = %2451, %2492
  %2499 = phi i64 [ %2454, %2451 ], [ %2465, %2492 ]
  %2500 = phi i32 [ 1, %2451 ], [ %2496, %2492 ]
  br label %2501

2501:                                             ; preds = %2498, %2501
  %2502 = phi i64 [ %2507, %2501 ], [ %2499, %2498 ]
  %2503 = phi i32 [ %2506, %2501 ], [ %2500, %2498 ]
  %2504 = getelementptr inbounds i32, ptr %9, i64 %2502
  %2505 = load i32, ptr %2504, align 4, !tbaa !5
  %2506 = mul nsw i32 %2505, %2503
  %2507 = add nsw i64 %2502, -1
  %2508 = trunc i64 %2502 to i32
  %2509 = icmp sgt i32 %2508, 0
  br i1 %2509, label %2501, label %2510, !llvm.loop !285

2510:                                             ; preds = %2501, %2492
  %2511 = phi i32 [ %2496, %2492 ], [ %2506, %2501 ]
  %2512 = and i64 %2461, 4294967295
  %2513 = getelementptr inbounds i32, ptr %6, i64 %2512
  %2514 = load i32, ptr %2513, align 4, !tbaa !5
  %2515 = mul nsw i32 %2514, %2511
  %2516 = add nsw i32 %2515, %2455
  %2517 = icmp sgt i64 %2453, 2
  %2518 = add nsw i64 %2454, -1
  %2519 = add i32 %2452, 1
  br i1 %2517, label %2451, label %2520, !llvm.loop !286

2520:                                             ; preds = %2510, %2448
  %2521 = phi i32 [ %2450, %2448 ], [ %2516, %2510 ]
  %2522 = sext i32 %2521 to i64
  %2523 = getelementptr inbounds double, ptr %2, i64 %2522
  %2524 = load double, ptr %2523, align 8, !tbaa !18
  %2525 = getelementptr inbounds i32, ptr %2418, i64 %2522
  %2526 = load i32, ptr %2525, align 4, !tbaa !5
  %2527 = load i32, ptr %2420, align 4, !tbaa !5
  %2528 = sitofp i32 %2527 to double
  %2529 = sitofp i32 %2526 to double
  %2530 = fmul fast double %2524, %2529
  %2531 = fadd fast double %2530, %2528
  %2532 = fptosi double %2531 to i32
  store i32 %2532, ptr %2420, align 4, !tbaa !5
  %2533 = add nuw nsw i32 %2449, 1
  br i1 %2442, label %2534, label %2581

2534:                                             ; preds = %2520
  %2535 = load i32, ptr %4, align 4, !tbaa !5
  %2536 = load i32, ptr %12, align 4, !tbaa !5
  %2537 = add nsw i32 %2536, -1
  %2538 = icmp slt i32 %2535, %2537
  br i1 %2538, label %2558, label %2539

2539:                                             ; preds = %2534
  %2540 = icmp eq i32 %2535, %2537
  br i1 %2540, label %2541, label %2574

2541:                                             ; preds = %2539
  store i32 0, ptr %4, align 4, !tbaa !5
  %2542 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2542, ptr %6, align 4, !tbaa !5
  br i1 %2447, label %2581, label %2543

2543:                                             ; preds = %2541, %2568
  %2544 = phi i64 [ %2572, %2568 ], [ 1, %2541 ]
  %2545 = getelementptr inbounds i32, ptr %4, i64 %2544
  %2546 = load i32, ptr %2545, align 4, !tbaa !5
  %2547 = getelementptr inbounds i32, ptr %12, i64 %2544
  %2548 = load i32, ptr %2547, align 4, !tbaa !5
  %2549 = add nsw i32 %2548, -1
  %2550 = icmp slt i32 %2546, %2549
  br i1 %2550, label %2551, label %2566

2551:                                             ; preds = %2543
  br i1 %2538, label %2558, label %2552

2552:                                             ; preds = %2551
  %2553 = getelementptr inbounds i32, ptr %7, i64 %2544
  %2554 = load i32, ptr %2553, align 4, !tbaa !5
  %2555 = getelementptr inbounds i32, ptr %6, i64 %2544
  %2556 = load i32, ptr %2555, align 4, !tbaa !5
  %2557 = add nsw i32 %2556, %2554
  store i32 %2557, ptr %2555, align 4, !tbaa !5
  br label %2576

2558:                                             ; preds = %2534, %2551
  %2559 = phi i32 [ %2546, %2551 ], [ %2535, %2534 ]
  %2560 = phi ptr [ %2545, %2551 ], [ %4, %2534 ]
  %2561 = phi i64 [ %2544, %2551 ], [ 0, %2534 ]
  %2562 = add nsw i32 %2559, 1
  store i32 %2562, ptr %2560, align 4, !tbaa !5
  %2563 = getelementptr inbounds i32, ptr %7, i64 %2561
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = getelementptr inbounds i32, ptr %6, i64 %2561
  br label %2576

2566:                                             ; preds = %2543
  %2567 = icmp eq i32 %2546, %2549
  br i1 %2567, label %2568, label %2574

2568:                                             ; preds = %2566
  store i32 0, ptr %2545, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %8, i64 %2544
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = getelementptr inbounds i32, ptr %6, i64 %2544
  store i32 %2570, ptr %2571, align 4, !tbaa !5
  %2572 = add nuw nsw i64 %2544, 1
  %2573 = icmp eq i64 %2572, %2445
  br i1 %2573, label %2581, label %2543, !llvm.loop !287

2574:                                             ; preds = %2539, %2566
  %2575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2576:                                             ; preds = %2552, %2558
  %2577 = phi ptr [ %2565, %2558 ], [ %2545, %2552 ]
  %2578 = phi i32 [ %2564, %2558 ], [ 1, %2552 ]
  %2579 = load i32, ptr %2577, align 4, !tbaa !5
  %2580 = add nsw i32 %2579, %2578
  store i32 %2580, ptr %2577, align 4, !tbaa !5
  br label %2581

2581:                                             ; preds = %2568, %2576, %2541, %2520
  %2582 = icmp eq i32 %2533, %5
  br i1 %2582, label %5404, label %2448, !llvm.loop !288

2583:                                             ; preds = %2431, %2717
  %2584 = phi i32 [ 0, %2431 ], [ %2666, %2717 ]
  %2585 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2432, label %2586, label %2655

2586:                                             ; preds = %2583, %2645
  %2587 = phi i32 [ %2654, %2645 ], [ 0, %2583 ]
  %2588 = phi i64 [ %2596, %2645 ], [ %2436, %2583 ]
  %2589 = phi i64 [ %2653, %2645 ], [ %2435, %2583 ]
  %2590 = phi i32 [ %2651, %2645 ], [ %2585, %2583 ]
  %2591 = sub i32 %2434, %2587
  %2592 = tail call i32 @llvm.smin.i32(i32 %2591, i32 0)
  %2593 = sub i32 %2591, %2592
  %2594 = zext i32 %2593 to i64
  %2595 = add nuw nsw i64 %2594, 1
  %2596 = add nsw i64 %2588, -1
  %2597 = icmp ult i32 %2593, 31
  br i1 %2597, label %2633, label %2598

2598:                                             ; preds = %2586
  %2599 = and i64 %2595, 8589934560
  %2600 = sub i64 %2589, %2599
  br label %2601

2601:                                             ; preds = %2601, %2598
  %2602 = phi i64 [ 0, %2598 ], [ %2625, %2601 ]
  %2603 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2621, %2601 ]
  %2604 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2622, %2601 ]
  %2605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2623, %2601 ]
  %2606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2624, %2601 ]
  %2607 = sub i64 %2589, %2602
  %2608 = getelementptr inbounds i32, ptr %11, i64 %2607
  %2609 = getelementptr inbounds i32, ptr %2608, i64 -7
  %2610 = load <8 x i32>, ptr %2609, align 4, !tbaa !5
  %2611 = shufflevector <8 x i32> %2610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2612 = getelementptr inbounds i32, ptr %2608, i64 -15
  %2613 = load <8 x i32>, ptr %2612, align 4, !tbaa !5
  %2614 = shufflevector <8 x i32> %2613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2615 = getelementptr inbounds i32, ptr %2608, i64 -23
  %2616 = load <8 x i32>, ptr %2615, align 4, !tbaa !5
  %2617 = shufflevector <8 x i32> %2616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2618 = getelementptr inbounds i32, ptr %2608, i64 -31
  %2619 = load <8 x i32>, ptr %2618, align 4, !tbaa !5
  %2620 = shufflevector <8 x i32> %2619, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2621 = mul <8 x i32> %2611, %2603
  %2622 = mul <8 x i32> %2614, %2604
  %2623 = mul <8 x i32> %2617, %2605
  %2624 = mul <8 x i32> %2620, %2606
  %2625 = add nuw i64 %2602, 32
  %2626 = icmp eq i64 %2625, %2599
  br i1 %2626, label %2627, label %2601, !llvm.loop !289

2627:                                             ; preds = %2601
  %2628 = mul <8 x i32> %2622, %2621
  %2629 = mul <8 x i32> %2623, %2628
  %2630 = mul <8 x i32> %2624, %2629
  %2631 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2630)
  %2632 = icmp eq i64 %2595, %2599
  br i1 %2632, label %2645, label %2633

2633:                                             ; preds = %2586, %2627
  %2634 = phi i64 [ %2589, %2586 ], [ %2600, %2627 ]
  %2635 = phi i32 [ 1, %2586 ], [ %2631, %2627 ]
  br label %2636

2636:                                             ; preds = %2633, %2636
  %2637 = phi i64 [ %2642, %2636 ], [ %2634, %2633 ]
  %2638 = phi i32 [ %2641, %2636 ], [ %2635, %2633 ]
  %2639 = getelementptr inbounds i32, ptr %11, i64 %2637
  %2640 = load i32, ptr %2639, align 4, !tbaa !5
  %2641 = mul nsw i32 %2640, %2638
  %2642 = add nsw i64 %2637, -1
  %2643 = trunc i64 %2637 to i32
  %2644 = icmp sgt i32 %2643, 0
  br i1 %2644, label %2636, label %2645, !llvm.loop !290

2645:                                             ; preds = %2636, %2627
  %2646 = phi i32 [ %2631, %2627 ], [ %2641, %2636 ]
  %2647 = and i64 %2596, 4294967295
  %2648 = getelementptr inbounds i32, ptr %6, i64 %2647
  %2649 = load i32, ptr %2648, align 4, !tbaa !5
  %2650 = mul nsw i32 %2649, %2646
  %2651 = add nsw i32 %2650, %2590
  %2652 = icmp sgt i64 %2588, 2
  %2653 = add nsw i64 %2589, -1
  %2654 = add i32 %2587, 1
  br i1 %2652, label %2586, label %2655, !llvm.loop !291

2655:                                             ; preds = %2645, %2583
  %2656 = phi i32 [ %2585, %2583 ], [ %2651, %2645 ]
  %2657 = icmp slt i32 %2656, %5
  br i1 %2657, label %2660, label %2658

2658:                                             ; preds = %2655
  %2659 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2660:                                             ; preds = %2655
  %2661 = sext i32 %2656 to i64
  %2662 = getelementptr inbounds i32, ptr %2418, i64 %2661
  %2663 = load i32, ptr %2662, align 4, !tbaa !5
  %2664 = load i32, ptr %2420, align 4, !tbaa !5
  %2665 = add i32 %2664, %2663
  store i32 %2665, ptr %2420, align 4, !tbaa !5
  %2666 = add nuw nsw i32 %2584, 1
  br i1 %2433, label %2667, label %2717

2667:                                             ; preds = %2660
  %2668 = load i32, ptr %4, align 4, !tbaa !5
  %2669 = load i32, ptr %12, align 4, !tbaa !5
  %2670 = add nsw i32 %2669, -1
  %2671 = icmp slt i32 %2668, %2670
  br i1 %2671, label %2694, label %2672

2672:                                             ; preds = %2667
  %2673 = icmp eq i32 %2668, %2670
  br i1 %2673, label %2674, label %2710

2674:                                             ; preds = %2672
  store i32 0, ptr %4, align 4, !tbaa !5
  %2675 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2675, ptr %6, align 4, !tbaa !5
  br i1 %2438, label %2717, label %2676

2676:                                             ; preds = %2674, %2704
  %2677 = phi i64 [ %2708, %2704 ], [ 1, %2674 ]
  %2678 = getelementptr inbounds i32, ptr %4, i64 %2677
  %2679 = load i32, ptr %2678, align 4, !tbaa !5
  %2680 = getelementptr inbounds i32, ptr %12, i64 %2677
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = add nsw i32 %2681, -1
  %2683 = icmp slt i32 %2679, %2682
  br i1 %2683, label %2684, label %2702

2684:                                             ; preds = %2676
  br i1 %2671, label %2694, label %2685

2685:                                             ; preds = %2684
  %2686 = shl i64 %2677, 32
  %2687 = add i64 %2686, -4294967296
  %2688 = ashr exact i64 %2687, 32
  %2689 = getelementptr inbounds i32, ptr %7, i64 %2688
  %2690 = load i32, ptr %2689, align 4, !tbaa !5
  %2691 = getelementptr inbounds i32, ptr %6, i64 %2677
  %2692 = load i32, ptr %2691, align 4, !tbaa !5
  %2693 = add nsw i32 %2692, %2690
  store i32 %2693, ptr %2691, align 4, !tbaa !5
  br label %2712

2694:                                             ; preds = %2667, %2684
  %2695 = phi i32 [ %2679, %2684 ], [ %2668, %2667 ]
  %2696 = phi ptr [ %2678, %2684 ], [ %4, %2667 ]
  %2697 = phi i64 [ %2677, %2684 ], [ 0, %2667 ]
  %2698 = add nsw i32 %2695, 1
  store i32 %2698, ptr %2696, align 4, !tbaa !5
  %2699 = getelementptr inbounds i32, ptr %7, i64 %2697
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = getelementptr inbounds i32, ptr %6, i64 %2697
  br label %2712

2702:                                             ; preds = %2676
  %2703 = icmp eq i32 %2679, %2682
  br i1 %2703, label %2704, label %2710

2704:                                             ; preds = %2702
  store i32 0, ptr %2678, align 4, !tbaa !5
  %2705 = getelementptr inbounds i32, ptr %8, i64 %2677
  %2706 = load i32, ptr %2705, align 4, !tbaa !5
  %2707 = getelementptr inbounds i32, ptr %6, i64 %2677
  store i32 %2706, ptr %2707, align 4, !tbaa !5
  %2708 = add nuw nsw i64 %2677, 1
  %2709 = icmp eq i64 %2708, %2436
  br i1 %2709, label %2717, label %2676, !llvm.loop !292

2710:                                             ; preds = %2672, %2702
  %2711 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2712:                                             ; preds = %2685, %2694
  %2713 = phi ptr [ %2701, %2694 ], [ %2678, %2685 ]
  %2714 = phi i32 [ %2700, %2694 ], [ 1, %2685 ]
  %2715 = load i32, ptr %2713, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, %2714
  store i32 %2716, ptr %2713, align 4, !tbaa !5
  br label %2717

2717:                                             ; preds = %2704, %2712, %2674, %2660
  %2718 = icmp eq i32 %2666, %5
  br i1 %2718, label %5404, label %2583, !llvm.loop !293

2719:                                             ; preds = %2424
  %2720 = getelementptr inbounds i32, ptr %3, i64 %19
  %2721 = load i32, ptr %2720, align 4, !tbaa !5
  %2722 = icmp eq i32 %2721, 0
  %2723 = icmp sgt i32 %5, 0
  br i1 %2722, label %2733, label %2724

2724:                                             ; preds = %2719
  br i1 %2723, label %2725, label %5404

2725:                                             ; preds = %2724
  %2726 = icmp sgt i32 %13, 1
  %2727 = icmp sgt i32 %13, 0
  %2728 = add i32 %13, -2
  %2729 = zext i32 %2728 to i64
  %2730 = zext i32 %13 to i64
  %2731 = add nuw i32 %5, 1
  %2732 = icmp eq i32 %13, 1
  br label %2871

2733:                                             ; preds = %2719
  br i1 %2723, label %2734, label %5404

2734:                                             ; preds = %2733
  %2735 = icmp sgt i32 %13, 1
  %2736 = icmp sgt i32 %13, 0
  %2737 = add i32 %13, -2
  %2738 = zext i32 %2737 to i64
  %2739 = zext i32 %13 to i64
  %2740 = add nuw i32 %5, 1
  %2741 = icmp eq i32 %13, 1
  br label %2742

2742:                                             ; preds = %2734, %2869
  %2743 = phi i32 [ 0, %2734 ], [ %2821, %2869 ]
  %2744 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2735, label %2745, label %2814

2745:                                             ; preds = %2742, %2804
  %2746 = phi i32 [ %2813, %2804 ], [ 0, %2742 ]
  %2747 = phi i64 [ %2755, %2804 ], [ %2739, %2742 ]
  %2748 = phi i64 [ %2812, %2804 ], [ %2738, %2742 ]
  %2749 = phi i32 [ %2810, %2804 ], [ %2744, %2742 ]
  %2750 = sub i32 %2737, %2746
  %2751 = tail call i32 @llvm.smin.i32(i32 %2750, i32 0)
  %2752 = sub i32 %2750, %2751
  %2753 = zext i32 %2752 to i64
  %2754 = add nuw nsw i64 %2753, 1
  %2755 = add nsw i64 %2747, -1
  %2756 = icmp ult i32 %2752, 31
  br i1 %2756, label %2792, label %2757

2757:                                             ; preds = %2745
  %2758 = and i64 %2754, 8589934560
  %2759 = sub i64 %2748, %2758
  br label %2760

2760:                                             ; preds = %2760, %2757
  %2761 = phi i64 [ 0, %2757 ], [ %2784, %2760 ]
  %2762 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2780, %2760 ]
  %2763 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2781, %2760 ]
  %2764 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2782, %2760 ]
  %2765 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2783, %2760 ]
  %2766 = sub i64 %2748, %2761
  %2767 = getelementptr inbounds i32, ptr %9, i64 %2766
  %2768 = getelementptr inbounds i32, ptr %2767, i64 -7
  %2769 = load <8 x i32>, ptr %2768, align 4, !tbaa !5
  %2770 = shufflevector <8 x i32> %2769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2771 = getelementptr inbounds i32, ptr %2767, i64 -15
  %2772 = load <8 x i32>, ptr %2771, align 4, !tbaa !5
  %2773 = shufflevector <8 x i32> %2772, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2774 = getelementptr inbounds i32, ptr %2767, i64 -23
  %2775 = load <8 x i32>, ptr %2774, align 4, !tbaa !5
  %2776 = shufflevector <8 x i32> %2775, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2777 = getelementptr inbounds i32, ptr %2767, i64 -31
  %2778 = load <8 x i32>, ptr %2777, align 4, !tbaa !5
  %2779 = shufflevector <8 x i32> %2778, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2780 = mul <8 x i32> %2770, %2762
  %2781 = mul <8 x i32> %2773, %2763
  %2782 = mul <8 x i32> %2776, %2764
  %2783 = mul <8 x i32> %2779, %2765
  %2784 = add nuw i64 %2761, 32
  %2785 = icmp eq i64 %2784, %2758
  br i1 %2785, label %2786, label %2760, !llvm.loop !294

2786:                                             ; preds = %2760
  %2787 = mul <8 x i32> %2781, %2780
  %2788 = mul <8 x i32> %2782, %2787
  %2789 = mul <8 x i32> %2783, %2788
  %2790 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2789)
  %2791 = icmp eq i64 %2754, %2758
  br i1 %2791, label %2804, label %2792

2792:                                             ; preds = %2745, %2786
  %2793 = phi i64 [ %2748, %2745 ], [ %2759, %2786 ]
  %2794 = phi i32 [ 1, %2745 ], [ %2790, %2786 ]
  br label %2795

2795:                                             ; preds = %2792, %2795
  %2796 = phi i64 [ %2801, %2795 ], [ %2793, %2792 ]
  %2797 = phi i32 [ %2800, %2795 ], [ %2794, %2792 ]
  %2798 = getelementptr inbounds i32, ptr %9, i64 %2796
  %2799 = load i32, ptr %2798, align 4, !tbaa !5
  %2800 = mul nsw i32 %2799, %2797
  %2801 = add nsw i64 %2796, -1
  %2802 = trunc i64 %2796 to i32
  %2803 = icmp sgt i32 %2802, 0
  br i1 %2803, label %2795, label %2804, !llvm.loop !295

2804:                                             ; preds = %2795, %2786
  %2805 = phi i32 [ %2790, %2786 ], [ %2800, %2795 ]
  %2806 = and i64 %2755, 4294967295
  %2807 = getelementptr inbounds i32, ptr %6, i64 %2806
  %2808 = load i32, ptr %2807, align 4, !tbaa !5
  %2809 = mul nsw i32 %2808, %2805
  %2810 = add nsw i32 %2809, %2749
  %2811 = icmp sgt i64 %2747, 2
  %2812 = add nsw i64 %2748, -1
  %2813 = add i32 %2746, 1
  br i1 %2811, label %2745, label %2814, !llvm.loop !296

2814:                                             ; preds = %2804, %2742
  %2815 = phi i32 [ %2744, %2742 ], [ %2810, %2804 ]
  %2816 = sext i32 %2815 to i64
  %2817 = getelementptr inbounds i32, ptr %2418, i64 %2816
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = load i32, ptr %2420, align 4, !tbaa !5
  %2820 = add nsw i32 %2819, %2818
  store i32 %2820, ptr %2420, align 4, !tbaa !5
  %2821 = add nuw nsw i32 %2743, 1
  br i1 %2736, label %2822, label %2869

2822:                                             ; preds = %2814
  %2823 = load i32, ptr %4, align 4, !tbaa !5
  %2824 = load i32, ptr %12, align 4, !tbaa !5
  %2825 = add nsw i32 %2824, -1
  %2826 = icmp slt i32 %2823, %2825
  br i1 %2826, label %2846, label %2827

2827:                                             ; preds = %2822
  %2828 = icmp eq i32 %2823, %2825
  br i1 %2828, label %2829, label %2862

2829:                                             ; preds = %2827
  store i32 0, ptr %4, align 4, !tbaa !5
  %2830 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2830, ptr %6, align 4, !tbaa !5
  br i1 %2741, label %2869, label %2831

2831:                                             ; preds = %2829, %2856
  %2832 = phi i64 [ %2860, %2856 ], [ 1, %2829 ]
  %2833 = getelementptr inbounds i32, ptr %4, i64 %2832
  %2834 = load i32, ptr %2833, align 4, !tbaa !5
  %2835 = getelementptr inbounds i32, ptr %12, i64 %2832
  %2836 = load i32, ptr %2835, align 4, !tbaa !5
  %2837 = add nsw i32 %2836, -1
  %2838 = icmp slt i32 %2834, %2837
  br i1 %2838, label %2839, label %2854

2839:                                             ; preds = %2831
  br i1 %2826, label %2846, label %2840

2840:                                             ; preds = %2839
  %2841 = getelementptr inbounds i32, ptr %7, i64 %2832
  %2842 = load i32, ptr %2841, align 4, !tbaa !5
  %2843 = getelementptr inbounds i32, ptr %6, i64 %2832
  %2844 = load i32, ptr %2843, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, %2842
  store i32 %2845, ptr %2843, align 4, !tbaa !5
  br label %2864

2846:                                             ; preds = %2822, %2839
  %2847 = phi i32 [ %2834, %2839 ], [ %2823, %2822 ]
  %2848 = phi ptr [ %2833, %2839 ], [ %4, %2822 ]
  %2849 = phi i64 [ %2832, %2839 ], [ 0, %2822 ]
  %2850 = add nsw i32 %2847, 1
  store i32 %2850, ptr %2848, align 4, !tbaa !5
  %2851 = getelementptr inbounds i32, ptr %7, i64 %2849
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = getelementptr inbounds i32, ptr %6, i64 %2849
  br label %2864

2854:                                             ; preds = %2831
  %2855 = icmp eq i32 %2834, %2837
  br i1 %2855, label %2856, label %2862

2856:                                             ; preds = %2854
  store i32 0, ptr %2833, align 4, !tbaa !5
  %2857 = getelementptr inbounds i32, ptr %8, i64 %2832
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2832
  store i32 %2858, ptr %2859, align 4, !tbaa !5
  %2860 = add nuw nsw i64 %2832, 1
  %2861 = icmp eq i64 %2860, %2739
  br i1 %2861, label %2869, label %2831, !llvm.loop !297

2862:                                             ; preds = %2827, %2854
  %2863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2864:                                             ; preds = %2840, %2846
  %2865 = phi ptr [ %2853, %2846 ], [ %2833, %2840 ]
  %2866 = phi i32 [ %2852, %2846 ], [ 1, %2840 ]
  %2867 = load i32, ptr %2865, align 4, !tbaa !5
  %2868 = add nsw i32 %2867, %2866
  store i32 %2868, ptr %2865, align 4, !tbaa !5
  br label %2869

2869:                                             ; preds = %2856, %2864, %2829, %2814
  %2870 = icmp eq i32 %2821, %5
  br i1 %2870, label %5404, label %2742, !llvm.loop !298

2871:                                             ; preds = %2725, %3005
  %2872 = phi i32 [ 0, %2725 ], [ %2954, %3005 ]
  %2873 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2726, label %2874, label %2943

2874:                                             ; preds = %2871, %2933
  %2875 = phi i32 [ %2942, %2933 ], [ 0, %2871 ]
  %2876 = phi i64 [ %2884, %2933 ], [ %2730, %2871 ]
  %2877 = phi i64 [ %2941, %2933 ], [ %2729, %2871 ]
  %2878 = phi i32 [ %2939, %2933 ], [ %2873, %2871 ]
  %2879 = sub i32 %2728, %2875
  %2880 = tail call i32 @llvm.smin.i32(i32 %2879, i32 0)
  %2881 = sub i32 %2879, %2880
  %2882 = zext i32 %2881 to i64
  %2883 = add nuw nsw i64 %2882, 1
  %2884 = add nsw i64 %2876, -1
  %2885 = icmp ult i32 %2881, 31
  br i1 %2885, label %2921, label %2886

2886:                                             ; preds = %2874
  %2887 = and i64 %2883, 8589934560
  %2888 = sub i64 %2877, %2887
  br label %2889

2889:                                             ; preds = %2889, %2886
  %2890 = phi i64 [ 0, %2886 ], [ %2913, %2889 ]
  %2891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2909, %2889 ]
  %2892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2910, %2889 ]
  %2893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2911, %2889 ]
  %2894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2912, %2889 ]
  %2895 = sub i64 %2877, %2890
  %2896 = getelementptr inbounds i32, ptr %11, i64 %2895
  %2897 = getelementptr inbounds i32, ptr %2896, i64 -7
  %2898 = load <8 x i32>, ptr %2897, align 4, !tbaa !5
  %2899 = shufflevector <8 x i32> %2898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2900 = getelementptr inbounds i32, ptr %2896, i64 -15
  %2901 = load <8 x i32>, ptr %2900, align 4, !tbaa !5
  %2902 = shufflevector <8 x i32> %2901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2903 = getelementptr inbounds i32, ptr %2896, i64 -23
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !5
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2896, i64 -31
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !5
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = mul <8 x i32> %2899, %2891
  %2910 = mul <8 x i32> %2902, %2892
  %2911 = mul <8 x i32> %2905, %2893
  %2912 = mul <8 x i32> %2908, %2894
  %2913 = add nuw i64 %2890, 32
  %2914 = icmp eq i64 %2913, %2887
  br i1 %2914, label %2915, label %2889, !llvm.loop !299

2915:                                             ; preds = %2889
  %2916 = mul <8 x i32> %2910, %2909
  %2917 = mul <8 x i32> %2911, %2916
  %2918 = mul <8 x i32> %2912, %2917
  %2919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2918)
  %2920 = icmp eq i64 %2883, %2887
  br i1 %2920, label %2933, label %2921

2921:                                             ; preds = %2874, %2915
  %2922 = phi i64 [ %2877, %2874 ], [ %2888, %2915 ]
  %2923 = phi i32 [ 1, %2874 ], [ %2919, %2915 ]
  br label %2924

2924:                                             ; preds = %2921, %2924
  %2925 = phi i64 [ %2930, %2924 ], [ %2922, %2921 ]
  %2926 = phi i32 [ %2929, %2924 ], [ %2923, %2921 ]
  %2927 = getelementptr inbounds i32, ptr %11, i64 %2925
  %2928 = load i32, ptr %2927, align 4, !tbaa !5
  %2929 = mul nsw i32 %2928, %2926
  %2930 = add nsw i64 %2925, -1
  %2931 = trunc i64 %2925 to i32
  %2932 = icmp sgt i32 %2931, 0
  br i1 %2932, label %2924, label %2933, !llvm.loop !300

2933:                                             ; preds = %2924, %2915
  %2934 = phi i32 [ %2919, %2915 ], [ %2929, %2924 ]
  %2935 = and i64 %2884, 4294967295
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2935
  %2937 = load i32, ptr %2936, align 4, !tbaa !5
  %2938 = mul nsw i32 %2937, %2934
  %2939 = add nsw i32 %2938, %2878
  %2940 = icmp sgt i64 %2876, 2
  %2941 = add nsw i64 %2877, -1
  %2942 = add i32 %2875, 1
  br i1 %2940, label %2874, label %2943, !llvm.loop !301

2943:                                             ; preds = %2933, %2871
  %2944 = phi i32 [ %2873, %2871 ], [ %2939, %2933 ]
  %2945 = icmp slt i32 %2944, %5
  br i1 %2945, label %2948, label %2946

2946:                                             ; preds = %2943
  %2947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2948:                                             ; preds = %2943
  %2949 = sext i32 %2944 to i64
  %2950 = getelementptr inbounds i32, ptr %2418, i64 %2949
  %2951 = load i32, ptr %2950, align 4, !tbaa !5
  %2952 = load i32, ptr %2420, align 4, !tbaa !5
  %2953 = add nsw i32 %2952, %2951
  store i32 %2953, ptr %2420, align 4, !tbaa !5
  %2954 = add nuw nsw i32 %2872, 1
  br i1 %2727, label %2955, label %3005

2955:                                             ; preds = %2948
  %2956 = load i32, ptr %4, align 4, !tbaa !5
  %2957 = load i32, ptr %12, align 4, !tbaa !5
  %2958 = add nsw i32 %2957, -1
  %2959 = icmp slt i32 %2956, %2958
  br i1 %2959, label %2982, label %2960

2960:                                             ; preds = %2955
  %2961 = icmp eq i32 %2956, %2958
  br i1 %2961, label %2962, label %2998

2962:                                             ; preds = %2960
  store i32 0, ptr %4, align 4, !tbaa !5
  %2963 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2963, ptr %6, align 4, !tbaa !5
  br i1 %2732, label %3005, label %2964

2964:                                             ; preds = %2962, %2992
  %2965 = phi i64 [ %2996, %2992 ], [ 1, %2962 ]
  %2966 = getelementptr inbounds i32, ptr %4, i64 %2965
  %2967 = load i32, ptr %2966, align 4, !tbaa !5
  %2968 = getelementptr inbounds i32, ptr %12, i64 %2965
  %2969 = load i32, ptr %2968, align 4, !tbaa !5
  %2970 = add nsw i32 %2969, -1
  %2971 = icmp slt i32 %2967, %2970
  br i1 %2971, label %2972, label %2990

2972:                                             ; preds = %2964
  br i1 %2959, label %2982, label %2973

2973:                                             ; preds = %2972
  %2974 = shl i64 %2965, 32
  %2975 = add i64 %2974, -4294967296
  %2976 = ashr exact i64 %2975, 32
  %2977 = getelementptr inbounds i32, ptr %7, i64 %2976
  %2978 = load i32, ptr %2977, align 4, !tbaa !5
  %2979 = getelementptr inbounds i32, ptr %6, i64 %2965
  %2980 = load i32, ptr %2979, align 4, !tbaa !5
  %2981 = add nsw i32 %2980, %2978
  store i32 %2981, ptr %2979, align 4, !tbaa !5
  br label %3000

2982:                                             ; preds = %2955, %2972
  %2983 = phi i32 [ %2967, %2972 ], [ %2956, %2955 ]
  %2984 = phi ptr [ %2966, %2972 ], [ %4, %2955 ]
  %2985 = phi i64 [ %2965, %2972 ], [ 0, %2955 ]
  %2986 = add nsw i32 %2983, 1
  store i32 %2986, ptr %2984, align 4, !tbaa !5
  %2987 = getelementptr inbounds i32, ptr %7, i64 %2985
  %2988 = load i32, ptr %2987, align 4, !tbaa !5
  %2989 = getelementptr inbounds i32, ptr %6, i64 %2985
  br label %3000

2990:                                             ; preds = %2964
  %2991 = icmp eq i32 %2967, %2970
  br i1 %2991, label %2992, label %2998

2992:                                             ; preds = %2990
  store i32 0, ptr %2966, align 4, !tbaa !5
  %2993 = getelementptr inbounds i32, ptr %8, i64 %2965
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2965
  store i32 %2994, ptr %2995, align 4, !tbaa !5
  %2996 = add nuw nsw i64 %2965, 1
  %2997 = icmp eq i64 %2996, %2730
  br i1 %2997, label %3005, label %2964, !llvm.loop !302

2998:                                             ; preds = %2960, %2990
  %2999 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3000:                                             ; preds = %2973, %2982
  %3001 = phi ptr [ %2989, %2982 ], [ %2966, %2973 ]
  %3002 = phi i32 [ %2988, %2982 ], [ 1, %2973 ]
  %3003 = load i32, ptr %3001, align 4, !tbaa !5
  %3004 = add nsw i32 %3003, %3002
  store i32 %3004, ptr %3001, align 4, !tbaa !5
  br label %3005

3005:                                             ; preds = %2992, %3000, %2962, %2948
  %3006 = icmp eq i32 %2954, %5
  br i1 %3006, label %5404, label %2871, !llvm.loop !303

3007:                                             ; preds = %2424
  %3008 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 308, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

3009:                                             ; preds = %18
  %3010 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3011 = load ptr, ptr %3010, align 8, !tbaa !9
  %3012 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3013 = load ptr, ptr %3012, align 8, !tbaa !9
  store i64 0, ptr %3013, align 8, !tbaa !120
  %3014 = icmp eq i32 %13, 0
  br i1 %3014, label %3015, label %3018

3015:                                             ; preds = %3009
  %3016 = load i32, ptr %3011, align 4, !tbaa !5
  %3017 = sext i32 %3016 to i64
  store i64 %3017, ptr %3013, align 8, !tbaa !120
  br label %5404

3018:                                             ; preds = %3009
  switch i32 %1, label %3606 [
    i32 1, label %3019
    i32 0, label %3316
  ]

3019:                                             ; preds = %3018
  %3020 = getelementptr inbounds i32, ptr %3, i64 %19
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = icmp eq i32 %3021, 0
  %3023 = icmp sgt i32 %5, 0
  br i1 %3022, label %3033, label %3024

3024:                                             ; preds = %3019
  br i1 %3023, label %3025, label %5404

3025:                                             ; preds = %3024
  %3026 = icmp sgt i32 %13, 1
  %3027 = icmp sgt i32 %13, 0
  %3028 = add i32 %13, -2
  %3029 = zext i32 %3028 to i64
  %3030 = zext i32 %13 to i64
  %3031 = add nuw i32 %5, 1
  %3032 = icmp eq i32 %13, 1
  br label %3177

3033:                                             ; preds = %3019
  br i1 %3023, label %3034, label %5404

3034:                                             ; preds = %3033
  %3035 = icmp sgt i32 %13, 1
  %3036 = icmp sgt i32 %13, 0
  %3037 = add i32 %13, -2
  %3038 = zext i32 %3037 to i64
  %3039 = zext i32 %13 to i64
  %3040 = add nuw i32 %5, 1
  %3041 = icmp eq i32 %13, 1
  br label %3042

3042:                                             ; preds = %3034, %3175
  %3043 = phi i64 [ 0, %3034 ], [ %3126, %3175 ]
  %3044 = phi i32 [ 0, %3034 ], [ %3127, %3175 ]
  %3045 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3035, label %3046, label %3115

3046:                                             ; preds = %3042, %3105
  %3047 = phi i32 [ %3114, %3105 ], [ 0, %3042 ]
  %3048 = phi i64 [ %3056, %3105 ], [ %3039, %3042 ]
  %3049 = phi i64 [ %3113, %3105 ], [ %3038, %3042 ]
  %3050 = phi i32 [ %3111, %3105 ], [ %3045, %3042 ]
  %3051 = sub i32 %3037, %3047
  %3052 = tail call i32 @llvm.smin.i32(i32 %3051, i32 0)
  %3053 = sub i32 %3051, %3052
  %3054 = zext i32 %3053 to i64
  %3055 = add nuw nsw i64 %3054, 1
  %3056 = add nsw i64 %3048, -1
  %3057 = icmp ult i32 %3053, 31
  br i1 %3057, label %3093, label %3058

3058:                                             ; preds = %3046
  %3059 = and i64 %3055, 8589934560
  %3060 = sub i64 %3049, %3059
  br label %3061

3061:                                             ; preds = %3061, %3058
  %3062 = phi i64 [ 0, %3058 ], [ %3085, %3061 ]
  %3063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3081, %3061 ]
  %3064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3082, %3061 ]
  %3065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3083, %3061 ]
  %3066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3084, %3061 ]
  %3067 = sub i64 %3049, %3062
  %3068 = getelementptr inbounds i32, ptr %9, i64 %3067
  %3069 = getelementptr inbounds i32, ptr %3068, i64 -7
  %3070 = load <8 x i32>, ptr %3069, align 4, !tbaa !5
  %3071 = shufflevector <8 x i32> %3070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3072 = getelementptr inbounds i32, ptr %3068, i64 -15
  %3073 = load <8 x i32>, ptr %3072, align 4, !tbaa !5
  %3074 = shufflevector <8 x i32> %3073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3075 = getelementptr inbounds i32, ptr %3068, i64 -23
  %3076 = load <8 x i32>, ptr %3075, align 4, !tbaa !5
  %3077 = shufflevector <8 x i32> %3076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3078 = getelementptr inbounds i32, ptr %3068, i64 -31
  %3079 = load <8 x i32>, ptr %3078, align 4, !tbaa !5
  %3080 = shufflevector <8 x i32> %3079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3081 = mul <8 x i32> %3071, %3063
  %3082 = mul <8 x i32> %3074, %3064
  %3083 = mul <8 x i32> %3077, %3065
  %3084 = mul <8 x i32> %3080, %3066
  %3085 = add nuw i64 %3062, 32
  %3086 = icmp eq i64 %3085, %3059
  br i1 %3086, label %3087, label %3061, !llvm.loop !304

3087:                                             ; preds = %3061
  %3088 = mul <8 x i32> %3082, %3081
  %3089 = mul <8 x i32> %3083, %3088
  %3090 = mul <8 x i32> %3084, %3089
  %3091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3090)
  %3092 = icmp eq i64 %3055, %3059
  br i1 %3092, label %3105, label %3093

3093:                                             ; preds = %3046, %3087
  %3094 = phi i64 [ %3049, %3046 ], [ %3060, %3087 ]
  %3095 = phi i32 [ 1, %3046 ], [ %3091, %3087 ]
  br label %3096

3096:                                             ; preds = %3093, %3096
  %3097 = phi i64 [ %3102, %3096 ], [ %3094, %3093 ]
  %3098 = phi i32 [ %3101, %3096 ], [ %3095, %3093 ]
  %3099 = getelementptr inbounds i32, ptr %9, i64 %3097
  %3100 = load i32, ptr %3099, align 4, !tbaa !5
  %3101 = mul nsw i32 %3100, %3098
  %3102 = add nsw i64 %3097, -1
  %3103 = trunc i64 %3097 to i32
  %3104 = icmp sgt i32 %3103, 0
  br i1 %3104, label %3096, label %3105, !llvm.loop !305

3105:                                             ; preds = %3096, %3087
  %3106 = phi i32 [ %3091, %3087 ], [ %3101, %3096 ]
  %3107 = and i64 %3056, 4294967295
  %3108 = getelementptr inbounds i32, ptr %6, i64 %3107
  %3109 = load i32, ptr %3108, align 4, !tbaa !5
  %3110 = mul nsw i32 %3109, %3106
  %3111 = add nsw i32 %3110, %3050
  %3112 = icmp sgt i64 %3048, 2
  %3113 = add nsw i64 %3049, -1
  %3114 = add i32 %3047, 1
  br i1 %3112, label %3046, label %3115, !llvm.loop !306

3115:                                             ; preds = %3105, %3042
  %3116 = phi i32 [ %3045, %3042 ], [ %3111, %3105 ]
  %3117 = sext i32 %3116 to i64
  %3118 = getelementptr inbounds double, ptr %2, i64 %3117
  %3119 = load double, ptr %3118, align 8, !tbaa !18
  %3120 = getelementptr inbounds i32, ptr %3011, i64 %3117
  %3121 = load i32, ptr %3120, align 4, !tbaa !5
  %3122 = sitofp i64 %3043 to double
  %3123 = sitofp i32 %3121 to double
  %3124 = fmul fast double %3119, %3123
  %3125 = fadd fast double %3124, %3122
  %3126 = fptosi double %3125 to i64
  %3127 = add nuw nsw i32 %3044, 1
  br i1 %3036, label %3128, label %3175

3128:                                             ; preds = %3115
  %3129 = load i32, ptr %4, align 4, !tbaa !5
  %3130 = load i32, ptr %12, align 4, !tbaa !5
  %3131 = add nsw i32 %3130, -1
  %3132 = icmp slt i32 %3129, %3131
  br i1 %3132, label %3152, label %3133

3133:                                             ; preds = %3128
  %3134 = icmp eq i32 %3129, %3131
  br i1 %3134, label %3135, label %3168

3135:                                             ; preds = %3133
  store i32 0, ptr %4, align 4, !tbaa !5
  %3136 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3136, ptr %6, align 4, !tbaa !5
  br i1 %3041, label %3175, label %3137

3137:                                             ; preds = %3135, %3162
  %3138 = phi i64 [ %3166, %3162 ], [ 1, %3135 ]
  %3139 = getelementptr inbounds i32, ptr %4, i64 %3138
  %3140 = load i32, ptr %3139, align 4, !tbaa !5
  %3141 = getelementptr inbounds i32, ptr %12, i64 %3138
  %3142 = load i32, ptr %3141, align 4, !tbaa !5
  %3143 = add nsw i32 %3142, -1
  %3144 = icmp slt i32 %3140, %3143
  br i1 %3144, label %3145, label %3160

3145:                                             ; preds = %3137
  br i1 %3132, label %3152, label %3146

3146:                                             ; preds = %3145
  %3147 = getelementptr inbounds i32, ptr %7, i64 %3138
  %3148 = load i32, ptr %3147, align 4, !tbaa !5
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3138
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = add nsw i32 %3150, %3148
  store i32 %3151, ptr %3149, align 4, !tbaa !5
  br label %3170

3152:                                             ; preds = %3128, %3145
  %3153 = phi i32 [ %3140, %3145 ], [ %3129, %3128 ]
  %3154 = phi ptr [ %3139, %3145 ], [ %4, %3128 ]
  %3155 = phi i64 [ %3138, %3145 ], [ 0, %3128 ]
  %3156 = add nsw i32 %3153, 1
  store i32 %3156, ptr %3154, align 4, !tbaa !5
  %3157 = getelementptr inbounds i32, ptr %7, i64 %3155
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = getelementptr inbounds i32, ptr %6, i64 %3155
  br label %3170

3160:                                             ; preds = %3137
  %3161 = icmp eq i32 %3140, %3143
  br i1 %3161, label %3162, label %3168

3162:                                             ; preds = %3160
  store i32 0, ptr %3139, align 4, !tbaa !5
  %3163 = getelementptr inbounds i32, ptr %8, i64 %3138
  %3164 = load i32, ptr %3163, align 4, !tbaa !5
  %3165 = getelementptr inbounds i32, ptr %6, i64 %3138
  store i32 %3164, ptr %3165, align 4, !tbaa !5
  %3166 = add nuw nsw i64 %3138, 1
  %3167 = icmp eq i64 %3166, %3039
  br i1 %3167, label %3175, label %3137, !llvm.loop !307

3168:                                             ; preds = %3133, %3160
  store i64 %3126, ptr %3013, align 8, !tbaa !120
  %3169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3170:                                             ; preds = %3146, %3152
  %3171 = phi ptr [ %3159, %3152 ], [ %3139, %3146 ]
  %3172 = phi i32 [ %3158, %3152 ], [ 1, %3146 ]
  %3173 = load i32, ptr %3171, align 4, !tbaa !5
  %3174 = add nsw i32 %3173, %3172
  store i32 %3174, ptr %3171, align 4, !tbaa !5
  br label %3175

3175:                                             ; preds = %3162, %3170, %3135, %3115
  %3176 = icmp eq i32 %3127, %5
  br i1 %3176, label %5398, label %3042, !llvm.loop !308

3177:                                             ; preds = %3025, %3314
  %3178 = phi i64 [ 0, %3025 ], [ %3262, %3314 ]
  %3179 = phi i32 [ 0, %3025 ], [ %3263, %3314 ]
  %3180 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3026, label %3181, label %3250

3181:                                             ; preds = %3177, %3240
  %3182 = phi i32 [ %3249, %3240 ], [ 0, %3177 ]
  %3183 = phi i64 [ %3191, %3240 ], [ %3030, %3177 ]
  %3184 = phi i64 [ %3248, %3240 ], [ %3029, %3177 ]
  %3185 = phi i32 [ %3246, %3240 ], [ %3180, %3177 ]
  %3186 = sub i32 %3028, %3182
  %3187 = tail call i32 @llvm.smin.i32(i32 %3186, i32 0)
  %3188 = sub i32 %3186, %3187
  %3189 = zext i32 %3188 to i64
  %3190 = add nuw nsw i64 %3189, 1
  %3191 = add nsw i64 %3183, -1
  %3192 = icmp ult i32 %3188, 31
  br i1 %3192, label %3228, label %3193

3193:                                             ; preds = %3181
  %3194 = and i64 %3190, 8589934560
  %3195 = sub i64 %3184, %3194
  br label %3196

3196:                                             ; preds = %3196, %3193
  %3197 = phi i64 [ 0, %3193 ], [ %3220, %3196 ]
  %3198 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3216, %3196 ]
  %3199 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3217, %3196 ]
  %3200 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3218, %3196 ]
  %3201 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3219, %3196 ]
  %3202 = sub i64 %3184, %3197
  %3203 = getelementptr inbounds i32, ptr %11, i64 %3202
  %3204 = getelementptr inbounds i32, ptr %3203, i64 -7
  %3205 = load <8 x i32>, ptr %3204, align 4, !tbaa !5
  %3206 = shufflevector <8 x i32> %3205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3207 = getelementptr inbounds i32, ptr %3203, i64 -15
  %3208 = load <8 x i32>, ptr %3207, align 4, !tbaa !5
  %3209 = shufflevector <8 x i32> %3208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3210 = getelementptr inbounds i32, ptr %3203, i64 -23
  %3211 = load <8 x i32>, ptr %3210, align 4, !tbaa !5
  %3212 = shufflevector <8 x i32> %3211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3213 = getelementptr inbounds i32, ptr %3203, i64 -31
  %3214 = load <8 x i32>, ptr %3213, align 4, !tbaa !5
  %3215 = shufflevector <8 x i32> %3214, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3216 = mul <8 x i32> %3206, %3198
  %3217 = mul <8 x i32> %3209, %3199
  %3218 = mul <8 x i32> %3212, %3200
  %3219 = mul <8 x i32> %3215, %3201
  %3220 = add nuw i64 %3197, 32
  %3221 = icmp eq i64 %3220, %3194
  br i1 %3221, label %3222, label %3196, !llvm.loop !309

3222:                                             ; preds = %3196
  %3223 = mul <8 x i32> %3217, %3216
  %3224 = mul <8 x i32> %3218, %3223
  %3225 = mul <8 x i32> %3219, %3224
  %3226 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3225)
  %3227 = icmp eq i64 %3190, %3194
  br i1 %3227, label %3240, label %3228

3228:                                             ; preds = %3181, %3222
  %3229 = phi i64 [ %3184, %3181 ], [ %3195, %3222 ]
  %3230 = phi i32 [ 1, %3181 ], [ %3226, %3222 ]
  br label %3231

3231:                                             ; preds = %3228, %3231
  %3232 = phi i64 [ %3237, %3231 ], [ %3229, %3228 ]
  %3233 = phi i32 [ %3236, %3231 ], [ %3230, %3228 ]
  %3234 = getelementptr inbounds i32, ptr %11, i64 %3232
  %3235 = load i32, ptr %3234, align 4, !tbaa !5
  %3236 = mul nsw i32 %3235, %3233
  %3237 = add nsw i64 %3232, -1
  %3238 = trunc i64 %3232 to i32
  %3239 = icmp sgt i32 %3238, 0
  br i1 %3239, label %3231, label %3240, !llvm.loop !310

3240:                                             ; preds = %3231, %3222
  %3241 = phi i32 [ %3226, %3222 ], [ %3236, %3231 ]
  %3242 = and i64 %3191, 4294967295
  %3243 = getelementptr inbounds i32, ptr %6, i64 %3242
  %3244 = load i32, ptr %3243, align 4, !tbaa !5
  %3245 = mul nsw i32 %3244, %3241
  %3246 = add nsw i32 %3245, %3185
  %3247 = icmp sgt i64 %3183, 2
  %3248 = add nsw i64 %3184, -1
  %3249 = add i32 %3182, 1
  br i1 %3247, label %3181, label %3250, !llvm.loop !311

3250:                                             ; preds = %3240, %3177
  %3251 = phi i32 [ %3180, %3177 ], [ %3246, %3240 ]
  %3252 = icmp slt i32 %3251, %5
  br i1 %3252, label %3255, label %3253

3253:                                             ; preds = %3250
  %3254 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

3255:                                             ; preds = %3250
  %3256 = sext i32 %3251 to i64
  %3257 = getelementptr inbounds i32, ptr %3011, i64 %3256
  %3258 = load i32, ptr %3257, align 4, !tbaa !5
  %3259 = sitofp i64 %3178 to double
  %3260 = sitofp i32 %3258 to double
  %3261 = fadd fast double %3259, %3260
  %3262 = fptosi double %3261 to i64
  store i64 %3262, ptr %3013, align 8, !tbaa !120
  %3263 = add nuw nsw i32 %3179, 1
  br i1 %3027, label %3264, label %3314

3264:                                             ; preds = %3255
  %3265 = load i32, ptr %4, align 4, !tbaa !5
  %3266 = load i32, ptr %12, align 4, !tbaa !5
  %3267 = add nsw i32 %3266, -1
  %3268 = icmp slt i32 %3265, %3267
  br i1 %3268, label %3291, label %3269

3269:                                             ; preds = %3264
  %3270 = icmp eq i32 %3265, %3267
  br i1 %3270, label %3271, label %3307

3271:                                             ; preds = %3269
  store i32 0, ptr %4, align 4, !tbaa !5
  %3272 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3272, ptr %6, align 4, !tbaa !5
  br i1 %3032, label %3314, label %3273

3273:                                             ; preds = %3271, %3301
  %3274 = phi i64 [ %3305, %3301 ], [ 1, %3271 ]
  %3275 = getelementptr inbounds i32, ptr %4, i64 %3274
  %3276 = load i32, ptr %3275, align 4, !tbaa !5
  %3277 = getelementptr inbounds i32, ptr %12, i64 %3274
  %3278 = load i32, ptr %3277, align 4, !tbaa !5
  %3279 = add nsw i32 %3278, -1
  %3280 = icmp slt i32 %3276, %3279
  br i1 %3280, label %3281, label %3299

3281:                                             ; preds = %3273
  br i1 %3268, label %3291, label %3282

3282:                                             ; preds = %3281
  %3283 = shl i64 %3274, 32
  %3284 = add i64 %3283, -4294967296
  %3285 = ashr exact i64 %3284, 32
  %3286 = getelementptr inbounds i32, ptr %7, i64 %3285
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = getelementptr inbounds i32, ptr %6, i64 %3274
  %3289 = load i32, ptr %3288, align 4, !tbaa !5
  %3290 = add nsw i32 %3289, %3287
  store i32 %3290, ptr %3288, align 4, !tbaa !5
  br label %3309

3291:                                             ; preds = %3264, %3281
  %3292 = phi i32 [ %3276, %3281 ], [ %3265, %3264 ]
  %3293 = phi ptr [ %3275, %3281 ], [ %4, %3264 ]
  %3294 = phi i64 [ %3274, %3281 ], [ 0, %3264 ]
  %3295 = add nsw i32 %3292, 1
  store i32 %3295, ptr %3293, align 4, !tbaa !5
  %3296 = getelementptr inbounds i32, ptr %7, i64 %3294
  %3297 = load i32, ptr %3296, align 4, !tbaa !5
  %3298 = getelementptr inbounds i32, ptr %6, i64 %3294
  br label %3309

3299:                                             ; preds = %3273
  %3300 = icmp eq i32 %3276, %3279
  br i1 %3300, label %3301, label %3307

3301:                                             ; preds = %3299
  store i32 0, ptr %3275, align 4, !tbaa !5
  %3302 = getelementptr inbounds i32, ptr %8, i64 %3274
  %3303 = load i32, ptr %3302, align 4, !tbaa !5
  %3304 = getelementptr inbounds i32, ptr %6, i64 %3274
  store i32 %3303, ptr %3304, align 4, !tbaa !5
  %3305 = add nuw nsw i64 %3274, 1
  %3306 = icmp eq i64 %3305, %3030
  br i1 %3306, label %3314, label %3273, !llvm.loop !312

3307:                                             ; preds = %3269, %3299
  %3308 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3309:                                             ; preds = %3282, %3291
  %3310 = phi ptr [ %3298, %3291 ], [ %3275, %3282 ]
  %3311 = phi i32 [ %3297, %3291 ], [ 1, %3282 ]
  %3312 = load i32, ptr %3310, align 4, !tbaa !5
  %3313 = add nsw i32 %3312, %3311
  store i32 %3313, ptr %3310, align 4, !tbaa !5
  br label %3314

3314:                                             ; preds = %3301, %3309, %3271, %3255
  %3315 = icmp eq i32 %3263, %5
  br i1 %3315, label %5404, label %3177, !llvm.loop !313

3316:                                             ; preds = %3018
  %3317 = getelementptr inbounds i32, ptr %3, i64 %19
  %3318 = load i32, ptr %3317, align 4, !tbaa !5
  %3319 = icmp eq i32 %3318, 0
  %3320 = icmp sgt i32 %5, 0
  br i1 %3319, label %3330, label %3321

3321:                                             ; preds = %3316
  br i1 %3320, label %3322, label %5404

3322:                                             ; preds = %3321
  %3323 = icmp sgt i32 %13, 1
  %3324 = icmp sgt i32 %13, 0
  %3325 = add i32 %13, -2
  %3326 = zext i32 %3325 to i64
  %3327 = zext i32 %13 to i64
  %3328 = add nuw i32 %5, 1
  %3329 = icmp eq i32 %13, 1
  br label %3469

3330:                                             ; preds = %3316
  br i1 %3320, label %3331, label %5404

3331:                                             ; preds = %3330
  %3332 = icmp sgt i32 %13, 1
  %3333 = icmp sgt i32 %13, 0
  %3334 = add i32 %13, -2
  %3335 = zext i32 %3334 to i64
  %3336 = zext i32 %13 to i64
  %3337 = add nuw i32 %5, 1
  %3338 = icmp eq i32 %13, 1
  br label %3339

3339:                                             ; preds = %3331, %3467
  %3340 = phi i64 [ 0, %3331 ], [ %3418, %3467 ]
  %3341 = phi i32 [ 0, %3331 ], [ %3419, %3467 ]
  %3342 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3332, label %3343, label %3412

3343:                                             ; preds = %3339, %3402
  %3344 = phi i32 [ %3411, %3402 ], [ 0, %3339 ]
  %3345 = phi i64 [ %3353, %3402 ], [ %3336, %3339 ]
  %3346 = phi i64 [ %3410, %3402 ], [ %3335, %3339 ]
  %3347 = phi i32 [ %3408, %3402 ], [ %3342, %3339 ]
  %3348 = sub i32 %3334, %3344
  %3349 = tail call i32 @llvm.smin.i32(i32 %3348, i32 0)
  %3350 = sub i32 %3348, %3349
  %3351 = zext i32 %3350 to i64
  %3352 = add nuw nsw i64 %3351, 1
  %3353 = add nsw i64 %3345, -1
  %3354 = icmp ult i32 %3350, 31
  br i1 %3354, label %3390, label %3355

3355:                                             ; preds = %3343
  %3356 = and i64 %3352, 8589934560
  %3357 = sub i64 %3346, %3356
  br label %3358

3358:                                             ; preds = %3358, %3355
  %3359 = phi i64 [ 0, %3355 ], [ %3382, %3358 ]
  %3360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3378, %3358 ]
  %3361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3379, %3358 ]
  %3362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3380, %3358 ]
  %3363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3381, %3358 ]
  %3364 = sub i64 %3346, %3359
  %3365 = getelementptr inbounds i32, ptr %9, i64 %3364
  %3366 = getelementptr inbounds i32, ptr %3365, i64 -7
  %3367 = load <8 x i32>, ptr %3366, align 4, !tbaa !5
  %3368 = shufflevector <8 x i32> %3367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3369 = getelementptr inbounds i32, ptr %3365, i64 -15
  %3370 = load <8 x i32>, ptr %3369, align 4, !tbaa !5
  %3371 = shufflevector <8 x i32> %3370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3372 = getelementptr inbounds i32, ptr %3365, i64 -23
  %3373 = load <8 x i32>, ptr %3372, align 4, !tbaa !5
  %3374 = shufflevector <8 x i32> %3373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3375 = getelementptr inbounds i32, ptr %3365, i64 -31
  %3376 = load <8 x i32>, ptr %3375, align 4, !tbaa !5
  %3377 = shufflevector <8 x i32> %3376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3378 = mul <8 x i32> %3368, %3360
  %3379 = mul <8 x i32> %3371, %3361
  %3380 = mul <8 x i32> %3374, %3362
  %3381 = mul <8 x i32> %3377, %3363
  %3382 = add nuw i64 %3359, 32
  %3383 = icmp eq i64 %3382, %3356
  br i1 %3383, label %3384, label %3358, !llvm.loop !314

3384:                                             ; preds = %3358
  %3385 = mul <8 x i32> %3379, %3378
  %3386 = mul <8 x i32> %3380, %3385
  %3387 = mul <8 x i32> %3381, %3386
  %3388 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3387)
  %3389 = icmp eq i64 %3352, %3356
  br i1 %3389, label %3402, label %3390

3390:                                             ; preds = %3343, %3384
  %3391 = phi i64 [ %3346, %3343 ], [ %3357, %3384 ]
  %3392 = phi i32 [ 1, %3343 ], [ %3388, %3384 ]
  br label %3393

3393:                                             ; preds = %3390, %3393
  %3394 = phi i64 [ %3399, %3393 ], [ %3391, %3390 ]
  %3395 = phi i32 [ %3398, %3393 ], [ %3392, %3390 ]
  %3396 = getelementptr inbounds i32, ptr %9, i64 %3394
  %3397 = load i32, ptr %3396, align 4, !tbaa !5
  %3398 = mul nsw i32 %3397, %3395
  %3399 = add nsw i64 %3394, -1
  %3400 = trunc i64 %3394 to i32
  %3401 = icmp sgt i32 %3400, 0
  br i1 %3401, label %3393, label %3402, !llvm.loop !315

3402:                                             ; preds = %3393, %3384
  %3403 = phi i32 [ %3388, %3384 ], [ %3398, %3393 ]
  %3404 = and i64 %3353, 4294967295
  %3405 = getelementptr inbounds i32, ptr %6, i64 %3404
  %3406 = load i32, ptr %3405, align 4, !tbaa !5
  %3407 = mul nsw i32 %3406, %3403
  %3408 = add nsw i32 %3407, %3347
  %3409 = icmp sgt i64 %3345, 2
  %3410 = add nsw i64 %3346, -1
  %3411 = add i32 %3344, 1
  br i1 %3409, label %3343, label %3412, !llvm.loop !316

3412:                                             ; preds = %3402, %3339
  %3413 = phi i32 [ %3342, %3339 ], [ %3408, %3402 ]
  %3414 = sext i32 %3413 to i64
  %3415 = getelementptr inbounds i32, ptr %3011, i64 %3414
  %3416 = load i32, ptr %3415, align 4, !tbaa !5
  %3417 = sext i32 %3416 to i64
  %3418 = add nsw i64 %3340, %3417
  %3419 = add nuw nsw i32 %3341, 1
  br i1 %3333, label %3420, label %3467

3420:                                             ; preds = %3412
  %3421 = load i32, ptr %4, align 4, !tbaa !5
  %3422 = load i32, ptr %12, align 4, !tbaa !5
  %3423 = add nsw i32 %3422, -1
  %3424 = icmp slt i32 %3421, %3423
  br i1 %3424, label %3444, label %3425

3425:                                             ; preds = %3420
  %3426 = icmp eq i32 %3421, %3423
  br i1 %3426, label %3427, label %3460

3427:                                             ; preds = %3425
  store i32 0, ptr %4, align 4, !tbaa !5
  %3428 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3428, ptr %6, align 4, !tbaa !5
  br i1 %3338, label %3467, label %3429

3429:                                             ; preds = %3427, %3454
  %3430 = phi i64 [ %3458, %3454 ], [ 1, %3427 ]
  %3431 = getelementptr inbounds i32, ptr %4, i64 %3430
  %3432 = load i32, ptr %3431, align 4, !tbaa !5
  %3433 = getelementptr inbounds i32, ptr %12, i64 %3430
  %3434 = load i32, ptr %3433, align 4, !tbaa !5
  %3435 = add nsw i32 %3434, -1
  %3436 = icmp slt i32 %3432, %3435
  br i1 %3436, label %3437, label %3452

3437:                                             ; preds = %3429
  br i1 %3424, label %3444, label %3438

3438:                                             ; preds = %3437
  %3439 = getelementptr inbounds i32, ptr %7, i64 %3430
  %3440 = load i32, ptr %3439, align 4, !tbaa !5
  %3441 = getelementptr inbounds i32, ptr %6, i64 %3430
  %3442 = load i32, ptr %3441, align 4, !tbaa !5
  %3443 = add nsw i32 %3442, %3440
  store i32 %3443, ptr %3441, align 4, !tbaa !5
  br label %3462

3444:                                             ; preds = %3420, %3437
  %3445 = phi i32 [ %3432, %3437 ], [ %3421, %3420 ]
  %3446 = phi ptr [ %3431, %3437 ], [ %4, %3420 ]
  %3447 = phi i64 [ %3430, %3437 ], [ 0, %3420 ]
  %3448 = add nsw i32 %3445, 1
  store i32 %3448, ptr %3446, align 4, !tbaa !5
  %3449 = getelementptr inbounds i32, ptr %7, i64 %3447
  %3450 = load i32, ptr %3449, align 4, !tbaa !5
  %3451 = getelementptr inbounds i32, ptr %6, i64 %3447
  br label %3462

3452:                                             ; preds = %3429
  %3453 = icmp eq i32 %3432, %3435
  br i1 %3453, label %3454, label %3460

3454:                                             ; preds = %3452
  store i32 0, ptr %3431, align 4, !tbaa !5
  %3455 = getelementptr inbounds i32, ptr %8, i64 %3430
  %3456 = load i32, ptr %3455, align 4, !tbaa !5
  %3457 = getelementptr inbounds i32, ptr %6, i64 %3430
  store i32 %3456, ptr %3457, align 4, !tbaa !5
  %3458 = add nuw nsw i64 %3430, 1
  %3459 = icmp eq i64 %3458, %3336
  br i1 %3459, label %3467, label %3429, !llvm.loop !317

3460:                                             ; preds = %3425, %3452
  store i64 %3418, ptr %3013, align 8, !tbaa !120
  %3461 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3462:                                             ; preds = %3438, %3444
  %3463 = phi ptr [ %3451, %3444 ], [ %3431, %3438 ]
  %3464 = phi i32 [ %3450, %3444 ], [ 1, %3438 ]
  %3465 = load i32, ptr %3463, align 4, !tbaa !5
  %3466 = add nsw i32 %3465, %3464
  store i32 %3466, ptr %3463, align 4, !tbaa !5
  br label %3467

3467:                                             ; preds = %3454, %3462, %3427, %3412
  %3468 = icmp eq i32 %3419, %5
  br i1 %3468, label %5399, label %3339, !llvm.loop !318

3469:                                             ; preds = %3322, %3604
  %3470 = phi i64 [ 0, %3322 ], [ %3552, %3604 ]
  %3471 = phi i32 [ 0, %3322 ], [ %3553, %3604 ]
  %3472 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3323, label %3473, label %3542

3473:                                             ; preds = %3469, %3532
  %3474 = phi i32 [ %3541, %3532 ], [ 0, %3469 ]
  %3475 = phi i64 [ %3483, %3532 ], [ %3327, %3469 ]
  %3476 = phi i64 [ %3540, %3532 ], [ %3326, %3469 ]
  %3477 = phi i32 [ %3538, %3532 ], [ %3472, %3469 ]
  %3478 = sub i32 %3325, %3474
  %3479 = tail call i32 @llvm.smin.i32(i32 %3478, i32 0)
  %3480 = sub i32 %3478, %3479
  %3481 = zext i32 %3480 to i64
  %3482 = add nuw nsw i64 %3481, 1
  %3483 = add nsw i64 %3475, -1
  %3484 = icmp ult i32 %3480, 31
  br i1 %3484, label %3520, label %3485

3485:                                             ; preds = %3473
  %3486 = and i64 %3482, 8589934560
  %3487 = sub i64 %3476, %3486
  br label %3488

3488:                                             ; preds = %3488, %3485
  %3489 = phi i64 [ 0, %3485 ], [ %3512, %3488 ]
  %3490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3508, %3488 ]
  %3491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3509, %3488 ]
  %3492 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3510, %3488 ]
  %3493 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3511, %3488 ]
  %3494 = sub i64 %3476, %3489
  %3495 = getelementptr inbounds i32, ptr %11, i64 %3494
  %3496 = getelementptr inbounds i32, ptr %3495, i64 -7
  %3497 = load <8 x i32>, ptr %3496, align 4, !tbaa !5
  %3498 = shufflevector <8 x i32> %3497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3499 = getelementptr inbounds i32, ptr %3495, i64 -15
  %3500 = load <8 x i32>, ptr %3499, align 4, !tbaa !5
  %3501 = shufflevector <8 x i32> %3500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3502 = getelementptr inbounds i32, ptr %3495, i64 -23
  %3503 = load <8 x i32>, ptr %3502, align 4, !tbaa !5
  %3504 = shufflevector <8 x i32> %3503, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3505 = getelementptr inbounds i32, ptr %3495, i64 -31
  %3506 = load <8 x i32>, ptr %3505, align 4, !tbaa !5
  %3507 = shufflevector <8 x i32> %3506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3508 = mul <8 x i32> %3498, %3490
  %3509 = mul <8 x i32> %3501, %3491
  %3510 = mul <8 x i32> %3504, %3492
  %3511 = mul <8 x i32> %3507, %3493
  %3512 = add nuw i64 %3489, 32
  %3513 = icmp eq i64 %3512, %3486
  br i1 %3513, label %3514, label %3488, !llvm.loop !319

3514:                                             ; preds = %3488
  %3515 = mul <8 x i32> %3509, %3508
  %3516 = mul <8 x i32> %3510, %3515
  %3517 = mul <8 x i32> %3511, %3516
  %3518 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3517)
  %3519 = icmp eq i64 %3482, %3486
  br i1 %3519, label %3532, label %3520

3520:                                             ; preds = %3473, %3514
  %3521 = phi i64 [ %3476, %3473 ], [ %3487, %3514 ]
  %3522 = phi i32 [ 1, %3473 ], [ %3518, %3514 ]
  br label %3523

3523:                                             ; preds = %3520, %3523
  %3524 = phi i64 [ %3529, %3523 ], [ %3521, %3520 ]
  %3525 = phi i32 [ %3528, %3523 ], [ %3522, %3520 ]
  %3526 = getelementptr inbounds i32, ptr %11, i64 %3524
  %3527 = load i32, ptr %3526, align 4, !tbaa !5
  %3528 = mul nsw i32 %3527, %3525
  %3529 = add nsw i64 %3524, -1
  %3530 = trunc i64 %3524 to i32
  %3531 = icmp sgt i32 %3530, 0
  br i1 %3531, label %3523, label %3532, !llvm.loop !320

3532:                                             ; preds = %3523, %3514
  %3533 = phi i32 [ %3518, %3514 ], [ %3528, %3523 ]
  %3534 = and i64 %3483, 4294967295
  %3535 = getelementptr inbounds i32, ptr %6, i64 %3534
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = mul nsw i32 %3536, %3533
  %3538 = add nsw i32 %3537, %3477
  %3539 = icmp sgt i64 %3475, 2
  %3540 = add nsw i64 %3476, -1
  %3541 = add i32 %3474, 1
  br i1 %3539, label %3473, label %3542, !llvm.loop !321

3542:                                             ; preds = %3532, %3469
  %3543 = phi i32 [ %3472, %3469 ], [ %3538, %3532 ]
  %3544 = icmp slt i32 %3543, %5
  br i1 %3544, label %3547, label %3545

3545:                                             ; preds = %3542
  %3546 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

3547:                                             ; preds = %3542
  %3548 = sext i32 %3543 to i64
  %3549 = getelementptr inbounds i32, ptr %3011, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !5
  %3551 = sext i32 %3550 to i64
  %3552 = add nsw i64 %3470, %3551
  store i64 %3552, ptr %3013, align 8, !tbaa !120
  %3553 = add nuw nsw i32 %3471, 1
  br i1 %3324, label %3554, label %3604

3554:                                             ; preds = %3547
  %3555 = load i32, ptr %4, align 4, !tbaa !5
  %3556 = load i32, ptr %12, align 4, !tbaa !5
  %3557 = add nsw i32 %3556, -1
  %3558 = icmp slt i32 %3555, %3557
  br i1 %3558, label %3581, label %3559

3559:                                             ; preds = %3554
  %3560 = icmp eq i32 %3555, %3557
  br i1 %3560, label %3561, label %3597

3561:                                             ; preds = %3559
  store i32 0, ptr %4, align 4, !tbaa !5
  %3562 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3562, ptr %6, align 4, !tbaa !5
  br i1 %3329, label %3604, label %3563

3563:                                             ; preds = %3561, %3591
  %3564 = phi i64 [ %3595, %3591 ], [ 1, %3561 ]
  %3565 = getelementptr inbounds i32, ptr %4, i64 %3564
  %3566 = load i32, ptr %3565, align 4, !tbaa !5
  %3567 = getelementptr inbounds i32, ptr %12, i64 %3564
  %3568 = load i32, ptr %3567, align 4, !tbaa !5
  %3569 = add nsw i32 %3568, -1
  %3570 = icmp slt i32 %3566, %3569
  br i1 %3570, label %3571, label %3589

3571:                                             ; preds = %3563
  br i1 %3558, label %3581, label %3572

3572:                                             ; preds = %3571
  %3573 = shl i64 %3564, 32
  %3574 = add i64 %3573, -4294967296
  %3575 = ashr exact i64 %3574, 32
  %3576 = getelementptr inbounds i32, ptr %7, i64 %3575
  %3577 = load i32, ptr %3576, align 4, !tbaa !5
  %3578 = getelementptr inbounds i32, ptr %6, i64 %3564
  %3579 = load i32, ptr %3578, align 4, !tbaa !5
  %3580 = add nsw i32 %3579, %3577
  store i32 %3580, ptr %3578, align 4, !tbaa !5
  br label %3599

3581:                                             ; preds = %3554, %3571
  %3582 = phi i32 [ %3566, %3571 ], [ %3555, %3554 ]
  %3583 = phi ptr [ %3565, %3571 ], [ %4, %3554 ]
  %3584 = phi i64 [ %3564, %3571 ], [ 0, %3554 ]
  %3585 = add nsw i32 %3582, 1
  store i32 %3585, ptr %3583, align 4, !tbaa !5
  %3586 = getelementptr inbounds i32, ptr %7, i64 %3584
  %3587 = load i32, ptr %3586, align 4, !tbaa !5
  %3588 = getelementptr inbounds i32, ptr %6, i64 %3584
  br label %3599

3589:                                             ; preds = %3563
  %3590 = icmp eq i32 %3566, %3569
  br i1 %3590, label %3591, label %3597

3591:                                             ; preds = %3589
  store i32 0, ptr %3565, align 4, !tbaa !5
  %3592 = getelementptr inbounds i32, ptr %8, i64 %3564
  %3593 = load i32, ptr %3592, align 4, !tbaa !5
  %3594 = getelementptr inbounds i32, ptr %6, i64 %3564
  store i32 %3593, ptr %3594, align 4, !tbaa !5
  %3595 = add nuw nsw i64 %3564, 1
  %3596 = icmp eq i64 %3595, %3327
  br i1 %3596, label %3604, label %3563, !llvm.loop !322

3597:                                             ; preds = %3559, %3589
  %3598 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3599:                                             ; preds = %3572, %3581
  %3600 = phi ptr [ %3588, %3581 ], [ %3565, %3572 ]
  %3601 = phi i32 [ %3587, %3581 ], [ 1, %3572 ]
  %3602 = load i32, ptr %3600, align 4, !tbaa !5
  %3603 = add nsw i32 %3602, %3601
  store i32 %3603, ptr %3600, align 4, !tbaa !5
  br label %3604

3604:                                             ; preds = %3591, %3599, %3561, %3547
  %3605 = icmp eq i32 %3553, %5
  br i1 %3605, label %5404, label %3469, !llvm.loop !323

3606:                                             ; preds = %3018
  %3607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 313, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

3608:                                             ; preds = %18
  %3609 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3610 = load ptr, ptr %3609, align 8, !tbaa !9
  %3611 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3612 = load ptr, ptr %3611, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3612, align 8, !tbaa !18
  %3613 = icmp eq i32 %13, 0
  br i1 %3613, label %3614, label %3617

3614:                                             ; preds = %3608
  %3615 = load i32, ptr %3610, align 4, !tbaa !5
  %3616 = sitofp i32 %3615 to double
  store double %3616, ptr %3612, align 8, !tbaa !18
  br label %5404

3617:                                             ; preds = %3608
  switch i32 %1, label %4201 [
    i32 1, label %3618
    i32 0, label %3911
  ]

3618:                                             ; preds = %3617
  %3619 = getelementptr inbounds i32, ptr %3, i64 %19
  %3620 = load i32, ptr %3619, align 4, !tbaa !5
  %3621 = icmp eq i32 %3620, 0
  %3622 = icmp sgt i32 %5, 0
  br i1 %3621, label %3632, label %3623

3623:                                             ; preds = %3618
  br i1 %3622, label %3624, label %5404

3624:                                             ; preds = %3623
  %3625 = icmp sgt i32 %13, 1
  %3626 = icmp sgt i32 %13, 0
  %3627 = add i32 %13, -2
  %3628 = zext i32 %3627 to i64
  %3629 = zext i32 %13 to i64
  %3630 = add nuw i32 %5, 1
  %3631 = icmp eq i32 %13, 1
  br label %3774

3632:                                             ; preds = %3618
  br i1 %3622, label %3633, label %5404

3633:                                             ; preds = %3632
  %3634 = icmp sgt i32 %13, 1
  %3635 = icmp sgt i32 %13, 0
  %3636 = add i32 %13, -2
  %3637 = zext i32 %3636 to i64
  %3638 = zext i32 %13 to i64
  %3639 = add nuw i32 %5, 1
  %3640 = icmp eq i32 %13, 1
  br label %3641

3641:                                             ; preds = %3633, %3772
  %3642 = phi double [ 0.000000e+00, %3633 ], [ %3723, %3772 ]
  %3643 = phi i32 [ 0, %3633 ], [ %3724, %3772 ]
  %3644 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3634, label %3645, label %3714

3645:                                             ; preds = %3641, %3704
  %3646 = phi i32 [ %3713, %3704 ], [ 0, %3641 ]
  %3647 = phi i64 [ %3655, %3704 ], [ %3638, %3641 ]
  %3648 = phi i64 [ %3712, %3704 ], [ %3637, %3641 ]
  %3649 = phi i32 [ %3710, %3704 ], [ %3644, %3641 ]
  %3650 = sub i32 %3636, %3646
  %3651 = tail call i32 @llvm.smin.i32(i32 %3650, i32 0)
  %3652 = sub i32 %3650, %3651
  %3653 = zext i32 %3652 to i64
  %3654 = add nuw nsw i64 %3653, 1
  %3655 = add nsw i64 %3647, -1
  %3656 = icmp ult i32 %3652, 31
  br i1 %3656, label %3692, label %3657

3657:                                             ; preds = %3645
  %3658 = and i64 %3654, 8589934560
  %3659 = sub i64 %3648, %3658
  br label %3660

3660:                                             ; preds = %3660, %3657
  %3661 = phi i64 [ 0, %3657 ], [ %3684, %3660 ]
  %3662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3680, %3660 ]
  %3663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3681, %3660 ]
  %3664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3682, %3660 ]
  %3665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3683, %3660 ]
  %3666 = sub i64 %3648, %3661
  %3667 = getelementptr inbounds i32, ptr %9, i64 %3666
  %3668 = getelementptr inbounds i32, ptr %3667, i64 -7
  %3669 = load <8 x i32>, ptr %3668, align 4, !tbaa !5
  %3670 = shufflevector <8 x i32> %3669, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3671 = getelementptr inbounds i32, ptr %3667, i64 -15
  %3672 = load <8 x i32>, ptr %3671, align 4, !tbaa !5
  %3673 = shufflevector <8 x i32> %3672, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3674 = getelementptr inbounds i32, ptr %3667, i64 -23
  %3675 = load <8 x i32>, ptr %3674, align 4, !tbaa !5
  %3676 = shufflevector <8 x i32> %3675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3677 = getelementptr inbounds i32, ptr %3667, i64 -31
  %3678 = load <8 x i32>, ptr %3677, align 4, !tbaa !5
  %3679 = shufflevector <8 x i32> %3678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3680 = mul <8 x i32> %3670, %3662
  %3681 = mul <8 x i32> %3673, %3663
  %3682 = mul <8 x i32> %3676, %3664
  %3683 = mul <8 x i32> %3679, %3665
  %3684 = add nuw i64 %3661, 32
  %3685 = icmp eq i64 %3684, %3658
  br i1 %3685, label %3686, label %3660, !llvm.loop !324

3686:                                             ; preds = %3660
  %3687 = mul <8 x i32> %3681, %3680
  %3688 = mul <8 x i32> %3682, %3687
  %3689 = mul <8 x i32> %3683, %3688
  %3690 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3689)
  %3691 = icmp eq i64 %3654, %3658
  br i1 %3691, label %3704, label %3692

3692:                                             ; preds = %3645, %3686
  %3693 = phi i64 [ %3648, %3645 ], [ %3659, %3686 ]
  %3694 = phi i32 [ 1, %3645 ], [ %3690, %3686 ]
  br label %3695

3695:                                             ; preds = %3692, %3695
  %3696 = phi i64 [ %3701, %3695 ], [ %3693, %3692 ]
  %3697 = phi i32 [ %3700, %3695 ], [ %3694, %3692 ]
  %3698 = getelementptr inbounds i32, ptr %9, i64 %3696
  %3699 = load i32, ptr %3698, align 4, !tbaa !5
  %3700 = mul nsw i32 %3699, %3697
  %3701 = add nsw i64 %3696, -1
  %3702 = trunc i64 %3696 to i32
  %3703 = icmp sgt i32 %3702, 0
  br i1 %3703, label %3695, label %3704, !llvm.loop !325

3704:                                             ; preds = %3695, %3686
  %3705 = phi i32 [ %3690, %3686 ], [ %3700, %3695 ]
  %3706 = and i64 %3655, 4294967295
  %3707 = getelementptr inbounds i32, ptr %6, i64 %3706
  %3708 = load i32, ptr %3707, align 4, !tbaa !5
  %3709 = mul nsw i32 %3708, %3705
  %3710 = add nsw i32 %3709, %3649
  %3711 = icmp sgt i64 %3647, 2
  %3712 = add nsw i64 %3648, -1
  %3713 = add i32 %3646, 1
  br i1 %3711, label %3645, label %3714, !llvm.loop !326

3714:                                             ; preds = %3704, %3641
  %3715 = phi i32 [ %3644, %3641 ], [ %3710, %3704 ]
  %3716 = sext i32 %3715 to i64
  %3717 = getelementptr inbounds double, ptr %2, i64 %3716
  %3718 = load double, ptr %3717, align 8, !tbaa !18
  %3719 = getelementptr inbounds i32, ptr %3610, i64 %3716
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = sitofp i32 %3720 to double
  %3722 = fmul fast double %3718, %3721
  %3723 = fadd fast double %3722, %3642
  store double %3723, ptr %3612, align 8, !tbaa !18
  %3724 = add nuw nsw i32 %3643, 1
  br i1 %3635, label %3725, label %3772

3725:                                             ; preds = %3714
  %3726 = load i32, ptr %4, align 4, !tbaa !5
  %3727 = load i32, ptr %12, align 4, !tbaa !5
  %3728 = add nsw i32 %3727, -1
  %3729 = icmp slt i32 %3726, %3728
  br i1 %3729, label %3749, label %3730

3730:                                             ; preds = %3725
  %3731 = icmp eq i32 %3726, %3728
  br i1 %3731, label %3732, label %3765

3732:                                             ; preds = %3730
  store i32 0, ptr %4, align 4, !tbaa !5
  %3733 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3733, ptr %6, align 4, !tbaa !5
  br i1 %3640, label %3772, label %3734

3734:                                             ; preds = %3732, %3759
  %3735 = phi i64 [ %3763, %3759 ], [ 1, %3732 ]
  %3736 = getelementptr inbounds i32, ptr %4, i64 %3735
  %3737 = load i32, ptr %3736, align 4, !tbaa !5
  %3738 = getelementptr inbounds i32, ptr %12, i64 %3735
  %3739 = load i32, ptr %3738, align 4, !tbaa !5
  %3740 = add nsw i32 %3739, -1
  %3741 = icmp slt i32 %3737, %3740
  br i1 %3741, label %3742, label %3757

3742:                                             ; preds = %3734
  br i1 %3729, label %3749, label %3743

3743:                                             ; preds = %3742
  %3744 = getelementptr inbounds i32, ptr %7, i64 %3735
  %3745 = load i32, ptr %3744, align 4, !tbaa !5
  %3746 = getelementptr inbounds i32, ptr %6, i64 %3735
  %3747 = load i32, ptr %3746, align 4, !tbaa !5
  %3748 = add nsw i32 %3747, %3745
  store i32 %3748, ptr %3746, align 4, !tbaa !5
  br label %3767

3749:                                             ; preds = %3725, %3742
  %3750 = phi i32 [ %3737, %3742 ], [ %3726, %3725 ]
  %3751 = phi ptr [ %3736, %3742 ], [ %4, %3725 ]
  %3752 = phi i64 [ %3735, %3742 ], [ 0, %3725 ]
  %3753 = add nsw i32 %3750, 1
  store i32 %3753, ptr %3751, align 4, !tbaa !5
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3752
  %3755 = load i32, ptr %3754, align 4, !tbaa !5
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3752
  br label %3767

3757:                                             ; preds = %3734
  %3758 = icmp eq i32 %3737, %3740
  br i1 %3758, label %3759, label %3765

3759:                                             ; preds = %3757
  store i32 0, ptr %3736, align 4, !tbaa !5
  %3760 = getelementptr inbounds i32, ptr %8, i64 %3735
  %3761 = load i32, ptr %3760, align 4, !tbaa !5
  %3762 = getelementptr inbounds i32, ptr %6, i64 %3735
  store i32 %3761, ptr %3762, align 4, !tbaa !5
  %3763 = add nuw nsw i64 %3735, 1
  %3764 = icmp eq i64 %3763, %3638
  br i1 %3764, label %3772, label %3734, !llvm.loop !327

3765:                                             ; preds = %3730, %3757
  %3766 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3767:                                             ; preds = %3743, %3749
  %3768 = phi ptr [ %3756, %3749 ], [ %3736, %3743 ]
  %3769 = phi i32 [ %3755, %3749 ], [ 1, %3743 ]
  %3770 = load i32, ptr %3768, align 4, !tbaa !5
  %3771 = add nsw i32 %3770, %3769
  store i32 %3771, ptr %3768, align 4, !tbaa !5
  br label %3772

3772:                                             ; preds = %3759, %3767, %3732, %3714
  %3773 = icmp eq i32 %3724, %5
  br i1 %3773, label %5404, label %3641, !llvm.loop !328

3774:                                             ; preds = %3624, %3909
  %3775 = phi double [ 0.000000e+00, %3624 ], [ %3857, %3909 ]
  %3776 = phi i32 [ 0, %3624 ], [ %3858, %3909 ]
  %3777 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3625, label %3778, label %3847

3778:                                             ; preds = %3774, %3837
  %3779 = phi i32 [ %3846, %3837 ], [ 0, %3774 ]
  %3780 = phi i64 [ %3788, %3837 ], [ %3629, %3774 ]
  %3781 = phi i64 [ %3845, %3837 ], [ %3628, %3774 ]
  %3782 = phi i32 [ %3843, %3837 ], [ %3777, %3774 ]
  %3783 = sub i32 %3627, %3779
  %3784 = tail call i32 @llvm.smin.i32(i32 %3783, i32 0)
  %3785 = sub i32 %3783, %3784
  %3786 = zext i32 %3785 to i64
  %3787 = add nuw nsw i64 %3786, 1
  %3788 = add nsw i64 %3780, -1
  %3789 = icmp ult i32 %3785, 31
  br i1 %3789, label %3825, label %3790

3790:                                             ; preds = %3778
  %3791 = and i64 %3787, 8589934560
  %3792 = sub i64 %3781, %3791
  br label %3793

3793:                                             ; preds = %3793, %3790
  %3794 = phi i64 [ 0, %3790 ], [ %3817, %3793 ]
  %3795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3813, %3793 ]
  %3796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3814, %3793 ]
  %3797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3815, %3793 ]
  %3798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3816, %3793 ]
  %3799 = sub i64 %3781, %3794
  %3800 = getelementptr inbounds i32, ptr %11, i64 %3799
  %3801 = getelementptr inbounds i32, ptr %3800, i64 -7
  %3802 = load <8 x i32>, ptr %3801, align 4, !tbaa !5
  %3803 = shufflevector <8 x i32> %3802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3804 = getelementptr inbounds i32, ptr %3800, i64 -15
  %3805 = load <8 x i32>, ptr %3804, align 4, !tbaa !5
  %3806 = shufflevector <8 x i32> %3805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3807 = getelementptr inbounds i32, ptr %3800, i64 -23
  %3808 = load <8 x i32>, ptr %3807, align 4, !tbaa !5
  %3809 = shufflevector <8 x i32> %3808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3810 = getelementptr inbounds i32, ptr %3800, i64 -31
  %3811 = load <8 x i32>, ptr %3810, align 4, !tbaa !5
  %3812 = shufflevector <8 x i32> %3811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3813 = mul <8 x i32> %3803, %3795
  %3814 = mul <8 x i32> %3806, %3796
  %3815 = mul <8 x i32> %3809, %3797
  %3816 = mul <8 x i32> %3812, %3798
  %3817 = add nuw i64 %3794, 32
  %3818 = icmp eq i64 %3817, %3791
  br i1 %3818, label %3819, label %3793, !llvm.loop !329

3819:                                             ; preds = %3793
  %3820 = mul <8 x i32> %3814, %3813
  %3821 = mul <8 x i32> %3815, %3820
  %3822 = mul <8 x i32> %3816, %3821
  %3823 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3822)
  %3824 = icmp eq i64 %3787, %3791
  br i1 %3824, label %3837, label %3825

3825:                                             ; preds = %3778, %3819
  %3826 = phi i64 [ %3781, %3778 ], [ %3792, %3819 ]
  %3827 = phi i32 [ 1, %3778 ], [ %3823, %3819 ]
  br label %3828

3828:                                             ; preds = %3825, %3828
  %3829 = phi i64 [ %3834, %3828 ], [ %3826, %3825 ]
  %3830 = phi i32 [ %3833, %3828 ], [ %3827, %3825 ]
  %3831 = getelementptr inbounds i32, ptr %11, i64 %3829
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = mul nsw i32 %3832, %3830
  %3834 = add nsw i64 %3829, -1
  %3835 = trunc i64 %3829 to i32
  %3836 = icmp sgt i32 %3835, 0
  br i1 %3836, label %3828, label %3837, !llvm.loop !330

3837:                                             ; preds = %3828, %3819
  %3838 = phi i32 [ %3823, %3819 ], [ %3833, %3828 ]
  %3839 = and i64 %3788, 4294967295
  %3840 = getelementptr inbounds i32, ptr %6, i64 %3839
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = mul nsw i32 %3841, %3838
  %3843 = add nsw i32 %3842, %3782
  %3844 = icmp sgt i64 %3780, 2
  %3845 = add nsw i64 %3781, -1
  %3846 = add i32 %3779, 1
  br i1 %3844, label %3778, label %3847, !llvm.loop !331

3847:                                             ; preds = %3837, %3774
  %3848 = phi i32 [ %3777, %3774 ], [ %3843, %3837 ]
  %3849 = icmp slt i32 %3848, %5
  br i1 %3849, label %3852, label %3850

3850:                                             ; preds = %3847
  %3851 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

3852:                                             ; preds = %3847
  %3853 = sext i32 %3848 to i64
  %3854 = getelementptr inbounds i32, ptr %3610, i64 %3853
  %3855 = load i32, ptr %3854, align 4, !tbaa !5
  %3856 = sitofp i32 %3855 to double
  %3857 = fadd fast double %3775, %3856
  store double %3857, ptr %3612, align 8, !tbaa !18
  %3858 = add nuw nsw i32 %3776, 1
  br i1 %3626, label %3859, label %3909

3859:                                             ; preds = %3852
  %3860 = load i32, ptr %4, align 4, !tbaa !5
  %3861 = load i32, ptr %12, align 4, !tbaa !5
  %3862 = add nsw i32 %3861, -1
  %3863 = icmp slt i32 %3860, %3862
  br i1 %3863, label %3886, label %3864

3864:                                             ; preds = %3859
  %3865 = icmp eq i32 %3860, %3862
  br i1 %3865, label %3866, label %3902

3866:                                             ; preds = %3864
  store i32 0, ptr %4, align 4, !tbaa !5
  %3867 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3867, ptr %6, align 4, !tbaa !5
  br i1 %3631, label %3909, label %3868

3868:                                             ; preds = %3866, %3896
  %3869 = phi i64 [ %3900, %3896 ], [ 1, %3866 ]
  %3870 = getelementptr inbounds i32, ptr %4, i64 %3869
  %3871 = load i32, ptr %3870, align 4, !tbaa !5
  %3872 = getelementptr inbounds i32, ptr %12, i64 %3869
  %3873 = load i32, ptr %3872, align 4, !tbaa !5
  %3874 = add nsw i32 %3873, -1
  %3875 = icmp slt i32 %3871, %3874
  br i1 %3875, label %3876, label %3894

3876:                                             ; preds = %3868
  br i1 %3863, label %3886, label %3877

3877:                                             ; preds = %3876
  %3878 = shl i64 %3869, 32
  %3879 = add i64 %3878, -4294967296
  %3880 = ashr exact i64 %3879, 32
  %3881 = getelementptr inbounds i32, ptr %7, i64 %3880
  %3882 = load i32, ptr %3881, align 4, !tbaa !5
  %3883 = getelementptr inbounds i32, ptr %6, i64 %3869
  %3884 = load i32, ptr %3883, align 4, !tbaa !5
  %3885 = add nsw i32 %3884, %3882
  store i32 %3885, ptr %3883, align 4, !tbaa !5
  br label %3904

3886:                                             ; preds = %3859, %3876
  %3887 = phi i32 [ %3871, %3876 ], [ %3860, %3859 ]
  %3888 = phi ptr [ %3870, %3876 ], [ %4, %3859 ]
  %3889 = phi i64 [ %3869, %3876 ], [ 0, %3859 ]
  %3890 = add nsw i32 %3887, 1
  store i32 %3890, ptr %3888, align 4, !tbaa !5
  %3891 = getelementptr inbounds i32, ptr %7, i64 %3889
  %3892 = load i32, ptr %3891, align 4, !tbaa !5
  %3893 = getelementptr inbounds i32, ptr %6, i64 %3889
  br label %3904

3894:                                             ; preds = %3868
  %3895 = icmp eq i32 %3871, %3874
  br i1 %3895, label %3896, label %3902

3896:                                             ; preds = %3894
  store i32 0, ptr %3870, align 4, !tbaa !5
  %3897 = getelementptr inbounds i32, ptr %8, i64 %3869
  %3898 = load i32, ptr %3897, align 4, !tbaa !5
  %3899 = getelementptr inbounds i32, ptr %6, i64 %3869
  store i32 %3898, ptr %3899, align 4, !tbaa !5
  %3900 = add nuw nsw i64 %3869, 1
  %3901 = icmp eq i64 %3900, %3629
  br i1 %3901, label %3909, label %3868, !llvm.loop !332

3902:                                             ; preds = %3864, %3894
  %3903 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3904:                                             ; preds = %3877, %3886
  %3905 = phi ptr [ %3893, %3886 ], [ %3870, %3877 ]
  %3906 = phi i32 [ %3892, %3886 ], [ 1, %3877 ]
  %3907 = load i32, ptr %3905, align 4, !tbaa !5
  %3908 = add nsw i32 %3907, %3906
  store i32 %3908, ptr %3905, align 4, !tbaa !5
  br label %3909

3909:                                             ; preds = %3896, %3904, %3866, %3852
  %3910 = icmp eq i32 %3858, %5
  br i1 %3910, label %5404, label %3774, !llvm.loop !333

3911:                                             ; preds = %3617
  %3912 = getelementptr inbounds i32, ptr %3, i64 %19
  %3913 = load i32, ptr %3912, align 4, !tbaa !5
  %3914 = icmp eq i32 %3913, 0
  %3915 = icmp sgt i32 %5, 0
  br i1 %3914, label %3925, label %3916

3916:                                             ; preds = %3911
  br i1 %3915, label %3917, label %5404

3917:                                             ; preds = %3916
  %3918 = icmp sgt i32 %13, 1
  %3919 = icmp sgt i32 %13, 0
  %3920 = add i32 %13, -2
  %3921 = zext i32 %3920 to i64
  %3922 = zext i32 %13 to i64
  %3923 = add nuw i32 %5, 1
  %3924 = icmp eq i32 %13, 1
  br label %4064

3925:                                             ; preds = %3911
  br i1 %3915, label %3926, label %5404

3926:                                             ; preds = %3925
  %3927 = icmp sgt i32 %13, 1
  %3928 = icmp sgt i32 %13, 0
  %3929 = add i32 %13, -2
  %3930 = zext i32 %3929 to i64
  %3931 = zext i32 %13 to i64
  %3932 = add nuw i32 %5, 1
  %3933 = icmp eq i32 %13, 1
  br label %3934

3934:                                             ; preds = %3926, %4062
  %3935 = phi double [ 0.000000e+00, %3926 ], [ %4013, %4062 ]
  %3936 = phi i32 [ 0, %3926 ], [ %4014, %4062 ]
  %3937 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3927, label %3938, label %4007

3938:                                             ; preds = %3934, %3997
  %3939 = phi i32 [ %4006, %3997 ], [ 0, %3934 ]
  %3940 = phi i64 [ %3948, %3997 ], [ %3931, %3934 ]
  %3941 = phi i64 [ %4005, %3997 ], [ %3930, %3934 ]
  %3942 = phi i32 [ %4003, %3997 ], [ %3937, %3934 ]
  %3943 = sub i32 %3929, %3939
  %3944 = tail call i32 @llvm.smin.i32(i32 %3943, i32 0)
  %3945 = sub i32 %3943, %3944
  %3946 = zext i32 %3945 to i64
  %3947 = add nuw nsw i64 %3946, 1
  %3948 = add nsw i64 %3940, -1
  %3949 = icmp ult i32 %3945, 31
  br i1 %3949, label %3985, label %3950

3950:                                             ; preds = %3938
  %3951 = and i64 %3947, 8589934560
  %3952 = sub i64 %3941, %3951
  br label %3953

3953:                                             ; preds = %3953, %3950
  %3954 = phi i64 [ 0, %3950 ], [ %3977, %3953 ]
  %3955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3973, %3953 ]
  %3956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3974, %3953 ]
  %3957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3975, %3953 ]
  %3958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3976, %3953 ]
  %3959 = sub i64 %3941, %3954
  %3960 = getelementptr inbounds i32, ptr %9, i64 %3959
  %3961 = getelementptr inbounds i32, ptr %3960, i64 -7
  %3962 = load <8 x i32>, ptr %3961, align 4, !tbaa !5
  %3963 = shufflevector <8 x i32> %3962, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3964 = getelementptr inbounds i32, ptr %3960, i64 -15
  %3965 = load <8 x i32>, ptr %3964, align 4, !tbaa !5
  %3966 = shufflevector <8 x i32> %3965, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3967 = getelementptr inbounds i32, ptr %3960, i64 -23
  %3968 = load <8 x i32>, ptr %3967, align 4, !tbaa !5
  %3969 = shufflevector <8 x i32> %3968, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3970 = getelementptr inbounds i32, ptr %3960, i64 -31
  %3971 = load <8 x i32>, ptr %3970, align 4, !tbaa !5
  %3972 = shufflevector <8 x i32> %3971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3973 = mul <8 x i32> %3963, %3955
  %3974 = mul <8 x i32> %3966, %3956
  %3975 = mul <8 x i32> %3969, %3957
  %3976 = mul <8 x i32> %3972, %3958
  %3977 = add nuw i64 %3954, 32
  %3978 = icmp eq i64 %3977, %3951
  br i1 %3978, label %3979, label %3953, !llvm.loop !334

3979:                                             ; preds = %3953
  %3980 = mul <8 x i32> %3974, %3973
  %3981 = mul <8 x i32> %3975, %3980
  %3982 = mul <8 x i32> %3976, %3981
  %3983 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3982)
  %3984 = icmp eq i64 %3947, %3951
  br i1 %3984, label %3997, label %3985

3985:                                             ; preds = %3938, %3979
  %3986 = phi i64 [ %3941, %3938 ], [ %3952, %3979 ]
  %3987 = phi i32 [ 1, %3938 ], [ %3983, %3979 ]
  br label %3988

3988:                                             ; preds = %3985, %3988
  %3989 = phi i64 [ %3994, %3988 ], [ %3986, %3985 ]
  %3990 = phi i32 [ %3993, %3988 ], [ %3987, %3985 ]
  %3991 = getelementptr inbounds i32, ptr %9, i64 %3989
  %3992 = load i32, ptr %3991, align 4, !tbaa !5
  %3993 = mul nsw i32 %3992, %3990
  %3994 = add nsw i64 %3989, -1
  %3995 = trunc i64 %3989 to i32
  %3996 = icmp sgt i32 %3995, 0
  br i1 %3996, label %3988, label %3997, !llvm.loop !335

3997:                                             ; preds = %3988, %3979
  %3998 = phi i32 [ %3983, %3979 ], [ %3993, %3988 ]
  %3999 = and i64 %3948, 4294967295
  %4000 = getelementptr inbounds i32, ptr %6, i64 %3999
  %4001 = load i32, ptr %4000, align 4, !tbaa !5
  %4002 = mul nsw i32 %4001, %3998
  %4003 = add nsw i32 %4002, %3942
  %4004 = icmp sgt i64 %3940, 2
  %4005 = add nsw i64 %3941, -1
  %4006 = add i32 %3939, 1
  br i1 %4004, label %3938, label %4007, !llvm.loop !336

4007:                                             ; preds = %3997, %3934
  %4008 = phi i32 [ %3937, %3934 ], [ %4003, %3997 ]
  %4009 = sext i32 %4008 to i64
  %4010 = getelementptr inbounds i32, ptr %3610, i64 %4009
  %4011 = load i32, ptr %4010, align 4, !tbaa !5
  %4012 = sitofp i32 %4011 to double
  %4013 = fadd fast double %3935, %4012
  %4014 = add nuw nsw i32 %3936, 1
  br i1 %3928, label %4015, label %4062

4015:                                             ; preds = %4007
  %4016 = load i32, ptr %4, align 4, !tbaa !5
  %4017 = load i32, ptr %12, align 4, !tbaa !5
  %4018 = add nsw i32 %4017, -1
  %4019 = icmp slt i32 %4016, %4018
  br i1 %4019, label %4039, label %4020

4020:                                             ; preds = %4015
  %4021 = icmp eq i32 %4016, %4018
  br i1 %4021, label %4022, label %4055

4022:                                             ; preds = %4020
  store i32 0, ptr %4, align 4, !tbaa !5
  %4023 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4023, ptr %6, align 4, !tbaa !5
  br i1 %3933, label %4062, label %4024

4024:                                             ; preds = %4022, %4049
  %4025 = phi i64 [ %4053, %4049 ], [ 1, %4022 ]
  %4026 = getelementptr inbounds i32, ptr %4, i64 %4025
  %4027 = load i32, ptr %4026, align 4, !tbaa !5
  %4028 = getelementptr inbounds i32, ptr %12, i64 %4025
  %4029 = load i32, ptr %4028, align 4, !tbaa !5
  %4030 = add nsw i32 %4029, -1
  %4031 = icmp slt i32 %4027, %4030
  br i1 %4031, label %4032, label %4047

4032:                                             ; preds = %4024
  br i1 %4019, label %4039, label %4033

4033:                                             ; preds = %4032
  %4034 = getelementptr inbounds i32, ptr %7, i64 %4025
  %4035 = load i32, ptr %4034, align 4, !tbaa !5
  %4036 = getelementptr inbounds i32, ptr %6, i64 %4025
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = add nsw i32 %4037, %4035
  store i32 %4038, ptr %4036, align 4, !tbaa !5
  br label %4057

4039:                                             ; preds = %4015, %4032
  %4040 = phi i32 [ %4027, %4032 ], [ %4016, %4015 ]
  %4041 = phi ptr [ %4026, %4032 ], [ %4, %4015 ]
  %4042 = phi i64 [ %4025, %4032 ], [ 0, %4015 ]
  %4043 = add nsw i32 %4040, 1
  store i32 %4043, ptr %4041, align 4, !tbaa !5
  %4044 = getelementptr inbounds i32, ptr %7, i64 %4042
  %4045 = load i32, ptr %4044, align 4, !tbaa !5
  %4046 = getelementptr inbounds i32, ptr %6, i64 %4042
  br label %4057

4047:                                             ; preds = %4024
  %4048 = icmp eq i32 %4027, %4030
  br i1 %4048, label %4049, label %4055

4049:                                             ; preds = %4047
  store i32 0, ptr %4026, align 4, !tbaa !5
  %4050 = getelementptr inbounds i32, ptr %8, i64 %4025
  %4051 = load i32, ptr %4050, align 4, !tbaa !5
  %4052 = getelementptr inbounds i32, ptr %6, i64 %4025
  store i32 %4051, ptr %4052, align 4, !tbaa !5
  %4053 = add nuw nsw i64 %4025, 1
  %4054 = icmp eq i64 %4053, %3931
  br i1 %4054, label %4062, label %4024, !llvm.loop !337

4055:                                             ; preds = %4020, %4047
  store double %4013, ptr %3612, align 8, !tbaa !18
  %4056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4057:                                             ; preds = %4033, %4039
  %4058 = phi ptr [ %4046, %4039 ], [ %4026, %4033 ]
  %4059 = phi i32 [ %4045, %4039 ], [ 1, %4033 ]
  %4060 = load i32, ptr %4058, align 4, !tbaa !5
  %4061 = add nsw i32 %4060, %4059
  store i32 %4061, ptr %4058, align 4, !tbaa !5
  br label %4062

4062:                                             ; preds = %4049, %4057, %4022, %4007
  %4063 = icmp eq i32 %4014, %5
  br i1 %4063, label %5400, label %3934, !llvm.loop !338

4064:                                             ; preds = %3917, %4199
  %4065 = phi double [ 0.000000e+00, %3917 ], [ %4147, %4199 ]
  %4066 = phi i32 [ 0, %3917 ], [ %4148, %4199 ]
  %4067 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3918, label %4068, label %4137

4068:                                             ; preds = %4064, %4127
  %4069 = phi i32 [ %4136, %4127 ], [ 0, %4064 ]
  %4070 = phi i64 [ %4078, %4127 ], [ %3922, %4064 ]
  %4071 = phi i64 [ %4135, %4127 ], [ %3921, %4064 ]
  %4072 = phi i32 [ %4133, %4127 ], [ %4067, %4064 ]
  %4073 = sub i32 %3920, %4069
  %4074 = tail call i32 @llvm.smin.i32(i32 %4073, i32 0)
  %4075 = sub i32 %4073, %4074
  %4076 = zext i32 %4075 to i64
  %4077 = add nuw nsw i64 %4076, 1
  %4078 = add nsw i64 %4070, -1
  %4079 = icmp ult i32 %4075, 31
  br i1 %4079, label %4115, label %4080

4080:                                             ; preds = %4068
  %4081 = and i64 %4077, 8589934560
  %4082 = sub i64 %4071, %4081
  br label %4083

4083:                                             ; preds = %4083, %4080
  %4084 = phi i64 [ 0, %4080 ], [ %4107, %4083 ]
  %4085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4103, %4083 ]
  %4086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4104, %4083 ]
  %4087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4105, %4083 ]
  %4088 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4106, %4083 ]
  %4089 = sub i64 %4071, %4084
  %4090 = getelementptr inbounds i32, ptr %11, i64 %4089
  %4091 = getelementptr inbounds i32, ptr %4090, i64 -7
  %4092 = load <8 x i32>, ptr %4091, align 4, !tbaa !5
  %4093 = shufflevector <8 x i32> %4092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4094 = getelementptr inbounds i32, ptr %4090, i64 -15
  %4095 = load <8 x i32>, ptr %4094, align 4, !tbaa !5
  %4096 = shufflevector <8 x i32> %4095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4097 = getelementptr inbounds i32, ptr %4090, i64 -23
  %4098 = load <8 x i32>, ptr %4097, align 4, !tbaa !5
  %4099 = shufflevector <8 x i32> %4098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4100 = getelementptr inbounds i32, ptr %4090, i64 -31
  %4101 = load <8 x i32>, ptr %4100, align 4, !tbaa !5
  %4102 = shufflevector <8 x i32> %4101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4103 = mul <8 x i32> %4093, %4085
  %4104 = mul <8 x i32> %4096, %4086
  %4105 = mul <8 x i32> %4099, %4087
  %4106 = mul <8 x i32> %4102, %4088
  %4107 = add nuw i64 %4084, 32
  %4108 = icmp eq i64 %4107, %4081
  br i1 %4108, label %4109, label %4083, !llvm.loop !339

4109:                                             ; preds = %4083
  %4110 = mul <8 x i32> %4104, %4103
  %4111 = mul <8 x i32> %4105, %4110
  %4112 = mul <8 x i32> %4106, %4111
  %4113 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4112)
  %4114 = icmp eq i64 %4077, %4081
  br i1 %4114, label %4127, label %4115

4115:                                             ; preds = %4068, %4109
  %4116 = phi i64 [ %4071, %4068 ], [ %4082, %4109 ]
  %4117 = phi i32 [ 1, %4068 ], [ %4113, %4109 ]
  br label %4118

4118:                                             ; preds = %4115, %4118
  %4119 = phi i64 [ %4124, %4118 ], [ %4116, %4115 ]
  %4120 = phi i32 [ %4123, %4118 ], [ %4117, %4115 ]
  %4121 = getelementptr inbounds i32, ptr %11, i64 %4119
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = mul nsw i32 %4122, %4120
  %4124 = add nsw i64 %4119, -1
  %4125 = trunc i64 %4119 to i32
  %4126 = icmp sgt i32 %4125, 0
  br i1 %4126, label %4118, label %4127, !llvm.loop !340

4127:                                             ; preds = %4118, %4109
  %4128 = phi i32 [ %4113, %4109 ], [ %4123, %4118 ]
  %4129 = and i64 %4078, 4294967295
  %4130 = getelementptr inbounds i32, ptr %6, i64 %4129
  %4131 = load i32, ptr %4130, align 4, !tbaa !5
  %4132 = mul nsw i32 %4131, %4128
  %4133 = add nsw i32 %4132, %4072
  %4134 = icmp sgt i64 %4070, 2
  %4135 = add nsw i64 %4071, -1
  %4136 = add i32 %4069, 1
  br i1 %4134, label %4068, label %4137, !llvm.loop !341

4137:                                             ; preds = %4127, %4064
  %4138 = phi i32 [ %4067, %4064 ], [ %4133, %4127 ]
  %4139 = icmp slt i32 %4138, %5
  br i1 %4139, label %4142, label %4140

4140:                                             ; preds = %4137
  %4141 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

4142:                                             ; preds = %4137
  %4143 = sext i32 %4138 to i64
  %4144 = getelementptr inbounds i32, ptr %3610, i64 %4143
  %4145 = load i32, ptr %4144, align 4, !tbaa !5
  %4146 = sitofp i32 %4145 to double
  %4147 = fadd fast double %4065, %4146
  store double %4147, ptr %3612, align 8, !tbaa !18
  %4148 = add nuw nsw i32 %4066, 1
  br i1 %3919, label %4149, label %4199

4149:                                             ; preds = %4142
  %4150 = load i32, ptr %4, align 4, !tbaa !5
  %4151 = load i32, ptr %12, align 4, !tbaa !5
  %4152 = add nsw i32 %4151, -1
  %4153 = icmp slt i32 %4150, %4152
  br i1 %4153, label %4176, label %4154

4154:                                             ; preds = %4149
  %4155 = icmp eq i32 %4150, %4152
  br i1 %4155, label %4156, label %4192

4156:                                             ; preds = %4154
  store i32 0, ptr %4, align 4, !tbaa !5
  %4157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4157, ptr %6, align 4, !tbaa !5
  br i1 %3924, label %4199, label %4158

4158:                                             ; preds = %4156, %4186
  %4159 = phi i64 [ %4190, %4186 ], [ 1, %4156 ]
  %4160 = getelementptr inbounds i32, ptr %4, i64 %4159
  %4161 = load i32, ptr %4160, align 4, !tbaa !5
  %4162 = getelementptr inbounds i32, ptr %12, i64 %4159
  %4163 = load i32, ptr %4162, align 4, !tbaa !5
  %4164 = add nsw i32 %4163, -1
  %4165 = icmp slt i32 %4161, %4164
  br i1 %4165, label %4166, label %4184

4166:                                             ; preds = %4158
  br i1 %4153, label %4176, label %4167

4167:                                             ; preds = %4166
  %4168 = shl i64 %4159, 32
  %4169 = add i64 %4168, -4294967296
  %4170 = ashr exact i64 %4169, 32
  %4171 = getelementptr inbounds i32, ptr %7, i64 %4170
  %4172 = load i32, ptr %4171, align 4, !tbaa !5
  %4173 = getelementptr inbounds i32, ptr %6, i64 %4159
  %4174 = load i32, ptr %4173, align 4, !tbaa !5
  %4175 = add nsw i32 %4174, %4172
  store i32 %4175, ptr %4173, align 4, !tbaa !5
  br label %4194

4176:                                             ; preds = %4149, %4166
  %4177 = phi i32 [ %4161, %4166 ], [ %4150, %4149 ]
  %4178 = phi ptr [ %4160, %4166 ], [ %4, %4149 ]
  %4179 = phi i64 [ %4159, %4166 ], [ 0, %4149 ]
  %4180 = add nsw i32 %4177, 1
  store i32 %4180, ptr %4178, align 4, !tbaa !5
  %4181 = getelementptr inbounds i32, ptr %7, i64 %4179
  %4182 = load i32, ptr %4181, align 4, !tbaa !5
  %4183 = getelementptr inbounds i32, ptr %6, i64 %4179
  br label %4194

4184:                                             ; preds = %4158
  %4185 = icmp eq i32 %4161, %4164
  br i1 %4185, label %4186, label %4192

4186:                                             ; preds = %4184
  store i32 0, ptr %4160, align 4, !tbaa !5
  %4187 = getelementptr inbounds i32, ptr %8, i64 %4159
  %4188 = load i32, ptr %4187, align 4, !tbaa !5
  %4189 = getelementptr inbounds i32, ptr %6, i64 %4159
  store i32 %4188, ptr %4189, align 4, !tbaa !5
  %4190 = add nuw nsw i64 %4159, 1
  %4191 = icmp eq i64 %4190, %3922
  br i1 %4191, label %4199, label %4158, !llvm.loop !342

4192:                                             ; preds = %4154, %4184
  %4193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4194:                                             ; preds = %4167, %4176
  %4195 = phi ptr [ %4183, %4176 ], [ %4160, %4167 ]
  %4196 = phi i32 [ %4182, %4176 ], [ 1, %4167 ]
  %4197 = load i32, ptr %4195, align 4, !tbaa !5
  %4198 = add nsw i32 %4197, %4196
  store i32 %4198, ptr %4195, align 4, !tbaa !5
  br label %4199

4199:                                             ; preds = %4186, %4194, %4156, %4142
  %4200 = icmp eq i32 %4148, %5
  br i1 %4200, label %5404, label %4064, !llvm.loop !343

4201:                                             ; preds = %3617
  %4202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

4203:                                             ; preds = %18
  %4204 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4205 = load ptr, ptr %4204, align 8, !tbaa !9
  %4206 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4207 = load ptr, ptr %4206, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4207, align 4, !tbaa !162
  %4208 = icmp eq i32 %13, 0
  br i1 %4208, label %4209, label %4212

4209:                                             ; preds = %4203
  %4210 = load i32, ptr %4205, align 4, !tbaa !5
  %4211 = sitofp i32 %4210 to float
  store float %4211, ptr %4207, align 4, !tbaa !162
  br label %5404

4212:                                             ; preds = %4203
  switch i32 %1, label %4799 [
    i32 1, label %4213
    i32 0, label %4509
  ]

4213:                                             ; preds = %4212
  %4214 = getelementptr inbounds i32, ptr %3, i64 %19
  %4215 = load i32, ptr %4214, align 4, !tbaa !5
  %4216 = icmp eq i32 %4215, 0
  %4217 = icmp sgt i32 %5, 0
  br i1 %4216, label %4227, label %4218

4218:                                             ; preds = %4213
  br i1 %4217, label %4219, label %5404

4219:                                             ; preds = %4218
  %4220 = icmp sgt i32 %13, 1
  %4221 = icmp sgt i32 %13, 0
  %4222 = add i32 %13, -2
  %4223 = zext i32 %4222 to i64
  %4224 = zext i32 %13 to i64
  %4225 = add nuw i32 %5, 1
  %4226 = icmp eq i32 %13, 1
  br label %4372

4227:                                             ; preds = %4213
  br i1 %4217, label %4228, label %5404

4228:                                             ; preds = %4227
  %4229 = icmp sgt i32 %13, 1
  %4230 = icmp sgt i32 %13, 0
  %4231 = add i32 %13, -2
  %4232 = zext i32 %4231 to i64
  %4233 = zext i32 %13 to i64
  %4234 = add nuw i32 %5, 1
  %4235 = icmp eq i32 %13, 1
  br label %4236

4236:                                             ; preds = %4228, %4370
  %4237 = phi float [ 0.000000e+00, %4228 ], [ %4321, %4370 ]
  %4238 = phi i32 [ 0, %4228 ], [ %4322, %4370 ]
  %4239 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4229, label %4240, label %4309

4240:                                             ; preds = %4236, %4299
  %4241 = phi i32 [ %4308, %4299 ], [ 0, %4236 ]
  %4242 = phi i64 [ %4250, %4299 ], [ %4233, %4236 ]
  %4243 = phi i64 [ %4307, %4299 ], [ %4232, %4236 ]
  %4244 = phi i32 [ %4305, %4299 ], [ %4239, %4236 ]
  %4245 = sub i32 %4231, %4241
  %4246 = tail call i32 @llvm.smin.i32(i32 %4245, i32 0)
  %4247 = sub i32 %4245, %4246
  %4248 = zext i32 %4247 to i64
  %4249 = add nuw nsw i64 %4248, 1
  %4250 = add nsw i64 %4242, -1
  %4251 = icmp ult i32 %4247, 31
  br i1 %4251, label %4287, label %4252

4252:                                             ; preds = %4240
  %4253 = and i64 %4249, 8589934560
  %4254 = sub i64 %4243, %4253
  br label %4255

4255:                                             ; preds = %4255, %4252
  %4256 = phi i64 [ 0, %4252 ], [ %4279, %4255 ]
  %4257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4275, %4255 ]
  %4258 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4276, %4255 ]
  %4259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4277, %4255 ]
  %4260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4278, %4255 ]
  %4261 = sub i64 %4243, %4256
  %4262 = getelementptr inbounds i32, ptr %9, i64 %4261
  %4263 = getelementptr inbounds i32, ptr %4262, i64 -7
  %4264 = load <8 x i32>, ptr %4263, align 4, !tbaa !5
  %4265 = shufflevector <8 x i32> %4264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4266 = getelementptr inbounds i32, ptr %4262, i64 -15
  %4267 = load <8 x i32>, ptr %4266, align 4, !tbaa !5
  %4268 = shufflevector <8 x i32> %4267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4269 = getelementptr inbounds i32, ptr %4262, i64 -23
  %4270 = load <8 x i32>, ptr %4269, align 4, !tbaa !5
  %4271 = shufflevector <8 x i32> %4270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4272 = getelementptr inbounds i32, ptr %4262, i64 -31
  %4273 = load <8 x i32>, ptr %4272, align 4, !tbaa !5
  %4274 = shufflevector <8 x i32> %4273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4275 = mul <8 x i32> %4265, %4257
  %4276 = mul <8 x i32> %4268, %4258
  %4277 = mul <8 x i32> %4271, %4259
  %4278 = mul <8 x i32> %4274, %4260
  %4279 = add nuw i64 %4256, 32
  %4280 = icmp eq i64 %4279, %4253
  br i1 %4280, label %4281, label %4255, !llvm.loop !344

4281:                                             ; preds = %4255
  %4282 = mul <8 x i32> %4276, %4275
  %4283 = mul <8 x i32> %4277, %4282
  %4284 = mul <8 x i32> %4278, %4283
  %4285 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4284)
  %4286 = icmp eq i64 %4249, %4253
  br i1 %4286, label %4299, label %4287

4287:                                             ; preds = %4240, %4281
  %4288 = phi i64 [ %4243, %4240 ], [ %4254, %4281 ]
  %4289 = phi i32 [ 1, %4240 ], [ %4285, %4281 ]
  br label %4290

4290:                                             ; preds = %4287, %4290
  %4291 = phi i64 [ %4296, %4290 ], [ %4288, %4287 ]
  %4292 = phi i32 [ %4295, %4290 ], [ %4289, %4287 ]
  %4293 = getelementptr inbounds i32, ptr %9, i64 %4291
  %4294 = load i32, ptr %4293, align 4, !tbaa !5
  %4295 = mul nsw i32 %4294, %4292
  %4296 = add nsw i64 %4291, -1
  %4297 = trunc i64 %4291 to i32
  %4298 = icmp sgt i32 %4297, 0
  br i1 %4298, label %4290, label %4299, !llvm.loop !345

4299:                                             ; preds = %4290, %4281
  %4300 = phi i32 [ %4285, %4281 ], [ %4295, %4290 ]
  %4301 = and i64 %4250, 4294967295
  %4302 = getelementptr inbounds i32, ptr %6, i64 %4301
  %4303 = load i32, ptr %4302, align 4, !tbaa !5
  %4304 = mul nsw i32 %4303, %4300
  %4305 = add nsw i32 %4304, %4244
  %4306 = icmp sgt i64 %4242, 2
  %4307 = add nsw i64 %4243, -1
  %4308 = add i32 %4241, 1
  br i1 %4306, label %4240, label %4309, !llvm.loop !346

4309:                                             ; preds = %4299, %4236
  %4310 = phi i32 [ %4239, %4236 ], [ %4305, %4299 ]
  %4311 = sext i32 %4310 to i64
  %4312 = getelementptr inbounds double, ptr %2, i64 %4311
  %4313 = load double, ptr %4312, align 8, !tbaa !18
  %4314 = getelementptr inbounds i32, ptr %4205, i64 %4311
  %4315 = load i32, ptr %4314, align 4, !tbaa !5
  %4316 = sitofp i32 %4315 to float
  %4317 = fpext float %4237 to double
  %4318 = fpext float %4316 to double
  %4319 = fmul fast double %4313, %4318
  %4320 = fadd fast double %4319, %4317
  %4321 = fptrunc double %4320 to float
  %4322 = add nuw nsw i32 %4238, 1
  br i1 %4230, label %4323, label %4370

4323:                                             ; preds = %4309
  %4324 = load i32, ptr %4, align 4, !tbaa !5
  %4325 = load i32, ptr %12, align 4, !tbaa !5
  %4326 = add nsw i32 %4325, -1
  %4327 = icmp slt i32 %4324, %4326
  br i1 %4327, label %4347, label %4328

4328:                                             ; preds = %4323
  %4329 = icmp eq i32 %4324, %4326
  br i1 %4329, label %4330, label %4363

4330:                                             ; preds = %4328
  store i32 0, ptr %4, align 4, !tbaa !5
  %4331 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4331, ptr %6, align 4, !tbaa !5
  br i1 %4235, label %4370, label %4332

4332:                                             ; preds = %4330, %4357
  %4333 = phi i64 [ %4361, %4357 ], [ 1, %4330 ]
  %4334 = getelementptr inbounds i32, ptr %4, i64 %4333
  %4335 = load i32, ptr %4334, align 4, !tbaa !5
  %4336 = getelementptr inbounds i32, ptr %12, i64 %4333
  %4337 = load i32, ptr %4336, align 4, !tbaa !5
  %4338 = add nsw i32 %4337, -1
  %4339 = icmp slt i32 %4335, %4338
  br i1 %4339, label %4340, label %4355

4340:                                             ; preds = %4332
  br i1 %4327, label %4347, label %4341

4341:                                             ; preds = %4340
  %4342 = getelementptr inbounds i32, ptr %7, i64 %4333
  %4343 = load i32, ptr %4342, align 4, !tbaa !5
  %4344 = getelementptr inbounds i32, ptr %6, i64 %4333
  %4345 = load i32, ptr %4344, align 4, !tbaa !5
  %4346 = add nsw i32 %4345, %4343
  store i32 %4346, ptr %4344, align 4, !tbaa !5
  br label %4365

4347:                                             ; preds = %4323, %4340
  %4348 = phi i32 [ %4335, %4340 ], [ %4324, %4323 ]
  %4349 = phi ptr [ %4334, %4340 ], [ %4, %4323 ]
  %4350 = phi i64 [ %4333, %4340 ], [ 0, %4323 ]
  %4351 = add nsw i32 %4348, 1
  store i32 %4351, ptr %4349, align 4, !tbaa !5
  %4352 = getelementptr inbounds i32, ptr %7, i64 %4350
  %4353 = load i32, ptr %4352, align 4, !tbaa !5
  %4354 = getelementptr inbounds i32, ptr %6, i64 %4350
  br label %4365

4355:                                             ; preds = %4332
  %4356 = icmp eq i32 %4335, %4338
  br i1 %4356, label %4357, label %4363

4357:                                             ; preds = %4355
  store i32 0, ptr %4334, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %8, i64 %4333
  %4359 = load i32, ptr %4358, align 4, !tbaa !5
  %4360 = getelementptr inbounds i32, ptr %6, i64 %4333
  store i32 %4359, ptr %4360, align 4, !tbaa !5
  %4361 = add nuw nsw i64 %4333, 1
  %4362 = icmp eq i64 %4361, %4233
  br i1 %4362, label %4370, label %4332, !llvm.loop !347

4363:                                             ; preds = %4328, %4355
  store float %4321, ptr %4207, align 4, !tbaa !162
  %4364 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4365:                                             ; preds = %4341, %4347
  %4366 = phi ptr [ %4354, %4347 ], [ %4334, %4341 ]
  %4367 = phi i32 [ %4353, %4347 ], [ 1, %4341 ]
  %4368 = load i32, ptr %4366, align 4, !tbaa !5
  %4369 = add nsw i32 %4368, %4367
  store i32 %4369, ptr %4366, align 4, !tbaa !5
  br label %4370

4370:                                             ; preds = %4357, %4365, %4330, %4309
  %4371 = icmp eq i32 %4322, %5
  br i1 %4371, label %5401, label %4236, !llvm.loop !348

4372:                                             ; preds = %4219, %4507
  %4373 = phi float [ 0.000000e+00, %4219 ], [ %4455, %4507 ]
  %4374 = phi i32 [ 0, %4219 ], [ %4456, %4507 ]
  %4375 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4220, label %4376, label %4445

4376:                                             ; preds = %4372, %4435
  %4377 = phi i32 [ %4444, %4435 ], [ 0, %4372 ]
  %4378 = phi i64 [ %4386, %4435 ], [ %4224, %4372 ]
  %4379 = phi i64 [ %4443, %4435 ], [ %4223, %4372 ]
  %4380 = phi i32 [ %4441, %4435 ], [ %4375, %4372 ]
  %4381 = sub i32 %4222, %4377
  %4382 = tail call i32 @llvm.smin.i32(i32 %4381, i32 0)
  %4383 = sub i32 %4381, %4382
  %4384 = zext i32 %4383 to i64
  %4385 = add nuw nsw i64 %4384, 1
  %4386 = add nsw i64 %4378, -1
  %4387 = icmp ult i32 %4383, 31
  br i1 %4387, label %4423, label %4388

4388:                                             ; preds = %4376
  %4389 = and i64 %4385, 8589934560
  %4390 = sub i64 %4379, %4389
  br label %4391

4391:                                             ; preds = %4391, %4388
  %4392 = phi i64 [ 0, %4388 ], [ %4415, %4391 ]
  %4393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4411, %4391 ]
  %4394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4412, %4391 ]
  %4395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4413, %4391 ]
  %4396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4414, %4391 ]
  %4397 = sub i64 %4379, %4392
  %4398 = getelementptr inbounds i32, ptr %11, i64 %4397
  %4399 = getelementptr inbounds i32, ptr %4398, i64 -7
  %4400 = load <8 x i32>, ptr %4399, align 4, !tbaa !5
  %4401 = shufflevector <8 x i32> %4400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4402 = getelementptr inbounds i32, ptr %4398, i64 -15
  %4403 = load <8 x i32>, ptr %4402, align 4, !tbaa !5
  %4404 = shufflevector <8 x i32> %4403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4405 = getelementptr inbounds i32, ptr %4398, i64 -23
  %4406 = load <8 x i32>, ptr %4405, align 4, !tbaa !5
  %4407 = shufflevector <8 x i32> %4406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4408 = getelementptr inbounds i32, ptr %4398, i64 -31
  %4409 = load <8 x i32>, ptr %4408, align 4, !tbaa !5
  %4410 = shufflevector <8 x i32> %4409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4411 = mul <8 x i32> %4401, %4393
  %4412 = mul <8 x i32> %4404, %4394
  %4413 = mul <8 x i32> %4407, %4395
  %4414 = mul <8 x i32> %4410, %4396
  %4415 = add nuw i64 %4392, 32
  %4416 = icmp eq i64 %4415, %4389
  br i1 %4416, label %4417, label %4391, !llvm.loop !349

4417:                                             ; preds = %4391
  %4418 = mul <8 x i32> %4412, %4411
  %4419 = mul <8 x i32> %4413, %4418
  %4420 = mul <8 x i32> %4414, %4419
  %4421 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4420)
  %4422 = icmp eq i64 %4385, %4389
  br i1 %4422, label %4435, label %4423

4423:                                             ; preds = %4376, %4417
  %4424 = phi i64 [ %4379, %4376 ], [ %4390, %4417 ]
  %4425 = phi i32 [ 1, %4376 ], [ %4421, %4417 ]
  br label %4426

4426:                                             ; preds = %4423, %4426
  %4427 = phi i64 [ %4432, %4426 ], [ %4424, %4423 ]
  %4428 = phi i32 [ %4431, %4426 ], [ %4425, %4423 ]
  %4429 = getelementptr inbounds i32, ptr %11, i64 %4427
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = mul nsw i32 %4430, %4428
  %4432 = add nsw i64 %4427, -1
  %4433 = trunc i64 %4427 to i32
  %4434 = icmp sgt i32 %4433, 0
  br i1 %4434, label %4426, label %4435, !llvm.loop !350

4435:                                             ; preds = %4426, %4417
  %4436 = phi i32 [ %4421, %4417 ], [ %4431, %4426 ]
  %4437 = and i64 %4386, 4294967295
  %4438 = getelementptr inbounds i32, ptr %6, i64 %4437
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = mul nsw i32 %4439, %4436
  %4441 = add nsw i32 %4440, %4380
  %4442 = icmp sgt i64 %4378, 2
  %4443 = add nsw i64 %4379, -1
  %4444 = add i32 %4377, 1
  br i1 %4442, label %4376, label %4445, !llvm.loop !351

4445:                                             ; preds = %4435, %4372
  %4446 = phi i32 [ %4375, %4372 ], [ %4441, %4435 ]
  %4447 = icmp slt i32 %4446, %5
  br i1 %4447, label %4450, label %4448

4448:                                             ; preds = %4445
  %4449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

4450:                                             ; preds = %4445
  %4451 = sext i32 %4446 to i64
  %4452 = getelementptr inbounds i32, ptr %4205, i64 %4451
  %4453 = load i32, ptr %4452, align 4, !tbaa !5
  %4454 = sitofp i32 %4453 to float
  %4455 = fadd fast float %4373, %4454
  store float %4455, ptr %4207, align 4, !tbaa !162
  %4456 = add nuw nsw i32 %4374, 1
  br i1 %4221, label %4457, label %4507

4457:                                             ; preds = %4450
  %4458 = load i32, ptr %4, align 4, !tbaa !5
  %4459 = load i32, ptr %12, align 4, !tbaa !5
  %4460 = add nsw i32 %4459, -1
  %4461 = icmp slt i32 %4458, %4460
  br i1 %4461, label %4484, label %4462

4462:                                             ; preds = %4457
  %4463 = icmp eq i32 %4458, %4460
  br i1 %4463, label %4464, label %4500

4464:                                             ; preds = %4462
  store i32 0, ptr %4, align 4, !tbaa !5
  %4465 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4465, ptr %6, align 4, !tbaa !5
  br i1 %4226, label %4507, label %4466

4466:                                             ; preds = %4464, %4494
  %4467 = phi i64 [ %4498, %4494 ], [ 1, %4464 ]
  %4468 = getelementptr inbounds i32, ptr %4, i64 %4467
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = getelementptr inbounds i32, ptr %12, i64 %4467
  %4471 = load i32, ptr %4470, align 4, !tbaa !5
  %4472 = add nsw i32 %4471, -1
  %4473 = icmp slt i32 %4469, %4472
  br i1 %4473, label %4474, label %4492

4474:                                             ; preds = %4466
  br i1 %4461, label %4484, label %4475

4475:                                             ; preds = %4474
  %4476 = shl i64 %4467, 32
  %4477 = add i64 %4476, -4294967296
  %4478 = ashr exact i64 %4477, 32
  %4479 = getelementptr inbounds i32, ptr %7, i64 %4478
  %4480 = load i32, ptr %4479, align 4, !tbaa !5
  %4481 = getelementptr inbounds i32, ptr %6, i64 %4467
  %4482 = load i32, ptr %4481, align 4, !tbaa !5
  %4483 = add nsw i32 %4482, %4480
  store i32 %4483, ptr %4481, align 4, !tbaa !5
  br label %4502

4484:                                             ; preds = %4457, %4474
  %4485 = phi i32 [ %4469, %4474 ], [ %4458, %4457 ]
  %4486 = phi ptr [ %4468, %4474 ], [ %4, %4457 ]
  %4487 = phi i64 [ %4467, %4474 ], [ 0, %4457 ]
  %4488 = add nsw i32 %4485, 1
  store i32 %4488, ptr %4486, align 4, !tbaa !5
  %4489 = getelementptr inbounds i32, ptr %7, i64 %4487
  %4490 = load i32, ptr %4489, align 4, !tbaa !5
  %4491 = getelementptr inbounds i32, ptr %6, i64 %4487
  br label %4502

4492:                                             ; preds = %4466
  %4493 = icmp eq i32 %4469, %4472
  br i1 %4493, label %4494, label %4500

4494:                                             ; preds = %4492
  store i32 0, ptr %4468, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %8, i64 %4467
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = getelementptr inbounds i32, ptr %6, i64 %4467
  store i32 %4496, ptr %4497, align 4, !tbaa !5
  %4498 = add nuw nsw i64 %4467, 1
  %4499 = icmp eq i64 %4498, %4224
  br i1 %4499, label %4507, label %4466, !llvm.loop !352

4500:                                             ; preds = %4462, %4492
  %4501 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4502:                                             ; preds = %4475, %4484
  %4503 = phi ptr [ %4491, %4484 ], [ %4468, %4475 ]
  %4504 = phi i32 [ %4490, %4484 ], [ 1, %4475 ]
  %4505 = load i32, ptr %4503, align 4, !tbaa !5
  %4506 = add nsw i32 %4505, %4504
  store i32 %4506, ptr %4503, align 4, !tbaa !5
  br label %4507

4507:                                             ; preds = %4494, %4502, %4464, %4450
  %4508 = icmp eq i32 %4456, %5
  br i1 %4508, label %5404, label %4372, !llvm.loop !353

4509:                                             ; preds = %4212
  %4510 = getelementptr inbounds i32, ptr %3, i64 %19
  %4511 = load i32, ptr %4510, align 4, !tbaa !5
  %4512 = icmp eq i32 %4511, 0
  %4513 = icmp sgt i32 %5, 0
  br i1 %4512, label %4523, label %4514

4514:                                             ; preds = %4509
  br i1 %4513, label %4515, label %5404

4515:                                             ; preds = %4514
  %4516 = icmp sgt i32 %13, 1
  %4517 = icmp sgt i32 %13, 0
  %4518 = add i32 %13, -2
  %4519 = zext i32 %4518 to i64
  %4520 = zext i32 %13 to i64
  %4521 = add nuw i32 %5, 1
  %4522 = icmp eq i32 %13, 1
  br label %4662

4523:                                             ; preds = %4509
  br i1 %4513, label %4524, label %5404

4524:                                             ; preds = %4523
  %4525 = icmp sgt i32 %13, 1
  %4526 = icmp sgt i32 %13, 0
  %4527 = add i32 %13, -2
  %4528 = zext i32 %4527 to i64
  %4529 = zext i32 %13 to i64
  %4530 = add nuw i32 %5, 1
  %4531 = icmp eq i32 %13, 1
  br label %4532

4532:                                             ; preds = %4524, %4660
  %4533 = phi float [ 0.000000e+00, %4524 ], [ %4611, %4660 ]
  %4534 = phi i32 [ 0, %4524 ], [ %4612, %4660 ]
  %4535 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4525, label %4536, label %4605

4536:                                             ; preds = %4532, %4595
  %4537 = phi i32 [ %4604, %4595 ], [ 0, %4532 ]
  %4538 = phi i64 [ %4546, %4595 ], [ %4529, %4532 ]
  %4539 = phi i64 [ %4603, %4595 ], [ %4528, %4532 ]
  %4540 = phi i32 [ %4601, %4595 ], [ %4535, %4532 ]
  %4541 = sub i32 %4527, %4537
  %4542 = tail call i32 @llvm.smin.i32(i32 %4541, i32 0)
  %4543 = sub i32 %4541, %4542
  %4544 = zext i32 %4543 to i64
  %4545 = add nuw nsw i64 %4544, 1
  %4546 = add nsw i64 %4538, -1
  %4547 = icmp ult i32 %4543, 31
  br i1 %4547, label %4583, label %4548

4548:                                             ; preds = %4536
  %4549 = and i64 %4545, 8589934560
  %4550 = sub i64 %4539, %4549
  br label %4551

4551:                                             ; preds = %4551, %4548
  %4552 = phi i64 [ 0, %4548 ], [ %4575, %4551 ]
  %4553 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4571, %4551 ]
  %4554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4572, %4551 ]
  %4555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4573, %4551 ]
  %4556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4574, %4551 ]
  %4557 = sub i64 %4539, %4552
  %4558 = getelementptr inbounds i32, ptr %9, i64 %4557
  %4559 = getelementptr inbounds i32, ptr %4558, i64 -7
  %4560 = load <8 x i32>, ptr %4559, align 4, !tbaa !5
  %4561 = shufflevector <8 x i32> %4560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4562 = getelementptr inbounds i32, ptr %4558, i64 -15
  %4563 = load <8 x i32>, ptr %4562, align 4, !tbaa !5
  %4564 = shufflevector <8 x i32> %4563, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4565 = getelementptr inbounds i32, ptr %4558, i64 -23
  %4566 = load <8 x i32>, ptr %4565, align 4, !tbaa !5
  %4567 = shufflevector <8 x i32> %4566, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4568 = getelementptr inbounds i32, ptr %4558, i64 -31
  %4569 = load <8 x i32>, ptr %4568, align 4, !tbaa !5
  %4570 = shufflevector <8 x i32> %4569, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4571 = mul <8 x i32> %4561, %4553
  %4572 = mul <8 x i32> %4564, %4554
  %4573 = mul <8 x i32> %4567, %4555
  %4574 = mul <8 x i32> %4570, %4556
  %4575 = add nuw i64 %4552, 32
  %4576 = icmp eq i64 %4575, %4549
  br i1 %4576, label %4577, label %4551, !llvm.loop !354

4577:                                             ; preds = %4551
  %4578 = mul <8 x i32> %4572, %4571
  %4579 = mul <8 x i32> %4573, %4578
  %4580 = mul <8 x i32> %4574, %4579
  %4581 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4580)
  %4582 = icmp eq i64 %4545, %4549
  br i1 %4582, label %4595, label %4583

4583:                                             ; preds = %4536, %4577
  %4584 = phi i64 [ %4539, %4536 ], [ %4550, %4577 ]
  %4585 = phi i32 [ 1, %4536 ], [ %4581, %4577 ]
  br label %4586

4586:                                             ; preds = %4583, %4586
  %4587 = phi i64 [ %4592, %4586 ], [ %4584, %4583 ]
  %4588 = phi i32 [ %4591, %4586 ], [ %4585, %4583 ]
  %4589 = getelementptr inbounds i32, ptr %9, i64 %4587
  %4590 = load i32, ptr %4589, align 4, !tbaa !5
  %4591 = mul nsw i32 %4590, %4588
  %4592 = add nsw i64 %4587, -1
  %4593 = trunc i64 %4587 to i32
  %4594 = icmp sgt i32 %4593, 0
  br i1 %4594, label %4586, label %4595, !llvm.loop !355

4595:                                             ; preds = %4586, %4577
  %4596 = phi i32 [ %4581, %4577 ], [ %4591, %4586 ]
  %4597 = and i64 %4546, 4294967295
  %4598 = getelementptr inbounds i32, ptr %6, i64 %4597
  %4599 = load i32, ptr %4598, align 4, !tbaa !5
  %4600 = mul nsw i32 %4599, %4596
  %4601 = add nsw i32 %4600, %4540
  %4602 = icmp sgt i64 %4538, 2
  %4603 = add nsw i64 %4539, -1
  %4604 = add i32 %4537, 1
  br i1 %4602, label %4536, label %4605, !llvm.loop !356

4605:                                             ; preds = %4595, %4532
  %4606 = phi i32 [ %4535, %4532 ], [ %4601, %4595 ]
  %4607 = sext i32 %4606 to i64
  %4608 = getelementptr inbounds i32, ptr %4205, i64 %4607
  %4609 = load i32, ptr %4608, align 4, !tbaa !5
  %4610 = sitofp i32 %4609 to float
  %4611 = fadd fast float %4533, %4610
  %4612 = add nuw nsw i32 %4534, 1
  br i1 %4526, label %4613, label %4660

4613:                                             ; preds = %4605
  %4614 = load i32, ptr %4, align 4, !tbaa !5
  %4615 = load i32, ptr %12, align 4, !tbaa !5
  %4616 = add nsw i32 %4615, -1
  %4617 = icmp slt i32 %4614, %4616
  br i1 %4617, label %4637, label %4618

4618:                                             ; preds = %4613
  %4619 = icmp eq i32 %4614, %4616
  br i1 %4619, label %4620, label %4653

4620:                                             ; preds = %4618
  store i32 0, ptr %4, align 4, !tbaa !5
  %4621 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4621, ptr %6, align 4, !tbaa !5
  br i1 %4531, label %4660, label %4622

4622:                                             ; preds = %4620, %4647
  %4623 = phi i64 [ %4651, %4647 ], [ 1, %4620 ]
  %4624 = getelementptr inbounds i32, ptr %4, i64 %4623
  %4625 = load i32, ptr %4624, align 4, !tbaa !5
  %4626 = getelementptr inbounds i32, ptr %12, i64 %4623
  %4627 = load i32, ptr %4626, align 4, !tbaa !5
  %4628 = add nsw i32 %4627, -1
  %4629 = icmp slt i32 %4625, %4628
  br i1 %4629, label %4630, label %4645

4630:                                             ; preds = %4622
  br i1 %4617, label %4637, label %4631

4631:                                             ; preds = %4630
  %4632 = getelementptr inbounds i32, ptr %7, i64 %4623
  %4633 = load i32, ptr %4632, align 4, !tbaa !5
  %4634 = getelementptr inbounds i32, ptr %6, i64 %4623
  %4635 = load i32, ptr %4634, align 4, !tbaa !5
  %4636 = add nsw i32 %4635, %4633
  store i32 %4636, ptr %4634, align 4, !tbaa !5
  br label %4655

4637:                                             ; preds = %4613, %4630
  %4638 = phi i32 [ %4625, %4630 ], [ %4614, %4613 ]
  %4639 = phi ptr [ %4624, %4630 ], [ %4, %4613 ]
  %4640 = phi i64 [ %4623, %4630 ], [ 0, %4613 ]
  %4641 = add nsw i32 %4638, 1
  store i32 %4641, ptr %4639, align 4, !tbaa !5
  %4642 = getelementptr inbounds i32, ptr %7, i64 %4640
  %4643 = load i32, ptr %4642, align 4, !tbaa !5
  %4644 = getelementptr inbounds i32, ptr %6, i64 %4640
  br label %4655

4645:                                             ; preds = %4622
  %4646 = icmp eq i32 %4625, %4628
  br i1 %4646, label %4647, label %4653

4647:                                             ; preds = %4645
  store i32 0, ptr %4624, align 4, !tbaa !5
  %4648 = getelementptr inbounds i32, ptr %8, i64 %4623
  %4649 = load i32, ptr %4648, align 4, !tbaa !5
  %4650 = getelementptr inbounds i32, ptr %6, i64 %4623
  store i32 %4649, ptr %4650, align 4, !tbaa !5
  %4651 = add nuw nsw i64 %4623, 1
  %4652 = icmp eq i64 %4651, %4529
  br i1 %4652, label %4660, label %4622, !llvm.loop !357

4653:                                             ; preds = %4618, %4645
  store float %4611, ptr %4207, align 4, !tbaa !162
  %4654 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4655:                                             ; preds = %4631, %4637
  %4656 = phi ptr [ %4644, %4637 ], [ %4624, %4631 ]
  %4657 = phi i32 [ %4643, %4637 ], [ 1, %4631 ]
  %4658 = load i32, ptr %4656, align 4, !tbaa !5
  %4659 = add nsw i32 %4658, %4657
  store i32 %4659, ptr %4656, align 4, !tbaa !5
  br label %4660

4660:                                             ; preds = %4647, %4655, %4620, %4605
  %4661 = icmp eq i32 %4612, %5
  br i1 %4661, label %5402, label %4532, !llvm.loop !358

4662:                                             ; preds = %4515, %4797
  %4663 = phi float [ 0.000000e+00, %4515 ], [ %4745, %4797 ]
  %4664 = phi i32 [ 0, %4515 ], [ %4746, %4797 ]
  %4665 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4516, label %4666, label %4735

4666:                                             ; preds = %4662, %4725
  %4667 = phi i32 [ %4734, %4725 ], [ 0, %4662 ]
  %4668 = phi i64 [ %4676, %4725 ], [ %4520, %4662 ]
  %4669 = phi i64 [ %4733, %4725 ], [ %4519, %4662 ]
  %4670 = phi i32 [ %4731, %4725 ], [ %4665, %4662 ]
  %4671 = sub i32 %4518, %4667
  %4672 = tail call i32 @llvm.smin.i32(i32 %4671, i32 0)
  %4673 = sub i32 %4671, %4672
  %4674 = zext i32 %4673 to i64
  %4675 = add nuw nsw i64 %4674, 1
  %4676 = add nsw i64 %4668, -1
  %4677 = icmp ult i32 %4673, 31
  br i1 %4677, label %4713, label %4678

4678:                                             ; preds = %4666
  %4679 = and i64 %4675, 8589934560
  %4680 = sub i64 %4669, %4679
  br label %4681

4681:                                             ; preds = %4681, %4678
  %4682 = phi i64 [ 0, %4678 ], [ %4705, %4681 ]
  %4683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4701, %4681 ]
  %4684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4702, %4681 ]
  %4685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4703, %4681 ]
  %4686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4704, %4681 ]
  %4687 = sub i64 %4669, %4682
  %4688 = getelementptr inbounds i32, ptr %11, i64 %4687
  %4689 = getelementptr inbounds i32, ptr %4688, i64 -7
  %4690 = load <8 x i32>, ptr %4689, align 4, !tbaa !5
  %4691 = shufflevector <8 x i32> %4690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4692 = getelementptr inbounds i32, ptr %4688, i64 -15
  %4693 = load <8 x i32>, ptr %4692, align 4, !tbaa !5
  %4694 = shufflevector <8 x i32> %4693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4695 = getelementptr inbounds i32, ptr %4688, i64 -23
  %4696 = load <8 x i32>, ptr %4695, align 4, !tbaa !5
  %4697 = shufflevector <8 x i32> %4696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4698 = getelementptr inbounds i32, ptr %4688, i64 -31
  %4699 = load <8 x i32>, ptr %4698, align 4, !tbaa !5
  %4700 = shufflevector <8 x i32> %4699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4701 = mul <8 x i32> %4691, %4683
  %4702 = mul <8 x i32> %4694, %4684
  %4703 = mul <8 x i32> %4697, %4685
  %4704 = mul <8 x i32> %4700, %4686
  %4705 = add nuw i64 %4682, 32
  %4706 = icmp eq i64 %4705, %4679
  br i1 %4706, label %4707, label %4681, !llvm.loop !359

4707:                                             ; preds = %4681
  %4708 = mul <8 x i32> %4702, %4701
  %4709 = mul <8 x i32> %4703, %4708
  %4710 = mul <8 x i32> %4704, %4709
  %4711 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4710)
  %4712 = icmp eq i64 %4675, %4679
  br i1 %4712, label %4725, label %4713

4713:                                             ; preds = %4666, %4707
  %4714 = phi i64 [ %4669, %4666 ], [ %4680, %4707 ]
  %4715 = phi i32 [ 1, %4666 ], [ %4711, %4707 ]
  br label %4716

4716:                                             ; preds = %4713, %4716
  %4717 = phi i64 [ %4722, %4716 ], [ %4714, %4713 ]
  %4718 = phi i32 [ %4721, %4716 ], [ %4715, %4713 ]
  %4719 = getelementptr inbounds i32, ptr %11, i64 %4717
  %4720 = load i32, ptr %4719, align 4, !tbaa !5
  %4721 = mul nsw i32 %4720, %4718
  %4722 = add nsw i64 %4717, -1
  %4723 = trunc i64 %4717 to i32
  %4724 = icmp sgt i32 %4723, 0
  br i1 %4724, label %4716, label %4725, !llvm.loop !360

4725:                                             ; preds = %4716, %4707
  %4726 = phi i32 [ %4711, %4707 ], [ %4721, %4716 ]
  %4727 = and i64 %4676, 4294967295
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4727
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = mul nsw i32 %4729, %4726
  %4731 = add nsw i32 %4730, %4670
  %4732 = icmp sgt i64 %4668, 2
  %4733 = add nsw i64 %4669, -1
  %4734 = add i32 %4667, 1
  br i1 %4732, label %4666, label %4735, !llvm.loop !361

4735:                                             ; preds = %4725, %4662
  %4736 = phi i32 [ %4665, %4662 ], [ %4731, %4725 ]
  %4737 = icmp slt i32 %4736, %5
  br i1 %4737, label %4740, label %4738

4738:                                             ; preds = %4735
  %4739 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

4740:                                             ; preds = %4735
  %4741 = sext i32 %4736 to i64
  %4742 = getelementptr inbounds i32, ptr %4205, i64 %4741
  %4743 = load i32, ptr %4742, align 4, !tbaa !5
  %4744 = sitofp i32 %4743 to float
  %4745 = fadd fast float %4663, %4744
  store float %4745, ptr %4207, align 4, !tbaa !162
  %4746 = add nuw nsw i32 %4664, 1
  br i1 %4517, label %4747, label %4797

4747:                                             ; preds = %4740
  %4748 = load i32, ptr %4, align 4, !tbaa !5
  %4749 = load i32, ptr %12, align 4, !tbaa !5
  %4750 = add nsw i32 %4749, -1
  %4751 = icmp slt i32 %4748, %4750
  br i1 %4751, label %4774, label %4752

4752:                                             ; preds = %4747
  %4753 = icmp eq i32 %4748, %4750
  br i1 %4753, label %4754, label %4790

4754:                                             ; preds = %4752
  store i32 0, ptr %4, align 4, !tbaa !5
  %4755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4755, ptr %6, align 4, !tbaa !5
  br i1 %4522, label %4797, label %4756

4756:                                             ; preds = %4754, %4784
  %4757 = phi i64 [ %4788, %4784 ], [ 1, %4754 ]
  %4758 = getelementptr inbounds i32, ptr %4, i64 %4757
  %4759 = load i32, ptr %4758, align 4, !tbaa !5
  %4760 = getelementptr inbounds i32, ptr %12, i64 %4757
  %4761 = load i32, ptr %4760, align 4, !tbaa !5
  %4762 = add nsw i32 %4761, -1
  %4763 = icmp slt i32 %4759, %4762
  br i1 %4763, label %4764, label %4782

4764:                                             ; preds = %4756
  br i1 %4751, label %4774, label %4765

4765:                                             ; preds = %4764
  %4766 = shl i64 %4757, 32
  %4767 = add i64 %4766, -4294967296
  %4768 = ashr exact i64 %4767, 32
  %4769 = getelementptr inbounds i32, ptr %7, i64 %4768
  %4770 = load i32, ptr %4769, align 4, !tbaa !5
  %4771 = getelementptr inbounds i32, ptr %6, i64 %4757
  %4772 = load i32, ptr %4771, align 4, !tbaa !5
  %4773 = add nsw i32 %4772, %4770
  store i32 %4773, ptr %4771, align 4, !tbaa !5
  br label %4792

4774:                                             ; preds = %4747, %4764
  %4775 = phi i32 [ %4759, %4764 ], [ %4748, %4747 ]
  %4776 = phi ptr [ %4758, %4764 ], [ %4, %4747 ]
  %4777 = phi i64 [ %4757, %4764 ], [ 0, %4747 ]
  %4778 = add nsw i32 %4775, 1
  store i32 %4778, ptr %4776, align 4, !tbaa !5
  %4779 = getelementptr inbounds i32, ptr %7, i64 %4777
  %4780 = load i32, ptr %4779, align 4, !tbaa !5
  %4781 = getelementptr inbounds i32, ptr %6, i64 %4777
  br label %4792

4782:                                             ; preds = %4756
  %4783 = icmp eq i32 %4759, %4762
  br i1 %4783, label %4784, label %4790

4784:                                             ; preds = %4782
  store i32 0, ptr %4758, align 4, !tbaa !5
  %4785 = getelementptr inbounds i32, ptr %8, i64 %4757
  %4786 = load i32, ptr %4785, align 4, !tbaa !5
  %4787 = getelementptr inbounds i32, ptr %6, i64 %4757
  store i32 %4786, ptr %4787, align 4, !tbaa !5
  %4788 = add nuw nsw i64 %4757, 1
  %4789 = icmp eq i64 %4788, %4520
  br i1 %4789, label %4797, label %4756, !llvm.loop !362

4790:                                             ; preds = %4752, %4782
  %4791 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4792:                                             ; preds = %4765, %4774
  %4793 = phi ptr [ %4781, %4774 ], [ %4758, %4765 ]
  %4794 = phi i32 [ %4780, %4774 ], [ 1, %4765 ]
  %4795 = load i32, ptr %4793, align 4, !tbaa !5
  %4796 = add nsw i32 %4795, %4794
  store i32 %4796, ptr %4793, align 4, !tbaa !5
  br label %4797

4797:                                             ; preds = %4784, %4792, %4754, %4740
  %4798 = icmp eq i32 %4746, %5
  br i1 %4798, label %5404, label %4662, !llvm.loop !363

4799:                                             ; preds = %4212
  %4800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

4801:                                             ; preds = %18
  %4802 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4803 = load ptr, ptr %4802, align 8, !tbaa !9
  %4804 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4805 = load ptr, ptr %4804, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4805, align 8, !tbaa !18
  %4806 = icmp eq i32 %13, 0
  br i1 %4806, label %4807, label %4810

4807:                                             ; preds = %4801
  %4808 = load i32, ptr %4803, align 4, !tbaa !5
  %4809 = sitofp i32 %4808 to double
  store double %4809, ptr %4805, align 8, !tbaa !18
  br label %5404

4810:                                             ; preds = %4801
  switch i32 %1, label %5394 [
    i32 1, label %4811
    i32 0, label %5104
  ]

4811:                                             ; preds = %4810
  %4812 = getelementptr inbounds i32, ptr %3, i64 %19
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = icmp eq i32 %4813, 0
  %4815 = icmp sgt i32 %5, 0
  br i1 %4814, label %4825, label %4816

4816:                                             ; preds = %4811
  br i1 %4815, label %4817, label %5404

4817:                                             ; preds = %4816
  %4818 = icmp sgt i32 %13, 1
  %4819 = icmp sgt i32 %13, 0
  %4820 = add i32 %13, -2
  %4821 = zext i32 %4820 to i64
  %4822 = zext i32 %13 to i64
  %4823 = add nuw i32 %5, 1
  %4824 = icmp eq i32 %13, 1
  br label %4967

4825:                                             ; preds = %4811
  br i1 %4815, label %4826, label %5404

4826:                                             ; preds = %4825
  %4827 = icmp sgt i32 %13, 1
  %4828 = icmp sgt i32 %13, 0
  %4829 = add i32 %13, -2
  %4830 = zext i32 %4829 to i64
  %4831 = zext i32 %13 to i64
  %4832 = add nuw i32 %5, 1
  %4833 = icmp eq i32 %13, 1
  br label %4834

4834:                                             ; preds = %4826, %4965
  %4835 = phi double [ 0.000000e+00, %4826 ], [ %4916, %4965 ]
  %4836 = phi i32 [ 0, %4826 ], [ %4917, %4965 ]
  %4837 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4827, label %4838, label %4907

4838:                                             ; preds = %4834, %4897
  %4839 = phi i32 [ %4906, %4897 ], [ 0, %4834 ]
  %4840 = phi i64 [ %4848, %4897 ], [ %4831, %4834 ]
  %4841 = phi i64 [ %4905, %4897 ], [ %4830, %4834 ]
  %4842 = phi i32 [ %4903, %4897 ], [ %4837, %4834 ]
  %4843 = sub i32 %4829, %4839
  %4844 = tail call i32 @llvm.smin.i32(i32 %4843, i32 0)
  %4845 = sub i32 %4843, %4844
  %4846 = zext i32 %4845 to i64
  %4847 = add nuw nsw i64 %4846, 1
  %4848 = add nsw i64 %4840, -1
  %4849 = icmp ult i32 %4845, 31
  br i1 %4849, label %4885, label %4850

4850:                                             ; preds = %4838
  %4851 = and i64 %4847, 8589934560
  %4852 = sub i64 %4841, %4851
  br label %4853

4853:                                             ; preds = %4853, %4850
  %4854 = phi i64 [ 0, %4850 ], [ %4877, %4853 ]
  %4855 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4873, %4853 ]
  %4856 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4874, %4853 ]
  %4857 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4875, %4853 ]
  %4858 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4876, %4853 ]
  %4859 = sub i64 %4841, %4854
  %4860 = getelementptr inbounds i32, ptr %9, i64 %4859
  %4861 = getelementptr inbounds i32, ptr %4860, i64 -7
  %4862 = load <8 x i32>, ptr %4861, align 4, !tbaa !5
  %4863 = shufflevector <8 x i32> %4862, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4864 = getelementptr inbounds i32, ptr %4860, i64 -15
  %4865 = load <8 x i32>, ptr %4864, align 4, !tbaa !5
  %4866 = shufflevector <8 x i32> %4865, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4867 = getelementptr inbounds i32, ptr %4860, i64 -23
  %4868 = load <8 x i32>, ptr %4867, align 4, !tbaa !5
  %4869 = shufflevector <8 x i32> %4868, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4870 = getelementptr inbounds i32, ptr %4860, i64 -31
  %4871 = load <8 x i32>, ptr %4870, align 4, !tbaa !5
  %4872 = shufflevector <8 x i32> %4871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4873 = mul <8 x i32> %4863, %4855
  %4874 = mul <8 x i32> %4866, %4856
  %4875 = mul <8 x i32> %4869, %4857
  %4876 = mul <8 x i32> %4872, %4858
  %4877 = add nuw i64 %4854, 32
  %4878 = icmp eq i64 %4877, %4851
  br i1 %4878, label %4879, label %4853, !llvm.loop !364

4879:                                             ; preds = %4853
  %4880 = mul <8 x i32> %4874, %4873
  %4881 = mul <8 x i32> %4875, %4880
  %4882 = mul <8 x i32> %4876, %4881
  %4883 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4882)
  %4884 = icmp eq i64 %4847, %4851
  br i1 %4884, label %4897, label %4885

4885:                                             ; preds = %4838, %4879
  %4886 = phi i64 [ %4841, %4838 ], [ %4852, %4879 ]
  %4887 = phi i32 [ 1, %4838 ], [ %4883, %4879 ]
  br label %4888

4888:                                             ; preds = %4885, %4888
  %4889 = phi i64 [ %4894, %4888 ], [ %4886, %4885 ]
  %4890 = phi i32 [ %4893, %4888 ], [ %4887, %4885 ]
  %4891 = getelementptr inbounds i32, ptr %9, i64 %4889
  %4892 = load i32, ptr %4891, align 4, !tbaa !5
  %4893 = mul nsw i32 %4892, %4890
  %4894 = add nsw i64 %4889, -1
  %4895 = trunc i64 %4889 to i32
  %4896 = icmp sgt i32 %4895, 0
  br i1 %4896, label %4888, label %4897, !llvm.loop !365

4897:                                             ; preds = %4888, %4879
  %4898 = phi i32 [ %4883, %4879 ], [ %4893, %4888 ]
  %4899 = and i64 %4848, 4294967295
  %4900 = getelementptr inbounds i32, ptr %6, i64 %4899
  %4901 = load i32, ptr %4900, align 4, !tbaa !5
  %4902 = mul nsw i32 %4901, %4898
  %4903 = add nsw i32 %4902, %4842
  %4904 = icmp sgt i64 %4840, 2
  %4905 = add nsw i64 %4841, -1
  %4906 = add i32 %4839, 1
  br i1 %4904, label %4838, label %4907, !llvm.loop !366

4907:                                             ; preds = %4897, %4834
  %4908 = phi i32 [ %4837, %4834 ], [ %4903, %4897 ]
  %4909 = sext i32 %4908 to i64
  %4910 = getelementptr inbounds double, ptr %2, i64 %4909
  %4911 = load double, ptr %4910, align 8, !tbaa !18
  %4912 = getelementptr inbounds i32, ptr %4803, i64 %4909
  %4913 = load i32, ptr %4912, align 4, !tbaa !5
  %4914 = sitofp i32 %4913 to double
  %4915 = fmul fast double %4911, %4914
  %4916 = fadd fast double %4915, %4835
  store double %4916, ptr %4805, align 8, !tbaa !18
  %4917 = add nuw nsw i32 %4836, 1
  br i1 %4828, label %4918, label %4965

4918:                                             ; preds = %4907
  %4919 = load i32, ptr %4, align 4, !tbaa !5
  %4920 = load i32, ptr %12, align 4, !tbaa !5
  %4921 = add nsw i32 %4920, -1
  %4922 = icmp slt i32 %4919, %4921
  br i1 %4922, label %4942, label %4923

4923:                                             ; preds = %4918
  %4924 = icmp eq i32 %4919, %4921
  br i1 %4924, label %4925, label %4958

4925:                                             ; preds = %4923
  store i32 0, ptr %4, align 4, !tbaa !5
  %4926 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4926, ptr %6, align 4, !tbaa !5
  br i1 %4833, label %4965, label %4927

4927:                                             ; preds = %4925, %4952
  %4928 = phi i64 [ %4956, %4952 ], [ 1, %4925 ]
  %4929 = getelementptr inbounds i32, ptr %4, i64 %4928
  %4930 = load i32, ptr %4929, align 4, !tbaa !5
  %4931 = getelementptr inbounds i32, ptr %12, i64 %4928
  %4932 = load i32, ptr %4931, align 4, !tbaa !5
  %4933 = add nsw i32 %4932, -1
  %4934 = icmp slt i32 %4930, %4933
  br i1 %4934, label %4935, label %4950

4935:                                             ; preds = %4927
  br i1 %4922, label %4942, label %4936

4936:                                             ; preds = %4935
  %4937 = getelementptr inbounds i32, ptr %7, i64 %4928
  %4938 = load i32, ptr %4937, align 4, !tbaa !5
  %4939 = getelementptr inbounds i32, ptr %6, i64 %4928
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = add nsw i32 %4940, %4938
  store i32 %4941, ptr %4939, align 4, !tbaa !5
  br label %4960

4942:                                             ; preds = %4918, %4935
  %4943 = phi i32 [ %4930, %4935 ], [ %4919, %4918 ]
  %4944 = phi ptr [ %4929, %4935 ], [ %4, %4918 ]
  %4945 = phi i64 [ %4928, %4935 ], [ 0, %4918 ]
  %4946 = add nsw i32 %4943, 1
  store i32 %4946, ptr %4944, align 4, !tbaa !5
  %4947 = getelementptr inbounds i32, ptr %7, i64 %4945
  %4948 = load i32, ptr %4947, align 4, !tbaa !5
  %4949 = getelementptr inbounds i32, ptr %6, i64 %4945
  br label %4960

4950:                                             ; preds = %4927
  %4951 = icmp eq i32 %4930, %4933
  br i1 %4951, label %4952, label %4958

4952:                                             ; preds = %4950
  store i32 0, ptr %4929, align 4, !tbaa !5
  %4953 = getelementptr inbounds i32, ptr %8, i64 %4928
  %4954 = load i32, ptr %4953, align 4, !tbaa !5
  %4955 = getelementptr inbounds i32, ptr %6, i64 %4928
  store i32 %4954, ptr %4955, align 4, !tbaa !5
  %4956 = add nuw nsw i64 %4928, 1
  %4957 = icmp eq i64 %4956, %4831
  br i1 %4957, label %4965, label %4927, !llvm.loop !367

4958:                                             ; preds = %4923, %4950
  %4959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4960:                                             ; preds = %4936, %4942
  %4961 = phi ptr [ %4949, %4942 ], [ %4929, %4936 ]
  %4962 = phi i32 [ %4948, %4942 ], [ 1, %4936 ]
  %4963 = load i32, ptr %4961, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, %4962
  store i32 %4964, ptr %4961, align 4, !tbaa !5
  br label %4965

4965:                                             ; preds = %4952, %4960, %4925, %4907
  %4966 = icmp eq i32 %4917, %5
  br i1 %4966, label %5404, label %4834, !llvm.loop !368

4967:                                             ; preds = %4817, %5102
  %4968 = phi double [ 0.000000e+00, %4817 ], [ %5050, %5102 ]
  %4969 = phi i32 [ 0, %4817 ], [ %5051, %5102 ]
  %4970 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4818, label %4971, label %5040

4971:                                             ; preds = %4967, %5030
  %4972 = phi i32 [ %5039, %5030 ], [ 0, %4967 ]
  %4973 = phi i64 [ %4981, %5030 ], [ %4822, %4967 ]
  %4974 = phi i64 [ %5038, %5030 ], [ %4821, %4967 ]
  %4975 = phi i32 [ %5036, %5030 ], [ %4970, %4967 ]
  %4976 = sub i32 %4820, %4972
  %4977 = tail call i32 @llvm.smin.i32(i32 %4976, i32 0)
  %4978 = sub i32 %4976, %4977
  %4979 = zext i32 %4978 to i64
  %4980 = add nuw nsw i64 %4979, 1
  %4981 = add nsw i64 %4973, -1
  %4982 = icmp ult i32 %4978, 31
  br i1 %4982, label %5018, label %4983

4983:                                             ; preds = %4971
  %4984 = and i64 %4980, 8589934560
  %4985 = sub i64 %4974, %4984
  br label %4986

4986:                                             ; preds = %4986, %4983
  %4987 = phi i64 [ 0, %4983 ], [ %5010, %4986 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5006, %4986 ]
  %4989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5007, %4986 ]
  %4990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5008, %4986 ]
  %4991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5009, %4986 ]
  %4992 = sub i64 %4974, %4987
  %4993 = getelementptr inbounds i32, ptr %11, i64 %4992
  %4994 = getelementptr inbounds i32, ptr %4993, i64 -7
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !5
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4993, i64 -15
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !5
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4993, i64 -23
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !5
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = getelementptr inbounds i32, ptr %4993, i64 -31
  %5004 = load <8 x i32>, ptr %5003, align 4, !tbaa !5
  %5005 = shufflevector <8 x i32> %5004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5006 = mul <8 x i32> %4996, %4988
  %5007 = mul <8 x i32> %4999, %4989
  %5008 = mul <8 x i32> %5002, %4990
  %5009 = mul <8 x i32> %5005, %4991
  %5010 = add nuw i64 %4987, 32
  %5011 = icmp eq i64 %5010, %4984
  br i1 %5011, label %5012, label %4986, !llvm.loop !369

5012:                                             ; preds = %4986
  %5013 = mul <8 x i32> %5007, %5006
  %5014 = mul <8 x i32> %5008, %5013
  %5015 = mul <8 x i32> %5009, %5014
  %5016 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5015)
  %5017 = icmp eq i64 %4980, %4984
  br i1 %5017, label %5030, label %5018

5018:                                             ; preds = %4971, %5012
  %5019 = phi i64 [ %4974, %4971 ], [ %4985, %5012 ]
  %5020 = phi i32 [ 1, %4971 ], [ %5016, %5012 ]
  br label %5021

5021:                                             ; preds = %5018, %5021
  %5022 = phi i64 [ %5027, %5021 ], [ %5019, %5018 ]
  %5023 = phi i32 [ %5026, %5021 ], [ %5020, %5018 ]
  %5024 = getelementptr inbounds i32, ptr %11, i64 %5022
  %5025 = load i32, ptr %5024, align 4, !tbaa !5
  %5026 = mul nsw i32 %5025, %5023
  %5027 = add nsw i64 %5022, -1
  %5028 = trunc i64 %5022 to i32
  %5029 = icmp sgt i32 %5028, 0
  br i1 %5029, label %5021, label %5030, !llvm.loop !370

5030:                                             ; preds = %5021, %5012
  %5031 = phi i32 [ %5016, %5012 ], [ %5026, %5021 ]
  %5032 = and i64 %4981, 4294967295
  %5033 = getelementptr inbounds i32, ptr %6, i64 %5032
  %5034 = load i32, ptr %5033, align 4, !tbaa !5
  %5035 = mul nsw i32 %5034, %5031
  %5036 = add nsw i32 %5035, %4975
  %5037 = icmp sgt i64 %4973, 2
  %5038 = add nsw i64 %4974, -1
  %5039 = add i32 %4972, 1
  br i1 %5037, label %4971, label %5040, !llvm.loop !371

5040:                                             ; preds = %5030, %4967
  %5041 = phi i32 [ %4970, %4967 ], [ %5036, %5030 ]
  %5042 = icmp slt i32 %5041, %5
  br i1 %5042, label %5045, label %5043

5043:                                             ; preds = %5040
  %5044 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

5045:                                             ; preds = %5040
  %5046 = sext i32 %5041 to i64
  %5047 = getelementptr inbounds i32, ptr %4803, i64 %5046
  %5048 = load i32, ptr %5047, align 4, !tbaa !5
  %5049 = sitofp i32 %5048 to double
  %5050 = fadd fast double %4968, %5049
  store double %5050, ptr %4805, align 8, !tbaa !18
  %5051 = add nuw nsw i32 %4969, 1
  br i1 %4819, label %5052, label %5102

5052:                                             ; preds = %5045
  %5053 = load i32, ptr %4, align 4, !tbaa !5
  %5054 = load i32, ptr %12, align 4, !tbaa !5
  %5055 = add nsw i32 %5054, -1
  %5056 = icmp slt i32 %5053, %5055
  br i1 %5056, label %5079, label %5057

5057:                                             ; preds = %5052
  %5058 = icmp eq i32 %5053, %5055
  br i1 %5058, label %5059, label %5095

5059:                                             ; preds = %5057
  store i32 0, ptr %4, align 4, !tbaa !5
  %5060 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5060, ptr %6, align 4, !tbaa !5
  br i1 %4824, label %5102, label %5061

5061:                                             ; preds = %5059, %5089
  %5062 = phi i64 [ %5093, %5089 ], [ 1, %5059 ]
  %5063 = getelementptr inbounds i32, ptr %4, i64 %5062
  %5064 = load i32, ptr %5063, align 4, !tbaa !5
  %5065 = getelementptr inbounds i32, ptr %12, i64 %5062
  %5066 = load i32, ptr %5065, align 4, !tbaa !5
  %5067 = add nsw i32 %5066, -1
  %5068 = icmp slt i32 %5064, %5067
  br i1 %5068, label %5069, label %5087

5069:                                             ; preds = %5061
  br i1 %5056, label %5079, label %5070

5070:                                             ; preds = %5069
  %5071 = shl i64 %5062, 32
  %5072 = add i64 %5071, -4294967296
  %5073 = ashr exact i64 %5072, 32
  %5074 = getelementptr inbounds i32, ptr %7, i64 %5073
  %5075 = load i32, ptr %5074, align 4, !tbaa !5
  %5076 = getelementptr inbounds i32, ptr %6, i64 %5062
  %5077 = load i32, ptr %5076, align 4, !tbaa !5
  %5078 = add nsw i32 %5077, %5075
  store i32 %5078, ptr %5076, align 4, !tbaa !5
  br label %5097

5079:                                             ; preds = %5052, %5069
  %5080 = phi i32 [ %5064, %5069 ], [ %5053, %5052 ]
  %5081 = phi ptr [ %5063, %5069 ], [ %4, %5052 ]
  %5082 = phi i64 [ %5062, %5069 ], [ 0, %5052 ]
  %5083 = add nsw i32 %5080, 1
  store i32 %5083, ptr %5081, align 4, !tbaa !5
  %5084 = getelementptr inbounds i32, ptr %7, i64 %5082
  %5085 = load i32, ptr %5084, align 4, !tbaa !5
  %5086 = getelementptr inbounds i32, ptr %6, i64 %5082
  br label %5097

5087:                                             ; preds = %5061
  %5088 = icmp eq i32 %5064, %5067
  br i1 %5088, label %5089, label %5095

5089:                                             ; preds = %5087
  store i32 0, ptr %5063, align 4, !tbaa !5
  %5090 = getelementptr inbounds i32, ptr %8, i64 %5062
  %5091 = load i32, ptr %5090, align 4, !tbaa !5
  %5092 = getelementptr inbounds i32, ptr %6, i64 %5062
  store i32 %5091, ptr %5092, align 4, !tbaa !5
  %5093 = add nuw nsw i64 %5062, 1
  %5094 = icmp eq i64 %5093, %4822
  br i1 %5094, label %5102, label %5061, !llvm.loop !372

5095:                                             ; preds = %5057, %5087
  %5096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

5097:                                             ; preds = %5070, %5079
  %5098 = phi ptr [ %5086, %5079 ], [ %5063, %5070 ]
  %5099 = phi i32 [ %5085, %5079 ], [ 1, %5070 ]
  %5100 = load i32, ptr %5098, align 4, !tbaa !5
  %5101 = add nsw i32 %5100, %5099
  store i32 %5101, ptr %5098, align 4, !tbaa !5
  br label %5102

5102:                                             ; preds = %5089, %5097, %5059, %5045
  %5103 = icmp eq i32 %5051, %5
  br i1 %5103, label %5404, label %4967, !llvm.loop !373

5104:                                             ; preds = %4810
  %5105 = getelementptr inbounds i32, ptr %3, i64 %19
  %5106 = load i32, ptr %5105, align 4, !tbaa !5
  %5107 = icmp eq i32 %5106, 0
  %5108 = icmp sgt i32 %5, 0
  br i1 %5107, label %5118, label %5109

5109:                                             ; preds = %5104
  br i1 %5108, label %5110, label %5404

5110:                                             ; preds = %5109
  %5111 = icmp sgt i32 %13, 1
  %5112 = icmp sgt i32 %13, 0
  %5113 = add i32 %13, -2
  %5114 = zext i32 %5113 to i64
  %5115 = zext i32 %13 to i64
  %5116 = add nuw i32 %5, 1
  %5117 = icmp eq i32 %13, 1
  br label %5257

5118:                                             ; preds = %5104
  br i1 %5108, label %5119, label %5404

5119:                                             ; preds = %5118
  %5120 = icmp sgt i32 %13, 1
  %5121 = icmp sgt i32 %13, 0
  %5122 = add i32 %13, -2
  %5123 = zext i32 %5122 to i64
  %5124 = zext i32 %13 to i64
  %5125 = add nuw i32 %5, 1
  %5126 = icmp eq i32 %13, 1
  br label %5127

5127:                                             ; preds = %5119, %5255
  %5128 = phi double [ 0.000000e+00, %5119 ], [ %5206, %5255 ]
  %5129 = phi i32 [ 0, %5119 ], [ %5207, %5255 ]
  %5130 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5120, label %5131, label %5200

5131:                                             ; preds = %5127, %5190
  %5132 = phi i32 [ %5199, %5190 ], [ 0, %5127 ]
  %5133 = phi i64 [ %5141, %5190 ], [ %5124, %5127 ]
  %5134 = phi i64 [ %5198, %5190 ], [ %5123, %5127 ]
  %5135 = phi i32 [ %5196, %5190 ], [ %5130, %5127 ]
  %5136 = sub i32 %5122, %5132
  %5137 = tail call i32 @llvm.smin.i32(i32 %5136, i32 0)
  %5138 = sub i32 %5136, %5137
  %5139 = zext i32 %5138 to i64
  %5140 = add nuw nsw i64 %5139, 1
  %5141 = add nsw i64 %5133, -1
  %5142 = icmp ult i32 %5138, 31
  br i1 %5142, label %5178, label %5143

5143:                                             ; preds = %5131
  %5144 = and i64 %5140, 8589934560
  %5145 = sub i64 %5134, %5144
  br label %5146

5146:                                             ; preds = %5146, %5143
  %5147 = phi i64 [ 0, %5143 ], [ %5170, %5146 ]
  %5148 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5166, %5146 ]
  %5149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5167, %5146 ]
  %5150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5168, %5146 ]
  %5151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5169, %5146 ]
  %5152 = sub i64 %5134, %5147
  %5153 = getelementptr inbounds i32, ptr %9, i64 %5152
  %5154 = getelementptr inbounds i32, ptr %5153, i64 -7
  %5155 = load <8 x i32>, ptr %5154, align 4, !tbaa !5
  %5156 = shufflevector <8 x i32> %5155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5157 = getelementptr inbounds i32, ptr %5153, i64 -15
  %5158 = load <8 x i32>, ptr %5157, align 4, !tbaa !5
  %5159 = shufflevector <8 x i32> %5158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5160 = getelementptr inbounds i32, ptr %5153, i64 -23
  %5161 = load <8 x i32>, ptr %5160, align 4, !tbaa !5
  %5162 = shufflevector <8 x i32> %5161, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5163 = getelementptr inbounds i32, ptr %5153, i64 -31
  %5164 = load <8 x i32>, ptr %5163, align 4, !tbaa !5
  %5165 = shufflevector <8 x i32> %5164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5166 = mul <8 x i32> %5156, %5148
  %5167 = mul <8 x i32> %5159, %5149
  %5168 = mul <8 x i32> %5162, %5150
  %5169 = mul <8 x i32> %5165, %5151
  %5170 = add nuw i64 %5147, 32
  %5171 = icmp eq i64 %5170, %5144
  br i1 %5171, label %5172, label %5146, !llvm.loop !374

5172:                                             ; preds = %5146
  %5173 = mul <8 x i32> %5167, %5166
  %5174 = mul <8 x i32> %5168, %5173
  %5175 = mul <8 x i32> %5169, %5174
  %5176 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5175)
  %5177 = icmp eq i64 %5140, %5144
  br i1 %5177, label %5190, label %5178

5178:                                             ; preds = %5131, %5172
  %5179 = phi i64 [ %5134, %5131 ], [ %5145, %5172 ]
  %5180 = phi i32 [ 1, %5131 ], [ %5176, %5172 ]
  br label %5181

5181:                                             ; preds = %5178, %5181
  %5182 = phi i64 [ %5187, %5181 ], [ %5179, %5178 ]
  %5183 = phi i32 [ %5186, %5181 ], [ %5180, %5178 ]
  %5184 = getelementptr inbounds i32, ptr %9, i64 %5182
  %5185 = load i32, ptr %5184, align 4, !tbaa !5
  %5186 = mul nsw i32 %5185, %5183
  %5187 = add nsw i64 %5182, -1
  %5188 = trunc i64 %5182 to i32
  %5189 = icmp sgt i32 %5188, 0
  br i1 %5189, label %5181, label %5190, !llvm.loop !375

5190:                                             ; preds = %5181, %5172
  %5191 = phi i32 [ %5176, %5172 ], [ %5186, %5181 ]
  %5192 = and i64 %5141, 4294967295
  %5193 = getelementptr inbounds i32, ptr %6, i64 %5192
  %5194 = load i32, ptr %5193, align 4, !tbaa !5
  %5195 = mul nsw i32 %5194, %5191
  %5196 = add nsw i32 %5195, %5135
  %5197 = icmp sgt i64 %5133, 2
  %5198 = add nsw i64 %5134, -1
  %5199 = add i32 %5132, 1
  br i1 %5197, label %5131, label %5200, !llvm.loop !376

5200:                                             ; preds = %5190, %5127
  %5201 = phi i32 [ %5130, %5127 ], [ %5196, %5190 ]
  %5202 = sext i32 %5201 to i64
  %5203 = getelementptr inbounds i32, ptr %4803, i64 %5202
  %5204 = load i32, ptr %5203, align 4, !tbaa !5
  %5205 = sitofp i32 %5204 to double
  %5206 = fadd fast double %5128, %5205
  %5207 = add nuw nsw i32 %5129, 1
  br i1 %5121, label %5208, label %5255

5208:                                             ; preds = %5200
  %5209 = load i32, ptr %4, align 4, !tbaa !5
  %5210 = load i32, ptr %12, align 4, !tbaa !5
  %5211 = add nsw i32 %5210, -1
  %5212 = icmp slt i32 %5209, %5211
  br i1 %5212, label %5232, label %5213

5213:                                             ; preds = %5208
  %5214 = icmp eq i32 %5209, %5211
  br i1 %5214, label %5215, label %5248

5215:                                             ; preds = %5213
  store i32 0, ptr %4, align 4, !tbaa !5
  %5216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5216, ptr %6, align 4, !tbaa !5
  br i1 %5126, label %5255, label %5217

5217:                                             ; preds = %5215, %5242
  %5218 = phi i64 [ %5246, %5242 ], [ 1, %5215 ]
  %5219 = getelementptr inbounds i32, ptr %4, i64 %5218
  %5220 = load i32, ptr %5219, align 4, !tbaa !5
  %5221 = getelementptr inbounds i32, ptr %12, i64 %5218
  %5222 = load i32, ptr %5221, align 4, !tbaa !5
  %5223 = add nsw i32 %5222, -1
  %5224 = icmp slt i32 %5220, %5223
  br i1 %5224, label %5225, label %5240

5225:                                             ; preds = %5217
  br i1 %5212, label %5232, label %5226

5226:                                             ; preds = %5225
  %5227 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5228 = load i32, ptr %5227, align 4, !tbaa !5
  %5229 = getelementptr inbounds i32, ptr %6, i64 %5218
  %5230 = load i32, ptr %5229, align 4, !tbaa !5
  %5231 = add nsw i32 %5230, %5228
  store i32 %5231, ptr %5229, align 4, !tbaa !5
  br label %5250

5232:                                             ; preds = %5208, %5225
  %5233 = phi i32 [ %5220, %5225 ], [ %5209, %5208 ]
  %5234 = phi ptr [ %5219, %5225 ], [ %4, %5208 ]
  %5235 = phi i64 [ %5218, %5225 ], [ 0, %5208 ]
  %5236 = add nsw i32 %5233, 1
  store i32 %5236, ptr %5234, align 4, !tbaa !5
  %5237 = getelementptr inbounds i32, ptr %7, i64 %5235
  %5238 = load i32, ptr %5237, align 4, !tbaa !5
  %5239 = getelementptr inbounds i32, ptr %6, i64 %5235
  br label %5250

5240:                                             ; preds = %5217
  %5241 = icmp eq i32 %5220, %5223
  br i1 %5241, label %5242, label %5248

5242:                                             ; preds = %5240
  store i32 0, ptr %5219, align 4, !tbaa !5
  %5243 = getelementptr inbounds i32, ptr %8, i64 %5218
  %5244 = load i32, ptr %5243, align 4, !tbaa !5
  %5245 = getelementptr inbounds i32, ptr %6, i64 %5218
  store i32 %5244, ptr %5245, align 4, !tbaa !5
  %5246 = add nuw nsw i64 %5218, 1
  %5247 = icmp eq i64 %5246, %5124
  br i1 %5247, label %5255, label %5217, !llvm.loop !377

5248:                                             ; preds = %5213, %5240
  store double %5206, ptr %4805, align 8, !tbaa !18
  %5249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

5250:                                             ; preds = %5226, %5232
  %5251 = phi ptr [ %5239, %5232 ], [ %5219, %5226 ]
  %5252 = phi i32 [ %5238, %5232 ], [ 1, %5226 ]
  %5253 = load i32, ptr %5251, align 4, !tbaa !5
  %5254 = add nsw i32 %5253, %5252
  store i32 %5254, ptr %5251, align 4, !tbaa !5
  br label %5255

5255:                                             ; preds = %5242, %5250, %5215, %5200
  %5256 = icmp eq i32 %5207, %5
  br i1 %5256, label %5403, label %5127, !llvm.loop !378

5257:                                             ; preds = %5110, %5392
  %5258 = phi double [ 0.000000e+00, %5110 ], [ %5340, %5392 ]
  %5259 = phi i32 [ 0, %5110 ], [ %5341, %5392 ]
  %5260 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5111, label %5261, label %5330

5261:                                             ; preds = %5257, %5320
  %5262 = phi i32 [ %5329, %5320 ], [ 0, %5257 ]
  %5263 = phi i64 [ %5271, %5320 ], [ %5115, %5257 ]
  %5264 = phi i64 [ %5328, %5320 ], [ %5114, %5257 ]
  %5265 = phi i32 [ %5326, %5320 ], [ %5260, %5257 ]
  %5266 = sub i32 %5113, %5262
  %5267 = tail call i32 @llvm.smin.i32(i32 %5266, i32 0)
  %5268 = sub i32 %5266, %5267
  %5269 = zext i32 %5268 to i64
  %5270 = add nuw nsw i64 %5269, 1
  %5271 = add nsw i64 %5263, -1
  %5272 = icmp ult i32 %5268, 31
  br i1 %5272, label %5308, label %5273

5273:                                             ; preds = %5261
  %5274 = and i64 %5270, 8589934560
  %5275 = sub i64 %5264, %5274
  br label %5276

5276:                                             ; preds = %5276, %5273
  %5277 = phi i64 [ 0, %5273 ], [ %5300, %5276 ]
  %5278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5296, %5276 ]
  %5279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5297, %5276 ]
  %5280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5298, %5276 ]
  %5281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5299, %5276 ]
  %5282 = sub i64 %5264, %5277
  %5283 = getelementptr inbounds i32, ptr %11, i64 %5282
  %5284 = getelementptr inbounds i32, ptr %5283, i64 -7
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !5
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = getelementptr inbounds i32, ptr %5283, i64 -15
  %5288 = load <8 x i32>, ptr %5287, align 4, !tbaa !5
  %5289 = shufflevector <8 x i32> %5288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5290 = getelementptr inbounds i32, ptr %5283, i64 -23
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !5
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = getelementptr inbounds i32, ptr %5283, i64 -31
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !5
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = mul <8 x i32> %5286, %5278
  %5297 = mul <8 x i32> %5289, %5279
  %5298 = mul <8 x i32> %5292, %5280
  %5299 = mul <8 x i32> %5295, %5281
  %5300 = add nuw i64 %5277, 32
  %5301 = icmp eq i64 %5300, %5274
  br i1 %5301, label %5302, label %5276, !llvm.loop !379

5302:                                             ; preds = %5276
  %5303 = mul <8 x i32> %5297, %5296
  %5304 = mul <8 x i32> %5298, %5303
  %5305 = mul <8 x i32> %5299, %5304
  %5306 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5305)
  %5307 = icmp eq i64 %5270, %5274
  br i1 %5307, label %5320, label %5308

5308:                                             ; preds = %5261, %5302
  %5309 = phi i64 [ %5264, %5261 ], [ %5275, %5302 ]
  %5310 = phi i32 [ 1, %5261 ], [ %5306, %5302 ]
  br label %5311

5311:                                             ; preds = %5308, %5311
  %5312 = phi i64 [ %5317, %5311 ], [ %5309, %5308 ]
  %5313 = phi i32 [ %5316, %5311 ], [ %5310, %5308 ]
  %5314 = getelementptr inbounds i32, ptr %11, i64 %5312
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = mul nsw i32 %5315, %5313
  %5317 = add nsw i64 %5312, -1
  %5318 = trunc i64 %5312 to i32
  %5319 = icmp sgt i32 %5318, 0
  br i1 %5319, label %5311, label %5320, !llvm.loop !380

5320:                                             ; preds = %5311, %5302
  %5321 = phi i32 [ %5306, %5302 ], [ %5316, %5311 ]
  %5322 = and i64 %5271, 4294967295
  %5323 = getelementptr inbounds i32, ptr %6, i64 %5322
  %5324 = load i32, ptr %5323, align 4, !tbaa !5
  %5325 = mul nsw i32 %5324, %5321
  %5326 = add nsw i32 %5325, %5265
  %5327 = icmp sgt i64 %5263, 2
  %5328 = add nsw i64 %5264, -1
  %5329 = add i32 %5262, 1
  br i1 %5327, label %5261, label %5330, !llvm.loop !381

5330:                                             ; preds = %5320, %5257
  %5331 = phi i32 [ %5260, %5257 ], [ %5326, %5320 ]
  %5332 = icmp slt i32 %5331, %5
  br i1 %5332, label %5335, label %5333

5333:                                             ; preds = %5330
  %5334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

5335:                                             ; preds = %5330
  %5336 = sext i32 %5331 to i64
  %5337 = getelementptr inbounds i32, ptr %4803, i64 %5336
  %5338 = load i32, ptr %5337, align 4, !tbaa !5
  %5339 = sitofp i32 %5338 to double
  %5340 = fadd fast double %5258, %5339
  store double %5340, ptr %4805, align 8, !tbaa !18
  %5341 = add nuw nsw i32 %5259, 1
  br i1 %5112, label %5342, label %5392

5342:                                             ; preds = %5335
  %5343 = load i32, ptr %4, align 4, !tbaa !5
  %5344 = load i32, ptr %12, align 4, !tbaa !5
  %5345 = add nsw i32 %5344, -1
  %5346 = icmp slt i32 %5343, %5345
  br i1 %5346, label %5369, label %5347

5347:                                             ; preds = %5342
  %5348 = icmp eq i32 %5343, %5345
  br i1 %5348, label %5349, label %5385

5349:                                             ; preds = %5347
  store i32 0, ptr %4, align 4, !tbaa !5
  %5350 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5350, ptr %6, align 4, !tbaa !5
  br i1 %5117, label %5392, label %5351

5351:                                             ; preds = %5349, %5379
  %5352 = phi i64 [ %5383, %5379 ], [ 1, %5349 ]
  %5353 = getelementptr inbounds i32, ptr %4, i64 %5352
  %5354 = load i32, ptr %5353, align 4, !tbaa !5
  %5355 = getelementptr inbounds i32, ptr %12, i64 %5352
  %5356 = load i32, ptr %5355, align 4, !tbaa !5
  %5357 = add nsw i32 %5356, -1
  %5358 = icmp slt i32 %5354, %5357
  br i1 %5358, label %5359, label %5377

5359:                                             ; preds = %5351
  br i1 %5346, label %5369, label %5360

5360:                                             ; preds = %5359
  %5361 = shl i64 %5352, 32
  %5362 = add i64 %5361, -4294967296
  %5363 = ashr exact i64 %5362, 32
  %5364 = getelementptr inbounds i32, ptr %7, i64 %5363
  %5365 = load i32, ptr %5364, align 4, !tbaa !5
  %5366 = getelementptr inbounds i32, ptr %6, i64 %5352
  %5367 = load i32, ptr %5366, align 4, !tbaa !5
  %5368 = add nsw i32 %5367, %5365
  store i32 %5368, ptr %5366, align 4, !tbaa !5
  br label %5387

5369:                                             ; preds = %5342, %5359
  %5370 = phi i32 [ %5354, %5359 ], [ %5343, %5342 ]
  %5371 = phi ptr [ %5353, %5359 ], [ %4, %5342 ]
  %5372 = phi i64 [ %5352, %5359 ], [ 0, %5342 ]
  %5373 = add nsw i32 %5370, 1
  store i32 %5373, ptr %5371, align 4, !tbaa !5
  %5374 = getelementptr inbounds i32, ptr %7, i64 %5372
  %5375 = load i32, ptr %5374, align 4, !tbaa !5
  %5376 = getelementptr inbounds i32, ptr %6, i64 %5372
  br label %5387

5377:                                             ; preds = %5351
  %5378 = icmp eq i32 %5354, %5357
  br i1 %5378, label %5379, label %5385

5379:                                             ; preds = %5377
  store i32 0, ptr %5353, align 4, !tbaa !5
  %5380 = getelementptr inbounds i32, ptr %8, i64 %5352
  %5381 = load i32, ptr %5380, align 4, !tbaa !5
  %5382 = getelementptr inbounds i32, ptr %6, i64 %5352
  store i32 %5381, ptr %5382, align 4, !tbaa !5
  %5383 = add nuw nsw i64 %5352, 1
  %5384 = icmp eq i64 %5383, %5115
  br i1 %5384, label %5392, label %5351, !llvm.loop !382

5385:                                             ; preds = %5347, %5377
  %5386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

5387:                                             ; preds = %5360, %5369
  %5388 = phi ptr [ %5376, %5369 ], [ %5353, %5360 ]
  %5389 = phi i32 [ %5375, %5369 ], [ 1, %5360 ]
  %5390 = load i32, ptr %5388, align 4, !tbaa !5
  %5391 = add nsw i32 %5390, %5389
  store i32 %5391, ptr %5388, align 4, !tbaa !5
  br label %5392

5392:                                             ; preds = %5379, %5387, %5349, %5335
  %5393 = icmp eq i32 %5341, %5
  br i1 %5393, label %5404, label %5257, !llvm.loop !383

5394:                                             ; preds = %4810
  %5395 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 326, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

5396:                                             ; preds = %1980
  store i16 %1931, ptr %1816, align 2, !tbaa !78
  br label %5404

5397:                                             ; preds = %2275
  store i16 %2226, ptr %1816, align 2, !tbaa !78
  br label %5404

5398:                                             ; preds = %3175
  store i64 %3126, ptr %3013, align 8, !tbaa !120
  br label %5404

5399:                                             ; preds = %3467
  store i64 %3418, ptr %3013, align 8, !tbaa !120
  br label %5404

5400:                                             ; preds = %4062
  store double %4013, ptr %3612, align 8, !tbaa !18
  br label %5404

5401:                                             ; preds = %4370
  store float %4321, ptr %4207, align 4, !tbaa !162
  br label %5404

5402:                                             ; preds = %4660
  store float %4611, ptr %4207, align 4, !tbaa !162
  br label %5404

5403:                                             ; preds = %5255
  store double %5206, ptr %4805, align 8, !tbaa !18
  br label %5404

5404:                                             ; preds = %5392, %5102, %4965, %4797, %4507, %4199, %3909, %3772, %3604, %3314, %3005, %2869, %2717, %2581, %2412, %2122, %1808, %1671, %1518, %1381, %1209, %1073, %921, %785, %616, %479, %326, %189, %5109, %5118, %5403, %4816, %4825, %4514, %4523, %5402, %4218, %4227, %5401, %3916, %3925, %5400, %3623, %3632, %3321, %3330, %5399, %3024, %3033, %5398, %2724, %2733, %2430, %2439, %2129, %2138, %5397, %1827, %1836, %5396, %1525, %1534, %1228, %1237, %928, %937, %634, %643, %333, %342, %37, %46, %4807, %5394, %4209, %4799, %3614, %4201, %3015, %3606, %2422, %3007, %1818, %2414, %1219, %1810, %626, %1211, %28, %618, %18, %4958, %5043, %5095, %5248, %5333, %5385, %4363, %4448, %4500, %4653, %4738, %4790, %3765, %3850, %3902, %4055, %4140, %4192, %3168, %3253, %3307, %3460, %3545, %3597, %2574, %2658, %2710, %2862, %2946, %2998, %1973, %2058, %2115, %2268, %2353, %2405, %1374, %1458, %1511, %1664, %1748, %1801, %778, %862, %914, %1066, %1150, %1202, %182, %266, %319, %472, %556, %609
  %5405 = phi i32 [ -1, %609 ], [ -1, %556 ], [ -1, %472 ], [ -1, %319 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1202 ], [ -1, %1150 ], [ -1, %1066 ], [ -1, %914 ], [ -1, %862 ], [ -1, %778 ], [ -1, %1801 ], [ -1, %1748 ], [ -1, %1664 ], [ -1, %1511 ], [ -1, %1458 ], [ -1, %1374 ], [ -1, %2405 ], [ -1, %2353 ], [ -1, %2268 ], [ -1, %2115 ], [ -1, %2058 ], [ -1, %1973 ], [ -1, %2998 ], [ -1, %2946 ], [ -1, %2862 ], [ -1, %2710 ], [ -1, %2658 ], [ -1, %2574 ], [ -1, %3597 ], [ -1, %3545 ], [ -1, %3460 ], [ -1, %3307 ], [ -1, %3253 ], [ -1, %3168 ], [ -1, %4192 ], [ -1, %4140 ], [ -1, %4055 ], [ -1, %3902 ], [ -1, %3850 ], [ -1, %3765 ], [ -1, %4790 ], [ -1, %4738 ], [ -1, %4653 ], [ -1, %4500 ], [ -1, %4448 ], [ -1, %4363 ], [ -1, %5385 ], [ -1, %5333 ], [ -1, %5248 ], [ -1, %5095 ], [ -1, %5043 ], [ -1, %4958 ], [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1211 ], [ 1, %626 ], [ 1, %1810 ], [ 1, %1219 ], [ 1, %2414 ], [ 1, %1818 ], [ 1, %3007 ], [ 1, %2422 ], [ 1, %3606 ], [ 1, %3015 ], [ 1, %4201 ], [ 1, %3614 ], [ 1, %4799 ], [ 1, %4209 ], [ 1, %5394 ], [ 1, %4807 ], [ 1, %46 ], [ 1, %37 ], [ 1, %342 ], [ 1, %333 ], [ 1, %643 ], [ 1, %634 ], [ 1, %937 ], [ 1, %928 ], [ 1, %1237 ], [ 1, %1228 ], [ 1, %1534 ], [ 1, %1525 ], [ %1843, %5396 ], [ 1, %1836 ], [ 1, %1827 ], [ %2145, %5397 ], [ 1, %2138 ], [ 1, %2129 ], [ 1, %2439 ], [ 1, %2430 ], [ 1, %2733 ], [ 1, %2724 ], [ %3040, %5398 ], [ 1, %3033 ], [ 1, %3024 ], [ %3337, %5399 ], [ 1, %3330 ], [ 1, %3321 ], [ 1, %3632 ], [ 1, %3623 ], [ %3932, %5400 ], [ 1, %3925 ], [ 1, %3916 ], [ %4234, %5401 ], [ 1, %4227 ], [ 1, %4218 ], [ %4530, %5402 ], [ 1, %4523 ], [ 1, %4514 ], [ 1, %4825 ], [ 1, %4816 ], [ %5125, %5403 ], [ 1, %5118 ], [ 1, %5109 ], [ %53, %189 ], [ %44, %326 ], [ %349, %479 ], [ %340, %616 ], [ %650, %785 ], [ %641, %921 ], [ %944, %1073 ], [ %935, %1209 ], [ %1244, %1381 ], [ %1235, %1518 ], [ %1541, %1671 ], [ %1532, %1808 ], [ %1834, %2122 ], [ %2136, %2412 ], [ %2446, %2581 ], [ %2437, %2717 ], [ %2740, %2869 ], [ %2731, %3005 ], [ %3031, %3314 ], [ %3328, %3604 ], [ %3639, %3772 ], [ %3630, %3909 ], [ %3923, %4199 ], [ %4225, %4507 ], [ %4521, %4797 ], [ %4832, %4965 ], [ %4823, %5102 ], [ %5116, %5392 ]
  ret i32 %5405
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3001 [
    i32 101, label %22
    i32 102, label %615
    i32 107, label %1212
    i32 108, label %1807
    i32 109, label %2406
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = load i8, ptr %24, align 1, !tbaa !11
  store i8 %29, ptr %26, align 1, !tbaa !11
  br label %3001

30:                                               ; preds = %22
  switch i32 %1, label %613 [
    i32 1, label %31
    i32 0, label %325
  ]

31:                                               ; preds = %30
  %32 = getelementptr inbounds i32, ptr %3, i64 %19
  %33 = load i32, ptr %32, align 4, !tbaa !5
  %34 = icmp eq i32 %33, 0
  %35 = icmp sgt i32 %5, 0
  br i1 %34, label %45, label %36

36:                                               ; preds = %31
  br i1 %35, label %37, label %3001

37:                                               ; preds = %36
  %38 = icmp sgt i32 %13, 1
  %39 = icmp sgt i32 %13, 0
  %40 = add i32 %13, -2
  %41 = zext i32 %40 to i64
  %42 = zext i32 %13 to i64
  %43 = add nuw i32 %5, 1
  %44 = icmp eq i32 %13, 1
  br label %189

45:                                               ; preds = %31
  br i1 %35, label %46, label %3001

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %54

54:                                               ; preds = %46, %187
  %55 = phi i32 [ 0, %46 ], [ %139, %187 ]
  %56 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %47, label %57, label %126

57:                                               ; preds = %54, %116
  %58 = phi i32 [ %125, %116 ], [ 0, %54 ]
  %59 = phi i64 [ %67, %116 ], [ %51, %54 ]
  %60 = phi i64 [ %124, %116 ], [ %50, %54 ]
  %61 = phi i32 [ %122, %116 ], [ %56, %54 ]
  %62 = sub i32 %49, %58
  %63 = tail call i32 @llvm.smin.i32(i32 %62, i32 0)
  %64 = sub i32 %62, %63
  %65 = zext i32 %64 to i64
  %66 = add nuw nsw i64 %65, 1
  %67 = add nsw i64 %59, -1
  %68 = icmp ult i32 %64, 31
  br i1 %68, label %104, label %69

69:                                               ; preds = %57
  %70 = and i64 %66, 8589934560
  %71 = sub i64 %60, %70
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi i64 [ 0, %69 ], [ %96, %72 ]
  %74 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %92, %72 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %93, %72 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %94, %72 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %69 ], [ %95, %72 ]
  %78 = sub i64 %60, %73
  %79 = getelementptr inbounds i32, ptr %9, i64 %78
  %80 = getelementptr inbounds i32, ptr %79, i64 -7
  %81 = load <8 x i32>, ptr %80, align 4, !tbaa !5
  %82 = shufflevector <8 x i32> %81, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %83 = getelementptr inbounds i32, ptr %79, i64 -15
  %84 = load <8 x i32>, ptr %83, align 4, !tbaa !5
  %85 = shufflevector <8 x i32> %84, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %86 = getelementptr inbounds i32, ptr %79, i64 -23
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !5
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %79, i64 -31
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !5
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = mul <8 x i32> %82, %74
  %93 = mul <8 x i32> %85, %75
  %94 = mul <8 x i32> %88, %76
  %95 = mul <8 x i32> %91, %77
  %96 = add nuw i64 %73, 32
  %97 = icmp eq i64 %96, %70
  br i1 %97, label %98, label %72, !llvm.loop !384

98:                                               ; preds = %72
  %99 = mul <8 x i32> %93, %92
  %100 = mul <8 x i32> %94, %99
  %101 = mul <8 x i32> %95, %100
  %102 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %101)
  %103 = icmp eq i64 %66, %70
  br i1 %103, label %116, label %104

104:                                              ; preds = %57, %98
  %105 = phi i64 [ %60, %57 ], [ %71, %98 ]
  %106 = phi i32 [ 1, %57 ], [ %102, %98 ]
  br label %107

107:                                              ; preds = %104, %107
  %108 = phi i64 [ %113, %107 ], [ %105, %104 ]
  %109 = phi i32 [ %112, %107 ], [ %106, %104 ]
  %110 = getelementptr inbounds i32, ptr %9, i64 %108
  %111 = load i32, ptr %110, align 4, !tbaa !5
  %112 = mul nsw i32 %111, %109
  %113 = add nsw i64 %108, -1
  %114 = trunc i64 %108 to i32
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %107, label %116, !llvm.loop !385

116:                                              ; preds = %107, %98
  %117 = phi i32 [ %102, %98 ], [ %112, %107 ]
  %118 = and i64 %67, 4294967295
  %119 = getelementptr inbounds i32, ptr %6, i64 %118
  %120 = load i32, ptr %119, align 4, !tbaa !5
  %121 = mul nsw i32 %120, %117
  %122 = add nsw i32 %121, %61
  %123 = icmp sgt i64 %59, 2
  %124 = add nsw i64 %60, -1
  %125 = add i32 %58, 1
  br i1 %123, label %57, label %126, !llvm.loop !386

126:                                              ; preds = %116, %54
  %127 = phi i32 [ %56, %54 ], [ %122, %116 ]
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds double, ptr %2, i64 %128
  %130 = load double, ptr %129, align 8, !tbaa !18
  %131 = getelementptr inbounds i8, ptr %24, i64 %128
  %132 = load i8, ptr %131, align 1, !tbaa !11
  %133 = load i8, ptr %26, align 1, !tbaa !11
  %134 = uitofp i8 %133 to double
  %135 = uitofp i8 %132 to double
  %136 = fmul fast double %130, %135
  %137 = fadd fast double %136, %134
  %138 = fptoui double %137 to i8
  store i8 %138, ptr %26, align 1, !tbaa !11
  %139 = add nuw nsw i32 %55, 1
  br i1 %48, label %140, label %187

140:                                              ; preds = %126
  %141 = load i32, ptr %4, align 4, !tbaa !5
  %142 = load i32, ptr %12, align 4, !tbaa !5
  %143 = add nsw i32 %142, -1
  %144 = icmp slt i32 %141, %143
  br i1 %144, label %164, label %145

145:                                              ; preds = %140
  %146 = icmp eq i32 %141, %143
  br i1 %146, label %147, label %180

147:                                              ; preds = %145
  store i32 0, ptr %4, align 4, !tbaa !5
  %148 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %148, ptr %6, align 4, !tbaa !5
  br i1 %53, label %187, label %149

149:                                              ; preds = %147, %174
  %150 = phi i64 [ %178, %174 ], [ 1, %147 ]
  %151 = getelementptr inbounds i32, ptr %4, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !5
  %153 = getelementptr inbounds i32, ptr %12, i64 %150
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %152, %155
  br i1 %156, label %157, label %172

157:                                              ; preds = %149
  br i1 %144, label %164, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds i32, ptr %7, i64 %150
  %160 = load i32, ptr %159, align 4, !tbaa !5
  %161 = getelementptr inbounds i32, ptr %6, i64 %150
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = add nsw i32 %162, %160
  store i32 %163, ptr %161, align 4, !tbaa !5
  br label %182

164:                                              ; preds = %140, %157
  %165 = phi i32 [ %152, %157 ], [ %141, %140 ]
  %166 = phi ptr [ %151, %157 ], [ %4, %140 ]
  %167 = phi i64 [ %150, %157 ], [ 0, %140 ]
  %168 = add nsw i32 %165, 1
  store i32 %168, ptr %166, align 4, !tbaa !5
  %169 = getelementptr inbounds i32, ptr %7, i64 %167
  %170 = load i32, ptr %169, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %6, i64 %167
  br label %182

172:                                              ; preds = %149
  %173 = icmp eq i32 %152, %155
  br i1 %173, label %174, label %180

174:                                              ; preds = %172
  store i32 0, ptr %151, align 4, !tbaa !5
  %175 = getelementptr inbounds i32, ptr %8, i64 %150
  %176 = load i32, ptr %175, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %6, i64 %150
  store i32 %176, ptr %177, align 4, !tbaa !5
  %178 = add nuw nsw i64 %150, 1
  %179 = icmp eq i64 %178, %51
  br i1 %179, label %187, label %149, !llvm.loop !387

180:                                              ; preds = %145, %172
  %181 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

182:                                              ; preds = %158, %164
  %183 = phi ptr [ %171, %164 ], [ %151, %158 ]
  %184 = phi i32 [ %170, %164 ], [ 1, %158 ]
  %185 = load i32, ptr %183, align 4, !tbaa !5
  %186 = add nsw i32 %185, %184
  store i32 %186, ptr %183, align 4, !tbaa !5
  br label %187

187:                                              ; preds = %174, %182, %147, %126
  %188 = icmp eq i32 %139, %5
  br i1 %188, label %3001, label %54, !llvm.loop !388

189:                                              ; preds = %37, %323
  %190 = phi i32 [ 0, %37 ], [ %272, %323 ]
  %191 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %38, label %192, label %261

192:                                              ; preds = %189, %251
  %193 = phi i32 [ %260, %251 ], [ 0, %189 ]
  %194 = phi i64 [ %202, %251 ], [ %42, %189 ]
  %195 = phi i64 [ %259, %251 ], [ %41, %189 ]
  %196 = phi i32 [ %257, %251 ], [ %191, %189 ]
  %197 = sub i32 %40, %193
  %198 = tail call i32 @llvm.smin.i32(i32 %197, i32 0)
  %199 = sub i32 %197, %198
  %200 = zext i32 %199 to i64
  %201 = add nuw nsw i64 %200, 1
  %202 = add nsw i64 %194, -1
  %203 = icmp ult i32 %199, 31
  br i1 %203, label %239, label %204

204:                                              ; preds = %192
  %205 = and i64 %201, 8589934560
  %206 = sub i64 %195, %205
  br label %207

207:                                              ; preds = %207, %204
  %208 = phi i64 [ 0, %204 ], [ %231, %207 ]
  %209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %227, %207 ]
  %210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %228, %207 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %229, %207 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %204 ], [ %230, %207 ]
  %213 = sub i64 %195, %208
  %214 = getelementptr inbounds i32, ptr %11, i64 %213
  %215 = getelementptr inbounds i32, ptr %214, i64 -7
  %216 = load <8 x i32>, ptr %215, align 4, !tbaa !5
  %217 = shufflevector <8 x i32> %216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %218 = getelementptr inbounds i32, ptr %214, i64 -15
  %219 = load <8 x i32>, ptr %218, align 4, !tbaa !5
  %220 = shufflevector <8 x i32> %219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %221 = getelementptr inbounds i32, ptr %214, i64 -23
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %214, i64 -31
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = mul <8 x i32> %217, %209
  %228 = mul <8 x i32> %220, %210
  %229 = mul <8 x i32> %223, %211
  %230 = mul <8 x i32> %226, %212
  %231 = add nuw i64 %208, 32
  %232 = icmp eq i64 %231, %205
  br i1 %232, label %233, label %207, !llvm.loop !389

233:                                              ; preds = %207
  %234 = mul <8 x i32> %228, %227
  %235 = mul <8 x i32> %229, %234
  %236 = mul <8 x i32> %230, %235
  %237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %236)
  %238 = icmp eq i64 %201, %205
  br i1 %238, label %251, label %239

239:                                              ; preds = %192, %233
  %240 = phi i64 [ %195, %192 ], [ %206, %233 ]
  %241 = phi i32 [ 1, %192 ], [ %237, %233 ]
  br label %242

242:                                              ; preds = %239, %242
  %243 = phi i64 [ %248, %242 ], [ %240, %239 ]
  %244 = phi i32 [ %247, %242 ], [ %241, %239 ]
  %245 = getelementptr inbounds i32, ptr %11, i64 %243
  %246 = load i32, ptr %245, align 4, !tbaa !5
  %247 = mul nsw i32 %246, %244
  %248 = add nsw i64 %243, -1
  %249 = trunc i64 %243 to i32
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %242, label %251, !llvm.loop !390

251:                                              ; preds = %242, %233
  %252 = phi i32 [ %237, %233 ], [ %247, %242 ]
  %253 = and i64 %202, 4294967295
  %254 = getelementptr inbounds i32, ptr %6, i64 %253
  %255 = load i32, ptr %254, align 4, !tbaa !5
  %256 = mul nsw i32 %255, %252
  %257 = add nsw i32 %256, %196
  %258 = icmp sgt i64 %194, 2
  %259 = add nsw i64 %195, -1
  %260 = add i32 %193, 1
  br i1 %258, label %192, label %261, !llvm.loop !391

261:                                              ; preds = %251, %189
  %262 = phi i32 [ %191, %189 ], [ %257, %251 ]
  %263 = icmp slt i32 %262, %5
  br i1 %263, label %266, label %264

264:                                              ; preds = %261
  %265 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

266:                                              ; preds = %261
  %267 = sext i32 %262 to i64
  %268 = getelementptr inbounds i8, ptr %24, i64 %267
  %269 = load i8, ptr %268, align 1, !tbaa !11
  %270 = load i8, ptr %26, align 1, !tbaa !11
  %271 = add i8 %270, %269
  store i8 %271, ptr %26, align 1, !tbaa !11
  %272 = add nuw nsw i32 %190, 1
  br i1 %39, label %273, label %323

273:                                              ; preds = %266
  %274 = load i32, ptr %4, align 4, !tbaa !5
  %275 = load i32, ptr %12, align 4, !tbaa !5
  %276 = add nsw i32 %275, -1
  %277 = icmp slt i32 %274, %276
  br i1 %277, label %300, label %278

278:                                              ; preds = %273
  %279 = icmp eq i32 %274, %276
  br i1 %279, label %280, label %316

280:                                              ; preds = %278
  store i32 0, ptr %4, align 4, !tbaa !5
  %281 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %281, ptr %6, align 4, !tbaa !5
  br i1 %44, label %323, label %282

282:                                              ; preds = %280, %310
  %283 = phi i64 [ %314, %310 ], [ 1, %280 ]
  %284 = getelementptr inbounds i32, ptr %4, i64 %283
  %285 = load i32, ptr %284, align 4, !tbaa !5
  %286 = getelementptr inbounds i32, ptr %12, i64 %283
  %287 = load i32, ptr %286, align 4, !tbaa !5
  %288 = add nsw i32 %287, -1
  %289 = icmp slt i32 %285, %288
  br i1 %289, label %290, label %308

290:                                              ; preds = %282
  br i1 %277, label %300, label %291

291:                                              ; preds = %290
  %292 = shl i64 %283, 32
  %293 = add i64 %292, -4294967296
  %294 = ashr exact i64 %293, 32
  %295 = getelementptr inbounds i32, ptr %7, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !5
  %297 = getelementptr inbounds i32, ptr %6, i64 %283
  %298 = load i32, ptr %297, align 4, !tbaa !5
  %299 = add nsw i32 %298, %296
  store i32 %299, ptr %297, align 4, !tbaa !5
  br label %318

300:                                              ; preds = %273, %290
  %301 = phi i32 [ %285, %290 ], [ %274, %273 ]
  %302 = phi ptr [ %284, %290 ], [ %4, %273 ]
  %303 = phi i64 [ %283, %290 ], [ 0, %273 ]
  %304 = add nsw i32 %301, 1
  store i32 %304, ptr %302, align 4, !tbaa !5
  %305 = getelementptr inbounds i32, ptr %7, i64 %303
  %306 = load i32, ptr %305, align 4, !tbaa !5
  %307 = getelementptr inbounds i32, ptr %6, i64 %303
  br label %318

308:                                              ; preds = %282
  %309 = icmp eq i32 %285, %288
  br i1 %309, label %310, label %316

310:                                              ; preds = %308
  store i32 0, ptr %284, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %8, i64 %283
  %312 = load i32, ptr %311, align 4, !tbaa !5
  %313 = getelementptr inbounds i32, ptr %6, i64 %283
  store i32 %312, ptr %313, align 4, !tbaa !5
  %314 = add nuw nsw i64 %283, 1
  %315 = icmp eq i64 %314, %42
  br i1 %315, label %323, label %282, !llvm.loop !392

316:                                              ; preds = %278, %308
  %317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

318:                                              ; preds = %291, %300
  %319 = phi ptr [ %307, %300 ], [ %284, %291 ]
  %320 = phi i32 [ %306, %300 ], [ 1, %291 ]
  %321 = load i32, ptr %319, align 4, !tbaa !5
  %322 = add nsw i32 %321, %320
  store i32 %322, ptr %319, align 4, !tbaa !5
  br label %323

323:                                              ; preds = %310, %318, %280, %266
  %324 = icmp eq i32 %272, %5
  br i1 %324, label %3001, label %189, !llvm.loop !393

325:                                              ; preds = %30
  %326 = getelementptr inbounds i32, ptr %3, i64 %19
  %327 = load i32, ptr %326, align 4, !tbaa !5
  %328 = icmp eq i32 %327, 0
  %329 = icmp sgt i32 %5, 0
  br i1 %328, label %339, label %330

330:                                              ; preds = %325
  br i1 %329, label %331, label %3001

331:                                              ; preds = %330
  %332 = icmp sgt i32 %13, 1
  %333 = icmp sgt i32 %13, 0
  %334 = add i32 %13, -2
  %335 = zext i32 %334 to i64
  %336 = zext i32 %13 to i64
  %337 = add nuw i32 %5, 1
  %338 = icmp eq i32 %13, 1
  br label %477

339:                                              ; preds = %325
  br i1 %329, label %340, label %3001

340:                                              ; preds = %339
  %341 = icmp sgt i32 %13, 1
  %342 = icmp sgt i32 %13, 0
  %343 = add i32 %13, -2
  %344 = zext i32 %343 to i64
  %345 = zext i32 %13 to i64
  %346 = add nuw i32 %5, 1
  %347 = icmp eq i32 %13, 1
  br label %348

348:                                              ; preds = %340, %475
  %349 = phi i32 [ 0, %340 ], [ %427, %475 ]
  %350 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %341, label %351, label %420

351:                                              ; preds = %348, %410
  %352 = phi i32 [ %419, %410 ], [ 0, %348 ]
  %353 = phi i64 [ %361, %410 ], [ %345, %348 ]
  %354 = phi i64 [ %418, %410 ], [ %344, %348 ]
  %355 = phi i32 [ %416, %410 ], [ %350, %348 ]
  %356 = sub i32 %343, %352
  %357 = tail call i32 @llvm.smin.i32(i32 %356, i32 0)
  %358 = sub i32 %356, %357
  %359 = zext i32 %358 to i64
  %360 = add nuw nsw i64 %359, 1
  %361 = add nsw i64 %353, -1
  %362 = icmp ult i32 %358, 31
  br i1 %362, label %398, label %363

363:                                              ; preds = %351
  %364 = and i64 %360, 8589934560
  %365 = sub i64 %354, %364
  br label %366

366:                                              ; preds = %366, %363
  %367 = phi i64 [ 0, %363 ], [ %390, %366 ]
  %368 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %386, %366 ]
  %369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %387, %366 ]
  %370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %388, %366 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %363 ], [ %389, %366 ]
  %372 = sub i64 %354, %367
  %373 = getelementptr inbounds i32, ptr %9, i64 %372
  %374 = getelementptr inbounds i32, ptr %373, i64 -7
  %375 = load <8 x i32>, ptr %374, align 4, !tbaa !5
  %376 = shufflevector <8 x i32> %375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %377 = getelementptr inbounds i32, ptr %373, i64 -15
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %373, i64 -23
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %373, i64 -31
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = mul <8 x i32> %376, %368
  %387 = mul <8 x i32> %379, %369
  %388 = mul <8 x i32> %382, %370
  %389 = mul <8 x i32> %385, %371
  %390 = add nuw i64 %367, 32
  %391 = icmp eq i64 %390, %364
  br i1 %391, label %392, label %366, !llvm.loop !394

392:                                              ; preds = %366
  %393 = mul <8 x i32> %387, %386
  %394 = mul <8 x i32> %388, %393
  %395 = mul <8 x i32> %389, %394
  %396 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %395)
  %397 = icmp eq i64 %360, %364
  br i1 %397, label %410, label %398

398:                                              ; preds = %351, %392
  %399 = phi i64 [ %354, %351 ], [ %365, %392 ]
  %400 = phi i32 [ 1, %351 ], [ %396, %392 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i64 [ %407, %401 ], [ %399, %398 ]
  %403 = phi i32 [ %406, %401 ], [ %400, %398 ]
  %404 = getelementptr inbounds i32, ptr %9, i64 %402
  %405 = load i32, ptr %404, align 4, !tbaa !5
  %406 = mul nsw i32 %405, %403
  %407 = add nsw i64 %402, -1
  %408 = trunc i64 %402 to i32
  %409 = icmp sgt i32 %408, 0
  br i1 %409, label %401, label %410, !llvm.loop !395

410:                                              ; preds = %401, %392
  %411 = phi i32 [ %396, %392 ], [ %406, %401 ]
  %412 = and i64 %361, 4294967295
  %413 = getelementptr inbounds i32, ptr %6, i64 %412
  %414 = load i32, ptr %413, align 4, !tbaa !5
  %415 = mul nsw i32 %414, %411
  %416 = add nsw i32 %415, %355
  %417 = icmp sgt i64 %353, 2
  %418 = add nsw i64 %354, -1
  %419 = add i32 %352, 1
  br i1 %417, label %351, label %420, !llvm.loop !396

420:                                              ; preds = %410, %348
  %421 = phi i32 [ %350, %348 ], [ %416, %410 ]
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds i8, ptr %24, i64 %422
  %424 = load i8, ptr %423, align 1, !tbaa !11
  %425 = load i8, ptr %26, align 1, !tbaa !11
  %426 = add i8 %425, %424
  store i8 %426, ptr %26, align 1, !tbaa !11
  %427 = add nuw nsw i32 %349, 1
  br i1 %342, label %428, label %475

428:                                              ; preds = %420
  %429 = load i32, ptr %4, align 4, !tbaa !5
  %430 = load i32, ptr %12, align 4, !tbaa !5
  %431 = add nsw i32 %430, -1
  %432 = icmp slt i32 %429, %431
  br i1 %432, label %452, label %433

433:                                              ; preds = %428
  %434 = icmp eq i32 %429, %431
  br i1 %434, label %435, label %468

435:                                              ; preds = %433
  store i32 0, ptr %4, align 4, !tbaa !5
  %436 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %436, ptr %6, align 4, !tbaa !5
  br i1 %347, label %475, label %437

437:                                              ; preds = %435, %462
  %438 = phi i64 [ %466, %462 ], [ 1, %435 ]
  %439 = getelementptr inbounds i32, ptr %4, i64 %438
  %440 = load i32, ptr %439, align 4, !tbaa !5
  %441 = getelementptr inbounds i32, ptr %12, i64 %438
  %442 = load i32, ptr %441, align 4, !tbaa !5
  %443 = add nsw i32 %442, -1
  %444 = icmp slt i32 %440, %443
  br i1 %444, label %445, label %460

445:                                              ; preds = %437
  br i1 %432, label %452, label %446

446:                                              ; preds = %445
  %447 = getelementptr inbounds i32, ptr %7, i64 %438
  %448 = load i32, ptr %447, align 4, !tbaa !5
  %449 = getelementptr inbounds i32, ptr %6, i64 %438
  %450 = load i32, ptr %449, align 4, !tbaa !5
  %451 = add nsw i32 %450, %448
  store i32 %451, ptr %449, align 4, !tbaa !5
  br label %470

452:                                              ; preds = %428, %445
  %453 = phi i32 [ %440, %445 ], [ %429, %428 ]
  %454 = phi ptr [ %439, %445 ], [ %4, %428 ]
  %455 = phi i64 [ %438, %445 ], [ 0, %428 ]
  %456 = add nsw i32 %453, 1
  store i32 %456, ptr %454, align 4, !tbaa !5
  %457 = getelementptr inbounds i32, ptr %7, i64 %455
  %458 = load i32, ptr %457, align 4, !tbaa !5
  %459 = getelementptr inbounds i32, ptr %6, i64 %455
  br label %470

460:                                              ; preds = %437
  %461 = icmp eq i32 %440, %443
  br i1 %461, label %462, label %468

462:                                              ; preds = %460
  store i32 0, ptr %439, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %8, i64 %438
  %464 = load i32, ptr %463, align 4, !tbaa !5
  %465 = getelementptr inbounds i32, ptr %6, i64 %438
  store i32 %464, ptr %465, align 4, !tbaa !5
  %466 = add nuw nsw i64 %438, 1
  %467 = icmp eq i64 %466, %345
  br i1 %467, label %475, label %437, !llvm.loop !397

468:                                              ; preds = %433, %460
  %469 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

470:                                              ; preds = %446, %452
  %471 = phi ptr [ %459, %452 ], [ %439, %446 ]
  %472 = phi i32 [ %458, %452 ], [ 1, %446 ]
  %473 = load i32, ptr %471, align 4, !tbaa !5
  %474 = add nsw i32 %473, %472
  store i32 %474, ptr %471, align 4, !tbaa !5
  br label %475

475:                                              ; preds = %462, %470, %435, %420
  %476 = icmp eq i32 %427, %5
  br i1 %476, label %3001, label %348, !llvm.loop !398

477:                                              ; preds = %331, %611
  %478 = phi i32 [ 0, %331 ], [ %560, %611 ]
  %479 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %332, label %480, label %549

480:                                              ; preds = %477, %539
  %481 = phi i32 [ %548, %539 ], [ 0, %477 ]
  %482 = phi i64 [ %490, %539 ], [ %336, %477 ]
  %483 = phi i64 [ %547, %539 ], [ %335, %477 ]
  %484 = phi i32 [ %545, %539 ], [ %479, %477 ]
  %485 = sub i32 %334, %481
  %486 = tail call i32 @llvm.smin.i32(i32 %485, i32 0)
  %487 = sub i32 %485, %486
  %488 = zext i32 %487 to i64
  %489 = add nuw nsw i64 %488, 1
  %490 = add nsw i64 %482, -1
  %491 = icmp ult i32 %487, 31
  br i1 %491, label %527, label %492

492:                                              ; preds = %480
  %493 = and i64 %489, 8589934560
  %494 = sub i64 %483, %493
  br label %495

495:                                              ; preds = %495, %492
  %496 = phi i64 [ 0, %492 ], [ %519, %495 ]
  %497 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %515, %495 ]
  %498 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %516, %495 ]
  %499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %517, %495 ]
  %500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %492 ], [ %518, %495 ]
  %501 = sub i64 %483, %496
  %502 = getelementptr inbounds i32, ptr %11, i64 %501
  %503 = getelementptr inbounds i32, ptr %502, i64 -7
  %504 = load <8 x i32>, ptr %503, align 4, !tbaa !5
  %505 = shufflevector <8 x i32> %504, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %506 = getelementptr inbounds i32, ptr %502, i64 -15
  %507 = load <8 x i32>, ptr %506, align 4, !tbaa !5
  %508 = shufflevector <8 x i32> %507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %509 = getelementptr inbounds i32, ptr %502, i64 -23
  %510 = load <8 x i32>, ptr %509, align 4, !tbaa !5
  %511 = shufflevector <8 x i32> %510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %512 = getelementptr inbounds i32, ptr %502, i64 -31
  %513 = load <8 x i32>, ptr %512, align 4, !tbaa !5
  %514 = shufflevector <8 x i32> %513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %515 = mul <8 x i32> %505, %497
  %516 = mul <8 x i32> %508, %498
  %517 = mul <8 x i32> %511, %499
  %518 = mul <8 x i32> %514, %500
  %519 = add nuw i64 %496, 32
  %520 = icmp eq i64 %519, %493
  br i1 %520, label %521, label %495, !llvm.loop !399

521:                                              ; preds = %495
  %522 = mul <8 x i32> %516, %515
  %523 = mul <8 x i32> %517, %522
  %524 = mul <8 x i32> %518, %523
  %525 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %524)
  %526 = icmp eq i64 %489, %493
  br i1 %526, label %539, label %527

527:                                              ; preds = %480, %521
  %528 = phi i64 [ %483, %480 ], [ %494, %521 ]
  %529 = phi i32 [ 1, %480 ], [ %525, %521 ]
  br label %530

530:                                              ; preds = %527, %530
  %531 = phi i64 [ %536, %530 ], [ %528, %527 ]
  %532 = phi i32 [ %535, %530 ], [ %529, %527 ]
  %533 = getelementptr inbounds i32, ptr %11, i64 %531
  %534 = load i32, ptr %533, align 4, !tbaa !5
  %535 = mul nsw i32 %534, %532
  %536 = add nsw i64 %531, -1
  %537 = trunc i64 %531 to i32
  %538 = icmp sgt i32 %537, 0
  br i1 %538, label %530, label %539, !llvm.loop !400

539:                                              ; preds = %530, %521
  %540 = phi i32 [ %525, %521 ], [ %535, %530 ]
  %541 = and i64 %490, 4294967295
  %542 = getelementptr inbounds i32, ptr %6, i64 %541
  %543 = load i32, ptr %542, align 4, !tbaa !5
  %544 = mul nsw i32 %543, %540
  %545 = add nsw i32 %544, %484
  %546 = icmp sgt i64 %482, 2
  %547 = add nsw i64 %483, -1
  %548 = add i32 %481, 1
  br i1 %546, label %480, label %549, !llvm.loop !401

549:                                              ; preds = %539, %477
  %550 = phi i32 [ %479, %477 ], [ %545, %539 ]
  %551 = icmp slt i32 %550, %5
  br i1 %551, label %554, label %552

552:                                              ; preds = %549
  %553 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

554:                                              ; preds = %549
  %555 = sext i32 %550 to i64
  %556 = getelementptr inbounds i8, ptr %24, i64 %555
  %557 = load i8, ptr %556, align 1, !tbaa !11
  %558 = load i8, ptr %26, align 1, !tbaa !11
  %559 = add i8 %558, %557
  store i8 %559, ptr %26, align 1, !tbaa !11
  %560 = add nuw nsw i32 %478, 1
  br i1 %333, label %561, label %611

561:                                              ; preds = %554
  %562 = load i32, ptr %4, align 4, !tbaa !5
  %563 = load i32, ptr %12, align 4, !tbaa !5
  %564 = add nsw i32 %563, -1
  %565 = icmp slt i32 %562, %564
  br i1 %565, label %588, label %566

566:                                              ; preds = %561
  %567 = icmp eq i32 %562, %564
  br i1 %567, label %568, label %604

568:                                              ; preds = %566
  store i32 0, ptr %4, align 4, !tbaa !5
  %569 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %569, ptr %6, align 4, !tbaa !5
  br i1 %338, label %611, label %570

570:                                              ; preds = %568, %598
  %571 = phi i64 [ %602, %598 ], [ 1, %568 ]
  %572 = getelementptr inbounds i32, ptr %4, i64 %571
  %573 = load i32, ptr %572, align 4, !tbaa !5
  %574 = getelementptr inbounds i32, ptr %12, i64 %571
  %575 = load i32, ptr %574, align 4, !tbaa !5
  %576 = add nsw i32 %575, -1
  %577 = icmp slt i32 %573, %576
  br i1 %577, label %578, label %596

578:                                              ; preds = %570
  br i1 %565, label %588, label %579

579:                                              ; preds = %578
  %580 = shl i64 %571, 32
  %581 = add i64 %580, -4294967296
  %582 = ashr exact i64 %581, 32
  %583 = getelementptr inbounds i32, ptr %7, i64 %582
  %584 = load i32, ptr %583, align 4, !tbaa !5
  %585 = getelementptr inbounds i32, ptr %6, i64 %571
  %586 = load i32, ptr %585, align 4, !tbaa !5
  %587 = add nsw i32 %586, %584
  store i32 %587, ptr %585, align 4, !tbaa !5
  br label %606

588:                                              ; preds = %561, %578
  %589 = phi i32 [ %573, %578 ], [ %562, %561 ]
  %590 = phi ptr [ %572, %578 ], [ %4, %561 ]
  %591 = phi i64 [ %571, %578 ], [ 0, %561 ]
  %592 = add nsw i32 %589, 1
  store i32 %592, ptr %590, align 4, !tbaa !5
  %593 = getelementptr inbounds i32, ptr %7, i64 %591
  %594 = load i32, ptr %593, align 4, !tbaa !5
  %595 = getelementptr inbounds i32, ptr %6, i64 %591
  br label %606

596:                                              ; preds = %570
  %597 = icmp eq i32 %573, %576
  br i1 %597, label %598, label %604

598:                                              ; preds = %596
  store i32 0, ptr %572, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %8, i64 %571
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = getelementptr inbounds i32, ptr %6, i64 %571
  store i32 %600, ptr %601, align 4, !tbaa !5
  %602 = add nuw nsw i64 %571, 1
  %603 = icmp eq i64 %602, %336
  br i1 %603, label %611, label %570, !llvm.loop !402

604:                                              ; preds = %566, %596
  %605 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

606:                                              ; preds = %579, %588
  %607 = phi ptr [ %595, %588 ], [ %572, %579 ]
  %608 = phi i32 [ %594, %588 ], [ 1, %579 ]
  %609 = load i32, ptr %607, align 4, !tbaa !5
  %610 = add nsw i32 %609, %608
  store i32 %610, ptr %607, align 4, !tbaa !5
  br label %611

611:                                              ; preds = %598, %606, %568, %554
  %612 = icmp eq i32 %560, %5
  br i1 %612, label %3001, label %477, !llvm.loop !403

613:                                              ; preds = %30
  %614 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 527, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3001

615:                                              ; preds = %18
  %616 = getelementptr inbounds ptr, ptr %14, i64 %19
  %617 = load ptr, ptr %616, align 8, !tbaa !9
  %618 = getelementptr inbounds ptr, ptr %16, i64 %19
  %619 = load ptr, ptr %618, align 8, !tbaa !9
  store i32 0, ptr %619, align 4, !tbaa !5
  %620 = icmp eq i32 %13, 0
  br i1 %620, label %621, label %624

621:                                              ; preds = %615
  %622 = load i8, ptr %617, align 1, !tbaa !11
  %623 = sext i8 %622 to i32
  store i32 %623, ptr %619, align 4, !tbaa !5
  br label %3001

624:                                              ; preds = %615
  switch i32 %1, label %1210 [
    i32 1, label %625
    i32 0, label %920
  ]

625:                                              ; preds = %624
  %626 = getelementptr inbounds i32, ptr %3, i64 %19
  %627 = load i32, ptr %626, align 4, !tbaa !5
  %628 = icmp eq i32 %627, 0
  %629 = icmp sgt i32 %5, 0
  br i1 %628, label %639, label %630

630:                                              ; preds = %625
  br i1 %629, label %631, label %3001

631:                                              ; preds = %630
  %632 = icmp sgt i32 %13, 1
  %633 = icmp sgt i32 %13, 0
  %634 = add i32 %13, -2
  %635 = zext i32 %634 to i64
  %636 = zext i32 %13 to i64
  %637 = add nuw i32 %5, 1
  %638 = icmp eq i32 %13, 1
  br label %783

639:                                              ; preds = %625
  br i1 %629, label %640, label %3001

640:                                              ; preds = %639
  %641 = icmp sgt i32 %13, 1
  %642 = icmp sgt i32 %13, 0
  %643 = add i32 %13, -2
  %644 = zext i32 %643 to i64
  %645 = zext i32 %13 to i64
  %646 = add nuw i32 %5, 1
  %647 = icmp eq i32 %13, 1
  br label %648

648:                                              ; preds = %640, %781
  %649 = phi i32 [ 0, %640 ], [ %733, %781 ]
  %650 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %641, label %651, label %720

651:                                              ; preds = %648, %710
  %652 = phi i32 [ %719, %710 ], [ 0, %648 ]
  %653 = phi i64 [ %661, %710 ], [ %645, %648 ]
  %654 = phi i64 [ %718, %710 ], [ %644, %648 ]
  %655 = phi i32 [ %716, %710 ], [ %650, %648 ]
  %656 = sub i32 %643, %652
  %657 = tail call i32 @llvm.smin.i32(i32 %656, i32 0)
  %658 = sub i32 %656, %657
  %659 = zext i32 %658 to i64
  %660 = add nuw nsw i64 %659, 1
  %661 = add nsw i64 %653, -1
  %662 = icmp ult i32 %658, 31
  br i1 %662, label %698, label %663

663:                                              ; preds = %651
  %664 = and i64 %660, 8589934560
  %665 = sub i64 %654, %664
  br label %666

666:                                              ; preds = %666, %663
  %667 = phi i64 [ 0, %663 ], [ %690, %666 ]
  %668 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %686, %666 ]
  %669 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %687, %666 ]
  %670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %688, %666 ]
  %671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %663 ], [ %689, %666 ]
  %672 = sub i64 %654, %667
  %673 = getelementptr inbounds i32, ptr %9, i64 %672
  %674 = getelementptr inbounds i32, ptr %673, i64 -7
  %675 = load <8 x i32>, ptr %674, align 4, !tbaa !5
  %676 = shufflevector <8 x i32> %675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %677 = getelementptr inbounds i32, ptr %673, i64 -15
  %678 = load <8 x i32>, ptr %677, align 4, !tbaa !5
  %679 = shufflevector <8 x i32> %678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %680 = getelementptr inbounds i32, ptr %673, i64 -23
  %681 = load <8 x i32>, ptr %680, align 4, !tbaa !5
  %682 = shufflevector <8 x i32> %681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %683 = getelementptr inbounds i32, ptr %673, i64 -31
  %684 = load <8 x i32>, ptr %683, align 4, !tbaa !5
  %685 = shufflevector <8 x i32> %684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %686 = mul <8 x i32> %676, %668
  %687 = mul <8 x i32> %679, %669
  %688 = mul <8 x i32> %682, %670
  %689 = mul <8 x i32> %685, %671
  %690 = add nuw i64 %667, 32
  %691 = icmp eq i64 %690, %664
  br i1 %691, label %692, label %666, !llvm.loop !404

692:                                              ; preds = %666
  %693 = mul <8 x i32> %687, %686
  %694 = mul <8 x i32> %688, %693
  %695 = mul <8 x i32> %689, %694
  %696 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %695)
  %697 = icmp eq i64 %660, %664
  br i1 %697, label %710, label %698

698:                                              ; preds = %651, %692
  %699 = phi i64 [ %654, %651 ], [ %665, %692 ]
  %700 = phi i32 [ 1, %651 ], [ %696, %692 ]
  br label %701

701:                                              ; preds = %698, %701
  %702 = phi i64 [ %707, %701 ], [ %699, %698 ]
  %703 = phi i32 [ %706, %701 ], [ %700, %698 ]
  %704 = getelementptr inbounds i32, ptr %9, i64 %702
  %705 = load i32, ptr %704, align 4, !tbaa !5
  %706 = mul nsw i32 %705, %703
  %707 = add nsw i64 %702, -1
  %708 = trunc i64 %702 to i32
  %709 = icmp sgt i32 %708, 0
  br i1 %709, label %701, label %710, !llvm.loop !405

710:                                              ; preds = %701, %692
  %711 = phi i32 [ %696, %692 ], [ %706, %701 ]
  %712 = and i64 %661, 4294967295
  %713 = getelementptr inbounds i32, ptr %6, i64 %712
  %714 = load i32, ptr %713, align 4, !tbaa !5
  %715 = mul nsw i32 %714, %711
  %716 = add nsw i32 %715, %655
  %717 = icmp sgt i64 %653, 2
  %718 = add nsw i64 %654, -1
  %719 = add i32 %652, 1
  br i1 %717, label %651, label %720, !llvm.loop !406

720:                                              ; preds = %710, %648
  %721 = phi i32 [ %650, %648 ], [ %716, %710 ]
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds double, ptr %2, i64 %722
  %724 = load double, ptr %723, align 8, !tbaa !18
  %725 = getelementptr inbounds i8, ptr %617, i64 %722
  %726 = load i8, ptr %725, align 1, !tbaa !11
  %727 = load i32, ptr %619, align 4, !tbaa !5
  %728 = sitofp i32 %727 to double
  %729 = sitofp i8 %726 to double
  %730 = fmul fast double %724, %729
  %731 = fadd fast double %730, %728
  %732 = fptosi double %731 to i32
  store i32 %732, ptr %619, align 4, !tbaa !5
  %733 = add nuw nsw i32 %649, 1
  br i1 %642, label %734, label %781

734:                                              ; preds = %720
  %735 = load i32, ptr %4, align 4, !tbaa !5
  %736 = load i32, ptr %12, align 4, !tbaa !5
  %737 = add nsw i32 %736, -1
  %738 = icmp slt i32 %735, %737
  br i1 %738, label %758, label %739

739:                                              ; preds = %734
  %740 = icmp eq i32 %735, %737
  br i1 %740, label %741, label %774

741:                                              ; preds = %739
  store i32 0, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %742, ptr %6, align 4, !tbaa !5
  br i1 %647, label %781, label %743

743:                                              ; preds = %741, %768
  %744 = phi i64 [ %772, %768 ], [ 1, %741 ]
  %745 = getelementptr inbounds i32, ptr %4, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !5
  %747 = getelementptr inbounds i32, ptr %12, i64 %744
  %748 = load i32, ptr %747, align 4, !tbaa !5
  %749 = add nsw i32 %748, -1
  %750 = icmp slt i32 %746, %749
  br i1 %750, label %751, label %766

751:                                              ; preds = %743
  br i1 %738, label %758, label %752

752:                                              ; preds = %751
  %753 = getelementptr inbounds i32, ptr %7, i64 %744
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = getelementptr inbounds i32, ptr %6, i64 %744
  %756 = load i32, ptr %755, align 4, !tbaa !5
  %757 = add nsw i32 %756, %754
  store i32 %757, ptr %755, align 4, !tbaa !5
  br label %776

758:                                              ; preds = %734, %751
  %759 = phi i32 [ %746, %751 ], [ %735, %734 ]
  %760 = phi ptr [ %745, %751 ], [ %4, %734 ]
  %761 = phi i64 [ %744, %751 ], [ 0, %734 ]
  %762 = add nsw i32 %759, 1
  store i32 %762, ptr %760, align 4, !tbaa !5
  %763 = getelementptr inbounds i32, ptr %7, i64 %761
  %764 = load i32, ptr %763, align 4, !tbaa !5
  %765 = getelementptr inbounds i32, ptr %6, i64 %761
  br label %776

766:                                              ; preds = %743
  %767 = icmp eq i32 %746, %749
  br i1 %767, label %768, label %774

768:                                              ; preds = %766
  store i32 0, ptr %745, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %8, i64 %744
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %744
  store i32 %770, ptr %771, align 4, !tbaa !5
  %772 = add nuw nsw i64 %744, 1
  %773 = icmp eq i64 %772, %645
  br i1 %773, label %781, label %743, !llvm.loop !407

774:                                              ; preds = %739, %766
  %775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

776:                                              ; preds = %752, %758
  %777 = phi ptr [ %765, %758 ], [ %745, %752 ]
  %778 = phi i32 [ %764, %758 ], [ 1, %752 ]
  %779 = load i32, ptr %777, align 4, !tbaa !5
  %780 = add nsw i32 %779, %778
  store i32 %780, ptr %777, align 4, !tbaa !5
  br label %781

781:                                              ; preds = %768, %776, %741, %720
  %782 = icmp eq i32 %733, %5
  br i1 %782, label %3001, label %648, !llvm.loop !408

783:                                              ; preds = %631, %918
  %784 = phi i32 [ 0, %631 ], [ %867, %918 ]
  %785 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %632, label %786, label %855

786:                                              ; preds = %783, %845
  %787 = phi i32 [ %854, %845 ], [ 0, %783 ]
  %788 = phi i64 [ %796, %845 ], [ %636, %783 ]
  %789 = phi i64 [ %853, %845 ], [ %635, %783 ]
  %790 = phi i32 [ %851, %845 ], [ %785, %783 ]
  %791 = sub i32 %634, %787
  %792 = tail call i32 @llvm.smin.i32(i32 %791, i32 0)
  %793 = sub i32 %791, %792
  %794 = zext i32 %793 to i64
  %795 = add nuw nsw i64 %794, 1
  %796 = add nsw i64 %788, -1
  %797 = icmp ult i32 %793, 31
  br i1 %797, label %833, label %798

798:                                              ; preds = %786
  %799 = and i64 %795, 8589934560
  %800 = sub i64 %789, %799
  br label %801

801:                                              ; preds = %801, %798
  %802 = phi i64 [ 0, %798 ], [ %825, %801 ]
  %803 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %821, %801 ]
  %804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %822, %801 ]
  %805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %823, %801 ]
  %806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %798 ], [ %824, %801 ]
  %807 = sub i64 %789, %802
  %808 = getelementptr inbounds i32, ptr %11, i64 %807
  %809 = getelementptr inbounds i32, ptr %808, i64 -7
  %810 = load <8 x i32>, ptr %809, align 4, !tbaa !5
  %811 = shufflevector <8 x i32> %810, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %812 = getelementptr inbounds i32, ptr %808, i64 -15
  %813 = load <8 x i32>, ptr %812, align 4, !tbaa !5
  %814 = shufflevector <8 x i32> %813, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %815 = getelementptr inbounds i32, ptr %808, i64 -23
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %808, i64 -31
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = mul <8 x i32> %811, %803
  %822 = mul <8 x i32> %814, %804
  %823 = mul <8 x i32> %817, %805
  %824 = mul <8 x i32> %820, %806
  %825 = add nuw i64 %802, 32
  %826 = icmp eq i64 %825, %799
  br i1 %826, label %827, label %801, !llvm.loop !409

827:                                              ; preds = %801
  %828 = mul <8 x i32> %822, %821
  %829 = mul <8 x i32> %823, %828
  %830 = mul <8 x i32> %824, %829
  %831 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %830)
  %832 = icmp eq i64 %795, %799
  br i1 %832, label %845, label %833

833:                                              ; preds = %786, %827
  %834 = phi i64 [ %789, %786 ], [ %800, %827 ]
  %835 = phi i32 [ 1, %786 ], [ %831, %827 ]
  br label %836

836:                                              ; preds = %833, %836
  %837 = phi i64 [ %842, %836 ], [ %834, %833 ]
  %838 = phi i32 [ %841, %836 ], [ %835, %833 ]
  %839 = getelementptr inbounds i32, ptr %11, i64 %837
  %840 = load i32, ptr %839, align 4, !tbaa !5
  %841 = mul nsw i32 %840, %838
  %842 = add nsw i64 %837, -1
  %843 = trunc i64 %837 to i32
  %844 = icmp sgt i32 %843, 0
  br i1 %844, label %836, label %845, !llvm.loop !410

845:                                              ; preds = %836, %827
  %846 = phi i32 [ %831, %827 ], [ %841, %836 ]
  %847 = and i64 %796, 4294967295
  %848 = getelementptr inbounds i32, ptr %6, i64 %847
  %849 = load i32, ptr %848, align 4, !tbaa !5
  %850 = mul nsw i32 %849, %846
  %851 = add nsw i32 %850, %790
  %852 = icmp sgt i64 %788, 2
  %853 = add nsw i64 %789, -1
  %854 = add i32 %787, 1
  br i1 %852, label %786, label %855, !llvm.loop !411

855:                                              ; preds = %845, %783
  %856 = phi i32 [ %785, %783 ], [ %851, %845 ]
  %857 = icmp slt i32 %856, %5
  br i1 %857, label %860, label %858

858:                                              ; preds = %855
  %859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

860:                                              ; preds = %855
  %861 = sext i32 %856 to i64
  %862 = getelementptr inbounds i8, ptr %617, i64 %861
  %863 = load i8, ptr %862, align 1, !tbaa !11
  %864 = load i32, ptr %619, align 4, !tbaa !5
  %865 = sext i8 %863 to i32
  %866 = add i32 %864, %865
  store i32 %866, ptr %619, align 4, !tbaa !5
  %867 = add nuw nsw i32 %784, 1
  br i1 %633, label %868, label %918

868:                                              ; preds = %860
  %869 = load i32, ptr %4, align 4, !tbaa !5
  %870 = load i32, ptr %12, align 4, !tbaa !5
  %871 = add nsw i32 %870, -1
  %872 = icmp slt i32 %869, %871
  br i1 %872, label %895, label %873

873:                                              ; preds = %868
  %874 = icmp eq i32 %869, %871
  br i1 %874, label %875, label %911

875:                                              ; preds = %873
  store i32 0, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %876, ptr %6, align 4, !tbaa !5
  br i1 %638, label %918, label %877

877:                                              ; preds = %875, %905
  %878 = phi i64 [ %909, %905 ], [ 1, %875 ]
  %879 = getelementptr inbounds i32, ptr %4, i64 %878
  %880 = load i32, ptr %879, align 4, !tbaa !5
  %881 = getelementptr inbounds i32, ptr %12, i64 %878
  %882 = load i32, ptr %881, align 4, !tbaa !5
  %883 = add nsw i32 %882, -1
  %884 = icmp slt i32 %880, %883
  br i1 %884, label %885, label %903

885:                                              ; preds = %877
  br i1 %872, label %895, label %886

886:                                              ; preds = %885
  %887 = shl i64 %878, 32
  %888 = add i64 %887, -4294967296
  %889 = ashr exact i64 %888, 32
  %890 = getelementptr inbounds i32, ptr %7, i64 %889
  %891 = load i32, ptr %890, align 4, !tbaa !5
  %892 = getelementptr inbounds i32, ptr %6, i64 %878
  %893 = load i32, ptr %892, align 4, !tbaa !5
  %894 = add nsw i32 %893, %891
  store i32 %894, ptr %892, align 4, !tbaa !5
  br label %913

895:                                              ; preds = %868, %885
  %896 = phi i32 [ %880, %885 ], [ %869, %868 ]
  %897 = phi ptr [ %879, %885 ], [ %4, %868 ]
  %898 = phi i64 [ %878, %885 ], [ 0, %868 ]
  %899 = add nsw i32 %896, 1
  store i32 %899, ptr %897, align 4, !tbaa !5
  %900 = getelementptr inbounds i32, ptr %7, i64 %898
  %901 = load i32, ptr %900, align 4, !tbaa !5
  %902 = getelementptr inbounds i32, ptr %6, i64 %898
  br label %913

903:                                              ; preds = %877
  %904 = icmp eq i32 %880, %883
  br i1 %904, label %905, label %911

905:                                              ; preds = %903
  store i32 0, ptr %879, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %8, i64 %878
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %878
  store i32 %907, ptr %908, align 4, !tbaa !5
  %909 = add nuw nsw i64 %878, 1
  %910 = icmp eq i64 %909, %636
  br i1 %910, label %918, label %877, !llvm.loop !412

911:                                              ; preds = %873, %903
  %912 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

913:                                              ; preds = %886, %895
  %914 = phi ptr [ %902, %895 ], [ %879, %886 ]
  %915 = phi i32 [ %901, %895 ], [ 1, %886 ]
  %916 = load i32, ptr %914, align 4, !tbaa !5
  %917 = add nsw i32 %916, %915
  store i32 %917, ptr %914, align 4, !tbaa !5
  br label %918

918:                                              ; preds = %905, %913, %875, %860
  %919 = icmp eq i32 %867, %5
  br i1 %919, label %3001, label %783, !llvm.loop !413

920:                                              ; preds = %624
  %921 = getelementptr inbounds i32, ptr %3, i64 %19
  %922 = load i32, ptr %921, align 4, !tbaa !5
  %923 = icmp eq i32 %922, 0
  %924 = icmp sgt i32 %5, 0
  br i1 %923, label %934, label %925

925:                                              ; preds = %920
  br i1 %924, label %926, label %3001

926:                                              ; preds = %925
  %927 = icmp sgt i32 %13, 1
  %928 = icmp sgt i32 %13, 0
  %929 = add i32 %13, -2
  %930 = zext i32 %929 to i64
  %931 = zext i32 %13 to i64
  %932 = add nuw i32 %5, 1
  %933 = icmp eq i32 %13, 1
  br label %1073

934:                                              ; preds = %920
  br i1 %924, label %935, label %3001

935:                                              ; preds = %934
  %936 = icmp sgt i32 %13, 1
  %937 = icmp sgt i32 %13, 0
  %938 = add i32 %13, -2
  %939 = zext i32 %938 to i64
  %940 = zext i32 %13 to i64
  %941 = add nuw i32 %5, 1
  %942 = icmp eq i32 %13, 1
  br label %943

943:                                              ; preds = %935, %1071
  %944 = phi i32 [ 0, %935 ], [ %1023, %1071 ]
  %945 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %936, label %946, label %1015

946:                                              ; preds = %943, %1005
  %947 = phi i32 [ %1014, %1005 ], [ 0, %943 ]
  %948 = phi i64 [ %956, %1005 ], [ %940, %943 ]
  %949 = phi i64 [ %1013, %1005 ], [ %939, %943 ]
  %950 = phi i32 [ %1011, %1005 ], [ %945, %943 ]
  %951 = sub i32 %938, %947
  %952 = tail call i32 @llvm.smin.i32(i32 %951, i32 0)
  %953 = sub i32 %951, %952
  %954 = zext i32 %953 to i64
  %955 = add nuw nsw i64 %954, 1
  %956 = add nsw i64 %948, -1
  %957 = icmp ult i32 %953, 31
  br i1 %957, label %993, label %958

958:                                              ; preds = %946
  %959 = and i64 %955, 8589934560
  %960 = sub i64 %949, %959
  br label %961

961:                                              ; preds = %961, %958
  %962 = phi i64 [ 0, %958 ], [ %985, %961 ]
  %963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %981, %961 ]
  %964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %982, %961 ]
  %965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %983, %961 ]
  %966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %958 ], [ %984, %961 ]
  %967 = sub i64 %949, %962
  %968 = getelementptr inbounds i32, ptr %9, i64 %967
  %969 = getelementptr inbounds i32, ptr %968, i64 -7
  %970 = load <8 x i32>, ptr %969, align 4, !tbaa !5
  %971 = shufflevector <8 x i32> %970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %972 = getelementptr inbounds i32, ptr %968, i64 -15
  %973 = load <8 x i32>, ptr %972, align 4, !tbaa !5
  %974 = shufflevector <8 x i32> %973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %975 = getelementptr inbounds i32, ptr %968, i64 -23
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %968, i64 -31
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = mul <8 x i32> %971, %963
  %982 = mul <8 x i32> %974, %964
  %983 = mul <8 x i32> %977, %965
  %984 = mul <8 x i32> %980, %966
  %985 = add nuw i64 %962, 32
  %986 = icmp eq i64 %985, %959
  br i1 %986, label %987, label %961, !llvm.loop !414

987:                                              ; preds = %961
  %988 = mul <8 x i32> %982, %981
  %989 = mul <8 x i32> %983, %988
  %990 = mul <8 x i32> %984, %989
  %991 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %990)
  %992 = icmp eq i64 %955, %959
  br i1 %992, label %1005, label %993

993:                                              ; preds = %946, %987
  %994 = phi i64 [ %949, %946 ], [ %960, %987 ]
  %995 = phi i32 [ 1, %946 ], [ %991, %987 ]
  br label %996

996:                                              ; preds = %993, %996
  %997 = phi i64 [ %1002, %996 ], [ %994, %993 ]
  %998 = phi i32 [ %1001, %996 ], [ %995, %993 ]
  %999 = getelementptr inbounds i32, ptr %9, i64 %997
  %1000 = load i32, ptr %999, align 4, !tbaa !5
  %1001 = mul nsw i32 %1000, %998
  %1002 = add nsw i64 %997, -1
  %1003 = trunc i64 %997 to i32
  %1004 = icmp sgt i32 %1003, 0
  br i1 %1004, label %996, label %1005, !llvm.loop !415

1005:                                             ; preds = %996, %987
  %1006 = phi i32 [ %991, %987 ], [ %1001, %996 ]
  %1007 = and i64 %956, 4294967295
  %1008 = getelementptr inbounds i32, ptr %6, i64 %1007
  %1009 = load i32, ptr %1008, align 4, !tbaa !5
  %1010 = mul nsw i32 %1009, %1006
  %1011 = add nsw i32 %1010, %950
  %1012 = icmp sgt i64 %948, 2
  %1013 = add nsw i64 %949, -1
  %1014 = add i32 %947, 1
  br i1 %1012, label %946, label %1015, !llvm.loop !416

1015:                                             ; preds = %1005, %943
  %1016 = phi i32 [ %945, %943 ], [ %1011, %1005 ]
  %1017 = sext i32 %1016 to i64
  %1018 = getelementptr inbounds i8, ptr %617, i64 %1017
  %1019 = load i8, ptr %1018, align 1, !tbaa !11
  %1020 = sext i8 %1019 to i32
  %1021 = load i32, ptr %619, align 4, !tbaa !5
  %1022 = add nsw i32 %1021, %1020
  store i32 %1022, ptr %619, align 4, !tbaa !5
  %1023 = add nuw nsw i32 %944, 1
  br i1 %937, label %1024, label %1071

1024:                                             ; preds = %1015
  %1025 = load i32, ptr %4, align 4, !tbaa !5
  %1026 = load i32, ptr %12, align 4, !tbaa !5
  %1027 = add nsw i32 %1026, -1
  %1028 = icmp slt i32 %1025, %1027
  br i1 %1028, label %1048, label %1029

1029:                                             ; preds = %1024
  %1030 = icmp eq i32 %1025, %1027
  br i1 %1030, label %1031, label %1064

1031:                                             ; preds = %1029
  store i32 0, ptr %4, align 4, !tbaa !5
  %1032 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1032, ptr %6, align 4, !tbaa !5
  br i1 %942, label %1071, label %1033

1033:                                             ; preds = %1031, %1058
  %1034 = phi i64 [ %1062, %1058 ], [ 1, %1031 ]
  %1035 = getelementptr inbounds i32, ptr %4, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !5
  %1037 = getelementptr inbounds i32, ptr %12, i64 %1034
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = add nsw i32 %1038, -1
  %1040 = icmp slt i32 %1036, %1039
  br i1 %1040, label %1041, label %1056

1041:                                             ; preds = %1033
  br i1 %1028, label %1048, label %1042

1042:                                             ; preds = %1041
  %1043 = getelementptr inbounds i32, ptr %7, i64 %1034
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = getelementptr inbounds i32, ptr %6, i64 %1034
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = add nsw i32 %1046, %1044
  store i32 %1047, ptr %1045, align 4, !tbaa !5
  br label %1066

1048:                                             ; preds = %1024, %1041
  %1049 = phi i32 [ %1036, %1041 ], [ %1025, %1024 ]
  %1050 = phi ptr [ %1035, %1041 ], [ %4, %1024 ]
  %1051 = phi i64 [ %1034, %1041 ], [ 0, %1024 ]
  %1052 = add nsw i32 %1049, 1
  store i32 %1052, ptr %1050, align 4, !tbaa !5
  %1053 = getelementptr inbounds i32, ptr %7, i64 %1051
  %1054 = load i32, ptr %1053, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %6, i64 %1051
  br label %1066

1056:                                             ; preds = %1033
  %1057 = icmp eq i32 %1036, %1039
  br i1 %1057, label %1058, label %1064

1058:                                             ; preds = %1056
  store i32 0, ptr %1035, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %8, i64 %1034
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %6, i64 %1034
  store i32 %1060, ptr %1061, align 4, !tbaa !5
  %1062 = add nuw nsw i64 %1034, 1
  %1063 = icmp eq i64 %1062, %940
  br i1 %1063, label %1071, label %1033, !llvm.loop !417

1064:                                             ; preds = %1029, %1056
  %1065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1066:                                             ; preds = %1042, %1048
  %1067 = phi ptr [ %1055, %1048 ], [ %1035, %1042 ]
  %1068 = phi i32 [ %1054, %1048 ], [ 1, %1042 ]
  %1069 = load i32, ptr %1067, align 4, !tbaa !5
  %1070 = add nsw i32 %1069, %1068
  store i32 %1070, ptr %1067, align 4, !tbaa !5
  br label %1071

1071:                                             ; preds = %1058, %1066, %1031, %1015
  %1072 = icmp eq i32 %1023, %5
  br i1 %1072, label %3001, label %943, !llvm.loop !418

1073:                                             ; preds = %926, %1208
  %1074 = phi i32 [ 0, %926 ], [ %1157, %1208 ]
  %1075 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %927, label %1076, label %1145

1076:                                             ; preds = %1073, %1135
  %1077 = phi i32 [ %1144, %1135 ], [ 0, %1073 ]
  %1078 = phi i64 [ %1086, %1135 ], [ %931, %1073 ]
  %1079 = phi i64 [ %1143, %1135 ], [ %930, %1073 ]
  %1080 = phi i32 [ %1141, %1135 ], [ %1075, %1073 ]
  %1081 = sub i32 %929, %1077
  %1082 = tail call i32 @llvm.smin.i32(i32 %1081, i32 0)
  %1083 = sub i32 %1081, %1082
  %1084 = zext i32 %1083 to i64
  %1085 = add nuw nsw i64 %1084, 1
  %1086 = add nsw i64 %1078, -1
  %1087 = icmp ult i32 %1083, 31
  br i1 %1087, label %1123, label %1088

1088:                                             ; preds = %1076
  %1089 = and i64 %1085, 8589934560
  %1090 = sub i64 %1079, %1089
  br label %1091

1091:                                             ; preds = %1091, %1088
  %1092 = phi i64 [ 0, %1088 ], [ %1115, %1091 ]
  %1093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1111, %1091 ]
  %1094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1112, %1091 ]
  %1095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1113, %1091 ]
  %1096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1088 ], [ %1114, %1091 ]
  %1097 = sub i64 %1079, %1092
  %1098 = getelementptr inbounds i32, ptr %11, i64 %1097
  %1099 = getelementptr inbounds i32, ptr %1098, i64 -7
  %1100 = load <8 x i32>, ptr %1099, align 4, !tbaa !5
  %1101 = shufflevector <8 x i32> %1100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1102 = getelementptr inbounds i32, ptr %1098, i64 -15
  %1103 = load <8 x i32>, ptr %1102, align 4, !tbaa !5
  %1104 = shufflevector <8 x i32> %1103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1105 = getelementptr inbounds i32, ptr %1098, i64 -23
  %1106 = load <8 x i32>, ptr %1105, align 4, !tbaa !5
  %1107 = shufflevector <8 x i32> %1106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1108 = getelementptr inbounds i32, ptr %1098, i64 -31
  %1109 = load <8 x i32>, ptr %1108, align 4, !tbaa !5
  %1110 = shufflevector <8 x i32> %1109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1111 = mul <8 x i32> %1101, %1093
  %1112 = mul <8 x i32> %1104, %1094
  %1113 = mul <8 x i32> %1107, %1095
  %1114 = mul <8 x i32> %1110, %1096
  %1115 = add nuw i64 %1092, 32
  %1116 = icmp eq i64 %1115, %1089
  br i1 %1116, label %1117, label %1091, !llvm.loop !419

1117:                                             ; preds = %1091
  %1118 = mul <8 x i32> %1112, %1111
  %1119 = mul <8 x i32> %1113, %1118
  %1120 = mul <8 x i32> %1114, %1119
  %1121 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1120)
  %1122 = icmp eq i64 %1085, %1089
  br i1 %1122, label %1135, label %1123

1123:                                             ; preds = %1076, %1117
  %1124 = phi i64 [ %1079, %1076 ], [ %1090, %1117 ]
  %1125 = phi i32 [ 1, %1076 ], [ %1121, %1117 ]
  br label %1126

1126:                                             ; preds = %1123, %1126
  %1127 = phi i64 [ %1132, %1126 ], [ %1124, %1123 ]
  %1128 = phi i32 [ %1131, %1126 ], [ %1125, %1123 ]
  %1129 = getelementptr inbounds i32, ptr %11, i64 %1127
  %1130 = load i32, ptr %1129, align 4, !tbaa !5
  %1131 = mul nsw i32 %1130, %1128
  %1132 = add nsw i64 %1127, -1
  %1133 = trunc i64 %1127 to i32
  %1134 = icmp sgt i32 %1133, 0
  br i1 %1134, label %1126, label %1135, !llvm.loop !420

1135:                                             ; preds = %1126, %1117
  %1136 = phi i32 [ %1121, %1117 ], [ %1131, %1126 ]
  %1137 = and i64 %1086, 4294967295
  %1138 = getelementptr inbounds i32, ptr %6, i64 %1137
  %1139 = load i32, ptr %1138, align 4, !tbaa !5
  %1140 = mul nsw i32 %1139, %1136
  %1141 = add nsw i32 %1140, %1080
  %1142 = icmp sgt i64 %1078, 2
  %1143 = add nsw i64 %1079, -1
  %1144 = add i32 %1077, 1
  br i1 %1142, label %1076, label %1145, !llvm.loop !421

1145:                                             ; preds = %1135, %1073
  %1146 = phi i32 [ %1075, %1073 ], [ %1141, %1135 ]
  %1147 = icmp slt i32 %1146, %5
  br i1 %1147, label %1150, label %1148

1148:                                             ; preds = %1145
  %1149 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

1150:                                             ; preds = %1145
  %1151 = sext i32 %1146 to i64
  %1152 = getelementptr inbounds i8, ptr %617, i64 %1151
  %1153 = load i8, ptr %1152, align 1, !tbaa !11
  %1154 = sext i8 %1153 to i32
  %1155 = load i32, ptr %619, align 4, !tbaa !5
  %1156 = add nsw i32 %1155, %1154
  store i32 %1156, ptr %619, align 4, !tbaa !5
  %1157 = add nuw nsw i32 %1074, 1
  br i1 %928, label %1158, label %1208

1158:                                             ; preds = %1150
  %1159 = load i32, ptr %4, align 4, !tbaa !5
  %1160 = load i32, ptr %12, align 4, !tbaa !5
  %1161 = add nsw i32 %1160, -1
  %1162 = icmp slt i32 %1159, %1161
  br i1 %1162, label %1185, label %1163

1163:                                             ; preds = %1158
  %1164 = icmp eq i32 %1159, %1161
  br i1 %1164, label %1165, label %1201

1165:                                             ; preds = %1163
  store i32 0, ptr %4, align 4, !tbaa !5
  %1166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1166, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1208, label %1167

1167:                                             ; preds = %1165, %1195
  %1168 = phi i64 [ %1199, %1195 ], [ 1, %1165 ]
  %1169 = getelementptr inbounds i32, ptr %4, i64 %1168
  %1170 = load i32, ptr %1169, align 4, !tbaa !5
  %1171 = getelementptr inbounds i32, ptr %12, i64 %1168
  %1172 = load i32, ptr %1171, align 4, !tbaa !5
  %1173 = add nsw i32 %1172, -1
  %1174 = icmp slt i32 %1170, %1173
  br i1 %1174, label %1175, label %1193

1175:                                             ; preds = %1167
  br i1 %1162, label %1185, label %1176

1176:                                             ; preds = %1175
  %1177 = shl i64 %1168, 32
  %1178 = add i64 %1177, -4294967296
  %1179 = ashr exact i64 %1178, 32
  %1180 = getelementptr inbounds i32, ptr %7, i64 %1179
  %1181 = load i32, ptr %1180, align 4, !tbaa !5
  %1182 = getelementptr inbounds i32, ptr %6, i64 %1168
  %1183 = load i32, ptr %1182, align 4, !tbaa !5
  %1184 = add nsw i32 %1183, %1181
  store i32 %1184, ptr %1182, align 4, !tbaa !5
  br label %1203

1185:                                             ; preds = %1158, %1175
  %1186 = phi i32 [ %1170, %1175 ], [ %1159, %1158 ]
  %1187 = phi ptr [ %1169, %1175 ], [ %4, %1158 ]
  %1188 = phi i64 [ %1168, %1175 ], [ 0, %1158 ]
  %1189 = add nsw i32 %1186, 1
  store i32 %1189, ptr %1187, align 4, !tbaa !5
  %1190 = getelementptr inbounds i32, ptr %7, i64 %1188
  %1191 = load i32, ptr %1190, align 4, !tbaa !5
  %1192 = getelementptr inbounds i32, ptr %6, i64 %1188
  br label %1203

1193:                                             ; preds = %1167
  %1194 = icmp eq i32 %1170, %1173
  br i1 %1194, label %1195, label %1201

1195:                                             ; preds = %1193
  store i32 0, ptr %1169, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %8, i64 %1168
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %6, i64 %1168
  store i32 %1197, ptr %1198, align 4, !tbaa !5
  %1199 = add nuw nsw i64 %1168, 1
  %1200 = icmp eq i64 %1199, %931
  br i1 %1200, label %1208, label %1167, !llvm.loop !422

1201:                                             ; preds = %1163, %1193
  %1202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1203:                                             ; preds = %1176, %1185
  %1204 = phi ptr [ %1192, %1185 ], [ %1169, %1176 ]
  %1205 = phi i32 [ %1191, %1185 ], [ 1, %1176 ]
  %1206 = load i32, ptr %1204, align 4, !tbaa !5
  %1207 = add nsw i32 %1206, %1205
  store i32 %1207, ptr %1204, align 4, !tbaa !5
  br label %1208

1208:                                             ; preds = %1195, %1203, %1165, %1150
  %1209 = icmp eq i32 %1157, %5
  br i1 %1209, label %3001, label %1073, !llvm.loop !423

1210:                                             ; preds = %624
  %1211 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 530, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3001

1212:                                             ; preds = %18
  %1213 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1214 = load ptr, ptr %1213, align 8, !tbaa !9
  %1215 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1216 = load ptr, ptr %1215, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1216, align 8, !tbaa !18
  %1217 = icmp eq i32 %13, 0
  br i1 %1217, label %1218, label %1221

1218:                                             ; preds = %1212
  %1219 = load i8, ptr %1214, align 1, !tbaa !11
  %1220 = sitofp i8 %1219 to double
  store double %1220, ptr %1216, align 8, !tbaa !18
  br label %3001

1221:                                             ; preds = %1212
  switch i32 %1, label %1805 [
    i32 1, label %1222
    i32 0, label %1515
  ]

1222:                                             ; preds = %1221
  %1223 = getelementptr inbounds i32, ptr %3, i64 %19
  %1224 = load i32, ptr %1223, align 4, !tbaa !5
  %1225 = icmp eq i32 %1224, 0
  %1226 = icmp sgt i32 %5, 0
  br i1 %1225, label %1236, label %1227

1227:                                             ; preds = %1222
  br i1 %1226, label %1228, label %3001

1228:                                             ; preds = %1227
  %1229 = icmp sgt i32 %13, 1
  %1230 = icmp sgt i32 %13, 0
  %1231 = add i32 %13, -2
  %1232 = zext i32 %1231 to i64
  %1233 = zext i32 %13 to i64
  %1234 = add nuw i32 %5, 1
  %1235 = icmp eq i32 %13, 1
  br label %1378

1236:                                             ; preds = %1222
  br i1 %1226, label %1237, label %3001

1237:                                             ; preds = %1236
  %1238 = icmp sgt i32 %13, 1
  %1239 = icmp sgt i32 %13, 0
  %1240 = add i32 %13, -2
  %1241 = zext i32 %1240 to i64
  %1242 = zext i32 %13 to i64
  %1243 = add nuw i32 %5, 1
  %1244 = icmp eq i32 %13, 1
  br label %1245

1245:                                             ; preds = %1237, %1376
  %1246 = phi double [ 0.000000e+00, %1237 ], [ %1327, %1376 ]
  %1247 = phi i32 [ 0, %1237 ], [ %1328, %1376 ]
  %1248 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1238, label %1249, label %1318

1249:                                             ; preds = %1245, %1308
  %1250 = phi i32 [ %1317, %1308 ], [ 0, %1245 ]
  %1251 = phi i64 [ %1259, %1308 ], [ %1242, %1245 ]
  %1252 = phi i64 [ %1316, %1308 ], [ %1241, %1245 ]
  %1253 = phi i32 [ %1314, %1308 ], [ %1248, %1245 ]
  %1254 = sub i32 %1240, %1250
  %1255 = tail call i32 @llvm.smin.i32(i32 %1254, i32 0)
  %1256 = sub i32 %1254, %1255
  %1257 = zext i32 %1256 to i64
  %1258 = add nuw nsw i64 %1257, 1
  %1259 = add nsw i64 %1251, -1
  %1260 = icmp ult i32 %1256, 31
  br i1 %1260, label %1296, label %1261

1261:                                             ; preds = %1249
  %1262 = and i64 %1258, 8589934560
  %1263 = sub i64 %1252, %1262
  br label %1264

1264:                                             ; preds = %1264, %1261
  %1265 = phi i64 [ 0, %1261 ], [ %1288, %1264 ]
  %1266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1284, %1264 ]
  %1267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1285, %1264 ]
  %1268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1286, %1264 ]
  %1269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1287, %1264 ]
  %1270 = sub i64 %1252, %1265
  %1271 = getelementptr inbounds i32, ptr %9, i64 %1270
  %1272 = getelementptr inbounds i32, ptr %1271, i64 -7
  %1273 = load <8 x i32>, ptr %1272, align 4, !tbaa !5
  %1274 = shufflevector <8 x i32> %1273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1275 = getelementptr inbounds i32, ptr %1271, i64 -15
  %1276 = load <8 x i32>, ptr %1275, align 4, !tbaa !5
  %1277 = shufflevector <8 x i32> %1276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1278 = getelementptr inbounds i32, ptr %1271, i64 -23
  %1279 = load <8 x i32>, ptr %1278, align 4, !tbaa !5
  %1280 = shufflevector <8 x i32> %1279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1281 = getelementptr inbounds i32, ptr %1271, i64 -31
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = mul <8 x i32> %1274, %1266
  %1285 = mul <8 x i32> %1277, %1267
  %1286 = mul <8 x i32> %1280, %1268
  %1287 = mul <8 x i32> %1283, %1269
  %1288 = add nuw i64 %1265, 32
  %1289 = icmp eq i64 %1288, %1262
  br i1 %1289, label %1290, label %1264, !llvm.loop !424

1290:                                             ; preds = %1264
  %1291 = mul <8 x i32> %1285, %1284
  %1292 = mul <8 x i32> %1286, %1291
  %1293 = mul <8 x i32> %1287, %1292
  %1294 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1293)
  %1295 = icmp eq i64 %1258, %1262
  br i1 %1295, label %1308, label %1296

1296:                                             ; preds = %1249, %1290
  %1297 = phi i64 [ %1252, %1249 ], [ %1263, %1290 ]
  %1298 = phi i32 [ 1, %1249 ], [ %1294, %1290 ]
  br label %1299

1299:                                             ; preds = %1296, %1299
  %1300 = phi i64 [ %1305, %1299 ], [ %1297, %1296 ]
  %1301 = phi i32 [ %1304, %1299 ], [ %1298, %1296 ]
  %1302 = getelementptr inbounds i32, ptr %9, i64 %1300
  %1303 = load i32, ptr %1302, align 4, !tbaa !5
  %1304 = mul nsw i32 %1303, %1301
  %1305 = add nsw i64 %1300, -1
  %1306 = trunc i64 %1300 to i32
  %1307 = icmp sgt i32 %1306, 0
  br i1 %1307, label %1299, label %1308, !llvm.loop !425

1308:                                             ; preds = %1299, %1290
  %1309 = phi i32 [ %1294, %1290 ], [ %1304, %1299 ]
  %1310 = and i64 %1259, 4294967295
  %1311 = getelementptr inbounds i32, ptr %6, i64 %1310
  %1312 = load i32, ptr %1311, align 4, !tbaa !5
  %1313 = mul nsw i32 %1312, %1309
  %1314 = add nsw i32 %1313, %1253
  %1315 = icmp sgt i64 %1251, 2
  %1316 = add nsw i64 %1252, -1
  %1317 = add i32 %1250, 1
  br i1 %1315, label %1249, label %1318, !llvm.loop !426

1318:                                             ; preds = %1308, %1245
  %1319 = phi i32 [ %1248, %1245 ], [ %1314, %1308 ]
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds double, ptr %2, i64 %1320
  %1322 = load double, ptr %1321, align 8, !tbaa !18
  %1323 = getelementptr inbounds i8, ptr %1214, i64 %1320
  %1324 = load i8, ptr %1323, align 1, !tbaa !11
  %1325 = sitofp i8 %1324 to double
  %1326 = fmul fast double %1322, %1325
  %1327 = fadd fast double %1326, %1246
  store double %1327, ptr %1216, align 8, !tbaa !18
  %1328 = add nuw nsw i32 %1247, 1
  br i1 %1239, label %1329, label %1376

1329:                                             ; preds = %1318
  %1330 = load i32, ptr %4, align 4, !tbaa !5
  %1331 = load i32, ptr %12, align 4, !tbaa !5
  %1332 = add nsw i32 %1331, -1
  %1333 = icmp slt i32 %1330, %1332
  br i1 %1333, label %1353, label %1334

1334:                                             ; preds = %1329
  %1335 = icmp eq i32 %1330, %1332
  br i1 %1335, label %1336, label %1369

1336:                                             ; preds = %1334
  store i32 0, ptr %4, align 4, !tbaa !5
  %1337 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1337, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1376, label %1338

1338:                                             ; preds = %1336, %1363
  %1339 = phi i64 [ %1367, %1363 ], [ 1, %1336 ]
  %1340 = getelementptr inbounds i32, ptr %4, i64 %1339
  %1341 = load i32, ptr %1340, align 4, !tbaa !5
  %1342 = getelementptr inbounds i32, ptr %12, i64 %1339
  %1343 = load i32, ptr %1342, align 4, !tbaa !5
  %1344 = add nsw i32 %1343, -1
  %1345 = icmp slt i32 %1341, %1344
  br i1 %1345, label %1346, label %1361

1346:                                             ; preds = %1338
  br i1 %1333, label %1353, label %1347

1347:                                             ; preds = %1346
  %1348 = getelementptr inbounds i32, ptr %7, i64 %1339
  %1349 = load i32, ptr %1348, align 4, !tbaa !5
  %1350 = getelementptr inbounds i32, ptr %6, i64 %1339
  %1351 = load i32, ptr %1350, align 4, !tbaa !5
  %1352 = add nsw i32 %1351, %1349
  store i32 %1352, ptr %1350, align 4, !tbaa !5
  br label %1371

1353:                                             ; preds = %1329, %1346
  %1354 = phi i32 [ %1341, %1346 ], [ %1330, %1329 ]
  %1355 = phi ptr [ %1340, %1346 ], [ %4, %1329 ]
  %1356 = phi i64 [ %1339, %1346 ], [ 0, %1329 ]
  %1357 = add nsw i32 %1354, 1
  store i32 %1357, ptr %1355, align 4, !tbaa !5
  %1358 = getelementptr inbounds i32, ptr %7, i64 %1356
  %1359 = load i32, ptr %1358, align 4, !tbaa !5
  %1360 = getelementptr inbounds i32, ptr %6, i64 %1356
  br label %1371

1361:                                             ; preds = %1338
  %1362 = icmp eq i32 %1341, %1344
  br i1 %1362, label %1363, label %1369

1363:                                             ; preds = %1361
  store i32 0, ptr %1340, align 4, !tbaa !5
  %1364 = getelementptr inbounds i32, ptr %8, i64 %1339
  %1365 = load i32, ptr %1364, align 4, !tbaa !5
  %1366 = getelementptr inbounds i32, ptr %6, i64 %1339
  store i32 %1365, ptr %1366, align 4, !tbaa !5
  %1367 = add nuw nsw i64 %1339, 1
  %1368 = icmp eq i64 %1367, %1242
  br i1 %1368, label %1376, label %1338, !llvm.loop !427

1369:                                             ; preds = %1334, %1361
  %1370 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1371:                                             ; preds = %1347, %1353
  %1372 = phi ptr [ %1360, %1353 ], [ %1340, %1347 ]
  %1373 = phi i32 [ %1359, %1353 ], [ 1, %1347 ]
  %1374 = load i32, ptr %1372, align 4, !tbaa !5
  %1375 = add nsw i32 %1374, %1373
  store i32 %1375, ptr %1372, align 4, !tbaa !5
  br label %1376

1376:                                             ; preds = %1363, %1371, %1336, %1318
  %1377 = icmp eq i32 %1328, %5
  br i1 %1377, label %3001, label %1245, !llvm.loop !428

1378:                                             ; preds = %1228, %1513
  %1379 = phi double [ 0.000000e+00, %1228 ], [ %1461, %1513 ]
  %1380 = phi i32 [ 0, %1228 ], [ %1462, %1513 ]
  %1381 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1229, label %1382, label %1451

1382:                                             ; preds = %1378, %1441
  %1383 = phi i32 [ %1450, %1441 ], [ 0, %1378 ]
  %1384 = phi i64 [ %1392, %1441 ], [ %1233, %1378 ]
  %1385 = phi i64 [ %1449, %1441 ], [ %1232, %1378 ]
  %1386 = phi i32 [ %1447, %1441 ], [ %1381, %1378 ]
  %1387 = sub i32 %1231, %1383
  %1388 = tail call i32 @llvm.smin.i32(i32 %1387, i32 0)
  %1389 = sub i32 %1387, %1388
  %1390 = zext i32 %1389 to i64
  %1391 = add nuw nsw i64 %1390, 1
  %1392 = add nsw i64 %1384, -1
  %1393 = icmp ult i32 %1389, 31
  br i1 %1393, label %1429, label %1394

1394:                                             ; preds = %1382
  %1395 = and i64 %1391, 8589934560
  %1396 = sub i64 %1385, %1395
  br label %1397

1397:                                             ; preds = %1397, %1394
  %1398 = phi i64 [ 0, %1394 ], [ %1421, %1397 ]
  %1399 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1417, %1397 ]
  %1400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1418, %1397 ]
  %1401 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1419, %1397 ]
  %1402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1394 ], [ %1420, %1397 ]
  %1403 = sub i64 %1385, %1398
  %1404 = getelementptr inbounds i32, ptr %11, i64 %1403
  %1405 = getelementptr inbounds i32, ptr %1404, i64 -7
  %1406 = load <8 x i32>, ptr %1405, align 4, !tbaa !5
  %1407 = shufflevector <8 x i32> %1406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1408 = getelementptr inbounds i32, ptr %1404, i64 -15
  %1409 = load <8 x i32>, ptr %1408, align 4, !tbaa !5
  %1410 = shufflevector <8 x i32> %1409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1411 = getelementptr inbounds i32, ptr %1404, i64 -23
  %1412 = load <8 x i32>, ptr %1411, align 4, !tbaa !5
  %1413 = shufflevector <8 x i32> %1412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1414 = getelementptr inbounds i32, ptr %1404, i64 -31
  %1415 = load <8 x i32>, ptr %1414, align 4, !tbaa !5
  %1416 = shufflevector <8 x i32> %1415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1417 = mul <8 x i32> %1407, %1399
  %1418 = mul <8 x i32> %1410, %1400
  %1419 = mul <8 x i32> %1413, %1401
  %1420 = mul <8 x i32> %1416, %1402
  %1421 = add nuw i64 %1398, 32
  %1422 = icmp eq i64 %1421, %1395
  br i1 %1422, label %1423, label %1397, !llvm.loop !429

1423:                                             ; preds = %1397
  %1424 = mul <8 x i32> %1418, %1417
  %1425 = mul <8 x i32> %1419, %1424
  %1426 = mul <8 x i32> %1420, %1425
  %1427 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1426)
  %1428 = icmp eq i64 %1391, %1395
  br i1 %1428, label %1441, label %1429

1429:                                             ; preds = %1382, %1423
  %1430 = phi i64 [ %1385, %1382 ], [ %1396, %1423 ]
  %1431 = phi i32 [ 1, %1382 ], [ %1427, %1423 ]
  br label %1432

1432:                                             ; preds = %1429, %1432
  %1433 = phi i64 [ %1438, %1432 ], [ %1430, %1429 ]
  %1434 = phi i32 [ %1437, %1432 ], [ %1431, %1429 ]
  %1435 = getelementptr inbounds i32, ptr %11, i64 %1433
  %1436 = load i32, ptr %1435, align 4, !tbaa !5
  %1437 = mul nsw i32 %1436, %1434
  %1438 = add nsw i64 %1433, -1
  %1439 = trunc i64 %1433 to i32
  %1440 = icmp sgt i32 %1439, 0
  br i1 %1440, label %1432, label %1441, !llvm.loop !430

1441:                                             ; preds = %1432, %1423
  %1442 = phi i32 [ %1427, %1423 ], [ %1437, %1432 ]
  %1443 = and i64 %1392, 4294967295
  %1444 = getelementptr inbounds i32, ptr %6, i64 %1443
  %1445 = load i32, ptr %1444, align 4, !tbaa !5
  %1446 = mul nsw i32 %1445, %1442
  %1447 = add nsw i32 %1446, %1386
  %1448 = icmp sgt i64 %1384, 2
  %1449 = add nsw i64 %1385, -1
  %1450 = add i32 %1383, 1
  br i1 %1448, label %1382, label %1451, !llvm.loop !431

1451:                                             ; preds = %1441, %1378
  %1452 = phi i32 [ %1381, %1378 ], [ %1447, %1441 ]
  %1453 = icmp slt i32 %1452, %5
  br i1 %1453, label %1456, label %1454

1454:                                             ; preds = %1451
  %1455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

1456:                                             ; preds = %1451
  %1457 = sext i32 %1452 to i64
  %1458 = getelementptr inbounds i8, ptr %1214, i64 %1457
  %1459 = load i8, ptr %1458, align 1, !tbaa !11
  %1460 = sitofp i8 %1459 to double
  %1461 = fadd fast double %1379, %1460
  store double %1461, ptr %1216, align 8, !tbaa !18
  %1462 = add nuw nsw i32 %1380, 1
  br i1 %1230, label %1463, label %1513

1463:                                             ; preds = %1456
  %1464 = load i32, ptr %4, align 4, !tbaa !5
  %1465 = load i32, ptr %12, align 4, !tbaa !5
  %1466 = add nsw i32 %1465, -1
  %1467 = icmp slt i32 %1464, %1466
  br i1 %1467, label %1490, label %1468

1468:                                             ; preds = %1463
  %1469 = icmp eq i32 %1464, %1466
  br i1 %1469, label %1470, label %1506

1470:                                             ; preds = %1468
  store i32 0, ptr %4, align 4, !tbaa !5
  %1471 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1471, ptr %6, align 4, !tbaa !5
  br i1 %1235, label %1513, label %1472

1472:                                             ; preds = %1470, %1500
  %1473 = phi i64 [ %1504, %1500 ], [ 1, %1470 ]
  %1474 = getelementptr inbounds i32, ptr %4, i64 %1473
  %1475 = load i32, ptr %1474, align 4, !tbaa !5
  %1476 = getelementptr inbounds i32, ptr %12, i64 %1473
  %1477 = load i32, ptr %1476, align 4, !tbaa !5
  %1478 = add nsw i32 %1477, -1
  %1479 = icmp slt i32 %1475, %1478
  br i1 %1479, label %1480, label %1498

1480:                                             ; preds = %1472
  br i1 %1467, label %1490, label %1481

1481:                                             ; preds = %1480
  %1482 = shl i64 %1473, 32
  %1483 = add i64 %1482, -4294967296
  %1484 = ashr exact i64 %1483, 32
  %1485 = getelementptr inbounds i32, ptr %7, i64 %1484
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = getelementptr inbounds i32, ptr %6, i64 %1473
  %1488 = load i32, ptr %1487, align 4, !tbaa !5
  %1489 = add nsw i32 %1488, %1486
  store i32 %1489, ptr %1487, align 4, !tbaa !5
  br label %1508

1490:                                             ; preds = %1463, %1480
  %1491 = phi i32 [ %1475, %1480 ], [ %1464, %1463 ]
  %1492 = phi ptr [ %1474, %1480 ], [ %4, %1463 ]
  %1493 = phi i64 [ %1473, %1480 ], [ 0, %1463 ]
  %1494 = add nsw i32 %1491, 1
  store i32 %1494, ptr %1492, align 4, !tbaa !5
  %1495 = getelementptr inbounds i32, ptr %7, i64 %1493
  %1496 = load i32, ptr %1495, align 4, !tbaa !5
  %1497 = getelementptr inbounds i32, ptr %6, i64 %1493
  br label %1508

1498:                                             ; preds = %1472
  %1499 = icmp eq i32 %1475, %1478
  br i1 %1499, label %1500, label %1506

1500:                                             ; preds = %1498
  store i32 0, ptr %1474, align 4, !tbaa !5
  %1501 = getelementptr inbounds i32, ptr %8, i64 %1473
  %1502 = load i32, ptr %1501, align 4, !tbaa !5
  %1503 = getelementptr inbounds i32, ptr %6, i64 %1473
  store i32 %1502, ptr %1503, align 4, !tbaa !5
  %1504 = add nuw nsw i64 %1473, 1
  %1505 = icmp eq i64 %1504, %1233
  br i1 %1505, label %1513, label %1472, !llvm.loop !432

1506:                                             ; preds = %1468, %1498
  %1507 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1508:                                             ; preds = %1481, %1490
  %1509 = phi ptr [ %1497, %1490 ], [ %1474, %1481 ]
  %1510 = phi i32 [ %1496, %1490 ], [ 1, %1481 ]
  %1511 = load i32, ptr %1509, align 4, !tbaa !5
  %1512 = add nsw i32 %1511, %1510
  store i32 %1512, ptr %1509, align 4, !tbaa !5
  br label %1513

1513:                                             ; preds = %1500, %1508, %1470, %1456
  %1514 = icmp eq i32 %1462, %5
  br i1 %1514, label %3001, label %1378, !llvm.loop !433

1515:                                             ; preds = %1221
  %1516 = getelementptr inbounds i32, ptr %3, i64 %19
  %1517 = load i32, ptr %1516, align 4, !tbaa !5
  %1518 = icmp eq i32 %1517, 0
  %1519 = icmp sgt i32 %5, 0
  br i1 %1518, label %1529, label %1520

1520:                                             ; preds = %1515
  br i1 %1519, label %1521, label %3001

1521:                                             ; preds = %1520
  %1522 = icmp sgt i32 %13, 1
  %1523 = icmp sgt i32 %13, 0
  %1524 = add i32 %13, -2
  %1525 = zext i32 %1524 to i64
  %1526 = zext i32 %13 to i64
  %1527 = add nuw i32 %5, 1
  %1528 = icmp eq i32 %13, 1
  br label %1668

1529:                                             ; preds = %1515
  br i1 %1519, label %1530, label %3001

1530:                                             ; preds = %1529
  %1531 = icmp sgt i32 %13, 1
  %1532 = icmp sgt i32 %13, 0
  %1533 = add i32 %13, -2
  %1534 = zext i32 %1533 to i64
  %1535 = zext i32 %13 to i64
  %1536 = add nuw i32 %5, 1
  %1537 = icmp eq i32 %13, 1
  br label %1538

1538:                                             ; preds = %1530, %1666
  %1539 = phi double [ 0.000000e+00, %1530 ], [ %1617, %1666 ]
  %1540 = phi i32 [ 0, %1530 ], [ %1618, %1666 ]
  %1541 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1531, label %1542, label %1611

1542:                                             ; preds = %1538, %1601
  %1543 = phi i32 [ %1610, %1601 ], [ 0, %1538 ]
  %1544 = phi i64 [ %1552, %1601 ], [ %1535, %1538 ]
  %1545 = phi i64 [ %1609, %1601 ], [ %1534, %1538 ]
  %1546 = phi i32 [ %1607, %1601 ], [ %1541, %1538 ]
  %1547 = sub i32 %1533, %1543
  %1548 = tail call i32 @llvm.smin.i32(i32 %1547, i32 0)
  %1549 = sub i32 %1547, %1548
  %1550 = zext i32 %1549 to i64
  %1551 = add nuw nsw i64 %1550, 1
  %1552 = add nsw i64 %1544, -1
  %1553 = icmp ult i32 %1549, 31
  br i1 %1553, label %1589, label %1554

1554:                                             ; preds = %1542
  %1555 = and i64 %1551, 8589934560
  %1556 = sub i64 %1545, %1555
  br label %1557

1557:                                             ; preds = %1557, %1554
  %1558 = phi i64 [ 0, %1554 ], [ %1581, %1557 ]
  %1559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1554 ], [ %1577, %1557 ]
  %1560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1554 ], [ %1578, %1557 ]
  %1561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1554 ], [ %1579, %1557 ]
  %1562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1554 ], [ %1580, %1557 ]
  %1563 = sub i64 %1545, %1558
  %1564 = getelementptr inbounds i32, ptr %9, i64 %1563
  %1565 = getelementptr inbounds i32, ptr %1564, i64 -7
  %1566 = load <8 x i32>, ptr %1565, align 4, !tbaa !5
  %1567 = shufflevector <8 x i32> %1566, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1568 = getelementptr inbounds i32, ptr %1564, i64 -15
  %1569 = load <8 x i32>, ptr %1568, align 4, !tbaa !5
  %1570 = shufflevector <8 x i32> %1569, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1571 = getelementptr inbounds i32, ptr %1564, i64 -23
  %1572 = load <8 x i32>, ptr %1571, align 4, !tbaa !5
  %1573 = shufflevector <8 x i32> %1572, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1574 = getelementptr inbounds i32, ptr %1564, i64 -31
  %1575 = load <8 x i32>, ptr %1574, align 4, !tbaa !5
  %1576 = shufflevector <8 x i32> %1575, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1577 = mul <8 x i32> %1567, %1559
  %1578 = mul <8 x i32> %1570, %1560
  %1579 = mul <8 x i32> %1573, %1561
  %1580 = mul <8 x i32> %1576, %1562
  %1581 = add nuw i64 %1558, 32
  %1582 = icmp eq i64 %1581, %1555
  br i1 %1582, label %1583, label %1557, !llvm.loop !434

1583:                                             ; preds = %1557
  %1584 = mul <8 x i32> %1578, %1577
  %1585 = mul <8 x i32> %1579, %1584
  %1586 = mul <8 x i32> %1580, %1585
  %1587 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1586)
  %1588 = icmp eq i64 %1551, %1555
  br i1 %1588, label %1601, label %1589

1589:                                             ; preds = %1542, %1583
  %1590 = phi i64 [ %1545, %1542 ], [ %1556, %1583 ]
  %1591 = phi i32 [ 1, %1542 ], [ %1587, %1583 ]
  br label %1592

1592:                                             ; preds = %1589, %1592
  %1593 = phi i64 [ %1598, %1592 ], [ %1590, %1589 ]
  %1594 = phi i32 [ %1597, %1592 ], [ %1591, %1589 ]
  %1595 = getelementptr inbounds i32, ptr %9, i64 %1593
  %1596 = load i32, ptr %1595, align 4, !tbaa !5
  %1597 = mul nsw i32 %1596, %1594
  %1598 = add nsw i64 %1593, -1
  %1599 = trunc i64 %1593 to i32
  %1600 = icmp sgt i32 %1599, 0
  br i1 %1600, label %1592, label %1601, !llvm.loop !435

1601:                                             ; preds = %1592, %1583
  %1602 = phi i32 [ %1587, %1583 ], [ %1597, %1592 ]
  %1603 = and i64 %1552, 4294967295
  %1604 = getelementptr inbounds i32, ptr %6, i64 %1603
  %1605 = load i32, ptr %1604, align 4, !tbaa !5
  %1606 = mul nsw i32 %1605, %1602
  %1607 = add nsw i32 %1606, %1546
  %1608 = icmp sgt i64 %1544, 2
  %1609 = add nsw i64 %1545, -1
  %1610 = add i32 %1543, 1
  br i1 %1608, label %1542, label %1611, !llvm.loop !436

1611:                                             ; preds = %1601, %1538
  %1612 = phi i32 [ %1541, %1538 ], [ %1607, %1601 ]
  %1613 = sext i32 %1612 to i64
  %1614 = getelementptr inbounds i8, ptr %1214, i64 %1613
  %1615 = load i8, ptr %1614, align 1, !tbaa !11
  %1616 = sitofp i8 %1615 to double
  %1617 = fadd fast double %1539, %1616
  store double %1617, ptr %1216, align 8, !tbaa !18
  %1618 = add nuw nsw i32 %1540, 1
  br i1 %1532, label %1619, label %1666

1619:                                             ; preds = %1611
  %1620 = load i32, ptr %4, align 4, !tbaa !5
  %1621 = load i32, ptr %12, align 4, !tbaa !5
  %1622 = add nsw i32 %1621, -1
  %1623 = icmp slt i32 %1620, %1622
  br i1 %1623, label %1643, label %1624

1624:                                             ; preds = %1619
  %1625 = icmp eq i32 %1620, %1622
  br i1 %1625, label %1626, label %1659

1626:                                             ; preds = %1624
  store i32 0, ptr %4, align 4, !tbaa !5
  %1627 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1627, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1666, label %1628

1628:                                             ; preds = %1626, %1653
  %1629 = phi i64 [ %1657, %1653 ], [ 1, %1626 ]
  %1630 = getelementptr inbounds i32, ptr %4, i64 %1629
  %1631 = load i32, ptr %1630, align 4, !tbaa !5
  %1632 = getelementptr inbounds i32, ptr %12, i64 %1629
  %1633 = load i32, ptr %1632, align 4, !tbaa !5
  %1634 = add nsw i32 %1633, -1
  %1635 = icmp slt i32 %1631, %1634
  br i1 %1635, label %1636, label %1651

1636:                                             ; preds = %1628
  br i1 %1623, label %1643, label %1637

1637:                                             ; preds = %1636
  %1638 = getelementptr inbounds i32, ptr %7, i64 %1629
  %1639 = load i32, ptr %1638, align 4, !tbaa !5
  %1640 = getelementptr inbounds i32, ptr %6, i64 %1629
  %1641 = load i32, ptr %1640, align 4, !tbaa !5
  %1642 = add nsw i32 %1641, %1639
  store i32 %1642, ptr %1640, align 4, !tbaa !5
  br label %1661

1643:                                             ; preds = %1619, %1636
  %1644 = phi i32 [ %1631, %1636 ], [ %1620, %1619 ]
  %1645 = phi ptr [ %1630, %1636 ], [ %4, %1619 ]
  %1646 = phi i64 [ %1629, %1636 ], [ 0, %1619 ]
  %1647 = add nsw i32 %1644, 1
  store i32 %1647, ptr %1645, align 4, !tbaa !5
  %1648 = getelementptr inbounds i32, ptr %7, i64 %1646
  %1649 = load i32, ptr %1648, align 4, !tbaa !5
  %1650 = getelementptr inbounds i32, ptr %6, i64 %1646
  br label %1661

1651:                                             ; preds = %1628
  %1652 = icmp eq i32 %1631, %1634
  br i1 %1652, label %1653, label %1659

1653:                                             ; preds = %1651
  store i32 0, ptr %1630, align 4, !tbaa !5
  %1654 = getelementptr inbounds i32, ptr %8, i64 %1629
  %1655 = load i32, ptr %1654, align 4, !tbaa !5
  %1656 = getelementptr inbounds i32, ptr %6, i64 %1629
  store i32 %1655, ptr %1656, align 4, !tbaa !5
  %1657 = add nuw nsw i64 %1629, 1
  %1658 = icmp eq i64 %1657, %1535
  br i1 %1658, label %1666, label %1628, !llvm.loop !437

1659:                                             ; preds = %1624, %1651
  %1660 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1661:                                             ; preds = %1637, %1643
  %1662 = phi ptr [ %1650, %1643 ], [ %1630, %1637 ]
  %1663 = phi i32 [ %1649, %1643 ], [ 1, %1637 ]
  %1664 = load i32, ptr %1662, align 4, !tbaa !5
  %1665 = add nsw i32 %1664, %1663
  store i32 %1665, ptr %1662, align 4, !tbaa !5
  br label %1666

1666:                                             ; preds = %1653, %1661, %1626, %1611
  %1667 = icmp eq i32 %1618, %5
  br i1 %1667, label %3001, label %1538, !llvm.loop !438

1668:                                             ; preds = %1521, %1803
  %1669 = phi double [ 0.000000e+00, %1521 ], [ %1751, %1803 ]
  %1670 = phi i32 [ 0, %1521 ], [ %1752, %1803 ]
  %1671 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1522, label %1672, label %1741

1672:                                             ; preds = %1668, %1731
  %1673 = phi i32 [ %1740, %1731 ], [ 0, %1668 ]
  %1674 = phi i64 [ %1682, %1731 ], [ %1526, %1668 ]
  %1675 = phi i64 [ %1739, %1731 ], [ %1525, %1668 ]
  %1676 = phi i32 [ %1737, %1731 ], [ %1671, %1668 ]
  %1677 = sub i32 %1524, %1673
  %1678 = tail call i32 @llvm.smin.i32(i32 %1677, i32 0)
  %1679 = sub i32 %1677, %1678
  %1680 = zext i32 %1679 to i64
  %1681 = add nuw nsw i64 %1680, 1
  %1682 = add nsw i64 %1674, -1
  %1683 = icmp ult i32 %1679, 31
  br i1 %1683, label %1719, label %1684

1684:                                             ; preds = %1672
  %1685 = and i64 %1681, 8589934560
  %1686 = sub i64 %1675, %1685
  br label %1687

1687:                                             ; preds = %1687, %1684
  %1688 = phi i64 [ 0, %1684 ], [ %1711, %1687 ]
  %1689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1684 ], [ %1707, %1687 ]
  %1690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1684 ], [ %1708, %1687 ]
  %1691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1684 ], [ %1709, %1687 ]
  %1692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1684 ], [ %1710, %1687 ]
  %1693 = sub i64 %1675, %1688
  %1694 = getelementptr inbounds i32, ptr %11, i64 %1693
  %1695 = getelementptr inbounds i32, ptr %1694, i64 -7
  %1696 = load <8 x i32>, ptr %1695, align 4, !tbaa !5
  %1697 = shufflevector <8 x i32> %1696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1698 = getelementptr inbounds i32, ptr %1694, i64 -15
  %1699 = load <8 x i32>, ptr %1698, align 4, !tbaa !5
  %1700 = shufflevector <8 x i32> %1699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1701 = getelementptr inbounds i32, ptr %1694, i64 -23
  %1702 = load <8 x i32>, ptr %1701, align 4, !tbaa !5
  %1703 = shufflevector <8 x i32> %1702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1704 = getelementptr inbounds i32, ptr %1694, i64 -31
  %1705 = load <8 x i32>, ptr %1704, align 4, !tbaa !5
  %1706 = shufflevector <8 x i32> %1705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1707 = mul <8 x i32> %1697, %1689
  %1708 = mul <8 x i32> %1700, %1690
  %1709 = mul <8 x i32> %1703, %1691
  %1710 = mul <8 x i32> %1706, %1692
  %1711 = add nuw i64 %1688, 32
  %1712 = icmp eq i64 %1711, %1685
  br i1 %1712, label %1713, label %1687, !llvm.loop !439

1713:                                             ; preds = %1687
  %1714 = mul <8 x i32> %1708, %1707
  %1715 = mul <8 x i32> %1709, %1714
  %1716 = mul <8 x i32> %1710, %1715
  %1717 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1716)
  %1718 = icmp eq i64 %1681, %1685
  br i1 %1718, label %1731, label %1719

1719:                                             ; preds = %1672, %1713
  %1720 = phi i64 [ %1675, %1672 ], [ %1686, %1713 ]
  %1721 = phi i32 [ 1, %1672 ], [ %1717, %1713 ]
  br label %1722

1722:                                             ; preds = %1719, %1722
  %1723 = phi i64 [ %1728, %1722 ], [ %1720, %1719 ]
  %1724 = phi i32 [ %1727, %1722 ], [ %1721, %1719 ]
  %1725 = getelementptr inbounds i32, ptr %11, i64 %1723
  %1726 = load i32, ptr %1725, align 4, !tbaa !5
  %1727 = mul nsw i32 %1726, %1724
  %1728 = add nsw i64 %1723, -1
  %1729 = trunc i64 %1723 to i32
  %1730 = icmp sgt i32 %1729, 0
  br i1 %1730, label %1722, label %1731, !llvm.loop !440

1731:                                             ; preds = %1722, %1713
  %1732 = phi i32 [ %1717, %1713 ], [ %1727, %1722 ]
  %1733 = and i64 %1682, 4294967295
  %1734 = getelementptr inbounds i32, ptr %6, i64 %1733
  %1735 = load i32, ptr %1734, align 4, !tbaa !5
  %1736 = mul nsw i32 %1735, %1732
  %1737 = add nsw i32 %1736, %1676
  %1738 = icmp sgt i64 %1674, 2
  %1739 = add nsw i64 %1675, -1
  %1740 = add i32 %1673, 1
  br i1 %1738, label %1672, label %1741, !llvm.loop !441

1741:                                             ; preds = %1731, %1668
  %1742 = phi i32 [ %1671, %1668 ], [ %1737, %1731 ]
  %1743 = icmp slt i32 %1742, %5
  br i1 %1743, label %1746, label %1744

1744:                                             ; preds = %1741
  %1745 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

1746:                                             ; preds = %1741
  %1747 = sext i32 %1742 to i64
  %1748 = getelementptr inbounds i8, ptr %1214, i64 %1747
  %1749 = load i8, ptr %1748, align 1, !tbaa !11
  %1750 = sitofp i8 %1749 to double
  %1751 = fadd fast double %1669, %1750
  store double %1751, ptr %1216, align 8, !tbaa !18
  %1752 = add nuw nsw i32 %1670, 1
  br i1 %1523, label %1753, label %1803

1753:                                             ; preds = %1746
  %1754 = load i32, ptr %4, align 4, !tbaa !5
  %1755 = load i32, ptr %12, align 4, !tbaa !5
  %1756 = add nsw i32 %1755, -1
  %1757 = icmp slt i32 %1754, %1756
  br i1 %1757, label %1780, label %1758

1758:                                             ; preds = %1753
  %1759 = icmp eq i32 %1754, %1756
  br i1 %1759, label %1760, label %1796

1760:                                             ; preds = %1758
  store i32 0, ptr %4, align 4, !tbaa !5
  %1761 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1761, ptr %6, align 4, !tbaa !5
  br i1 %1528, label %1803, label %1762

1762:                                             ; preds = %1760, %1790
  %1763 = phi i64 [ %1794, %1790 ], [ 1, %1760 ]
  %1764 = getelementptr inbounds i32, ptr %4, i64 %1763
  %1765 = load i32, ptr %1764, align 4, !tbaa !5
  %1766 = getelementptr inbounds i32, ptr %12, i64 %1763
  %1767 = load i32, ptr %1766, align 4, !tbaa !5
  %1768 = add nsw i32 %1767, -1
  %1769 = icmp slt i32 %1765, %1768
  br i1 %1769, label %1770, label %1788

1770:                                             ; preds = %1762
  br i1 %1757, label %1780, label %1771

1771:                                             ; preds = %1770
  %1772 = shl i64 %1763, 32
  %1773 = add i64 %1772, -4294967296
  %1774 = ashr exact i64 %1773, 32
  %1775 = getelementptr inbounds i32, ptr %7, i64 %1774
  %1776 = load i32, ptr %1775, align 4, !tbaa !5
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1763
  %1778 = load i32, ptr %1777, align 4, !tbaa !5
  %1779 = add nsw i32 %1778, %1776
  store i32 %1779, ptr %1777, align 4, !tbaa !5
  br label %1798

1780:                                             ; preds = %1753, %1770
  %1781 = phi i32 [ %1765, %1770 ], [ %1754, %1753 ]
  %1782 = phi ptr [ %1764, %1770 ], [ %4, %1753 ]
  %1783 = phi i64 [ %1763, %1770 ], [ 0, %1753 ]
  %1784 = add nsw i32 %1781, 1
  store i32 %1784, ptr %1782, align 4, !tbaa !5
  %1785 = getelementptr inbounds i32, ptr %7, i64 %1783
  %1786 = load i32, ptr %1785, align 4, !tbaa !5
  %1787 = getelementptr inbounds i32, ptr %6, i64 %1783
  br label %1798

1788:                                             ; preds = %1762
  %1789 = icmp eq i32 %1765, %1768
  br i1 %1789, label %1790, label %1796

1790:                                             ; preds = %1788
  store i32 0, ptr %1764, align 4, !tbaa !5
  %1791 = getelementptr inbounds i32, ptr %8, i64 %1763
  %1792 = load i32, ptr %1791, align 4, !tbaa !5
  %1793 = getelementptr inbounds i32, ptr %6, i64 %1763
  store i32 %1792, ptr %1793, align 4, !tbaa !5
  %1794 = add nuw nsw i64 %1763, 1
  %1795 = icmp eq i64 %1794, %1526
  br i1 %1795, label %1803, label %1762, !llvm.loop !442

1796:                                             ; preds = %1758, %1788
  %1797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1798:                                             ; preds = %1771, %1780
  %1799 = phi ptr [ %1787, %1780 ], [ %1764, %1771 ]
  %1800 = phi i32 [ %1786, %1780 ], [ 1, %1771 ]
  %1801 = load i32, ptr %1799, align 4, !tbaa !5
  %1802 = add nsw i32 %1801, %1800
  store i32 %1802, ptr %1799, align 4, !tbaa !5
  br label %1803

1803:                                             ; preds = %1790, %1798, %1760, %1746
  %1804 = icmp eq i32 %1752, %5
  br i1 %1804, label %3001, label %1668, !llvm.loop !443

1805:                                             ; preds = %1221
  %1806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 553, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3001

1807:                                             ; preds = %18
  %1808 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1809 = load ptr, ptr %1808, align 8, !tbaa !9
  %1810 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1811 = load ptr, ptr %1810, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1811, align 4, !tbaa !162
  %1812 = icmp eq i32 %13, 0
  br i1 %1812, label %1813, label %1816

1813:                                             ; preds = %1807
  %1814 = load i8, ptr %1809, align 1, !tbaa !11
  %1815 = sitofp i8 %1814 to float
  store float %1815, ptr %1811, align 4, !tbaa !162
  br label %3001

1816:                                             ; preds = %1807
  switch i32 %1, label %2404 [
    i32 1, label %1817
    i32 0, label %2114
  ]

1817:                                             ; preds = %1816
  %1818 = getelementptr inbounds i32, ptr %3, i64 %19
  %1819 = load i32, ptr %1818, align 4, !tbaa !5
  %1820 = icmp eq i32 %1819, 0
  %1821 = icmp sgt i32 %5, 0
  br i1 %1820, label %1831, label %1822

1822:                                             ; preds = %1817
  br i1 %1821, label %1823, label %3001

1823:                                             ; preds = %1822
  %1824 = icmp sgt i32 %13, 1
  %1825 = icmp sgt i32 %13, 0
  %1826 = add i32 %13, -2
  %1827 = zext i32 %1826 to i64
  %1828 = zext i32 %13 to i64
  %1829 = add nuw i32 %5, 1
  %1830 = icmp eq i32 %13, 1
  br label %1975

1831:                                             ; preds = %1817
  br i1 %1821, label %1832, label %3001

1832:                                             ; preds = %1831
  %1833 = icmp sgt i32 %13, 1
  %1834 = icmp sgt i32 %13, 0
  %1835 = add i32 %13, -2
  %1836 = zext i32 %1835 to i64
  %1837 = zext i32 %13 to i64
  %1838 = add nuw i32 %5, 1
  %1839 = icmp eq i32 %13, 1
  br label %1840

1840:                                             ; preds = %1832, %1973
  %1841 = phi float [ 0.000000e+00, %1832 ], [ %1924, %1973 ]
  %1842 = phi i32 [ 0, %1832 ], [ %1925, %1973 ]
  %1843 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1833, label %1844, label %1913

1844:                                             ; preds = %1840, %1903
  %1845 = phi i32 [ %1912, %1903 ], [ 0, %1840 ]
  %1846 = phi i64 [ %1854, %1903 ], [ %1837, %1840 ]
  %1847 = phi i64 [ %1911, %1903 ], [ %1836, %1840 ]
  %1848 = phi i32 [ %1909, %1903 ], [ %1843, %1840 ]
  %1849 = sub i32 %1835, %1845
  %1850 = tail call i32 @llvm.smin.i32(i32 %1849, i32 0)
  %1851 = sub i32 %1849, %1850
  %1852 = zext i32 %1851 to i64
  %1853 = add nuw nsw i64 %1852, 1
  %1854 = add nsw i64 %1846, -1
  %1855 = icmp ult i32 %1851, 31
  br i1 %1855, label %1891, label %1856

1856:                                             ; preds = %1844
  %1857 = and i64 %1853, 8589934560
  %1858 = sub i64 %1847, %1857
  br label %1859

1859:                                             ; preds = %1859, %1856
  %1860 = phi i64 [ 0, %1856 ], [ %1883, %1859 ]
  %1861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1856 ], [ %1879, %1859 ]
  %1862 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1856 ], [ %1880, %1859 ]
  %1863 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1856 ], [ %1881, %1859 ]
  %1864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1856 ], [ %1882, %1859 ]
  %1865 = sub i64 %1847, %1860
  %1866 = getelementptr inbounds i32, ptr %9, i64 %1865
  %1867 = getelementptr inbounds i32, ptr %1866, i64 -7
  %1868 = load <8 x i32>, ptr %1867, align 4, !tbaa !5
  %1869 = shufflevector <8 x i32> %1868, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1870 = getelementptr inbounds i32, ptr %1866, i64 -15
  %1871 = load <8 x i32>, ptr %1870, align 4, !tbaa !5
  %1872 = shufflevector <8 x i32> %1871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1873 = getelementptr inbounds i32, ptr %1866, i64 -23
  %1874 = load <8 x i32>, ptr %1873, align 4, !tbaa !5
  %1875 = shufflevector <8 x i32> %1874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1876 = getelementptr inbounds i32, ptr %1866, i64 -31
  %1877 = load <8 x i32>, ptr %1876, align 4, !tbaa !5
  %1878 = shufflevector <8 x i32> %1877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1879 = mul <8 x i32> %1869, %1861
  %1880 = mul <8 x i32> %1872, %1862
  %1881 = mul <8 x i32> %1875, %1863
  %1882 = mul <8 x i32> %1878, %1864
  %1883 = add nuw i64 %1860, 32
  %1884 = icmp eq i64 %1883, %1857
  br i1 %1884, label %1885, label %1859, !llvm.loop !444

1885:                                             ; preds = %1859
  %1886 = mul <8 x i32> %1880, %1879
  %1887 = mul <8 x i32> %1881, %1886
  %1888 = mul <8 x i32> %1882, %1887
  %1889 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1888)
  %1890 = icmp eq i64 %1853, %1857
  br i1 %1890, label %1903, label %1891

1891:                                             ; preds = %1844, %1885
  %1892 = phi i64 [ %1847, %1844 ], [ %1858, %1885 ]
  %1893 = phi i32 [ 1, %1844 ], [ %1889, %1885 ]
  br label %1894

1894:                                             ; preds = %1891, %1894
  %1895 = phi i64 [ %1900, %1894 ], [ %1892, %1891 ]
  %1896 = phi i32 [ %1899, %1894 ], [ %1893, %1891 ]
  %1897 = getelementptr inbounds i32, ptr %9, i64 %1895
  %1898 = load i32, ptr %1897, align 4, !tbaa !5
  %1899 = mul nsw i32 %1898, %1896
  %1900 = add nsw i64 %1895, -1
  %1901 = trunc i64 %1895 to i32
  %1902 = icmp sgt i32 %1901, 0
  br i1 %1902, label %1894, label %1903, !llvm.loop !445

1903:                                             ; preds = %1894, %1885
  %1904 = phi i32 [ %1889, %1885 ], [ %1899, %1894 ]
  %1905 = and i64 %1854, 4294967295
  %1906 = getelementptr inbounds i32, ptr %6, i64 %1905
  %1907 = load i32, ptr %1906, align 4, !tbaa !5
  %1908 = mul nsw i32 %1907, %1904
  %1909 = add nsw i32 %1908, %1848
  %1910 = icmp sgt i64 %1846, 2
  %1911 = add nsw i64 %1847, -1
  %1912 = add i32 %1845, 1
  br i1 %1910, label %1844, label %1913, !llvm.loop !446

1913:                                             ; preds = %1903, %1840
  %1914 = phi i32 [ %1843, %1840 ], [ %1909, %1903 ]
  %1915 = sext i32 %1914 to i64
  %1916 = getelementptr inbounds double, ptr %2, i64 %1915
  %1917 = load double, ptr %1916, align 8, !tbaa !18
  %1918 = getelementptr inbounds i8, ptr %1809, i64 %1915
  %1919 = load i8, ptr %1918, align 1, !tbaa !11
  %1920 = fpext float %1841 to double
  %1921 = sitofp i8 %1919 to double
  %1922 = fmul fast double %1917, %1921
  %1923 = fadd fast double %1922, %1920
  %1924 = fptrunc double %1923 to float
  store float %1924, ptr %1811, align 4, !tbaa !162
  %1925 = add nuw nsw i32 %1842, 1
  br i1 %1834, label %1926, label %1973

1926:                                             ; preds = %1913
  %1927 = load i32, ptr %4, align 4, !tbaa !5
  %1928 = load i32, ptr %12, align 4, !tbaa !5
  %1929 = add nsw i32 %1928, -1
  %1930 = icmp slt i32 %1927, %1929
  br i1 %1930, label %1950, label %1931

1931:                                             ; preds = %1926
  %1932 = icmp eq i32 %1927, %1929
  br i1 %1932, label %1933, label %1966

1933:                                             ; preds = %1931
  store i32 0, ptr %4, align 4, !tbaa !5
  %1934 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1934, ptr %6, align 4, !tbaa !5
  br i1 %1839, label %1973, label %1935

1935:                                             ; preds = %1933, %1960
  %1936 = phi i64 [ %1964, %1960 ], [ 1, %1933 ]
  %1937 = getelementptr inbounds i32, ptr %4, i64 %1936
  %1938 = load i32, ptr %1937, align 4, !tbaa !5
  %1939 = getelementptr inbounds i32, ptr %12, i64 %1936
  %1940 = load i32, ptr %1939, align 4, !tbaa !5
  %1941 = add nsw i32 %1940, -1
  %1942 = icmp slt i32 %1938, %1941
  br i1 %1942, label %1943, label %1958

1943:                                             ; preds = %1935
  br i1 %1930, label %1950, label %1944

1944:                                             ; preds = %1943
  %1945 = getelementptr inbounds i32, ptr %7, i64 %1936
  %1946 = load i32, ptr %1945, align 4, !tbaa !5
  %1947 = getelementptr inbounds i32, ptr %6, i64 %1936
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = add nsw i32 %1948, %1946
  store i32 %1949, ptr %1947, align 4, !tbaa !5
  br label %1968

1950:                                             ; preds = %1926, %1943
  %1951 = phi i32 [ %1938, %1943 ], [ %1927, %1926 ]
  %1952 = phi ptr [ %1937, %1943 ], [ %4, %1926 ]
  %1953 = phi i64 [ %1936, %1943 ], [ 0, %1926 ]
  %1954 = add nsw i32 %1951, 1
  store i32 %1954, ptr %1952, align 4, !tbaa !5
  %1955 = getelementptr inbounds i32, ptr %7, i64 %1953
  %1956 = load i32, ptr %1955, align 4, !tbaa !5
  %1957 = getelementptr inbounds i32, ptr %6, i64 %1953
  br label %1968

1958:                                             ; preds = %1935
  %1959 = icmp eq i32 %1938, %1941
  br i1 %1959, label %1960, label %1966

1960:                                             ; preds = %1958
  store i32 0, ptr %1937, align 4, !tbaa !5
  %1961 = getelementptr inbounds i32, ptr %8, i64 %1936
  %1962 = load i32, ptr %1961, align 4, !tbaa !5
  %1963 = getelementptr inbounds i32, ptr %6, i64 %1936
  store i32 %1962, ptr %1963, align 4, !tbaa !5
  %1964 = add nuw nsw i64 %1936, 1
  %1965 = icmp eq i64 %1964, %1837
  br i1 %1965, label %1973, label %1935, !llvm.loop !447

1966:                                             ; preds = %1931, %1958
  %1967 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

1968:                                             ; preds = %1944, %1950
  %1969 = phi ptr [ %1957, %1950 ], [ %1937, %1944 ]
  %1970 = phi i32 [ %1956, %1950 ], [ 1, %1944 ]
  %1971 = load i32, ptr %1969, align 4, !tbaa !5
  %1972 = add nsw i32 %1971, %1970
  store i32 %1972, ptr %1969, align 4, !tbaa !5
  br label %1973

1973:                                             ; preds = %1960, %1968, %1933, %1913
  %1974 = icmp eq i32 %1925, %5
  br i1 %1974, label %3001, label %1840, !llvm.loop !448

1975:                                             ; preds = %1823, %2112
  %1976 = phi float [ 0.000000e+00, %1823 ], [ %2060, %2112 ]
  %1977 = phi i32 [ 0, %1823 ], [ %2061, %2112 ]
  %1978 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1824, label %1979, label %2048

1979:                                             ; preds = %1975, %2038
  %1980 = phi i32 [ %2047, %2038 ], [ 0, %1975 ]
  %1981 = phi i64 [ %1989, %2038 ], [ %1828, %1975 ]
  %1982 = phi i64 [ %2046, %2038 ], [ %1827, %1975 ]
  %1983 = phi i32 [ %2044, %2038 ], [ %1978, %1975 ]
  %1984 = sub i32 %1826, %1980
  %1985 = tail call i32 @llvm.smin.i32(i32 %1984, i32 0)
  %1986 = sub i32 %1984, %1985
  %1987 = zext i32 %1986 to i64
  %1988 = add nuw nsw i64 %1987, 1
  %1989 = add nsw i64 %1981, -1
  %1990 = icmp ult i32 %1986, 31
  br i1 %1990, label %2026, label %1991

1991:                                             ; preds = %1979
  %1992 = and i64 %1988, 8589934560
  %1993 = sub i64 %1982, %1992
  br label %1994

1994:                                             ; preds = %1994, %1991
  %1995 = phi i64 [ 0, %1991 ], [ %2018, %1994 ]
  %1996 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1991 ], [ %2014, %1994 ]
  %1997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1991 ], [ %2015, %1994 ]
  %1998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1991 ], [ %2016, %1994 ]
  %1999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1991 ], [ %2017, %1994 ]
  %2000 = sub i64 %1982, %1995
  %2001 = getelementptr inbounds i32, ptr %11, i64 %2000
  %2002 = getelementptr inbounds i32, ptr %2001, i64 -7
  %2003 = load <8 x i32>, ptr %2002, align 4, !tbaa !5
  %2004 = shufflevector <8 x i32> %2003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2005 = getelementptr inbounds i32, ptr %2001, i64 -15
  %2006 = load <8 x i32>, ptr %2005, align 4, !tbaa !5
  %2007 = shufflevector <8 x i32> %2006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2008 = getelementptr inbounds i32, ptr %2001, i64 -23
  %2009 = load <8 x i32>, ptr %2008, align 4, !tbaa !5
  %2010 = shufflevector <8 x i32> %2009, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2011 = getelementptr inbounds i32, ptr %2001, i64 -31
  %2012 = load <8 x i32>, ptr %2011, align 4, !tbaa !5
  %2013 = shufflevector <8 x i32> %2012, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2014 = mul <8 x i32> %2004, %1996
  %2015 = mul <8 x i32> %2007, %1997
  %2016 = mul <8 x i32> %2010, %1998
  %2017 = mul <8 x i32> %2013, %1999
  %2018 = add nuw i64 %1995, 32
  %2019 = icmp eq i64 %2018, %1992
  br i1 %2019, label %2020, label %1994, !llvm.loop !449

2020:                                             ; preds = %1994
  %2021 = mul <8 x i32> %2015, %2014
  %2022 = mul <8 x i32> %2016, %2021
  %2023 = mul <8 x i32> %2017, %2022
  %2024 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2023)
  %2025 = icmp eq i64 %1988, %1992
  br i1 %2025, label %2038, label %2026

2026:                                             ; preds = %1979, %2020
  %2027 = phi i64 [ %1982, %1979 ], [ %1993, %2020 ]
  %2028 = phi i32 [ 1, %1979 ], [ %2024, %2020 ]
  br label %2029

2029:                                             ; preds = %2026, %2029
  %2030 = phi i64 [ %2035, %2029 ], [ %2027, %2026 ]
  %2031 = phi i32 [ %2034, %2029 ], [ %2028, %2026 ]
  %2032 = getelementptr inbounds i32, ptr %11, i64 %2030
  %2033 = load i32, ptr %2032, align 4, !tbaa !5
  %2034 = mul nsw i32 %2033, %2031
  %2035 = add nsw i64 %2030, -1
  %2036 = trunc i64 %2030 to i32
  %2037 = icmp sgt i32 %2036, 0
  br i1 %2037, label %2029, label %2038, !llvm.loop !450

2038:                                             ; preds = %2029, %2020
  %2039 = phi i32 [ %2024, %2020 ], [ %2034, %2029 ]
  %2040 = and i64 %1989, 4294967295
  %2041 = getelementptr inbounds i32, ptr %6, i64 %2040
  %2042 = load i32, ptr %2041, align 4, !tbaa !5
  %2043 = mul nsw i32 %2042, %2039
  %2044 = add nsw i32 %2043, %1983
  %2045 = icmp sgt i64 %1981, 2
  %2046 = add nsw i64 %1982, -1
  %2047 = add i32 %1980, 1
  br i1 %2045, label %1979, label %2048, !llvm.loop !451

2048:                                             ; preds = %2038, %1975
  %2049 = phi i32 [ %1978, %1975 ], [ %2044, %2038 ]
  %2050 = icmp slt i32 %2049, %5
  br i1 %2050, label %2053, label %2051

2051:                                             ; preds = %2048
  %2052 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

2053:                                             ; preds = %2048
  %2054 = sext i32 %2049 to i64
  %2055 = getelementptr inbounds i8, ptr %1809, i64 %2054
  %2056 = load i8, ptr %2055, align 1, !tbaa !11
  %2057 = fpext float %1976 to double
  %2058 = sitofp i8 %2056 to double
  %2059 = fadd fast double %2057, %2058
  %2060 = fptrunc double %2059 to float
  store float %2060, ptr %1811, align 4, !tbaa !162
  %2061 = add nuw nsw i32 %1977, 1
  br i1 %1825, label %2062, label %2112

2062:                                             ; preds = %2053
  %2063 = load i32, ptr %4, align 4, !tbaa !5
  %2064 = load i32, ptr %12, align 4, !tbaa !5
  %2065 = add nsw i32 %2064, -1
  %2066 = icmp slt i32 %2063, %2065
  br i1 %2066, label %2089, label %2067

2067:                                             ; preds = %2062
  %2068 = icmp eq i32 %2063, %2065
  br i1 %2068, label %2069, label %2105

2069:                                             ; preds = %2067
  store i32 0, ptr %4, align 4, !tbaa !5
  %2070 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2070, ptr %6, align 4, !tbaa !5
  br i1 %1830, label %2112, label %2071

2071:                                             ; preds = %2069, %2099
  %2072 = phi i64 [ %2103, %2099 ], [ 1, %2069 ]
  %2073 = getelementptr inbounds i32, ptr %4, i64 %2072
  %2074 = load i32, ptr %2073, align 4, !tbaa !5
  %2075 = getelementptr inbounds i32, ptr %12, i64 %2072
  %2076 = load i32, ptr %2075, align 4, !tbaa !5
  %2077 = add nsw i32 %2076, -1
  %2078 = icmp slt i32 %2074, %2077
  br i1 %2078, label %2079, label %2097

2079:                                             ; preds = %2071
  br i1 %2066, label %2089, label %2080

2080:                                             ; preds = %2079
  %2081 = shl i64 %2072, 32
  %2082 = add i64 %2081, -4294967296
  %2083 = ashr exact i64 %2082, 32
  %2084 = getelementptr inbounds i32, ptr %7, i64 %2083
  %2085 = load i32, ptr %2084, align 4, !tbaa !5
  %2086 = getelementptr inbounds i32, ptr %6, i64 %2072
  %2087 = load i32, ptr %2086, align 4, !tbaa !5
  %2088 = add nsw i32 %2087, %2085
  store i32 %2088, ptr %2086, align 4, !tbaa !5
  br label %2107

2089:                                             ; preds = %2062, %2079
  %2090 = phi i32 [ %2074, %2079 ], [ %2063, %2062 ]
  %2091 = phi ptr [ %2073, %2079 ], [ %4, %2062 ]
  %2092 = phi i64 [ %2072, %2079 ], [ 0, %2062 ]
  %2093 = add nsw i32 %2090, 1
  store i32 %2093, ptr %2091, align 4, !tbaa !5
  %2094 = getelementptr inbounds i32, ptr %7, i64 %2092
  %2095 = load i32, ptr %2094, align 4, !tbaa !5
  %2096 = getelementptr inbounds i32, ptr %6, i64 %2092
  br label %2107

2097:                                             ; preds = %2071
  %2098 = icmp eq i32 %2074, %2077
  br i1 %2098, label %2099, label %2105

2099:                                             ; preds = %2097
  store i32 0, ptr %2073, align 4, !tbaa !5
  %2100 = getelementptr inbounds i32, ptr %8, i64 %2072
  %2101 = load i32, ptr %2100, align 4, !tbaa !5
  %2102 = getelementptr inbounds i32, ptr %6, i64 %2072
  store i32 %2101, ptr %2102, align 4, !tbaa !5
  %2103 = add nuw nsw i64 %2072, 1
  %2104 = icmp eq i64 %2103, %1828
  br i1 %2104, label %2112, label %2071, !llvm.loop !452

2105:                                             ; preds = %2067, %2097
  %2106 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2107:                                             ; preds = %2080, %2089
  %2108 = phi ptr [ %2096, %2089 ], [ %2073, %2080 ]
  %2109 = phi i32 [ %2095, %2089 ], [ 1, %2080 ]
  %2110 = load i32, ptr %2108, align 4, !tbaa !5
  %2111 = add nsw i32 %2110, %2109
  store i32 %2111, ptr %2108, align 4, !tbaa !5
  br label %2112

2112:                                             ; preds = %2099, %2107, %2069, %2053
  %2113 = icmp eq i32 %2061, %5
  br i1 %2113, label %3001, label %1975, !llvm.loop !453

2114:                                             ; preds = %1816
  %2115 = getelementptr inbounds i32, ptr %3, i64 %19
  %2116 = load i32, ptr %2115, align 4, !tbaa !5
  %2117 = icmp eq i32 %2116, 0
  %2118 = icmp sgt i32 %5, 0
  br i1 %2117, label %2128, label %2119

2119:                                             ; preds = %2114
  br i1 %2118, label %2120, label %3001

2120:                                             ; preds = %2119
  %2121 = icmp sgt i32 %13, 1
  %2122 = icmp sgt i32 %13, 0
  %2123 = add i32 %13, -2
  %2124 = zext i32 %2123 to i64
  %2125 = zext i32 %13 to i64
  %2126 = add nuw i32 %5, 1
  %2127 = icmp eq i32 %13, 1
  br label %2267

2128:                                             ; preds = %2114
  br i1 %2118, label %2129, label %3001

2129:                                             ; preds = %2128
  %2130 = icmp sgt i32 %13, 1
  %2131 = icmp sgt i32 %13, 0
  %2132 = add i32 %13, -2
  %2133 = zext i32 %2132 to i64
  %2134 = zext i32 %13 to i64
  %2135 = add nuw i32 %5, 1
  %2136 = icmp eq i32 %13, 1
  br label %2137

2137:                                             ; preds = %2129, %2265
  %2138 = phi float [ 0.000000e+00, %2129 ], [ %2216, %2265 ]
  %2139 = phi i32 [ 0, %2129 ], [ %2217, %2265 ]
  %2140 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2130, label %2141, label %2210

2141:                                             ; preds = %2137, %2200
  %2142 = phi i32 [ %2209, %2200 ], [ 0, %2137 ]
  %2143 = phi i64 [ %2151, %2200 ], [ %2134, %2137 ]
  %2144 = phi i64 [ %2208, %2200 ], [ %2133, %2137 ]
  %2145 = phi i32 [ %2206, %2200 ], [ %2140, %2137 ]
  %2146 = sub i32 %2132, %2142
  %2147 = tail call i32 @llvm.smin.i32(i32 %2146, i32 0)
  %2148 = sub i32 %2146, %2147
  %2149 = zext i32 %2148 to i64
  %2150 = add nuw nsw i64 %2149, 1
  %2151 = add nsw i64 %2143, -1
  %2152 = icmp ult i32 %2148, 31
  br i1 %2152, label %2188, label %2153

2153:                                             ; preds = %2141
  %2154 = and i64 %2150, 8589934560
  %2155 = sub i64 %2144, %2154
  br label %2156

2156:                                             ; preds = %2156, %2153
  %2157 = phi i64 [ 0, %2153 ], [ %2180, %2156 ]
  %2158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2153 ], [ %2176, %2156 ]
  %2159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2153 ], [ %2177, %2156 ]
  %2160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2153 ], [ %2178, %2156 ]
  %2161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2153 ], [ %2179, %2156 ]
  %2162 = sub i64 %2144, %2157
  %2163 = getelementptr inbounds i32, ptr %9, i64 %2162
  %2164 = getelementptr inbounds i32, ptr %2163, i64 -7
  %2165 = load <8 x i32>, ptr %2164, align 4, !tbaa !5
  %2166 = shufflevector <8 x i32> %2165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2167 = getelementptr inbounds i32, ptr %2163, i64 -15
  %2168 = load <8 x i32>, ptr %2167, align 4, !tbaa !5
  %2169 = shufflevector <8 x i32> %2168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2170 = getelementptr inbounds i32, ptr %2163, i64 -23
  %2171 = load <8 x i32>, ptr %2170, align 4, !tbaa !5
  %2172 = shufflevector <8 x i32> %2171, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2173 = getelementptr inbounds i32, ptr %2163, i64 -31
  %2174 = load <8 x i32>, ptr %2173, align 4, !tbaa !5
  %2175 = shufflevector <8 x i32> %2174, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2176 = mul <8 x i32> %2166, %2158
  %2177 = mul <8 x i32> %2169, %2159
  %2178 = mul <8 x i32> %2172, %2160
  %2179 = mul <8 x i32> %2175, %2161
  %2180 = add nuw i64 %2157, 32
  %2181 = icmp eq i64 %2180, %2154
  br i1 %2181, label %2182, label %2156, !llvm.loop !454

2182:                                             ; preds = %2156
  %2183 = mul <8 x i32> %2177, %2176
  %2184 = mul <8 x i32> %2178, %2183
  %2185 = mul <8 x i32> %2179, %2184
  %2186 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2185)
  %2187 = icmp eq i64 %2150, %2154
  br i1 %2187, label %2200, label %2188

2188:                                             ; preds = %2141, %2182
  %2189 = phi i64 [ %2144, %2141 ], [ %2155, %2182 ]
  %2190 = phi i32 [ 1, %2141 ], [ %2186, %2182 ]
  br label %2191

2191:                                             ; preds = %2188, %2191
  %2192 = phi i64 [ %2197, %2191 ], [ %2189, %2188 ]
  %2193 = phi i32 [ %2196, %2191 ], [ %2190, %2188 ]
  %2194 = getelementptr inbounds i32, ptr %9, i64 %2192
  %2195 = load i32, ptr %2194, align 4, !tbaa !5
  %2196 = mul nsw i32 %2195, %2193
  %2197 = add nsw i64 %2192, -1
  %2198 = trunc i64 %2192 to i32
  %2199 = icmp sgt i32 %2198, 0
  br i1 %2199, label %2191, label %2200, !llvm.loop !455

2200:                                             ; preds = %2191, %2182
  %2201 = phi i32 [ %2186, %2182 ], [ %2196, %2191 ]
  %2202 = and i64 %2151, 4294967295
  %2203 = getelementptr inbounds i32, ptr %6, i64 %2202
  %2204 = load i32, ptr %2203, align 4, !tbaa !5
  %2205 = mul nsw i32 %2204, %2201
  %2206 = add nsw i32 %2205, %2145
  %2207 = icmp sgt i64 %2143, 2
  %2208 = add nsw i64 %2144, -1
  %2209 = add i32 %2142, 1
  br i1 %2207, label %2141, label %2210, !llvm.loop !456

2210:                                             ; preds = %2200, %2137
  %2211 = phi i32 [ %2140, %2137 ], [ %2206, %2200 ]
  %2212 = sext i32 %2211 to i64
  %2213 = getelementptr inbounds i8, ptr %1809, i64 %2212
  %2214 = load i8, ptr %2213, align 1, !tbaa !11
  %2215 = sitofp i8 %2214 to float
  %2216 = fadd fast float %2138, %2215
  store float %2216, ptr %1811, align 4, !tbaa !162
  %2217 = add nuw nsw i32 %2139, 1
  br i1 %2131, label %2218, label %2265

2218:                                             ; preds = %2210
  %2219 = load i32, ptr %4, align 4, !tbaa !5
  %2220 = load i32, ptr %12, align 4, !tbaa !5
  %2221 = add nsw i32 %2220, -1
  %2222 = icmp slt i32 %2219, %2221
  br i1 %2222, label %2242, label %2223

2223:                                             ; preds = %2218
  %2224 = icmp eq i32 %2219, %2221
  br i1 %2224, label %2225, label %2258

2225:                                             ; preds = %2223
  store i32 0, ptr %4, align 4, !tbaa !5
  %2226 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2226, ptr %6, align 4, !tbaa !5
  br i1 %2136, label %2265, label %2227

2227:                                             ; preds = %2225, %2252
  %2228 = phi i64 [ %2256, %2252 ], [ 1, %2225 ]
  %2229 = getelementptr inbounds i32, ptr %4, i64 %2228
  %2230 = load i32, ptr %2229, align 4, !tbaa !5
  %2231 = getelementptr inbounds i32, ptr %12, i64 %2228
  %2232 = load i32, ptr %2231, align 4, !tbaa !5
  %2233 = add nsw i32 %2232, -1
  %2234 = icmp slt i32 %2230, %2233
  br i1 %2234, label %2235, label %2250

2235:                                             ; preds = %2227
  br i1 %2222, label %2242, label %2236

2236:                                             ; preds = %2235
  %2237 = getelementptr inbounds i32, ptr %7, i64 %2228
  %2238 = load i32, ptr %2237, align 4, !tbaa !5
  %2239 = getelementptr inbounds i32, ptr %6, i64 %2228
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = add nsw i32 %2240, %2238
  store i32 %2241, ptr %2239, align 4, !tbaa !5
  br label %2260

2242:                                             ; preds = %2218, %2235
  %2243 = phi i32 [ %2230, %2235 ], [ %2219, %2218 ]
  %2244 = phi ptr [ %2229, %2235 ], [ %4, %2218 ]
  %2245 = phi i64 [ %2228, %2235 ], [ 0, %2218 ]
  %2246 = add nsw i32 %2243, 1
  store i32 %2246, ptr %2244, align 4, !tbaa !5
  %2247 = getelementptr inbounds i32, ptr %7, i64 %2245
  %2248 = load i32, ptr %2247, align 4, !tbaa !5
  %2249 = getelementptr inbounds i32, ptr %6, i64 %2245
  br label %2260

2250:                                             ; preds = %2227
  %2251 = icmp eq i32 %2230, %2233
  br i1 %2251, label %2252, label %2258

2252:                                             ; preds = %2250
  store i32 0, ptr %2229, align 4, !tbaa !5
  %2253 = getelementptr inbounds i32, ptr %8, i64 %2228
  %2254 = load i32, ptr %2253, align 4, !tbaa !5
  %2255 = getelementptr inbounds i32, ptr %6, i64 %2228
  store i32 %2254, ptr %2255, align 4, !tbaa !5
  %2256 = add nuw nsw i64 %2228, 1
  %2257 = icmp eq i64 %2256, %2134
  br i1 %2257, label %2265, label %2227, !llvm.loop !457

2258:                                             ; preds = %2223, %2250
  %2259 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2260:                                             ; preds = %2236, %2242
  %2261 = phi ptr [ %2249, %2242 ], [ %2229, %2236 ]
  %2262 = phi i32 [ %2248, %2242 ], [ 1, %2236 ]
  %2263 = load i32, ptr %2261, align 4, !tbaa !5
  %2264 = add nsw i32 %2263, %2262
  store i32 %2264, ptr %2261, align 4, !tbaa !5
  br label %2265

2265:                                             ; preds = %2252, %2260, %2225, %2210
  %2266 = icmp eq i32 %2217, %5
  br i1 %2266, label %3001, label %2137, !llvm.loop !458

2267:                                             ; preds = %2120, %2402
  %2268 = phi float [ 0.000000e+00, %2120 ], [ %2350, %2402 ]
  %2269 = phi i32 [ 0, %2120 ], [ %2351, %2402 ]
  %2270 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2121, label %2271, label %2340

2271:                                             ; preds = %2267, %2330
  %2272 = phi i32 [ %2339, %2330 ], [ 0, %2267 ]
  %2273 = phi i64 [ %2281, %2330 ], [ %2125, %2267 ]
  %2274 = phi i64 [ %2338, %2330 ], [ %2124, %2267 ]
  %2275 = phi i32 [ %2336, %2330 ], [ %2270, %2267 ]
  %2276 = sub i32 %2123, %2272
  %2277 = tail call i32 @llvm.smin.i32(i32 %2276, i32 0)
  %2278 = sub i32 %2276, %2277
  %2279 = zext i32 %2278 to i64
  %2280 = add nuw nsw i64 %2279, 1
  %2281 = add nsw i64 %2273, -1
  %2282 = icmp ult i32 %2278, 31
  br i1 %2282, label %2318, label %2283

2283:                                             ; preds = %2271
  %2284 = and i64 %2280, 8589934560
  %2285 = sub i64 %2274, %2284
  br label %2286

2286:                                             ; preds = %2286, %2283
  %2287 = phi i64 [ 0, %2283 ], [ %2310, %2286 ]
  %2288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2283 ], [ %2306, %2286 ]
  %2289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2283 ], [ %2307, %2286 ]
  %2290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2283 ], [ %2308, %2286 ]
  %2291 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2283 ], [ %2309, %2286 ]
  %2292 = sub i64 %2274, %2287
  %2293 = getelementptr inbounds i32, ptr %11, i64 %2292
  %2294 = getelementptr inbounds i32, ptr %2293, i64 -7
  %2295 = load <8 x i32>, ptr %2294, align 4, !tbaa !5
  %2296 = shufflevector <8 x i32> %2295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2297 = getelementptr inbounds i32, ptr %2293, i64 -15
  %2298 = load <8 x i32>, ptr %2297, align 4, !tbaa !5
  %2299 = shufflevector <8 x i32> %2298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2300 = getelementptr inbounds i32, ptr %2293, i64 -23
  %2301 = load <8 x i32>, ptr %2300, align 4, !tbaa !5
  %2302 = shufflevector <8 x i32> %2301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2303 = getelementptr inbounds i32, ptr %2293, i64 -31
  %2304 = load <8 x i32>, ptr %2303, align 4, !tbaa !5
  %2305 = shufflevector <8 x i32> %2304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2306 = mul <8 x i32> %2296, %2288
  %2307 = mul <8 x i32> %2299, %2289
  %2308 = mul <8 x i32> %2302, %2290
  %2309 = mul <8 x i32> %2305, %2291
  %2310 = add nuw i64 %2287, 32
  %2311 = icmp eq i64 %2310, %2284
  br i1 %2311, label %2312, label %2286, !llvm.loop !459

2312:                                             ; preds = %2286
  %2313 = mul <8 x i32> %2307, %2306
  %2314 = mul <8 x i32> %2308, %2313
  %2315 = mul <8 x i32> %2309, %2314
  %2316 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2315)
  %2317 = icmp eq i64 %2280, %2284
  br i1 %2317, label %2330, label %2318

2318:                                             ; preds = %2271, %2312
  %2319 = phi i64 [ %2274, %2271 ], [ %2285, %2312 ]
  %2320 = phi i32 [ 1, %2271 ], [ %2316, %2312 ]
  br label %2321

2321:                                             ; preds = %2318, %2321
  %2322 = phi i64 [ %2327, %2321 ], [ %2319, %2318 ]
  %2323 = phi i32 [ %2326, %2321 ], [ %2320, %2318 ]
  %2324 = getelementptr inbounds i32, ptr %11, i64 %2322
  %2325 = load i32, ptr %2324, align 4, !tbaa !5
  %2326 = mul nsw i32 %2325, %2323
  %2327 = add nsw i64 %2322, -1
  %2328 = trunc i64 %2322 to i32
  %2329 = icmp sgt i32 %2328, 0
  br i1 %2329, label %2321, label %2330, !llvm.loop !460

2330:                                             ; preds = %2321, %2312
  %2331 = phi i32 [ %2316, %2312 ], [ %2326, %2321 ]
  %2332 = and i64 %2281, 4294967295
  %2333 = getelementptr inbounds i32, ptr %6, i64 %2332
  %2334 = load i32, ptr %2333, align 4, !tbaa !5
  %2335 = mul nsw i32 %2334, %2331
  %2336 = add nsw i32 %2335, %2275
  %2337 = icmp sgt i64 %2273, 2
  %2338 = add nsw i64 %2274, -1
  %2339 = add i32 %2272, 1
  br i1 %2337, label %2271, label %2340, !llvm.loop !461

2340:                                             ; preds = %2330, %2267
  %2341 = phi i32 [ %2270, %2267 ], [ %2336, %2330 ]
  %2342 = icmp slt i32 %2341, %5
  br i1 %2342, label %2345, label %2343

2343:                                             ; preds = %2340
  %2344 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

2345:                                             ; preds = %2340
  %2346 = sext i32 %2341 to i64
  %2347 = getelementptr inbounds i8, ptr %1809, i64 %2346
  %2348 = load i8, ptr %2347, align 1, !tbaa !11
  %2349 = sitofp i8 %2348 to float
  %2350 = fadd fast float %2268, %2349
  store float %2350, ptr %1811, align 4, !tbaa !162
  %2351 = add nuw nsw i32 %2269, 1
  br i1 %2122, label %2352, label %2402

2352:                                             ; preds = %2345
  %2353 = load i32, ptr %4, align 4, !tbaa !5
  %2354 = load i32, ptr %12, align 4, !tbaa !5
  %2355 = add nsw i32 %2354, -1
  %2356 = icmp slt i32 %2353, %2355
  br i1 %2356, label %2379, label %2357

2357:                                             ; preds = %2352
  %2358 = icmp eq i32 %2353, %2355
  br i1 %2358, label %2359, label %2395

2359:                                             ; preds = %2357
  store i32 0, ptr %4, align 4, !tbaa !5
  %2360 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2360, ptr %6, align 4, !tbaa !5
  br i1 %2127, label %2402, label %2361

2361:                                             ; preds = %2359, %2389
  %2362 = phi i64 [ %2393, %2389 ], [ 1, %2359 ]
  %2363 = getelementptr inbounds i32, ptr %4, i64 %2362
  %2364 = load i32, ptr %2363, align 4, !tbaa !5
  %2365 = getelementptr inbounds i32, ptr %12, i64 %2362
  %2366 = load i32, ptr %2365, align 4, !tbaa !5
  %2367 = add nsw i32 %2366, -1
  %2368 = icmp slt i32 %2364, %2367
  br i1 %2368, label %2369, label %2387

2369:                                             ; preds = %2361
  br i1 %2356, label %2379, label %2370

2370:                                             ; preds = %2369
  %2371 = shl i64 %2362, 32
  %2372 = add i64 %2371, -4294967296
  %2373 = ashr exact i64 %2372, 32
  %2374 = getelementptr inbounds i32, ptr %7, i64 %2373
  %2375 = load i32, ptr %2374, align 4, !tbaa !5
  %2376 = getelementptr inbounds i32, ptr %6, i64 %2362
  %2377 = load i32, ptr %2376, align 4, !tbaa !5
  %2378 = add nsw i32 %2377, %2375
  store i32 %2378, ptr %2376, align 4, !tbaa !5
  br label %2397

2379:                                             ; preds = %2352, %2369
  %2380 = phi i32 [ %2364, %2369 ], [ %2353, %2352 ]
  %2381 = phi ptr [ %2363, %2369 ], [ %4, %2352 ]
  %2382 = phi i64 [ %2362, %2369 ], [ 0, %2352 ]
  %2383 = add nsw i32 %2380, 1
  store i32 %2383, ptr %2381, align 4, !tbaa !5
  %2384 = getelementptr inbounds i32, ptr %7, i64 %2382
  %2385 = load i32, ptr %2384, align 4, !tbaa !5
  %2386 = getelementptr inbounds i32, ptr %6, i64 %2382
  br label %2397

2387:                                             ; preds = %2361
  %2388 = icmp eq i32 %2364, %2367
  br i1 %2388, label %2389, label %2395

2389:                                             ; preds = %2387
  store i32 0, ptr %2363, align 4, !tbaa !5
  %2390 = getelementptr inbounds i32, ptr %8, i64 %2362
  %2391 = load i32, ptr %2390, align 4, !tbaa !5
  %2392 = getelementptr inbounds i32, ptr %6, i64 %2362
  store i32 %2391, ptr %2392, align 4, !tbaa !5
  %2393 = add nuw nsw i64 %2362, 1
  %2394 = icmp eq i64 %2393, %2125
  br i1 %2394, label %2402, label %2361, !llvm.loop !462

2395:                                             ; preds = %2357, %2387
  %2396 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2397:                                             ; preds = %2370, %2379
  %2398 = phi ptr [ %2386, %2379 ], [ %2363, %2370 ]
  %2399 = phi i32 [ %2385, %2379 ], [ 1, %2370 ]
  %2400 = load i32, ptr %2398, align 4, !tbaa !5
  %2401 = add nsw i32 %2400, %2399
  store i32 %2401, ptr %2398, align 4, !tbaa !5
  br label %2402

2402:                                             ; preds = %2389, %2397, %2359, %2345
  %2403 = icmp eq i32 %2351, %5
  br i1 %2403, label %3001, label %2267, !llvm.loop !463

2404:                                             ; preds = %1816
  %2405 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 557, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3001

2406:                                             ; preds = %18
  %2407 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2408 = load ptr, ptr %2407, align 8, !tbaa !9
  %2409 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2410 = load ptr, ptr %2409, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2410, align 8, !tbaa !18
  %2411 = icmp eq i32 %13, 0
  br i1 %2411, label %2412, label %2415

2412:                                             ; preds = %2406
  %2413 = load i8, ptr %2408, align 1, !tbaa !11
  %2414 = sitofp i8 %2413 to double
  store double %2414, ptr %2410, align 8, !tbaa !18
  br label %3001

2415:                                             ; preds = %2406
  switch i32 %1, label %2999 [
    i32 1, label %2416
    i32 0, label %2709
  ]

2416:                                             ; preds = %2415
  %2417 = getelementptr inbounds i32, ptr %3, i64 %19
  %2418 = load i32, ptr %2417, align 4, !tbaa !5
  %2419 = icmp eq i32 %2418, 0
  %2420 = icmp sgt i32 %5, 0
  br i1 %2419, label %2430, label %2421

2421:                                             ; preds = %2416
  br i1 %2420, label %2422, label %3001

2422:                                             ; preds = %2421
  %2423 = icmp sgt i32 %13, 1
  %2424 = icmp sgt i32 %13, 0
  %2425 = add i32 %13, -2
  %2426 = zext i32 %2425 to i64
  %2427 = zext i32 %13 to i64
  %2428 = add nuw i32 %5, 1
  %2429 = icmp eq i32 %13, 1
  br label %2572

2430:                                             ; preds = %2416
  br i1 %2420, label %2431, label %3001

2431:                                             ; preds = %2430
  %2432 = icmp sgt i32 %13, 1
  %2433 = icmp sgt i32 %13, 0
  %2434 = add i32 %13, -2
  %2435 = zext i32 %2434 to i64
  %2436 = zext i32 %13 to i64
  %2437 = add nuw i32 %5, 1
  %2438 = icmp eq i32 %13, 1
  br label %2439

2439:                                             ; preds = %2431, %2570
  %2440 = phi double [ 0.000000e+00, %2431 ], [ %2521, %2570 ]
  %2441 = phi i32 [ 0, %2431 ], [ %2522, %2570 ]
  %2442 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2432, label %2443, label %2512

2443:                                             ; preds = %2439, %2502
  %2444 = phi i32 [ %2511, %2502 ], [ 0, %2439 ]
  %2445 = phi i64 [ %2453, %2502 ], [ %2436, %2439 ]
  %2446 = phi i64 [ %2510, %2502 ], [ %2435, %2439 ]
  %2447 = phi i32 [ %2508, %2502 ], [ %2442, %2439 ]
  %2448 = sub i32 %2434, %2444
  %2449 = tail call i32 @llvm.smin.i32(i32 %2448, i32 0)
  %2450 = sub i32 %2448, %2449
  %2451 = zext i32 %2450 to i64
  %2452 = add nuw nsw i64 %2451, 1
  %2453 = add nsw i64 %2445, -1
  %2454 = icmp ult i32 %2450, 31
  br i1 %2454, label %2490, label %2455

2455:                                             ; preds = %2443
  %2456 = and i64 %2452, 8589934560
  %2457 = sub i64 %2446, %2456
  br label %2458

2458:                                             ; preds = %2458, %2455
  %2459 = phi i64 [ 0, %2455 ], [ %2482, %2458 ]
  %2460 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2455 ], [ %2478, %2458 ]
  %2461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2455 ], [ %2479, %2458 ]
  %2462 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2455 ], [ %2480, %2458 ]
  %2463 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2455 ], [ %2481, %2458 ]
  %2464 = sub i64 %2446, %2459
  %2465 = getelementptr inbounds i32, ptr %9, i64 %2464
  %2466 = getelementptr inbounds i32, ptr %2465, i64 -7
  %2467 = load <8 x i32>, ptr %2466, align 4, !tbaa !5
  %2468 = shufflevector <8 x i32> %2467, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2469 = getelementptr inbounds i32, ptr %2465, i64 -15
  %2470 = load <8 x i32>, ptr %2469, align 4, !tbaa !5
  %2471 = shufflevector <8 x i32> %2470, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2472 = getelementptr inbounds i32, ptr %2465, i64 -23
  %2473 = load <8 x i32>, ptr %2472, align 4, !tbaa !5
  %2474 = shufflevector <8 x i32> %2473, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2475 = getelementptr inbounds i32, ptr %2465, i64 -31
  %2476 = load <8 x i32>, ptr %2475, align 4, !tbaa !5
  %2477 = shufflevector <8 x i32> %2476, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2478 = mul <8 x i32> %2468, %2460
  %2479 = mul <8 x i32> %2471, %2461
  %2480 = mul <8 x i32> %2474, %2462
  %2481 = mul <8 x i32> %2477, %2463
  %2482 = add nuw i64 %2459, 32
  %2483 = icmp eq i64 %2482, %2456
  br i1 %2483, label %2484, label %2458, !llvm.loop !464

2484:                                             ; preds = %2458
  %2485 = mul <8 x i32> %2479, %2478
  %2486 = mul <8 x i32> %2480, %2485
  %2487 = mul <8 x i32> %2481, %2486
  %2488 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2487)
  %2489 = icmp eq i64 %2452, %2456
  br i1 %2489, label %2502, label %2490

2490:                                             ; preds = %2443, %2484
  %2491 = phi i64 [ %2446, %2443 ], [ %2457, %2484 ]
  %2492 = phi i32 [ 1, %2443 ], [ %2488, %2484 ]
  br label %2493

2493:                                             ; preds = %2490, %2493
  %2494 = phi i64 [ %2499, %2493 ], [ %2491, %2490 ]
  %2495 = phi i32 [ %2498, %2493 ], [ %2492, %2490 ]
  %2496 = getelementptr inbounds i32, ptr %9, i64 %2494
  %2497 = load i32, ptr %2496, align 4, !tbaa !5
  %2498 = mul nsw i32 %2497, %2495
  %2499 = add nsw i64 %2494, -1
  %2500 = trunc i64 %2494 to i32
  %2501 = icmp sgt i32 %2500, 0
  br i1 %2501, label %2493, label %2502, !llvm.loop !465

2502:                                             ; preds = %2493, %2484
  %2503 = phi i32 [ %2488, %2484 ], [ %2498, %2493 ]
  %2504 = and i64 %2453, 4294967295
  %2505 = getelementptr inbounds i32, ptr %6, i64 %2504
  %2506 = load i32, ptr %2505, align 4, !tbaa !5
  %2507 = mul nsw i32 %2506, %2503
  %2508 = add nsw i32 %2507, %2447
  %2509 = icmp sgt i64 %2445, 2
  %2510 = add nsw i64 %2446, -1
  %2511 = add i32 %2444, 1
  br i1 %2509, label %2443, label %2512, !llvm.loop !466

2512:                                             ; preds = %2502, %2439
  %2513 = phi i32 [ %2442, %2439 ], [ %2508, %2502 ]
  %2514 = sext i32 %2513 to i64
  %2515 = getelementptr inbounds double, ptr %2, i64 %2514
  %2516 = load double, ptr %2515, align 8, !tbaa !18
  %2517 = getelementptr inbounds i8, ptr %2408, i64 %2514
  %2518 = load i8, ptr %2517, align 1, !tbaa !11
  %2519 = sitofp i8 %2518 to double
  %2520 = fmul fast double %2516, %2519
  %2521 = fadd fast double %2520, %2440
  store double %2521, ptr %2410, align 8, !tbaa !18
  %2522 = add nuw nsw i32 %2441, 1
  br i1 %2433, label %2523, label %2570

2523:                                             ; preds = %2512
  %2524 = load i32, ptr %4, align 4, !tbaa !5
  %2525 = load i32, ptr %12, align 4, !tbaa !5
  %2526 = add nsw i32 %2525, -1
  %2527 = icmp slt i32 %2524, %2526
  br i1 %2527, label %2547, label %2528

2528:                                             ; preds = %2523
  %2529 = icmp eq i32 %2524, %2526
  br i1 %2529, label %2530, label %2563

2530:                                             ; preds = %2528
  store i32 0, ptr %4, align 4, !tbaa !5
  %2531 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2531, ptr %6, align 4, !tbaa !5
  br i1 %2438, label %2570, label %2532

2532:                                             ; preds = %2530, %2557
  %2533 = phi i64 [ %2561, %2557 ], [ 1, %2530 ]
  %2534 = getelementptr inbounds i32, ptr %4, i64 %2533
  %2535 = load i32, ptr %2534, align 4, !tbaa !5
  %2536 = getelementptr inbounds i32, ptr %12, i64 %2533
  %2537 = load i32, ptr %2536, align 4, !tbaa !5
  %2538 = add nsw i32 %2537, -1
  %2539 = icmp slt i32 %2535, %2538
  br i1 %2539, label %2540, label %2555

2540:                                             ; preds = %2532
  br i1 %2527, label %2547, label %2541

2541:                                             ; preds = %2540
  %2542 = getelementptr inbounds i32, ptr %7, i64 %2533
  %2543 = load i32, ptr %2542, align 4, !tbaa !5
  %2544 = getelementptr inbounds i32, ptr %6, i64 %2533
  %2545 = load i32, ptr %2544, align 4, !tbaa !5
  %2546 = add nsw i32 %2545, %2543
  store i32 %2546, ptr %2544, align 4, !tbaa !5
  br label %2565

2547:                                             ; preds = %2523, %2540
  %2548 = phi i32 [ %2535, %2540 ], [ %2524, %2523 ]
  %2549 = phi ptr [ %2534, %2540 ], [ %4, %2523 ]
  %2550 = phi i64 [ %2533, %2540 ], [ 0, %2523 ]
  %2551 = add nsw i32 %2548, 1
  store i32 %2551, ptr %2549, align 4, !tbaa !5
  %2552 = getelementptr inbounds i32, ptr %7, i64 %2550
  %2553 = load i32, ptr %2552, align 4, !tbaa !5
  %2554 = getelementptr inbounds i32, ptr %6, i64 %2550
  br label %2565

2555:                                             ; preds = %2532
  %2556 = icmp eq i32 %2535, %2538
  br i1 %2556, label %2557, label %2563

2557:                                             ; preds = %2555
  store i32 0, ptr %2534, align 4, !tbaa !5
  %2558 = getelementptr inbounds i32, ptr %8, i64 %2533
  %2559 = load i32, ptr %2558, align 4, !tbaa !5
  %2560 = getelementptr inbounds i32, ptr %6, i64 %2533
  store i32 %2559, ptr %2560, align 4, !tbaa !5
  %2561 = add nuw nsw i64 %2533, 1
  %2562 = icmp eq i64 %2561, %2436
  br i1 %2562, label %2570, label %2532, !llvm.loop !467

2563:                                             ; preds = %2528, %2555
  %2564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2565:                                             ; preds = %2541, %2547
  %2566 = phi ptr [ %2554, %2547 ], [ %2534, %2541 ]
  %2567 = phi i32 [ %2553, %2547 ], [ 1, %2541 ]
  %2568 = load i32, ptr %2566, align 4, !tbaa !5
  %2569 = add nsw i32 %2568, %2567
  store i32 %2569, ptr %2566, align 4, !tbaa !5
  br label %2570

2570:                                             ; preds = %2557, %2565, %2530, %2512
  %2571 = icmp eq i32 %2522, %5
  br i1 %2571, label %3001, label %2439, !llvm.loop !468

2572:                                             ; preds = %2422, %2707
  %2573 = phi double [ 0.000000e+00, %2422 ], [ %2655, %2707 ]
  %2574 = phi i32 [ 0, %2422 ], [ %2656, %2707 ]
  %2575 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2423, label %2576, label %2645

2576:                                             ; preds = %2572, %2635
  %2577 = phi i32 [ %2644, %2635 ], [ 0, %2572 ]
  %2578 = phi i64 [ %2586, %2635 ], [ %2427, %2572 ]
  %2579 = phi i64 [ %2643, %2635 ], [ %2426, %2572 ]
  %2580 = phi i32 [ %2641, %2635 ], [ %2575, %2572 ]
  %2581 = sub i32 %2425, %2577
  %2582 = tail call i32 @llvm.smin.i32(i32 %2581, i32 0)
  %2583 = sub i32 %2581, %2582
  %2584 = zext i32 %2583 to i64
  %2585 = add nuw nsw i64 %2584, 1
  %2586 = add nsw i64 %2578, -1
  %2587 = icmp ult i32 %2583, 31
  br i1 %2587, label %2623, label %2588

2588:                                             ; preds = %2576
  %2589 = and i64 %2585, 8589934560
  %2590 = sub i64 %2579, %2589
  br label %2591

2591:                                             ; preds = %2591, %2588
  %2592 = phi i64 [ 0, %2588 ], [ %2615, %2591 ]
  %2593 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2611, %2591 ]
  %2594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2612, %2591 ]
  %2595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2613, %2591 ]
  %2596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2588 ], [ %2614, %2591 ]
  %2597 = sub i64 %2579, %2592
  %2598 = getelementptr inbounds i32, ptr %11, i64 %2597
  %2599 = getelementptr inbounds i32, ptr %2598, i64 -7
  %2600 = load <8 x i32>, ptr %2599, align 4, !tbaa !5
  %2601 = shufflevector <8 x i32> %2600, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2602 = getelementptr inbounds i32, ptr %2598, i64 -15
  %2603 = load <8 x i32>, ptr %2602, align 4, !tbaa !5
  %2604 = shufflevector <8 x i32> %2603, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2605 = getelementptr inbounds i32, ptr %2598, i64 -23
  %2606 = load <8 x i32>, ptr %2605, align 4, !tbaa !5
  %2607 = shufflevector <8 x i32> %2606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2608 = getelementptr inbounds i32, ptr %2598, i64 -31
  %2609 = load <8 x i32>, ptr %2608, align 4, !tbaa !5
  %2610 = shufflevector <8 x i32> %2609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2611 = mul <8 x i32> %2601, %2593
  %2612 = mul <8 x i32> %2604, %2594
  %2613 = mul <8 x i32> %2607, %2595
  %2614 = mul <8 x i32> %2610, %2596
  %2615 = add nuw i64 %2592, 32
  %2616 = icmp eq i64 %2615, %2589
  br i1 %2616, label %2617, label %2591, !llvm.loop !469

2617:                                             ; preds = %2591
  %2618 = mul <8 x i32> %2612, %2611
  %2619 = mul <8 x i32> %2613, %2618
  %2620 = mul <8 x i32> %2614, %2619
  %2621 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2620)
  %2622 = icmp eq i64 %2585, %2589
  br i1 %2622, label %2635, label %2623

2623:                                             ; preds = %2576, %2617
  %2624 = phi i64 [ %2579, %2576 ], [ %2590, %2617 ]
  %2625 = phi i32 [ 1, %2576 ], [ %2621, %2617 ]
  br label %2626

2626:                                             ; preds = %2623, %2626
  %2627 = phi i64 [ %2632, %2626 ], [ %2624, %2623 ]
  %2628 = phi i32 [ %2631, %2626 ], [ %2625, %2623 ]
  %2629 = getelementptr inbounds i32, ptr %11, i64 %2627
  %2630 = load i32, ptr %2629, align 4, !tbaa !5
  %2631 = mul nsw i32 %2630, %2628
  %2632 = add nsw i64 %2627, -1
  %2633 = trunc i64 %2627 to i32
  %2634 = icmp sgt i32 %2633, 0
  br i1 %2634, label %2626, label %2635, !llvm.loop !470

2635:                                             ; preds = %2626, %2617
  %2636 = phi i32 [ %2621, %2617 ], [ %2631, %2626 ]
  %2637 = and i64 %2586, 4294967295
  %2638 = getelementptr inbounds i32, ptr %6, i64 %2637
  %2639 = load i32, ptr %2638, align 4, !tbaa !5
  %2640 = mul nsw i32 %2639, %2636
  %2641 = add nsw i32 %2640, %2580
  %2642 = icmp sgt i64 %2578, 2
  %2643 = add nsw i64 %2579, -1
  %2644 = add i32 %2577, 1
  br i1 %2642, label %2576, label %2645, !llvm.loop !471

2645:                                             ; preds = %2635, %2572
  %2646 = phi i32 [ %2575, %2572 ], [ %2641, %2635 ]
  %2647 = icmp slt i32 %2646, %5
  br i1 %2647, label %2650, label %2648

2648:                                             ; preds = %2645
  %2649 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

2650:                                             ; preds = %2645
  %2651 = sext i32 %2646 to i64
  %2652 = getelementptr inbounds i8, ptr %2408, i64 %2651
  %2653 = load i8, ptr %2652, align 1, !tbaa !11
  %2654 = sitofp i8 %2653 to double
  %2655 = fadd fast double %2573, %2654
  store double %2655, ptr %2410, align 8, !tbaa !18
  %2656 = add nuw nsw i32 %2574, 1
  br i1 %2424, label %2657, label %2707

2657:                                             ; preds = %2650
  %2658 = load i32, ptr %4, align 4, !tbaa !5
  %2659 = load i32, ptr %12, align 4, !tbaa !5
  %2660 = add nsw i32 %2659, -1
  %2661 = icmp slt i32 %2658, %2660
  br i1 %2661, label %2684, label %2662

2662:                                             ; preds = %2657
  %2663 = icmp eq i32 %2658, %2660
  br i1 %2663, label %2664, label %2700

2664:                                             ; preds = %2662
  store i32 0, ptr %4, align 4, !tbaa !5
  %2665 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2665, ptr %6, align 4, !tbaa !5
  br i1 %2429, label %2707, label %2666

2666:                                             ; preds = %2664, %2694
  %2667 = phi i64 [ %2698, %2694 ], [ 1, %2664 ]
  %2668 = getelementptr inbounds i32, ptr %4, i64 %2667
  %2669 = load i32, ptr %2668, align 4, !tbaa !5
  %2670 = getelementptr inbounds i32, ptr %12, i64 %2667
  %2671 = load i32, ptr %2670, align 4, !tbaa !5
  %2672 = add nsw i32 %2671, -1
  %2673 = icmp slt i32 %2669, %2672
  br i1 %2673, label %2674, label %2692

2674:                                             ; preds = %2666
  br i1 %2661, label %2684, label %2675

2675:                                             ; preds = %2674
  %2676 = shl i64 %2667, 32
  %2677 = add i64 %2676, -4294967296
  %2678 = ashr exact i64 %2677, 32
  %2679 = getelementptr inbounds i32, ptr %7, i64 %2678
  %2680 = load i32, ptr %2679, align 4, !tbaa !5
  %2681 = getelementptr inbounds i32, ptr %6, i64 %2667
  %2682 = load i32, ptr %2681, align 4, !tbaa !5
  %2683 = add nsw i32 %2682, %2680
  store i32 %2683, ptr %2681, align 4, !tbaa !5
  br label %2702

2684:                                             ; preds = %2657, %2674
  %2685 = phi i32 [ %2669, %2674 ], [ %2658, %2657 ]
  %2686 = phi ptr [ %2668, %2674 ], [ %4, %2657 ]
  %2687 = phi i64 [ %2667, %2674 ], [ 0, %2657 ]
  %2688 = add nsw i32 %2685, 1
  store i32 %2688, ptr %2686, align 4, !tbaa !5
  %2689 = getelementptr inbounds i32, ptr %7, i64 %2687
  %2690 = load i32, ptr %2689, align 4, !tbaa !5
  %2691 = getelementptr inbounds i32, ptr %6, i64 %2687
  br label %2702

2692:                                             ; preds = %2666
  %2693 = icmp eq i32 %2669, %2672
  br i1 %2693, label %2694, label %2700

2694:                                             ; preds = %2692
  store i32 0, ptr %2668, align 4, !tbaa !5
  %2695 = getelementptr inbounds i32, ptr %8, i64 %2667
  %2696 = load i32, ptr %2695, align 4, !tbaa !5
  %2697 = getelementptr inbounds i32, ptr %6, i64 %2667
  store i32 %2696, ptr %2697, align 4, !tbaa !5
  %2698 = add nuw nsw i64 %2667, 1
  %2699 = icmp eq i64 %2698, %2427
  br i1 %2699, label %2707, label %2666, !llvm.loop !472

2700:                                             ; preds = %2662, %2692
  %2701 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2702:                                             ; preds = %2675, %2684
  %2703 = phi ptr [ %2691, %2684 ], [ %2668, %2675 ]
  %2704 = phi i32 [ %2690, %2684 ], [ 1, %2675 ]
  %2705 = load i32, ptr %2703, align 4, !tbaa !5
  %2706 = add nsw i32 %2705, %2704
  store i32 %2706, ptr %2703, align 4, !tbaa !5
  br label %2707

2707:                                             ; preds = %2694, %2702, %2664, %2650
  %2708 = icmp eq i32 %2656, %5
  br i1 %2708, label %3001, label %2572, !llvm.loop !473

2709:                                             ; preds = %2415
  %2710 = getelementptr inbounds i32, ptr %3, i64 %19
  %2711 = load i32, ptr %2710, align 4, !tbaa !5
  %2712 = icmp eq i32 %2711, 0
  %2713 = icmp sgt i32 %5, 0
  br i1 %2712, label %2723, label %2714

2714:                                             ; preds = %2709
  br i1 %2713, label %2715, label %3001

2715:                                             ; preds = %2714
  %2716 = icmp sgt i32 %13, 1
  %2717 = icmp sgt i32 %13, 0
  %2718 = add i32 %13, -2
  %2719 = zext i32 %2718 to i64
  %2720 = zext i32 %13 to i64
  %2721 = add nuw i32 %5, 1
  %2722 = icmp eq i32 %13, 1
  br label %2862

2723:                                             ; preds = %2709
  br i1 %2713, label %2724, label %3001

2724:                                             ; preds = %2723
  %2725 = icmp sgt i32 %13, 1
  %2726 = icmp sgt i32 %13, 0
  %2727 = add i32 %13, -2
  %2728 = zext i32 %2727 to i64
  %2729 = zext i32 %13 to i64
  %2730 = add nuw i32 %5, 1
  %2731 = icmp eq i32 %13, 1
  br label %2732

2732:                                             ; preds = %2724, %2860
  %2733 = phi double [ 0.000000e+00, %2724 ], [ %2811, %2860 ]
  %2734 = phi i32 [ 0, %2724 ], [ %2812, %2860 ]
  %2735 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2725, label %2736, label %2805

2736:                                             ; preds = %2732, %2795
  %2737 = phi i32 [ %2804, %2795 ], [ 0, %2732 ]
  %2738 = phi i64 [ %2746, %2795 ], [ %2729, %2732 ]
  %2739 = phi i64 [ %2803, %2795 ], [ %2728, %2732 ]
  %2740 = phi i32 [ %2801, %2795 ], [ %2735, %2732 ]
  %2741 = sub i32 %2727, %2737
  %2742 = tail call i32 @llvm.smin.i32(i32 %2741, i32 0)
  %2743 = sub i32 %2741, %2742
  %2744 = zext i32 %2743 to i64
  %2745 = add nuw nsw i64 %2744, 1
  %2746 = add nsw i64 %2738, -1
  %2747 = icmp ult i32 %2743, 31
  br i1 %2747, label %2783, label %2748

2748:                                             ; preds = %2736
  %2749 = and i64 %2745, 8589934560
  %2750 = sub i64 %2739, %2749
  br label %2751

2751:                                             ; preds = %2751, %2748
  %2752 = phi i64 [ 0, %2748 ], [ %2775, %2751 ]
  %2753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2771, %2751 ]
  %2754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2772, %2751 ]
  %2755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2773, %2751 ]
  %2756 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2748 ], [ %2774, %2751 ]
  %2757 = sub i64 %2739, %2752
  %2758 = getelementptr inbounds i32, ptr %9, i64 %2757
  %2759 = getelementptr inbounds i32, ptr %2758, i64 -7
  %2760 = load <8 x i32>, ptr %2759, align 4, !tbaa !5
  %2761 = shufflevector <8 x i32> %2760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2762 = getelementptr inbounds i32, ptr %2758, i64 -15
  %2763 = load <8 x i32>, ptr %2762, align 4, !tbaa !5
  %2764 = shufflevector <8 x i32> %2763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2765 = getelementptr inbounds i32, ptr %2758, i64 -23
  %2766 = load <8 x i32>, ptr %2765, align 4, !tbaa !5
  %2767 = shufflevector <8 x i32> %2766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2768 = getelementptr inbounds i32, ptr %2758, i64 -31
  %2769 = load <8 x i32>, ptr %2768, align 4, !tbaa !5
  %2770 = shufflevector <8 x i32> %2769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2771 = mul <8 x i32> %2761, %2753
  %2772 = mul <8 x i32> %2764, %2754
  %2773 = mul <8 x i32> %2767, %2755
  %2774 = mul <8 x i32> %2770, %2756
  %2775 = add nuw i64 %2752, 32
  %2776 = icmp eq i64 %2775, %2749
  br i1 %2776, label %2777, label %2751, !llvm.loop !474

2777:                                             ; preds = %2751
  %2778 = mul <8 x i32> %2772, %2771
  %2779 = mul <8 x i32> %2773, %2778
  %2780 = mul <8 x i32> %2774, %2779
  %2781 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2780)
  %2782 = icmp eq i64 %2745, %2749
  br i1 %2782, label %2795, label %2783

2783:                                             ; preds = %2736, %2777
  %2784 = phi i64 [ %2739, %2736 ], [ %2750, %2777 ]
  %2785 = phi i32 [ 1, %2736 ], [ %2781, %2777 ]
  br label %2786

2786:                                             ; preds = %2783, %2786
  %2787 = phi i64 [ %2792, %2786 ], [ %2784, %2783 ]
  %2788 = phi i32 [ %2791, %2786 ], [ %2785, %2783 ]
  %2789 = getelementptr inbounds i32, ptr %9, i64 %2787
  %2790 = load i32, ptr %2789, align 4, !tbaa !5
  %2791 = mul nsw i32 %2790, %2788
  %2792 = add nsw i64 %2787, -1
  %2793 = trunc i64 %2787 to i32
  %2794 = icmp sgt i32 %2793, 0
  br i1 %2794, label %2786, label %2795, !llvm.loop !475

2795:                                             ; preds = %2786, %2777
  %2796 = phi i32 [ %2781, %2777 ], [ %2791, %2786 ]
  %2797 = and i64 %2746, 4294967295
  %2798 = getelementptr inbounds i32, ptr %6, i64 %2797
  %2799 = load i32, ptr %2798, align 4, !tbaa !5
  %2800 = mul nsw i32 %2799, %2796
  %2801 = add nsw i32 %2800, %2740
  %2802 = icmp sgt i64 %2738, 2
  %2803 = add nsw i64 %2739, -1
  %2804 = add i32 %2737, 1
  br i1 %2802, label %2736, label %2805, !llvm.loop !476

2805:                                             ; preds = %2795, %2732
  %2806 = phi i32 [ %2735, %2732 ], [ %2801, %2795 ]
  %2807 = sext i32 %2806 to i64
  %2808 = getelementptr inbounds i8, ptr %2408, i64 %2807
  %2809 = load i8, ptr %2808, align 1, !tbaa !11
  %2810 = sitofp i8 %2809 to double
  %2811 = fadd fast double %2733, %2810
  store double %2811, ptr %2410, align 8, !tbaa !18
  %2812 = add nuw nsw i32 %2734, 1
  br i1 %2726, label %2813, label %2860

2813:                                             ; preds = %2805
  %2814 = load i32, ptr %4, align 4, !tbaa !5
  %2815 = load i32, ptr %12, align 4, !tbaa !5
  %2816 = add nsw i32 %2815, -1
  %2817 = icmp slt i32 %2814, %2816
  br i1 %2817, label %2837, label %2818

2818:                                             ; preds = %2813
  %2819 = icmp eq i32 %2814, %2816
  br i1 %2819, label %2820, label %2853

2820:                                             ; preds = %2818
  store i32 0, ptr %4, align 4, !tbaa !5
  %2821 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2821, ptr %6, align 4, !tbaa !5
  br i1 %2731, label %2860, label %2822

2822:                                             ; preds = %2820, %2847
  %2823 = phi i64 [ %2851, %2847 ], [ 1, %2820 ]
  %2824 = getelementptr inbounds i32, ptr %4, i64 %2823
  %2825 = load i32, ptr %2824, align 4, !tbaa !5
  %2826 = getelementptr inbounds i32, ptr %12, i64 %2823
  %2827 = load i32, ptr %2826, align 4, !tbaa !5
  %2828 = add nsw i32 %2827, -1
  %2829 = icmp slt i32 %2825, %2828
  br i1 %2829, label %2830, label %2845

2830:                                             ; preds = %2822
  br i1 %2817, label %2837, label %2831

2831:                                             ; preds = %2830
  %2832 = getelementptr inbounds i32, ptr %7, i64 %2823
  %2833 = load i32, ptr %2832, align 4, !tbaa !5
  %2834 = getelementptr inbounds i32, ptr %6, i64 %2823
  %2835 = load i32, ptr %2834, align 4, !tbaa !5
  %2836 = add nsw i32 %2835, %2833
  store i32 %2836, ptr %2834, align 4, !tbaa !5
  br label %2855

2837:                                             ; preds = %2813, %2830
  %2838 = phi i32 [ %2825, %2830 ], [ %2814, %2813 ]
  %2839 = phi ptr [ %2824, %2830 ], [ %4, %2813 ]
  %2840 = phi i64 [ %2823, %2830 ], [ 0, %2813 ]
  %2841 = add nsw i32 %2838, 1
  store i32 %2841, ptr %2839, align 4, !tbaa !5
  %2842 = getelementptr inbounds i32, ptr %7, i64 %2840
  %2843 = load i32, ptr %2842, align 4, !tbaa !5
  %2844 = getelementptr inbounds i32, ptr %6, i64 %2840
  br label %2855

2845:                                             ; preds = %2822
  %2846 = icmp eq i32 %2825, %2828
  br i1 %2846, label %2847, label %2853

2847:                                             ; preds = %2845
  store i32 0, ptr %2824, align 4, !tbaa !5
  %2848 = getelementptr inbounds i32, ptr %8, i64 %2823
  %2849 = load i32, ptr %2848, align 4, !tbaa !5
  %2850 = getelementptr inbounds i32, ptr %6, i64 %2823
  store i32 %2849, ptr %2850, align 4, !tbaa !5
  %2851 = add nuw nsw i64 %2823, 1
  %2852 = icmp eq i64 %2851, %2729
  br i1 %2852, label %2860, label %2822, !llvm.loop !477

2853:                                             ; preds = %2818, %2845
  %2854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2855:                                             ; preds = %2831, %2837
  %2856 = phi ptr [ %2844, %2837 ], [ %2824, %2831 ]
  %2857 = phi i32 [ %2843, %2837 ], [ 1, %2831 ]
  %2858 = load i32, ptr %2856, align 4, !tbaa !5
  %2859 = add nsw i32 %2858, %2857
  store i32 %2859, ptr %2856, align 4, !tbaa !5
  br label %2860

2860:                                             ; preds = %2847, %2855, %2820, %2805
  %2861 = icmp eq i32 %2812, %5
  br i1 %2861, label %3001, label %2732, !llvm.loop !478

2862:                                             ; preds = %2715, %2997
  %2863 = phi double [ 0.000000e+00, %2715 ], [ %2945, %2997 ]
  %2864 = phi i32 [ 0, %2715 ], [ %2946, %2997 ]
  %2865 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2716, label %2866, label %2935

2866:                                             ; preds = %2862, %2925
  %2867 = phi i32 [ %2934, %2925 ], [ 0, %2862 ]
  %2868 = phi i64 [ %2876, %2925 ], [ %2720, %2862 ]
  %2869 = phi i64 [ %2933, %2925 ], [ %2719, %2862 ]
  %2870 = phi i32 [ %2931, %2925 ], [ %2865, %2862 ]
  %2871 = sub i32 %2718, %2867
  %2872 = tail call i32 @llvm.smin.i32(i32 %2871, i32 0)
  %2873 = sub i32 %2871, %2872
  %2874 = zext i32 %2873 to i64
  %2875 = add nuw nsw i64 %2874, 1
  %2876 = add nsw i64 %2868, -1
  %2877 = icmp ult i32 %2873, 31
  br i1 %2877, label %2913, label %2878

2878:                                             ; preds = %2866
  %2879 = and i64 %2875, 8589934560
  %2880 = sub i64 %2869, %2879
  br label %2881

2881:                                             ; preds = %2881, %2878
  %2882 = phi i64 [ 0, %2878 ], [ %2905, %2881 ]
  %2883 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2901, %2881 ]
  %2884 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2902, %2881 ]
  %2885 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2903, %2881 ]
  %2886 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2878 ], [ %2904, %2881 ]
  %2887 = sub i64 %2869, %2882
  %2888 = getelementptr inbounds i32, ptr %11, i64 %2887
  %2889 = getelementptr inbounds i32, ptr %2888, i64 -7
  %2890 = load <8 x i32>, ptr %2889, align 4, !tbaa !5
  %2891 = shufflevector <8 x i32> %2890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2892 = getelementptr inbounds i32, ptr %2888, i64 -15
  %2893 = load <8 x i32>, ptr %2892, align 4, !tbaa !5
  %2894 = shufflevector <8 x i32> %2893, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2895 = getelementptr inbounds i32, ptr %2888, i64 -23
  %2896 = load <8 x i32>, ptr %2895, align 4, !tbaa !5
  %2897 = shufflevector <8 x i32> %2896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2898 = getelementptr inbounds i32, ptr %2888, i64 -31
  %2899 = load <8 x i32>, ptr %2898, align 4, !tbaa !5
  %2900 = shufflevector <8 x i32> %2899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2901 = mul <8 x i32> %2891, %2883
  %2902 = mul <8 x i32> %2894, %2884
  %2903 = mul <8 x i32> %2897, %2885
  %2904 = mul <8 x i32> %2900, %2886
  %2905 = add nuw i64 %2882, 32
  %2906 = icmp eq i64 %2905, %2879
  br i1 %2906, label %2907, label %2881, !llvm.loop !479

2907:                                             ; preds = %2881
  %2908 = mul <8 x i32> %2902, %2901
  %2909 = mul <8 x i32> %2903, %2908
  %2910 = mul <8 x i32> %2904, %2909
  %2911 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2910)
  %2912 = icmp eq i64 %2875, %2879
  br i1 %2912, label %2925, label %2913

2913:                                             ; preds = %2866, %2907
  %2914 = phi i64 [ %2869, %2866 ], [ %2880, %2907 ]
  %2915 = phi i32 [ 1, %2866 ], [ %2911, %2907 ]
  br label %2916

2916:                                             ; preds = %2913, %2916
  %2917 = phi i64 [ %2922, %2916 ], [ %2914, %2913 ]
  %2918 = phi i32 [ %2921, %2916 ], [ %2915, %2913 ]
  %2919 = getelementptr inbounds i32, ptr %11, i64 %2917
  %2920 = load i32, ptr %2919, align 4, !tbaa !5
  %2921 = mul nsw i32 %2920, %2918
  %2922 = add nsw i64 %2917, -1
  %2923 = trunc i64 %2917 to i32
  %2924 = icmp sgt i32 %2923, 0
  br i1 %2924, label %2916, label %2925, !llvm.loop !480

2925:                                             ; preds = %2916, %2907
  %2926 = phi i32 [ %2911, %2907 ], [ %2921, %2916 ]
  %2927 = and i64 %2876, 4294967295
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2927
  %2929 = load i32, ptr %2928, align 4, !tbaa !5
  %2930 = mul nsw i32 %2929, %2926
  %2931 = add nsw i32 %2930, %2870
  %2932 = icmp sgt i64 %2868, 2
  %2933 = add nsw i64 %2869, -1
  %2934 = add i32 %2867, 1
  br i1 %2932, label %2866, label %2935, !llvm.loop !481

2935:                                             ; preds = %2925, %2862
  %2936 = phi i32 [ %2865, %2862 ], [ %2931, %2925 ]
  %2937 = icmp slt i32 %2936, %5
  br i1 %2937, label %2940, label %2938

2938:                                             ; preds = %2935
  %2939 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3001

2940:                                             ; preds = %2935
  %2941 = sext i32 %2936 to i64
  %2942 = getelementptr inbounds i8, ptr %2408, i64 %2941
  %2943 = load i8, ptr %2942, align 1, !tbaa !11
  %2944 = sitofp i8 %2943 to double
  %2945 = fadd fast double %2863, %2944
  store double %2945, ptr %2410, align 8, !tbaa !18
  %2946 = add nuw nsw i32 %2864, 1
  br i1 %2717, label %2947, label %2997

2947:                                             ; preds = %2940
  %2948 = load i32, ptr %4, align 4, !tbaa !5
  %2949 = load i32, ptr %12, align 4, !tbaa !5
  %2950 = add nsw i32 %2949, -1
  %2951 = icmp slt i32 %2948, %2950
  br i1 %2951, label %2974, label %2952

2952:                                             ; preds = %2947
  %2953 = icmp eq i32 %2948, %2950
  br i1 %2953, label %2954, label %2990

2954:                                             ; preds = %2952
  store i32 0, ptr %4, align 4, !tbaa !5
  %2955 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2955, ptr %6, align 4, !tbaa !5
  br i1 %2722, label %2997, label %2956

2956:                                             ; preds = %2954, %2984
  %2957 = phi i64 [ %2988, %2984 ], [ 1, %2954 ]
  %2958 = getelementptr inbounds i32, ptr %4, i64 %2957
  %2959 = load i32, ptr %2958, align 4, !tbaa !5
  %2960 = getelementptr inbounds i32, ptr %12, i64 %2957
  %2961 = load i32, ptr %2960, align 4, !tbaa !5
  %2962 = add nsw i32 %2961, -1
  %2963 = icmp slt i32 %2959, %2962
  br i1 %2963, label %2964, label %2982

2964:                                             ; preds = %2956
  br i1 %2951, label %2974, label %2965

2965:                                             ; preds = %2964
  %2966 = shl i64 %2957, 32
  %2967 = add i64 %2966, -4294967296
  %2968 = ashr exact i64 %2967, 32
  %2969 = getelementptr inbounds i32, ptr %7, i64 %2968
  %2970 = load i32, ptr %2969, align 4, !tbaa !5
  %2971 = getelementptr inbounds i32, ptr %6, i64 %2957
  %2972 = load i32, ptr %2971, align 4, !tbaa !5
  %2973 = add nsw i32 %2972, %2970
  store i32 %2973, ptr %2971, align 4, !tbaa !5
  br label %2992

2974:                                             ; preds = %2947, %2964
  %2975 = phi i32 [ %2959, %2964 ], [ %2948, %2947 ]
  %2976 = phi ptr [ %2958, %2964 ], [ %4, %2947 ]
  %2977 = phi i64 [ %2957, %2964 ], [ 0, %2947 ]
  %2978 = add nsw i32 %2975, 1
  store i32 %2978, ptr %2976, align 4, !tbaa !5
  %2979 = getelementptr inbounds i32, ptr %7, i64 %2977
  %2980 = load i32, ptr %2979, align 4, !tbaa !5
  %2981 = getelementptr inbounds i32, ptr %6, i64 %2977
  br label %2992

2982:                                             ; preds = %2956
  %2983 = icmp eq i32 %2959, %2962
  br i1 %2983, label %2984, label %2990

2984:                                             ; preds = %2982
  store i32 0, ptr %2958, align 4, !tbaa !5
  %2985 = getelementptr inbounds i32, ptr %8, i64 %2957
  %2986 = load i32, ptr %2985, align 4, !tbaa !5
  %2987 = getelementptr inbounds i32, ptr %6, i64 %2957
  store i32 %2986, ptr %2987, align 4, !tbaa !5
  %2988 = add nuw nsw i64 %2957, 1
  %2989 = icmp eq i64 %2988, %2720
  br i1 %2989, label %2997, label %2956, !llvm.loop !482

2990:                                             ; preds = %2952, %2982
  %2991 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3001

2992:                                             ; preds = %2965, %2974
  %2993 = phi ptr [ %2981, %2974 ], [ %2958, %2965 ]
  %2994 = phi i32 [ %2980, %2974 ], [ 1, %2965 ]
  %2995 = load i32, ptr %2993, align 4, !tbaa !5
  %2996 = add nsw i32 %2995, %2994
  store i32 %2996, ptr %2993, align 4, !tbaa !5
  br label %2997

2997:                                             ; preds = %2984, %2992, %2954, %2940
  %2998 = icmp eq i32 %2946, %5
  br i1 %2998, label %3001, label %2862, !llvm.loop !483

2999:                                             ; preds = %2415
  %3000 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 562, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3001

3001:                                             ; preds = %2997, %2860, %2707, %2570, %2402, %2265, %2112, %1973, %1803, %1666, %1513, %1376, %1208, %1071, %918, %781, %611, %475, %323, %187, %2714, %2723, %2421, %2430, %2119, %2128, %1822, %1831, %1520, %1529, %1227, %1236, %925, %934, %630, %639, %330, %339, %36, %45, %2412, %2999, %1813, %2404, %1218, %1805, %621, %1210, %28, %613, %18, %2563, %2648, %2700, %2853, %2938, %2990, %1966, %2051, %2105, %2258, %2343, %2395, %1369, %1454, %1506, %1659, %1744, %1796, %774, %858, %911, %1064, %1148, %1201, %180, %264, %316, %468, %552, %604
  %3002 = phi i32 [ -1, %604 ], [ -1, %552 ], [ -1, %468 ], [ -1, %316 ], [ -1, %264 ], [ -1, %180 ], [ -1, %1201 ], [ -1, %1148 ], [ -1, %1064 ], [ -1, %911 ], [ -1, %858 ], [ -1, %774 ], [ -1, %1796 ], [ -1, %1744 ], [ -1, %1659 ], [ -1, %1506 ], [ -1, %1454 ], [ -1, %1369 ], [ -1, %2395 ], [ -1, %2343 ], [ -1, %2258 ], [ -1, %2105 ], [ -1, %2051 ], [ -1, %1966 ], [ -1, %2990 ], [ -1, %2938 ], [ -1, %2853 ], [ -1, %2700 ], [ -1, %2648 ], [ -1, %2563 ], [ %10, %18 ], [ 1, %613 ], [ 1, %28 ], [ 1, %1210 ], [ 1, %621 ], [ 1, %1805 ], [ 1, %1218 ], [ 1, %2404 ], [ 1, %1813 ], [ 1, %2999 ], [ 1, %2412 ], [ 1, %45 ], [ 1, %36 ], [ 1, %339 ], [ 1, %330 ], [ 1, %639 ], [ 1, %630 ], [ 1, %934 ], [ 1, %925 ], [ 1, %1236 ], [ 1, %1227 ], [ 1, %1529 ], [ 1, %1520 ], [ 1, %1831 ], [ 1, %1822 ], [ 1, %2128 ], [ 1, %2119 ], [ 1, %2430 ], [ 1, %2421 ], [ 1, %2723 ], [ 1, %2714 ], [ %52, %187 ], [ %43, %323 ], [ %346, %475 ], [ %337, %611 ], [ %646, %781 ], [ %637, %918 ], [ %941, %1071 ], [ %932, %1208 ], [ %1243, %1376 ], [ %1234, %1513 ], [ %1536, %1666 ], [ %1527, %1803 ], [ %1838, %1973 ], [ %1829, %2112 ], [ %2135, %2265 ], [ %2126, %2402 ], [ %2437, %2570 ], [ %2428, %2707 ], [ %2730, %2860 ], [ %2721, %2997 ]
  ret i32 %3002
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %3010 [
    i32 101, label %22
    i32 102, label %620
    i32 107, label %1217
    i32 108, label %1812
    i32 109, label %2411
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i16, ptr %24, align 2, !tbaa !78
  %30 = trunc i16 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %3010

31:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %32
    i32 0, label %328
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %3010

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %191

46:                                               ; preds = %32
  br i1 %36, label %47, label %3010

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %189
  %56 = phi i32 [ 0, %47 ], [ %141, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !484

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !485

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !486

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i16, ptr %24, i64 %129
  %133 = load i16, ptr %132, align 2, !tbaa !78
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = and i16 %133, 255
  %137 = uitofp i16 %136 to double
  %138 = fmul fast double %131, %137
  %139 = fadd fast double %138, %135
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = add nuw nsw i32 %56, 1
  br i1 %49, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %54, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %52
  br i1 %181, label %189, label %151, !llvm.loop !487

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %3010, label %55, !llvm.loop !488

191:                                              ; preds = %38, %326
  %192 = phi i32 [ 0, %38 ], [ %275, %326 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %43, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %42, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %41, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !489

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !490

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !491

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds i16, ptr %24, i64 %269
  %271 = load i16, ptr %270, align 2, !tbaa !78
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = trunc i16 %271 to i8
  %274 = add i8 %272, %273
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %192, 1
  br i1 %40, label %276, label %326

276:                                              ; preds = %268
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %45, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %43
  br i1 %318, label %326, label %285, !llvm.loop !492

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %268
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %3010, label %191, !llvm.loop !493

328:                                              ; preds = %31
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %3010

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %481

342:                                              ; preds = %328
  br i1 %332, label %343, label %3010

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %479
  %352 = phi i32 [ 0, %343 ], [ %431, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %354, label %423

354:                                              ; preds = %351, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %351 ]
  %356 = phi i64 [ %364, %413 ], [ %348, %351 ]
  %357 = phi i64 [ %421, %413 ], [ %347, %351 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %351 ]
  %359 = sub i32 %346, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !494

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !495

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !496

423:                                              ; preds = %413, %351
  %424 = phi i32 [ %353, %351 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i16, ptr %24, i64 %425
  %427 = load i16, ptr %426, align 2, !tbaa !78
  %428 = load i8, ptr %26, align 1, !tbaa !11
  %429 = trunc i16 %427 to i8
  %430 = add i8 %428, %429
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = add nuw nsw i32 %352, 1
  br i1 %345, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %350, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %348
  br i1 %471, label %479, label %441, !llvm.loop !497

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %3010, label %351, !llvm.loop !498

481:                                              ; preds = %334, %616
  %482 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %339, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %338, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %337, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !499

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !500

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !501

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds i16, ptr %24, i64 %559
  %561 = load i16, ptr %560, align 2, !tbaa !78
  %562 = load i8, ptr %26, align 1, !tbaa !11
  %563 = trunc i16 %561 to i8
  %564 = add i8 %562, %563
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %482, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %558
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !502

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %558
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %3010, label %481, !llvm.loop !503

618:                                              ; preds = %31
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3010

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %620
  %627 = load i16, ptr %622, align 2, !tbaa !78
  %628 = sext i16 %627 to i32
  store i32 %628, ptr %624, align 4, !tbaa !5
  br label %3010

629:                                              ; preds = %620
  switch i32 %1, label %1215 [
    i32 1, label %630
    i32 0, label %925
  ]

630:                                              ; preds = %629
  %631 = getelementptr inbounds i32, ptr %3, i64 %19
  %632 = load i32, ptr %631, align 4, !tbaa !5
  %633 = icmp eq i32 %632, 0
  %634 = icmp sgt i32 %5, 0
  br i1 %633, label %644, label %635

635:                                              ; preds = %630
  br i1 %634, label %636, label %3010

636:                                              ; preds = %635
  %637 = icmp sgt i32 %13, 1
  %638 = icmp sgt i32 %13, 0
  %639 = add i32 %13, -2
  %640 = zext i32 %639 to i64
  %641 = zext i32 %13 to i64
  %642 = add nuw i32 %5, 1
  %643 = icmp eq i32 %13, 1
  br label %788

644:                                              ; preds = %630
  br i1 %634, label %645, label %3010

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %653

653:                                              ; preds = %645, %786
  %654 = phi i32 [ 0, %645 ], [ %738, %786 ]
  %655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %656, label %725

656:                                              ; preds = %653, %715
  %657 = phi i32 [ %724, %715 ], [ 0, %653 ]
  %658 = phi i64 [ %666, %715 ], [ %650, %653 ]
  %659 = phi i64 [ %723, %715 ], [ %649, %653 ]
  %660 = phi i32 [ %721, %715 ], [ %655, %653 ]
  %661 = sub i32 %648, %657
  %662 = tail call i32 @llvm.smin.i32(i32 %661, i32 0)
  %663 = sub i32 %661, %662
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i64 %664, 1
  %666 = add nsw i64 %658, -1
  %667 = icmp ult i32 %663, 31
  br i1 %667, label %703, label %668

668:                                              ; preds = %656
  %669 = and i64 %665, 8589934560
  %670 = sub i64 %659, %669
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i64 [ 0, %668 ], [ %695, %671 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %691, %671 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %692, %671 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %693, %671 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %694, %671 ]
  %677 = sub i64 %659, %672
  %678 = getelementptr inbounds i32, ptr %9, i64 %677
  %679 = getelementptr inbounds i32, ptr %678, i64 -7
  %680 = load <8 x i32>, ptr %679, align 4, !tbaa !5
  %681 = shufflevector <8 x i32> %680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %682 = getelementptr inbounds i32, ptr %678, i64 -15
  %683 = load <8 x i32>, ptr %682, align 4, !tbaa !5
  %684 = shufflevector <8 x i32> %683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %685 = getelementptr inbounds i32, ptr %678, i64 -23
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %678, i64 -31
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = mul <8 x i32> %681, %673
  %692 = mul <8 x i32> %684, %674
  %693 = mul <8 x i32> %687, %675
  %694 = mul <8 x i32> %690, %676
  %695 = add nuw i64 %672, 32
  %696 = icmp eq i64 %695, %669
  br i1 %696, label %697, label %671, !llvm.loop !504

697:                                              ; preds = %671
  %698 = mul <8 x i32> %692, %691
  %699 = mul <8 x i32> %693, %698
  %700 = mul <8 x i32> %694, %699
  %701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %700)
  %702 = icmp eq i64 %665, %669
  br i1 %702, label %715, label %703

703:                                              ; preds = %656, %697
  %704 = phi i64 [ %659, %656 ], [ %670, %697 ]
  %705 = phi i32 [ 1, %656 ], [ %701, %697 ]
  br label %706

706:                                              ; preds = %703, %706
  %707 = phi i64 [ %712, %706 ], [ %704, %703 ]
  %708 = phi i32 [ %711, %706 ], [ %705, %703 ]
  %709 = getelementptr inbounds i32, ptr %9, i64 %707
  %710 = load i32, ptr %709, align 4, !tbaa !5
  %711 = mul nsw i32 %710, %708
  %712 = add nsw i64 %707, -1
  %713 = trunc i64 %707 to i32
  %714 = icmp sgt i32 %713, 0
  br i1 %714, label %706, label %715, !llvm.loop !505

715:                                              ; preds = %706, %697
  %716 = phi i32 [ %701, %697 ], [ %711, %706 ]
  %717 = and i64 %666, 4294967295
  %718 = getelementptr inbounds i32, ptr %6, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %716
  %721 = add nsw i32 %720, %660
  %722 = icmp sgt i64 %658, 2
  %723 = add nsw i64 %659, -1
  %724 = add i32 %657, 1
  br i1 %722, label %656, label %725, !llvm.loop !506

725:                                              ; preds = %715, %653
  %726 = phi i32 [ %655, %653 ], [ %721, %715 ]
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %2, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !18
  %730 = getelementptr inbounds i16, ptr %622, i64 %727
  %731 = load i16, ptr %730, align 2, !tbaa !78
  %732 = load i32, ptr %624, align 4, !tbaa !5
  %733 = sitofp i32 %732 to double
  %734 = sitofp i16 %731 to double
  %735 = fmul fast double %729, %734
  %736 = fadd fast double %735, %733
  %737 = fptosi double %736 to i32
  store i32 %737, ptr %624, align 4, !tbaa !5
  %738 = add nuw nsw i32 %654, 1
  br i1 %647, label %739, label %786

739:                                              ; preds = %725
  %740 = load i32, ptr %4, align 4, !tbaa !5
  %741 = load i32, ptr %12, align 4, !tbaa !5
  %742 = add nsw i32 %741, -1
  %743 = icmp slt i32 %740, %742
  br i1 %743, label %763, label %744

744:                                              ; preds = %739
  %745 = icmp eq i32 %740, %742
  br i1 %745, label %746, label %779

746:                                              ; preds = %744
  store i32 0, ptr %4, align 4, !tbaa !5
  %747 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %747, ptr %6, align 4, !tbaa !5
  br i1 %652, label %786, label %748

748:                                              ; preds = %746, %773
  %749 = phi i64 [ %777, %773 ], [ 1, %746 ]
  %750 = getelementptr inbounds i32, ptr %4, i64 %749
  %751 = load i32, ptr %750, align 4, !tbaa !5
  %752 = getelementptr inbounds i32, ptr %12, i64 %749
  %753 = load i32, ptr %752, align 4, !tbaa !5
  %754 = add nsw i32 %753, -1
  %755 = icmp slt i32 %751, %754
  br i1 %755, label %756, label %771

756:                                              ; preds = %748
  br i1 %743, label %763, label %757

757:                                              ; preds = %756
  %758 = getelementptr inbounds i32, ptr %7, i64 %749
  %759 = load i32, ptr %758, align 4, !tbaa !5
  %760 = getelementptr inbounds i32, ptr %6, i64 %749
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = add nsw i32 %761, %759
  store i32 %762, ptr %760, align 4, !tbaa !5
  br label %781

763:                                              ; preds = %739, %756
  %764 = phi i32 [ %751, %756 ], [ %740, %739 ]
  %765 = phi ptr [ %750, %756 ], [ %4, %739 ]
  %766 = phi i64 [ %749, %756 ], [ 0, %739 ]
  %767 = add nsw i32 %764, 1
  store i32 %767, ptr %765, align 4, !tbaa !5
  %768 = getelementptr inbounds i32, ptr %7, i64 %766
  %769 = load i32, ptr %768, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %6, i64 %766
  br label %781

771:                                              ; preds = %748
  %772 = icmp eq i32 %751, %754
  br i1 %772, label %773, label %779

773:                                              ; preds = %771
  store i32 0, ptr %750, align 4, !tbaa !5
  %774 = getelementptr inbounds i32, ptr %8, i64 %749
  %775 = load i32, ptr %774, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %6, i64 %749
  store i32 %775, ptr %776, align 4, !tbaa !5
  %777 = add nuw nsw i64 %749, 1
  %778 = icmp eq i64 %777, %650
  br i1 %778, label %786, label %748, !llvm.loop !507

779:                                              ; preds = %744, %771
  %780 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

781:                                              ; preds = %757, %763
  %782 = phi ptr [ %770, %763 ], [ %750, %757 ]
  %783 = phi i32 [ %769, %763 ], [ 1, %757 ]
  %784 = load i32, ptr %782, align 4, !tbaa !5
  %785 = add nsw i32 %784, %783
  store i32 %785, ptr %782, align 4, !tbaa !5
  br label %786

786:                                              ; preds = %773, %781, %746, %725
  %787 = icmp eq i32 %738, %5
  br i1 %787, label %3010, label %653, !llvm.loop !508

788:                                              ; preds = %636, %923
  %789 = phi i32 [ 0, %636 ], [ %872, %923 ]
  %790 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %637, label %791, label %860

791:                                              ; preds = %788, %850
  %792 = phi i32 [ %859, %850 ], [ 0, %788 ]
  %793 = phi i64 [ %801, %850 ], [ %641, %788 ]
  %794 = phi i64 [ %858, %850 ], [ %640, %788 ]
  %795 = phi i32 [ %856, %850 ], [ %790, %788 ]
  %796 = sub i32 %639, %792
  %797 = tail call i32 @llvm.smin.i32(i32 %796, i32 0)
  %798 = sub i32 %796, %797
  %799 = zext i32 %798 to i64
  %800 = add nuw nsw i64 %799, 1
  %801 = add nsw i64 %793, -1
  %802 = icmp ult i32 %798, 31
  br i1 %802, label %838, label %803

803:                                              ; preds = %791
  %804 = and i64 %800, 8589934560
  %805 = sub i64 %794, %804
  br label %806

806:                                              ; preds = %806, %803
  %807 = phi i64 [ 0, %803 ], [ %830, %806 ]
  %808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %803 ], [ %826, %806 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %803 ], [ %827, %806 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %803 ], [ %828, %806 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %803 ], [ %829, %806 ]
  %812 = sub i64 %794, %807
  %813 = getelementptr inbounds i32, ptr %11, i64 %812
  %814 = getelementptr inbounds i32, ptr %813, i64 -7
  %815 = load <8 x i32>, ptr %814, align 4, !tbaa !5
  %816 = shufflevector <8 x i32> %815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %817 = getelementptr inbounds i32, ptr %813, i64 -15
  %818 = load <8 x i32>, ptr %817, align 4, !tbaa !5
  %819 = shufflevector <8 x i32> %818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %820 = getelementptr inbounds i32, ptr %813, i64 -23
  %821 = load <8 x i32>, ptr %820, align 4, !tbaa !5
  %822 = shufflevector <8 x i32> %821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %823 = getelementptr inbounds i32, ptr %813, i64 -31
  %824 = load <8 x i32>, ptr %823, align 4, !tbaa !5
  %825 = shufflevector <8 x i32> %824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %826 = mul <8 x i32> %816, %808
  %827 = mul <8 x i32> %819, %809
  %828 = mul <8 x i32> %822, %810
  %829 = mul <8 x i32> %825, %811
  %830 = add nuw i64 %807, 32
  %831 = icmp eq i64 %830, %804
  br i1 %831, label %832, label %806, !llvm.loop !509

832:                                              ; preds = %806
  %833 = mul <8 x i32> %827, %826
  %834 = mul <8 x i32> %828, %833
  %835 = mul <8 x i32> %829, %834
  %836 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %835)
  %837 = icmp eq i64 %800, %804
  br i1 %837, label %850, label %838

838:                                              ; preds = %791, %832
  %839 = phi i64 [ %794, %791 ], [ %805, %832 ]
  %840 = phi i32 [ 1, %791 ], [ %836, %832 ]
  br label %841

841:                                              ; preds = %838, %841
  %842 = phi i64 [ %847, %841 ], [ %839, %838 ]
  %843 = phi i32 [ %846, %841 ], [ %840, %838 ]
  %844 = getelementptr inbounds i32, ptr %11, i64 %842
  %845 = load i32, ptr %844, align 4, !tbaa !5
  %846 = mul nsw i32 %845, %843
  %847 = add nsw i64 %842, -1
  %848 = trunc i64 %842 to i32
  %849 = icmp sgt i32 %848, 0
  br i1 %849, label %841, label %850, !llvm.loop !510

850:                                              ; preds = %841, %832
  %851 = phi i32 [ %836, %832 ], [ %846, %841 ]
  %852 = and i64 %801, 4294967295
  %853 = getelementptr inbounds i32, ptr %6, i64 %852
  %854 = load i32, ptr %853, align 4, !tbaa !5
  %855 = mul nsw i32 %854, %851
  %856 = add nsw i32 %855, %795
  %857 = icmp sgt i64 %793, 2
  %858 = add nsw i64 %794, -1
  %859 = add i32 %792, 1
  br i1 %857, label %791, label %860, !llvm.loop !511

860:                                              ; preds = %850, %788
  %861 = phi i32 [ %790, %788 ], [ %856, %850 ]
  %862 = icmp slt i32 %861, %5
  br i1 %862, label %865, label %863

863:                                              ; preds = %860
  %864 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

865:                                              ; preds = %860
  %866 = sext i32 %861 to i64
  %867 = getelementptr inbounds i16, ptr %622, i64 %866
  %868 = load i16, ptr %867, align 2, !tbaa !78
  %869 = load i32, ptr %624, align 4, !tbaa !5
  %870 = sext i16 %868 to i32
  %871 = add i32 %869, %870
  store i32 %871, ptr %624, align 4, !tbaa !5
  %872 = add nuw nsw i32 %789, 1
  br i1 %638, label %873, label %923

873:                                              ; preds = %865
  %874 = load i32, ptr %4, align 4, !tbaa !5
  %875 = load i32, ptr %12, align 4, !tbaa !5
  %876 = add nsw i32 %875, -1
  %877 = icmp slt i32 %874, %876
  br i1 %877, label %900, label %878

878:                                              ; preds = %873
  %879 = icmp eq i32 %874, %876
  br i1 %879, label %880, label %916

880:                                              ; preds = %878
  store i32 0, ptr %4, align 4, !tbaa !5
  %881 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %881, ptr %6, align 4, !tbaa !5
  br i1 %643, label %923, label %882

882:                                              ; preds = %880, %910
  %883 = phi i64 [ %914, %910 ], [ 1, %880 ]
  %884 = getelementptr inbounds i32, ptr %4, i64 %883
  %885 = load i32, ptr %884, align 4, !tbaa !5
  %886 = getelementptr inbounds i32, ptr %12, i64 %883
  %887 = load i32, ptr %886, align 4, !tbaa !5
  %888 = add nsw i32 %887, -1
  %889 = icmp slt i32 %885, %888
  br i1 %889, label %890, label %908

890:                                              ; preds = %882
  br i1 %877, label %900, label %891

891:                                              ; preds = %890
  %892 = shl i64 %883, 32
  %893 = add i64 %892, -4294967296
  %894 = ashr exact i64 %893, 32
  %895 = getelementptr inbounds i32, ptr %7, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = getelementptr inbounds i32, ptr %6, i64 %883
  %898 = load i32, ptr %897, align 4, !tbaa !5
  %899 = add nsw i32 %898, %896
  store i32 %899, ptr %897, align 4, !tbaa !5
  br label %918

900:                                              ; preds = %873, %890
  %901 = phi i32 [ %885, %890 ], [ %874, %873 ]
  %902 = phi ptr [ %884, %890 ], [ %4, %873 ]
  %903 = phi i64 [ %883, %890 ], [ 0, %873 ]
  %904 = add nsw i32 %901, 1
  store i32 %904, ptr %902, align 4, !tbaa !5
  %905 = getelementptr inbounds i32, ptr %7, i64 %903
  %906 = load i32, ptr %905, align 4, !tbaa !5
  %907 = getelementptr inbounds i32, ptr %6, i64 %903
  br label %918

908:                                              ; preds = %882
  %909 = icmp eq i32 %885, %888
  br i1 %909, label %910, label %916

910:                                              ; preds = %908
  store i32 0, ptr %884, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %8, i64 %883
  %912 = load i32, ptr %911, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %6, i64 %883
  store i32 %912, ptr %913, align 4, !tbaa !5
  %914 = add nuw nsw i64 %883, 1
  %915 = icmp eq i64 %914, %641
  br i1 %915, label %923, label %882, !llvm.loop !512

916:                                              ; preds = %878, %908
  %917 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

918:                                              ; preds = %891, %900
  %919 = phi ptr [ %907, %900 ], [ %884, %891 ]
  %920 = phi i32 [ %906, %900 ], [ 1, %891 ]
  %921 = load i32, ptr %919, align 4, !tbaa !5
  %922 = add nsw i32 %921, %920
  store i32 %922, ptr %919, align 4, !tbaa !5
  br label %923

923:                                              ; preds = %910, %918, %880, %865
  %924 = icmp eq i32 %872, %5
  br i1 %924, label %3010, label %788, !llvm.loop !513

925:                                              ; preds = %629
  %926 = getelementptr inbounds i32, ptr %3, i64 %19
  %927 = load i32, ptr %926, align 4, !tbaa !5
  %928 = icmp eq i32 %927, 0
  %929 = icmp sgt i32 %5, 0
  br i1 %928, label %939, label %930

930:                                              ; preds = %925
  br i1 %929, label %931, label %3010

931:                                              ; preds = %930
  %932 = icmp sgt i32 %13, 1
  %933 = icmp sgt i32 %13, 0
  %934 = add i32 %13, -2
  %935 = zext i32 %934 to i64
  %936 = zext i32 %13 to i64
  %937 = add nuw i32 %5, 1
  %938 = icmp eq i32 %13, 1
  br label %1078

939:                                              ; preds = %925
  br i1 %929, label %940, label %3010

940:                                              ; preds = %939
  %941 = icmp sgt i32 %13, 1
  %942 = icmp sgt i32 %13, 0
  %943 = add i32 %13, -2
  %944 = zext i32 %943 to i64
  %945 = zext i32 %13 to i64
  %946 = add nuw i32 %5, 1
  %947 = icmp eq i32 %13, 1
  br label %948

948:                                              ; preds = %940, %1076
  %949 = phi i32 [ 0, %940 ], [ %1028, %1076 ]
  %950 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %941, label %951, label %1020

951:                                              ; preds = %948, %1010
  %952 = phi i32 [ %1019, %1010 ], [ 0, %948 ]
  %953 = phi i64 [ %961, %1010 ], [ %945, %948 ]
  %954 = phi i64 [ %1018, %1010 ], [ %944, %948 ]
  %955 = phi i32 [ %1016, %1010 ], [ %950, %948 ]
  %956 = sub i32 %943, %952
  %957 = tail call i32 @llvm.smin.i32(i32 %956, i32 0)
  %958 = sub i32 %956, %957
  %959 = zext i32 %958 to i64
  %960 = add nuw nsw i64 %959, 1
  %961 = add nsw i64 %953, -1
  %962 = icmp ult i32 %958, 31
  br i1 %962, label %998, label %963

963:                                              ; preds = %951
  %964 = and i64 %960, 8589934560
  %965 = sub i64 %954, %964
  br label %966

966:                                              ; preds = %966, %963
  %967 = phi i64 [ 0, %963 ], [ %990, %966 ]
  %968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %963 ], [ %986, %966 ]
  %969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %963 ], [ %987, %966 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %963 ], [ %988, %966 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %963 ], [ %989, %966 ]
  %972 = sub i64 %954, %967
  %973 = getelementptr inbounds i32, ptr %9, i64 %972
  %974 = getelementptr inbounds i32, ptr %973, i64 -7
  %975 = load <8 x i32>, ptr %974, align 4, !tbaa !5
  %976 = shufflevector <8 x i32> %975, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %977 = getelementptr inbounds i32, ptr %973, i64 -15
  %978 = load <8 x i32>, ptr %977, align 4, !tbaa !5
  %979 = shufflevector <8 x i32> %978, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %980 = getelementptr inbounds i32, ptr %973, i64 -23
  %981 = load <8 x i32>, ptr %980, align 4, !tbaa !5
  %982 = shufflevector <8 x i32> %981, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %983 = getelementptr inbounds i32, ptr %973, i64 -31
  %984 = load <8 x i32>, ptr %983, align 4, !tbaa !5
  %985 = shufflevector <8 x i32> %984, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %986 = mul <8 x i32> %976, %968
  %987 = mul <8 x i32> %979, %969
  %988 = mul <8 x i32> %982, %970
  %989 = mul <8 x i32> %985, %971
  %990 = add nuw i64 %967, 32
  %991 = icmp eq i64 %990, %964
  br i1 %991, label %992, label %966, !llvm.loop !514

992:                                              ; preds = %966
  %993 = mul <8 x i32> %987, %986
  %994 = mul <8 x i32> %988, %993
  %995 = mul <8 x i32> %989, %994
  %996 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %995)
  %997 = icmp eq i64 %960, %964
  br i1 %997, label %1010, label %998

998:                                              ; preds = %951, %992
  %999 = phi i64 [ %954, %951 ], [ %965, %992 ]
  %1000 = phi i32 [ 1, %951 ], [ %996, %992 ]
  br label %1001

1001:                                             ; preds = %998, %1001
  %1002 = phi i64 [ %1007, %1001 ], [ %999, %998 ]
  %1003 = phi i32 [ %1006, %1001 ], [ %1000, %998 ]
  %1004 = getelementptr inbounds i32, ptr %9, i64 %1002
  %1005 = load i32, ptr %1004, align 4, !tbaa !5
  %1006 = mul nsw i32 %1005, %1003
  %1007 = add nsw i64 %1002, -1
  %1008 = trunc i64 %1002 to i32
  %1009 = icmp sgt i32 %1008, 0
  br i1 %1009, label %1001, label %1010, !llvm.loop !515

1010:                                             ; preds = %1001, %992
  %1011 = phi i32 [ %996, %992 ], [ %1006, %1001 ]
  %1012 = and i64 %961, 4294967295
  %1013 = getelementptr inbounds i32, ptr %6, i64 %1012
  %1014 = load i32, ptr %1013, align 4, !tbaa !5
  %1015 = mul nsw i32 %1014, %1011
  %1016 = add nsw i32 %1015, %955
  %1017 = icmp sgt i64 %953, 2
  %1018 = add nsw i64 %954, -1
  %1019 = add i32 %952, 1
  br i1 %1017, label %951, label %1020, !llvm.loop !516

1020:                                             ; preds = %1010, %948
  %1021 = phi i32 [ %950, %948 ], [ %1016, %1010 ]
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds i16, ptr %622, i64 %1022
  %1024 = load i16, ptr %1023, align 2, !tbaa !78
  %1025 = sext i16 %1024 to i32
  %1026 = load i32, ptr %624, align 4, !tbaa !5
  %1027 = add nsw i32 %1026, %1025
  store i32 %1027, ptr %624, align 4, !tbaa !5
  %1028 = add nuw nsw i32 %949, 1
  br i1 %942, label %1029, label %1076

1029:                                             ; preds = %1020
  %1030 = load i32, ptr %4, align 4, !tbaa !5
  %1031 = load i32, ptr %12, align 4, !tbaa !5
  %1032 = add nsw i32 %1031, -1
  %1033 = icmp slt i32 %1030, %1032
  br i1 %1033, label %1053, label %1034

1034:                                             ; preds = %1029
  %1035 = icmp eq i32 %1030, %1032
  br i1 %1035, label %1036, label %1069

1036:                                             ; preds = %1034
  store i32 0, ptr %4, align 4, !tbaa !5
  %1037 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1037, ptr %6, align 4, !tbaa !5
  br i1 %947, label %1076, label %1038

1038:                                             ; preds = %1036, %1063
  %1039 = phi i64 [ %1067, %1063 ], [ 1, %1036 ]
  %1040 = getelementptr inbounds i32, ptr %4, i64 %1039
  %1041 = load i32, ptr %1040, align 4, !tbaa !5
  %1042 = getelementptr inbounds i32, ptr %12, i64 %1039
  %1043 = load i32, ptr %1042, align 4, !tbaa !5
  %1044 = add nsw i32 %1043, -1
  %1045 = icmp slt i32 %1041, %1044
  br i1 %1045, label %1046, label %1061

1046:                                             ; preds = %1038
  br i1 %1033, label %1053, label %1047

1047:                                             ; preds = %1046
  %1048 = getelementptr inbounds i32, ptr %7, i64 %1039
  %1049 = load i32, ptr %1048, align 4, !tbaa !5
  %1050 = getelementptr inbounds i32, ptr %6, i64 %1039
  %1051 = load i32, ptr %1050, align 4, !tbaa !5
  %1052 = add nsw i32 %1051, %1049
  store i32 %1052, ptr %1050, align 4, !tbaa !5
  br label %1071

1053:                                             ; preds = %1029, %1046
  %1054 = phi i32 [ %1041, %1046 ], [ %1030, %1029 ]
  %1055 = phi ptr [ %1040, %1046 ], [ %4, %1029 ]
  %1056 = phi i64 [ %1039, %1046 ], [ 0, %1029 ]
  %1057 = add nsw i32 %1054, 1
  store i32 %1057, ptr %1055, align 4, !tbaa !5
  %1058 = getelementptr inbounds i32, ptr %7, i64 %1056
  %1059 = load i32, ptr %1058, align 4, !tbaa !5
  %1060 = getelementptr inbounds i32, ptr %6, i64 %1056
  br label %1071

1061:                                             ; preds = %1038
  %1062 = icmp eq i32 %1041, %1044
  br i1 %1062, label %1063, label %1069

1063:                                             ; preds = %1061
  store i32 0, ptr %1040, align 4, !tbaa !5
  %1064 = getelementptr inbounds i32, ptr %8, i64 %1039
  %1065 = load i32, ptr %1064, align 4, !tbaa !5
  %1066 = getelementptr inbounds i32, ptr %6, i64 %1039
  store i32 %1065, ptr %1066, align 4, !tbaa !5
  %1067 = add nuw nsw i64 %1039, 1
  %1068 = icmp eq i64 %1067, %945
  br i1 %1068, label %1076, label %1038, !llvm.loop !517

1069:                                             ; preds = %1034, %1061
  %1070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1071:                                             ; preds = %1047, %1053
  %1072 = phi ptr [ %1060, %1053 ], [ %1040, %1047 ]
  %1073 = phi i32 [ %1059, %1053 ], [ 1, %1047 ]
  %1074 = load i32, ptr %1072, align 4, !tbaa !5
  %1075 = add nsw i32 %1074, %1073
  store i32 %1075, ptr %1072, align 4, !tbaa !5
  br label %1076

1076:                                             ; preds = %1063, %1071, %1036, %1020
  %1077 = icmp eq i32 %1028, %5
  br i1 %1077, label %3010, label %948, !llvm.loop !518

1078:                                             ; preds = %931, %1213
  %1079 = phi i32 [ 0, %931 ], [ %1162, %1213 ]
  %1080 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %932, label %1081, label %1150

1081:                                             ; preds = %1078, %1140
  %1082 = phi i32 [ %1149, %1140 ], [ 0, %1078 ]
  %1083 = phi i64 [ %1091, %1140 ], [ %936, %1078 ]
  %1084 = phi i64 [ %1148, %1140 ], [ %935, %1078 ]
  %1085 = phi i32 [ %1146, %1140 ], [ %1080, %1078 ]
  %1086 = sub i32 %934, %1082
  %1087 = tail call i32 @llvm.smin.i32(i32 %1086, i32 0)
  %1088 = sub i32 %1086, %1087
  %1089 = zext i32 %1088 to i64
  %1090 = add nuw nsw i64 %1089, 1
  %1091 = add nsw i64 %1083, -1
  %1092 = icmp ult i32 %1088, 31
  br i1 %1092, label %1128, label %1093

1093:                                             ; preds = %1081
  %1094 = and i64 %1090, 8589934560
  %1095 = sub i64 %1084, %1094
  br label %1096

1096:                                             ; preds = %1096, %1093
  %1097 = phi i64 [ 0, %1093 ], [ %1120, %1096 ]
  %1098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1093 ], [ %1116, %1096 ]
  %1099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1093 ], [ %1117, %1096 ]
  %1100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1093 ], [ %1118, %1096 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1093 ], [ %1119, %1096 ]
  %1102 = sub i64 %1084, %1097
  %1103 = getelementptr inbounds i32, ptr %11, i64 %1102
  %1104 = getelementptr inbounds i32, ptr %1103, i64 -7
  %1105 = load <8 x i32>, ptr %1104, align 4, !tbaa !5
  %1106 = shufflevector <8 x i32> %1105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1107 = getelementptr inbounds i32, ptr %1103, i64 -15
  %1108 = load <8 x i32>, ptr %1107, align 4, !tbaa !5
  %1109 = shufflevector <8 x i32> %1108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1110 = getelementptr inbounds i32, ptr %1103, i64 -23
  %1111 = load <8 x i32>, ptr %1110, align 4, !tbaa !5
  %1112 = shufflevector <8 x i32> %1111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1113 = getelementptr inbounds i32, ptr %1103, i64 -31
  %1114 = load <8 x i32>, ptr %1113, align 4, !tbaa !5
  %1115 = shufflevector <8 x i32> %1114, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1116 = mul <8 x i32> %1106, %1098
  %1117 = mul <8 x i32> %1109, %1099
  %1118 = mul <8 x i32> %1112, %1100
  %1119 = mul <8 x i32> %1115, %1101
  %1120 = add nuw i64 %1097, 32
  %1121 = icmp eq i64 %1120, %1094
  br i1 %1121, label %1122, label %1096, !llvm.loop !519

1122:                                             ; preds = %1096
  %1123 = mul <8 x i32> %1117, %1116
  %1124 = mul <8 x i32> %1118, %1123
  %1125 = mul <8 x i32> %1119, %1124
  %1126 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1125)
  %1127 = icmp eq i64 %1090, %1094
  br i1 %1127, label %1140, label %1128

1128:                                             ; preds = %1081, %1122
  %1129 = phi i64 [ %1084, %1081 ], [ %1095, %1122 ]
  %1130 = phi i32 [ 1, %1081 ], [ %1126, %1122 ]
  br label %1131

1131:                                             ; preds = %1128, %1131
  %1132 = phi i64 [ %1137, %1131 ], [ %1129, %1128 ]
  %1133 = phi i32 [ %1136, %1131 ], [ %1130, %1128 ]
  %1134 = getelementptr inbounds i32, ptr %11, i64 %1132
  %1135 = load i32, ptr %1134, align 4, !tbaa !5
  %1136 = mul nsw i32 %1135, %1133
  %1137 = add nsw i64 %1132, -1
  %1138 = trunc i64 %1132 to i32
  %1139 = icmp sgt i32 %1138, 0
  br i1 %1139, label %1131, label %1140, !llvm.loop !520

1140:                                             ; preds = %1131, %1122
  %1141 = phi i32 [ %1126, %1122 ], [ %1136, %1131 ]
  %1142 = and i64 %1091, 4294967295
  %1143 = getelementptr inbounds i32, ptr %6, i64 %1142
  %1144 = load i32, ptr %1143, align 4, !tbaa !5
  %1145 = mul nsw i32 %1144, %1141
  %1146 = add nsw i32 %1145, %1085
  %1147 = icmp sgt i64 %1083, 2
  %1148 = add nsw i64 %1084, -1
  %1149 = add i32 %1082, 1
  br i1 %1147, label %1081, label %1150, !llvm.loop !521

1150:                                             ; preds = %1140, %1078
  %1151 = phi i32 [ %1080, %1078 ], [ %1146, %1140 ]
  %1152 = icmp slt i32 %1151, %5
  br i1 %1152, label %1155, label %1153

1153:                                             ; preds = %1150
  %1154 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

1155:                                             ; preds = %1150
  %1156 = sext i32 %1151 to i64
  %1157 = getelementptr inbounds i16, ptr %622, i64 %1156
  %1158 = load i16, ptr %1157, align 2, !tbaa !78
  %1159 = sext i16 %1158 to i32
  %1160 = load i32, ptr %624, align 4, !tbaa !5
  %1161 = add nsw i32 %1160, %1159
  store i32 %1161, ptr %624, align 4, !tbaa !5
  %1162 = add nuw nsw i32 %1079, 1
  br i1 %933, label %1163, label %1213

1163:                                             ; preds = %1155
  %1164 = load i32, ptr %4, align 4, !tbaa !5
  %1165 = load i32, ptr %12, align 4, !tbaa !5
  %1166 = add nsw i32 %1165, -1
  %1167 = icmp slt i32 %1164, %1166
  br i1 %1167, label %1190, label %1168

1168:                                             ; preds = %1163
  %1169 = icmp eq i32 %1164, %1166
  br i1 %1169, label %1170, label %1206

1170:                                             ; preds = %1168
  store i32 0, ptr %4, align 4, !tbaa !5
  %1171 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1171, ptr %6, align 4, !tbaa !5
  br i1 %938, label %1213, label %1172

1172:                                             ; preds = %1170, %1200
  %1173 = phi i64 [ %1204, %1200 ], [ 1, %1170 ]
  %1174 = getelementptr inbounds i32, ptr %4, i64 %1173
  %1175 = load i32, ptr %1174, align 4, !tbaa !5
  %1176 = getelementptr inbounds i32, ptr %12, i64 %1173
  %1177 = load i32, ptr %1176, align 4, !tbaa !5
  %1178 = add nsw i32 %1177, -1
  %1179 = icmp slt i32 %1175, %1178
  br i1 %1179, label %1180, label %1198

1180:                                             ; preds = %1172
  br i1 %1167, label %1190, label %1181

1181:                                             ; preds = %1180
  %1182 = shl i64 %1173, 32
  %1183 = add i64 %1182, -4294967296
  %1184 = ashr exact i64 %1183, 32
  %1185 = getelementptr inbounds i32, ptr %7, i64 %1184
  %1186 = load i32, ptr %1185, align 4, !tbaa !5
  %1187 = getelementptr inbounds i32, ptr %6, i64 %1173
  %1188 = load i32, ptr %1187, align 4, !tbaa !5
  %1189 = add nsw i32 %1188, %1186
  store i32 %1189, ptr %1187, align 4, !tbaa !5
  br label %1208

1190:                                             ; preds = %1163, %1180
  %1191 = phi i32 [ %1175, %1180 ], [ %1164, %1163 ]
  %1192 = phi ptr [ %1174, %1180 ], [ %4, %1163 ]
  %1193 = phi i64 [ %1173, %1180 ], [ 0, %1163 ]
  %1194 = add nsw i32 %1191, 1
  store i32 %1194, ptr %1192, align 4, !tbaa !5
  %1195 = getelementptr inbounds i32, ptr %7, i64 %1193
  %1196 = load i32, ptr %1195, align 4, !tbaa !5
  %1197 = getelementptr inbounds i32, ptr %6, i64 %1193
  br label %1208

1198:                                             ; preds = %1172
  %1199 = icmp eq i32 %1175, %1178
  br i1 %1199, label %1200, label %1206

1200:                                             ; preds = %1198
  store i32 0, ptr %1174, align 4, !tbaa !5
  %1201 = getelementptr inbounds i32, ptr %8, i64 %1173
  %1202 = load i32, ptr %1201, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %6, i64 %1173
  store i32 %1202, ptr %1203, align 4, !tbaa !5
  %1204 = add nuw nsw i64 %1173, 1
  %1205 = icmp eq i64 %1204, %936
  br i1 %1205, label %1213, label %1172, !llvm.loop !522

1206:                                             ; preds = %1168, %1198
  %1207 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1208:                                             ; preds = %1181, %1190
  %1209 = phi ptr [ %1197, %1190 ], [ %1174, %1181 ]
  %1210 = phi i32 [ %1196, %1190 ], [ 1, %1181 ]
  %1211 = load i32, ptr %1209, align 4, !tbaa !5
  %1212 = add nsw i32 %1211, %1210
  store i32 %1212, ptr %1209, align 4, !tbaa !5
  br label %1213

1213:                                             ; preds = %1200, %1208, %1170, %1155
  %1214 = icmp eq i32 %1162, %5
  br i1 %1214, label %3010, label %1078, !llvm.loop !523

1215:                                             ; preds = %629
  %1216 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 769, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3010

1217:                                             ; preds = %18
  %1218 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1219 = load ptr, ptr %1218, align 8, !tbaa !9
  %1220 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1221 = load ptr, ptr %1220, align 8, !tbaa !9
  store double 0.000000e+00, ptr %1221, align 8, !tbaa !18
  %1222 = icmp eq i32 %13, 0
  br i1 %1222, label %1223, label %1226

1223:                                             ; preds = %1217
  %1224 = load i16, ptr %1219, align 2, !tbaa !78
  %1225 = sitofp i16 %1224 to double
  store double %1225, ptr %1221, align 8, !tbaa !18
  br label %3010

1226:                                             ; preds = %1217
  switch i32 %1, label %1810 [
    i32 1, label %1227
    i32 0, label %1520
  ]

1227:                                             ; preds = %1226
  %1228 = getelementptr inbounds i32, ptr %3, i64 %19
  %1229 = load i32, ptr %1228, align 4, !tbaa !5
  %1230 = icmp eq i32 %1229, 0
  %1231 = icmp sgt i32 %5, 0
  br i1 %1230, label %1241, label %1232

1232:                                             ; preds = %1227
  br i1 %1231, label %1233, label %3010

1233:                                             ; preds = %1232
  %1234 = icmp sgt i32 %13, 1
  %1235 = icmp sgt i32 %13, 0
  %1236 = add i32 %13, -2
  %1237 = zext i32 %1236 to i64
  %1238 = zext i32 %13 to i64
  %1239 = add nuw i32 %5, 1
  %1240 = icmp eq i32 %13, 1
  br label %1383

1241:                                             ; preds = %1227
  br i1 %1231, label %1242, label %3010

1242:                                             ; preds = %1241
  %1243 = icmp sgt i32 %13, 1
  %1244 = icmp sgt i32 %13, 0
  %1245 = add i32 %13, -2
  %1246 = zext i32 %1245 to i64
  %1247 = zext i32 %13 to i64
  %1248 = add nuw i32 %5, 1
  %1249 = icmp eq i32 %13, 1
  br label %1250

1250:                                             ; preds = %1242, %1381
  %1251 = phi double [ 0.000000e+00, %1242 ], [ %1332, %1381 ]
  %1252 = phi i32 [ 0, %1242 ], [ %1333, %1381 ]
  %1253 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1243, label %1254, label %1323

1254:                                             ; preds = %1250, %1313
  %1255 = phi i32 [ %1322, %1313 ], [ 0, %1250 ]
  %1256 = phi i64 [ %1264, %1313 ], [ %1247, %1250 ]
  %1257 = phi i64 [ %1321, %1313 ], [ %1246, %1250 ]
  %1258 = phi i32 [ %1319, %1313 ], [ %1253, %1250 ]
  %1259 = sub i32 %1245, %1255
  %1260 = tail call i32 @llvm.smin.i32(i32 %1259, i32 0)
  %1261 = sub i32 %1259, %1260
  %1262 = zext i32 %1261 to i64
  %1263 = add nuw nsw i64 %1262, 1
  %1264 = add nsw i64 %1256, -1
  %1265 = icmp ult i32 %1261, 31
  br i1 %1265, label %1301, label %1266

1266:                                             ; preds = %1254
  %1267 = and i64 %1263, 8589934560
  %1268 = sub i64 %1257, %1267
  br label %1269

1269:                                             ; preds = %1269, %1266
  %1270 = phi i64 [ 0, %1266 ], [ %1293, %1269 ]
  %1271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1289, %1269 ]
  %1272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1290, %1269 ]
  %1273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1291, %1269 ]
  %1274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1292, %1269 ]
  %1275 = sub i64 %1257, %1270
  %1276 = getelementptr inbounds i32, ptr %9, i64 %1275
  %1277 = getelementptr inbounds i32, ptr %1276, i64 -7
  %1278 = load <8 x i32>, ptr %1277, align 4, !tbaa !5
  %1279 = shufflevector <8 x i32> %1278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1280 = getelementptr inbounds i32, ptr %1276, i64 -15
  %1281 = load <8 x i32>, ptr %1280, align 4, !tbaa !5
  %1282 = shufflevector <8 x i32> %1281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1283 = getelementptr inbounds i32, ptr %1276, i64 -23
  %1284 = load <8 x i32>, ptr %1283, align 4, !tbaa !5
  %1285 = shufflevector <8 x i32> %1284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1286 = getelementptr inbounds i32, ptr %1276, i64 -31
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = mul <8 x i32> %1279, %1271
  %1290 = mul <8 x i32> %1282, %1272
  %1291 = mul <8 x i32> %1285, %1273
  %1292 = mul <8 x i32> %1288, %1274
  %1293 = add nuw i64 %1270, 32
  %1294 = icmp eq i64 %1293, %1267
  br i1 %1294, label %1295, label %1269, !llvm.loop !524

1295:                                             ; preds = %1269
  %1296 = mul <8 x i32> %1290, %1289
  %1297 = mul <8 x i32> %1291, %1296
  %1298 = mul <8 x i32> %1292, %1297
  %1299 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1298)
  %1300 = icmp eq i64 %1263, %1267
  br i1 %1300, label %1313, label %1301

1301:                                             ; preds = %1254, %1295
  %1302 = phi i64 [ %1257, %1254 ], [ %1268, %1295 ]
  %1303 = phi i32 [ 1, %1254 ], [ %1299, %1295 ]
  br label %1304

1304:                                             ; preds = %1301, %1304
  %1305 = phi i64 [ %1310, %1304 ], [ %1302, %1301 ]
  %1306 = phi i32 [ %1309, %1304 ], [ %1303, %1301 ]
  %1307 = getelementptr inbounds i32, ptr %9, i64 %1305
  %1308 = load i32, ptr %1307, align 4, !tbaa !5
  %1309 = mul nsw i32 %1308, %1306
  %1310 = add nsw i64 %1305, -1
  %1311 = trunc i64 %1305 to i32
  %1312 = icmp sgt i32 %1311, 0
  br i1 %1312, label %1304, label %1313, !llvm.loop !525

1313:                                             ; preds = %1304, %1295
  %1314 = phi i32 [ %1299, %1295 ], [ %1309, %1304 ]
  %1315 = and i64 %1264, 4294967295
  %1316 = getelementptr inbounds i32, ptr %6, i64 %1315
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1314
  %1319 = add nsw i32 %1318, %1258
  %1320 = icmp sgt i64 %1256, 2
  %1321 = add nsw i64 %1257, -1
  %1322 = add i32 %1255, 1
  br i1 %1320, label %1254, label %1323, !llvm.loop !526

1323:                                             ; preds = %1313, %1250
  %1324 = phi i32 [ %1253, %1250 ], [ %1319, %1313 ]
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds double, ptr %2, i64 %1325
  %1327 = load double, ptr %1326, align 8, !tbaa !18
  %1328 = getelementptr inbounds i16, ptr %1219, i64 %1325
  %1329 = load i16, ptr %1328, align 2, !tbaa !78
  %1330 = sitofp i16 %1329 to double
  %1331 = fmul fast double %1327, %1330
  %1332 = fadd fast double %1331, %1251
  store double %1332, ptr %1221, align 8, !tbaa !18
  %1333 = add nuw nsw i32 %1252, 1
  br i1 %1244, label %1334, label %1381

1334:                                             ; preds = %1323
  %1335 = load i32, ptr %4, align 4, !tbaa !5
  %1336 = load i32, ptr %12, align 4, !tbaa !5
  %1337 = add nsw i32 %1336, -1
  %1338 = icmp slt i32 %1335, %1337
  br i1 %1338, label %1358, label %1339

1339:                                             ; preds = %1334
  %1340 = icmp eq i32 %1335, %1337
  br i1 %1340, label %1341, label %1374

1341:                                             ; preds = %1339
  store i32 0, ptr %4, align 4, !tbaa !5
  %1342 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1342, ptr %6, align 4, !tbaa !5
  br i1 %1249, label %1381, label %1343

1343:                                             ; preds = %1341, %1368
  %1344 = phi i64 [ %1372, %1368 ], [ 1, %1341 ]
  %1345 = getelementptr inbounds i32, ptr %4, i64 %1344
  %1346 = load i32, ptr %1345, align 4, !tbaa !5
  %1347 = getelementptr inbounds i32, ptr %12, i64 %1344
  %1348 = load i32, ptr %1347, align 4, !tbaa !5
  %1349 = add nsw i32 %1348, -1
  %1350 = icmp slt i32 %1346, %1349
  br i1 %1350, label %1351, label %1366

1351:                                             ; preds = %1343
  br i1 %1338, label %1358, label %1352

1352:                                             ; preds = %1351
  %1353 = getelementptr inbounds i32, ptr %7, i64 %1344
  %1354 = load i32, ptr %1353, align 4, !tbaa !5
  %1355 = getelementptr inbounds i32, ptr %6, i64 %1344
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = add nsw i32 %1356, %1354
  store i32 %1357, ptr %1355, align 4, !tbaa !5
  br label %1376

1358:                                             ; preds = %1334, %1351
  %1359 = phi i32 [ %1346, %1351 ], [ %1335, %1334 ]
  %1360 = phi ptr [ %1345, %1351 ], [ %4, %1334 ]
  %1361 = phi i64 [ %1344, %1351 ], [ 0, %1334 ]
  %1362 = add nsw i32 %1359, 1
  store i32 %1362, ptr %1360, align 4, !tbaa !5
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1361
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1361
  br label %1376

1366:                                             ; preds = %1343
  %1367 = icmp eq i32 %1346, %1349
  br i1 %1367, label %1368, label %1374

1368:                                             ; preds = %1366
  store i32 0, ptr %1345, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %8, i64 %1344
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1344
  store i32 %1370, ptr %1371, align 4, !tbaa !5
  %1372 = add nuw nsw i64 %1344, 1
  %1373 = icmp eq i64 %1372, %1247
  br i1 %1373, label %1381, label %1343, !llvm.loop !527

1374:                                             ; preds = %1339, %1366
  %1375 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1376:                                             ; preds = %1352, %1358
  %1377 = phi ptr [ %1365, %1358 ], [ %1345, %1352 ]
  %1378 = phi i32 [ %1364, %1358 ], [ 1, %1352 ]
  %1379 = load i32, ptr %1377, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1378
  store i32 %1380, ptr %1377, align 4, !tbaa !5
  br label %1381

1381:                                             ; preds = %1368, %1376, %1341, %1323
  %1382 = icmp eq i32 %1333, %5
  br i1 %1382, label %3010, label %1250, !llvm.loop !528

1383:                                             ; preds = %1233, %1518
  %1384 = phi double [ 0.000000e+00, %1233 ], [ %1466, %1518 ]
  %1385 = phi i32 [ 0, %1233 ], [ %1467, %1518 ]
  %1386 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1234, label %1387, label %1456

1387:                                             ; preds = %1383, %1446
  %1388 = phi i32 [ %1455, %1446 ], [ 0, %1383 ]
  %1389 = phi i64 [ %1397, %1446 ], [ %1238, %1383 ]
  %1390 = phi i64 [ %1454, %1446 ], [ %1237, %1383 ]
  %1391 = phi i32 [ %1452, %1446 ], [ %1386, %1383 ]
  %1392 = sub i32 %1236, %1388
  %1393 = tail call i32 @llvm.smin.i32(i32 %1392, i32 0)
  %1394 = sub i32 %1392, %1393
  %1395 = zext i32 %1394 to i64
  %1396 = add nuw nsw i64 %1395, 1
  %1397 = add nsw i64 %1389, -1
  %1398 = icmp ult i32 %1394, 31
  br i1 %1398, label %1434, label %1399

1399:                                             ; preds = %1387
  %1400 = and i64 %1396, 8589934560
  %1401 = sub i64 %1390, %1400
  br label %1402

1402:                                             ; preds = %1402, %1399
  %1403 = phi i64 [ 0, %1399 ], [ %1426, %1402 ]
  %1404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1399 ], [ %1422, %1402 ]
  %1405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1399 ], [ %1423, %1402 ]
  %1406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1399 ], [ %1424, %1402 ]
  %1407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1399 ], [ %1425, %1402 ]
  %1408 = sub i64 %1390, %1403
  %1409 = getelementptr inbounds i32, ptr %11, i64 %1408
  %1410 = getelementptr inbounds i32, ptr %1409, i64 -7
  %1411 = load <8 x i32>, ptr %1410, align 4, !tbaa !5
  %1412 = shufflevector <8 x i32> %1411, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1413 = getelementptr inbounds i32, ptr %1409, i64 -15
  %1414 = load <8 x i32>, ptr %1413, align 4, !tbaa !5
  %1415 = shufflevector <8 x i32> %1414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1416 = getelementptr inbounds i32, ptr %1409, i64 -23
  %1417 = load <8 x i32>, ptr %1416, align 4, !tbaa !5
  %1418 = shufflevector <8 x i32> %1417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1419 = getelementptr inbounds i32, ptr %1409, i64 -31
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = mul <8 x i32> %1412, %1404
  %1423 = mul <8 x i32> %1415, %1405
  %1424 = mul <8 x i32> %1418, %1406
  %1425 = mul <8 x i32> %1421, %1407
  %1426 = add nuw i64 %1403, 32
  %1427 = icmp eq i64 %1426, %1400
  br i1 %1427, label %1428, label %1402, !llvm.loop !529

1428:                                             ; preds = %1402
  %1429 = mul <8 x i32> %1423, %1422
  %1430 = mul <8 x i32> %1424, %1429
  %1431 = mul <8 x i32> %1425, %1430
  %1432 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1431)
  %1433 = icmp eq i64 %1396, %1400
  br i1 %1433, label %1446, label %1434

1434:                                             ; preds = %1387, %1428
  %1435 = phi i64 [ %1390, %1387 ], [ %1401, %1428 ]
  %1436 = phi i32 [ 1, %1387 ], [ %1432, %1428 ]
  br label %1437

1437:                                             ; preds = %1434, %1437
  %1438 = phi i64 [ %1443, %1437 ], [ %1435, %1434 ]
  %1439 = phi i32 [ %1442, %1437 ], [ %1436, %1434 ]
  %1440 = getelementptr inbounds i32, ptr %11, i64 %1438
  %1441 = load i32, ptr %1440, align 4, !tbaa !5
  %1442 = mul nsw i32 %1441, %1439
  %1443 = add nsw i64 %1438, -1
  %1444 = trunc i64 %1438 to i32
  %1445 = icmp sgt i32 %1444, 0
  br i1 %1445, label %1437, label %1446, !llvm.loop !530

1446:                                             ; preds = %1437, %1428
  %1447 = phi i32 [ %1432, %1428 ], [ %1442, %1437 ]
  %1448 = and i64 %1397, 4294967295
  %1449 = getelementptr inbounds i32, ptr %6, i64 %1448
  %1450 = load i32, ptr %1449, align 4, !tbaa !5
  %1451 = mul nsw i32 %1450, %1447
  %1452 = add nsw i32 %1451, %1391
  %1453 = icmp sgt i64 %1389, 2
  %1454 = add nsw i64 %1390, -1
  %1455 = add i32 %1388, 1
  br i1 %1453, label %1387, label %1456, !llvm.loop !531

1456:                                             ; preds = %1446, %1383
  %1457 = phi i32 [ %1386, %1383 ], [ %1452, %1446 ]
  %1458 = icmp slt i32 %1457, %5
  br i1 %1458, label %1461, label %1459

1459:                                             ; preds = %1456
  %1460 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

1461:                                             ; preds = %1456
  %1462 = sext i32 %1457 to i64
  %1463 = getelementptr inbounds i16, ptr %1219, i64 %1462
  %1464 = load i16, ptr %1463, align 2, !tbaa !78
  %1465 = sitofp i16 %1464 to double
  %1466 = fadd fast double %1384, %1465
  store double %1466, ptr %1221, align 8, !tbaa !18
  %1467 = add nuw nsw i32 %1385, 1
  br i1 %1235, label %1468, label %1518

1468:                                             ; preds = %1461
  %1469 = load i32, ptr %4, align 4, !tbaa !5
  %1470 = load i32, ptr %12, align 4, !tbaa !5
  %1471 = add nsw i32 %1470, -1
  %1472 = icmp slt i32 %1469, %1471
  br i1 %1472, label %1495, label %1473

1473:                                             ; preds = %1468
  %1474 = icmp eq i32 %1469, %1471
  br i1 %1474, label %1475, label %1511

1475:                                             ; preds = %1473
  store i32 0, ptr %4, align 4, !tbaa !5
  %1476 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1476, ptr %6, align 4, !tbaa !5
  br i1 %1240, label %1518, label %1477

1477:                                             ; preds = %1475, %1505
  %1478 = phi i64 [ %1509, %1505 ], [ 1, %1475 ]
  %1479 = getelementptr inbounds i32, ptr %4, i64 %1478
  %1480 = load i32, ptr %1479, align 4, !tbaa !5
  %1481 = getelementptr inbounds i32, ptr %12, i64 %1478
  %1482 = load i32, ptr %1481, align 4, !tbaa !5
  %1483 = add nsw i32 %1482, -1
  %1484 = icmp slt i32 %1480, %1483
  br i1 %1484, label %1485, label %1503

1485:                                             ; preds = %1477
  br i1 %1472, label %1495, label %1486

1486:                                             ; preds = %1485
  %1487 = shl i64 %1478, 32
  %1488 = add i64 %1487, -4294967296
  %1489 = ashr exact i64 %1488, 32
  %1490 = getelementptr inbounds i32, ptr %7, i64 %1489
  %1491 = load i32, ptr %1490, align 4, !tbaa !5
  %1492 = getelementptr inbounds i32, ptr %6, i64 %1478
  %1493 = load i32, ptr %1492, align 4, !tbaa !5
  %1494 = add nsw i32 %1493, %1491
  store i32 %1494, ptr %1492, align 4, !tbaa !5
  br label %1513

1495:                                             ; preds = %1468, %1485
  %1496 = phi i32 [ %1480, %1485 ], [ %1469, %1468 ]
  %1497 = phi ptr [ %1479, %1485 ], [ %4, %1468 ]
  %1498 = phi i64 [ %1478, %1485 ], [ 0, %1468 ]
  %1499 = add nsw i32 %1496, 1
  store i32 %1499, ptr %1497, align 4, !tbaa !5
  %1500 = getelementptr inbounds i32, ptr %7, i64 %1498
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = getelementptr inbounds i32, ptr %6, i64 %1498
  br label %1513

1503:                                             ; preds = %1477
  %1504 = icmp eq i32 %1480, %1483
  br i1 %1504, label %1505, label %1511

1505:                                             ; preds = %1503
  store i32 0, ptr %1479, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %8, i64 %1478
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = getelementptr inbounds i32, ptr %6, i64 %1478
  store i32 %1507, ptr %1508, align 4, !tbaa !5
  %1509 = add nuw nsw i64 %1478, 1
  %1510 = icmp eq i64 %1509, %1238
  br i1 %1510, label %1518, label %1477, !llvm.loop !532

1511:                                             ; preds = %1473, %1503
  %1512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1513:                                             ; preds = %1486, %1495
  %1514 = phi ptr [ %1502, %1495 ], [ %1479, %1486 ]
  %1515 = phi i32 [ %1501, %1495 ], [ 1, %1486 ]
  %1516 = load i32, ptr %1514, align 4, !tbaa !5
  %1517 = add nsw i32 %1516, %1515
  store i32 %1517, ptr %1514, align 4, !tbaa !5
  br label %1518

1518:                                             ; preds = %1505, %1513, %1475, %1461
  %1519 = icmp eq i32 %1467, %5
  br i1 %1519, label %3010, label %1383, !llvm.loop !533

1520:                                             ; preds = %1226
  %1521 = getelementptr inbounds i32, ptr %3, i64 %19
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = icmp eq i32 %1522, 0
  %1524 = icmp sgt i32 %5, 0
  br i1 %1523, label %1534, label %1525

1525:                                             ; preds = %1520
  br i1 %1524, label %1526, label %3010

1526:                                             ; preds = %1525
  %1527 = icmp sgt i32 %13, 1
  %1528 = icmp sgt i32 %13, 0
  %1529 = add i32 %13, -2
  %1530 = zext i32 %1529 to i64
  %1531 = zext i32 %13 to i64
  %1532 = add nuw i32 %5, 1
  %1533 = icmp eq i32 %13, 1
  br label %1673

1534:                                             ; preds = %1520
  br i1 %1524, label %1535, label %3010

1535:                                             ; preds = %1534
  %1536 = icmp sgt i32 %13, 1
  %1537 = icmp sgt i32 %13, 0
  %1538 = add i32 %13, -2
  %1539 = zext i32 %1538 to i64
  %1540 = zext i32 %13 to i64
  %1541 = add nuw i32 %5, 1
  %1542 = icmp eq i32 %13, 1
  br label %1543

1543:                                             ; preds = %1535, %1671
  %1544 = phi double [ 0.000000e+00, %1535 ], [ %1622, %1671 ]
  %1545 = phi i32 [ 0, %1535 ], [ %1623, %1671 ]
  %1546 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1536, label %1547, label %1616

1547:                                             ; preds = %1543, %1606
  %1548 = phi i32 [ %1615, %1606 ], [ 0, %1543 ]
  %1549 = phi i64 [ %1557, %1606 ], [ %1540, %1543 ]
  %1550 = phi i64 [ %1614, %1606 ], [ %1539, %1543 ]
  %1551 = phi i32 [ %1612, %1606 ], [ %1546, %1543 ]
  %1552 = sub i32 %1538, %1548
  %1553 = tail call i32 @llvm.smin.i32(i32 %1552, i32 0)
  %1554 = sub i32 %1552, %1553
  %1555 = zext i32 %1554 to i64
  %1556 = add nuw nsw i64 %1555, 1
  %1557 = add nsw i64 %1549, -1
  %1558 = icmp ult i32 %1554, 31
  br i1 %1558, label %1594, label %1559

1559:                                             ; preds = %1547
  %1560 = and i64 %1556, 8589934560
  %1561 = sub i64 %1550, %1560
  br label %1562

1562:                                             ; preds = %1562, %1559
  %1563 = phi i64 [ 0, %1559 ], [ %1586, %1562 ]
  %1564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1559 ], [ %1582, %1562 ]
  %1565 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1559 ], [ %1583, %1562 ]
  %1566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1559 ], [ %1584, %1562 ]
  %1567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1559 ], [ %1585, %1562 ]
  %1568 = sub i64 %1550, %1563
  %1569 = getelementptr inbounds i32, ptr %9, i64 %1568
  %1570 = getelementptr inbounds i32, ptr %1569, i64 -7
  %1571 = load <8 x i32>, ptr %1570, align 4, !tbaa !5
  %1572 = shufflevector <8 x i32> %1571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1573 = getelementptr inbounds i32, ptr %1569, i64 -15
  %1574 = load <8 x i32>, ptr %1573, align 4, !tbaa !5
  %1575 = shufflevector <8 x i32> %1574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1576 = getelementptr inbounds i32, ptr %1569, i64 -23
  %1577 = load <8 x i32>, ptr %1576, align 4, !tbaa !5
  %1578 = shufflevector <8 x i32> %1577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1579 = getelementptr inbounds i32, ptr %1569, i64 -31
  %1580 = load <8 x i32>, ptr %1579, align 4, !tbaa !5
  %1581 = shufflevector <8 x i32> %1580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1582 = mul <8 x i32> %1572, %1564
  %1583 = mul <8 x i32> %1575, %1565
  %1584 = mul <8 x i32> %1578, %1566
  %1585 = mul <8 x i32> %1581, %1567
  %1586 = add nuw i64 %1563, 32
  %1587 = icmp eq i64 %1586, %1560
  br i1 %1587, label %1588, label %1562, !llvm.loop !534

1588:                                             ; preds = %1562
  %1589 = mul <8 x i32> %1583, %1582
  %1590 = mul <8 x i32> %1584, %1589
  %1591 = mul <8 x i32> %1585, %1590
  %1592 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1591)
  %1593 = icmp eq i64 %1556, %1560
  br i1 %1593, label %1606, label %1594

1594:                                             ; preds = %1547, %1588
  %1595 = phi i64 [ %1550, %1547 ], [ %1561, %1588 ]
  %1596 = phi i32 [ 1, %1547 ], [ %1592, %1588 ]
  br label %1597

1597:                                             ; preds = %1594, %1597
  %1598 = phi i64 [ %1603, %1597 ], [ %1595, %1594 ]
  %1599 = phi i32 [ %1602, %1597 ], [ %1596, %1594 ]
  %1600 = getelementptr inbounds i32, ptr %9, i64 %1598
  %1601 = load i32, ptr %1600, align 4, !tbaa !5
  %1602 = mul nsw i32 %1601, %1599
  %1603 = add nsw i64 %1598, -1
  %1604 = trunc i64 %1598 to i32
  %1605 = icmp sgt i32 %1604, 0
  br i1 %1605, label %1597, label %1606, !llvm.loop !535

1606:                                             ; preds = %1597, %1588
  %1607 = phi i32 [ %1592, %1588 ], [ %1602, %1597 ]
  %1608 = and i64 %1557, 4294967295
  %1609 = getelementptr inbounds i32, ptr %6, i64 %1608
  %1610 = load i32, ptr %1609, align 4, !tbaa !5
  %1611 = mul nsw i32 %1610, %1607
  %1612 = add nsw i32 %1611, %1551
  %1613 = icmp sgt i64 %1549, 2
  %1614 = add nsw i64 %1550, -1
  %1615 = add i32 %1548, 1
  br i1 %1613, label %1547, label %1616, !llvm.loop !536

1616:                                             ; preds = %1606, %1543
  %1617 = phi i32 [ %1546, %1543 ], [ %1612, %1606 ]
  %1618 = sext i32 %1617 to i64
  %1619 = getelementptr inbounds i16, ptr %1219, i64 %1618
  %1620 = load i16, ptr %1619, align 2, !tbaa !78
  %1621 = sitofp i16 %1620 to double
  %1622 = fadd fast double %1544, %1621
  %1623 = add nuw nsw i32 %1545, 1
  br i1 %1537, label %1624, label %1671

1624:                                             ; preds = %1616
  %1625 = load i32, ptr %4, align 4, !tbaa !5
  %1626 = load i32, ptr %12, align 4, !tbaa !5
  %1627 = add nsw i32 %1626, -1
  %1628 = icmp slt i32 %1625, %1627
  br i1 %1628, label %1648, label %1629

1629:                                             ; preds = %1624
  %1630 = icmp eq i32 %1625, %1627
  br i1 %1630, label %1631, label %1664

1631:                                             ; preds = %1629
  store i32 0, ptr %4, align 4, !tbaa !5
  %1632 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1632, ptr %6, align 4, !tbaa !5
  br i1 %1542, label %1671, label %1633

1633:                                             ; preds = %1631, %1658
  %1634 = phi i64 [ %1662, %1658 ], [ 1, %1631 ]
  %1635 = getelementptr inbounds i32, ptr %4, i64 %1634
  %1636 = load i32, ptr %1635, align 4, !tbaa !5
  %1637 = getelementptr inbounds i32, ptr %12, i64 %1634
  %1638 = load i32, ptr %1637, align 4, !tbaa !5
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1636, %1639
  br i1 %1640, label %1641, label %1656

1641:                                             ; preds = %1633
  br i1 %1628, label %1648, label %1642

1642:                                             ; preds = %1641
  %1643 = getelementptr inbounds i32, ptr %7, i64 %1634
  %1644 = load i32, ptr %1643, align 4, !tbaa !5
  %1645 = getelementptr inbounds i32, ptr %6, i64 %1634
  %1646 = load i32, ptr %1645, align 4, !tbaa !5
  %1647 = add nsw i32 %1646, %1644
  store i32 %1647, ptr %1645, align 4, !tbaa !5
  br label %1666

1648:                                             ; preds = %1624, %1641
  %1649 = phi i32 [ %1636, %1641 ], [ %1625, %1624 ]
  %1650 = phi ptr [ %1635, %1641 ], [ %4, %1624 ]
  %1651 = phi i64 [ %1634, %1641 ], [ 0, %1624 ]
  %1652 = add nsw i32 %1649, 1
  store i32 %1652, ptr %1650, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %7, i64 %1651
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = getelementptr inbounds i32, ptr %6, i64 %1651
  br label %1666

1656:                                             ; preds = %1633
  %1657 = icmp eq i32 %1636, %1639
  br i1 %1657, label %1658, label %1664

1658:                                             ; preds = %1656
  store i32 0, ptr %1635, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %8, i64 %1634
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1634
  store i32 %1660, ptr %1661, align 4, !tbaa !5
  %1662 = add nuw nsw i64 %1634, 1
  %1663 = icmp eq i64 %1662, %1540
  br i1 %1663, label %1671, label %1633, !llvm.loop !537

1664:                                             ; preds = %1629, %1656
  store double %1622, ptr %1221, align 8, !tbaa !18
  %1665 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1666:                                             ; preds = %1642, %1648
  %1667 = phi ptr [ %1655, %1648 ], [ %1635, %1642 ]
  %1668 = phi i32 [ %1654, %1648 ], [ 1, %1642 ]
  %1669 = load i32, ptr %1667, align 4, !tbaa !5
  %1670 = add nsw i32 %1669, %1668
  store i32 %1670, ptr %1667, align 4, !tbaa !5
  br label %1671

1671:                                             ; preds = %1658, %1666, %1631, %1616
  %1672 = icmp eq i32 %1623, %5
  br i1 %1672, label %3006, label %1543, !llvm.loop !538

1673:                                             ; preds = %1526, %1808
  %1674 = phi double [ 0.000000e+00, %1526 ], [ %1756, %1808 ]
  %1675 = phi i32 [ 0, %1526 ], [ %1757, %1808 ]
  %1676 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1527, label %1677, label %1746

1677:                                             ; preds = %1673, %1736
  %1678 = phi i32 [ %1745, %1736 ], [ 0, %1673 ]
  %1679 = phi i64 [ %1687, %1736 ], [ %1531, %1673 ]
  %1680 = phi i64 [ %1744, %1736 ], [ %1530, %1673 ]
  %1681 = phi i32 [ %1742, %1736 ], [ %1676, %1673 ]
  %1682 = sub i32 %1529, %1678
  %1683 = tail call i32 @llvm.smin.i32(i32 %1682, i32 0)
  %1684 = sub i32 %1682, %1683
  %1685 = zext i32 %1684 to i64
  %1686 = add nuw nsw i64 %1685, 1
  %1687 = add nsw i64 %1679, -1
  %1688 = icmp ult i32 %1684, 31
  br i1 %1688, label %1724, label %1689

1689:                                             ; preds = %1677
  %1690 = and i64 %1686, 8589934560
  %1691 = sub i64 %1680, %1690
  br label %1692

1692:                                             ; preds = %1692, %1689
  %1693 = phi i64 [ 0, %1689 ], [ %1716, %1692 ]
  %1694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1689 ], [ %1712, %1692 ]
  %1695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1689 ], [ %1713, %1692 ]
  %1696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1689 ], [ %1714, %1692 ]
  %1697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1689 ], [ %1715, %1692 ]
  %1698 = sub i64 %1680, %1693
  %1699 = getelementptr inbounds i32, ptr %11, i64 %1698
  %1700 = getelementptr inbounds i32, ptr %1699, i64 -7
  %1701 = load <8 x i32>, ptr %1700, align 4, !tbaa !5
  %1702 = shufflevector <8 x i32> %1701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1703 = getelementptr inbounds i32, ptr %1699, i64 -15
  %1704 = load <8 x i32>, ptr %1703, align 4, !tbaa !5
  %1705 = shufflevector <8 x i32> %1704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1706 = getelementptr inbounds i32, ptr %1699, i64 -23
  %1707 = load <8 x i32>, ptr %1706, align 4, !tbaa !5
  %1708 = shufflevector <8 x i32> %1707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1709 = getelementptr inbounds i32, ptr %1699, i64 -31
  %1710 = load <8 x i32>, ptr %1709, align 4, !tbaa !5
  %1711 = shufflevector <8 x i32> %1710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1712 = mul <8 x i32> %1702, %1694
  %1713 = mul <8 x i32> %1705, %1695
  %1714 = mul <8 x i32> %1708, %1696
  %1715 = mul <8 x i32> %1711, %1697
  %1716 = add nuw i64 %1693, 32
  %1717 = icmp eq i64 %1716, %1690
  br i1 %1717, label %1718, label %1692, !llvm.loop !539

1718:                                             ; preds = %1692
  %1719 = mul <8 x i32> %1713, %1712
  %1720 = mul <8 x i32> %1714, %1719
  %1721 = mul <8 x i32> %1715, %1720
  %1722 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1721)
  %1723 = icmp eq i64 %1686, %1690
  br i1 %1723, label %1736, label %1724

1724:                                             ; preds = %1677, %1718
  %1725 = phi i64 [ %1680, %1677 ], [ %1691, %1718 ]
  %1726 = phi i32 [ 1, %1677 ], [ %1722, %1718 ]
  br label %1727

1727:                                             ; preds = %1724, %1727
  %1728 = phi i64 [ %1733, %1727 ], [ %1725, %1724 ]
  %1729 = phi i32 [ %1732, %1727 ], [ %1726, %1724 ]
  %1730 = getelementptr inbounds i32, ptr %11, i64 %1728
  %1731 = load i32, ptr %1730, align 4, !tbaa !5
  %1732 = mul nsw i32 %1731, %1729
  %1733 = add nsw i64 %1728, -1
  %1734 = trunc i64 %1728 to i32
  %1735 = icmp sgt i32 %1734, 0
  br i1 %1735, label %1727, label %1736, !llvm.loop !540

1736:                                             ; preds = %1727, %1718
  %1737 = phi i32 [ %1722, %1718 ], [ %1732, %1727 ]
  %1738 = and i64 %1687, 4294967295
  %1739 = getelementptr inbounds i32, ptr %6, i64 %1738
  %1740 = load i32, ptr %1739, align 4, !tbaa !5
  %1741 = mul nsw i32 %1740, %1737
  %1742 = add nsw i32 %1741, %1681
  %1743 = icmp sgt i64 %1679, 2
  %1744 = add nsw i64 %1680, -1
  %1745 = add i32 %1678, 1
  br i1 %1743, label %1677, label %1746, !llvm.loop !541

1746:                                             ; preds = %1736, %1673
  %1747 = phi i32 [ %1676, %1673 ], [ %1742, %1736 ]
  %1748 = icmp slt i32 %1747, %5
  br i1 %1748, label %1751, label %1749

1749:                                             ; preds = %1746
  %1750 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

1751:                                             ; preds = %1746
  %1752 = sext i32 %1747 to i64
  %1753 = getelementptr inbounds i16, ptr %1219, i64 %1752
  %1754 = load i16, ptr %1753, align 2, !tbaa !78
  %1755 = sitofp i16 %1754 to double
  %1756 = fadd fast double %1674, %1755
  store double %1756, ptr %1221, align 8, !tbaa !18
  %1757 = add nuw nsw i32 %1675, 1
  br i1 %1528, label %1758, label %1808

1758:                                             ; preds = %1751
  %1759 = load i32, ptr %4, align 4, !tbaa !5
  %1760 = load i32, ptr %12, align 4, !tbaa !5
  %1761 = add nsw i32 %1760, -1
  %1762 = icmp slt i32 %1759, %1761
  br i1 %1762, label %1785, label %1763

1763:                                             ; preds = %1758
  %1764 = icmp eq i32 %1759, %1761
  br i1 %1764, label %1765, label %1801

1765:                                             ; preds = %1763
  store i32 0, ptr %4, align 4, !tbaa !5
  %1766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1766, ptr %6, align 4, !tbaa !5
  br i1 %1533, label %1808, label %1767

1767:                                             ; preds = %1765, %1795
  %1768 = phi i64 [ %1799, %1795 ], [ 1, %1765 ]
  %1769 = getelementptr inbounds i32, ptr %4, i64 %1768
  %1770 = load i32, ptr %1769, align 4, !tbaa !5
  %1771 = getelementptr inbounds i32, ptr %12, i64 %1768
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = add nsw i32 %1772, -1
  %1774 = icmp slt i32 %1770, %1773
  br i1 %1774, label %1775, label %1793

1775:                                             ; preds = %1767
  br i1 %1762, label %1785, label %1776

1776:                                             ; preds = %1775
  %1777 = shl i64 %1768, 32
  %1778 = add i64 %1777, -4294967296
  %1779 = ashr exact i64 %1778, 32
  %1780 = getelementptr inbounds i32, ptr %7, i64 %1779
  %1781 = load i32, ptr %1780, align 4, !tbaa !5
  %1782 = getelementptr inbounds i32, ptr %6, i64 %1768
  %1783 = load i32, ptr %1782, align 4, !tbaa !5
  %1784 = add nsw i32 %1783, %1781
  store i32 %1784, ptr %1782, align 4, !tbaa !5
  br label %1803

1785:                                             ; preds = %1758, %1775
  %1786 = phi i32 [ %1770, %1775 ], [ %1759, %1758 ]
  %1787 = phi ptr [ %1769, %1775 ], [ %4, %1758 ]
  %1788 = phi i64 [ %1768, %1775 ], [ 0, %1758 ]
  %1789 = add nsw i32 %1786, 1
  store i32 %1789, ptr %1787, align 4, !tbaa !5
  %1790 = getelementptr inbounds i32, ptr %7, i64 %1788
  %1791 = load i32, ptr %1790, align 4, !tbaa !5
  %1792 = getelementptr inbounds i32, ptr %6, i64 %1788
  br label %1803

1793:                                             ; preds = %1767
  %1794 = icmp eq i32 %1770, %1773
  br i1 %1794, label %1795, label %1801

1795:                                             ; preds = %1793
  store i32 0, ptr %1769, align 4, !tbaa !5
  %1796 = getelementptr inbounds i32, ptr %8, i64 %1768
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = getelementptr inbounds i32, ptr %6, i64 %1768
  store i32 %1797, ptr %1798, align 4, !tbaa !5
  %1799 = add nuw nsw i64 %1768, 1
  %1800 = icmp eq i64 %1799, %1531
  br i1 %1800, label %1808, label %1767, !llvm.loop !542

1801:                                             ; preds = %1763, %1793
  %1802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1803:                                             ; preds = %1776, %1785
  %1804 = phi ptr [ %1792, %1785 ], [ %1769, %1776 ]
  %1805 = phi i32 [ %1791, %1785 ], [ 1, %1776 ]
  %1806 = load i32, ptr %1804, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, %1805
  store i32 %1807, ptr %1804, align 4, !tbaa !5
  br label %1808

1808:                                             ; preds = %1795, %1803, %1765, %1751
  %1809 = icmp eq i32 %1757, %5
  br i1 %1809, label %3010, label %1673, !llvm.loop !543

1810:                                             ; preds = %1226
  %1811 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 792, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3010

1812:                                             ; preds = %18
  %1813 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1814 = load ptr, ptr %1813, align 8, !tbaa !9
  %1815 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1816 = load ptr, ptr %1815, align 8, !tbaa !9
  store float 0.000000e+00, ptr %1816, align 4, !tbaa !162
  %1817 = icmp eq i32 %13, 0
  br i1 %1817, label %1818, label %1821

1818:                                             ; preds = %1812
  %1819 = load i16, ptr %1814, align 2, !tbaa !78
  %1820 = sitofp i16 %1819 to float
  store float %1820, ptr %1816, align 4, !tbaa !162
  br label %3010

1821:                                             ; preds = %1812
  switch i32 %1, label %2409 [
    i32 1, label %1822
    i32 0, label %2119
  ]

1822:                                             ; preds = %1821
  %1823 = getelementptr inbounds i32, ptr %3, i64 %19
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = icmp eq i32 %1824, 0
  %1826 = icmp sgt i32 %5, 0
  br i1 %1825, label %1836, label %1827

1827:                                             ; preds = %1822
  br i1 %1826, label %1828, label %3010

1828:                                             ; preds = %1827
  %1829 = icmp sgt i32 %13, 1
  %1830 = icmp sgt i32 %13, 0
  %1831 = add i32 %13, -2
  %1832 = zext i32 %1831 to i64
  %1833 = zext i32 %13 to i64
  %1834 = add nuw i32 %5, 1
  %1835 = icmp eq i32 %13, 1
  br label %1980

1836:                                             ; preds = %1822
  br i1 %1826, label %1837, label %3010

1837:                                             ; preds = %1836
  %1838 = icmp sgt i32 %13, 1
  %1839 = icmp sgt i32 %13, 0
  %1840 = add i32 %13, -2
  %1841 = zext i32 %1840 to i64
  %1842 = zext i32 %13 to i64
  %1843 = add nuw i32 %5, 1
  %1844 = icmp eq i32 %13, 1
  br label %1845

1845:                                             ; preds = %1837, %1978
  %1846 = phi float [ 0.000000e+00, %1837 ], [ %1929, %1978 ]
  %1847 = phi i32 [ 0, %1837 ], [ %1930, %1978 ]
  %1848 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1838, label %1849, label %1918

1849:                                             ; preds = %1845, %1908
  %1850 = phi i32 [ %1917, %1908 ], [ 0, %1845 ]
  %1851 = phi i64 [ %1859, %1908 ], [ %1842, %1845 ]
  %1852 = phi i64 [ %1916, %1908 ], [ %1841, %1845 ]
  %1853 = phi i32 [ %1914, %1908 ], [ %1848, %1845 ]
  %1854 = sub i32 %1840, %1850
  %1855 = tail call i32 @llvm.smin.i32(i32 %1854, i32 0)
  %1856 = sub i32 %1854, %1855
  %1857 = zext i32 %1856 to i64
  %1858 = add nuw nsw i64 %1857, 1
  %1859 = add nsw i64 %1851, -1
  %1860 = icmp ult i32 %1856, 31
  br i1 %1860, label %1896, label %1861

1861:                                             ; preds = %1849
  %1862 = and i64 %1858, 8589934560
  %1863 = sub i64 %1852, %1862
  br label %1864

1864:                                             ; preds = %1864, %1861
  %1865 = phi i64 [ 0, %1861 ], [ %1888, %1864 ]
  %1866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1884, %1864 ]
  %1867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1885, %1864 ]
  %1868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1886, %1864 ]
  %1869 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1887, %1864 ]
  %1870 = sub i64 %1852, %1865
  %1871 = getelementptr inbounds i32, ptr %9, i64 %1870
  %1872 = getelementptr inbounds i32, ptr %1871, i64 -7
  %1873 = load <8 x i32>, ptr %1872, align 4, !tbaa !5
  %1874 = shufflevector <8 x i32> %1873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1875 = getelementptr inbounds i32, ptr %1871, i64 -15
  %1876 = load <8 x i32>, ptr %1875, align 4, !tbaa !5
  %1877 = shufflevector <8 x i32> %1876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1878 = getelementptr inbounds i32, ptr %1871, i64 -23
  %1879 = load <8 x i32>, ptr %1878, align 4, !tbaa !5
  %1880 = shufflevector <8 x i32> %1879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1881 = getelementptr inbounds i32, ptr %1871, i64 -31
  %1882 = load <8 x i32>, ptr %1881, align 4, !tbaa !5
  %1883 = shufflevector <8 x i32> %1882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1884 = mul <8 x i32> %1874, %1866
  %1885 = mul <8 x i32> %1877, %1867
  %1886 = mul <8 x i32> %1880, %1868
  %1887 = mul <8 x i32> %1883, %1869
  %1888 = add nuw i64 %1865, 32
  %1889 = icmp eq i64 %1888, %1862
  br i1 %1889, label %1890, label %1864, !llvm.loop !544

1890:                                             ; preds = %1864
  %1891 = mul <8 x i32> %1885, %1884
  %1892 = mul <8 x i32> %1886, %1891
  %1893 = mul <8 x i32> %1887, %1892
  %1894 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1893)
  %1895 = icmp eq i64 %1858, %1862
  br i1 %1895, label %1908, label %1896

1896:                                             ; preds = %1849, %1890
  %1897 = phi i64 [ %1852, %1849 ], [ %1863, %1890 ]
  %1898 = phi i32 [ 1, %1849 ], [ %1894, %1890 ]
  br label %1899

1899:                                             ; preds = %1896, %1899
  %1900 = phi i64 [ %1905, %1899 ], [ %1897, %1896 ]
  %1901 = phi i32 [ %1904, %1899 ], [ %1898, %1896 ]
  %1902 = getelementptr inbounds i32, ptr %9, i64 %1900
  %1903 = load i32, ptr %1902, align 4, !tbaa !5
  %1904 = mul nsw i32 %1903, %1901
  %1905 = add nsw i64 %1900, -1
  %1906 = trunc i64 %1900 to i32
  %1907 = icmp sgt i32 %1906, 0
  br i1 %1907, label %1899, label %1908, !llvm.loop !545

1908:                                             ; preds = %1899, %1890
  %1909 = phi i32 [ %1894, %1890 ], [ %1904, %1899 ]
  %1910 = and i64 %1859, 4294967295
  %1911 = getelementptr inbounds i32, ptr %6, i64 %1910
  %1912 = load i32, ptr %1911, align 4, !tbaa !5
  %1913 = mul nsw i32 %1912, %1909
  %1914 = add nsw i32 %1913, %1853
  %1915 = icmp sgt i64 %1851, 2
  %1916 = add nsw i64 %1852, -1
  %1917 = add i32 %1850, 1
  br i1 %1915, label %1849, label %1918, !llvm.loop !546

1918:                                             ; preds = %1908, %1845
  %1919 = phi i32 [ %1848, %1845 ], [ %1914, %1908 ]
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds double, ptr %2, i64 %1920
  %1922 = load double, ptr %1921, align 8, !tbaa !18
  %1923 = getelementptr inbounds i16, ptr %1814, i64 %1920
  %1924 = load i16, ptr %1923, align 2, !tbaa !78
  %1925 = fpext float %1846 to double
  %1926 = sitofp i16 %1924 to double
  %1927 = fmul fast double %1922, %1926
  %1928 = fadd fast double %1927, %1925
  %1929 = fptrunc double %1928 to float
  %1930 = add nuw nsw i32 %1847, 1
  br i1 %1839, label %1931, label %1978

1931:                                             ; preds = %1918
  %1932 = load i32, ptr %4, align 4, !tbaa !5
  %1933 = load i32, ptr %12, align 4, !tbaa !5
  %1934 = add nsw i32 %1933, -1
  %1935 = icmp slt i32 %1932, %1934
  br i1 %1935, label %1955, label %1936

1936:                                             ; preds = %1931
  %1937 = icmp eq i32 %1932, %1934
  br i1 %1937, label %1938, label %1971

1938:                                             ; preds = %1936
  store i32 0, ptr %4, align 4, !tbaa !5
  %1939 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1939, ptr %6, align 4, !tbaa !5
  br i1 %1844, label %1978, label %1940

1940:                                             ; preds = %1938, %1965
  %1941 = phi i64 [ %1969, %1965 ], [ 1, %1938 ]
  %1942 = getelementptr inbounds i32, ptr %4, i64 %1941
  %1943 = load i32, ptr %1942, align 4, !tbaa !5
  %1944 = getelementptr inbounds i32, ptr %12, i64 %1941
  %1945 = load i32, ptr %1944, align 4, !tbaa !5
  %1946 = add nsw i32 %1945, -1
  %1947 = icmp slt i32 %1943, %1946
  br i1 %1947, label %1948, label %1963

1948:                                             ; preds = %1940
  br i1 %1935, label %1955, label %1949

1949:                                             ; preds = %1948
  %1950 = getelementptr inbounds i32, ptr %7, i64 %1941
  %1951 = load i32, ptr %1950, align 4, !tbaa !5
  %1952 = getelementptr inbounds i32, ptr %6, i64 %1941
  %1953 = load i32, ptr %1952, align 4, !tbaa !5
  %1954 = add nsw i32 %1953, %1951
  store i32 %1954, ptr %1952, align 4, !tbaa !5
  br label %1973

1955:                                             ; preds = %1931, %1948
  %1956 = phi i32 [ %1943, %1948 ], [ %1932, %1931 ]
  %1957 = phi ptr [ %1942, %1948 ], [ %4, %1931 ]
  %1958 = phi i64 [ %1941, %1948 ], [ 0, %1931 ]
  %1959 = add nsw i32 %1956, 1
  store i32 %1959, ptr %1957, align 4, !tbaa !5
  %1960 = getelementptr inbounds i32, ptr %7, i64 %1958
  %1961 = load i32, ptr %1960, align 4, !tbaa !5
  %1962 = getelementptr inbounds i32, ptr %6, i64 %1958
  br label %1973

1963:                                             ; preds = %1940
  %1964 = icmp eq i32 %1943, %1946
  br i1 %1964, label %1965, label %1971

1965:                                             ; preds = %1963
  store i32 0, ptr %1942, align 4, !tbaa !5
  %1966 = getelementptr inbounds i32, ptr %8, i64 %1941
  %1967 = load i32, ptr %1966, align 4, !tbaa !5
  %1968 = getelementptr inbounds i32, ptr %6, i64 %1941
  store i32 %1967, ptr %1968, align 4, !tbaa !5
  %1969 = add nuw nsw i64 %1941, 1
  %1970 = icmp eq i64 %1969, %1842
  br i1 %1970, label %1978, label %1940, !llvm.loop !547

1971:                                             ; preds = %1936, %1963
  store float %1929, ptr %1816, align 4, !tbaa !162
  %1972 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

1973:                                             ; preds = %1949, %1955
  %1974 = phi ptr [ %1962, %1955 ], [ %1942, %1949 ]
  %1975 = phi i32 [ %1961, %1955 ], [ 1, %1949 ]
  %1976 = load i32, ptr %1974, align 4, !tbaa !5
  %1977 = add nsw i32 %1976, %1975
  store i32 %1977, ptr %1974, align 4, !tbaa !5
  br label %1978

1978:                                             ; preds = %1965, %1973, %1938, %1918
  %1979 = icmp eq i32 %1930, %5
  br i1 %1979, label %3007, label %1845, !llvm.loop !548

1980:                                             ; preds = %1828, %2117
  %1981 = phi float [ 0.000000e+00, %1828 ], [ %2065, %2117 ]
  %1982 = phi i32 [ 0, %1828 ], [ %2066, %2117 ]
  %1983 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1829, label %1984, label %2053

1984:                                             ; preds = %1980, %2043
  %1985 = phi i32 [ %2052, %2043 ], [ 0, %1980 ]
  %1986 = phi i64 [ %1994, %2043 ], [ %1833, %1980 ]
  %1987 = phi i64 [ %2051, %2043 ], [ %1832, %1980 ]
  %1988 = phi i32 [ %2049, %2043 ], [ %1983, %1980 ]
  %1989 = sub i32 %1831, %1985
  %1990 = tail call i32 @llvm.smin.i32(i32 %1989, i32 0)
  %1991 = sub i32 %1989, %1990
  %1992 = zext i32 %1991 to i64
  %1993 = add nuw nsw i64 %1992, 1
  %1994 = add nsw i64 %1986, -1
  %1995 = icmp ult i32 %1991, 31
  br i1 %1995, label %2031, label %1996

1996:                                             ; preds = %1984
  %1997 = and i64 %1993, 8589934560
  %1998 = sub i64 %1987, %1997
  br label %1999

1999:                                             ; preds = %1999, %1996
  %2000 = phi i64 [ 0, %1996 ], [ %2023, %1999 ]
  %2001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1996 ], [ %2019, %1999 ]
  %2002 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1996 ], [ %2020, %1999 ]
  %2003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1996 ], [ %2021, %1999 ]
  %2004 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1996 ], [ %2022, %1999 ]
  %2005 = sub i64 %1987, %2000
  %2006 = getelementptr inbounds i32, ptr %11, i64 %2005
  %2007 = getelementptr inbounds i32, ptr %2006, i64 -7
  %2008 = load <8 x i32>, ptr %2007, align 4, !tbaa !5
  %2009 = shufflevector <8 x i32> %2008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2010 = getelementptr inbounds i32, ptr %2006, i64 -15
  %2011 = load <8 x i32>, ptr %2010, align 4, !tbaa !5
  %2012 = shufflevector <8 x i32> %2011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2013 = getelementptr inbounds i32, ptr %2006, i64 -23
  %2014 = load <8 x i32>, ptr %2013, align 4, !tbaa !5
  %2015 = shufflevector <8 x i32> %2014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2016 = getelementptr inbounds i32, ptr %2006, i64 -31
  %2017 = load <8 x i32>, ptr %2016, align 4, !tbaa !5
  %2018 = shufflevector <8 x i32> %2017, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2019 = mul <8 x i32> %2009, %2001
  %2020 = mul <8 x i32> %2012, %2002
  %2021 = mul <8 x i32> %2015, %2003
  %2022 = mul <8 x i32> %2018, %2004
  %2023 = add nuw i64 %2000, 32
  %2024 = icmp eq i64 %2023, %1997
  br i1 %2024, label %2025, label %1999, !llvm.loop !549

2025:                                             ; preds = %1999
  %2026 = mul <8 x i32> %2020, %2019
  %2027 = mul <8 x i32> %2021, %2026
  %2028 = mul <8 x i32> %2022, %2027
  %2029 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2028)
  %2030 = icmp eq i64 %1993, %1997
  br i1 %2030, label %2043, label %2031

2031:                                             ; preds = %1984, %2025
  %2032 = phi i64 [ %1987, %1984 ], [ %1998, %2025 ]
  %2033 = phi i32 [ 1, %1984 ], [ %2029, %2025 ]
  br label %2034

2034:                                             ; preds = %2031, %2034
  %2035 = phi i64 [ %2040, %2034 ], [ %2032, %2031 ]
  %2036 = phi i32 [ %2039, %2034 ], [ %2033, %2031 ]
  %2037 = getelementptr inbounds i32, ptr %11, i64 %2035
  %2038 = load i32, ptr %2037, align 4, !tbaa !5
  %2039 = mul nsw i32 %2038, %2036
  %2040 = add nsw i64 %2035, -1
  %2041 = trunc i64 %2035 to i32
  %2042 = icmp sgt i32 %2041, 0
  br i1 %2042, label %2034, label %2043, !llvm.loop !550

2043:                                             ; preds = %2034, %2025
  %2044 = phi i32 [ %2029, %2025 ], [ %2039, %2034 ]
  %2045 = and i64 %1994, 4294967295
  %2046 = getelementptr inbounds i32, ptr %6, i64 %2045
  %2047 = load i32, ptr %2046, align 4, !tbaa !5
  %2048 = mul nsw i32 %2047, %2044
  %2049 = add nsw i32 %2048, %1988
  %2050 = icmp sgt i64 %1986, 2
  %2051 = add nsw i64 %1987, -1
  %2052 = add i32 %1985, 1
  br i1 %2050, label %1984, label %2053, !llvm.loop !551

2053:                                             ; preds = %2043, %1980
  %2054 = phi i32 [ %1983, %1980 ], [ %2049, %2043 ]
  %2055 = icmp slt i32 %2054, %5
  br i1 %2055, label %2058, label %2056

2056:                                             ; preds = %2053
  %2057 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

2058:                                             ; preds = %2053
  %2059 = sext i32 %2054 to i64
  %2060 = getelementptr inbounds i16, ptr %1814, i64 %2059
  %2061 = load i16, ptr %2060, align 2, !tbaa !78
  %2062 = fpext float %1981 to double
  %2063 = sitofp i16 %2061 to double
  %2064 = fadd fast double %2062, %2063
  %2065 = fptrunc double %2064 to float
  store float %2065, ptr %1816, align 4, !tbaa !162
  %2066 = add nuw nsw i32 %1982, 1
  br i1 %1830, label %2067, label %2117

2067:                                             ; preds = %2058
  %2068 = load i32, ptr %4, align 4, !tbaa !5
  %2069 = load i32, ptr %12, align 4, !tbaa !5
  %2070 = add nsw i32 %2069, -1
  %2071 = icmp slt i32 %2068, %2070
  br i1 %2071, label %2094, label %2072

2072:                                             ; preds = %2067
  %2073 = icmp eq i32 %2068, %2070
  br i1 %2073, label %2074, label %2110

2074:                                             ; preds = %2072
  store i32 0, ptr %4, align 4, !tbaa !5
  %2075 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2075, ptr %6, align 4, !tbaa !5
  br i1 %1835, label %2117, label %2076

2076:                                             ; preds = %2074, %2104
  %2077 = phi i64 [ %2108, %2104 ], [ 1, %2074 ]
  %2078 = getelementptr inbounds i32, ptr %4, i64 %2077
  %2079 = load i32, ptr %2078, align 4, !tbaa !5
  %2080 = getelementptr inbounds i32, ptr %12, i64 %2077
  %2081 = load i32, ptr %2080, align 4, !tbaa !5
  %2082 = add nsw i32 %2081, -1
  %2083 = icmp slt i32 %2079, %2082
  br i1 %2083, label %2084, label %2102

2084:                                             ; preds = %2076
  br i1 %2071, label %2094, label %2085

2085:                                             ; preds = %2084
  %2086 = shl i64 %2077, 32
  %2087 = add i64 %2086, -4294967296
  %2088 = ashr exact i64 %2087, 32
  %2089 = getelementptr inbounds i32, ptr %7, i64 %2088
  %2090 = load i32, ptr %2089, align 4, !tbaa !5
  %2091 = getelementptr inbounds i32, ptr %6, i64 %2077
  %2092 = load i32, ptr %2091, align 4, !tbaa !5
  %2093 = add nsw i32 %2092, %2090
  store i32 %2093, ptr %2091, align 4, !tbaa !5
  br label %2112

2094:                                             ; preds = %2067, %2084
  %2095 = phi i32 [ %2079, %2084 ], [ %2068, %2067 ]
  %2096 = phi ptr [ %2078, %2084 ], [ %4, %2067 ]
  %2097 = phi i64 [ %2077, %2084 ], [ 0, %2067 ]
  %2098 = add nsw i32 %2095, 1
  store i32 %2098, ptr %2096, align 4, !tbaa !5
  %2099 = getelementptr inbounds i32, ptr %7, i64 %2097
  %2100 = load i32, ptr %2099, align 4, !tbaa !5
  %2101 = getelementptr inbounds i32, ptr %6, i64 %2097
  br label %2112

2102:                                             ; preds = %2076
  %2103 = icmp eq i32 %2079, %2082
  br i1 %2103, label %2104, label %2110

2104:                                             ; preds = %2102
  store i32 0, ptr %2078, align 4, !tbaa !5
  %2105 = getelementptr inbounds i32, ptr %8, i64 %2077
  %2106 = load i32, ptr %2105, align 4, !tbaa !5
  %2107 = getelementptr inbounds i32, ptr %6, i64 %2077
  store i32 %2106, ptr %2107, align 4, !tbaa !5
  %2108 = add nuw nsw i64 %2077, 1
  %2109 = icmp eq i64 %2108, %1833
  br i1 %2109, label %2117, label %2076, !llvm.loop !552

2110:                                             ; preds = %2072, %2102
  %2111 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2112:                                             ; preds = %2085, %2094
  %2113 = phi ptr [ %2101, %2094 ], [ %2078, %2085 ]
  %2114 = phi i32 [ %2100, %2094 ], [ 1, %2085 ]
  %2115 = load i32, ptr %2113, align 4, !tbaa !5
  %2116 = add nsw i32 %2115, %2114
  store i32 %2116, ptr %2113, align 4, !tbaa !5
  br label %2117

2117:                                             ; preds = %2104, %2112, %2074, %2058
  %2118 = icmp eq i32 %2066, %5
  br i1 %2118, label %3010, label %1980, !llvm.loop !553

2119:                                             ; preds = %1821
  %2120 = getelementptr inbounds i32, ptr %3, i64 %19
  %2121 = load i32, ptr %2120, align 4, !tbaa !5
  %2122 = icmp eq i32 %2121, 0
  %2123 = icmp sgt i32 %5, 0
  br i1 %2122, label %2133, label %2124

2124:                                             ; preds = %2119
  br i1 %2123, label %2125, label %3010

2125:                                             ; preds = %2124
  %2126 = icmp sgt i32 %13, 1
  %2127 = icmp sgt i32 %13, 0
  %2128 = add i32 %13, -2
  %2129 = zext i32 %2128 to i64
  %2130 = zext i32 %13 to i64
  %2131 = add nuw i32 %5, 1
  %2132 = icmp eq i32 %13, 1
  br label %2272

2133:                                             ; preds = %2119
  br i1 %2123, label %2134, label %3010

2134:                                             ; preds = %2133
  %2135 = icmp sgt i32 %13, 1
  %2136 = icmp sgt i32 %13, 0
  %2137 = add i32 %13, -2
  %2138 = zext i32 %2137 to i64
  %2139 = zext i32 %13 to i64
  %2140 = add nuw i32 %5, 1
  %2141 = icmp eq i32 %13, 1
  br label %2142

2142:                                             ; preds = %2134, %2270
  %2143 = phi float [ 0.000000e+00, %2134 ], [ %2221, %2270 ]
  %2144 = phi i32 [ 0, %2134 ], [ %2222, %2270 ]
  %2145 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2135, label %2146, label %2215

2146:                                             ; preds = %2142, %2205
  %2147 = phi i32 [ %2214, %2205 ], [ 0, %2142 ]
  %2148 = phi i64 [ %2156, %2205 ], [ %2139, %2142 ]
  %2149 = phi i64 [ %2213, %2205 ], [ %2138, %2142 ]
  %2150 = phi i32 [ %2211, %2205 ], [ %2145, %2142 ]
  %2151 = sub i32 %2137, %2147
  %2152 = tail call i32 @llvm.smin.i32(i32 %2151, i32 0)
  %2153 = sub i32 %2151, %2152
  %2154 = zext i32 %2153 to i64
  %2155 = add nuw nsw i64 %2154, 1
  %2156 = add nsw i64 %2148, -1
  %2157 = icmp ult i32 %2153, 31
  br i1 %2157, label %2193, label %2158

2158:                                             ; preds = %2146
  %2159 = and i64 %2155, 8589934560
  %2160 = sub i64 %2149, %2159
  br label %2161

2161:                                             ; preds = %2161, %2158
  %2162 = phi i64 [ 0, %2158 ], [ %2185, %2161 ]
  %2163 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2158 ], [ %2181, %2161 ]
  %2164 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2158 ], [ %2182, %2161 ]
  %2165 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2158 ], [ %2183, %2161 ]
  %2166 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2158 ], [ %2184, %2161 ]
  %2167 = sub i64 %2149, %2162
  %2168 = getelementptr inbounds i32, ptr %9, i64 %2167
  %2169 = getelementptr inbounds i32, ptr %2168, i64 -7
  %2170 = load <8 x i32>, ptr %2169, align 4, !tbaa !5
  %2171 = shufflevector <8 x i32> %2170, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2172 = getelementptr inbounds i32, ptr %2168, i64 -15
  %2173 = load <8 x i32>, ptr %2172, align 4, !tbaa !5
  %2174 = shufflevector <8 x i32> %2173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2175 = getelementptr inbounds i32, ptr %2168, i64 -23
  %2176 = load <8 x i32>, ptr %2175, align 4, !tbaa !5
  %2177 = shufflevector <8 x i32> %2176, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2178 = getelementptr inbounds i32, ptr %2168, i64 -31
  %2179 = load <8 x i32>, ptr %2178, align 4, !tbaa !5
  %2180 = shufflevector <8 x i32> %2179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2181 = mul <8 x i32> %2171, %2163
  %2182 = mul <8 x i32> %2174, %2164
  %2183 = mul <8 x i32> %2177, %2165
  %2184 = mul <8 x i32> %2180, %2166
  %2185 = add nuw i64 %2162, 32
  %2186 = icmp eq i64 %2185, %2159
  br i1 %2186, label %2187, label %2161, !llvm.loop !554

2187:                                             ; preds = %2161
  %2188 = mul <8 x i32> %2182, %2181
  %2189 = mul <8 x i32> %2183, %2188
  %2190 = mul <8 x i32> %2184, %2189
  %2191 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2190)
  %2192 = icmp eq i64 %2155, %2159
  br i1 %2192, label %2205, label %2193

2193:                                             ; preds = %2146, %2187
  %2194 = phi i64 [ %2149, %2146 ], [ %2160, %2187 ]
  %2195 = phi i32 [ 1, %2146 ], [ %2191, %2187 ]
  br label %2196

2196:                                             ; preds = %2193, %2196
  %2197 = phi i64 [ %2202, %2196 ], [ %2194, %2193 ]
  %2198 = phi i32 [ %2201, %2196 ], [ %2195, %2193 ]
  %2199 = getelementptr inbounds i32, ptr %9, i64 %2197
  %2200 = load i32, ptr %2199, align 4, !tbaa !5
  %2201 = mul nsw i32 %2200, %2198
  %2202 = add nsw i64 %2197, -1
  %2203 = trunc i64 %2197 to i32
  %2204 = icmp sgt i32 %2203, 0
  br i1 %2204, label %2196, label %2205, !llvm.loop !555

2205:                                             ; preds = %2196, %2187
  %2206 = phi i32 [ %2191, %2187 ], [ %2201, %2196 ]
  %2207 = and i64 %2156, 4294967295
  %2208 = getelementptr inbounds i32, ptr %6, i64 %2207
  %2209 = load i32, ptr %2208, align 4, !tbaa !5
  %2210 = mul nsw i32 %2209, %2206
  %2211 = add nsw i32 %2210, %2150
  %2212 = icmp sgt i64 %2148, 2
  %2213 = add nsw i64 %2149, -1
  %2214 = add i32 %2147, 1
  br i1 %2212, label %2146, label %2215, !llvm.loop !556

2215:                                             ; preds = %2205, %2142
  %2216 = phi i32 [ %2145, %2142 ], [ %2211, %2205 ]
  %2217 = sext i32 %2216 to i64
  %2218 = getelementptr inbounds i16, ptr %1814, i64 %2217
  %2219 = load i16, ptr %2218, align 2, !tbaa !78
  %2220 = sitofp i16 %2219 to float
  %2221 = fadd fast float %2143, %2220
  %2222 = add nuw nsw i32 %2144, 1
  br i1 %2136, label %2223, label %2270

2223:                                             ; preds = %2215
  %2224 = load i32, ptr %4, align 4, !tbaa !5
  %2225 = load i32, ptr %12, align 4, !tbaa !5
  %2226 = add nsw i32 %2225, -1
  %2227 = icmp slt i32 %2224, %2226
  br i1 %2227, label %2247, label %2228

2228:                                             ; preds = %2223
  %2229 = icmp eq i32 %2224, %2226
  br i1 %2229, label %2230, label %2263

2230:                                             ; preds = %2228
  store i32 0, ptr %4, align 4, !tbaa !5
  %2231 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2231, ptr %6, align 4, !tbaa !5
  br i1 %2141, label %2270, label %2232

2232:                                             ; preds = %2230, %2257
  %2233 = phi i64 [ %2261, %2257 ], [ 1, %2230 ]
  %2234 = getelementptr inbounds i32, ptr %4, i64 %2233
  %2235 = load i32, ptr %2234, align 4, !tbaa !5
  %2236 = getelementptr inbounds i32, ptr %12, i64 %2233
  %2237 = load i32, ptr %2236, align 4, !tbaa !5
  %2238 = add nsw i32 %2237, -1
  %2239 = icmp slt i32 %2235, %2238
  br i1 %2239, label %2240, label %2255

2240:                                             ; preds = %2232
  br i1 %2227, label %2247, label %2241

2241:                                             ; preds = %2240
  %2242 = getelementptr inbounds i32, ptr %7, i64 %2233
  %2243 = load i32, ptr %2242, align 4, !tbaa !5
  %2244 = getelementptr inbounds i32, ptr %6, i64 %2233
  %2245 = load i32, ptr %2244, align 4, !tbaa !5
  %2246 = add nsw i32 %2245, %2243
  store i32 %2246, ptr %2244, align 4, !tbaa !5
  br label %2265

2247:                                             ; preds = %2223, %2240
  %2248 = phi i32 [ %2235, %2240 ], [ %2224, %2223 ]
  %2249 = phi ptr [ %2234, %2240 ], [ %4, %2223 ]
  %2250 = phi i64 [ %2233, %2240 ], [ 0, %2223 ]
  %2251 = add nsw i32 %2248, 1
  store i32 %2251, ptr %2249, align 4, !tbaa !5
  %2252 = getelementptr inbounds i32, ptr %7, i64 %2250
  %2253 = load i32, ptr %2252, align 4, !tbaa !5
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2250
  br label %2265

2255:                                             ; preds = %2232
  %2256 = icmp eq i32 %2235, %2238
  br i1 %2256, label %2257, label %2263

2257:                                             ; preds = %2255
  store i32 0, ptr %2234, align 4, !tbaa !5
  %2258 = getelementptr inbounds i32, ptr %8, i64 %2233
  %2259 = load i32, ptr %2258, align 4, !tbaa !5
  %2260 = getelementptr inbounds i32, ptr %6, i64 %2233
  store i32 %2259, ptr %2260, align 4, !tbaa !5
  %2261 = add nuw nsw i64 %2233, 1
  %2262 = icmp eq i64 %2261, %2139
  br i1 %2262, label %2270, label %2232, !llvm.loop !557

2263:                                             ; preds = %2228, %2255
  store float %2221, ptr %1816, align 4, !tbaa !162
  %2264 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2265:                                             ; preds = %2241, %2247
  %2266 = phi ptr [ %2254, %2247 ], [ %2234, %2241 ]
  %2267 = phi i32 [ %2253, %2247 ], [ 1, %2241 ]
  %2268 = load i32, ptr %2266, align 4, !tbaa !5
  %2269 = add nsw i32 %2268, %2267
  store i32 %2269, ptr %2266, align 4, !tbaa !5
  br label %2270

2270:                                             ; preds = %2257, %2265, %2230, %2215
  %2271 = icmp eq i32 %2222, %5
  br i1 %2271, label %3008, label %2142, !llvm.loop !558

2272:                                             ; preds = %2125, %2407
  %2273 = phi float [ 0.000000e+00, %2125 ], [ %2355, %2407 ]
  %2274 = phi i32 [ 0, %2125 ], [ %2356, %2407 ]
  %2275 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2126, label %2276, label %2345

2276:                                             ; preds = %2272, %2335
  %2277 = phi i32 [ %2344, %2335 ], [ 0, %2272 ]
  %2278 = phi i64 [ %2286, %2335 ], [ %2130, %2272 ]
  %2279 = phi i64 [ %2343, %2335 ], [ %2129, %2272 ]
  %2280 = phi i32 [ %2341, %2335 ], [ %2275, %2272 ]
  %2281 = sub i32 %2128, %2277
  %2282 = tail call i32 @llvm.smin.i32(i32 %2281, i32 0)
  %2283 = sub i32 %2281, %2282
  %2284 = zext i32 %2283 to i64
  %2285 = add nuw nsw i64 %2284, 1
  %2286 = add nsw i64 %2278, -1
  %2287 = icmp ult i32 %2283, 31
  br i1 %2287, label %2323, label %2288

2288:                                             ; preds = %2276
  %2289 = and i64 %2285, 8589934560
  %2290 = sub i64 %2279, %2289
  br label %2291

2291:                                             ; preds = %2291, %2288
  %2292 = phi i64 [ 0, %2288 ], [ %2315, %2291 ]
  %2293 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2311, %2291 ]
  %2294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2312, %2291 ]
  %2295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2313, %2291 ]
  %2296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2314, %2291 ]
  %2297 = sub i64 %2279, %2292
  %2298 = getelementptr inbounds i32, ptr %11, i64 %2297
  %2299 = getelementptr inbounds i32, ptr %2298, i64 -7
  %2300 = load <8 x i32>, ptr %2299, align 4, !tbaa !5
  %2301 = shufflevector <8 x i32> %2300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2302 = getelementptr inbounds i32, ptr %2298, i64 -15
  %2303 = load <8 x i32>, ptr %2302, align 4, !tbaa !5
  %2304 = shufflevector <8 x i32> %2303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2305 = getelementptr inbounds i32, ptr %2298, i64 -23
  %2306 = load <8 x i32>, ptr %2305, align 4, !tbaa !5
  %2307 = shufflevector <8 x i32> %2306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2308 = getelementptr inbounds i32, ptr %2298, i64 -31
  %2309 = load <8 x i32>, ptr %2308, align 4, !tbaa !5
  %2310 = shufflevector <8 x i32> %2309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2311 = mul <8 x i32> %2301, %2293
  %2312 = mul <8 x i32> %2304, %2294
  %2313 = mul <8 x i32> %2307, %2295
  %2314 = mul <8 x i32> %2310, %2296
  %2315 = add nuw i64 %2292, 32
  %2316 = icmp eq i64 %2315, %2289
  br i1 %2316, label %2317, label %2291, !llvm.loop !559

2317:                                             ; preds = %2291
  %2318 = mul <8 x i32> %2312, %2311
  %2319 = mul <8 x i32> %2313, %2318
  %2320 = mul <8 x i32> %2314, %2319
  %2321 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2320)
  %2322 = icmp eq i64 %2285, %2289
  br i1 %2322, label %2335, label %2323

2323:                                             ; preds = %2276, %2317
  %2324 = phi i64 [ %2279, %2276 ], [ %2290, %2317 ]
  %2325 = phi i32 [ 1, %2276 ], [ %2321, %2317 ]
  br label %2326

2326:                                             ; preds = %2323, %2326
  %2327 = phi i64 [ %2332, %2326 ], [ %2324, %2323 ]
  %2328 = phi i32 [ %2331, %2326 ], [ %2325, %2323 ]
  %2329 = getelementptr inbounds i32, ptr %11, i64 %2327
  %2330 = load i32, ptr %2329, align 4, !tbaa !5
  %2331 = mul nsw i32 %2330, %2328
  %2332 = add nsw i64 %2327, -1
  %2333 = trunc i64 %2327 to i32
  %2334 = icmp sgt i32 %2333, 0
  br i1 %2334, label %2326, label %2335, !llvm.loop !560

2335:                                             ; preds = %2326, %2317
  %2336 = phi i32 [ %2321, %2317 ], [ %2331, %2326 ]
  %2337 = and i64 %2286, 4294967295
  %2338 = getelementptr inbounds i32, ptr %6, i64 %2337
  %2339 = load i32, ptr %2338, align 4, !tbaa !5
  %2340 = mul nsw i32 %2339, %2336
  %2341 = add nsw i32 %2340, %2280
  %2342 = icmp sgt i64 %2278, 2
  %2343 = add nsw i64 %2279, -1
  %2344 = add i32 %2277, 1
  br i1 %2342, label %2276, label %2345, !llvm.loop !561

2345:                                             ; preds = %2335, %2272
  %2346 = phi i32 [ %2275, %2272 ], [ %2341, %2335 ]
  %2347 = icmp slt i32 %2346, %5
  br i1 %2347, label %2350, label %2348

2348:                                             ; preds = %2345
  %2349 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

2350:                                             ; preds = %2345
  %2351 = sext i32 %2346 to i64
  %2352 = getelementptr inbounds i16, ptr %1814, i64 %2351
  %2353 = load i16, ptr %2352, align 2, !tbaa !78
  %2354 = sitofp i16 %2353 to float
  %2355 = fadd fast float %2273, %2354
  store float %2355, ptr %1816, align 4, !tbaa !162
  %2356 = add nuw nsw i32 %2274, 1
  br i1 %2127, label %2357, label %2407

2357:                                             ; preds = %2350
  %2358 = load i32, ptr %4, align 4, !tbaa !5
  %2359 = load i32, ptr %12, align 4, !tbaa !5
  %2360 = add nsw i32 %2359, -1
  %2361 = icmp slt i32 %2358, %2360
  br i1 %2361, label %2384, label %2362

2362:                                             ; preds = %2357
  %2363 = icmp eq i32 %2358, %2360
  br i1 %2363, label %2364, label %2400

2364:                                             ; preds = %2362
  store i32 0, ptr %4, align 4, !tbaa !5
  %2365 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2365, ptr %6, align 4, !tbaa !5
  br i1 %2132, label %2407, label %2366

2366:                                             ; preds = %2364, %2394
  %2367 = phi i64 [ %2398, %2394 ], [ 1, %2364 ]
  %2368 = getelementptr inbounds i32, ptr %4, i64 %2367
  %2369 = load i32, ptr %2368, align 4, !tbaa !5
  %2370 = getelementptr inbounds i32, ptr %12, i64 %2367
  %2371 = load i32, ptr %2370, align 4, !tbaa !5
  %2372 = add nsw i32 %2371, -1
  %2373 = icmp slt i32 %2369, %2372
  br i1 %2373, label %2374, label %2392

2374:                                             ; preds = %2366
  br i1 %2361, label %2384, label %2375

2375:                                             ; preds = %2374
  %2376 = shl i64 %2367, 32
  %2377 = add i64 %2376, -4294967296
  %2378 = ashr exact i64 %2377, 32
  %2379 = getelementptr inbounds i32, ptr %7, i64 %2378
  %2380 = load i32, ptr %2379, align 4, !tbaa !5
  %2381 = getelementptr inbounds i32, ptr %6, i64 %2367
  %2382 = load i32, ptr %2381, align 4, !tbaa !5
  %2383 = add nsw i32 %2382, %2380
  store i32 %2383, ptr %2381, align 4, !tbaa !5
  br label %2402

2384:                                             ; preds = %2357, %2374
  %2385 = phi i32 [ %2369, %2374 ], [ %2358, %2357 ]
  %2386 = phi ptr [ %2368, %2374 ], [ %4, %2357 ]
  %2387 = phi i64 [ %2367, %2374 ], [ 0, %2357 ]
  %2388 = add nsw i32 %2385, 1
  store i32 %2388, ptr %2386, align 4, !tbaa !5
  %2389 = getelementptr inbounds i32, ptr %7, i64 %2387
  %2390 = load i32, ptr %2389, align 4, !tbaa !5
  %2391 = getelementptr inbounds i32, ptr %6, i64 %2387
  br label %2402

2392:                                             ; preds = %2366
  %2393 = icmp eq i32 %2369, %2372
  br i1 %2393, label %2394, label %2400

2394:                                             ; preds = %2392
  store i32 0, ptr %2368, align 4, !tbaa !5
  %2395 = getelementptr inbounds i32, ptr %8, i64 %2367
  %2396 = load i32, ptr %2395, align 4, !tbaa !5
  %2397 = getelementptr inbounds i32, ptr %6, i64 %2367
  store i32 %2396, ptr %2397, align 4, !tbaa !5
  %2398 = add nuw nsw i64 %2367, 1
  %2399 = icmp eq i64 %2398, %2130
  br i1 %2399, label %2407, label %2366, !llvm.loop !562

2400:                                             ; preds = %2362, %2392
  %2401 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2402:                                             ; preds = %2375, %2384
  %2403 = phi ptr [ %2391, %2384 ], [ %2368, %2375 ]
  %2404 = phi i32 [ %2390, %2384 ], [ 1, %2375 ]
  %2405 = load i32, ptr %2403, align 4, !tbaa !5
  %2406 = add nsw i32 %2405, %2404
  store i32 %2406, ptr %2403, align 4, !tbaa !5
  br label %2407

2407:                                             ; preds = %2394, %2402, %2364, %2350
  %2408 = icmp eq i32 %2356, %5
  br i1 %2408, label %3010, label %2272, !llvm.loop !563

2409:                                             ; preds = %1821
  %2410 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 796, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3010

2411:                                             ; preds = %18
  %2412 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2413 = load ptr, ptr %2412, align 8, !tbaa !9
  %2414 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2415 = load ptr, ptr %2414, align 8, !tbaa !9
  store double 0.000000e+00, ptr %2415, align 8, !tbaa !18
  %2416 = icmp eq i32 %13, 0
  br i1 %2416, label %2417, label %2420

2417:                                             ; preds = %2411
  %2418 = load i16, ptr %2413, align 2, !tbaa !78
  %2419 = sitofp i16 %2418 to double
  store double %2419, ptr %2415, align 8, !tbaa !18
  br label %3010

2420:                                             ; preds = %2411
  switch i32 %1, label %3004 [
    i32 1, label %2421
    i32 0, label %2714
  ]

2421:                                             ; preds = %2420
  %2422 = getelementptr inbounds i32, ptr %3, i64 %19
  %2423 = load i32, ptr %2422, align 4, !tbaa !5
  %2424 = icmp eq i32 %2423, 0
  %2425 = icmp sgt i32 %5, 0
  br i1 %2424, label %2435, label %2426

2426:                                             ; preds = %2421
  br i1 %2425, label %2427, label %3010

2427:                                             ; preds = %2426
  %2428 = icmp sgt i32 %13, 1
  %2429 = icmp sgt i32 %13, 0
  %2430 = add i32 %13, -2
  %2431 = zext i32 %2430 to i64
  %2432 = zext i32 %13 to i64
  %2433 = add nuw i32 %5, 1
  %2434 = icmp eq i32 %13, 1
  br label %2577

2435:                                             ; preds = %2421
  br i1 %2425, label %2436, label %3010

2436:                                             ; preds = %2435
  %2437 = icmp sgt i32 %13, 1
  %2438 = icmp sgt i32 %13, 0
  %2439 = add i32 %13, -2
  %2440 = zext i32 %2439 to i64
  %2441 = zext i32 %13 to i64
  %2442 = add nuw i32 %5, 1
  %2443 = icmp eq i32 %13, 1
  br label %2444

2444:                                             ; preds = %2436, %2575
  %2445 = phi double [ 0.000000e+00, %2436 ], [ %2526, %2575 ]
  %2446 = phi i32 [ 0, %2436 ], [ %2527, %2575 ]
  %2447 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2437, label %2448, label %2517

2448:                                             ; preds = %2444, %2507
  %2449 = phi i32 [ %2516, %2507 ], [ 0, %2444 ]
  %2450 = phi i64 [ %2458, %2507 ], [ %2441, %2444 ]
  %2451 = phi i64 [ %2515, %2507 ], [ %2440, %2444 ]
  %2452 = phi i32 [ %2513, %2507 ], [ %2447, %2444 ]
  %2453 = sub i32 %2439, %2449
  %2454 = tail call i32 @llvm.smin.i32(i32 %2453, i32 0)
  %2455 = sub i32 %2453, %2454
  %2456 = zext i32 %2455 to i64
  %2457 = add nuw nsw i64 %2456, 1
  %2458 = add nsw i64 %2450, -1
  %2459 = icmp ult i32 %2455, 31
  br i1 %2459, label %2495, label %2460

2460:                                             ; preds = %2448
  %2461 = and i64 %2457, 8589934560
  %2462 = sub i64 %2451, %2461
  br label %2463

2463:                                             ; preds = %2463, %2460
  %2464 = phi i64 [ 0, %2460 ], [ %2487, %2463 ]
  %2465 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2460 ], [ %2483, %2463 ]
  %2466 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2460 ], [ %2484, %2463 ]
  %2467 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2460 ], [ %2485, %2463 ]
  %2468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2460 ], [ %2486, %2463 ]
  %2469 = sub i64 %2451, %2464
  %2470 = getelementptr inbounds i32, ptr %9, i64 %2469
  %2471 = getelementptr inbounds i32, ptr %2470, i64 -7
  %2472 = load <8 x i32>, ptr %2471, align 4, !tbaa !5
  %2473 = shufflevector <8 x i32> %2472, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2474 = getelementptr inbounds i32, ptr %2470, i64 -15
  %2475 = load <8 x i32>, ptr %2474, align 4, !tbaa !5
  %2476 = shufflevector <8 x i32> %2475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2477 = getelementptr inbounds i32, ptr %2470, i64 -23
  %2478 = load <8 x i32>, ptr %2477, align 4, !tbaa !5
  %2479 = shufflevector <8 x i32> %2478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2480 = getelementptr inbounds i32, ptr %2470, i64 -31
  %2481 = load <8 x i32>, ptr %2480, align 4, !tbaa !5
  %2482 = shufflevector <8 x i32> %2481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2483 = mul <8 x i32> %2473, %2465
  %2484 = mul <8 x i32> %2476, %2466
  %2485 = mul <8 x i32> %2479, %2467
  %2486 = mul <8 x i32> %2482, %2468
  %2487 = add nuw i64 %2464, 32
  %2488 = icmp eq i64 %2487, %2461
  br i1 %2488, label %2489, label %2463, !llvm.loop !564

2489:                                             ; preds = %2463
  %2490 = mul <8 x i32> %2484, %2483
  %2491 = mul <8 x i32> %2485, %2490
  %2492 = mul <8 x i32> %2486, %2491
  %2493 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2492)
  %2494 = icmp eq i64 %2457, %2461
  br i1 %2494, label %2507, label %2495

2495:                                             ; preds = %2448, %2489
  %2496 = phi i64 [ %2451, %2448 ], [ %2462, %2489 ]
  %2497 = phi i32 [ 1, %2448 ], [ %2493, %2489 ]
  br label %2498

2498:                                             ; preds = %2495, %2498
  %2499 = phi i64 [ %2504, %2498 ], [ %2496, %2495 ]
  %2500 = phi i32 [ %2503, %2498 ], [ %2497, %2495 ]
  %2501 = getelementptr inbounds i32, ptr %9, i64 %2499
  %2502 = load i32, ptr %2501, align 4, !tbaa !5
  %2503 = mul nsw i32 %2502, %2500
  %2504 = add nsw i64 %2499, -1
  %2505 = trunc i64 %2499 to i32
  %2506 = icmp sgt i32 %2505, 0
  br i1 %2506, label %2498, label %2507, !llvm.loop !565

2507:                                             ; preds = %2498, %2489
  %2508 = phi i32 [ %2493, %2489 ], [ %2503, %2498 ]
  %2509 = and i64 %2458, 4294967295
  %2510 = getelementptr inbounds i32, ptr %6, i64 %2509
  %2511 = load i32, ptr %2510, align 4, !tbaa !5
  %2512 = mul nsw i32 %2511, %2508
  %2513 = add nsw i32 %2512, %2452
  %2514 = icmp sgt i64 %2450, 2
  %2515 = add nsw i64 %2451, -1
  %2516 = add i32 %2449, 1
  br i1 %2514, label %2448, label %2517, !llvm.loop !566

2517:                                             ; preds = %2507, %2444
  %2518 = phi i32 [ %2447, %2444 ], [ %2513, %2507 ]
  %2519 = sext i32 %2518 to i64
  %2520 = getelementptr inbounds double, ptr %2, i64 %2519
  %2521 = load double, ptr %2520, align 8, !tbaa !18
  %2522 = getelementptr inbounds i16, ptr %2413, i64 %2519
  %2523 = load i16, ptr %2522, align 2, !tbaa !78
  %2524 = sitofp i16 %2523 to double
  %2525 = fmul fast double %2521, %2524
  %2526 = fadd fast double %2525, %2445
  store double %2526, ptr %2415, align 8, !tbaa !18
  %2527 = add nuw nsw i32 %2446, 1
  br i1 %2438, label %2528, label %2575

2528:                                             ; preds = %2517
  %2529 = load i32, ptr %4, align 4, !tbaa !5
  %2530 = load i32, ptr %12, align 4, !tbaa !5
  %2531 = add nsw i32 %2530, -1
  %2532 = icmp slt i32 %2529, %2531
  br i1 %2532, label %2552, label %2533

2533:                                             ; preds = %2528
  %2534 = icmp eq i32 %2529, %2531
  br i1 %2534, label %2535, label %2568

2535:                                             ; preds = %2533
  store i32 0, ptr %4, align 4, !tbaa !5
  %2536 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2536, ptr %6, align 4, !tbaa !5
  br i1 %2443, label %2575, label %2537

2537:                                             ; preds = %2535, %2562
  %2538 = phi i64 [ %2566, %2562 ], [ 1, %2535 ]
  %2539 = getelementptr inbounds i32, ptr %4, i64 %2538
  %2540 = load i32, ptr %2539, align 4, !tbaa !5
  %2541 = getelementptr inbounds i32, ptr %12, i64 %2538
  %2542 = load i32, ptr %2541, align 4, !tbaa !5
  %2543 = add nsw i32 %2542, -1
  %2544 = icmp slt i32 %2540, %2543
  br i1 %2544, label %2545, label %2560

2545:                                             ; preds = %2537
  br i1 %2532, label %2552, label %2546

2546:                                             ; preds = %2545
  %2547 = getelementptr inbounds i32, ptr %7, i64 %2538
  %2548 = load i32, ptr %2547, align 4, !tbaa !5
  %2549 = getelementptr inbounds i32, ptr %6, i64 %2538
  %2550 = load i32, ptr %2549, align 4, !tbaa !5
  %2551 = add nsw i32 %2550, %2548
  store i32 %2551, ptr %2549, align 4, !tbaa !5
  br label %2570

2552:                                             ; preds = %2528, %2545
  %2553 = phi i32 [ %2540, %2545 ], [ %2529, %2528 ]
  %2554 = phi ptr [ %2539, %2545 ], [ %4, %2528 ]
  %2555 = phi i64 [ %2538, %2545 ], [ 0, %2528 ]
  %2556 = add nsw i32 %2553, 1
  store i32 %2556, ptr %2554, align 4, !tbaa !5
  %2557 = getelementptr inbounds i32, ptr %7, i64 %2555
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = getelementptr inbounds i32, ptr %6, i64 %2555
  br label %2570

2560:                                             ; preds = %2537
  %2561 = icmp eq i32 %2540, %2543
  br i1 %2561, label %2562, label %2568

2562:                                             ; preds = %2560
  store i32 0, ptr %2539, align 4, !tbaa !5
  %2563 = getelementptr inbounds i32, ptr %8, i64 %2538
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = getelementptr inbounds i32, ptr %6, i64 %2538
  store i32 %2564, ptr %2565, align 4, !tbaa !5
  %2566 = add nuw nsw i64 %2538, 1
  %2567 = icmp eq i64 %2566, %2441
  br i1 %2567, label %2575, label %2537, !llvm.loop !567

2568:                                             ; preds = %2533, %2560
  %2569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2570:                                             ; preds = %2546, %2552
  %2571 = phi ptr [ %2559, %2552 ], [ %2539, %2546 ]
  %2572 = phi i32 [ %2558, %2552 ], [ 1, %2546 ]
  %2573 = load i32, ptr %2571, align 4, !tbaa !5
  %2574 = add nsw i32 %2573, %2572
  store i32 %2574, ptr %2571, align 4, !tbaa !5
  br label %2575

2575:                                             ; preds = %2562, %2570, %2535, %2517
  %2576 = icmp eq i32 %2527, %5
  br i1 %2576, label %3010, label %2444, !llvm.loop !568

2577:                                             ; preds = %2427, %2712
  %2578 = phi double [ 0.000000e+00, %2427 ], [ %2660, %2712 ]
  %2579 = phi i32 [ 0, %2427 ], [ %2661, %2712 ]
  %2580 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2428, label %2581, label %2650

2581:                                             ; preds = %2577, %2640
  %2582 = phi i32 [ %2649, %2640 ], [ 0, %2577 ]
  %2583 = phi i64 [ %2591, %2640 ], [ %2432, %2577 ]
  %2584 = phi i64 [ %2648, %2640 ], [ %2431, %2577 ]
  %2585 = phi i32 [ %2646, %2640 ], [ %2580, %2577 ]
  %2586 = sub i32 %2430, %2582
  %2587 = tail call i32 @llvm.smin.i32(i32 %2586, i32 0)
  %2588 = sub i32 %2586, %2587
  %2589 = zext i32 %2588 to i64
  %2590 = add nuw nsw i64 %2589, 1
  %2591 = add nsw i64 %2583, -1
  %2592 = icmp ult i32 %2588, 31
  br i1 %2592, label %2628, label %2593

2593:                                             ; preds = %2581
  %2594 = and i64 %2590, 8589934560
  %2595 = sub i64 %2584, %2594
  br label %2596

2596:                                             ; preds = %2596, %2593
  %2597 = phi i64 [ 0, %2593 ], [ %2620, %2596 ]
  %2598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2593 ], [ %2616, %2596 ]
  %2599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2593 ], [ %2617, %2596 ]
  %2600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2593 ], [ %2618, %2596 ]
  %2601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2593 ], [ %2619, %2596 ]
  %2602 = sub i64 %2584, %2597
  %2603 = getelementptr inbounds i32, ptr %11, i64 %2602
  %2604 = getelementptr inbounds i32, ptr %2603, i64 -7
  %2605 = load <8 x i32>, ptr %2604, align 4, !tbaa !5
  %2606 = shufflevector <8 x i32> %2605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2607 = getelementptr inbounds i32, ptr %2603, i64 -15
  %2608 = load <8 x i32>, ptr %2607, align 4, !tbaa !5
  %2609 = shufflevector <8 x i32> %2608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2610 = getelementptr inbounds i32, ptr %2603, i64 -23
  %2611 = load <8 x i32>, ptr %2610, align 4, !tbaa !5
  %2612 = shufflevector <8 x i32> %2611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2613 = getelementptr inbounds i32, ptr %2603, i64 -31
  %2614 = load <8 x i32>, ptr %2613, align 4, !tbaa !5
  %2615 = shufflevector <8 x i32> %2614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2616 = mul <8 x i32> %2606, %2598
  %2617 = mul <8 x i32> %2609, %2599
  %2618 = mul <8 x i32> %2612, %2600
  %2619 = mul <8 x i32> %2615, %2601
  %2620 = add nuw i64 %2597, 32
  %2621 = icmp eq i64 %2620, %2594
  br i1 %2621, label %2622, label %2596, !llvm.loop !569

2622:                                             ; preds = %2596
  %2623 = mul <8 x i32> %2617, %2616
  %2624 = mul <8 x i32> %2618, %2623
  %2625 = mul <8 x i32> %2619, %2624
  %2626 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2625)
  %2627 = icmp eq i64 %2590, %2594
  br i1 %2627, label %2640, label %2628

2628:                                             ; preds = %2581, %2622
  %2629 = phi i64 [ %2584, %2581 ], [ %2595, %2622 ]
  %2630 = phi i32 [ 1, %2581 ], [ %2626, %2622 ]
  br label %2631

2631:                                             ; preds = %2628, %2631
  %2632 = phi i64 [ %2637, %2631 ], [ %2629, %2628 ]
  %2633 = phi i32 [ %2636, %2631 ], [ %2630, %2628 ]
  %2634 = getelementptr inbounds i32, ptr %11, i64 %2632
  %2635 = load i32, ptr %2634, align 4, !tbaa !5
  %2636 = mul nsw i32 %2635, %2633
  %2637 = add nsw i64 %2632, -1
  %2638 = trunc i64 %2632 to i32
  %2639 = icmp sgt i32 %2638, 0
  br i1 %2639, label %2631, label %2640, !llvm.loop !570

2640:                                             ; preds = %2631, %2622
  %2641 = phi i32 [ %2626, %2622 ], [ %2636, %2631 ]
  %2642 = and i64 %2591, 4294967295
  %2643 = getelementptr inbounds i32, ptr %6, i64 %2642
  %2644 = load i32, ptr %2643, align 4, !tbaa !5
  %2645 = mul nsw i32 %2644, %2641
  %2646 = add nsw i32 %2645, %2585
  %2647 = icmp sgt i64 %2583, 2
  %2648 = add nsw i64 %2584, -1
  %2649 = add i32 %2582, 1
  br i1 %2647, label %2581, label %2650, !llvm.loop !571

2650:                                             ; preds = %2640, %2577
  %2651 = phi i32 [ %2580, %2577 ], [ %2646, %2640 ]
  %2652 = icmp slt i32 %2651, %5
  br i1 %2652, label %2655, label %2653

2653:                                             ; preds = %2650
  %2654 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

2655:                                             ; preds = %2650
  %2656 = sext i32 %2651 to i64
  %2657 = getelementptr inbounds i16, ptr %2413, i64 %2656
  %2658 = load i16, ptr %2657, align 2, !tbaa !78
  %2659 = sitofp i16 %2658 to double
  %2660 = fadd fast double %2578, %2659
  store double %2660, ptr %2415, align 8, !tbaa !18
  %2661 = add nuw nsw i32 %2579, 1
  br i1 %2429, label %2662, label %2712

2662:                                             ; preds = %2655
  %2663 = load i32, ptr %4, align 4, !tbaa !5
  %2664 = load i32, ptr %12, align 4, !tbaa !5
  %2665 = add nsw i32 %2664, -1
  %2666 = icmp slt i32 %2663, %2665
  br i1 %2666, label %2689, label %2667

2667:                                             ; preds = %2662
  %2668 = icmp eq i32 %2663, %2665
  br i1 %2668, label %2669, label %2705

2669:                                             ; preds = %2667
  store i32 0, ptr %4, align 4, !tbaa !5
  %2670 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2670, ptr %6, align 4, !tbaa !5
  br i1 %2434, label %2712, label %2671

2671:                                             ; preds = %2669, %2699
  %2672 = phi i64 [ %2703, %2699 ], [ 1, %2669 ]
  %2673 = getelementptr inbounds i32, ptr %4, i64 %2672
  %2674 = load i32, ptr %2673, align 4, !tbaa !5
  %2675 = getelementptr inbounds i32, ptr %12, i64 %2672
  %2676 = load i32, ptr %2675, align 4, !tbaa !5
  %2677 = add nsw i32 %2676, -1
  %2678 = icmp slt i32 %2674, %2677
  br i1 %2678, label %2679, label %2697

2679:                                             ; preds = %2671
  br i1 %2666, label %2689, label %2680

2680:                                             ; preds = %2679
  %2681 = shl i64 %2672, 32
  %2682 = add i64 %2681, -4294967296
  %2683 = ashr exact i64 %2682, 32
  %2684 = getelementptr inbounds i32, ptr %7, i64 %2683
  %2685 = load i32, ptr %2684, align 4, !tbaa !5
  %2686 = getelementptr inbounds i32, ptr %6, i64 %2672
  %2687 = load i32, ptr %2686, align 4, !tbaa !5
  %2688 = add nsw i32 %2687, %2685
  store i32 %2688, ptr %2686, align 4, !tbaa !5
  br label %2707

2689:                                             ; preds = %2662, %2679
  %2690 = phi i32 [ %2674, %2679 ], [ %2663, %2662 ]
  %2691 = phi ptr [ %2673, %2679 ], [ %4, %2662 ]
  %2692 = phi i64 [ %2672, %2679 ], [ 0, %2662 ]
  %2693 = add nsw i32 %2690, 1
  store i32 %2693, ptr %2691, align 4, !tbaa !5
  %2694 = getelementptr inbounds i32, ptr %7, i64 %2692
  %2695 = load i32, ptr %2694, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2692
  br label %2707

2697:                                             ; preds = %2671
  %2698 = icmp eq i32 %2674, %2677
  br i1 %2698, label %2699, label %2705

2699:                                             ; preds = %2697
  store i32 0, ptr %2673, align 4, !tbaa !5
  %2700 = getelementptr inbounds i32, ptr %8, i64 %2672
  %2701 = load i32, ptr %2700, align 4, !tbaa !5
  %2702 = getelementptr inbounds i32, ptr %6, i64 %2672
  store i32 %2701, ptr %2702, align 4, !tbaa !5
  %2703 = add nuw nsw i64 %2672, 1
  %2704 = icmp eq i64 %2703, %2432
  br i1 %2704, label %2712, label %2671, !llvm.loop !572

2705:                                             ; preds = %2667, %2697
  %2706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2707:                                             ; preds = %2680, %2689
  %2708 = phi ptr [ %2696, %2689 ], [ %2673, %2680 ]
  %2709 = phi i32 [ %2695, %2689 ], [ 1, %2680 ]
  %2710 = load i32, ptr %2708, align 4, !tbaa !5
  %2711 = add nsw i32 %2710, %2709
  store i32 %2711, ptr %2708, align 4, !tbaa !5
  br label %2712

2712:                                             ; preds = %2699, %2707, %2669, %2655
  %2713 = icmp eq i32 %2661, %5
  br i1 %2713, label %3010, label %2577, !llvm.loop !573

2714:                                             ; preds = %2420
  %2715 = getelementptr inbounds i32, ptr %3, i64 %19
  %2716 = load i32, ptr %2715, align 4, !tbaa !5
  %2717 = icmp eq i32 %2716, 0
  %2718 = icmp sgt i32 %5, 0
  br i1 %2717, label %2728, label %2719

2719:                                             ; preds = %2714
  br i1 %2718, label %2720, label %3010

2720:                                             ; preds = %2719
  %2721 = icmp sgt i32 %13, 1
  %2722 = icmp sgt i32 %13, 0
  %2723 = add i32 %13, -2
  %2724 = zext i32 %2723 to i64
  %2725 = zext i32 %13 to i64
  %2726 = add nuw i32 %5, 1
  %2727 = icmp eq i32 %13, 1
  br label %2867

2728:                                             ; preds = %2714
  br i1 %2718, label %2729, label %3010

2729:                                             ; preds = %2728
  %2730 = icmp sgt i32 %13, 1
  %2731 = icmp sgt i32 %13, 0
  %2732 = add i32 %13, -2
  %2733 = zext i32 %2732 to i64
  %2734 = zext i32 %13 to i64
  %2735 = add nuw i32 %5, 1
  %2736 = icmp eq i32 %13, 1
  br label %2737

2737:                                             ; preds = %2729, %2865
  %2738 = phi double [ 0.000000e+00, %2729 ], [ %2816, %2865 ]
  %2739 = phi i32 [ 0, %2729 ], [ %2817, %2865 ]
  %2740 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2730, label %2741, label %2810

2741:                                             ; preds = %2737, %2800
  %2742 = phi i32 [ %2809, %2800 ], [ 0, %2737 ]
  %2743 = phi i64 [ %2751, %2800 ], [ %2734, %2737 ]
  %2744 = phi i64 [ %2808, %2800 ], [ %2733, %2737 ]
  %2745 = phi i32 [ %2806, %2800 ], [ %2740, %2737 ]
  %2746 = sub i32 %2732, %2742
  %2747 = tail call i32 @llvm.smin.i32(i32 %2746, i32 0)
  %2748 = sub i32 %2746, %2747
  %2749 = zext i32 %2748 to i64
  %2750 = add nuw nsw i64 %2749, 1
  %2751 = add nsw i64 %2743, -1
  %2752 = icmp ult i32 %2748, 31
  br i1 %2752, label %2788, label %2753

2753:                                             ; preds = %2741
  %2754 = and i64 %2750, 8589934560
  %2755 = sub i64 %2744, %2754
  br label %2756

2756:                                             ; preds = %2756, %2753
  %2757 = phi i64 [ 0, %2753 ], [ %2780, %2756 ]
  %2758 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2753 ], [ %2776, %2756 ]
  %2759 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2753 ], [ %2777, %2756 ]
  %2760 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2753 ], [ %2778, %2756 ]
  %2761 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2753 ], [ %2779, %2756 ]
  %2762 = sub i64 %2744, %2757
  %2763 = getelementptr inbounds i32, ptr %9, i64 %2762
  %2764 = getelementptr inbounds i32, ptr %2763, i64 -7
  %2765 = load <8 x i32>, ptr %2764, align 4, !tbaa !5
  %2766 = shufflevector <8 x i32> %2765, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2767 = getelementptr inbounds i32, ptr %2763, i64 -15
  %2768 = load <8 x i32>, ptr %2767, align 4, !tbaa !5
  %2769 = shufflevector <8 x i32> %2768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2770 = getelementptr inbounds i32, ptr %2763, i64 -23
  %2771 = load <8 x i32>, ptr %2770, align 4, !tbaa !5
  %2772 = shufflevector <8 x i32> %2771, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2773 = getelementptr inbounds i32, ptr %2763, i64 -31
  %2774 = load <8 x i32>, ptr %2773, align 4, !tbaa !5
  %2775 = shufflevector <8 x i32> %2774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2776 = mul <8 x i32> %2766, %2758
  %2777 = mul <8 x i32> %2769, %2759
  %2778 = mul <8 x i32> %2772, %2760
  %2779 = mul <8 x i32> %2775, %2761
  %2780 = add nuw i64 %2757, 32
  %2781 = icmp eq i64 %2780, %2754
  br i1 %2781, label %2782, label %2756, !llvm.loop !574

2782:                                             ; preds = %2756
  %2783 = mul <8 x i32> %2777, %2776
  %2784 = mul <8 x i32> %2778, %2783
  %2785 = mul <8 x i32> %2779, %2784
  %2786 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2785)
  %2787 = icmp eq i64 %2750, %2754
  br i1 %2787, label %2800, label %2788

2788:                                             ; preds = %2741, %2782
  %2789 = phi i64 [ %2744, %2741 ], [ %2755, %2782 ]
  %2790 = phi i32 [ 1, %2741 ], [ %2786, %2782 ]
  br label %2791

2791:                                             ; preds = %2788, %2791
  %2792 = phi i64 [ %2797, %2791 ], [ %2789, %2788 ]
  %2793 = phi i32 [ %2796, %2791 ], [ %2790, %2788 ]
  %2794 = getelementptr inbounds i32, ptr %9, i64 %2792
  %2795 = load i32, ptr %2794, align 4, !tbaa !5
  %2796 = mul nsw i32 %2795, %2793
  %2797 = add nsw i64 %2792, -1
  %2798 = trunc i64 %2792 to i32
  %2799 = icmp sgt i32 %2798, 0
  br i1 %2799, label %2791, label %2800, !llvm.loop !575

2800:                                             ; preds = %2791, %2782
  %2801 = phi i32 [ %2786, %2782 ], [ %2796, %2791 ]
  %2802 = and i64 %2751, 4294967295
  %2803 = getelementptr inbounds i32, ptr %6, i64 %2802
  %2804 = load i32, ptr %2803, align 4, !tbaa !5
  %2805 = mul nsw i32 %2804, %2801
  %2806 = add nsw i32 %2805, %2745
  %2807 = icmp sgt i64 %2743, 2
  %2808 = add nsw i64 %2744, -1
  %2809 = add i32 %2742, 1
  br i1 %2807, label %2741, label %2810, !llvm.loop !576

2810:                                             ; preds = %2800, %2737
  %2811 = phi i32 [ %2740, %2737 ], [ %2806, %2800 ]
  %2812 = sext i32 %2811 to i64
  %2813 = getelementptr inbounds i16, ptr %2413, i64 %2812
  %2814 = load i16, ptr %2813, align 2, !tbaa !78
  %2815 = sitofp i16 %2814 to double
  %2816 = fadd fast double %2738, %2815
  %2817 = add nuw nsw i32 %2739, 1
  br i1 %2731, label %2818, label %2865

2818:                                             ; preds = %2810
  %2819 = load i32, ptr %4, align 4, !tbaa !5
  %2820 = load i32, ptr %12, align 4, !tbaa !5
  %2821 = add nsw i32 %2820, -1
  %2822 = icmp slt i32 %2819, %2821
  br i1 %2822, label %2842, label %2823

2823:                                             ; preds = %2818
  %2824 = icmp eq i32 %2819, %2821
  br i1 %2824, label %2825, label %2858

2825:                                             ; preds = %2823
  store i32 0, ptr %4, align 4, !tbaa !5
  %2826 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2826, ptr %6, align 4, !tbaa !5
  br i1 %2736, label %2865, label %2827

2827:                                             ; preds = %2825, %2852
  %2828 = phi i64 [ %2856, %2852 ], [ 1, %2825 ]
  %2829 = getelementptr inbounds i32, ptr %4, i64 %2828
  %2830 = load i32, ptr %2829, align 4, !tbaa !5
  %2831 = getelementptr inbounds i32, ptr %12, i64 %2828
  %2832 = load i32, ptr %2831, align 4, !tbaa !5
  %2833 = add nsw i32 %2832, -1
  %2834 = icmp slt i32 %2830, %2833
  br i1 %2834, label %2835, label %2850

2835:                                             ; preds = %2827
  br i1 %2822, label %2842, label %2836

2836:                                             ; preds = %2835
  %2837 = getelementptr inbounds i32, ptr %7, i64 %2828
  %2838 = load i32, ptr %2837, align 4, !tbaa !5
  %2839 = getelementptr inbounds i32, ptr %6, i64 %2828
  %2840 = load i32, ptr %2839, align 4, !tbaa !5
  %2841 = add nsw i32 %2840, %2838
  store i32 %2841, ptr %2839, align 4, !tbaa !5
  br label %2860

2842:                                             ; preds = %2818, %2835
  %2843 = phi i32 [ %2830, %2835 ], [ %2819, %2818 ]
  %2844 = phi ptr [ %2829, %2835 ], [ %4, %2818 ]
  %2845 = phi i64 [ %2828, %2835 ], [ 0, %2818 ]
  %2846 = add nsw i32 %2843, 1
  store i32 %2846, ptr %2844, align 4, !tbaa !5
  %2847 = getelementptr inbounds i32, ptr %7, i64 %2845
  %2848 = load i32, ptr %2847, align 4, !tbaa !5
  %2849 = getelementptr inbounds i32, ptr %6, i64 %2845
  br label %2860

2850:                                             ; preds = %2827
  %2851 = icmp eq i32 %2830, %2833
  br i1 %2851, label %2852, label %2858

2852:                                             ; preds = %2850
  store i32 0, ptr %2829, align 4, !tbaa !5
  %2853 = getelementptr inbounds i32, ptr %8, i64 %2828
  %2854 = load i32, ptr %2853, align 4, !tbaa !5
  %2855 = getelementptr inbounds i32, ptr %6, i64 %2828
  store i32 %2854, ptr %2855, align 4, !tbaa !5
  %2856 = add nuw nsw i64 %2828, 1
  %2857 = icmp eq i64 %2856, %2734
  br i1 %2857, label %2865, label %2827, !llvm.loop !577

2858:                                             ; preds = %2823, %2850
  store double %2816, ptr %2415, align 8, !tbaa !18
  %2859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2860:                                             ; preds = %2836, %2842
  %2861 = phi ptr [ %2849, %2842 ], [ %2829, %2836 ]
  %2862 = phi i32 [ %2848, %2842 ], [ 1, %2836 ]
  %2863 = load i32, ptr %2861, align 4, !tbaa !5
  %2864 = add nsw i32 %2863, %2862
  store i32 %2864, ptr %2861, align 4, !tbaa !5
  br label %2865

2865:                                             ; preds = %2852, %2860, %2825, %2810
  %2866 = icmp eq i32 %2817, %5
  br i1 %2866, label %3009, label %2737, !llvm.loop !578

2867:                                             ; preds = %2720, %3002
  %2868 = phi double [ 0.000000e+00, %2720 ], [ %2950, %3002 ]
  %2869 = phi i32 [ 0, %2720 ], [ %2951, %3002 ]
  %2870 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2721, label %2871, label %2940

2871:                                             ; preds = %2867, %2930
  %2872 = phi i32 [ %2939, %2930 ], [ 0, %2867 ]
  %2873 = phi i64 [ %2881, %2930 ], [ %2725, %2867 ]
  %2874 = phi i64 [ %2938, %2930 ], [ %2724, %2867 ]
  %2875 = phi i32 [ %2936, %2930 ], [ %2870, %2867 ]
  %2876 = sub i32 %2723, %2872
  %2877 = tail call i32 @llvm.smin.i32(i32 %2876, i32 0)
  %2878 = sub i32 %2876, %2877
  %2879 = zext i32 %2878 to i64
  %2880 = add nuw nsw i64 %2879, 1
  %2881 = add nsw i64 %2873, -1
  %2882 = icmp ult i32 %2878, 31
  br i1 %2882, label %2918, label %2883

2883:                                             ; preds = %2871
  %2884 = and i64 %2880, 8589934560
  %2885 = sub i64 %2874, %2884
  br label %2886

2886:                                             ; preds = %2886, %2883
  %2887 = phi i64 [ 0, %2883 ], [ %2910, %2886 ]
  %2888 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2883 ], [ %2906, %2886 ]
  %2889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2883 ], [ %2907, %2886 ]
  %2890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2883 ], [ %2908, %2886 ]
  %2891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2883 ], [ %2909, %2886 ]
  %2892 = sub i64 %2874, %2887
  %2893 = getelementptr inbounds i32, ptr %11, i64 %2892
  %2894 = getelementptr inbounds i32, ptr %2893, i64 -7
  %2895 = load <8 x i32>, ptr %2894, align 4, !tbaa !5
  %2896 = shufflevector <8 x i32> %2895, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2897 = getelementptr inbounds i32, ptr %2893, i64 -15
  %2898 = load <8 x i32>, ptr %2897, align 4, !tbaa !5
  %2899 = shufflevector <8 x i32> %2898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2900 = getelementptr inbounds i32, ptr %2893, i64 -23
  %2901 = load <8 x i32>, ptr %2900, align 4, !tbaa !5
  %2902 = shufflevector <8 x i32> %2901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2903 = getelementptr inbounds i32, ptr %2893, i64 -31
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !5
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = mul <8 x i32> %2896, %2888
  %2907 = mul <8 x i32> %2899, %2889
  %2908 = mul <8 x i32> %2902, %2890
  %2909 = mul <8 x i32> %2905, %2891
  %2910 = add nuw i64 %2887, 32
  %2911 = icmp eq i64 %2910, %2884
  br i1 %2911, label %2912, label %2886, !llvm.loop !579

2912:                                             ; preds = %2886
  %2913 = mul <8 x i32> %2907, %2906
  %2914 = mul <8 x i32> %2908, %2913
  %2915 = mul <8 x i32> %2909, %2914
  %2916 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2915)
  %2917 = icmp eq i64 %2880, %2884
  br i1 %2917, label %2930, label %2918

2918:                                             ; preds = %2871, %2912
  %2919 = phi i64 [ %2874, %2871 ], [ %2885, %2912 ]
  %2920 = phi i32 [ 1, %2871 ], [ %2916, %2912 ]
  br label %2921

2921:                                             ; preds = %2918, %2921
  %2922 = phi i64 [ %2927, %2921 ], [ %2919, %2918 ]
  %2923 = phi i32 [ %2926, %2921 ], [ %2920, %2918 ]
  %2924 = getelementptr inbounds i32, ptr %11, i64 %2922
  %2925 = load i32, ptr %2924, align 4, !tbaa !5
  %2926 = mul nsw i32 %2925, %2923
  %2927 = add nsw i64 %2922, -1
  %2928 = trunc i64 %2922 to i32
  %2929 = icmp sgt i32 %2928, 0
  br i1 %2929, label %2921, label %2930, !llvm.loop !580

2930:                                             ; preds = %2921, %2912
  %2931 = phi i32 [ %2916, %2912 ], [ %2926, %2921 ]
  %2932 = and i64 %2881, 4294967295
  %2933 = getelementptr inbounds i32, ptr %6, i64 %2932
  %2934 = load i32, ptr %2933, align 4, !tbaa !5
  %2935 = mul nsw i32 %2934, %2931
  %2936 = add nsw i32 %2935, %2875
  %2937 = icmp sgt i64 %2873, 2
  %2938 = add nsw i64 %2874, -1
  %2939 = add i32 %2872, 1
  br i1 %2937, label %2871, label %2940, !llvm.loop !581

2940:                                             ; preds = %2930, %2867
  %2941 = phi i32 [ %2870, %2867 ], [ %2936, %2930 ]
  %2942 = icmp slt i32 %2941, %5
  br i1 %2942, label %2945, label %2943

2943:                                             ; preds = %2940
  %2944 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3010

2945:                                             ; preds = %2940
  %2946 = sext i32 %2941 to i64
  %2947 = getelementptr inbounds i16, ptr %2413, i64 %2946
  %2948 = load i16, ptr %2947, align 2, !tbaa !78
  %2949 = sitofp i16 %2948 to double
  %2950 = fadd fast double %2868, %2949
  store double %2950, ptr %2415, align 8, !tbaa !18
  %2951 = add nuw nsw i32 %2869, 1
  br i1 %2722, label %2952, label %3002

2952:                                             ; preds = %2945
  %2953 = load i32, ptr %4, align 4, !tbaa !5
  %2954 = load i32, ptr %12, align 4, !tbaa !5
  %2955 = add nsw i32 %2954, -1
  %2956 = icmp slt i32 %2953, %2955
  br i1 %2956, label %2979, label %2957

2957:                                             ; preds = %2952
  %2958 = icmp eq i32 %2953, %2955
  br i1 %2958, label %2959, label %2995

2959:                                             ; preds = %2957
  store i32 0, ptr %4, align 4, !tbaa !5
  %2960 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2960, ptr %6, align 4, !tbaa !5
  br i1 %2727, label %3002, label %2961

2961:                                             ; preds = %2959, %2989
  %2962 = phi i64 [ %2993, %2989 ], [ 1, %2959 ]
  %2963 = getelementptr inbounds i32, ptr %4, i64 %2962
  %2964 = load i32, ptr %2963, align 4, !tbaa !5
  %2965 = getelementptr inbounds i32, ptr %12, i64 %2962
  %2966 = load i32, ptr %2965, align 4, !tbaa !5
  %2967 = add nsw i32 %2966, -1
  %2968 = icmp slt i32 %2964, %2967
  br i1 %2968, label %2969, label %2987

2969:                                             ; preds = %2961
  br i1 %2956, label %2979, label %2970

2970:                                             ; preds = %2969
  %2971 = shl i64 %2962, 32
  %2972 = add i64 %2971, -4294967296
  %2973 = ashr exact i64 %2972, 32
  %2974 = getelementptr inbounds i32, ptr %7, i64 %2973
  %2975 = load i32, ptr %2974, align 4, !tbaa !5
  %2976 = getelementptr inbounds i32, ptr %6, i64 %2962
  %2977 = load i32, ptr %2976, align 4, !tbaa !5
  %2978 = add nsw i32 %2977, %2975
  store i32 %2978, ptr %2976, align 4, !tbaa !5
  br label %2997

2979:                                             ; preds = %2952, %2969
  %2980 = phi i32 [ %2964, %2969 ], [ %2953, %2952 ]
  %2981 = phi ptr [ %2963, %2969 ], [ %4, %2952 ]
  %2982 = phi i64 [ %2962, %2969 ], [ 0, %2952 ]
  %2983 = add nsw i32 %2980, 1
  store i32 %2983, ptr %2981, align 4, !tbaa !5
  %2984 = getelementptr inbounds i32, ptr %7, i64 %2982
  %2985 = load i32, ptr %2984, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %6, i64 %2982
  br label %2997

2987:                                             ; preds = %2961
  %2988 = icmp eq i32 %2964, %2967
  br i1 %2988, label %2989, label %2995

2989:                                             ; preds = %2987
  store i32 0, ptr %2963, align 4, !tbaa !5
  %2990 = getelementptr inbounds i32, ptr %8, i64 %2962
  %2991 = load i32, ptr %2990, align 4, !tbaa !5
  %2992 = getelementptr inbounds i32, ptr %6, i64 %2962
  store i32 %2991, ptr %2992, align 4, !tbaa !5
  %2993 = add nuw nsw i64 %2962, 1
  %2994 = icmp eq i64 %2993, %2725
  br i1 %2994, label %3002, label %2961, !llvm.loop !582

2995:                                             ; preds = %2957, %2987
  %2996 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3010

2997:                                             ; preds = %2970, %2979
  %2998 = phi ptr [ %2986, %2979 ], [ %2963, %2970 ]
  %2999 = phi i32 [ %2985, %2979 ], [ 1, %2970 ]
  %3000 = load i32, ptr %2998, align 4, !tbaa !5
  %3001 = add nsw i32 %3000, %2999
  store i32 %3001, ptr %2998, align 4, !tbaa !5
  br label %3002

3002:                                             ; preds = %2989, %2997, %2959, %2945
  %3003 = icmp eq i32 %2951, %5
  br i1 %3003, label %3010, label %2867, !llvm.loop !583

3004:                                             ; preds = %2420
  %3005 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 801, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3010

3006:                                             ; preds = %1671
  store double %1622, ptr %1221, align 8, !tbaa !18
  br label %3010

3007:                                             ; preds = %1978
  store float %1929, ptr %1816, align 4, !tbaa !162
  br label %3010

3008:                                             ; preds = %2270
  store float %2221, ptr %1816, align 4, !tbaa !162
  br label %3010

3009:                                             ; preds = %2865
  store double %2816, ptr %2415, align 8, !tbaa !18
  br label %3010

3010:                                             ; preds = %3002, %2712, %2575, %2407, %2117, %1808, %1518, %1381, %1213, %1076, %923, %786, %616, %479, %326, %189, %2719, %2728, %3009, %2426, %2435, %2124, %2133, %3008, %1827, %1836, %3007, %1525, %1534, %3006, %1232, %1241, %930, %939, %635, %644, %333, %342, %37, %46, %2417, %3004, %1818, %2409, %1223, %1810, %626, %1215, %28, %618, %18, %2568, %2653, %2705, %2858, %2943, %2995, %1971, %2056, %2110, %2263, %2348, %2400, %1374, %1459, %1511, %1664, %1749, %1801, %779, %863, %916, %1069, %1153, %1206, %182, %266, %319, %472, %556, %609
  %3011 = phi i32 [ -1, %609 ], [ -1, %556 ], [ -1, %472 ], [ -1, %319 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1206 ], [ -1, %1153 ], [ -1, %1069 ], [ -1, %916 ], [ -1, %863 ], [ -1, %779 ], [ -1, %1801 ], [ -1, %1749 ], [ -1, %1664 ], [ -1, %1511 ], [ -1, %1459 ], [ -1, %1374 ], [ -1, %2400 ], [ -1, %2348 ], [ -1, %2263 ], [ -1, %2110 ], [ -1, %2056 ], [ -1, %1971 ], [ -1, %2995 ], [ -1, %2943 ], [ -1, %2858 ], [ -1, %2705 ], [ -1, %2653 ], [ -1, %2568 ], [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1215 ], [ 1, %626 ], [ 1, %1810 ], [ 1, %1223 ], [ 1, %2409 ], [ 1, %1818 ], [ 1, %3004 ], [ 1, %2417 ], [ 1, %46 ], [ 1, %37 ], [ 1, %342 ], [ 1, %333 ], [ 1, %644 ], [ 1, %635 ], [ 1, %939 ], [ 1, %930 ], [ 1, %1241 ], [ 1, %1232 ], [ %1541, %3006 ], [ 1, %1534 ], [ 1, %1525 ], [ %1843, %3007 ], [ 1, %1836 ], [ 1, %1827 ], [ %2140, %3008 ], [ 1, %2133 ], [ 1, %2124 ], [ 1, %2435 ], [ 1, %2426 ], [ %2735, %3009 ], [ 1, %2728 ], [ 1, %2719 ], [ %53, %189 ], [ %44, %326 ], [ %349, %479 ], [ %340, %616 ], [ %651, %786 ], [ %642, %923 ], [ %946, %1076 ], [ %937, %1213 ], [ %1248, %1381 ], [ %1239, %1518 ], [ %1532, %1808 ], [ %1834, %2117 ], [ %2131, %2407 ], [ %2442, %2575 ], [ %2433, %2712 ], [ %2726, %3002 ]
  ret i32 %3011
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5404 [
    i32 101, label %22
    i32 102, label %620
    i32 103, label %1213
    i32 104, label %1812
    i32 105, label %2416
    i32 106, label %3009
    i32 107, label %3608
    i32 108, label %4203
    i32 109, label %4801
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i32, ptr %24, align 4, !tbaa !5
  %30 = trunc i32 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5404

31:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %32
    i32 0, label %328
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5404

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %191

46:                                               ; preds = %32
  br i1 %36, label %47, label %5404

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %189
  %56 = phi i32 [ 0, %47 ], [ %141, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !584

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !585

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !586

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i32, ptr %24, i64 %129
  %133 = load i32, ptr %132, align 4, !tbaa !5
  %134 = load i8, ptr %26, align 1, !tbaa !11
  %135 = uitofp i8 %134 to double
  %136 = and i32 %133, 255
  %137 = sitofp i32 %136 to double
  %138 = fmul fast double %131, %137
  %139 = fadd fast double %138, %135
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = add nuw nsw i32 %56, 1
  br i1 %49, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %54, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %52
  br i1 %181, label %189, label %151, !llvm.loop !587

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %5404, label %55, !llvm.loop !588

191:                                              ; preds = %38, %326
  %192 = phi i32 [ 0, %38 ], [ %275, %326 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %43, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %42, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %41, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !589

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !590

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !591

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds i32, ptr %24, i64 %269
  %271 = load i32, ptr %270, align 4, !tbaa !5
  %272 = load i8, ptr %26, align 1, !tbaa !11
  %273 = trunc i32 %271 to i8
  %274 = add i8 %272, %273
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %192, 1
  br i1 %40, label %276, label %326

276:                                              ; preds = %268
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %45, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %43
  br i1 %318, label %326, label %285, !llvm.loop !592

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %268
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %5404, label %191, !llvm.loop !593

328:                                              ; preds = %31
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %5404

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %481

342:                                              ; preds = %328
  br i1 %332, label %343, label %5404

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %479
  %352 = phi i32 [ 0, %343 ], [ %431, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %354, label %423

354:                                              ; preds = %351, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %351 ]
  %356 = phi i64 [ %364, %413 ], [ %348, %351 ]
  %357 = phi i64 [ %421, %413 ], [ %347, %351 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %351 ]
  %359 = sub i32 %346, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !594

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !595

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !596

423:                                              ; preds = %413, %351
  %424 = phi i32 [ %353, %351 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds i32, ptr %24, i64 %425
  %427 = load i32, ptr %426, align 4, !tbaa !5
  %428 = load i8, ptr %26, align 1, !tbaa !11
  %429 = trunc i32 %427 to i8
  %430 = add i8 %428, %429
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = add nuw nsw i32 %352, 1
  br i1 %345, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %350, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %348
  br i1 %471, label %479, label %441, !llvm.loop !597

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %5404, label %351, !llvm.loop !598

481:                                              ; preds = %334, %616
  %482 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %339, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %338, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %337, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !599

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !600

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !601

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds i32, ptr %24, i64 %559
  %561 = load i32, ptr %560, align 4, !tbaa !5
  %562 = load i8, ptr %26, align 1, !tbaa !11
  %563 = trunc i32 %561 to i8
  %564 = add i8 %562, %563
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %482, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %558
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !602

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %558
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %5404, label %481, !llvm.loop !603

618:                                              ; preds = %31
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1005, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %628

626:                                              ; preds = %620
  %627 = load i32, ptr %622, align 4, !tbaa !5
  store i32 %627, ptr %624, align 4, !tbaa !5
  br label %5404

628:                                              ; preds = %620
  switch i32 %1, label %1211 [
    i32 1, label %629
    i32 0, label %923
  ]

629:                                              ; preds = %628
  %630 = getelementptr inbounds i32, ptr %3, i64 %19
  %631 = load i32, ptr %630, align 4, !tbaa !5
  %632 = icmp eq i32 %631, 0
  %633 = icmp sgt i32 %5, 0
  br i1 %632, label %643, label %634

634:                                              ; preds = %629
  br i1 %633, label %635, label %5404

635:                                              ; preds = %634
  %636 = icmp sgt i32 %13, 1
  %637 = icmp sgt i32 %13, 0
  %638 = add i32 %13, -2
  %639 = zext i32 %638 to i64
  %640 = zext i32 %13 to i64
  %641 = add nuw i32 %5, 1
  %642 = icmp eq i32 %13, 1
  br label %787

643:                                              ; preds = %629
  br i1 %633, label %644, label %5404

644:                                              ; preds = %643
  %645 = icmp sgt i32 %13, 1
  %646 = icmp sgt i32 %13, 0
  %647 = add i32 %13, -2
  %648 = zext i32 %647 to i64
  %649 = zext i32 %13 to i64
  %650 = add nuw i32 %5, 1
  %651 = icmp eq i32 %13, 1
  br label %652

652:                                              ; preds = %644, %785
  %653 = phi i32 [ 0, %644 ], [ %737, %785 ]
  %654 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %645, label %655, label %724

655:                                              ; preds = %652, %714
  %656 = phi i32 [ %723, %714 ], [ 0, %652 ]
  %657 = phi i64 [ %665, %714 ], [ %649, %652 ]
  %658 = phi i64 [ %722, %714 ], [ %648, %652 ]
  %659 = phi i32 [ %720, %714 ], [ %654, %652 ]
  %660 = sub i32 %647, %656
  %661 = tail call i32 @llvm.smin.i32(i32 %660, i32 0)
  %662 = sub i32 %660, %661
  %663 = zext i32 %662 to i64
  %664 = add nuw nsw i64 %663, 1
  %665 = add nsw i64 %657, -1
  %666 = icmp ult i32 %662, 31
  br i1 %666, label %702, label %667

667:                                              ; preds = %655
  %668 = and i64 %664, 8589934560
  %669 = sub i64 %658, %668
  br label %670

670:                                              ; preds = %670, %667
  %671 = phi i64 [ 0, %667 ], [ %694, %670 ]
  %672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %690, %670 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %691, %670 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %692, %670 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %667 ], [ %693, %670 ]
  %676 = sub i64 %658, %671
  %677 = getelementptr inbounds i32, ptr %9, i64 %676
  %678 = getelementptr inbounds i32, ptr %677, i64 -7
  %679 = load <8 x i32>, ptr %678, align 4, !tbaa !5
  %680 = shufflevector <8 x i32> %679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %681 = getelementptr inbounds i32, ptr %677, i64 -15
  %682 = load <8 x i32>, ptr %681, align 4, !tbaa !5
  %683 = shufflevector <8 x i32> %682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %684 = getelementptr inbounds i32, ptr %677, i64 -23
  %685 = load <8 x i32>, ptr %684, align 4, !tbaa !5
  %686 = shufflevector <8 x i32> %685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %687 = getelementptr inbounds i32, ptr %677, i64 -31
  %688 = load <8 x i32>, ptr %687, align 4, !tbaa !5
  %689 = shufflevector <8 x i32> %688, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %690 = mul <8 x i32> %680, %672
  %691 = mul <8 x i32> %683, %673
  %692 = mul <8 x i32> %686, %674
  %693 = mul <8 x i32> %689, %675
  %694 = add nuw i64 %671, 32
  %695 = icmp eq i64 %694, %668
  br i1 %695, label %696, label %670, !llvm.loop !604

696:                                              ; preds = %670
  %697 = mul <8 x i32> %691, %690
  %698 = mul <8 x i32> %692, %697
  %699 = mul <8 x i32> %693, %698
  %700 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %699)
  %701 = icmp eq i64 %664, %668
  br i1 %701, label %714, label %702

702:                                              ; preds = %655, %696
  %703 = phi i64 [ %658, %655 ], [ %669, %696 ]
  %704 = phi i32 [ 1, %655 ], [ %700, %696 ]
  br label %705

705:                                              ; preds = %702, %705
  %706 = phi i64 [ %711, %705 ], [ %703, %702 ]
  %707 = phi i32 [ %710, %705 ], [ %704, %702 ]
  %708 = getelementptr inbounds i32, ptr %9, i64 %706
  %709 = load i32, ptr %708, align 4, !tbaa !5
  %710 = mul nsw i32 %709, %707
  %711 = add nsw i64 %706, -1
  %712 = trunc i64 %706 to i32
  %713 = icmp sgt i32 %712, 0
  br i1 %713, label %705, label %714, !llvm.loop !605

714:                                              ; preds = %705, %696
  %715 = phi i32 [ %700, %696 ], [ %710, %705 ]
  %716 = and i64 %665, 4294967295
  %717 = getelementptr inbounds i32, ptr %6, i64 %716
  %718 = load i32, ptr %717, align 4, !tbaa !5
  %719 = mul nsw i32 %718, %715
  %720 = add nsw i32 %719, %659
  %721 = icmp sgt i64 %657, 2
  %722 = add nsw i64 %658, -1
  %723 = add i32 %656, 1
  br i1 %721, label %655, label %724, !llvm.loop !606

724:                                              ; preds = %714, %652
  %725 = phi i32 [ %654, %652 ], [ %720, %714 ]
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds double, ptr %2, i64 %726
  %728 = load double, ptr %727, align 8, !tbaa !18
  %729 = getelementptr inbounds i32, ptr %622, i64 %726
  %730 = load i32, ptr %729, align 4, !tbaa !5
  %731 = load i32, ptr %624, align 4, !tbaa !5
  %732 = sitofp i32 %731 to double
  %733 = sitofp i32 %730 to double
  %734 = fmul fast double %728, %733
  %735 = fadd fast double %734, %732
  %736 = fptosi double %735 to i32
  store i32 %736, ptr %624, align 4, !tbaa !5
  %737 = add nuw nsw i32 %653, 1
  br i1 %646, label %738, label %785

738:                                              ; preds = %724
  %739 = load i32, ptr %4, align 4, !tbaa !5
  %740 = load i32, ptr %12, align 4, !tbaa !5
  %741 = add nsw i32 %740, -1
  %742 = icmp slt i32 %739, %741
  br i1 %742, label %762, label %743

743:                                              ; preds = %738
  %744 = icmp eq i32 %739, %741
  br i1 %744, label %745, label %778

745:                                              ; preds = %743
  store i32 0, ptr %4, align 4, !tbaa !5
  %746 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %746, ptr %6, align 4, !tbaa !5
  br i1 %651, label %785, label %747

747:                                              ; preds = %745, %772
  %748 = phi i64 [ %776, %772 ], [ 1, %745 ]
  %749 = getelementptr inbounds i32, ptr %4, i64 %748
  %750 = load i32, ptr %749, align 4, !tbaa !5
  %751 = getelementptr inbounds i32, ptr %12, i64 %748
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = add nsw i32 %752, -1
  %754 = icmp slt i32 %750, %753
  br i1 %754, label %755, label %770

755:                                              ; preds = %747
  br i1 %742, label %762, label %756

756:                                              ; preds = %755
  %757 = getelementptr inbounds i32, ptr %7, i64 %748
  %758 = load i32, ptr %757, align 4, !tbaa !5
  %759 = getelementptr inbounds i32, ptr %6, i64 %748
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = add nsw i32 %760, %758
  store i32 %761, ptr %759, align 4, !tbaa !5
  br label %780

762:                                              ; preds = %738, %755
  %763 = phi i32 [ %750, %755 ], [ %739, %738 ]
  %764 = phi ptr [ %749, %755 ], [ %4, %738 ]
  %765 = phi i64 [ %748, %755 ], [ 0, %738 ]
  %766 = add nsw i32 %763, 1
  store i32 %766, ptr %764, align 4, !tbaa !5
  %767 = getelementptr inbounds i32, ptr %7, i64 %765
  %768 = load i32, ptr %767, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %6, i64 %765
  br label %780

770:                                              ; preds = %747
  %771 = icmp eq i32 %750, %753
  br i1 %771, label %772, label %778

772:                                              ; preds = %770
  store i32 0, ptr %749, align 4, !tbaa !5
  %773 = getelementptr inbounds i32, ptr %8, i64 %748
  %774 = load i32, ptr %773, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %6, i64 %748
  store i32 %774, ptr %775, align 4, !tbaa !5
  %776 = add nuw nsw i64 %748, 1
  %777 = icmp eq i64 %776, %649
  br i1 %777, label %785, label %747, !llvm.loop !607

778:                                              ; preds = %743, %770
  %779 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

780:                                              ; preds = %756, %762
  %781 = phi ptr [ %769, %762 ], [ %749, %756 ]
  %782 = phi i32 [ %768, %762 ], [ 1, %756 ]
  %783 = load i32, ptr %781, align 4, !tbaa !5
  %784 = add nsw i32 %783, %782
  store i32 %784, ptr %781, align 4, !tbaa !5
  br label %785

785:                                              ; preds = %772, %780, %745, %724
  %786 = icmp eq i32 %737, %5
  br i1 %786, label %5404, label %652, !llvm.loop !608

787:                                              ; preds = %635, %921
  %788 = phi i32 [ 0, %635 ], [ %870, %921 ]
  %789 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %636, label %790, label %859

790:                                              ; preds = %787, %849
  %791 = phi i32 [ %858, %849 ], [ 0, %787 ]
  %792 = phi i64 [ %800, %849 ], [ %640, %787 ]
  %793 = phi i64 [ %857, %849 ], [ %639, %787 ]
  %794 = phi i32 [ %855, %849 ], [ %789, %787 ]
  %795 = sub i32 %638, %791
  %796 = tail call i32 @llvm.smin.i32(i32 %795, i32 0)
  %797 = sub i32 %795, %796
  %798 = zext i32 %797 to i64
  %799 = add nuw nsw i64 %798, 1
  %800 = add nsw i64 %792, -1
  %801 = icmp ult i32 %797, 31
  br i1 %801, label %837, label %802

802:                                              ; preds = %790
  %803 = and i64 %799, 8589934560
  %804 = sub i64 %793, %803
  br label %805

805:                                              ; preds = %805, %802
  %806 = phi i64 [ 0, %802 ], [ %829, %805 ]
  %807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %825, %805 ]
  %808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %826, %805 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %827, %805 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %802 ], [ %828, %805 ]
  %811 = sub i64 %793, %806
  %812 = getelementptr inbounds i32, ptr %11, i64 %811
  %813 = getelementptr inbounds i32, ptr %812, i64 -7
  %814 = load <8 x i32>, ptr %813, align 4, !tbaa !5
  %815 = shufflevector <8 x i32> %814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %816 = getelementptr inbounds i32, ptr %812, i64 -15
  %817 = load <8 x i32>, ptr %816, align 4, !tbaa !5
  %818 = shufflevector <8 x i32> %817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %819 = getelementptr inbounds i32, ptr %812, i64 -23
  %820 = load <8 x i32>, ptr %819, align 4, !tbaa !5
  %821 = shufflevector <8 x i32> %820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %822 = getelementptr inbounds i32, ptr %812, i64 -31
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = mul <8 x i32> %815, %807
  %826 = mul <8 x i32> %818, %808
  %827 = mul <8 x i32> %821, %809
  %828 = mul <8 x i32> %824, %810
  %829 = add nuw i64 %806, 32
  %830 = icmp eq i64 %829, %803
  br i1 %830, label %831, label %805, !llvm.loop !609

831:                                              ; preds = %805
  %832 = mul <8 x i32> %826, %825
  %833 = mul <8 x i32> %827, %832
  %834 = mul <8 x i32> %828, %833
  %835 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %834)
  %836 = icmp eq i64 %799, %803
  br i1 %836, label %849, label %837

837:                                              ; preds = %790, %831
  %838 = phi i64 [ %793, %790 ], [ %804, %831 ]
  %839 = phi i32 [ 1, %790 ], [ %835, %831 ]
  br label %840

840:                                              ; preds = %837, %840
  %841 = phi i64 [ %846, %840 ], [ %838, %837 ]
  %842 = phi i32 [ %845, %840 ], [ %839, %837 ]
  %843 = getelementptr inbounds i32, ptr %11, i64 %841
  %844 = load i32, ptr %843, align 4, !tbaa !5
  %845 = mul nsw i32 %844, %842
  %846 = add nsw i64 %841, -1
  %847 = trunc i64 %841 to i32
  %848 = icmp sgt i32 %847, 0
  br i1 %848, label %840, label %849, !llvm.loop !610

849:                                              ; preds = %840, %831
  %850 = phi i32 [ %835, %831 ], [ %845, %840 ]
  %851 = and i64 %800, 4294967295
  %852 = getelementptr inbounds i32, ptr %6, i64 %851
  %853 = load i32, ptr %852, align 4, !tbaa !5
  %854 = mul nsw i32 %853, %850
  %855 = add nsw i32 %854, %794
  %856 = icmp sgt i64 %792, 2
  %857 = add nsw i64 %793, -1
  %858 = add i32 %791, 1
  br i1 %856, label %790, label %859, !llvm.loop !611

859:                                              ; preds = %849, %787
  %860 = phi i32 [ %789, %787 ], [ %855, %849 ]
  %861 = icmp slt i32 %860, %5
  br i1 %861, label %864, label %862

862:                                              ; preds = %859
  %863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

864:                                              ; preds = %859
  %865 = sext i32 %860 to i64
  %866 = getelementptr inbounds i32, ptr %622, i64 %865
  %867 = load i32, ptr %866, align 4, !tbaa !5
  %868 = load i32, ptr %624, align 4, !tbaa !5
  %869 = add i32 %868, %867
  store i32 %869, ptr %624, align 4, !tbaa !5
  %870 = add nuw nsw i32 %788, 1
  br i1 %637, label %871, label %921

871:                                              ; preds = %864
  %872 = load i32, ptr %4, align 4, !tbaa !5
  %873 = load i32, ptr %12, align 4, !tbaa !5
  %874 = add nsw i32 %873, -1
  %875 = icmp slt i32 %872, %874
  br i1 %875, label %898, label %876

876:                                              ; preds = %871
  %877 = icmp eq i32 %872, %874
  br i1 %877, label %878, label %914

878:                                              ; preds = %876
  store i32 0, ptr %4, align 4, !tbaa !5
  %879 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %879, ptr %6, align 4, !tbaa !5
  br i1 %642, label %921, label %880

880:                                              ; preds = %878, %908
  %881 = phi i64 [ %912, %908 ], [ 1, %878 ]
  %882 = getelementptr inbounds i32, ptr %4, i64 %881
  %883 = load i32, ptr %882, align 4, !tbaa !5
  %884 = getelementptr inbounds i32, ptr %12, i64 %881
  %885 = load i32, ptr %884, align 4, !tbaa !5
  %886 = add nsw i32 %885, -1
  %887 = icmp slt i32 %883, %886
  br i1 %887, label %888, label %906

888:                                              ; preds = %880
  br i1 %875, label %898, label %889

889:                                              ; preds = %888
  %890 = shl i64 %881, 32
  %891 = add i64 %890, -4294967296
  %892 = ashr exact i64 %891, 32
  %893 = getelementptr inbounds i32, ptr %7, i64 %892
  %894 = load i32, ptr %893, align 4, !tbaa !5
  %895 = getelementptr inbounds i32, ptr %6, i64 %881
  %896 = load i32, ptr %895, align 4, !tbaa !5
  %897 = add nsw i32 %896, %894
  store i32 %897, ptr %895, align 4, !tbaa !5
  br label %916

898:                                              ; preds = %871, %888
  %899 = phi i32 [ %883, %888 ], [ %872, %871 ]
  %900 = phi ptr [ %882, %888 ], [ %4, %871 ]
  %901 = phi i64 [ %881, %888 ], [ 0, %871 ]
  %902 = add nsw i32 %899, 1
  store i32 %902, ptr %900, align 4, !tbaa !5
  %903 = getelementptr inbounds i32, ptr %7, i64 %901
  %904 = load i32, ptr %903, align 4, !tbaa !5
  %905 = getelementptr inbounds i32, ptr %6, i64 %901
  br label %916

906:                                              ; preds = %880
  %907 = icmp eq i32 %883, %886
  br i1 %907, label %908, label %914

908:                                              ; preds = %906
  store i32 0, ptr %882, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %8, i64 %881
  %910 = load i32, ptr %909, align 4, !tbaa !5
  %911 = getelementptr inbounds i32, ptr %6, i64 %881
  store i32 %910, ptr %911, align 4, !tbaa !5
  %912 = add nuw nsw i64 %881, 1
  %913 = icmp eq i64 %912, %640
  br i1 %913, label %921, label %880, !llvm.loop !612

914:                                              ; preds = %876, %906
  %915 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

916:                                              ; preds = %889, %898
  %917 = phi ptr [ %905, %898 ], [ %882, %889 ]
  %918 = phi i32 [ %904, %898 ], [ 1, %889 ]
  %919 = load i32, ptr %917, align 4, !tbaa !5
  %920 = add nsw i32 %919, %918
  store i32 %920, ptr %917, align 4, !tbaa !5
  br label %921

921:                                              ; preds = %908, %916, %878, %864
  %922 = icmp eq i32 %870, %5
  br i1 %922, label %5404, label %787, !llvm.loop !613

923:                                              ; preds = %628
  %924 = getelementptr inbounds i32, ptr %3, i64 %19
  %925 = load i32, ptr %924, align 4, !tbaa !5
  %926 = icmp eq i32 %925, 0
  %927 = icmp sgt i32 %5, 0
  br i1 %926, label %937, label %928

928:                                              ; preds = %923
  br i1 %927, label %929, label %5404

929:                                              ; preds = %928
  %930 = icmp sgt i32 %13, 1
  %931 = icmp sgt i32 %13, 0
  %932 = add i32 %13, -2
  %933 = zext i32 %932 to i64
  %934 = zext i32 %13 to i64
  %935 = add nuw i32 %5, 1
  %936 = icmp eq i32 %13, 1
  br label %1075

937:                                              ; preds = %923
  br i1 %927, label %938, label %5404

938:                                              ; preds = %937
  %939 = icmp sgt i32 %13, 1
  %940 = icmp sgt i32 %13, 0
  %941 = add i32 %13, -2
  %942 = zext i32 %941 to i64
  %943 = zext i32 %13 to i64
  %944 = add nuw i32 %5, 1
  %945 = icmp eq i32 %13, 1
  br label %946

946:                                              ; preds = %938, %1073
  %947 = phi i32 [ 0, %938 ], [ %1025, %1073 ]
  %948 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %939, label %949, label %1018

949:                                              ; preds = %946, %1008
  %950 = phi i32 [ %1017, %1008 ], [ 0, %946 ]
  %951 = phi i64 [ %959, %1008 ], [ %943, %946 ]
  %952 = phi i64 [ %1016, %1008 ], [ %942, %946 ]
  %953 = phi i32 [ %1014, %1008 ], [ %948, %946 ]
  %954 = sub i32 %941, %950
  %955 = tail call i32 @llvm.smin.i32(i32 %954, i32 0)
  %956 = sub i32 %954, %955
  %957 = zext i32 %956 to i64
  %958 = add nuw nsw i64 %957, 1
  %959 = add nsw i64 %951, -1
  %960 = icmp ult i32 %956, 31
  br i1 %960, label %996, label %961

961:                                              ; preds = %949
  %962 = and i64 %958, 8589934560
  %963 = sub i64 %952, %962
  br label %964

964:                                              ; preds = %964, %961
  %965 = phi i64 [ 0, %961 ], [ %988, %964 ]
  %966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %984, %964 ]
  %967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %985, %964 ]
  %968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %986, %964 ]
  %969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %961 ], [ %987, %964 ]
  %970 = sub i64 %952, %965
  %971 = getelementptr inbounds i32, ptr %9, i64 %970
  %972 = getelementptr inbounds i32, ptr %971, i64 -7
  %973 = load <8 x i32>, ptr %972, align 4, !tbaa !5
  %974 = shufflevector <8 x i32> %973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %975 = getelementptr inbounds i32, ptr %971, i64 -15
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %971, i64 -23
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = getelementptr inbounds i32, ptr %971, i64 -31
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = mul <8 x i32> %974, %966
  %985 = mul <8 x i32> %977, %967
  %986 = mul <8 x i32> %980, %968
  %987 = mul <8 x i32> %983, %969
  %988 = add nuw i64 %965, 32
  %989 = icmp eq i64 %988, %962
  br i1 %989, label %990, label %964, !llvm.loop !614

990:                                              ; preds = %964
  %991 = mul <8 x i32> %985, %984
  %992 = mul <8 x i32> %986, %991
  %993 = mul <8 x i32> %987, %992
  %994 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %993)
  %995 = icmp eq i64 %958, %962
  br i1 %995, label %1008, label %996

996:                                              ; preds = %949, %990
  %997 = phi i64 [ %952, %949 ], [ %963, %990 ]
  %998 = phi i32 [ 1, %949 ], [ %994, %990 ]
  br label %999

999:                                              ; preds = %996, %999
  %1000 = phi i64 [ %1005, %999 ], [ %997, %996 ]
  %1001 = phi i32 [ %1004, %999 ], [ %998, %996 ]
  %1002 = getelementptr inbounds i32, ptr %9, i64 %1000
  %1003 = load i32, ptr %1002, align 4, !tbaa !5
  %1004 = mul nsw i32 %1003, %1001
  %1005 = add nsw i64 %1000, -1
  %1006 = trunc i64 %1000 to i32
  %1007 = icmp sgt i32 %1006, 0
  br i1 %1007, label %999, label %1008, !llvm.loop !615

1008:                                             ; preds = %999, %990
  %1009 = phi i32 [ %994, %990 ], [ %1004, %999 ]
  %1010 = and i64 %959, 4294967295
  %1011 = getelementptr inbounds i32, ptr %6, i64 %1010
  %1012 = load i32, ptr %1011, align 4, !tbaa !5
  %1013 = mul nsw i32 %1012, %1009
  %1014 = add nsw i32 %1013, %953
  %1015 = icmp sgt i64 %951, 2
  %1016 = add nsw i64 %952, -1
  %1017 = add i32 %950, 1
  br i1 %1015, label %949, label %1018, !llvm.loop !616

1018:                                             ; preds = %1008, %946
  %1019 = phi i32 [ %948, %946 ], [ %1014, %1008 ]
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds i32, ptr %622, i64 %1020
  %1022 = load i32, ptr %1021, align 4, !tbaa !5
  %1023 = load i32, ptr %624, align 4, !tbaa !5
  %1024 = add nsw i32 %1023, %1022
  store i32 %1024, ptr %624, align 4, !tbaa !5
  %1025 = add nuw nsw i32 %947, 1
  br i1 %940, label %1026, label %1073

1026:                                             ; preds = %1018
  %1027 = load i32, ptr %4, align 4, !tbaa !5
  %1028 = load i32, ptr %12, align 4, !tbaa !5
  %1029 = add nsw i32 %1028, -1
  %1030 = icmp slt i32 %1027, %1029
  br i1 %1030, label %1050, label %1031

1031:                                             ; preds = %1026
  %1032 = icmp eq i32 %1027, %1029
  br i1 %1032, label %1033, label %1066

1033:                                             ; preds = %1031
  store i32 0, ptr %4, align 4, !tbaa !5
  %1034 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1034, ptr %6, align 4, !tbaa !5
  br i1 %945, label %1073, label %1035

1035:                                             ; preds = %1033, %1060
  %1036 = phi i64 [ %1064, %1060 ], [ 1, %1033 ]
  %1037 = getelementptr inbounds i32, ptr %4, i64 %1036
  %1038 = load i32, ptr %1037, align 4, !tbaa !5
  %1039 = getelementptr inbounds i32, ptr %12, i64 %1036
  %1040 = load i32, ptr %1039, align 4, !tbaa !5
  %1041 = add nsw i32 %1040, -1
  %1042 = icmp slt i32 %1038, %1041
  br i1 %1042, label %1043, label %1058

1043:                                             ; preds = %1035
  br i1 %1030, label %1050, label %1044

1044:                                             ; preds = %1043
  %1045 = getelementptr inbounds i32, ptr %7, i64 %1036
  %1046 = load i32, ptr %1045, align 4, !tbaa !5
  %1047 = getelementptr inbounds i32, ptr %6, i64 %1036
  %1048 = load i32, ptr %1047, align 4, !tbaa !5
  %1049 = add nsw i32 %1048, %1046
  store i32 %1049, ptr %1047, align 4, !tbaa !5
  br label %1068

1050:                                             ; preds = %1026, %1043
  %1051 = phi i32 [ %1038, %1043 ], [ %1027, %1026 ]
  %1052 = phi ptr [ %1037, %1043 ], [ %4, %1026 ]
  %1053 = phi i64 [ %1036, %1043 ], [ 0, %1026 ]
  %1054 = add nsw i32 %1051, 1
  store i32 %1054, ptr %1052, align 4, !tbaa !5
  %1055 = getelementptr inbounds i32, ptr %7, i64 %1053
  %1056 = load i32, ptr %1055, align 4, !tbaa !5
  %1057 = getelementptr inbounds i32, ptr %6, i64 %1053
  br label %1068

1058:                                             ; preds = %1035
  %1059 = icmp eq i32 %1038, %1041
  br i1 %1059, label %1060, label %1066

1060:                                             ; preds = %1058
  store i32 0, ptr %1037, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %8, i64 %1036
  %1062 = load i32, ptr %1061, align 4, !tbaa !5
  %1063 = getelementptr inbounds i32, ptr %6, i64 %1036
  store i32 %1062, ptr %1063, align 4, !tbaa !5
  %1064 = add nuw nsw i64 %1036, 1
  %1065 = icmp eq i64 %1064, %943
  br i1 %1065, label %1073, label %1035, !llvm.loop !617

1066:                                             ; preds = %1031, %1058
  %1067 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1068:                                             ; preds = %1044, %1050
  %1069 = phi ptr [ %1057, %1050 ], [ %1037, %1044 ]
  %1070 = phi i32 [ %1056, %1050 ], [ 1, %1044 ]
  %1071 = load i32, ptr %1069, align 4, !tbaa !5
  %1072 = add nsw i32 %1071, %1070
  store i32 %1072, ptr %1069, align 4, !tbaa !5
  br label %1073

1073:                                             ; preds = %1060, %1068, %1033, %1018
  %1074 = icmp eq i32 %1025, %5
  br i1 %1074, label %5404, label %946, !llvm.loop !618

1075:                                             ; preds = %929, %1209
  %1076 = phi i32 [ 0, %929 ], [ %1158, %1209 ]
  %1077 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %930, label %1078, label %1147

1078:                                             ; preds = %1075, %1137
  %1079 = phi i32 [ %1146, %1137 ], [ 0, %1075 ]
  %1080 = phi i64 [ %1088, %1137 ], [ %934, %1075 ]
  %1081 = phi i64 [ %1145, %1137 ], [ %933, %1075 ]
  %1082 = phi i32 [ %1143, %1137 ], [ %1077, %1075 ]
  %1083 = sub i32 %932, %1079
  %1084 = tail call i32 @llvm.smin.i32(i32 %1083, i32 0)
  %1085 = sub i32 %1083, %1084
  %1086 = zext i32 %1085 to i64
  %1087 = add nuw nsw i64 %1086, 1
  %1088 = add nsw i64 %1080, -1
  %1089 = icmp ult i32 %1085, 31
  br i1 %1089, label %1125, label %1090

1090:                                             ; preds = %1078
  %1091 = and i64 %1087, 8589934560
  %1092 = sub i64 %1081, %1091
  br label %1093

1093:                                             ; preds = %1093, %1090
  %1094 = phi i64 [ 0, %1090 ], [ %1117, %1093 ]
  %1095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1113, %1093 ]
  %1096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1114, %1093 ]
  %1097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1115, %1093 ]
  %1098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1090 ], [ %1116, %1093 ]
  %1099 = sub i64 %1081, %1094
  %1100 = getelementptr inbounds i32, ptr %11, i64 %1099
  %1101 = getelementptr inbounds i32, ptr %1100, i64 -7
  %1102 = load <8 x i32>, ptr %1101, align 4, !tbaa !5
  %1103 = shufflevector <8 x i32> %1102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1104 = getelementptr inbounds i32, ptr %1100, i64 -15
  %1105 = load <8 x i32>, ptr %1104, align 4, !tbaa !5
  %1106 = shufflevector <8 x i32> %1105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1107 = getelementptr inbounds i32, ptr %1100, i64 -23
  %1108 = load <8 x i32>, ptr %1107, align 4, !tbaa !5
  %1109 = shufflevector <8 x i32> %1108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1110 = getelementptr inbounds i32, ptr %1100, i64 -31
  %1111 = load <8 x i32>, ptr %1110, align 4, !tbaa !5
  %1112 = shufflevector <8 x i32> %1111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1113 = mul <8 x i32> %1103, %1095
  %1114 = mul <8 x i32> %1106, %1096
  %1115 = mul <8 x i32> %1109, %1097
  %1116 = mul <8 x i32> %1112, %1098
  %1117 = add nuw i64 %1094, 32
  %1118 = icmp eq i64 %1117, %1091
  br i1 %1118, label %1119, label %1093, !llvm.loop !619

1119:                                             ; preds = %1093
  %1120 = mul <8 x i32> %1114, %1113
  %1121 = mul <8 x i32> %1115, %1120
  %1122 = mul <8 x i32> %1116, %1121
  %1123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1122)
  %1124 = icmp eq i64 %1087, %1091
  br i1 %1124, label %1137, label %1125

1125:                                             ; preds = %1078, %1119
  %1126 = phi i64 [ %1081, %1078 ], [ %1092, %1119 ]
  %1127 = phi i32 [ 1, %1078 ], [ %1123, %1119 ]
  br label %1128

1128:                                             ; preds = %1125, %1128
  %1129 = phi i64 [ %1134, %1128 ], [ %1126, %1125 ]
  %1130 = phi i32 [ %1133, %1128 ], [ %1127, %1125 ]
  %1131 = getelementptr inbounds i32, ptr %11, i64 %1129
  %1132 = load i32, ptr %1131, align 4, !tbaa !5
  %1133 = mul nsw i32 %1132, %1130
  %1134 = add nsw i64 %1129, -1
  %1135 = trunc i64 %1129 to i32
  %1136 = icmp sgt i32 %1135, 0
  br i1 %1136, label %1128, label %1137, !llvm.loop !620

1137:                                             ; preds = %1128, %1119
  %1138 = phi i32 [ %1123, %1119 ], [ %1133, %1128 ]
  %1139 = and i64 %1088, 4294967295
  %1140 = getelementptr inbounds i32, ptr %6, i64 %1139
  %1141 = load i32, ptr %1140, align 4, !tbaa !5
  %1142 = mul nsw i32 %1141, %1138
  %1143 = add nsw i32 %1142, %1082
  %1144 = icmp sgt i64 %1080, 2
  %1145 = add nsw i64 %1081, -1
  %1146 = add i32 %1079, 1
  br i1 %1144, label %1078, label %1147, !llvm.loop !621

1147:                                             ; preds = %1137, %1075
  %1148 = phi i32 [ %1077, %1075 ], [ %1143, %1137 ]
  %1149 = icmp slt i32 %1148, %5
  br i1 %1149, label %1152, label %1150

1150:                                             ; preds = %1147
  %1151 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

1152:                                             ; preds = %1147
  %1153 = sext i32 %1148 to i64
  %1154 = getelementptr inbounds i32, ptr %622, i64 %1153
  %1155 = load i32, ptr %1154, align 4, !tbaa !5
  %1156 = load i32, ptr %624, align 4, !tbaa !5
  %1157 = add nsw i32 %1156, %1155
  store i32 %1157, ptr %624, align 4, !tbaa !5
  %1158 = add nuw nsw i32 %1076, 1
  br i1 %931, label %1159, label %1209

1159:                                             ; preds = %1152
  %1160 = load i32, ptr %4, align 4, !tbaa !5
  %1161 = load i32, ptr %12, align 4, !tbaa !5
  %1162 = add nsw i32 %1161, -1
  %1163 = icmp slt i32 %1160, %1162
  br i1 %1163, label %1186, label %1164

1164:                                             ; preds = %1159
  %1165 = icmp eq i32 %1160, %1162
  br i1 %1165, label %1166, label %1202

1166:                                             ; preds = %1164
  store i32 0, ptr %4, align 4, !tbaa !5
  %1167 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1167, ptr %6, align 4, !tbaa !5
  br i1 %936, label %1209, label %1168

1168:                                             ; preds = %1166, %1196
  %1169 = phi i64 [ %1200, %1196 ], [ 1, %1166 ]
  %1170 = getelementptr inbounds i32, ptr %4, i64 %1169
  %1171 = load i32, ptr %1170, align 4, !tbaa !5
  %1172 = getelementptr inbounds i32, ptr %12, i64 %1169
  %1173 = load i32, ptr %1172, align 4, !tbaa !5
  %1174 = add nsw i32 %1173, -1
  %1175 = icmp slt i32 %1171, %1174
  br i1 %1175, label %1176, label %1194

1176:                                             ; preds = %1168
  br i1 %1163, label %1186, label %1177

1177:                                             ; preds = %1176
  %1178 = shl i64 %1169, 32
  %1179 = add i64 %1178, -4294967296
  %1180 = ashr exact i64 %1179, 32
  %1181 = getelementptr inbounds i32, ptr %7, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !5
  %1183 = getelementptr inbounds i32, ptr %6, i64 %1169
  %1184 = load i32, ptr %1183, align 4, !tbaa !5
  %1185 = add nsw i32 %1184, %1182
  store i32 %1185, ptr %1183, align 4, !tbaa !5
  br label %1204

1186:                                             ; preds = %1159, %1176
  %1187 = phi i32 [ %1171, %1176 ], [ %1160, %1159 ]
  %1188 = phi ptr [ %1170, %1176 ], [ %4, %1159 ]
  %1189 = phi i64 [ %1169, %1176 ], [ 0, %1159 ]
  %1190 = add nsw i32 %1187, 1
  store i32 %1190, ptr %1188, align 4, !tbaa !5
  %1191 = getelementptr inbounds i32, ptr %7, i64 %1189
  %1192 = load i32, ptr %1191, align 4, !tbaa !5
  %1193 = getelementptr inbounds i32, ptr %6, i64 %1189
  br label %1204

1194:                                             ; preds = %1168
  %1195 = icmp eq i32 %1171, %1174
  br i1 %1195, label %1196, label %1202

1196:                                             ; preds = %1194
  store i32 0, ptr %1170, align 4, !tbaa !5
  %1197 = getelementptr inbounds i32, ptr %8, i64 %1169
  %1198 = load i32, ptr %1197, align 4, !tbaa !5
  %1199 = getelementptr inbounds i32, ptr %6, i64 %1169
  store i32 %1198, ptr %1199, align 4, !tbaa !5
  %1200 = add nuw nsw i64 %1169, 1
  %1201 = icmp eq i64 %1200, %934
  br i1 %1201, label %1209, label %1168, !llvm.loop !622

1202:                                             ; preds = %1164, %1194
  %1203 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1204:                                             ; preds = %1177, %1186
  %1205 = phi ptr [ %1193, %1186 ], [ %1170, %1177 ]
  %1206 = phi i32 [ %1192, %1186 ], [ 1, %1177 ]
  %1207 = load i32, ptr %1205, align 4, !tbaa !5
  %1208 = add nsw i32 %1207, %1206
  store i32 %1208, ptr %1205, align 4, !tbaa !5
  br label %1209

1209:                                             ; preds = %1196, %1204, %1166, %1152
  %1210 = icmp eq i32 %1158, %5
  br i1 %1210, label %5404, label %1075, !llvm.loop !623

1211:                                             ; preds = %628
  %1212 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1008, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

1213:                                             ; preds = %18
  %1214 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1215 = load ptr, ptr %1214, align 8, !tbaa !9
  %1216 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1217 = load ptr, ptr %1216, align 8, !tbaa !9
  store i8 0, ptr %1217, align 1, !tbaa !11
  %1218 = icmp eq i32 %13, 0
  br i1 %1218, label %1219, label %1222

1219:                                             ; preds = %1213
  %1220 = load i32, ptr %1215, align 4, !tbaa !5
  %1221 = trunc i32 %1220 to i8
  store i8 %1221, ptr %1217, align 1, !tbaa !11
  br label %5404

1222:                                             ; preds = %1213
  switch i32 %1, label %1810 [
    i32 1, label %1223
    i32 0, label %1520
  ]

1223:                                             ; preds = %1222
  %1224 = getelementptr inbounds i32, ptr %3, i64 %19
  %1225 = load i32, ptr %1224, align 4, !tbaa !5
  %1226 = icmp eq i32 %1225, 0
  %1227 = icmp sgt i32 %5, 0
  br i1 %1226, label %1237, label %1228

1228:                                             ; preds = %1223
  br i1 %1227, label %1229, label %5404

1229:                                             ; preds = %1228
  %1230 = icmp sgt i32 %13, 1
  %1231 = icmp sgt i32 %13, 0
  %1232 = add i32 %13, -2
  %1233 = zext i32 %1232 to i64
  %1234 = zext i32 %13 to i64
  %1235 = add nuw i32 %5, 1
  %1236 = icmp eq i32 %13, 1
  br label %1383

1237:                                             ; preds = %1223
  br i1 %1227, label %1238, label %5404

1238:                                             ; preds = %1237
  %1239 = icmp sgt i32 %13, 1
  %1240 = icmp sgt i32 %13, 0
  %1241 = add i32 %13, -2
  %1242 = zext i32 %1241 to i64
  %1243 = zext i32 %13 to i64
  %1244 = add nuw i32 %5, 1
  %1245 = icmp eq i32 %13, 1
  br label %1246

1246:                                             ; preds = %1238, %1381
  %1247 = phi i32 [ 0, %1238 ], [ %1333, %1381 ]
  %1248 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1239, label %1249, label %1318

1249:                                             ; preds = %1246, %1308
  %1250 = phi i32 [ %1317, %1308 ], [ 0, %1246 ]
  %1251 = phi i64 [ %1259, %1308 ], [ %1243, %1246 ]
  %1252 = phi i64 [ %1316, %1308 ], [ %1242, %1246 ]
  %1253 = phi i32 [ %1314, %1308 ], [ %1248, %1246 ]
  %1254 = sub i32 %1241, %1250
  %1255 = tail call i32 @llvm.smin.i32(i32 %1254, i32 0)
  %1256 = sub i32 %1254, %1255
  %1257 = zext i32 %1256 to i64
  %1258 = add nuw nsw i64 %1257, 1
  %1259 = add nsw i64 %1251, -1
  %1260 = icmp ult i32 %1256, 31
  br i1 %1260, label %1296, label %1261

1261:                                             ; preds = %1249
  %1262 = and i64 %1258, 8589934560
  %1263 = sub i64 %1252, %1262
  br label %1264

1264:                                             ; preds = %1264, %1261
  %1265 = phi i64 [ 0, %1261 ], [ %1288, %1264 ]
  %1266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1284, %1264 ]
  %1267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1285, %1264 ]
  %1268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1286, %1264 ]
  %1269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1261 ], [ %1287, %1264 ]
  %1270 = sub i64 %1252, %1265
  %1271 = getelementptr inbounds i32, ptr %9, i64 %1270
  %1272 = getelementptr inbounds i32, ptr %1271, i64 -7
  %1273 = load <8 x i32>, ptr %1272, align 4, !tbaa !5
  %1274 = shufflevector <8 x i32> %1273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1275 = getelementptr inbounds i32, ptr %1271, i64 -15
  %1276 = load <8 x i32>, ptr %1275, align 4, !tbaa !5
  %1277 = shufflevector <8 x i32> %1276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1278 = getelementptr inbounds i32, ptr %1271, i64 -23
  %1279 = load <8 x i32>, ptr %1278, align 4, !tbaa !5
  %1280 = shufflevector <8 x i32> %1279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1281 = getelementptr inbounds i32, ptr %1271, i64 -31
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = mul <8 x i32> %1274, %1266
  %1285 = mul <8 x i32> %1277, %1267
  %1286 = mul <8 x i32> %1280, %1268
  %1287 = mul <8 x i32> %1283, %1269
  %1288 = add nuw i64 %1265, 32
  %1289 = icmp eq i64 %1288, %1262
  br i1 %1289, label %1290, label %1264, !llvm.loop !624

1290:                                             ; preds = %1264
  %1291 = mul <8 x i32> %1285, %1284
  %1292 = mul <8 x i32> %1286, %1291
  %1293 = mul <8 x i32> %1287, %1292
  %1294 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1293)
  %1295 = icmp eq i64 %1258, %1262
  br i1 %1295, label %1308, label %1296

1296:                                             ; preds = %1249, %1290
  %1297 = phi i64 [ %1252, %1249 ], [ %1263, %1290 ]
  %1298 = phi i32 [ 1, %1249 ], [ %1294, %1290 ]
  br label %1299

1299:                                             ; preds = %1296, %1299
  %1300 = phi i64 [ %1305, %1299 ], [ %1297, %1296 ]
  %1301 = phi i32 [ %1304, %1299 ], [ %1298, %1296 ]
  %1302 = getelementptr inbounds i32, ptr %9, i64 %1300
  %1303 = load i32, ptr %1302, align 4, !tbaa !5
  %1304 = mul nsw i32 %1303, %1301
  %1305 = add nsw i64 %1300, -1
  %1306 = trunc i64 %1300 to i32
  %1307 = icmp sgt i32 %1306, 0
  br i1 %1307, label %1299, label %1308, !llvm.loop !625

1308:                                             ; preds = %1299, %1290
  %1309 = phi i32 [ %1294, %1290 ], [ %1304, %1299 ]
  %1310 = and i64 %1259, 4294967295
  %1311 = getelementptr inbounds i32, ptr %6, i64 %1310
  %1312 = load i32, ptr %1311, align 4, !tbaa !5
  %1313 = mul nsw i32 %1312, %1309
  %1314 = add nsw i32 %1313, %1253
  %1315 = icmp sgt i64 %1251, 2
  %1316 = add nsw i64 %1252, -1
  %1317 = add i32 %1250, 1
  br i1 %1315, label %1249, label %1318, !llvm.loop !626

1318:                                             ; preds = %1308, %1246
  %1319 = phi i32 [ %1248, %1246 ], [ %1314, %1308 ]
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds double, ptr %2, i64 %1320
  %1322 = load double, ptr %1321, align 8, !tbaa !18
  %1323 = getelementptr inbounds i32, ptr %1215, i64 %1320
  %1324 = load i32, ptr %1323, align 4, !tbaa !5
  %1325 = load i8, ptr %1217, align 1, !tbaa !11
  %1326 = sitofp i8 %1325 to double
  %1327 = shl i32 %1324, 24
  %1328 = ashr exact i32 %1327, 24
  %1329 = sitofp i32 %1328 to double
  %1330 = fmul fast double %1322, %1329
  %1331 = fadd fast double %1330, %1326
  %1332 = fptosi double %1331 to i8
  store i8 %1332, ptr %1217, align 1, !tbaa !11
  %1333 = add nuw nsw i32 %1247, 1
  br i1 %1240, label %1334, label %1381

1334:                                             ; preds = %1318
  %1335 = load i32, ptr %4, align 4, !tbaa !5
  %1336 = load i32, ptr %12, align 4, !tbaa !5
  %1337 = add nsw i32 %1336, -1
  %1338 = icmp slt i32 %1335, %1337
  br i1 %1338, label %1358, label %1339

1339:                                             ; preds = %1334
  %1340 = icmp eq i32 %1335, %1337
  br i1 %1340, label %1341, label %1374

1341:                                             ; preds = %1339
  store i32 0, ptr %4, align 4, !tbaa !5
  %1342 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1342, ptr %6, align 4, !tbaa !5
  br i1 %1245, label %1381, label %1343

1343:                                             ; preds = %1341, %1368
  %1344 = phi i64 [ %1372, %1368 ], [ 1, %1341 ]
  %1345 = getelementptr inbounds i32, ptr %4, i64 %1344
  %1346 = load i32, ptr %1345, align 4, !tbaa !5
  %1347 = getelementptr inbounds i32, ptr %12, i64 %1344
  %1348 = load i32, ptr %1347, align 4, !tbaa !5
  %1349 = add nsw i32 %1348, -1
  %1350 = icmp slt i32 %1346, %1349
  br i1 %1350, label %1351, label %1366

1351:                                             ; preds = %1343
  br i1 %1338, label %1358, label %1352

1352:                                             ; preds = %1351
  %1353 = getelementptr inbounds i32, ptr %7, i64 %1344
  %1354 = load i32, ptr %1353, align 4, !tbaa !5
  %1355 = getelementptr inbounds i32, ptr %6, i64 %1344
  %1356 = load i32, ptr %1355, align 4, !tbaa !5
  %1357 = add nsw i32 %1356, %1354
  store i32 %1357, ptr %1355, align 4, !tbaa !5
  br label %1376

1358:                                             ; preds = %1334, %1351
  %1359 = phi i32 [ %1346, %1351 ], [ %1335, %1334 ]
  %1360 = phi ptr [ %1345, %1351 ], [ %4, %1334 ]
  %1361 = phi i64 [ %1344, %1351 ], [ 0, %1334 ]
  %1362 = add nsw i32 %1359, 1
  store i32 %1362, ptr %1360, align 4, !tbaa !5
  %1363 = getelementptr inbounds i32, ptr %7, i64 %1361
  %1364 = load i32, ptr %1363, align 4, !tbaa !5
  %1365 = getelementptr inbounds i32, ptr %6, i64 %1361
  br label %1376

1366:                                             ; preds = %1343
  %1367 = icmp eq i32 %1346, %1349
  br i1 %1367, label %1368, label %1374

1368:                                             ; preds = %1366
  store i32 0, ptr %1345, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %8, i64 %1344
  %1370 = load i32, ptr %1369, align 4, !tbaa !5
  %1371 = getelementptr inbounds i32, ptr %6, i64 %1344
  store i32 %1370, ptr %1371, align 4, !tbaa !5
  %1372 = add nuw nsw i64 %1344, 1
  %1373 = icmp eq i64 %1372, %1243
  br i1 %1373, label %1381, label %1343, !llvm.loop !627

1374:                                             ; preds = %1339, %1366
  %1375 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1376:                                             ; preds = %1352, %1358
  %1377 = phi ptr [ %1365, %1358 ], [ %1345, %1352 ]
  %1378 = phi i32 [ %1364, %1358 ], [ 1, %1352 ]
  %1379 = load i32, ptr %1377, align 4, !tbaa !5
  %1380 = add nsw i32 %1379, %1378
  store i32 %1380, ptr %1377, align 4, !tbaa !5
  br label %1381

1381:                                             ; preds = %1368, %1376, %1341, %1318
  %1382 = icmp eq i32 %1333, %5
  br i1 %1382, label %5404, label %1246, !llvm.loop !628

1383:                                             ; preds = %1229, %1518
  %1384 = phi i32 [ 0, %1229 ], [ %1467, %1518 ]
  %1385 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1230, label %1386, label %1455

1386:                                             ; preds = %1383, %1445
  %1387 = phi i32 [ %1454, %1445 ], [ 0, %1383 ]
  %1388 = phi i64 [ %1396, %1445 ], [ %1234, %1383 ]
  %1389 = phi i64 [ %1453, %1445 ], [ %1233, %1383 ]
  %1390 = phi i32 [ %1451, %1445 ], [ %1385, %1383 ]
  %1391 = sub i32 %1232, %1387
  %1392 = tail call i32 @llvm.smin.i32(i32 %1391, i32 0)
  %1393 = sub i32 %1391, %1392
  %1394 = zext i32 %1393 to i64
  %1395 = add nuw nsw i64 %1394, 1
  %1396 = add nsw i64 %1388, -1
  %1397 = icmp ult i32 %1393, 31
  br i1 %1397, label %1433, label %1398

1398:                                             ; preds = %1386
  %1399 = and i64 %1395, 8589934560
  %1400 = sub i64 %1389, %1399
  br label %1401

1401:                                             ; preds = %1401, %1398
  %1402 = phi i64 [ 0, %1398 ], [ %1425, %1401 ]
  %1403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1421, %1401 ]
  %1404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1422, %1401 ]
  %1405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1423, %1401 ]
  %1406 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1398 ], [ %1424, %1401 ]
  %1407 = sub i64 %1389, %1402
  %1408 = getelementptr inbounds i32, ptr %11, i64 %1407
  %1409 = getelementptr inbounds i32, ptr %1408, i64 -7
  %1410 = load <8 x i32>, ptr %1409, align 4, !tbaa !5
  %1411 = shufflevector <8 x i32> %1410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1412 = getelementptr inbounds i32, ptr %1408, i64 -15
  %1413 = load <8 x i32>, ptr %1412, align 4, !tbaa !5
  %1414 = shufflevector <8 x i32> %1413, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1415 = getelementptr inbounds i32, ptr %1408, i64 -23
  %1416 = load <8 x i32>, ptr %1415, align 4, !tbaa !5
  %1417 = shufflevector <8 x i32> %1416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1418 = getelementptr inbounds i32, ptr %1408, i64 -31
  %1419 = load <8 x i32>, ptr %1418, align 4, !tbaa !5
  %1420 = shufflevector <8 x i32> %1419, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1421 = mul <8 x i32> %1411, %1403
  %1422 = mul <8 x i32> %1414, %1404
  %1423 = mul <8 x i32> %1417, %1405
  %1424 = mul <8 x i32> %1420, %1406
  %1425 = add nuw i64 %1402, 32
  %1426 = icmp eq i64 %1425, %1399
  br i1 %1426, label %1427, label %1401, !llvm.loop !629

1427:                                             ; preds = %1401
  %1428 = mul <8 x i32> %1422, %1421
  %1429 = mul <8 x i32> %1423, %1428
  %1430 = mul <8 x i32> %1424, %1429
  %1431 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1430)
  %1432 = icmp eq i64 %1395, %1399
  br i1 %1432, label %1445, label %1433

1433:                                             ; preds = %1386, %1427
  %1434 = phi i64 [ %1389, %1386 ], [ %1400, %1427 ]
  %1435 = phi i32 [ 1, %1386 ], [ %1431, %1427 ]
  br label %1436

1436:                                             ; preds = %1433, %1436
  %1437 = phi i64 [ %1442, %1436 ], [ %1434, %1433 ]
  %1438 = phi i32 [ %1441, %1436 ], [ %1435, %1433 ]
  %1439 = getelementptr inbounds i32, ptr %11, i64 %1437
  %1440 = load i32, ptr %1439, align 4, !tbaa !5
  %1441 = mul nsw i32 %1440, %1438
  %1442 = add nsw i64 %1437, -1
  %1443 = trunc i64 %1437 to i32
  %1444 = icmp sgt i32 %1443, 0
  br i1 %1444, label %1436, label %1445, !llvm.loop !630

1445:                                             ; preds = %1436, %1427
  %1446 = phi i32 [ %1431, %1427 ], [ %1441, %1436 ]
  %1447 = and i64 %1396, 4294967295
  %1448 = getelementptr inbounds i32, ptr %6, i64 %1447
  %1449 = load i32, ptr %1448, align 4, !tbaa !5
  %1450 = mul nsw i32 %1449, %1446
  %1451 = add nsw i32 %1450, %1390
  %1452 = icmp sgt i64 %1388, 2
  %1453 = add nsw i64 %1389, -1
  %1454 = add i32 %1387, 1
  br i1 %1452, label %1386, label %1455, !llvm.loop !631

1455:                                             ; preds = %1445, %1383
  %1456 = phi i32 [ %1385, %1383 ], [ %1451, %1445 ]
  %1457 = icmp slt i32 %1456, %5
  br i1 %1457, label %1460, label %1458

1458:                                             ; preds = %1455
  %1459 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

1460:                                             ; preds = %1455
  %1461 = sext i32 %1456 to i64
  %1462 = getelementptr inbounds i32, ptr %1215, i64 %1461
  %1463 = load i32, ptr %1462, align 4, !tbaa !5
  %1464 = load i8, ptr %1217, align 1, !tbaa !11
  %1465 = trunc i32 %1463 to i8
  %1466 = add i8 %1464, %1465
  store i8 %1466, ptr %1217, align 1, !tbaa !11
  %1467 = add nuw nsw i32 %1384, 1
  br i1 %1231, label %1468, label %1518

1468:                                             ; preds = %1460
  %1469 = load i32, ptr %4, align 4, !tbaa !5
  %1470 = load i32, ptr %12, align 4, !tbaa !5
  %1471 = add nsw i32 %1470, -1
  %1472 = icmp slt i32 %1469, %1471
  br i1 %1472, label %1495, label %1473

1473:                                             ; preds = %1468
  %1474 = icmp eq i32 %1469, %1471
  br i1 %1474, label %1475, label %1511

1475:                                             ; preds = %1473
  store i32 0, ptr %4, align 4, !tbaa !5
  %1476 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1476, ptr %6, align 4, !tbaa !5
  br i1 %1236, label %1518, label %1477

1477:                                             ; preds = %1475, %1505
  %1478 = phi i64 [ %1509, %1505 ], [ 1, %1475 ]
  %1479 = getelementptr inbounds i32, ptr %4, i64 %1478
  %1480 = load i32, ptr %1479, align 4, !tbaa !5
  %1481 = getelementptr inbounds i32, ptr %12, i64 %1478
  %1482 = load i32, ptr %1481, align 4, !tbaa !5
  %1483 = add nsw i32 %1482, -1
  %1484 = icmp slt i32 %1480, %1483
  br i1 %1484, label %1485, label %1503

1485:                                             ; preds = %1477
  br i1 %1472, label %1495, label %1486

1486:                                             ; preds = %1485
  %1487 = shl i64 %1478, 32
  %1488 = add i64 %1487, -4294967296
  %1489 = ashr exact i64 %1488, 32
  %1490 = getelementptr inbounds i32, ptr %7, i64 %1489
  %1491 = load i32, ptr %1490, align 4, !tbaa !5
  %1492 = getelementptr inbounds i32, ptr %6, i64 %1478
  %1493 = load i32, ptr %1492, align 4, !tbaa !5
  %1494 = add nsw i32 %1493, %1491
  store i32 %1494, ptr %1492, align 4, !tbaa !5
  br label %1513

1495:                                             ; preds = %1468, %1485
  %1496 = phi i32 [ %1480, %1485 ], [ %1469, %1468 ]
  %1497 = phi ptr [ %1479, %1485 ], [ %4, %1468 ]
  %1498 = phi i64 [ %1478, %1485 ], [ 0, %1468 ]
  %1499 = add nsw i32 %1496, 1
  store i32 %1499, ptr %1497, align 4, !tbaa !5
  %1500 = getelementptr inbounds i32, ptr %7, i64 %1498
  %1501 = load i32, ptr %1500, align 4, !tbaa !5
  %1502 = getelementptr inbounds i32, ptr %6, i64 %1498
  br label %1513

1503:                                             ; preds = %1477
  %1504 = icmp eq i32 %1480, %1483
  br i1 %1504, label %1505, label %1511

1505:                                             ; preds = %1503
  store i32 0, ptr %1479, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %8, i64 %1478
  %1507 = load i32, ptr %1506, align 4, !tbaa !5
  %1508 = getelementptr inbounds i32, ptr %6, i64 %1478
  store i32 %1507, ptr %1508, align 4, !tbaa !5
  %1509 = add nuw nsw i64 %1478, 1
  %1510 = icmp eq i64 %1509, %1234
  br i1 %1510, label %1518, label %1477, !llvm.loop !632

1511:                                             ; preds = %1473, %1503
  %1512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1513:                                             ; preds = %1486, %1495
  %1514 = phi ptr [ %1502, %1495 ], [ %1479, %1486 ]
  %1515 = phi i32 [ %1501, %1495 ], [ 1, %1486 ]
  %1516 = load i32, ptr %1514, align 4, !tbaa !5
  %1517 = add nsw i32 %1516, %1515
  store i32 %1517, ptr %1514, align 4, !tbaa !5
  br label %1518

1518:                                             ; preds = %1505, %1513, %1475, %1460
  %1519 = icmp eq i32 %1467, %5
  br i1 %1519, label %5404, label %1383, !llvm.loop !633

1520:                                             ; preds = %1222
  %1521 = getelementptr inbounds i32, ptr %3, i64 %19
  %1522 = load i32, ptr %1521, align 4, !tbaa !5
  %1523 = icmp eq i32 %1522, 0
  %1524 = icmp sgt i32 %5, 0
  br i1 %1523, label %1534, label %1525

1525:                                             ; preds = %1520
  br i1 %1524, label %1526, label %5404

1526:                                             ; preds = %1525
  %1527 = icmp sgt i32 %13, 1
  %1528 = icmp sgt i32 %13, 0
  %1529 = add i32 %13, -2
  %1530 = zext i32 %1529 to i64
  %1531 = zext i32 %13 to i64
  %1532 = add nuw i32 %5, 1
  %1533 = icmp eq i32 %13, 1
  br label %1673

1534:                                             ; preds = %1520
  br i1 %1524, label %1535, label %5404

1535:                                             ; preds = %1534
  %1536 = icmp sgt i32 %13, 1
  %1537 = icmp sgt i32 %13, 0
  %1538 = add i32 %13, -2
  %1539 = zext i32 %1538 to i64
  %1540 = zext i32 %13 to i64
  %1541 = add nuw i32 %5, 1
  %1542 = icmp eq i32 %13, 1
  br label %1543

1543:                                             ; preds = %1535, %1671
  %1544 = phi i32 [ 0, %1535 ], [ %1623, %1671 ]
  %1545 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1536, label %1546, label %1615

1546:                                             ; preds = %1543, %1605
  %1547 = phi i32 [ %1614, %1605 ], [ 0, %1543 ]
  %1548 = phi i64 [ %1556, %1605 ], [ %1540, %1543 ]
  %1549 = phi i64 [ %1613, %1605 ], [ %1539, %1543 ]
  %1550 = phi i32 [ %1611, %1605 ], [ %1545, %1543 ]
  %1551 = sub i32 %1538, %1547
  %1552 = tail call i32 @llvm.smin.i32(i32 %1551, i32 0)
  %1553 = sub i32 %1551, %1552
  %1554 = zext i32 %1553 to i64
  %1555 = add nuw nsw i64 %1554, 1
  %1556 = add nsw i64 %1548, -1
  %1557 = icmp ult i32 %1553, 31
  br i1 %1557, label %1593, label %1558

1558:                                             ; preds = %1546
  %1559 = and i64 %1555, 8589934560
  %1560 = sub i64 %1549, %1559
  br label %1561

1561:                                             ; preds = %1561, %1558
  %1562 = phi i64 [ 0, %1558 ], [ %1585, %1561 ]
  %1563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1581, %1561 ]
  %1564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1582, %1561 ]
  %1565 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1583, %1561 ]
  %1566 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1558 ], [ %1584, %1561 ]
  %1567 = sub i64 %1549, %1562
  %1568 = getelementptr inbounds i32, ptr %9, i64 %1567
  %1569 = getelementptr inbounds i32, ptr %1568, i64 -7
  %1570 = load <8 x i32>, ptr %1569, align 4, !tbaa !5
  %1571 = shufflevector <8 x i32> %1570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1572 = getelementptr inbounds i32, ptr %1568, i64 -15
  %1573 = load <8 x i32>, ptr %1572, align 4, !tbaa !5
  %1574 = shufflevector <8 x i32> %1573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1575 = getelementptr inbounds i32, ptr %1568, i64 -23
  %1576 = load <8 x i32>, ptr %1575, align 4, !tbaa !5
  %1577 = shufflevector <8 x i32> %1576, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1578 = getelementptr inbounds i32, ptr %1568, i64 -31
  %1579 = load <8 x i32>, ptr %1578, align 4, !tbaa !5
  %1580 = shufflevector <8 x i32> %1579, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1581 = mul <8 x i32> %1571, %1563
  %1582 = mul <8 x i32> %1574, %1564
  %1583 = mul <8 x i32> %1577, %1565
  %1584 = mul <8 x i32> %1580, %1566
  %1585 = add nuw i64 %1562, 32
  %1586 = icmp eq i64 %1585, %1559
  br i1 %1586, label %1587, label %1561, !llvm.loop !634

1587:                                             ; preds = %1561
  %1588 = mul <8 x i32> %1582, %1581
  %1589 = mul <8 x i32> %1583, %1588
  %1590 = mul <8 x i32> %1584, %1589
  %1591 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1590)
  %1592 = icmp eq i64 %1555, %1559
  br i1 %1592, label %1605, label %1593

1593:                                             ; preds = %1546, %1587
  %1594 = phi i64 [ %1549, %1546 ], [ %1560, %1587 ]
  %1595 = phi i32 [ 1, %1546 ], [ %1591, %1587 ]
  br label %1596

1596:                                             ; preds = %1593, %1596
  %1597 = phi i64 [ %1602, %1596 ], [ %1594, %1593 ]
  %1598 = phi i32 [ %1601, %1596 ], [ %1595, %1593 ]
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1597
  %1600 = load i32, ptr %1599, align 4, !tbaa !5
  %1601 = mul nsw i32 %1600, %1598
  %1602 = add nsw i64 %1597, -1
  %1603 = trunc i64 %1597 to i32
  %1604 = icmp sgt i32 %1603, 0
  br i1 %1604, label %1596, label %1605, !llvm.loop !635

1605:                                             ; preds = %1596, %1587
  %1606 = phi i32 [ %1591, %1587 ], [ %1601, %1596 ]
  %1607 = and i64 %1556, 4294967295
  %1608 = getelementptr inbounds i32, ptr %6, i64 %1607
  %1609 = load i32, ptr %1608, align 4, !tbaa !5
  %1610 = mul nsw i32 %1609, %1606
  %1611 = add nsw i32 %1610, %1550
  %1612 = icmp sgt i64 %1548, 2
  %1613 = add nsw i64 %1549, -1
  %1614 = add i32 %1547, 1
  br i1 %1612, label %1546, label %1615, !llvm.loop !636

1615:                                             ; preds = %1605, %1543
  %1616 = phi i32 [ %1545, %1543 ], [ %1611, %1605 ]
  %1617 = sext i32 %1616 to i64
  %1618 = getelementptr inbounds i32, ptr %1215, i64 %1617
  %1619 = load i32, ptr %1618, align 4, !tbaa !5
  %1620 = load i8, ptr %1217, align 1, !tbaa !11
  %1621 = trunc i32 %1619 to i8
  %1622 = add i8 %1620, %1621
  store i8 %1622, ptr %1217, align 1, !tbaa !11
  %1623 = add nuw nsw i32 %1544, 1
  br i1 %1537, label %1624, label %1671

1624:                                             ; preds = %1615
  %1625 = load i32, ptr %4, align 4, !tbaa !5
  %1626 = load i32, ptr %12, align 4, !tbaa !5
  %1627 = add nsw i32 %1626, -1
  %1628 = icmp slt i32 %1625, %1627
  br i1 %1628, label %1648, label %1629

1629:                                             ; preds = %1624
  %1630 = icmp eq i32 %1625, %1627
  br i1 %1630, label %1631, label %1664

1631:                                             ; preds = %1629
  store i32 0, ptr %4, align 4, !tbaa !5
  %1632 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1632, ptr %6, align 4, !tbaa !5
  br i1 %1542, label %1671, label %1633

1633:                                             ; preds = %1631, %1658
  %1634 = phi i64 [ %1662, %1658 ], [ 1, %1631 ]
  %1635 = getelementptr inbounds i32, ptr %4, i64 %1634
  %1636 = load i32, ptr %1635, align 4, !tbaa !5
  %1637 = getelementptr inbounds i32, ptr %12, i64 %1634
  %1638 = load i32, ptr %1637, align 4, !tbaa !5
  %1639 = add nsw i32 %1638, -1
  %1640 = icmp slt i32 %1636, %1639
  br i1 %1640, label %1641, label %1656

1641:                                             ; preds = %1633
  br i1 %1628, label %1648, label %1642

1642:                                             ; preds = %1641
  %1643 = getelementptr inbounds i32, ptr %7, i64 %1634
  %1644 = load i32, ptr %1643, align 4, !tbaa !5
  %1645 = getelementptr inbounds i32, ptr %6, i64 %1634
  %1646 = load i32, ptr %1645, align 4, !tbaa !5
  %1647 = add nsw i32 %1646, %1644
  store i32 %1647, ptr %1645, align 4, !tbaa !5
  br label %1666

1648:                                             ; preds = %1624, %1641
  %1649 = phi i32 [ %1636, %1641 ], [ %1625, %1624 ]
  %1650 = phi ptr [ %1635, %1641 ], [ %4, %1624 ]
  %1651 = phi i64 [ %1634, %1641 ], [ 0, %1624 ]
  %1652 = add nsw i32 %1649, 1
  store i32 %1652, ptr %1650, align 4, !tbaa !5
  %1653 = getelementptr inbounds i32, ptr %7, i64 %1651
  %1654 = load i32, ptr %1653, align 4, !tbaa !5
  %1655 = getelementptr inbounds i32, ptr %6, i64 %1651
  br label %1666

1656:                                             ; preds = %1633
  %1657 = icmp eq i32 %1636, %1639
  br i1 %1657, label %1658, label %1664

1658:                                             ; preds = %1656
  store i32 0, ptr %1635, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %8, i64 %1634
  %1660 = load i32, ptr %1659, align 4, !tbaa !5
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1634
  store i32 %1660, ptr %1661, align 4, !tbaa !5
  %1662 = add nuw nsw i64 %1634, 1
  %1663 = icmp eq i64 %1662, %1540
  br i1 %1663, label %1671, label %1633, !llvm.loop !637

1664:                                             ; preds = %1629, %1656
  %1665 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1666:                                             ; preds = %1642, %1648
  %1667 = phi ptr [ %1655, %1648 ], [ %1635, %1642 ]
  %1668 = phi i32 [ %1654, %1648 ], [ 1, %1642 ]
  %1669 = load i32, ptr %1667, align 4, !tbaa !5
  %1670 = add nsw i32 %1669, %1668
  store i32 %1670, ptr %1667, align 4, !tbaa !5
  br label %1671

1671:                                             ; preds = %1658, %1666, %1631, %1615
  %1672 = icmp eq i32 %1623, %5
  br i1 %1672, label %5404, label %1543, !llvm.loop !638

1673:                                             ; preds = %1526, %1808
  %1674 = phi i32 [ 0, %1526 ], [ %1757, %1808 ]
  %1675 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1527, label %1676, label %1745

1676:                                             ; preds = %1673, %1735
  %1677 = phi i32 [ %1744, %1735 ], [ 0, %1673 ]
  %1678 = phi i64 [ %1686, %1735 ], [ %1531, %1673 ]
  %1679 = phi i64 [ %1743, %1735 ], [ %1530, %1673 ]
  %1680 = phi i32 [ %1741, %1735 ], [ %1675, %1673 ]
  %1681 = sub i32 %1529, %1677
  %1682 = tail call i32 @llvm.smin.i32(i32 %1681, i32 0)
  %1683 = sub i32 %1681, %1682
  %1684 = zext i32 %1683 to i64
  %1685 = add nuw nsw i64 %1684, 1
  %1686 = add nsw i64 %1678, -1
  %1687 = icmp ult i32 %1683, 31
  br i1 %1687, label %1723, label %1688

1688:                                             ; preds = %1676
  %1689 = and i64 %1685, 8589934560
  %1690 = sub i64 %1679, %1689
  br label %1691

1691:                                             ; preds = %1691, %1688
  %1692 = phi i64 [ 0, %1688 ], [ %1715, %1691 ]
  %1693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1711, %1691 ]
  %1694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1712, %1691 ]
  %1695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1713, %1691 ]
  %1696 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1688 ], [ %1714, %1691 ]
  %1697 = sub i64 %1679, %1692
  %1698 = getelementptr inbounds i32, ptr %11, i64 %1697
  %1699 = getelementptr inbounds i32, ptr %1698, i64 -7
  %1700 = load <8 x i32>, ptr %1699, align 4, !tbaa !5
  %1701 = shufflevector <8 x i32> %1700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1702 = getelementptr inbounds i32, ptr %1698, i64 -15
  %1703 = load <8 x i32>, ptr %1702, align 4, !tbaa !5
  %1704 = shufflevector <8 x i32> %1703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1705 = getelementptr inbounds i32, ptr %1698, i64 -23
  %1706 = load <8 x i32>, ptr %1705, align 4, !tbaa !5
  %1707 = shufflevector <8 x i32> %1706, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1708 = getelementptr inbounds i32, ptr %1698, i64 -31
  %1709 = load <8 x i32>, ptr %1708, align 4, !tbaa !5
  %1710 = shufflevector <8 x i32> %1709, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1711 = mul <8 x i32> %1701, %1693
  %1712 = mul <8 x i32> %1704, %1694
  %1713 = mul <8 x i32> %1707, %1695
  %1714 = mul <8 x i32> %1710, %1696
  %1715 = add nuw i64 %1692, 32
  %1716 = icmp eq i64 %1715, %1689
  br i1 %1716, label %1717, label %1691, !llvm.loop !639

1717:                                             ; preds = %1691
  %1718 = mul <8 x i32> %1712, %1711
  %1719 = mul <8 x i32> %1713, %1718
  %1720 = mul <8 x i32> %1714, %1719
  %1721 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1720)
  %1722 = icmp eq i64 %1685, %1689
  br i1 %1722, label %1735, label %1723

1723:                                             ; preds = %1676, %1717
  %1724 = phi i64 [ %1679, %1676 ], [ %1690, %1717 ]
  %1725 = phi i32 [ 1, %1676 ], [ %1721, %1717 ]
  br label %1726

1726:                                             ; preds = %1723, %1726
  %1727 = phi i64 [ %1732, %1726 ], [ %1724, %1723 ]
  %1728 = phi i32 [ %1731, %1726 ], [ %1725, %1723 ]
  %1729 = getelementptr inbounds i32, ptr %11, i64 %1727
  %1730 = load i32, ptr %1729, align 4, !tbaa !5
  %1731 = mul nsw i32 %1730, %1728
  %1732 = add nsw i64 %1727, -1
  %1733 = trunc i64 %1727 to i32
  %1734 = icmp sgt i32 %1733, 0
  br i1 %1734, label %1726, label %1735, !llvm.loop !640

1735:                                             ; preds = %1726, %1717
  %1736 = phi i32 [ %1721, %1717 ], [ %1731, %1726 ]
  %1737 = and i64 %1686, 4294967295
  %1738 = getelementptr inbounds i32, ptr %6, i64 %1737
  %1739 = load i32, ptr %1738, align 4, !tbaa !5
  %1740 = mul nsw i32 %1739, %1736
  %1741 = add nsw i32 %1740, %1680
  %1742 = icmp sgt i64 %1678, 2
  %1743 = add nsw i64 %1679, -1
  %1744 = add i32 %1677, 1
  br i1 %1742, label %1676, label %1745, !llvm.loop !641

1745:                                             ; preds = %1735, %1673
  %1746 = phi i32 [ %1675, %1673 ], [ %1741, %1735 ]
  %1747 = icmp slt i32 %1746, %5
  br i1 %1747, label %1750, label %1748

1748:                                             ; preds = %1745
  %1749 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

1750:                                             ; preds = %1745
  %1751 = sext i32 %1746 to i64
  %1752 = getelementptr inbounds i32, ptr %1215, i64 %1751
  %1753 = load i32, ptr %1752, align 4, !tbaa !5
  %1754 = load i8, ptr %1217, align 1, !tbaa !11
  %1755 = trunc i32 %1753 to i8
  %1756 = add i8 %1754, %1755
  store i8 %1756, ptr %1217, align 1, !tbaa !11
  %1757 = add nuw nsw i32 %1674, 1
  br i1 %1528, label %1758, label %1808

1758:                                             ; preds = %1750
  %1759 = load i32, ptr %4, align 4, !tbaa !5
  %1760 = load i32, ptr %12, align 4, !tbaa !5
  %1761 = add nsw i32 %1760, -1
  %1762 = icmp slt i32 %1759, %1761
  br i1 %1762, label %1785, label %1763

1763:                                             ; preds = %1758
  %1764 = icmp eq i32 %1759, %1761
  br i1 %1764, label %1765, label %1801

1765:                                             ; preds = %1763
  store i32 0, ptr %4, align 4, !tbaa !5
  %1766 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1766, ptr %6, align 4, !tbaa !5
  br i1 %1533, label %1808, label %1767

1767:                                             ; preds = %1765, %1795
  %1768 = phi i64 [ %1799, %1795 ], [ 1, %1765 ]
  %1769 = getelementptr inbounds i32, ptr %4, i64 %1768
  %1770 = load i32, ptr %1769, align 4, !tbaa !5
  %1771 = getelementptr inbounds i32, ptr %12, i64 %1768
  %1772 = load i32, ptr %1771, align 4, !tbaa !5
  %1773 = add nsw i32 %1772, -1
  %1774 = icmp slt i32 %1770, %1773
  br i1 %1774, label %1775, label %1793

1775:                                             ; preds = %1767
  br i1 %1762, label %1785, label %1776

1776:                                             ; preds = %1775
  %1777 = shl i64 %1768, 32
  %1778 = add i64 %1777, -4294967296
  %1779 = ashr exact i64 %1778, 32
  %1780 = getelementptr inbounds i32, ptr %7, i64 %1779
  %1781 = load i32, ptr %1780, align 4, !tbaa !5
  %1782 = getelementptr inbounds i32, ptr %6, i64 %1768
  %1783 = load i32, ptr %1782, align 4, !tbaa !5
  %1784 = add nsw i32 %1783, %1781
  store i32 %1784, ptr %1782, align 4, !tbaa !5
  br label %1803

1785:                                             ; preds = %1758, %1775
  %1786 = phi i32 [ %1770, %1775 ], [ %1759, %1758 ]
  %1787 = phi ptr [ %1769, %1775 ], [ %4, %1758 ]
  %1788 = phi i64 [ %1768, %1775 ], [ 0, %1758 ]
  %1789 = add nsw i32 %1786, 1
  store i32 %1789, ptr %1787, align 4, !tbaa !5
  %1790 = getelementptr inbounds i32, ptr %7, i64 %1788
  %1791 = load i32, ptr %1790, align 4, !tbaa !5
  %1792 = getelementptr inbounds i32, ptr %6, i64 %1788
  br label %1803

1793:                                             ; preds = %1767
  %1794 = icmp eq i32 %1770, %1773
  br i1 %1794, label %1795, label %1801

1795:                                             ; preds = %1793
  store i32 0, ptr %1769, align 4, !tbaa !5
  %1796 = getelementptr inbounds i32, ptr %8, i64 %1768
  %1797 = load i32, ptr %1796, align 4, !tbaa !5
  %1798 = getelementptr inbounds i32, ptr %6, i64 %1768
  store i32 %1797, ptr %1798, align 4, !tbaa !5
  %1799 = add nuw nsw i64 %1768, 1
  %1800 = icmp eq i64 %1799, %1531
  br i1 %1800, label %1808, label %1767, !llvm.loop !642

1801:                                             ; preds = %1763, %1793
  %1802 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1803:                                             ; preds = %1776, %1785
  %1804 = phi ptr [ %1792, %1785 ], [ %1769, %1776 ]
  %1805 = phi i32 [ %1791, %1785 ], [ 1, %1776 ]
  %1806 = load i32, ptr %1804, align 4, !tbaa !5
  %1807 = add nsw i32 %1806, %1805
  store i32 %1807, ptr %1804, align 4, !tbaa !5
  br label %1808

1808:                                             ; preds = %1795, %1803, %1765, %1750
  %1809 = icmp eq i32 %1757, %5
  br i1 %1809, label %5404, label %1673, !llvm.loop !643

1810:                                             ; preds = %1222
  %1811 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

1812:                                             ; preds = %18
  %1813 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1814 = load ptr, ptr %1813, align 8, !tbaa !9
  %1815 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1816 = load ptr, ptr %1815, align 8, !tbaa !9
  store i16 0, ptr %1816, align 2, !tbaa !78
  %1817 = icmp eq i32 %13, 0
  br i1 %1817, label %1818, label %1821

1818:                                             ; preds = %1812
  %1819 = load i32, ptr %1814, align 4, !tbaa !5
  %1820 = trunc i32 %1819 to i16
  store i16 %1820, ptr %1816, align 2, !tbaa !78
  br label %5404

1821:                                             ; preds = %1812
  switch i32 %1, label %2414 [
    i32 1, label %1822
    i32 0, label %2124
  ]

1822:                                             ; preds = %1821
  %1823 = getelementptr inbounds i32, ptr %3, i64 %19
  %1824 = load i32, ptr %1823, align 4, !tbaa !5
  %1825 = icmp eq i32 %1824, 0
  %1826 = icmp sgt i32 %5, 0
  br i1 %1825, label %1836, label %1827

1827:                                             ; preds = %1822
  br i1 %1826, label %1828, label %5404

1828:                                             ; preds = %1827
  %1829 = icmp sgt i32 %13, 1
  %1830 = icmp sgt i32 %13, 0
  %1831 = add i32 %13, -2
  %1832 = zext i32 %1831 to i64
  %1833 = zext i32 %13 to i64
  %1834 = add nuw i32 %5, 1
  %1835 = icmp eq i32 %13, 1
  br label %1982

1836:                                             ; preds = %1822
  br i1 %1826, label %1837, label %5404

1837:                                             ; preds = %1836
  %1838 = icmp sgt i32 %13, 1
  %1839 = icmp sgt i32 %13, 0
  %1840 = add i32 %13, -2
  %1841 = zext i32 %1840 to i64
  %1842 = zext i32 %13 to i64
  %1843 = add nuw i32 %5, 1
  %1844 = icmp eq i32 %13, 1
  br label %1845

1845:                                             ; preds = %1837, %1980
  %1846 = phi i16 [ 0, %1837 ], [ %1931, %1980 ]
  %1847 = phi i32 [ 0, %1837 ], [ %1932, %1980 ]
  %1848 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1838, label %1849, label %1918

1849:                                             ; preds = %1845, %1908
  %1850 = phi i32 [ %1917, %1908 ], [ 0, %1845 ]
  %1851 = phi i64 [ %1859, %1908 ], [ %1842, %1845 ]
  %1852 = phi i64 [ %1916, %1908 ], [ %1841, %1845 ]
  %1853 = phi i32 [ %1914, %1908 ], [ %1848, %1845 ]
  %1854 = sub i32 %1840, %1850
  %1855 = tail call i32 @llvm.smin.i32(i32 %1854, i32 0)
  %1856 = sub i32 %1854, %1855
  %1857 = zext i32 %1856 to i64
  %1858 = add nuw nsw i64 %1857, 1
  %1859 = add nsw i64 %1851, -1
  %1860 = icmp ult i32 %1856, 31
  br i1 %1860, label %1896, label %1861

1861:                                             ; preds = %1849
  %1862 = and i64 %1858, 8589934560
  %1863 = sub i64 %1852, %1862
  br label %1864

1864:                                             ; preds = %1864, %1861
  %1865 = phi i64 [ 0, %1861 ], [ %1888, %1864 ]
  %1866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1884, %1864 ]
  %1867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1885, %1864 ]
  %1868 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1886, %1864 ]
  %1869 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1861 ], [ %1887, %1864 ]
  %1870 = sub i64 %1852, %1865
  %1871 = getelementptr inbounds i32, ptr %9, i64 %1870
  %1872 = getelementptr inbounds i32, ptr %1871, i64 -7
  %1873 = load <8 x i32>, ptr %1872, align 4, !tbaa !5
  %1874 = shufflevector <8 x i32> %1873, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1875 = getelementptr inbounds i32, ptr %1871, i64 -15
  %1876 = load <8 x i32>, ptr %1875, align 4, !tbaa !5
  %1877 = shufflevector <8 x i32> %1876, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1878 = getelementptr inbounds i32, ptr %1871, i64 -23
  %1879 = load <8 x i32>, ptr %1878, align 4, !tbaa !5
  %1880 = shufflevector <8 x i32> %1879, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1881 = getelementptr inbounds i32, ptr %1871, i64 -31
  %1882 = load <8 x i32>, ptr %1881, align 4, !tbaa !5
  %1883 = shufflevector <8 x i32> %1882, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1884 = mul <8 x i32> %1874, %1866
  %1885 = mul <8 x i32> %1877, %1867
  %1886 = mul <8 x i32> %1880, %1868
  %1887 = mul <8 x i32> %1883, %1869
  %1888 = add nuw i64 %1865, 32
  %1889 = icmp eq i64 %1888, %1862
  br i1 %1889, label %1890, label %1864, !llvm.loop !644

1890:                                             ; preds = %1864
  %1891 = mul <8 x i32> %1885, %1884
  %1892 = mul <8 x i32> %1886, %1891
  %1893 = mul <8 x i32> %1887, %1892
  %1894 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1893)
  %1895 = icmp eq i64 %1858, %1862
  br i1 %1895, label %1908, label %1896

1896:                                             ; preds = %1849, %1890
  %1897 = phi i64 [ %1852, %1849 ], [ %1863, %1890 ]
  %1898 = phi i32 [ 1, %1849 ], [ %1894, %1890 ]
  br label %1899

1899:                                             ; preds = %1896, %1899
  %1900 = phi i64 [ %1905, %1899 ], [ %1897, %1896 ]
  %1901 = phi i32 [ %1904, %1899 ], [ %1898, %1896 ]
  %1902 = getelementptr inbounds i32, ptr %9, i64 %1900
  %1903 = load i32, ptr %1902, align 4, !tbaa !5
  %1904 = mul nsw i32 %1903, %1901
  %1905 = add nsw i64 %1900, -1
  %1906 = trunc i64 %1900 to i32
  %1907 = icmp sgt i32 %1906, 0
  br i1 %1907, label %1899, label %1908, !llvm.loop !645

1908:                                             ; preds = %1899, %1890
  %1909 = phi i32 [ %1894, %1890 ], [ %1904, %1899 ]
  %1910 = and i64 %1859, 4294967295
  %1911 = getelementptr inbounds i32, ptr %6, i64 %1910
  %1912 = load i32, ptr %1911, align 4, !tbaa !5
  %1913 = mul nsw i32 %1912, %1909
  %1914 = add nsw i32 %1913, %1853
  %1915 = icmp sgt i64 %1851, 2
  %1916 = add nsw i64 %1852, -1
  %1917 = add i32 %1850, 1
  br i1 %1915, label %1849, label %1918, !llvm.loop !646

1918:                                             ; preds = %1908, %1845
  %1919 = phi i32 [ %1848, %1845 ], [ %1914, %1908 ]
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds double, ptr %2, i64 %1920
  %1922 = load double, ptr %1921, align 8, !tbaa !18
  %1923 = getelementptr inbounds i32, ptr %1814, i64 %1920
  %1924 = load i32, ptr %1923, align 4, !tbaa !5
  %1925 = sitofp i16 %1846 to double
  %1926 = shl i32 %1924, 16
  %1927 = ashr exact i32 %1926, 16
  %1928 = sitofp i32 %1927 to double
  %1929 = fmul fast double %1922, %1928
  %1930 = fadd fast double %1929, %1925
  %1931 = fptosi double %1930 to i16
  %1932 = add nuw nsw i32 %1847, 1
  br i1 %1839, label %1933, label %1980

1933:                                             ; preds = %1918
  %1934 = load i32, ptr %4, align 4, !tbaa !5
  %1935 = load i32, ptr %12, align 4, !tbaa !5
  %1936 = add nsw i32 %1935, -1
  %1937 = icmp slt i32 %1934, %1936
  br i1 %1937, label %1957, label %1938

1938:                                             ; preds = %1933
  %1939 = icmp eq i32 %1934, %1936
  br i1 %1939, label %1940, label %1973

1940:                                             ; preds = %1938
  store i32 0, ptr %4, align 4, !tbaa !5
  %1941 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1941, ptr %6, align 4, !tbaa !5
  br i1 %1844, label %1980, label %1942

1942:                                             ; preds = %1940, %1967
  %1943 = phi i64 [ %1971, %1967 ], [ 1, %1940 ]
  %1944 = getelementptr inbounds i32, ptr %4, i64 %1943
  %1945 = load i32, ptr %1944, align 4, !tbaa !5
  %1946 = getelementptr inbounds i32, ptr %12, i64 %1943
  %1947 = load i32, ptr %1946, align 4, !tbaa !5
  %1948 = add nsw i32 %1947, -1
  %1949 = icmp slt i32 %1945, %1948
  br i1 %1949, label %1950, label %1965

1950:                                             ; preds = %1942
  br i1 %1937, label %1957, label %1951

1951:                                             ; preds = %1950
  %1952 = getelementptr inbounds i32, ptr %7, i64 %1943
  %1953 = load i32, ptr %1952, align 4, !tbaa !5
  %1954 = getelementptr inbounds i32, ptr %6, i64 %1943
  %1955 = load i32, ptr %1954, align 4, !tbaa !5
  %1956 = add nsw i32 %1955, %1953
  store i32 %1956, ptr %1954, align 4, !tbaa !5
  br label %1975

1957:                                             ; preds = %1933, %1950
  %1958 = phi i32 [ %1945, %1950 ], [ %1934, %1933 ]
  %1959 = phi ptr [ %1944, %1950 ], [ %4, %1933 ]
  %1960 = phi i64 [ %1943, %1950 ], [ 0, %1933 ]
  %1961 = add nsw i32 %1958, 1
  store i32 %1961, ptr %1959, align 4, !tbaa !5
  %1962 = getelementptr inbounds i32, ptr %7, i64 %1960
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = getelementptr inbounds i32, ptr %6, i64 %1960
  br label %1975

1965:                                             ; preds = %1942
  %1966 = icmp eq i32 %1945, %1948
  br i1 %1966, label %1967, label %1973

1967:                                             ; preds = %1965
  store i32 0, ptr %1944, align 4, !tbaa !5
  %1968 = getelementptr inbounds i32, ptr %8, i64 %1943
  %1969 = load i32, ptr %1968, align 4, !tbaa !5
  %1970 = getelementptr inbounds i32, ptr %6, i64 %1943
  store i32 %1969, ptr %1970, align 4, !tbaa !5
  %1971 = add nuw nsw i64 %1943, 1
  %1972 = icmp eq i64 %1971, %1842
  br i1 %1972, label %1980, label %1942, !llvm.loop !647

1973:                                             ; preds = %1938, %1965
  store i16 %1931, ptr %1816, align 2, !tbaa !78
  %1974 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

1975:                                             ; preds = %1951, %1957
  %1976 = phi ptr [ %1964, %1957 ], [ %1944, %1951 ]
  %1977 = phi i32 [ %1963, %1957 ], [ 1, %1951 ]
  %1978 = load i32, ptr %1976, align 4, !tbaa !5
  %1979 = add nsw i32 %1978, %1977
  store i32 %1979, ptr %1976, align 4, !tbaa !5
  br label %1980

1980:                                             ; preds = %1967, %1975, %1940, %1918
  %1981 = icmp eq i32 %1932, %5
  br i1 %1981, label %5396, label %1845, !llvm.loop !648

1982:                                             ; preds = %1828, %2122
  %1983 = phi i64 [ 0, %1828 ], [ %2069, %2122 ]
  %1984 = phi i32 [ 0, %1828 ], [ %2071, %2122 ]
  %1985 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1829, label %1986, label %2055

1986:                                             ; preds = %1982, %2045
  %1987 = phi i32 [ %2054, %2045 ], [ 0, %1982 ]
  %1988 = phi i64 [ %1996, %2045 ], [ %1833, %1982 ]
  %1989 = phi i64 [ %2053, %2045 ], [ %1832, %1982 ]
  %1990 = phi i32 [ %2051, %2045 ], [ %1985, %1982 ]
  %1991 = sub i32 %1831, %1987
  %1992 = tail call i32 @llvm.smin.i32(i32 %1991, i32 0)
  %1993 = sub i32 %1991, %1992
  %1994 = zext i32 %1993 to i64
  %1995 = add nuw nsw i64 %1994, 1
  %1996 = add nsw i64 %1988, -1
  %1997 = icmp ult i32 %1993, 31
  br i1 %1997, label %2033, label %1998

1998:                                             ; preds = %1986
  %1999 = and i64 %1995, 8589934560
  %2000 = sub i64 %1989, %1999
  br label %2001

2001:                                             ; preds = %2001, %1998
  %2002 = phi i64 [ 0, %1998 ], [ %2025, %2001 ]
  %2003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2021, %2001 ]
  %2004 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2022, %2001 ]
  %2005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2023, %2001 ]
  %2006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1998 ], [ %2024, %2001 ]
  %2007 = sub i64 %1989, %2002
  %2008 = getelementptr inbounds i32, ptr %11, i64 %2007
  %2009 = getelementptr inbounds i32, ptr %2008, i64 -7
  %2010 = load <8 x i32>, ptr %2009, align 4, !tbaa !5
  %2011 = shufflevector <8 x i32> %2010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2012 = getelementptr inbounds i32, ptr %2008, i64 -15
  %2013 = load <8 x i32>, ptr %2012, align 4, !tbaa !5
  %2014 = shufflevector <8 x i32> %2013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2015 = getelementptr inbounds i32, ptr %2008, i64 -23
  %2016 = load <8 x i32>, ptr %2015, align 4, !tbaa !5
  %2017 = shufflevector <8 x i32> %2016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2018 = getelementptr inbounds i32, ptr %2008, i64 -31
  %2019 = load <8 x i32>, ptr %2018, align 4, !tbaa !5
  %2020 = shufflevector <8 x i32> %2019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2021 = mul <8 x i32> %2011, %2003
  %2022 = mul <8 x i32> %2014, %2004
  %2023 = mul <8 x i32> %2017, %2005
  %2024 = mul <8 x i32> %2020, %2006
  %2025 = add nuw i64 %2002, 32
  %2026 = icmp eq i64 %2025, %1999
  br i1 %2026, label %2027, label %2001, !llvm.loop !649

2027:                                             ; preds = %2001
  %2028 = mul <8 x i32> %2022, %2021
  %2029 = mul <8 x i32> %2023, %2028
  %2030 = mul <8 x i32> %2024, %2029
  %2031 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2030)
  %2032 = icmp eq i64 %1995, %1999
  br i1 %2032, label %2045, label %2033

2033:                                             ; preds = %1986, %2027
  %2034 = phi i64 [ %1989, %1986 ], [ %2000, %2027 ]
  %2035 = phi i32 [ 1, %1986 ], [ %2031, %2027 ]
  br label %2036

2036:                                             ; preds = %2033, %2036
  %2037 = phi i64 [ %2042, %2036 ], [ %2034, %2033 ]
  %2038 = phi i32 [ %2041, %2036 ], [ %2035, %2033 ]
  %2039 = getelementptr inbounds i32, ptr %11, i64 %2037
  %2040 = load i32, ptr %2039, align 4, !tbaa !5
  %2041 = mul nsw i32 %2040, %2038
  %2042 = add nsw i64 %2037, -1
  %2043 = trunc i64 %2037 to i32
  %2044 = icmp sgt i32 %2043, 0
  br i1 %2044, label %2036, label %2045, !llvm.loop !650

2045:                                             ; preds = %2036, %2027
  %2046 = phi i32 [ %2031, %2027 ], [ %2041, %2036 ]
  %2047 = and i64 %1996, 4294967295
  %2048 = getelementptr inbounds i32, ptr %6, i64 %2047
  %2049 = load i32, ptr %2048, align 4, !tbaa !5
  %2050 = mul nsw i32 %2049, %2046
  %2051 = add nsw i32 %2050, %1990
  %2052 = icmp sgt i64 %1988, 2
  %2053 = add nsw i64 %1989, -1
  %2054 = add i32 %1987, 1
  br i1 %2052, label %1986, label %2055, !llvm.loop !651

2055:                                             ; preds = %2045, %1982
  %2056 = phi i32 [ %1985, %1982 ], [ %2051, %2045 ]
  %2057 = icmp slt i32 %2056, %5
  br i1 %2057, label %2060, label %2058

2058:                                             ; preds = %2055
  %2059 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2060:                                             ; preds = %2055
  %2061 = sext i32 %2056 to i64
  %2062 = getelementptr inbounds i32, ptr %1814, i64 %2061
  %2063 = load i32, ptr %2062, align 4, !tbaa !5
  %2064 = shl i64 %1983, 48
  %2065 = ashr exact i64 %2064, 48
  %2066 = shl i32 %2063, 16
  %2067 = ashr exact i32 %2066, 16
  %2068 = sext i32 %2067 to i64
  %2069 = add nsw i64 %2065, %2068
  %2070 = trunc i64 %2069 to i16
  store i16 %2070, ptr %1816, align 2, !tbaa !78
  %2071 = add nuw nsw i32 %1984, 1
  br i1 %1830, label %2072, label %2122

2072:                                             ; preds = %2060
  %2073 = load i32, ptr %4, align 4, !tbaa !5
  %2074 = load i32, ptr %12, align 4, !tbaa !5
  %2075 = add nsw i32 %2074, -1
  %2076 = icmp slt i32 %2073, %2075
  br i1 %2076, label %2099, label %2077

2077:                                             ; preds = %2072
  %2078 = icmp eq i32 %2073, %2075
  br i1 %2078, label %2079, label %2115

2079:                                             ; preds = %2077
  store i32 0, ptr %4, align 4, !tbaa !5
  %2080 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2080, ptr %6, align 4, !tbaa !5
  br i1 %1835, label %2122, label %2081

2081:                                             ; preds = %2079, %2109
  %2082 = phi i64 [ %2113, %2109 ], [ 1, %2079 ]
  %2083 = getelementptr inbounds i32, ptr %4, i64 %2082
  %2084 = load i32, ptr %2083, align 4, !tbaa !5
  %2085 = getelementptr inbounds i32, ptr %12, i64 %2082
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = add nsw i32 %2086, -1
  %2088 = icmp slt i32 %2084, %2087
  br i1 %2088, label %2089, label %2107

2089:                                             ; preds = %2081
  br i1 %2076, label %2099, label %2090

2090:                                             ; preds = %2089
  %2091 = shl i64 %2082, 32
  %2092 = add i64 %2091, -4294967296
  %2093 = ashr exact i64 %2092, 32
  %2094 = getelementptr inbounds i32, ptr %7, i64 %2093
  %2095 = load i32, ptr %2094, align 4, !tbaa !5
  %2096 = getelementptr inbounds i32, ptr %6, i64 %2082
  %2097 = load i32, ptr %2096, align 4, !tbaa !5
  %2098 = add nsw i32 %2097, %2095
  store i32 %2098, ptr %2096, align 4, !tbaa !5
  br label %2117

2099:                                             ; preds = %2072, %2089
  %2100 = phi i32 [ %2084, %2089 ], [ %2073, %2072 ]
  %2101 = phi ptr [ %2083, %2089 ], [ %4, %2072 ]
  %2102 = phi i64 [ %2082, %2089 ], [ 0, %2072 ]
  %2103 = add nsw i32 %2100, 1
  store i32 %2103, ptr %2101, align 4, !tbaa !5
  %2104 = getelementptr inbounds i32, ptr %7, i64 %2102
  %2105 = load i32, ptr %2104, align 4, !tbaa !5
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2102
  br label %2117

2107:                                             ; preds = %2081
  %2108 = icmp eq i32 %2084, %2087
  br i1 %2108, label %2109, label %2115

2109:                                             ; preds = %2107
  store i32 0, ptr %2083, align 4, !tbaa !5
  %2110 = getelementptr inbounds i32, ptr %8, i64 %2082
  %2111 = load i32, ptr %2110, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %6, i64 %2082
  store i32 %2111, ptr %2112, align 4, !tbaa !5
  %2113 = add nuw nsw i64 %2082, 1
  %2114 = icmp eq i64 %2113, %1833
  br i1 %2114, label %2122, label %2081, !llvm.loop !652

2115:                                             ; preds = %2077, %2107
  %2116 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2117:                                             ; preds = %2090, %2099
  %2118 = phi ptr [ %2106, %2099 ], [ %2083, %2090 ]
  %2119 = phi i32 [ %2105, %2099 ], [ 1, %2090 ]
  %2120 = load i32, ptr %2118, align 4, !tbaa !5
  %2121 = add nsw i32 %2120, %2119
  store i32 %2121, ptr %2118, align 4, !tbaa !5
  br label %2122

2122:                                             ; preds = %2109, %2117, %2079, %2060
  %2123 = icmp eq i32 %2071, %5
  br i1 %2123, label %5404, label %1982, !llvm.loop !653

2124:                                             ; preds = %1821
  %2125 = getelementptr inbounds i32, ptr %3, i64 %19
  %2126 = load i32, ptr %2125, align 4, !tbaa !5
  %2127 = icmp eq i32 %2126, 0
  %2128 = icmp sgt i32 %5, 0
  br i1 %2127, label %2138, label %2129

2129:                                             ; preds = %2124
  br i1 %2128, label %2130, label %5404

2130:                                             ; preds = %2129
  %2131 = icmp sgt i32 %13, 1
  %2132 = icmp sgt i32 %13, 0
  %2133 = add i32 %13, -2
  %2134 = zext i32 %2133 to i64
  %2135 = zext i32 %13 to i64
  %2136 = add nuw i32 %5, 1
  %2137 = icmp eq i32 %13, 1
  br label %2277

2138:                                             ; preds = %2124
  br i1 %2128, label %2139, label %5404

2139:                                             ; preds = %2138
  %2140 = icmp sgt i32 %13, 1
  %2141 = icmp sgt i32 %13, 0
  %2142 = add i32 %13, -2
  %2143 = zext i32 %2142 to i64
  %2144 = zext i32 %13 to i64
  %2145 = add nuw i32 %5, 1
  %2146 = icmp eq i32 %13, 1
  br label %2147

2147:                                             ; preds = %2139, %2275
  %2148 = phi i16 [ 0, %2139 ], [ %2226, %2275 ]
  %2149 = phi i32 [ 0, %2139 ], [ %2227, %2275 ]
  %2150 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2140, label %2151, label %2220

2151:                                             ; preds = %2147, %2210
  %2152 = phi i32 [ %2219, %2210 ], [ 0, %2147 ]
  %2153 = phi i64 [ %2161, %2210 ], [ %2144, %2147 ]
  %2154 = phi i64 [ %2218, %2210 ], [ %2143, %2147 ]
  %2155 = phi i32 [ %2216, %2210 ], [ %2150, %2147 ]
  %2156 = sub i32 %2142, %2152
  %2157 = tail call i32 @llvm.smin.i32(i32 %2156, i32 0)
  %2158 = sub i32 %2156, %2157
  %2159 = zext i32 %2158 to i64
  %2160 = add nuw nsw i64 %2159, 1
  %2161 = add nsw i64 %2153, -1
  %2162 = icmp ult i32 %2158, 31
  br i1 %2162, label %2198, label %2163

2163:                                             ; preds = %2151
  %2164 = and i64 %2160, 8589934560
  %2165 = sub i64 %2154, %2164
  br label %2166

2166:                                             ; preds = %2166, %2163
  %2167 = phi i64 [ 0, %2163 ], [ %2190, %2166 ]
  %2168 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2186, %2166 ]
  %2169 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2187, %2166 ]
  %2170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2188, %2166 ]
  %2171 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2163 ], [ %2189, %2166 ]
  %2172 = sub i64 %2154, %2167
  %2173 = getelementptr inbounds i32, ptr %9, i64 %2172
  %2174 = getelementptr inbounds i32, ptr %2173, i64 -7
  %2175 = load <8 x i32>, ptr %2174, align 4, !tbaa !5
  %2176 = shufflevector <8 x i32> %2175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2177 = getelementptr inbounds i32, ptr %2173, i64 -15
  %2178 = load <8 x i32>, ptr %2177, align 4, !tbaa !5
  %2179 = shufflevector <8 x i32> %2178, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2180 = getelementptr inbounds i32, ptr %2173, i64 -23
  %2181 = load <8 x i32>, ptr %2180, align 4, !tbaa !5
  %2182 = shufflevector <8 x i32> %2181, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2183 = getelementptr inbounds i32, ptr %2173, i64 -31
  %2184 = load <8 x i32>, ptr %2183, align 4, !tbaa !5
  %2185 = shufflevector <8 x i32> %2184, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2186 = mul <8 x i32> %2176, %2168
  %2187 = mul <8 x i32> %2179, %2169
  %2188 = mul <8 x i32> %2182, %2170
  %2189 = mul <8 x i32> %2185, %2171
  %2190 = add nuw i64 %2167, 32
  %2191 = icmp eq i64 %2190, %2164
  br i1 %2191, label %2192, label %2166, !llvm.loop !654

2192:                                             ; preds = %2166
  %2193 = mul <8 x i32> %2187, %2186
  %2194 = mul <8 x i32> %2188, %2193
  %2195 = mul <8 x i32> %2189, %2194
  %2196 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2195)
  %2197 = icmp eq i64 %2160, %2164
  br i1 %2197, label %2210, label %2198

2198:                                             ; preds = %2151, %2192
  %2199 = phi i64 [ %2154, %2151 ], [ %2165, %2192 ]
  %2200 = phi i32 [ 1, %2151 ], [ %2196, %2192 ]
  br label %2201

2201:                                             ; preds = %2198, %2201
  %2202 = phi i64 [ %2207, %2201 ], [ %2199, %2198 ]
  %2203 = phi i32 [ %2206, %2201 ], [ %2200, %2198 ]
  %2204 = getelementptr inbounds i32, ptr %9, i64 %2202
  %2205 = load i32, ptr %2204, align 4, !tbaa !5
  %2206 = mul nsw i32 %2205, %2203
  %2207 = add nsw i64 %2202, -1
  %2208 = trunc i64 %2202 to i32
  %2209 = icmp sgt i32 %2208, 0
  br i1 %2209, label %2201, label %2210, !llvm.loop !655

2210:                                             ; preds = %2201, %2192
  %2211 = phi i32 [ %2196, %2192 ], [ %2206, %2201 ]
  %2212 = and i64 %2161, 4294967295
  %2213 = getelementptr inbounds i32, ptr %6, i64 %2212
  %2214 = load i32, ptr %2213, align 4, !tbaa !5
  %2215 = mul nsw i32 %2214, %2211
  %2216 = add nsw i32 %2215, %2155
  %2217 = icmp sgt i64 %2153, 2
  %2218 = add nsw i64 %2154, -1
  %2219 = add i32 %2152, 1
  br i1 %2217, label %2151, label %2220, !llvm.loop !656

2220:                                             ; preds = %2210, %2147
  %2221 = phi i32 [ %2150, %2147 ], [ %2216, %2210 ]
  %2222 = sext i32 %2221 to i64
  %2223 = getelementptr inbounds i32, ptr %1814, i64 %2222
  %2224 = load i32, ptr %2223, align 4, !tbaa !5
  %2225 = trunc i32 %2224 to i16
  %2226 = add i16 %2148, %2225
  %2227 = add nuw nsw i32 %2149, 1
  br i1 %2141, label %2228, label %2275

2228:                                             ; preds = %2220
  %2229 = load i32, ptr %4, align 4, !tbaa !5
  %2230 = load i32, ptr %12, align 4, !tbaa !5
  %2231 = add nsw i32 %2230, -1
  %2232 = icmp slt i32 %2229, %2231
  br i1 %2232, label %2252, label %2233

2233:                                             ; preds = %2228
  %2234 = icmp eq i32 %2229, %2231
  br i1 %2234, label %2235, label %2268

2235:                                             ; preds = %2233
  store i32 0, ptr %4, align 4, !tbaa !5
  %2236 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2236, ptr %6, align 4, !tbaa !5
  br i1 %2146, label %2275, label %2237

2237:                                             ; preds = %2235, %2262
  %2238 = phi i64 [ %2266, %2262 ], [ 1, %2235 ]
  %2239 = getelementptr inbounds i32, ptr %4, i64 %2238
  %2240 = load i32, ptr %2239, align 4, !tbaa !5
  %2241 = getelementptr inbounds i32, ptr %12, i64 %2238
  %2242 = load i32, ptr %2241, align 4, !tbaa !5
  %2243 = add nsw i32 %2242, -1
  %2244 = icmp slt i32 %2240, %2243
  br i1 %2244, label %2245, label %2260

2245:                                             ; preds = %2237
  br i1 %2232, label %2252, label %2246

2246:                                             ; preds = %2245
  %2247 = getelementptr inbounds i32, ptr %7, i64 %2238
  %2248 = load i32, ptr %2247, align 4, !tbaa !5
  %2249 = getelementptr inbounds i32, ptr %6, i64 %2238
  %2250 = load i32, ptr %2249, align 4, !tbaa !5
  %2251 = add nsw i32 %2250, %2248
  store i32 %2251, ptr %2249, align 4, !tbaa !5
  br label %2270

2252:                                             ; preds = %2228, %2245
  %2253 = phi i32 [ %2240, %2245 ], [ %2229, %2228 ]
  %2254 = phi ptr [ %2239, %2245 ], [ %4, %2228 ]
  %2255 = phi i64 [ %2238, %2245 ], [ 0, %2228 ]
  %2256 = add nsw i32 %2253, 1
  store i32 %2256, ptr %2254, align 4, !tbaa !5
  %2257 = getelementptr inbounds i32, ptr %7, i64 %2255
  %2258 = load i32, ptr %2257, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %6, i64 %2255
  br label %2270

2260:                                             ; preds = %2237
  %2261 = icmp eq i32 %2240, %2243
  br i1 %2261, label %2262, label %2268

2262:                                             ; preds = %2260
  store i32 0, ptr %2239, align 4, !tbaa !5
  %2263 = getelementptr inbounds i32, ptr %8, i64 %2238
  %2264 = load i32, ptr %2263, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %6, i64 %2238
  store i32 %2264, ptr %2265, align 4, !tbaa !5
  %2266 = add nuw nsw i64 %2238, 1
  %2267 = icmp eq i64 %2266, %2144
  br i1 %2267, label %2275, label %2237, !llvm.loop !657

2268:                                             ; preds = %2233, %2260
  store i16 %2226, ptr %1816, align 2, !tbaa !78
  %2269 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2270:                                             ; preds = %2246, %2252
  %2271 = phi ptr [ %2259, %2252 ], [ %2239, %2246 ]
  %2272 = phi i32 [ %2258, %2252 ], [ 1, %2246 ]
  %2273 = load i32, ptr %2271, align 4, !tbaa !5
  %2274 = add nsw i32 %2273, %2272
  store i32 %2274, ptr %2271, align 4, !tbaa !5
  br label %2275

2275:                                             ; preds = %2262, %2270, %2235, %2220
  %2276 = icmp eq i32 %2227, %5
  br i1 %2276, label %5397, label %2147, !llvm.loop !658

2277:                                             ; preds = %2130, %2412
  %2278 = phi i16 [ 0, %2130 ], [ %2360, %2412 ]
  %2279 = phi i32 [ 0, %2130 ], [ %2361, %2412 ]
  %2280 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2131, label %2281, label %2350

2281:                                             ; preds = %2277, %2340
  %2282 = phi i32 [ %2349, %2340 ], [ 0, %2277 ]
  %2283 = phi i64 [ %2291, %2340 ], [ %2135, %2277 ]
  %2284 = phi i64 [ %2348, %2340 ], [ %2134, %2277 ]
  %2285 = phi i32 [ %2346, %2340 ], [ %2280, %2277 ]
  %2286 = sub i32 %2133, %2282
  %2287 = tail call i32 @llvm.smin.i32(i32 %2286, i32 0)
  %2288 = sub i32 %2286, %2287
  %2289 = zext i32 %2288 to i64
  %2290 = add nuw nsw i64 %2289, 1
  %2291 = add nsw i64 %2283, -1
  %2292 = icmp ult i32 %2288, 31
  br i1 %2292, label %2328, label %2293

2293:                                             ; preds = %2281
  %2294 = and i64 %2290, 8589934560
  %2295 = sub i64 %2284, %2294
  br label %2296

2296:                                             ; preds = %2296, %2293
  %2297 = phi i64 [ 0, %2293 ], [ %2320, %2296 ]
  %2298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2316, %2296 ]
  %2299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2317, %2296 ]
  %2300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2318, %2296 ]
  %2301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2293 ], [ %2319, %2296 ]
  %2302 = sub i64 %2284, %2297
  %2303 = getelementptr inbounds i32, ptr %11, i64 %2302
  %2304 = getelementptr inbounds i32, ptr %2303, i64 -7
  %2305 = load <8 x i32>, ptr %2304, align 4, !tbaa !5
  %2306 = shufflevector <8 x i32> %2305, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2307 = getelementptr inbounds i32, ptr %2303, i64 -15
  %2308 = load <8 x i32>, ptr %2307, align 4, !tbaa !5
  %2309 = shufflevector <8 x i32> %2308, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2310 = getelementptr inbounds i32, ptr %2303, i64 -23
  %2311 = load <8 x i32>, ptr %2310, align 4, !tbaa !5
  %2312 = shufflevector <8 x i32> %2311, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2313 = getelementptr inbounds i32, ptr %2303, i64 -31
  %2314 = load <8 x i32>, ptr %2313, align 4, !tbaa !5
  %2315 = shufflevector <8 x i32> %2314, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2316 = mul <8 x i32> %2306, %2298
  %2317 = mul <8 x i32> %2309, %2299
  %2318 = mul <8 x i32> %2312, %2300
  %2319 = mul <8 x i32> %2315, %2301
  %2320 = add nuw i64 %2297, 32
  %2321 = icmp eq i64 %2320, %2294
  br i1 %2321, label %2322, label %2296, !llvm.loop !659

2322:                                             ; preds = %2296
  %2323 = mul <8 x i32> %2317, %2316
  %2324 = mul <8 x i32> %2318, %2323
  %2325 = mul <8 x i32> %2319, %2324
  %2326 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2325)
  %2327 = icmp eq i64 %2290, %2294
  br i1 %2327, label %2340, label %2328

2328:                                             ; preds = %2281, %2322
  %2329 = phi i64 [ %2284, %2281 ], [ %2295, %2322 ]
  %2330 = phi i32 [ 1, %2281 ], [ %2326, %2322 ]
  br label %2331

2331:                                             ; preds = %2328, %2331
  %2332 = phi i64 [ %2337, %2331 ], [ %2329, %2328 ]
  %2333 = phi i32 [ %2336, %2331 ], [ %2330, %2328 ]
  %2334 = getelementptr inbounds i32, ptr %11, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !5
  %2336 = mul nsw i32 %2335, %2333
  %2337 = add nsw i64 %2332, -1
  %2338 = trunc i64 %2332 to i32
  %2339 = icmp sgt i32 %2338, 0
  br i1 %2339, label %2331, label %2340, !llvm.loop !660

2340:                                             ; preds = %2331, %2322
  %2341 = phi i32 [ %2326, %2322 ], [ %2336, %2331 ]
  %2342 = and i64 %2291, 4294967295
  %2343 = getelementptr inbounds i32, ptr %6, i64 %2342
  %2344 = load i32, ptr %2343, align 4, !tbaa !5
  %2345 = mul nsw i32 %2344, %2341
  %2346 = add nsw i32 %2345, %2285
  %2347 = icmp sgt i64 %2283, 2
  %2348 = add nsw i64 %2284, -1
  %2349 = add i32 %2282, 1
  br i1 %2347, label %2281, label %2350, !llvm.loop !661

2350:                                             ; preds = %2340, %2277
  %2351 = phi i32 [ %2280, %2277 ], [ %2346, %2340 ]
  %2352 = icmp slt i32 %2351, %5
  br i1 %2352, label %2355, label %2353

2353:                                             ; preds = %2350
  %2354 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2355:                                             ; preds = %2350
  %2356 = sext i32 %2351 to i64
  %2357 = getelementptr inbounds i32, ptr %1814, i64 %2356
  %2358 = load i32, ptr %2357, align 4, !tbaa !5
  %2359 = trunc i32 %2358 to i16
  %2360 = add i16 %2278, %2359
  store i16 %2360, ptr %1816, align 2, !tbaa !78
  %2361 = add nuw nsw i32 %2279, 1
  br i1 %2132, label %2362, label %2412

2362:                                             ; preds = %2355
  %2363 = load i32, ptr %4, align 4, !tbaa !5
  %2364 = load i32, ptr %12, align 4, !tbaa !5
  %2365 = add nsw i32 %2364, -1
  %2366 = icmp slt i32 %2363, %2365
  br i1 %2366, label %2389, label %2367

2367:                                             ; preds = %2362
  %2368 = icmp eq i32 %2363, %2365
  br i1 %2368, label %2369, label %2405

2369:                                             ; preds = %2367
  store i32 0, ptr %4, align 4, !tbaa !5
  %2370 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2370, ptr %6, align 4, !tbaa !5
  br i1 %2137, label %2412, label %2371

2371:                                             ; preds = %2369, %2399
  %2372 = phi i64 [ %2403, %2399 ], [ 1, %2369 ]
  %2373 = getelementptr inbounds i32, ptr %4, i64 %2372
  %2374 = load i32, ptr %2373, align 4, !tbaa !5
  %2375 = getelementptr inbounds i32, ptr %12, i64 %2372
  %2376 = load i32, ptr %2375, align 4, !tbaa !5
  %2377 = add nsw i32 %2376, -1
  %2378 = icmp slt i32 %2374, %2377
  br i1 %2378, label %2379, label %2397

2379:                                             ; preds = %2371
  br i1 %2366, label %2389, label %2380

2380:                                             ; preds = %2379
  %2381 = shl i64 %2372, 32
  %2382 = add i64 %2381, -4294967296
  %2383 = ashr exact i64 %2382, 32
  %2384 = getelementptr inbounds i32, ptr %7, i64 %2383
  %2385 = load i32, ptr %2384, align 4, !tbaa !5
  %2386 = getelementptr inbounds i32, ptr %6, i64 %2372
  %2387 = load i32, ptr %2386, align 4, !tbaa !5
  %2388 = add nsw i32 %2387, %2385
  store i32 %2388, ptr %2386, align 4, !tbaa !5
  br label %2407

2389:                                             ; preds = %2362, %2379
  %2390 = phi i32 [ %2374, %2379 ], [ %2363, %2362 ]
  %2391 = phi ptr [ %2373, %2379 ], [ %4, %2362 ]
  %2392 = phi i64 [ %2372, %2379 ], [ 0, %2362 ]
  %2393 = add nsw i32 %2390, 1
  store i32 %2393, ptr %2391, align 4, !tbaa !5
  %2394 = getelementptr inbounds i32, ptr %7, i64 %2392
  %2395 = load i32, ptr %2394, align 4, !tbaa !5
  %2396 = getelementptr inbounds i32, ptr %6, i64 %2392
  br label %2407

2397:                                             ; preds = %2371
  %2398 = icmp eq i32 %2374, %2377
  br i1 %2398, label %2399, label %2405

2399:                                             ; preds = %2397
  store i32 0, ptr %2373, align 4, !tbaa !5
  %2400 = getelementptr inbounds i32, ptr %8, i64 %2372
  %2401 = load i32, ptr %2400, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %6, i64 %2372
  store i32 %2401, ptr %2402, align 4, !tbaa !5
  %2403 = add nuw nsw i64 %2372, 1
  %2404 = icmp eq i64 %2403, %2135
  br i1 %2404, label %2412, label %2371, !llvm.loop !662

2405:                                             ; preds = %2367, %2397
  %2406 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2407:                                             ; preds = %2380, %2389
  %2408 = phi ptr [ %2396, %2389 ], [ %2373, %2380 ]
  %2409 = phi i32 [ %2395, %2389 ], [ 1, %2380 ]
  %2410 = load i32, ptr %2408, align 4, !tbaa !5
  %2411 = add nsw i32 %2410, %2409
  store i32 %2411, ptr %2408, align 4, !tbaa !5
  br label %2412

2412:                                             ; preds = %2399, %2407, %2369, %2355
  %2413 = icmp eq i32 %2361, %5
  br i1 %2413, label %5404, label %2277, !llvm.loop !663

2414:                                             ; preds = %1821
  %2415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1017, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

2416:                                             ; preds = %18
  %2417 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2418 = load ptr, ptr %2417, align 8, !tbaa !9
  %2419 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2420 = load ptr, ptr %2419, align 8, !tbaa !9
  store i32 0, ptr %2420, align 4, !tbaa !5
  %2421 = icmp eq i32 %13, 0
  br i1 %2421, label %2422, label %2424

2422:                                             ; preds = %2416
  %2423 = load i32, ptr %2418, align 4, !tbaa !5
  store i32 %2423, ptr %2420, align 4, !tbaa !5
  br label %5404

2424:                                             ; preds = %2416
  switch i32 %1, label %3007 [
    i32 1, label %2425
    i32 0, label %2719
  ]

2425:                                             ; preds = %2424
  %2426 = getelementptr inbounds i32, ptr %3, i64 %19
  %2427 = load i32, ptr %2426, align 4, !tbaa !5
  %2428 = icmp eq i32 %2427, 0
  %2429 = icmp sgt i32 %5, 0
  br i1 %2428, label %2439, label %2430

2430:                                             ; preds = %2425
  br i1 %2429, label %2431, label %5404

2431:                                             ; preds = %2430
  %2432 = icmp sgt i32 %13, 1
  %2433 = icmp sgt i32 %13, 0
  %2434 = add i32 %13, -2
  %2435 = zext i32 %2434 to i64
  %2436 = zext i32 %13 to i64
  %2437 = add nuw i32 %5, 1
  %2438 = icmp eq i32 %13, 1
  br label %2583

2439:                                             ; preds = %2425
  br i1 %2429, label %2440, label %5404

2440:                                             ; preds = %2439
  %2441 = icmp sgt i32 %13, 1
  %2442 = icmp sgt i32 %13, 0
  %2443 = add i32 %13, -2
  %2444 = zext i32 %2443 to i64
  %2445 = zext i32 %13 to i64
  %2446 = add nuw i32 %5, 1
  %2447 = icmp eq i32 %13, 1
  br label %2448

2448:                                             ; preds = %2440, %2581
  %2449 = phi i32 [ 0, %2440 ], [ %2533, %2581 ]
  %2450 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2441, label %2451, label %2520

2451:                                             ; preds = %2448, %2510
  %2452 = phi i32 [ %2519, %2510 ], [ 0, %2448 ]
  %2453 = phi i64 [ %2461, %2510 ], [ %2445, %2448 ]
  %2454 = phi i64 [ %2518, %2510 ], [ %2444, %2448 ]
  %2455 = phi i32 [ %2516, %2510 ], [ %2450, %2448 ]
  %2456 = sub i32 %2443, %2452
  %2457 = tail call i32 @llvm.smin.i32(i32 %2456, i32 0)
  %2458 = sub i32 %2456, %2457
  %2459 = zext i32 %2458 to i64
  %2460 = add nuw nsw i64 %2459, 1
  %2461 = add nsw i64 %2453, -1
  %2462 = icmp ult i32 %2458, 31
  br i1 %2462, label %2498, label %2463

2463:                                             ; preds = %2451
  %2464 = and i64 %2460, 8589934560
  %2465 = sub i64 %2454, %2464
  br label %2466

2466:                                             ; preds = %2466, %2463
  %2467 = phi i64 [ 0, %2463 ], [ %2490, %2466 ]
  %2468 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2486, %2466 ]
  %2469 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2487, %2466 ]
  %2470 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2488, %2466 ]
  %2471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2463 ], [ %2489, %2466 ]
  %2472 = sub i64 %2454, %2467
  %2473 = getelementptr inbounds i32, ptr %9, i64 %2472
  %2474 = getelementptr inbounds i32, ptr %2473, i64 -7
  %2475 = load <8 x i32>, ptr %2474, align 4, !tbaa !5
  %2476 = shufflevector <8 x i32> %2475, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2477 = getelementptr inbounds i32, ptr %2473, i64 -15
  %2478 = load <8 x i32>, ptr %2477, align 4, !tbaa !5
  %2479 = shufflevector <8 x i32> %2478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2480 = getelementptr inbounds i32, ptr %2473, i64 -23
  %2481 = load <8 x i32>, ptr %2480, align 4, !tbaa !5
  %2482 = shufflevector <8 x i32> %2481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2483 = getelementptr inbounds i32, ptr %2473, i64 -31
  %2484 = load <8 x i32>, ptr %2483, align 4, !tbaa !5
  %2485 = shufflevector <8 x i32> %2484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2486 = mul <8 x i32> %2476, %2468
  %2487 = mul <8 x i32> %2479, %2469
  %2488 = mul <8 x i32> %2482, %2470
  %2489 = mul <8 x i32> %2485, %2471
  %2490 = add nuw i64 %2467, 32
  %2491 = icmp eq i64 %2490, %2464
  br i1 %2491, label %2492, label %2466, !llvm.loop !664

2492:                                             ; preds = %2466
  %2493 = mul <8 x i32> %2487, %2486
  %2494 = mul <8 x i32> %2488, %2493
  %2495 = mul <8 x i32> %2489, %2494
  %2496 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2495)
  %2497 = icmp eq i64 %2460, %2464
  br i1 %2497, label %2510, label %2498

2498:                                             ; preds = %2451, %2492
  %2499 = phi i64 [ %2454, %2451 ], [ %2465, %2492 ]
  %2500 = phi i32 [ 1, %2451 ], [ %2496, %2492 ]
  br label %2501

2501:                                             ; preds = %2498, %2501
  %2502 = phi i64 [ %2507, %2501 ], [ %2499, %2498 ]
  %2503 = phi i32 [ %2506, %2501 ], [ %2500, %2498 ]
  %2504 = getelementptr inbounds i32, ptr %9, i64 %2502
  %2505 = load i32, ptr %2504, align 4, !tbaa !5
  %2506 = mul nsw i32 %2505, %2503
  %2507 = add nsw i64 %2502, -1
  %2508 = trunc i64 %2502 to i32
  %2509 = icmp sgt i32 %2508, 0
  br i1 %2509, label %2501, label %2510, !llvm.loop !665

2510:                                             ; preds = %2501, %2492
  %2511 = phi i32 [ %2496, %2492 ], [ %2506, %2501 ]
  %2512 = and i64 %2461, 4294967295
  %2513 = getelementptr inbounds i32, ptr %6, i64 %2512
  %2514 = load i32, ptr %2513, align 4, !tbaa !5
  %2515 = mul nsw i32 %2514, %2511
  %2516 = add nsw i32 %2515, %2455
  %2517 = icmp sgt i64 %2453, 2
  %2518 = add nsw i64 %2454, -1
  %2519 = add i32 %2452, 1
  br i1 %2517, label %2451, label %2520, !llvm.loop !666

2520:                                             ; preds = %2510, %2448
  %2521 = phi i32 [ %2450, %2448 ], [ %2516, %2510 ]
  %2522 = sext i32 %2521 to i64
  %2523 = getelementptr inbounds double, ptr %2, i64 %2522
  %2524 = load double, ptr %2523, align 8, !tbaa !18
  %2525 = getelementptr inbounds i32, ptr %2418, i64 %2522
  %2526 = load i32, ptr %2525, align 4, !tbaa !5
  %2527 = load i32, ptr %2420, align 4, !tbaa !5
  %2528 = sitofp i32 %2527 to double
  %2529 = sitofp i32 %2526 to double
  %2530 = fmul fast double %2524, %2529
  %2531 = fadd fast double %2530, %2528
  %2532 = fptosi double %2531 to i32
  store i32 %2532, ptr %2420, align 4, !tbaa !5
  %2533 = add nuw nsw i32 %2449, 1
  br i1 %2442, label %2534, label %2581

2534:                                             ; preds = %2520
  %2535 = load i32, ptr %4, align 4, !tbaa !5
  %2536 = load i32, ptr %12, align 4, !tbaa !5
  %2537 = add nsw i32 %2536, -1
  %2538 = icmp slt i32 %2535, %2537
  br i1 %2538, label %2558, label %2539

2539:                                             ; preds = %2534
  %2540 = icmp eq i32 %2535, %2537
  br i1 %2540, label %2541, label %2574

2541:                                             ; preds = %2539
  store i32 0, ptr %4, align 4, !tbaa !5
  %2542 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2542, ptr %6, align 4, !tbaa !5
  br i1 %2447, label %2581, label %2543

2543:                                             ; preds = %2541, %2568
  %2544 = phi i64 [ %2572, %2568 ], [ 1, %2541 ]
  %2545 = getelementptr inbounds i32, ptr %4, i64 %2544
  %2546 = load i32, ptr %2545, align 4, !tbaa !5
  %2547 = getelementptr inbounds i32, ptr %12, i64 %2544
  %2548 = load i32, ptr %2547, align 4, !tbaa !5
  %2549 = add nsw i32 %2548, -1
  %2550 = icmp slt i32 %2546, %2549
  br i1 %2550, label %2551, label %2566

2551:                                             ; preds = %2543
  br i1 %2538, label %2558, label %2552

2552:                                             ; preds = %2551
  %2553 = getelementptr inbounds i32, ptr %7, i64 %2544
  %2554 = load i32, ptr %2553, align 4, !tbaa !5
  %2555 = getelementptr inbounds i32, ptr %6, i64 %2544
  %2556 = load i32, ptr %2555, align 4, !tbaa !5
  %2557 = add nsw i32 %2556, %2554
  store i32 %2557, ptr %2555, align 4, !tbaa !5
  br label %2576

2558:                                             ; preds = %2534, %2551
  %2559 = phi i32 [ %2546, %2551 ], [ %2535, %2534 ]
  %2560 = phi ptr [ %2545, %2551 ], [ %4, %2534 ]
  %2561 = phi i64 [ %2544, %2551 ], [ 0, %2534 ]
  %2562 = add nsw i32 %2559, 1
  store i32 %2562, ptr %2560, align 4, !tbaa !5
  %2563 = getelementptr inbounds i32, ptr %7, i64 %2561
  %2564 = load i32, ptr %2563, align 4, !tbaa !5
  %2565 = getelementptr inbounds i32, ptr %6, i64 %2561
  br label %2576

2566:                                             ; preds = %2543
  %2567 = icmp eq i32 %2546, %2549
  br i1 %2567, label %2568, label %2574

2568:                                             ; preds = %2566
  store i32 0, ptr %2545, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %8, i64 %2544
  %2570 = load i32, ptr %2569, align 4, !tbaa !5
  %2571 = getelementptr inbounds i32, ptr %6, i64 %2544
  store i32 %2570, ptr %2571, align 4, !tbaa !5
  %2572 = add nuw nsw i64 %2544, 1
  %2573 = icmp eq i64 %2572, %2445
  br i1 %2573, label %2581, label %2543, !llvm.loop !667

2574:                                             ; preds = %2539, %2566
  %2575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2576:                                             ; preds = %2552, %2558
  %2577 = phi ptr [ %2565, %2558 ], [ %2545, %2552 ]
  %2578 = phi i32 [ %2564, %2558 ], [ 1, %2552 ]
  %2579 = load i32, ptr %2577, align 4, !tbaa !5
  %2580 = add nsw i32 %2579, %2578
  store i32 %2580, ptr %2577, align 4, !tbaa !5
  br label %2581

2581:                                             ; preds = %2568, %2576, %2541, %2520
  %2582 = icmp eq i32 %2533, %5
  br i1 %2582, label %5404, label %2448, !llvm.loop !668

2583:                                             ; preds = %2431, %2717
  %2584 = phi i32 [ 0, %2431 ], [ %2666, %2717 ]
  %2585 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2432, label %2586, label %2655

2586:                                             ; preds = %2583, %2645
  %2587 = phi i32 [ %2654, %2645 ], [ 0, %2583 ]
  %2588 = phi i64 [ %2596, %2645 ], [ %2436, %2583 ]
  %2589 = phi i64 [ %2653, %2645 ], [ %2435, %2583 ]
  %2590 = phi i32 [ %2651, %2645 ], [ %2585, %2583 ]
  %2591 = sub i32 %2434, %2587
  %2592 = tail call i32 @llvm.smin.i32(i32 %2591, i32 0)
  %2593 = sub i32 %2591, %2592
  %2594 = zext i32 %2593 to i64
  %2595 = add nuw nsw i64 %2594, 1
  %2596 = add nsw i64 %2588, -1
  %2597 = icmp ult i32 %2593, 31
  br i1 %2597, label %2633, label %2598

2598:                                             ; preds = %2586
  %2599 = and i64 %2595, 8589934560
  %2600 = sub i64 %2589, %2599
  br label %2601

2601:                                             ; preds = %2601, %2598
  %2602 = phi i64 [ 0, %2598 ], [ %2625, %2601 ]
  %2603 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2621, %2601 ]
  %2604 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2622, %2601 ]
  %2605 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2623, %2601 ]
  %2606 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2598 ], [ %2624, %2601 ]
  %2607 = sub i64 %2589, %2602
  %2608 = getelementptr inbounds i32, ptr %11, i64 %2607
  %2609 = getelementptr inbounds i32, ptr %2608, i64 -7
  %2610 = load <8 x i32>, ptr %2609, align 4, !tbaa !5
  %2611 = shufflevector <8 x i32> %2610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2612 = getelementptr inbounds i32, ptr %2608, i64 -15
  %2613 = load <8 x i32>, ptr %2612, align 4, !tbaa !5
  %2614 = shufflevector <8 x i32> %2613, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2615 = getelementptr inbounds i32, ptr %2608, i64 -23
  %2616 = load <8 x i32>, ptr %2615, align 4, !tbaa !5
  %2617 = shufflevector <8 x i32> %2616, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2618 = getelementptr inbounds i32, ptr %2608, i64 -31
  %2619 = load <8 x i32>, ptr %2618, align 4, !tbaa !5
  %2620 = shufflevector <8 x i32> %2619, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2621 = mul <8 x i32> %2611, %2603
  %2622 = mul <8 x i32> %2614, %2604
  %2623 = mul <8 x i32> %2617, %2605
  %2624 = mul <8 x i32> %2620, %2606
  %2625 = add nuw i64 %2602, 32
  %2626 = icmp eq i64 %2625, %2599
  br i1 %2626, label %2627, label %2601, !llvm.loop !669

2627:                                             ; preds = %2601
  %2628 = mul <8 x i32> %2622, %2621
  %2629 = mul <8 x i32> %2623, %2628
  %2630 = mul <8 x i32> %2624, %2629
  %2631 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2630)
  %2632 = icmp eq i64 %2595, %2599
  br i1 %2632, label %2645, label %2633

2633:                                             ; preds = %2586, %2627
  %2634 = phi i64 [ %2589, %2586 ], [ %2600, %2627 ]
  %2635 = phi i32 [ 1, %2586 ], [ %2631, %2627 ]
  br label %2636

2636:                                             ; preds = %2633, %2636
  %2637 = phi i64 [ %2642, %2636 ], [ %2634, %2633 ]
  %2638 = phi i32 [ %2641, %2636 ], [ %2635, %2633 ]
  %2639 = getelementptr inbounds i32, ptr %11, i64 %2637
  %2640 = load i32, ptr %2639, align 4, !tbaa !5
  %2641 = mul nsw i32 %2640, %2638
  %2642 = add nsw i64 %2637, -1
  %2643 = trunc i64 %2637 to i32
  %2644 = icmp sgt i32 %2643, 0
  br i1 %2644, label %2636, label %2645, !llvm.loop !670

2645:                                             ; preds = %2636, %2627
  %2646 = phi i32 [ %2631, %2627 ], [ %2641, %2636 ]
  %2647 = and i64 %2596, 4294967295
  %2648 = getelementptr inbounds i32, ptr %6, i64 %2647
  %2649 = load i32, ptr %2648, align 4, !tbaa !5
  %2650 = mul nsw i32 %2649, %2646
  %2651 = add nsw i32 %2650, %2590
  %2652 = icmp sgt i64 %2588, 2
  %2653 = add nsw i64 %2589, -1
  %2654 = add i32 %2587, 1
  br i1 %2652, label %2586, label %2655, !llvm.loop !671

2655:                                             ; preds = %2645, %2583
  %2656 = phi i32 [ %2585, %2583 ], [ %2651, %2645 ]
  %2657 = icmp slt i32 %2656, %5
  br i1 %2657, label %2660, label %2658

2658:                                             ; preds = %2655
  %2659 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2660:                                             ; preds = %2655
  %2661 = sext i32 %2656 to i64
  %2662 = getelementptr inbounds i32, ptr %2418, i64 %2661
  %2663 = load i32, ptr %2662, align 4, !tbaa !5
  %2664 = load i32, ptr %2420, align 4, !tbaa !5
  %2665 = add i32 %2664, %2663
  store i32 %2665, ptr %2420, align 4, !tbaa !5
  %2666 = add nuw nsw i32 %2584, 1
  br i1 %2433, label %2667, label %2717

2667:                                             ; preds = %2660
  %2668 = load i32, ptr %4, align 4, !tbaa !5
  %2669 = load i32, ptr %12, align 4, !tbaa !5
  %2670 = add nsw i32 %2669, -1
  %2671 = icmp slt i32 %2668, %2670
  br i1 %2671, label %2694, label %2672

2672:                                             ; preds = %2667
  %2673 = icmp eq i32 %2668, %2670
  br i1 %2673, label %2674, label %2710

2674:                                             ; preds = %2672
  store i32 0, ptr %4, align 4, !tbaa !5
  %2675 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2675, ptr %6, align 4, !tbaa !5
  br i1 %2438, label %2717, label %2676

2676:                                             ; preds = %2674, %2704
  %2677 = phi i64 [ %2708, %2704 ], [ 1, %2674 ]
  %2678 = getelementptr inbounds i32, ptr %4, i64 %2677
  %2679 = load i32, ptr %2678, align 4, !tbaa !5
  %2680 = getelementptr inbounds i32, ptr %12, i64 %2677
  %2681 = load i32, ptr %2680, align 4, !tbaa !5
  %2682 = add nsw i32 %2681, -1
  %2683 = icmp slt i32 %2679, %2682
  br i1 %2683, label %2684, label %2702

2684:                                             ; preds = %2676
  br i1 %2671, label %2694, label %2685

2685:                                             ; preds = %2684
  %2686 = shl i64 %2677, 32
  %2687 = add i64 %2686, -4294967296
  %2688 = ashr exact i64 %2687, 32
  %2689 = getelementptr inbounds i32, ptr %7, i64 %2688
  %2690 = load i32, ptr %2689, align 4, !tbaa !5
  %2691 = getelementptr inbounds i32, ptr %6, i64 %2677
  %2692 = load i32, ptr %2691, align 4, !tbaa !5
  %2693 = add nsw i32 %2692, %2690
  store i32 %2693, ptr %2691, align 4, !tbaa !5
  br label %2712

2694:                                             ; preds = %2667, %2684
  %2695 = phi i32 [ %2679, %2684 ], [ %2668, %2667 ]
  %2696 = phi ptr [ %2678, %2684 ], [ %4, %2667 ]
  %2697 = phi i64 [ %2677, %2684 ], [ 0, %2667 ]
  %2698 = add nsw i32 %2695, 1
  store i32 %2698, ptr %2696, align 4, !tbaa !5
  %2699 = getelementptr inbounds i32, ptr %7, i64 %2697
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = getelementptr inbounds i32, ptr %6, i64 %2697
  br label %2712

2702:                                             ; preds = %2676
  %2703 = icmp eq i32 %2679, %2682
  br i1 %2703, label %2704, label %2710

2704:                                             ; preds = %2702
  store i32 0, ptr %2678, align 4, !tbaa !5
  %2705 = getelementptr inbounds i32, ptr %8, i64 %2677
  %2706 = load i32, ptr %2705, align 4, !tbaa !5
  %2707 = getelementptr inbounds i32, ptr %6, i64 %2677
  store i32 %2706, ptr %2707, align 4, !tbaa !5
  %2708 = add nuw nsw i64 %2677, 1
  %2709 = icmp eq i64 %2708, %2436
  br i1 %2709, label %2717, label %2676, !llvm.loop !672

2710:                                             ; preds = %2672, %2702
  %2711 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2712:                                             ; preds = %2685, %2694
  %2713 = phi ptr [ %2701, %2694 ], [ %2678, %2685 ]
  %2714 = phi i32 [ %2700, %2694 ], [ 1, %2685 ]
  %2715 = load i32, ptr %2713, align 4, !tbaa !5
  %2716 = add nsw i32 %2715, %2714
  store i32 %2716, ptr %2713, align 4, !tbaa !5
  br label %2717

2717:                                             ; preds = %2704, %2712, %2674, %2660
  %2718 = icmp eq i32 %2666, %5
  br i1 %2718, label %5404, label %2583, !llvm.loop !673

2719:                                             ; preds = %2424
  %2720 = getelementptr inbounds i32, ptr %3, i64 %19
  %2721 = load i32, ptr %2720, align 4, !tbaa !5
  %2722 = icmp eq i32 %2721, 0
  %2723 = icmp sgt i32 %5, 0
  br i1 %2722, label %2733, label %2724

2724:                                             ; preds = %2719
  br i1 %2723, label %2725, label %5404

2725:                                             ; preds = %2724
  %2726 = icmp sgt i32 %13, 1
  %2727 = icmp sgt i32 %13, 0
  %2728 = add i32 %13, -2
  %2729 = zext i32 %2728 to i64
  %2730 = zext i32 %13 to i64
  %2731 = add nuw i32 %5, 1
  %2732 = icmp eq i32 %13, 1
  br label %2871

2733:                                             ; preds = %2719
  br i1 %2723, label %2734, label %5404

2734:                                             ; preds = %2733
  %2735 = icmp sgt i32 %13, 1
  %2736 = icmp sgt i32 %13, 0
  %2737 = add i32 %13, -2
  %2738 = zext i32 %2737 to i64
  %2739 = zext i32 %13 to i64
  %2740 = add nuw i32 %5, 1
  %2741 = icmp eq i32 %13, 1
  br label %2742

2742:                                             ; preds = %2734, %2869
  %2743 = phi i32 [ 0, %2734 ], [ %2821, %2869 ]
  %2744 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2735, label %2745, label %2814

2745:                                             ; preds = %2742, %2804
  %2746 = phi i32 [ %2813, %2804 ], [ 0, %2742 ]
  %2747 = phi i64 [ %2755, %2804 ], [ %2739, %2742 ]
  %2748 = phi i64 [ %2812, %2804 ], [ %2738, %2742 ]
  %2749 = phi i32 [ %2810, %2804 ], [ %2744, %2742 ]
  %2750 = sub i32 %2737, %2746
  %2751 = tail call i32 @llvm.smin.i32(i32 %2750, i32 0)
  %2752 = sub i32 %2750, %2751
  %2753 = zext i32 %2752 to i64
  %2754 = add nuw nsw i64 %2753, 1
  %2755 = add nsw i64 %2747, -1
  %2756 = icmp ult i32 %2752, 31
  br i1 %2756, label %2792, label %2757

2757:                                             ; preds = %2745
  %2758 = and i64 %2754, 8589934560
  %2759 = sub i64 %2748, %2758
  br label %2760

2760:                                             ; preds = %2760, %2757
  %2761 = phi i64 [ 0, %2757 ], [ %2784, %2760 ]
  %2762 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2780, %2760 ]
  %2763 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2781, %2760 ]
  %2764 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2782, %2760 ]
  %2765 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2757 ], [ %2783, %2760 ]
  %2766 = sub i64 %2748, %2761
  %2767 = getelementptr inbounds i32, ptr %9, i64 %2766
  %2768 = getelementptr inbounds i32, ptr %2767, i64 -7
  %2769 = load <8 x i32>, ptr %2768, align 4, !tbaa !5
  %2770 = shufflevector <8 x i32> %2769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2771 = getelementptr inbounds i32, ptr %2767, i64 -15
  %2772 = load <8 x i32>, ptr %2771, align 4, !tbaa !5
  %2773 = shufflevector <8 x i32> %2772, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2774 = getelementptr inbounds i32, ptr %2767, i64 -23
  %2775 = load <8 x i32>, ptr %2774, align 4, !tbaa !5
  %2776 = shufflevector <8 x i32> %2775, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2777 = getelementptr inbounds i32, ptr %2767, i64 -31
  %2778 = load <8 x i32>, ptr %2777, align 4, !tbaa !5
  %2779 = shufflevector <8 x i32> %2778, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2780 = mul <8 x i32> %2770, %2762
  %2781 = mul <8 x i32> %2773, %2763
  %2782 = mul <8 x i32> %2776, %2764
  %2783 = mul <8 x i32> %2779, %2765
  %2784 = add nuw i64 %2761, 32
  %2785 = icmp eq i64 %2784, %2758
  br i1 %2785, label %2786, label %2760, !llvm.loop !674

2786:                                             ; preds = %2760
  %2787 = mul <8 x i32> %2781, %2780
  %2788 = mul <8 x i32> %2782, %2787
  %2789 = mul <8 x i32> %2783, %2788
  %2790 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2789)
  %2791 = icmp eq i64 %2754, %2758
  br i1 %2791, label %2804, label %2792

2792:                                             ; preds = %2745, %2786
  %2793 = phi i64 [ %2748, %2745 ], [ %2759, %2786 ]
  %2794 = phi i32 [ 1, %2745 ], [ %2790, %2786 ]
  br label %2795

2795:                                             ; preds = %2792, %2795
  %2796 = phi i64 [ %2801, %2795 ], [ %2793, %2792 ]
  %2797 = phi i32 [ %2800, %2795 ], [ %2794, %2792 ]
  %2798 = getelementptr inbounds i32, ptr %9, i64 %2796
  %2799 = load i32, ptr %2798, align 4, !tbaa !5
  %2800 = mul nsw i32 %2799, %2797
  %2801 = add nsw i64 %2796, -1
  %2802 = trunc i64 %2796 to i32
  %2803 = icmp sgt i32 %2802, 0
  br i1 %2803, label %2795, label %2804, !llvm.loop !675

2804:                                             ; preds = %2795, %2786
  %2805 = phi i32 [ %2790, %2786 ], [ %2800, %2795 ]
  %2806 = and i64 %2755, 4294967295
  %2807 = getelementptr inbounds i32, ptr %6, i64 %2806
  %2808 = load i32, ptr %2807, align 4, !tbaa !5
  %2809 = mul nsw i32 %2808, %2805
  %2810 = add nsw i32 %2809, %2749
  %2811 = icmp sgt i64 %2747, 2
  %2812 = add nsw i64 %2748, -1
  %2813 = add i32 %2746, 1
  br i1 %2811, label %2745, label %2814, !llvm.loop !676

2814:                                             ; preds = %2804, %2742
  %2815 = phi i32 [ %2744, %2742 ], [ %2810, %2804 ]
  %2816 = sext i32 %2815 to i64
  %2817 = getelementptr inbounds i32, ptr %2418, i64 %2816
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = load i32, ptr %2420, align 4, !tbaa !5
  %2820 = add nsw i32 %2819, %2818
  store i32 %2820, ptr %2420, align 4, !tbaa !5
  %2821 = add nuw nsw i32 %2743, 1
  br i1 %2736, label %2822, label %2869

2822:                                             ; preds = %2814
  %2823 = load i32, ptr %4, align 4, !tbaa !5
  %2824 = load i32, ptr %12, align 4, !tbaa !5
  %2825 = add nsw i32 %2824, -1
  %2826 = icmp slt i32 %2823, %2825
  br i1 %2826, label %2846, label %2827

2827:                                             ; preds = %2822
  %2828 = icmp eq i32 %2823, %2825
  br i1 %2828, label %2829, label %2862

2829:                                             ; preds = %2827
  store i32 0, ptr %4, align 4, !tbaa !5
  %2830 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2830, ptr %6, align 4, !tbaa !5
  br i1 %2741, label %2869, label %2831

2831:                                             ; preds = %2829, %2856
  %2832 = phi i64 [ %2860, %2856 ], [ 1, %2829 ]
  %2833 = getelementptr inbounds i32, ptr %4, i64 %2832
  %2834 = load i32, ptr %2833, align 4, !tbaa !5
  %2835 = getelementptr inbounds i32, ptr %12, i64 %2832
  %2836 = load i32, ptr %2835, align 4, !tbaa !5
  %2837 = add nsw i32 %2836, -1
  %2838 = icmp slt i32 %2834, %2837
  br i1 %2838, label %2839, label %2854

2839:                                             ; preds = %2831
  br i1 %2826, label %2846, label %2840

2840:                                             ; preds = %2839
  %2841 = getelementptr inbounds i32, ptr %7, i64 %2832
  %2842 = load i32, ptr %2841, align 4, !tbaa !5
  %2843 = getelementptr inbounds i32, ptr %6, i64 %2832
  %2844 = load i32, ptr %2843, align 4, !tbaa !5
  %2845 = add nsw i32 %2844, %2842
  store i32 %2845, ptr %2843, align 4, !tbaa !5
  br label %2864

2846:                                             ; preds = %2822, %2839
  %2847 = phi i32 [ %2834, %2839 ], [ %2823, %2822 ]
  %2848 = phi ptr [ %2833, %2839 ], [ %4, %2822 ]
  %2849 = phi i64 [ %2832, %2839 ], [ 0, %2822 ]
  %2850 = add nsw i32 %2847, 1
  store i32 %2850, ptr %2848, align 4, !tbaa !5
  %2851 = getelementptr inbounds i32, ptr %7, i64 %2849
  %2852 = load i32, ptr %2851, align 4, !tbaa !5
  %2853 = getelementptr inbounds i32, ptr %6, i64 %2849
  br label %2864

2854:                                             ; preds = %2831
  %2855 = icmp eq i32 %2834, %2837
  br i1 %2855, label %2856, label %2862

2856:                                             ; preds = %2854
  store i32 0, ptr %2833, align 4, !tbaa !5
  %2857 = getelementptr inbounds i32, ptr %8, i64 %2832
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2832
  store i32 %2858, ptr %2859, align 4, !tbaa !5
  %2860 = add nuw nsw i64 %2832, 1
  %2861 = icmp eq i64 %2860, %2739
  br i1 %2861, label %2869, label %2831, !llvm.loop !677

2862:                                             ; preds = %2827, %2854
  %2863 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

2864:                                             ; preds = %2840, %2846
  %2865 = phi ptr [ %2853, %2846 ], [ %2833, %2840 ]
  %2866 = phi i32 [ %2852, %2846 ], [ 1, %2840 ]
  %2867 = load i32, ptr %2865, align 4, !tbaa !5
  %2868 = add nsw i32 %2867, %2866
  store i32 %2868, ptr %2865, align 4, !tbaa !5
  br label %2869

2869:                                             ; preds = %2856, %2864, %2829, %2814
  %2870 = icmp eq i32 %2821, %5
  br i1 %2870, label %5404, label %2742, !llvm.loop !678

2871:                                             ; preds = %2725, %3005
  %2872 = phi i32 [ 0, %2725 ], [ %2954, %3005 ]
  %2873 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2726, label %2874, label %2943

2874:                                             ; preds = %2871, %2933
  %2875 = phi i32 [ %2942, %2933 ], [ 0, %2871 ]
  %2876 = phi i64 [ %2884, %2933 ], [ %2730, %2871 ]
  %2877 = phi i64 [ %2941, %2933 ], [ %2729, %2871 ]
  %2878 = phi i32 [ %2939, %2933 ], [ %2873, %2871 ]
  %2879 = sub i32 %2728, %2875
  %2880 = tail call i32 @llvm.smin.i32(i32 %2879, i32 0)
  %2881 = sub i32 %2879, %2880
  %2882 = zext i32 %2881 to i64
  %2883 = add nuw nsw i64 %2882, 1
  %2884 = add nsw i64 %2876, -1
  %2885 = icmp ult i32 %2881, 31
  br i1 %2885, label %2921, label %2886

2886:                                             ; preds = %2874
  %2887 = and i64 %2883, 8589934560
  %2888 = sub i64 %2877, %2887
  br label %2889

2889:                                             ; preds = %2889, %2886
  %2890 = phi i64 [ 0, %2886 ], [ %2913, %2889 ]
  %2891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2909, %2889 ]
  %2892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2910, %2889 ]
  %2893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2911, %2889 ]
  %2894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2886 ], [ %2912, %2889 ]
  %2895 = sub i64 %2877, %2890
  %2896 = getelementptr inbounds i32, ptr %11, i64 %2895
  %2897 = getelementptr inbounds i32, ptr %2896, i64 -7
  %2898 = load <8 x i32>, ptr %2897, align 4, !tbaa !5
  %2899 = shufflevector <8 x i32> %2898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2900 = getelementptr inbounds i32, ptr %2896, i64 -15
  %2901 = load <8 x i32>, ptr %2900, align 4, !tbaa !5
  %2902 = shufflevector <8 x i32> %2901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2903 = getelementptr inbounds i32, ptr %2896, i64 -23
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !5
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2896, i64 -31
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !5
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = mul <8 x i32> %2899, %2891
  %2910 = mul <8 x i32> %2902, %2892
  %2911 = mul <8 x i32> %2905, %2893
  %2912 = mul <8 x i32> %2908, %2894
  %2913 = add nuw i64 %2890, 32
  %2914 = icmp eq i64 %2913, %2887
  br i1 %2914, label %2915, label %2889, !llvm.loop !679

2915:                                             ; preds = %2889
  %2916 = mul <8 x i32> %2910, %2909
  %2917 = mul <8 x i32> %2911, %2916
  %2918 = mul <8 x i32> %2912, %2917
  %2919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2918)
  %2920 = icmp eq i64 %2883, %2887
  br i1 %2920, label %2933, label %2921

2921:                                             ; preds = %2874, %2915
  %2922 = phi i64 [ %2877, %2874 ], [ %2888, %2915 ]
  %2923 = phi i32 [ 1, %2874 ], [ %2919, %2915 ]
  br label %2924

2924:                                             ; preds = %2921, %2924
  %2925 = phi i64 [ %2930, %2924 ], [ %2922, %2921 ]
  %2926 = phi i32 [ %2929, %2924 ], [ %2923, %2921 ]
  %2927 = getelementptr inbounds i32, ptr %11, i64 %2925
  %2928 = load i32, ptr %2927, align 4, !tbaa !5
  %2929 = mul nsw i32 %2928, %2926
  %2930 = add nsw i64 %2925, -1
  %2931 = trunc i64 %2925 to i32
  %2932 = icmp sgt i32 %2931, 0
  br i1 %2932, label %2924, label %2933, !llvm.loop !680

2933:                                             ; preds = %2924, %2915
  %2934 = phi i32 [ %2919, %2915 ], [ %2929, %2924 ]
  %2935 = and i64 %2884, 4294967295
  %2936 = getelementptr inbounds i32, ptr %6, i64 %2935
  %2937 = load i32, ptr %2936, align 4, !tbaa !5
  %2938 = mul nsw i32 %2937, %2934
  %2939 = add nsw i32 %2938, %2878
  %2940 = icmp sgt i64 %2876, 2
  %2941 = add nsw i64 %2877, -1
  %2942 = add i32 %2875, 1
  br i1 %2940, label %2874, label %2943, !llvm.loop !681

2943:                                             ; preds = %2933, %2871
  %2944 = phi i32 [ %2873, %2871 ], [ %2939, %2933 ]
  %2945 = icmp slt i32 %2944, %5
  br i1 %2945, label %2948, label %2946

2946:                                             ; preds = %2943
  %2947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

2948:                                             ; preds = %2943
  %2949 = sext i32 %2944 to i64
  %2950 = getelementptr inbounds i32, ptr %2418, i64 %2949
  %2951 = load i32, ptr %2950, align 4, !tbaa !5
  %2952 = load i32, ptr %2420, align 4, !tbaa !5
  %2953 = add nsw i32 %2952, %2951
  store i32 %2953, ptr %2420, align 4, !tbaa !5
  %2954 = add nuw nsw i32 %2872, 1
  br i1 %2727, label %2955, label %3005

2955:                                             ; preds = %2948
  %2956 = load i32, ptr %4, align 4, !tbaa !5
  %2957 = load i32, ptr %12, align 4, !tbaa !5
  %2958 = add nsw i32 %2957, -1
  %2959 = icmp slt i32 %2956, %2958
  br i1 %2959, label %2982, label %2960

2960:                                             ; preds = %2955
  %2961 = icmp eq i32 %2956, %2958
  br i1 %2961, label %2962, label %2998

2962:                                             ; preds = %2960
  store i32 0, ptr %4, align 4, !tbaa !5
  %2963 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2963, ptr %6, align 4, !tbaa !5
  br i1 %2732, label %3005, label %2964

2964:                                             ; preds = %2962, %2992
  %2965 = phi i64 [ %2996, %2992 ], [ 1, %2962 ]
  %2966 = getelementptr inbounds i32, ptr %4, i64 %2965
  %2967 = load i32, ptr %2966, align 4, !tbaa !5
  %2968 = getelementptr inbounds i32, ptr %12, i64 %2965
  %2969 = load i32, ptr %2968, align 4, !tbaa !5
  %2970 = add nsw i32 %2969, -1
  %2971 = icmp slt i32 %2967, %2970
  br i1 %2971, label %2972, label %2990

2972:                                             ; preds = %2964
  br i1 %2959, label %2982, label %2973

2973:                                             ; preds = %2972
  %2974 = shl i64 %2965, 32
  %2975 = add i64 %2974, -4294967296
  %2976 = ashr exact i64 %2975, 32
  %2977 = getelementptr inbounds i32, ptr %7, i64 %2976
  %2978 = load i32, ptr %2977, align 4, !tbaa !5
  %2979 = getelementptr inbounds i32, ptr %6, i64 %2965
  %2980 = load i32, ptr %2979, align 4, !tbaa !5
  %2981 = add nsw i32 %2980, %2978
  store i32 %2981, ptr %2979, align 4, !tbaa !5
  br label %3000

2982:                                             ; preds = %2955, %2972
  %2983 = phi i32 [ %2967, %2972 ], [ %2956, %2955 ]
  %2984 = phi ptr [ %2966, %2972 ], [ %4, %2955 ]
  %2985 = phi i64 [ %2965, %2972 ], [ 0, %2955 ]
  %2986 = add nsw i32 %2983, 1
  store i32 %2986, ptr %2984, align 4, !tbaa !5
  %2987 = getelementptr inbounds i32, ptr %7, i64 %2985
  %2988 = load i32, ptr %2987, align 4, !tbaa !5
  %2989 = getelementptr inbounds i32, ptr %6, i64 %2985
  br label %3000

2990:                                             ; preds = %2964
  %2991 = icmp eq i32 %2967, %2970
  br i1 %2991, label %2992, label %2998

2992:                                             ; preds = %2990
  store i32 0, ptr %2966, align 4, !tbaa !5
  %2993 = getelementptr inbounds i32, ptr %8, i64 %2965
  %2994 = load i32, ptr %2993, align 4, !tbaa !5
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2965
  store i32 %2994, ptr %2995, align 4, !tbaa !5
  %2996 = add nuw nsw i64 %2965, 1
  %2997 = icmp eq i64 %2996, %2730
  br i1 %2997, label %3005, label %2964, !llvm.loop !682

2998:                                             ; preds = %2960, %2990
  %2999 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3000:                                             ; preds = %2973, %2982
  %3001 = phi ptr [ %2989, %2982 ], [ %2966, %2973 ]
  %3002 = phi i32 [ %2988, %2982 ], [ 1, %2973 ]
  %3003 = load i32, ptr %3001, align 4, !tbaa !5
  %3004 = add nsw i32 %3003, %3002
  store i32 %3004, ptr %3001, align 4, !tbaa !5
  br label %3005

3005:                                             ; preds = %2992, %3000, %2962, %2948
  %3006 = icmp eq i32 %2954, %5
  br i1 %3006, label %5404, label %2871, !llvm.loop !683

3007:                                             ; preds = %2424
  %3008 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

3009:                                             ; preds = %18
  %3010 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3011 = load ptr, ptr %3010, align 8, !tbaa !9
  %3012 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3013 = load ptr, ptr %3012, align 8, !tbaa !9
  store i64 0, ptr %3013, align 8, !tbaa !120
  %3014 = icmp eq i32 %13, 0
  br i1 %3014, label %3015, label %3018

3015:                                             ; preds = %3009
  %3016 = load i32, ptr %3011, align 4, !tbaa !5
  %3017 = sext i32 %3016 to i64
  store i64 %3017, ptr %3013, align 8, !tbaa !120
  br label %5404

3018:                                             ; preds = %3009
  switch i32 %1, label %3606 [
    i32 1, label %3019
    i32 0, label %3316
  ]

3019:                                             ; preds = %3018
  %3020 = getelementptr inbounds i32, ptr %3, i64 %19
  %3021 = load i32, ptr %3020, align 4, !tbaa !5
  %3022 = icmp eq i32 %3021, 0
  %3023 = icmp sgt i32 %5, 0
  br i1 %3022, label %3033, label %3024

3024:                                             ; preds = %3019
  br i1 %3023, label %3025, label %5404

3025:                                             ; preds = %3024
  %3026 = icmp sgt i32 %13, 1
  %3027 = icmp sgt i32 %13, 0
  %3028 = add i32 %13, -2
  %3029 = zext i32 %3028 to i64
  %3030 = zext i32 %13 to i64
  %3031 = add nuw i32 %5, 1
  %3032 = icmp eq i32 %13, 1
  br label %3177

3033:                                             ; preds = %3019
  br i1 %3023, label %3034, label %5404

3034:                                             ; preds = %3033
  %3035 = icmp sgt i32 %13, 1
  %3036 = icmp sgt i32 %13, 0
  %3037 = add i32 %13, -2
  %3038 = zext i32 %3037 to i64
  %3039 = zext i32 %13 to i64
  %3040 = add nuw i32 %5, 1
  %3041 = icmp eq i32 %13, 1
  br label %3042

3042:                                             ; preds = %3034, %3175
  %3043 = phi i64 [ 0, %3034 ], [ %3126, %3175 ]
  %3044 = phi i32 [ 0, %3034 ], [ %3127, %3175 ]
  %3045 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3035, label %3046, label %3115

3046:                                             ; preds = %3042, %3105
  %3047 = phi i32 [ %3114, %3105 ], [ 0, %3042 ]
  %3048 = phi i64 [ %3056, %3105 ], [ %3039, %3042 ]
  %3049 = phi i64 [ %3113, %3105 ], [ %3038, %3042 ]
  %3050 = phi i32 [ %3111, %3105 ], [ %3045, %3042 ]
  %3051 = sub i32 %3037, %3047
  %3052 = tail call i32 @llvm.smin.i32(i32 %3051, i32 0)
  %3053 = sub i32 %3051, %3052
  %3054 = zext i32 %3053 to i64
  %3055 = add nuw nsw i64 %3054, 1
  %3056 = add nsw i64 %3048, -1
  %3057 = icmp ult i32 %3053, 31
  br i1 %3057, label %3093, label %3058

3058:                                             ; preds = %3046
  %3059 = and i64 %3055, 8589934560
  %3060 = sub i64 %3049, %3059
  br label %3061

3061:                                             ; preds = %3061, %3058
  %3062 = phi i64 [ 0, %3058 ], [ %3085, %3061 ]
  %3063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3081, %3061 ]
  %3064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3082, %3061 ]
  %3065 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3083, %3061 ]
  %3066 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3058 ], [ %3084, %3061 ]
  %3067 = sub i64 %3049, %3062
  %3068 = getelementptr inbounds i32, ptr %9, i64 %3067
  %3069 = getelementptr inbounds i32, ptr %3068, i64 -7
  %3070 = load <8 x i32>, ptr %3069, align 4, !tbaa !5
  %3071 = shufflevector <8 x i32> %3070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3072 = getelementptr inbounds i32, ptr %3068, i64 -15
  %3073 = load <8 x i32>, ptr %3072, align 4, !tbaa !5
  %3074 = shufflevector <8 x i32> %3073, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3075 = getelementptr inbounds i32, ptr %3068, i64 -23
  %3076 = load <8 x i32>, ptr %3075, align 4, !tbaa !5
  %3077 = shufflevector <8 x i32> %3076, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3078 = getelementptr inbounds i32, ptr %3068, i64 -31
  %3079 = load <8 x i32>, ptr %3078, align 4, !tbaa !5
  %3080 = shufflevector <8 x i32> %3079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3081 = mul <8 x i32> %3071, %3063
  %3082 = mul <8 x i32> %3074, %3064
  %3083 = mul <8 x i32> %3077, %3065
  %3084 = mul <8 x i32> %3080, %3066
  %3085 = add nuw i64 %3062, 32
  %3086 = icmp eq i64 %3085, %3059
  br i1 %3086, label %3087, label %3061, !llvm.loop !684

3087:                                             ; preds = %3061
  %3088 = mul <8 x i32> %3082, %3081
  %3089 = mul <8 x i32> %3083, %3088
  %3090 = mul <8 x i32> %3084, %3089
  %3091 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3090)
  %3092 = icmp eq i64 %3055, %3059
  br i1 %3092, label %3105, label %3093

3093:                                             ; preds = %3046, %3087
  %3094 = phi i64 [ %3049, %3046 ], [ %3060, %3087 ]
  %3095 = phi i32 [ 1, %3046 ], [ %3091, %3087 ]
  br label %3096

3096:                                             ; preds = %3093, %3096
  %3097 = phi i64 [ %3102, %3096 ], [ %3094, %3093 ]
  %3098 = phi i32 [ %3101, %3096 ], [ %3095, %3093 ]
  %3099 = getelementptr inbounds i32, ptr %9, i64 %3097
  %3100 = load i32, ptr %3099, align 4, !tbaa !5
  %3101 = mul nsw i32 %3100, %3098
  %3102 = add nsw i64 %3097, -1
  %3103 = trunc i64 %3097 to i32
  %3104 = icmp sgt i32 %3103, 0
  br i1 %3104, label %3096, label %3105, !llvm.loop !685

3105:                                             ; preds = %3096, %3087
  %3106 = phi i32 [ %3091, %3087 ], [ %3101, %3096 ]
  %3107 = and i64 %3056, 4294967295
  %3108 = getelementptr inbounds i32, ptr %6, i64 %3107
  %3109 = load i32, ptr %3108, align 4, !tbaa !5
  %3110 = mul nsw i32 %3109, %3106
  %3111 = add nsw i32 %3110, %3050
  %3112 = icmp sgt i64 %3048, 2
  %3113 = add nsw i64 %3049, -1
  %3114 = add i32 %3047, 1
  br i1 %3112, label %3046, label %3115, !llvm.loop !686

3115:                                             ; preds = %3105, %3042
  %3116 = phi i32 [ %3045, %3042 ], [ %3111, %3105 ]
  %3117 = sext i32 %3116 to i64
  %3118 = getelementptr inbounds double, ptr %2, i64 %3117
  %3119 = load double, ptr %3118, align 8, !tbaa !18
  %3120 = getelementptr inbounds i32, ptr %3011, i64 %3117
  %3121 = load i32, ptr %3120, align 4, !tbaa !5
  %3122 = sitofp i64 %3043 to double
  %3123 = sitofp i32 %3121 to double
  %3124 = fmul fast double %3119, %3123
  %3125 = fadd fast double %3124, %3122
  %3126 = fptosi double %3125 to i64
  %3127 = add nuw nsw i32 %3044, 1
  br i1 %3036, label %3128, label %3175

3128:                                             ; preds = %3115
  %3129 = load i32, ptr %4, align 4, !tbaa !5
  %3130 = load i32, ptr %12, align 4, !tbaa !5
  %3131 = add nsw i32 %3130, -1
  %3132 = icmp slt i32 %3129, %3131
  br i1 %3132, label %3152, label %3133

3133:                                             ; preds = %3128
  %3134 = icmp eq i32 %3129, %3131
  br i1 %3134, label %3135, label %3168

3135:                                             ; preds = %3133
  store i32 0, ptr %4, align 4, !tbaa !5
  %3136 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3136, ptr %6, align 4, !tbaa !5
  br i1 %3041, label %3175, label %3137

3137:                                             ; preds = %3135, %3162
  %3138 = phi i64 [ %3166, %3162 ], [ 1, %3135 ]
  %3139 = getelementptr inbounds i32, ptr %4, i64 %3138
  %3140 = load i32, ptr %3139, align 4, !tbaa !5
  %3141 = getelementptr inbounds i32, ptr %12, i64 %3138
  %3142 = load i32, ptr %3141, align 4, !tbaa !5
  %3143 = add nsw i32 %3142, -1
  %3144 = icmp slt i32 %3140, %3143
  br i1 %3144, label %3145, label %3160

3145:                                             ; preds = %3137
  br i1 %3132, label %3152, label %3146

3146:                                             ; preds = %3145
  %3147 = getelementptr inbounds i32, ptr %7, i64 %3138
  %3148 = load i32, ptr %3147, align 4, !tbaa !5
  %3149 = getelementptr inbounds i32, ptr %6, i64 %3138
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = add nsw i32 %3150, %3148
  store i32 %3151, ptr %3149, align 4, !tbaa !5
  br label %3170

3152:                                             ; preds = %3128, %3145
  %3153 = phi i32 [ %3140, %3145 ], [ %3129, %3128 ]
  %3154 = phi ptr [ %3139, %3145 ], [ %4, %3128 ]
  %3155 = phi i64 [ %3138, %3145 ], [ 0, %3128 ]
  %3156 = add nsw i32 %3153, 1
  store i32 %3156, ptr %3154, align 4, !tbaa !5
  %3157 = getelementptr inbounds i32, ptr %7, i64 %3155
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = getelementptr inbounds i32, ptr %6, i64 %3155
  br label %3170

3160:                                             ; preds = %3137
  %3161 = icmp eq i32 %3140, %3143
  br i1 %3161, label %3162, label %3168

3162:                                             ; preds = %3160
  store i32 0, ptr %3139, align 4, !tbaa !5
  %3163 = getelementptr inbounds i32, ptr %8, i64 %3138
  %3164 = load i32, ptr %3163, align 4, !tbaa !5
  %3165 = getelementptr inbounds i32, ptr %6, i64 %3138
  store i32 %3164, ptr %3165, align 4, !tbaa !5
  %3166 = add nuw nsw i64 %3138, 1
  %3167 = icmp eq i64 %3166, %3039
  br i1 %3167, label %3175, label %3137, !llvm.loop !687

3168:                                             ; preds = %3133, %3160
  store i64 %3126, ptr %3013, align 8, !tbaa !120
  %3169 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3170:                                             ; preds = %3146, %3152
  %3171 = phi ptr [ %3159, %3152 ], [ %3139, %3146 ]
  %3172 = phi i32 [ %3158, %3152 ], [ 1, %3146 ]
  %3173 = load i32, ptr %3171, align 4, !tbaa !5
  %3174 = add nsw i32 %3173, %3172
  store i32 %3174, ptr %3171, align 4, !tbaa !5
  br label %3175

3175:                                             ; preds = %3162, %3170, %3135, %3115
  %3176 = icmp eq i32 %3127, %5
  br i1 %3176, label %5398, label %3042, !llvm.loop !688

3177:                                             ; preds = %3025, %3314
  %3178 = phi i64 [ 0, %3025 ], [ %3262, %3314 ]
  %3179 = phi i32 [ 0, %3025 ], [ %3263, %3314 ]
  %3180 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3026, label %3181, label %3250

3181:                                             ; preds = %3177, %3240
  %3182 = phi i32 [ %3249, %3240 ], [ 0, %3177 ]
  %3183 = phi i64 [ %3191, %3240 ], [ %3030, %3177 ]
  %3184 = phi i64 [ %3248, %3240 ], [ %3029, %3177 ]
  %3185 = phi i32 [ %3246, %3240 ], [ %3180, %3177 ]
  %3186 = sub i32 %3028, %3182
  %3187 = tail call i32 @llvm.smin.i32(i32 %3186, i32 0)
  %3188 = sub i32 %3186, %3187
  %3189 = zext i32 %3188 to i64
  %3190 = add nuw nsw i64 %3189, 1
  %3191 = add nsw i64 %3183, -1
  %3192 = icmp ult i32 %3188, 31
  br i1 %3192, label %3228, label %3193

3193:                                             ; preds = %3181
  %3194 = and i64 %3190, 8589934560
  %3195 = sub i64 %3184, %3194
  br label %3196

3196:                                             ; preds = %3196, %3193
  %3197 = phi i64 [ 0, %3193 ], [ %3220, %3196 ]
  %3198 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3216, %3196 ]
  %3199 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3217, %3196 ]
  %3200 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3218, %3196 ]
  %3201 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3193 ], [ %3219, %3196 ]
  %3202 = sub i64 %3184, %3197
  %3203 = getelementptr inbounds i32, ptr %11, i64 %3202
  %3204 = getelementptr inbounds i32, ptr %3203, i64 -7
  %3205 = load <8 x i32>, ptr %3204, align 4, !tbaa !5
  %3206 = shufflevector <8 x i32> %3205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3207 = getelementptr inbounds i32, ptr %3203, i64 -15
  %3208 = load <8 x i32>, ptr %3207, align 4, !tbaa !5
  %3209 = shufflevector <8 x i32> %3208, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3210 = getelementptr inbounds i32, ptr %3203, i64 -23
  %3211 = load <8 x i32>, ptr %3210, align 4, !tbaa !5
  %3212 = shufflevector <8 x i32> %3211, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3213 = getelementptr inbounds i32, ptr %3203, i64 -31
  %3214 = load <8 x i32>, ptr %3213, align 4, !tbaa !5
  %3215 = shufflevector <8 x i32> %3214, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3216 = mul <8 x i32> %3206, %3198
  %3217 = mul <8 x i32> %3209, %3199
  %3218 = mul <8 x i32> %3212, %3200
  %3219 = mul <8 x i32> %3215, %3201
  %3220 = add nuw i64 %3197, 32
  %3221 = icmp eq i64 %3220, %3194
  br i1 %3221, label %3222, label %3196, !llvm.loop !689

3222:                                             ; preds = %3196
  %3223 = mul <8 x i32> %3217, %3216
  %3224 = mul <8 x i32> %3218, %3223
  %3225 = mul <8 x i32> %3219, %3224
  %3226 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3225)
  %3227 = icmp eq i64 %3190, %3194
  br i1 %3227, label %3240, label %3228

3228:                                             ; preds = %3181, %3222
  %3229 = phi i64 [ %3184, %3181 ], [ %3195, %3222 ]
  %3230 = phi i32 [ 1, %3181 ], [ %3226, %3222 ]
  br label %3231

3231:                                             ; preds = %3228, %3231
  %3232 = phi i64 [ %3237, %3231 ], [ %3229, %3228 ]
  %3233 = phi i32 [ %3236, %3231 ], [ %3230, %3228 ]
  %3234 = getelementptr inbounds i32, ptr %11, i64 %3232
  %3235 = load i32, ptr %3234, align 4, !tbaa !5
  %3236 = mul nsw i32 %3235, %3233
  %3237 = add nsw i64 %3232, -1
  %3238 = trunc i64 %3232 to i32
  %3239 = icmp sgt i32 %3238, 0
  br i1 %3239, label %3231, label %3240, !llvm.loop !690

3240:                                             ; preds = %3231, %3222
  %3241 = phi i32 [ %3226, %3222 ], [ %3236, %3231 ]
  %3242 = and i64 %3191, 4294967295
  %3243 = getelementptr inbounds i32, ptr %6, i64 %3242
  %3244 = load i32, ptr %3243, align 4, !tbaa !5
  %3245 = mul nsw i32 %3244, %3241
  %3246 = add nsw i32 %3245, %3185
  %3247 = icmp sgt i64 %3183, 2
  %3248 = add nsw i64 %3184, -1
  %3249 = add i32 %3182, 1
  br i1 %3247, label %3181, label %3250, !llvm.loop !691

3250:                                             ; preds = %3240, %3177
  %3251 = phi i32 [ %3180, %3177 ], [ %3246, %3240 ]
  %3252 = icmp slt i32 %3251, %5
  br i1 %3252, label %3255, label %3253

3253:                                             ; preds = %3250
  %3254 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

3255:                                             ; preds = %3250
  %3256 = sext i32 %3251 to i64
  %3257 = getelementptr inbounds i32, ptr %3011, i64 %3256
  %3258 = load i32, ptr %3257, align 4, !tbaa !5
  %3259 = sitofp i64 %3178 to double
  %3260 = sitofp i32 %3258 to double
  %3261 = fadd fast double %3259, %3260
  %3262 = fptosi double %3261 to i64
  store i64 %3262, ptr %3013, align 8, !tbaa !120
  %3263 = add nuw nsw i32 %3179, 1
  br i1 %3027, label %3264, label %3314

3264:                                             ; preds = %3255
  %3265 = load i32, ptr %4, align 4, !tbaa !5
  %3266 = load i32, ptr %12, align 4, !tbaa !5
  %3267 = add nsw i32 %3266, -1
  %3268 = icmp slt i32 %3265, %3267
  br i1 %3268, label %3291, label %3269

3269:                                             ; preds = %3264
  %3270 = icmp eq i32 %3265, %3267
  br i1 %3270, label %3271, label %3307

3271:                                             ; preds = %3269
  store i32 0, ptr %4, align 4, !tbaa !5
  %3272 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3272, ptr %6, align 4, !tbaa !5
  br i1 %3032, label %3314, label %3273

3273:                                             ; preds = %3271, %3301
  %3274 = phi i64 [ %3305, %3301 ], [ 1, %3271 ]
  %3275 = getelementptr inbounds i32, ptr %4, i64 %3274
  %3276 = load i32, ptr %3275, align 4, !tbaa !5
  %3277 = getelementptr inbounds i32, ptr %12, i64 %3274
  %3278 = load i32, ptr %3277, align 4, !tbaa !5
  %3279 = add nsw i32 %3278, -1
  %3280 = icmp slt i32 %3276, %3279
  br i1 %3280, label %3281, label %3299

3281:                                             ; preds = %3273
  br i1 %3268, label %3291, label %3282

3282:                                             ; preds = %3281
  %3283 = shl i64 %3274, 32
  %3284 = add i64 %3283, -4294967296
  %3285 = ashr exact i64 %3284, 32
  %3286 = getelementptr inbounds i32, ptr %7, i64 %3285
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = getelementptr inbounds i32, ptr %6, i64 %3274
  %3289 = load i32, ptr %3288, align 4, !tbaa !5
  %3290 = add nsw i32 %3289, %3287
  store i32 %3290, ptr %3288, align 4, !tbaa !5
  br label %3309

3291:                                             ; preds = %3264, %3281
  %3292 = phi i32 [ %3276, %3281 ], [ %3265, %3264 ]
  %3293 = phi ptr [ %3275, %3281 ], [ %4, %3264 ]
  %3294 = phi i64 [ %3274, %3281 ], [ 0, %3264 ]
  %3295 = add nsw i32 %3292, 1
  store i32 %3295, ptr %3293, align 4, !tbaa !5
  %3296 = getelementptr inbounds i32, ptr %7, i64 %3294
  %3297 = load i32, ptr %3296, align 4, !tbaa !5
  %3298 = getelementptr inbounds i32, ptr %6, i64 %3294
  br label %3309

3299:                                             ; preds = %3273
  %3300 = icmp eq i32 %3276, %3279
  br i1 %3300, label %3301, label %3307

3301:                                             ; preds = %3299
  store i32 0, ptr %3275, align 4, !tbaa !5
  %3302 = getelementptr inbounds i32, ptr %8, i64 %3274
  %3303 = load i32, ptr %3302, align 4, !tbaa !5
  %3304 = getelementptr inbounds i32, ptr %6, i64 %3274
  store i32 %3303, ptr %3304, align 4, !tbaa !5
  %3305 = add nuw nsw i64 %3274, 1
  %3306 = icmp eq i64 %3305, %3030
  br i1 %3306, label %3314, label %3273, !llvm.loop !692

3307:                                             ; preds = %3269, %3299
  %3308 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3309:                                             ; preds = %3282, %3291
  %3310 = phi ptr [ %3298, %3291 ], [ %3275, %3282 ]
  %3311 = phi i32 [ %3297, %3291 ], [ 1, %3282 ]
  %3312 = load i32, ptr %3310, align 4, !tbaa !5
  %3313 = add nsw i32 %3312, %3311
  store i32 %3313, ptr %3310, align 4, !tbaa !5
  br label %3314

3314:                                             ; preds = %3301, %3309, %3271, %3255
  %3315 = icmp eq i32 %3263, %5
  br i1 %3315, label %5404, label %3177, !llvm.loop !693

3316:                                             ; preds = %3018
  %3317 = getelementptr inbounds i32, ptr %3, i64 %19
  %3318 = load i32, ptr %3317, align 4, !tbaa !5
  %3319 = icmp eq i32 %3318, 0
  %3320 = icmp sgt i32 %5, 0
  br i1 %3319, label %3330, label %3321

3321:                                             ; preds = %3316
  br i1 %3320, label %3322, label %5404

3322:                                             ; preds = %3321
  %3323 = icmp sgt i32 %13, 1
  %3324 = icmp sgt i32 %13, 0
  %3325 = add i32 %13, -2
  %3326 = zext i32 %3325 to i64
  %3327 = zext i32 %13 to i64
  %3328 = add nuw i32 %5, 1
  %3329 = icmp eq i32 %13, 1
  br label %3469

3330:                                             ; preds = %3316
  br i1 %3320, label %3331, label %5404

3331:                                             ; preds = %3330
  %3332 = icmp sgt i32 %13, 1
  %3333 = icmp sgt i32 %13, 0
  %3334 = add i32 %13, -2
  %3335 = zext i32 %3334 to i64
  %3336 = zext i32 %13 to i64
  %3337 = add nuw i32 %5, 1
  %3338 = icmp eq i32 %13, 1
  br label %3339

3339:                                             ; preds = %3331, %3467
  %3340 = phi i64 [ 0, %3331 ], [ %3418, %3467 ]
  %3341 = phi i32 [ 0, %3331 ], [ %3419, %3467 ]
  %3342 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3332, label %3343, label %3412

3343:                                             ; preds = %3339, %3402
  %3344 = phi i32 [ %3411, %3402 ], [ 0, %3339 ]
  %3345 = phi i64 [ %3353, %3402 ], [ %3336, %3339 ]
  %3346 = phi i64 [ %3410, %3402 ], [ %3335, %3339 ]
  %3347 = phi i32 [ %3408, %3402 ], [ %3342, %3339 ]
  %3348 = sub i32 %3334, %3344
  %3349 = tail call i32 @llvm.smin.i32(i32 %3348, i32 0)
  %3350 = sub i32 %3348, %3349
  %3351 = zext i32 %3350 to i64
  %3352 = add nuw nsw i64 %3351, 1
  %3353 = add nsw i64 %3345, -1
  %3354 = icmp ult i32 %3350, 31
  br i1 %3354, label %3390, label %3355

3355:                                             ; preds = %3343
  %3356 = and i64 %3352, 8589934560
  %3357 = sub i64 %3346, %3356
  br label %3358

3358:                                             ; preds = %3358, %3355
  %3359 = phi i64 [ 0, %3355 ], [ %3382, %3358 ]
  %3360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3378, %3358 ]
  %3361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3379, %3358 ]
  %3362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3380, %3358 ]
  %3363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3355 ], [ %3381, %3358 ]
  %3364 = sub i64 %3346, %3359
  %3365 = getelementptr inbounds i32, ptr %9, i64 %3364
  %3366 = getelementptr inbounds i32, ptr %3365, i64 -7
  %3367 = load <8 x i32>, ptr %3366, align 4, !tbaa !5
  %3368 = shufflevector <8 x i32> %3367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3369 = getelementptr inbounds i32, ptr %3365, i64 -15
  %3370 = load <8 x i32>, ptr %3369, align 4, !tbaa !5
  %3371 = shufflevector <8 x i32> %3370, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3372 = getelementptr inbounds i32, ptr %3365, i64 -23
  %3373 = load <8 x i32>, ptr %3372, align 4, !tbaa !5
  %3374 = shufflevector <8 x i32> %3373, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3375 = getelementptr inbounds i32, ptr %3365, i64 -31
  %3376 = load <8 x i32>, ptr %3375, align 4, !tbaa !5
  %3377 = shufflevector <8 x i32> %3376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3378 = mul <8 x i32> %3368, %3360
  %3379 = mul <8 x i32> %3371, %3361
  %3380 = mul <8 x i32> %3374, %3362
  %3381 = mul <8 x i32> %3377, %3363
  %3382 = add nuw i64 %3359, 32
  %3383 = icmp eq i64 %3382, %3356
  br i1 %3383, label %3384, label %3358, !llvm.loop !694

3384:                                             ; preds = %3358
  %3385 = mul <8 x i32> %3379, %3378
  %3386 = mul <8 x i32> %3380, %3385
  %3387 = mul <8 x i32> %3381, %3386
  %3388 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3387)
  %3389 = icmp eq i64 %3352, %3356
  br i1 %3389, label %3402, label %3390

3390:                                             ; preds = %3343, %3384
  %3391 = phi i64 [ %3346, %3343 ], [ %3357, %3384 ]
  %3392 = phi i32 [ 1, %3343 ], [ %3388, %3384 ]
  br label %3393

3393:                                             ; preds = %3390, %3393
  %3394 = phi i64 [ %3399, %3393 ], [ %3391, %3390 ]
  %3395 = phi i32 [ %3398, %3393 ], [ %3392, %3390 ]
  %3396 = getelementptr inbounds i32, ptr %9, i64 %3394
  %3397 = load i32, ptr %3396, align 4, !tbaa !5
  %3398 = mul nsw i32 %3397, %3395
  %3399 = add nsw i64 %3394, -1
  %3400 = trunc i64 %3394 to i32
  %3401 = icmp sgt i32 %3400, 0
  br i1 %3401, label %3393, label %3402, !llvm.loop !695

3402:                                             ; preds = %3393, %3384
  %3403 = phi i32 [ %3388, %3384 ], [ %3398, %3393 ]
  %3404 = and i64 %3353, 4294967295
  %3405 = getelementptr inbounds i32, ptr %6, i64 %3404
  %3406 = load i32, ptr %3405, align 4, !tbaa !5
  %3407 = mul nsw i32 %3406, %3403
  %3408 = add nsw i32 %3407, %3347
  %3409 = icmp sgt i64 %3345, 2
  %3410 = add nsw i64 %3346, -1
  %3411 = add i32 %3344, 1
  br i1 %3409, label %3343, label %3412, !llvm.loop !696

3412:                                             ; preds = %3402, %3339
  %3413 = phi i32 [ %3342, %3339 ], [ %3408, %3402 ]
  %3414 = sext i32 %3413 to i64
  %3415 = getelementptr inbounds i32, ptr %3011, i64 %3414
  %3416 = load i32, ptr %3415, align 4, !tbaa !5
  %3417 = sext i32 %3416 to i64
  %3418 = add nsw i64 %3340, %3417
  %3419 = add nuw nsw i32 %3341, 1
  br i1 %3333, label %3420, label %3467

3420:                                             ; preds = %3412
  %3421 = load i32, ptr %4, align 4, !tbaa !5
  %3422 = load i32, ptr %12, align 4, !tbaa !5
  %3423 = add nsw i32 %3422, -1
  %3424 = icmp slt i32 %3421, %3423
  br i1 %3424, label %3444, label %3425

3425:                                             ; preds = %3420
  %3426 = icmp eq i32 %3421, %3423
  br i1 %3426, label %3427, label %3460

3427:                                             ; preds = %3425
  store i32 0, ptr %4, align 4, !tbaa !5
  %3428 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3428, ptr %6, align 4, !tbaa !5
  br i1 %3338, label %3467, label %3429

3429:                                             ; preds = %3427, %3454
  %3430 = phi i64 [ %3458, %3454 ], [ 1, %3427 ]
  %3431 = getelementptr inbounds i32, ptr %4, i64 %3430
  %3432 = load i32, ptr %3431, align 4, !tbaa !5
  %3433 = getelementptr inbounds i32, ptr %12, i64 %3430
  %3434 = load i32, ptr %3433, align 4, !tbaa !5
  %3435 = add nsw i32 %3434, -1
  %3436 = icmp slt i32 %3432, %3435
  br i1 %3436, label %3437, label %3452

3437:                                             ; preds = %3429
  br i1 %3424, label %3444, label %3438

3438:                                             ; preds = %3437
  %3439 = getelementptr inbounds i32, ptr %7, i64 %3430
  %3440 = load i32, ptr %3439, align 4, !tbaa !5
  %3441 = getelementptr inbounds i32, ptr %6, i64 %3430
  %3442 = load i32, ptr %3441, align 4, !tbaa !5
  %3443 = add nsw i32 %3442, %3440
  store i32 %3443, ptr %3441, align 4, !tbaa !5
  br label %3462

3444:                                             ; preds = %3420, %3437
  %3445 = phi i32 [ %3432, %3437 ], [ %3421, %3420 ]
  %3446 = phi ptr [ %3431, %3437 ], [ %4, %3420 ]
  %3447 = phi i64 [ %3430, %3437 ], [ 0, %3420 ]
  %3448 = add nsw i32 %3445, 1
  store i32 %3448, ptr %3446, align 4, !tbaa !5
  %3449 = getelementptr inbounds i32, ptr %7, i64 %3447
  %3450 = load i32, ptr %3449, align 4, !tbaa !5
  %3451 = getelementptr inbounds i32, ptr %6, i64 %3447
  br label %3462

3452:                                             ; preds = %3429
  %3453 = icmp eq i32 %3432, %3435
  br i1 %3453, label %3454, label %3460

3454:                                             ; preds = %3452
  store i32 0, ptr %3431, align 4, !tbaa !5
  %3455 = getelementptr inbounds i32, ptr %8, i64 %3430
  %3456 = load i32, ptr %3455, align 4, !tbaa !5
  %3457 = getelementptr inbounds i32, ptr %6, i64 %3430
  store i32 %3456, ptr %3457, align 4, !tbaa !5
  %3458 = add nuw nsw i64 %3430, 1
  %3459 = icmp eq i64 %3458, %3336
  br i1 %3459, label %3467, label %3429, !llvm.loop !697

3460:                                             ; preds = %3425, %3452
  store i64 %3418, ptr %3013, align 8, !tbaa !120
  %3461 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3462:                                             ; preds = %3438, %3444
  %3463 = phi ptr [ %3451, %3444 ], [ %3431, %3438 ]
  %3464 = phi i32 [ %3450, %3444 ], [ 1, %3438 ]
  %3465 = load i32, ptr %3463, align 4, !tbaa !5
  %3466 = add nsw i32 %3465, %3464
  store i32 %3466, ptr %3463, align 4, !tbaa !5
  br label %3467

3467:                                             ; preds = %3454, %3462, %3427, %3412
  %3468 = icmp eq i32 %3419, %5
  br i1 %3468, label %5399, label %3339, !llvm.loop !698

3469:                                             ; preds = %3322, %3604
  %3470 = phi i64 [ 0, %3322 ], [ %3552, %3604 ]
  %3471 = phi i32 [ 0, %3322 ], [ %3553, %3604 ]
  %3472 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3323, label %3473, label %3542

3473:                                             ; preds = %3469, %3532
  %3474 = phi i32 [ %3541, %3532 ], [ 0, %3469 ]
  %3475 = phi i64 [ %3483, %3532 ], [ %3327, %3469 ]
  %3476 = phi i64 [ %3540, %3532 ], [ %3326, %3469 ]
  %3477 = phi i32 [ %3538, %3532 ], [ %3472, %3469 ]
  %3478 = sub i32 %3325, %3474
  %3479 = tail call i32 @llvm.smin.i32(i32 %3478, i32 0)
  %3480 = sub i32 %3478, %3479
  %3481 = zext i32 %3480 to i64
  %3482 = add nuw nsw i64 %3481, 1
  %3483 = add nsw i64 %3475, -1
  %3484 = icmp ult i32 %3480, 31
  br i1 %3484, label %3520, label %3485

3485:                                             ; preds = %3473
  %3486 = and i64 %3482, 8589934560
  %3487 = sub i64 %3476, %3486
  br label %3488

3488:                                             ; preds = %3488, %3485
  %3489 = phi i64 [ 0, %3485 ], [ %3512, %3488 ]
  %3490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3508, %3488 ]
  %3491 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3509, %3488 ]
  %3492 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3510, %3488 ]
  %3493 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3485 ], [ %3511, %3488 ]
  %3494 = sub i64 %3476, %3489
  %3495 = getelementptr inbounds i32, ptr %11, i64 %3494
  %3496 = getelementptr inbounds i32, ptr %3495, i64 -7
  %3497 = load <8 x i32>, ptr %3496, align 4, !tbaa !5
  %3498 = shufflevector <8 x i32> %3497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3499 = getelementptr inbounds i32, ptr %3495, i64 -15
  %3500 = load <8 x i32>, ptr %3499, align 4, !tbaa !5
  %3501 = shufflevector <8 x i32> %3500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3502 = getelementptr inbounds i32, ptr %3495, i64 -23
  %3503 = load <8 x i32>, ptr %3502, align 4, !tbaa !5
  %3504 = shufflevector <8 x i32> %3503, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3505 = getelementptr inbounds i32, ptr %3495, i64 -31
  %3506 = load <8 x i32>, ptr %3505, align 4, !tbaa !5
  %3507 = shufflevector <8 x i32> %3506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3508 = mul <8 x i32> %3498, %3490
  %3509 = mul <8 x i32> %3501, %3491
  %3510 = mul <8 x i32> %3504, %3492
  %3511 = mul <8 x i32> %3507, %3493
  %3512 = add nuw i64 %3489, 32
  %3513 = icmp eq i64 %3512, %3486
  br i1 %3513, label %3514, label %3488, !llvm.loop !699

3514:                                             ; preds = %3488
  %3515 = mul <8 x i32> %3509, %3508
  %3516 = mul <8 x i32> %3510, %3515
  %3517 = mul <8 x i32> %3511, %3516
  %3518 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3517)
  %3519 = icmp eq i64 %3482, %3486
  br i1 %3519, label %3532, label %3520

3520:                                             ; preds = %3473, %3514
  %3521 = phi i64 [ %3476, %3473 ], [ %3487, %3514 ]
  %3522 = phi i32 [ 1, %3473 ], [ %3518, %3514 ]
  br label %3523

3523:                                             ; preds = %3520, %3523
  %3524 = phi i64 [ %3529, %3523 ], [ %3521, %3520 ]
  %3525 = phi i32 [ %3528, %3523 ], [ %3522, %3520 ]
  %3526 = getelementptr inbounds i32, ptr %11, i64 %3524
  %3527 = load i32, ptr %3526, align 4, !tbaa !5
  %3528 = mul nsw i32 %3527, %3525
  %3529 = add nsw i64 %3524, -1
  %3530 = trunc i64 %3524 to i32
  %3531 = icmp sgt i32 %3530, 0
  br i1 %3531, label %3523, label %3532, !llvm.loop !700

3532:                                             ; preds = %3523, %3514
  %3533 = phi i32 [ %3518, %3514 ], [ %3528, %3523 ]
  %3534 = and i64 %3483, 4294967295
  %3535 = getelementptr inbounds i32, ptr %6, i64 %3534
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = mul nsw i32 %3536, %3533
  %3538 = add nsw i32 %3537, %3477
  %3539 = icmp sgt i64 %3475, 2
  %3540 = add nsw i64 %3476, -1
  %3541 = add i32 %3474, 1
  br i1 %3539, label %3473, label %3542, !llvm.loop !701

3542:                                             ; preds = %3532, %3469
  %3543 = phi i32 [ %3472, %3469 ], [ %3538, %3532 ]
  %3544 = icmp slt i32 %3543, %5
  br i1 %3544, label %3547, label %3545

3545:                                             ; preds = %3542
  %3546 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

3547:                                             ; preds = %3542
  %3548 = sext i32 %3543 to i64
  %3549 = getelementptr inbounds i32, ptr %3011, i64 %3548
  %3550 = load i32, ptr %3549, align 4, !tbaa !5
  %3551 = sext i32 %3550 to i64
  %3552 = add nsw i64 %3470, %3551
  store i64 %3552, ptr %3013, align 8, !tbaa !120
  %3553 = add nuw nsw i32 %3471, 1
  br i1 %3324, label %3554, label %3604

3554:                                             ; preds = %3547
  %3555 = load i32, ptr %4, align 4, !tbaa !5
  %3556 = load i32, ptr %12, align 4, !tbaa !5
  %3557 = add nsw i32 %3556, -1
  %3558 = icmp slt i32 %3555, %3557
  br i1 %3558, label %3581, label %3559

3559:                                             ; preds = %3554
  %3560 = icmp eq i32 %3555, %3557
  br i1 %3560, label %3561, label %3597

3561:                                             ; preds = %3559
  store i32 0, ptr %4, align 4, !tbaa !5
  %3562 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3562, ptr %6, align 4, !tbaa !5
  br i1 %3329, label %3604, label %3563

3563:                                             ; preds = %3561, %3591
  %3564 = phi i64 [ %3595, %3591 ], [ 1, %3561 ]
  %3565 = getelementptr inbounds i32, ptr %4, i64 %3564
  %3566 = load i32, ptr %3565, align 4, !tbaa !5
  %3567 = getelementptr inbounds i32, ptr %12, i64 %3564
  %3568 = load i32, ptr %3567, align 4, !tbaa !5
  %3569 = add nsw i32 %3568, -1
  %3570 = icmp slt i32 %3566, %3569
  br i1 %3570, label %3571, label %3589

3571:                                             ; preds = %3563
  br i1 %3558, label %3581, label %3572

3572:                                             ; preds = %3571
  %3573 = shl i64 %3564, 32
  %3574 = add i64 %3573, -4294967296
  %3575 = ashr exact i64 %3574, 32
  %3576 = getelementptr inbounds i32, ptr %7, i64 %3575
  %3577 = load i32, ptr %3576, align 4, !tbaa !5
  %3578 = getelementptr inbounds i32, ptr %6, i64 %3564
  %3579 = load i32, ptr %3578, align 4, !tbaa !5
  %3580 = add nsw i32 %3579, %3577
  store i32 %3580, ptr %3578, align 4, !tbaa !5
  br label %3599

3581:                                             ; preds = %3554, %3571
  %3582 = phi i32 [ %3566, %3571 ], [ %3555, %3554 ]
  %3583 = phi ptr [ %3565, %3571 ], [ %4, %3554 ]
  %3584 = phi i64 [ %3564, %3571 ], [ 0, %3554 ]
  %3585 = add nsw i32 %3582, 1
  store i32 %3585, ptr %3583, align 4, !tbaa !5
  %3586 = getelementptr inbounds i32, ptr %7, i64 %3584
  %3587 = load i32, ptr %3586, align 4, !tbaa !5
  %3588 = getelementptr inbounds i32, ptr %6, i64 %3584
  br label %3599

3589:                                             ; preds = %3563
  %3590 = icmp eq i32 %3566, %3569
  br i1 %3590, label %3591, label %3597

3591:                                             ; preds = %3589
  store i32 0, ptr %3565, align 4, !tbaa !5
  %3592 = getelementptr inbounds i32, ptr %8, i64 %3564
  %3593 = load i32, ptr %3592, align 4, !tbaa !5
  %3594 = getelementptr inbounds i32, ptr %6, i64 %3564
  store i32 %3593, ptr %3594, align 4, !tbaa !5
  %3595 = add nuw nsw i64 %3564, 1
  %3596 = icmp eq i64 %3595, %3327
  br i1 %3596, label %3604, label %3563, !llvm.loop !702

3597:                                             ; preds = %3559, %3589
  %3598 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3599:                                             ; preds = %3572, %3581
  %3600 = phi ptr [ %3588, %3581 ], [ %3565, %3572 ]
  %3601 = phi i32 [ %3587, %3581 ], [ 1, %3572 ]
  %3602 = load i32, ptr %3600, align 4, !tbaa !5
  %3603 = add nsw i32 %3602, %3601
  store i32 %3603, ptr %3600, align 4, !tbaa !5
  br label %3604

3604:                                             ; preds = %3591, %3599, %3561, %3547
  %3605 = icmp eq i32 %3553, %5
  br i1 %3605, label %5404, label %3469, !llvm.loop !703

3606:                                             ; preds = %3018
  %3607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

3608:                                             ; preds = %18
  %3609 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3610 = load ptr, ptr %3609, align 8, !tbaa !9
  %3611 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3612 = load ptr, ptr %3611, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3612, align 8, !tbaa !18
  %3613 = icmp eq i32 %13, 0
  br i1 %3613, label %3614, label %3617

3614:                                             ; preds = %3608
  %3615 = load i32, ptr %3610, align 4, !tbaa !5
  %3616 = sitofp i32 %3615 to double
  store double %3616, ptr %3612, align 8, !tbaa !18
  br label %5404

3617:                                             ; preds = %3608
  switch i32 %1, label %4201 [
    i32 1, label %3618
    i32 0, label %3911
  ]

3618:                                             ; preds = %3617
  %3619 = getelementptr inbounds i32, ptr %3, i64 %19
  %3620 = load i32, ptr %3619, align 4, !tbaa !5
  %3621 = icmp eq i32 %3620, 0
  %3622 = icmp sgt i32 %5, 0
  br i1 %3621, label %3632, label %3623

3623:                                             ; preds = %3618
  br i1 %3622, label %3624, label %5404

3624:                                             ; preds = %3623
  %3625 = icmp sgt i32 %13, 1
  %3626 = icmp sgt i32 %13, 0
  %3627 = add i32 %13, -2
  %3628 = zext i32 %3627 to i64
  %3629 = zext i32 %13 to i64
  %3630 = add nuw i32 %5, 1
  %3631 = icmp eq i32 %13, 1
  br label %3774

3632:                                             ; preds = %3618
  br i1 %3622, label %3633, label %5404

3633:                                             ; preds = %3632
  %3634 = icmp sgt i32 %13, 1
  %3635 = icmp sgt i32 %13, 0
  %3636 = add i32 %13, -2
  %3637 = zext i32 %3636 to i64
  %3638 = zext i32 %13 to i64
  %3639 = add nuw i32 %5, 1
  %3640 = icmp eq i32 %13, 1
  br label %3641

3641:                                             ; preds = %3633, %3772
  %3642 = phi double [ 0.000000e+00, %3633 ], [ %3723, %3772 ]
  %3643 = phi i32 [ 0, %3633 ], [ %3724, %3772 ]
  %3644 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3634, label %3645, label %3714

3645:                                             ; preds = %3641, %3704
  %3646 = phi i32 [ %3713, %3704 ], [ 0, %3641 ]
  %3647 = phi i64 [ %3655, %3704 ], [ %3638, %3641 ]
  %3648 = phi i64 [ %3712, %3704 ], [ %3637, %3641 ]
  %3649 = phi i32 [ %3710, %3704 ], [ %3644, %3641 ]
  %3650 = sub i32 %3636, %3646
  %3651 = tail call i32 @llvm.smin.i32(i32 %3650, i32 0)
  %3652 = sub i32 %3650, %3651
  %3653 = zext i32 %3652 to i64
  %3654 = add nuw nsw i64 %3653, 1
  %3655 = add nsw i64 %3647, -1
  %3656 = icmp ult i32 %3652, 31
  br i1 %3656, label %3692, label %3657

3657:                                             ; preds = %3645
  %3658 = and i64 %3654, 8589934560
  %3659 = sub i64 %3648, %3658
  br label %3660

3660:                                             ; preds = %3660, %3657
  %3661 = phi i64 [ 0, %3657 ], [ %3684, %3660 ]
  %3662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3680, %3660 ]
  %3663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3681, %3660 ]
  %3664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3682, %3660 ]
  %3665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3657 ], [ %3683, %3660 ]
  %3666 = sub i64 %3648, %3661
  %3667 = getelementptr inbounds i32, ptr %9, i64 %3666
  %3668 = getelementptr inbounds i32, ptr %3667, i64 -7
  %3669 = load <8 x i32>, ptr %3668, align 4, !tbaa !5
  %3670 = shufflevector <8 x i32> %3669, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3671 = getelementptr inbounds i32, ptr %3667, i64 -15
  %3672 = load <8 x i32>, ptr %3671, align 4, !tbaa !5
  %3673 = shufflevector <8 x i32> %3672, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3674 = getelementptr inbounds i32, ptr %3667, i64 -23
  %3675 = load <8 x i32>, ptr %3674, align 4, !tbaa !5
  %3676 = shufflevector <8 x i32> %3675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3677 = getelementptr inbounds i32, ptr %3667, i64 -31
  %3678 = load <8 x i32>, ptr %3677, align 4, !tbaa !5
  %3679 = shufflevector <8 x i32> %3678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3680 = mul <8 x i32> %3670, %3662
  %3681 = mul <8 x i32> %3673, %3663
  %3682 = mul <8 x i32> %3676, %3664
  %3683 = mul <8 x i32> %3679, %3665
  %3684 = add nuw i64 %3661, 32
  %3685 = icmp eq i64 %3684, %3658
  br i1 %3685, label %3686, label %3660, !llvm.loop !704

3686:                                             ; preds = %3660
  %3687 = mul <8 x i32> %3681, %3680
  %3688 = mul <8 x i32> %3682, %3687
  %3689 = mul <8 x i32> %3683, %3688
  %3690 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3689)
  %3691 = icmp eq i64 %3654, %3658
  br i1 %3691, label %3704, label %3692

3692:                                             ; preds = %3645, %3686
  %3693 = phi i64 [ %3648, %3645 ], [ %3659, %3686 ]
  %3694 = phi i32 [ 1, %3645 ], [ %3690, %3686 ]
  br label %3695

3695:                                             ; preds = %3692, %3695
  %3696 = phi i64 [ %3701, %3695 ], [ %3693, %3692 ]
  %3697 = phi i32 [ %3700, %3695 ], [ %3694, %3692 ]
  %3698 = getelementptr inbounds i32, ptr %9, i64 %3696
  %3699 = load i32, ptr %3698, align 4, !tbaa !5
  %3700 = mul nsw i32 %3699, %3697
  %3701 = add nsw i64 %3696, -1
  %3702 = trunc i64 %3696 to i32
  %3703 = icmp sgt i32 %3702, 0
  br i1 %3703, label %3695, label %3704, !llvm.loop !705

3704:                                             ; preds = %3695, %3686
  %3705 = phi i32 [ %3690, %3686 ], [ %3700, %3695 ]
  %3706 = and i64 %3655, 4294967295
  %3707 = getelementptr inbounds i32, ptr %6, i64 %3706
  %3708 = load i32, ptr %3707, align 4, !tbaa !5
  %3709 = mul nsw i32 %3708, %3705
  %3710 = add nsw i32 %3709, %3649
  %3711 = icmp sgt i64 %3647, 2
  %3712 = add nsw i64 %3648, -1
  %3713 = add i32 %3646, 1
  br i1 %3711, label %3645, label %3714, !llvm.loop !706

3714:                                             ; preds = %3704, %3641
  %3715 = phi i32 [ %3644, %3641 ], [ %3710, %3704 ]
  %3716 = sext i32 %3715 to i64
  %3717 = getelementptr inbounds double, ptr %2, i64 %3716
  %3718 = load double, ptr %3717, align 8, !tbaa !18
  %3719 = getelementptr inbounds i32, ptr %3610, i64 %3716
  %3720 = load i32, ptr %3719, align 4, !tbaa !5
  %3721 = sitofp i32 %3720 to double
  %3722 = fmul fast double %3718, %3721
  %3723 = fadd fast double %3722, %3642
  store double %3723, ptr %3612, align 8, !tbaa !18
  %3724 = add nuw nsw i32 %3643, 1
  br i1 %3635, label %3725, label %3772

3725:                                             ; preds = %3714
  %3726 = load i32, ptr %4, align 4, !tbaa !5
  %3727 = load i32, ptr %12, align 4, !tbaa !5
  %3728 = add nsw i32 %3727, -1
  %3729 = icmp slt i32 %3726, %3728
  br i1 %3729, label %3749, label %3730

3730:                                             ; preds = %3725
  %3731 = icmp eq i32 %3726, %3728
  br i1 %3731, label %3732, label %3765

3732:                                             ; preds = %3730
  store i32 0, ptr %4, align 4, !tbaa !5
  %3733 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3733, ptr %6, align 4, !tbaa !5
  br i1 %3640, label %3772, label %3734

3734:                                             ; preds = %3732, %3759
  %3735 = phi i64 [ %3763, %3759 ], [ 1, %3732 ]
  %3736 = getelementptr inbounds i32, ptr %4, i64 %3735
  %3737 = load i32, ptr %3736, align 4, !tbaa !5
  %3738 = getelementptr inbounds i32, ptr %12, i64 %3735
  %3739 = load i32, ptr %3738, align 4, !tbaa !5
  %3740 = add nsw i32 %3739, -1
  %3741 = icmp slt i32 %3737, %3740
  br i1 %3741, label %3742, label %3757

3742:                                             ; preds = %3734
  br i1 %3729, label %3749, label %3743

3743:                                             ; preds = %3742
  %3744 = getelementptr inbounds i32, ptr %7, i64 %3735
  %3745 = load i32, ptr %3744, align 4, !tbaa !5
  %3746 = getelementptr inbounds i32, ptr %6, i64 %3735
  %3747 = load i32, ptr %3746, align 4, !tbaa !5
  %3748 = add nsw i32 %3747, %3745
  store i32 %3748, ptr %3746, align 4, !tbaa !5
  br label %3767

3749:                                             ; preds = %3725, %3742
  %3750 = phi i32 [ %3737, %3742 ], [ %3726, %3725 ]
  %3751 = phi ptr [ %3736, %3742 ], [ %4, %3725 ]
  %3752 = phi i64 [ %3735, %3742 ], [ 0, %3725 ]
  %3753 = add nsw i32 %3750, 1
  store i32 %3753, ptr %3751, align 4, !tbaa !5
  %3754 = getelementptr inbounds i32, ptr %7, i64 %3752
  %3755 = load i32, ptr %3754, align 4, !tbaa !5
  %3756 = getelementptr inbounds i32, ptr %6, i64 %3752
  br label %3767

3757:                                             ; preds = %3734
  %3758 = icmp eq i32 %3737, %3740
  br i1 %3758, label %3759, label %3765

3759:                                             ; preds = %3757
  store i32 0, ptr %3736, align 4, !tbaa !5
  %3760 = getelementptr inbounds i32, ptr %8, i64 %3735
  %3761 = load i32, ptr %3760, align 4, !tbaa !5
  %3762 = getelementptr inbounds i32, ptr %6, i64 %3735
  store i32 %3761, ptr %3762, align 4, !tbaa !5
  %3763 = add nuw nsw i64 %3735, 1
  %3764 = icmp eq i64 %3763, %3638
  br i1 %3764, label %3772, label %3734, !llvm.loop !707

3765:                                             ; preds = %3730, %3757
  %3766 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3767:                                             ; preds = %3743, %3749
  %3768 = phi ptr [ %3756, %3749 ], [ %3736, %3743 ]
  %3769 = phi i32 [ %3755, %3749 ], [ 1, %3743 ]
  %3770 = load i32, ptr %3768, align 4, !tbaa !5
  %3771 = add nsw i32 %3770, %3769
  store i32 %3771, ptr %3768, align 4, !tbaa !5
  br label %3772

3772:                                             ; preds = %3759, %3767, %3732, %3714
  %3773 = icmp eq i32 %3724, %5
  br i1 %3773, label %5404, label %3641, !llvm.loop !708

3774:                                             ; preds = %3624, %3909
  %3775 = phi double [ 0.000000e+00, %3624 ], [ %3857, %3909 ]
  %3776 = phi i32 [ 0, %3624 ], [ %3858, %3909 ]
  %3777 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3625, label %3778, label %3847

3778:                                             ; preds = %3774, %3837
  %3779 = phi i32 [ %3846, %3837 ], [ 0, %3774 ]
  %3780 = phi i64 [ %3788, %3837 ], [ %3629, %3774 ]
  %3781 = phi i64 [ %3845, %3837 ], [ %3628, %3774 ]
  %3782 = phi i32 [ %3843, %3837 ], [ %3777, %3774 ]
  %3783 = sub i32 %3627, %3779
  %3784 = tail call i32 @llvm.smin.i32(i32 %3783, i32 0)
  %3785 = sub i32 %3783, %3784
  %3786 = zext i32 %3785 to i64
  %3787 = add nuw nsw i64 %3786, 1
  %3788 = add nsw i64 %3780, -1
  %3789 = icmp ult i32 %3785, 31
  br i1 %3789, label %3825, label %3790

3790:                                             ; preds = %3778
  %3791 = and i64 %3787, 8589934560
  %3792 = sub i64 %3781, %3791
  br label %3793

3793:                                             ; preds = %3793, %3790
  %3794 = phi i64 [ 0, %3790 ], [ %3817, %3793 ]
  %3795 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3813, %3793 ]
  %3796 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3814, %3793 ]
  %3797 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3815, %3793 ]
  %3798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3790 ], [ %3816, %3793 ]
  %3799 = sub i64 %3781, %3794
  %3800 = getelementptr inbounds i32, ptr %11, i64 %3799
  %3801 = getelementptr inbounds i32, ptr %3800, i64 -7
  %3802 = load <8 x i32>, ptr %3801, align 4, !tbaa !5
  %3803 = shufflevector <8 x i32> %3802, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3804 = getelementptr inbounds i32, ptr %3800, i64 -15
  %3805 = load <8 x i32>, ptr %3804, align 4, !tbaa !5
  %3806 = shufflevector <8 x i32> %3805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3807 = getelementptr inbounds i32, ptr %3800, i64 -23
  %3808 = load <8 x i32>, ptr %3807, align 4, !tbaa !5
  %3809 = shufflevector <8 x i32> %3808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3810 = getelementptr inbounds i32, ptr %3800, i64 -31
  %3811 = load <8 x i32>, ptr %3810, align 4, !tbaa !5
  %3812 = shufflevector <8 x i32> %3811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3813 = mul <8 x i32> %3803, %3795
  %3814 = mul <8 x i32> %3806, %3796
  %3815 = mul <8 x i32> %3809, %3797
  %3816 = mul <8 x i32> %3812, %3798
  %3817 = add nuw i64 %3794, 32
  %3818 = icmp eq i64 %3817, %3791
  br i1 %3818, label %3819, label %3793, !llvm.loop !709

3819:                                             ; preds = %3793
  %3820 = mul <8 x i32> %3814, %3813
  %3821 = mul <8 x i32> %3815, %3820
  %3822 = mul <8 x i32> %3816, %3821
  %3823 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3822)
  %3824 = icmp eq i64 %3787, %3791
  br i1 %3824, label %3837, label %3825

3825:                                             ; preds = %3778, %3819
  %3826 = phi i64 [ %3781, %3778 ], [ %3792, %3819 ]
  %3827 = phi i32 [ 1, %3778 ], [ %3823, %3819 ]
  br label %3828

3828:                                             ; preds = %3825, %3828
  %3829 = phi i64 [ %3834, %3828 ], [ %3826, %3825 ]
  %3830 = phi i32 [ %3833, %3828 ], [ %3827, %3825 ]
  %3831 = getelementptr inbounds i32, ptr %11, i64 %3829
  %3832 = load i32, ptr %3831, align 4, !tbaa !5
  %3833 = mul nsw i32 %3832, %3830
  %3834 = add nsw i64 %3829, -1
  %3835 = trunc i64 %3829 to i32
  %3836 = icmp sgt i32 %3835, 0
  br i1 %3836, label %3828, label %3837, !llvm.loop !710

3837:                                             ; preds = %3828, %3819
  %3838 = phi i32 [ %3823, %3819 ], [ %3833, %3828 ]
  %3839 = and i64 %3788, 4294967295
  %3840 = getelementptr inbounds i32, ptr %6, i64 %3839
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = mul nsw i32 %3841, %3838
  %3843 = add nsw i32 %3842, %3782
  %3844 = icmp sgt i64 %3780, 2
  %3845 = add nsw i64 %3781, -1
  %3846 = add i32 %3779, 1
  br i1 %3844, label %3778, label %3847, !llvm.loop !711

3847:                                             ; preds = %3837, %3774
  %3848 = phi i32 [ %3777, %3774 ], [ %3843, %3837 ]
  %3849 = icmp slt i32 %3848, %5
  br i1 %3849, label %3852, label %3850

3850:                                             ; preds = %3847
  %3851 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

3852:                                             ; preds = %3847
  %3853 = sext i32 %3848 to i64
  %3854 = getelementptr inbounds i32, ptr %3610, i64 %3853
  %3855 = load i32, ptr %3854, align 4, !tbaa !5
  %3856 = sitofp i32 %3855 to double
  %3857 = fadd fast double %3775, %3856
  store double %3857, ptr %3612, align 8, !tbaa !18
  %3858 = add nuw nsw i32 %3776, 1
  br i1 %3626, label %3859, label %3909

3859:                                             ; preds = %3852
  %3860 = load i32, ptr %4, align 4, !tbaa !5
  %3861 = load i32, ptr %12, align 4, !tbaa !5
  %3862 = add nsw i32 %3861, -1
  %3863 = icmp slt i32 %3860, %3862
  br i1 %3863, label %3886, label %3864

3864:                                             ; preds = %3859
  %3865 = icmp eq i32 %3860, %3862
  br i1 %3865, label %3866, label %3902

3866:                                             ; preds = %3864
  store i32 0, ptr %4, align 4, !tbaa !5
  %3867 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3867, ptr %6, align 4, !tbaa !5
  br i1 %3631, label %3909, label %3868

3868:                                             ; preds = %3866, %3896
  %3869 = phi i64 [ %3900, %3896 ], [ 1, %3866 ]
  %3870 = getelementptr inbounds i32, ptr %4, i64 %3869
  %3871 = load i32, ptr %3870, align 4, !tbaa !5
  %3872 = getelementptr inbounds i32, ptr %12, i64 %3869
  %3873 = load i32, ptr %3872, align 4, !tbaa !5
  %3874 = add nsw i32 %3873, -1
  %3875 = icmp slt i32 %3871, %3874
  br i1 %3875, label %3876, label %3894

3876:                                             ; preds = %3868
  br i1 %3863, label %3886, label %3877

3877:                                             ; preds = %3876
  %3878 = shl i64 %3869, 32
  %3879 = add i64 %3878, -4294967296
  %3880 = ashr exact i64 %3879, 32
  %3881 = getelementptr inbounds i32, ptr %7, i64 %3880
  %3882 = load i32, ptr %3881, align 4, !tbaa !5
  %3883 = getelementptr inbounds i32, ptr %6, i64 %3869
  %3884 = load i32, ptr %3883, align 4, !tbaa !5
  %3885 = add nsw i32 %3884, %3882
  store i32 %3885, ptr %3883, align 4, !tbaa !5
  br label %3904

3886:                                             ; preds = %3859, %3876
  %3887 = phi i32 [ %3871, %3876 ], [ %3860, %3859 ]
  %3888 = phi ptr [ %3870, %3876 ], [ %4, %3859 ]
  %3889 = phi i64 [ %3869, %3876 ], [ 0, %3859 ]
  %3890 = add nsw i32 %3887, 1
  store i32 %3890, ptr %3888, align 4, !tbaa !5
  %3891 = getelementptr inbounds i32, ptr %7, i64 %3889
  %3892 = load i32, ptr %3891, align 4, !tbaa !5
  %3893 = getelementptr inbounds i32, ptr %6, i64 %3889
  br label %3904

3894:                                             ; preds = %3868
  %3895 = icmp eq i32 %3871, %3874
  br i1 %3895, label %3896, label %3902

3896:                                             ; preds = %3894
  store i32 0, ptr %3870, align 4, !tbaa !5
  %3897 = getelementptr inbounds i32, ptr %8, i64 %3869
  %3898 = load i32, ptr %3897, align 4, !tbaa !5
  %3899 = getelementptr inbounds i32, ptr %6, i64 %3869
  store i32 %3898, ptr %3899, align 4, !tbaa !5
  %3900 = add nuw nsw i64 %3869, 1
  %3901 = icmp eq i64 %3900, %3629
  br i1 %3901, label %3909, label %3868, !llvm.loop !712

3902:                                             ; preds = %3864, %3894
  %3903 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

3904:                                             ; preds = %3877, %3886
  %3905 = phi ptr [ %3893, %3886 ], [ %3870, %3877 ]
  %3906 = phi i32 [ %3892, %3886 ], [ 1, %3877 ]
  %3907 = load i32, ptr %3905, align 4, !tbaa !5
  %3908 = add nsw i32 %3907, %3906
  store i32 %3908, ptr %3905, align 4, !tbaa !5
  br label %3909

3909:                                             ; preds = %3896, %3904, %3866, %3852
  %3910 = icmp eq i32 %3858, %5
  br i1 %3910, label %5404, label %3774, !llvm.loop !713

3911:                                             ; preds = %3617
  %3912 = getelementptr inbounds i32, ptr %3, i64 %19
  %3913 = load i32, ptr %3912, align 4, !tbaa !5
  %3914 = icmp eq i32 %3913, 0
  %3915 = icmp sgt i32 %5, 0
  br i1 %3914, label %3925, label %3916

3916:                                             ; preds = %3911
  br i1 %3915, label %3917, label %5404

3917:                                             ; preds = %3916
  %3918 = icmp sgt i32 %13, 1
  %3919 = icmp sgt i32 %13, 0
  %3920 = add i32 %13, -2
  %3921 = zext i32 %3920 to i64
  %3922 = zext i32 %13 to i64
  %3923 = add nuw i32 %5, 1
  %3924 = icmp eq i32 %13, 1
  br label %4064

3925:                                             ; preds = %3911
  br i1 %3915, label %3926, label %5404

3926:                                             ; preds = %3925
  %3927 = icmp sgt i32 %13, 1
  %3928 = icmp sgt i32 %13, 0
  %3929 = add i32 %13, -2
  %3930 = zext i32 %3929 to i64
  %3931 = zext i32 %13 to i64
  %3932 = add nuw i32 %5, 1
  %3933 = icmp eq i32 %13, 1
  br label %3934

3934:                                             ; preds = %3926, %4062
  %3935 = phi double [ 0.000000e+00, %3926 ], [ %4013, %4062 ]
  %3936 = phi i32 [ 0, %3926 ], [ %4014, %4062 ]
  %3937 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3927, label %3938, label %4007

3938:                                             ; preds = %3934, %3997
  %3939 = phi i32 [ %4006, %3997 ], [ 0, %3934 ]
  %3940 = phi i64 [ %3948, %3997 ], [ %3931, %3934 ]
  %3941 = phi i64 [ %4005, %3997 ], [ %3930, %3934 ]
  %3942 = phi i32 [ %4003, %3997 ], [ %3937, %3934 ]
  %3943 = sub i32 %3929, %3939
  %3944 = tail call i32 @llvm.smin.i32(i32 %3943, i32 0)
  %3945 = sub i32 %3943, %3944
  %3946 = zext i32 %3945 to i64
  %3947 = add nuw nsw i64 %3946, 1
  %3948 = add nsw i64 %3940, -1
  %3949 = icmp ult i32 %3945, 31
  br i1 %3949, label %3985, label %3950

3950:                                             ; preds = %3938
  %3951 = and i64 %3947, 8589934560
  %3952 = sub i64 %3941, %3951
  br label %3953

3953:                                             ; preds = %3953, %3950
  %3954 = phi i64 [ 0, %3950 ], [ %3977, %3953 ]
  %3955 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3973, %3953 ]
  %3956 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3974, %3953 ]
  %3957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3975, %3953 ]
  %3958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3950 ], [ %3976, %3953 ]
  %3959 = sub i64 %3941, %3954
  %3960 = getelementptr inbounds i32, ptr %9, i64 %3959
  %3961 = getelementptr inbounds i32, ptr %3960, i64 -7
  %3962 = load <8 x i32>, ptr %3961, align 4, !tbaa !5
  %3963 = shufflevector <8 x i32> %3962, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3964 = getelementptr inbounds i32, ptr %3960, i64 -15
  %3965 = load <8 x i32>, ptr %3964, align 4, !tbaa !5
  %3966 = shufflevector <8 x i32> %3965, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3967 = getelementptr inbounds i32, ptr %3960, i64 -23
  %3968 = load <8 x i32>, ptr %3967, align 4, !tbaa !5
  %3969 = shufflevector <8 x i32> %3968, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3970 = getelementptr inbounds i32, ptr %3960, i64 -31
  %3971 = load <8 x i32>, ptr %3970, align 4, !tbaa !5
  %3972 = shufflevector <8 x i32> %3971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3973 = mul <8 x i32> %3963, %3955
  %3974 = mul <8 x i32> %3966, %3956
  %3975 = mul <8 x i32> %3969, %3957
  %3976 = mul <8 x i32> %3972, %3958
  %3977 = add nuw i64 %3954, 32
  %3978 = icmp eq i64 %3977, %3951
  br i1 %3978, label %3979, label %3953, !llvm.loop !714

3979:                                             ; preds = %3953
  %3980 = mul <8 x i32> %3974, %3973
  %3981 = mul <8 x i32> %3975, %3980
  %3982 = mul <8 x i32> %3976, %3981
  %3983 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3982)
  %3984 = icmp eq i64 %3947, %3951
  br i1 %3984, label %3997, label %3985

3985:                                             ; preds = %3938, %3979
  %3986 = phi i64 [ %3941, %3938 ], [ %3952, %3979 ]
  %3987 = phi i32 [ 1, %3938 ], [ %3983, %3979 ]
  br label %3988

3988:                                             ; preds = %3985, %3988
  %3989 = phi i64 [ %3994, %3988 ], [ %3986, %3985 ]
  %3990 = phi i32 [ %3993, %3988 ], [ %3987, %3985 ]
  %3991 = getelementptr inbounds i32, ptr %9, i64 %3989
  %3992 = load i32, ptr %3991, align 4, !tbaa !5
  %3993 = mul nsw i32 %3992, %3990
  %3994 = add nsw i64 %3989, -1
  %3995 = trunc i64 %3989 to i32
  %3996 = icmp sgt i32 %3995, 0
  br i1 %3996, label %3988, label %3997, !llvm.loop !715

3997:                                             ; preds = %3988, %3979
  %3998 = phi i32 [ %3983, %3979 ], [ %3993, %3988 ]
  %3999 = and i64 %3948, 4294967295
  %4000 = getelementptr inbounds i32, ptr %6, i64 %3999
  %4001 = load i32, ptr %4000, align 4, !tbaa !5
  %4002 = mul nsw i32 %4001, %3998
  %4003 = add nsw i32 %4002, %3942
  %4004 = icmp sgt i64 %3940, 2
  %4005 = add nsw i64 %3941, -1
  %4006 = add i32 %3939, 1
  br i1 %4004, label %3938, label %4007, !llvm.loop !716

4007:                                             ; preds = %3997, %3934
  %4008 = phi i32 [ %3937, %3934 ], [ %4003, %3997 ]
  %4009 = sext i32 %4008 to i64
  %4010 = getelementptr inbounds i32, ptr %3610, i64 %4009
  %4011 = load i32, ptr %4010, align 4, !tbaa !5
  %4012 = sitofp i32 %4011 to double
  %4013 = fadd fast double %3935, %4012
  %4014 = add nuw nsw i32 %3936, 1
  br i1 %3928, label %4015, label %4062

4015:                                             ; preds = %4007
  %4016 = load i32, ptr %4, align 4, !tbaa !5
  %4017 = load i32, ptr %12, align 4, !tbaa !5
  %4018 = add nsw i32 %4017, -1
  %4019 = icmp slt i32 %4016, %4018
  br i1 %4019, label %4039, label %4020

4020:                                             ; preds = %4015
  %4021 = icmp eq i32 %4016, %4018
  br i1 %4021, label %4022, label %4055

4022:                                             ; preds = %4020
  store i32 0, ptr %4, align 4, !tbaa !5
  %4023 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4023, ptr %6, align 4, !tbaa !5
  br i1 %3933, label %4062, label %4024

4024:                                             ; preds = %4022, %4049
  %4025 = phi i64 [ %4053, %4049 ], [ 1, %4022 ]
  %4026 = getelementptr inbounds i32, ptr %4, i64 %4025
  %4027 = load i32, ptr %4026, align 4, !tbaa !5
  %4028 = getelementptr inbounds i32, ptr %12, i64 %4025
  %4029 = load i32, ptr %4028, align 4, !tbaa !5
  %4030 = add nsw i32 %4029, -1
  %4031 = icmp slt i32 %4027, %4030
  br i1 %4031, label %4032, label %4047

4032:                                             ; preds = %4024
  br i1 %4019, label %4039, label %4033

4033:                                             ; preds = %4032
  %4034 = getelementptr inbounds i32, ptr %7, i64 %4025
  %4035 = load i32, ptr %4034, align 4, !tbaa !5
  %4036 = getelementptr inbounds i32, ptr %6, i64 %4025
  %4037 = load i32, ptr %4036, align 4, !tbaa !5
  %4038 = add nsw i32 %4037, %4035
  store i32 %4038, ptr %4036, align 4, !tbaa !5
  br label %4057

4039:                                             ; preds = %4015, %4032
  %4040 = phi i32 [ %4027, %4032 ], [ %4016, %4015 ]
  %4041 = phi ptr [ %4026, %4032 ], [ %4, %4015 ]
  %4042 = phi i64 [ %4025, %4032 ], [ 0, %4015 ]
  %4043 = add nsw i32 %4040, 1
  store i32 %4043, ptr %4041, align 4, !tbaa !5
  %4044 = getelementptr inbounds i32, ptr %7, i64 %4042
  %4045 = load i32, ptr %4044, align 4, !tbaa !5
  %4046 = getelementptr inbounds i32, ptr %6, i64 %4042
  br label %4057

4047:                                             ; preds = %4024
  %4048 = icmp eq i32 %4027, %4030
  br i1 %4048, label %4049, label %4055

4049:                                             ; preds = %4047
  store i32 0, ptr %4026, align 4, !tbaa !5
  %4050 = getelementptr inbounds i32, ptr %8, i64 %4025
  %4051 = load i32, ptr %4050, align 4, !tbaa !5
  %4052 = getelementptr inbounds i32, ptr %6, i64 %4025
  store i32 %4051, ptr %4052, align 4, !tbaa !5
  %4053 = add nuw nsw i64 %4025, 1
  %4054 = icmp eq i64 %4053, %3931
  br i1 %4054, label %4062, label %4024, !llvm.loop !717

4055:                                             ; preds = %4020, %4047
  store double %4013, ptr %3612, align 8, !tbaa !18
  %4056 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4057:                                             ; preds = %4033, %4039
  %4058 = phi ptr [ %4046, %4039 ], [ %4026, %4033 ]
  %4059 = phi i32 [ %4045, %4039 ], [ 1, %4033 ]
  %4060 = load i32, ptr %4058, align 4, !tbaa !5
  %4061 = add nsw i32 %4060, %4059
  store i32 %4061, ptr %4058, align 4, !tbaa !5
  br label %4062

4062:                                             ; preds = %4049, %4057, %4022, %4007
  %4063 = icmp eq i32 %4014, %5
  br i1 %4063, label %5400, label %3934, !llvm.loop !718

4064:                                             ; preds = %3917, %4199
  %4065 = phi double [ 0.000000e+00, %3917 ], [ %4147, %4199 ]
  %4066 = phi i32 [ 0, %3917 ], [ %4148, %4199 ]
  %4067 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3918, label %4068, label %4137

4068:                                             ; preds = %4064, %4127
  %4069 = phi i32 [ %4136, %4127 ], [ 0, %4064 ]
  %4070 = phi i64 [ %4078, %4127 ], [ %3922, %4064 ]
  %4071 = phi i64 [ %4135, %4127 ], [ %3921, %4064 ]
  %4072 = phi i32 [ %4133, %4127 ], [ %4067, %4064 ]
  %4073 = sub i32 %3920, %4069
  %4074 = tail call i32 @llvm.smin.i32(i32 %4073, i32 0)
  %4075 = sub i32 %4073, %4074
  %4076 = zext i32 %4075 to i64
  %4077 = add nuw nsw i64 %4076, 1
  %4078 = add nsw i64 %4070, -1
  %4079 = icmp ult i32 %4075, 31
  br i1 %4079, label %4115, label %4080

4080:                                             ; preds = %4068
  %4081 = and i64 %4077, 8589934560
  %4082 = sub i64 %4071, %4081
  br label %4083

4083:                                             ; preds = %4083, %4080
  %4084 = phi i64 [ 0, %4080 ], [ %4107, %4083 ]
  %4085 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4103, %4083 ]
  %4086 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4104, %4083 ]
  %4087 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4105, %4083 ]
  %4088 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4080 ], [ %4106, %4083 ]
  %4089 = sub i64 %4071, %4084
  %4090 = getelementptr inbounds i32, ptr %11, i64 %4089
  %4091 = getelementptr inbounds i32, ptr %4090, i64 -7
  %4092 = load <8 x i32>, ptr %4091, align 4, !tbaa !5
  %4093 = shufflevector <8 x i32> %4092, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4094 = getelementptr inbounds i32, ptr %4090, i64 -15
  %4095 = load <8 x i32>, ptr %4094, align 4, !tbaa !5
  %4096 = shufflevector <8 x i32> %4095, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4097 = getelementptr inbounds i32, ptr %4090, i64 -23
  %4098 = load <8 x i32>, ptr %4097, align 4, !tbaa !5
  %4099 = shufflevector <8 x i32> %4098, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4100 = getelementptr inbounds i32, ptr %4090, i64 -31
  %4101 = load <8 x i32>, ptr %4100, align 4, !tbaa !5
  %4102 = shufflevector <8 x i32> %4101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4103 = mul <8 x i32> %4093, %4085
  %4104 = mul <8 x i32> %4096, %4086
  %4105 = mul <8 x i32> %4099, %4087
  %4106 = mul <8 x i32> %4102, %4088
  %4107 = add nuw i64 %4084, 32
  %4108 = icmp eq i64 %4107, %4081
  br i1 %4108, label %4109, label %4083, !llvm.loop !719

4109:                                             ; preds = %4083
  %4110 = mul <8 x i32> %4104, %4103
  %4111 = mul <8 x i32> %4105, %4110
  %4112 = mul <8 x i32> %4106, %4111
  %4113 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4112)
  %4114 = icmp eq i64 %4077, %4081
  br i1 %4114, label %4127, label %4115

4115:                                             ; preds = %4068, %4109
  %4116 = phi i64 [ %4071, %4068 ], [ %4082, %4109 ]
  %4117 = phi i32 [ 1, %4068 ], [ %4113, %4109 ]
  br label %4118

4118:                                             ; preds = %4115, %4118
  %4119 = phi i64 [ %4124, %4118 ], [ %4116, %4115 ]
  %4120 = phi i32 [ %4123, %4118 ], [ %4117, %4115 ]
  %4121 = getelementptr inbounds i32, ptr %11, i64 %4119
  %4122 = load i32, ptr %4121, align 4, !tbaa !5
  %4123 = mul nsw i32 %4122, %4120
  %4124 = add nsw i64 %4119, -1
  %4125 = trunc i64 %4119 to i32
  %4126 = icmp sgt i32 %4125, 0
  br i1 %4126, label %4118, label %4127, !llvm.loop !720

4127:                                             ; preds = %4118, %4109
  %4128 = phi i32 [ %4113, %4109 ], [ %4123, %4118 ]
  %4129 = and i64 %4078, 4294967295
  %4130 = getelementptr inbounds i32, ptr %6, i64 %4129
  %4131 = load i32, ptr %4130, align 4, !tbaa !5
  %4132 = mul nsw i32 %4131, %4128
  %4133 = add nsw i32 %4132, %4072
  %4134 = icmp sgt i64 %4070, 2
  %4135 = add nsw i64 %4071, -1
  %4136 = add i32 %4069, 1
  br i1 %4134, label %4068, label %4137, !llvm.loop !721

4137:                                             ; preds = %4127, %4064
  %4138 = phi i32 [ %4067, %4064 ], [ %4133, %4127 ]
  %4139 = icmp slt i32 %4138, %5
  br i1 %4139, label %4142, label %4140

4140:                                             ; preds = %4137
  %4141 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

4142:                                             ; preds = %4137
  %4143 = sext i32 %4138 to i64
  %4144 = getelementptr inbounds i32, ptr %3610, i64 %4143
  %4145 = load i32, ptr %4144, align 4, !tbaa !5
  %4146 = sitofp i32 %4145 to double
  %4147 = fadd fast double %4065, %4146
  store double %4147, ptr %3612, align 8, !tbaa !18
  %4148 = add nuw nsw i32 %4066, 1
  br i1 %3919, label %4149, label %4199

4149:                                             ; preds = %4142
  %4150 = load i32, ptr %4, align 4, !tbaa !5
  %4151 = load i32, ptr %12, align 4, !tbaa !5
  %4152 = add nsw i32 %4151, -1
  %4153 = icmp slt i32 %4150, %4152
  br i1 %4153, label %4176, label %4154

4154:                                             ; preds = %4149
  %4155 = icmp eq i32 %4150, %4152
  br i1 %4155, label %4156, label %4192

4156:                                             ; preds = %4154
  store i32 0, ptr %4, align 4, !tbaa !5
  %4157 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4157, ptr %6, align 4, !tbaa !5
  br i1 %3924, label %4199, label %4158

4158:                                             ; preds = %4156, %4186
  %4159 = phi i64 [ %4190, %4186 ], [ 1, %4156 ]
  %4160 = getelementptr inbounds i32, ptr %4, i64 %4159
  %4161 = load i32, ptr %4160, align 4, !tbaa !5
  %4162 = getelementptr inbounds i32, ptr %12, i64 %4159
  %4163 = load i32, ptr %4162, align 4, !tbaa !5
  %4164 = add nsw i32 %4163, -1
  %4165 = icmp slt i32 %4161, %4164
  br i1 %4165, label %4166, label %4184

4166:                                             ; preds = %4158
  br i1 %4153, label %4176, label %4167

4167:                                             ; preds = %4166
  %4168 = shl i64 %4159, 32
  %4169 = add i64 %4168, -4294967296
  %4170 = ashr exact i64 %4169, 32
  %4171 = getelementptr inbounds i32, ptr %7, i64 %4170
  %4172 = load i32, ptr %4171, align 4, !tbaa !5
  %4173 = getelementptr inbounds i32, ptr %6, i64 %4159
  %4174 = load i32, ptr %4173, align 4, !tbaa !5
  %4175 = add nsw i32 %4174, %4172
  store i32 %4175, ptr %4173, align 4, !tbaa !5
  br label %4194

4176:                                             ; preds = %4149, %4166
  %4177 = phi i32 [ %4161, %4166 ], [ %4150, %4149 ]
  %4178 = phi ptr [ %4160, %4166 ], [ %4, %4149 ]
  %4179 = phi i64 [ %4159, %4166 ], [ 0, %4149 ]
  %4180 = add nsw i32 %4177, 1
  store i32 %4180, ptr %4178, align 4, !tbaa !5
  %4181 = getelementptr inbounds i32, ptr %7, i64 %4179
  %4182 = load i32, ptr %4181, align 4, !tbaa !5
  %4183 = getelementptr inbounds i32, ptr %6, i64 %4179
  br label %4194

4184:                                             ; preds = %4158
  %4185 = icmp eq i32 %4161, %4164
  br i1 %4185, label %4186, label %4192

4186:                                             ; preds = %4184
  store i32 0, ptr %4160, align 4, !tbaa !5
  %4187 = getelementptr inbounds i32, ptr %8, i64 %4159
  %4188 = load i32, ptr %4187, align 4, !tbaa !5
  %4189 = getelementptr inbounds i32, ptr %6, i64 %4159
  store i32 %4188, ptr %4189, align 4, !tbaa !5
  %4190 = add nuw nsw i64 %4159, 1
  %4191 = icmp eq i64 %4190, %3922
  br i1 %4191, label %4199, label %4158, !llvm.loop !722

4192:                                             ; preds = %4154, %4184
  %4193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4194:                                             ; preds = %4167, %4176
  %4195 = phi ptr [ %4183, %4176 ], [ %4160, %4167 ]
  %4196 = phi i32 [ %4182, %4176 ], [ 1, %4167 ]
  %4197 = load i32, ptr %4195, align 4, !tbaa !5
  %4198 = add nsw i32 %4197, %4196
  store i32 %4198, ptr %4195, align 4, !tbaa !5
  br label %4199

4199:                                             ; preds = %4186, %4194, %4156, %4142
  %4200 = icmp eq i32 %4148, %5
  br i1 %4200, label %5404, label %4064, !llvm.loop !723

4201:                                             ; preds = %3617
  %4202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1031, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

4203:                                             ; preds = %18
  %4204 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4205 = load ptr, ptr %4204, align 8, !tbaa !9
  %4206 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4207 = load ptr, ptr %4206, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4207, align 4, !tbaa !162
  %4208 = icmp eq i32 %13, 0
  br i1 %4208, label %4209, label %4212

4209:                                             ; preds = %4203
  %4210 = load i32, ptr %4205, align 4, !tbaa !5
  %4211 = sitofp i32 %4210 to float
  store float %4211, ptr %4207, align 4, !tbaa !162
  br label %5404

4212:                                             ; preds = %4203
  switch i32 %1, label %4799 [
    i32 1, label %4213
    i32 0, label %4509
  ]

4213:                                             ; preds = %4212
  %4214 = getelementptr inbounds i32, ptr %3, i64 %19
  %4215 = load i32, ptr %4214, align 4, !tbaa !5
  %4216 = icmp eq i32 %4215, 0
  %4217 = icmp sgt i32 %5, 0
  br i1 %4216, label %4227, label %4218

4218:                                             ; preds = %4213
  br i1 %4217, label %4219, label %5404

4219:                                             ; preds = %4218
  %4220 = icmp sgt i32 %13, 1
  %4221 = icmp sgt i32 %13, 0
  %4222 = add i32 %13, -2
  %4223 = zext i32 %4222 to i64
  %4224 = zext i32 %13 to i64
  %4225 = add nuw i32 %5, 1
  %4226 = icmp eq i32 %13, 1
  br label %4372

4227:                                             ; preds = %4213
  br i1 %4217, label %4228, label %5404

4228:                                             ; preds = %4227
  %4229 = icmp sgt i32 %13, 1
  %4230 = icmp sgt i32 %13, 0
  %4231 = add i32 %13, -2
  %4232 = zext i32 %4231 to i64
  %4233 = zext i32 %13 to i64
  %4234 = add nuw i32 %5, 1
  %4235 = icmp eq i32 %13, 1
  br label %4236

4236:                                             ; preds = %4228, %4370
  %4237 = phi float [ 0.000000e+00, %4228 ], [ %4321, %4370 ]
  %4238 = phi i32 [ 0, %4228 ], [ %4322, %4370 ]
  %4239 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4229, label %4240, label %4309

4240:                                             ; preds = %4236, %4299
  %4241 = phi i32 [ %4308, %4299 ], [ 0, %4236 ]
  %4242 = phi i64 [ %4250, %4299 ], [ %4233, %4236 ]
  %4243 = phi i64 [ %4307, %4299 ], [ %4232, %4236 ]
  %4244 = phi i32 [ %4305, %4299 ], [ %4239, %4236 ]
  %4245 = sub i32 %4231, %4241
  %4246 = tail call i32 @llvm.smin.i32(i32 %4245, i32 0)
  %4247 = sub i32 %4245, %4246
  %4248 = zext i32 %4247 to i64
  %4249 = add nuw nsw i64 %4248, 1
  %4250 = add nsw i64 %4242, -1
  %4251 = icmp ult i32 %4247, 31
  br i1 %4251, label %4287, label %4252

4252:                                             ; preds = %4240
  %4253 = and i64 %4249, 8589934560
  %4254 = sub i64 %4243, %4253
  br label %4255

4255:                                             ; preds = %4255, %4252
  %4256 = phi i64 [ 0, %4252 ], [ %4279, %4255 ]
  %4257 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4275, %4255 ]
  %4258 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4276, %4255 ]
  %4259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4277, %4255 ]
  %4260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4252 ], [ %4278, %4255 ]
  %4261 = sub i64 %4243, %4256
  %4262 = getelementptr inbounds i32, ptr %9, i64 %4261
  %4263 = getelementptr inbounds i32, ptr %4262, i64 -7
  %4264 = load <8 x i32>, ptr %4263, align 4, !tbaa !5
  %4265 = shufflevector <8 x i32> %4264, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4266 = getelementptr inbounds i32, ptr %4262, i64 -15
  %4267 = load <8 x i32>, ptr %4266, align 4, !tbaa !5
  %4268 = shufflevector <8 x i32> %4267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4269 = getelementptr inbounds i32, ptr %4262, i64 -23
  %4270 = load <8 x i32>, ptr %4269, align 4, !tbaa !5
  %4271 = shufflevector <8 x i32> %4270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4272 = getelementptr inbounds i32, ptr %4262, i64 -31
  %4273 = load <8 x i32>, ptr %4272, align 4, !tbaa !5
  %4274 = shufflevector <8 x i32> %4273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4275 = mul <8 x i32> %4265, %4257
  %4276 = mul <8 x i32> %4268, %4258
  %4277 = mul <8 x i32> %4271, %4259
  %4278 = mul <8 x i32> %4274, %4260
  %4279 = add nuw i64 %4256, 32
  %4280 = icmp eq i64 %4279, %4253
  br i1 %4280, label %4281, label %4255, !llvm.loop !724

4281:                                             ; preds = %4255
  %4282 = mul <8 x i32> %4276, %4275
  %4283 = mul <8 x i32> %4277, %4282
  %4284 = mul <8 x i32> %4278, %4283
  %4285 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4284)
  %4286 = icmp eq i64 %4249, %4253
  br i1 %4286, label %4299, label %4287

4287:                                             ; preds = %4240, %4281
  %4288 = phi i64 [ %4243, %4240 ], [ %4254, %4281 ]
  %4289 = phi i32 [ 1, %4240 ], [ %4285, %4281 ]
  br label %4290

4290:                                             ; preds = %4287, %4290
  %4291 = phi i64 [ %4296, %4290 ], [ %4288, %4287 ]
  %4292 = phi i32 [ %4295, %4290 ], [ %4289, %4287 ]
  %4293 = getelementptr inbounds i32, ptr %9, i64 %4291
  %4294 = load i32, ptr %4293, align 4, !tbaa !5
  %4295 = mul nsw i32 %4294, %4292
  %4296 = add nsw i64 %4291, -1
  %4297 = trunc i64 %4291 to i32
  %4298 = icmp sgt i32 %4297, 0
  br i1 %4298, label %4290, label %4299, !llvm.loop !725

4299:                                             ; preds = %4290, %4281
  %4300 = phi i32 [ %4285, %4281 ], [ %4295, %4290 ]
  %4301 = and i64 %4250, 4294967295
  %4302 = getelementptr inbounds i32, ptr %6, i64 %4301
  %4303 = load i32, ptr %4302, align 4, !tbaa !5
  %4304 = mul nsw i32 %4303, %4300
  %4305 = add nsw i32 %4304, %4244
  %4306 = icmp sgt i64 %4242, 2
  %4307 = add nsw i64 %4243, -1
  %4308 = add i32 %4241, 1
  br i1 %4306, label %4240, label %4309, !llvm.loop !726

4309:                                             ; preds = %4299, %4236
  %4310 = phi i32 [ %4239, %4236 ], [ %4305, %4299 ]
  %4311 = sext i32 %4310 to i64
  %4312 = getelementptr inbounds double, ptr %2, i64 %4311
  %4313 = load double, ptr %4312, align 8, !tbaa !18
  %4314 = getelementptr inbounds i32, ptr %4205, i64 %4311
  %4315 = load i32, ptr %4314, align 4, !tbaa !5
  %4316 = sitofp i32 %4315 to float
  %4317 = fpext float %4237 to double
  %4318 = fpext float %4316 to double
  %4319 = fmul fast double %4313, %4318
  %4320 = fadd fast double %4319, %4317
  %4321 = fptrunc double %4320 to float
  %4322 = add nuw nsw i32 %4238, 1
  br i1 %4230, label %4323, label %4370

4323:                                             ; preds = %4309
  %4324 = load i32, ptr %4, align 4, !tbaa !5
  %4325 = load i32, ptr %12, align 4, !tbaa !5
  %4326 = add nsw i32 %4325, -1
  %4327 = icmp slt i32 %4324, %4326
  br i1 %4327, label %4347, label %4328

4328:                                             ; preds = %4323
  %4329 = icmp eq i32 %4324, %4326
  br i1 %4329, label %4330, label %4363

4330:                                             ; preds = %4328
  store i32 0, ptr %4, align 4, !tbaa !5
  %4331 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4331, ptr %6, align 4, !tbaa !5
  br i1 %4235, label %4370, label %4332

4332:                                             ; preds = %4330, %4357
  %4333 = phi i64 [ %4361, %4357 ], [ 1, %4330 ]
  %4334 = getelementptr inbounds i32, ptr %4, i64 %4333
  %4335 = load i32, ptr %4334, align 4, !tbaa !5
  %4336 = getelementptr inbounds i32, ptr %12, i64 %4333
  %4337 = load i32, ptr %4336, align 4, !tbaa !5
  %4338 = add nsw i32 %4337, -1
  %4339 = icmp slt i32 %4335, %4338
  br i1 %4339, label %4340, label %4355

4340:                                             ; preds = %4332
  br i1 %4327, label %4347, label %4341

4341:                                             ; preds = %4340
  %4342 = getelementptr inbounds i32, ptr %7, i64 %4333
  %4343 = load i32, ptr %4342, align 4, !tbaa !5
  %4344 = getelementptr inbounds i32, ptr %6, i64 %4333
  %4345 = load i32, ptr %4344, align 4, !tbaa !5
  %4346 = add nsw i32 %4345, %4343
  store i32 %4346, ptr %4344, align 4, !tbaa !5
  br label %4365

4347:                                             ; preds = %4323, %4340
  %4348 = phi i32 [ %4335, %4340 ], [ %4324, %4323 ]
  %4349 = phi ptr [ %4334, %4340 ], [ %4, %4323 ]
  %4350 = phi i64 [ %4333, %4340 ], [ 0, %4323 ]
  %4351 = add nsw i32 %4348, 1
  store i32 %4351, ptr %4349, align 4, !tbaa !5
  %4352 = getelementptr inbounds i32, ptr %7, i64 %4350
  %4353 = load i32, ptr %4352, align 4, !tbaa !5
  %4354 = getelementptr inbounds i32, ptr %6, i64 %4350
  br label %4365

4355:                                             ; preds = %4332
  %4356 = icmp eq i32 %4335, %4338
  br i1 %4356, label %4357, label %4363

4357:                                             ; preds = %4355
  store i32 0, ptr %4334, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %8, i64 %4333
  %4359 = load i32, ptr %4358, align 4, !tbaa !5
  %4360 = getelementptr inbounds i32, ptr %6, i64 %4333
  store i32 %4359, ptr %4360, align 4, !tbaa !5
  %4361 = add nuw nsw i64 %4333, 1
  %4362 = icmp eq i64 %4361, %4233
  br i1 %4362, label %4370, label %4332, !llvm.loop !727

4363:                                             ; preds = %4328, %4355
  store float %4321, ptr %4207, align 4, !tbaa !162
  %4364 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4365:                                             ; preds = %4341, %4347
  %4366 = phi ptr [ %4354, %4347 ], [ %4334, %4341 ]
  %4367 = phi i32 [ %4353, %4347 ], [ 1, %4341 ]
  %4368 = load i32, ptr %4366, align 4, !tbaa !5
  %4369 = add nsw i32 %4368, %4367
  store i32 %4369, ptr %4366, align 4, !tbaa !5
  br label %4370

4370:                                             ; preds = %4357, %4365, %4330, %4309
  %4371 = icmp eq i32 %4322, %5
  br i1 %4371, label %5401, label %4236, !llvm.loop !728

4372:                                             ; preds = %4219, %4507
  %4373 = phi float [ 0.000000e+00, %4219 ], [ %4455, %4507 ]
  %4374 = phi i32 [ 0, %4219 ], [ %4456, %4507 ]
  %4375 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4220, label %4376, label %4445

4376:                                             ; preds = %4372, %4435
  %4377 = phi i32 [ %4444, %4435 ], [ 0, %4372 ]
  %4378 = phi i64 [ %4386, %4435 ], [ %4224, %4372 ]
  %4379 = phi i64 [ %4443, %4435 ], [ %4223, %4372 ]
  %4380 = phi i32 [ %4441, %4435 ], [ %4375, %4372 ]
  %4381 = sub i32 %4222, %4377
  %4382 = tail call i32 @llvm.smin.i32(i32 %4381, i32 0)
  %4383 = sub i32 %4381, %4382
  %4384 = zext i32 %4383 to i64
  %4385 = add nuw nsw i64 %4384, 1
  %4386 = add nsw i64 %4378, -1
  %4387 = icmp ult i32 %4383, 31
  br i1 %4387, label %4423, label %4388

4388:                                             ; preds = %4376
  %4389 = and i64 %4385, 8589934560
  %4390 = sub i64 %4379, %4389
  br label %4391

4391:                                             ; preds = %4391, %4388
  %4392 = phi i64 [ 0, %4388 ], [ %4415, %4391 ]
  %4393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4411, %4391 ]
  %4394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4412, %4391 ]
  %4395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4413, %4391 ]
  %4396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4388 ], [ %4414, %4391 ]
  %4397 = sub i64 %4379, %4392
  %4398 = getelementptr inbounds i32, ptr %11, i64 %4397
  %4399 = getelementptr inbounds i32, ptr %4398, i64 -7
  %4400 = load <8 x i32>, ptr %4399, align 4, !tbaa !5
  %4401 = shufflevector <8 x i32> %4400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4402 = getelementptr inbounds i32, ptr %4398, i64 -15
  %4403 = load <8 x i32>, ptr %4402, align 4, !tbaa !5
  %4404 = shufflevector <8 x i32> %4403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4405 = getelementptr inbounds i32, ptr %4398, i64 -23
  %4406 = load <8 x i32>, ptr %4405, align 4, !tbaa !5
  %4407 = shufflevector <8 x i32> %4406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4408 = getelementptr inbounds i32, ptr %4398, i64 -31
  %4409 = load <8 x i32>, ptr %4408, align 4, !tbaa !5
  %4410 = shufflevector <8 x i32> %4409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4411 = mul <8 x i32> %4401, %4393
  %4412 = mul <8 x i32> %4404, %4394
  %4413 = mul <8 x i32> %4407, %4395
  %4414 = mul <8 x i32> %4410, %4396
  %4415 = add nuw i64 %4392, 32
  %4416 = icmp eq i64 %4415, %4389
  br i1 %4416, label %4417, label %4391, !llvm.loop !729

4417:                                             ; preds = %4391
  %4418 = mul <8 x i32> %4412, %4411
  %4419 = mul <8 x i32> %4413, %4418
  %4420 = mul <8 x i32> %4414, %4419
  %4421 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4420)
  %4422 = icmp eq i64 %4385, %4389
  br i1 %4422, label %4435, label %4423

4423:                                             ; preds = %4376, %4417
  %4424 = phi i64 [ %4379, %4376 ], [ %4390, %4417 ]
  %4425 = phi i32 [ 1, %4376 ], [ %4421, %4417 ]
  br label %4426

4426:                                             ; preds = %4423, %4426
  %4427 = phi i64 [ %4432, %4426 ], [ %4424, %4423 ]
  %4428 = phi i32 [ %4431, %4426 ], [ %4425, %4423 ]
  %4429 = getelementptr inbounds i32, ptr %11, i64 %4427
  %4430 = load i32, ptr %4429, align 4, !tbaa !5
  %4431 = mul nsw i32 %4430, %4428
  %4432 = add nsw i64 %4427, -1
  %4433 = trunc i64 %4427 to i32
  %4434 = icmp sgt i32 %4433, 0
  br i1 %4434, label %4426, label %4435, !llvm.loop !730

4435:                                             ; preds = %4426, %4417
  %4436 = phi i32 [ %4421, %4417 ], [ %4431, %4426 ]
  %4437 = and i64 %4386, 4294967295
  %4438 = getelementptr inbounds i32, ptr %6, i64 %4437
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = mul nsw i32 %4439, %4436
  %4441 = add nsw i32 %4440, %4380
  %4442 = icmp sgt i64 %4378, 2
  %4443 = add nsw i64 %4379, -1
  %4444 = add i32 %4377, 1
  br i1 %4442, label %4376, label %4445, !llvm.loop !731

4445:                                             ; preds = %4435, %4372
  %4446 = phi i32 [ %4375, %4372 ], [ %4441, %4435 ]
  %4447 = icmp slt i32 %4446, %5
  br i1 %4447, label %4450, label %4448

4448:                                             ; preds = %4445
  %4449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

4450:                                             ; preds = %4445
  %4451 = sext i32 %4446 to i64
  %4452 = getelementptr inbounds i32, ptr %4205, i64 %4451
  %4453 = load i32, ptr %4452, align 4, !tbaa !5
  %4454 = sitofp i32 %4453 to float
  %4455 = fadd fast float %4373, %4454
  store float %4455, ptr %4207, align 4, !tbaa !162
  %4456 = add nuw nsw i32 %4374, 1
  br i1 %4221, label %4457, label %4507

4457:                                             ; preds = %4450
  %4458 = load i32, ptr %4, align 4, !tbaa !5
  %4459 = load i32, ptr %12, align 4, !tbaa !5
  %4460 = add nsw i32 %4459, -1
  %4461 = icmp slt i32 %4458, %4460
  br i1 %4461, label %4484, label %4462

4462:                                             ; preds = %4457
  %4463 = icmp eq i32 %4458, %4460
  br i1 %4463, label %4464, label %4500

4464:                                             ; preds = %4462
  store i32 0, ptr %4, align 4, !tbaa !5
  %4465 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4465, ptr %6, align 4, !tbaa !5
  br i1 %4226, label %4507, label %4466

4466:                                             ; preds = %4464, %4494
  %4467 = phi i64 [ %4498, %4494 ], [ 1, %4464 ]
  %4468 = getelementptr inbounds i32, ptr %4, i64 %4467
  %4469 = load i32, ptr %4468, align 4, !tbaa !5
  %4470 = getelementptr inbounds i32, ptr %12, i64 %4467
  %4471 = load i32, ptr %4470, align 4, !tbaa !5
  %4472 = add nsw i32 %4471, -1
  %4473 = icmp slt i32 %4469, %4472
  br i1 %4473, label %4474, label %4492

4474:                                             ; preds = %4466
  br i1 %4461, label %4484, label %4475

4475:                                             ; preds = %4474
  %4476 = shl i64 %4467, 32
  %4477 = add i64 %4476, -4294967296
  %4478 = ashr exact i64 %4477, 32
  %4479 = getelementptr inbounds i32, ptr %7, i64 %4478
  %4480 = load i32, ptr %4479, align 4, !tbaa !5
  %4481 = getelementptr inbounds i32, ptr %6, i64 %4467
  %4482 = load i32, ptr %4481, align 4, !tbaa !5
  %4483 = add nsw i32 %4482, %4480
  store i32 %4483, ptr %4481, align 4, !tbaa !5
  br label %4502

4484:                                             ; preds = %4457, %4474
  %4485 = phi i32 [ %4469, %4474 ], [ %4458, %4457 ]
  %4486 = phi ptr [ %4468, %4474 ], [ %4, %4457 ]
  %4487 = phi i64 [ %4467, %4474 ], [ 0, %4457 ]
  %4488 = add nsw i32 %4485, 1
  store i32 %4488, ptr %4486, align 4, !tbaa !5
  %4489 = getelementptr inbounds i32, ptr %7, i64 %4487
  %4490 = load i32, ptr %4489, align 4, !tbaa !5
  %4491 = getelementptr inbounds i32, ptr %6, i64 %4487
  br label %4502

4492:                                             ; preds = %4466
  %4493 = icmp eq i32 %4469, %4472
  br i1 %4493, label %4494, label %4500

4494:                                             ; preds = %4492
  store i32 0, ptr %4468, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %8, i64 %4467
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = getelementptr inbounds i32, ptr %6, i64 %4467
  store i32 %4496, ptr %4497, align 4, !tbaa !5
  %4498 = add nuw nsw i64 %4467, 1
  %4499 = icmp eq i64 %4498, %4224
  br i1 %4499, label %4507, label %4466, !llvm.loop !732

4500:                                             ; preds = %4462, %4492
  %4501 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4502:                                             ; preds = %4475, %4484
  %4503 = phi ptr [ %4491, %4484 ], [ %4468, %4475 ]
  %4504 = phi i32 [ %4490, %4484 ], [ 1, %4475 ]
  %4505 = load i32, ptr %4503, align 4, !tbaa !5
  %4506 = add nsw i32 %4505, %4504
  store i32 %4506, ptr %4503, align 4, !tbaa !5
  br label %4507

4507:                                             ; preds = %4494, %4502, %4464, %4450
  %4508 = icmp eq i32 %4456, %5
  br i1 %4508, label %5404, label %4372, !llvm.loop !733

4509:                                             ; preds = %4212
  %4510 = getelementptr inbounds i32, ptr %3, i64 %19
  %4511 = load i32, ptr %4510, align 4, !tbaa !5
  %4512 = icmp eq i32 %4511, 0
  %4513 = icmp sgt i32 %5, 0
  br i1 %4512, label %4523, label %4514

4514:                                             ; preds = %4509
  br i1 %4513, label %4515, label %5404

4515:                                             ; preds = %4514
  %4516 = icmp sgt i32 %13, 1
  %4517 = icmp sgt i32 %13, 0
  %4518 = add i32 %13, -2
  %4519 = zext i32 %4518 to i64
  %4520 = zext i32 %13 to i64
  %4521 = add nuw i32 %5, 1
  %4522 = icmp eq i32 %13, 1
  br label %4662

4523:                                             ; preds = %4509
  br i1 %4513, label %4524, label %5404

4524:                                             ; preds = %4523
  %4525 = icmp sgt i32 %13, 1
  %4526 = icmp sgt i32 %13, 0
  %4527 = add i32 %13, -2
  %4528 = zext i32 %4527 to i64
  %4529 = zext i32 %13 to i64
  %4530 = add nuw i32 %5, 1
  %4531 = icmp eq i32 %13, 1
  br label %4532

4532:                                             ; preds = %4524, %4660
  %4533 = phi float [ 0.000000e+00, %4524 ], [ %4611, %4660 ]
  %4534 = phi i32 [ 0, %4524 ], [ %4612, %4660 ]
  %4535 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4525, label %4536, label %4605

4536:                                             ; preds = %4532, %4595
  %4537 = phi i32 [ %4604, %4595 ], [ 0, %4532 ]
  %4538 = phi i64 [ %4546, %4595 ], [ %4529, %4532 ]
  %4539 = phi i64 [ %4603, %4595 ], [ %4528, %4532 ]
  %4540 = phi i32 [ %4601, %4595 ], [ %4535, %4532 ]
  %4541 = sub i32 %4527, %4537
  %4542 = tail call i32 @llvm.smin.i32(i32 %4541, i32 0)
  %4543 = sub i32 %4541, %4542
  %4544 = zext i32 %4543 to i64
  %4545 = add nuw nsw i64 %4544, 1
  %4546 = add nsw i64 %4538, -1
  %4547 = icmp ult i32 %4543, 31
  br i1 %4547, label %4583, label %4548

4548:                                             ; preds = %4536
  %4549 = and i64 %4545, 8589934560
  %4550 = sub i64 %4539, %4549
  br label %4551

4551:                                             ; preds = %4551, %4548
  %4552 = phi i64 [ 0, %4548 ], [ %4575, %4551 ]
  %4553 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4571, %4551 ]
  %4554 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4572, %4551 ]
  %4555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4573, %4551 ]
  %4556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4548 ], [ %4574, %4551 ]
  %4557 = sub i64 %4539, %4552
  %4558 = getelementptr inbounds i32, ptr %9, i64 %4557
  %4559 = getelementptr inbounds i32, ptr %4558, i64 -7
  %4560 = load <8 x i32>, ptr %4559, align 4, !tbaa !5
  %4561 = shufflevector <8 x i32> %4560, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4562 = getelementptr inbounds i32, ptr %4558, i64 -15
  %4563 = load <8 x i32>, ptr %4562, align 4, !tbaa !5
  %4564 = shufflevector <8 x i32> %4563, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4565 = getelementptr inbounds i32, ptr %4558, i64 -23
  %4566 = load <8 x i32>, ptr %4565, align 4, !tbaa !5
  %4567 = shufflevector <8 x i32> %4566, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4568 = getelementptr inbounds i32, ptr %4558, i64 -31
  %4569 = load <8 x i32>, ptr %4568, align 4, !tbaa !5
  %4570 = shufflevector <8 x i32> %4569, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4571 = mul <8 x i32> %4561, %4553
  %4572 = mul <8 x i32> %4564, %4554
  %4573 = mul <8 x i32> %4567, %4555
  %4574 = mul <8 x i32> %4570, %4556
  %4575 = add nuw i64 %4552, 32
  %4576 = icmp eq i64 %4575, %4549
  br i1 %4576, label %4577, label %4551, !llvm.loop !734

4577:                                             ; preds = %4551
  %4578 = mul <8 x i32> %4572, %4571
  %4579 = mul <8 x i32> %4573, %4578
  %4580 = mul <8 x i32> %4574, %4579
  %4581 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4580)
  %4582 = icmp eq i64 %4545, %4549
  br i1 %4582, label %4595, label %4583

4583:                                             ; preds = %4536, %4577
  %4584 = phi i64 [ %4539, %4536 ], [ %4550, %4577 ]
  %4585 = phi i32 [ 1, %4536 ], [ %4581, %4577 ]
  br label %4586

4586:                                             ; preds = %4583, %4586
  %4587 = phi i64 [ %4592, %4586 ], [ %4584, %4583 ]
  %4588 = phi i32 [ %4591, %4586 ], [ %4585, %4583 ]
  %4589 = getelementptr inbounds i32, ptr %9, i64 %4587
  %4590 = load i32, ptr %4589, align 4, !tbaa !5
  %4591 = mul nsw i32 %4590, %4588
  %4592 = add nsw i64 %4587, -1
  %4593 = trunc i64 %4587 to i32
  %4594 = icmp sgt i32 %4593, 0
  br i1 %4594, label %4586, label %4595, !llvm.loop !735

4595:                                             ; preds = %4586, %4577
  %4596 = phi i32 [ %4581, %4577 ], [ %4591, %4586 ]
  %4597 = and i64 %4546, 4294967295
  %4598 = getelementptr inbounds i32, ptr %6, i64 %4597
  %4599 = load i32, ptr %4598, align 4, !tbaa !5
  %4600 = mul nsw i32 %4599, %4596
  %4601 = add nsw i32 %4600, %4540
  %4602 = icmp sgt i64 %4538, 2
  %4603 = add nsw i64 %4539, -1
  %4604 = add i32 %4537, 1
  br i1 %4602, label %4536, label %4605, !llvm.loop !736

4605:                                             ; preds = %4595, %4532
  %4606 = phi i32 [ %4535, %4532 ], [ %4601, %4595 ]
  %4607 = sext i32 %4606 to i64
  %4608 = getelementptr inbounds i32, ptr %4205, i64 %4607
  %4609 = load i32, ptr %4608, align 4, !tbaa !5
  %4610 = sitofp i32 %4609 to float
  %4611 = fadd fast float %4533, %4610
  %4612 = add nuw nsw i32 %4534, 1
  br i1 %4526, label %4613, label %4660

4613:                                             ; preds = %4605
  %4614 = load i32, ptr %4, align 4, !tbaa !5
  %4615 = load i32, ptr %12, align 4, !tbaa !5
  %4616 = add nsw i32 %4615, -1
  %4617 = icmp slt i32 %4614, %4616
  br i1 %4617, label %4637, label %4618

4618:                                             ; preds = %4613
  %4619 = icmp eq i32 %4614, %4616
  br i1 %4619, label %4620, label %4653

4620:                                             ; preds = %4618
  store i32 0, ptr %4, align 4, !tbaa !5
  %4621 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4621, ptr %6, align 4, !tbaa !5
  br i1 %4531, label %4660, label %4622

4622:                                             ; preds = %4620, %4647
  %4623 = phi i64 [ %4651, %4647 ], [ 1, %4620 ]
  %4624 = getelementptr inbounds i32, ptr %4, i64 %4623
  %4625 = load i32, ptr %4624, align 4, !tbaa !5
  %4626 = getelementptr inbounds i32, ptr %12, i64 %4623
  %4627 = load i32, ptr %4626, align 4, !tbaa !5
  %4628 = add nsw i32 %4627, -1
  %4629 = icmp slt i32 %4625, %4628
  br i1 %4629, label %4630, label %4645

4630:                                             ; preds = %4622
  br i1 %4617, label %4637, label %4631

4631:                                             ; preds = %4630
  %4632 = getelementptr inbounds i32, ptr %7, i64 %4623
  %4633 = load i32, ptr %4632, align 4, !tbaa !5
  %4634 = getelementptr inbounds i32, ptr %6, i64 %4623
  %4635 = load i32, ptr %4634, align 4, !tbaa !5
  %4636 = add nsw i32 %4635, %4633
  store i32 %4636, ptr %4634, align 4, !tbaa !5
  br label %4655

4637:                                             ; preds = %4613, %4630
  %4638 = phi i32 [ %4625, %4630 ], [ %4614, %4613 ]
  %4639 = phi ptr [ %4624, %4630 ], [ %4, %4613 ]
  %4640 = phi i64 [ %4623, %4630 ], [ 0, %4613 ]
  %4641 = add nsw i32 %4638, 1
  store i32 %4641, ptr %4639, align 4, !tbaa !5
  %4642 = getelementptr inbounds i32, ptr %7, i64 %4640
  %4643 = load i32, ptr %4642, align 4, !tbaa !5
  %4644 = getelementptr inbounds i32, ptr %6, i64 %4640
  br label %4655

4645:                                             ; preds = %4622
  %4646 = icmp eq i32 %4625, %4628
  br i1 %4646, label %4647, label %4653

4647:                                             ; preds = %4645
  store i32 0, ptr %4624, align 4, !tbaa !5
  %4648 = getelementptr inbounds i32, ptr %8, i64 %4623
  %4649 = load i32, ptr %4648, align 4, !tbaa !5
  %4650 = getelementptr inbounds i32, ptr %6, i64 %4623
  store i32 %4649, ptr %4650, align 4, !tbaa !5
  %4651 = add nuw nsw i64 %4623, 1
  %4652 = icmp eq i64 %4651, %4529
  br i1 %4652, label %4660, label %4622, !llvm.loop !737

4653:                                             ; preds = %4618, %4645
  store float %4611, ptr %4207, align 4, !tbaa !162
  %4654 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4655:                                             ; preds = %4631, %4637
  %4656 = phi ptr [ %4644, %4637 ], [ %4624, %4631 ]
  %4657 = phi i32 [ %4643, %4637 ], [ 1, %4631 ]
  %4658 = load i32, ptr %4656, align 4, !tbaa !5
  %4659 = add nsw i32 %4658, %4657
  store i32 %4659, ptr %4656, align 4, !tbaa !5
  br label %4660

4660:                                             ; preds = %4647, %4655, %4620, %4605
  %4661 = icmp eq i32 %4612, %5
  br i1 %4661, label %5402, label %4532, !llvm.loop !738

4662:                                             ; preds = %4515, %4797
  %4663 = phi float [ 0.000000e+00, %4515 ], [ %4745, %4797 ]
  %4664 = phi i32 [ 0, %4515 ], [ %4746, %4797 ]
  %4665 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4516, label %4666, label %4735

4666:                                             ; preds = %4662, %4725
  %4667 = phi i32 [ %4734, %4725 ], [ 0, %4662 ]
  %4668 = phi i64 [ %4676, %4725 ], [ %4520, %4662 ]
  %4669 = phi i64 [ %4733, %4725 ], [ %4519, %4662 ]
  %4670 = phi i32 [ %4731, %4725 ], [ %4665, %4662 ]
  %4671 = sub i32 %4518, %4667
  %4672 = tail call i32 @llvm.smin.i32(i32 %4671, i32 0)
  %4673 = sub i32 %4671, %4672
  %4674 = zext i32 %4673 to i64
  %4675 = add nuw nsw i64 %4674, 1
  %4676 = add nsw i64 %4668, -1
  %4677 = icmp ult i32 %4673, 31
  br i1 %4677, label %4713, label %4678

4678:                                             ; preds = %4666
  %4679 = and i64 %4675, 8589934560
  %4680 = sub i64 %4669, %4679
  br label %4681

4681:                                             ; preds = %4681, %4678
  %4682 = phi i64 [ 0, %4678 ], [ %4705, %4681 ]
  %4683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4701, %4681 ]
  %4684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4702, %4681 ]
  %4685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4703, %4681 ]
  %4686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4704, %4681 ]
  %4687 = sub i64 %4669, %4682
  %4688 = getelementptr inbounds i32, ptr %11, i64 %4687
  %4689 = getelementptr inbounds i32, ptr %4688, i64 -7
  %4690 = load <8 x i32>, ptr %4689, align 4, !tbaa !5
  %4691 = shufflevector <8 x i32> %4690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4692 = getelementptr inbounds i32, ptr %4688, i64 -15
  %4693 = load <8 x i32>, ptr %4692, align 4, !tbaa !5
  %4694 = shufflevector <8 x i32> %4693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4695 = getelementptr inbounds i32, ptr %4688, i64 -23
  %4696 = load <8 x i32>, ptr %4695, align 4, !tbaa !5
  %4697 = shufflevector <8 x i32> %4696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4698 = getelementptr inbounds i32, ptr %4688, i64 -31
  %4699 = load <8 x i32>, ptr %4698, align 4, !tbaa !5
  %4700 = shufflevector <8 x i32> %4699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4701 = mul <8 x i32> %4691, %4683
  %4702 = mul <8 x i32> %4694, %4684
  %4703 = mul <8 x i32> %4697, %4685
  %4704 = mul <8 x i32> %4700, %4686
  %4705 = add nuw i64 %4682, 32
  %4706 = icmp eq i64 %4705, %4679
  br i1 %4706, label %4707, label %4681, !llvm.loop !739

4707:                                             ; preds = %4681
  %4708 = mul <8 x i32> %4702, %4701
  %4709 = mul <8 x i32> %4703, %4708
  %4710 = mul <8 x i32> %4704, %4709
  %4711 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4710)
  %4712 = icmp eq i64 %4675, %4679
  br i1 %4712, label %4725, label %4713

4713:                                             ; preds = %4666, %4707
  %4714 = phi i64 [ %4669, %4666 ], [ %4680, %4707 ]
  %4715 = phi i32 [ 1, %4666 ], [ %4711, %4707 ]
  br label %4716

4716:                                             ; preds = %4713, %4716
  %4717 = phi i64 [ %4722, %4716 ], [ %4714, %4713 ]
  %4718 = phi i32 [ %4721, %4716 ], [ %4715, %4713 ]
  %4719 = getelementptr inbounds i32, ptr %11, i64 %4717
  %4720 = load i32, ptr %4719, align 4, !tbaa !5
  %4721 = mul nsw i32 %4720, %4718
  %4722 = add nsw i64 %4717, -1
  %4723 = trunc i64 %4717 to i32
  %4724 = icmp sgt i32 %4723, 0
  br i1 %4724, label %4716, label %4725, !llvm.loop !740

4725:                                             ; preds = %4716, %4707
  %4726 = phi i32 [ %4711, %4707 ], [ %4721, %4716 ]
  %4727 = and i64 %4676, 4294967295
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4727
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = mul nsw i32 %4729, %4726
  %4731 = add nsw i32 %4730, %4670
  %4732 = icmp sgt i64 %4668, 2
  %4733 = add nsw i64 %4669, -1
  %4734 = add i32 %4667, 1
  br i1 %4732, label %4666, label %4735, !llvm.loop !741

4735:                                             ; preds = %4725, %4662
  %4736 = phi i32 [ %4665, %4662 ], [ %4731, %4725 ]
  %4737 = icmp slt i32 %4736, %5
  br i1 %4737, label %4740, label %4738

4738:                                             ; preds = %4735
  %4739 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

4740:                                             ; preds = %4735
  %4741 = sext i32 %4736 to i64
  %4742 = getelementptr inbounds i32, ptr %4205, i64 %4741
  %4743 = load i32, ptr %4742, align 4, !tbaa !5
  %4744 = sitofp i32 %4743 to float
  %4745 = fadd fast float %4663, %4744
  store float %4745, ptr %4207, align 4, !tbaa !162
  %4746 = add nuw nsw i32 %4664, 1
  br i1 %4517, label %4747, label %4797

4747:                                             ; preds = %4740
  %4748 = load i32, ptr %4, align 4, !tbaa !5
  %4749 = load i32, ptr %12, align 4, !tbaa !5
  %4750 = add nsw i32 %4749, -1
  %4751 = icmp slt i32 %4748, %4750
  br i1 %4751, label %4774, label %4752

4752:                                             ; preds = %4747
  %4753 = icmp eq i32 %4748, %4750
  br i1 %4753, label %4754, label %4790

4754:                                             ; preds = %4752
  store i32 0, ptr %4, align 4, !tbaa !5
  %4755 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4755, ptr %6, align 4, !tbaa !5
  br i1 %4522, label %4797, label %4756

4756:                                             ; preds = %4754, %4784
  %4757 = phi i64 [ %4788, %4784 ], [ 1, %4754 ]
  %4758 = getelementptr inbounds i32, ptr %4, i64 %4757
  %4759 = load i32, ptr %4758, align 4, !tbaa !5
  %4760 = getelementptr inbounds i32, ptr %12, i64 %4757
  %4761 = load i32, ptr %4760, align 4, !tbaa !5
  %4762 = add nsw i32 %4761, -1
  %4763 = icmp slt i32 %4759, %4762
  br i1 %4763, label %4764, label %4782

4764:                                             ; preds = %4756
  br i1 %4751, label %4774, label %4765

4765:                                             ; preds = %4764
  %4766 = shl i64 %4757, 32
  %4767 = add i64 %4766, -4294967296
  %4768 = ashr exact i64 %4767, 32
  %4769 = getelementptr inbounds i32, ptr %7, i64 %4768
  %4770 = load i32, ptr %4769, align 4, !tbaa !5
  %4771 = getelementptr inbounds i32, ptr %6, i64 %4757
  %4772 = load i32, ptr %4771, align 4, !tbaa !5
  %4773 = add nsw i32 %4772, %4770
  store i32 %4773, ptr %4771, align 4, !tbaa !5
  br label %4792

4774:                                             ; preds = %4747, %4764
  %4775 = phi i32 [ %4759, %4764 ], [ %4748, %4747 ]
  %4776 = phi ptr [ %4758, %4764 ], [ %4, %4747 ]
  %4777 = phi i64 [ %4757, %4764 ], [ 0, %4747 ]
  %4778 = add nsw i32 %4775, 1
  store i32 %4778, ptr %4776, align 4, !tbaa !5
  %4779 = getelementptr inbounds i32, ptr %7, i64 %4777
  %4780 = load i32, ptr %4779, align 4, !tbaa !5
  %4781 = getelementptr inbounds i32, ptr %6, i64 %4777
  br label %4792

4782:                                             ; preds = %4756
  %4783 = icmp eq i32 %4759, %4762
  br i1 %4783, label %4784, label %4790

4784:                                             ; preds = %4782
  store i32 0, ptr %4758, align 4, !tbaa !5
  %4785 = getelementptr inbounds i32, ptr %8, i64 %4757
  %4786 = load i32, ptr %4785, align 4, !tbaa !5
  %4787 = getelementptr inbounds i32, ptr %6, i64 %4757
  store i32 %4786, ptr %4787, align 4, !tbaa !5
  %4788 = add nuw nsw i64 %4757, 1
  %4789 = icmp eq i64 %4788, %4520
  br i1 %4789, label %4797, label %4756, !llvm.loop !742

4790:                                             ; preds = %4752, %4782
  %4791 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4792:                                             ; preds = %4765, %4774
  %4793 = phi ptr [ %4781, %4774 ], [ %4758, %4765 ]
  %4794 = phi i32 [ %4780, %4774 ], [ 1, %4765 ]
  %4795 = load i32, ptr %4793, align 4, !tbaa !5
  %4796 = add nsw i32 %4795, %4794
  store i32 %4796, ptr %4793, align 4, !tbaa !5
  br label %4797

4797:                                             ; preds = %4784, %4792, %4754, %4740
  %4798 = icmp eq i32 %4746, %5
  br i1 %4798, label %5404, label %4662, !llvm.loop !743

4799:                                             ; preds = %4212
  %4800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1035, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

4801:                                             ; preds = %18
  %4802 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4803 = load ptr, ptr %4802, align 8, !tbaa !9
  %4804 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4805 = load ptr, ptr %4804, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4805, align 8, !tbaa !18
  %4806 = icmp eq i32 %13, 0
  br i1 %4806, label %4807, label %4810

4807:                                             ; preds = %4801
  %4808 = load i32, ptr %4803, align 4, !tbaa !5
  %4809 = sitofp i32 %4808 to double
  store double %4809, ptr %4805, align 8, !tbaa !18
  br label %5404

4810:                                             ; preds = %4801
  switch i32 %1, label %5394 [
    i32 1, label %4811
    i32 0, label %5104
  ]

4811:                                             ; preds = %4810
  %4812 = getelementptr inbounds i32, ptr %3, i64 %19
  %4813 = load i32, ptr %4812, align 4, !tbaa !5
  %4814 = icmp eq i32 %4813, 0
  %4815 = icmp sgt i32 %5, 0
  br i1 %4814, label %4825, label %4816

4816:                                             ; preds = %4811
  br i1 %4815, label %4817, label %5404

4817:                                             ; preds = %4816
  %4818 = icmp sgt i32 %13, 1
  %4819 = icmp sgt i32 %13, 0
  %4820 = add i32 %13, -2
  %4821 = zext i32 %4820 to i64
  %4822 = zext i32 %13 to i64
  %4823 = add nuw i32 %5, 1
  %4824 = icmp eq i32 %13, 1
  br label %4967

4825:                                             ; preds = %4811
  br i1 %4815, label %4826, label %5404

4826:                                             ; preds = %4825
  %4827 = icmp sgt i32 %13, 1
  %4828 = icmp sgt i32 %13, 0
  %4829 = add i32 %13, -2
  %4830 = zext i32 %4829 to i64
  %4831 = zext i32 %13 to i64
  %4832 = add nuw i32 %5, 1
  %4833 = icmp eq i32 %13, 1
  br label %4834

4834:                                             ; preds = %4826, %4965
  %4835 = phi double [ 0.000000e+00, %4826 ], [ %4916, %4965 ]
  %4836 = phi i32 [ 0, %4826 ], [ %4917, %4965 ]
  %4837 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4827, label %4838, label %4907

4838:                                             ; preds = %4834, %4897
  %4839 = phi i32 [ %4906, %4897 ], [ 0, %4834 ]
  %4840 = phi i64 [ %4848, %4897 ], [ %4831, %4834 ]
  %4841 = phi i64 [ %4905, %4897 ], [ %4830, %4834 ]
  %4842 = phi i32 [ %4903, %4897 ], [ %4837, %4834 ]
  %4843 = sub i32 %4829, %4839
  %4844 = tail call i32 @llvm.smin.i32(i32 %4843, i32 0)
  %4845 = sub i32 %4843, %4844
  %4846 = zext i32 %4845 to i64
  %4847 = add nuw nsw i64 %4846, 1
  %4848 = add nsw i64 %4840, -1
  %4849 = icmp ult i32 %4845, 31
  br i1 %4849, label %4885, label %4850

4850:                                             ; preds = %4838
  %4851 = and i64 %4847, 8589934560
  %4852 = sub i64 %4841, %4851
  br label %4853

4853:                                             ; preds = %4853, %4850
  %4854 = phi i64 [ 0, %4850 ], [ %4877, %4853 ]
  %4855 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4873, %4853 ]
  %4856 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4874, %4853 ]
  %4857 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4875, %4853 ]
  %4858 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4850 ], [ %4876, %4853 ]
  %4859 = sub i64 %4841, %4854
  %4860 = getelementptr inbounds i32, ptr %9, i64 %4859
  %4861 = getelementptr inbounds i32, ptr %4860, i64 -7
  %4862 = load <8 x i32>, ptr %4861, align 4, !tbaa !5
  %4863 = shufflevector <8 x i32> %4862, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4864 = getelementptr inbounds i32, ptr %4860, i64 -15
  %4865 = load <8 x i32>, ptr %4864, align 4, !tbaa !5
  %4866 = shufflevector <8 x i32> %4865, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4867 = getelementptr inbounds i32, ptr %4860, i64 -23
  %4868 = load <8 x i32>, ptr %4867, align 4, !tbaa !5
  %4869 = shufflevector <8 x i32> %4868, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4870 = getelementptr inbounds i32, ptr %4860, i64 -31
  %4871 = load <8 x i32>, ptr %4870, align 4, !tbaa !5
  %4872 = shufflevector <8 x i32> %4871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4873 = mul <8 x i32> %4863, %4855
  %4874 = mul <8 x i32> %4866, %4856
  %4875 = mul <8 x i32> %4869, %4857
  %4876 = mul <8 x i32> %4872, %4858
  %4877 = add nuw i64 %4854, 32
  %4878 = icmp eq i64 %4877, %4851
  br i1 %4878, label %4879, label %4853, !llvm.loop !744

4879:                                             ; preds = %4853
  %4880 = mul <8 x i32> %4874, %4873
  %4881 = mul <8 x i32> %4875, %4880
  %4882 = mul <8 x i32> %4876, %4881
  %4883 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4882)
  %4884 = icmp eq i64 %4847, %4851
  br i1 %4884, label %4897, label %4885

4885:                                             ; preds = %4838, %4879
  %4886 = phi i64 [ %4841, %4838 ], [ %4852, %4879 ]
  %4887 = phi i32 [ 1, %4838 ], [ %4883, %4879 ]
  br label %4888

4888:                                             ; preds = %4885, %4888
  %4889 = phi i64 [ %4894, %4888 ], [ %4886, %4885 ]
  %4890 = phi i32 [ %4893, %4888 ], [ %4887, %4885 ]
  %4891 = getelementptr inbounds i32, ptr %9, i64 %4889
  %4892 = load i32, ptr %4891, align 4, !tbaa !5
  %4893 = mul nsw i32 %4892, %4890
  %4894 = add nsw i64 %4889, -1
  %4895 = trunc i64 %4889 to i32
  %4896 = icmp sgt i32 %4895, 0
  br i1 %4896, label %4888, label %4897, !llvm.loop !745

4897:                                             ; preds = %4888, %4879
  %4898 = phi i32 [ %4883, %4879 ], [ %4893, %4888 ]
  %4899 = and i64 %4848, 4294967295
  %4900 = getelementptr inbounds i32, ptr %6, i64 %4899
  %4901 = load i32, ptr %4900, align 4, !tbaa !5
  %4902 = mul nsw i32 %4901, %4898
  %4903 = add nsw i32 %4902, %4842
  %4904 = icmp sgt i64 %4840, 2
  %4905 = add nsw i64 %4841, -1
  %4906 = add i32 %4839, 1
  br i1 %4904, label %4838, label %4907, !llvm.loop !746

4907:                                             ; preds = %4897, %4834
  %4908 = phi i32 [ %4837, %4834 ], [ %4903, %4897 ]
  %4909 = sext i32 %4908 to i64
  %4910 = getelementptr inbounds double, ptr %2, i64 %4909
  %4911 = load double, ptr %4910, align 8, !tbaa !18
  %4912 = getelementptr inbounds i32, ptr %4803, i64 %4909
  %4913 = load i32, ptr %4912, align 4, !tbaa !5
  %4914 = sitofp i32 %4913 to double
  %4915 = fmul fast double %4911, %4914
  %4916 = fadd fast double %4915, %4835
  store double %4916, ptr %4805, align 8, !tbaa !18
  %4917 = add nuw nsw i32 %4836, 1
  br i1 %4828, label %4918, label %4965

4918:                                             ; preds = %4907
  %4919 = load i32, ptr %4, align 4, !tbaa !5
  %4920 = load i32, ptr %12, align 4, !tbaa !5
  %4921 = add nsw i32 %4920, -1
  %4922 = icmp slt i32 %4919, %4921
  br i1 %4922, label %4942, label %4923

4923:                                             ; preds = %4918
  %4924 = icmp eq i32 %4919, %4921
  br i1 %4924, label %4925, label %4958

4925:                                             ; preds = %4923
  store i32 0, ptr %4, align 4, !tbaa !5
  %4926 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4926, ptr %6, align 4, !tbaa !5
  br i1 %4833, label %4965, label %4927

4927:                                             ; preds = %4925, %4952
  %4928 = phi i64 [ %4956, %4952 ], [ 1, %4925 ]
  %4929 = getelementptr inbounds i32, ptr %4, i64 %4928
  %4930 = load i32, ptr %4929, align 4, !tbaa !5
  %4931 = getelementptr inbounds i32, ptr %12, i64 %4928
  %4932 = load i32, ptr %4931, align 4, !tbaa !5
  %4933 = add nsw i32 %4932, -1
  %4934 = icmp slt i32 %4930, %4933
  br i1 %4934, label %4935, label %4950

4935:                                             ; preds = %4927
  br i1 %4922, label %4942, label %4936

4936:                                             ; preds = %4935
  %4937 = getelementptr inbounds i32, ptr %7, i64 %4928
  %4938 = load i32, ptr %4937, align 4, !tbaa !5
  %4939 = getelementptr inbounds i32, ptr %6, i64 %4928
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = add nsw i32 %4940, %4938
  store i32 %4941, ptr %4939, align 4, !tbaa !5
  br label %4960

4942:                                             ; preds = %4918, %4935
  %4943 = phi i32 [ %4930, %4935 ], [ %4919, %4918 ]
  %4944 = phi ptr [ %4929, %4935 ], [ %4, %4918 ]
  %4945 = phi i64 [ %4928, %4935 ], [ 0, %4918 ]
  %4946 = add nsw i32 %4943, 1
  store i32 %4946, ptr %4944, align 4, !tbaa !5
  %4947 = getelementptr inbounds i32, ptr %7, i64 %4945
  %4948 = load i32, ptr %4947, align 4, !tbaa !5
  %4949 = getelementptr inbounds i32, ptr %6, i64 %4945
  br label %4960

4950:                                             ; preds = %4927
  %4951 = icmp eq i32 %4930, %4933
  br i1 %4951, label %4952, label %4958

4952:                                             ; preds = %4950
  store i32 0, ptr %4929, align 4, !tbaa !5
  %4953 = getelementptr inbounds i32, ptr %8, i64 %4928
  %4954 = load i32, ptr %4953, align 4, !tbaa !5
  %4955 = getelementptr inbounds i32, ptr %6, i64 %4928
  store i32 %4954, ptr %4955, align 4, !tbaa !5
  %4956 = add nuw nsw i64 %4928, 1
  %4957 = icmp eq i64 %4956, %4831
  br i1 %4957, label %4965, label %4927, !llvm.loop !747

4958:                                             ; preds = %4923, %4950
  %4959 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

4960:                                             ; preds = %4936, %4942
  %4961 = phi ptr [ %4949, %4942 ], [ %4929, %4936 ]
  %4962 = phi i32 [ %4948, %4942 ], [ 1, %4936 ]
  %4963 = load i32, ptr %4961, align 4, !tbaa !5
  %4964 = add nsw i32 %4963, %4962
  store i32 %4964, ptr %4961, align 4, !tbaa !5
  br label %4965

4965:                                             ; preds = %4952, %4960, %4925, %4907
  %4966 = icmp eq i32 %4917, %5
  br i1 %4966, label %5404, label %4834, !llvm.loop !748

4967:                                             ; preds = %4817, %5102
  %4968 = phi double [ 0.000000e+00, %4817 ], [ %5050, %5102 ]
  %4969 = phi i32 [ 0, %4817 ], [ %5051, %5102 ]
  %4970 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4818, label %4971, label %5040

4971:                                             ; preds = %4967, %5030
  %4972 = phi i32 [ %5039, %5030 ], [ 0, %4967 ]
  %4973 = phi i64 [ %4981, %5030 ], [ %4822, %4967 ]
  %4974 = phi i64 [ %5038, %5030 ], [ %4821, %4967 ]
  %4975 = phi i32 [ %5036, %5030 ], [ %4970, %4967 ]
  %4976 = sub i32 %4820, %4972
  %4977 = tail call i32 @llvm.smin.i32(i32 %4976, i32 0)
  %4978 = sub i32 %4976, %4977
  %4979 = zext i32 %4978 to i64
  %4980 = add nuw nsw i64 %4979, 1
  %4981 = add nsw i64 %4973, -1
  %4982 = icmp ult i32 %4978, 31
  br i1 %4982, label %5018, label %4983

4983:                                             ; preds = %4971
  %4984 = and i64 %4980, 8589934560
  %4985 = sub i64 %4974, %4984
  br label %4986

4986:                                             ; preds = %4986, %4983
  %4987 = phi i64 [ 0, %4983 ], [ %5010, %4986 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5006, %4986 ]
  %4989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5007, %4986 ]
  %4990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5008, %4986 ]
  %4991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4983 ], [ %5009, %4986 ]
  %4992 = sub i64 %4974, %4987
  %4993 = getelementptr inbounds i32, ptr %11, i64 %4992
  %4994 = getelementptr inbounds i32, ptr %4993, i64 -7
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !5
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4993, i64 -15
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !5
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4993, i64 -23
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !5
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = getelementptr inbounds i32, ptr %4993, i64 -31
  %5004 = load <8 x i32>, ptr %5003, align 4, !tbaa !5
  %5005 = shufflevector <8 x i32> %5004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5006 = mul <8 x i32> %4996, %4988
  %5007 = mul <8 x i32> %4999, %4989
  %5008 = mul <8 x i32> %5002, %4990
  %5009 = mul <8 x i32> %5005, %4991
  %5010 = add nuw i64 %4987, 32
  %5011 = icmp eq i64 %5010, %4984
  br i1 %5011, label %5012, label %4986, !llvm.loop !749

5012:                                             ; preds = %4986
  %5013 = mul <8 x i32> %5007, %5006
  %5014 = mul <8 x i32> %5008, %5013
  %5015 = mul <8 x i32> %5009, %5014
  %5016 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5015)
  %5017 = icmp eq i64 %4980, %4984
  br i1 %5017, label %5030, label %5018

5018:                                             ; preds = %4971, %5012
  %5019 = phi i64 [ %4974, %4971 ], [ %4985, %5012 ]
  %5020 = phi i32 [ 1, %4971 ], [ %5016, %5012 ]
  br label %5021

5021:                                             ; preds = %5018, %5021
  %5022 = phi i64 [ %5027, %5021 ], [ %5019, %5018 ]
  %5023 = phi i32 [ %5026, %5021 ], [ %5020, %5018 ]
  %5024 = getelementptr inbounds i32, ptr %11, i64 %5022
  %5025 = load i32, ptr %5024, align 4, !tbaa !5
  %5026 = mul nsw i32 %5025, %5023
  %5027 = add nsw i64 %5022, -1
  %5028 = trunc i64 %5022 to i32
  %5029 = icmp sgt i32 %5028, 0
  br i1 %5029, label %5021, label %5030, !llvm.loop !750

5030:                                             ; preds = %5021, %5012
  %5031 = phi i32 [ %5016, %5012 ], [ %5026, %5021 ]
  %5032 = and i64 %4981, 4294967295
  %5033 = getelementptr inbounds i32, ptr %6, i64 %5032
  %5034 = load i32, ptr %5033, align 4, !tbaa !5
  %5035 = mul nsw i32 %5034, %5031
  %5036 = add nsw i32 %5035, %4975
  %5037 = icmp sgt i64 %4973, 2
  %5038 = add nsw i64 %4974, -1
  %5039 = add i32 %4972, 1
  br i1 %5037, label %4971, label %5040, !llvm.loop !751

5040:                                             ; preds = %5030, %4967
  %5041 = phi i32 [ %4970, %4967 ], [ %5036, %5030 ]
  %5042 = icmp slt i32 %5041, %5
  br i1 %5042, label %5045, label %5043

5043:                                             ; preds = %5040
  %5044 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

5045:                                             ; preds = %5040
  %5046 = sext i32 %5041 to i64
  %5047 = getelementptr inbounds i32, ptr %4803, i64 %5046
  %5048 = load i32, ptr %5047, align 4, !tbaa !5
  %5049 = sitofp i32 %5048 to double
  %5050 = fadd fast double %4968, %5049
  store double %5050, ptr %4805, align 8, !tbaa !18
  %5051 = add nuw nsw i32 %4969, 1
  br i1 %4819, label %5052, label %5102

5052:                                             ; preds = %5045
  %5053 = load i32, ptr %4, align 4, !tbaa !5
  %5054 = load i32, ptr %12, align 4, !tbaa !5
  %5055 = add nsw i32 %5054, -1
  %5056 = icmp slt i32 %5053, %5055
  br i1 %5056, label %5079, label %5057

5057:                                             ; preds = %5052
  %5058 = icmp eq i32 %5053, %5055
  br i1 %5058, label %5059, label %5095

5059:                                             ; preds = %5057
  store i32 0, ptr %4, align 4, !tbaa !5
  %5060 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5060, ptr %6, align 4, !tbaa !5
  br i1 %4824, label %5102, label %5061

5061:                                             ; preds = %5059, %5089
  %5062 = phi i64 [ %5093, %5089 ], [ 1, %5059 ]
  %5063 = getelementptr inbounds i32, ptr %4, i64 %5062
  %5064 = load i32, ptr %5063, align 4, !tbaa !5
  %5065 = getelementptr inbounds i32, ptr %12, i64 %5062
  %5066 = load i32, ptr %5065, align 4, !tbaa !5
  %5067 = add nsw i32 %5066, -1
  %5068 = icmp slt i32 %5064, %5067
  br i1 %5068, label %5069, label %5087

5069:                                             ; preds = %5061
  br i1 %5056, label %5079, label %5070

5070:                                             ; preds = %5069
  %5071 = shl i64 %5062, 32
  %5072 = add i64 %5071, -4294967296
  %5073 = ashr exact i64 %5072, 32
  %5074 = getelementptr inbounds i32, ptr %7, i64 %5073
  %5075 = load i32, ptr %5074, align 4, !tbaa !5
  %5076 = getelementptr inbounds i32, ptr %6, i64 %5062
  %5077 = load i32, ptr %5076, align 4, !tbaa !5
  %5078 = add nsw i32 %5077, %5075
  store i32 %5078, ptr %5076, align 4, !tbaa !5
  br label %5097

5079:                                             ; preds = %5052, %5069
  %5080 = phi i32 [ %5064, %5069 ], [ %5053, %5052 ]
  %5081 = phi ptr [ %5063, %5069 ], [ %4, %5052 ]
  %5082 = phi i64 [ %5062, %5069 ], [ 0, %5052 ]
  %5083 = add nsw i32 %5080, 1
  store i32 %5083, ptr %5081, align 4, !tbaa !5
  %5084 = getelementptr inbounds i32, ptr %7, i64 %5082
  %5085 = load i32, ptr %5084, align 4, !tbaa !5
  %5086 = getelementptr inbounds i32, ptr %6, i64 %5082
  br label %5097

5087:                                             ; preds = %5061
  %5088 = icmp eq i32 %5064, %5067
  br i1 %5088, label %5089, label %5095

5089:                                             ; preds = %5087
  store i32 0, ptr %5063, align 4, !tbaa !5
  %5090 = getelementptr inbounds i32, ptr %8, i64 %5062
  %5091 = load i32, ptr %5090, align 4, !tbaa !5
  %5092 = getelementptr inbounds i32, ptr %6, i64 %5062
  store i32 %5091, ptr %5092, align 4, !tbaa !5
  %5093 = add nuw nsw i64 %5062, 1
  %5094 = icmp eq i64 %5093, %4822
  br i1 %5094, label %5102, label %5061, !llvm.loop !752

5095:                                             ; preds = %5057, %5087
  %5096 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

5097:                                             ; preds = %5070, %5079
  %5098 = phi ptr [ %5086, %5079 ], [ %5063, %5070 ]
  %5099 = phi i32 [ %5085, %5079 ], [ 1, %5070 ]
  %5100 = load i32, ptr %5098, align 4, !tbaa !5
  %5101 = add nsw i32 %5100, %5099
  store i32 %5101, ptr %5098, align 4, !tbaa !5
  br label %5102

5102:                                             ; preds = %5089, %5097, %5059, %5045
  %5103 = icmp eq i32 %5051, %5
  br i1 %5103, label %5404, label %4967, !llvm.loop !753

5104:                                             ; preds = %4810
  %5105 = getelementptr inbounds i32, ptr %3, i64 %19
  %5106 = load i32, ptr %5105, align 4, !tbaa !5
  %5107 = icmp eq i32 %5106, 0
  %5108 = icmp sgt i32 %5, 0
  br i1 %5107, label %5118, label %5109

5109:                                             ; preds = %5104
  br i1 %5108, label %5110, label %5404

5110:                                             ; preds = %5109
  %5111 = icmp sgt i32 %13, 1
  %5112 = icmp sgt i32 %13, 0
  %5113 = add i32 %13, -2
  %5114 = zext i32 %5113 to i64
  %5115 = zext i32 %13 to i64
  %5116 = add nuw i32 %5, 1
  %5117 = icmp eq i32 %13, 1
  br label %5257

5118:                                             ; preds = %5104
  br i1 %5108, label %5119, label %5404

5119:                                             ; preds = %5118
  %5120 = icmp sgt i32 %13, 1
  %5121 = icmp sgt i32 %13, 0
  %5122 = add i32 %13, -2
  %5123 = zext i32 %5122 to i64
  %5124 = zext i32 %13 to i64
  %5125 = add nuw i32 %5, 1
  %5126 = icmp eq i32 %13, 1
  br label %5127

5127:                                             ; preds = %5119, %5255
  %5128 = phi double [ 0.000000e+00, %5119 ], [ %5206, %5255 ]
  %5129 = phi i32 [ 0, %5119 ], [ %5207, %5255 ]
  %5130 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5120, label %5131, label %5200

5131:                                             ; preds = %5127, %5190
  %5132 = phi i32 [ %5199, %5190 ], [ 0, %5127 ]
  %5133 = phi i64 [ %5141, %5190 ], [ %5124, %5127 ]
  %5134 = phi i64 [ %5198, %5190 ], [ %5123, %5127 ]
  %5135 = phi i32 [ %5196, %5190 ], [ %5130, %5127 ]
  %5136 = sub i32 %5122, %5132
  %5137 = tail call i32 @llvm.smin.i32(i32 %5136, i32 0)
  %5138 = sub i32 %5136, %5137
  %5139 = zext i32 %5138 to i64
  %5140 = add nuw nsw i64 %5139, 1
  %5141 = add nsw i64 %5133, -1
  %5142 = icmp ult i32 %5138, 31
  br i1 %5142, label %5178, label %5143

5143:                                             ; preds = %5131
  %5144 = and i64 %5140, 8589934560
  %5145 = sub i64 %5134, %5144
  br label %5146

5146:                                             ; preds = %5146, %5143
  %5147 = phi i64 [ 0, %5143 ], [ %5170, %5146 ]
  %5148 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5166, %5146 ]
  %5149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5167, %5146 ]
  %5150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5168, %5146 ]
  %5151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5143 ], [ %5169, %5146 ]
  %5152 = sub i64 %5134, %5147
  %5153 = getelementptr inbounds i32, ptr %9, i64 %5152
  %5154 = getelementptr inbounds i32, ptr %5153, i64 -7
  %5155 = load <8 x i32>, ptr %5154, align 4, !tbaa !5
  %5156 = shufflevector <8 x i32> %5155, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5157 = getelementptr inbounds i32, ptr %5153, i64 -15
  %5158 = load <8 x i32>, ptr %5157, align 4, !tbaa !5
  %5159 = shufflevector <8 x i32> %5158, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5160 = getelementptr inbounds i32, ptr %5153, i64 -23
  %5161 = load <8 x i32>, ptr %5160, align 4, !tbaa !5
  %5162 = shufflevector <8 x i32> %5161, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5163 = getelementptr inbounds i32, ptr %5153, i64 -31
  %5164 = load <8 x i32>, ptr %5163, align 4, !tbaa !5
  %5165 = shufflevector <8 x i32> %5164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5166 = mul <8 x i32> %5156, %5148
  %5167 = mul <8 x i32> %5159, %5149
  %5168 = mul <8 x i32> %5162, %5150
  %5169 = mul <8 x i32> %5165, %5151
  %5170 = add nuw i64 %5147, 32
  %5171 = icmp eq i64 %5170, %5144
  br i1 %5171, label %5172, label %5146, !llvm.loop !754

5172:                                             ; preds = %5146
  %5173 = mul <8 x i32> %5167, %5166
  %5174 = mul <8 x i32> %5168, %5173
  %5175 = mul <8 x i32> %5169, %5174
  %5176 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5175)
  %5177 = icmp eq i64 %5140, %5144
  br i1 %5177, label %5190, label %5178

5178:                                             ; preds = %5131, %5172
  %5179 = phi i64 [ %5134, %5131 ], [ %5145, %5172 ]
  %5180 = phi i32 [ 1, %5131 ], [ %5176, %5172 ]
  br label %5181

5181:                                             ; preds = %5178, %5181
  %5182 = phi i64 [ %5187, %5181 ], [ %5179, %5178 ]
  %5183 = phi i32 [ %5186, %5181 ], [ %5180, %5178 ]
  %5184 = getelementptr inbounds i32, ptr %9, i64 %5182
  %5185 = load i32, ptr %5184, align 4, !tbaa !5
  %5186 = mul nsw i32 %5185, %5183
  %5187 = add nsw i64 %5182, -1
  %5188 = trunc i64 %5182 to i32
  %5189 = icmp sgt i32 %5188, 0
  br i1 %5189, label %5181, label %5190, !llvm.loop !755

5190:                                             ; preds = %5181, %5172
  %5191 = phi i32 [ %5176, %5172 ], [ %5186, %5181 ]
  %5192 = and i64 %5141, 4294967295
  %5193 = getelementptr inbounds i32, ptr %6, i64 %5192
  %5194 = load i32, ptr %5193, align 4, !tbaa !5
  %5195 = mul nsw i32 %5194, %5191
  %5196 = add nsw i32 %5195, %5135
  %5197 = icmp sgt i64 %5133, 2
  %5198 = add nsw i64 %5134, -1
  %5199 = add i32 %5132, 1
  br i1 %5197, label %5131, label %5200, !llvm.loop !756

5200:                                             ; preds = %5190, %5127
  %5201 = phi i32 [ %5130, %5127 ], [ %5196, %5190 ]
  %5202 = sext i32 %5201 to i64
  %5203 = getelementptr inbounds i32, ptr %4803, i64 %5202
  %5204 = load i32, ptr %5203, align 4, !tbaa !5
  %5205 = sitofp i32 %5204 to double
  %5206 = fadd fast double %5128, %5205
  %5207 = add nuw nsw i32 %5129, 1
  br i1 %5121, label %5208, label %5255

5208:                                             ; preds = %5200
  %5209 = load i32, ptr %4, align 4, !tbaa !5
  %5210 = load i32, ptr %12, align 4, !tbaa !5
  %5211 = add nsw i32 %5210, -1
  %5212 = icmp slt i32 %5209, %5211
  br i1 %5212, label %5232, label %5213

5213:                                             ; preds = %5208
  %5214 = icmp eq i32 %5209, %5211
  br i1 %5214, label %5215, label %5248

5215:                                             ; preds = %5213
  store i32 0, ptr %4, align 4, !tbaa !5
  %5216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5216, ptr %6, align 4, !tbaa !5
  br i1 %5126, label %5255, label %5217

5217:                                             ; preds = %5215, %5242
  %5218 = phi i64 [ %5246, %5242 ], [ 1, %5215 ]
  %5219 = getelementptr inbounds i32, ptr %4, i64 %5218
  %5220 = load i32, ptr %5219, align 4, !tbaa !5
  %5221 = getelementptr inbounds i32, ptr %12, i64 %5218
  %5222 = load i32, ptr %5221, align 4, !tbaa !5
  %5223 = add nsw i32 %5222, -1
  %5224 = icmp slt i32 %5220, %5223
  br i1 %5224, label %5225, label %5240

5225:                                             ; preds = %5217
  br i1 %5212, label %5232, label %5226

5226:                                             ; preds = %5225
  %5227 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5228 = load i32, ptr %5227, align 4, !tbaa !5
  %5229 = getelementptr inbounds i32, ptr %6, i64 %5218
  %5230 = load i32, ptr %5229, align 4, !tbaa !5
  %5231 = add nsw i32 %5230, %5228
  store i32 %5231, ptr %5229, align 4, !tbaa !5
  br label %5250

5232:                                             ; preds = %5208, %5225
  %5233 = phi i32 [ %5220, %5225 ], [ %5209, %5208 ]
  %5234 = phi ptr [ %5219, %5225 ], [ %4, %5208 ]
  %5235 = phi i64 [ %5218, %5225 ], [ 0, %5208 ]
  %5236 = add nsw i32 %5233, 1
  store i32 %5236, ptr %5234, align 4, !tbaa !5
  %5237 = getelementptr inbounds i32, ptr %7, i64 %5235
  %5238 = load i32, ptr %5237, align 4, !tbaa !5
  %5239 = getelementptr inbounds i32, ptr %6, i64 %5235
  br label %5250

5240:                                             ; preds = %5217
  %5241 = icmp eq i32 %5220, %5223
  br i1 %5241, label %5242, label %5248

5242:                                             ; preds = %5240
  store i32 0, ptr %5219, align 4, !tbaa !5
  %5243 = getelementptr inbounds i32, ptr %8, i64 %5218
  %5244 = load i32, ptr %5243, align 4, !tbaa !5
  %5245 = getelementptr inbounds i32, ptr %6, i64 %5218
  store i32 %5244, ptr %5245, align 4, !tbaa !5
  %5246 = add nuw nsw i64 %5218, 1
  %5247 = icmp eq i64 %5246, %5124
  br i1 %5247, label %5255, label %5217, !llvm.loop !757

5248:                                             ; preds = %5213, %5240
  store double %5206, ptr %4805, align 8, !tbaa !18
  %5249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

5250:                                             ; preds = %5226, %5232
  %5251 = phi ptr [ %5239, %5232 ], [ %5219, %5226 ]
  %5252 = phi i32 [ %5238, %5232 ], [ 1, %5226 ]
  %5253 = load i32, ptr %5251, align 4, !tbaa !5
  %5254 = add nsw i32 %5253, %5252
  store i32 %5254, ptr %5251, align 4, !tbaa !5
  br label %5255

5255:                                             ; preds = %5242, %5250, %5215, %5200
  %5256 = icmp eq i32 %5207, %5
  br i1 %5256, label %5403, label %5127, !llvm.loop !758

5257:                                             ; preds = %5110, %5392
  %5258 = phi double [ 0.000000e+00, %5110 ], [ %5340, %5392 ]
  %5259 = phi i32 [ 0, %5110 ], [ %5341, %5392 ]
  %5260 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5111, label %5261, label %5330

5261:                                             ; preds = %5257, %5320
  %5262 = phi i32 [ %5329, %5320 ], [ 0, %5257 ]
  %5263 = phi i64 [ %5271, %5320 ], [ %5115, %5257 ]
  %5264 = phi i64 [ %5328, %5320 ], [ %5114, %5257 ]
  %5265 = phi i32 [ %5326, %5320 ], [ %5260, %5257 ]
  %5266 = sub i32 %5113, %5262
  %5267 = tail call i32 @llvm.smin.i32(i32 %5266, i32 0)
  %5268 = sub i32 %5266, %5267
  %5269 = zext i32 %5268 to i64
  %5270 = add nuw nsw i64 %5269, 1
  %5271 = add nsw i64 %5263, -1
  %5272 = icmp ult i32 %5268, 31
  br i1 %5272, label %5308, label %5273

5273:                                             ; preds = %5261
  %5274 = and i64 %5270, 8589934560
  %5275 = sub i64 %5264, %5274
  br label %5276

5276:                                             ; preds = %5276, %5273
  %5277 = phi i64 [ 0, %5273 ], [ %5300, %5276 ]
  %5278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5296, %5276 ]
  %5279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5297, %5276 ]
  %5280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5298, %5276 ]
  %5281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5299, %5276 ]
  %5282 = sub i64 %5264, %5277
  %5283 = getelementptr inbounds i32, ptr %11, i64 %5282
  %5284 = getelementptr inbounds i32, ptr %5283, i64 -7
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !5
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = getelementptr inbounds i32, ptr %5283, i64 -15
  %5288 = load <8 x i32>, ptr %5287, align 4, !tbaa !5
  %5289 = shufflevector <8 x i32> %5288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5290 = getelementptr inbounds i32, ptr %5283, i64 -23
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !5
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = getelementptr inbounds i32, ptr %5283, i64 -31
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !5
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = mul <8 x i32> %5286, %5278
  %5297 = mul <8 x i32> %5289, %5279
  %5298 = mul <8 x i32> %5292, %5280
  %5299 = mul <8 x i32> %5295, %5281
  %5300 = add nuw i64 %5277, 32
  %5301 = icmp eq i64 %5300, %5274
  br i1 %5301, label %5302, label %5276, !llvm.loop !759

5302:                                             ; preds = %5276
  %5303 = mul <8 x i32> %5297, %5296
  %5304 = mul <8 x i32> %5298, %5303
  %5305 = mul <8 x i32> %5299, %5304
  %5306 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5305)
  %5307 = icmp eq i64 %5270, %5274
  br i1 %5307, label %5320, label %5308

5308:                                             ; preds = %5261, %5302
  %5309 = phi i64 [ %5264, %5261 ], [ %5275, %5302 ]
  %5310 = phi i32 [ 1, %5261 ], [ %5306, %5302 ]
  br label %5311

5311:                                             ; preds = %5308, %5311
  %5312 = phi i64 [ %5317, %5311 ], [ %5309, %5308 ]
  %5313 = phi i32 [ %5316, %5311 ], [ %5310, %5308 ]
  %5314 = getelementptr inbounds i32, ptr %11, i64 %5312
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = mul nsw i32 %5315, %5313
  %5317 = add nsw i64 %5312, -1
  %5318 = trunc i64 %5312 to i32
  %5319 = icmp sgt i32 %5318, 0
  br i1 %5319, label %5311, label %5320, !llvm.loop !760

5320:                                             ; preds = %5311, %5302
  %5321 = phi i32 [ %5306, %5302 ], [ %5316, %5311 ]
  %5322 = and i64 %5271, 4294967295
  %5323 = getelementptr inbounds i32, ptr %6, i64 %5322
  %5324 = load i32, ptr %5323, align 4, !tbaa !5
  %5325 = mul nsw i32 %5324, %5321
  %5326 = add nsw i32 %5325, %5265
  %5327 = icmp sgt i64 %5263, 2
  %5328 = add nsw i64 %5264, -1
  %5329 = add i32 %5262, 1
  br i1 %5327, label %5261, label %5330, !llvm.loop !761

5330:                                             ; preds = %5320, %5257
  %5331 = phi i32 [ %5260, %5257 ], [ %5326, %5320 ]
  %5332 = icmp slt i32 %5331, %5
  br i1 %5332, label %5335, label %5333

5333:                                             ; preds = %5330
  %5334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5404

5335:                                             ; preds = %5330
  %5336 = sext i32 %5331 to i64
  %5337 = getelementptr inbounds i32, ptr %4803, i64 %5336
  %5338 = load i32, ptr %5337, align 4, !tbaa !5
  %5339 = sitofp i32 %5338 to double
  %5340 = fadd fast double %5258, %5339
  store double %5340, ptr %4805, align 8, !tbaa !18
  %5341 = add nuw nsw i32 %5259, 1
  br i1 %5112, label %5342, label %5392

5342:                                             ; preds = %5335
  %5343 = load i32, ptr %4, align 4, !tbaa !5
  %5344 = load i32, ptr %12, align 4, !tbaa !5
  %5345 = add nsw i32 %5344, -1
  %5346 = icmp slt i32 %5343, %5345
  br i1 %5346, label %5369, label %5347

5347:                                             ; preds = %5342
  %5348 = icmp eq i32 %5343, %5345
  br i1 %5348, label %5349, label %5385

5349:                                             ; preds = %5347
  store i32 0, ptr %4, align 4, !tbaa !5
  %5350 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5350, ptr %6, align 4, !tbaa !5
  br i1 %5117, label %5392, label %5351

5351:                                             ; preds = %5349, %5379
  %5352 = phi i64 [ %5383, %5379 ], [ 1, %5349 ]
  %5353 = getelementptr inbounds i32, ptr %4, i64 %5352
  %5354 = load i32, ptr %5353, align 4, !tbaa !5
  %5355 = getelementptr inbounds i32, ptr %12, i64 %5352
  %5356 = load i32, ptr %5355, align 4, !tbaa !5
  %5357 = add nsw i32 %5356, -1
  %5358 = icmp slt i32 %5354, %5357
  br i1 %5358, label %5359, label %5377

5359:                                             ; preds = %5351
  br i1 %5346, label %5369, label %5360

5360:                                             ; preds = %5359
  %5361 = shl i64 %5352, 32
  %5362 = add i64 %5361, -4294967296
  %5363 = ashr exact i64 %5362, 32
  %5364 = getelementptr inbounds i32, ptr %7, i64 %5363
  %5365 = load i32, ptr %5364, align 4, !tbaa !5
  %5366 = getelementptr inbounds i32, ptr %6, i64 %5352
  %5367 = load i32, ptr %5366, align 4, !tbaa !5
  %5368 = add nsw i32 %5367, %5365
  store i32 %5368, ptr %5366, align 4, !tbaa !5
  br label %5387

5369:                                             ; preds = %5342, %5359
  %5370 = phi i32 [ %5354, %5359 ], [ %5343, %5342 ]
  %5371 = phi ptr [ %5353, %5359 ], [ %4, %5342 ]
  %5372 = phi i64 [ %5352, %5359 ], [ 0, %5342 ]
  %5373 = add nsw i32 %5370, 1
  store i32 %5373, ptr %5371, align 4, !tbaa !5
  %5374 = getelementptr inbounds i32, ptr %7, i64 %5372
  %5375 = load i32, ptr %5374, align 4, !tbaa !5
  %5376 = getelementptr inbounds i32, ptr %6, i64 %5372
  br label %5387

5377:                                             ; preds = %5351
  %5378 = icmp eq i32 %5354, %5357
  br i1 %5378, label %5379, label %5385

5379:                                             ; preds = %5377
  store i32 0, ptr %5353, align 4, !tbaa !5
  %5380 = getelementptr inbounds i32, ptr %8, i64 %5352
  %5381 = load i32, ptr %5380, align 4, !tbaa !5
  %5382 = getelementptr inbounds i32, ptr %6, i64 %5352
  store i32 %5381, ptr %5382, align 4, !tbaa !5
  %5383 = add nuw nsw i64 %5352, 1
  %5384 = icmp eq i64 %5383, %5115
  br i1 %5384, label %5392, label %5351, !llvm.loop !762

5385:                                             ; preds = %5347, %5377
  %5386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5404

5387:                                             ; preds = %5360, %5369
  %5388 = phi ptr [ %5376, %5369 ], [ %5353, %5360 ]
  %5389 = phi i32 [ %5375, %5369 ], [ 1, %5360 ]
  %5390 = load i32, ptr %5388, align 4, !tbaa !5
  %5391 = add nsw i32 %5390, %5389
  store i32 %5391, ptr %5388, align 4, !tbaa !5
  br label %5392

5392:                                             ; preds = %5379, %5387, %5349, %5335
  %5393 = icmp eq i32 %5341, %5
  br i1 %5393, label %5404, label %5257, !llvm.loop !763

5394:                                             ; preds = %4810
  %5395 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1040, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5404

5396:                                             ; preds = %1980
  store i16 %1931, ptr %1816, align 2, !tbaa !78
  br label %5404

5397:                                             ; preds = %2275
  store i16 %2226, ptr %1816, align 2, !tbaa !78
  br label %5404

5398:                                             ; preds = %3175
  store i64 %3126, ptr %3013, align 8, !tbaa !120
  br label %5404

5399:                                             ; preds = %3467
  store i64 %3418, ptr %3013, align 8, !tbaa !120
  br label %5404

5400:                                             ; preds = %4062
  store double %4013, ptr %3612, align 8, !tbaa !18
  br label %5404

5401:                                             ; preds = %4370
  store float %4321, ptr %4207, align 4, !tbaa !162
  br label %5404

5402:                                             ; preds = %4660
  store float %4611, ptr %4207, align 4, !tbaa !162
  br label %5404

5403:                                             ; preds = %5255
  store double %5206, ptr %4805, align 8, !tbaa !18
  br label %5404

5404:                                             ; preds = %5392, %5102, %4965, %4797, %4507, %4199, %3909, %3772, %3604, %3314, %3005, %2869, %2717, %2581, %2412, %2122, %1808, %1671, %1518, %1381, %1209, %1073, %921, %785, %616, %479, %326, %189, %5109, %5118, %5403, %4816, %4825, %4514, %4523, %5402, %4218, %4227, %5401, %3916, %3925, %5400, %3623, %3632, %3321, %3330, %5399, %3024, %3033, %5398, %2724, %2733, %2430, %2439, %2129, %2138, %5397, %1827, %1836, %5396, %1525, %1534, %1228, %1237, %928, %937, %634, %643, %333, %342, %37, %46, %4807, %5394, %4209, %4799, %3614, %4201, %3015, %3606, %2422, %3007, %1818, %2414, %1219, %1810, %626, %1211, %28, %618, %18, %4958, %5043, %5095, %5248, %5333, %5385, %4363, %4448, %4500, %4653, %4738, %4790, %3765, %3850, %3902, %4055, %4140, %4192, %3168, %3253, %3307, %3460, %3545, %3597, %2574, %2658, %2710, %2862, %2946, %2998, %1973, %2058, %2115, %2268, %2353, %2405, %1374, %1458, %1511, %1664, %1748, %1801, %778, %862, %914, %1066, %1150, %1202, %182, %266, %319, %472, %556, %609
  %5405 = phi i32 [ -1, %609 ], [ -1, %556 ], [ -1, %472 ], [ -1, %319 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1202 ], [ -1, %1150 ], [ -1, %1066 ], [ -1, %914 ], [ -1, %862 ], [ -1, %778 ], [ -1, %1801 ], [ -1, %1748 ], [ -1, %1664 ], [ -1, %1511 ], [ -1, %1458 ], [ -1, %1374 ], [ -1, %2405 ], [ -1, %2353 ], [ -1, %2268 ], [ -1, %2115 ], [ -1, %2058 ], [ -1, %1973 ], [ -1, %2998 ], [ -1, %2946 ], [ -1, %2862 ], [ -1, %2710 ], [ -1, %2658 ], [ -1, %2574 ], [ -1, %3597 ], [ -1, %3545 ], [ -1, %3460 ], [ -1, %3307 ], [ -1, %3253 ], [ -1, %3168 ], [ -1, %4192 ], [ -1, %4140 ], [ -1, %4055 ], [ -1, %3902 ], [ -1, %3850 ], [ -1, %3765 ], [ -1, %4790 ], [ -1, %4738 ], [ -1, %4653 ], [ -1, %4500 ], [ -1, %4448 ], [ -1, %4363 ], [ -1, %5385 ], [ -1, %5333 ], [ -1, %5248 ], [ -1, %5095 ], [ -1, %5043 ], [ -1, %4958 ], [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1211 ], [ 1, %626 ], [ 1, %1810 ], [ 1, %1219 ], [ 1, %2414 ], [ 1, %1818 ], [ 1, %3007 ], [ 1, %2422 ], [ 1, %3606 ], [ 1, %3015 ], [ 1, %4201 ], [ 1, %3614 ], [ 1, %4799 ], [ 1, %4209 ], [ 1, %5394 ], [ 1, %4807 ], [ 1, %46 ], [ 1, %37 ], [ 1, %342 ], [ 1, %333 ], [ 1, %643 ], [ 1, %634 ], [ 1, %937 ], [ 1, %928 ], [ 1, %1237 ], [ 1, %1228 ], [ 1, %1534 ], [ 1, %1525 ], [ %1843, %5396 ], [ 1, %1836 ], [ 1, %1827 ], [ %2145, %5397 ], [ 1, %2138 ], [ 1, %2129 ], [ 1, %2439 ], [ 1, %2430 ], [ 1, %2733 ], [ 1, %2724 ], [ %3040, %5398 ], [ 1, %3033 ], [ 1, %3024 ], [ %3337, %5399 ], [ 1, %3330 ], [ 1, %3321 ], [ 1, %3632 ], [ 1, %3623 ], [ %3932, %5400 ], [ 1, %3925 ], [ 1, %3916 ], [ %4234, %5401 ], [ 1, %4227 ], [ 1, %4218 ], [ %4530, %5402 ], [ 1, %4523 ], [ 1, %4514 ], [ 1, %4825 ], [ 1, %4816 ], [ %5125, %5403 ], [ 1, %5118 ], [ 1, %5109 ], [ %53, %189 ], [ %44, %326 ], [ %349, %479 ], [ %340, %616 ], [ %650, %785 ], [ %641, %921 ], [ %944, %1073 ], [ %935, %1209 ], [ %1244, %1381 ], [ %1235, %1518 ], [ %1541, %1671 ], [ %1532, %1808 ], [ %1834, %2122 ], [ %2136, %2412 ], [ %2446, %2581 ], [ %2437, %2717 ], [ %2740, %2869 ], [ %2731, %3005 ], [ %3031, %3314 ], [ %3328, %3604 ], [ %3639, %3772 ], [ %3630, %3909 ], [ %3923, %4199 ], [ %4225, %4507 ], [ %4521, %4797 ], [ %4832, %4965 ], [ %4823, %5102 ], [ %5116, %5392 ]
  ret i32 %5405
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5411 [
    i32 101, label %22
    i32 102, label %621
    i32 103, label %1219
    i32 104, label %1819
    i32 105, label %2423
    i32 106, label %3021
    i32 107, label %3617
    i32 108, label %4212
    i32 109, label %4810
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load i64, ptr %24, align 8, !tbaa !120
  %30 = trunc i64 %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5411

31:                                               ; preds = %22
  switch i32 %1, label %619 [
    i32 1, label %32
    i32 0, label %329
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5411

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %192

46:                                               ; preds = %32
  br i1 %36, label %47, label %5411

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %190
  %56 = phi i32 [ 0, %47 ], [ %142, %190 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !764

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !765

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !766

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds i64, ptr %24, i64 %129
  %133 = load i64, ptr %132, align 8, !tbaa !120
  %134 = trunc i64 %133 to i32
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = and i32 %134, 255
  %138 = sitofp i32 %137 to double
  %139 = fmul fast double %131, %138
  %140 = fadd fast double %139, %136
  %141 = fptoui double %140 to i8
  store i8 %141, ptr %26, align 1, !tbaa !11
  %142 = add nuw nsw i32 %56, 1
  br i1 %49, label %143, label %190

143:                                              ; preds = %127
  %144 = load i32, ptr %4, align 4, !tbaa !5
  %145 = load i32, ptr %12, align 4, !tbaa !5
  %146 = add nsw i32 %145, -1
  %147 = icmp slt i32 %144, %146
  br i1 %147, label %167, label %148

148:                                              ; preds = %143
  %149 = icmp eq i32 %144, %146
  br i1 %149, label %150, label %183

150:                                              ; preds = %148
  store i32 0, ptr %4, align 4, !tbaa !5
  %151 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %151, ptr %6, align 4, !tbaa !5
  br i1 %54, label %190, label %152

152:                                              ; preds = %150, %177
  %153 = phi i64 [ %181, %177 ], [ 1, %150 ]
  %154 = getelementptr inbounds i32, ptr %4, i64 %153
  %155 = load i32, ptr %154, align 4, !tbaa !5
  %156 = getelementptr inbounds i32, ptr %12, i64 %153
  %157 = load i32, ptr %156, align 4, !tbaa !5
  %158 = add nsw i32 %157, -1
  %159 = icmp slt i32 %155, %158
  br i1 %159, label %160, label %175

160:                                              ; preds = %152
  br i1 %147, label %167, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds i32, ptr %7, i64 %153
  %163 = load i32, ptr %162, align 4, !tbaa !5
  %164 = getelementptr inbounds i32, ptr %6, i64 %153
  %165 = load i32, ptr %164, align 4, !tbaa !5
  %166 = add nsw i32 %165, %163
  store i32 %166, ptr %164, align 4, !tbaa !5
  br label %185

167:                                              ; preds = %143, %160
  %168 = phi i32 [ %155, %160 ], [ %144, %143 ]
  %169 = phi ptr [ %154, %160 ], [ %4, %143 ]
  %170 = phi i64 [ %153, %160 ], [ 0, %143 ]
  %171 = add nsw i32 %168, 1
  store i32 %171, ptr %169, align 4, !tbaa !5
  %172 = getelementptr inbounds i32, ptr %7, i64 %170
  %173 = load i32, ptr %172, align 4, !tbaa !5
  %174 = getelementptr inbounds i32, ptr %6, i64 %170
  br label %185

175:                                              ; preds = %152
  %176 = icmp eq i32 %155, %158
  br i1 %176, label %177, label %183

177:                                              ; preds = %175
  store i32 0, ptr %154, align 4, !tbaa !5
  %178 = getelementptr inbounds i32, ptr %8, i64 %153
  %179 = load i32, ptr %178, align 4, !tbaa !5
  %180 = getelementptr inbounds i32, ptr %6, i64 %153
  store i32 %179, ptr %180, align 4, !tbaa !5
  %181 = add nuw nsw i64 %153, 1
  %182 = icmp eq i64 %181, %52
  br i1 %182, label %190, label %152, !llvm.loop !767

183:                                              ; preds = %148, %175
  %184 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

185:                                              ; preds = %161, %167
  %186 = phi ptr [ %174, %167 ], [ %154, %161 ]
  %187 = phi i32 [ %173, %167 ], [ 1, %161 ]
  %188 = load i32, ptr %186, align 4, !tbaa !5
  %189 = add nsw i32 %188, %187
  store i32 %189, ptr %186, align 4, !tbaa !5
  br label %190

190:                                              ; preds = %177, %185, %150, %127
  %191 = icmp eq i32 %142, %5
  br i1 %191, label %5411, label %55, !llvm.loop !768

192:                                              ; preds = %38, %327
  %193 = phi i32 [ 0, %38 ], [ %276, %327 ]
  %194 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %195, label %264

195:                                              ; preds = %192, %254
  %196 = phi i32 [ %263, %254 ], [ 0, %192 ]
  %197 = phi i64 [ %205, %254 ], [ %43, %192 ]
  %198 = phi i64 [ %262, %254 ], [ %42, %192 ]
  %199 = phi i32 [ %260, %254 ], [ %194, %192 ]
  %200 = sub i32 %41, %196
  %201 = tail call i32 @llvm.smin.i32(i32 %200, i32 0)
  %202 = sub i32 %200, %201
  %203 = zext i32 %202 to i64
  %204 = add nuw nsw i64 %203, 1
  %205 = add nsw i64 %197, -1
  %206 = icmp ult i32 %202, 31
  br i1 %206, label %242, label %207

207:                                              ; preds = %195
  %208 = and i64 %204, 8589934560
  %209 = sub i64 %198, %208
  br label %210

210:                                              ; preds = %210, %207
  %211 = phi i64 [ 0, %207 ], [ %234, %210 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %230, %210 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %231, %210 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %232, %210 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %207 ], [ %233, %210 ]
  %216 = sub i64 %198, %211
  %217 = getelementptr inbounds i32, ptr %11, i64 %216
  %218 = getelementptr inbounds i32, ptr %217, i64 -7
  %219 = load <8 x i32>, ptr %218, align 4, !tbaa !5
  %220 = shufflevector <8 x i32> %219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %221 = getelementptr inbounds i32, ptr %217, i64 -15
  %222 = load <8 x i32>, ptr %221, align 4, !tbaa !5
  %223 = shufflevector <8 x i32> %222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %224 = getelementptr inbounds i32, ptr %217, i64 -23
  %225 = load <8 x i32>, ptr %224, align 4, !tbaa !5
  %226 = shufflevector <8 x i32> %225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %227 = getelementptr inbounds i32, ptr %217, i64 -31
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !5
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = mul <8 x i32> %220, %212
  %231 = mul <8 x i32> %223, %213
  %232 = mul <8 x i32> %226, %214
  %233 = mul <8 x i32> %229, %215
  %234 = add nuw i64 %211, 32
  %235 = icmp eq i64 %234, %208
  br i1 %235, label %236, label %210, !llvm.loop !769

236:                                              ; preds = %210
  %237 = mul <8 x i32> %231, %230
  %238 = mul <8 x i32> %232, %237
  %239 = mul <8 x i32> %233, %238
  %240 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %239)
  %241 = icmp eq i64 %204, %208
  br i1 %241, label %254, label %242

242:                                              ; preds = %195, %236
  %243 = phi i64 [ %198, %195 ], [ %209, %236 ]
  %244 = phi i32 [ 1, %195 ], [ %240, %236 ]
  br label %245

245:                                              ; preds = %242, %245
  %246 = phi i64 [ %251, %245 ], [ %243, %242 ]
  %247 = phi i32 [ %250, %245 ], [ %244, %242 ]
  %248 = getelementptr inbounds i32, ptr %11, i64 %246
  %249 = load i32, ptr %248, align 4, !tbaa !5
  %250 = mul nsw i32 %249, %247
  %251 = add nsw i64 %246, -1
  %252 = trunc i64 %246 to i32
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %245, label %254, !llvm.loop !770

254:                                              ; preds = %245, %236
  %255 = phi i32 [ %240, %236 ], [ %250, %245 ]
  %256 = and i64 %205, 4294967295
  %257 = getelementptr inbounds i32, ptr %6, i64 %256
  %258 = load i32, ptr %257, align 4, !tbaa !5
  %259 = mul nsw i32 %258, %255
  %260 = add nsw i32 %259, %199
  %261 = icmp sgt i64 %197, 2
  %262 = add nsw i64 %198, -1
  %263 = add i32 %196, 1
  br i1 %261, label %195, label %264, !llvm.loop !771

264:                                              ; preds = %254, %192
  %265 = phi i32 [ %194, %192 ], [ %260, %254 ]
  %266 = icmp slt i32 %265, %5
  br i1 %266, label %269, label %267

267:                                              ; preds = %264
  %268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

269:                                              ; preds = %264
  %270 = sext i32 %265 to i64
  %271 = getelementptr inbounds i64, ptr %24, i64 %270
  %272 = load i64, ptr %271, align 8, !tbaa !120
  %273 = load i8, ptr %26, align 1, !tbaa !11
  %274 = trunc i64 %272 to i8
  %275 = add i8 %273, %274
  store i8 %275, ptr %26, align 1, !tbaa !11
  %276 = add nuw nsw i32 %193, 1
  br i1 %40, label %277, label %327

277:                                              ; preds = %269
  %278 = load i32, ptr %4, align 4, !tbaa !5
  %279 = load i32, ptr %12, align 4, !tbaa !5
  %280 = add nsw i32 %279, -1
  %281 = icmp slt i32 %278, %280
  br i1 %281, label %304, label %282

282:                                              ; preds = %277
  %283 = icmp eq i32 %278, %280
  br i1 %283, label %284, label %320

284:                                              ; preds = %282
  store i32 0, ptr %4, align 4, !tbaa !5
  %285 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %285, ptr %6, align 4, !tbaa !5
  br i1 %45, label %327, label %286

286:                                              ; preds = %284, %314
  %287 = phi i64 [ %318, %314 ], [ 1, %284 ]
  %288 = getelementptr inbounds i32, ptr %4, i64 %287
  %289 = load i32, ptr %288, align 4, !tbaa !5
  %290 = getelementptr inbounds i32, ptr %12, i64 %287
  %291 = load i32, ptr %290, align 4, !tbaa !5
  %292 = add nsw i32 %291, -1
  %293 = icmp slt i32 %289, %292
  br i1 %293, label %294, label %312

294:                                              ; preds = %286
  br i1 %281, label %304, label %295

295:                                              ; preds = %294
  %296 = shl i64 %287, 32
  %297 = add i64 %296, -4294967296
  %298 = ashr exact i64 %297, 32
  %299 = getelementptr inbounds i32, ptr %7, i64 %298
  %300 = load i32, ptr %299, align 4, !tbaa !5
  %301 = getelementptr inbounds i32, ptr %6, i64 %287
  %302 = load i32, ptr %301, align 4, !tbaa !5
  %303 = add nsw i32 %302, %300
  store i32 %303, ptr %301, align 4, !tbaa !5
  br label %322

304:                                              ; preds = %277, %294
  %305 = phi i32 [ %289, %294 ], [ %278, %277 ]
  %306 = phi ptr [ %288, %294 ], [ %4, %277 ]
  %307 = phi i64 [ %287, %294 ], [ 0, %277 ]
  %308 = add nsw i32 %305, 1
  store i32 %308, ptr %306, align 4, !tbaa !5
  %309 = getelementptr inbounds i32, ptr %7, i64 %307
  %310 = load i32, ptr %309, align 4, !tbaa !5
  %311 = getelementptr inbounds i32, ptr %6, i64 %307
  br label %322

312:                                              ; preds = %286
  %313 = icmp eq i32 %289, %292
  br i1 %313, label %314, label %320

314:                                              ; preds = %312
  store i32 0, ptr %288, align 4, !tbaa !5
  %315 = getelementptr inbounds i32, ptr %8, i64 %287
  %316 = load i32, ptr %315, align 4, !tbaa !5
  %317 = getelementptr inbounds i32, ptr %6, i64 %287
  store i32 %316, ptr %317, align 4, !tbaa !5
  %318 = add nuw nsw i64 %287, 1
  %319 = icmp eq i64 %318, %43
  br i1 %319, label %327, label %286, !llvm.loop !772

320:                                              ; preds = %282, %312
  %321 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

322:                                              ; preds = %295, %304
  %323 = phi ptr [ %311, %304 ], [ %288, %295 ]
  %324 = phi i32 [ %310, %304 ], [ 1, %295 ]
  %325 = load i32, ptr %323, align 4, !tbaa !5
  %326 = add nsw i32 %325, %324
  store i32 %326, ptr %323, align 4, !tbaa !5
  br label %327

327:                                              ; preds = %314, %322, %284, %269
  %328 = icmp eq i32 %276, %5
  br i1 %328, label %5411, label %192, !llvm.loop !773

329:                                              ; preds = %31
  %330 = getelementptr inbounds i32, ptr %3, i64 %19
  %331 = load i32, ptr %330, align 4, !tbaa !5
  %332 = icmp eq i32 %331, 0
  %333 = icmp sgt i32 %5, 0
  br i1 %332, label %343, label %334

334:                                              ; preds = %329
  br i1 %333, label %335, label %5411

335:                                              ; preds = %334
  %336 = icmp sgt i32 %13, 1
  %337 = icmp sgt i32 %13, 0
  %338 = add i32 %13, -2
  %339 = zext i32 %338 to i64
  %340 = zext i32 %13 to i64
  %341 = add nuw i32 %5, 1
  %342 = icmp eq i32 %13, 1
  br label %482

343:                                              ; preds = %329
  br i1 %333, label %344, label %5411

344:                                              ; preds = %343
  %345 = icmp sgt i32 %13, 1
  %346 = icmp sgt i32 %13, 0
  %347 = add i32 %13, -2
  %348 = zext i32 %347 to i64
  %349 = zext i32 %13 to i64
  %350 = add nuw i32 %5, 1
  %351 = icmp eq i32 %13, 1
  br label %352

352:                                              ; preds = %344, %480
  %353 = phi i32 [ 0, %344 ], [ %432, %480 ]
  %354 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %345, label %355, label %424

355:                                              ; preds = %352, %414
  %356 = phi i32 [ %423, %414 ], [ 0, %352 ]
  %357 = phi i64 [ %365, %414 ], [ %349, %352 ]
  %358 = phi i64 [ %422, %414 ], [ %348, %352 ]
  %359 = phi i32 [ %420, %414 ], [ %354, %352 ]
  %360 = sub i32 %347, %356
  %361 = tail call i32 @llvm.smin.i32(i32 %360, i32 0)
  %362 = sub i32 %360, %361
  %363 = zext i32 %362 to i64
  %364 = add nuw nsw i64 %363, 1
  %365 = add nsw i64 %357, -1
  %366 = icmp ult i32 %362, 31
  br i1 %366, label %402, label %367

367:                                              ; preds = %355
  %368 = and i64 %364, 8589934560
  %369 = sub i64 %358, %368
  br label %370

370:                                              ; preds = %370, %367
  %371 = phi i64 [ 0, %367 ], [ %394, %370 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %390, %370 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %391, %370 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %392, %370 ]
  %375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %367 ], [ %393, %370 ]
  %376 = sub i64 %358, %371
  %377 = getelementptr inbounds i32, ptr %9, i64 %376
  %378 = getelementptr inbounds i32, ptr %377, i64 -7
  %379 = load <8 x i32>, ptr %378, align 4, !tbaa !5
  %380 = shufflevector <8 x i32> %379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %381 = getelementptr inbounds i32, ptr %377, i64 -15
  %382 = load <8 x i32>, ptr %381, align 4, !tbaa !5
  %383 = shufflevector <8 x i32> %382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %384 = getelementptr inbounds i32, ptr %377, i64 -23
  %385 = load <8 x i32>, ptr %384, align 4, !tbaa !5
  %386 = shufflevector <8 x i32> %385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %387 = getelementptr inbounds i32, ptr %377, i64 -31
  %388 = load <8 x i32>, ptr %387, align 4, !tbaa !5
  %389 = shufflevector <8 x i32> %388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %390 = mul <8 x i32> %380, %372
  %391 = mul <8 x i32> %383, %373
  %392 = mul <8 x i32> %386, %374
  %393 = mul <8 x i32> %389, %375
  %394 = add nuw i64 %371, 32
  %395 = icmp eq i64 %394, %368
  br i1 %395, label %396, label %370, !llvm.loop !774

396:                                              ; preds = %370
  %397 = mul <8 x i32> %391, %390
  %398 = mul <8 x i32> %392, %397
  %399 = mul <8 x i32> %393, %398
  %400 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %399)
  %401 = icmp eq i64 %364, %368
  br i1 %401, label %414, label %402

402:                                              ; preds = %355, %396
  %403 = phi i64 [ %358, %355 ], [ %369, %396 ]
  %404 = phi i32 [ 1, %355 ], [ %400, %396 ]
  br label %405

405:                                              ; preds = %402, %405
  %406 = phi i64 [ %411, %405 ], [ %403, %402 ]
  %407 = phi i32 [ %410, %405 ], [ %404, %402 ]
  %408 = getelementptr inbounds i32, ptr %9, i64 %406
  %409 = load i32, ptr %408, align 4, !tbaa !5
  %410 = mul nsw i32 %409, %407
  %411 = add nsw i64 %406, -1
  %412 = trunc i64 %406 to i32
  %413 = icmp sgt i32 %412, 0
  br i1 %413, label %405, label %414, !llvm.loop !775

414:                                              ; preds = %405, %396
  %415 = phi i32 [ %400, %396 ], [ %410, %405 ]
  %416 = and i64 %365, 4294967295
  %417 = getelementptr inbounds i32, ptr %6, i64 %416
  %418 = load i32, ptr %417, align 4, !tbaa !5
  %419 = mul nsw i32 %418, %415
  %420 = add nsw i32 %419, %359
  %421 = icmp sgt i64 %357, 2
  %422 = add nsw i64 %358, -1
  %423 = add i32 %356, 1
  br i1 %421, label %355, label %424, !llvm.loop !776

424:                                              ; preds = %414, %352
  %425 = phi i32 [ %354, %352 ], [ %420, %414 ]
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds i64, ptr %24, i64 %426
  %428 = load i64, ptr %427, align 8, !tbaa !120
  %429 = trunc i64 %428 to i8
  %430 = load i8, ptr %26, align 1, !tbaa !11
  %431 = add i8 %430, %429
  store i8 %431, ptr %26, align 1, !tbaa !11
  %432 = add nuw nsw i32 %353, 1
  br i1 %346, label %433, label %480

433:                                              ; preds = %424
  %434 = load i32, ptr %4, align 4, !tbaa !5
  %435 = load i32, ptr %12, align 4, !tbaa !5
  %436 = add nsw i32 %435, -1
  %437 = icmp slt i32 %434, %436
  br i1 %437, label %457, label %438

438:                                              ; preds = %433
  %439 = icmp eq i32 %434, %436
  br i1 %439, label %440, label %473

440:                                              ; preds = %438
  store i32 0, ptr %4, align 4, !tbaa !5
  %441 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %441, ptr %6, align 4, !tbaa !5
  br i1 %351, label %480, label %442

442:                                              ; preds = %440, %467
  %443 = phi i64 [ %471, %467 ], [ 1, %440 ]
  %444 = getelementptr inbounds i32, ptr %4, i64 %443
  %445 = load i32, ptr %444, align 4, !tbaa !5
  %446 = getelementptr inbounds i32, ptr %12, i64 %443
  %447 = load i32, ptr %446, align 4, !tbaa !5
  %448 = add nsw i32 %447, -1
  %449 = icmp slt i32 %445, %448
  br i1 %449, label %450, label %465

450:                                              ; preds = %442
  br i1 %437, label %457, label %451

451:                                              ; preds = %450
  %452 = getelementptr inbounds i32, ptr %7, i64 %443
  %453 = load i32, ptr %452, align 4, !tbaa !5
  %454 = getelementptr inbounds i32, ptr %6, i64 %443
  %455 = load i32, ptr %454, align 4, !tbaa !5
  %456 = add nsw i32 %455, %453
  store i32 %456, ptr %454, align 4, !tbaa !5
  br label %475

457:                                              ; preds = %433, %450
  %458 = phi i32 [ %445, %450 ], [ %434, %433 ]
  %459 = phi ptr [ %444, %450 ], [ %4, %433 ]
  %460 = phi i64 [ %443, %450 ], [ 0, %433 ]
  %461 = add nsw i32 %458, 1
  store i32 %461, ptr %459, align 4, !tbaa !5
  %462 = getelementptr inbounds i32, ptr %7, i64 %460
  %463 = load i32, ptr %462, align 4, !tbaa !5
  %464 = getelementptr inbounds i32, ptr %6, i64 %460
  br label %475

465:                                              ; preds = %442
  %466 = icmp eq i32 %445, %448
  br i1 %466, label %467, label %473

467:                                              ; preds = %465
  store i32 0, ptr %444, align 4, !tbaa !5
  %468 = getelementptr inbounds i32, ptr %8, i64 %443
  %469 = load i32, ptr %468, align 4, !tbaa !5
  %470 = getelementptr inbounds i32, ptr %6, i64 %443
  store i32 %469, ptr %470, align 4, !tbaa !5
  %471 = add nuw nsw i64 %443, 1
  %472 = icmp eq i64 %471, %349
  br i1 %472, label %480, label %442, !llvm.loop !777

473:                                              ; preds = %438, %465
  %474 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

475:                                              ; preds = %451, %457
  %476 = phi ptr [ %464, %457 ], [ %444, %451 ]
  %477 = phi i32 [ %463, %457 ], [ 1, %451 ]
  %478 = load i32, ptr %476, align 4, !tbaa !5
  %479 = add nsw i32 %478, %477
  store i32 %479, ptr %476, align 4, !tbaa !5
  br label %480

480:                                              ; preds = %467, %475, %440, %424
  %481 = icmp eq i32 %432, %5
  br i1 %481, label %5411, label %352, !llvm.loop !778

482:                                              ; preds = %335, %617
  %483 = phi i32 [ 0, %335 ], [ %566, %617 ]
  %484 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %336, label %485, label %554

485:                                              ; preds = %482, %544
  %486 = phi i32 [ %553, %544 ], [ 0, %482 ]
  %487 = phi i64 [ %495, %544 ], [ %340, %482 ]
  %488 = phi i64 [ %552, %544 ], [ %339, %482 ]
  %489 = phi i32 [ %550, %544 ], [ %484, %482 ]
  %490 = sub i32 %338, %486
  %491 = tail call i32 @llvm.smin.i32(i32 %490, i32 0)
  %492 = sub i32 %490, %491
  %493 = zext i32 %492 to i64
  %494 = add nuw nsw i64 %493, 1
  %495 = add nsw i64 %487, -1
  %496 = icmp ult i32 %492, 31
  br i1 %496, label %532, label %497

497:                                              ; preds = %485
  %498 = and i64 %494, 8589934560
  %499 = sub i64 %488, %498
  br label %500

500:                                              ; preds = %500, %497
  %501 = phi i64 [ 0, %497 ], [ %524, %500 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %520, %500 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %521, %500 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %522, %500 ]
  %505 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %497 ], [ %523, %500 ]
  %506 = sub i64 %488, %501
  %507 = getelementptr inbounds i32, ptr %11, i64 %506
  %508 = getelementptr inbounds i32, ptr %507, i64 -7
  %509 = load <8 x i32>, ptr %508, align 4, !tbaa !5
  %510 = shufflevector <8 x i32> %509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %511 = getelementptr inbounds i32, ptr %507, i64 -15
  %512 = load <8 x i32>, ptr %511, align 4, !tbaa !5
  %513 = shufflevector <8 x i32> %512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %514 = getelementptr inbounds i32, ptr %507, i64 -23
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !5
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %507, i64 -31
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !5
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = mul <8 x i32> %510, %502
  %521 = mul <8 x i32> %513, %503
  %522 = mul <8 x i32> %516, %504
  %523 = mul <8 x i32> %519, %505
  %524 = add nuw i64 %501, 32
  %525 = icmp eq i64 %524, %498
  br i1 %525, label %526, label %500, !llvm.loop !779

526:                                              ; preds = %500
  %527 = mul <8 x i32> %521, %520
  %528 = mul <8 x i32> %522, %527
  %529 = mul <8 x i32> %523, %528
  %530 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %529)
  %531 = icmp eq i64 %494, %498
  br i1 %531, label %544, label %532

532:                                              ; preds = %485, %526
  %533 = phi i64 [ %488, %485 ], [ %499, %526 ]
  %534 = phi i32 [ 1, %485 ], [ %530, %526 ]
  br label %535

535:                                              ; preds = %532, %535
  %536 = phi i64 [ %541, %535 ], [ %533, %532 ]
  %537 = phi i32 [ %540, %535 ], [ %534, %532 ]
  %538 = getelementptr inbounds i32, ptr %11, i64 %536
  %539 = load i32, ptr %538, align 4, !tbaa !5
  %540 = mul nsw i32 %539, %537
  %541 = add nsw i64 %536, -1
  %542 = trunc i64 %536 to i32
  %543 = icmp sgt i32 %542, 0
  br i1 %543, label %535, label %544, !llvm.loop !780

544:                                              ; preds = %535, %526
  %545 = phi i32 [ %530, %526 ], [ %540, %535 ]
  %546 = and i64 %495, 4294967295
  %547 = getelementptr inbounds i32, ptr %6, i64 %546
  %548 = load i32, ptr %547, align 4, !tbaa !5
  %549 = mul nsw i32 %548, %545
  %550 = add nsw i32 %549, %489
  %551 = icmp sgt i64 %487, 2
  %552 = add nsw i64 %488, -1
  %553 = add i32 %486, 1
  br i1 %551, label %485, label %554, !llvm.loop !781

554:                                              ; preds = %544, %482
  %555 = phi i32 [ %484, %482 ], [ %550, %544 ]
  %556 = icmp slt i32 %555, %5
  br i1 %556, label %559, label %557

557:                                              ; preds = %554
  %558 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

559:                                              ; preds = %554
  %560 = sext i32 %555 to i64
  %561 = getelementptr inbounds i64, ptr %24, i64 %560
  %562 = load i64, ptr %561, align 8, !tbaa !120
  %563 = trunc i64 %562 to i8
  %564 = load i8, ptr %26, align 1, !tbaa !11
  %565 = add i8 %564, %563
  store i8 %565, ptr %26, align 1, !tbaa !11
  %566 = add nuw nsw i32 %483, 1
  br i1 %337, label %567, label %617

567:                                              ; preds = %559
  %568 = load i32, ptr %4, align 4, !tbaa !5
  %569 = load i32, ptr %12, align 4, !tbaa !5
  %570 = add nsw i32 %569, -1
  %571 = icmp slt i32 %568, %570
  br i1 %571, label %594, label %572

572:                                              ; preds = %567
  %573 = icmp eq i32 %568, %570
  br i1 %573, label %574, label %610

574:                                              ; preds = %572
  store i32 0, ptr %4, align 4, !tbaa !5
  %575 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %575, ptr %6, align 4, !tbaa !5
  br i1 %342, label %617, label %576

576:                                              ; preds = %574, %604
  %577 = phi i64 [ %608, %604 ], [ 1, %574 ]
  %578 = getelementptr inbounds i32, ptr %4, i64 %577
  %579 = load i32, ptr %578, align 4, !tbaa !5
  %580 = getelementptr inbounds i32, ptr %12, i64 %577
  %581 = load i32, ptr %580, align 4, !tbaa !5
  %582 = add nsw i32 %581, -1
  %583 = icmp slt i32 %579, %582
  br i1 %583, label %584, label %602

584:                                              ; preds = %576
  br i1 %571, label %594, label %585

585:                                              ; preds = %584
  %586 = shl i64 %577, 32
  %587 = add i64 %586, -4294967296
  %588 = ashr exact i64 %587, 32
  %589 = getelementptr inbounds i32, ptr %7, i64 %588
  %590 = load i32, ptr %589, align 4, !tbaa !5
  %591 = getelementptr inbounds i32, ptr %6, i64 %577
  %592 = load i32, ptr %591, align 4, !tbaa !5
  %593 = add nsw i32 %592, %590
  store i32 %593, ptr %591, align 4, !tbaa !5
  br label %612

594:                                              ; preds = %567, %584
  %595 = phi i32 [ %579, %584 ], [ %568, %567 ]
  %596 = phi ptr [ %578, %584 ], [ %4, %567 ]
  %597 = phi i64 [ %577, %584 ], [ 0, %567 ]
  %598 = add nsw i32 %595, 1
  store i32 %598, ptr %596, align 4, !tbaa !5
  %599 = getelementptr inbounds i32, ptr %7, i64 %597
  %600 = load i32, ptr %599, align 4, !tbaa !5
  %601 = getelementptr inbounds i32, ptr %6, i64 %597
  br label %612

602:                                              ; preds = %576
  %603 = icmp eq i32 %579, %582
  br i1 %603, label %604, label %610

604:                                              ; preds = %602
  store i32 0, ptr %578, align 4, !tbaa !5
  %605 = getelementptr inbounds i32, ptr %8, i64 %577
  %606 = load i32, ptr %605, align 4, !tbaa !5
  %607 = getelementptr inbounds i32, ptr %6, i64 %577
  store i32 %606, ptr %607, align 4, !tbaa !5
  %608 = add nuw nsw i64 %577, 1
  %609 = icmp eq i64 %608, %340
  br i1 %609, label %617, label %576, !llvm.loop !782

610:                                              ; preds = %572, %602
  %611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

612:                                              ; preds = %585, %594
  %613 = phi ptr [ %601, %594 ], [ %578, %585 ]
  %614 = phi i32 [ %600, %594 ], [ 1, %585 ]
  %615 = load i32, ptr %613, align 4, !tbaa !5
  %616 = add nsw i32 %615, %614
  store i32 %616, ptr %613, align 4, !tbaa !5
  br label %617

617:                                              ; preds = %604, %612, %574, %559
  %618 = icmp eq i32 %566, %5
  br i1 %618, label %5411, label %482, !llvm.loop !783

619:                                              ; preds = %31
  %620 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1244, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

621:                                              ; preds = %18
  %622 = getelementptr inbounds ptr, ptr %14, i64 %19
  %623 = load ptr, ptr %622, align 8, !tbaa !9
  %624 = getelementptr inbounds ptr, ptr %16, i64 %19
  %625 = load ptr, ptr %624, align 8, !tbaa !9
  store i32 0, ptr %625, align 4, !tbaa !5
  %626 = icmp eq i32 %13, 0
  br i1 %626, label %627, label %630

627:                                              ; preds = %621
  %628 = load i64, ptr %623, align 8, !tbaa !120
  %629 = trunc i64 %628 to i32
  store i32 %629, ptr %625, align 4, !tbaa !5
  br label %5411

630:                                              ; preds = %621
  switch i32 %1, label %1217 [
    i32 1, label %631
    i32 0, label %927
  ]

631:                                              ; preds = %630
  %632 = getelementptr inbounds i32, ptr %3, i64 %19
  %633 = load i32, ptr %632, align 4, !tbaa !5
  %634 = icmp eq i32 %633, 0
  %635 = icmp sgt i32 %5, 0
  br i1 %634, label %645, label %636

636:                                              ; preds = %631
  br i1 %635, label %637, label %5411

637:                                              ; preds = %636
  %638 = icmp sgt i32 %13, 1
  %639 = icmp sgt i32 %13, 0
  %640 = add i32 %13, -2
  %641 = zext i32 %640 to i64
  %642 = zext i32 %13 to i64
  %643 = add nuw i32 %5, 1
  %644 = icmp eq i32 %13, 1
  br label %790

645:                                              ; preds = %631
  br i1 %635, label %646, label %5411

646:                                              ; preds = %645
  %647 = icmp sgt i32 %13, 1
  %648 = icmp sgt i32 %13, 0
  %649 = add i32 %13, -2
  %650 = zext i32 %649 to i64
  %651 = zext i32 %13 to i64
  %652 = add nuw i32 %5, 1
  %653 = icmp eq i32 %13, 1
  br label %654

654:                                              ; preds = %646, %788
  %655 = phi i32 [ 0, %646 ], [ %740, %788 ]
  %656 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %647, label %657, label %726

657:                                              ; preds = %654, %716
  %658 = phi i32 [ %725, %716 ], [ 0, %654 ]
  %659 = phi i64 [ %667, %716 ], [ %651, %654 ]
  %660 = phi i64 [ %724, %716 ], [ %650, %654 ]
  %661 = phi i32 [ %722, %716 ], [ %656, %654 ]
  %662 = sub i32 %649, %658
  %663 = tail call i32 @llvm.smin.i32(i32 %662, i32 0)
  %664 = sub i32 %662, %663
  %665 = zext i32 %664 to i64
  %666 = add nuw nsw i64 %665, 1
  %667 = add nsw i64 %659, -1
  %668 = icmp ult i32 %664, 31
  br i1 %668, label %704, label %669

669:                                              ; preds = %657
  %670 = and i64 %666, 8589934560
  %671 = sub i64 %660, %670
  br label %672

672:                                              ; preds = %672, %669
  %673 = phi i64 [ 0, %669 ], [ %696, %672 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %692, %672 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %693, %672 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %694, %672 ]
  %677 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %669 ], [ %695, %672 ]
  %678 = sub i64 %660, %673
  %679 = getelementptr inbounds i32, ptr %9, i64 %678
  %680 = getelementptr inbounds i32, ptr %679, i64 -7
  %681 = load <8 x i32>, ptr %680, align 4, !tbaa !5
  %682 = shufflevector <8 x i32> %681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %683 = getelementptr inbounds i32, ptr %679, i64 -15
  %684 = load <8 x i32>, ptr %683, align 4, !tbaa !5
  %685 = shufflevector <8 x i32> %684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %686 = getelementptr inbounds i32, ptr %679, i64 -23
  %687 = load <8 x i32>, ptr %686, align 4, !tbaa !5
  %688 = shufflevector <8 x i32> %687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %689 = getelementptr inbounds i32, ptr %679, i64 -31
  %690 = load <8 x i32>, ptr %689, align 4, !tbaa !5
  %691 = shufflevector <8 x i32> %690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %692 = mul <8 x i32> %682, %674
  %693 = mul <8 x i32> %685, %675
  %694 = mul <8 x i32> %688, %676
  %695 = mul <8 x i32> %691, %677
  %696 = add nuw i64 %673, 32
  %697 = icmp eq i64 %696, %670
  br i1 %697, label %698, label %672, !llvm.loop !784

698:                                              ; preds = %672
  %699 = mul <8 x i32> %693, %692
  %700 = mul <8 x i32> %694, %699
  %701 = mul <8 x i32> %695, %700
  %702 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %701)
  %703 = icmp eq i64 %666, %670
  br i1 %703, label %716, label %704

704:                                              ; preds = %657, %698
  %705 = phi i64 [ %660, %657 ], [ %671, %698 ]
  %706 = phi i32 [ 1, %657 ], [ %702, %698 ]
  br label %707

707:                                              ; preds = %704, %707
  %708 = phi i64 [ %713, %707 ], [ %705, %704 ]
  %709 = phi i32 [ %712, %707 ], [ %706, %704 ]
  %710 = getelementptr inbounds i32, ptr %9, i64 %708
  %711 = load i32, ptr %710, align 4, !tbaa !5
  %712 = mul nsw i32 %711, %709
  %713 = add nsw i64 %708, -1
  %714 = trunc i64 %708 to i32
  %715 = icmp sgt i32 %714, 0
  br i1 %715, label %707, label %716, !llvm.loop !785

716:                                              ; preds = %707, %698
  %717 = phi i32 [ %702, %698 ], [ %712, %707 ]
  %718 = and i64 %667, 4294967295
  %719 = getelementptr inbounds i32, ptr %6, i64 %718
  %720 = load i32, ptr %719, align 4, !tbaa !5
  %721 = mul nsw i32 %720, %717
  %722 = add nsw i32 %721, %661
  %723 = icmp sgt i64 %659, 2
  %724 = add nsw i64 %660, -1
  %725 = add i32 %658, 1
  br i1 %723, label %657, label %726, !llvm.loop !786

726:                                              ; preds = %716, %654
  %727 = phi i32 [ %656, %654 ], [ %722, %716 ]
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds double, ptr %2, i64 %728
  %730 = load double, ptr %729, align 8, !tbaa !18
  %731 = getelementptr inbounds i64, ptr %623, i64 %728
  %732 = load i64, ptr %731, align 8, !tbaa !120
  %733 = trunc i64 %732 to i32
  %734 = load i32, ptr %625, align 4, !tbaa !5
  %735 = sitofp i32 %734 to double
  %736 = sitofp i32 %733 to double
  %737 = fmul fast double %730, %736
  %738 = fadd fast double %737, %735
  %739 = fptosi double %738 to i32
  store i32 %739, ptr %625, align 4, !tbaa !5
  %740 = add nuw nsw i32 %655, 1
  br i1 %648, label %741, label %788

741:                                              ; preds = %726
  %742 = load i32, ptr %4, align 4, !tbaa !5
  %743 = load i32, ptr %12, align 4, !tbaa !5
  %744 = add nsw i32 %743, -1
  %745 = icmp slt i32 %742, %744
  br i1 %745, label %765, label %746

746:                                              ; preds = %741
  %747 = icmp eq i32 %742, %744
  br i1 %747, label %748, label %781

748:                                              ; preds = %746
  store i32 0, ptr %4, align 4, !tbaa !5
  %749 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %749, ptr %6, align 4, !tbaa !5
  br i1 %653, label %788, label %750

750:                                              ; preds = %748, %775
  %751 = phi i64 [ %779, %775 ], [ 1, %748 ]
  %752 = getelementptr inbounds i32, ptr %4, i64 %751
  %753 = load i32, ptr %752, align 4, !tbaa !5
  %754 = getelementptr inbounds i32, ptr %12, i64 %751
  %755 = load i32, ptr %754, align 4, !tbaa !5
  %756 = add nsw i32 %755, -1
  %757 = icmp slt i32 %753, %756
  br i1 %757, label %758, label %773

758:                                              ; preds = %750
  br i1 %745, label %765, label %759

759:                                              ; preds = %758
  %760 = getelementptr inbounds i32, ptr %7, i64 %751
  %761 = load i32, ptr %760, align 4, !tbaa !5
  %762 = getelementptr inbounds i32, ptr %6, i64 %751
  %763 = load i32, ptr %762, align 4, !tbaa !5
  %764 = add nsw i32 %763, %761
  store i32 %764, ptr %762, align 4, !tbaa !5
  br label %783

765:                                              ; preds = %741, %758
  %766 = phi i32 [ %753, %758 ], [ %742, %741 ]
  %767 = phi ptr [ %752, %758 ], [ %4, %741 ]
  %768 = phi i64 [ %751, %758 ], [ 0, %741 ]
  %769 = add nsw i32 %766, 1
  store i32 %769, ptr %767, align 4, !tbaa !5
  %770 = getelementptr inbounds i32, ptr %7, i64 %768
  %771 = load i32, ptr %770, align 4, !tbaa !5
  %772 = getelementptr inbounds i32, ptr %6, i64 %768
  br label %783

773:                                              ; preds = %750
  %774 = icmp eq i32 %753, %756
  br i1 %774, label %775, label %781

775:                                              ; preds = %773
  store i32 0, ptr %752, align 4, !tbaa !5
  %776 = getelementptr inbounds i32, ptr %8, i64 %751
  %777 = load i32, ptr %776, align 4, !tbaa !5
  %778 = getelementptr inbounds i32, ptr %6, i64 %751
  store i32 %777, ptr %778, align 4, !tbaa !5
  %779 = add nuw nsw i64 %751, 1
  %780 = icmp eq i64 %779, %651
  br i1 %780, label %788, label %750, !llvm.loop !787

781:                                              ; preds = %746, %773
  %782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

783:                                              ; preds = %759, %765
  %784 = phi ptr [ %772, %765 ], [ %752, %759 ]
  %785 = phi i32 [ %771, %765 ], [ 1, %759 ]
  %786 = load i32, ptr %784, align 4, !tbaa !5
  %787 = add nsw i32 %786, %785
  store i32 %787, ptr %784, align 4, !tbaa !5
  br label %788

788:                                              ; preds = %775, %783, %748, %726
  %789 = icmp eq i32 %740, %5
  br i1 %789, label %5411, label %654, !llvm.loop !788

790:                                              ; preds = %637, %925
  %791 = phi i32 [ 0, %637 ], [ %874, %925 ]
  %792 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %638, label %793, label %862

793:                                              ; preds = %790, %852
  %794 = phi i32 [ %861, %852 ], [ 0, %790 ]
  %795 = phi i64 [ %803, %852 ], [ %642, %790 ]
  %796 = phi i64 [ %860, %852 ], [ %641, %790 ]
  %797 = phi i32 [ %858, %852 ], [ %792, %790 ]
  %798 = sub i32 %640, %794
  %799 = tail call i32 @llvm.smin.i32(i32 %798, i32 0)
  %800 = sub i32 %798, %799
  %801 = zext i32 %800 to i64
  %802 = add nuw nsw i64 %801, 1
  %803 = add nsw i64 %795, -1
  %804 = icmp ult i32 %800, 31
  br i1 %804, label %840, label %805

805:                                              ; preds = %793
  %806 = and i64 %802, 8589934560
  %807 = sub i64 %796, %806
  br label %808

808:                                              ; preds = %808, %805
  %809 = phi i64 [ 0, %805 ], [ %832, %808 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %805 ], [ %828, %808 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %805 ], [ %829, %808 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %805 ], [ %830, %808 ]
  %813 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %805 ], [ %831, %808 ]
  %814 = sub i64 %796, %809
  %815 = getelementptr inbounds i32, ptr %11, i64 %814
  %816 = getelementptr inbounds i32, ptr %815, i64 -7
  %817 = load <8 x i32>, ptr %816, align 4, !tbaa !5
  %818 = shufflevector <8 x i32> %817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %819 = getelementptr inbounds i32, ptr %815, i64 -15
  %820 = load <8 x i32>, ptr %819, align 4, !tbaa !5
  %821 = shufflevector <8 x i32> %820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %822 = getelementptr inbounds i32, ptr %815, i64 -23
  %823 = load <8 x i32>, ptr %822, align 4, !tbaa !5
  %824 = shufflevector <8 x i32> %823, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %825 = getelementptr inbounds i32, ptr %815, i64 -31
  %826 = load <8 x i32>, ptr %825, align 4, !tbaa !5
  %827 = shufflevector <8 x i32> %826, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %828 = mul <8 x i32> %818, %810
  %829 = mul <8 x i32> %821, %811
  %830 = mul <8 x i32> %824, %812
  %831 = mul <8 x i32> %827, %813
  %832 = add nuw i64 %809, 32
  %833 = icmp eq i64 %832, %806
  br i1 %833, label %834, label %808, !llvm.loop !789

834:                                              ; preds = %808
  %835 = mul <8 x i32> %829, %828
  %836 = mul <8 x i32> %830, %835
  %837 = mul <8 x i32> %831, %836
  %838 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %837)
  %839 = icmp eq i64 %802, %806
  br i1 %839, label %852, label %840

840:                                              ; preds = %793, %834
  %841 = phi i64 [ %796, %793 ], [ %807, %834 ]
  %842 = phi i32 [ 1, %793 ], [ %838, %834 ]
  br label %843

843:                                              ; preds = %840, %843
  %844 = phi i64 [ %849, %843 ], [ %841, %840 ]
  %845 = phi i32 [ %848, %843 ], [ %842, %840 ]
  %846 = getelementptr inbounds i32, ptr %11, i64 %844
  %847 = load i32, ptr %846, align 4, !tbaa !5
  %848 = mul nsw i32 %847, %845
  %849 = add nsw i64 %844, -1
  %850 = trunc i64 %844 to i32
  %851 = icmp sgt i32 %850, 0
  br i1 %851, label %843, label %852, !llvm.loop !790

852:                                              ; preds = %843, %834
  %853 = phi i32 [ %838, %834 ], [ %848, %843 ]
  %854 = and i64 %803, 4294967295
  %855 = getelementptr inbounds i32, ptr %6, i64 %854
  %856 = load i32, ptr %855, align 4, !tbaa !5
  %857 = mul nsw i32 %856, %853
  %858 = add nsw i32 %857, %797
  %859 = icmp sgt i64 %795, 2
  %860 = add nsw i64 %796, -1
  %861 = add i32 %794, 1
  br i1 %859, label %793, label %862, !llvm.loop !791

862:                                              ; preds = %852, %790
  %863 = phi i32 [ %792, %790 ], [ %858, %852 ]
  %864 = icmp slt i32 %863, %5
  br i1 %864, label %867, label %865

865:                                              ; preds = %862
  %866 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

867:                                              ; preds = %862
  %868 = sext i32 %863 to i64
  %869 = getelementptr inbounds i64, ptr %623, i64 %868
  %870 = load i64, ptr %869, align 8, !tbaa !120
  %871 = load i32, ptr %625, align 4, !tbaa !5
  %872 = trunc i64 %870 to i32
  %873 = add i32 %871, %872
  store i32 %873, ptr %625, align 4, !tbaa !5
  %874 = add nuw nsw i32 %791, 1
  br i1 %639, label %875, label %925

875:                                              ; preds = %867
  %876 = load i32, ptr %4, align 4, !tbaa !5
  %877 = load i32, ptr %12, align 4, !tbaa !5
  %878 = add nsw i32 %877, -1
  %879 = icmp slt i32 %876, %878
  br i1 %879, label %902, label %880

880:                                              ; preds = %875
  %881 = icmp eq i32 %876, %878
  br i1 %881, label %882, label %918

882:                                              ; preds = %880
  store i32 0, ptr %4, align 4, !tbaa !5
  %883 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %883, ptr %6, align 4, !tbaa !5
  br i1 %644, label %925, label %884

884:                                              ; preds = %882, %912
  %885 = phi i64 [ %916, %912 ], [ 1, %882 ]
  %886 = getelementptr inbounds i32, ptr %4, i64 %885
  %887 = load i32, ptr %886, align 4, !tbaa !5
  %888 = getelementptr inbounds i32, ptr %12, i64 %885
  %889 = load i32, ptr %888, align 4, !tbaa !5
  %890 = add nsw i32 %889, -1
  %891 = icmp slt i32 %887, %890
  br i1 %891, label %892, label %910

892:                                              ; preds = %884
  br i1 %879, label %902, label %893

893:                                              ; preds = %892
  %894 = shl i64 %885, 32
  %895 = add i64 %894, -4294967296
  %896 = ashr exact i64 %895, 32
  %897 = getelementptr inbounds i32, ptr %7, i64 %896
  %898 = load i32, ptr %897, align 4, !tbaa !5
  %899 = getelementptr inbounds i32, ptr %6, i64 %885
  %900 = load i32, ptr %899, align 4, !tbaa !5
  %901 = add nsw i32 %900, %898
  store i32 %901, ptr %899, align 4, !tbaa !5
  br label %920

902:                                              ; preds = %875, %892
  %903 = phi i32 [ %887, %892 ], [ %876, %875 ]
  %904 = phi ptr [ %886, %892 ], [ %4, %875 ]
  %905 = phi i64 [ %885, %892 ], [ 0, %875 ]
  %906 = add nsw i32 %903, 1
  store i32 %906, ptr %904, align 4, !tbaa !5
  %907 = getelementptr inbounds i32, ptr %7, i64 %905
  %908 = load i32, ptr %907, align 4, !tbaa !5
  %909 = getelementptr inbounds i32, ptr %6, i64 %905
  br label %920

910:                                              ; preds = %884
  %911 = icmp eq i32 %887, %890
  br i1 %911, label %912, label %918

912:                                              ; preds = %910
  store i32 0, ptr %886, align 4, !tbaa !5
  %913 = getelementptr inbounds i32, ptr %8, i64 %885
  %914 = load i32, ptr %913, align 4, !tbaa !5
  %915 = getelementptr inbounds i32, ptr %6, i64 %885
  store i32 %914, ptr %915, align 4, !tbaa !5
  %916 = add nuw nsw i64 %885, 1
  %917 = icmp eq i64 %916, %642
  br i1 %917, label %925, label %884, !llvm.loop !792

918:                                              ; preds = %880, %910
  %919 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

920:                                              ; preds = %893, %902
  %921 = phi ptr [ %909, %902 ], [ %886, %893 ]
  %922 = phi i32 [ %908, %902 ], [ 1, %893 ]
  %923 = load i32, ptr %921, align 4, !tbaa !5
  %924 = add nsw i32 %923, %922
  store i32 %924, ptr %921, align 4, !tbaa !5
  br label %925

925:                                              ; preds = %912, %920, %882, %867
  %926 = icmp eq i32 %874, %5
  br i1 %926, label %5411, label %790, !llvm.loop !793

927:                                              ; preds = %630
  %928 = getelementptr inbounds i32, ptr %3, i64 %19
  %929 = load i32, ptr %928, align 4, !tbaa !5
  %930 = icmp eq i32 %929, 0
  %931 = icmp sgt i32 %5, 0
  br i1 %930, label %941, label %932

932:                                              ; preds = %927
  br i1 %931, label %933, label %5411

933:                                              ; preds = %932
  %934 = icmp sgt i32 %13, 1
  %935 = icmp sgt i32 %13, 0
  %936 = add i32 %13, -2
  %937 = zext i32 %936 to i64
  %938 = zext i32 %13 to i64
  %939 = add nuw i32 %5, 1
  %940 = icmp eq i32 %13, 1
  br label %1080

941:                                              ; preds = %927
  br i1 %931, label %942, label %5411

942:                                              ; preds = %941
  %943 = icmp sgt i32 %13, 1
  %944 = icmp sgt i32 %13, 0
  %945 = add i32 %13, -2
  %946 = zext i32 %945 to i64
  %947 = zext i32 %13 to i64
  %948 = add nuw i32 %5, 1
  %949 = icmp eq i32 %13, 1
  br label %950

950:                                              ; preds = %942, %1078
  %951 = phi i32 [ 0, %942 ], [ %1030, %1078 ]
  %952 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %943, label %953, label %1022

953:                                              ; preds = %950, %1012
  %954 = phi i32 [ %1021, %1012 ], [ 0, %950 ]
  %955 = phi i64 [ %963, %1012 ], [ %947, %950 ]
  %956 = phi i64 [ %1020, %1012 ], [ %946, %950 ]
  %957 = phi i32 [ %1018, %1012 ], [ %952, %950 ]
  %958 = sub i32 %945, %954
  %959 = tail call i32 @llvm.smin.i32(i32 %958, i32 0)
  %960 = sub i32 %958, %959
  %961 = zext i32 %960 to i64
  %962 = add nuw nsw i64 %961, 1
  %963 = add nsw i64 %955, -1
  %964 = icmp ult i32 %960, 31
  br i1 %964, label %1000, label %965

965:                                              ; preds = %953
  %966 = and i64 %962, 8589934560
  %967 = sub i64 %956, %966
  br label %968

968:                                              ; preds = %968, %965
  %969 = phi i64 [ 0, %965 ], [ %992, %968 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %988, %968 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %989, %968 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %990, %968 ]
  %973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %965 ], [ %991, %968 ]
  %974 = sub i64 %956, %969
  %975 = getelementptr inbounds i32, ptr %9, i64 %974
  %976 = getelementptr inbounds i32, ptr %975, i64 -7
  %977 = load <8 x i32>, ptr %976, align 4, !tbaa !5
  %978 = shufflevector <8 x i32> %977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %979 = getelementptr inbounds i32, ptr %975, i64 -15
  %980 = load <8 x i32>, ptr %979, align 4, !tbaa !5
  %981 = shufflevector <8 x i32> %980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %982 = getelementptr inbounds i32, ptr %975, i64 -23
  %983 = load <8 x i32>, ptr %982, align 4, !tbaa !5
  %984 = shufflevector <8 x i32> %983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %985 = getelementptr inbounds i32, ptr %975, i64 -31
  %986 = load <8 x i32>, ptr %985, align 4, !tbaa !5
  %987 = shufflevector <8 x i32> %986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %988 = mul <8 x i32> %978, %970
  %989 = mul <8 x i32> %981, %971
  %990 = mul <8 x i32> %984, %972
  %991 = mul <8 x i32> %987, %973
  %992 = add nuw i64 %969, 32
  %993 = icmp eq i64 %992, %966
  br i1 %993, label %994, label %968, !llvm.loop !794

994:                                              ; preds = %968
  %995 = mul <8 x i32> %989, %988
  %996 = mul <8 x i32> %990, %995
  %997 = mul <8 x i32> %991, %996
  %998 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %997)
  %999 = icmp eq i64 %962, %966
  br i1 %999, label %1012, label %1000

1000:                                             ; preds = %953, %994
  %1001 = phi i64 [ %956, %953 ], [ %967, %994 ]
  %1002 = phi i32 [ 1, %953 ], [ %998, %994 ]
  br label %1003

1003:                                             ; preds = %1000, %1003
  %1004 = phi i64 [ %1009, %1003 ], [ %1001, %1000 ]
  %1005 = phi i32 [ %1008, %1003 ], [ %1002, %1000 ]
  %1006 = getelementptr inbounds i32, ptr %9, i64 %1004
  %1007 = load i32, ptr %1006, align 4, !tbaa !5
  %1008 = mul nsw i32 %1007, %1005
  %1009 = add nsw i64 %1004, -1
  %1010 = trunc i64 %1004 to i32
  %1011 = icmp sgt i32 %1010, 0
  br i1 %1011, label %1003, label %1012, !llvm.loop !795

1012:                                             ; preds = %1003, %994
  %1013 = phi i32 [ %998, %994 ], [ %1008, %1003 ]
  %1014 = and i64 %963, 4294967295
  %1015 = getelementptr inbounds i32, ptr %6, i64 %1014
  %1016 = load i32, ptr %1015, align 4, !tbaa !5
  %1017 = mul nsw i32 %1016, %1013
  %1018 = add nsw i32 %1017, %957
  %1019 = icmp sgt i64 %955, 2
  %1020 = add nsw i64 %956, -1
  %1021 = add i32 %954, 1
  br i1 %1019, label %953, label %1022, !llvm.loop !796

1022:                                             ; preds = %1012, %950
  %1023 = phi i32 [ %952, %950 ], [ %1018, %1012 ]
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds i64, ptr %623, i64 %1024
  %1026 = load i64, ptr %1025, align 8, !tbaa !120
  %1027 = trunc i64 %1026 to i32
  %1028 = load i32, ptr %625, align 4, !tbaa !5
  %1029 = add nsw i32 %1028, %1027
  store i32 %1029, ptr %625, align 4, !tbaa !5
  %1030 = add nuw nsw i32 %951, 1
  br i1 %944, label %1031, label %1078

1031:                                             ; preds = %1022
  %1032 = load i32, ptr %4, align 4, !tbaa !5
  %1033 = load i32, ptr %12, align 4, !tbaa !5
  %1034 = add nsw i32 %1033, -1
  %1035 = icmp slt i32 %1032, %1034
  br i1 %1035, label %1055, label %1036

1036:                                             ; preds = %1031
  %1037 = icmp eq i32 %1032, %1034
  br i1 %1037, label %1038, label %1071

1038:                                             ; preds = %1036
  store i32 0, ptr %4, align 4, !tbaa !5
  %1039 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1039, ptr %6, align 4, !tbaa !5
  br i1 %949, label %1078, label %1040

1040:                                             ; preds = %1038, %1065
  %1041 = phi i64 [ %1069, %1065 ], [ 1, %1038 ]
  %1042 = getelementptr inbounds i32, ptr %4, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !5
  %1044 = getelementptr inbounds i32, ptr %12, i64 %1041
  %1045 = load i32, ptr %1044, align 4, !tbaa !5
  %1046 = add nsw i32 %1045, -1
  %1047 = icmp slt i32 %1043, %1046
  br i1 %1047, label %1048, label %1063

1048:                                             ; preds = %1040
  br i1 %1035, label %1055, label %1049

1049:                                             ; preds = %1048
  %1050 = getelementptr inbounds i32, ptr %7, i64 %1041
  %1051 = load i32, ptr %1050, align 4, !tbaa !5
  %1052 = getelementptr inbounds i32, ptr %6, i64 %1041
  %1053 = load i32, ptr %1052, align 4, !tbaa !5
  %1054 = add nsw i32 %1053, %1051
  store i32 %1054, ptr %1052, align 4, !tbaa !5
  br label %1073

1055:                                             ; preds = %1031, %1048
  %1056 = phi i32 [ %1043, %1048 ], [ %1032, %1031 ]
  %1057 = phi ptr [ %1042, %1048 ], [ %4, %1031 ]
  %1058 = phi i64 [ %1041, %1048 ], [ 0, %1031 ]
  %1059 = add nsw i32 %1056, 1
  store i32 %1059, ptr %1057, align 4, !tbaa !5
  %1060 = getelementptr inbounds i32, ptr %7, i64 %1058
  %1061 = load i32, ptr %1060, align 4, !tbaa !5
  %1062 = getelementptr inbounds i32, ptr %6, i64 %1058
  br label %1073

1063:                                             ; preds = %1040
  %1064 = icmp eq i32 %1043, %1046
  br i1 %1064, label %1065, label %1071

1065:                                             ; preds = %1063
  store i32 0, ptr %1042, align 4, !tbaa !5
  %1066 = getelementptr inbounds i32, ptr %8, i64 %1041
  %1067 = load i32, ptr %1066, align 4, !tbaa !5
  %1068 = getelementptr inbounds i32, ptr %6, i64 %1041
  store i32 %1067, ptr %1068, align 4, !tbaa !5
  %1069 = add nuw nsw i64 %1041, 1
  %1070 = icmp eq i64 %1069, %947
  br i1 %1070, label %1078, label %1040, !llvm.loop !797

1071:                                             ; preds = %1036, %1063
  %1072 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1073:                                             ; preds = %1049, %1055
  %1074 = phi ptr [ %1062, %1055 ], [ %1042, %1049 ]
  %1075 = phi i32 [ %1061, %1055 ], [ 1, %1049 ]
  %1076 = load i32, ptr %1074, align 4, !tbaa !5
  %1077 = add nsw i32 %1076, %1075
  store i32 %1077, ptr %1074, align 4, !tbaa !5
  br label %1078

1078:                                             ; preds = %1065, %1073, %1038, %1022
  %1079 = icmp eq i32 %1030, %5
  br i1 %1079, label %5411, label %950, !llvm.loop !798

1080:                                             ; preds = %933, %1215
  %1081 = phi i32 [ 0, %933 ], [ %1164, %1215 ]
  %1082 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %934, label %1083, label %1152

1083:                                             ; preds = %1080, %1142
  %1084 = phi i32 [ %1151, %1142 ], [ 0, %1080 ]
  %1085 = phi i64 [ %1093, %1142 ], [ %938, %1080 ]
  %1086 = phi i64 [ %1150, %1142 ], [ %937, %1080 ]
  %1087 = phi i32 [ %1148, %1142 ], [ %1082, %1080 ]
  %1088 = sub i32 %936, %1084
  %1089 = tail call i32 @llvm.smin.i32(i32 %1088, i32 0)
  %1090 = sub i32 %1088, %1089
  %1091 = zext i32 %1090 to i64
  %1092 = add nuw nsw i64 %1091, 1
  %1093 = add nsw i64 %1085, -1
  %1094 = icmp ult i32 %1090, 31
  br i1 %1094, label %1130, label %1095

1095:                                             ; preds = %1083
  %1096 = and i64 %1092, 8589934560
  %1097 = sub i64 %1086, %1096
  br label %1098

1098:                                             ; preds = %1098, %1095
  %1099 = phi i64 [ 0, %1095 ], [ %1122, %1098 ]
  %1100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1095 ], [ %1118, %1098 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1095 ], [ %1119, %1098 ]
  %1102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1095 ], [ %1120, %1098 ]
  %1103 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1095 ], [ %1121, %1098 ]
  %1104 = sub i64 %1086, %1099
  %1105 = getelementptr inbounds i32, ptr %11, i64 %1104
  %1106 = getelementptr inbounds i32, ptr %1105, i64 -7
  %1107 = load <8 x i32>, ptr %1106, align 4, !tbaa !5
  %1108 = shufflevector <8 x i32> %1107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1109 = getelementptr inbounds i32, ptr %1105, i64 -15
  %1110 = load <8 x i32>, ptr %1109, align 4, !tbaa !5
  %1111 = shufflevector <8 x i32> %1110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1112 = getelementptr inbounds i32, ptr %1105, i64 -23
  %1113 = load <8 x i32>, ptr %1112, align 4, !tbaa !5
  %1114 = shufflevector <8 x i32> %1113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1115 = getelementptr inbounds i32, ptr %1105, i64 -31
  %1116 = load <8 x i32>, ptr %1115, align 4, !tbaa !5
  %1117 = shufflevector <8 x i32> %1116, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1118 = mul <8 x i32> %1108, %1100
  %1119 = mul <8 x i32> %1111, %1101
  %1120 = mul <8 x i32> %1114, %1102
  %1121 = mul <8 x i32> %1117, %1103
  %1122 = add nuw i64 %1099, 32
  %1123 = icmp eq i64 %1122, %1096
  br i1 %1123, label %1124, label %1098, !llvm.loop !799

1124:                                             ; preds = %1098
  %1125 = mul <8 x i32> %1119, %1118
  %1126 = mul <8 x i32> %1120, %1125
  %1127 = mul <8 x i32> %1121, %1126
  %1128 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1127)
  %1129 = icmp eq i64 %1092, %1096
  br i1 %1129, label %1142, label %1130

1130:                                             ; preds = %1083, %1124
  %1131 = phi i64 [ %1086, %1083 ], [ %1097, %1124 ]
  %1132 = phi i32 [ 1, %1083 ], [ %1128, %1124 ]
  br label %1133

1133:                                             ; preds = %1130, %1133
  %1134 = phi i64 [ %1139, %1133 ], [ %1131, %1130 ]
  %1135 = phi i32 [ %1138, %1133 ], [ %1132, %1130 ]
  %1136 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1137 = load i32, ptr %1136, align 4, !tbaa !5
  %1138 = mul nsw i32 %1137, %1135
  %1139 = add nsw i64 %1134, -1
  %1140 = trunc i64 %1134 to i32
  %1141 = icmp sgt i32 %1140, 0
  br i1 %1141, label %1133, label %1142, !llvm.loop !800

1142:                                             ; preds = %1133, %1124
  %1143 = phi i32 [ %1128, %1124 ], [ %1138, %1133 ]
  %1144 = and i64 %1093, 4294967295
  %1145 = getelementptr inbounds i32, ptr %6, i64 %1144
  %1146 = load i32, ptr %1145, align 4, !tbaa !5
  %1147 = mul nsw i32 %1146, %1143
  %1148 = add nsw i32 %1147, %1087
  %1149 = icmp sgt i64 %1085, 2
  %1150 = add nsw i64 %1086, -1
  %1151 = add i32 %1084, 1
  br i1 %1149, label %1083, label %1152, !llvm.loop !801

1152:                                             ; preds = %1142, %1080
  %1153 = phi i32 [ %1082, %1080 ], [ %1148, %1142 ]
  %1154 = icmp slt i32 %1153, %5
  br i1 %1154, label %1157, label %1155

1155:                                             ; preds = %1152
  %1156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

1157:                                             ; preds = %1152
  %1158 = sext i32 %1153 to i64
  %1159 = getelementptr inbounds i64, ptr %623, i64 %1158
  %1160 = load i64, ptr %1159, align 8, !tbaa !120
  %1161 = trunc i64 %1160 to i32
  %1162 = load i32, ptr %625, align 4, !tbaa !5
  %1163 = add nsw i32 %1162, %1161
  store i32 %1163, ptr %625, align 4, !tbaa !5
  %1164 = add nuw nsw i32 %1081, 1
  br i1 %935, label %1165, label %1215

1165:                                             ; preds = %1157
  %1166 = load i32, ptr %4, align 4, !tbaa !5
  %1167 = load i32, ptr %12, align 4, !tbaa !5
  %1168 = add nsw i32 %1167, -1
  %1169 = icmp slt i32 %1166, %1168
  br i1 %1169, label %1192, label %1170

1170:                                             ; preds = %1165
  %1171 = icmp eq i32 %1166, %1168
  br i1 %1171, label %1172, label %1208

1172:                                             ; preds = %1170
  store i32 0, ptr %4, align 4, !tbaa !5
  %1173 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1173, ptr %6, align 4, !tbaa !5
  br i1 %940, label %1215, label %1174

1174:                                             ; preds = %1172, %1202
  %1175 = phi i64 [ %1206, %1202 ], [ 1, %1172 ]
  %1176 = getelementptr inbounds i32, ptr %4, i64 %1175
  %1177 = load i32, ptr %1176, align 4, !tbaa !5
  %1178 = getelementptr inbounds i32, ptr %12, i64 %1175
  %1179 = load i32, ptr %1178, align 4, !tbaa !5
  %1180 = add nsw i32 %1179, -1
  %1181 = icmp slt i32 %1177, %1180
  br i1 %1181, label %1182, label %1200

1182:                                             ; preds = %1174
  br i1 %1169, label %1192, label %1183

1183:                                             ; preds = %1182
  %1184 = shl i64 %1175, 32
  %1185 = add i64 %1184, -4294967296
  %1186 = ashr exact i64 %1185, 32
  %1187 = getelementptr inbounds i32, ptr %7, i64 %1186
  %1188 = load i32, ptr %1187, align 4, !tbaa !5
  %1189 = getelementptr inbounds i32, ptr %6, i64 %1175
  %1190 = load i32, ptr %1189, align 4, !tbaa !5
  %1191 = add nsw i32 %1190, %1188
  store i32 %1191, ptr %1189, align 4, !tbaa !5
  br label %1210

1192:                                             ; preds = %1165, %1182
  %1193 = phi i32 [ %1177, %1182 ], [ %1166, %1165 ]
  %1194 = phi ptr [ %1176, %1182 ], [ %4, %1165 ]
  %1195 = phi i64 [ %1175, %1182 ], [ 0, %1165 ]
  %1196 = add nsw i32 %1193, 1
  store i32 %1196, ptr %1194, align 4, !tbaa !5
  %1197 = getelementptr inbounds i32, ptr %7, i64 %1195
  %1198 = load i32, ptr %1197, align 4, !tbaa !5
  %1199 = getelementptr inbounds i32, ptr %6, i64 %1195
  br label %1210

1200:                                             ; preds = %1174
  %1201 = icmp eq i32 %1177, %1180
  br i1 %1201, label %1202, label %1208

1202:                                             ; preds = %1200
  store i32 0, ptr %1176, align 4, !tbaa !5
  %1203 = getelementptr inbounds i32, ptr %8, i64 %1175
  %1204 = load i32, ptr %1203, align 4, !tbaa !5
  %1205 = getelementptr inbounds i32, ptr %6, i64 %1175
  store i32 %1204, ptr %1205, align 4, !tbaa !5
  %1206 = add nuw nsw i64 %1175, 1
  %1207 = icmp eq i64 %1206, %938
  br i1 %1207, label %1215, label %1174, !llvm.loop !802

1208:                                             ; preds = %1170, %1200
  %1209 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1210:                                             ; preds = %1183, %1192
  %1211 = phi ptr [ %1199, %1192 ], [ %1176, %1183 ]
  %1212 = phi i32 [ %1198, %1192 ], [ 1, %1183 ]
  %1213 = load i32, ptr %1211, align 4, !tbaa !5
  %1214 = add nsw i32 %1213, %1212
  store i32 %1214, ptr %1211, align 4, !tbaa !5
  br label %1215

1215:                                             ; preds = %1202, %1210, %1172, %1157
  %1216 = icmp eq i32 %1164, %5
  br i1 %1216, label %5411, label %1080, !llvm.loop !803

1217:                                             ; preds = %630
  %1218 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1247, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

1219:                                             ; preds = %18
  %1220 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1221 = load ptr, ptr %1220, align 8, !tbaa !9
  %1222 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1223 = load ptr, ptr %1222, align 8, !tbaa !9
  store i8 0, ptr %1223, align 1, !tbaa !11
  %1224 = icmp eq i32 %13, 0
  br i1 %1224, label %1225, label %1228

1225:                                             ; preds = %1219
  %1226 = load i64, ptr %1221, align 8, !tbaa !120
  %1227 = trunc i64 %1226 to i8
  store i8 %1227, ptr %1223, align 1, !tbaa !11
  br label %5411

1228:                                             ; preds = %1219
  switch i32 %1, label %1817 [
    i32 1, label %1229
    i32 0, label %1527
  ]

1229:                                             ; preds = %1228
  %1230 = getelementptr inbounds i32, ptr %3, i64 %19
  %1231 = load i32, ptr %1230, align 4, !tbaa !5
  %1232 = icmp eq i32 %1231, 0
  %1233 = icmp sgt i32 %5, 0
  br i1 %1232, label %1243, label %1234

1234:                                             ; preds = %1229
  br i1 %1233, label %1235, label %5411

1235:                                             ; preds = %1234
  %1236 = icmp sgt i32 %13, 1
  %1237 = icmp sgt i32 %13, 0
  %1238 = add i32 %13, -2
  %1239 = zext i32 %1238 to i64
  %1240 = zext i32 %13 to i64
  %1241 = add nuw i32 %5, 1
  %1242 = icmp eq i32 %13, 1
  br label %1390

1243:                                             ; preds = %1229
  br i1 %1233, label %1244, label %5411

1244:                                             ; preds = %1243
  %1245 = icmp sgt i32 %13, 1
  %1246 = icmp sgt i32 %13, 0
  %1247 = add i32 %13, -2
  %1248 = zext i32 %1247 to i64
  %1249 = zext i32 %13 to i64
  %1250 = add nuw i32 %5, 1
  %1251 = icmp eq i32 %13, 1
  br label %1252

1252:                                             ; preds = %1244, %1388
  %1253 = phi i32 [ 0, %1244 ], [ %1340, %1388 ]
  %1254 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1245, label %1255, label %1324

1255:                                             ; preds = %1252, %1314
  %1256 = phi i32 [ %1323, %1314 ], [ 0, %1252 ]
  %1257 = phi i64 [ %1265, %1314 ], [ %1249, %1252 ]
  %1258 = phi i64 [ %1322, %1314 ], [ %1248, %1252 ]
  %1259 = phi i32 [ %1320, %1314 ], [ %1254, %1252 ]
  %1260 = sub i32 %1247, %1256
  %1261 = tail call i32 @llvm.smin.i32(i32 %1260, i32 0)
  %1262 = sub i32 %1260, %1261
  %1263 = zext i32 %1262 to i64
  %1264 = add nuw nsw i64 %1263, 1
  %1265 = add nsw i64 %1257, -1
  %1266 = icmp ult i32 %1262, 31
  br i1 %1266, label %1302, label %1267

1267:                                             ; preds = %1255
  %1268 = and i64 %1264, 8589934560
  %1269 = sub i64 %1258, %1268
  br label %1270

1270:                                             ; preds = %1270, %1267
  %1271 = phi i64 [ 0, %1267 ], [ %1294, %1270 ]
  %1272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1267 ], [ %1290, %1270 ]
  %1273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1267 ], [ %1291, %1270 ]
  %1274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1267 ], [ %1292, %1270 ]
  %1275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1267 ], [ %1293, %1270 ]
  %1276 = sub i64 %1258, %1271
  %1277 = getelementptr inbounds i32, ptr %9, i64 %1276
  %1278 = getelementptr inbounds i32, ptr %1277, i64 -7
  %1279 = load <8 x i32>, ptr %1278, align 4, !tbaa !5
  %1280 = shufflevector <8 x i32> %1279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1281 = getelementptr inbounds i32, ptr %1277, i64 -15
  %1282 = load <8 x i32>, ptr %1281, align 4, !tbaa !5
  %1283 = shufflevector <8 x i32> %1282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1284 = getelementptr inbounds i32, ptr %1277, i64 -23
  %1285 = load <8 x i32>, ptr %1284, align 4, !tbaa !5
  %1286 = shufflevector <8 x i32> %1285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1287 = getelementptr inbounds i32, ptr %1277, i64 -31
  %1288 = load <8 x i32>, ptr %1287, align 4, !tbaa !5
  %1289 = shufflevector <8 x i32> %1288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1290 = mul <8 x i32> %1280, %1272
  %1291 = mul <8 x i32> %1283, %1273
  %1292 = mul <8 x i32> %1286, %1274
  %1293 = mul <8 x i32> %1289, %1275
  %1294 = add nuw i64 %1271, 32
  %1295 = icmp eq i64 %1294, %1268
  br i1 %1295, label %1296, label %1270, !llvm.loop !804

1296:                                             ; preds = %1270
  %1297 = mul <8 x i32> %1291, %1290
  %1298 = mul <8 x i32> %1292, %1297
  %1299 = mul <8 x i32> %1293, %1298
  %1300 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1299)
  %1301 = icmp eq i64 %1264, %1268
  br i1 %1301, label %1314, label %1302

1302:                                             ; preds = %1255, %1296
  %1303 = phi i64 [ %1258, %1255 ], [ %1269, %1296 ]
  %1304 = phi i32 [ 1, %1255 ], [ %1300, %1296 ]
  br label %1305

1305:                                             ; preds = %1302, %1305
  %1306 = phi i64 [ %1311, %1305 ], [ %1303, %1302 ]
  %1307 = phi i32 [ %1310, %1305 ], [ %1304, %1302 ]
  %1308 = getelementptr inbounds i32, ptr %9, i64 %1306
  %1309 = load i32, ptr %1308, align 4, !tbaa !5
  %1310 = mul nsw i32 %1309, %1307
  %1311 = add nsw i64 %1306, -1
  %1312 = trunc i64 %1306 to i32
  %1313 = icmp sgt i32 %1312, 0
  br i1 %1313, label %1305, label %1314, !llvm.loop !805

1314:                                             ; preds = %1305, %1296
  %1315 = phi i32 [ %1300, %1296 ], [ %1310, %1305 ]
  %1316 = and i64 %1265, 4294967295
  %1317 = getelementptr inbounds i32, ptr %6, i64 %1316
  %1318 = load i32, ptr %1317, align 4, !tbaa !5
  %1319 = mul nsw i32 %1318, %1315
  %1320 = add nsw i32 %1319, %1259
  %1321 = icmp sgt i64 %1257, 2
  %1322 = add nsw i64 %1258, -1
  %1323 = add i32 %1256, 1
  br i1 %1321, label %1255, label %1324, !llvm.loop !806

1324:                                             ; preds = %1314, %1252
  %1325 = phi i32 [ %1254, %1252 ], [ %1320, %1314 ]
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds double, ptr %2, i64 %1326
  %1328 = load double, ptr %1327, align 8, !tbaa !18
  %1329 = getelementptr inbounds i64, ptr %1221, i64 %1326
  %1330 = load i64, ptr %1329, align 8, !tbaa !120
  %1331 = trunc i64 %1330 to i32
  %1332 = load i8, ptr %1223, align 1, !tbaa !11
  %1333 = sitofp i8 %1332 to double
  %1334 = shl i32 %1331, 24
  %1335 = ashr exact i32 %1334, 24
  %1336 = sitofp i32 %1335 to double
  %1337 = fmul fast double %1328, %1336
  %1338 = fadd fast double %1337, %1333
  %1339 = fptosi double %1338 to i8
  store i8 %1339, ptr %1223, align 1, !tbaa !11
  %1340 = add nuw nsw i32 %1253, 1
  br i1 %1246, label %1341, label %1388

1341:                                             ; preds = %1324
  %1342 = load i32, ptr %4, align 4, !tbaa !5
  %1343 = load i32, ptr %12, align 4, !tbaa !5
  %1344 = add nsw i32 %1343, -1
  %1345 = icmp slt i32 %1342, %1344
  br i1 %1345, label %1365, label %1346

1346:                                             ; preds = %1341
  %1347 = icmp eq i32 %1342, %1344
  br i1 %1347, label %1348, label %1381

1348:                                             ; preds = %1346
  store i32 0, ptr %4, align 4, !tbaa !5
  %1349 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1349, ptr %6, align 4, !tbaa !5
  br i1 %1251, label %1388, label %1350

1350:                                             ; preds = %1348, %1375
  %1351 = phi i64 [ %1379, %1375 ], [ 1, %1348 ]
  %1352 = getelementptr inbounds i32, ptr %4, i64 %1351
  %1353 = load i32, ptr %1352, align 4, !tbaa !5
  %1354 = getelementptr inbounds i32, ptr %12, i64 %1351
  %1355 = load i32, ptr %1354, align 4, !tbaa !5
  %1356 = add nsw i32 %1355, -1
  %1357 = icmp slt i32 %1353, %1356
  br i1 %1357, label %1358, label %1373

1358:                                             ; preds = %1350
  br i1 %1345, label %1365, label %1359

1359:                                             ; preds = %1358
  %1360 = getelementptr inbounds i32, ptr %7, i64 %1351
  %1361 = load i32, ptr %1360, align 4, !tbaa !5
  %1362 = getelementptr inbounds i32, ptr %6, i64 %1351
  %1363 = load i32, ptr %1362, align 4, !tbaa !5
  %1364 = add nsw i32 %1363, %1361
  store i32 %1364, ptr %1362, align 4, !tbaa !5
  br label %1383

1365:                                             ; preds = %1341, %1358
  %1366 = phi i32 [ %1353, %1358 ], [ %1342, %1341 ]
  %1367 = phi ptr [ %1352, %1358 ], [ %4, %1341 ]
  %1368 = phi i64 [ %1351, %1358 ], [ 0, %1341 ]
  %1369 = add nsw i32 %1366, 1
  store i32 %1369, ptr %1367, align 4, !tbaa !5
  %1370 = getelementptr inbounds i32, ptr %7, i64 %1368
  %1371 = load i32, ptr %1370, align 4, !tbaa !5
  %1372 = getelementptr inbounds i32, ptr %6, i64 %1368
  br label %1383

1373:                                             ; preds = %1350
  %1374 = icmp eq i32 %1353, %1356
  br i1 %1374, label %1375, label %1381

1375:                                             ; preds = %1373
  store i32 0, ptr %1352, align 4, !tbaa !5
  %1376 = getelementptr inbounds i32, ptr %8, i64 %1351
  %1377 = load i32, ptr %1376, align 4, !tbaa !5
  %1378 = getelementptr inbounds i32, ptr %6, i64 %1351
  store i32 %1377, ptr %1378, align 4, !tbaa !5
  %1379 = add nuw nsw i64 %1351, 1
  %1380 = icmp eq i64 %1379, %1249
  br i1 %1380, label %1388, label %1350, !llvm.loop !807

1381:                                             ; preds = %1346, %1373
  %1382 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1383:                                             ; preds = %1359, %1365
  %1384 = phi ptr [ %1372, %1365 ], [ %1352, %1359 ]
  %1385 = phi i32 [ %1371, %1365 ], [ 1, %1359 ]
  %1386 = load i32, ptr %1384, align 4, !tbaa !5
  %1387 = add nsw i32 %1386, %1385
  store i32 %1387, ptr %1384, align 4, !tbaa !5
  br label %1388

1388:                                             ; preds = %1375, %1383, %1348, %1324
  %1389 = icmp eq i32 %1340, %5
  br i1 %1389, label %5411, label %1252, !llvm.loop !808

1390:                                             ; preds = %1235, %1525
  %1391 = phi i32 [ 0, %1235 ], [ %1474, %1525 ]
  %1392 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1236, label %1393, label %1462

1393:                                             ; preds = %1390, %1452
  %1394 = phi i32 [ %1461, %1452 ], [ 0, %1390 ]
  %1395 = phi i64 [ %1403, %1452 ], [ %1240, %1390 ]
  %1396 = phi i64 [ %1460, %1452 ], [ %1239, %1390 ]
  %1397 = phi i32 [ %1458, %1452 ], [ %1392, %1390 ]
  %1398 = sub i32 %1238, %1394
  %1399 = tail call i32 @llvm.smin.i32(i32 %1398, i32 0)
  %1400 = sub i32 %1398, %1399
  %1401 = zext i32 %1400 to i64
  %1402 = add nuw nsw i64 %1401, 1
  %1403 = add nsw i64 %1395, -1
  %1404 = icmp ult i32 %1400, 31
  br i1 %1404, label %1440, label %1405

1405:                                             ; preds = %1393
  %1406 = and i64 %1402, 8589934560
  %1407 = sub i64 %1396, %1406
  br label %1408

1408:                                             ; preds = %1408, %1405
  %1409 = phi i64 [ 0, %1405 ], [ %1432, %1408 ]
  %1410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1405 ], [ %1428, %1408 ]
  %1411 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1405 ], [ %1429, %1408 ]
  %1412 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1405 ], [ %1430, %1408 ]
  %1413 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1405 ], [ %1431, %1408 ]
  %1414 = sub i64 %1396, %1409
  %1415 = getelementptr inbounds i32, ptr %11, i64 %1414
  %1416 = getelementptr inbounds i32, ptr %1415, i64 -7
  %1417 = load <8 x i32>, ptr %1416, align 4, !tbaa !5
  %1418 = shufflevector <8 x i32> %1417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1419 = getelementptr inbounds i32, ptr %1415, i64 -15
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1415, i64 -23
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = getelementptr inbounds i32, ptr %1415, i64 -31
  %1426 = load <8 x i32>, ptr %1425, align 4, !tbaa !5
  %1427 = shufflevector <8 x i32> %1426, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1428 = mul <8 x i32> %1418, %1410
  %1429 = mul <8 x i32> %1421, %1411
  %1430 = mul <8 x i32> %1424, %1412
  %1431 = mul <8 x i32> %1427, %1413
  %1432 = add nuw i64 %1409, 32
  %1433 = icmp eq i64 %1432, %1406
  br i1 %1433, label %1434, label %1408, !llvm.loop !809

1434:                                             ; preds = %1408
  %1435 = mul <8 x i32> %1429, %1428
  %1436 = mul <8 x i32> %1430, %1435
  %1437 = mul <8 x i32> %1431, %1436
  %1438 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1437)
  %1439 = icmp eq i64 %1402, %1406
  br i1 %1439, label %1452, label %1440

1440:                                             ; preds = %1393, %1434
  %1441 = phi i64 [ %1396, %1393 ], [ %1407, %1434 ]
  %1442 = phi i32 [ 1, %1393 ], [ %1438, %1434 ]
  br label %1443

1443:                                             ; preds = %1440, %1443
  %1444 = phi i64 [ %1449, %1443 ], [ %1441, %1440 ]
  %1445 = phi i32 [ %1448, %1443 ], [ %1442, %1440 ]
  %1446 = getelementptr inbounds i32, ptr %11, i64 %1444
  %1447 = load i32, ptr %1446, align 4, !tbaa !5
  %1448 = mul nsw i32 %1447, %1445
  %1449 = add nsw i64 %1444, -1
  %1450 = trunc i64 %1444 to i32
  %1451 = icmp sgt i32 %1450, 0
  br i1 %1451, label %1443, label %1452, !llvm.loop !810

1452:                                             ; preds = %1443, %1434
  %1453 = phi i32 [ %1438, %1434 ], [ %1448, %1443 ]
  %1454 = and i64 %1403, 4294967295
  %1455 = getelementptr inbounds i32, ptr %6, i64 %1454
  %1456 = load i32, ptr %1455, align 4, !tbaa !5
  %1457 = mul nsw i32 %1456, %1453
  %1458 = add nsw i32 %1457, %1397
  %1459 = icmp sgt i64 %1395, 2
  %1460 = add nsw i64 %1396, -1
  %1461 = add i32 %1394, 1
  br i1 %1459, label %1393, label %1462, !llvm.loop !811

1462:                                             ; preds = %1452, %1390
  %1463 = phi i32 [ %1392, %1390 ], [ %1458, %1452 ]
  %1464 = icmp slt i32 %1463, %5
  br i1 %1464, label %1467, label %1465

1465:                                             ; preds = %1462
  %1466 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

1467:                                             ; preds = %1462
  %1468 = sext i32 %1463 to i64
  %1469 = getelementptr inbounds i64, ptr %1221, i64 %1468
  %1470 = load i64, ptr %1469, align 8, !tbaa !120
  %1471 = load i8, ptr %1223, align 1, !tbaa !11
  %1472 = trunc i64 %1470 to i8
  %1473 = add i8 %1471, %1472
  store i8 %1473, ptr %1223, align 1, !tbaa !11
  %1474 = add nuw nsw i32 %1391, 1
  br i1 %1237, label %1475, label %1525

1475:                                             ; preds = %1467
  %1476 = load i32, ptr %4, align 4, !tbaa !5
  %1477 = load i32, ptr %12, align 4, !tbaa !5
  %1478 = add nsw i32 %1477, -1
  %1479 = icmp slt i32 %1476, %1478
  br i1 %1479, label %1502, label %1480

1480:                                             ; preds = %1475
  %1481 = icmp eq i32 %1476, %1478
  br i1 %1481, label %1482, label %1518

1482:                                             ; preds = %1480
  store i32 0, ptr %4, align 4, !tbaa !5
  %1483 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1483, ptr %6, align 4, !tbaa !5
  br i1 %1242, label %1525, label %1484

1484:                                             ; preds = %1482, %1512
  %1485 = phi i64 [ %1516, %1512 ], [ 1, %1482 ]
  %1486 = getelementptr inbounds i32, ptr %4, i64 %1485
  %1487 = load i32, ptr %1486, align 4, !tbaa !5
  %1488 = getelementptr inbounds i32, ptr %12, i64 %1485
  %1489 = load i32, ptr %1488, align 4, !tbaa !5
  %1490 = add nsw i32 %1489, -1
  %1491 = icmp slt i32 %1487, %1490
  br i1 %1491, label %1492, label %1510

1492:                                             ; preds = %1484
  br i1 %1479, label %1502, label %1493

1493:                                             ; preds = %1492
  %1494 = shl i64 %1485, 32
  %1495 = add i64 %1494, -4294967296
  %1496 = ashr exact i64 %1495, 32
  %1497 = getelementptr inbounds i32, ptr %7, i64 %1496
  %1498 = load i32, ptr %1497, align 4, !tbaa !5
  %1499 = getelementptr inbounds i32, ptr %6, i64 %1485
  %1500 = load i32, ptr %1499, align 4, !tbaa !5
  %1501 = add nsw i32 %1500, %1498
  store i32 %1501, ptr %1499, align 4, !tbaa !5
  br label %1520

1502:                                             ; preds = %1475, %1492
  %1503 = phi i32 [ %1487, %1492 ], [ %1476, %1475 ]
  %1504 = phi ptr [ %1486, %1492 ], [ %4, %1475 ]
  %1505 = phi i64 [ %1485, %1492 ], [ 0, %1475 ]
  %1506 = add nsw i32 %1503, 1
  store i32 %1506, ptr %1504, align 4, !tbaa !5
  %1507 = getelementptr inbounds i32, ptr %7, i64 %1505
  %1508 = load i32, ptr %1507, align 4, !tbaa !5
  %1509 = getelementptr inbounds i32, ptr %6, i64 %1505
  br label %1520

1510:                                             ; preds = %1484
  %1511 = icmp eq i32 %1487, %1490
  br i1 %1511, label %1512, label %1518

1512:                                             ; preds = %1510
  store i32 0, ptr %1486, align 4, !tbaa !5
  %1513 = getelementptr inbounds i32, ptr %8, i64 %1485
  %1514 = load i32, ptr %1513, align 4, !tbaa !5
  %1515 = getelementptr inbounds i32, ptr %6, i64 %1485
  store i32 %1514, ptr %1515, align 4, !tbaa !5
  %1516 = add nuw nsw i64 %1485, 1
  %1517 = icmp eq i64 %1516, %1240
  br i1 %1517, label %1525, label %1484, !llvm.loop !812

1518:                                             ; preds = %1480, %1510
  %1519 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1520:                                             ; preds = %1493, %1502
  %1521 = phi ptr [ %1509, %1502 ], [ %1486, %1493 ]
  %1522 = phi i32 [ %1508, %1502 ], [ 1, %1493 ]
  %1523 = load i32, ptr %1521, align 4, !tbaa !5
  %1524 = add nsw i32 %1523, %1522
  store i32 %1524, ptr %1521, align 4, !tbaa !5
  br label %1525

1525:                                             ; preds = %1512, %1520, %1482, %1467
  %1526 = icmp eq i32 %1474, %5
  br i1 %1526, label %5411, label %1390, !llvm.loop !813

1527:                                             ; preds = %1228
  %1528 = getelementptr inbounds i32, ptr %3, i64 %19
  %1529 = load i32, ptr %1528, align 4, !tbaa !5
  %1530 = icmp eq i32 %1529, 0
  %1531 = icmp sgt i32 %5, 0
  br i1 %1530, label %1541, label %1532

1532:                                             ; preds = %1527
  br i1 %1531, label %1533, label %5411

1533:                                             ; preds = %1532
  %1534 = icmp sgt i32 %13, 1
  %1535 = icmp sgt i32 %13, 0
  %1536 = add i32 %13, -2
  %1537 = zext i32 %1536 to i64
  %1538 = zext i32 %13 to i64
  %1539 = add nuw i32 %5, 1
  %1540 = icmp eq i32 %13, 1
  br label %1680

1541:                                             ; preds = %1527
  br i1 %1531, label %1542, label %5411

1542:                                             ; preds = %1541
  %1543 = icmp sgt i32 %13, 1
  %1544 = icmp sgt i32 %13, 0
  %1545 = add i32 %13, -2
  %1546 = zext i32 %1545 to i64
  %1547 = zext i32 %13 to i64
  %1548 = add nuw i32 %5, 1
  %1549 = icmp eq i32 %13, 1
  br label %1550

1550:                                             ; preds = %1542, %1678
  %1551 = phi i32 [ 0, %1542 ], [ %1630, %1678 ]
  %1552 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1543, label %1553, label %1622

1553:                                             ; preds = %1550, %1612
  %1554 = phi i32 [ %1621, %1612 ], [ 0, %1550 ]
  %1555 = phi i64 [ %1563, %1612 ], [ %1547, %1550 ]
  %1556 = phi i64 [ %1620, %1612 ], [ %1546, %1550 ]
  %1557 = phi i32 [ %1618, %1612 ], [ %1552, %1550 ]
  %1558 = sub i32 %1545, %1554
  %1559 = tail call i32 @llvm.smin.i32(i32 %1558, i32 0)
  %1560 = sub i32 %1558, %1559
  %1561 = zext i32 %1560 to i64
  %1562 = add nuw nsw i64 %1561, 1
  %1563 = add nsw i64 %1555, -1
  %1564 = icmp ult i32 %1560, 31
  br i1 %1564, label %1600, label %1565

1565:                                             ; preds = %1553
  %1566 = and i64 %1562, 8589934560
  %1567 = sub i64 %1556, %1566
  br label %1568

1568:                                             ; preds = %1568, %1565
  %1569 = phi i64 [ 0, %1565 ], [ %1592, %1568 ]
  %1570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1588, %1568 ]
  %1571 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1589, %1568 ]
  %1572 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1590, %1568 ]
  %1573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1565 ], [ %1591, %1568 ]
  %1574 = sub i64 %1556, %1569
  %1575 = getelementptr inbounds i32, ptr %9, i64 %1574
  %1576 = getelementptr inbounds i32, ptr %1575, i64 -7
  %1577 = load <8 x i32>, ptr %1576, align 4, !tbaa !5
  %1578 = shufflevector <8 x i32> %1577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1579 = getelementptr inbounds i32, ptr %1575, i64 -15
  %1580 = load <8 x i32>, ptr %1579, align 4, !tbaa !5
  %1581 = shufflevector <8 x i32> %1580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1582 = getelementptr inbounds i32, ptr %1575, i64 -23
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !5
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = getelementptr inbounds i32, ptr %1575, i64 -31
  %1586 = load <8 x i32>, ptr %1585, align 4, !tbaa !5
  %1587 = shufflevector <8 x i32> %1586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1588 = mul <8 x i32> %1578, %1570
  %1589 = mul <8 x i32> %1581, %1571
  %1590 = mul <8 x i32> %1584, %1572
  %1591 = mul <8 x i32> %1587, %1573
  %1592 = add nuw i64 %1569, 32
  %1593 = icmp eq i64 %1592, %1566
  br i1 %1593, label %1594, label %1568, !llvm.loop !814

1594:                                             ; preds = %1568
  %1595 = mul <8 x i32> %1589, %1588
  %1596 = mul <8 x i32> %1590, %1595
  %1597 = mul <8 x i32> %1591, %1596
  %1598 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1597)
  %1599 = icmp eq i64 %1562, %1566
  br i1 %1599, label %1612, label %1600

1600:                                             ; preds = %1553, %1594
  %1601 = phi i64 [ %1556, %1553 ], [ %1567, %1594 ]
  %1602 = phi i32 [ 1, %1553 ], [ %1598, %1594 ]
  br label %1603

1603:                                             ; preds = %1600, %1603
  %1604 = phi i64 [ %1609, %1603 ], [ %1601, %1600 ]
  %1605 = phi i32 [ %1608, %1603 ], [ %1602, %1600 ]
  %1606 = getelementptr inbounds i32, ptr %9, i64 %1604
  %1607 = load i32, ptr %1606, align 4, !tbaa !5
  %1608 = mul nsw i32 %1607, %1605
  %1609 = add nsw i64 %1604, -1
  %1610 = trunc i64 %1604 to i32
  %1611 = icmp sgt i32 %1610, 0
  br i1 %1611, label %1603, label %1612, !llvm.loop !815

1612:                                             ; preds = %1603, %1594
  %1613 = phi i32 [ %1598, %1594 ], [ %1608, %1603 ]
  %1614 = and i64 %1563, 4294967295
  %1615 = getelementptr inbounds i32, ptr %6, i64 %1614
  %1616 = load i32, ptr %1615, align 4, !tbaa !5
  %1617 = mul nsw i32 %1616, %1613
  %1618 = add nsw i32 %1617, %1557
  %1619 = icmp sgt i64 %1555, 2
  %1620 = add nsw i64 %1556, -1
  %1621 = add i32 %1554, 1
  br i1 %1619, label %1553, label %1622, !llvm.loop !816

1622:                                             ; preds = %1612, %1550
  %1623 = phi i32 [ %1552, %1550 ], [ %1618, %1612 ]
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds i64, ptr %1221, i64 %1624
  %1626 = load i64, ptr %1625, align 8, !tbaa !120
  %1627 = trunc i64 %1626 to i8
  %1628 = load i8, ptr %1223, align 1, !tbaa !11
  %1629 = add i8 %1628, %1627
  store i8 %1629, ptr %1223, align 1, !tbaa !11
  %1630 = add nuw nsw i32 %1551, 1
  br i1 %1544, label %1631, label %1678

1631:                                             ; preds = %1622
  %1632 = load i32, ptr %4, align 4, !tbaa !5
  %1633 = load i32, ptr %12, align 4, !tbaa !5
  %1634 = add nsw i32 %1633, -1
  %1635 = icmp slt i32 %1632, %1634
  br i1 %1635, label %1655, label %1636

1636:                                             ; preds = %1631
  %1637 = icmp eq i32 %1632, %1634
  br i1 %1637, label %1638, label %1671

1638:                                             ; preds = %1636
  store i32 0, ptr %4, align 4, !tbaa !5
  %1639 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1639, ptr %6, align 4, !tbaa !5
  br i1 %1549, label %1678, label %1640

1640:                                             ; preds = %1638, %1665
  %1641 = phi i64 [ %1669, %1665 ], [ 1, %1638 ]
  %1642 = getelementptr inbounds i32, ptr %4, i64 %1641
  %1643 = load i32, ptr %1642, align 4, !tbaa !5
  %1644 = getelementptr inbounds i32, ptr %12, i64 %1641
  %1645 = load i32, ptr %1644, align 4, !tbaa !5
  %1646 = add nsw i32 %1645, -1
  %1647 = icmp slt i32 %1643, %1646
  br i1 %1647, label %1648, label %1663

1648:                                             ; preds = %1640
  br i1 %1635, label %1655, label %1649

1649:                                             ; preds = %1648
  %1650 = getelementptr inbounds i32, ptr %7, i64 %1641
  %1651 = load i32, ptr %1650, align 4, !tbaa !5
  %1652 = getelementptr inbounds i32, ptr %6, i64 %1641
  %1653 = load i32, ptr %1652, align 4, !tbaa !5
  %1654 = add nsw i32 %1653, %1651
  store i32 %1654, ptr %1652, align 4, !tbaa !5
  br label %1673

1655:                                             ; preds = %1631, %1648
  %1656 = phi i32 [ %1643, %1648 ], [ %1632, %1631 ]
  %1657 = phi ptr [ %1642, %1648 ], [ %4, %1631 ]
  %1658 = phi i64 [ %1641, %1648 ], [ 0, %1631 ]
  %1659 = add nsw i32 %1656, 1
  store i32 %1659, ptr %1657, align 4, !tbaa !5
  %1660 = getelementptr inbounds i32, ptr %7, i64 %1658
  %1661 = load i32, ptr %1660, align 4, !tbaa !5
  %1662 = getelementptr inbounds i32, ptr %6, i64 %1658
  br label %1673

1663:                                             ; preds = %1640
  %1664 = icmp eq i32 %1643, %1646
  br i1 %1664, label %1665, label %1671

1665:                                             ; preds = %1663
  store i32 0, ptr %1642, align 4, !tbaa !5
  %1666 = getelementptr inbounds i32, ptr %8, i64 %1641
  %1667 = load i32, ptr %1666, align 4, !tbaa !5
  %1668 = getelementptr inbounds i32, ptr %6, i64 %1641
  store i32 %1667, ptr %1668, align 4, !tbaa !5
  %1669 = add nuw nsw i64 %1641, 1
  %1670 = icmp eq i64 %1669, %1547
  br i1 %1670, label %1678, label %1640, !llvm.loop !817

1671:                                             ; preds = %1636, %1663
  %1672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1673:                                             ; preds = %1649, %1655
  %1674 = phi ptr [ %1662, %1655 ], [ %1642, %1649 ]
  %1675 = phi i32 [ %1661, %1655 ], [ 1, %1649 ]
  %1676 = load i32, ptr %1674, align 4, !tbaa !5
  %1677 = add nsw i32 %1676, %1675
  store i32 %1677, ptr %1674, align 4, !tbaa !5
  br label %1678

1678:                                             ; preds = %1665, %1673, %1638, %1622
  %1679 = icmp eq i32 %1630, %5
  br i1 %1679, label %5411, label %1550, !llvm.loop !818

1680:                                             ; preds = %1533, %1815
  %1681 = phi i32 [ 0, %1533 ], [ %1764, %1815 ]
  %1682 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1534, label %1683, label %1752

1683:                                             ; preds = %1680, %1742
  %1684 = phi i32 [ %1751, %1742 ], [ 0, %1680 ]
  %1685 = phi i64 [ %1693, %1742 ], [ %1538, %1680 ]
  %1686 = phi i64 [ %1750, %1742 ], [ %1537, %1680 ]
  %1687 = phi i32 [ %1748, %1742 ], [ %1682, %1680 ]
  %1688 = sub i32 %1536, %1684
  %1689 = tail call i32 @llvm.smin.i32(i32 %1688, i32 0)
  %1690 = sub i32 %1688, %1689
  %1691 = zext i32 %1690 to i64
  %1692 = add nuw nsw i64 %1691, 1
  %1693 = add nsw i64 %1685, -1
  %1694 = icmp ult i32 %1690, 31
  br i1 %1694, label %1730, label %1695

1695:                                             ; preds = %1683
  %1696 = and i64 %1692, 8589934560
  %1697 = sub i64 %1686, %1696
  br label %1698

1698:                                             ; preds = %1698, %1695
  %1699 = phi i64 [ 0, %1695 ], [ %1722, %1698 ]
  %1700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1695 ], [ %1718, %1698 ]
  %1701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1695 ], [ %1719, %1698 ]
  %1702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1695 ], [ %1720, %1698 ]
  %1703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1695 ], [ %1721, %1698 ]
  %1704 = sub i64 %1686, %1699
  %1705 = getelementptr inbounds i32, ptr %11, i64 %1704
  %1706 = getelementptr inbounds i32, ptr %1705, i64 -7
  %1707 = load <8 x i32>, ptr %1706, align 4, !tbaa !5
  %1708 = shufflevector <8 x i32> %1707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1709 = getelementptr inbounds i32, ptr %1705, i64 -15
  %1710 = load <8 x i32>, ptr %1709, align 4, !tbaa !5
  %1711 = shufflevector <8 x i32> %1710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1712 = getelementptr inbounds i32, ptr %1705, i64 -23
  %1713 = load <8 x i32>, ptr %1712, align 4, !tbaa !5
  %1714 = shufflevector <8 x i32> %1713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1715 = getelementptr inbounds i32, ptr %1705, i64 -31
  %1716 = load <8 x i32>, ptr %1715, align 4, !tbaa !5
  %1717 = shufflevector <8 x i32> %1716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1718 = mul <8 x i32> %1708, %1700
  %1719 = mul <8 x i32> %1711, %1701
  %1720 = mul <8 x i32> %1714, %1702
  %1721 = mul <8 x i32> %1717, %1703
  %1722 = add nuw i64 %1699, 32
  %1723 = icmp eq i64 %1722, %1696
  br i1 %1723, label %1724, label %1698, !llvm.loop !819

1724:                                             ; preds = %1698
  %1725 = mul <8 x i32> %1719, %1718
  %1726 = mul <8 x i32> %1720, %1725
  %1727 = mul <8 x i32> %1721, %1726
  %1728 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1727)
  %1729 = icmp eq i64 %1692, %1696
  br i1 %1729, label %1742, label %1730

1730:                                             ; preds = %1683, %1724
  %1731 = phi i64 [ %1686, %1683 ], [ %1697, %1724 ]
  %1732 = phi i32 [ 1, %1683 ], [ %1728, %1724 ]
  br label %1733

1733:                                             ; preds = %1730, %1733
  %1734 = phi i64 [ %1739, %1733 ], [ %1731, %1730 ]
  %1735 = phi i32 [ %1738, %1733 ], [ %1732, %1730 ]
  %1736 = getelementptr inbounds i32, ptr %11, i64 %1734
  %1737 = load i32, ptr %1736, align 4, !tbaa !5
  %1738 = mul nsw i32 %1737, %1735
  %1739 = add nsw i64 %1734, -1
  %1740 = trunc i64 %1734 to i32
  %1741 = icmp sgt i32 %1740, 0
  br i1 %1741, label %1733, label %1742, !llvm.loop !820

1742:                                             ; preds = %1733, %1724
  %1743 = phi i32 [ %1728, %1724 ], [ %1738, %1733 ]
  %1744 = and i64 %1693, 4294967295
  %1745 = getelementptr inbounds i32, ptr %6, i64 %1744
  %1746 = load i32, ptr %1745, align 4, !tbaa !5
  %1747 = mul nsw i32 %1746, %1743
  %1748 = add nsw i32 %1747, %1687
  %1749 = icmp sgt i64 %1685, 2
  %1750 = add nsw i64 %1686, -1
  %1751 = add i32 %1684, 1
  br i1 %1749, label %1683, label %1752, !llvm.loop !821

1752:                                             ; preds = %1742, %1680
  %1753 = phi i32 [ %1682, %1680 ], [ %1748, %1742 ]
  %1754 = icmp slt i32 %1753, %5
  br i1 %1754, label %1757, label %1755

1755:                                             ; preds = %1752
  %1756 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

1757:                                             ; preds = %1752
  %1758 = sext i32 %1753 to i64
  %1759 = getelementptr inbounds i64, ptr %1221, i64 %1758
  %1760 = load i64, ptr %1759, align 8, !tbaa !120
  %1761 = trunc i64 %1760 to i8
  %1762 = load i8, ptr %1223, align 1, !tbaa !11
  %1763 = add i8 %1762, %1761
  store i8 %1763, ptr %1223, align 1, !tbaa !11
  %1764 = add nuw nsw i32 %1681, 1
  br i1 %1535, label %1765, label %1815

1765:                                             ; preds = %1757
  %1766 = load i32, ptr %4, align 4, !tbaa !5
  %1767 = load i32, ptr %12, align 4, !tbaa !5
  %1768 = add nsw i32 %1767, -1
  %1769 = icmp slt i32 %1766, %1768
  br i1 %1769, label %1792, label %1770

1770:                                             ; preds = %1765
  %1771 = icmp eq i32 %1766, %1768
  br i1 %1771, label %1772, label %1808

1772:                                             ; preds = %1770
  store i32 0, ptr %4, align 4, !tbaa !5
  %1773 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1773, ptr %6, align 4, !tbaa !5
  br i1 %1540, label %1815, label %1774

1774:                                             ; preds = %1772, %1802
  %1775 = phi i64 [ %1806, %1802 ], [ 1, %1772 ]
  %1776 = getelementptr inbounds i32, ptr %4, i64 %1775
  %1777 = load i32, ptr %1776, align 4, !tbaa !5
  %1778 = getelementptr inbounds i32, ptr %12, i64 %1775
  %1779 = load i32, ptr %1778, align 4, !tbaa !5
  %1780 = add nsw i32 %1779, -1
  %1781 = icmp slt i32 %1777, %1780
  br i1 %1781, label %1782, label %1800

1782:                                             ; preds = %1774
  br i1 %1769, label %1792, label %1783

1783:                                             ; preds = %1782
  %1784 = shl i64 %1775, 32
  %1785 = add i64 %1784, -4294967296
  %1786 = ashr exact i64 %1785, 32
  %1787 = getelementptr inbounds i32, ptr %7, i64 %1786
  %1788 = load i32, ptr %1787, align 4, !tbaa !5
  %1789 = getelementptr inbounds i32, ptr %6, i64 %1775
  %1790 = load i32, ptr %1789, align 4, !tbaa !5
  %1791 = add nsw i32 %1790, %1788
  store i32 %1791, ptr %1789, align 4, !tbaa !5
  br label %1810

1792:                                             ; preds = %1765, %1782
  %1793 = phi i32 [ %1777, %1782 ], [ %1766, %1765 ]
  %1794 = phi ptr [ %1776, %1782 ], [ %4, %1765 ]
  %1795 = phi i64 [ %1775, %1782 ], [ 0, %1765 ]
  %1796 = add nsw i32 %1793, 1
  store i32 %1796, ptr %1794, align 4, !tbaa !5
  %1797 = getelementptr inbounds i32, ptr %7, i64 %1795
  %1798 = load i32, ptr %1797, align 4, !tbaa !5
  %1799 = getelementptr inbounds i32, ptr %6, i64 %1795
  br label %1810

1800:                                             ; preds = %1774
  %1801 = icmp eq i32 %1777, %1780
  br i1 %1801, label %1802, label %1808

1802:                                             ; preds = %1800
  store i32 0, ptr %1776, align 4, !tbaa !5
  %1803 = getelementptr inbounds i32, ptr %8, i64 %1775
  %1804 = load i32, ptr %1803, align 4, !tbaa !5
  %1805 = getelementptr inbounds i32, ptr %6, i64 %1775
  store i32 %1804, ptr %1805, align 4, !tbaa !5
  %1806 = add nuw nsw i64 %1775, 1
  %1807 = icmp eq i64 %1806, %1538
  br i1 %1807, label %1815, label %1774, !llvm.loop !822

1808:                                             ; preds = %1770, %1800
  %1809 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1810:                                             ; preds = %1783, %1792
  %1811 = phi ptr [ %1799, %1792 ], [ %1776, %1783 ]
  %1812 = phi i32 [ %1798, %1792 ], [ 1, %1783 ]
  %1813 = load i32, ptr %1811, align 4, !tbaa !5
  %1814 = add nsw i32 %1813, %1812
  store i32 %1814, ptr %1811, align 4, !tbaa !5
  br label %1815

1815:                                             ; preds = %1802, %1810, %1772, %1757
  %1816 = icmp eq i32 %1764, %5
  br i1 %1816, label %5411, label %1680, !llvm.loop !823

1817:                                             ; preds = %1228
  %1818 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1251, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

1819:                                             ; preds = %18
  %1820 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1821 = load ptr, ptr %1820, align 8, !tbaa !9
  %1822 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1823 = load ptr, ptr %1822, align 8, !tbaa !9
  store i16 0, ptr %1823, align 2, !tbaa !78
  %1824 = icmp eq i32 %13, 0
  br i1 %1824, label %1825, label %1828

1825:                                             ; preds = %1819
  %1826 = load i64, ptr %1821, align 8, !tbaa !120
  %1827 = trunc i64 %1826 to i16
  store i16 %1827, ptr %1823, align 2, !tbaa !78
  br label %5411

1828:                                             ; preds = %1819
  switch i32 %1, label %2421 [
    i32 1, label %1829
    i32 0, label %2131
  ]

1829:                                             ; preds = %1828
  %1830 = getelementptr inbounds i32, ptr %3, i64 %19
  %1831 = load i32, ptr %1830, align 4, !tbaa !5
  %1832 = icmp eq i32 %1831, 0
  %1833 = icmp sgt i32 %5, 0
  br i1 %1832, label %1843, label %1834

1834:                                             ; preds = %1829
  br i1 %1833, label %1835, label %5411

1835:                                             ; preds = %1834
  %1836 = icmp sgt i32 %13, 1
  %1837 = icmp sgt i32 %13, 0
  %1838 = add i32 %13, -2
  %1839 = zext i32 %1838 to i64
  %1840 = zext i32 %13 to i64
  %1841 = add nuw i32 %5, 1
  %1842 = icmp eq i32 %13, 1
  br label %1990

1843:                                             ; preds = %1829
  br i1 %1833, label %1844, label %5411

1844:                                             ; preds = %1843
  %1845 = icmp sgt i32 %13, 1
  %1846 = icmp sgt i32 %13, 0
  %1847 = add i32 %13, -2
  %1848 = zext i32 %1847 to i64
  %1849 = zext i32 %13 to i64
  %1850 = add nuw i32 %5, 1
  %1851 = icmp eq i32 %13, 1
  br label %1852

1852:                                             ; preds = %1844, %1988
  %1853 = phi i16 [ 0, %1844 ], [ %1939, %1988 ]
  %1854 = phi i32 [ 0, %1844 ], [ %1940, %1988 ]
  %1855 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1845, label %1856, label %1925

1856:                                             ; preds = %1852, %1915
  %1857 = phi i32 [ %1924, %1915 ], [ 0, %1852 ]
  %1858 = phi i64 [ %1866, %1915 ], [ %1849, %1852 ]
  %1859 = phi i64 [ %1923, %1915 ], [ %1848, %1852 ]
  %1860 = phi i32 [ %1921, %1915 ], [ %1855, %1852 ]
  %1861 = sub i32 %1847, %1857
  %1862 = tail call i32 @llvm.smin.i32(i32 %1861, i32 0)
  %1863 = sub i32 %1861, %1862
  %1864 = zext i32 %1863 to i64
  %1865 = add nuw nsw i64 %1864, 1
  %1866 = add nsw i64 %1858, -1
  %1867 = icmp ult i32 %1863, 31
  br i1 %1867, label %1903, label %1868

1868:                                             ; preds = %1856
  %1869 = and i64 %1865, 8589934560
  %1870 = sub i64 %1859, %1869
  br label %1871

1871:                                             ; preds = %1871, %1868
  %1872 = phi i64 [ 0, %1868 ], [ %1895, %1871 ]
  %1873 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1868 ], [ %1891, %1871 ]
  %1874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1868 ], [ %1892, %1871 ]
  %1875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1868 ], [ %1893, %1871 ]
  %1876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1868 ], [ %1894, %1871 ]
  %1877 = sub i64 %1859, %1872
  %1878 = getelementptr inbounds i32, ptr %9, i64 %1877
  %1879 = getelementptr inbounds i32, ptr %1878, i64 -7
  %1880 = load <8 x i32>, ptr %1879, align 4, !tbaa !5
  %1881 = shufflevector <8 x i32> %1880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1882 = getelementptr inbounds i32, ptr %1878, i64 -15
  %1883 = load <8 x i32>, ptr %1882, align 4, !tbaa !5
  %1884 = shufflevector <8 x i32> %1883, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1885 = getelementptr inbounds i32, ptr %1878, i64 -23
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = getelementptr inbounds i32, ptr %1878, i64 -31
  %1889 = load <8 x i32>, ptr %1888, align 4, !tbaa !5
  %1890 = shufflevector <8 x i32> %1889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1891 = mul <8 x i32> %1881, %1873
  %1892 = mul <8 x i32> %1884, %1874
  %1893 = mul <8 x i32> %1887, %1875
  %1894 = mul <8 x i32> %1890, %1876
  %1895 = add nuw i64 %1872, 32
  %1896 = icmp eq i64 %1895, %1869
  br i1 %1896, label %1897, label %1871, !llvm.loop !824

1897:                                             ; preds = %1871
  %1898 = mul <8 x i32> %1892, %1891
  %1899 = mul <8 x i32> %1893, %1898
  %1900 = mul <8 x i32> %1894, %1899
  %1901 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1900)
  %1902 = icmp eq i64 %1865, %1869
  br i1 %1902, label %1915, label %1903

1903:                                             ; preds = %1856, %1897
  %1904 = phi i64 [ %1859, %1856 ], [ %1870, %1897 ]
  %1905 = phi i32 [ 1, %1856 ], [ %1901, %1897 ]
  br label %1906

1906:                                             ; preds = %1903, %1906
  %1907 = phi i64 [ %1912, %1906 ], [ %1904, %1903 ]
  %1908 = phi i32 [ %1911, %1906 ], [ %1905, %1903 ]
  %1909 = getelementptr inbounds i32, ptr %9, i64 %1907
  %1910 = load i32, ptr %1909, align 4, !tbaa !5
  %1911 = mul nsw i32 %1910, %1908
  %1912 = add nsw i64 %1907, -1
  %1913 = trunc i64 %1907 to i32
  %1914 = icmp sgt i32 %1913, 0
  br i1 %1914, label %1906, label %1915, !llvm.loop !825

1915:                                             ; preds = %1906, %1897
  %1916 = phi i32 [ %1901, %1897 ], [ %1911, %1906 ]
  %1917 = and i64 %1866, 4294967295
  %1918 = getelementptr inbounds i32, ptr %6, i64 %1917
  %1919 = load i32, ptr %1918, align 4, !tbaa !5
  %1920 = mul nsw i32 %1919, %1916
  %1921 = add nsw i32 %1920, %1860
  %1922 = icmp sgt i64 %1858, 2
  %1923 = add nsw i64 %1859, -1
  %1924 = add i32 %1857, 1
  br i1 %1922, label %1856, label %1925, !llvm.loop !826

1925:                                             ; preds = %1915, %1852
  %1926 = phi i32 [ %1855, %1852 ], [ %1921, %1915 ]
  %1927 = sext i32 %1926 to i64
  %1928 = getelementptr inbounds double, ptr %2, i64 %1927
  %1929 = load double, ptr %1928, align 8, !tbaa !18
  %1930 = getelementptr inbounds i64, ptr %1821, i64 %1927
  %1931 = load i64, ptr %1930, align 8, !tbaa !120
  %1932 = trunc i64 %1931 to i32
  %1933 = sitofp i16 %1853 to double
  %1934 = shl i32 %1932, 16
  %1935 = ashr exact i32 %1934, 16
  %1936 = sitofp i32 %1935 to double
  %1937 = fmul fast double %1929, %1936
  %1938 = fadd fast double %1937, %1933
  %1939 = fptosi double %1938 to i16
  %1940 = add nuw nsw i32 %1854, 1
  br i1 %1846, label %1941, label %1988

1941:                                             ; preds = %1925
  %1942 = load i32, ptr %4, align 4, !tbaa !5
  %1943 = load i32, ptr %12, align 4, !tbaa !5
  %1944 = add nsw i32 %1943, -1
  %1945 = icmp slt i32 %1942, %1944
  br i1 %1945, label %1965, label %1946

1946:                                             ; preds = %1941
  %1947 = icmp eq i32 %1942, %1944
  br i1 %1947, label %1948, label %1981

1948:                                             ; preds = %1946
  store i32 0, ptr %4, align 4, !tbaa !5
  %1949 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1949, ptr %6, align 4, !tbaa !5
  br i1 %1851, label %1988, label %1950

1950:                                             ; preds = %1948, %1975
  %1951 = phi i64 [ %1979, %1975 ], [ 1, %1948 ]
  %1952 = getelementptr inbounds i32, ptr %4, i64 %1951
  %1953 = load i32, ptr %1952, align 4, !tbaa !5
  %1954 = getelementptr inbounds i32, ptr %12, i64 %1951
  %1955 = load i32, ptr %1954, align 4, !tbaa !5
  %1956 = add nsw i32 %1955, -1
  %1957 = icmp slt i32 %1953, %1956
  br i1 %1957, label %1958, label %1973

1958:                                             ; preds = %1950
  br i1 %1945, label %1965, label %1959

1959:                                             ; preds = %1958
  %1960 = getelementptr inbounds i32, ptr %7, i64 %1951
  %1961 = load i32, ptr %1960, align 4, !tbaa !5
  %1962 = getelementptr inbounds i32, ptr %6, i64 %1951
  %1963 = load i32, ptr %1962, align 4, !tbaa !5
  %1964 = add nsw i32 %1963, %1961
  store i32 %1964, ptr %1962, align 4, !tbaa !5
  br label %1983

1965:                                             ; preds = %1941, %1958
  %1966 = phi i32 [ %1953, %1958 ], [ %1942, %1941 ]
  %1967 = phi ptr [ %1952, %1958 ], [ %4, %1941 ]
  %1968 = phi i64 [ %1951, %1958 ], [ 0, %1941 ]
  %1969 = add nsw i32 %1966, 1
  store i32 %1969, ptr %1967, align 4, !tbaa !5
  %1970 = getelementptr inbounds i32, ptr %7, i64 %1968
  %1971 = load i32, ptr %1970, align 4, !tbaa !5
  %1972 = getelementptr inbounds i32, ptr %6, i64 %1968
  br label %1983

1973:                                             ; preds = %1950
  %1974 = icmp eq i32 %1953, %1956
  br i1 %1974, label %1975, label %1981

1975:                                             ; preds = %1973
  store i32 0, ptr %1952, align 4, !tbaa !5
  %1976 = getelementptr inbounds i32, ptr %8, i64 %1951
  %1977 = load i32, ptr %1976, align 4, !tbaa !5
  %1978 = getelementptr inbounds i32, ptr %6, i64 %1951
  store i32 %1977, ptr %1978, align 4, !tbaa !5
  %1979 = add nuw nsw i64 %1951, 1
  %1980 = icmp eq i64 %1979, %1849
  br i1 %1980, label %1988, label %1950, !llvm.loop !827

1981:                                             ; preds = %1946, %1973
  store i16 %1939, ptr %1823, align 2, !tbaa !78
  %1982 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

1983:                                             ; preds = %1959, %1965
  %1984 = phi ptr [ %1972, %1965 ], [ %1952, %1959 ]
  %1985 = phi i32 [ %1971, %1965 ], [ 1, %1959 ]
  %1986 = load i32, ptr %1984, align 4, !tbaa !5
  %1987 = add nsw i32 %1986, %1985
  store i32 %1987, ptr %1984, align 4, !tbaa !5
  br label %1988

1988:                                             ; preds = %1975, %1983, %1948, %1925
  %1989 = icmp eq i32 %1940, %5
  br i1 %1989, label %5405, label %1852, !llvm.loop !828

1990:                                             ; preds = %1835, %2129
  %1991 = phi i64 [ 0, %1835 ], [ %2076, %2129 ]
  %1992 = phi i32 [ 0, %1835 ], [ %2078, %2129 ]
  %1993 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1836, label %1994, label %2063

1994:                                             ; preds = %1990, %2053
  %1995 = phi i32 [ %2062, %2053 ], [ 0, %1990 ]
  %1996 = phi i64 [ %2004, %2053 ], [ %1840, %1990 ]
  %1997 = phi i64 [ %2061, %2053 ], [ %1839, %1990 ]
  %1998 = phi i32 [ %2059, %2053 ], [ %1993, %1990 ]
  %1999 = sub i32 %1838, %1995
  %2000 = tail call i32 @llvm.smin.i32(i32 %1999, i32 0)
  %2001 = sub i32 %1999, %2000
  %2002 = zext i32 %2001 to i64
  %2003 = add nuw nsw i64 %2002, 1
  %2004 = add nsw i64 %1996, -1
  %2005 = icmp ult i32 %2001, 31
  br i1 %2005, label %2041, label %2006

2006:                                             ; preds = %1994
  %2007 = and i64 %2003, 8589934560
  %2008 = sub i64 %1997, %2007
  br label %2009

2009:                                             ; preds = %2009, %2006
  %2010 = phi i64 [ 0, %2006 ], [ %2033, %2009 ]
  %2011 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2006 ], [ %2029, %2009 ]
  %2012 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2006 ], [ %2030, %2009 ]
  %2013 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2006 ], [ %2031, %2009 ]
  %2014 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2006 ], [ %2032, %2009 ]
  %2015 = sub i64 %1997, %2010
  %2016 = getelementptr inbounds i32, ptr %11, i64 %2015
  %2017 = getelementptr inbounds i32, ptr %2016, i64 -7
  %2018 = load <8 x i32>, ptr %2017, align 4, !tbaa !5
  %2019 = shufflevector <8 x i32> %2018, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2020 = getelementptr inbounds i32, ptr %2016, i64 -15
  %2021 = load <8 x i32>, ptr %2020, align 4, !tbaa !5
  %2022 = shufflevector <8 x i32> %2021, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2023 = getelementptr inbounds i32, ptr %2016, i64 -23
  %2024 = load <8 x i32>, ptr %2023, align 4, !tbaa !5
  %2025 = shufflevector <8 x i32> %2024, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2026 = getelementptr inbounds i32, ptr %2016, i64 -31
  %2027 = load <8 x i32>, ptr %2026, align 4, !tbaa !5
  %2028 = shufflevector <8 x i32> %2027, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2029 = mul <8 x i32> %2019, %2011
  %2030 = mul <8 x i32> %2022, %2012
  %2031 = mul <8 x i32> %2025, %2013
  %2032 = mul <8 x i32> %2028, %2014
  %2033 = add nuw i64 %2010, 32
  %2034 = icmp eq i64 %2033, %2007
  br i1 %2034, label %2035, label %2009, !llvm.loop !829

2035:                                             ; preds = %2009
  %2036 = mul <8 x i32> %2030, %2029
  %2037 = mul <8 x i32> %2031, %2036
  %2038 = mul <8 x i32> %2032, %2037
  %2039 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2038)
  %2040 = icmp eq i64 %2003, %2007
  br i1 %2040, label %2053, label %2041

2041:                                             ; preds = %1994, %2035
  %2042 = phi i64 [ %1997, %1994 ], [ %2008, %2035 ]
  %2043 = phi i32 [ 1, %1994 ], [ %2039, %2035 ]
  br label %2044

2044:                                             ; preds = %2041, %2044
  %2045 = phi i64 [ %2050, %2044 ], [ %2042, %2041 ]
  %2046 = phi i32 [ %2049, %2044 ], [ %2043, %2041 ]
  %2047 = getelementptr inbounds i32, ptr %11, i64 %2045
  %2048 = load i32, ptr %2047, align 4, !tbaa !5
  %2049 = mul nsw i32 %2048, %2046
  %2050 = add nsw i64 %2045, -1
  %2051 = trunc i64 %2045 to i32
  %2052 = icmp sgt i32 %2051, 0
  br i1 %2052, label %2044, label %2053, !llvm.loop !830

2053:                                             ; preds = %2044, %2035
  %2054 = phi i32 [ %2039, %2035 ], [ %2049, %2044 ]
  %2055 = and i64 %2004, 4294967295
  %2056 = getelementptr inbounds i32, ptr %6, i64 %2055
  %2057 = load i32, ptr %2056, align 4, !tbaa !5
  %2058 = mul nsw i32 %2057, %2054
  %2059 = add nsw i32 %2058, %1998
  %2060 = icmp sgt i64 %1996, 2
  %2061 = add nsw i64 %1997, -1
  %2062 = add i32 %1995, 1
  br i1 %2060, label %1994, label %2063, !llvm.loop !831

2063:                                             ; preds = %2053, %1990
  %2064 = phi i32 [ %1993, %1990 ], [ %2059, %2053 ]
  %2065 = icmp slt i32 %2064, %5
  br i1 %2065, label %2068, label %2066

2066:                                             ; preds = %2063
  %2067 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

2068:                                             ; preds = %2063
  %2069 = sext i32 %2064 to i64
  %2070 = getelementptr inbounds i64, ptr %1821, i64 %2069
  %2071 = load i64, ptr %2070, align 8, !tbaa !120
  %2072 = shl i64 %1991, 48
  %2073 = ashr exact i64 %2072, 48
  %2074 = shl i64 %2071, 48
  %2075 = ashr exact i64 %2074, 48
  %2076 = add nsw i64 %2075, %2073
  %2077 = trunc i64 %2076 to i16
  store i16 %2077, ptr %1823, align 2, !tbaa !78
  %2078 = add nuw nsw i32 %1992, 1
  br i1 %1837, label %2079, label %2129

2079:                                             ; preds = %2068
  %2080 = load i32, ptr %4, align 4, !tbaa !5
  %2081 = load i32, ptr %12, align 4, !tbaa !5
  %2082 = add nsw i32 %2081, -1
  %2083 = icmp slt i32 %2080, %2082
  br i1 %2083, label %2106, label %2084

2084:                                             ; preds = %2079
  %2085 = icmp eq i32 %2080, %2082
  br i1 %2085, label %2086, label %2122

2086:                                             ; preds = %2084
  store i32 0, ptr %4, align 4, !tbaa !5
  %2087 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2087, ptr %6, align 4, !tbaa !5
  br i1 %1842, label %2129, label %2088

2088:                                             ; preds = %2086, %2116
  %2089 = phi i64 [ %2120, %2116 ], [ 1, %2086 ]
  %2090 = getelementptr inbounds i32, ptr %4, i64 %2089
  %2091 = load i32, ptr %2090, align 4, !tbaa !5
  %2092 = getelementptr inbounds i32, ptr %12, i64 %2089
  %2093 = load i32, ptr %2092, align 4, !tbaa !5
  %2094 = add nsw i32 %2093, -1
  %2095 = icmp slt i32 %2091, %2094
  br i1 %2095, label %2096, label %2114

2096:                                             ; preds = %2088
  br i1 %2083, label %2106, label %2097

2097:                                             ; preds = %2096
  %2098 = shl i64 %2089, 32
  %2099 = add i64 %2098, -4294967296
  %2100 = ashr exact i64 %2099, 32
  %2101 = getelementptr inbounds i32, ptr %7, i64 %2100
  %2102 = load i32, ptr %2101, align 4, !tbaa !5
  %2103 = getelementptr inbounds i32, ptr %6, i64 %2089
  %2104 = load i32, ptr %2103, align 4, !tbaa !5
  %2105 = add nsw i32 %2104, %2102
  store i32 %2105, ptr %2103, align 4, !tbaa !5
  br label %2124

2106:                                             ; preds = %2079, %2096
  %2107 = phi i32 [ %2091, %2096 ], [ %2080, %2079 ]
  %2108 = phi ptr [ %2090, %2096 ], [ %4, %2079 ]
  %2109 = phi i64 [ %2089, %2096 ], [ 0, %2079 ]
  %2110 = add nsw i32 %2107, 1
  store i32 %2110, ptr %2108, align 4, !tbaa !5
  %2111 = getelementptr inbounds i32, ptr %7, i64 %2109
  %2112 = load i32, ptr %2111, align 4, !tbaa !5
  %2113 = getelementptr inbounds i32, ptr %6, i64 %2109
  br label %2124

2114:                                             ; preds = %2088
  %2115 = icmp eq i32 %2091, %2094
  br i1 %2115, label %2116, label %2122

2116:                                             ; preds = %2114
  store i32 0, ptr %2090, align 4, !tbaa !5
  %2117 = getelementptr inbounds i32, ptr %8, i64 %2089
  %2118 = load i32, ptr %2117, align 4, !tbaa !5
  %2119 = getelementptr inbounds i32, ptr %6, i64 %2089
  store i32 %2118, ptr %2119, align 4, !tbaa !5
  %2120 = add nuw nsw i64 %2089, 1
  %2121 = icmp eq i64 %2120, %1840
  br i1 %2121, label %2129, label %2088, !llvm.loop !832

2122:                                             ; preds = %2084, %2114
  %2123 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

2124:                                             ; preds = %2097, %2106
  %2125 = phi ptr [ %2113, %2106 ], [ %2090, %2097 ]
  %2126 = phi i32 [ %2112, %2106 ], [ 1, %2097 ]
  %2127 = load i32, ptr %2125, align 4, !tbaa !5
  %2128 = add nsw i32 %2127, %2126
  store i32 %2128, ptr %2125, align 4, !tbaa !5
  br label %2129

2129:                                             ; preds = %2116, %2124, %2086, %2068
  %2130 = icmp eq i32 %2078, %5
  br i1 %2130, label %5411, label %1990, !llvm.loop !833

2131:                                             ; preds = %1828
  %2132 = getelementptr inbounds i32, ptr %3, i64 %19
  %2133 = load i32, ptr %2132, align 4, !tbaa !5
  %2134 = icmp eq i32 %2133, 0
  %2135 = icmp sgt i32 %5, 0
  br i1 %2134, label %2145, label %2136

2136:                                             ; preds = %2131
  br i1 %2135, label %2137, label %5411

2137:                                             ; preds = %2136
  %2138 = icmp sgt i32 %13, 1
  %2139 = icmp sgt i32 %13, 0
  %2140 = add i32 %13, -2
  %2141 = zext i32 %2140 to i64
  %2142 = zext i32 %13 to i64
  %2143 = add nuw i32 %5, 1
  %2144 = icmp eq i32 %13, 1
  br label %2284

2145:                                             ; preds = %2131
  br i1 %2135, label %2146, label %5411

2146:                                             ; preds = %2145
  %2147 = icmp sgt i32 %13, 1
  %2148 = icmp sgt i32 %13, 0
  %2149 = add i32 %13, -2
  %2150 = zext i32 %2149 to i64
  %2151 = zext i32 %13 to i64
  %2152 = add nuw i32 %5, 1
  %2153 = icmp eq i32 %13, 1
  br label %2154

2154:                                             ; preds = %2146, %2282
  %2155 = phi i16 [ 0, %2146 ], [ %2233, %2282 ]
  %2156 = phi i32 [ 0, %2146 ], [ %2234, %2282 ]
  %2157 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2147, label %2158, label %2227

2158:                                             ; preds = %2154, %2217
  %2159 = phi i32 [ %2226, %2217 ], [ 0, %2154 ]
  %2160 = phi i64 [ %2168, %2217 ], [ %2151, %2154 ]
  %2161 = phi i64 [ %2225, %2217 ], [ %2150, %2154 ]
  %2162 = phi i32 [ %2223, %2217 ], [ %2157, %2154 ]
  %2163 = sub i32 %2149, %2159
  %2164 = tail call i32 @llvm.smin.i32(i32 %2163, i32 0)
  %2165 = sub i32 %2163, %2164
  %2166 = zext i32 %2165 to i64
  %2167 = add nuw nsw i64 %2166, 1
  %2168 = add nsw i64 %2160, -1
  %2169 = icmp ult i32 %2165, 31
  br i1 %2169, label %2205, label %2170

2170:                                             ; preds = %2158
  %2171 = and i64 %2167, 8589934560
  %2172 = sub i64 %2161, %2171
  br label %2173

2173:                                             ; preds = %2173, %2170
  %2174 = phi i64 [ 0, %2170 ], [ %2197, %2173 ]
  %2175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2170 ], [ %2193, %2173 ]
  %2176 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2170 ], [ %2194, %2173 ]
  %2177 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2170 ], [ %2195, %2173 ]
  %2178 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2170 ], [ %2196, %2173 ]
  %2179 = sub i64 %2161, %2174
  %2180 = getelementptr inbounds i32, ptr %9, i64 %2179
  %2181 = getelementptr inbounds i32, ptr %2180, i64 -7
  %2182 = load <8 x i32>, ptr %2181, align 4, !tbaa !5
  %2183 = shufflevector <8 x i32> %2182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2184 = getelementptr inbounds i32, ptr %2180, i64 -15
  %2185 = load <8 x i32>, ptr %2184, align 4, !tbaa !5
  %2186 = shufflevector <8 x i32> %2185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2187 = getelementptr inbounds i32, ptr %2180, i64 -23
  %2188 = load <8 x i32>, ptr %2187, align 4, !tbaa !5
  %2189 = shufflevector <8 x i32> %2188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2190 = getelementptr inbounds i32, ptr %2180, i64 -31
  %2191 = load <8 x i32>, ptr %2190, align 4, !tbaa !5
  %2192 = shufflevector <8 x i32> %2191, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2193 = mul <8 x i32> %2183, %2175
  %2194 = mul <8 x i32> %2186, %2176
  %2195 = mul <8 x i32> %2189, %2177
  %2196 = mul <8 x i32> %2192, %2178
  %2197 = add nuw i64 %2174, 32
  %2198 = icmp eq i64 %2197, %2171
  br i1 %2198, label %2199, label %2173, !llvm.loop !834

2199:                                             ; preds = %2173
  %2200 = mul <8 x i32> %2194, %2193
  %2201 = mul <8 x i32> %2195, %2200
  %2202 = mul <8 x i32> %2196, %2201
  %2203 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2202)
  %2204 = icmp eq i64 %2167, %2171
  br i1 %2204, label %2217, label %2205

2205:                                             ; preds = %2158, %2199
  %2206 = phi i64 [ %2161, %2158 ], [ %2172, %2199 ]
  %2207 = phi i32 [ 1, %2158 ], [ %2203, %2199 ]
  br label %2208

2208:                                             ; preds = %2205, %2208
  %2209 = phi i64 [ %2214, %2208 ], [ %2206, %2205 ]
  %2210 = phi i32 [ %2213, %2208 ], [ %2207, %2205 ]
  %2211 = getelementptr inbounds i32, ptr %9, i64 %2209
  %2212 = load i32, ptr %2211, align 4, !tbaa !5
  %2213 = mul nsw i32 %2212, %2210
  %2214 = add nsw i64 %2209, -1
  %2215 = trunc i64 %2209 to i32
  %2216 = icmp sgt i32 %2215, 0
  br i1 %2216, label %2208, label %2217, !llvm.loop !835

2217:                                             ; preds = %2208, %2199
  %2218 = phi i32 [ %2203, %2199 ], [ %2213, %2208 ]
  %2219 = and i64 %2168, 4294967295
  %2220 = getelementptr inbounds i32, ptr %6, i64 %2219
  %2221 = load i32, ptr %2220, align 4, !tbaa !5
  %2222 = mul nsw i32 %2221, %2218
  %2223 = add nsw i32 %2222, %2162
  %2224 = icmp sgt i64 %2160, 2
  %2225 = add nsw i64 %2161, -1
  %2226 = add i32 %2159, 1
  br i1 %2224, label %2158, label %2227, !llvm.loop !836

2227:                                             ; preds = %2217, %2154
  %2228 = phi i32 [ %2157, %2154 ], [ %2223, %2217 ]
  %2229 = sext i32 %2228 to i64
  %2230 = getelementptr inbounds i64, ptr %1821, i64 %2229
  %2231 = load i64, ptr %2230, align 8, !tbaa !120
  %2232 = trunc i64 %2231 to i16
  %2233 = add i16 %2155, %2232
  %2234 = add nuw nsw i32 %2156, 1
  br i1 %2148, label %2235, label %2282

2235:                                             ; preds = %2227
  %2236 = load i32, ptr %4, align 4, !tbaa !5
  %2237 = load i32, ptr %12, align 4, !tbaa !5
  %2238 = add nsw i32 %2237, -1
  %2239 = icmp slt i32 %2236, %2238
  br i1 %2239, label %2259, label %2240

2240:                                             ; preds = %2235
  %2241 = icmp eq i32 %2236, %2238
  br i1 %2241, label %2242, label %2275

2242:                                             ; preds = %2240
  store i32 0, ptr %4, align 4, !tbaa !5
  %2243 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2243, ptr %6, align 4, !tbaa !5
  br i1 %2153, label %2282, label %2244

2244:                                             ; preds = %2242, %2269
  %2245 = phi i64 [ %2273, %2269 ], [ 1, %2242 ]
  %2246 = getelementptr inbounds i32, ptr %4, i64 %2245
  %2247 = load i32, ptr %2246, align 4, !tbaa !5
  %2248 = getelementptr inbounds i32, ptr %12, i64 %2245
  %2249 = load i32, ptr %2248, align 4, !tbaa !5
  %2250 = add nsw i32 %2249, -1
  %2251 = icmp slt i32 %2247, %2250
  br i1 %2251, label %2252, label %2267

2252:                                             ; preds = %2244
  br i1 %2239, label %2259, label %2253

2253:                                             ; preds = %2252
  %2254 = getelementptr inbounds i32, ptr %7, i64 %2245
  %2255 = load i32, ptr %2254, align 4, !tbaa !5
  %2256 = getelementptr inbounds i32, ptr %6, i64 %2245
  %2257 = load i32, ptr %2256, align 4, !tbaa !5
  %2258 = add nsw i32 %2257, %2255
  store i32 %2258, ptr %2256, align 4, !tbaa !5
  br label %2277

2259:                                             ; preds = %2235, %2252
  %2260 = phi i32 [ %2247, %2252 ], [ %2236, %2235 ]
  %2261 = phi ptr [ %2246, %2252 ], [ %4, %2235 ]
  %2262 = phi i64 [ %2245, %2252 ], [ 0, %2235 ]
  %2263 = add nsw i32 %2260, 1
  store i32 %2263, ptr %2261, align 4, !tbaa !5
  %2264 = getelementptr inbounds i32, ptr %7, i64 %2262
  %2265 = load i32, ptr %2264, align 4, !tbaa !5
  %2266 = getelementptr inbounds i32, ptr %6, i64 %2262
  br label %2277

2267:                                             ; preds = %2244
  %2268 = icmp eq i32 %2247, %2250
  br i1 %2268, label %2269, label %2275

2269:                                             ; preds = %2267
  store i32 0, ptr %2246, align 4, !tbaa !5
  %2270 = getelementptr inbounds i32, ptr %8, i64 %2245
  %2271 = load i32, ptr %2270, align 4, !tbaa !5
  %2272 = getelementptr inbounds i32, ptr %6, i64 %2245
  store i32 %2271, ptr %2272, align 4, !tbaa !5
  %2273 = add nuw nsw i64 %2245, 1
  %2274 = icmp eq i64 %2273, %2151
  br i1 %2274, label %2282, label %2244, !llvm.loop !837

2275:                                             ; preds = %2240, %2267
  store i16 %2233, ptr %1823, align 2, !tbaa !78
  %2276 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

2277:                                             ; preds = %2253, %2259
  %2278 = phi ptr [ %2266, %2259 ], [ %2246, %2253 ]
  %2279 = phi i32 [ %2265, %2259 ], [ 1, %2253 ]
  %2280 = load i32, ptr %2278, align 4, !tbaa !5
  %2281 = add nsw i32 %2280, %2279
  store i32 %2281, ptr %2278, align 4, !tbaa !5
  br label %2282

2282:                                             ; preds = %2269, %2277, %2242, %2227
  %2283 = icmp eq i32 %2234, %5
  br i1 %2283, label %5406, label %2154, !llvm.loop !838

2284:                                             ; preds = %2137, %2419
  %2285 = phi i16 [ 0, %2137 ], [ %2367, %2419 ]
  %2286 = phi i32 [ 0, %2137 ], [ %2368, %2419 ]
  %2287 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2138, label %2288, label %2357

2288:                                             ; preds = %2284, %2347
  %2289 = phi i32 [ %2356, %2347 ], [ 0, %2284 ]
  %2290 = phi i64 [ %2298, %2347 ], [ %2142, %2284 ]
  %2291 = phi i64 [ %2355, %2347 ], [ %2141, %2284 ]
  %2292 = phi i32 [ %2353, %2347 ], [ %2287, %2284 ]
  %2293 = sub i32 %2140, %2289
  %2294 = tail call i32 @llvm.smin.i32(i32 %2293, i32 0)
  %2295 = sub i32 %2293, %2294
  %2296 = zext i32 %2295 to i64
  %2297 = add nuw nsw i64 %2296, 1
  %2298 = add nsw i64 %2290, -1
  %2299 = icmp ult i32 %2295, 31
  br i1 %2299, label %2335, label %2300

2300:                                             ; preds = %2288
  %2301 = and i64 %2297, 8589934560
  %2302 = sub i64 %2291, %2301
  br label %2303

2303:                                             ; preds = %2303, %2300
  %2304 = phi i64 [ 0, %2300 ], [ %2327, %2303 ]
  %2305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2300 ], [ %2323, %2303 ]
  %2306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2300 ], [ %2324, %2303 ]
  %2307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2300 ], [ %2325, %2303 ]
  %2308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2300 ], [ %2326, %2303 ]
  %2309 = sub i64 %2291, %2304
  %2310 = getelementptr inbounds i32, ptr %11, i64 %2309
  %2311 = getelementptr inbounds i32, ptr %2310, i64 -7
  %2312 = load <8 x i32>, ptr %2311, align 4, !tbaa !5
  %2313 = shufflevector <8 x i32> %2312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2314 = getelementptr inbounds i32, ptr %2310, i64 -15
  %2315 = load <8 x i32>, ptr %2314, align 4, !tbaa !5
  %2316 = shufflevector <8 x i32> %2315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2317 = getelementptr inbounds i32, ptr %2310, i64 -23
  %2318 = load <8 x i32>, ptr %2317, align 4, !tbaa !5
  %2319 = shufflevector <8 x i32> %2318, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2320 = getelementptr inbounds i32, ptr %2310, i64 -31
  %2321 = load <8 x i32>, ptr %2320, align 4, !tbaa !5
  %2322 = shufflevector <8 x i32> %2321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2323 = mul <8 x i32> %2313, %2305
  %2324 = mul <8 x i32> %2316, %2306
  %2325 = mul <8 x i32> %2319, %2307
  %2326 = mul <8 x i32> %2322, %2308
  %2327 = add nuw i64 %2304, 32
  %2328 = icmp eq i64 %2327, %2301
  br i1 %2328, label %2329, label %2303, !llvm.loop !839

2329:                                             ; preds = %2303
  %2330 = mul <8 x i32> %2324, %2323
  %2331 = mul <8 x i32> %2325, %2330
  %2332 = mul <8 x i32> %2326, %2331
  %2333 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2332)
  %2334 = icmp eq i64 %2297, %2301
  br i1 %2334, label %2347, label %2335

2335:                                             ; preds = %2288, %2329
  %2336 = phi i64 [ %2291, %2288 ], [ %2302, %2329 ]
  %2337 = phi i32 [ 1, %2288 ], [ %2333, %2329 ]
  br label %2338

2338:                                             ; preds = %2335, %2338
  %2339 = phi i64 [ %2344, %2338 ], [ %2336, %2335 ]
  %2340 = phi i32 [ %2343, %2338 ], [ %2337, %2335 ]
  %2341 = getelementptr inbounds i32, ptr %11, i64 %2339
  %2342 = load i32, ptr %2341, align 4, !tbaa !5
  %2343 = mul nsw i32 %2342, %2340
  %2344 = add nsw i64 %2339, -1
  %2345 = trunc i64 %2339 to i32
  %2346 = icmp sgt i32 %2345, 0
  br i1 %2346, label %2338, label %2347, !llvm.loop !840

2347:                                             ; preds = %2338, %2329
  %2348 = phi i32 [ %2333, %2329 ], [ %2343, %2338 ]
  %2349 = and i64 %2298, 4294967295
  %2350 = getelementptr inbounds i32, ptr %6, i64 %2349
  %2351 = load i32, ptr %2350, align 4, !tbaa !5
  %2352 = mul nsw i32 %2351, %2348
  %2353 = add nsw i32 %2352, %2292
  %2354 = icmp sgt i64 %2290, 2
  %2355 = add nsw i64 %2291, -1
  %2356 = add i32 %2289, 1
  br i1 %2354, label %2288, label %2357, !llvm.loop !841

2357:                                             ; preds = %2347, %2284
  %2358 = phi i32 [ %2287, %2284 ], [ %2353, %2347 ]
  %2359 = icmp slt i32 %2358, %5
  br i1 %2359, label %2362, label %2360

2360:                                             ; preds = %2357
  %2361 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

2362:                                             ; preds = %2357
  %2363 = sext i32 %2358 to i64
  %2364 = getelementptr inbounds i64, ptr %1821, i64 %2363
  %2365 = load i64, ptr %2364, align 8, !tbaa !120
  %2366 = trunc i64 %2365 to i16
  %2367 = add i16 %2285, %2366
  store i16 %2367, ptr %1823, align 2, !tbaa !78
  %2368 = add nuw nsw i32 %2286, 1
  br i1 %2139, label %2369, label %2419

2369:                                             ; preds = %2362
  %2370 = load i32, ptr %4, align 4, !tbaa !5
  %2371 = load i32, ptr %12, align 4, !tbaa !5
  %2372 = add nsw i32 %2371, -1
  %2373 = icmp slt i32 %2370, %2372
  br i1 %2373, label %2396, label %2374

2374:                                             ; preds = %2369
  %2375 = icmp eq i32 %2370, %2372
  br i1 %2375, label %2376, label %2412

2376:                                             ; preds = %2374
  store i32 0, ptr %4, align 4, !tbaa !5
  %2377 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2377, ptr %6, align 4, !tbaa !5
  br i1 %2144, label %2419, label %2378

2378:                                             ; preds = %2376, %2406
  %2379 = phi i64 [ %2410, %2406 ], [ 1, %2376 ]
  %2380 = getelementptr inbounds i32, ptr %4, i64 %2379
  %2381 = load i32, ptr %2380, align 4, !tbaa !5
  %2382 = getelementptr inbounds i32, ptr %12, i64 %2379
  %2383 = load i32, ptr %2382, align 4, !tbaa !5
  %2384 = add nsw i32 %2383, -1
  %2385 = icmp slt i32 %2381, %2384
  br i1 %2385, label %2386, label %2404

2386:                                             ; preds = %2378
  br i1 %2373, label %2396, label %2387

2387:                                             ; preds = %2386
  %2388 = shl i64 %2379, 32
  %2389 = add i64 %2388, -4294967296
  %2390 = ashr exact i64 %2389, 32
  %2391 = getelementptr inbounds i32, ptr %7, i64 %2390
  %2392 = load i32, ptr %2391, align 4, !tbaa !5
  %2393 = getelementptr inbounds i32, ptr %6, i64 %2379
  %2394 = load i32, ptr %2393, align 4, !tbaa !5
  %2395 = add nsw i32 %2394, %2392
  store i32 %2395, ptr %2393, align 4, !tbaa !5
  br label %2414

2396:                                             ; preds = %2369, %2386
  %2397 = phi i32 [ %2381, %2386 ], [ %2370, %2369 ]
  %2398 = phi ptr [ %2380, %2386 ], [ %4, %2369 ]
  %2399 = phi i64 [ %2379, %2386 ], [ 0, %2369 ]
  %2400 = add nsw i32 %2397, 1
  store i32 %2400, ptr %2398, align 4, !tbaa !5
  %2401 = getelementptr inbounds i32, ptr %7, i64 %2399
  %2402 = load i32, ptr %2401, align 4, !tbaa !5
  %2403 = getelementptr inbounds i32, ptr %6, i64 %2399
  br label %2414

2404:                                             ; preds = %2378
  %2405 = icmp eq i32 %2381, %2384
  br i1 %2405, label %2406, label %2412

2406:                                             ; preds = %2404
  store i32 0, ptr %2380, align 4, !tbaa !5
  %2407 = getelementptr inbounds i32, ptr %8, i64 %2379
  %2408 = load i32, ptr %2407, align 4, !tbaa !5
  %2409 = getelementptr inbounds i32, ptr %6, i64 %2379
  store i32 %2408, ptr %2409, align 4, !tbaa !5
  %2410 = add nuw nsw i64 %2379, 1
  %2411 = icmp eq i64 %2410, %2142
  br i1 %2411, label %2419, label %2378, !llvm.loop !842

2412:                                             ; preds = %2374, %2404
  %2413 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

2414:                                             ; preds = %2387, %2396
  %2415 = phi ptr [ %2403, %2396 ], [ %2380, %2387 ]
  %2416 = phi i32 [ %2402, %2396 ], [ 1, %2387 ]
  %2417 = load i32, ptr %2415, align 4, !tbaa !5
  %2418 = add nsw i32 %2417, %2416
  store i32 %2418, ptr %2415, align 4, !tbaa !5
  br label %2419

2419:                                             ; preds = %2406, %2414, %2376, %2362
  %2420 = icmp eq i32 %2368, %5
  br i1 %2420, label %5411, label %2284, !llvm.loop !843

2421:                                             ; preds = %1828
  %2422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

2423:                                             ; preds = %18
  %2424 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2425 = load ptr, ptr %2424, align 8, !tbaa !9
  %2426 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2427 = load ptr, ptr %2426, align 8, !tbaa !9
  store i32 0, ptr %2427, align 4, !tbaa !5
  %2428 = icmp eq i32 %13, 0
  br i1 %2428, label %2429, label %2432

2429:                                             ; preds = %2423
  %2430 = load i64, ptr %2425, align 8, !tbaa !120
  %2431 = trunc i64 %2430 to i32
  store i32 %2431, ptr %2427, align 4, !tbaa !5
  br label %5411

2432:                                             ; preds = %2423
  switch i32 %1, label %3019 [
    i32 1, label %2433
    i32 0, label %2729
  ]

2433:                                             ; preds = %2432
  %2434 = getelementptr inbounds i32, ptr %3, i64 %19
  %2435 = load i32, ptr %2434, align 4, !tbaa !5
  %2436 = icmp eq i32 %2435, 0
  %2437 = icmp sgt i32 %5, 0
  br i1 %2436, label %2447, label %2438

2438:                                             ; preds = %2433
  br i1 %2437, label %2439, label %5411

2439:                                             ; preds = %2438
  %2440 = icmp sgt i32 %13, 1
  %2441 = icmp sgt i32 %13, 0
  %2442 = add i32 %13, -2
  %2443 = zext i32 %2442 to i64
  %2444 = zext i32 %13 to i64
  %2445 = add nuw i32 %5, 1
  %2446 = icmp eq i32 %13, 1
  br label %2592

2447:                                             ; preds = %2433
  br i1 %2437, label %2448, label %5411

2448:                                             ; preds = %2447
  %2449 = icmp sgt i32 %13, 1
  %2450 = icmp sgt i32 %13, 0
  %2451 = add i32 %13, -2
  %2452 = zext i32 %2451 to i64
  %2453 = zext i32 %13 to i64
  %2454 = add nuw i32 %5, 1
  %2455 = icmp eq i32 %13, 1
  br label %2456

2456:                                             ; preds = %2448, %2590
  %2457 = phi i32 [ 0, %2448 ], [ %2542, %2590 ]
  %2458 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2449, label %2459, label %2528

2459:                                             ; preds = %2456, %2518
  %2460 = phi i32 [ %2527, %2518 ], [ 0, %2456 ]
  %2461 = phi i64 [ %2469, %2518 ], [ %2453, %2456 ]
  %2462 = phi i64 [ %2526, %2518 ], [ %2452, %2456 ]
  %2463 = phi i32 [ %2524, %2518 ], [ %2458, %2456 ]
  %2464 = sub i32 %2451, %2460
  %2465 = tail call i32 @llvm.smin.i32(i32 %2464, i32 0)
  %2466 = sub i32 %2464, %2465
  %2467 = zext i32 %2466 to i64
  %2468 = add nuw nsw i64 %2467, 1
  %2469 = add nsw i64 %2461, -1
  %2470 = icmp ult i32 %2466, 31
  br i1 %2470, label %2506, label %2471

2471:                                             ; preds = %2459
  %2472 = and i64 %2468, 8589934560
  %2473 = sub i64 %2462, %2472
  br label %2474

2474:                                             ; preds = %2474, %2471
  %2475 = phi i64 [ 0, %2471 ], [ %2498, %2474 ]
  %2476 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2471 ], [ %2494, %2474 ]
  %2477 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2471 ], [ %2495, %2474 ]
  %2478 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2471 ], [ %2496, %2474 ]
  %2479 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2471 ], [ %2497, %2474 ]
  %2480 = sub i64 %2462, %2475
  %2481 = getelementptr inbounds i32, ptr %9, i64 %2480
  %2482 = getelementptr inbounds i32, ptr %2481, i64 -7
  %2483 = load <8 x i32>, ptr %2482, align 4, !tbaa !5
  %2484 = shufflevector <8 x i32> %2483, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2485 = getelementptr inbounds i32, ptr %2481, i64 -15
  %2486 = load <8 x i32>, ptr %2485, align 4, !tbaa !5
  %2487 = shufflevector <8 x i32> %2486, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2488 = getelementptr inbounds i32, ptr %2481, i64 -23
  %2489 = load <8 x i32>, ptr %2488, align 4, !tbaa !5
  %2490 = shufflevector <8 x i32> %2489, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2491 = getelementptr inbounds i32, ptr %2481, i64 -31
  %2492 = load <8 x i32>, ptr %2491, align 4, !tbaa !5
  %2493 = shufflevector <8 x i32> %2492, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2494 = mul <8 x i32> %2484, %2476
  %2495 = mul <8 x i32> %2487, %2477
  %2496 = mul <8 x i32> %2490, %2478
  %2497 = mul <8 x i32> %2493, %2479
  %2498 = add nuw i64 %2475, 32
  %2499 = icmp eq i64 %2498, %2472
  br i1 %2499, label %2500, label %2474, !llvm.loop !844

2500:                                             ; preds = %2474
  %2501 = mul <8 x i32> %2495, %2494
  %2502 = mul <8 x i32> %2496, %2501
  %2503 = mul <8 x i32> %2497, %2502
  %2504 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2503)
  %2505 = icmp eq i64 %2468, %2472
  br i1 %2505, label %2518, label %2506

2506:                                             ; preds = %2459, %2500
  %2507 = phi i64 [ %2462, %2459 ], [ %2473, %2500 ]
  %2508 = phi i32 [ 1, %2459 ], [ %2504, %2500 ]
  br label %2509

2509:                                             ; preds = %2506, %2509
  %2510 = phi i64 [ %2515, %2509 ], [ %2507, %2506 ]
  %2511 = phi i32 [ %2514, %2509 ], [ %2508, %2506 ]
  %2512 = getelementptr inbounds i32, ptr %9, i64 %2510
  %2513 = load i32, ptr %2512, align 4, !tbaa !5
  %2514 = mul nsw i32 %2513, %2511
  %2515 = add nsw i64 %2510, -1
  %2516 = trunc i64 %2510 to i32
  %2517 = icmp sgt i32 %2516, 0
  br i1 %2517, label %2509, label %2518, !llvm.loop !845

2518:                                             ; preds = %2509, %2500
  %2519 = phi i32 [ %2504, %2500 ], [ %2514, %2509 ]
  %2520 = and i64 %2469, 4294967295
  %2521 = getelementptr inbounds i32, ptr %6, i64 %2520
  %2522 = load i32, ptr %2521, align 4, !tbaa !5
  %2523 = mul nsw i32 %2522, %2519
  %2524 = add nsw i32 %2523, %2463
  %2525 = icmp sgt i64 %2461, 2
  %2526 = add nsw i64 %2462, -1
  %2527 = add i32 %2460, 1
  br i1 %2525, label %2459, label %2528, !llvm.loop !846

2528:                                             ; preds = %2518, %2456
  %2529 = phi i32 [ %2458, %2456 ], [ %2524, %2518 ]
  %2530 = sext i32 %2529 to i64
  %2531 = getelementptr inbounds double, ptr %2, i64 %2530
  %2532 = load double, ptr %2531, align 8, !tbaa !18
  %2533 = getelementptr inbounds i64, ptr %2425, i64 %2530
  %2534 = load i64, ptr %2533, align 8, !tbaa !120
  %2535 = trunc i64 %2534 to i32
  %2536 = load i32, ptr %2427, align 4, !tbaa !5
  %2537 = sitofp i32 %2536 to double
  %2538 = sitofp i32 %2535 to double
  %2539 = fmul fast double %2532, %2538
  %2540 = fadd fast double %2539, %2537
  %2541 = fptosi double %2540 to i32
  store i32 %2541, ptr %2427, align 4, !tbaa !5
  %2542 = add nuw nsw i32 %2457, 1
  br i1 %2450, label %2543, label %2590

2543:                                             ; preds = %2528
  %2544 = load i32, ptr %4, align 4, !tbaa !5
  %2545 = load i32, ptr %12, align 4, !tbaa !5
  %2546 = add nsw i32 %2545, -1
  %2547 = icmp slt i32 %2544, %2546
  br i1 %2547, label %2567, label %2548

2548:                                             ; preds = %2543
  %2549 = icmp eq i32 %2544, %2546
  br i1 %2549, label %2550, label %2583

2550:                                             ; preds = %2548
  store i32 0, ptr %4, align 4, !tbaa !5
  %2551 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2551, ptr %6, align 4, !tbaa !5
  br i1 %2455, label %2590, label %2552

2552:                                             ; preds = %2550, %2577
  %2553 = phi i64 [ %2581, %2577 ], [ 1, %2550 ]
  %2554 = getelementptr inbounds i32, ptr %4, i64 %2553
  %2555 = load i32, ptr %2554, align 4, !tbaa !5
  %2556 = getelementptr inbounds i32, ptr %12, i64 %2553
  %2557 = load i32, ptr %2556, align 4, !tbaa !5
  %2558 = add nsw i32 %2557, -1
  %2559 = icmp slt i32 %2555, %2558
  br i1 %2559, label %2560, label %2575

2560:                                             ; preds = %2552
  br i1 %2547, label %2567, label %2561

2561:                                             ; preds = %2560
  %2562 = getelementptr inbounds i32, ptr %7, i64 %2553
  %2563 = load i32, ptr %2562, align 4, !tbaa !5
  %2564 = getelementptr inbounds i32, ptr %6, i64 %2553
  %2565 = load i32, ptr %2564, align 4, !tbaa !5
  %2566 = add nsw i32 %2565, %2563
  store i32 %2566, ptr %2564, align 4, !tbaa !5
  br label %2585

2567:                                             ; preds = %2543, %2560
  %2568 = phi i32 [ %2555, %2560 ], [ %2544, %2543 ]
  %2569 = phi ptr [ %2554, %2560 ], [ %4, %2543 ]
  %2570 = phi i64 [ %2553, %2560 ], [ 0, %2543 ]
  %2571 = add nsw i32 %2568, 1
  store i32 %2571, ptr %2569, align 4, !tbaa !5
  %2572 = getelementptr inbounds i32, ptr %7, i64 %2570
  %2573 = load i32, ptr %2572, align 4, !tbaa !5
  %2574 = getelementptr inbounds i32, ptr %6, i64 %2570
  br label %2585

2575:                                             ; preds = %2552
  %2576 = icmp eq i32 %2555, %2558
  br i1 %2576, label %2577, label %2583

2577:                                             ; preds = %2575
  store i32 0, ptr %2554, align 4, !tbaa !5
  %2578 = getelementptr inbounds i32, ptr %8, i64 %2553
  %2579 = load i32, ptr %2578, align 4, !tbaa !5
  %2580 = getelementptr inbounds i32, ptr %6, i64 %2553
  store i32 %2579, ptr %2580, align 4, !tbaa !5
  %2581 = add nuw nsw i64 %2553, 1
  %2582 = icmp eq i64 %2581, %2453
  br i1 %2582, label %2590, label %2552, !llvm.loop !847

2583:                                             ; preds = %2548, %2575
  %2584 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

2585:                                             ; preds = %2561, %2567
  %2586 = phi ptr [ %2574, %2567 ], [ %2554, %2561 ]
  %2587 = phi i32 [ %2573, %2567 ], [ 1, %2561 ]
  %2588 = load i32, ptr %2586, align 4, !tbaa !5
  %2589 = add nsw i32 %2588, %2587
  store i32 %2589, ptr %2586, align 4, !tbaa !5
  br label %2590

2590:                                             ; preds = %2577, %2585, %2550, %2528
  %2591 = icmp eq i32 %2542, %5
  br i1 %2591, label %5411, label %2456, !llvm.loop !848

2592:                                             ; preds = %2439, %2727
  %2593 = phi i32 [ 0, %2439 ], [ %2676, %2727 ]
  %2594 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2440, label %2595, label %2664

2595:                                             ; preds = %2592, %2654
  %2596 = phi i32 [ %2663, %2654 ], [ 0, %2592 ]
  %2597 = phi i64 [ %2605, %2654 ], [ %2444, %2592 ]
  %2598 = phi i64 [ %2662, %2654 ], [ %2443, %2592 ]
  %2599 = phi i32 [ %2660, %2654 ], [ %2594, %2592 ]
  %2600 = sub i32 %2442, %2596
  %2601 = tail call i32 @llvm.smin.i32(i32 %2600, i32 0)
  %2602 = sub i32 %2600, %2601
  %2603 = zext i32 %2602 to i64
  %2604 = add nuw nsw i64 %2603, 1
  %2605 = add nsw i64 %2597, -1
  %2606 = icmp ult i32 %2602, 31
  br i1 %2606, label %2642, label %2607

2607:                                             ; preds = %2595
  %2608 = and i64 %2604, 8589934560
  %2609 = sub i64 %2598, %2608
  br label %2610

2610:                                             ; preds = %2610, %2607
  %2611 = phi i64 [ 0, %2607 ], [ %2634, %2610 ]
  %2612 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2607 ], [ %2630, %2610 ]
  %2613 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2607 ], [ %2631, %2610 ]
  %2614 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2607 ], [ %2632, %2610 ]
  %2615 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2607 ], [ %2633, %2610 ]
  %2616 = sub i64 %2598, %2611
  %2617 = getelementptr inbounds i32, ptr %11, i64 %2616
  %2618 = getelementptr inbounds i32, ptr %2617, i64 -7
  %2619 = load <8 x i32>, ptr %2618, align 4, !tbaa !5
  %2620 = shufflevector <8 x i32> %2619, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2621 = getelementptr inbounds i32, ptr %2617, i64 -15
  %2622 = load <8 x i32>, ptr %2621, align 4, !tbaa !5
  %2623 = shufflevector <8 x i32> %2622, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2624 = getelementptr inbounds i32, ptr %2617, i64 -23
  %2625 = load <8 x i32>, ptr %2624, align 4, !tbaa !5
  %2626 = shufflevector <8 x i32> %2625, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2627 = getelementptr inbounds i32, ptr %2617, i64 -31
  %2628 = load <8 x i32>, ptr %2627, align 4, !tbaa !5
  %2629 = shufflevector <8 x i32> %2628, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2630 = mul <8 x i32> %2620, %2612
  %2631 = mul <8 x i32> %2623, %2613
  %2632 = mul <8 x i32> %2626, %2614
  %2633 = mul <8 x i32> %2629, %2615
  %2634 = add nuw i64 %2611, 32
  %2635 = icmp eq i64 %2634, %2608
  br i1 %2635, label %2636, label %2610, !llvm.loop !849

2636:                                             ; preds = %2610
  %2637 = mul <8 x i32> %2631, %2630
  %2638 = mul <8 x i32> %2632, %2637
  %2639 = mul <8 x i32> %2633, %2638
  %2640 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2639)
  %2641 = icmp eq i64 %2604, %2608
  br i1 %2641, label %2654, label %2642

2642:                                             ; preds = %2595, %2636
  %2643 = phi i64 [ %2598, %2595 ], [ %2609, %2636 ]
  %2644 = phi i32 [ 1, %2595 ], [ %2640, %2636 ]
  br label %2645

2645:                                             ; preds = %2642, %2645
  %2646 = phi i64 [ %2651, %2645 ], [ %2643, %2642 ]
  %2647 = phi i32 [ %2650, %2645 ], [ %2644, %2642 ]
  %2648 = getelementptr inbounds i32, ptr %11, i64 %2646
  %2649 = load i32, ptr %2648, align 4, !tbaa !5
  %2650 = mul nsw i32 %2649, %2647
  %2651 = add nsw i64 %2646, -1
  %2652 = trunc i64 %2646 to i32
  %2653 = icmp sgt i32 %2652, 0
  br i1 %2653, label %2645, label %2654, !llvm.loop !850

2654:                                             ; preds = %2645, %2636
  %2655 = phi i32 [ %2640, %2636 ], [ %2650, %2645 ]
  %2656 = and i64 %2605, 4294967295
  %2657 = getelementptr inbounds i32, ptr %6, i64 %2656
  %2658 = load i32, ptr %2657, align 4, !tbaa !5
  %2659 = mul nsw i32 %2658, %2655
  %2660 = add nsw i32 %2659, %2599
  %2661 = icmp sgt i64 %2597, 2
  %2662 = add nsw i64 %2598, -1
  %2663 = add i32 %2596, 1
  br i1 %2661, label %2595, label %2664, !llvm.loop !851

2664:                                             ; preds = %2654, %2592
  %2665 = phi i32 [ %2594, %2592 ], [ %2660, %2654 ]
  %2666 = icmp slt i32 %2665, %5
  br i1 %2666, label %2669, label %2667

2667:                                             ; preds = %2664
  %2668 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

2669:                                             ; preds = %2664
  %2670 = sext i32 %2665 to i64
  %2671 = getelementptr inbounds i64, ptr %2425, i64 %2670
  %2672 = load i64, ptr %2671, align 8, !tbaa !120
  %2673 = load i32, ptr %2427, align 4, !tbaa !5
  %2674 = trunc i64 %2672 to i32
  %2675 = add i32 %2673, %2674
  store i32 %2675, ptr %2427, align 4, !tbaa !5
  %2676 = add nuw nsw i32 %2593, 1
  br i1 %2441, label %2677, label %2727

2677:                                             ; preds = %2669
  %2678 = load i32, ptr %4, align 4, !tbaa !5
  %2679 = load i32, ptr %12, align 4, !tbaa !5
  %2680 = add nsw i32 %2679, -1
  %2681 = icmp slt i32 %2678, %2680
  br i1 %2681, label %2704, label %2682

2682:                                             ; preds = %2677
  %2683 = icmp eq i32 %2678, %2680
  br i1 %2683, label %2684, label %2720

2684:                                             ; preds = %2682
  store i32 0, ptr %4, align 4, !tbaa !5
  %2685 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2685, ptr %6, align 4, !tbaa !5
  br i1 %2446, label %2727, label %2686

2686:                                             ; preds = %2684, %2714
  %2687 = phi i64 [ %2718, %2714 ], [ 1, %2684 ]
  %2688 = getelementptr inbounds i32, ptr %4, i64 %2687
  %2689 = load i32, ptr %2688, align 4, !tbaa !5
  %2690 = getelementptr inbounds i32, ptr %12, i64 %2687
  %2691 = load i32, ptr %2690, align 4, !tbaa !5
  %2692 = add nsw i32 %2691, -1
  %2693 = icmp slt i32 %2689, %2692
  br i1 %2693, label %2694, label %2712

2694:                                             ; preds = %2686
  br i1 %2681, label %2704, label %2695

2695:                                             ; preds = %2694
  %2696 = shl i64 %2687, 32
  %2697 = add i64 %2696, -4294967296
  %2698 = ashr exact i64 %2697, 32
  %2699 = getelementptr inbounds i32, ptr %7, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !5
  %2701 = getelementptr inbounds i32, ptr %6, i64 %2687
  %2702 = load i32, ptr %2701, align 4, !tbaa !5
  %2703 = add nsw i32 %2702, %2700
  store i32 %2703, ptr %2701, align 4, !tbaa !5
  br label %2722

2704:                                             ; preds = %2677, %2694
  %2705 = phi i32 [ %2689, %2694 ], [ %2678, %2677 ]
  %2706 = phi ptr [ %2688, %2694 ], [ %4, %2677 ]
  %2707 = phi i64 [ %2687, %2694 ], [ 0, %2677 ]
  %2708 = add nsw i32 %2705, 1
  store i32 %2708, ptr %2706, align 4, !tbaa !5
  %2709 = getelementptr inbounds i32, ptr %7, i64 %2707
  %2710 = load i32, ptr %2709, align 4, !tbaa !5
  %2711 = getelementptr inbounds i32, ptr %6, i64 %2707
  br label %2722

2712:                                             ; preds = %2686
  %2713 = icmp eq i32 %2689, %2692
  br i1 %2713, label %2714, label %2720

2714:                                             ; preds = %2712
  store i32 0, ptr %2688, align 4, !tbaa !5
  %2715 = getelementptr inbounds i32, ptr %8, i64 %2687
  %2716 = load i32, ptr %2715, align 4, !tbaa !5
  %2717 = getelementptr inbounds i32, ptr %6, i64 %2687
  store i32 %2716, ptr %2717, align 4, !tbaa !5
  %2718 = add nuw nsw i64 %2687, 1
  %2719 = icmp eq i64 %2718, %2444
  br i1 %2719, label %2727, label %2686, !llvm.loop !852

2720:                                             ; preds = %2682, %2712
  %2721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

2722:                                             ; preds = %2695, %2704
  %2723 = phi ptr [ %2711, %2704 ], [ %2688, %2695 ]
  %2724 = phi i32 [ %2710, %2704 ], [ 1, %2695 ]
  %2725 = load i32, ptr %2723, align 4, !tbaa !5
  %2726 = add nsw i32 %2725, %2724
  store i32 %2726, ptr %2723, align 4, !tbaa !5
  br label %2727

2727:                                             ; preds = %2714, %2722, %2684, %2669
  %2728 = icmp eq i32 %2676, %5
  br i1 %2728, label %5411, label %2592, !llvm.loop !853

2729:                                             ; preds = %2432
  %2730 = getelementptr inbounds i32, ptr %3, i64 %19
  %2731 = load i32, ptr %2730, align 4, !tbaa !5
  %2732 = icmp eq i32 %2731, 0
  %2733 = icmp sgt i32 %5, 0
  br i1 %2732, label %2743, label %2734

2734:                                             ; preds = %2729
  br i1 %2733, label %2735, label %5411

2735:                                             ; preds = %2734
  %2736 = icmp sgt i32 %13, 1
  %2737 = icmp sgt i32 %13, 0
  %2738 = add i32 %13, -2
  %2739 = zext i32 %2738 to i64
  %2740 = zext i32 %13 to i64
  %2741 = add nuw i32 %5, 1
  %2742 = icmp eq i32 %13, 1
  br label %2882

2743:                                             ; preds = %2729
  br i1 %2733, label %2744, label %5411

2744:                                             ; preds = %2743
  %2745 = icmp sgt i32 %13, 1
  %2746 = icmp sgt i32 %13, 0
  %2747 = add i32 %13, -2
  %2748 = zext i32 %2747 to i64
  %2749 = zext i32 %13 to i64
  %2750 = add nuw i32 %5, 1
  %2751 = icmp eq i32 %13, 1
  br label %2752

2752:                                             ; preds = %2744, %2880
  %2753 = phi i32 [ 0, %2744 ], [ %2832, %2880 ]
  %2754 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2745, label %2755, label %2824

2755:                                             ; preds = %2752, %2814
  %2756 = phi i32 [ %2823, %2814 ], [ 0, %2752 ]
  %2757 = phi i64 [ %2765, %2814 ], [ %2749, %2752 ]
  %2758 = phi i64 [ %2822, %2814 ], [ %2748, %2752 ]
  %2759 = phi i32 [ %2820, %2814 ], [ %2754, %2752 ]
  %2760 = sub i32 %2747, %2756
  %2761 = tail call i32 @llvm.smin.i32(i32 %2760, i32 0)
  %2762 = sub i32 %2760, %2761
  %2763 = zext i32 %2762 to i64
  %2764 = add nuw nsw i64 %2763, 1
  %2765 = add nsw i64 %2757, -1
  %2766 = icmp ult i32 %2762, 31
  br i1 %2766, label %2802, label %2767

2767:                                             ; preds = %2755
  %2768 = and i64 %2764, 8589934560
  %2769 = sub i64 %2758, %2768
  br label %2770

2770:                                             ; preds = %2770, %2767
  %2771 = phi i64 [ 0, %2767 ], [ %2794, %2770 ]
  %2772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2790, %2770 ]
  %2773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2791, %2770 ]
  %2774 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2792, %2770 ]
  %2775 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2793, %2770 ]
  %2776 = sub i64 %2758, %2771
  %2777 = getelementptr inbounds i32, ptr %9, i64 %2776
  %2778 = getelementptr inbounds i32, ptr %2777, i64 -7
  %2779 = load <8 x i32>, ptr %2778, align 4, !tbaa !5
  %2780 = shufflevector <8 x i32> %2779, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2781 = getelementptr inbounds i32, ptr %2777, i64 -15
  %2782 = load <8 x i32>, ptr %2781, align 4, !tbaa !5
  %2783 = shufflevector <8 x i32> %2782, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2784 = getelementptr inbounds i32, ptr %2777, i64 -23
  %2785 = load <8 x i32>, ptr %2784, align 4, !tbaa !5
  %2786 = shufflevector <8 x i32> %2785, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2787 = getelementptr inbounds i32, ptr %2777, i64 -31
  %2788 = load <8 x i32>, ptr %2787, align 4, !tbaa !5
  %2789 = shufflevector <8 x i32> %2788, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2790 = mul <8 x i32> %2780, %2772
  %2791 = mul <8 x i32> %2783, %2773
  %2792 = mul <8 x i32> %2786, %2774
  %2793 = mul <8 x i32> %2789, %2775
  %2794 = add nuw i64 %2771, 32
  %2795 = icmp eq i64 %2794, %2768
  br i1 %2795, label %2796, label %2770, !llvm.loop !854

2796:                                             ; preds = %2770
  %2797 = mul <8 x i32> %2791, %2790
  %2798 = mul <8 x i32> %2792, %2797
  %2799 = mul <8 x i32> %2793, %2798
  %2800 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2799)
  %2801 = icmp eq i64 %2764, %2768
  br i1 %2801, label %2814, label %2802

2802:                                             ; preds = %2755, %2796
  %2803 = phi i64 [ %2758, %2755 ], [ %2769, %2796 ]
  %2804 = phi i32 [ 1, %2755 ], [ %2800, %2796 ]
  br label %2805

2805:                                             ; preds = %2802, %2805
  %2806 = phi i64 [ %2811, %2805 ], [ %2803, %2802 ]
  %2807 = phi i32 [ %2810, %2805 ], [ %2804, %2802 ]
  %2808 = getelementptr inbounds i32, ptr %9, i64 %2806
  %2809 = load i32, ptr %2808, align 4, !tbaa !5
  %2810 = mul nsw i32 %2809, %2807
  %2811 = add nsw i64 %2806, -1
  %2812 = trunc i64 %2806 to i32
  %2813 = icmp sgt i32 %2812, 0
  br i1 %2813, label %2805, label %2814, !llvm.loop !855

2814:                                             ; preds = %2805, %2796
  %2815 = phi i32 [ %2800, %2796 ], [ %2810, %2805 ]
  %2816 = and i64 %2765, 4294967295
  %2817 = getelementptr inbounds i32, ptr %6, i64 %2816
  %2818 = load i32, ptr %2817, align 4, !tbaa !5
  %2819 = mul nsw i32 %2818, %2815
  %2820 = add nsw i32 %2819, %2759
  %2821 = icmp sgt i64 %2757, 2
  %2822 = add nsw i64 %2758, -1
  %2823 = add i32 %2756, 1
  br i1 %2821, label %2755, label %2824, !llvm.loop !856

2824:                                             ; preds = %2814, %2752
  %2825 = phi i32 [ %2754, %2752 ], [ %2820, %2814 ]
  %2826 = sext i32 %2825 to i64
  %2827 = getelementptr inbounds i64, ptr %2425, i64 %2826
  %2828 = load i64, ptr %2827, align 8, !tbaa !120
  %2829 = trunc i64 %2828 to i32
  %2830 = load i32, ptr %2427, align 4, !tbaa !5
  %2831 = add nsw i32 %2830, %2829
  store i32 %2831, ptr %2427, align 4, !tbaa !5
  %2832 = add nuw nsw i32 %2753, 1
  br i1 %2746, label %2833, label %2880

2833:                                             ; preds = %2824
  %2834 = load i32, ptr %4, align 4, !tbaa !5
  %2835 = load i32, ptr %12, align 4, !tbaa !5
  %2836 = add nsw i32 %2835, -1
  %2837 = icmp slt i32 %2834, %2836
  br i1 %2837, label %2857, label %2838

2838:                                             ; preds = %2833
  %2839 = icmp eq i32 %2834, %2836
  br i1 %2839, label %2840, label %2873

2840:                                             ; preds = %2838
  store i32 0, ptr %4, align 4, !tbaa !5
  %2841 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2841, ptr %6, align 4, !tbaa !5
  br i1 %2751, label %2880, label %2842

2842:                                             ; preds = %2840, %2867
  %2843 = phi i64 [ %2871, %2867 ], [ 1, %2840 ]
  %2844 = getelementptr inbounds i32, ptr %4, i64 %2843
  %2845 = load i32, ptr %2844, align 4, !tbaa !5
  %2846 = getelementptr inbounds i32, ptr %12, i64 %2843
  %2847 = load i32, ptr %2846, align 4, !tbaa !5
  %2848 = add nsw i32 %2847, -1
  %2849 = icmp slt i32 %2845, %2848
  br i1 %2849, label %2850, label %2865

2850:                                             ; preds = %2842
  br i1 %2837, label %2857, label %2851

2851:                                             ; preds = %2850
  %2852 = getelementptr inbounds i32, ptr %7, i64 %2843
  %2853 = load i32, ptr %2852, align 4, !tbaa !5
  %2854 = getelementptr inbounds i32, ptr %6, i64 %2843
  %2855 = load i32, ptr %2854, align 4, !tbaa !5
  %2856 = add nsw i32 %2855, %2853
  store i32 %2856, ptr %2854, align 4, !tbaa !5
  br label %2875

2857:                                             ; preds = %2833, %2850
  %2858 = phi i32 [ %2845, %2850 ], [ %2834, %2833 ]
  %2859 = phi ptr [ %2844, %2850 ], [ %4, %2833 ]
  %2860 = phi i64 [ %2843, %2850 ], [ 0, %2833 ]
  %2861 = add nsw i32 %2858, 1
  store i32 %2861, ptr %2859, align 4, !tbaa !5
  %2862 = getelementptr inbounds i32, ptr %7, i64 %2860
  %2863 = load i32, ptr %2862, align 4, !tbaa !5
  %2864 = getelementptr inbounds i32, ptr %6, i64 %2860
  br label %2875

2865:                                             ; preds = %2842
  %2866 = icmp eq i32 %2845, %2848
  br i1 %2866, label %2867, label %2873

2867:                                             ; preds = %2865
  store i32 0, ptr %2844, align 4, !tbaa !5
  %2868 = getelementptr inbounds i32, ptr %8, i64 %2843
  %2869 = load i32, ptr %2868, align 4, !tbaa !5
  %2870 = getelementptr inbounds i32, ptr %6, i64 %2843
  store i32 %2869, ptr %2870, align 4, !tbaa !5
  %2871 = add nuw nsw i64 %2843, 1
  %2872 = icmp eq i64 %2871, %2749
  br i1 %2872, label %2880, label %2842, !llvm.loop !857

2873:                                             ; preds = %2838, %2865
  %2874 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

2875:                                             ; preds = %2851, %2857
  %2876 = phi ptr [ %2864, %2857 ], [ %2844, %2851 ]
  %2877 = phi i32 [ %2863, %2857 ], [ 1, %2851 ]
  %2878 = load i32, ptr %2876, align 4, !tbaa !5
  %2879 = add nsw i32 %2878, %2877
  store i32 %2879, ptr %2876, align 4, !tbaa !5
  br label %2880

2880:                                             ; preds = %2867, %2875, %2840, %2824
  %2881 = icmp eq i32 %2832, %5
  br i1 %2881, label %5411, label %2752, !llvm.loop !858

2882:                                             ; preds = %2735, %3017
  %2883 = phi i32 [ 0, %2735 ], [ %2966, %3017 ]
  %2884 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2736, label %2885, label %2954

2885:                                             ; preds = %2882, %2944
  %2886 = phi i32 [ %2953, %2944 ], [ 0, %2882 ]
  %2887 = phi i64 [ %2895, %2944 ], [ %2740, %2882 ]
  %2888 = phi i64 [ %2952, %2944 ], [ %2739, %2882 ]
  %2889 = phi i32 [ %2950, %2944 ], [ %2884, %2882 ]
  %2890 = sub i32 %2738, %2886
  %2891 = tail call i32 @llvm.smin.i32(i32 %2890, i32 0)
  %2892 = sub i32 %2890, %2891
  %2893 = zext i32 %2892 to i64
  %2894 = add nuw nsw i64 %2893, 1
  %2895 = add nsw i64 %2887, -1
  %2896 = icmp ult i32 %2892, 31
  br i1 %2896, label %2932, label %2897

2897:                                             ; preds = %2885
  %2898 = and i64 %2894, 8589934560
  %2899 = sub i64 %2888, %2898
  br label %2900

2900:                                             ; preds = %2900, %2897
  %2901 = phi i64 [ 0, %2897 ], [ %2924, %2900 ]
  %2902 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2897 ], [ %2920, %2900 ]
  %2903 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2897 ], [ %2921, %2900 ]
  %2904 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2897 ], [ %2922, %2900 ]
  %2905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2897 ], [ %2923, %2900 ]
  %2906 = sub i64 %2888, %2901
  %2907 = getelementptr inbounds i32, ptr %11, i64 %2906
  %2908 = getelementptr inbounds i32, ptr %2907, i64 -7
  %2909 = load <8 x i32>, ptr %2908, align 4, !tbaa !5
  %2910 = shufflevector <8 x i32> %2909, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2911 = getelementptr inbounds i32, ptr %2907, i64 -15
  %2912 = load <8 x i32>, ptr %2911, align 4, !tbaa !5
  %2913 = shufflevector <8 x i32> %2912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2914 = getelementptr inbounds i32, ptr %2907, i64 -23
  %2915 = load <8 x i32>, ptr %2914, align 4, !tbaa !5
  %2916 = shufflevector <8 x i32> %2915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2917 = getelementptr inbounds i32, ptr %2907, i64 -31
  %2918 = load <8 x i32>, ptr %2917, align 4, !tbaa !5
  %2919 = shufflevector <8 x i32> %2918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2920 = mul <8 x i32> %2910, %2902
  %2921 = mul <8 x i32> %2913, %2903
  %2922 = mul <8 x i32> %2916, %2904
  %2923 = mul <8 x i32> %2919, %2905
  %2924 = add nuw i64 %2901, 32
  %2925 = icmp eq i64 %2924, %2898
  br i1 %2925, label %2926, label %2900, !llvm.loop !859

2926:                                             ; preds = %2900
  %2927 = mul <8 x i32> %2921, %2920
  %2928 = mul <8 x i32> %2922, %2927
  %2929 = mul <8 x i32> %2923, %2928
  %2930 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2929)
  %2931 = icmp eq i64 %2894, %2898
  br i1 %2931, label %2944, label %2932

2932:                                             ; preds = %2885, %2926
  %2933 = phi i64 [ %2888, %2885 ], [ %2899, %2926 ]
  %2934 = phi i32 [ 1, %2885 ], [ %2930, %2926 ]
  br label %2935

2935:                                             ; preds = %2932, %2935
  %2936 = phi i64 [ %2941, %2935 ], [ %2933, %2932 ]
  %2937 = phi i32 [ %2940, %2935 ], [ %2934, %2932 ]
  %2938 = getelementptr inbounds i32, ptr %11, i64 %2936
  %2939 = load i32, ptr %2938, align 4, !tbaa !5
  %2940 = mul nsw i32 %2939, %2937
  %2941 = add nsw i64 %2936, -1
  %2942 = trunc i64 %2936 to i32
  %2943 = icmp sgt i32 %2942, 0
  br i1 %2943, label %2935, label %2944, !llvm.loop !860

2944:                                             ; preds = %2935, %2926
  %2945 = phi i32 [ %2930, %2926 ], [ %2940, %2935 ]
  %2946 = and i64 %2895, 4294967295
  %2947 = getelementptr inbounds i32, ptr %6, i64 %2946
  %2948 = load i32, ptr %2947, align 4, !tbaa !5
  %2949 = mul nsw i32 %2948, %2945
  %2950 = add nsw i32 %2949, %2889
  %2951 = icmp sgt i64 %2887, 2
  %2952 = add nsw i64 %2888, -1
  %2953 = add i32 %2886, 1
  br i1 %2951, label %2885, label %2954, !llvm.loop !861

2954:                                             ; preds = %2944, %2882
  %2955 = phi i32 [ %2884, %2882 ], [ %2950, %2944 ]
  %2956 = icmp slt i32 %2955, %5
  br i1 %2956, label %2959, label %2957

2957:                                             ; preds = %2954
  %2958 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

2959:                                             ; preds = %2954
  %2960 = sext i32 %2955 to i64
  %2961 = getelementptr inbounds i64, ptr %2425, i64 %2960
  %2962 = load i64, ptr %2961, align 8, !tbaa !120
  %2963 = trunc i64 %2962 to i32
  %2964 = load i32, ptr %2427, align 4, !tbaa !5
  %2965 = add nsw i32 %2964, %2963
  store i32 %2965, ptr %2427, align 4, !tbaa !5
  %2966 = add nuw nsw i32 %2883, 1
  br i1 %2737, label %2967, label %3017

2967:                                             ; preds = %2959
  %2968 = load i32, ptr %4, align 4, !tbaa !5
  %2969 = load i32, ptr %12, align 4, !tbaa !5
  %2970 = add nsw i32 %2969, -1
  %2971 = icmp slt i32 %2968, %2970
  br i1 %2971, label %2994, label %2972

2972:                                             ; preds = %2967
  %2973 = icmp eq i32 %2968, %2970
  br i1 %2973, label %2974, label %3010

2974:                                             ; preds = %2972
  store i32 0, ptr %4, align 4, !tbaa !5
  %2975 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2975, ptr %6, align 4, !tbaa !5
  br i1 %2742, label %3017, label %2976

2976:                                             ; preds = %2974, %3004
  %2977 = phi i64 [ %3008, %3004 ], [ 1, %2974 ]
  %2978 = getelementptr inbounds i32, ptr %4, i64 %2977
  %2979 = load i32, ptr %2978, align 4, !tbaa !5
  %2980 = getelementptr inbounds i32, ptr %12, i64 %2977
  %2981 = load i32, ptr %2980, align 4, !tbaa !5
  %2982 = add nsw i32 %2981, -1
  %2983 = icmp slt i32 %2979, %2982
  br i1 %2983, label %2984, label %3002

2984:                                             ; preds = %2976
  br i1 %2971, label %2994, label %2985

2985:                                             ; preds = %2984
  %2986 = shl i64 %2977, 32
  %2987 = add i64 %2986, -4294967296
  %2988 = ashr exact i64 %2987, 32
  %2989 = getelementptr inbounds i32, ptr %7, i64 %2988
  %2990 = load i32, ptr %2989, align 4, !tbaa !5
  %2991 = getelementptr inbounds i32, ptr %6, i64 %2977
  %2992 = load i32, ptr %2991, align 4, !tbaa !5
  %2993 = add nsw i32 %2992, %2990
  store i32 %2993, ptr %2991, align 4, !tbaa !5
  br label %3012

2994:                                             ; preds = %2967, %2984
  %2995 = phi i32 [ %2979, %2984 ], [ %2968, %2967 ]
  %2996 = phi ptr [ %2978, %2984 ], [ %4, %2967 ]
  %2997 = phi i64 [ %2977, %2984 ], [ 0, %2967 ]
  %2998 = add nsw i32 %2995, 1
  store i32 %2998, ptr %2996, align 4, !tbaa !5
  %2999 = getelementptr inbounds i32, ptr %7, i64 %2997
  %3000 = load i32, ptr %2999, align 4, !tbaa !5
  %3001 = getelementptr inbounds i32, ptr %6, i64 %2997
  br label %3012

3002:                                             ; preds = %2976
  %3003 = icmp eq i32 %2979, %2982
  br i1 %3003, label %3004, label %3010

3004:                                             ; preds = %3002
  store i32 0, ptr %2978, align 4, !tbaa !5
  %3005 = getelementptr inbounds i32, ptr %8, i64 %2977
  %3006 = load i32, ptr %3005, align 4, !tbaa !5
  %3007 = getelementptr inbounds i32, ptr %6, i64 %2977
  store i32 %3006, ptr %3007, align 4, !tbaa !5
  %3008 = add nuw nsw i64 %2977, 1
  %3009 = icmp eq i64 %3008, %2740
  br i1 %3009, label %3017, label %2976, !llvm.loop !862

3010:                                             ; preds = %2972, %3002
  %3011 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3012:                                             ; preds = %2985, %2994
  %3013 = phi ptr [ %3001, %2994 ], [ %2978, %2985 ]
  %3014 = phi i32 [ %3000, %2994 ], [ 1, %2985 ]
  %3015 = load i32, ptr %3013, align 4, !tbaa !5
  %3016 = add nsw i32 %3015, %3014
  store i32 %3016, ptr %3013, align 4, !tbaa !5
  br label %3017

3017:                                             ; preds = %3004, %3012, %2974, %2959
  %3018 = icmp eq i32 %2966, %5
  br i1 %3018, label %5411, label %2882, !llvm.loop !863

3019:                                             ; preds = %2432
  %3020 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1261, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

3021:                                             ; preds = %18
  %3022 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3023 = load ptr, ptr %3022, align 8, !tbaa !9
  %3024 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3025 = load ptr, ptr %3024, align 8, !tbaa !9
  store i64 0, ptr %3025, align 8, !tbaa !120
  %3026 = icmp eq i32 %13, 0
  br i1 %3026, label %3027, label %3029

3027:                                             ; preds = %3021
  %3028 = load i64, ptr %3023, align 8, !tbaa !120
  store i64 %3028, ptr %3025, align 8, !tbaa !120
  br label %5411

3029:                                             ; preds = %3021
  switch i32 %1, label %3615 [
    i32 1, label %3030
    i32 0, label %3327
  ]

3030:                                             ; preds = %3029
  %3031 = getelementptr inbounds i32, ptr %3, i64 %19
  %3032 = load i32, ptr %3031, align 4, !tbaa !5
  %3033 = icmp eq i32 %3032, 0
  %3034 = icmp sgt i32 %5, 0
  br i1 %3033, label %3044, label %3035

3035:                                             ; preds = %3030
  br i1 %3034, label %3036, label %5411

3036:                                             ; preds = %3035
  %3037 = icmp sgt i32 %13, 1
  %3038 = icmp sgt i32 %13, 0
  %3039 = add i32 %13, -2
  %3040 = zext i32 %3039 to i64
  %3041 = zext i32 %13 to i64
  %3042 = add nuw i32 %5, 1
  %3043 = icmp eq i32 %13, 1
  br label %3188

3044:                                             ; preds = %3030
  br i1 %3034, label %3045, label %5411

3045:                                             ; preds = %3044
  %3046 = icmp sgt i32 %13, 1
  %3047 = icmp sgt i32 %13, 0
  %3048 = add i32 %13, -2
  %3049 = zext i32 %3048 to i64
  %3050 = zext i32 %13 to i64
  %3051 = add nuw i32 %5, 1
  %3052 = icmp eq i32 %13, 1
  br label %3053

3053:                                             ; preds = %3045, %3186
  %3054 = phi i64 [ 0, %3045 ], [ %3137, %3186 ]
  %3055 = phi i32 [ 0, %3045 ], [ %3138, %3186 ]
  %3056 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3046, label %3057, label %3126

3057:                                             ; preds = %3053, %3116
  %3058 = phi i32 [ %3125, %3116 ], [ 0, %3053 ]
  %3059 = phi i64 [ %3067, %3116 ], [ %3050, %3053 ]
  %3060 = phi i64 [ %3124, %3116 ], [ %3049, %3053 ]
  %3061 = phi i32 [ %3122, %3116 ], [ %3056, %3053 ]
  %3062 = sub i32 %3048, %3058
  %3063 = tail call i32 @llvm.smin.i32(i32 %3062, i32 0)
  %3064 = sub i32 %3062, %3063
  %3065 = zext i32 %3064 to i64
  %3066 = add nuw nsw i64 %3065, 1
  %3067 = add nsw i64 %3059, -1
  %3068 = icmp ult i32 %3064, 31
  br i1 %3068, label %3104, label %3069

3069:                                             ; preds = %3057
  %3070 = and i64 %3066, 8589934560
  %3071 = sub i64 %3060, %3070
  br label %3072

3072:                                             ; preds = %3072, %3069
  %3073 = phi i64 [ 0, %3069 ], [ %3096, %3072 ]
  %3074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3069 ], [ %3092, %3072 ]
  %3075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3069 ], [ %3093, %3072 ]
  %3076 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3069 ], [ %3094, %3072 ]
  %3077 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3069 ], [ %3095, %3072 ]
  %3078 = sub i64 %3060, %3073
  %3079 = getelementptr inbounds i32, ptr %9, i64 %3078
  %3080 = getelementptr inbounds i32, ptr %3079, i64 -7
  %3081 = load <8 x i32>, ptr %3080, align 4, !tbaa !5
  %3082 = shufflevector <8 x i32> %3081, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3083 = getelementptr inbounds i32, ptr %3079, i64 -15
  %3084 = load <8 x i32>, ptr %3083, align 4, !tbaa !5
  %3085 = shufflevector <8 x i32> %3084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3086 = getelementptr inbounds i32, ptr %3079, i64 -23
  %3087 = load <8 x i32>, ptr %3086, align 4, !tbaa !5
  %3088 = shufflevector <8 x i32> %3087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3089 = getelementptr inbounds i32, ptr %3079, i64 -31
  %3090 = load <8 x i32>, ptr %3089, align 4, !tbaa !5
  %3091 = shufflevector <8 x i32> %3090, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3092 = mul <8 x i32> %3082, %3074
  %3093 = mul <8 x i32> %3085, %3075
  %3094 = mul <8 x i32> %3088, %3076
  %3095 = mul <8 x i32> %3091, %3077
  %3096 = add nuw i64 %3073, 32
  %3097 = icmp eq i64 %3096, %3070
  br i1 %3097, label %3098, label %3072, !llvm.loop !864

3098:                                             ; preds = %3072
  %3099 = mul <8 x i32> %3093, %3092
  %3100 = mul <8 x i32> %3094, %3099
  %3101 = mul <8 x i32> %3095, %3100
  %3102 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3101)
  %3103 = icmp eq i64 %3066, %3070
  br i1 %3103, label %3116, label %3104

3104:                                             ; preds = %3057, %3098
  %3105 = phi i64 [ %3060, %3057 ], [ %3071, %3098 ]
  %3106 = phi i32 [ 1, %3057 ], [ %3102, %3098 ]
  br label %3107

3107:                                             ; preds = %3104, %3107
  %3108 = phi i64 [ %3113, %3107 ], [ %3105, %3104 ]
  %3109 = phi i32 [ %3112, %3107 ], [ %3106, %3104 ]
  %3110 = getelementptr inbounds i32, ptr %9, i64 %3108
  %3111 = load i32, ptr %3110, align 4, !tbaa !5
  %3112 = mul nsw i32 %3111, %3109
  %3113 = add nsw i64 %3108, -1
  %3114 = trunc i64 %3108 to i32
  %3115 = icmp sgt i32 %3114, 0
  br i1 %3115, label %3107, label %3116, !llvm.loop !865

3116:                                             ; preds = %3107, %3098
  %3117 = phi i32 [ %3102, %3098 ], [ %3112, %3107 ]
  %3118 = and i64 %3067, 4294967295
  %3119 = getelementptr inbounds i32, ptr %6, i64 %3118
  %3120 = load i32, ptr %3119, align 4, !tbaa !5
  %3121 = mul nsw i32 %3120, %3117
  %3122 = add nsw i32 %3121, %3061
  %3123 = icmp sgt i64 %3059, 2
  %3124 = add nsw i64 %3060, -1
  %3125 = add i32 %3058, 1
  br i1 %3123, label %3057, label %3126, !llvm.loop !866

3126:                                             ; preds = %3116, %3053
  %3127 = phi i32 [ %3056, %3053 ], [ %3122, %3116 ]
  %3128 = sext i32 %3127 to i64
  %3129 = getelementptr inbounds double, ptr %2, i64 %3128
  %3130 = load double, ptr %3129, align 8, !tbaa !18
  %3131 = getelementptr inbounds i64, ptr %3023, i64 %3128
  %3132 = load i64, ptr %3131, align 8, !tbaa !120
  %3133 = sitofp i64 %3054 to double
  %3134 = sitofp i64 %3132 to double
  %3135 = fmul fast double %3130, %3134
  %3136 = fadd fast double %3135, %3133
  %3137 = fptosi double %3136 to i64
  store i64 %3137, ptr %3025, align 8, !tbaa !120
  %3138 = add nuw nsw i32 %3055, 1
  br i1 %3047, label %3139, label %3186

3139:                                             ; preds = %3126
  %3140 = load i32, ptr %4, align 4, !tbaa !5
  %3141 = load i32, ptr %12, align 4, !tbaa !5
  %3142 = add nsw i32 %3141, -1
  %3143 = icmp slt i32 %3140, %3142
  br i1 %3143, label %3163, label %3144

3144:                                             ; preds = %3139
  %3145 = icmp eq i32 %3140, %3142
  br i1 %3145, label %3146, label %3179

3146:                                             ; preds = %3144
  store i32 0, ptr %4, align 4, !tbaa !5
  %3147 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3147, ptr %6, align 4, !tbaa !5
  br i1 %3052, label %3186, label %3148

3148:                                             ; preds = %3146, %3173
  %3149 = phi i64 [ %3177, %3173 ], [ 1, %3146 ]
  %3150 = getelementptr inbounds i32, ptr %4, i64 %3149
  %3151 = load i32, ptr %3150, align 4, !tbaa !5
  %3152 = getelementptr inbounds i32, ptr %12, i64 %3149
  %3153 = load i32, ptr %3152, align 4, !tbaa !5
  %3154 = add nsw i32 %3153, -1
  %3155 = icmp slt i32 %3151, %3154
  br i1 %3155, label %3156, label %3171

3156:                                             ; preds = %3148
  br i1 %3143, label %3163, label %3157

3157:                                             ; preds = %3156
  %3158 = getelementptr inbounds i32, ptr %7, i64 %3149
  %3159 = load i32, ptr %3158, align 4, !tbaa !5
  %3160 = getelementptr inbounds i32, ptr %6, i64 %3149
  %3161 = load i32, ptr %3160, align 4, !tbaa !5
  %3162 = add nsw i32 %3161, %3159
  store i32 %3162, ptr %3160, align 4, !tbaa !5
  br label %3181

3163:                                             ; preds = %3139, %3156
  %3164 = phi i32 [ %3151, %3156 ], [ %3140, %3139 ]
  %3165 = phi ptr [ %3150, %3156 ], [ %4, %3139 ]
  %3166 = phi i64 [ %3149, %3156 ], [ 0, %3139 ]
  %3167 = add nsw i32 %3164, 1
  store i32 %3167, ptr %3165, align 4, !tbaa !5
  %3168 = getelementptr inbounds i32, ptr %7, i64 %3166
  %3169 = load i32, ptr %3168, align 4, !tbaa !5
  %3170 = getelementptr inbounds i32, ptr %6, i64 %3166
  br label %3181

3171:                                             ; preds = %3148
  %3172 = icmp eq i32 %3151, %3154
  br i1 %3172, label %3173, label %3179

3173:                                             ; preds = %3171
  store i32 0, ptr %3150, align 4, !tbaa !5
  %3174 = getelementptr inbounds i32, ptr %8, i64 %3149
  %3175 = load i32, ptr %3174, align 4, !tbaa !5
  %3176 = getelementptr inbounds i32, ptr %6, i64 %3149
  store i32 %3175, ptr %3176, align 4, !tbaa !5
  %3177 = add nuw nsw i64 %3149, 1
  %3178 = icmp eq i64 %3177, %3050
  br i1 %3178, label %3186, label %3148, !llvm.loop !867

3179:                                             ; preds = %3144, %3171
  %3180 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3181:                                             ; preds = %3157, %3163
  %3182 = phi ptr [ %3170, %3163 ], [ %3150, %3157 ]
  %3183 = phi i32 [ %3169, %3163 ], [ 1, %3157 ]
  %3184 = load i32, ptr %3182, align 4, !tbaa !5
  %3185 = add nsw i32 %3184, %3183
  store i32 %3185, ptr %3182, align 4, !tbaa !5
  br label %3186

3186:                                             ; preds = %3173, %3181, %3146, %3126
  %3187 = icmp eq i32 %3138, %5
  br i1 %3187, label %5411, label %3053, !llvm.loop !868

3188:                                             ; preds = %3036, %3325
  %3189 = phi i64 [ 0, %3036 ], [ %3273, %3325 ]
  %3190 = phi i32 [ 0, %3036 ], [ %3274, %3325 ]
  %3191 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3037, label %3192, label %3261

3192:                                             ; preds = %3188, %3251
  %3193 = phi i32 [ %3260, %3251 ], [ 0, %3188 ]
  %3194 = phi i64 [ %3202, %3251 ], [ %3041, %3188 ]
  %3195 = phi i64 [ %3259, %3251 ], [ %3040, %3188 ]
  %3196 = phi i32 [ %3257, %3251 ], [ %3191, %3188 ]
  %3197 = sub i32 %3039, %3193
  %3198 = tail call i32 @llvm.smin.i32(i32 %3197, i32 0)
  %3199 = sub i32 %3197, %3198
  %3200 = zext i32 %3199 to i64
  %3201 = add nuw nsw i64 %3200, 1
  %3202 = add nsw i64 %3194, -1
  %3203 = icmp ult i32 %3199, 31
  br i1 %3203, label %3239, label %3204

3204:                                             ; preds = %3192
  %3205 = and i64 %3201, 8589934560
  %3206 = sub i64 %3195, %3205
  br label %3207

3207:                                             ; preds = %3207, %3204
  %3208 = phi i64 [ 0, %3204 ], [ %3231, %3207 ]
  %3209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3204 ], [ %3227, %3207 ]
  %3210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3204 ], [ %3228, %3207 ]
  %3211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3204 ], [ %3229, %3207 ]
  %3212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3204 ], [ %3230, %3207 ]
  %3213 = sub i64 %3195, %3208
  %3214 = getelementptr inbounds i32, ptr %11, i64 %3213
  %3215 = getelementptr inbounds i32, ptr %3214, i64 -7
  %3216 = load <8 x i32>, ptr %3215, align 4, !tbaa !5
  %3217 = shufflevector <8 x i32> %3216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3218 = getelementptr inbounds i32, ptr %3214, i64 -15
  %3219 = load <8 x i32>, ptr %3218, align 4, !tbaa !5
  %3220 = shufflevector <8 x i32> %3219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3221 = getelementptr inbounds i32, ptr %3214, i64 -23
  %3222 = load <8 x i32>, ptr %3221, align 4, !tbaa !5
  %3223 = shufflevector <8 x i32> %3222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3224 = getelementptr inbounds i32, ptr %3214, i64 -31
  %3225 = load <8 x i32>, ptr %3224, align 4, !tbaa !5
  %3226 = shufflevector <8 x i32> %3225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3227 = mul <8 x i32> %3217, %3209
  %3228 = mul <8 x i32> %3220, %3210
  %3229 = mul <8 x i32> %3223, %3211
  %3230 = mul <8 x i32> %3226, %3212
  %3231 = add nuw i64 %3208, 32
  %3232 = icmp eq i64 %3231, %3205
  br i1 %3232, label %3233, label %3207, !llvm.loop !869

3233:                                             ; preds = %3207
  %3234 = mul <8 x i32> %3228, %3227
  %3235 = mul <8 x i32> %3229, %3234
  %3236 = mul <8 x i32> %3230, %3235
  %3237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3236)
  %3238 = icmp eq i64 %3201, %3205
  br i1 %3238, label %3251, label %3239

3239:                                             ; preds = %3192, %3233
  %3240 = phi i64 [ %3195, %3192 ], [ %3206, %3233 ]
  %3241 = phi i32 [ 1, %3192 ], [ %3237, %3233 ]
  br label %3242

3242:                                             ; preds = %3239, %3242
  %3243 = phi i64 [ %3248, %3242 ], [ %3240, %3239 ]
  %3244 = phi i32 [ %3247, %3242 ], [ %3241, %3239 ]
  %3245 = getelementptr inbounds i32, ptr %11, i64 %3243
  %3246 = load i32, ptr %3245, align 4, !tbaa !5
  %3247 = mul nsw i32 %3246, %3244
  %3248 = add nsw i64 %3243, -1
  %3249 = trunc i64 %3243 to i32
  %3250 = icmp sgt i32 %3249, 0
  br i1 %3250, label %3242, label %3251, !llvm.loop !870

3251:                                             ; preds = %3242, %3233
  %3252 = phi i32 [ %3237, %3233 ], [ %3247, %3242 ]
  %3253 = and i64 %3202, 4294967295
  %3254 = getelementptr inbounds i32, ptr %6, i64 %3253
  %3255 = load i32, ptr %3254, align 4, !tbaa !5
  %3256 = mul nsw i32 %3255, %3252
  %3257 = add nsw i32 %3256, %3196
  %3258 = icmp sgt i64 %3194, 2
  %3259 = add nsw i64 %3195, -1
  %3260 = add i32 %3193, 1
  br i1 %3258, label %3192, label %3261, !llvm.loop !871

3261:                                             ; preds = %3251, %3188
  %3262 = phi i32 [ %3191, %3188 ], [ %3257, %3251 ]
  %3263 = icmp slt i32 %3262, %5
  br i1 %3263, label %3266, label %3264

3264:                                             ; preds = %3261
  %3265 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

3266:                                             ; preds = %3261
  %3267 = sext i32 %3262 to i64
  %3268 = getelementptr inbounds i64, ptr %3023, i64 %3267
  %3269 = load i64, ptr %3268, align 8, !tbaa !120
  %3270 = sitofp i64 %3189 to double
  %3271 = sitofp i64 %3269 to double
  %3272 = fadd fast double %3270, %3271
  %3273 = fptosi double %3272 to i64
  store i64 %3273, ptr %3025, align 8, !tbaa !120
  %3274 = add nuw nsw i32 %3190, 1
  br i1 %3038, label %3275, label %3325

3275:                                             ; preds = %3266
  %3276 = load i32, ptr %4, align 4, !tbaa !5
  %3277 = load i32, ptr %12, align 4, !tbaa !5
  %3278 = add nsw i32 %3277, -1
  %3279 = icmp slt i32 %3276, %3278
  br i1 %3279, label %3302, label %3280

3280:                                             ; preds = %3275
  %3281 = icmp eq i32 %3276, %3278
  br i1 %3281, label %3282, label %3318

3282:                                             ; preds = %3280
  store i32 0, ptr %4, align 4, !tbaa !5
  %3283 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3283, ptr %6, align 4, !tbaa !5
  br i1 %3043, label %3325, label %3284

3284:                                             ; preds = %3282, %3312
  %3285 = phi i64 [ %3316, %3312 ], [ 1, %3282 ]
  %3286 = getelementptr inbounds i32, ptr %4, i64 %3285
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = getelementptr inbounds i32, ptr %12, i64 %3285
  %3289 = load i32, ptr %3288, align 4, !tbaa !5
  %3290 = add nsw i32 %3289, -1
  %3291 = icmp slt i32 %3287, %3290
  br i1 %3291, label %3292, label %3310

3292:                                             ; preds = %3284
  br i1 %3279, label %3302, label %3293

3293:                                             ; preds = %3292
  %3294 = shl i64 %3285, 32
  %3295 = add i64 %3294, -4294967296
  %3296 = ashr exact i64 %3295, 32
  %3297 = getelementptr inbounds i32, ptr %7, i64 %3296
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = getelementptr inbounds i32, ptr %6, i64 %3285
  %3300 = load i32, ptr %3299, align 4, !tbaa !5
  %3301 = add nsw i32 %3300, %3298
  store i32 %3301, ptr %3299, align 4, !tbaa !5
  br label %3320

3302:                                             ; preds = %3275, %3292
  %3303 = phi i32 [ %3287, %3292 ], [ %3276, %3275 ]
  %3304 = phi ptr [ %3286, %3292 ], [ %4, %3275 ]
  %3305 = phi i64 [ %3285, %3292 ], [ 0, %3275 ]
  %3306 = add nsw i32 %3303, 1
  store i32 %3306, ptr %3304, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %7, i64 %3305
  %3308 = load i32, ptr %3307, align 4, !tbaa !5
  %3309 = getelementptr inbounds i32, ptr %6, i64 %3305
  br label %3320

3310:                                             ; preds = %3284
  %3311 = icmp eq i32 %3287, %3290
  br i1 %3311, label %3312, label %3318

3312:                                             ; preds = %3310
  store i32 0, ptr %3286, align 4, !tbaa !5
  %3313 = getelementptr inbounds i32, ptr %8, i64 %3285
  %3314 = load i32, ptr %3313, align 4, !tbaa !5
  %3315 = getelementptr inbounds i32, ptr %6, i64 %3285
  store i32 %3314, ptr %3315, align 4, !tbaa !5
  %3316 = add nuw nsw i64 %3285, 1
  %3317 = icmp eq i64 %3316, %3041
  br i1 %3317, label %3325, label %3284, !llvm.loop !872

3318:                                             ; preds = %3280, %3310
  %3319 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3320:                                             ; preds = %3293, %3302
  %3321 = phi ptr [ %3309, %3302 ], [ %3286, %3293 ]
  %3322 = phi i32 [ %3308, %3302 ], [ 1, %3293 ]
  %3323 = load i32, ptr %3321, align 4, !tbaa !5
  %3324 = add nsw i32 %3323, %3322
  store i32 %3324, ptr %3321, align 4, !tbaa !5
  br label %3325

3325:                                             ; preds = %3312, %3320, %3282, %3266
  %3326 = icmp eq i32 %3274, %5
  br i1 %3326, label %5411, label %3188, !llvm.loop !873

3327:                                             ; preds = %3029
  %3328 = getelementptr inbounds i32, ptr %3, i64 %19
  %3329 = load i32, ptr %3328, align 4, !tbaa !5
  %3330 = icmp eq i32 %3329, 0
  %3331 = icmp sgt i32 %5, 0
  br i1 %3330, label %3341, label %3332

3332:                                             ; preds = %3327
  br i1 %3331, label %3333, label %5411

3333:                                             ; preds = %3332
  %3334 = icmp sgt i32 %13, 1
  %3335 = icmp sgt i32 %13, 0
  %3336 = add i32 %13, -2
  %3337 = zext i32 %3336 to i64
  %3338 = zext i32 %13 to i64
  %3339 = add nuw i32 %5, 1
  %3340 = icmp eq i32 %13, 1
  br label %3479

3341:                                             ; preds = %3327
  br i1 %3331, label %3342, label %5411

3342:                                             ; preds = %3341
  %3343 = icmp sgt i32 %13, 1
  %3344 = icmp sgt i32 %13, 0
  %3345 = add i32 %13, -2
  %3346 = zext i32 %3345 to i64
  %3347 = zext i32 %13 to i64
  %3348 = add nuw i32 %5, 1
  %3349 = icmp eq i32 %13, 1
  br label %3350

3350:                                             ; preds = %3342, %3477
  %3351 = phi i64 [ 0, %3342 ], [ %3428, %3477 ]
  %3352 = phi i32 [ 0, %3342 ], [ %3429, %3477 ]
  %3353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3343, label %3354, label %3423

3354:                                             ; preds = %3350, %3413
  %3355 = phi i32 [ %3422, %3413 ], [ 0, %3350 ]
  %3356 = phi i64 [ %3364, %3413 ], [ %3347, %3350 ]
  %3357 = phi i64 [ %3421, %3413 ], [ %3346, %3350 ]
  %3358 = phi i32 [ %3419, %3413 ], [ %3353, %3350 ]
  %3359 = sub i32 %3345, %3355
  %3360 = tail call i32 @llvm.smin.i32(i32 %3359, i32 0)
  %3361 = sub i32 %3359, %3360
  %3362 = zext i32 %3361 to i64
  %3363 = add nuw nsw i64 %3362, 1
  %3364 = add nsw i64 %3356, -1
  %3365 = icmp ult i32 %3361, 31
  br i1 %3365, label %3401, label %3366

3366:                                             ; preds = %3354
  %3367 = and i64 %3363, 8589934560
  %3368 = sub i64 %3357, %3367
  br label %3369

3369:                                             ; preds = %3369, %3366
  %3370 = phi i64 [ 0, %3366 ], [ %3393, %3369 ]
  %3371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3366 ], [ %3389, %3369 ]
  %3372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3366 ], [ %3390, %3369 ]
  %3373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3366 ], [ %3391, %3369 ]
  %3374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3366 ], [ %3392, %3369 ]
  %3375 = sub i64 %3357, %3370
  %3376 = getelementptr inbounds i32, ptr %9, i64 %3375
  %3377 = getelementptr inbounds i32, ptr %3376, i64 -7
  %3378 = load <8 x i32>, ptr %3377, align 4, !tbaa !5
  %3379 = shufflevector <8 x i32> %3378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3380 = getelementptr inbounds i32, ptr %3376, i64 -15
  %3381 = load <8 x i32>, ptr %3380, align 4, !tbaa !5
  %3382 = shufflevector <8 x i32> %3381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3383 = getelementptr inbounds i32, ptr %3376, i64 -23
  %3384 = load <8 x i32>, ptr %3383, align 4, !tbaa !5
  %3385 = shufflevector <8 x i32> %3384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3386 = getelementptr inbounds i32, ptr %3376, i64 -31
  %3387 = load <8 x i32>, ptr %3386, align 4, !tbaa !5
  %3388 = shufflevector <8 x i32> %3387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3389 = mul <8 x i32> %3379, %3371
  %3390 = mul <8 x i32> %3382, %3372
  %3391 = mul <8 x i32> %3385, %3373
  %3392 = mul <8 x i32> %3388, %3374
  %3393 = add nuw i64 %3370, 32
  %3394 = icmp eq i64 %3393, %3367
  br i1 %3394, label %3395, label %3369, !llvm.loop !874

3395:                                             ; preds = %3369
  %3396 = mul <8 x i32> %3390, %3389
  %3397 = mul <8 x i32> %3391, %3396
  %3398 = mul <8 x i32> %3392, %3397
  %3399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3398)
  %3400 = icmp eq i64 %3363, %3367
  br i1 %3400, label %3413, label %3401

3401:                                             ; preds = %3354, %3395
  %3402 = phi i64 [ %3357, %3354 ], [ %3368, %3395 ]
  %3403 = phi i32 [ 1, %3354 ], [ %3399, %3395 ]
  br label %3404

3404:                                             ; preds = %3401, %3404
  %3405 = phi i64 [ %3410, %3404 ], [ %3402, %3401 ]
  %3406 = phi i32 [ %3409, %3404 ], [ %3403, %3401 ]
  %3407 = getelementptr inbounds i32, ptr %9, i64 %3405
  %3408 = load i32, ptr %3407, align 4, !tbaa !5
  %3409 = mul nsw i32 %3408, %3406
  %3410 = add nsw i64 %3405, -1
  %3411 = trunc i64 %3405 to i32
  %3412 = icmp sgt i32 %3411, 0
  br i1 %3412, label %3404, label %3413, !llvm.loop !875

3413:                                             ; preds = %3404, %3395
  %3414 = phi i32 [ %3399, %3395 ], [ %3409, %3404 ]
  %3415 = and i64 %3364, 4294967295
  %3416 = getelementptr inbounds i32, ptr %6, i64 %3415
  %3417 = load i32, ptr %3416, align 4, !tbaa !5
  %3418 = mul nsw i32 %3417, %3414
  %3419 = add nsw i32 %3418, %3358
  %3420 = icmp sgt i64 %3356, 2
  %3421 = add nsw i64 %3357, -1
  %3422 = add i32 %3355, 1
  br i1 %3420, label %3354, label %3423, !llvm.loop !876

3423:                                             ; preds = %3413, %3350
  %3424 = phi i32 [ %3353, %3350 ], [ %3419, %3413 ]
  %3425 = sext i32 %3424 to i64
  %3426 = getelementptr inbounds i64, ptr %3023, i64 %3425
  %3427 = load i64, ptr %3426, align 8, !tbaa !120
  %3428 = add nsw i64 %3351, %3427
  store i64 %3428, ptr %3025, align 8, !tbaa !120
  %3429 = add nuw nsw i32 %3352, 1
  br i1 %3344, label %3430, label %3477

3430:                                             ; preds = %3423
  %3431 = load i32, ptr %4, align 4, !tbaa !5
  %3432 = load i32, ptr %12, align 4, !tbaa !5
  %3433 = add nsw i32 %3432, -1
  %3434 = icmp slt i32 %3431, %3433
  br i1 %3434, label %3454, label %3435

3435:                                             ; preds = %3430
  %3436 = icmp eq i32 %3431, %3433
  br i1 %3436, label %3437, label %3470

3437:                                             ; preds = %3435
  store i32 0, ptr %4, align 4, !tbaa !5
  %3438 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3438, ptr %6, align 4, !tbaa !5
  br i1 %3349, label %3477, label %3439

3439:                                             ; preds = %3437, %3464
  %3440 = phi i64 [ %3468, %3464 ], [ 1, %3437 ]
  %3441 = getelementptr inbounds i32, ptr %4, i64 %3440
  %3442 = load i32, ptr %3441, align 4, !tbaa !5
  %3443 = getelementptr inbounds i32, ptr %12, i64 %3440
  %3444 = load i32, ptr %3443, align 4, !tbaa !5
  %3445 = add nsw i32 %3444, -1
  %3446 = icmp slt i32 %3442, %3445
  br i1 %3446, label %3447, label %3462

3447:                                             ; preds = %3439
  br i1 %3434, label %3454, label %3448

3448:                                             ; preds = %3447
  %3449 = getelementptr inbounds i32, ptr %7, i64 %3440
  %3450 = load i32, ptr %3449, align 4, !tbaa !5
  %3451 = getelementptr inbounds i32, ptr %6, i64 %3440
  %3452 = load i32, ptr %3451, align 4, !tbaa !5
  %3453 = add nsw i32 %3452, %3450
  store i32 %3453, ptr %3451, align 4, !tbaa !5
  br label %3472

3454:                                             ; preds = %3430, %3447
  %3455 = phi i32 [ %3442, %3447 ], [ %3431, %3430 ]
  %3456 = phi ptr [ %3441, %3447 ], [ %4, %3430 ]
  %3457 = phi i64 [ %3440, %3447 ], [ 0, %3430 ]
  %3458 = add nsw i32 %3455, 1
  store i32 %3458, ptr %3456, align 4, !tbaa !5
  %3459 = getelementptr inbounds i32, ptr %7, i64 %3457
  %3460 = load i32, ptr %3459, align 4, !tbaa !5
  %3461 = getelementptr inbounds i32, ptr %6, i64 %3457
  br label %3472

3462:                                             ; preds = %3439
  %3463 = icmp eq i32 %3442, %3445
  br i1 %3463, label %3464, label %3470

3464:                                             ; preds = %3462
  store i32 0, ptr %3441, align 4, !tbaa !5
  %3465 = getelementptr inbounds i32, ptr %8, i64 %3440
  %3466 = load i32, ptr %3465, align 4, !tbaa !5
  %3467 = getelementptr inbounds i32, ptr %6, i64 %3440
  store i32 %3466, ptr %3467, align 4, !tbaa !5
  %3468 = add nuw nsw i64 %3440, 1
  %3469 = icmp eq i64 %3468, %3347
  br i1 %3469, label %3477, label %3439, !llvm.loop !877

3470:                                             ; preds = %3435, %3462
  %3471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3472:                                             ; preds = %3448, %3454
  %3473 = phi ptr [ %3461, %3454 ], [ %3441, %3448 ]
  %3474 = phi i32 [ %3460, %3454 ], [ 1, %3448 ]
  %3475 = load i32, ptr %3473, align 4, !tbaa !5
  %3476 = add nsw i32 %3475, %3474
  store i32 %3476, ptr %3473, align 4, !tbaa !5
  br label %3477

3477:                                             ; preds = %3464, %3472, %3437, %3423
  %3478 = icmp eq i32 %3429, %5
  br i1 %3478, label %5411, label %3350, !llvm.loop !878

3479:                                             ; preds = %3333, %3613
  %3480 = phi i64 [ 0, %3333 ], [ %3561, %3613 ]
  %3481 = phi i32 [ 0, %3333 ], [ %3562, %3613 ]
  %3482 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3334, label %3483, label %3552

3483:                                             ; preds = %3479, %3542
  %3484 = phi i32 [ %3551, %3542 ], [ 0, %3479 ]
  %3485 = phi i64 [ %3493, %3542 ], [ %3338, %3479 ]
  %3486 = phi i64 [ %3550, %3542 ], [ %3337, %3479 ]
  %3487 = phi i32 [ %3548, %3542 ], [ %3482, %3479 ]
  %3488 = sub i32 %3336, %3484
  %3489 = tail call i32 @llvm.smin.i32(i32 %3488, i32 0)
  %3490 = sub i32 %3488, %3489
  %3491 = zext i32 %3490 to i64
  %3492 = add nuw nsw i64 %3491, 1
  %3493 = add nsw i64 %3485, -1
  %3494 = icmp ult i32 %3490, 31
  br i1 %3494, label %3530, label %3495

3495:                                             ; preds = %3483
  %3496 = and i64 %3492, 8589934560
  %3497 = sub i64 %3486, %3496
  br label %3498

3498:                                             ; preds = %3498, %3495
  %3499 = phi i64 [ 0, %3495 ], [ %3522, %3498 ]
  %3500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3518, %3498 ]
  %3501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3519, %3498 ]
  %3502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3520, %3498 ]
  %3503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3495 ], [ %3521, %3498 ]
  %3504 = sub i64 %3486, %3499
  %3505 = getelementptr inbounds i32, ptr %11, i64 %3504
  %3506 = getelementptr inbounds i32, ptr %3505, i64 -7
  %3507 = load <8 x i32>, ptr %3506, align 4, !tbaa !5
  %3508 = shufflevector <8 x i32> %3507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3509 = getelementptr inbounds i32, ptr %3505, i64 -15
  %3510 = load <8 x i32>, ptr %3509, align 4, !tbaa !5
  %3511 = shufflevector <8 x i32> %3510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3512 = getelementptr inbounds i32, ptr %3505, i64 -23
  %3513 = load <8 x i32>, ptr %3512, align 4, !tbaa !5
  %3514 = shufflevector <8 x i32> %3513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3515 = getelementptr inbounds i32, ptr %3505, i64 -31
  %3516 = load <8 x i32>, ptr %3515, align 4, !tbaa !5
  %3517 = shufflevector <8 x i32> %3516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3518 = mul <8 x i32> %3508, %3500
  %3519 = mul <8 x i32> %3511, %3501
  %3520 = mul <8 x i32> %3514, %3502
  %3521 = mul <8 x i32> %3517, %3503
  %3522 = add nuw i64 %3499, 32
  %3523 = icmp eq i64 %3522, %3496
  br i1 %3523, label %3524, label %3498, !llvm.loop !879

3524:                                             ; preds = %3498
  %3525 = mul <8 x i32> %3519, %3518
  %3526 = mul <8 x i32> %3520, %3525
  %3527 = mul <8 x i32> %3521, %3526
  %3528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3527)
  %3529 = icmp eq i64 %3492, %3496
  br i1 %3529, label %3542, label %3530

3530:                                             ; preds = %3483, %3524
  %3531 = phi i64 [ %3486, %3483 ], [ %3497, %3524 ]
  %3532 = phi i32 [ 1, %3483 ], [ %3528, %3524 ]
  br label %3533

3533:                                             ; preds = %3530, %3533
  %3534 = phi i64 [ %3539, %3533 ], [ %3531, %3530 ]
  %3535 = phi i32 [ %3538, %3533 ], [ %3532, %3530 ]
  %3536 = getelementptr inbounds i32, ptr %11, i64 %3534
  %3537 = load i32, ptr %3536, align 4, !tbaa !5
  %3538 = mul nsw i32 %3537, %3535
  %3539 = add nsw i64 %3534, -1
  %3540 = trunc i64 %3534 to i32
  %3541 = icmp sgt i32 %3540, 0
  br i1 %3541, label %3533, label %3542, !llvm.loop !880

3542:                                             ; preds = %3533, %3524
  %3543 = phi i32 [ %3528, %3524 ], [ %3538, %3533 ]
  %3544 = and i64 %3493, 4294967295
  %3545 = getelementptr inbounds i32, ptr %6, i64 %3544
  %3546 = load i32, ptr %3545, align 4, !tbaa !5
  %3547 = mul nsw i32 %3546, %3543
  %3548 = add nsw i32 %3547, %3487
  %3549 = icmp sgt i64 %3485, 2
  %3550 = add nsw i64 %3486, -1
  %3551 = add i32 %3484, 1
  br i1 %3549, label %3483, label %3552, !llvm.loop !881

3552:                                             ; preds = %3542, %3479
  %3553 = phi i32 [ %3482, %3479 ], [ %3548, %3542 ]
  %3554 = icmp slt i32 %3553, %5
  br i1 %3554, label %3557, label %3555

3555:                                             ; preds = %3552
  %3556 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

3557:                                             ; preds = %3552
  %3558 = sext i32 %3553 to i64
  %3559 = getelementptr inbounds i64, ptr %3023, i64 %3558
  %3560 = load i64, ptr %3559, align 8, !tbaa !120
  %3561 = add nsw i64 %3480, %3560
  store i64 %3561, ptr %3025, align 8, !tbaa !120
  %3562 = add nuw nsw i32 %3481, 1
  br i1 %3335, label %3563, label %3613

3563:                                             ; preds = %3557
  %3564 = load i32, ptr %4, align 4, !tbaa !5
  %3565 = load i32, ptr %12, align 4, !tbaa !5
  %3566 = add nsw i32 %3565, -1
  %3567 = icmp slt i32 %3564, %3566
  br i1 %3567, label %3590, label %3568

3568:                                             ; preds = %3563
  %3569 = icmp eq i32 %3564, %3566
  br i1 %3569, label %3570, label %3606

3570:                                             ; preds = %3568
  store i32 0, ptr %4, align 4, !tbaa !5
  %3571 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3571, ptr %6, align 4, !tbaa !5
  br i1 %3340, label %3613, label %3572

3572:                                             ; preds = %3570, %3600
  %3573 = phi i64 [ %3604, %3600 ], [ 1, %3570 ]
  %3574 = getelementptr inbounds i32, ptr %4, i64 %3573
  %3575 = load i32, ptr %3574, align 4, !tbaa !5
  %3576 = getelementptr inbounds i32, ptr %12, i64 %3573
  %3577 = load i32, ptr %3576, align 4, !tbaa !5
  %3578 = add nsw i32 %3577, -1
  %3579 = icmp slt i32 %3575, %3578
  br i1 %3579, label %3580, label %3598

3580:                                             ; preds = %3572
  br i1 %3567, label %3590, label %3581

3581:                                             ; preds = %3580
  %3582 = shl i64 %3573, 32
  %3583 = add i64 %3582, -4294967296
  %3584 = ashr exact i64 %3583, 32
  %3585 = getelementptr inbounds i32, ptr %7, i64 %3584
  %3586 = load i32, ptr %3585, align 4, !tbaa !5
  %3587 = getelementptr inbounds i32, ptr %6, i64 %3573
  %3588 = load i32, ptr %3587, align 4, !tbaa !5
  %3589 = add nsw i32 %3588, %3586
  store i32 %3589, ptr %3587, align 4, !tbaa !5
  br label %3608

3590:                                             ; preds = %3563, %3580
  %3591 = phi i32 [ %3575, %3580 ], [ %3564, %3563 ]
  %3592 = phi ptr [ %3574, %3580 ], [ %4, %3563 ]
  %3593 = phi i64 [ %3573, %3580 ], [ 0, %3563 ]
  %3594 = add nsw i32 %3591, 1
  store i32 %3594, ptr %3592, align 4, !tbaa !5
  %3595 = getelementptr inbounds i32, ptr %7, i64 %3593
  %3596 = load i32, ptr %3595, align 4, !tbaa !5
  %3597 = getelementptr inbounds i32, ptr %6, i64 %3593
  br label %3608

3598:                                             ; preds = %3572
  %3599 = icmp eq i32 %3575, %3578
  br i1 %3599, label %3600, label %3606

3600:                                             ; preds = %3598
  store i32 0, ptr %3574, align 4, !tbaa !5
  %3601 = getelementptr inbounds i32, ptr %8, i64 %3573
  %3602 = load i32, ptr %3601, align 4, !tbaa !5
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3573
  store i32 %3602, ptr %3603, align 4, !tbaa !5
  %3604 = add nuw nsw i64 %3573, 1
  %3605 = icmp eq i64 %3604, %3338
  br i1 %3605, label %3613, label %3572, !llvm.loop !882

3606:                                             ; preds = %3568, %3598
  %3607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3608:                                             ; preds = %3581, %3590
  %3609 = phi ptr [ %3597, %3590 ], [ %3574, %3581 ]
  %3610 = phi i32 [ %3596, %3590 ], [ 1, %3581 ]
  %3611 = load i32, ptr %3609, align 4, !tbaa !5
  %3612 = add nsw i32 %3611, %3610
  store i32 %3612, ptr %3609, align 4, !tbaa !5
  br label %3613

3613:                                             ; preds = %3600, %3608, %3570, %3557
  %3614 = icmp eq i32 %3562, %5
  br i1 %3614, label %5411, label %3479, !llvm.loop !883

3615:                                             ; preds = %3029
  %3616 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1266, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

3617:                                             ; preds = %18
  %3618 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3619 = load ptr, ptr %3618, align 8, !tbaa !9
  %3620 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3621 = load ptr, ptr %3620, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3621, align 8, !tbaa !18
  %3622 = icmp eq i32 %13, 0
  br i1 %3622, label %3623, label %3626

3623:                                             ; preds = %3617
  %3624 = load i64, ptr %3619, align 8, !tbaa !120
  %3625 = sitofp i64 %3624 to double
  store double %3625, ptr %3621, align 8, !tbaa !18
  br label %5411

3626:                                             ; preds = %3617
  switch i32 %1, label %4210 [
    i32 1, label %3627
    i32 0, label %3920
  ]

3627:                                             ; preds = %3626
  %3628 = getelementptr inbounds i32, ptr %3, i64 %19
  %3629 = load i32, ptr %3628, align 4, !tbaa !5
  %3630 = icmp eq i32 %3629, 0
  %3631 = icmp sgt i32 %5, 0
  br i1 %3630, label %3641, label %3632

3632:                                             ; preds = %3627
  br i1 %3631, label %3633, label %5411

3633:                                             ; preds = %3632
  %3634 = icmp sgt i32 %13, 1
  %3635 = icmp sgt i32 %13, 0
  %3636 = add i32 %13, -2
  %3637 = zext i32 %3636 to i64
  %3638 = zext i32 %13 to i64
  %3639 = add nuw i32 %5, 1
  %3640 = icmp eq i32 %13, 1
  br label %3783

3641:                                             ; preds = %3627
  br i1 %3631, label %3642, label %5411

3642:                                             ; preds = %3641
  %3643 = icmp sgt i32 %13, 1
  %3644 = icmp sgt i32 %13, 0
  %3645 = add i32 %13, -2
  %3646 = zext i32 %3645 to i64
  %3647 = zext i32 %13 to i64
  %3648 = add nuw i32 %5, 1
  %3649 = icmp eq i32 %13, 1
  br label %3650

3650:                                             ; preds = %3642, %3781
  %3651 = phi double [ 0.000000e+00, %3642 ], [ %3732, %3781 ]
  %3652 = phi i32 [ 0, %3642 ], [ %3733, %3781 ]
  %3653 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3643, label %3654, label %3723

3654:                                             ; preds = %3650, %3713
  %3655 = phi i32 [ %3722, %3713 ], [ 0, %3650 ]
  %3656 = phi i64 [ %3664, %3713 ], [ %3647, %3650 ]
  %3657 = phi i64 [ %3721, %3713 ], [ %3646, %3650 ]
  %3658 = phi i32 [ %3719, %3713 ], [ %3653, %3650 ]
  %3659 = sub i32 %3645, %3655
  %3660 = tail call i32 @llvm.smin.i32(i32 %3659, i32 0)
  %3661 = sub i32 %3659, %3660
  %3662 = zext i32 %3661 to i64
  %3663 = add nuw nsw i64 %3662, 1
  %3664 = add nsw i64 %3656, -1
  %3665 = icmp ult i32 %3661, 31
  br i1 %3665, label %3701, label %3666

3666:                                             ; preds = %3654
  %3667 = and i64 %3663, 8589934560
  %3668 = sub i64 %3657, %3667
  br label %3669

3669:                                             ; preds = %3669, %3666
  %3670 = phi i64 [ 0, %3666 ], [ %3693, %3669 ]
  %3671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3689, %3669 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3690, %3669 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3691, %3669 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3692, %3669 ]
  %3675 = sub i64 %3657, %3670
  %3676 = getelementptr inbounds i32, ptr %9, i64 %3675
  %3677 = getelementptr inbounds i32, ptr %3676, i64 -7
  %3678 = load <8 x i32>, ptr %3677, align 4, !tbaa !5
  %3679 = shufflevector <8 x i32> %3678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3680 = getelementptr inbounds i32, ptr %3676, i64 -15
  %3681 = load <8 x i32>, ptr %3680, align 4, !tbaa !5
  %3682 = shufflevector <8 x i32> %3681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3683 = getelementptr inbounds i32, ptr %3676, i64 -23
  %3684 = load <8 x i32>, ptr %3683, align 4, !tbaa !5
  %3685 = shufflevector <8 x i32> %3684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3686 = getelementptr inbounds i32, ptr %3676, i64 -31
  %3687 = load <8 x i32>, ptr %3686, align 4, !tbaa !5
  %3688 = shufflevector <8 x i32> %3687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3689 = mul <8 x i32> %3679, %3671
  %3690 = mul <8 x i32> %3682, %3672
  %3691 = mul <8 x i32> %3685, %3673
  %3692 = mul <8 x i32> %3688, %3674
  %3693 = add nuw i64 %3670, 32
  %3694 = icmp eq i64 %3693, %3667
  br i1 %3694, label %3695, label %3669, !llvm.loop !884

3695:                                             ; preds = %3669
  %3696 = mul <8 x i32> %3690, %3689
  %3697 = mul <8 x i32> %3691, %3696
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3698)
  %3700 = icmp eq i64 %3663, %3667
  br i1 %3700, label %3713, label %3701

3701:                                             ; preds = %3654, %3695
  %3702 = phi i64 [ %3657, %3654 ], [ %3668, %3695 ]
  %3703 = phi i32 [ 1, %3654 ], [ %3699, %3695 ]
  br label %3704

3704:                                             ; preds = %3701, %3704
  %3705 = phi i64 [ %3710, %3704 ], [ %3702, %3701 ]
  %3706 = phi i32 [ %3709, %3704 ], [ %3703, %3701 ]
  %3707 = getelementptr inbounds i32, ptr %9, i64 %3705
  %3708 = load i32, ptr %3707, align 4, !tbaa !5
  %3709 = mul nsw i32 %3708, %3706
  %3710 = add nsw i64 %3705, -1
  %3711 = trunc i64 %3705 to i32
  %3712 = icmp sgt i32 %3711, 0
  br i1 %3712, label %3704, label %3713, !llvm.loop !885

3713:                                             ; preds = %3704, %3695
  %3714 = phi i32 [ %3699, %3695 ], [ %3709, %3704 ]
  %3715 = and i64 %3664, 4294967295
  %3716 = getelementptr inbounds i32, ptr %6, i64 %3715
  %3717 = load i32, ptr %3716, align 4, !tbaa !5
  %3718 = mul nsw i32 %3717, %3714
  %3719 = add nsw i32 %3718, %3658
  %3720 = icmp sgt i64 %3656, 2
  %3721 = add nsw i64 %3657, -1
  %3722 = add i32 %3655, 1
  br i1 %3720, label %3654, label %3723, !llvm.loop !886

3723:                                             ; preds = %3713, %3650
  %3724 = phi i32 [ %3653, %3650 ], [ %3719, %3713 ]
  %3725 = sext i32 %3724 to i64
  %3726 = getelementptr inbounds double, ptr %2, i64 %3725
  %3727 = load double, ptr %3726, align 8, !tbaa !18
  %3728 = getelementptr inbounds i64, ptr %3619, i64 %3725
  %3729 = load i64, ptr %3728, align 8, !tbaa !120
  %3730 = sitofp i64 %3729 to double
  %3731 = fmul fast double %3727, %3730
  %3732 = fadd fast double %3731, %3651
  store double %3732, ptr %3621, align 8, !tbaa !18
  %3733 = add nuw nsw i32 %3652, 1
  br i1 %3644, label %3734, label %3781

3734:                                             ; preds = %3723
  %3735 = load i32, ptr %4, align 4, !tbaa !5
  %3736 = load i32, ptr %12, align 4, !tbaa !5
  %3737 = add nsw i32 %3736, -1
  %3738 = icmp slt i32 %3735, %3737
  br i1 %3738, label %3758, label %3739

3739:                                             ; preds = %3734
  %3740 = icmp eq i32 %3735, %3737
  br i1 %3740, label %3741, label %3774

3741:                                             ; preds = %3739
  store i32 0, ptr %4, align 4, !tbaa !5
  %3742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3742, ptr %6, align 4, !tbaa !5
  br i1 %3649, label %3781, label %3743

3743:                                             ; preds = %3741, %3768
  %3744 = phi i64 [ %3772, %3768 ], [ 1, %3741 ]
  %3745 = getelementptr inbounds i32, ptr %4, i64 %3744
  %3746 = load i32, ptr %3745, align 4, !tbaa !5
  %3747 = getelementptr inbounds i32, ptr %12, i64 %3744
  %3748 = load i32, ptr %3747, align 4, !tbaa !5
  %3749 = add nsw i32 %3748, -1
  %3750 = icmp slt i32 %3746, %3749
  br i1 %3750, label %3751, label %3766

3751:                                             ; preds = %3743
  br i1 %3738, label %3758, label %3752

3752:                                             ; preds = %3751
  %3753 = getelementptr inbounds i32, ptr %7, i64 %3744
  %3754 = load i32, ptr %3753, align 4, !tbaa !5
  %3755 = getelementptr inbounds i32, ptr %6, i64 %3744
  %3756 = load i32, ptr %3755, align 4, !tbaa !5
  %3757 = add nsw i32 %3756, %3754
  store i32 %3757, ptr %3755, align 4, !tbaa !5
  br label %3776

3758:                                             ; preds = %3734, %3751
  %3759 = phi i32 [ %3746, %3751 ], [ %3735, %3734 ]
  %3760 = phi ptr [ %3745, %3751 ], [ %4, %3734 ]
  %3761 = phi i64 [ %3744, %3751 ], [ 0, %3734 ]
  %3762 = add nsw i32 %3759, 1
  store i32 %3762, ptr %3760, align 4, !tbaa !5
  %3763 = getelementptr inbounds i32, ptr %7, i64 %3761
  %3764 = load i32, ptr %3763, align 4, !tbaa !5
  %3765 = getelementptr inbounds i32, ptr %6, i64 %3761
  br label %3776

3766:                                             ; preds = %3743
  %3767 = icmp eq i32 %3746, %3749
  br i1 %3767, label %3768, label %3774

3768:                                             ; preds = %3766
  store i32 0, ptr %3745, align 4, !tbaa !5
  %3769 = getelementptr inbounds i32, ptr %8, i64 %3744
  %3770 = load i32, ptr %3769, align 4, !tbaa !5
  %3771 = getelementptr inbounds i32, ptr %6, i64 %3744
  store i32 %3770, ptr %3771, align 4, !tbaa !5
  %3772 = add nuw nsw i64 %3744, 1
  %3773 = icmp eq i64 %3772, %3647
  br i1 %3773, label %3781, label %3743, !llvm.loop !887

3774:                                             ; preds = %3739, %3766
  %3775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3776:                                             ; preds = %3752, %3758
  %3777 = phi ptr [ %3765, %3758 ], [ %3745, %3752 ]
  %3778 = phi i32 [ %3764, %3758 ], [ 1, %3752 ]
  %3779 = load i32, ptr %3777, align 4, !tbaa !5
  %3780 = add nsw i32 %3779, %3778
  store i32 %3780, ptr %3777, align 4, !tbaa !5
  br label %3781

3781:                                             ; preds = %3768, %3776, %3741, %3723
  %3782 = icmp eq i32 %3733, %5
  br i1 %3782, label %5411, label %3650, !llvm.loop !888

3783:                                             ; preds = %3633, %3918
  %3784 = phi double [ 0.000000e+00, %3633 ], [ %3866, %3918 ]
  %3785 = phi i32 [ 0, %3633 ], [ %3867, %3918 ]
  %3786 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3634, label %3787, label %3856

3787:                                             ; preds = %3783, %3846
  %3788 = phi i32 [ %3855, %3846 ], [ 0, %3783 ]
  %3789 = phi i64 [ %3797, %3846 ], [ %3638, %3783 ]
  %3790 = phi i64 [ %3854, %3846 ], [ %3637, %3783 ]
  %3791 = phi i32 [ %3852, %3846 ], [ %3786, %3783 ]
  %3792 = sub i32 %3636, %3788
  %3793 = tail call i32 @llvm.smin.i32(i32 %3792, i32 0)
  %3794 = sub i32 %3792, %3793
  %3795 = zext i32 %3794 to i64
  %3796 = add nuw nsw i64 %3795, 1
  %3797 = add nsw i64 %3789, -1
  %3798 = icmp ult i32 %3794, 31
  br i1 %3798, label %3834, label %3799

3799:                                             ; preds = %3787
  %3800 = and i64 %3796, 8589934560
  %3801 = sub i64 %3790, %3800
  br label %3802

3802:                                             ; preds = %3802, %3799
  %3803 = phi i64 [ 0, %3799 ], [ %3826, %3802 ]
  %3804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3822, %3802 ]
  %3805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3823, %3802 ]
  %3806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3824, %3802 ]
  %3807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3825, %3802 ]
  %3808 = sub i64 %3790, %3803
  %3809 = getelementptr inbounds i32, ptr %11, i64 %3808
  %3810 = getelementptr inbounds i32, ptr %3809, i64 -7
  %3811 = load <8 x i32>, ptr %3810, align 4, !tbaa !5
  %3812 = shufflevector <8 x i32> %3811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3813 = getelementptr inbounds i32, ptr %3809, i64 -15
  %3814 = load <8 x i32>, ptr %3813, align 4, !tbaa !5
  %3815 = shufflevector <8 x i32> %3814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3816 = getelementptr inbounds i32, ptr %3809, i64 -23
  %3817 = load <8 x i32>, ptr %3816, align 4, !tbaa !5
  %3818 = shufflevector <8 x i32> %3817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3819 = getelementptr inbounds i32, ptr %3809, i64 -31
  %3820 = load <8 x i32>, ptr %3819, align 4, !tbaa !5
  %3821 = shufflevector <8 x i32> %3820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3822 = mul <8 x i32> %3812, %3804
  %3823 = mul <8 x i32> %3815, %3805
  %3824 = mul <8 x i32> %3818, %3806
  %3825 = mul <8 x i32> %3821, %3807
  %3826 = add nuw i64 %3803, 32
  %3827 = icmp eq i64 %3826, %3800
  br i1 %3827, label %3828, label %3802, !llvm.loop !889

3828:                                             ; preds = %3802
  %3829 = mul <8 x i32> %3823, %3822
  %3830 = mul <8 x i32> %3824, %3829
  %3831 = mul <8 x i32> %3825, %3830
  %3832 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3831)
  %3833 = icmp eq i64 %3796, %3800
  br i1 %3833, label %3846, label %3834

3834:                                             ; preds = %3787, %3828
  %3835 = phi i64 [ %3790, %3787 ], [ %3801, %3828 ]
  %3836 = phi i32 [ 1, %3787 ], [ %3832, %3828 ]
  br label %3837

3837:                                             ; preds = %3834, %3837
  %3838 = phi i64 [ %3843, %3837 ], [ %3835, %3834 ]
  %3839 = phi i32 [ %3842, %3837 ], [ %3836, %3834 ]
  %3840 = getelementptr inbounds i32, ptr %11, i64 %3838
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = mul nsw i32 %3841, %3839
  %3843 = add nsw i64 %3838, -1
  %3844 = trunc i64 %3838 to i32
  %3845 = icmp sgt i32 %3844, 0
  br i1 %3845, label %3837, label %3846, !llvm.loop !890

3846:                                             ; preds = %3837, %3828
  %3847 = phi i32 [ %3832, %3828 ], [ %3842, %3837 ]
  %3848 = and i64 %3797, 4294967295
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3848
  %3850 = load i32, ptr %3849, align 4, !tbaa !5
  %3851 = mul nsw i32 %3850, %3847
  %3852 = add nsw i32 %3851, %3791
  %3853 = icmp sgt i64 %3789, 2
  %3854 = add nsw i64 %3790, -1
  %3855 = add i32 %3788, 1
  br i1 %3853, label %3787, label %3856, !llvm.loop !891

3856:                                             ; preds = %3846, %3783
  %3857 = phi i32 [ %3786, %3783 ], [ %3852, %3846 ]
  %3858 = icmp slt i32 %3857, %5
  br i1 %3858, label %3861, label %3859

3859:                                             ; preds = %3856
  %3860 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

3861:                                             ; preds = %3856
  %3862 = sext i32 %3857 to i64
  %3863 = getelementptr inbounds i64, ptr %3619, i64 %3862
  %3864 = load i64, ptr %3863, align 8, !tbaa !120
  %3865 = sitofp i64 %3864 to double
  %3866 = fadd fast double %3784, %3865
  store double %3866, ptr %3621, align 8, !tbaa !18
  %3867 = add nuw nsw i32 %3785, 1
  br i1 %3635, label %3868, label %3918

3868:                                             ; preds = %3861
  %3869 = load i32, ptr %4, align 4, !tbaa !5
  %3870 = load i32, ptr %12, align 4, !tbaa !5
  %3871 = add nsw i32 %3870, -1
  %3872 = icmp slt i32 %3869, %3871
  br i1 %3872, label %3895, label %3873

3873:                                             ; preds = %3868
  %3874 = icmp eq i32 %3869, %3871
  br i1 %3874, label %3875, label %3911

3875:                                             ; preds = %3873
  store i32 0, ptr %4, align 4, !tbaa !5
  %3876 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3876, ptr %6, align 4, !tbaa !5
  br i1 %3640, label %3918, label %3877

3877:                                             ; preds = %3875, %3905
  %3878 = phi i64 [ %3909, %3905 ], [ 1, %3875 ]
  %3879 = getelementptr inbounds i32, ptr %4, i64 %3878
  %3880 = load i32, ptr %3879, align 4, !tbaa !5
  %3881 = getelementptr inbounds i32, ptr %12, i64 %3878
  %3882 = load i32, ptr %3881, align 4, !tbaa !5
  %3883 = add nsw i32 %3882, -1
  %3884 = icmp slt i32 %3880, %3883
  br i1 %3884, label %3885, label %3903

3885:                                             ; preds = %3877
  br i1 %3872, label %3895, label %3886

3886:                                             ; preds = %3885
  %3887 = shl i64 %3878, 32
  %3888 = add i64 %3887, -4294967296
  %3889 = ashr exact i64 %3888, 32
  %3890 = getelementptr inbounds i32, ptr %7, i64 %3889
  %3891 = load i32, ptr %3890, align 4, !tbaa !5
  %3892 = getelementptr inbounds i32, ptr %6, i64 %3878
  %3893 = load i32, ptr %3892, align 4, !tbaa !5
  %3894 = add nsw i32 %3893, %3891
  store i32 %3894, ptr %3892, align 4, !tbaa !5
  br label %3913

3895:                                             ; preds = %3868, %3885
  %3896 = phi i32 [ %3880, %3885 ], [ %3869, %3868 ]
  %3897 = phi ptr [ %3879, %3885 ], [ %4, %3868 ]
  %3898 = phi i64 [ %3878, %3885 ], [ 0, %3868 ]
  %3899 = add nsw i32 %3896, 1
  store i32 %3899, ptr %3897, align 4, !tbaa !5
  %3900 = getelementptr inbounds i32, ptr %7, i64 %3898
  %3901 = load i32, ptr %3900, align 4, !tbaa !5
  %3902 = getelementptr inbounds i32, ptr %6, i64 %3898
  br label %3913

3903:                                             ; preds = %3877
  %3904 = icmp eq i32 %3880, %3883
  br i1 %3904, label %3905, label %3911

3905:                                             ; preds = %3903
  store i32 0, ptr %3879, align 4, !tbaa !5
  %3906 = getelementptr inbounds i32, ptr %8, i64 %3878
  %3907 = load i32, ptr %3906, align 4, !tbaa !5
  %3908 = getelementptr inbounds i32, ptr %6, i64 %3878
  store i32 %3907, ptr %3908, align 4, !tbaa !5
  %3909 = add nuw nsw i64 %3878, 1
  %3910 = icmp eq i64 %3909, %3638
  br i1 %3910, label %3918, label %3877, !llvm.loop !892

3911:                                             ; preds = %3873, %3903
  %3912 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

3913:                                             ; preds = %3886, %3895
  %3914 = phi ptr [ %3902, %3895 ], [ %3879, %3886 ]
  %3915 = phi i32 [ %3901, %3895 ], [ 1, %3886 ]
  %3916 = load i32, ptr %3914, align 4, !tbaa !5
  %3917 = add nsw i32 %3916, %3915
  store i32 %3917, ptr %3914, align 4, !tbaa !5
  br label %3918

3918:                                             ; preds = %3905, %3913, %3875, %3861
  %3919 = icmp eq i32 %3867, %5
  br i1 %3919, label %5411, label %3783, !llvm.loop !893

3920:                                             ; preds = %3626
  %3921 = getelementptr inbounds i32, ptr %3, i64 %19
  %3922 = load i32, ptr %3921, align 4, !tbaa !5
  %3923 = icmp eq i32 %3922, 0
  %3924 = icmp sgt i32 %5, 0
  br i1 %3923, label %3934, label %3925

3925:                                             ; preds = %3920
  br i1 %3924, label %3926, label %5411

3926:                                             ; preds = %3925
  %3927 = icmp sgt i32 %13, 1
  %3928 = icmp sgt i32 %13, 0
  %3929 = add i32 %13, -2
  %3930 = zext i32 %3929 to i64
  %3931 = zext i32 %13 to i64
  %3932 = add nuw i32 %5, 1
  %3933 = icmp eq i32 %13, 1
  br label %4073

3934:                                             ; preds = %3920
  br i1 %3924, label %3935, label %5411

3935:                                             ; preds = %3934
  %3936 = icmp sgt i32 %13, 1
  %3937 = icmp sgt i32 %13, 0
  %3938 = add i32 %13, -2
  %3939 = zext i32 %3938 to i64
  %3940 = zext i32 %13 to i64
  %3941 = add nuw i32 %5, 1
  %3942 = icmp eq i32 %13, 1
  br label %3943

3943:                                             ; preds = %3935, %4071
  %3944 = phi double [ 0.000000e+00, %3935 ], [ %4022, %4071 ]
  %3945 = phi i32 [ 0, %3935 ], [ %4023, %4071 ]
  %3946 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3936, label %3947, label %4016

3947:                                             ; preds = %3943, %4006
  %3948 = phi i32 [ %4015, %4006 ], [ 0, %3943 ]
  %3949 = phi i64 [ %3957, %4006 ], [ %3940, %3943 ]
  %3950 = phi i64 [ %4014, %4006 ], [ %3939, %3943 ]
  %3951 = phi i32 [ %4012, %4006 ], [ %3946, %3943 ]
  %3952 = sub i32 %3938, %3948
  %3953 = tail call i32 @llvm.smin.i32(i32 %3952, i32 0)
  %3954 = sub i32 %3952, %3953
  %3955 = zext i32 %3954 to i64
  %3956 = add nuw nsw i64 %3955, 1
  %3957 = add nsw i64 %3949, -1
  %3958 = icmp ult i32 %3954, 31
  br i1 %3958, label %3994, label %3959

3959:                                             ; preds = %3947
  %3960 = and i64 %3956, 8589934560
  %3961 = sub i64 %3950, %3960
  br label %3962

3962:                                             ; preds = %3962, %3959
  %3963 = phi i64 [ 0, %3959 ], [ %3986, %3962 ]
  %3964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3982, %3962 ]
  %3965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3983, %3962 ]
  %3966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3984, %3962 ]
  %3967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3985, %3962 ]
  %3968 = sub i64 %3950, %3963
  %3969 = getelementptr inbounds i32, ptr %9, i64 %3968
  %3970 = getelementptr inbounds i32, ptr %3969, i64 -7
  %3971 = load <8 x i32>, ptr %3970, align 4, !tbaa !5
  %3972 = shufflevector <8 x i32> %3971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3973 = getelementptr inbounds i32, ptr %3969, i64 -15
  %3974 = load <8 x i32>, ptr %3973, align 4, !tbaa !5
  %3975 = shufflevector <8 x i32> %3974, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3976 = getelementptr inbounds i32, ptr %3969, i64 -23
  %3977 = load <8 x i32>, ptr %3976, align 4, !tbaa !5
  %3978 = shufflevector <8 x i32> %3977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3979 = getelementptr inbounds i32, ptr %3969, i64 -31
  %3980 = load <8 x i32>, ptr %3979, align 4, !tbaa !5
  %3981 = shufflevector <8 x i32> %3980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3982 = mul <8 x i32> %3972, %3964
  %3983 = mul <8 x i32> %3975, %3965
  %3984 = mul <8 x i32> %3978, %3966
  %3985 = mul <8 x i32> %3981, %3967
  %3986 = add nuw i64 %3963, 32
  %3987 = icmp eq i64 %3986, %3960
  br i1 %3987, label %3988, label %3962, !llvm.loop !894

3988:                                             ; preds = %3962
  %3989 = mul <8 x i32> %3983, %3982
  %3990 = mul <8 x i32> %3984, %3989
  %3991 = mul <8 x i32> %3985, %3990
  %3992 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3991)
  %3993 = icmp eq i64 %3956, %3960
  br i1 %3993, label %4006, label %3994

3994:                                             ; preds = %3947, %3988
  %3995 = phi i64 [ %3950, %3947 ], [ %3961, %3988 ]
  %3996 = phi i32 [ 1, %3947 ], [ %3992, %3988 ]
  br label %3997

3997:                                             ; preds = %3994, %3997
  %3998 = phi i64 [ %4003, %3997 ], [ %3995, %3994 ]
  %3999 = phi i32 [ %4002, %3997 ], [ %3996, %3994 ]
  %4000 = getelementptr inbounds i32, ptr %9, i64 %3998
  %4001 = load i32, ptr %4000, align 4, !tbaa !5
  %4002 = mul nsw i32 %4001, %3999
  %4003 = add nsw i64 %3998, -1
  %4004 = trunc i64 %3998 to i32
  %4005 = icmp sgt i32 %4004, 0
  br i1 %4005, label %3997, label %4006, !llvm.loop !895

4006:                                             ; preds = %3997, %3988
  %4007 = phi i32 [ %3992, %3988 ], [ %4002, %3997 ]
  %4008 = and i64 %3957, 4294967295
  %4009 = getelementptr inbounds i32, ptr %6, i64 %4008
  %4010 = load i32, ptr %4009, align 4, !tbaa !5
  %4011 = mul nsw i32 %4010, %4007
  %4012 = add nsw i32 %4011, %3951
  %4013 = icmp sgt i64 %3949, 2
  %4014 = add nsw i64 %3950, -1
  %4015 = add i32 %3948, 1
  br i1 %4013, label %3947, label %4016, !llvm.loop !896

4016:                                             ; preds = %4006, %3943
  %4017 = phi i32 [ %3946, %3943 ], [ %4012, %4006 ]
  %4018 = sext i32 %4017 to i64
  %4019 = getelementptr inbounds i64, ptr %3619, i64 %4018
  %4020 = load i64, ptr %4019, align 8, !tbaa !120
  %4021 = sitofp i64 %4020 to double
  %4022 = fadd fast double %3944, %4021
  %4023 = add nuw nsw i32 %3945, 1
  br i1 %3937, label %4024, label %4071

4024:                                             ; preds = %4016
  %4025 = load i32, ptr %4, align 4, !tbaa !5
  %4026 = load i32, ptr %12, align 4, !tbaa !5
  %4027 = add nsw i32 %4026, -1
  %4028 = icmp slt i32 %4025, %4027
  br i1 %4028, label %4048, label %4029

4029:                                             ; preds = %4024
  %4030 = icmp eq i32 %4025, %4027
  br i1 %4030, label %4031, label %4064

4031:                                             ; preds = %4029
  store i32 0, ptr %4, align 4, !tbaa !5
  %4032 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4032, ptr %6, align 4, !tbaa !5
  br i1 %3942, label %4071, label %4033

4033:                                             ; preds = %4031, %4058
  %4034 = phi i64 [ %4062, %4058 ], [ 1, %4031 ]
  %4035 = getelementptr inbounds i32, ptr %4, i64 %4034
  %4036 = load i32, ptr %4035, align 4, !tbaa !5
  %4037 = getelementptr inbounds i32, ptr %12, i64 %4034
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = add nsw i32 %4038, -1
  %4040 = icmp slt i32 %4036, %4039
  br i1 %4040, label %4041, label %4056

4041:                                             ; preds = %4033
  br i1 %4028, label %4048, label %4042

4042:                                             ; preds = %4041
  %4043 = getelementptr inbounds i32, ptr %7, i64 %4034
  %4044 = load i32, ptr %4043, align 4, !tbaa !5
  %4045 = getelementptr inbounds i32, ptr %6, i64 %4034
  %4046 = load i32, ptr %4045, align 4, !tbaa !5
  %4047 = add nsw i32 %4046, %4044
  store i32 %4047, ptr %4045, align 4, !tbaa !5
  br label %4066

4048:                                             ; preds = %4024, %4041
  %4049 = phi i32 [ %4036, %4041 ], [ %4025, %4024 ]
  %4050 = phi ptr [ %4035, %4041 ], [ %4, %4024 ]
  %4051 = phi i64 [ %4034, %4041 ], [ 0, %4024 ]
  %4052 = add nsw i32 %4049, 1
  store i32 %4052, ptr %4050, align 4, !tbaa !5
  %4053 = getelementptr inbounds i32, ptr %7, i64 %4051
  %4054 = load i32, ptr %4053, align 4, !tbaa !5
  %4055 = getelementptr inbounds i32, ptr %6, i64 %4051
  br label %4066

4056:                                             ; preds = %4033
  %4057 = icmp eq i32 %4036, %4039
  br i1 %4057, label %4058, label %4064

4058:                                             ; preds = %4056
  store i32 0, ptr %4035, align 4, !tbaa !5
  %4059 = getelementptr inbounds i32, ptr %8, i64 %4034
  %4060 = load i32, ptr %4059, align 4, !tbaa !5
  %4061 = getelementptr inbounds i32, ptr %6, i64 %4034
  store i32 %4060, ptr %4061, align 4, !tbaa !5
  %4062 = add nuw nsw i64 %4034, 1
  %4063 = icmp eq i64 %4062, %3940
  br i1 %4063, label %4071, label %4033, !llvm.loop !897

4064:                                             ; preds = %4029, %4056
  store double %4022, ptr %3621, align 8, !tbaa !18
  %4065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4066:                                             ; preds = %4042, %4048
  %4067 = phi ptr [ %4055, %4048 ], [ %4035, %4042 ]
  %4068 = phi i32 [ %4054, %4048 ], [ 1, %4042 ]
  %4069 = load i32, ptr %4067, align 4, !tbaa !5
  %4070 = add nsw i32 %4069, %4068
  store i32 %4070, ptr %4067, align 4, !tbaa !5
  br label %4071

4071:                                             ; preds = %4058, %4066, %4031, %4016
  %4072 = icmp eq i32 %4023, %5
  br i1 %4072, label %5407, label %3943, !llvm.loop !898

4073:                                             ; preds = %3926, %4208
  %4074 = phi double [ 0.000000e+00, %3926 ], [ %4156, %4208 ]
  %4075 = phi i32 [ 0, %3926 ], [ %4157, %4208 ]
  %4076 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3927, label %4077, label %4146

4077:                                             ; preds = %4073, %4136
  %4078 = phi i32 [ %4145, %4136 ], [ 0, %4073 ]
  %4079 = phi i64 [ %4087, %4136 ], [ %3931, %4073 ]
  %4080 = phi i64 [ %4144, %4136 ], [ %3930, %4073 ]
  %4081 = phi i32 [ %4142, %4136 ], [ %4076, %4073 ]
  %4082 = sub i32 %3929, %4078
  %4083 = tail call i32 @llvm.smin.i32(i32 %4082, i32 0)
  %4084 = sub i32 %4082, %4083
  %4085 = zext i32 %4084 to i64
  %4086 = add nuw nsw i64 %4085, 1
  %4087 = add nsw i64 %4079, -1
  %4088 = icmp ult i32 %4084, 31
  br i1 %4088, label %4124, label %4089

4089:                                             ; preds = %4077
  %4090 = and i64 %4086, 8589934560
  %4091 = sub i64 %4080, %4090
  br label %4092

4092:                                             ; preds = %4092, %4089
  %4093 = phi i64 [ 0, %4089 ], [ %4116, %4092 ]
  %4094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4112, %4092 ]
  %4095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4113, %4092 ]
  %4096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4114, %4092 ]
  %4097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4115, %4092 ]
  %4098 = sub i64 %4080, %4093
  %4099 = getelementptr inbounds i32, ptr %11, i64 %4098
  %4100 = getelementptr inbounds i32, ptr %4099, i64 -7
  %4101 = load <8 x i32>, ptr %4100, align 4, !tbaa !5
  %4102 = shufflevector <8 x i32> %4101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4103 = getelementptr inbounds i32, ptr %4099, i64 -15
  %4104 = load <8 x i32>, ptr %4103, align 4, !tbaa !5
  %4105 = shufflevector <8 x i32> %4104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4106 = getelementptr inbounds i32, ptr %4099, i64 -23
  %4107 = load <8 x i32>, ptr %4106, align 4, !tbaa !5
  %4108 = shufflevector <8 x i32> %4107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4109 = getelementptr inbounds i32, ptr %4099, i64 -31
  %4110 = load <8 x i32>, ptr %4109, align 4, !tbaa !5
  %4111 = shufflevector <8 x i32> %4110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4112 = mul <8 x i32> %4102, %4094
  %4113 = mul <8 x i32> %4105, %4095
  %4114 = mul <8 x i32> %4108, %4096
  %4115 = mul <8 x i32> %4111, %4097
  %4116 = add nuw i64 %4093, 32
  %4117 = icmp eq i64 %4116, %4090
  br i1 %4117, label %4118, label %4092, !llvm.loop !899

4118:                                             ; preds = %4092
  %4119 = mul <8 x i32> %4113, %4112
  %4120 = mul <8 x i32> %4114, %4119
  %4121 = mul <8 x i32> %4115, %4120
  %4122 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4121)
  %4123 = icmp eq i64 %4086, %4090
  br i1 %4123, label %4136, label %4124

4124:                                             ; preds = %4077, %4118
  %4125 = phi i64 [ %4080, %4077 ], [ %4091, %4118 ]
  %4126 = phi i32 [ 1, %4077 ], [ %4122, %4118 ]
  br label %4127

4127:                                             ; preds = %4124, %4127
  %4128 = phi i64 [ %4133, %4127 ], [ %4125, %4124 ]
  %4129 = phi i32 [ %4132, %4127 ], [ %4126, %4124 ]
  %4130 = getelementptr inbounds i32, ptr %11, i64 %4128
  %4131 = load i32, ptr %4130, align 4, !tbaa !5
  %4132 = mul nsw i32 %4131, %4129
  %4133 = add nsw i64 %4128, -1
  %4134 = trunc i64 %4128 to i32
  %4135 = icmp sgt i32 %4134, 0
  br i1 %4135, label %4127, label %4136, !llvm.loop !900

4136:                                             ; preds = %4127, %4118
  %4137 = phi i32 [ %4122, %4118 ], [ %4132, %4127 ]
  %4138 = and i64 %4087, 4294967295
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4138
  %4140 = load i32, ptr %4139, align 4, !tbaa !5
  %4141 = mul nsw i32 %4140, %4137
  %4142 = add nsw i32 %4141, %4081
  %4143 = icmp sgt i64 %4079, 2
  %4144 = add nsw i64 %4080, -1
  %4145 = add i32 %4078, 1
  br i1 %4143, label %4077, label %4146, !llvm.loop !901

4146:                                             ; preds = %4136, %4073
  %4147 = phi i32 [ %4076, %4073 ], [ %4142, %4136 ]
  %4148 = icmp slt i32 %4147, %5
  br i1 %4148, label %4151, label %4149

4149:                                             ; preds = %4146
  %4150 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

4151:                                             ; preds = %4146
  %4152 = sext i32 %4147 to i64
  %4153 = getelementptr inbounds i64, ptr %3619, i64 %4152
  %4154 = load i64, ptr %4153, align 8, !tbaa !120
  %4155 = sitofp i64 %4154 to double
  %4156 = fadd fast double %4074, %4155
  store double %4156, ptr %3621, align 8, !tbaa !18
  %4157 = add nuw nsw i32 %4075, 1
  br i1 %3928, label %4158, label %4208

4158:                                             ; preds = %4151
  %4159 = load i32, ptr %4, align 4, !tbaa !5
  %4160 = load i32, ptr %12, align 4, !tbaa !5
  %4161 = add nsw i32 %4160, -1
  %4162 = icmp slt i32 %4159, %4161
  br i1 %4162, label %4185, label %4163

4163:                                             ; preds = %4158
  %4164 = icmp eq i32 %4159, %4161
  br i1 %4164, label %4165, label %4201

4165:                                             ; preds = %4163
  store i32 0, ptr %4, align 4, !tbaa !5
  %4166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4166, ptr %6, align 4, !tbaa !5
  br i1 %3933, label %4208, label %4167

4167:                                             ; preds = %4165, %4195
  %4168 = phi i64 [ %4199, %4195 ], [ 1, %4165 ]
  %4169 = getelementptr inbounds i32, ptr %4, i64 %4168
  %4170 = load i32, ptr %4169, align 4, !tbaa !5
  %4171 = getelementptr inbounds i32, ptr %12, i64 %4168
  %4172 = load i32, ptr %4171, align 4, !tbaa !5
  %4173 = add nsw i32 %4172, -1
  %4174 = icmp slt i32 %4170, %4173
  br i1 %4174, label %4175, label %4193

4175:                                             ; preds = %4167
  br i1 %4162, label %4185, label %4176

4176:                                             ; preds = %4175
  %4177 = shl i64 %4168, 32
  %4178 = add i64 %4177, -4294967296
  %4179 = ashr exact i64 %4178, 32
  %4180 = getelementptr inbounds i32, ptr %7, i64 %4179
  %4181 = load i32, ptr %4180, align 4, !tbaa !5
  %4182 = getelementptr inbounds i32, ptr %6, i64 %4168
  %4183 = load i32, ptr %4182, align 4, !tbaa !5
  %4184 = add nsw i32 %4183, %4181
  store i32 %4184, ptr %4182, align 4, !tbaa !5
  br label %4203

4185:                                             ; preds = %4158, %4175
  %4186 = phi i32 [ %4170, %4175 ], [ %4159, %4158 ]
  %4187 = phi ptr [ %4169, %4175 ], [ %4, %4158 ]
  %4188 = phi i64 [ %4168, %4175 ], [ 0, %4158 ]
  %4189 = add nsw i32 %4186, 1
  store i32 %4189, ptr %4187, align 4, !tbaa !5
  %4190 = getelementptr inbounds i32, ptr %7, i64 %4188
  %4191 = load i32, ptr %4190, align 4, !tbaa !5
  %4192 = getelementptr inbounds i32, ptr %6, i64 %4188
  br label %4203

4193:                                             ; preds = %4167
  %4194 = icmp eq i32 %4170, %4173
  br i1 %4194, label %4195, label %4201

4195:                                             ; preds = %4193
  store i32 0, ptr %4169, align 4, !tbaa !5
  %4196 = getelementptr inbounds i32, ptr %8, i64 %4168
  %4197 = load i32, ptr %4196, align 4, !tbaa !5
  %4198 = getelementptr inbounds i32, ptr %6, i64 %4168
  store i32 %4197, ptr %4198, align 4, !tbaa !5
  %4199 = add nuw nsw i64 %4168, 1
  %4200 = icmp eq i64 %4199, %3931
  br i1 %4200, label %4208, label %4167, !llvm.loop !902

4201:                                             ; preds = %4163, %4193
  %4202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4203:                                             ; preds = %4176, %4185
  %4204 = phi ptr [ %4192, %4185 ], [ %4169, %4176 ]
  %4205 = phi i32 [ %4191, %4185 ], [ 1, %4176 ]
  %4206 = load i32, ptr %4204, align 4, !tbaa !5
  %4207 = add nsw i32 %4206, %4205
  store i32 %4207, ptr %4204, align 4, !tbaa !5
  br label %4208

4208:                                             ; preds = %4195, %4203, %4165, %4151
  %4209 = icmp eq i32 %4157, %5
  br i1 %4209, label %5411, label %4073, !llvm.loop !903

4210:                                             ; preds = %3626
  %4211 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1270, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

4212:                                             ; preds = %18
  %4213 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4214 = load ptr, ptr %4213, align 8, !tbaa !9
  %4215 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4216 = load ptr, ptr %4215, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4216, align 4, !tbaa !162
  %4217 = icmp eq i32 %13, 0
  br i1 %4217, label %4218, label %4221

4218:                                             ; preds = %4212
  %4219 = load i64, ptr %4214, align 8, !tbaa !120
  %4220 = sitofp i64 %4219 to float
  store float %4220, ptr %4216, align 4, !tbaa !162
  br label %5411

4221:                                             ; preds = %4212
  switch i32 %1, label %4808 [
    i32 1, label %4222
    i32 0, label %4518
  ]

4222:                                             ; preds = %4221
  %4223 = getelementptr inbounds i32, ptr %3, i64 %19
  %4224 = load i32, ptr %4223, align 4, !tbaa !5
  %4225 = icmp eq i32 %4224, 0
  %4226 = icmp sgt i32 %5, 0
  br i1 %4225, label %4236, label %4227

4227:                                             ; preds = %4222
  br i1 %4226, label %4228, label %5411

4228:                                             ; preds = %4227
  %4229 = icmp sgt i32 %13, 1
  %4230 = icmp sgt i32 %13, 0
  %4231 = add i32 %13, -2
  %4232 = zext i32 %4231 to i64
  %4233 = zext i32 %13 to i64
  %4234 = add nuw i32 %5, 1
  %4235 = icmp eq i32 %13, 1
  br label %4381

4236:                                             ; preds = %4222
  br i1 %4226, label %4237, label %5411

4237:                                             ; preds = %4236
  %4238 = icmp sgt i32 %13, 1
  %4239 = icmp sgt i32 %13, 0
  %4240 = add i32 %13, -2
  %4241 = zext i32 %4240 to i64
  %4242 = zext i32 %13 to i64
  %4243 = add nuw i32 %5, 1
  %4244 = icmp eq i32 %13, 1
  br label %4245

4245:                                             ; preds = %4237, %4379
  %4246 = phi float [ 0.000000e+00, %4237 ], [ %4330, %4379 ]
  %4247 = phi i32 [ 0, %4237 ], [ %4331, %4379 ]
  %4248 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4238, label %4249, label %4318

4249:                                             ; preds = %4245, %4308
  %4250 = phi i32 [ %4317, %4308 ], [ 0, %4245 ]
  %4251 = phi i64 [ %4259, %4308 ], [ %4242, %4245 ]
  %4252 = phi i64 [ %4316, %4308 ], [ %4241, %4245 ]
  %4253 = phi i32 [ %4314, %4308 ], [ %4248, %4245 ]
  %4254 = sub i32 %4240, %4250
  %4255 = tail call i32 @llvm.smin.i32(i32 %4254, i32 0)
  %4256 = sub i32 %4254, %4255
  %4257 = zext i32 %4256 to i64
  %4258 = add nuw nsw i64 %4257, 1
  %4259 = add nsw i64 %4251, -1
  %4260 = icmp ult i32 %4256, 31
  br i1 %4260, label %4296, label %4261

4261:                                             ; preds = %4249
  %4262 = and i64 %4258, 8589934560
  %4263 = sub i64 %4252, %4262
  br label %4264

4264:                                             ; preds = %4264, %4261
  %4265 = phi i64 [ 0, %4261 ], [ %4288, %4264 ]
  %4266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4261 ], [ %4284, %4264 ]
  %4267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4261 ], [ %4285, %4264 ]
  %4268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4261 ], [ %4286, %4264 ]
  %4269 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4261 ], [ %4287, %4264 ]
  %4270 = sub i64 %4252, %4265
  %4271 = getelementptr inbounds i32, ptr %9, i64 %4270
  %4272 = getelementptr inbounds i32, ptr %4271, i64 -7
  %4273 = load <8 x i32>, ptr %4272, align 4, !tbaa !5
  %4274 = shufflevector <8 x i32> %4273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4275 = getelementptr inbounds i32, ptr %4271, i64 -15
  %4276 = load <8 x i32>, ptr %4275, align 4, !tbaa !5
  %4277 = shufflevector <8 x i32> %4276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4278 = getelementptr inbounds i32, ptr %4271, i64 -23
  %4279 = load <8 x i32>, ptr %4278, align 4, !tbaa !5
  %4280 = shufflevector <8 x i32> %4279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4281 = getelementptr inbounds i32, ptr %4271, i64 -31
  %4282 = load <8 x i32>, ptr %4281, align 4, !tbaa !5
  %4283 = shufflevector <8 x i32> %4282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4284 = mul <8 x i32> %4274, %4266
  %4285 = mul <8 x i32> %4277, %4267
  %4286 = mul <8 x i32> %4280, %4268
  %4287 = mul <8 x i32> %4283, %4269
  %4288 = add nuw i64 %4265, 32
  %4289 = icmp eq i64 %4288, %4262
  br i1 %4289, label %4290, label %4264, !llvm.loop !904

4290:                                             ; preds = %4264
  %4291 = mul <8 x i32> %4285, %4284
  %4292 = mul <8 x i32> %4286, %4291
  %4293 = mul <8 x i32> %4287, %4292
  %4294 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4293)
  %4295 = icmp eq i64 %4258, %4262
  br i1 %4295, label %4308, label %4296

4296:                                             ; preds = %4249, %4290
  %4297 = phi i64 [ %4252, %4249 ], [ %4263, %4290 ]
  %4298 = phi i32 [ 1, %4249 ], [ %4294, %4290 ]
  br label %4299

4299:                                             ; preds = %4296, %4299
  %4300 = phi i64 [ %4305, %4299 ], [ %4297, %4296 ]
  %4301 = phi i32 [ %4304, %4299 ], [ %4298, %4296 ]
  %4302 = getelementptr inbounds i32, ptr %9, i64 %4300
  %4303 = load i32, ptr %4302, align 4, !tbaa !5
  %4304 = mul nsw i32 %4303, %4301
  %4305 = add nsw i64 %4300, -1
  %4306 = trunc i64 %4300 to i32
  %4307 = icmp sgt i32 %4306, 0
  br i1 %4307, label %4299, label %4308, !llvm.loop !905

4308:                                             ; preds = %4299, %4290
  %4309 = phi i32 [ %4294, %4290 ], [ %4304, %4299 ]
  %4310 = and i64 %4259, 4294967295
  %4311 = getelementptr inbounds i32, ptr %6, i64 %4310
  %4312 = load i32, ptr %4311, align 4, !tbaa !5
  %4313 = mul nsw i32 %4312, %4309
  %4314 = add nsw i32 %4313, %4253
  %4315 = icmp sgt i64 %4251, 2
  %4316 = add nsw i64 %4252, -1
  %4317 = add i32 %4250, 1
  br i1 %4315, label %4249, label %4318, !llvm.loop !906

4318:                                             ; preds = %4308, %4245
  %4319 = phi i32 [ %4248, %4245 ], [ %4314, %4308 ]
  %4320 = sext i32 %4319 to i64
  %4321 = getelementptr inbounds double, ptr %2, i64 %4320
  %4322 = load double, ptr %4321, align 8, !tbaa !18
  %4323 = getelementptr inbounds i64, ptr %4214, i64 %4320
  %4324 = load i64, ptr %4323, align 8, !tbaa !120
  %4325 = sitofp i64 %4324 to float
  %4326 = fpext float %4246 to double
  %4327 = fpext float %4325 to double
  %4328 = fmul fast double %4322, %4327
  %4329 = fadd fast double %4328, %4326
  %4330 = fptrunc double %4329 to float
  %4331 = add nuw nsw i32 %4247, 1
  br i1 %4239, label %4332, label %4379

4332:                                             ; preds = %4318
  %4333 = load i32, ptr %4, align 4, !tbaa !5
  %4334 = load i32, ptr %12, align 4, !tbaa !5
  %4335 = add nsw i32 %4334, -1
  %4336 = icmp slt i32 %4333, %4335
  br i1 %4336, label %4356, label %4337

4337:                                             ; preds = %4332
  %4338 = icmp eq i32 %4333, %4335
  br i1 %4338, label %4339, label %4372

4339:                                             ; preds = %4337
  store i32 0, ptr %4, align 4, !tbaa !5
  %4340 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4340, ptr %6, align 4, !tbaa !5
  br i1 %4244, label %4379, label %4341

4341:                                             ; preds = %4339, %4366
  %4342 = phi i64 [ %4370, %4366 ], [ 1, %4339 ]
  %4343 = getelementptr inbounds i32, ptr %4, i64 %4342
  %4344 = load i32, ptr %4343, align 4, !tbaa !5
  %4345 = getelementptr inbounds i32, ptr %12, i64 %4342
  %4346 = load i32, ptr %4345, align 4, !tbaa !5
  %4347 = add nsw i32 %4346, -1
  %4348 = icmp slt i32 %4344, %4347
  br i1 %4348, label %4349, label %4364

4349:                                             ; preds = %4341
  br i1 %4336, label %4356, label %4350

4350:                                             ; preds = %4349
  %4351 = getelementptr inbounds i32, ptr %7, i64 %4342
  %4352 = load i32, ptr %4351, align 4, !tbaa !5
  %4353 = getelementptr inbounds i32, ptr %6, i64 %4342
  %4354 = load i32, ptr %4353, align 4, !tbaa !5
  %4355 = add nsw i32 %4354, %4352
  store i32 %4355, ptr %4353, align 4, !tbaa !5
  br label %4374

4356:                                             ; preds = %4332, %4349
  %4357 = phi i32 [ %4344, %4349 ], [ %4333, %4332 ]
  %4358 = phi ptr [ %4343, %4349 ], [ %4, %4332 ]
  %4359 = phi i64 [ %4342, %4349 ], [ 0, %4332 ]
  %4360 = add nsw i32 %4357, 1
  store i32 %4360, ptr %4358, align 4, !tbaa !5
  %4361 = getelementptr inbounds i32, ptr %7, i64 %4359
  %4362 = load i32, ptr %4361, align 4, !tbaa !5
  %4363 = getelementptr inbounds i32, ptr %6, i64 %4359
  br label %4374

4364:                                             ; preds = %4341
  %4365 = icmp eq i32 %4344, %4347
  br i1 %4365, label %4366, label %4372

4366:                                             ; preds = %4364
  store i32 0, ptr %4343, align 4, !tbaa !5
  %4367 = getelementptr inbounds i32, ptr %8, i64 %4342
  %4368 = load i32, ptr %4367, align 4, !tbaa !5
  %4369 = getelementptr inbounds i32, ptr %6, i64 %4342
  store i32 %4368, ptr %4369, align 4, !tbaa !5
  %4370 = add nuw nsw i64 %4342, 1
  %4371 = icmp eq i64 %4370, %4242
  br i1 %4371, label %4379, label %4341, !llvm.loop !907

4372:                                             ; preds = %4337, %4364
  store float %4330, ptr %4216, align 4, !tbaa !162
  %4373 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4374:                                             ; preds = %4350, %4356
  %4375 = phi ptr [ %4363, %4356 ], [ %4343, %4350 ]
  %4376 = phi i32 [ %4362, %4356 ], [ 1, %4350 ]
  %4377 = load i32, ptr %4375, align 4, !tbaa !5
  %4378 = add nsw i32 %4377, %4376
  store i32 %4378, ptr %4375, align 4, !tbaa !5
  br label %4379

4379:                                             ; preds = %4366, %4374, %4339, %4318
  %4380 = icmp eq i32 %4331, %5
  br i1 %4380, label %5408, label %4245, !llvm.loop !908

4381:                                             ; preds = %4228, %4516
  %4382 = phi float [ 0.000000e+00, %4228 ], [ %4464, %4516 ]
  %4383 = phi i32 [ 0, %4228 ], [ %4465, %4516 ]
  %4384 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4229, label %4385, label %4454

4385:                                             ; preds = %4381, %4444
  %4386 = phi i32 [ %4453, %4444 ], [ 0, %4381 ]
  %4387 = phi i64 [ %4395, %4444 ], [ %4233, %4381 ]
  %4388 = phi i64 [ %4452, %4444 ], [ %4232, %4381 ]
  %4389 = phi i32 [ %4450, %4444 ], [ %4384, %4381 ]
  %4390 = sub i32 %4231, %4386
  %4391 = tail call i32 @llvm.smin.i32(i32 %4390, i32 0)
  %4392 = sub i32 %4390, %4391
  %4393 = zext i32 %4392 to i64
  %4394 = add nuw nsw i64 %4393, 1
  %4395 = add nsw i64 %4387, -1
  %4396 = icmp ult i32 %4392, 31
  br i1 %4396, label %4432, label %4397

4397:                                             ; preds = %4385
  %4398 = and i64 %4394, 8589934560
  %4399 = sub i64 %4388, %4398
  br label %4400

4400:                                             ; preds = %4400, %4397
  %4401 = phi i64 [ 0, %4397 ], [ %4424, %4400 ]
  %4402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4420, %4400 ]
  %4403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4421, %4400 ]
  %4404 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4422, %4400 ]
  %4405 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4397 ], [ %4423, %4400 ]
  %4406 = sub i64 %4388, %4401
  %4407 = getelementptr inbounds i32, ptr %11, i64 %4406
  %4408 = getelementptr inbounds i32, ptr %4407, i64 -7
  %4409 = load <8 x i32>, ptr %4408, align 4, !tbaa !5
  %4410 = shufflevector <8 x i32> %4409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4411 = getelementptr inbounds i32, ptr %4407, i64 -15
  %4412 = load <8 x i32>, ptr %4411, align 4, !tbaa !5
  %4413 = shufflevector <8 x i32> %4412, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4414 = getelementptr inbounds i32, ptr %4407, i64 -23
  %4415 = load <8 x i32>, ptr %4414, align 4, !tbaa !5
  %4416 = shufflevector <8 x i32> %4415, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4417 = getelementptr inbounds i32, ptr %4407, i64 -31
  %4418 = load <8 x i32>, ptr %4417, align 4, !tbaa !5
  %4419 = shufflevector <8 x i32> %4418, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4420 = mul <8 x i32> %4410, %4402
  %4421 = mul <8 x i32> %4413, %4403
  %4422 = mul <8 x i32> %4416, %4404
  %4423 = mul <8 x i32> %4419, %4405
  %4424 = add nuw i64 %4401, 32
  %4425 = icmp eq i64 %4424, %4398
  br i1 %4425, label %4426, label %4400, !llvm.loop !909

4426:                                             ; preds = %4400
  %4427 = mul <8 x i32> %4421, %4420
  %4428 = mul <8 x i32> %4422, %4427
  %4429 = mul <8 x i32> %4423, %4428
  %4430 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4429)
  %4431 = icmp eq i64 %4394, %4398
  br i1 %4431, label %4444, label %4432

4432:                                             ; preds = %4385, %4426
  %4433 = phi i64 [ %4388, %4385 ], [ %4399, %4426 ]
  %4434 = phi i32 [ 1, %4385 ], [ %4430, %4426 ]
  br label %4435

4435:                                             ; preds = %4432, %4435
  %4436 = phi i64 [ %4441, %4435 ], [ %4433, %4432 ]
  %4437 = phi i32 [ %4440, %4435 ], [ %4434, %4432 ]
  %4438 = getelementptr inbounds i32, ptr %11, i64 %4436
  %4439 = load i32, ptr %4438, align 4, !tbaa !5
  %4440 = mul nsw i32 %4439, %4437
  %4441 = add nsw i64 %4436, -1
  %4442 = trunc i64 %4436 to i32
  %4443 = icmp sgt i32 %4442, 0
  br i1 %4443, label %4435, label %4444, !llvm.loop !910

4444:                                             ; preds = %4435, %4426
  %4445 = phi i32 [ %4430, %4426 ], [ %4440, %4435 ]
  %4446 = and i64 %4395, 4294967295
  %4447 = getelementptr inbounds i32, ptr %6, i64 %4446
  %4448 = load i32, ptr %4447, align 4, !tbaa !5
  %4449 = mul nsw i32 %4448, %4445
  %4450 = add nsw i32 %4449, %4389
  %4451 = icmp sgt i64 %4387, 2
  %4452 = add nsw i64 %4388, -1
  %4453 = add i32 %4386, 1
  br i1 %4451, label %4385, label %4454, !llvm.loop !911

4454:                                             ; preds = %4444, %4381
  %4455 = phi i32 [ %4384, %4381 ], [ %4450, %4444 ]
  %4456 = icmp slt i32 %4455, %5
  br i1 %4456, label %4459, label %4457

4457:                                             ; preds = %4454
  %4458 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

4459:                                             ; preds = %4454
  %4460 = sext i32 %4455 to i64
  %4461 = getelementptr inbounds i64, ptr %4214, i64 %4460
  %4462 = load i64, ptr %4461, align 8, !tbaa !120
  %4463 = sitofp i64 %4462 to float
  %4464 = fadd fast float %4382, %4463
  store float %4464, ptr %4216, align 4, !tbaa !162
  %4465 = add nuw nsw i32 %4383, 1
  br i1 %4230, label %4466, label %4516

4466:                                             ; preds = %4459
  %4467 = load i32, ptr %4, align 4, !tbaa !5
  %4468 = load i32, ptr %12, align 4, !tbaa !5
  %4469 = add nsw i32 %4468, -1
  %4470 = icmp slt i32 %4467, %4469
  br i1 %4470, label %4493, label %4471

4471:                                             ; preds = %4466
  %4472 = icmp eq i32 %4467, %4469
  br i1 %4472, label %4473, label %4509

4473:                                             ; preds = %4471
  store i32 0, ptr %4, align 4, !tbaa !5
  %4474 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4474, ptr %6, align 4, !tbaa !5
  br i1 %4235, label %4516, label %4475

4475:                                             ; preds = %4473, %4503
  %4476 = phi i64 [ %4507, %4503 ], [ 1, %4473 ]
  %4477 = getelementptr inbounds i32, ptr %4, i64 %4476
  %4478 = load i32, ptr %4477, align 4, !tbaa !5
  %4479 = getelementptr inbounds i32, ptr %12, i64 %4476
  %4480 = load i32, ptr %4479, align 4, !tbaa !5
  %4481 = add nsw i32 %4480, -1
  %4482 = icmp slt i32 %4478, %4481
  br i1 %4482, label %4483, label %4501

4483:                                             ; preds = %4475
  br i1 %4470, label %4493, label %4484

4484:                                             ; preds = %4483
  %4485 = shl i64 %4476, 32
  %4486 = add i64 %4485, -4294967296
  %4487 = ashr exact i64 %4486, 32
  %4488 = getelementptr inbounds i32, ptr %7, i64 %4487
  %4489 = load i32, ptr %4488, align 4, !tbaa !5
  %4490 = getelementptr inbounds i32, ptr %6, i64 %4476
  %4491 = load i32, ptr %4490, align 4, !tbaa !5
  %4492 = add nsw i32 %4491, %4489
  store i32 %4492, ptr %4490, align 4, !tbaa !5
  br label %4511

4493:                                             ; preds = %4466, %4483
  %4494 = phi i32 [ %4478, %4483 ], [ %4467, %4466 ]
  %4495 = phi ptr [ %4477, %4483 ], [ %4, %4466 ]
  %4496 = phi i64 [ %4476, %4483 ], [ 0, %4466 ]
  %4497 = add nsw i32 %4494, 1
  store i32 %4497, ptr %4495, align 4, !tbaa !5
  %4498 = getelementptr inbounds i32, ptr %7, i64 %4496
  %4499 = load i32, ptr %4498, align 4, !tbaa !5
  %4500 = getelementptr inbounds i32, ptr %6, i64 %4496
  br label %4511

4501:                                             ; preds = %4475
  %4502 = icmp eq i32 %4478, %4481
  br i1 %4502, label %4503, label %4509

4503:                                             ; preds = %4501
  store i32 0, ptr %4477, align 4, !tbaa !5
  %4504 = getelementptr inbounds i32, ptr %8, i64 %4476
  %4505 = load i32, ptr %4504, align 4, !tbaa !5
  %4506 = getelementptr inbounds i32, ptr %6, i64 %4476
  store i32 %4505, ptr %4506, align 4, !tbaa !5
  %4507 = add nuw nsw i64 %4476, 1
  %4508 = icmp eq i64 %4507, %4233
  br i1 %4508, label %4516, label %4475, !llvm.loop !912

4509:                                             ; preds = %4471, %4501
  %4510 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4511:                                             ; preds = %4484, %4493
  %4512 = phi ptr [ %4500, %4493 ], [ %4477, %4484 ]
  %4513 = phi i32 [ %4499, %4493 ], [ 1, %4484 ]
  %4514 = load i32, ptr %4512, align 4, !tbaa !5
  %4515 = add nsw i32 %4514, %4513
  store i32 %4515, ptr %4512, align 4, !tbaa !5
  br label %4516

4516:                                             ; preds = %4503, %4511, %4473, %4459
  %4517 = icmp eq i32 %4465, %5
  br i1 %4517, label %5411, label %4381, !llvm.loop !913

4518:                                             ; preds = %4221
  %4519 = getelementptr inbounds i32, ptr %3, i64 %19
  %4520 = load i32, ptr %4519, align 4, !tbaa !5
  %4521 = icmp eq i32 %4520, 0
  %4522 = icmp sgt i32 %5, 0
  br i1 %4521, label %4532, label %4523

4523:                                             ; preds = %4518
  br i1 %4522, label %4524, label %5411

4524:                                             ; preds = %4523
  %4525 = icmp sgt i32 %13, 1
  %4526 = icmp sgt i32 %13, 0
  %4527 = add i32 %13, -2
  %4528 = zext i32 %4527 to i64
  %4529 = zext i32 %13 to i64
  %4530 = add nuw i32 %5, 1
  %4531 = icmp eq i32 %13, 1
  br label %4671

4532:                                             ; preds = %4518
  br i1 %4522, label %4533, label %5411

4533:                                             ; preds = %4532
  %4534 = icmp sgt i32 %13, 1
  %4535 = icmp sgt i32 %13, 0
  %4536 = add i32 %13, -2
  %4537 = zext i32 %4536 to i64
  %4538 = zext i32 %13 to i64
  %4539 = add nuw i32 %5, 1
  %4540 = icmp eq i32 %13, 1
  br label %4541

4541:                                             ; preds = %4533, %4669
  %4542 = phi float [ 0.000000e+00, %4533 ], [ %4620, %4669 ]
  %4543 = phi i32 [ 0, %4533 ], [ %4621, %4669 ]
  %4544 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4534, label %4545, label %4614

4545:                                             ; preds = %4541, %4604
  %4546 = phi i32 [ %4613, %4604 ], [ 0, %4541 ]
  %4547 = phi i64 [ %4555, %4604 ], [ %4538, %4541 ]
  %4548 = phi i64 [ %4612, %4604 ], [ %4537, %4541 ]
  %4549 = phi i32 [ %4610, %4604 ], [ %4544, %4541 ]
  %4550 = sub i32 %4536, %4546
  %4551 = tail call i32 @llvm.smin.i32(i32 %4550, i32 0)
  %4552 = sub i32 %4550, %4551
  %4553 = zext i32 %4552 to i64
  %4554 = add nuw nsw i64 %4553, 1
  %4555 = add nsw i64 %4547, -1
  %4556 = icmp ult i32 %4552, 31
  br i1 %4556, label %4592, label %4557

4557:                                             ; preds = %4545
  %4558 = and i64 %4554, 8589934560
  %4559 = sub i64 %4548, %4558
  br label %4560

4560:                                             ; preds = %4560, %4557
  %4561 = phi i64 [ 0, %4557 ], [ %4584, %4560 ]
  %4562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4557 ], [ %4580, %4560 ]
  %4563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4557 ], [ %4581, %4560 ]
  %4564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4557 ], [ %4582, %4560 ]
  %4565 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4557 ], [ %4583, %4560 ]
  %4566 = sub i64 %4548, %4561
  %4567 = getelementptr inbounds i32, ptr %9, i64 %4566
  %4568 = getelementptr inbounds i32, ptr %4567, i64 -7
  %4569 = load <8 x i32>, ptr %4568, align 4, !tbaa !5
  %4570 = shufflevector <8 x i32> %4569, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4571 = getelementptr inbounds i32, ptr %4567, i64 -15
  %4572 = load <8 x i32>, ptr %4571, align 4, !tbaa !5
  %4573 = shufflevector <8 x i32> %4572, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4574 = getelementptr inbounds i32, ptr %4567, i64 -23
  %4575 = load <8 x i32>, ptr %4574, align 4, !tbaa !5
  %4576 = shufflevector <8 x i32> %4575, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4577 = getelementptr inbounds i32, ptr %4567, i64 -31
  %4578 = load <8 x i32>, ptr %4577, align 4, !tbaa !5
  %4579 = shufflevector <8 x i32> %4578, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4580 = mul <8 x i32> %4570, %4562
  %4581 = mul <8 x i32> %4573, %4563
  %4582 = mul <8 x i32> %4576, %4564
  %4583 = mul <8 x i32> %4579, %4565
  %4584 = add nuw i64 %4561, 32
  %4585 = icmp eq i64 %4584, %4558
  br i1 %4585, label %4586, label %4560, !llvm.loop !914

4586:                                             ; preds = %4560
  %4587 = mul <8 x i32> %4581, %4580
  %4588 = mul <8 x i32> %4582, %4587
  %4589 = mul <8 x i32> %4583, %4588
  %4590 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4589)
  %4591 = icmp eq i64 %4554, %4558
  br i1 %4591, label %4604, label %4592

4592:                                             ; preds = %4545, %4586
  %4593 = phi i64 [ %4548, %4545 ], [ %4559, %4586 ]
  %4594 = phi i32 [ 1, %4545 ], [ %4590, %4586 ]
  br label %4595

4595:                                             ; preds = %4592, %4595
  %4596 = phi i64 [ %4601, %4595 ], [ %4593, %4592 ]
  %4597 = phi i32 [ %4600, %4595 ], [ %4594, %4592 ]
  %4598 = getelementptr inbounds i32, ptr %9, i64 %4596
  %4599 = load i32, ptr %4598, align 4, !tbaa !5
  %4600 = mul nsw i32 %4599, %4597
  %4601 = add nsw i64 %4596, -1
  %4602 = trunc i64 %4596 to i32
  %4603 = icmp sgt i32 %4602, 0
  br i1 %4603, label %4595, label %4604, !llvm.loop !915

4604:                                             ; preds = %4595, %4586
  %4605 = phi i32 [ %4590, %4586 ], [ %4600, %4595 ]
  %4606 = and i64 %4555, 4294967295
  %4607 = getelementptr inbounds i32, ptr %6, i64 %4606
  %4608 = load i32, ptr %4607, align 4, !tbaa !5
  %4609 = mul nsw i32 %4608, %4605
  %4610 = add nsw i32 %4609, %4549
  %4611 = icmp sgt i64 %4547, 2
  %4612 = add nsw i64 %4548, -1
  %4613 = add i32 %4546, 1
  br i1 %4611, label %4545, label %4614, !llvm.loop !916

4614:                                             ; preds = %4604, %4541
  %4615 = phi i32 [ %4544, %4541 ], [ %4610, %4604 ]
  %4616 = sext i32 %4615 to i64
  %4617 = getelementptr inbounds i64, ptr %4214, i64 %4616
  %4618 = load i64, ptr %4617, align 8, !tbaa !120
  %4619 = sitofp i64 %4618 to float
  %4620 = fadd fast float %4542, %4619
  %4621 = add nuw nsw i32 %4543, 1
  br i1 %4535, label %4622, label %4669

4622:                                             ; preds = %4614
  %4623 = load i32, ptr %4, align 4, !tbaa !5
  %4624 = load i32, ptr %12, align 4, !tbaa !5
  %4625 = add nsw i32 %4624, -1
  %4626 = icmp slt i32 %4623, %4625
  br i1 %4626, label %4646, label %4627

4627:                                             ; preds = %4622
  %4628 = icmp eq i32 %4623, %4625
  br i1 %4628, label %4629, label %4662

4629:                                             ; preds = %4627
  store i32 0, ptr %4, align 4, !tbaa !5
  %4630 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4630, ptr %6, align 4, !tbaa !5
  br i1 %4540, label %4669, label %4631

4631:                                             ; preds = %4629, %4656
  %4632 = phi i64 [ %4660, %4656 ], [ 1, %4629 ]
  %4633 = getelementptr inbounds i32, ptr %4, i64 %4632
  %4634 = load i32, ptr %4633, align 4, !tbaa !5
  %4635 = getelementptr inbounds i32, ptr %12, i64 %4632
  %4636 = load i32, ptr %4635, align 4, !tbaa !5
  %4637 = add nsw i32 %4636, -1
  %4638 = icmp slt i32 %4634, %4637
  br i1 %4638, label %4639, label %4654

4639:                                             ; preds = %4631
  br i1 %4626, label %4646, label %4640

4640:                                             ; preds = %4639
  %4641 = getelementptr inbounds i32, ptr %7, i64 %4632
  %4642 = load i32, ptr %4641, align 4, !tbaa !5
  %4643 = getelementptr inbounds i32, ptr %6, i64 %4632
  %4644 = load i32, ptr %4643, align 4, !tbaa !5
  %4645 = add nsw i32 %4644, %4642
  store i32 %4645, ptr %4643, align 4, !tbaa !5
  br label %4664

4646:                                             ; preds = %4622, %4639
  %4647 = phi i32 [ %4634, %4639 ], [ %4623, %4622 ]
  %4648 = phi ptr [ %4633, %4639 ], [ %4, %4622 ]
  %4649 = phi i64 [ %4632, %4639 ], [ 0, %4622 ]
  %4650 = add nsw i32 %4647, 1
  store i32 %4650, ptr %4648, align 4, !tbaa !5
  %4651 = getelementptr inbounds i32, ptr %7, i64 %4649
  %4652 = load i32, ptr %4651, align 4, !tbaa !5
  %4653 = getelementptr inbounds i32, ptr %6, i64 %4649
  br label %4664

4654:                                             ; preds = %4631
  %4655 = icmp eq i32 %4634, %4637
  br i1 %4655, label %4656, label %4662

4656:                                             ; preds = %4654
  store i32 0, ptr %4633, align 4, !tbaa !5
  %4657 = getelementptr inbounds i32, ptr %8, i64 %4632
  %4658 = load i32, ptr %4657, align 4, !tbaa !5
  %4659 = getelementptr inbounds i32, ptr %6, i64 %4632
  store i32 %4658, ptr %4659, align 4, !tbaa !5
  %4660 = add nuw nsw i64 %4632, 1
  %4661 = icmp eq i64 %4660, %4538
  br i1 %4661, label %4669, label %4631, !llvm.loop !917

4662:                                             ; preds = %4627, %4654
  store float %4620, ptr %4216, align 4, !tbaa !162
  %4663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4664:                                             ; preds = %4640, %4646
  %4665 = phi ptr [ %4653, %4646 ], [ %4633, %4640 ]
  %4666 = phi i32 [ %4652, %4646 ], [ 1, %4640 ]
  %4667 = load i32, ptr %4665, align 4, !tbaa !5
  %4668 = add nsw i32 %4667, %4666
  store i32 %4668, ptr %4665, align 4, !tbaa !5
  br label %4669

4669:                                             ; preds = %4656, %4664, %4629, %4614
  %4670 = icmp eq i32 %4621, %5
  br i1 %4670, label %5409, label %4541, !llvm.loop !918

4671:                                             ; preds = %4524, %4806
  %4672 = phi float [ 0.000000e+00, %4524 ], [ %4754, %4806 ]
  %4673 = phi i32 [ 0, %4524 ], [ %4755, %4806 ]
  %4674 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4525, label %4675, label %4744

4675:                                             ; preds = %4671, %4734
  %4676 = phi i32 [ %4743, %4734 ], [ 0, %4671 ]
  %4677 = phi i64 [ %4685, %4734 ], [ %4529, %4671 ]
  %4678 = phi i64 [ %4742, %4734 ], [ %4528, %4671 ]
  %4679 = phi i32 [ %4740, %4734 ], [ %4674, %4671 ]
  %4680 = sub i32 %4527, %4676
  %4681 = tail call i32 @llvm.smin.i32(i32 %4680, i32 0)
  %4682 = sub i32 %4680, %4681
  %4683 = zext i32 %4682 to i64
  %4684 = add nuw nsw i64 %4683, 1
  %4685 = add nsw i64 %4677, -1
  %4686 = icmp ult i32 %4682, 31
  br i1 %4686, label %4722, label %4687

4687:                                             ; preds = %4675
  %4688 = and i64 %4684, 8589934560
  %4689 = sub i64 %4678, %4688
  br label %4690

4690:                                             ; preds = %4690, %4687
  %4691 = phi i64 [ 0, %4687 ], [ %4714, %4690 ]
  %4692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4687 ], [ %4710, %4690 ]
  %4693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4687 ], [ %4711, %4690 ]
  %4694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4687 ], [ %4712, %4690 ]
  %4695 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4687 ], [ %4713, %4690 ]
  %4696 = sub i64 %4678, %4691
  %4697 = getelementptr inbounds i32, ptr %11, i64 %4696
  %4698 = getelementptr inbounds i32, ptr %4697, i64 -7
  %4699 = load <8 x i32>, ptr %4698, align 4, !tbaa !5
  %4700 = shufflevector <8 x i32> %4699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4701 = getelementptr inbounds i32, ptr %4697, i64 -15
  %4702 = load <8 x i32>, ptr %4701, align 4, !tbaa !5
  %4703 = shufflevector <8 x i32> %4702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4704 = getelementptr inbounds i32, ptr %4697, i64 -23
  %4705 = load <8 x i32>, ptr %4704, align 4, !tbaa !5
  %4706 = shufflevector <8 x i32> %4705, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4707 = getelementptr inbounds i32, ptr %4697, i64 -31
  %4708 = load <8 x i32>, ptr %4707, align 4, !tbaa !5
  %4709 = shufflevector <8 x i32> %4708, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4710 = mul <8 x i32> %4700, %4692
  %4711 = mul <8 x i32> %4703, %4693
  %4712 = mul <8 x i32> %4706, %4694
  %4713 = mul <8 x i32> %4709, %4695
  %4714 = add nuw i64 %4691, 32
  %4715 = icmp eq i64 %4714, %4688
  br i1 %4715, label %4716, label %4690, !llvm.loop !919

4716:                                             ; preds = %4690
  %4717 = mul <8 x i32> %4711, %4710
  %4718 = mul <8 x i32> %4712, %4717
  %4719 = mul <8 x i32> %4713, %4718
  %4720 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4719)
  %4721 = icmp eq i64 %4684, %4688
  br i1 %4721, label %4734, label %4722

4722:                                             ; preds = %4675, %4716
  %4723 = phi i64 [ %4678, %4675 ], [ %4689, %4716 ]
  %4724 = phi i32 [ 1, %4675 ], [ %4720, %4716 ]
  br label %4725

4725:                                             ; preds = %4722, %4725
  %4726 = phi i64 [ %4731, %4725 ], [ %4723, %4722 ]
  %4727 = phi i32 [ %4730, %4725 ], [ %4724, %4722 ]
  %4728 = getelementptr inbounds i32, ptr %11, i64 %4726
  %4729 = load i32, ptr %4728, align 4, !tbaa !5
  %4730 = mul nsw i32 %4729, %4727
  %4731 = add nsw i64 %4726, -1
  %4732 = trunc i64 %4726 to i32
  %4733 = icmp sgt i32 %4732, 0
  br i1 %4733, label %4725, label %4734, !llvm.loop !920

4734:                                             ; preds = %4725, %4716
  %4735 = phi i32 [ %4720, %4716 ], [ %4730, %4725 ]
  %4736 = and i64 %4685, 4294967295
  %4737 = getelementptr inbounds i32, ptr %6, i64 %4736
  %4738 = load i32, ptr %4737, align 4, !tbaa !5
  %4739 = mul nsw i32 %4738, %4735
  %4740 = add nsw i32 %4739, %4679
  %4741 = icmp sgt i64 %4677, 2
  %4742 = add nsw i64 %4678, -1
  %4743 = add i32 %4676, 1
  br i1 %4741, label %4675, label %4744, !llvm.loop !921

4744:                                             ; preds = %4734, %4671
  %4745 = phi i32 [ %4674, %4671 ], [ %4740, %4734 ]
  %4746 = icmp slt i32 %4745, %5
  br i1 %4746, label %4749, label %4747

4747:                                             ; preds = %4744
  %4748 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

4749:                                             ; preds = %4744
  %4750 = sext i32 %4745 to i64
  %4751 = getelementptr inbounds i64, ptr %4214, i64 %4750
  %4752 = load i64, ptr %4751, align 8, !tbaa !120
  %4753 = sitofp i64 %4752 to float
  %4754 = fadd fast float %4672, %4753
  store float %4754, ptr %4216, align 4, !tbaa !162
  %4755 = add nuw nsw i32 %4673, 1
  br i1 %4526, label %4756, label %4806

4756:                                             ; preds = %4749
  %4757 = load i32, ptr %4, align 4, !tbaa !5
  %4758 = load i32, ptr %12, align 4, !tbaa !5
  %4759 = add nsw i32 %4758, -1
  %4760 = icmp slt i32 %4757, %4759
  br i1 %4760, label %4783, label %4761

4761:                                             ; preds = %4756
  %4762 = icmp eq i32 %4757, %4759
  br i1 %4762, label %4763, label %4799

4763:                                             ; preds = %4761
  store i32 0, ptr %4, align 4, !tbaa !5
  %4764 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4764, ptr %6, align 4, !tbaa !5
  br i1 %4531, label %4806, label %4765

4765:                                             ; preds = %4763, %4793
  %4766 = phi i64 [ %4797, %4793 ], [ 1, %4763 ]
  %4767 = getelementptr inbounds i32, ptr %4, i64 %4766
  %4768 = load i32, ptr %4767, align 4, !tbaa !5
  %4769 = getelementptr inbounds i32, ptr %12, i64 %4766
  %4770 = load i32, ptr %4769, align 4, !tbaa !5
  %4771 = add nsw i32 %4770, -1
  %4772 = icmp slt i32 %4768, %4771
  br i1 %4772, label %4773, label %4791

4773:                                             ; preds = %4765
  br i1 %4760, label %4783, label %4774

4774:                                             ; preds = %4773
  %4775 = shl i64 %4766, 32
  %4776 = add i64 %4775, -4294967296
  %4777 = ashr exact i64 %4776, 32
  %4778 = getelementptr inbounds i32, ptr %7, i64 %4777
  %4779 = load i32, ptr %4778, align 4, !tbaa !5
  %4780 = getelementptr inbounds i32, ptr %6, i64 %4766
  %4781 = load i32, ptr %4780, align 4, !tbaa !5
  %4782 = add nsw i32 %4781, %4779
  store i32 %4782, ptr %4780, align 4, !tbaa !5
  br label %4801

4783:                                             ; preds = %4756, %4773
  %4784 = phi i32 [ %4768, %4773 ], [ %4757, %4756 ]
  %4785 = phi ptr [ %4767, %4773 ], [ %4, %4756 ]
  %4786 = phi i64 [ %4766, %4773 ], [ 0, %4756 ]
  %4787 = add nsw i32 %4784, 1
  store i32 %4787, ptr %4785, align 4, !tbaa !5
  %4788 = getelementptr inbounds i32, ptr %7, i64 %4786
  %4789 = load i32, ptr %4788, align 4, !tbaa !5
  %4790 = getelementptr inbounds i32, ptr %6, i64 %4786
  br label %4801

4791:                                             ; preds = %4765
  %4792 = icmp eq i32 %4768, %4771
  br i1 %4792, label %4793, label %4799

4793:                                             ; preds = %4791
  store i32 0, ptr %4767, align 4, !tbaa !5
  %4794 = getelementptr inbounds i32, ptr %8, i64 %4766
  %4795 = load i32, ptr %4794, align 4, !tbaa !5
  %4796 = getelementptr inbounds i32, ptr %6, i64 %4766
  store i32 %4795, ptr %4796, align 4, !tbaa !5
  %4797 = add nuw nsw i64 %4766, 1
  %4798 = icmp eq i64 %4797, %4529
  br i1 %4798, label %4806, label %4765, !llvm.loop !922

4799:                                             ; preds = %4761, %4791
  %4800 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4801:                                             ; preds = %4774, %4783
  %4802 = phi ptr [ %4790, %4783 ], [ %4767, %4774 ]
  %4803 = phi i32 [ %4789, %4783 ], [ 1, %4774 ]
  %4804 = load i32, ptr %4802, align 4, !tbaa !5
  %4805 = add nsw i32 %4804, %4803
  store i32 %4805, ptr %4802, align 4, !tbaa !5
  br label %4806

4806:                                             ; preds = %4793, %4801, %4763, %4749
  %4807 = icmp eq i32 %4755, %5
  br i1 %4807, label %5411, label %4671, !llvm.loop !923

4808:                                             ; preds = %4221
  %4809 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1274, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

4810:                                             ; preds = %18
  %4811 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4812 = load ptr, ptr %4811, align 8, !tbaa !9
  %4813 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4814 = load ptr, ptr %4813, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4814, align 8, !tbaa !18
  %4815 = icmp eq i32 %13, 0
  br i1 %4815, label %4816, label %4819

4816:                                             ; preds = %4810
  %4817 = load i64, ptr %4812, align 8, !tbaa !120
  %4818 = sitofp i64 %4817 to double
  store double %4818, ptr %4814, align 8, !tbaa !18
  br label %5411

4819:                                             ; preds = %4810
  switch i32 %1, label %5403 [
    i32 1, label %4820
    i32 0, label %5113
  ]

4820:                                             ; preds = %4819
  %4821 = getelementptr inbounds i32, ptr %3, i64 %19
  %4822 = load i32, ptr %4821, align 4, !tbaa !5
  %4823 = icmp eq i32 %4822, 0
  %4824 = icmp sgt i32 %5, 0
  br i1 %4823, label %4834, label %4825

4825:                                             ; preds = %4820
  br i1 %4824, label %4826, label %5411

4826:                                             ; preds = %4825
  %4827 = icmp sgt i32 %13, 1
  %4828 = icmp sgt i32 %13, 0
  %4829 = add i32 %13, -2
  %4830 = zext i32 %4829 to i64
  %4831 = zext i32 %13 to i64
  %4832 = add nuw i32 %5, 1
  %4833 = icmp eq i32 %13, 1
  br label %4976

4834:                                             ; preds = %4820
  br i1 %4824, label %4835, label %5411

4835:                                             ; preds = %4834
  %4836 = icmp sgt i32 %13, 1
  %4837 = icmp sgt i32 %13, 0
  %4838 = add i32 %13, -2
  %4839 = zext i32 %4838 to i64
  %4840 = zext i32 %13 to i64
  %4841 = add nuw i32 %5, 1
  %4842 = icmp eq i32 %13, 1
  br label %4843

4843:                                             ; preds = %4835, %4974
  %4844 = phi double [ 0.000000e+00, %4835 ], [ %4925, %4974 ]
  %4845 = phi i32 [ 0, %4835 ], [ %4926, %4974 ]
  %4846 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4836, label %4847, label %4916

4847:                                             ; preds = %4843, %4906
  %4848 = phi i32 [ %4915, %4906 ], [ 0, %4843 ]
  %4849 = phi i64 [ %4857, %4906 ], [ %4840, %4843 ]
  %4850 = phi i64 [ %4914, %4906 ], [ %4839, %4843 ]
  %4851 = phi i32 [ %4912, %4906 ], [ %4846, %4843 ]
  %4852 = sub i32 %4838, %4848
  %4853 = tail call i32 @llvm.smin.i32(i32 %4852, i32 0)
  %4854 = sub i32 %4852, %4853
  %4855 = zext i32 %4854 to i64
  %4856 = add nuw nsw i64 %4855, 1
  %4857 = add nsw i64 %4849, -1
  %4858 = icmp ult i32 %4854, 31
  br i1 %4858, label %4894, label %4859

4859:                                             ; preds = %4847
  %4860 = and i64 %4856, 8589934560
  %4861 = sub i64 %4850, %4860
  br label %4862

4862:                                             ; preds = %4862, %4859
  %4863 = phi i64 [ 0, %4859 ], [ %4886, %4862 ]
  %4864 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4859 ], [ %4882, %4862 ]
  %4865 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4859 ], [ %4883, %4862 ]
  %4866 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4859 ], [ %4884, %4862 ]
  %4867 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4859 ], [ %4885, %4862 ]
  %4868 = sub i64 %4850, %4863
  %4869 = getelementptr inbounds i32, ptr %9, i64 %4868
  %4870 = getelementptr inbounds i32, ptr %4869, i64 -7
  %4871 = load <8 x i32>, ptr %4870, align 4, !tbaa !5
  %4872 = shufflevector <8 x i32> %4871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4873 = getelementptr inbounds i32, ptr %4869, i64 -15
  %4874 = load <8 x i32>, ptr %4873, align 4, !tbaa !5
  %4875 = shufflevector <8 x i32> %4874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4876 = getelementptr inbounds i32, ptr %4869, i64 -23
  %4877 = load <8 x i32>, ptr %4876, align 4, !tbaa !5
  %4878 = shufflevector <8 x i32> %4877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4879 = getelementptr inbounds i32, ptr %4869, i64 -31
  %4880 = load <8 x i32>, ptr %4879, align 4, !tbaa !5
  %4881 = shufflevector <8 x i32> %4880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4882 = mul <8 x i32> %4872, %4864
  %4883 = mul <8 x i32> %4875, %4865
  %4884 = mul <8 x i32> %4878, %4866
  %4885 = mul <8 x i32> %4881, %4867
  %4886 = add nuw i64 %4863, 32
  %4887 = icmp eq i64 %4886, %4860
  br i1 %4887, label %4888, label %4862, !llvm.loop !924

4888:                                             ; preds = %4862
  %4889 = mul <8 x i32> %4883, %4882
  %4890 = mul <8 x i32> %4884, %4889
  %4891 = mul <8 x i32> %4885, %4890
  %4892 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4891)
  %4893 = icmp eq i64 %4856, %4860
  br i1 %4893, label %4906, label %4894

4894:                                             ; preds = %4847, %4888
  %4895 = phi i64 [ %4850, %4847 ], [ %4861, %4888 ]
  %4896 = phi i32 [ 1, %4847 ], [ %4892, %4888 ]
  br label %4897

4897:                                             ; preds = %4894, %4897
  %4898 = phi i64 [ %4903, %4897 ], [ %4895, %4894 ]
  %4899 = phi i32 [ %4902, %4897 ], [ %4896, %4894 ]
  %4900 = getelementptr inbounds i32, ptr %9, i64 %4898
  %4901 = load i32, ptr %4900, align 4, !tbaa !5
  %4902 = mul nsw i32 %4901, %4899
  %4903 = add nsw i64 %4898, -1
  %4904 = trunc i64 %4898 to i32
  %4905 = icmp sgt i32 %4904, 0
  br i1 %4905, label %4897, label %4906, !llvm.loop !925

4906:                                             ; preds = %4897, %4888
  %4907 = phi i32 [ %4892, %4888 ], [ %4902, %4897 ]
  %4908 = and i64 %4857, 4294967295
  %4909 = getelementptr inbounds i32, ptr %6, i64 %4908
  %4910 = load i32, ptr %4909, align 4, !tbaa !5
  %4911 = mul nsw i32 %4910, %4907
  %4912 = add nsw i32 %4911, %4851
  %4913 = icmp sgt i64 %4849, 2
  %4914 = add nsw i64 %4850, -1
  %4915 = add i32 %4848, 1
  br i1 %4913, label %4847, label %4916, !llvm.loop !926

4916:                                             ; preds = %4906, %4843
  %4917 = phi i32 [ %4846, %4843 ], [ %4912, %4906 ]
  %4918 = sext i32 %4917 to i64
  %4919 = getelementptr inbounds double, ptr %2, i64 %4918
  %4920 = load double, ptr %4919, align 8, !tbaa !18
  %4921 = getelementptr inbounds i64, ptr %4812, i64 %4918
  %4922 = load i64, ptr %4921, align 8, !tbaa !120
  %4923 = sitofp i64 %4922 to double
  %4924 = fmul fast double %4920, %4923
  %4925 = fadd fast double %4924, %4844
  store double %4925, ptr %4814, align 8, !tbaa !18
  %4926 = add nuw nsw i32 %4845, 1
  br i1 %4837, label %4927, label %4974

4927:                                             ; preds = %4916
  %4928 = load i32, ptr %4, align 4, !tbaa !5
  %4929 = load i32, ptr %12, align 4, !tbaa !5
  %4930 = add nsw i32 %4929, -1
  %4931 = icmp slt i32 %4928, %4930
  br i1 %4931, label %4951, label %4932

4932:                                             ; preds = %4927
  %4933 = icmp eq i32 %4928, %4930
  br i1 %4933, label %4934, label %4967

4934:                                             ; preds = %4932
  store i32 0, ptr %4, align 4, !tbaa !5
  %4935 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4935, ptr %6, align 4, !tbaa !5
  br i1 %4842, label %4974, label %4936

4936:                                             ; preds = %4934, %4961
  %4937 = phi i64 [ %4965, %4961 ], [ 1, %4934 ]
  %4938 = getelementptr inbounds i32, ptr %4, i64 %4937
  %4939 = load i32, ptr %4938, align 4, !tbaa !5
  %4940 = getelementptr inbounds i32, ptr %12, i64 %4937
  %4941 = load i32, ptr %4940, align 4, !tbaa !5
  %4942 = add nsw i32 %4941, -1
  %4943 = icmp slt i32 %4939, %4942
  br i1 %4943, label %4944, label %4959

4944:                                             ; preds = %4936
  br i1 %4931, label %4951, label %4945

4945:                                             ; preds = %4944
  %4946 = getelementptr inbounds i32, ptr %7, i64 %4937
  %4947 = load i32, ptr %4946, align 4, !tbaa !5
  %4948 = getelementptr inbounds i32, ptr %6, i64 %4937
  %4949 = load i32, ptr %4948, align 4, !tbaa !5
  %4950 = add nsw i32 %4949, %4947
  store i32 %4950, ptr %4948, align 4, !tbaa !5
  br label %4969

4951:                                             ; preds = %4927, %4944
  %4952 = phi i32 [ %4939, %4944 ], [ %4928, %4927 ]
  %4953 = phi ptr [ %4938, %4944 ], [ %4, %4927 ]
  %4954 = phi i64 [ %4937, %4944 ], [ 0, %4927 ]
  %4955 = add nsw i32 %4952, 1
  store i32 %4955, ptr %4953, align 4, !tbaa !5
  %4956 = getelementptr inbounds i32, ptr %7, i64 %4954
  %4957 = load i32, ptr %4956, align 4, !tbaa !5
  %4958 = getelementptr inbounds i32, ptr %6, i64 %4954
  br label %4969

4959:                                             ; preds = %4936
  %4960 = icmp eq i32 %4939, %4942
  br i1 %4960, label %4961, label %4967

4961:                                             ; preds = %4959
  store i32 0, ptr %4938, align 4, !tbaa !5
  %4962 = getelementptr inbounds i32, ptr %8, i64 %4937
  %4963 = load i32, ptr %4962, align 4, !tbaa !5
  %4964 = getelementptr inbounds i32, ptr %6, i64 %4937
  store i32 %4963, ptr %4964, align 4, !tbaa !5
  %4965 = add nuw nsw i64 %4937, 1
  %4966 = icmp eq i64 %4965, %4840
  br i1 %4966, label %4974, label %4936, !llvm.loop !927

4967:                                             ; preds = %4932, %4959
  %4968 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

4969:                                             ; preds = %4945, %4951
  %4970 = phi ptr [ %4958, %4951 ], [ %4938, %4945 ]
  %4971 = phi i32 [ %4957, %4951 ], [ 1, %4945 ]
  %4972 = load i32, ptr %4970, align 4, !tbaa !5
  %4973 = add nsw i32 %4972, %4971
  store i32 %4973, ptr %4970, align 4, !tbaa !5
  br label %4974

4974:                                             ; preds = %4961, %4969, %4934, %4916
  %4975 = icmp eq i32 %4926, %5
  br i1 %4975, label %5411, label %4843, !llvm.loop !928

4976:                                             ; preds = %4826, %5111
  %4977 = phi double [ 0.000000e+00, %4826 ], [ %5059, %5111 ]
  %4978 = phi i32 [ 0, %4826 ], [ %5060, %5111 ]
  %4979 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4827, label %4980, label %5049

4980:                                             ; preds = %4976, %5039
  %4981 = phi i32 [ %5048, %5039 ], [ 0, %4976 ]
  %4982 = phi i64 [ %4990, %5039 ], [ %4831, %4976 ]
  %4983 = phi i64 [ %5047, %5039 ], [ %4830, %4976 ]
  %4984 = phi i32 [ %5045, %5039 ], [ %4979, %4976 ]
  %4985 = sub i32 %4829, %4981
  %4986 = tail call i32 @llvm.smin.i32(i32 %4985, i32 0)
  %4987 = sub i32 %4985, %4986
  %4988 = zext i32 %4987 to i64
  %4989 = add nuw nsw i64 %4988, 1
  %4990 = add nsw i64 %4982, -1
  %4991 = icmp ult i32 %4987, 31
  br i1 %4991, label %5027, label %4992

4992:                                             ; preds = %4980
  %4993 = and i64 %4989, 8589934560
  %4994 = sub i64 %4983, %4993
  br label %4995

4995:                                             ; preds = %4995, %4992
  %4996 = phi i64 [ 0, %4992 ], [ %5019, %4995 ]
  %4997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4992 ], [ %5015, %4995 ]
  %4998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4992 ], [ %5016, %4995 ]
  %4999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4992 ], [ %5017, %4995 ]
  %5000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4992 ], [ %5018, %4995 ]
  %5001 = sub i64 %4983, %4996
  %5002 = getelementptr inbounds i32, ptr %11, i64 %5001
  %5003 = getelementptr inbounds i32, ptr %5002, i64 -7
  %5004 = load <8 x i32>, ptr %5003, align 4, !tbaa !5
  %5005 = shufflevector <8 x i32> %5004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5006 = getelementptr inbounds i32, ptr %5002, i64 -15
  %5007 = load <8 x i32>, ptr %5006, align 4, !tbaa !5
  %5008 = shufflevector <8 x i32> %5007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5009 = getelementptr inbounds i32, ptr %5002, i64 -23
  %5010 = load <8 x i32>, ptr %5009, align 4, !tbaa !5
  %5011 = shufflevector <8 x i32> %5010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5012 = getelementptr inbounds i32, ptr %5002, i64 -31
  %5013 = load <8 x i32>, ptr %5012, align 4, !tbaa !5
  %5014 = shufflevector <8 x i32> %5013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5015 = mul <8 x i32> %5005, %4997
  %5016 = mul <8 x i32> %5008, %4998
  %5017 = mul <8 x i32> %5011, %4999
  %5018 = mul <8 x i32> %5014, %5000
  %5019 = add nuw i64 %4996, 32
  %5020 = icmp eq i64 %5019, %4993
  br i1 %5020, label %5021, label %4995, !llvm.loop !929

5021:                                             ; preds = %4995
  %5022 = mul <8 x i32> %5016, %5015
  %5023 = mul <8 x i32> %5017, %5022
  %5024 = mul <8 x i32> %5018, %5023
  %5025 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5024)
  %5026 = icmp eq i64 %4989, %4993
  br i1 %5026, label %5039, label %5027

5027:                                             ; preds = %4980, %5021
  %5028 = phi i64 [ %4983, %4980 ], [ %4994, %5021 ]
  %5029 = phi i32 [ 1, %4980 ], [ %5025, %5021 ]
  br label %5030

5030:                                             ; preds = %5027, %5030
  %5031 = phi i64 [ %5036, %5030 ], [ %5028, %5027 ]
  %5032 = phi i32 [ %5035, %5030 ], [ %5029, %5027 ]
  %5033 = getelementptr inbounds i32, ptr %11, i64 %5031
  %5034 = load i32, ptr %5033, align 4, !tbaa !5
  %5035 = mul nsw i32 %5034, %5032
  %5036 = add nsw i64 %5031, -1
  %5037 = trunc i64 %5031 to i32
  %5038 = icmp sgt i32 %5037, 0
  br i1 %5038, label %5030, label %5039, !llvm.loop !930

5039:                                             ; preds = %5030, %5021
  %5040 = phi i32 [ %5025, %5021 ], [ %5035, %5030 ]
  %5041 = and i64 %4990, 4294967295
  %5042 = getelementptr inbounds i32, ptr %6, i64 %5041
  %5043 = load i32, ptr %5042, align 4, !tbaa !5
  %5044 = mul nsw i32 %5043, %5040
  %5045 = add nsw i32 %5044, %4984
  %5046 = icmp sgt i64 %4982, 2
  %5047 = add nsw i64 %4983, -1
  %5048 = add i32 %4981, 1
  br i1 %5046, label %4980, label %5049, !llvm.loop !931

5049:                                             ; preds = %5039, %4976
  %5050 = phi i32 [ %4979, %4976 ], [ %5045, %5039 ]
  %5051 = icmp slt i32 %5050, %5
  br i1 %5051, label %5054, label %5052

5052:                                             ; preds = %5049
  %5053 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

5054:                                             ; preds = %5049
  %5055 = sext i32 %5050 to i64
  %5056 = getelementptr inbounds i64, ptr %4812, i64 %5055
  %5057 = load i64, ptr %5056, align 8, !tbaa !120
  %5058 = sitofp i64 %5057 to double
  %5059 = fadd fast double %4977, %5058
  store double %5059, ptr %4814, align 8, !tbaa !18
  %5060 = add nuw nsw i32 %4978, 1
  br i1 %4828, label %5061, label %5111

5061:                                             ; preds = %5054
  %5062 = load i32, ptr %4, align 4, !tbaa !5
  %5063 = load i32, ptr %12, align 4, !tbaa !5
  %5064 = add nsw i32 %5063, -1
  %5065 = icmp slt i32 %5062, %5064
  br i1 %5065, label %5088, label %5066

5066:                                             ; preds = %5061
  %5067 = icmp eq i32 %5062, %5064
  br i1 %5067, label %5068, label %5104

5068:                                             ; preds = %5066
  store i32 0, ptr %4, align 4, !tbaa !5
  %5069 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5069, ptr %6, align 4, !tbaa !5
  br i1 %4833, label %5111, label %5070

5070:                                             ; preds = %5068, %5098
  %5071 = phi i64 [ %5102, %5098 ], [ 1, %5068 ]
  %5072 = getelementptr inbounds i32, ptr %4, i64 %5071
  %5073 = load i32, ptr %5072, align 4, !tbaa !5
  %5074 = getelementptr inbounds i32, ptr %12, i64 %5071
  %5075 = load i32, ptr %5074, align 4, !tbaa !5
  %5076 = add nsw i32 %5075, -1
  %5077 = icmp slt i32 %5073, %5076
  br i1 %5077, label %5078, label %5096

5078:                                             ; preds = %5070
  br i1 %5065, label %5088, label %5079

5079:                                             ; preds = %5078
  %5080 = shl i64 %5071, 32
  %5081 = add i64 %5080, -4294967296
  %5082 = ashr exact i64 %5081, 32
  %5083 = getelementptr inbounds i32, ptr %7, i64 %5082
  %5084 = load i32, ptr %5083, align 4, !tbaa !5
  %5085 = getelementptr inbounds i32, ptr %6, i64 %5071
  %5086 = load i32, ptr %5085, align 4, !tbaa !5
  %5087 = add nsw i32 %5086, %5084
  store i32 %5087, ptr %5085, align 4, !tbaa !5
  br label %5106

5088:                                             ; preds = %5061, %5078
  %5089 = phi i32 [ %5073, %5078 ], [ %5062, %5061 ]
  %5090 = phi ptr [ %5072, %5078 ], [ %4, %5061 ]
  %5091 = phi i64 [ %5071, %5078 ], [ 0, %5061 ]
  %5092 = add nsw i32 %5089, 1
  store i32 %5092, ptr %5090, align 4, !tbaa !5
  %5093 = getelementptr inbounds i32, ptr %7, i64 %5091
  %5094 = load i32, ptr %5093, align 4, !tbaa !5
  %5095 = getelementptr inbounds i32, ptr %6, i64 %5091
  br label %5106

5096:                                             ; preds = %5070
  %5097 = icmp eq i32 %5073, %5076
  br i1 %5097, label %5098, label %5104

5098:                                             ; preds = %5096
  store i32 0, ptr %5072, align 4, !tbaa !5
  %5099 = getelementptr inbounds i32, ptr %8, i64 %5071
  %5100 = load i32, ptr %5099, align 4, !tbaa !5
  %5101 = getelementptr inbounds i32, ptr %6, i64 %5071
  store i32 %5100, ptr %5101, align 4, !tbaa !5
  %5102 = add nuw nsw i64 %5071, 1
  %5103 = icmp eq i64 %5102, %4831
  br i1 %5103, label %5111, label %5070, !llvm.loop !932

5104:                                             ; preds = %5066, %5096
  %5105 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

5106:                                             ; preds = %5079, %5088
  %5107 = phi ptr [ %5095, %5088 ], [ %5072, %5079 ]
  %5108 = phi i32 [ %5094, %5088 ], [ 1, %5079 ]
  %5109 = load i32, ptr %5107, align 4, !tbaa !5
  %5110 = add nsw i32 %5109, %5108
  store i32 %5110, ptr %5107, align 4, !tbaa !5
  br label %5111

5111:                                             ; preds = %5098, %5106, %5068, %5054
  %5112 = icmp eq i32 %5060, %5
  br i1 %5112, label %5411, label %4976, !llvm.loop !933

5113:                                             ; preds = %4819
  %5114 = getelementptr inbounds i32, ptr %3, i64 %19
  %5115 = load i32, ptr %5114, align 4, !tbaa !5
  %5116 = icmp eq i32 %5115, 0
  %5117 = icmp sgt i32 %5, 0
  br i1 %5116, label %5127, label %5118

5118:                                             ; preds = %5113
  br i1 %5117, label %5119, label %5411

5119:                                             ; preds = %5118
  %5120 = icmp sgt i32 %13, 1
  %5121 = icmp sgt i32 %13, 0
  %5122 = add i32 %13, -2
  %5123 = zext i32 %5122 to i64
  %5124 = zext i32 %13 to i64
  %5125 = add nuw i32 %5, 1
  %5126 = icmp eq i32 %13, 1
  br label %5266

5127:                                             ; preds = %5113
  br i1 %5117, label %5128, label %5411

5128:                                             ; preds = %5127
  %5129 = icmp sgt i32 %13, 1
  %5130 = icmp sgt i32 %13, 0
  %5131 = add i32 %13, -2
  %5132 = zext i32 %5131 to i64
  %5133 = zext i32 %13 to i64
  %5134 = add nuw i32 %5, 1
  %5135 = icmp eq i32 %13, 1
  br label %5136

5136:                                             ; preds = %5128, %5264
  %5137 = phi double [ 0.000000e+00, %5128 ], [ %5215, %5264 ]
  %5138 = phi i32 [ 0, %5128 ], [ %5216, %5264 ]
  %5139 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5129, label %5140, label %5209

5140:                                             ; preds = %5136, %5199
  %5141 = phi i32 [ %5208, %5199 ], [ 0, %5136 ]
  %5142 = phi i64 [ %5150, %5199 ], [ %5133, %5136 ]
  %5143 = phi i64 [ %5207, %5199 ], [ %5132, %5136 ]
  %5144 = phi i32 [ %5205, %5199 ], [ %5139, %5136 ]
  %5145 = sub i32 %5131, %5141
  %5146 = tail call i32 @llvm.smin.i32(i32 %5145, i32 0)
  %5147 = sub i32 %5145, %5146
  %5148 = zext i32 %5147 to i64
  %5149 = add nuw nsw i64 %5148, 1
  %5150 = add nsw i64 %5142, -1
  %5151 = icmp ult i32 %5147, 31
  br i1 %5151, label %5187, label %5152

5152:                                             ; preds = %5140
  %5153 = and i64 %5149, 8589934560
  %5154 = sub i64 %5143, %5153
  br label %5155

5155:                                             ; preds = %5155, %5152
  %5156 = phi i64 [ 0, %5152 ], [ %5179, %5155 ]
  %5157 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5152 ], [ %5175, %5155 ]
  %5158 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5152 ], [ %5176, %5155 ]
  %5159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5152 ], [ %5177, %5155 ]
  %5160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5152 ], [ %5178, %5155 ]
  %5161 = sub i64 %5143, %5156
  %5162 = getelementptr inbounds i32, ptr %9, i64 %5161
  %5163 = getelementptr inbounds i32, ptr %5162, i64 -7
  %5164 = load <8 x i32>, ptr %5163, align 4, !tbaa !5
  %5165 = shufflevector <8 x i32> %5164, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5166 = getelementptr inbounds i32, ptr %5162, i64 -15
  %5167 = load <8 x i32>, ptr %5166, align 4, !tbaa !5
  %5168 = shufflevector <8 x i32> %5167, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5169 = getelementptr inbounds i32, ptr %5162, i64 -23
  %5170 = load <8 x i32>, ptr %5169, align 4, !tbaa !5
  %5171 = shufflevector <8 x i32> %5170, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5172 = getelementptr inbounds i32, ptr %5162, i64 -31
  %5173 = load <8 x i32>, ptr %5172, align 4, !tbaa !5
  %5174 = shufflevector <8 x i32> %5173, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5175 = mul <8 x i32> %5165, %5157
  %5176 = mul <8 x i32> %5168, %5158
  %5177 = mul <8 x i32> %5171, %5159
  %5178 = mul <8 x i32> %5174, %5160
  %5179 = add nuw i64 %5156, 32
  %5180 = icmp eq i64 %5179, %5153
  br i1 %5180, label %5181, label %5155, !llvm.loop !934

5181:                                             ; preds = %5155
  %5182 = mul <8 x i32> %5176, %5175
  %5183 = mul <8 x i32> %5177, %5182
  %5184 = mul <8 x i32> %5178, %5183
  %5185 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5184)
  %5186 = icmp eq i64 %5149, %5153
  br i1 %5186, label %5199, label %5187

5187:                                             ; preds = %5140, %5181
  %5188 = phi i64 [ %5143, %5140 ], [ %5154, %5181 ]
  %5189 = phi i32 [ 1, %5140 ], [ %5185, %5181 ]
  br label %5190

5190:                                             ; preds = %5187, %5190
  %5191 = phi i64 [ %5196, %5190 ], [ %5188, %5187 ]
  %5192 = phi i32 [ %5195, %5190 ], [ %5189, %5187 ]
  %5193 = getelementptr inbounds i32, ptr %9, i64 %5191
  %5194 = load i32, ptr %5193, align 4, !tbaa !5
  %5195 = mul nsw i32 %5194, %5192
  %5196 = add nsw i64 %5191, -1
  %5197 = trunc i64 %5191 to i32
  %5198 = icmp sgt i32 %5197, 0
  br i1 %5198, label %5190, label %5199, !llvm.loop !935

5199:                                             ; preds = %5190, %5181
  %5200 = phi i32 [ %5185, %5181 ], [ %5195, %5190 ]
  %5201 = and i64 %5150, 4294967295
  %5202 = getelementptr inbounds i32, ptr %6, i64 %5201
  %5203 = load i32, ptr %5202, align 4, !tbaa !5
  %5204 = mul nsw i32 %5203, %5200
  %5205 = add nsw i32 %5204, %5144
  %5206 = icmp sgt i64 %5142, 2
  %5207 = add nsw i64 %5143, -1
  %5208 = add i32 %5141, 1
  br i1 %5206, label %5140, label %5209, !llvm.loop !936

5209:                                             ; preds = %5199, %5136
  %5210 = phi i32 [ %5139, %5136 ], [ %5205, %5199 ]
  %5211 = sext i32 %5210 to i64
  %5212 = getelementptr inbounds i64, ptr %4812, i64 %5211
  %5213 = load i64, ptr %5212, align 8, !tbaa !120
  %5214 = sitofp i64 %5213 to double
  %5215 = fadd fast double %5137, %5214
  %5216 = add nuw nsw i32 %5138, 1
  br i1 %5130, label %5217, label %5264

5217:                                             ; preds = %5209
  %5218 = load i32, ptr %4, align 4, !tbaa !5
  %5219 = load i32, ptr %12, align 4, !tbaa !5
  %5220 = add nsw i32 %5219, -1
  %5221 = icmp slt i32 %5218, %5220
  br i1 %5221, label %5241, label %5222

5222:                                             ; preds = %5217
  %5223 = icmp eq i32 %5218, %5220
  br i1 %5223, label %5224, label %5257

5224:                                             ; preds = %5222
  store i32 0, ptr %4, align 4, !tbaa !5
  %5225 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5225, ptr %6, align 4, !tbaa !5
  br i1 %5135, label %5264, label %5226

5226:                                             ; preds = %5224, %5251
  %5227 = phi i64 [ %5255, %5251 ], [ 1, %5224 ]
  %5228 = getelementptr inbounds i32, ptr %4, i64 %5227
  %5229 = load i32, ptr %5228, align 4, !tbaa !5
  %5230 = getelementptr inbounds i32, ptr %12, i64 %5227
  %5231 = load i32, ptr %5230, align 4, !tbaa !5
  %5232 = add nsw i32 %5231, -1
  %5233 = icmp slt i32 %5229, %5232
  br i1 %5233, label %5234, label %5249

5234:                                             ; preds = %5226
  br i1 %5221, label %5241, label %5235

5235:                                             ; preds = %5234
  %5236 = getelementptr inbounds i32, ptr %7, i64 %5227
  %5237 = load i32, ptr %5236, align 4, !tbaa !5
  %5238 = getelementptr inbounds i32, ptr %6, i64 %5227
  %5239 = load i32, ptr %5238, align 4, !tbaa !5
  %5240 = add nsw i32 %5239, %5237
  store i32 %5240, ptr %5238, align 4, !tbaa !5
  br label %5259

5241:                                             ; preds = %5217, %5234
  %5242 = phi i32 [ %5229, %5234 ], [ %5218, %5217 ]
  %5243 = phi ptr [ %5228, %5234 ], [ %4, %5217 ]
  %5244 = phi i64 [ %5227, %5234 ], [ 0, %5217 ]
  %5245 = add nsw i32 %5242, 1
  store i32 %5245, ptr %5243, align 4, !tbaa !5
  %5246 = getelementptr inbounds i32, ptr %7, i64 %5244
  %5247 = load i32, ptr %5246, align 4, !tbaa !5
  %5248 = getelementptr inbounds i32, ptr %6, i64 %5244
  br label %5259

5249:                                             ; preds = %5226
  %5250 = icmp eq i32 %5229, %5232
  br i1 %5250, label %5251, label %5257

5251:                                             ; preds = %5249
  store i32 0, ptr %5228, align 4, !tbaa !5
  %5252 = getelementptr inbounds i32, ptr %8, i64 %5227
  %5253 = load i32, ptr %5252, align 4, !tbaa !5
  %5254 = getelementptr inbounds i32, ptr %6, i64 %5227
  store i32 %5253, ptr %5254, align 4, !tbaa !5
  %5255 = add nuw nsw i64 %5227, 1
  %5256 = icmp eq i64 %5255, %5133
  br i1 %5256, label %5264, label %5226, !llvm.loop !937

5257:                                             ; preds = %5222, %5249
  store double %5215, ptr %4814, align 8, !tbaa !18
  %5258 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

5259:                                             ; preds = %5235, %5241
  %5260 = phi ptr [ %5248, %5241 ], [ %5228, %5235 ]
  %5261 = phi i32 [ %5247, %5241 ], [ 1, %5235 ]
  %5262 = load i32, ptr %5260, align 4, !tbaa !5
  %5263 = add nsw i32 %5262, %5261
  store i32 %5263, ptr %5260, align 4, !tbaa !5
  br label %5264

5264:                                             ; preds = %5251, %5259, %5224, %5209
  %5265 = icmp eq i32 %5216, %5
  br i1 %5265, label %5410, label %5136, !llvm.loop !938

5266:                                             ; preds = %5119, %5401
  %5267 = phi double [ 0.000000e+00, %5119 ], [ %5349, %5401 ]
  %5268 = phi i32 [ 0, %5119 ], [ %5350, %5401 ]
  %5269 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5120, label %5270, label %5339

5270:                                             ; preds = %5266, %5329
  %5271 = phi i32 [ %5338, %5329 ], [ 0, %5266 ]
  %5272 = phi i64 [ %5280, %5329 ], [ %5124, %5266 ]
  %5273 = phi i64 [ %5337, %5329 ], [ %5123, %5266 ]
  %5274 = phi i32 [ %5335, %5329 ], [ %5269, %5266 ]
  %5275 = sub i32 %5122, %5271
  %5276 = tail call i32 @llvm.smin.i32(i32 %5275, i32 0)
  %5277 = sub i32 %5275, %5276
  %5278 = zext i32 %5277 to i64
  %5279 = add nuw nsw i64 %5278, 1
  %5280 = add nsw i64 %5272, -1
  %5281 = icmp ult i32 %5277, 31
  br i1 %5281, label %5317, label %5282

5282:                                             ; preds = %5270
  %5283 = and i64 %5279, 8589934560
  %5284 = sub i64 %5273, %5283
  br label %5285

5285:                                             ; preds = %5285, %5282
  %5286 = phi i64 [ 0, %5282 ], [ %5309, %5285 ]
  %5287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5305, %5285 ]
  %5288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5306, %5285 ]
  %5289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5307, %5285 ]
  %5290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5308, %5285 ]
  %5291 = sub i64 %5273, %5286
  %5292 = getelementptr inbounds i32, ptr %11, i64 %5291
  %5293 = getelementptr inbounds i32, ptr %5292, i64 -7
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !5
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = getelementptr inbounds i32, ptr %5292, i64 -15
  %5297 = load <8 x i32>, ptr %5296, align 4, !tbaa !5
  %5298 = shufflevector <8 x i32> %5297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5299 = getelementptr inbounds i32, ptr %5292, i64 -23
  %5300 = load <8 x i32>, ptr %5299, align 4, !tbaa !5
  %5301 = shufflevector <8 x i32> %5300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5302 = getelementptr inbounds i32, ptr %5292, i64 -31
  %5303 = load <8 x i32>, ptr %5302, align 4, !tbaa !5
  %5304 = shufflevector <8 x i32> %5303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5305 = mul <8 x i32> %5295, %5287
  %5306 = mul <8 x i32> %5298, %5288
  %5307 = mul <8 x i32> %5301, %5289
  %5308 = mul <8 x i32> %5304, %5290
  %5309 = add nuw i64 %5286, 32
  %5310 = icmp eq i64 %5309, %5283
  br i1 %5310, label %5311, label %5285, !llvm.loop !939

5311:                                             ; preds = %5285
  %5312 = mul <8 x i32> %5306, %5305
  %5313 = mul <8 x i32> %5307, %5312
  %5314 = mul <8 x i32> %5308, %5313
  %5315 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5314)
  %5316 = icmp eq i64 %5279, %5283
  br i1 %5316, label %5329, label %5317

5317:                                             ; preds = %5270, %5311
  %5318 = phi i64 [ %5273, %5270 ], [ %5284, %5311 ]
  %5319 = phi i32 [ 1, %5270 ], [ %5315, %5311 ]
  br label %5320

5320:                                             ; preds = %5317, %5320
  %5321 = phi i64 [ %5326, %5320 ], [ %5318, %5317 ]
  %5322 = phi i32 [ %5325, %5320 ], [ %5319, %5317 ]
  %5323 = getelementptr inbounds i32, ptr %11, i64 %5321
  %5324 = load i32, ptr %5323, align 4, !tbaa !5
  %5325 = mul nsw i32 %5324, %5322
  %5326 = add nsw i64 %5321, -1
  %5327 = trunc i64 %5321 to i32
  %5328 = icmp sgt i32 %5327, 0
  br i1 %5328, label %5320, label %5329, !llvm.loop !940

5329:                                             ; preds = %5320, %5311
  %5330 = phi i32 [ %5315, %5311 ], [ %5325, %5320 ]
  %5331 = and i64 %5280, 4294967295
  %5332 = getelementptr inbounds i32, ptr %6, i64 %5331
  %5333 = load i32, ptr %5332, align 4, !tbaa !5
  %5334 = mul nsw i32 %5333, %5330
  %5335 = add nsw i32 %5334, %5274
  %5336 = icmp sgt i64 %5272, 2
  %5337 = add nsw i64 %5273, -1
  %5338 = add i32 %5271, 1
  br i1 %5336, label %5270, label %5339, !llvm.loop !941

5339:                                             ; preds = %5329, %5266
  %5340 = phi i32 [ %5269, %5266 ], [ %5335, %5329 ]
  %5341 = icmp slt i32 %5340, %5
  br i1 %5341, label %5344, label %5342

5342:                                             ; preds = %5339
  %5343 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5411

5344:                                             ; preds = %5339
  %5345 = sext i32 %5340 to i64
  %5346 = getelementptr inbounds i64, ptr %4812, i64 %5345
  %5347 = load i64, ptr %5346, align 8, !tbaa !120
  %5348 = sitofp i64 %5347 to double
  %5349 = fadd fast double %5267, %5348
  store double %5349, ptr %4814, align 8, !tbaa !18
  %5350 = add nuw nsw i32 %5268, 1
  br i1 %5121, label %5351, label %5401

5351:                                             ; preds = %5344
  %5352 = load i32, ptr %4, align 4, !tbaa !5
  %5353 = load i32, ptr %12, align 4, !tbaa !5
  %5354 = add nsw i32 %5353, -1
  %5355 = icmp slt i32 %5352, %5354
  br i1 %5355, label %5378, label %5356

5356:                                             ; preds = %5351
  %5357 = icmp eq i32 %5352, %5354
  br i1 %5357, label %5358, label %5394

5358:                                             ; preds = %5356
  store i32 0, ptr %4, align 4, !tbaa !5
  %5359 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5359, ptr %6, align 4, !tbaa !5
  br i1 %5126, label %5401, label %5360

5360:                                             ; preds = %5358, %5388
  %5361 = phi i64 [ %5392, %5388 ], [ 1, %5358 ]
  %5362 = getelementptr inbounds i32, ptr %4, i64 %5361
  %5363 = load i32, ptr %5362, align 4, !tbaa !5
  %5364 = getelementptr inbounds i32, ptr %12, i64 %5361
  %5365 = load i32, ptr %5364, align 4, !tbaa !5
  %5366 = add nsw i32 %5365, -1
  %5367 = icmp slt i32 %5363, %5366
  br i1 %5367, label %5368, label %5386

5368:                                             ; preds = %5360
  br i1 %5355, label %5378, label %5369

5369:                                             ; preds = %5368
  %5370 = shl i64 %5361, 32
  %5371 = add i64 %5370, -4294967296
  %5372 = ashr exact i64 %5371, 32
  %5373 = getelementptr inbounds i32, ptr %7, i64 %5372
  %5374 = load i32, ptr %5373, align 4, !tbaa !5
  %5375 = getelementptr inbounds i32, ptr %6, i64 %5361
  %5376 = load i32, ptr %5375, align 4, !tbaa !5
  %5377 = add nsw i32 %5376, %5374
  store i32 %5377, ptr %5375, align 4, !tbaa !5
  br label %5396

5378:                                             ; preds = %5351, %5368
  %5379 = phi i32 [ %5363, %5368 ], [ %5352, %5351 ]
  %5380 = phi ptr [ %5362, %5368 ], [ %4, %5351 ]
  %5381 = phi i64 [ %5361, %5368 ], [ 0, %5351 ]
  %5382 = add nsw i32 %5379, 1
  store i32 %5382, ptr %5380, align 4, !tbaa !5
  %5383 = getelementptr inbounds i32, ptr %7, i64 %5381
  %5384 = load i32, ptr %5383, align 4, !tbaa !5
  %5385 = getelementptr inbounds i32, ptr %6, i64 %5381
  br label %5396

5386:                                             ; preds = %5360
  %5387 = icmp eq i32 %5363, %5366
  br i1 %5387, label %5388, label %5394

5388:                                             ; preds = %5386
  store i32 0, ptr %5362, align 4, !tbaa !5
  %5389 = getelementptr inbounds i32, ptr %8, i64 %5361
  %5390 = load i32, ptr %5389, align 4, !tbaa !5
  %5391 = getelementptr inbounds i32, ptr %6, i64 %5361
  store i32 %5390, ptr %5391, align 4, !tbaa !5
  %5392 = add nuw nsw i64 %5361, 1
  %5393 = icmp eq i64 %5392, %5124
  br i1 %5393, label %5401, label %5360, !llvm.loop !942

5394:                                             ; preds = %5356, %5386
  %5395 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5411

5396:                                             ; preds = %5369, %5378
  %5397 = phi ptr [ %5385, %5378 ], [ %5362, %5369 ]
  %5398 = phi i32 [ %5384, %5378 ], [ 1, %5369 ]
  %5399 = load i32, ptr %5397, align 4, !tbaa !5
  %5400 = add nsw i32 %5399, %5398
  store i32 %5400, ptr %5397, align 4, !tbaa !5
  br label %5401

5401:                                             ; preds = %5388, %5396, %5358, %5344
  %5402 = icmp eq i32 %5350, %5
  br i1 %5402, label %5411, label %5266, !llvm.loop !943

5403:                                             ; preds = %4819
  %5404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1279, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5411

5405:                                             ; preds = %1988
  store i16 %1939, ptr %1823, align 2, !tbaa !78
  br label %5411

5406:                                             ; preds = %2282
  store i16 %2233, ptr %1823, align 2, !tbaa !78
  br label %5411

5407:                                             ; preds = %4071
  store double %4022, ptr %3621, align 8, !tbaa !18
  br label %5411

5408:                                             ; preds = %4379
  store float %4330, ptr %4216, align 4, !tbaa !162
  br label %5411

5409:                                             ; preds = %4669
  store float %4620, ptr %4216, align 4, !tbaa !162
  br label %5411

5410:                                             ; preds = %5264
  store double %5215, ptr %4814, align 8, !tbaa !18
  br label %5411

5411:                                             ; preds = %5401, %5111, %4974, %4806, %4516, %4208, %3918, %3781, %3613, %3477, %3325, %3186, %3017, %2880, %2727, %2590, %2419, %2129, %1815, %1678, %1525, %1388, %1215, %1078, %925, %788, %617, %480, %327, %190, %5118, %5127, %5410, %4825, %4834, %4523, %4532, %5409, %4227, %4236, %5408, %3925, %3934, %5407, %3632, %3641, %3332, %3341, %3035, %3044, %2734, %2743, %2438, %2447, %2136, %2145, %5406, %1834, %1843, %5405, %1532, %1541, %1234, %1243, %932, %941, %636, %645, %334, %343, %37, %46, %4816, %5403, %4218, %4808, %3623, %4210, %3027, %3615, %2429, %3019, %1825, %2421, %1225, %1817, %627, %1217, %28, %619, %18, %4967, %5052, %5104, %5257, %5342, %5394, %4372, %4457, %4509, %4662, %4747, %4799, %3774, %3859, %3911, %4064, %4149, %4201, %3179, %3264, %3318, %3470, %3555, %3606, %2583, %2667, %2720, %2873, %2957, %3010, %1981, %2066, %2122, %2275, %2360, %2412, %1381, %1465, %1518, %1671, %1755, %1808, %781, %865, %918, %1071, %1155, %1208, %183, %267, %320, %473, %557, %610
  %5412 = phi i32 [ -1, %610 ], [ -1, %557 ], [ -1, %473 ], [ -1, %320 ], [ -1, %267 ], [ -1, %183 ], [ -1, %1208 ], [ -1, %1155 ], [ -1, %1071 ], [ -1, %918 ], [ -1, %865 ], [ -1, %781 ], [ -1, %1808 ], [ -1, %1755 ], [ -1, %1671 ], [ -1, %1518 ], [ -1, %1465 ], [ -1, %1381 ], [ -1, %2412 ], [ -1, %2360 ], [ -1, %2275 ], [ -1, %2122 ], [ -1, %2066 ], [ -1, %1981 ], [ -1, %3010 ], [ -1, %2957 ], [ -1, %2873 ], [ -1, %2720 ], [ -1, %2667 ], [ -1, %2583 ], [ -1, %3606 ], [ -1, %3555 ], [ -1, %3470 ], [ -1, %3318 ], [ -1, %3264 ], [ -1, %3179 ], [ -1, %4201 ], [ -1, %4149 ], [ -1, %4064 ], [ -1, %3911 ], [ -1, %3859 ], [ -1, %3774 ], [ -1, %4799 ], [ -1, %4747 ], [ -1, %4662 ], [ -1, %4509 ], [ -1, %4457 ], [ -1, %4372 ], [ -1, %5394 ], [ -1, %5342 ], [ -1, %5257 ], [ -1, %5104 ], [ -1, %5052 ], [ -1, %4967 ], [ %10, %18 ], [ 1, %619 ], [ 1, %28 ], [ 1, %1217 ], [ 1, %627 ], [ 1, %1817 ], [ 1, %1225 ], [ 1, %2421 ], [ 1, %1825 ], [ 1, %3019 ], [ 1, %2429 ], [ 1, %3615 ], [ 1, %3027 ], [ 1, %4210 ], [ 1, %3623 ], [ 1, %4808 ], [ 1, %4218 ], [ 1, %5403 ], [ 1, %4816 ], [ 1, %46 ], [ 1, %37 ], [ 1, %343 ], [ 1, %334 ], [ 1, %645 ], [ 1, %636 ], [ 1, %941 ], [ 1, %932 ], [ 1, %1243 ], [ 1, %1234 ], [ 1, %1541 ], [ 1, %1532 ], [ %1850, %5405 ], [ 1, %1843 ], [ 1, %1834 ], [ %2152, %5406 ], [ 1, %2145 ], [ 1, %2136 ], [ 1, %2447 ], [ 1, %2438 ], [ 1, %2743 ], [ 1, %2734 ], [ 1, %3044 ], [ 1, %3035 ], [ 1, %3341 ], [ 1, %3332 ], [ 1, %3641 ], [ 1, %3632 ], [ %3941, %5407 ], [ 1, %3934 ], [ 1, %3925 ], [ %4243, %5408 ], [ 1, %4236 ], [ 1, %4227 ], [ %4539, %5409 ], [ 1, %4532 ], [ 1, %4523 ], [ 1, %4834 ], [ 1, %4825 ], [ %5134, %5410 ], [ 1, %5127 ], [ 1, %5118 ], [ %53, %190 ], [ %44, %327 ], [ %350, %480 ], [ %341, %617 ], [ %652, %788 ], [ %643, %925 ], [ %948, %1078 ], [ %939, %1215 ], [ %1250, %1388 ], [ %1241, %1525 ], [ %1548, %1678 ], [ %1539, %1815 ], [ %1841, %2129 ], [ %2143, %2419 ], [ %2454, %2590 ], [ %2445, %2727 ], [ %2750, %2880 ], [ %2741, %3017 ], [ %3051, %3186 ], [ %3042, %3325 ], [ %3348, %3477 ], [ %3339, %3613 ], [ %3648, %3781 ], [ %3639, %3918 ], [ %3932, %4208 ], [ %4234, %4516 ], [ %4530, %4806 ], [ %4841, %4974 ], [ %4832, %5111 ], [ %5125, %5401 ]
  ret i32 %5412
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5401 [
    i32 101, label %22
    i32 102, label %620
    i32 103, label %1218
    i32 104, label %1816
    i32 105, label %2418
    i32 106, label %3016
    i32 107, label %3617
    i32 108, label %4207
    i32 109, label %4805
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5401

31:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %32
    i32 0, label %328
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5401

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %191

46:                                               ; preds = %32
  br i1 %36, label %47, label %5401

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %189
  %56 = phi i32 [ 0, %47 ], [ %141, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !944

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !945

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !946

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds double, ptr %24, i64 %129
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = fptoui double %133 to i8
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = uitofp i8 %134 to double
  %138 = fmul fast double %131, %137
  %139 = fadd fast double %138, %136
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = add nuw nsw i32 %56, 1
  br i1 %49, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %54, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %52
  br i1 %181, label %189, label %151, !llvm.loop !947

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %5401, label %55, !llvm.loop !948

191:                                              ; preds = %38, %326
  %192 = phi i32 [ 0, %38 ], [ %275, %326 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %43, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %42, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %41, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !949

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !950

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !951

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds double, ptr %24, i64 %269
  %271 = load double, ptr %270, align 8, !tbaa !18
  %272 = fptoui double %271 to i8
  %273 = load i8, ptr %26, align 1, !tbaa !11
  %274 = add i8 %273, %272
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %192, 1
  br i1 %40, label %276, label %326

276:                                              ; preds = %268
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %45, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %43
  br i1 %318, label %326, label %285, !llvm.loop !952

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %268
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %5401, label %191, !llvm.loop !953

328:                                              ; preds = %31
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %5401

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %481

342:                                              ; preds = %328
  br i1 %332, label %343, label %5401

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %479
  %352 = phi i32 [ 0, %343 ], [ %431, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %354, label %423

354:                                              ; preds = %351, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %351 ]
  %356 = phi i64 [ %364, %413 ], [ %348, %351 ]
  %357 = phi i64 [ %421, %413 ], [ %347, %351 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %351 ]
  %359 = sub i32 %346, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !954

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !955

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !956

423:                                              ; preds = %413, %351
  %424 = phi i32 [ %353, %351 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds double, ptr %24, i64 %425
  %427 = load double, ptr %426, align 8, !tbaa !18
  %428 = fptoui double %427 to i8
  %429 = load i8, ptr %26, align 1, !tbaa !11
  %430 = add i8 %429, %428
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = add nuw nsw i32 %352, 1
  br i1 %345, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %350, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %348
  br i1 %471, label %479, label %441, !llvm.loop !957

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %5401, label %351, !llvm.loop !958

481:                                              ; preds = %334, %616
  %482 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %339, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %338, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %337, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !959

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !960

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !961

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds double, ptr %24, i64 %559
  %561 = load double, ptr %560, align 8, !tbaa !18
  %562 = fptoui double %561 to i8
  %563 = load i8, ptr %26, align 1, !tbaa !11
  %564 = add i8 %563, %562
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %482, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %558
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !962

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %558
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %5401, label %481, !llvm.loop !963

618:                                              ; preds = %31
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1482, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %620
  %627 = load double, ptr %622, align 8, !tbaa !18
  %628 = fptosi double %627 to i32
  store i32 %628, ptr %624, align 4, !tbaa !5
  br label %5401

629:                                              ; preds = %620
  switch i32 %1, label %1216 [
    i32 1, label %630
    i32 0, label %926
  ]

630:                                              ; preds = %629
  %631 = getelementptr inbounds i32, ptr %3, i64 %19
  %632 = load i32, ptr %631, align 4, !tbaa !5
  %633 = icmp eq i32 %632, 0
  %634 = icmp sgt i32 %5, 0
  br i1 %633, label %644, label %635

635:                                              ; preds = %630
  br i1 %634, label %636, label %5401

636:                                              ; preds = %635
  %637 = icmp sgt i32 %13, 1
  %638 = icmp sgt i32 %13, 0
  %639 = add i32 %13, -2
  %640 = zext i32 %639 to i64
  %641 = zext i32 %13 to i64
  %642 = add nuw i32 %5, 1
  %643 = icmp eq i32 %13, 1
  br label %789

644:                                              ; preds = %630
  br i1 %634, label %645, label %5401

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %653

653:                                              ; preds = %645, %787
  %654 = phi i32 [ 0, %645 ], [ %739, %787 ]
  %655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %656, label %725

656:                                              ; preds = %653, %715
  %657 = phi i32 [ %724, %715 ], [ 0, %653 ]
  %658 = phi i64 [ %666, %715 ], [ %650, %653 ]
  %659 = phi i64 [ %723, %715 ], [ %649, %653 ]
  %660 = phi i32 [ %721, %715 ], [ %655, %653 ]
  %661 = sub i32 %648, %657
  %662 = tail call i32 @llvm.smin.i32(i32 %661, i32 0)
  %663 = sub i32 %661, %662
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i64 %664, 1
  %666 = add nsw i64 %658, -1
  %667 = icmp ult i32 %663, 31
  br i1 %667, label %703, label %668

668:                                              ; preds = %656
  %669 = and i64 %665, 8589934560
  %670 = sub i64 %659, %669
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i64 [ 0, %668 ], [ %695, %671 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %691, %671 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %692, %671 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %693, %671 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %694, %671 ]
  %677 = sub i64 %659, %672
  %678 = getelementptr inbounds i32, ptr %9, i64 %677
  %679 = getelementptr inbounds i32, ptr %678, i64 -7
  %680 = load <8 x i32>, ptr %679, align 4, !tbaa !5
  %681 = shufflevector <8 x i32> %680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %682 = getelementptr inbounds i32, ptr %678, i64 -15
  %683 = load <8 x i32>, ptr %682, align 4, !tbaa !5
  %684 = shufflevector <8 x i32> %683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %685 = getelementptr inbounds i32, ptr %678, i64 -23
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %678, i64 -31
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = mul <8 x i32> %681, %673
  %692 = mul <8 x i32> %684, %674
  %693 = mul <8 x i32> %687, %675
  %694 = mul <8 x i32> %690, %676
  %695 = add nuw i64 %672, 32
  %696 = icmp eq i64 %695, %669
  br i1 %696, label %697, label %671, !llvm.loop !964

697:                                              ; preds = %671
  %698 = mul <8 x i32> %692, %691
  %699 = mul <8 x i32> %693, %698
  %700 = mul <8 x i32> %694, %699
  %701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %700)
  %702 = icmp eq i64 %665, %669
  br i1 %702, label %715, label %703

703:                                              ; preds = %656, %697
  %704 = phi i64 [ %659, %656 ], [ %670, %697 ]
  %705 = phi i32 [ 1, %656 ], [ %701, %697 ]
  br label %706

706:                                              ; preds = %703, %706
  %707 = phi i64 [ %712, %706 ], [ %704, %703 ]
  %708 = phi i32 [ %711, %706 ], [ %705, %703 ]
  %709 = getelementptr inbounds i32, ptr %9, i64 %707
  %710 = load i32, ptr %709, align 4, !tbaa !5
  %711 = mul nsw i32 %710, %708
  %712 = add nsw i64 %707, -1
  %713 = trunc i64 %707 to i32
  %714 = icmp sgt i32 %713, 0
  br i1 %714, label %706, label %715, !llvm.loop !965

715:                                              ; preds = %706, %697
  %716 = phi i32 [ %701, %697 ], [ %711, %706 ]
  %717 = and i64 %666, 4294967295
  %718 = getelementptr inbounds i32, ptr %6, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %716
  %721 = add nsw i32 %720, %660
  %722 = icmp sgt i64 %658, 2
  %723 = add nsw i64 %659, -1
  %724 = add i32 %657, 1
  br i1 %722, label %656, label %725, !llvm.loop !966

725:                                              ; preds = %715, %653
  %726 = phi i32 [ %655, %653 ], [ %721, %715 ]
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %2, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !18
  %730 = getelementptr inbounds double, ptr %622, i64 %727
  %731 = load double, ptr %730, align 8, !tbaa !18
  %732 = fptosi double %731 to i32
  %733 = load i32, ptr %624, align 4, !tbaa !5
  %734 = sitofp i32 %733 to double
  %735 = sitofp i32 %732 to double
  %736 = fmul fast double %729, %735
  %737 = fadd fast double %736, %734
  %738 = fptosi double %737 to i32
  store i32 %738, ptr %624, align 4, !tbaa !5
  %739 = add nuw nsw i32 %654, 1
  br i1 %647, label %740, label %787

740:                                              ; preds = %725
  %741 = load i32, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %12, align 4, !tbaa !5
  %743 = add nsw i32 %742, -1
  %744 = icmp slt i32 %741, %743
  br i1 %744, label %764, label %745

745:                                              ; preds = %740
  %746 = icmp eq i32 %741, %743
  br i1 %746, label %747, label %780

747:                                              ; preds = %745
  store i32 0, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %748, ptr %6, align 4, !tbaa !5
  br i1 %652, label %787, label %749

749:                                              ; preds = %747, %774
  %750 = phi i64 [ %778, %774 ], [ 1, %747 ]
  %751 = getelementptr inbounds i32, ptr %4, i64 %750
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = getelementptr inbounds i32, ptr %12, i64 %750
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = add nsw i32 %754, -1
  %756 = icmp slt i32 %752, %755
  br i1 %756, label %757, label %772

757:                                              ; preds = %749
  br i1 %744, label %764, label %758

758:                                              ; preds = %757
  %759 = getelementptr inbounds i32, ptr %7, i64 %750
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %6, i64 %750
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, %760
  store i32 %763, ptr %761, align 4, !tbaa !5
  br label %782

764:                                              ; preds = %740, %757
  %765 = phi i32 [ %752, %757 ], [ %741, %740 ]
  %766 = phi ptr [ %751, %757 ], [ %4, %740 ]
  %767 = phi i64 [ %750, %757 ], [ 0, %740 ]
  %768 = add nsw i32 %765, 1
  store i32 %768, ptr %766, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %7, i64 %767
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %767
  br label %782

772:                                              ; preds = %749
  %773 = icmp eq i32 %752, %755
  br i1 %773, label %774, label %780

774:                                              ; preds = %772
  store i32 0, ptr %751, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %8, i64 %750
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %750
  store i32 %776, ptr %777, align 4, !tbaa !5
  %778 = add nuw nsw i64 %750, 1
  %779 = icmp eq i64 %778, %650
  br i1 %779, label %787, label %749, !llvm.loop !967

780:                                              ; preds = %745, %772
  %781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

782:                                              ; preds = %758, %764
  %783 = phi ptr [ %771, %764 ], [ %751, %758 ]
  %784 = phi i32 [ %770, %764 ], [ 1, %758 ]
  %785 = load i32, ptr %783, align 4, !tbaa !5
  %786 = add nsw i32 %785, %784
  store i32 %786, ptr %783, align 4, !tbaa !5
  br label %787

787:                                              ; preds = %774, %782, %747, %725
  %788 = icmp eq i32 %739, %5
  br i1 %788, label %5401, label %653, !llvm.loop !968

789:                                              ; preds = %636, %924
  %790 = phi i32 [ 0, %636 ], [ %873, %924 ]
  %791 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %637, label %792, label %861

792:                                              ; preds = %789, %851
  %793 = phi i32 [ %860, %851 ], [ 0, %789 ]
  %794 = phi i64 [ %802, %851 ], [ %641, %789 ]
  %795 = phi i64 [ %859, %851 ], [ %640, %789 ]
  %796 = phi i32 [ %857, %851 ], [ %791, %789 ]
  %797 = sub i32 %639, %793
  %798 = tail call i32 @llvm.smin.i32(i32 %797, i32 0)
  %799 = sub i32 %797, %798
  %800 = zext i32 %799 to i64
  %801 = add nuw nsw i64 %800, 1
  %802 = add nsw i64 %794, -1
  %803 = icmp ult i32 %799, 31
  br i1 %803, label %839, label %804

804:                                              ; preds = %792
  %805 = and i64 %801, 8589934560
  %806 = sub i64 %795, %805
  br label %807

807:                                              ; preds = %807, %804
  %808 = phi i64 [ 0, %804 ], [ %831, %807 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %827, %807 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %828, %807 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %829, %807 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %830, %807 ]
  %813 = sub i64 %795, %808
  %814 = getelementptr inbounds i32, ptr %11, i64 %813
  %815 = getelementptr inbounds i32, ptr %814, i64 -7
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %814, i64 -15
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = getelementptr inbounds i32, ptr %814, i64 -23
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %814, i64 -31
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = mul <8 x i32> %817, %809
  %828 = mul <8 x i32> %820, %810
  %829 = mul <8 x i32> %823, %811
  %830 = mul <8 x i32> %826, %812
  %831 = add nuw i64 %808, 32
  %832 = icmp eq i64 %831, %805
  br i1 %832, label %833, label %807, !llvm.loop !969

833:                                              ; preds = %807
  %834 = mul <8 x i32> %828, %827
  %835 = mul <8 x i32> %829, %834
  %836 = mul <8 x i32> %830, %835
  %837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %836)
  %838 = icmp eq i64 %801, %805
  br i1 %838, label %851, label %839

839:                                              ; preds = %792, %833
  %840 = phi i64 [ %795, %792 ], [ %806, %833 ]
  %841 = phi i32 [ 1, %792 ], [ %837, %833 ]
  br label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %848, %842 ], [ %840, %839 ]
  %844 = phi i32 [ %847, %842 ], [ %841, %839 ]
  %845 = getelementptr inbounds i32, ptr %11, i64 %843
  %846 = load i32, ptr %845, align 4, !tbaa !5
  %847 = mul nsw i32 %846, %844
  %848 = add nsw i64 %843, -1
  %849 = trunc i64 %843 to i32
  %850 = icmp sgt i32 %849, 0
  br i1 %850, label %842, label %851, !llvm.loop !970

851:                                              ; preds = %842, %833
  %852 = phi i32 [ %837, %833 ], [ %847, %842 ]
  %853 = and i64 %802, 4294967295
  %854 = getelementptr inbounds i32, ptr %6, i64 %853
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %852
  %857 = add nsw i32 %856, %796
  %858 = icmp sgt i64 %794, 2
  %859 = add nsw i64 %795, -1
  %860 = add i32 %793, 1
  br i1 %858, label %792, label %861, !llvm.loop !971

861:                                              ; preds = %851, %789
  %862 = phi i32 [ %791, %789 ], [ %857, %851 ]
  %863 = icmp slt i32 %862, %5
  br i1 %863, label %866, label %864

864:                                              ; preds = %861
  %865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

866:                                              ; preds = %861
  %867 = sext i32 %862 to i64
  %868 = getelementptr inbounds double, ptr %622, i64 %867
  %869 = load double, ptr %868, align 8, !tbaa !18
  %870 = fptosi double %869 to i32
  %871 = load i32, ptr %624, align 4, !tbaa !5
  %872 = add i32 %871, %870
  store i32 %872, ptr %624, align 4, !tbaa !5
  %873 = add nuw nsw i32 %790, 1
  br i1 %638, label %874, label %924

874:                                              ; preds = %866
  %875 = load i32, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %12, align 4, !tbaa !5
  %877 = add nsw i32 %876, -1
  %878 = icmp slt i32 %875, %877
  br i1 %878, label %901, label %879

879:                                              ; preds = %874
  %880 = icmp eq i32 %875, %877
  br i1 %880, label %881, label %917

881:                                              ; preds = %879
  store i32 0, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %882, ptr %6, align 4, !tbaa !5
  br i1 %643, label %924, label %883

883:                                              ; preds = %881, %911
  %884 = phi i64 [ %915, %911 ], [ 1, %881 ]
  %885 = getelementptr inbounds i32, ptr %4, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !5
  %887 = getelementptr inbounds i32, ptr %12, i64 %884
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %886, %889
  br i1 %890, label %891, label %909

891:                                              ; preds = %883
  br i1 %878, label %901, label %892

892:                                              ; preds = %891
  %893 = shl i64 %884, 32
  %894 = add i64 %893, -4294967296
  %895 = ashr exact i64 %894, 32
  %896 = getelementptr inbounds i32, ptr %7, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %6, i64 %884
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, %897
  store i32 %900, ptr %898, align 4, !tbaa !5
  br label %919

901:                                              ; preds = %874, %891
  %902 = phi i32 [ %886, %891 ], [ %875, %874 ]
  %903 = phi ptr [ %885, %891 ], [ %4, %874 ]
  %904 = phi i64 [ %884, %891 ], [ 0, %874 ]
  %905 = add nsw i32 %902, 1
  store i32 %905, ptr %903, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %7, i64 %904
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %904
  br label %919

909:                                              ; preds = %883
  %910 = icmp eq i32 %886, %889
  br i1 %910, label %911, label %917

911:                                              ; preds = %909
  store i32 0, ptr %885, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %8, i64 %884
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %884
  store i32 %913, ptr %914, align 4, !tbaa !5
  %915 = add nuw nsw i64 %884, 1
  %916 = icmp eq i64 %915, %641
  br i1 %916, label %924, label %883, !llvm.loop !972

917:                                              ; preds = %879, %909
  %918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

919:                                              ; preds = %892, %901
  %920 = phi ptr [ %908, %901 ], [ %885, %892 ]
  %921 = phi i32 [ %907, %901 ], [ 1, %892 ]
  %922 = load i32, ptr %920, align 4, !tbaa !5
  %923 = add nsw i32 %922, %921
  store i32 %923, ptr %920, align 4, !tbaa !5
  br label %924

924:                                              ; preds = %911, %919, %881, %866
  %925 = icmp eq i32 %873, %5
  br i1 %925, label %5401, label %789, !llvm.loop !973

926:                                              ; preds = %629
  %927 = getelementptr inbounds i32, ptr %3, i64 %19
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = icmp eq i32 %928, 0
  %930 = icmp sgt i32 %5, 0
  br i1 %929, label %940, label %931

931:                                              ; preds = %926
  br i1 %930, label %932, label %5401

932:                                              ; preds = %931
  %933 = icmp sgt i32 %13, 1
  %934 = icmp sgt i32 %13, 0
  %935 = add i32 %13, -2
  %936 = zext i32 %935 to i64
  %937 = zext i32 %13 to i64
  %938 = add nuw i32 %5, 1
  %939 = icmp eq i32 %13, 1
  br label %1079

940:                                              ; preds = %926
  br i1 %930, label %941, label %5401

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %949

949:                                              ; preds = %941, %1077
  %950 = phi i32 [ 0, %941 ], [ %1029, %1077 ]
  %951 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %952, label %1021

952:                                              ; preds = %949, %1011
  %953 = phi i32 [ %1020, %1011 ], [ 0, %949 ]
  %954 = phi i64 [ %962, %1011 ], [ %946, %949 ]
  %955 = phi i64 [ %1019, %1011 ], [ %945, %949 ]
  %956 = phi i32 [ %1017, %1011 ], [ %951, %949 ]
  %957 = sub i32 %944, %953
  %958 = tail call i32 @llvm.smin.i32(i32 %957, i32 0)
  %959 = sub i32 %957, %958
  %960 = zext i32 %959 to i64
  %961 = add nuw nsw i64 %960, 1
  %962 = add nsw i64 %954, -1
  %963 = icmp ult i32 %959, 31
  br i1 %963, label %999, label %964

964:                                              ; preds = %952
  %965 = and i64 %961, 8589934560
  %966 = sub i64 %955, %965
  br label %967

967:                                              ; preds = %967, %964
  %968 = phi i64 [ 0, %964 ], [ %991, %967 ]
  %969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %987, %967 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %988, %967 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %989, %967 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %990, %967 ]
  %973 = sub i64 %955, %968
  %974 = getelementptr inbounds i32, ptr %9, i64 %973
  %975 = getelementptr inbounds i32, ptr %974, i64 -7
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %974, i64 -15
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = getelementptr inbounds i32, ptr %974, i64 -23
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = getelementptr inbounds i32, ptr %974, i64 -31
  %985 = load <8 x i32>, ptr %984, align 4, !tbaa !5
  %986 = shufflevector <8 x i32> %985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %987 = mul <8 x i32> %977, %969
  %988 = mul <8 x i32> %980, %970
  %989 = mul <8 x i32> %983, %971
  %990 = mul <8 x i32> %986, %972
  %991 = add nuw i64 %968, 32
  %992 = icmp eq i64 %991, %965
  br i1 %992, label %993, label %967, !llvm.loop !974

993:                                              ; preds = %967
  %994 = mul <8 x i32> %988, %987
  %995 = mul <8 x i32> %989, %994
  %996 = mul <8 x i32> %990, %995
  %997 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %996)
  %998 = icmp eq i64 %961, %965
  br i1 %998, label %1011, label %999

999:                                              ; preds = %952, %993
  %1000 = phi i64 [ %955, %952 ], [ %966, %993 ]
  %1001 = phi i32 [ 1, %952 ], [ %997, %993 ]
  br label %1002

1002:                                             ; preds = %999, %1002
  %1003 = phi i64 [ %1008, %1002 ], [ %1000, %999 ]
  %1004 = phi i32 [ %1007, %1002 ], [ %1001, %999 ]
  %1005 = getelementptr inbounds i32, ptr %9, i64 %1003
  %1006 = load i32, ptr %1005, align 4, !tbaa !5
  %1007 = mul nsw i32 %1006, %1004
  %1008 = add nsw i64 %1003, -1
  %1009 = trunc i64 %1003 to i32
  %1010 = icmp sgt i32 %1009, 0
  br i1 %1010, label %1002, label %1011, !llvm.loop !975

1011:                                             ; preds = %1002, %993
  %1012 = phi i32 [ %997, %993 ], [ %1007, %1002 ]
  %1013 = and i64 %962, 4294967295
  %1014 = getelementptr inbounds i32, ptr %6, i64 %1013
  %1015 = load i32, ptr %1014, align 4, !tbaa !5
  %1016 = mul nsw i32 %1015, %1012
  %1017 = add nsw i32 %1016, %956
  %1018 = icmp sgt i64 %954, 2
  %1019 = add nsw i64 %955, -1
  %1020 = add i32 %953, 1
  br i1 %1018, label %952, label %1021, !llvm.loop !976

1021:                                             ; preds = %1011, %949
  %1022 = phi i32 [ %951, %949 ], [ %1017, %1011 ]
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds double, ptr %622, i64 %1023
  %1025 = load double, ptr %1024, align 8, !tbaa !18
  %1026 = fptosi double %1025 to i32
  %1027 = load i32, ptr %624, align 4, !tbaa !5
  %1028 = add nsw i32 %1027, %1026
  store i32 %1028, ptr %624, align 4, !tbaa !5
  %1029 = add nuw nsw i32 %950, 1
  br i1 %943, label %1030, label %1077

1030:                                             ; preds = %1021
  %1031 = load i32, ptr %4, align 4, !tbaa !5
  %1032 = load i32, ptr %12, align 4, !tbaa !5
  %1033 = add nsw i32 %1032, -1
  %1034 = icmp slt i32 %1031, %1033
  br i1 %1034, label %1054, label %1035

1035:                                             ; preds = %1030
  %1036 = icmp eq i32 %1031, %1033
  br i1 %1036, label %1037, label %1070

1037:                                             ; preds = %1035
  store i32 0, ptr %4, align 4, !tbaa !5
  %1038 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1038, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1077, label %1039

1039:                                             ; preds = %1037, %1064
  %1040 = phi i64 [ %1068, %1064 ], [ 1, %1037 ]
  %1041 = getelementptr inbounds i32, ptr %4, i64 %1040
  %1042 = load i32, ptr %1041, align 4, !tbaa !5
  %1043 = getelementptr inbounds i32, ptr %12, i64 %1040
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = add nsw i32 %1044, -1
  %1046 = icmp slt i32 %1042, %1045
  br i1 %1046, label %1047, label %1062

1047:                                             ; preds = %1039
  br i1 %1034, label %1054, label %1048

1048:                                             ; preds = %1047
  %1049 = getelementptr inbounds i32, ptr %7, i64 %1040
  %1050 = load i32, ptr %1049, align 4, !tbaa !5
  %1051 = getelementptr inbounds i32, ptr %6, i64 %1040
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, %1050
  store i32 %1053, ptr %1051, align 4, !tbaa !5
  br label %1072

1054:                                             ; preds = %1030, %1047
  %1055 = phi i32 [ %1042, %1047 ], [ %1031, %1030 ]
  %1056 = phi ptr [ %1041, %1047 ], [ %4, %1030 ]
  %1057 = phi i64 [ %1040, %1047 ], [ 0, %1030 ]
  %1058 = add nsw i32 %1055, 1
  store i32 %1058, ptr %1056, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %7, i64 %1057
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %6, i64 %1057
  br label %1072

1062:                                             ; preds = %1039
  %1063 = icmp eq i32 %1042, %1045
  br i1 %1063, label %1064, label %1070

1064:                                             ; preds = %1062
  store i32 0, ptr %1041, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %8, i64 %1040
  %1066 = load i32, ptr %1065, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %6, i64 %1040
  store i32 %1066, ptr %1067, align 4, !tbaa !5
  %1068 = add nuw nsw i64 %1040, 1
  %1069 = icmp eq i64 %1068, %946
  br i1 %1069, label %1077, label %1039, !llvm.loop !977

1070:                                             ; preds = %1035, %1062
  %1071 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1072:                                             ; preds = %1048, %1054
  %1073 = phi ptr [ %1061, %1054 ], [ %1041, %1048 ]
  %1074 = phi i32 [ %1060, %1054 ], [ 1, %1048 ]
  %1075 = load i32, ptr %1073, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, %1074
  store i32 %1076, ptr %1073, align 4, !tbaa !5
  br label %1077

1077:                                             ; preds = %1064, %1072, %1037, %1021
  %1078 = icmp eq i32 %1029, %5
  br i1 %1078, label %5401, label %949, !llvm.loop !978

1079:                                             ; preds = %932, %1214
  %1080 = phi i32 [ 0, %932 ], [ %1163, %1214 ]
  %1081 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1082, label %1151

1082:                                             ; preds = %1079, %1141
  %1083 = phi i32 [ %1150, %1141 ], [ 0, %1079 ]
  %1084 = phi i64 [ %1092, %1141 ], [ %937, %1079 ]
  %1085 = phi i64 [ %1149, %1141 ], [ %936, %1079 ]
  %1086 = phi i32 [ %1147, %1141 ], [ %1081, %1079 ]
  %1087 = sub i32 %935, %1083
  %1088 = tail call i32 @llvm.smin.i32(i32 %1087, i32 0)
  %1089 = sub i32 %1087, %1088
  %1090 = zext i32 %1089 to i64
  %1091 = add nuw nsw i64 %1090, 1
  %1092 = add nsw i64 %1084, -1
  %1093 = icmp ult i32 %1089, 31
  br i1 %1093, label %1129, label %1094

1094:                                             ; preds = %1082
  %1095 = and i64 %1091, 8589934560
  %1096 = sub i64 %1085, %1095
  br label %1097

1097:                                             ; preds = %1097, %1094
  %1098 = phi i64 [ 0, %1094 ], [ %1121, %1097 ]
  %1099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1117, %1097 ]
  %1100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1118, %1097 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1119, %1097 ]
  %1102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1120, %1097 ]
  %1103 = sub i64 %1085, %1098
  %1104 = getelementptr inbounds i32, ptr %11, i64 %1103
  %1105 = getelementptr inbounds i32, ptr %1104, i64 -7
  %1106 = load <8 x i32>, ptr %1105, align 4, !tbaa !5
  %1107 = shufflevector <8 x i32> %1106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1108 = getelementptr inbounds i32, ptr %1104, i64 -15
  %1109 = load <8 x i32>, ptr %1108, align 4, !tbaa !5
  %1110 = shufflevector <8 x i32> %1109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1111 = getelementptr inbounds i32, ptr %1104, i64 -23
  %1112 = load <8 x i32>, ptr %1111, align 4, !tbaa !5
  %1113 = shufflevector <8 x i32> %1112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1114 = getelementptr inbounds i32, ptr %1104, i64 -31
  %1115 = load <8 x i32>, ptr %1114, align 4, !tbaa !5
  %1116 = shufflevector <8 x i32> %1115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1117 = mul <8 x i32> %1107, %1099
  %1118 = mul <8 x i32> %1110, %1100
  %1119 = mul <8 x i32> %1113, %1101
  %1120 = mul <8 x i32> %1116, %1102
  %1121 = add nuw i64 %1098, 32
  %1122 = icmp eq i64 %1121, %1095
  br i1 %1122, label %1123, label %1097, !llvm.loop !979

1123:                                             ; preds = %1097
  %1124 = mul <8 x i32> %1118, %1117
  %1125 = mul <8 x i32> %1119, %1124
  %1126 = mul <8 x i32> %1120, %1125
  %1127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1126)
  %1128 = icmp eq i64 %1091, %1095
  br i1 %1128, label %1141, label %1129

1129:                                             ; preds = %1082, %1123
  %1130 = phi i64 [ %1085, %1082 ], [ %1096, %1123 ]
  %1131 = phi i32 [ 1, %1082 ], [ %1127, %1123 ]
  br label %1132

1132:                                             ; preds = %1129, %1132
  %1133 = phi i64 [ %1138, %1132 ], [ %1130, %1129 ]
  %1134 = phi i32 [ %1137, %1132 ], [ %1131, %1129 ]
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1133
  %1136 = load i32, ptr %1135, align 4, !tbaa !5
  %1137 = mul nsw i32 %1136, %1134
  %1138 = add nsw i64 %1133, -1
  %1139 = trunc i64 %1133 to i32
  %1140 = icmp sgt i32 %1139, 0
  br i1 %1140, label %1132, label %1141, !llvm.loop !980

1141:                                             ; preds = %1132, %1123
  %1142 = phi i32 [ %1127, %1123 ], [ %1137, %1132 ]
  %1143 = and i64 %1092, 4294967295
  %1144 = getelementptr inbounds i32, ptr %6, i64 %1143
  %1145 = load i32, ptr %1144, align 4, !tbaa !5
  %1146 = mul nsw i32 %1145, %1142
  %1147 = add nsw i32 %1146, %1086
  %1148 = icmp sgt i64 %1084, 2
  %1149 = add nsw i64 %1085, -1
  %1150 = add i32 %1083, 1
  br i1 %1148, label %1082, label %1151, !llvm.loop !981

1151:                                             ; preds = %1141, %1079
  %1152 = phi i32 [ %1081, %1079 ], [ %1147, %1141 ]
  %1153 = icmp slt i32 %1152, %5
  br i1 %1153, label %1156, label %1154

1154:                                             ; preds = %1151
  %1155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

1156:                                             ; preds = %1151
  %1157 = sext i32 %1152 to i64
  %1158 = getelementptr inbounds double, ptr %622, i64 %1157
  %1159 = load double, ptr %1158, align 8, !tbaa !18
  %1160 = fptosi double %1159 to i32
  %1161 = load i32, ptr %624, align 4, !tbaa !5
  %1162 = add nsw i32 %1161, %1160
  store i32 %1162, ptr %624, align 4, !tbaa !5
  %1163 = add nuw nsw i32 %1080, 1
  br i1 %934, label %1164, label %1214

1164:                                             ; preds = %1156
  %1165 = load i32, ptr %4, align 4, !tbaa !5
  %1166 = load i32, ptr %12, align 4, !tbaa !5
  %1167 = add nsw i32 %1166, -1
  %1168 = icmp slt i32 %1165, %1167
  br i1 %1168, label %1191, label %1169

1169:                                             ; preds = %1164
  %1170 = icmp eq i32 %1165, %1167
  br i1 %1170, label %1171, label %1207

1171:                                             ; preds = %1169
  store i32 0, ptr %4, align 4, !tbaa !5
  %1172 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1172, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1214, label %1173

1173:                                             ; preds = %1171, %1201
  %1174 = phi i64 [ %1205, %1201 ], [ 1, %1171 ]
  %1175 = getelementptr inbounds i32, ptr %4, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !5
  %1177 = getelementptr inbounds i32, ptr %12, i64 %1174
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = add nsw i32 %1178, -1
  %1180 = icmp slt i32 %1176, %1179
  br i1 %1180, label %1181, label %1199

1181:                                             ; preds = %1173
  br i1 %1168, label %1191, label %1182

1182:                                             ; preds = %1181
  %1183 = shl i64 %1174, 32
  %1184 = add i64 %1183, -4294967296
  %1185 = ashr exact i64 %1184, 32
  %1186 = getelementptr inbounds i32, ptr %7, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !5
  %1188 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = add nsw i32 %1189, %1187
  store i32 %1190, ptr %1188, align 4, !tbaa !5
  br label %1209

1191:                                             ; preds = %1164, %1181
  %1192 = phi i32 [ %1176, %1181 ], [ %1165, %1164 ]
  %1193 = phi ptr [ %1175, %1181 ], [ %4, %1164 ]
  %1194 = phi i64 [ %1174, %1181 ], [ 0, %1164 ]
  %1195 = add nsw i32 %1192, 1
  store i32 %1195, ptr %1193, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %7, i64 %1194
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %6, i64 %1194
  br label %1209

1199:                                             ; preds = %1173
  %1200 = icmp eq i32 %1176, %1179
  br i1 %1200, label %1201, label %1207

1201:                                             ; preds = %1199
  store i32 0, ptr %1175, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %8, i64 %1174
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %6, i64 %1174
  store i32 %1203, ptr %1204, align 4, !tbaa !5
  %1205 = add nuw nsw i64 %1174, 1
  %1206 = icmp eq i64 %1205, %937
  br i1 %1206, label %1214, label %1173, !llvm.loop !982

1207:                                             ; preds = %1169, %1199
  %1208 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1209:                                             ; preds = %1182, %1191
  %1210 = phi ptr [ %1198, %1191 ], [ %1175, %1182 ]
  %1211 = phi i32 [ %1197, %1191 ], [ 1, %1182 ]
  %1212 = load i32, ptr %1210, align 4, !tbaa !5
  %1213 = add nsw i32 %1212, %1211
  store i32 %1213, ptr %1210, align 4, !tbaa !5
  br label %1214

1214:                                             ; preds = %1201, %1209, %1171, %1156
  %1215 = icmp eq i32 %1163, %5
  br i1 %1215, label %5401, label %1079, !llvm.loop !983

1216:                                             ; preds = %629
  %1217 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1485, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

1218:                                             ; preds = %18
  %1219 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1220 = load ptr, ptr %1219, align 8, !tbaa !9
  %1221 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1222 = load ptr, ptr %1221, align 8, !tbaa !9
  store i8 0, ptr %1222, align 1, !tbaa !11
  %1223 = icmp eq i32 %13, 0
  br i1 %1223, label %1224, label %1227

1224:                                             ; preds = %1218
  %1225 = load double, ptr %1220, align 8, !tbaa !18
  %1226 = fptosi double %1225 to i8
  store i8 %1226, ptr %1222, align 1, !tbaa !11
  br label %5401

1227:                                             ; preds = %1218
  switch i32 %1, label %1814 [
    i32 1, label %1228
    i32 0, label %1524
  ]

1228:                                             ; preds = %1227
  %1229 = getelementptr inbounds i32, ptr %3, i64 %19
  %1230 = load i32, ptr %1229, align 4, !tbaa !5
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp sgt i32 %5, 0
  br i1 %1231, label %1242, label %1233

1233:                                             ; preds = %1228
  br i1 %1232, label %1234, label %5401

1234:                                             ; preds = %1233
  %1235 = icmp sgt i32 %13, 1
  %1236 = icmp sgt i32 %13, 0
  %1237 = add i32 %13, -2
  %1238 = zext i32 %1237 to i64
  %1239 = zext i32 %13 to i64
  %1240 = add nuw i32 %5, 1
  %1241 = icmp eq i32 %13, 1
  br label %1387

1242:                                             ; preds = %1228
  br i1 %1232, label %1243, label %5401

1243:                                             ; preds = %1242
  %1244 = icmp sgt i32 %13, 1
  %1245 = icmp sgt i32 %13, 0
  %1246 = add i32 %13, -2
  %1247 = zext i32 %1246 to i64
  %1248 = zext i32 %13 to i64
  %1249 = add nuw i32 %5, 1
  %1250 = icmp eq i32 %13, 1
  br label %1251

1251:                                             ; preds = %1243, %1385
  %1252 = phi i32 [ 0, %1243 ], [ %1337, %1385 ]
  %1253 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1254, label %1323

1254:                                             ; preds = %1251, %1313
  %1255 = phi i32 [ %1322, %1313 ], [ 0, %1251 ]
  %1256 = phi i64 [ %1264, %1313 ], [ %1248, %1251 ]
  %1257 = phi i64 [ %1321, %1313 ], [ %1247, %1251 ]
  %1258 = phi i32 [ %1319, %1313 ], [ %1253, %1251 ]
  %1259 = sub i32 %1246, %1255
  %1260 = tail call i32 @llvm.smin.i32(i32 %1259, i32 0)
  %1261 = sub i32 %1259, %1260
  %1262 = zext i32 %1261 to i64
  %1263 = add nuw nsw i64 %1262, 1
  %1264 = add nsw i64 %1256, -1
  %1265 = icmp ult i32 %1261, 31
  br i1 %1265, label %1301, label %1266

1266:                                             ; preds = %1254
  %1267 = and i64 %1263, 8589934560
  %1268 = sub i64 %1257, %1267
  br label %1269

1269:                                             ; preds = %1269, %1266
  %1270 = phi i64 [ 0, %1266 ], [ %1293, %1269 ]
  %1271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1289, %1269 ]
  %1272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1290, %1269 ]
  %1273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1291, %1269 ]
  %1274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1292, %1269 ]
  %1275 = sub i64 %1257, %1270
  %1276 = getelementptr inbounds i32, ptr %9, i64 %1275
  %1277 = getelementptr inbounds i32, ptr %1276, i64 -7
  %1278 = load <8 x i32>, ptr %1277, align 4, !tbaa !5
  %1279 = shufflevector <8 x i32> %1278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1280 = getelementptr inbounds i32, ptr %1276, i64 -15
  %1281 = load <8 x i32>, ptr %1280, align 4, !tbaa !5
  %1282 = shufflevector <8 x i32> %1281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1283 = getelementptr inbounds i32, ptr %1276, i64 -23
  %1284 = load <8 x i32>, ptr %1283, align 4, !tbaa !5
  %1285 = shufflevector <8 x i32> %1284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1286 = getelementptr inbounds i32, ptr %1276, i64 -31
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = mul <8 x i32> %1279, %1271
  %1290 = mul <8 x i32> %1282, %1272
  %1291 = mul <8 x i32> %1285, %1273
  %1292 = mul <8 x i32> %1288, %1274
  %1293 = add nuw i64 %1270, 32
  %1294 = icmp eq i64 %1293, %1267
  br i1 %1294, label %1295, label %1269, !llvm.loop !984

1295:                                             ; preds = %1269
  %1296 = mul <8 x i32> %1290, %1289
  %1297 = mul <8 x i32> %1291, %1296
  %1298 = mul <8 x i32> %1292, %1297
  %1299 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1298)
  %1300 = icmp eq i64 %1263, %1267
  br i1 %1300, label %1313, label %1301

1301:                                             ; preds = %1254, %1295
  %1302 = phi i64 [ %1257, %1254 ], [ %1268, %1295 ]
  %1303 = phi i32 [ 1, %1254 ], [ %1299, %1295 ]
  br label %1304

1304:                                             ; preds = %1301, %1304
  %1305 = phi i64 [ %1310, %1304 ], [ %1302, %1301 ]
  %1306 = phi i32 [ %1309, %1304 ], [ %1303, %1301 ]
  %1307 = getelementptr inbounds i32, ptr %9, i64 %1305
  %1308 = load i32, ptr %1307, align 4, !tbaa !5
  %1309 = mul nsw i32 %1308, %1306
  %1310 = add nsw i64 %1305, -1
  %1311 = trunc i64 %1305 to i32
  %1312 = icmp sgt i32 %1311, 0
  br i1 %1312, label %1304, label %1313, !llvm.loop !985

1313:                                             ; preds = %1304, %1295
  %1314 = phi i32 [ %1299, %1295 ], [ %1309, %1304 ]
  %1315 = and i64 %1264, 4294967295
  %1316 = getelementptr inbounds i32, ptr %6, i64 %1315
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1314
  %1319 = add nsw i32 %1318, %1258
  %1320 = icmp sgt i64 %1256, 2
  %1321 = add nsw i64 %1257, -1
  %1322 = add i32 %1255, 1
  br i1 %1320, label %1254, label %1323, !llvm.loop !986

1323:                                             ; preds = %1313, %1251
  %1324 = phi i32 [ %1253, %1251 ], [ %1319, %1313 ]
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds double, ptr %2, i64 %1325
  %1327 = load double, ptr %1326, align 8, !tbaa !18
  %1328 = getelementptr inbounds double, ptr %1220, i64 %1325
  %1329 = load double, ptr %1328, align 8, !tbaa !18
  %1330 = fptosi double %1329 to i8
  %1331 = load i8, ptr %1222, align 1, !tbaa !11
  %1332 = sitofp i8 %1331 to double
  %1333 = sitofp i8 %1330 to double
  %1334 = fmul fast double %1327, %1333
  %1335 = fadd fast double %1334, %1332
  %1336 = fptosi double %1335 to i8
  store i8 %1336, ptr %1222, align 1, !tbaa !11
  %1337 = add nuw nsw i32 %1252, 1
  br i1 %1245, label %1338, label %1385

1338:                                             ; preds = %1323
  %1339 = load i32, ptr %4, align 4, !tbaa !5
  %1340 = load i32, ptr %12, align 4, !tbaa !5
  %1341 = add nsw i32 %1340, -1
  %1342 = icmp slt i32 %1339, %1341
  br i1 %1342, label %1362, label %1343

1343:                                             ; preds = %1338
  %1344 = icmp eq i32 %1339, %1341
  br i1 %1344, label %1345, label %1378

1345:                                             ; preds = %1343
  store i32 0, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1346, ptr %6, align 4, !tbaa !5
  br i1 %1250, label %1385, label %1347

1347:                                             ; preds = %1345, %1372
  %1348 = phi i64 [ %1376, %1372 ], [ 1, %1345 ]
  %1349 = getelementptr inbounds i32, ptr %4, i64 %1348
  %1350 = load i32, ptr %1349, align 4, !tbaa !5
  %1351 = getelementptr inbounds i32, ptr %12, i64 %1348
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = add nsw i32 %1352, -1
  %1354 = icmp slt i32 %1350, %1353
  br i1 %1354, label %1355, label %1370

1355:                                             ; preds = %1347
  br i1 %1342, label %1362, label %1356

1356:                                             ; preds = %1355
  %1357 = getelementptr inbounds i32, ptr %7, i64 %1348
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = getelementptr inbounds i32, ptr %6, i64 %1348
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = add nsw i32 %1360, %1358
  store i32 %1361, ptr %1359, align 4, !tbaa !5
  br label %1380

1362:                                             ; preds = %1338, %1355
  %1363 = phi i32 [ %1350, %1355 ], [ %1339, %1338 ]
  %1364 = phi ptr [ %1349, %1355 ], [ %4, %1338 ]
  %1365 = phi i64 [ %1348, %1355 ], [ 0, %1338 ]
  %1366 = add nsw i32 %1363, 1
  store i32 %1366, ptr %1364, align 4, !tbaa !5
  %1367 = getelementptr inbounds i32, ptr %7, i64 %1365
  %1368 = load i32, ptr %1367, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %6, i64 %1365
  br label %1380

1370:                                             ; preds = %1347
  %1371 = icmp eq i32 %1350, %1353
  br i1 %1371, label %1372, label %1378

1372:                                             ; preds = %1370
  store i32 0, ptr %1349, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %8, i64 %1348
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1348
  store i32 %1374, ptr %1375, align 4, !tbaa !5
  %1376 = add nuw nsw i64 %1348, 1
  %1377 = icmp eq i64 %1376, %1248
  br i1 %1377, label %1385, label %1347, !llvm.loop !987

1378:                                             ; preds = %1343, %1370
  %1379 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1380:                                             ; preds = %1356, %1362
  %1381 = phi ptr [ %1369, %1362 ], [ %1349, %1356 ]
  %1382 = phi i32 [ %1368, %1362 ], [ 1, %1356 ]
  %1383 = load i32, ptr %1381, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1382
  store i32 %1384, ptr %1381, align 4, !tbaa !5
  br label %1385

1385:                                             ; preds = %1372, %1380, %1345, %1323
  %1386 = icmp eq i32 %1337, %5
  br i1 %1386, label %5401, label %1251, !llvm.loop !988

1387:                                             ; preds = %1234, %1522
  %1388 = phi i32 [ 0, %1234 ], [ %1471, %1522 ]
  %1389 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1235, label %1390, label %1459

1390:                                             ; preds = %1387, %1449
  %1391 = phi i32 [ %1458, %1449 ], [ 0, %1387 ]
  %1392 = phi i64 [ %1400, %1449 ], [ %1239, %1387 ]
  %1393 = phi i64 [ %1457, %1449 ], [ %1238, %1387 ]
  %1394 = phi i32 [ %1455, %1449 ], [ %1389, %1387 ]
  %1395 = sub i32 %1237, %1391
  %1396 = tail call i32 @llvm.smin.i32(i32 %1395, i32 0)
  %1397 = sub i32 %1395, %1396
  %1398 = zext i32 %1397 to i64
  %1399 = add nuw nsw i64 %1398, 1
  %1400 = add nsw i64 %1392, -1
  %1401 = icmp ult i32 %1397, 31
  br i1 %1401, label %1437, label %1402

1402:                                             ; preds = %1390
  %1403 = and i64 %1399, 8589934560
  %1404 = sub i64 %1393, %1403
  br label %1405

1405:                                             ; preds = %1405, %1402
  %1406 = phi i64 [ 0, %1402 ], [ %1429, %1405 ]
  %1407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1425, %1405 ]
  %1408 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1426, %1405 ]
  %1409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1427, %1405 ]
  %1410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1428, %1405 ]
  %1411 = sub i64 %1393, %1406
  %1412 = getelementptr inbounds i32, ptr %11, i64 %1411
  %1413 = getelementptr inbounds i32, ptr %1412, i64 -7
  %1414 = load <8 x i32>, ptr %1413, align 4, !tbaa !5
  %1415 = shufflevector <8 x i32> %1414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1416 = getelementptr inbounds i32, ptr %1412, i64 -15
  %1417 = load <8 x i32>, ptr %1416, align 4, !tbaa !5
  %1418 = shufflevector <8 x i32> %1417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1419 = getelementptr inbounds i32, ptr %1412, i64 -23
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1412, i64 -31
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = mul <8 x i32> %1415, %1407
  %1426 = mul <8 x i32> %1418, %1408
  %1427 = mul <8 x i32> %1421, %1409
  %1428 = mul <8 x i32> %1424, %1410
  %1429 = add nuw i64 %1406, 32
  %1430 = icmp eq i64 %1429, %1403
  br i1 %1430, label %1431, label %1405, !llvm.loop !989

1431:                                             ; preds = %1405
  %1432 = mul <8 x i32> %1426, %1425
  %1433 = mul <8 x i32> %1427, %1432
  %1434 = mul <8 x i32> %1428, %1433
  %1435 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1434)
  %1436 = icmp eq i64 %1399, %1403
  br i1 %1436, label %1449, label %1437

1437:                                             ; preds = %1390, %1431
  %1438 = phi i64 [ %1393, %1390 ], [ %1404, %1431 ]
  %1439 = phi i32 [ 1, %1390 ], [ %1435, %1431 ]
  br label %1440

1440:                                             ; preds = %1437, %1440
  %1441 = phi i64 [ %1446, %1440 ], [ %1438, %1437 ]
  %1442 = phi i32 [ %1445, %1440 ], [ %1439, %1437 ]
  %1443 = getelementptr inbounds i32, ptr %11, i64 %1441
  %1444 = load i32, ptr %1443, align 4, !tbaa !5
  %1445 = mul nsw i32 %1444, %1442
  %1446 = add nsw i64 %1441, -1
  %1447 = trunc i64 %1441 to i32
  %1448 = icmp sgt i32 %1447, 0
  br i1 %1448, label %1440, label %1449, !llvm.loop !990

1449:                                             ; preds = %1440, %1431
  %1450 = phi i32 [ %1435, %1431 ], [ %1445, %1440 ]
  %1451 = and i64 %1400, 4294967295
  %1452 = getelementptr inbounds i32, ptr %6, i64 %1451
  %1453 = load i32, ptr %1452, align 4, !tbaa !5
  %1454 = mul nsw i32 %1453, %1450
  %1455 = add nsw i32 %1454, %1394
  %1456 = icmp sgt i64 %1392, 2
  %1457 = add nsw i64 %1393, -1
  %1458 = add i32 %1391, 1
  br i1 %1456, label %1390, label %1459, !llvm.loop !991

1459:                                             ; preds = %1449, %1387
  %1460 = phi i32 [ %1389, %1387 ], [ %1455, %1449 ]
  %1461 = icmp slt i32 %1460, %5
  br i1 %1461, label %1464, label %1462

1462:                                             ; preds = %1459
  %1463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

1464:                                             ; preds = %1459
  %1465 = sext i32 %1460 to i64
  %1466 = getelementptr inbounds double, ptr %1220, i64 %1465
  %1467 = load double, ptr %1466, align 8, !tbaa !18
  %1468 = fptosi double %1467 to i8
  %1469 = load i8, ptr %1222, align 1, !tbaa !11
  %1470 = add i8 %1469, %1468
  store i8 %1470, ptr %1222, align 1, !tbaa !11
  %1471 = add nuw nsw i32 %1388, 1
  br i1 %1236, label %1472, label %1522

1472:                                             ; preds = %1464
  %1473 = load i32, ptr %4, align 4, !tbaa !5
  %1474 = load i32, ptr %12, align 4, !tbaa !5
  %1475 = add nsw i32 %1474, -1
  %1476 = icmp slt i32 %1473, %1475
  br i1 %1476, label %1499, label %1477

1477:                                             ; preds = %1472
  %1478 = icmp eq i32 %1473, %1475
  br i1 %1478, label %1479, label %1515

1479:                                             ; preds = %1477
  store i32 0, ptr %4, align 4, !tbaa !5
  %1480 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1480, ptr %6, align 4, !tbaa !5
  br i1 %1241, label %1522, label %1481

1481:                                             ; preds = %1479, %1509
  %1482 = phi i64 [ %1513, %1509 ], [ 1, %1479 ]
  %1483 = getelementptr inbounds i32, ptr %4, i64 %1482
  %1484 = load i32, ptr %1483, align 4, !tbaa !5
  %1485 = getelementptr inbounds i32, ptr %12, i64 %1482
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = add nsw i32 %1486, -1
  %1488 = icmp slt i32 %1484, %1487
  br i1 %1488, label %1489, label %1507

1489:                                             ; preds = %1481
  br i1 %1476, label %1499, label %1490

1490:                                             ; preds = %1489
  %1491 = shl i64 %1482, 32
  %1492 = add i64 %1491, -4294967296
  %1493 = ashr exact i64 %1492, 32
  %1494 = getelementptr inbounds i32, ptr %7, i64 %1493
  %1495 = load i32, ptr %1494, align 4, !tbaa !5
  %1496 = getelementptr inbounds i32, ptr %6, i64 %1482
  %1497 = load i32, ptr %1496, align 4, !tbaa !5
  %1498 = add nsw i32 %1497, %1495
  store i32 %1498, ptr %1496, align 4, !tbaa !5
  br label %1517

1499:                                             ; preds = %1472, %1489
  %1500 = phi i32 [ %1484, %1489 ], [ %1473, %1472 ]
  %1501 = phi ptr [ %1483, %1489 ], [ %4, %1472 ]
  %1502 = phi i64 [ %1482, %1489 ], [ 0, %1472 ]
  %1503 = add nsw i32 %1500, 1
  store i32 %1503, ptr %1501, align 4, !tbaa !5
  %1504 = getelementptr inbounds i32, ptr %7, i64 %1502
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1502
  br label %1517

1507:                                             ; preds = %1481
  %1508 = icmp eq i32 %1484, %1487
  br i1 %1508, label %1509, label %1515

1509:                                             ; preds = %1507
  store i32 0, ptr %1483, align 4, !tbaa !5
  %1510 = getelementptr inbounds i32, ptr %8, i64 %1482
  %1511 = load i32, ptr %1510, align 4, !tbaa !5
  %1512 = getelementptr inbounds i32, ptr %6, i64 %1482
  store i32 %1511, ptr %1512, align 4, !tbaa !5
  %1513 = add nuw nsw i64 %1482, 1
  %1514 = icmp eq i64 %1513, %1239
  br i1 %1514, label %1522, label %1481, !llvm.loop !992

1515:                                             ; preds = %1477, %1507
  %1516 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1517:                                             ; preds = %1490, %1499
  %1518 = phi ptr [ %1506, %1499 ], [ %1483, %1490 ]
  %1519 = phi i32 [ %1505, %1499 ], [ 1, %1490 ]
  %1520 = load i32, ptr %1518, align 4, !tbaa !5
  %1521 = add nsw i32 %1520, %1519
  store i32 %1521, ptr %1518, align 4, !tbaa !5
  br label %1522

1522:                                             ; preds = %1509, %1517, %1479, %1464
  %1523 = icmp eq i32 %1471, %5
  br i1 %1523, label %5401, label %1387, !llvm.loop !993

1524:                                             ; preds = %1227
  %1525 = getelementptr inbounds i32, ptr %3, i64 %19
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = icmp eq i32 %1526, 0
  %1528 = icmp sgt i32 %5, 0
  br i1 %1527, label %1538, label %1529

1529:                                             ; preds = %1524
  br i1 %1528, label %1530, label %5401

1530:                                             ; preds = %1529
  %1531 = icmp sgt i32 %13, 1
  %1532 = icmp sgt i32 %13, 0
  %1533 = add i32 %13, -2
  %1534 = zext i32 %1533 to i64
  %1535 = zext i32 %13 to i64
  %1536 = add nuw i32 %5, 1
  %1537 = icmp eq i32 %13, 1
  br label %1677

1538:                                             ; preds = %1524
  br i1 %1528, label %1539, label %5401

1539:                                             ; preds = %1538
  %1540 = icmp sgt i32 %13, 1
  %1541 = icmp sgt i32 %13, 0
  %1542 = add i32 %13, -2
  %1543 = zext i32 %1542 to i64
  %1544 = zext i32 %13 to i64
  %1545 = add nuw i32 %5, 1
  %1546 = icmp eq i32 %13, 1
  br label %1547

1547:                                             ; preds = %1539, %1675
  %1548 = phi i32 [ 0, %1539 ], [ %1627, %1675 ]
  %1549 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1540, label %1550, label %1619

1550:                                             ; preds = %1547, %1609
  %1551 = phi i32 [ %1618, %1609 ], [ 0, %1547 ]
  %1552 = phi i64 [ %1560, %1609 ], [ %1544, %1547 ]
  %1553 = phi i64 [ %1617, %1609 ], [ %1543, %1547 ]
  %1554 = phi i32 [ %1615, %1609 ], [ %1549, %1547 ]
  %1555 = sub i32 %1542, %1551
  %1556 = tail call i32 @llvm.smin.i32(i32 %1555, i32 0)
  %1557 = sub i32 %1555, %1556
  %1558 = zext i32 %1557 to i64
  %1559 = add nuw nsw i64 %1558, 1
  %1560 = add nsw i64 %1552, -1
  %1561 = icmp ult i32 %1557, 31
  br i1 %1561, label %1597, label %1562

1562:                                             ; preds = %1550
  %1563 = and i64 %1559, 8589934560
  %1564 = sub i64 %1553, %1563
  br label %1565

1565:                                             ; preds = %1565, %1562
  %1566 = phi i64 [ 0, %1562 ], [ %1589, %1565 ]
  %1567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1585, %1565 ]
  %1568 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1586, %1565 ]
  %1569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1587, %1565 ]
  %1570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1588, %1565 ]
  %1571 = sub i64 %1553, %1566
  %1572 = getelementptr inbounds i32, ptr %9, i64 %1571
  %1573 = getelementptr inbounds i32, ptr %1572, i64 -7
  %1574 = load <8 x i32>, ptr %1573, align 4, !tbaa !5
  %1575 = shufflevector <8 x i32> %1574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1576 = getelementptr inbounds i32, ptr %1572, i64 -15
  %1577 = load <8 x i32>, ptr %1576, align 4, !tbaa !5
  %1578 = shufflevector <8 x i32> %1577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1579 = getelementptr inbounds i32, ptr %1572, i64 -23
  %1580 = load <8 x i32>, ptr %1579, align 4, !tbaa !5
  %1581 = shufflevector <8 x i32> %1580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1582 = getelementptr inbounds i32, ptr %1572, i64 -31
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !5
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = mul <8 x i32> %1575, %1567
  %1586 = mul <8 x i32> %1578, %1568
  %1587 = mul <8 x i32> %1581, %1569
  %1588 = mul <8 x i32> %1584, %1570
  %1589 = add nuw i64 %1566, 32
  %1590 = icmp eq i64 %1589, %1563
  br i1 %1590, label %1591, label %1565, !llvm.loop !994

1591:                                             ; preds = %1565
  %1592 = mul <8 x i32> %1586, %1585
  %1593 = mul <8 x i32> %1587, %1592
  %1594 = mul <8 x i32> %1588, %1593
  %1595 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1594)
  %1596 = icmp eq i64 %1559, %1563
  br i1 %1596, label %1609, label %1597

1597:                                             ; preds = %1550, %1591
  %1598 = phi i64 [ %1553, %1550 ], [ %1564, %1591 ]
  %1599 = phi i32 [ 1, %1550 ], [ %1595, %1591 ]
  br label %1600

1600:                                             ; preds = %1597, %1600
  %1601 = phi i64 [ %1606, %1600 ], [ %1598, %1597 ]
  %1602 = phi i32 [ %1605, %1600 ], [ %1599, %1597 ]
  %1603 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1604 = load i32, ptr %1603, align 4, !tbaa !5
  %1605 = mul nsw i32 %1604, %1602
  %1606 = add nsw i64 %1601, -1
  %1607 = trunc i64 %1601 to i32
  %1608 = icmp sgt i32 %1607, 0
  br i1 %1608, label %1600, label %1609, !llvm.loop !995

1609:                                             ; preds = %1600, %1591
  %1610 = phi i32 [ %1595, %1591 ], [ %1605, %1600 ]
  %1611 = and i64 %1560, 4294967295
  %1612 = getelementptr inbounds i32, ptr %6, i64 %1611
  %1613 = load i32, ptr %1612, align 4, !tbaa !5
  %1614 = mul nsw i32 %1613, %1610
  %1615 = add nsw i32 %1614, %1554
  %1616 = icmp sgt i64 %1552, 2
  %1617 = add nsw i64 %1553, -1
  %1618 = add i32 %1551, 1
  br i1 %1616, label %1550, label %1619, !llvm.loop !996

1619:                                             ; preds = %1609, %1547
  %1620 = phi i32 [ %1549, %1547 ], [ %1615, %1609 ]
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds double, ptr %1220, i64 %1621
  %1623 = load double, ptr %1622, align 8, !tbaa !18
  %1624 = fptosi double %1623 to i8
  %1625 = load i8, ptr %1222, align 1, !tbaa !11
  %1626 = add i8 %1625, %1624
  store i8 %1626, ptr %1222, align 1, !tbaa !11
  %1627 = add nuw nsw i32 %1548, 1
  br i1 %1541, label %1628, label %1675

1628:                                             ; preds = %1619
  %1629 = load i32, ptr %4, align 4, !tbaa !5
  %1630 = load i32, ptr %12, align 4, !tbaa !5
  %1631 = add nsw i32 %1630, -1
  %1632 = icmp slt i32 %1629, %1631
  br i1 %1632, label %1652, label %1633

1633:                                             ; preds = %1628
  %1634 = icmp eq i32 %1629, %1631
  br i1 %1634, label %1635, label %1668

1635:                                             ; preds = %1633
  store i32 0, ptr %4, align 4, !tbaa !5
  %1636 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1636, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1675, label %1637

1637:                                             ; preds = %1635, %1662
  %1638 = phi i64 [ %1666, %1662 ], [ 1, %1635 ]
  %1639 = getelementptr inbounds i32, ptr %4, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = getelementptr inbounds i32, ptr %12, i64 %1638
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = add nsw i32 %1642, -1
  %1644 = icmp slt i32 %1640, %1643
  br i1 %1644, label %1645, label %1660

1645:                                             ; preds = %1637
  br i1 %1632, label %1652, label %1646

1646:                                             ; preds = %1645
  %1647 = getelementptr inbounds i32, ptr %7, i64 %1638
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = add nsw i32 %1650, %1648
  store i32 %1651, ptr %1649, align 4, !tbaa !5
  br label %1670

1652:                                             ; preds = %1628, %1645
  %1653 = phi i32 [ %1640, %1645 ], [ %1629, %1628 ]
  %1654 = phi ptr [ %1639, %1645 ], [ %4, %1628 ]
  %1655 = phi i64 [ %1638, %1645 ], [ 0, %1628 ]
  %1656 = add nsw i32 %1653, 1
  store i32 %1656, ptr %1654, align 4, !tbaa !5
  %1657 = getelementptr inbounds i32, ptr %7, i64 %1655
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %6, i64 %1655
  br label %1670

1660:                                             ; preds = %1637
  %1661 = icmp eq i32 %1640, %1643
  br i1 %1661, label %1662, label %1668

1662:                                             ; preds = %1660
  store i32 0, ptr %1639, align 4, !tbaa !5
  %1663 = getelementptr inbounds i32, ptr %8, i64 %1638
  %1664 = load i32, ptr %1663, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %6, i64 %1638
  store i32 %1664, ptr %1665, align 4, !tbaa !5
  %1666 = add nuw nsw i64 %1638, 1
  %1667 = icmp eq i64 %1666, %1544
  br i1 %1667, label %1675, label %1637, !llvm.loop !997

1668:                                             ; preds = %1633, %1660
  %1669 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1670:                                             ; preds = %1646, %1652
  %1671 = phi ptr [ %1659, %1652 ], [ %1639, %1646 ]
  %1672 = phi i32 [ %1658, %1652 ], [ 1, %1646 ]
  %1673 = load i32, ptr %1671, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1672
  store i32 %1674, ptr %1671, align 4, !tbaa !5
  br label %1675

1675:                                             ; preds = %1662, %1670, %1635, %1619
  %1676 = icmp eq i32 %1627, %5
  br i1 %1676, label %5401, label %1547, !llvm.loop !998

1677:                                             ; preds = %1530, %1812
  %1678 = phi i32 [ 0, %1530 ], [ %1761, %1812 ]
  %1679 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1531, label %1680, label %1749

1680:                                             ; preds = %1677, %1739
  %1681 = phi i32 [ %1748, %1739 ], [ 0, %1677 ]
  %1682 = phi i64 [ %1690, %1739 ], [ %1535, %1677 ]
  %1683 = phi i64 [ %1747, %1739 ], [ %1534, %1677 ]
  %1684 = phi i32 [ %1745, %1739 ], [ %1679, %1677 ]
  %1685 = sub i32 %1533, %1681
  %1686 = tail call i32 @llvm.smin.i32(i32 %1685, i32 0)
  %1687 = sub i32 %1685, %1686
  %1688 = zext i32 %1687 to i64
  %1689 = add nuw nsw i64 %1688, 1
  %1690 = add nsw i64 %1682, -1
  %1691 = icmp ult i32 %1687, 31
  br i1 %1691, label %1727, label %1692

1692:                                             ; preds = %1680
  %1693 = and i64 %1689, 8589934560
  %1694 = sub i64 %1683, %1693
  br label %1695

1695:                                             ; preds = %1695, %1692
  %1696 = phi i64 [ 0, %1692 ], [ %1719, %1695 ]
  %1697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1715, %1695 ]
  %1698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1716, %1695 ]
  %1699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1717, %1695 ]
  %1700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1718, %1695 ]
  %1701 = sub i64 %1683, %1696
  %1702 = getelementptr inbounds i32, ptr %11, i64 %1701
  %1703 = getelementptr inbounds i32, ptr %1702, i64 -7
  %1704 = load <8 x i32>, ptr %1703, align 4, !tbaa !5
  %1705 = shufflevector <8 x i32> %1704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1706 = getelementptr inbounds i32, ptr %1702, i64 -15
  %1707 = load <8 x i32>, ptr %1706, align 4, !tbaa !5
  %1708 = shufflevector <8 x i32> %1707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1709 = getelementptr inbounds i32, ptr %1702, i64 -23
  %1710 = load <8 x i32>, ptr %1709, align 4, !tbaa !5
  %1711 = shufflevector <8 x i32> %1710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1712 = getelementptr inbounds i32, ptr %1702, i64 -31
  %1713 = load <8 x i32>, ptr %1712, align 4, !tbaa !5
  %1714 = shufflevector <8 x i32> %1713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1715 = mul <8 x i32> %1705, %1697
  %1716 = mul <8 x i32> %1708, %1698
  %1717 = mul <8 x i32> %1711, %1699
  %1718 = mul <8 x i32> %1714, %1700
  %1719 = add nuw i64 %1696, 32
  %1720 = icmp eq i64 %1719, %1693
  br i1 %1720, label %1721, label %1695, !llvm.loop !999

1721:                                             ; preds = %1695
  %1722 = mul <8 x i32> %1716, %1715
  %1723 = mul <8 x i32> %1717, %1722
  %1724 = mul <8 x i32> %1718, %1723
  %1725 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1724)
  %1726 = icmp eq i64 %1689, %1693
  br i1 %1726, label %1739, label %1727

1727:                                             ; preds = %1680, %1721
  %1728 = phi i64 [ %1683, %1680 ], [ %1694, %1721 ]
  %1729 = phi i32 [ 1, %1680 ], [ %1725, %1721 ]
  br label %1730

1730:                                             ; preds = %1727, %1730
  %1731 = phi i64 [ %1736, %1730 ], [ %1728, %1727 ]
  %1732 = phi i32 [ %1735, %1730 ], [ %1729, %1727 ]
  %1733 = getelementptr inbounds i32, ptr %11, i64 %1731
  %1734 = load i32, ptr %1733, align 4, !tbaa !5
  %1735 = mul nsw i32 %1734, %1732
  %1736 = add nsw i64 %1731, -1
  %1737 = trunc i64 %1731 to i32
  %1738 = icmp sgt i32 %1737, 0
  br i1 %1738, label %1730, label %1739, !llvm.loop !1000

1739:                                             ; preds = %1730, %1721
  %1740 = phi i32 [ %1725, %1721 ], [ %1735, %1730 ]
  %1741 = and i64 %1690, 4294967295
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1741
  %1743 = load i32, ptr %1742, align 4, !tbaa !5
  %1744 = mul nsw i32 %1743, %1740
  %1745 = add nsw i32 %1744, %1684
  %1746 = icmp sgt i64 %1682, 2
  %1747 = add nsw i64 %1683, -1
  %1748 = add i32 %1681, 1
  br i1 %1746, label %1680, label %1749, !llvm.loop !1001

1749:                                             ; preds = %1739, %1677
  %1750 = phi i32 [ %1679, %1677 ], [ %1745, %1739 ]
  %1751 = icmp slt i32 %1750, %5
  br i1 %1751, label %1754, label %1752

1752:                                             ; preds = %1749
  %1753 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

1754:                                             ; preds = %1749
  %1755 = sext i32 %1750 to i64
  %1756 = getelementptr inbounds double, ptr %1220, i64 %1755
  %1757 = load double, ptr %1756, align 8, !tbaa !18
  %1758 = fptosi double %1757 to i8
  %1759 = load i8, ptr %1222, align 1, !tbaa !11
  %1760 = add i8 %1759, %1758
  store i8 %1760, ptr %1222, align 1, !tbaa !11
  %1761 = add nuw nsw i32 %1678, 1
  br i1 %1532, label %1762, label %1812

1762:                                             ; preds = %1754
  %1763 = load i32, ptr %4, align 4, !tbaa !5
  %1764 = load i32, ptr %12, align 4, !tbaa !5
  %1765 = add nsw i32 %1764, -1
  %1766 = icmp slt i32 %1763, %1765
  br i1 %1766, label %1789, label %1767

1767:                                             ; preds = %1762
  %1768 = icmp eq i32 %1763, %1765
  br i1 %1768, label %1769, label %1805

1769:                                             ; preds = %1767
  store i32 0, ptr %4, align 4, !tbaa !5
  %1770 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1770, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1812, label %1771

1771:                                             ; preds = %1769, %1799
  %1772 = phi i64 [ %1803, %1799 ], [ 1, %1769 ]
  %1773 = getelementptr inbounds i32, ptr %4, i64 %1772
  %1774 = load i32, ptr %1773, align 4, !tbaa !5
  %1775 = getelementptr inbounds i32, ptr %12, i64 %1772
  %1776 = load i32, ptr %1775, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, -1
  %1778 = icmp slt i32 %1774, %1777
  br i1 %1778, label %1779, label %1797

1779:                                             ; preds = %1771
  br i1 %1766, label %1789, label %1780

1780:                                             ; preds = %1779
  %1781 = shl i64 %1772, 32
  %1782 = add i64 %1781, -4294967296
  %1783 = ashr exact i64 %1782, 32
  %1784 = getelementptr inbounds i32, ptr %7, i64 %1783
  %1785 = load i32, ptr %1784, align 4, !tbaa !5
  %1786 = getelementptr inbounds i32, ptr %6, i64 %1772
  %1787 = load i32, ptr %1786, align 4, !tbaa !5
  %1788 = add nsw i32 %1787, %1785
  store i32 %1788, ptr %1786, align 4, !tbaa !5
  br label %1807

1789:                                             ; preds = %1762, %1779
  %1790 = phi i32 [ %1774, %1779 ], [ %1763, %1762 ]
  %1791 = phi ptr [ %1773, %1779 ], [ %4, %1762 ]
  %1792 = phi i64 [ %1772, %1779 ], [ 0, %1762 ]
  %1793 = add nsw i32 %1790, 1
  store i32 %1793, ptr %1791, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %7, i64 %1792
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = getelementptr inbounds i32, ptr %6, i64 %1792
  br label %1807

1797:                                             ; preds = %1771
  %1798 = icmp eq i32 %1774, %1777
  br i1 %1798, label %1799, label %1805

1799:                                             ; preds = %1797
  store i32 0, ptr %1773, align 4, !tbaa !5
  %1800 = getelementptr inbounds i32, ptr %8, i64 %1772
  %1801 = load i32, ptr %1800, align 4, !tbaa !5
  %1802 = getelementptr inbounds i32, ptr %6, i64 %1772
  store i32 %1801, ptr %1802, align 4, !tbaa !5
  %1803 = add nuw nsw i64 %1772, 1
  %1804 = icmp eq i64 %1803, %1535
  br i1 %1804, label %1812, label %1771, !llvm.loop !1002

1805:                                             ; preds = %1767, %1797
  %1806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1807:                                             ; preds = %1780, %1789
  %1808 = phi ptr [ %1796, %1789 ], [ %1773, %1780 ]
  %1809 = phi i32 [ %1795, %1789 ], [ 1, %1780 ]
  %1810 = load i32, ptr %1808, align 4, !tbaa !5
  %1811 = add nsw i32 %1810, %1809
  store i32 %1811, ptr %1808, align 4, !tbaa !5
  br label %1812

1812:                                             ; preds = %1799, %1807, %1769, %1754
  %1813 = icmp eq i32 %1761, %5
  br i1 %1813, label %5401, label %1677, !llvm.loop !1003

1814:                                             ; preds = %1227
  %1815 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1489, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

1816:                                             ; preds = %18
  %1817 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1818 = load ptr, ptr %1817, align 8, !tbaa !9
  %1819 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1820 = load ptr, ptr %1819, align 8, !tbaa !9
  store i16 0, ptr %1820, align 2, !tbaa !78
  %1821 = icmp eq i32 %13, 0
  br i1 %1821, label %1822, label %1825

1822:                                             ; preds = %1816
  %1823 = load double, ptr %1818, align 8, !tbaa !18
  %1824 = fptosi double %1823 to i16
  store i16 %1824, ptr %1820, align 2, !tbaa !78
  br label %5401

1825:                                             ; preds = %1816
  switch i32 %1, label %2416 [
    i32 1, label %1826
    i32 0, label %2126
  ]

1826:                                             ; preds = %1825
  %1827 = getelementptr inbounds i32, ptr %3, i64 %19
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = icmp eq i32 %1828, 0
  %1830 = icmp sgt i32 %5, 0
  br i1 %1829, label %1840, label %1831

1831:                                             ; preds = %1826
  br i1 %1830, label %1832, label %5401

1832:                                             ; preds = %1831
  %1833 = icmp sgt i32 %13, 1
  %1834 = icmp sgt i32 %13, 0
  %1835 = add i32 %13, -2
  %1836 = zext i32 %1835 to i64
  %1837 = zext i32 %13 to i64
  %1838 = add nuw i32 %5, 1
  %1839 = icmp eq i32 %13, 1
  br label %1985

1840:                                             ; preds = %1826
  br i1 %1830, label %1841, label %5401

1841:                                             ; preds = %1840
  %1842 = icmp sgt i32 %13, 1
  %1843 = icmp sgt i32 %13, 0
  %1844 = add i32 %13, -2
  %1845 = zext i32 %1844 to i64
  %1846 = zext i32 %13 to i64
  %1847 = add nuw i32 %5, 1
  %1848 = icmp eq i32 %13, 1
  br label %1849

1849:                                             ; preds = %1841, %1983
  %1850 = phi i16 [ 0, %1841 ], [ %1934, %1983 ]
  %1851 = phi i32 [ 0, %1841 ], [ %1935, %1983 ]
  %1852 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1842, label %1853, label %1922

1853:                                             ; preds = %1849, %1912
  %1854 = phi i32 [ %1921, %1912 ], [ 0, %1849 ]
  %1855 = phi i64 [ %1863, %1912 ], [ %1846, %1849 ]
  %1856 = phi i64 [ %1920, %1912 ], [ %1845, %1849 ]
  %1857 = phi i32 [ %1918, %1912 ], [ %1852, %1849 ]
  %1858 = sub i32 %1844, %1854
  %1859 = tail call i32 @llvm.smin.i32(i32 %1858, i32 0)
  %1860 = sub i32 %1858, %1859
  %1861 = zext i32 %1860 to i64
  %1862 = add nuw nsw i64 %1861, 1
  %1863 = add nsw i64 %1855, -1
  %1864 = icmp ult i32 %1860, 31
  br i1 %1864, label %1900, label %1865

1865:                                             ; preds = %1853
  %1866 = and i64 %1862, 8589934560
  %1867 = sub i64 %1856, %1866
  br label %1868

1868:                                             ; preds = %1868, %1865
  %1869 = phi i64 [ 0, %1865 ], [ %1892, %1868 ]
  %1870 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1888, %1868 ]
  %1871 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1889, %1868 ]
  %1872 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1890, %1868 ]
  %1873 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1891, %1868 ]
  %1874 = sub i64 %1856, %1869
  %1875 = getelementptr inbounds i32, ptr %9, i64 %1874
  %1876 = getelementptr inbounds i32, ptr %1875, i64 -7
  %1877 = load <8 x i32>, ptr %1876, align 4, !tbaa !5
  %1878 = shufflevector <8 x i32> %1877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1879 = getelementptr inbounds i32, ptr %1875, i64 -15
  %1880 = load <8 x i32>, ptr %1879, align 4, !tbaa !5
  %1881 = shufflevector <8 x i32> %1880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1882 = getelementptr inbounds i32, ptr %1875, i64 -23
  %1883 = load <8 x i32>, ptr %1882, align 4, !tbaa !5
  %1884 = shufflevector <8 x i32> %1883, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1885 = getelementptr inbounds i32, ptr %1875, i64 -31
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = mul <8 x i32> %1878, %1870
  %1889 = mul <8 x i32> %1881, %1871
  %1890 = mul <8 x i32> %1884, %1872
  %1891 = mul <8 x i32> %1887, %1873
  %1892 = add nuw i64 %1869, 32
  %1893 = icmp eq i64 %1892, %1866
  br i1 %1893, label %1894, label %1868, !llvm.loop !1004

1894:                                             ; preds = %1868
  %1895 = mul <8 x i32> %1889, %1888
  %1896 = mul <8 x i32> %1890, %1895
  %1897 = mul <8 x i32> %1891, %1896
  %1898 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1897)
  %1899 = icmp eq i64 %1862, %1866
  br i1 %1899, label %1912, label %1900

1900:                                             ; preds = %1853, %1894
  %1901 = phi i64 [ %1856, %1853 ], [ %1867, %1894 ]
  %1902 = phi i32 [ 1, %1853 ], [ %1898, %1894 ]
  br label %1903

1903:                                             ; preds = %1900, %1903
  %1904 = phi i64 [ %1909, %1903 ], [ %1901, %1900 ]
  %1905 = phi i32 [ %1908, %1903 ], [ %1902, %1900 ]
  %1906 = getelementptr inbounds i32, ptr %9, i64 %1904
  %1907 = load i32, ptr %1906, align 4, !tbaa !5
  %1908 = mul nsw i32 %1907, %1905
  %1909 = add nsw i64 %1904, -1
  %1910 = trunc i64 %1904 to i32
  %1911 = icmp sgt i32 %1910, 0
  br i1 %1911, label %1903, label %1912, !llvm.loop !1005

1912:                                             ; preds = %1903, %1894
  %1913 = phi i32 [ %1898, %1894 ], [ %1908, %1903 ]
  %1914 = and i64 %1863, 4294967295
  %1915 = getelementptr inbounds i32, ptr %6, i64 %1914
  %1916 = load i32, ptr %1915, align 4, !tbaa !5
  %1917 = mul nsw i32 %1916, %1913
  %1918 = add nsw i32 %1917, %1857
  %1919 = icmp sgt i64 %1855, 2
  %1920 = add nsw i64 %1856, -1
  %1921 = add i32 %1854, 1
  br i1 %1919, label %1853, label %1922, !llvm.loop !1006

1922:                                             ; preds = %1912, %1849
  %1923 = phi i32 [ %1852, %1849 ], [ %1918, %1912 ]
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr inbounds double, ptr %2, i64 %1924
  %1926 = load double, ptr %1925, align 8, !tbaa !18
  %1927 = getelementptr inbounds double, ptr %1818, i64 %1924
  %1928 = load double, ptr %1927, align 8, !tbaa !18
  %1929 = fptosi double %1928 to i16
  %1930 = sitofp i16 %1850 to double
  %1931 = sitofp i16 %1929 to double
  %1932 = fmul fast double %1926, %1931
  %1933 = fadd fast double %1932, %1930
  %1934 = fptosi double %1933 to i16
  %1935 = add nuw nsw i32 %1851, 1
  br i1 %1843, label %1936, label %1983

1936:                                             ; preds = %1922
  %1937 = load i32, ptr %4, align 4, !tbaa !5
  %1938 = load i32, ptr %12, align 4, !tbaa !5
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1937, %1939
  br i1 %1940, label %1960, label %1941

1941:                                             ; preds = %1936
  %1942 = icmp eq i32 %1937, %1939
  br i1 %1942, label %1943, label %1976

1943:                                             ; preds = %1941
  store i32 0, ptr %4, align 4, !tbaa !5
  %1944 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1944, ptr %6, align 4, !tbaa !5
  br i1 %1848, label %1983, label %1945

1945:                                             ; preds = %1943, %1970
  %1946 = phi i64 [ %1974, %1970 ], [ 1, %1943 ]
  %1947 = getelementptr inbounds i32, ptr %4, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = getelementptr inbounds i32, ptr %12, i64 %1946
  %1950 = load i32, ptr %1949, align 4, !tbaa !5
  %1951 = add nsw i32 %1950, -1
  %1952 = icmp slt i32 %1948, %1951
  br i1 %1952, label %1953, label %1968

1953:                                             ; preds = %1945
  br i1 %1940, label %1960, label %1954

1954:                                             ; preds = %1953
  %1955 = getelementptr inbounds i32, ptr %7, i64 %1946
  %1956 = load i32, ptr %1955, align 4, !tbaa !5
  %1957 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1958 = load i32, ptr %1957, align 4, !tbaa !5
  %1959 = add nsw i32 %1958, %1956
  store i32 %1959, ptr %1957, align 4, !tbaa !5
  br label %1978

1960:                                             ; preds = %1936, %1953
  %1961 = phi i32 [ %1948, %1953 ], [ %1937, %1936 ]
  %1962 = phi ptr [ %1947, %1953 ], [ %4, %1936 ]
  %1963 = phi i64 [ %1946, %1953 ], [ 0, %1936 ]
  %1964 = add nsw i32 %1961, 1
  store i32 %1964, ptr %1962, align 4, !tbaa !5
  %1965 = getelementptr inbounds i32, ptr %7, i64 %1963
  %1966 = load i32, ptr %1965, align 4, !tbaa !5
  %1967 = getelementptr inbounds i32, ptr %6, i64 %1963
  br label %1978

1968:                                             ; preds = %1945
  %1969 = icmp eq i32 %1948, %1951
  br i1 %1969, label %1970, label %1976

1970:                                             ; preds = %1968
  store i32 0, ptr %1947, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %8, i64 %1946
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = getelementptr inbounds i32, ptr %6, i64 %1946
  store i32 %1972, ptr %1973, align 4, !tbaa !5
  %1974 = add nuw nsw i64 %1946, 1
  %1975 = icmp eq i64 %1974, %1846
  br i1 %1975, label %1983, label %1945, !llvm.loop !1007

1976:                                             ; preds = %1941, %1968
  store i16 %1934, ptr %1820, align 2, !tbaa !78
  %1977 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1978:                                             ; preds = %1954, %1960
  %1979 = phi ptr [ %1967, %1960 ], [ %1947, %1954 ]
  %1980 = phi i32 [ %1966, %1960 ], [ 1, %1954 ]
  %1981 = load i32, ptr %1979, align 4, !tbaa !5
  %1982 = add nsw i32 %1981, %1980
  store i32 %1982, ptr %1979, align 4, !tbaa !5
  br label %1983

1983:                                             ; preds = %1970, %1978, %1943, %1922
  %1984 = icmp eq i32 %1935, %5
  br i1 %1984, label %5395, label %1849, !llvm.loop !1008

1985:                                             ; preds = %1832, %2124
  %1986 = phi i32 [ 0, %1832 ], [ %2071, %2124 ]
  %1987 = phi i32 [ 0, %1832 ], [ %2073, %2124 ]
  %1988 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1833, label %1989, label %2058

1989:                                             ; preds = %1985, %2048
  %1990 = phi i32 [ %2057, %2048 ], [ 0, %1985 ]
  %1991 = phi i64 [ %1999, %2048 ], [ %1837, %1985 ]
  %1992 = phi i64 [ %2056, %2048 ], [ %1836, %1985 ]
  %1993 = phi i32 [ %2054, %2048 ], [ %1988, %1985 ]
  %1994 = sub i32 %1835, %1990
  %1995 = tail call i32 @llvm.smin.i32(i32 %1994, i32 0)
  %1996 = sub i32 %1994, %1995
  %1997 = zext i32 %1996 to i64
  %1998 = add nuw nsw i64 %1997, 1
  %1999 = add nsw i64 %1991, -1
  %2000 = icmp ult i32 %1996, 31
  br i1 %2000, label %2036, label %2001

2001:                                             ; preds = %1989
  %2002 = and i64 %1998, 8589934560
  %2003 = sub i64 %1992, %2002
  br label %2004

2004:                                             ; preds = %2004, %2001
  %2005 = phi i64 [ 0, %2001 ], [ %2028, %2004 ]
  %2006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2024, %2004 ]
  %2007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2025, %2004 ]
  %2008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2026, %2004 ]
  %2009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2027, %2004 ]
  %2010 = sub i64 %1992, %2005
  %2011 = getelementptr inbounds i32, ptr %11, i64 %2010
  %2012 = getelementptr inbounds i32, ptr %2011, i64 -7
  %2013 = load <8 x i32>, ptr %2012, align 4, !tbaa !5
  %2014 = shufflevector <8 x i32> %2013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2015 = getelementptr inbounds i32, ptr %2011, i64 -15
  %2016 = load <8 x i32>, ptr %2015, align 4, !tbaa !5
  %2017 = shufflevector <8 x i32> %2016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2018 = getelementptr inbounds i32, ptr %2011, i64 -23
  %2019 = load <8 x i32>, ptr %2018, align 4, !tbaa !5
  %2020 = shufflevector <8 x i32> %2019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2021 = getelementptr inbounds i32, ptr %2011, i64 -31
  %2022 = load <8 x i32>, ptr %2021, align 4, !tbaa !5
  %2023 = shufflevector <8 x i32> %2022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2024 = mul <8 x i32> %2014, %2006
  %2025 = mul <8 x i32> %2017, %2007
  %2026 = mul <8 x i32> %2020, %2008
  %2027 = mul <8 x i32> %2023, %2009
  %2028 = add nuw i64 %2005, 32
  %2029 = icmp eq i64 %2028, %2002
  br i1 %2029, label %2030, label %2004, !llvm.loop !1009

2030:                                             ; preds = %2004
  %2031 = mul <8 x i32> %2025, %2024
  %2032 = mul <8 x i32> %2026, %2031
  %2033 = mul <8 x i32> %2027, %2032
  %2034 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2033)
  %2035 = icmp eq i64 %1998, %2002
  br i1 %2035, label %2048, label %2036

2036:                                             ; preds = %1989, %2030
  %2037 = phi i64 [ %1992, %1989 ], [ %2003, %2030 ]
  %2038 = phi i32 [ 1, %1989 ], [ %2034, %2030 ]
  br label %2039

2039:                                             ; preds = %2036, %2039
  %2040 = phi i64 [ %2045, %2039 ], [ %2037, %2036 ]
  %2041 = phi i32 [ %2044, %2039 ], [ %2038, %2036 ]
  %2042 = getelementptr inbounds i32, ptr %11, i64 %2040
  %2043 = load i32, ptr %2042, align 4, !tbaa !5
  %2044 = mul nsw i32 %2043, %2041
  %2045 = add nsw i64 %2040, -1
  %2046 = trunc i64 %2040 to i32
  %2047 = icmp sgt i32 %2046, 0
  br i1 %2047, label %2039, label %2048, !llvm.loop !1010

2048:                                             ; preds = %2039, %2030
  %2049 = phi i32 [ %2034, %2030 ], [ %2044, %2039 ]
  %2050 = and i64 %1999, 4294967295
  %2051 = getelementptr inbounds i32, ptr %6, i64 %2050
  %2052 = load i32, ptr %2051, align 4, !tbaa !5
  %2053 = mul nsw i32 %2052, %2049
  %2054 = add nsw i32 %2053, %1993
  %2055 = icmp sgt i64 %1991, 2
  %2056 = add nsw i64 %1992, -1
  %2057 = add i32 %1990, 1
  br i1 %2055, label %1989, label %2058, !llvm.loop !1011

2058:                                             ; preds = %2048, %1985
  %2059 = phi i32 [ %1988, %1985 ], [ %2054, %2048 ]
  %2060 = icmp slt i32 %2059, %5
  br i1 %2060, label %2063, label %2061

2061:                                             ; preds = %2058
  %2062 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2063:                                             ; preds = %2058
  %2064 = sext i32 %2059 to i64
  %2065 = getelementptr inbounds double, ptr %1818, i64 %2064
  %2066 = load double, ptr %2065, align 8, !tbaa !18
  %2067 = fptosi double %2066 to i16
  %2068 = shl i32 %1986, 16
  %2069 = ashr exact i32 %2068, 16
  %2070 = sext i16 %2067 to i32
  %2071 = add nsw i32 %2069, %2070
  %2072 = trunc i32 %2071 to i16
  store i16 %2072, ptr %1820, align 2, !tbaa !78
  %2073 = add nuw nsw i32 %1987, 1
  br i1 %1834, label %2074, label %2124

2074:                                             ; preds = %2063
  %2075 = load i32, ptr %4, align 4, !tbaa !5
  %2076 = load i32, ptr %12, align 4, !tbaa !5
  %2077 = add nsw i32 %2076, -1
  %2078 = icmp slt i32 %2075, %2077
  br i1 %2078, label %2101, label %2079

2079:                                             ; preds = %2074
  %2080 = icmp eq i32 %2075, %2077
  br i1 %2080, label %2081, label %2117

2081:                                             ; preds = %2079
  store i32 0, ptr %4, align 4, !tbaa !5
  %2082 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2082, ptr %6, align 4, !tbaa !5
  br i1 %1839, label %2124, label %2083

2083:                                             ; preds = %2081, %2111
  %2084 = phi i64 [ %2115, %2111 ], [ 1, %2081 ]
  %2085 = getelementptr inbounds i32, ptr %4, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = getelementptr inbounds i32, ptr %12, i64 %2084
  %2088 = load i32, ptr %2087, align 4, !tbaa !5
  %2089 = add nsw i32 %2088, -1
  %2090 = icmp slt i32 %2086, %2089
  br i1 %2090, label %2091, label %2109

2091:                                             ; preds = %2083
  br i1 %2078, label %2101, label %2092

2092:                                             ; preds = %2091
  %2093 = shl i64 %2084, 32
  %2094 = add i64 %2093, -4294967296
  %2095 = ashr exact i64 %2094, 32
  %2096 = getelementptr inbounds i32, ptr %7, i64 %2095
  %2097 = load i32, ptr %2096, align 4, !tbaa !5
  %2098 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2099 = load i32, ptr %2098, align 4, !tbaa !5
  %2100 = add nsw i32 %2099, %2097
  store i32 %2100, ptr %2098, align 4, !tbaa !5
  br label %2119

2101:                                             ; preds = %2074, %2091
  %2102 = phi i32 [ %2086, %2091 ], [ %2075, %2074 ]
  %2103 = phi ptr [ %2085, %2091 ], [ %4, %2074 ]
  %2104 = phi i64 [ %2084, %2091 ], [ 0, %2074 ]
  %2105 = add nsw i32 %2102, 1
  store i32 %2105, ptr %2103, align 4, !tbaa !5
  %2106 = getelementptr inbounds i32, ptr %7, i64 %2104
  %2107 = load i32, ptr %2106, align 4, !tbaa !5
  %2108 = getelementptr inbounds i32, ptr %6, i64 %2104
  br label %2119

2109:                                             ; preds = %2083
  %2110 = icmp eq i32 %2086, %2089
  br i1 %2110, label %2111, label %2117

2111:                                             ; preds = %2109
  store i32 0, ptr %2085, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %8, i64 %2084
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = getelementptr inbounds i32, ptr %6, i64 %2084
  store i32 %2113, ptr %2114, align 4, !tbaa !5
  %2115 = add nuw nsw i64 %2084, 1
  %2116 = icmp eq i64 %2115, %1837
  br i1 %2116, label %2124, label %2083, !llvm.loop !1012

2117:                                             ; preds = %2079, %2109
  %2118 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2119:                                             ; preds = %2092, %2101
  %2120 = phi ptr [ %2108, %2101 ], [ %2085, %2092 ]
  %2121 = phi i32 [ %2107, %2101 ], [ 1, %2092 ]
  %2122 = load i32, ptr %2120, align 4, !tbaa !5
  %2123 = add nsw i32 %2122, %2121
  store i32 %2123, ptr %2120, align 4, !tbaa !5
  br label %2124

2124:                                             ; preds = %2111, %2119, %2081, %2063
  %2125 = icmp eq i32 %2073, %5
  br i1 %2125, label %5401, label %1985, !llvm.loop !1013

2126:                                             ; preds = %1825
  %2127 = getelementptr inbounds i32, ptr %3, i64 %19
  %2128 = load i32, ptr %2127, align 4, !tbaa !5
  %2129 = icmp eq i32 %2128, 0
  %2130 = icmp sgt i32 %5, 0
  br i1 %2129, label %2140, label %2131

2131:                                             ; preds = %2126
  br i1 %2130, label %2132, label %5401

2132:                                             ; preds = %2131
  %2133 = icmp sgt i32 %13, 1
  %2134 = icmp sgt i32 %13, 0
  %2135 = add i32 %13, -2
  %2136 = zext i32 %2135 to i64
  %2137 = zext i32 %13 to i64
  %2138 = add nuw i32 %5, 1
  %2139 = icmp eq i32 %13, 1
  br label %2279

2140:                                             ; preds = %2126
  br i1 %2130, label %2141, label %5401

2141:                                             ; preds = %2140
  %2142 = icmp sgt i32 %13, 1
  %2143 = icmp sgt i32 %13, 0
  %2144 = add i32 %13, -2
  %2145 = zext i32 %2144 to i64
  %2146 = zext i32 %13 to i64
  %2147 = add nuw i32 %5, 1
  %2148 = icmp eq i32 %13, 1
  br label %2149

2149:                                             ; preds = %2141, %2277
  %2150 = phi i16 [ 0, %2141 ], [ %2228, %2277 ]
  %2151 = phi i32 [ 0, %2141 ], [ %2229, %2277 ]
  %2152 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2142, label %2153, label %2222

2153:                                             ; preds = %2149, %2212
  %2154 = phi i32 [ %2221, %2212 ], [ 0, %2149 ]
  %2155 = phi i64 [ %2163, %2212 ], [ %2146, %2149 ]
  %2156 = phi i64 [ %2220, %2212 ], [ %2145, %2149 ]
  %2157 = phi i32 [ %2218, %2212 ], [ %2152, %2149 ]
  %2158 = sub i32 %2144, %2154
  %2159 = tail call i32 @llvm.smin.i32(i32 %2158, i32 0)
  %2160 = sub i32 %2158, %2159
  %2161 = zext i32 %2160 to i64
  %2162 = add nuw nsw i64 %2161, 1
  %2163 = add nsw i64 %2155, -1
  %2164 = icmp ult i32 %2160, 31
  br i1 %2164, label %2200, label %2165

2165:                                             ; preds = %2153
  %2166 = and i64 %2162, 8589934560
  %2167 = sub i64 %2156, %2166
  br label %2168

2168:                                             ; preds = %2168, %2165
  %2169 = phi i64 [ 0, %2165 ], [ %2192, %2168 ]
  %2170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2188, %2168 ]
  %2171 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2189, %2168 ]
  %2172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2190, %2168 ]
  %2173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2191, %2168 ]
  %2174 = sub i64 %2156, %2169
  %2175 = getelementptr inbounds i32, ptr %9, i64 %2174
  %2176 = getelementptr inbounds i32, ptr %2175, i64 -7
  %2177 = load <8 x i32>, ptr %2176, align 4, !tbaa !5
  %2178 = shufflevector <8 x i32> %2177, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2179 = getelementptr inbounds i32, ptr %2175, i64 -15
  %2180 = load <8 x i32>, ptr %2179, align 4, !tbaa !5
  %2181 = shufflevector <8 x i32> %2180, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2182 = getelementptr inbounds i32, ptr %2175, i64 -23
  %2183 = load <8 x i32>, ptr %2182, align 4, !tbaa !5
  %2184 = shufflevector <8 x i32> %2183, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2185 = getelementptr inbounds i32, ptr %2175, i64 -31
  %2186 = load <8 x i32>, ptr %2185, align 4, !tbaa !5
  %2187 = shufflevector <8 x i32> %2186, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2188 = mul <8 x i32> %2178, %2170
  %2189 = mul <8 x i32> %2181, %2171
  %2190 = mul <8 x i32> %2184, %2172
  %2191 = mul <8 x i32> %2187, %2173
  %2192 = add nuw i64 %2169, 32
  %2193 = icmp eq i64 %2192, %2166
  br i1 %2193, label %2194, label %2168, !llvm.loop !1014

2194:                                             ; preds = %2168
  %2195 = mul <8 x i32> %2189, %2188
  %2196 = mul <8 x i32> %2190, %2195
  %2197 = mul <8 x i32> %2191, %2196
  %2198 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2197)
  %2199 = icmp eq i64 %2162, %2166
  br i1 %2199, label %2212, label %2200

2200:                                             ; preds = %2153, %2194
  %2201 = phi i64 [ %2156, %2153 ], [ %2167, %2194 ]
  %2202 = phi i32 [ 1, %2153 ], [ %2198, %2194 ]
  br label %2203

2203:                                             ; preds = %2200, %2203
  %2204 = phi i64 [ %2209, %2203 ], [ %2201, %2200 ]
  %2205 = phi i32 [ %2208, %2203 ], [ %2202, %2200 ]
  %2206 = getelementptr inbounds i32, ptr %9, i64 %2204
  %2207 = load i32, ptr %2206, align 4, !tbaa !5
  %2208 = mul nsw i32 %2207, %2205
  %2209 = add nsw i64 %2204, -1
  %2210 = trunc i64 %2204 to i32
  %2211 = icmp sgt i32 %2210, 0
  br i1 %2211, label %2203, label %2212, !llvm.loop !1015

2212:                                             ; preds = %2203, %2194
  %2213 = phi i32 [ %2198, %2194 ], [ %2208, %2203 ]
  %2214 = and i64 %2163, 4294967295
  %2215 = getelementptr inbounds i32, ptr %6, i64 %2214
  %2216 = load i32, ptr %2215, align 4, !tbaa !5
  %2217 = mul nsw i32 %2216, %2213
  %2218 = add nsw i32 %2217, %2157
  %2219 = icmp sgt i64 %2155, 2
  %2220 = add nsw i64 %2156, -1
  %2221 = add i32 %2154, 1
  br i1 %2219, label %2153, label %2222, !llvm.loop !1016

2222:                                             ; preds = %2212, %2149
  %2223 = phi i32 [ %2152, %2149 ], [ %2218, %2212 ]
  %2224 = sext i32 %2223 to i64
  %2225 = getelementptr inbounds double, ptr %1818, i64 %2224
  %2226 = load double, ptr %2225, align 8, !tbaa !18
  %2227 = fptosi double %2226 to i16
  %2228 = add i16 %2150, %2227
  %2229 = add nuw nsw i32 %2151, 1
  br i1 %2143, label %2230, label %2277

2230:                                             ; preds = %2222
  %2231 = load i32, ptr %4, align 4, !tbaa !5
  %2232 = load i32, ptr %12, align 4, !tbaa !5
  %2233 = add nsw i32 %2232, -1
  %2234 = icmp slt i32 %2231, %2233
  br i1 %2234, label %2254, label %2235

2235:                                             ; preds = %2230
  %2236 = icmp eq i32 %2231, %2233
  br i1 %2236, label %2237, label %2270

2237:                                             ; preds = %2235
  store i32 0, ptr %4, align 4, !tbaa !5
  %2238 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2238, ptr %6, align 4, !tbaa !5
  br i1 %2148, label %2277, label %2239

2239:                                             ; preds = %2237, %2264
  %2240 = phi i64 [ %2268, %2264 ], [ 1, %2237 ]
  %2241 = getelementptr inbounds i32, ptr %4, i64 %2240
  %2242 = load i32, ptr %2241, align 4, !tbaa !5
  %2243 = getelementptr inbounds i32, ptr %12, i64 %2240
  %2244 = load i32, ptr %2243, align 4, !tbaa !5
  %2245 = add nsw i32 %2244, -1
  %2246 = icmp slt i32 %2242, %2245
  br i1 %2246, label %2247, label %2262

2247:                                             ; preds = %2239
  br i1 %2234, label %2254, label %2248

2248:                                             ; preds = %2247
  %2249 = getelementptr inbounds i32, ptr %7, i64 %2240
  %2250 = load i32, ptr %2249, align 4, !tbaa !5
  %2251 = getelementptr inbounds i32, ptr %6, i64 %2240
  %2252 = load i32, ptr %2251, align 4, !tbaa !5
  %2253 = add nsw i32 %2252, %2250
  store i32 %2253, ptr %2251, align 4, !tbaa !5
  br label %2272

2254:                                             ; preds = %2230, %2247
  %2255 = phi i32 [ %2242, %2247 ], [ %2231, %2230 ]
  %2256 = phi ptr [ %2241, %2247 ], [ %4, %2230 ]
  %2257 = phi i64 [ %2240, %2247 ], [ 0, %2230 ]
  %2258 = add nsw i32 %2255, 1
  store i32 %2258, ptr %2256, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %7, i64 %2257
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = getelementptr inbounds i32, ptr %6, i64 %2257
  br label %2272

2262:                                             ; preds = %2239
  %2263 = icmp eq i32 %2242, %2245
  br i1 %2263, label %2264, label %2270

2264:                                             ; preds = %2262
  store i32 0, ptr %2241, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %8, i64 %2240
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2240
  store i32 %2266, ptr %2267, align 4, !tbaa !5
  %2268 = add nuw nsw i64 %2240, 1
  %2269 = icmp eq i64 %2268, %2146
  br i1 %2269, label %2277, label %2239, !llvm.loop !1017

2270:                                             ; preds = %2235, %2262
  store i16 %2228, ptr %1820, align 2, !tbaa !78
  %2271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2272:                                             ; preds = %2248, %2254
  %2273 = phi ptr [ %2261, %2254 ], [ %2241, %2248 ]
  %2274 = phi i32 [ %2260, %2254 ], [ 1, %2248 ]
  %2275 = load i32, ptr %2273, align 4, !tbaa !5
  %2276 = add nsw i32 %2275, %2274
  store i32 %2276, ptr %2273, align 4, !tbaa !5
  br label %2277

2277:                                             ; preds = %2264, %2272, %2237, %2222
  %2278 = icmp eq i32 %2229, %5
  br i1 %2278, label %5396, label %2149, !llvm.loop !1018

2279:                                             ; preds = %2132, %2414
  %2280 = phi i16 [ 0, %2132 ], [ %2362, %2414 ]
  %2281 = phi i32 [ 0, %2132 ], [ %2363, %2414 ]
  %2282 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2133, label %2283, label %2352

2283:                                             ; preds = %2279, %2342
  %2284 = phi i32 [ %2351, %2342 ], [ 0, %2279 ]
  %2285 = phi i64 [ %2293, %2342 ], [ %2137, %2279 ]
  %2286 = phi i64 [ %2350, %2342 ], [ %2136, %2279 ]
  %2287 = phi i32 [ %2348, %2342 ], [ %2282, %2279 ]
  %2288 = sub i32 %2135, %2284
  %2289 = tail call i32 @llvm.smin.i32(i32 %2288, i32 0)
  %2290 = sub i32 %2288, %2289
  %2291 = zext i32 %2290 to i64
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = add nsw i64 %2285, -1
  %2294 = icmp ult i32 %2290, 31
  br i1 %2294, label %2330, label %2295

2295:                                             ; preds = %2283
  %2296 = and i64 %2292, 8589934560
  %2297 = sub i64 %2286, %2296
  br label %2298

2298:                                             ; preds = %2298, %2295
  %2299 = phi i64 [ 0, %2295 ], [ %2322, %2298 ]
  %2300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2318, %2298 ]
  %2301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2319, %2298 ]
  %2302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2320, %2298 ]
  %2303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2321, %2298 ]
  %2304 = sub i64 %2286, %2299
  %2305 = getelementptr inbounds i32, ptr %11, i64 %2304
  %2306 = getelementptr inbounds i32, ptr %2305, i64 -7
  %2307 = load <8 x i32>, ptr %2306, align 4, !tbaa !5
  %2308 = shufflevector <8 x i32> %2307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2309 = getelementptr inbounds i32, ptr %2305, i64 -15
  %2310 = load <8 x i32>, ptr %2309, align 4, !tbaa !5
  %2311 = shufflevector <8 x i32> %2310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2312 = getelementptr inbounds i32, ptr %2305, i64 -23
  %2313 = load <8 x i32>, ptr %2312, align 4, !tbaa !5
  %2314 = shufflevector <8 x i32> %2313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2315 = getelementptr inbounds i32, ptr %2305, i64 -31
  %2316 = load <8 x i32>, ptr %2315, align 4, !tbaa !5
  %2317 = shufflevector <8 x i32> %2316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2318 = mul <8 x i32> %2308, %2300
  %2319 = mul <8 x i32> %2311, %2301
  %2320 = mul <8 x i32> %2314, %2302
  %2321 = mul <8 x i32> %2317, %2303
  %2322 = add nuw i64 %2299, 32
  %2323 = icmp eq i64 %2322, %2296
  br i1 %2323, label %2324, label %2298, !llvm.loop !1019

2324:                                             ; preds = %2298
  %2325 = mul <8 x i32> %2319, %2318
  %2326 = mul <8 x i32> %2320, %2325
  %2327 = mul <8 x i32> %2321, %2326
  %2328 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2327)
  %2329 = icmp eq i64 %2292, %2296
  br i1 %2329, label %2342, label %2330

2330:                                             ; preds = %2283, %2324
  %2331 = phi i64 [ %2286, %2283 ], [ %2297, %2324 ]
  %2332 = phi i32 [ 1, %2283 ], [ %2328, %2324 ]
  br label %2333

2333:                                             ; preds = %2330, %2333
  %2334 = phi i64 [ %2339, %2333 ], [ %2331, %2330 ]
  %2335 = phi i32 [ %2338, %2333 ], [ %2332, %2330 ]
  %2336 = getelementptr inbounds i32, ptr %11, i64 %2334
  %2337 = load i32, ptr %2336, align 4, !tbaa !5
  %2338 = mul nsw i32 %2337, %2335
  %2339 = add nsw i64 %2334, -1
  %2340 = trunc i64 %2334 to i32
  %2341 = icmp sgt i32 %2340, 0
  br i1 %2341, label %2333, label %2342, !llvm.loop !1020

2342:                                             ; preds = %2333, %2324
  %2343 = phi i32 [ %2328, %2324 ], [ %2338, %2333 ]
  %2344 = and i64 %2293, 4294967295
  %2345 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = mul nsw i32 %2346, %2343
  %2348 = add nsw i32 %2347, %2287
  %2349 = icmp sgt i64 %2285, 2
  %2350 = add nsw i64 %2286, -1
  %2351 = add i32 %2284, 1
  br i1 %2349, label %2283, label %2352, !llvm.loop !1021

2352:                                             ; preds = %2342, %2279
  %2353 = phi i32 [ %2282, %2279 ], [ %2348, %2342 ]
  %2354 = icmp slt i32 %2353, %5
  br i1 %2354, label %2357, label %2355

2355:                                             ; preds = %2352
  %2356 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2357:                                             ; preds = %2352
  %2358 = sext i32 %2353 to i64
  %2359 = getelementptr inbounds double, ptr %1818, i64 %2358
  %2360 = load double, ptr %2359, align 8, !tbaa !18
  %2361 = fptosi double %2360 to i16
  %2362 = add i16 %2280, %2361
  store i16 %2362, ptr %1820, align 2, !tbaa !78
  %2363 = add nuw nsw i32 %2281, 1
  br i1 %2134, label %2364, label %2414

2364:                                             ; preds = %2357
  %2365 = load i32, ptr %4, align 4, !tbaa !5
  %2366 = load i32, ptr %12, align 4, !tbaa !5
  %2367 = add nsw i32 %2366, -1
  %2368 = icmp slt i32 %2365, %2367
  br i1 %2368, label %2391, label %2369

2369:                                             ; preds = %2364
  %2370 = icmp eq i32 %2365, %2367
  br i1 %2370, label %2371, label %2407

2371:                                             ; preds = %2369
  store i32 0, ptr %4, align 4, !tbaa !5
  %2372 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2372, ptr %6, align 4, !tbaa !5
  br i1 %2139, label %2414, label %2373

2373:                                             ; preds = %2371, %2401
  %2374 = phi i64 [ %2405, %2401 ], [ 1, %2371 ]
  %2375 = getelementptr inbounds i32, ptr %4, i64 %2374
  %2376 = load i32, ptr %2375, align 4, !tbaa !5
  %2377 = getelementptr inbounds i32, ptr %12, i64 %2374
  %2378 = load i32, ptr %2377, align 4, !tbaa !5
  %2379 = add nsw i32 %2378, -1
  %2380 = icmp slt i32 %2376, %2379
  br i1 %2380, label %2381, label %2399

2381:                                             ; preds = %2373
  br i1 %2368, label %2391, label %2382

2382:                                             ; preds = %2381
  %2383 = shl i64 %2374, 32
  %2384 = add i64 %2383, -4294967296
  %2385 = ashr exact i64 %2384, 32
  %2386 = getelementptr inbounds i32, ptr %7, i64 %2385
  %2387 = load i32, ptr %2386, align 4, !tbaa !5
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2374
  %2389 = load i32, ptr %2388, align 4, !tbaa !5
  %2390 = add nsw i32 %2389, %2387
  store i32 %2390, ptr %2388, align 4, !tbaa !5
  br label %2409

2391:                                             ; preds = %2364, %2381
  %2392 = phi i32 [ %2376, %2381 ], [ %2365, %2364 ]
  %2393 = phi ptr [ %2375, %2381 ], [ %4, %2364 ]
  %2394 = phi i64 [ %2374, %2381 ], [ 0, %2364 ]
  %2395 = add nsw i32 %2392, 1
  store i32 %2395, ptr %2393, align 4, !tbaa !5
  %2396 = getelementptr inbounds i32, ptr %7, i64 %2394
  %2397 = load i32, ptr %2396, align 4, !tbaa !5
  %2398 = getelementptr inbounds i32, ptr %6, i64 %2394
  br label %2409

2399:                                             ; preds = %2373
  %2400 = icmp eq i32 %2376, %2379
  br i1 %2400, label %2401, label %2407

2401:                                             ; preds = %2399
  store i32 0, ptr %2375, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %8, i64 %2374
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2374
  store i32 %2403, ptr %2404, align 4, !tbaa !5
  %2405 = add nuw nsw i64 %2374, 1
  %2406 = icmp eq i64 %2405, %2137
  br i1 %2406, label %2414, label %2373, !llvm.loop !1022

2407:                                             ; preds = %2369, %2399
  %2408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2409:                                             ; preds = %2382, %2391
  %2410 = phi ptr [ %2398, %2391 ], [ %2375, %2382 ]
  %2411 = phi i32 [ %2397, %2391 ], [ 1, %2382 ]
  %2412 = load i32, ptr %2410, align 4, !tbaa !5
  %2413 = add nsw i32 %2412, %2411
  store i32 %2413, ptr %2410, align 4, !tbaa !5
  br label %2414

2414:                                             ; preds = %2401, %2409, %2371, %2357
  %2415 = icmp eq i32 %2363, %5
  br i1 %2415, label %5401, label %2279, !llvm.loop !1023

2416:                                             ; preds = %1825
  %2417 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1494, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

2418:                                             ; preds = %18
  %2419 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2420 = load ptr, ptr %2419, align 8, !tbaa !9
  %2421 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2422 = load ptr, ptr %2421, align 8, !tbaa !9
  store i32 0, ptr %2422, align 4, !tbaa !5
  %2423 = icmp eq i32 %13, 0
  br i1 %2423, label %2424, label %2427

2424:                                             ; preds = %2418
  %2425 = load double, ptr %2420, align 8, !tbaa !18
  %2426 = fptosi double %2425 to i32
  store i32 %2426, ptr %2422, align 4, !tbaa !5
  br label %5401

2427:                                             ; preds = %2418
  switch i32 %1, label %3014 [
    i32 1, label %2428
    i32 0, label %2724
  ]

2428:                                             ; preds = %2427
  %2429 = getelementptr inbounds i32, ptr %3, i64 %19
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = icmp eq i32 %2430, 0
  %2432 = icmp sgt i32 %5, 0
  br i1 %2431, label %2442, label %2433

2433:                                             ; preds = %2428
  br i1 %2432, label %2434, label %5401

2434:                                             ; preds = %2433
  %2435 = icmp sgt i32 %13, 1
  %2436 = icmp sgt i32 %13, 0
  %2437 = add i32 %13, -2
  %2438 = zext i32 %2437 to i64
  %2439 = zext i32 %13 to i64
  %2440 = add nuw i32 %5, 1
  %2441 = icmp eq i32 %13, 1
  br label %2587

2442:                                             ; preds = %2428
  br i1 %2432, label %2443, label %5401

2443:                                             ; preds = %2442
  %2444 = icmp sgt i32 %13, 1
  %2445 = icmp sgt i32 %13, 0
  %2446 = add i32 %13, -2
  %2447 = zext i32 %2446 to i64
  %2448 = zext i32 %13 to i64
  %2449 = add nuw i32 %5, 1
  %2450 = icmp eq i32 %13, 1
  br label %2451

2451:                                             ; preds = %2443, %2585
  %2452 = phi i32 [ 0, %2443 ], [ %2537, %2585 ]
  %2453 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2444, label %2454, label %2523

2454:                                             ; preds = %2451, %2513
  %2455 = phi i32 [ %2522, %2513 ], [ 0, %2451 ]
  %2456 = phi i64 [ %2464, %2513 ], [ %2448, %2451 ]
  %2457 = phi i64 [ %2521, %2513 ], [ %2447, %2451 ]
  %2458 = phi i32 [ %2519, %2513 ], [ %2453, %2451 ]
  %2459 = sub i32 %2446, %2455
  %2460 = tail call i32 @llvm.smin.i32(i32 %2459, i32 0)
  %2461 = sub i32 %2459, %2460
  %2462 = zext i32 %2461 to i64
  %2463 = add nuw nsw i64 %2462, 1
  %2464 = add nsw i64 %2456, -1
  %2465 = icmp ult i32 %2461, 31
  br i1 %2465, label %2501, label %2466

2466:                                             ; preds = %2454
  %2467 = and i64 %2463, 8589934560
  %2468 = sub i64 %2457, %2467
  br label %2469

2469:                                             ; preds = %2469, %2466
  %2470 = phi i64 [ 0, %2466 ], [ %2493, %2469 ]
  %2471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2489, %2469 ]
  %2472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2490, %2469 ]
  %2473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2491, %2469 ]
  %2474 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2492, %2469 ]
  %2475 = sub i64 %2457, %2470
  %2476 = getelementptr inbounds i32, ptr %9, i64 %2475
  %2477 = getelementptr inbounds i32, ptr %2476, i64 -7
  %2478 = load <8 x i32>, ptr %2477, align 4, !tbaa !5
  %2479 = shufflevector <8 x i32> %2478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2480 = getelementptr inbounds i32, ptr %2476, i64 -15
  %2481 = load <8 x i32>, ptr %2480, align 4, !tbaa !5
  %2482 = shufflevector <8 x i32> %2481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2483 = getelementptr inbounds i32, ptr %2476, i64 -23
  %2484 = load <8 x i32>, ptr %2483, align 4, !tbaa !5
  %2485 = shufflevector <8 x i32> %2484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2486 = getelementptr inbounds i32, ptr %2476, i64 -31
  %2487 = load <8 x i32>, ptr %2486, align 4, !tbaa !5
  %2488 = shufflevector <8 x i32> %2487, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2489 = mul <8 x i32> %2479, %2471
  %2490 = mul <8 x i32> %2482, %2472
  %2491 = mul <8 x i32> %2485, %2473
  %2492 = mul <8 x i32> %2488, %2474
  %2493 = add nuw i64 %2470, 32
  %2494 = icmp eq i64 %2493, %2467
  br i1 %2494, label %2495, label %2469, !llvm.loop !1024

2495:                                             ; preds = %2469
  %2496 = mul <8 x i32> %2490, %2489
  %2497 = mul <8 x i32> %2491, %2496
  %2498 = mul <8 x i32> %2492, %2497
  %2499 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2498)
  %2500 = icmp eq i64 %2463, %2467
  br i1 %2500, label %2513, label %2501

2501:                                             ; preds = %2454, %2495
  %2502 = phi i64 [ %2457, %2454 ], [ %2468, %2495 ]
  %2503 = phi i32 [ 1, %2454 ], [ %2499, %2495 ]
  br label %2504

2504:                                             ; preds = %2501, %2504
  %2505 = phi i64 [ %2510, %2504 ], [ %2502, %2501 ]
  %2506 = phi i32 [ %2509, %2504 ], [ %2503, %2501 ]
  %2507 = getelementptr inbounds i32, ptr %9, i64 %2505
  %2508 = load i32, ptr %2507, align 4, !tbaa !5
  %2509 = mul nsw i32 %2508, %2506
  %2510 = add nsw i64 %2505, -1
  %2511 = trunc i64 %2505 to i32
  %2512 = icmp sgt i32 %2511, 0
  br i1 %2512, label %2504, label %2513, !llvm.loop !1025

2513:                                             ; preds = %2504, %2495
  %2514 = phi i32 [ %2499, %2495 ], [ %2509, %2504 ]
  %2515 = and i64 %2464, 4294967295
  %2516 = getelementptr inbounds i32, ptr %6, i64 %2515
  %2517 = load i32, ptr %2516, align 4, !tbaa !5
  %2518 = mul nsw i32 %2517, %2514
  %2519 = add nsw i32 %2518, %2458
  %2520 = icmp sgt i64 %2456, 2
  %2521 = add nsw i64 %2457, -1
  %2522 = add i32 %2455, 1
  br i1 %2520, label %2454, label %2523, !llvm.loop !1026

2523:                                             ; preds = %2513, %2451
  %2524 = phi i32 [ %2453, %2451 ], [ %2519, %2513 ]
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds double, ptr %2, i64 %2525
  %2527 = load double, ptr %2526, align 8, !tbaa !18
  %2528 = getelementptr inbounds double, ptr %2420, i64 %2525
  %2529 = load double, ptr %2528, align 8, !tbaa !18
  %2530 = fptosi double %2529 to i32
  %2531 = load i32, ptr %2422, align 4, !tbaa !5
  %2532 = sitofp i32 %2531 to double
  %2533 = sitofp i32 %2530 to double
  %2534 = fmul fast double %2527, %2533
  %2535 = fadd fast double %2534, %2532
  %2536 = fptosi double %2535 to i32
  store i32 %2536, ptr %2422, align 4, !tbaa !5
  %2537 = add nuw nsw i32 %2452, 1
  br i1 %2445, label %2538, label %2585

2538:                                             ; preds = %2523
  %2539 = load i32, ptr %4, align 4, !tbaa !5
  %2540 = load i32, ptr %12, align 4, !tbaa !5
  %2541 = add nsw i32 %2540, -1
  %2542 = icmp slt i32 %2539, %2541
  br i1 %2542, label %2562, label %2543

2543:                                             ; preds = %2538
  %2544 = icmp eq i32 %2539, %2541
  br i1 %2544, label %2545, label %2578

2545:                                             ; preds = %2543
  store i32 0, ptr %4, align 4, !tbaa !5
  %2546 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2546, ptr %6, align 4, !tbaa !5
  br i1 %2450, label %2585, label %2547

2547:                                             ; preds = %2545, %2572
  %2548 = phi i64 [ %2576, %2572 ], [ 1, %2545 ]
  %2549 = getelementptr inbounds i32, ptr %4, i64 %2548
  %2550 = load i32, ptr %2549, align 4, !tbaa !5
  %2551 = getelementptr inbounds i32, ptr %12, i64 %2548
  %2552 = load i32, ptr %2551, align 4, !tbaa !5
  %2553 = add nsw i32 %2552, -1
  %2554 = icmp slt i32 %2550, %2553
  br i1 %2554, label %2555, label %2570

2555:                                             ; preds = %2547
  br i1 %2542, label %2562, label %2556

2556:                                             ; preds = %2555
  %2557 = getelementptr inbounds i32, ptr %7, i64 %2548
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = getelementptr inbounds i32, ptr %6, i64 %2548
  %2560 = load i32, ptr %2559, align 4, !tbaa !5
  %2561 = add nsw i32 %2560, %2558
  store i32 %2561, ptr %2559, align 4, !tbaa !5
  br label %2580

2562:                                             ; preds = %2538, %2555
  %2563 = phi i32 [ %2550, %2555 ], [ %2539, %2538 ]
  %2564 = phi ptr [ %2549, %2555 ], [ %4, %2538 ]
  %2565 = phi i64 [ %2548, %2555 ], [ 0, %2538 ]
  %2566 = add nsw i32 %2563, 1
  store i32 %2566, ptr %2564, align 4, !tbaa !5
  %2567 = getelementptr inbounds i32, ptr %7, i64 %2565
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %6, i64 %2565
  br label %2580

2570:                                             ; preds = %2547
  %2571 = icmp eq i32 %2550, %2553
  br i1 %2571, label %2572, label %2578

2572:                                             ; preds = %2570
  store i32 0, ptr %2549, align 4, !tbaa !5
  %2573 = getelementptr inbounds i32, ptr %8, i64 %2548
  %2574 = load i32, ptr %2573, align 4, !tbaa !5
  %2575 = getelementptr inbounds i32, ptr %6, i64 %2548
  store i32 %2574, ptr %2575, align 4, !tbaa !5
  %2576 = add nuw nsw i64 %2548, 1
  %2577 = icmp eq i64 %2576, %2448
  br i1 %2577, label %2585, label %2547, !llvm.loop !1027

2578:                                             ; preds = %2543, %2570
  %2579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2580:                                             ; preds = %2556, %2562
  %2581 = phi ptr [ %2569, %2562 ], [ %2549, %2556 ]
  %2582 = phi i32 [ %2568, %2562 ], [ 1, %2556 ]
  %2583 = load i32, ptr %2581, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, %2582
  store i32 %2584, ptr %2581, align 4, !tbaa !5
  br label %2585

2585:                                             ; preds = %2572, %2580, %2545, %2523
  %2586 = icmp eq i32 %2537, %5
  br i1 %2586, label %5401, label %2451, !llvm.loop !1028

2587:                                             ; preds = %2434, %2722
  %2588 = phi i32 [ 0, %2434 ], [ %2671, %2722 ]
  %2589 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2435, label %2590, label %2659

2590:                                             ; preds = %2587, %2649
  %2591 = phi i32 [ %2658, %2649 ], [ 0, %2587 ]
  %2592 = phi i64 [ %2600, %2649 ], [ %2439, %2587 ]
  %2593 = phi i64 [ %2657, %2649 ], [ %2438, %2587 ]
  %2594 = phi i32 [ %2655, %2649 ], [ %2589, %2587 ]
  %2595 = sub i32 %2437, %2591
  %2596 = tail call i32 @llvm.smin.i32(i32 %2595, i32 0)
  %2597 = sub i32 %2595, %2596
  %2598 = zext i32 %2597 to i64
  %2599 = add nuw nsw i64 %2598, 1
  %2600 = add nsw i64 %2592, -1
  %2601 = icmp ult i32 %2597, 31
  br i1 %2601, label %2637, label %2602

2602:                                             ; preds = %2590
  %2603 = and i64 %2599, 8589934560
  %2604 = sub i64 %2593, %2603
  br label %2605

2605:                                             ; preds = %2605, %2602
  %2606 = phi i64 [ 0, %2602 ], [ %2629, %2605 ]
  %2607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2625, %2605 ]
  %2608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2626, %2605 ]
  %2609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2627, %2605 ]
  %2610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2628, %2605 ]
  %2611 = sub i64 %2593, %2606
  %2612 = getelementptr inbounds i32, ptr %11, i64 %2611
  %2613 = getelementptr inbounds i32, ptr %2612, i64 -7
  %2614 = load <8 x i32>, ptr %2613, align 4, !tbaa !5
  %2615 = shufflevector <8 x i32> %2614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2616 = getelementptr inbounds i32, ptr %2612, i64 -15
  %2617 = load <8 x i32>, ptr %2616, align 4, !tbaa !5
  %2618 = shufflevector <8 x i32> %2617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2619 = getelementptr inbounds i32, ptr %2612, i64 -23
  %2620 = load <8 x i32>, ptr %2619, align 4, !tbaa !5
  %2621 = shufflevector <8 x i32> %2620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2622 = getelementptr inbounds i32, ptr %2612, i64 -31
  %2623 = load <8 x i32>, ptr %2622, align 4, !tbaa !5
  %2624 = shufflevector <8 x i32> %2623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2625 = mul <8 x i32> %2615, %2607
  %2626 = mul <8 x i32> %2618, %2608
  %2627 = mul <8 x i32> %2621, %2609
  %2628 = mul <8 x i32> %2624, %2610
  %2629 = add nuw i64 %2606, 32
  %2630 = icmp eq i64 %2629, %2603
  br i1 %2630, label %2631, label %2605, !llvm.loop !1029

2631:                                             ; preds = %2605
  %2632 = mul <8 x i32> %2626, %2625
  %2633 = mul <8 x i32> %2627, %2632
  %2634 = mul <8 x i32> %2628, %2633
  %2635 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2634)
  %2636 = icmp eq i64 %2599, %2603
  br i1 %2636, label %2649, label %2637

2637:                                             ; preds = %2590, %2631
  %2638 = phi i64 [ %2593, %2590 ], [ %2604, %2631 ]
  %2639 = phi i32 [ 1, %2590 ], [ %2635, %2631 ]
  br label %2640

2640:                                             ; preds = %2637, %2640
  %2641 = phi i64 [ %2646, %2640 ], [ %2638, %2637 ]
  %2642 = phi i32 [ %2645, %2640 ], [ %2639, %2637 ]
  %2643 = getelementptr inbounds i32, ptr %11, i64 %2641
  %2644 = load i32, ptr %2643, align 4, !tbaa !5
  %2645 = mul nsw i32 %2644, %2642
  %2646 = add nsw i64 %2641, -1
  %2647 = trunc i64 %2641 to i32
  %2648 = icmp sgt i32 %2647, 0
  br i1 %2648, label %2640, label %2649, !llvm.loop !1030

2649:                                             ; preds = %2640, %2631
  %2650 = phi i32 [ %2635, %2631 ], [ %2645, %2640 ]
  %2651 = and i64 %2600, 4294967295
  %2652 = getelementptr inbounds i32, ptr %6, i64 %2651
  %2653 = load i32, ptr %2652, align 4, !tbaa !5
  %2654 = mul nsw i32 %2653, %2650
  %2655 = add nsw i32 %2654, %2594
  %2656 = icmp sgt i64 %2592, 2
  %2657 = add nsw i64 %2593, -1
  %2658 = add i32 %2591, 1
  br i1 %2656, label %2590, label %2659, !llvm.loop !1031

2659:                                             ; preds = %2649, %2587
  %2660 = phi i32 [ %2589, %2587 ], [ %2655, %2649 ]
  %2661 = icmp slt i32 %2660, %5
  br i1 %2661, label %2664, label %2662

2662:                                             ; preds = %2659
  %2663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2664:                                             ; preds = %2659
  %2665 = sext i32 %2660 to i64
  %2666 = getelementptr inbounds double, ptr %2420, i64 %2665
  %2667 = load double, ptr %2666, align 8, !tbaa !18
  %2668 = fptosi double %2667 to i32
  %2669 = load i32, ptr %2422, align 4, !tbaa !5
  %2670 = add i32 %2669, %2668
  store i32 %2670, ptr %2422, align 4, !tbaa !5
  %2671 = add nuw nsw i32 %2588, 1
  br i1 %2436, label %2672, label %2722

2672:                                             ; preds = %2664
  %2673 = load i32, ptr %4, align 4, !tbaa !5
  %2674 = load i32, ptr %12, align 4, !tbaa !5
  %2675 = add nsw i32 %2674, -1
  %2676 = icmp slt i32 %2673, %2675
  br i1 %2676, label %2699, label %2677

2677:                                             ; preds = %2672
  %2678 = icmp eq i32 %2673, %2675
  br i1 %2678, label %2679, label %2715

2679:                                             ; preds = %2677
  store i32 0, ptr %4, align 4, !tbaa !5
  %2680 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2680, ptr %6, align 4, !tbaa !5
  br i1 %2441, label %2722, label %2681

2681:                                             ; preds = %2679, %2709
  %2682 = phi i64 [ %2713, %2709 ], [ 1, %2679 ]
  %2683 = getelementptr inbounds i32, ptr %4, i64 %2682
  %2684 = load i32, ptr %2683, align 4, !tbaa !5
  %2685 = getelementptr inbounds i32, ptr %12, i64 %2682
  %2686 = load i32, ptr %2685, align 4, !tbaa !5
  %2687 = add nsw i32 %2686, -1
  %2688 = icmp slt i32 %2684, %2687
  br i1 %2688, label %2689, label %2707

2689:                                             ; preds = %2681
  br i1 %2676, label %2699, label %2690

2690:                                             ; preds = %2689
  %2691 = shl i64 %2682, 32
  %2692 = add i64 %2691, -4294967296
  %2693 = ashr exact i64 %2692, 32
  %2694 = getelementptr inbounds i32, ptr %7, i64 %2693
  %2695 = load i32, ptr %2694, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2682
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = add nsw i32 %2697, %2695
  store i32 %2698, ptr %2696, align 4, !tbaa !5
  br label %2717

2699:                                             ; preds = %2672, %2689
  %2700 = phi i32 [ %2684, %2689 ], [ %2673, %2672 ]
  %2701 = phi ptr [ %2683, %2689 ], [ %4, %2672 ]
  %2702 = phi i64 [ %2682, %2689 ], [ 0, %2672 ]
  %2703 = add nsw i32 %2700, 1
  store i32 %2703, ptr %2701, align 4, !tbaa !5
  %2704 = getelementptr inbounds i32, ptr %7, i64 %2702
  %2705 = load i32, ptr %2704, align 4, !tbaa !5
  %2706 = getelementptr inbounds i32, ptr %6, i64 %2702
  br label %2717

2707:                                             ; preds = %2681
  %2708 = icmp eq i32 %2684, %2687
  br i1 %2708, label %2709, label %2715

2709:                                             ; preds = %2707
  store i32 0, ptr %2683, align 4, !tbaa !5
  %2710 = getelementptr inbounds i32, ptr %8, i64 %2682
  %2711 = load i32, ptr %2710, align 4, !tbaa !5
  %2712 = getelementptr inbounds i32, ptr %6, i64 %2682
  store i32 %2711, ptr %2712, align 4, !tbaa !5
  %2713 = add nuw nsw i64 %2682, 1
  %2714 = icmp eq i64 %2713, %2439
  br i1 %2714, label %2722, label %2681, !llvm.loop !1032

2715:                                             ; preds = %2677, %2707
  %2716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2717:                                             ; preds = %2690, %2699
  %2718 = phi ptr [ %2706, %2699 ], [ %2683, %2690 ]
  %2719 = phi i32 [ %2705, %2699 ], [ 1, %2690 ]
  %2720 = load i32, ptr %2718, align 4, !tbaa !5
  %2721 = add nsw i32 %2720, %2719
  store i32 %2721, ptr %2718, align 4, !tbaa !5
  br label %2722

2722:                                             ; preds = %2709, %2717, %2679, %2664
  %2723 = icmp eq i32 %2671, %5
  br i1 %2723, label %5401, label %2587, !llvm.loop !1033

2724:                                             ; preds = %2427
  %2725 = getelementptr inbounds i32, ptr %3, i64 %19
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = icmp eq i32 %2726, 0
  %2728 = icmp sgt i32 %5, 0
  br i1 %2727, label %2738, label %2729

2729:                                             ; preds = %2724
  br i1 %2728, label %2730, label %5401

2730:                                             ; preds = %2729
  %2731 = icmp sgt i32 %13, 1
  %2732 = icmp sgt i32 %13, 0
  %2733 = add i32 %13, -2
  %2734 = zext i32 %2733 to i64
  %2735 = zext i32 %13 to i64
  %2736 = add nuw i32 %5, 1
  %2737 = icmp eq i32 %13, 1
  br label %2877

2738:                                             ; preds = %2724
  br i1 %2728, label %2739, label %5401

2739:                                             ; preds = %2738
  %2740 = icmp sgt i32 %13, 1
  %2741 = icmp sgt i32 %13, 0
  %2742 = add i32 %13, -2
  %2743 = zext i32 %2742 to i64
  %2744 = zext i32 %13 to i64
  %2745 = add nuw i32 %5, 1
  %2746 = icmp eq i32 %13, 1
  br label %2747

2747:                                             ; preds = %2739, %2875
  %2748 = phi i32 [ 0, %2739 ], [ %2827, %2875 ]
  %2749 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2740, label %2750, label %2819

2750:                                             ; preds = %2747, %2809
  %2751 = phi i32 [ %2818, %2809 ], [ 0, %2747 ]
  %2752 = phi i64 [ %2760, %2809 ], [ %2744, %2747 ]
  %2753 = phi i64 [ %2817, %2809 ], [ %2743, %2747 ]
  %2754 = phi i32 [ %2815, %2809 ], [ %2749, %2747 ]
  %2755 = sub i32 %2742, %2751
  %2756 = tail call i32 @llvm.smin.i32(i32 %2755, i32 0)
  %2757 = sub i32 %2755, %2756
  %2758 = zext i32 %2757 to i64
  %2759 = add nuw nsw i64 %2758, 1
  %2760 = add nsw i64 %2752, -1
  %2761 = icmp ult i32 %2757, 31
  br i1 %2761, label %2797, label %2762

2762:                                             ; preds = %2750
  %2763 = and i64 %2759, 8589934560
  %2764 = sub i64 %2753, %2763
  br label %2765

2765:                                             ; preds = %2765, %2762
  %2766 = phi i64 [ 0, %2762 ], [ %2789, %2765 ]
  %2767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2785, %2765 ]
  %2768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2786, %2765 ]
  %2769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2787, %2765 ]
  %2770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2788, %2765 ]
  %2771 = sub i64 %2753, %2766
  %2772 = getelementptr inbounds i32, ptr %9, i64 %2771
  %2773 = getelementptr inbounds i32, ptr %2772, i64 -7
  %2774 = load <8 x i32>, ptr %2773, align 4, !tbaa !5
  %2775 = shufflevector <8 x i32> %2774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2776 = getelementptr inbounds i32, ptr %2772, i64 -15
  %2777 = load <8 x i32>, ptr %2776, align 4, !tbaa !5
  %2778 = shufflevector <8 x i32> %2777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2779 = getelementptr inbounds i32, ptr %2772, i64 -23
  %2780 = load <8 x i32>, ptr %2779, align 4, !tbaa !5
  %2781 = shufflevector <8 x i32> %2780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2782 = getelementptr inbounds i32, ptr %2772, i64 -31
  %2783 = load <8 x i32>, ptr %2782, align 4, !tbaa !5
  %2784 = shufflevector <8 x i32> %2783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2785 = mul <8 x i32> %2775, %2767
  %2786 = mul <8 x i32> %2778, %2768
  %2787 = mul <8 x i32> %2781, %2769
  %2788 = mul <8 x i32> %2784, %2770
  %2789 = add nuw i64 %2766, 32
  %2790 = icmp eq i64 %2789, %2763
  br i1 %2790, label %2791, label %2765, !llvm.loop !1034

2791:                                             ; preds = %2765
  %2792 = mul <8 x i32> %2786, %2785
  %2793 = mul <8 x i32> %2787, %2792
  %2794 = mul <8 x i32> %2788, %2793
  %2795 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2794)
  %2796 = icmp eq i64 %2759, %2763
  br i1 %2796, label %2809, label %2797

2797:                                             ; preds = %2750, %2791
  %2798 = phi i64 [ %2753, %2750 ], [ %2764, %2791 ]
  %2799 = phi i32 [ 1, %2750 ], [ %2795, %2791 ]
  br label %2800

2800:                                             ; preds = %2797, %2800
  %2801 = phi i64 [ %2806, %2800 ], [ %2798, %2797 ]
  %2802 = phi i32 [ %2805, %2800 ], [ %2799, %2797 ]
  %2803 = getelementptr inbounds i32, ptr %9, i64 %2801
  %2804 = load i32, ptr %2803, align 4, !tbaa !5
  %2805 = mul nsw i32 %2804, %2802
  %2806 = add nsw i64 %2801, -1
  %2807 = trunc i64 %2801 to i32
  %2808 = icmp sgt i32 %2807, 0
  br i1 %2808, label %2800, label %2809, !llvm.loop !1035

2809:                                             ; preds = %2800, %2791
  %2810 = phi i32 [ %2795, %2791 ], [ %2805, %2800 ]
  %2811 = and i64 %2760, 4294967295
  %2812 = getelementptr inbounds i32, ptr %6, i64 %2811
  %2813 = load i32, ptr %2812, align 4, !tbaa !5
  %2814 = mul nsw i32 %2813, %2810
  %2815 = add nsw i32 %2814, %2754
  %2816 = icmp sgt i64 %2752, 2
  %2817 = add nsw i64 %2753, -1
  %2818 = add i32 %2751, 1
  br i1 %2816, label %2750, label %2819, !llvm.loop !1036

2819:                                             ; preds = %2809, %2747
  %2820 = phi i32 [ %2749, %2747 ], [ %2815, %2809 ]
  %2821 = sext i32 %2820 to i64
  %2822 = getelementptr inbounds double, ptr %2420, i64 %2821
  %2823 = load double, ptr %2822, align 8, !tbaa !18
  %2824 = fptosi double %2823 to i32
  %2825 = load i32, ptr %2422, align 4, !tbaa !5
  %2826 = add nsw i32 %2825, %2824
  store i32 %2826, ptr %2422, align 4, !tbaa !5
  %2827 = add nuw nsw i32 %2748, 1
  br i1 %2741, label %2828, label %2875

2828:                                             ; preds = %2819
  %2829 = load i32, ptr %4, align 4, !tbaa !5
  %2830 = load i32, ptr %12, align 4, !tbaa !5
  %2831 = add nsw i32 %2830, -1
  %2832 = icmp slt i32 %2829, %2831
  br i1 %2832, label %2852, label %2833

2833:                                             ; preds = %2828
  %2834 = icmp eq i32 %2829, %2831
  br i1 %2834, label %2835, label %2868

2835:                                             ; preds = %2833
  store i32 0, ptr %4, align 4, !tbaa !5
  %2836 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2836, ptr %6, align 4, !tbaa !5
  br i1 %2746, label %2875, label %2837

2837:                                             ; preds = %2835, %2862
  %2838 = phi i64 [ %2866, %2862 ], [ 1, %2835 ]
  %2839 = getelementptr inbounds i32, ptr %4, i64 %2838
  %2840 = load i32, ptr %2839, align 4, !tbaa !5
  %2841 = getelementptr inbounds i32, ptr %12, i64 %2838
  %2842 = load i32, ptr %2841, align 4, !tbaa !5
  %2843 = add nsw i32 %2842, -1
  %2844 = icmp slt i32 %2840, %2843
  br i1 %2844, label %2845, label %2860

2845:                                             ; preds = %2837
  br i1 %2832, label %2852, label %2846

2846:                                             ; preds = %2845
  %2847 = getelementptr inbounds i32, ptr %7, i64 %2838
  %2848 = load i32, ptr %2847, align 4, !tbaa !5
  %2849 = getelementptr inbounds i32, ptr %6, i64 %2838
  %2850 = load i32, ptr %2849, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, %2848
  store i32 %2851, ptr %2849, align 4, !tbaa !5
  br label %2870

2852:                                             ; preds = %2828, %2845
  %2853 = phi i32 [ %2840, %2845 ], [ %2829, %2828 ]
  %2854 = phi ptr [ %2839, %2845 ], [ %4, %2828 ]
  %2855 = phi i64 [ %2838, %2845 ], [ 0, %2828 ]
  %2856 = add nsw i32 %2853, 1
  store i32 %2856, ptr %2854, align 4, !tbaa !5
  %2857 = getelementptr inbounds i32, ptr %7, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2855
  br label %2870

2860:                                             ; preds = %2837
  %2861 = icmp eq i32 %2840, %2843
  br i1 %2861, label %2862, label %2868

2862:                                             ; preds = %2860
  store i32 0, ptr %2839, align 4, !tbaa !5
  %2863 = getelementptr inbounds i32, ptr %8, i64 %2838
  %2864 = load i32, ptr %2863, align 4, !tbaa !5
  %2865 = getelementptr inbounds i32, ptr %6, i64 %2838
  store i32 %2864, ptr %2865, align 4, !tbaa !5
  %2866 = add nuw nsw i64 %2838, 1
  %2867 = icmp eq i64 %2866, %2744
  br i1 %2867, label %2875, label %2837, !llvm.loop !1037

2868:                                             ; preds = %2833, %2860
  %2869 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2870:                                             ; preds = %2846, %2852
  %2871 = phi ptr [ %2859, %2852 ], [ %2839, %2846 ]
  %2872 = phi i32 [ %2858, %2852 ], [ 1, %2846 ]
  %2873 = load i32, ptr %2871, align 4, !tbaa !5
  %2874 = add nsw i32 %2873, %2872
  store i32 %2874, ptr %2871, align 4, !tbaa !5
  br label %2875

2875:                                             ; preds = %2862, %2870, %2835, %2819
  %2876 = icmp eq i32 %2827, %5
  br i1 %2876, label %5401, label %2747, !llvm.loop !1038

2877:                                             ; preds = %2730, %3012
  %2878 = phi i32 [ 0, %2730 ], [ %2961, %3012 ]
  %2879 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2731, label %2880, label %2949

2880:                                             ; preds = %2877, %2939
  %2881 = phi i32 [ %2948, %2939 ], [ 0, %2877 ]
  %2882 = phi i64 [ %2890, %2939 ], [ %2735, %2877 ]
  %2883 = phi i64 [ %2947, %2939 ], [ %2734, %2877 ]
  %2884 = phi i32 [ %2945, %2939 ], [ %2879, %2877 ]
  %2885 = sub i32 %2733, %2881
  %2886 = tail call i32 @llvm.smin.i32(i32 %2885, i32 0)
  %2887 = sub i32 %2885, %2886
  %2888 = zext i32 %2887 to i64
  %2889 = add nuw nsw i64 %2888, 1
  %2890 = add nsw i64 %2882, -1
  %2891 = icmp ult i32 %2887, 31
  br i1 %2891, label %2927, label %2892

2892:                                             ; preds = %2880
  %2893 = and i64 %2889, 8589934560
  %2894 = sub i64 %2883, %2893
  br label %2895

2895:                                             ; preds = %2895, %2892
  %2896 = phi i64 [ 0, %2892 ], [ %2919, %2895 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2915, %2895 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2916, %2895 ]
  %2899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2917, %2895 ]
  %2900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2918, %2895 ]
  %2901 = sub i64 %2883, %2896
  %2902 = getelementptr inbounds i32, ptr %11, i64 %2901
  %2903 = getelementptr inbounds i32, ptr %2902, i64 -7
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !5
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2902, i64 -15
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !5
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = getelementptr inbounds i32, ptr %2902, i64 -23
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !5
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2902, i64 -31
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !5
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = mul <8 x i32> %2905, %2897
  %2916 = mul <8 x i32> %2908, %2898
  %2917 = mul <8 x i32> %2911, %2899
  %2918 = mul <8 x i32> %2914, %2900
  %2919 = add nuw i64 %2896, 32
  %2920 = icmp eq i64 %2919, %2893
  br i1 %2920, label %2921, label %2895, !llvm.loop !1039

2921:                                             ; preds = %2895
  %2922 = mul <8 x i32> %2916, %2915
  %2923 = mul <8 x i32> %2917, %2922
  %2924 = mul <8 x i32> %2918, %2923
  %2925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2924)
  %2926 = icmp eq i64 %2889, %2893
  br i1 %2926, label %2939, label %2927

2927:                                             ; preds = %2880, %2921
  %2928 = phi i64 [ %2883, %2880 ], [ %2894, %2921 ]
  %2929 = phi i32 [ 1, %2880 ], [ %2925, %2921 ]
  br label %2930

2930:                                             ; preds = %2927, %2930
  %2931 = phi i64 [ %2936, %2930 ], [ %2928, %2927 ]
  %2932 = phi i32 [ %2935, %2930 ], [ %2929, %2927 ]
  %2933 = getelementptr inbounds i32, ptr %11, i64 %2931
  %2934 = load i32, ptr %2933, align 4, !tbaa !5
  %2935 = mul nsw i32 %2934, %2932
  %2936 = add nsw i64 %2931, -1
  %2937 = trunc i64 %2931 to i32
  %2938 = icmp sgt i32 %2937, 0
  br i1 %2938, label %2930, label %2939, !llvm.loop !1040

2939:                                             ; preds = %2930, %2921
  %2940 = phi i32 [ %2925, %2921 ], [ %2935, %2930 ]
  %2941 = and i64 %2890, 4294967295
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2941
  %2943 = load i32, ptr %2942, align 4, !tbaa !5
  %2944 = mul nsw i32 %2943, %2940
  %2945 = add nsw i32 %2944, %2884
  %2946 = icmp sgt i64 %2882, 2
  %2947 = add nsw i64 %2883, -1
  %2948 = add i32 %2881, 1
  br i1 %2946, label %2880, label %2949, !llvm.loop !1041

2949:                                             ; preds = %2939, %2877
  %2950 = phi i32 [ %2879, %2877 ], [ %2945, %2939 ]
  %2951 = icmp slt i32 %2950, %5
  br i1 %2951, label %2954, label %2952

2952:                                             ; preds = %2949
  %2953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2954:                                             ; preds = %2949
  %2955 = sext i32 %2950 to i64
  %2956 = getelementptr inbounds double, ptr %2420, i64 %2955
  %2957 = load double, ptr %2956, align 8, !tbaa !18
  %2958 = fptosi double %2957 to i32
  %2959 = load i32, ptr %2422, align 4, !tbaa !5
  %2960 = add nsw i32 %2959, %2958
  store i32 %2960, ptr %2422, align 4, !tbaa !5
  %2961 = add nuw nsw i32 %2878, 1
  br i1 %2732, label %2962, label %3012

2962:                                             ; preds = %2954
  %2963 = load i32, ptr %4, align 4, !tbaa !5
  %2964 = load i32, ptr %12, align 4, !tbaa !5
  %2965 = add nsw i32 %2964, -1
  %2966 = icmp slt i32 %2963, %2965
  br i1 %2966, label %2989, label %2967

2967:                                             ; preds = %2962
  %2968 = icmp eq i32 %2963, %2965
  br i1 %2968, label %2969, label %3005

2969:                                             ; preds = %2967
  store i32 0, ptr %4, align 4, !tbaa !5
  %2970 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2970, ptr %6, align 4, !tbaa !5
  br i1 %2737, label %3012, label %2971

2971:                                             ; preds = %2969, %2999
  %2972 = phi i64 [ %3003, %2999 ], [ 1, %2969 ]
  %2973 = getelementptr inbounds i32, ptr %4, i64 %2972
  %2974 = load i32, ptr %2973, align 4, !tbaa !5
  %2975 = getelementptr inbounds i32, ptr %12, i64 %2972
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = add nsw i32 %2976, -1
  %2978 = icmp slt i32 %2974, %2977
  br i1 %2978, label %2979, label %2997

2979:                                             ; preds = %2971
  br i1 %2966, label %2989, label %2980

2980:                                             ; preds = %2979
  %2981 = shl i64 %2972, 32
  %2982 = add i64 %2981, -4294967296
  %2983 = ashr exact i64 %2982, 32
  %2984 = getelementptr inbounds i32, ptr %7, i64 %2983
  %2985 = load i32, ptr %2984, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %6, i64 %2972
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = add nsw i32 %2987, %2985
  store i32 %2988, ptr %2986, align 4, !tbaa !5
  br label %3007

2989:                                             ; preds = %2962, %2979
  %2990 = phi i32 [ %2974, %2979 ], [ %2963, %2962 ]
  %2991 = phi ptr [ %2973, %2979 ], [ %4, %2962 ]
  %2992 = phi i64 [ %2972, %2979 ], [ 0, %2962 ]
  %2993 = add nsw i32 %2990, 1
  store i32 %2993, ptr %2991, align 4, !tbaa !5
  %2994 = getelementptr inbounds i32, ptr %7, i64 %2992
  %2995 = load i32, ptr %2994, align 4, !tbaa !5
  %2996 = getelementptr inbounds i32, ptr %6, i64 %2992
  br label %3007

2997:                                             ; preds = %2971
  %2998 = icmp eq i32 %2974, %2977
  br i1 %2998, label %2999, label %3005

2999:                                             ; preds = %2997
  store i32 0, ptr %2973, align 4, !tbaa !5
  %3000 = getelementptr inbounds i32, ptr %8, i64 %2972
  %3001 = load i32, ptr %3000, align 4, !tbaa !5
  %3002 = getelementptr inbounds i32, ptr %6, i64 %2972
  store i32 %3001, ptr %3002, align 4, !tbaa !5
  %3003 = add nuw nsw i64 %2972, 1
  %3004 = icmp eq i64 %3003, %2735
  br i1 %3004, label %3012, label %2971, !llvm.loop !1042

3005:                                             ; preds = %2967, %2997
  %3006 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3007:                                             ; preds = %2980, %2989
  %3008 = phi ptr [ %2996, %2989 ], [ %2973, %2980 ]
  %3009 = phi i32 [ %2995, %2989 ], [ 1, %2980 ]
  %3010 = load i32, ptr %3008, align 4, !tbaa !5
  %3011 = add nsw i32 %3010, %3009
  store i32 %3011, ptr %3008, align 4, !tbaa !5
  br label %3012

3012:                                             ; preds = %2999, %3007, %2969, %2954
  %3013 = icmp eq i32 %2961, %5
  br i1 %3013, label %5401, label %2877, !llvm.loop !1043

3014:                                             ; preds = %2427
  %3015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

3016:                                             ; preds = %18
  %3017 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3018 = load ptr, ptr %3017, align 8, !tbaa !9
  %3019 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3020 = load ptr, ptr %3019, align 8, !tbaa !9
  store i64 0, ptr %3020, align 8, !tbaa !120
  %3021 = icmp eq i32 %13, 0
  br i1 %3021, label %3022, label %3025

3022:                                             ; preds = %3016
  %3023 = load double, ptr %3018, align 8, !tbaa !18
  %3024 = fptosi double %3023 to i64
  store i64 %3024, ptr %3020, align 8, !tbaa !120
  br label %5401

3025:                                             ; preds = %3016
  switch i32 %1, label %3615 [
    i32 1, label %3026
    i32 0, label %3325
  ]

3026:                                             ; preds = %3025
  %3027 = getelementptr inbounds i32, ptr %3, i64 %19
  %3028 = load i32, ptr %3027, align 4, !tbaa !5
  %3029 = icmp eq i32 %3028, 0
  %3030 = icmp sgt i32 %5, 0
  br i1 %3029, label %3040, label %3031

3031:                                             ; preds = %3026
  br i1 %3030, label %3032, label %5401

3032:                                             ; preds = %3031
  %3033 = icmp sgt i32 %13, 1
  %3034 = icmp sgt i32 %13, 0
  %3035 = add i32 %13, -2
  %3036 = zext i32 %3035 to i64
  %3037 = zext i32 %13 to i64
  %3038 = add nuw i32 %5, 1
  %3039 = icmp eq i32 %13, 1
  br label %3185

3040:                                             ; preds = %3026
  br i1 %3030, label %3041, label %5401

3041:                                             ; preds = %3040
  %3042 = icmp sgt i32 %13, 1
  %3043 = icmp sgt i32 %13, 0
  %3044 = add i32 %13, -2
  %3045 = zext i32 %3044 to i64
  %3046 = zext i32 %13 to i64
  %3047 = add nuw i32 %5, 1
  %3048 = icmp eq i32 %13, 1
  br label %3049

3049:                                             ; preds = %3041, %3183
  %3050 = phi i64 [ 0, %3041 ], [ %3134, %3183 ]
  %3051 = phi i32 [ 0, %3041 ], [ %3135, %3183 ]
  %3052 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3042, label %3053, label %3122

3053:                                             ; preds = %3049, %3112
  %3054 = phi i32 [ %3121, %3112 ], [ 0, %3049 ]
  %3055 = phi i64 [ %3063, %3112 ], [ %3046, %3049 ]
  %3056 = phi i64 [ %3120, %3112 ], [ %3045, %3049 ]
  %3057 = phi i32 [ %3118, %3112 ], [ %3052, %3049 ]
  %3058 = sub i32 %3044, %3054
  %3059 = tail call i32 @llvm.smin.i32(i32 %3058, i32 0)
  %3060 = sub i32 %3058, %3059
  %3061 = zext i32 %3060 to i64
  %3062 = add nuw nsw i64 %3061, 1
  %3063 = add nsw i64 %3055, -1
  %3064 = icmp ult i32 %3060, 31
  br i1 %3064, label %3100, label %3065

3065:                                             ; preds = %3053
  %3066 = and i64 %3062, 8589934560
  %3067 = sub i64 %3056, %3066
  br label %3068

3068:                                             ; preds = %3068, %3065
  %3069 = phi i64 [ 0, %3065 ], [ %3092, %3068 ]
  %3070 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3088, %3068 ]
  %3071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3089, %3068 ]
  %3072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3090, %3068 ]
  %3073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3091, %3068 ]
  %3074 = sub i64 %3056, %3069
  %3075 = getelementptr inbounds i32, ptr %9, i64 %3074
  %3076 = getelementptr inbounds i32, ptr %3075, i64 -7
  %3077 = load <8 x i32>, ptr %3076, align 4, !tbaa !5
  %3078 = shufflevector <8 x i32> %3077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3079 = getelementptr inbounds i32, ptr %3075, i64 -15
  %3080 = load <8 x i32>, ptr %3079, align 4, !tbaa !5
  %3081 = shufflevector <8 x i32> %3080, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3082 = getelementptr inbounds i32, ptr %3075, i64 -23
  %3083 = load <8 x i32>, ptr %3082, align 4, !tbaa !5
  %3084 = shufflevector <8 x i32> %3083, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3085 = getelementptr inbounds i32, ptr %3075, i64 -31
  %3086 = load <8 x i32>, ptr %3085, align 4, !tbaa !5
  %3087 = shufflevector <8 x i32> %3086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3088 = mul <8 x i32> %3078, %3070
  %3089 = mul <8 x i32> %3081, %3071
  %3090 = mul <8 x i32> %3084, %3072
  %3091 = mul <8 x i32> %3087, %3073
  %3092 = add nuw i64 %3069, 32
  %3093 = icmp eq i64 %3092, %3066
  br i1 %3093, label %3094, label %3068, !llvm.loop !1044

3094:                                             ; preds = %3068
  %3095 = mul <8 x i32> %3089, %3088
  %3096 = mul <8 x i32> %3090, %3095
  %3097 = mul <8 x i32> %3091, %3096
  %3098 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3097)
  %3099 = icmp eq i64 %3062, %3066
  br i1 %3099, label %3112, label %3100

3100:                                             ; preds = %3053, %3094
  %3101 = phi i64 [ %3056, %3053 ], [ %3067, %3094 ]
  %3102 = phi i32 [ 1, %3053 ], [ %3098, %3094 ]
  br label %3103

3103:                                             ; preds = %3100, %3103
  %3104 = phi i64 [ %3109, %3103 ], [ %3101, %3100 ]
  %3105 = phi i32 [ %3108, %3103 ], [ %3102, %3100 ]
  %3106 = getelementptr inbounds i32, ptr %9, i64 %3104
  %3107 = load i32, ptr %3106, align 4, !tbaa !5
  %3108 = mul nsw i32 %3107, %3105
  %3109 = add nsw i64 %3104, -1
  %3110 = trunc i64 %3104 to i32
  %3111 = icmp sgt i32 %3110, 0
  br i1 %3111, label %3103, label %3112, !llvm.loop !1045

3112:                                             ; preds = %3103, %3094
  %3113 = phi i32 [ %3098, %3094 ], [ %3108, %3103 ]
  %3114 = and i64 %3063, 4294967295
  %3115 = getelementptr inbounds i32, ptr %6, i64 %3114
  %3116 = load i32, ptr %3115, align 4, !tbaa !5
  %3117 = mul nsw i32 %3116, %3113
  %3118 = add nsw i32 %3117, %3057
  %3119 = icmp sgt i64 %3055, 2
  %3120 = add nsw i64 %3056, -1
  %3121 = add i32 %3054, 1
  br i1 %3119, label %3053, label %3122, !llvm.loop !1046

3122:                                             ; preds = %3112, %3049
  %3123 = phi i32 [ %3052, %3049 ], [ %3118, %3112 ]
  %3124 = sext i32 %3123 to i64
  %3125 = getelementptr inbounds double, ptr %2, i64 %3124
  %3126 = load double, ptr %3125, align 8, !tbaa !18
  %3127 = getelementptr inbounds double, ptr %3018, i64 %3124
  %3128 = load double, ptr %3127, align 8, !tbaa !18
  %3129 = fptosi double %3128 to i64
  %3130 = sitofp i64 %3050 to double
  %3131 = sitofp i64 %3129 to double
  %3132 = fmul fast double %3126, %3131
  %3133 = fadd fast double %3132, %3130
  %3134 = fptosi double %3133 to i64
  %3135 = add nuw nsw i32 %3051, 1
  br i1 %3043, label %3136, label %3183

3136:                                             ; preds = %3122
  %3137 = load i32, ptr %4, align 4, !tbaa !5
  %3138 = load i32, ptr %12, align 4, !tbaa !5
  %3139 = add nsw i32 %3138, -1
  %3140 = icmp slt i32 %3137, %3139
  br i1 %3140, label %3160, label %3141

3141:                                             ; preds = %3136
  %3142 = icmp eq i32 %3137, %3139
  br i1 %3142, label %3143, label %3176

3143:                                             ; preds = %3141
  store i32 0, ptr %4, align 4, !tbaa !5
  %3144 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3144, ptr %6, align 4, !tbaa !5
  br i1 %3048, label %3183, label %3145

3145:                                             ; preds = %3143, %3170
  %3146 = phi i64 [ %3174, %3170 ], [ 1, %3143 ]
  %3147 = getelementptr inbounds i32, ptr %4, i64 %3146
  %3148 = load i32, ptr %3147, align 4, !tbaa !5
  %3149 = getelementptr inbounds i32, ptr %12, i64 %3146
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = add nsw i32 %3150, -1
  %3152 = icmp slt i32 %3148, %3151
  br i1 %3152, label %3153, label %3168

3153:                                             ; preds = %3145
  br i1 %3140, label %3160, label %3154

3154:                                             ; preds = %3153
  %3155 = getelementptr inbounds i32, ptr %7, i64 %3146
  %3156 = load i32, ptr %3155, align 4, !tbaa !5
  %3157 = getelementptr inbounds i32, ptr %6, i64 %3146
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = add nsw i32 %3158, %3156
  store i32 %3159, ptr %3157, align 4, !tbaa !5
  br label %3178

3160:                                             ; preds = %3136, %3153
  %3161 = phi i32 [ %3148, %3153 ], [ %3137, %3136 ]
  %3162 = phi ptr [ %3147, %3153 ], [ %4, %3136 ]
  %3163 = phi i64 [ %3146, %3153 ], [ 0, %3136 ]
  %3164 = add nsw i32 %3161, 1
  store i32 %3164, ptr %3162, align 4, !tbaa !5
  %3165 = getelementptr inbounds i32, ptr %7, i64 %3163
  %3166 = load i32, ptr %3165, align 4, !tbaa !5
  %3167 = getelementptr inbounds i32, ptr %6, i64 %3163
  br label %3178

3168:                                             ; preds = %3145
  %3169 = icmp eq i32 %3148, %3151
  br i1 %3169, label %3170, label %3176

3170:                                             ; preds = %3168
  store i32 0, ptr %3147, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %8, i64 %3146
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = getelementptr inbounds i32, ptr %6, i64 %3146
  store i32 %3172, ptr %3173, align 4, !tbaa !5
  %3174 = add nuw nsw i64 %3146, 1
  %3175 = icmp eq i64 %3174, %3046
  br i1 %3175, label %3183, label %3145, !llvm.loop !1047

3176:                                             ; preds = %3141, %3168
  store i64 %3134, ptr %3020, align 8, !tbaa !120
  %3177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3178:                                             ; preds = %3154, %3160
  %3179 = phi ptr [ %3167, %3160 ], [ %3147, %3154 ]
  %3180 = phi i32 [ %3166, %3160 ], [ 1, %3154 ]
  %3181 = load i32, ptr %3179, align 4, !tbaa !5
  %3182 = add nsw i32 %3181, %3180
  store i32 %3182, ptr %3179, align 4, !tbaa !5
  br label %3183

3183:                                             ; preds = %3170, %3178, %3143, %3122
  %3184 = icmp eq i32 %3135, %5
  br i1 %3184, label %5397, label %3049, !llvm.loop !1048

3185:                                             ; preds = %3032, %3323
  %3186 = phi i64 [ 0, %3032 ], [ %3271, %3323 ]
  %3187 = phi i32 [ 0, %3032 ], [ %3272, %3323 ]
  %3188 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3033, label %3189, label %3258

3189:                                             ; preds = %3185, %3248
  %3190 = phi i32 [ %3257, %3248 ], [ 0, %3185 ]
  %3191 = phi i64 [ %3199, %3248 ], [ %3037, %3185 ]
  %3192 = phi i64 [ %3256, %3248 ], [ %3036, %3185 ]
  %3193 = phi i32 [ %3254, %3248 ], [ %3188, %3185 ]
  %3194 = sub i32 %3035, %3190
  %3195 = tail call i32 @llvm.smin.i32(i32 %3194, i32 0)
  %3196 = sub i32 %3194, %3195
  %3197 = zext i32 %3196 to i64
  %3198 = add nuw nsw i64 %3197, 1
  %3199 = add nsw i64 %3191, -1
  %3200 = icmp ult i32 %3196, 31
  br i1 %3200, label %3236, label %3201

3201:                                             ; preds = %3189
  %3202 = and i64 %3198, 8589934560
  %3203 = sub i64 %3192, %3202
  br label %3204

3204:                                             ; preds = %3204, %3201
  %3205 = phi i64 [ 0, %3201 ], [ %3228, %3204 ]
  %3206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3224, %3204 ]
  %3207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3225, %3204 ]
  %3208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3226, %3204 ]
  %3209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3227, %3204 ]
  %3210 = sub i64 %3192, %3205
  %3211 = getelementptr inbounds i32, ptr %11, i64 %3210
  %3212 = getelementptr inbounds i32, ptr %3211, i64 -7
  %3213 = load <8 x i32>, ptr %3212, align 4, !tbaa !5
  %3214 = shufflevector <8 x i32> %3213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3215 = getelementptr inbounds i32, ptr %3211, i64 -15
  %3216 = load <8 x i32>, ptr %3215, align 4, !tbaa !5
  %3217 = shufflevector <8 x i32> %3216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3218 = getelementptr inbounds i32, ptr %3211, i64 -23
  %3219 = load <8 x i32>, ptr %3218, align 4, !tbaa !5
  %3220 = shufflevector <8 x i32> %3219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3221 = getelementptr inbounds i32, ptr %3211, i64 -31
  %3222 = load <8 x i32>, ptr %3221, align 4, !tbaa !5
  %3223 = shufflevector <8 x i32> %3222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3224 = mul <8 x i32> %3214, %3206
  %3225 = mul <8 x i32> %3217, %3207
  %3226 = mul <8 x i32> %3220, %3208
  %3227 = mul <8 x i32> %3223, %3209
  %3228 = add nuw i64 %3205, 32
  %3229 = icmp eq i64 %3228, %3202
  br i1 %3229, label %3230, label %3204, !llvm.loop !1049

3230:                                             ; preds = %3204
  %3231 = mul <8 x i32> %3225, %3224
  %3232 = mul <8 x i32> %3226, %3231
  %3233 = mul <8 x i32> %3227, %3232
  %3234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3233)
  %3235 = icmp eq i64 %3198, %3202
  br i1 %3235, label %3248, label %3236

3236:                                             ; preds = %3189, %3230
  %3237 = phi i64 [ %3192, %3189 ], [ %3203, %3230 ]
  %3238 = phi i32 [ 1, %3189 ], [ %3234, %3230 ]
  br label %3239

3239:                                             ; preds = %3236, %3239
  %3240 = phi i64 [ %3245, %3239 ], [ %3237, %3236 ]
  %3241 = phi i32 [ %3244, %3239 ], [ %3238, %3236 ]
  %3242 = getelementptr inbounds i32, ptr %11, i64 %3240
  %3243 = load i32, ptr %3242, align 4, !tbaa !5
  %3244 = mul nsw i32 %3243, %3241
  %3245 = add nsw i64 %3240, -1
  %3246 = trunc i64 %3240 to i32
  %3247 = icmp sgt i32 %3246, 0
  br i1 %3247, label %3239, label %3248, !llvm.loop !1050

3248:                                             ; preds = %3239, %3230
  %3249 = phi i32 [ %3234, %3230 ], [ %3244, %3239 ]
  %3250 = and i64 %3199, 4294967295
  %3251 = getelementptr inbounds i32, ptr %6, i64 %3250
  %3252 = load i32, ptr %3251, align 4, !tbaa !5
  %3253 = mul nsw i32 %3252, %3249
  %3254 = add nsw i32 %3253, %3193
  %3255 = icmp sgt i64 %3191, 2
  %3256 = add nsw i64 %3192, -1
  %3257 = add i32 %3190, 1
  br i1 %3255, label %3189, label %3258, !llvm.loop !1051

3258:                                             ; preds = %3248, %3185
  %3259 = phi i32 [ %3188, %3185 ], [ %3254, %3248 ]
  %3260 = icmp slt i32 %3259, %5
  br i1 %3260, label %3263, label %3261

3261:                                             ; preds = %3258
  %3262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

3263:                                             ; preds = %3258
  %3264 = sext i32 %3259 to i64
  %3265 = getelementptr inbounds double, ptr %3018, i64 %3264
  %3266 = load double, ptr %3265, align 8, !tbaa !18
  %3267 = fptosi double %3266 to i64
  %3268 = sitofp i64 %3186 to double
  %3269 = sitofp i64 %3267 to double
  %3270 = fadd fast double %3268, %3269
  %3271 = fptosi double %3270 to i64
  store i64 %3271, ptr %3020, align 8, !tbaa !120
  %3272 = add nuw nsw i32 %3187, 1
  br i1 %3034, label %3273, label %3323

3273:                                             ; preds = %3263
  %3274 = load i32, ptr %4, align 4, !tbaa !5
  %3275 = load i32, ptr %12, align 4, !tbaa !5
  %3276 = add nsw i32 %3275, -1
  %3277 = icmp slt i32 %3274, %3276
  br i1 %3277, label %3300, label %3278

3278:                                             ; preds = %3273
  %3279 = icmp eq i32 %3274, %3276
  br i1 %3279, label %3280, label %3316

3280:                                             ; preds = %3278
  store i32 0, ptr %4, align 4, !tbaa !5
  %3281 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3281, ptr %6, align 4, !tbaa !5
  br i1 %3039, label %3323, label %3282

3282:                                             ; preds = %3280, %3310
  %3283 = phi i64 [ %3314, %3310 ], [ 1, %3280 ]
  %3284 = getelementptr inbounds i32, ptr %4, i64 %3283
  %3285 = load i32, ptr %3284, align 4, !tbaa !5
  %3286 = getelementptr inbounds i32, ptr %12, i64 %3283
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = add nsw i32 %3287, -1
  %3289 = icmp slt i32 %3285, %3288
  br i1 %3289, label %3290, label %3308

3290:                                             ; preds = %3282
  br i1 %3277, label %3300, label %3291

3291:                                             ; preds = %3290
  %3292 = shl i64 %3283, 32
  %3293 = add i64 %3292, -4294967296
  %3294 = ashr exact i64 %3293, 32
  %3295 = getelementptr inbounds i32, ptr %7, i64 %3294
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = getelementptr inbounds i32, ptr %6, i64 %3283
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = add nsw i32 %3298, %3296
  store i32 %3299, ptr %3297, align 4, !tbaa !5
  br label %3318

3300:                                             ; preds = %3273, %3290
  %3301 = phi i32 [ %3285, %3290 ], [ %3274, %3273 ]
  %3302 = phi ptr [ %3284, %3290 ], [ %4, %3273 ]
  %3303 = phi i64 [ %3283, %3290 ], [ 0, %3273 ]
  %3304 = add nsw i32 %3301, 1
  store i32 %3304, ptr %3302, align 4, !tbaa !5
  %3305 = getelementptr inbounds i32, ptr %7, i64 %3303
  %3306 = load i32, ptr %3305, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %6, i64 %3303
  br label %3318

3308:                                             ; preds = %3282
  %3309 = icmp eq i32 %3285, %3288
  br i1 %3309, label %3310, label %3316

3310:                                             ; preds = %3308
  store i32 0, ptr %3284, align 4, !tbaa !5
  %3311 = getelementptr inbounds i32, ptr %8, i64 %3283
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = getelementptr inbounds i32, ptr %6, i64 %3283
  store i32 %3312, ptr %3313, align 4, !tbaa !5
  %3314 = add nuw nsw i64 %3283, 1
  %3315 = icmp eq i64 %3314, %3037
  br i1 %3315, label %3323, label %3282, !llvm.loop !1052

3316:                                             ; preds = %3278, %3308
  %3317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3318:                                             ; preds = %3291, %3300
  %3319 = phi ptr [ %3307, %3300 ], [ %3284, %3291 ]
  %3320 = phi i32 [ %3306, %3300 ], [ 1, %3291 ]
  %3321 = load i32, ptr %3319, align 4, !tbaa !5
  %3322 = add nsw i32 %3321, %3320
  store i32 %3322, ptr %3319, align 4, !tbaa !5
  br label %3323

3323:                                             ; preds = %3310, %3318, %3280, %3263
  %3324 = icmp eq i32 %3272, %5
  br i1 %3324, label %5401, label %3185, !llvm.loop !1053

3325:                                             ; preds = %3025
  %3326 = getelementptr inbounds i32, ptr %3, i64 %19
  %3327 = load i32, ptr %3326, align 4, !tbaa !5
  %3328 = icmp eq i32 %3327, 0
  %3329 = icmp sgt i32 %5, 0
  br i1 %3328, label %3339, label %3330

3330:                                             ; preds = %3325
  br i1 %3329, label %3331, label %5401

3331:                                             ; preds = %3330
  %3332 = icmp sgt i32 %13, 1
  %3333 = icmp sgt i32 %13, 0
  %3334 = add i32 %13, -2
  %3335 = zext i32 %3334 to i64
  %3336 = zext i32 %13 to i64
  %3337 = add nuw i32 %5, 1
  %3338 = icmp eq i32 %13, 1
  br label %3478

3339:                                             ; preds = %3325
  br i1 %3329, label %3340, label %5401

3340:                                             ; preds = %3339
  %3341 = icmp sgt i32 %13, 1
  %3342 = icmp sgt i32 %13, 0
  %3343 = add i32 %13, -2
  %3344 = zext i32 %3343 to i64
  %3345 = zext i32 %13 to i64
  %3346 = add nuw i32 %5, 1
  %3347 = icmp eq i32 %13, 1
  br label %3348

3348:                                             ; preds = %3340, %3476
  %3349 = phi i64 [ 0, %3340 ], [ %3427, %3476 ]
  %3350 = phi i32 [ 0, %3340 ], [ %3428, %3476 ]
  %3351 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3341, label %3352, label %3421

3352:                                             ; preds = %3348, %3411
  %3353 = phi i32 [ %3420, %3411 ], [ 0, %3348 ]
  %3354 = phi i64 [ %3362, %3411 ], [ %3345, %3348 ]
  %3355 = phi i64 [ %3419, %3411 ], [ %3344, %3348 ]
  %3356 = phi i32 [ %3417, %3411 ], [ %3351, %3348 ]
  %3357 = sub i32 %3343, %3353
  %3358 = tail call i32 @llvm.smin.i32(i32 %3357, i32 0)
  %3359 = sub i32 %3357, %3358
  %3360 = zext i32 %3359 to i64
  %3361 = add nuw nsw i64 %3360, 1
  %3362 = add nsw i64 %3354, -1
  %3363 = icmp ult i32 %3359, 31
  br i1 %3363, label %3399, label %3364

3364:                                             ; preds = %3352
  %3365 = and i64 %3361, 8589934560
  %3366 = sub i64 %3355, %3365
  br label %3367

3367:                                             ; preds = %3367, %3364
  %3368 = phi i64 [ 0, %3364 ], [ %3391, %3367 ]
  %3369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3387, %3367 ]
  %3370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3388, %3367 ]
  %3371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3389, %3367 ]
  %3372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3390, %3367 ]
  %3373 = sub i64 %3355, %3368
  %3374 = getelementptr inbounds i32, ptr %9, i64 %3373
  %3375 = getelementptr inbounds i32, ptr %3374, i64 -7
  %3376 = load <8 x i32>, ptr %3375, align 4, !tbaa !5
  %3377 = shufflevector <8 x i32> %3376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3378 = getelementptr inbounds i32, ptr %3374, i64 -15
  %3379 = load <8 x i32>, ptr %3378, align 4, !tbaa !5
  %3380 = shufflevector <8 x i32> %3379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3381 = getelementptr inbounds i32, ptr %3374, i64 -23
  %3382 = load <8 x i32>, ptr %3381, align 4, !tbaa !5
  %3383 = shufflevector <8 x i32> %3382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3384 = getelementptr inbounds i32, ptr %3374, i64 -31
  %3385 = load <8 x i32>, ptr %3384, align 4, !tbaa !5
  %3386 = shufflevector <8 x i32> %3385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3387 = mul <8 x i32> %3377, %3369
  %3388 = mul <8 x i32> %3380, %3370
  %3389 = mul <8 x i32> %3383, %3371
  %3390 = mul <8 x i32> %3386, %3372
  %3391 = add nuw i64 %3368, 32
  %3392 = icmp eq i64 %3391, %3365
  br i1 %3392, label %3393, label %3367, !llvm.loop !1054

3393:                                             ; preds = %3367
  %3394 = mul <8 x i32> %3388, %3387
  %3395 = mul <8 x i32> %3389, %3394
  %3396 = mul <8 x i32> %3390, %3395
  %3397 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3396)
  %3398 = icmp eq i64 %3361, %3365
  br i1 %3398, label %3411, label %3399

3399:                                             ; preds = %3352, %3393
  %3400 = phi i64 [ %3355, %3352 ], [ %3366, %3393 ]
  %3401 = phi i32 [ 1, %3352 ], [ %3397, %3393 ]
  br label %3402

3402:                                             ; preds = %3399, %3402
  %3403 = phi i64 [ %3408, %3402 ], [ %3400, %3399 ]
  %3404 = phi i32 [ %3407, %3402 ], [ %3401, %3399 ]
  %3405 = getelementptr inbounds i32, ptr %9, i64 %3403
  %3406 = load i32, ptr %3405, align 4, !tbaa !5
  %3407 = mul nsw i32 %3406, %3404
  %3408 = add nsw i64 %3403, -1
  %3409 = trunc i64 %3403 to i32
  %3410 = icmp sgt i32 %3409, 0
  br i1 %3410, label %3402, label %3411, !llvm.loop !1055

3411:                                             ; preds = %3402, %3393
  %3412 = phi i32 [ %3397, %3393 ], [ %3407, %3402 ]
  %3413 = and i64 %3362, 4294967295
  %3414 = getelementptr inbounds i32, ptr %6, i64 %3413
  %3415 = load i32, ptr %3414, align 4, !tbaa !5
  %3416 = mul nsw i32 %3415, %3412
  %3417 = add nsw i32 %3416, %3356
  %3418 = icmp sgt i64 %3354, 2
  %3419 = add nsw i64 %3355, -1
  %3420 = add i32 %3353, 1
  br i1 %3418, label %3352, label %3421, !llvm.loop !1056

3421:                                             ; preds = %3411, %3348
  %3422 = phi i32 [ %3351, %3348 ], [ %3417, %3411 ]
  %3423 = sext i32 %3422 to i64
  %3424 = getelementptr inbounds double, ptr %3018, i64 %3423
  %3425 = load double, ptr %3424, align 8, !tbaa !18
  %3426 = fptosi double %3425 to i64
  %3427 = add nsw i64 %3349, %3426
  %3428 = add nuw nsw i32 %3350, 1
  br i1 %3342, label %3429, label %3476

3429:                                             ; preds = %3421
  %3430 = load i32, ptr %4, align 4, !tbaa !5
  %3431 = load i32, ptr %12, align 4, !tbaa !5
  %3432 = add nsw i32 %3431, -1
  %3433 = icmp slt i32 %3430, %3432
  br i1 %3433, label %3453, label %3434

3434:                                             ; preds = %3429
  %3435 = icmp eq i32 %3430, %3432
  br i1 %3435, label %3436, label %3469

3436:                                             ; preds = %3434
  store i32 0, ptr %4, align 4, !tbaa !5
  %3437 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3437, ptr %6, align 4, !tbaa !5
  br i1 %3347, label %3476, label %3438

3438:                                             ; preds = %3436, %3463
  %3439 = phi i64 [ %3467, %3463 ], [ 1, %3436 ]
  %3440 = getelementptr inbounds i32, ptr %4, i64 %3439
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = getelementptr inbounds i32, ptr %12, i64 %3439
  %3443 = load i32, ptr %3442, align 4, !tbaa !5
  %3444 = add nsw i32 %3443, -1
  %3445 = icmp slt i32 %3441, %3444
  br i1 %3445, label %3446, label %3461

3446:                                             ; preds = %3438
  br i1 %3433, label %3453, label %3447

3447:                                             ; preds = %3446
  %3448 = getelementptr inbounds i32, ptr %7, i64 %3439
  %3449 = load i32, ptr %3448, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %6, i64 %3439
  %3451 = load i32, ptr %3450, align 4, !tbaa !5
  %3452 = add nsw i32 %3451, %3449
  store i32 %3452, ptr %3450, align 4, !tbaa !5
  br label %3471

3453:                                             ; preds = %3429, %3446
  %3454 = phi i32 [ %3441, %3446 ], [ %3430, %3429 ]
  %3455 = phi ptr [ %3440, %3446 ], [ %4, %3429 ]
  %3456 = phi i64 [ %3439, %3446 ], [ 0, %3429 ]
  %3457 = add nsw i32 %3454, 1
  store i32 %3457, ptr %3455, align 4, !tbaa !5
  %3458 = getelementptr inbounds i32, ptr %7, i64 %3456
  %3459 = load i32, ptr %3458, align 4, !tbaa !5
  %3460 = getelementptr inbounds i32, ptr %6, i64 %3456
  br label %3471

3461:                                             ; preds = %3438
  %3462 = icmp eq i32 %3441, %3444
  br i1 %3462, label %3463, label %3469

3463:                                             ; preds = %3461
  store i32 0, ptr %3440, align 4, !tbaa !5
  %3464 = getelementptr inbounds i32, ptr %8, i64 %3439
  %3465 = load i32, ptr %3464, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %6, i64 %3439
  store i32 %3465, ptr %3466, align 4, !tbaa !5
  %3467 = add nuw nsw i64 %3439, 1
  %3468 = icmp eq i64 %3467, %3345
  br i1 %3468, label %3476, label %3438, !llvm.loop !1057

3469:                                             ; preds = %3434, %3461
  store i64 %3427, ptr %3020, align 8, !tbaa !120
  %3470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3471:                                             ; preds = %3447, %3453
  %3472 = phi ptr [ %3460, %3453 ], [ %3440, %3447 ]
  %3473 = phi i32 [ %3459, %3453 ], [ 1, %3447 ]
  %3474 = load i32, ptr %3472, align 4, !tbaa !5
  %3475 = add nsw i32 %3474, %3473
  store i32 %3475, ptr %3472, align 4, !tbaa !5
  br label %3476

3476:                                             ; preds = %3463, %3471, %3436, %3421
  %3477 = icmp eq i32 %3428, %5
  br i1 %3477, label %5398, label %3348, !llvm.loop !1058

3478:                                             ; preds = %3331, %3613
  %3479 = phi i64 [ 0, %3331 ], [ %3561, %3613 ]
  %3480 = phi i32 [ 0, %3331 ], [ %3562, %3613 ]
  %3481 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3332, label %3482, label %3551

3482:                                             ; preds = %3478, %3541
  %3483 = phi i32 [ %3550, %3541 ], [ 0, %3478 ]
  %3484 = phi i64 [ %3492, %3541 ], [ %3336, %3478 ]
  %3485 = phi i64 [ %3549, %3541 ], [ %3335, %3478 ]
  %3486 = phi i32 [ %3547, %3541 ], [ %3481, %3478 ]
  %3487 = sub i32 %3334, %3483
  %3488 = tail call i32 @llvm.smin.i32(i32 %3487, i32 0)
  %3489 = sub i32 %3487, %3488
  %3490 = zext i32 %3489 to i64
  %3491 = add nuw nsw i64 %3490, 1
  %3492 = add nsw i64 %3484, -1
  %3493 = icmp ult i32 %3489, 31
  br i1 %3493, label %3529, label %3494

3494:                                             ; preds = %3482
  %3495 = and i64 %3491, 8589934560
  %3496 = sub i64 %3485, %3495
  br label %3497

3497:                                             ; preds = %3497, %3494
  %3498 = phi i64 [ 0, %3494 ], [ %3521, %3497 ]
  %3499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3517, %3497 ]
  %3500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3518, %3497 ]
  %3501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3519, %3497 ]
  %3502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3520, %3497 ]
  %3503 = sub i64 %3485, %3498
  %3504 = getelementptr inbounds i32, ptr %11, i64 %3503
  %3505 = getelementptr inbounds i32, ptr %3504, i64 -7
  %3506 = load <8 x i32>, ptr %3505, align 4, !tbaa !5
  %3507 = shufflevector <8 x i32> %3506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3508 = getelementptr inbounds i32, ptr %3504, i64 -15
  %3509 = load <8 x i32>, ptr %3508, align 4, !tbaa !5
  %3510 = shufflevector <8 x i32> %3509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3511 = getelementptr inbounds i32, ptr %3504, i64 -23
  %3512 = load <8 x i32>, ptr %3511, align 4, !tbaa !5
  %3513 = shufflevector <8 x i32> %3512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3514 = getelementptr inbounds i32, ptr %3504, i64 -31
  %3515 = load <8 x i32>, ptr %3514, align 4, !tbaa !5
  %3516 = shufflevector <8 x i32> %3515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3517 = mul <8 x i32> %3507, %3499
  %3518 = mul <8 x i32> %3510, %3500
  %3519 = mul <8 x i32> %3513, %3501
  %3520 = mul <8 x i32> %3516, %3502
  %3521 = add nuw i64 %3498, 32
  %3522 = icmp eq i64 %3521, %3495
  br i1 %3522, label %3523, label %3497, !llvm.loop !1059

3523:                                             ; preds = %3497
  %3524 = mul <8 x i32> %3518, %3517
  %3525 = mul <8 x i32> %3519, %3524
  %3526 = mul <8 x i32> %3520, %3525
  %3527 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3526)
  %3528 = icmp eq i64 %3491, %3495
  br i1 %3528, label %3541, label %3529

3529:                                             ; preds = %3482, %3523
  %3530 = phi i64 [ %3485, %3482 ], [ %3496, %3523 ]
  %3531 = phi i32 [ 1, %3482 ], [ %3527, %3523 ]
  br label %3532

3532:                                             ; preds = %3529, %3532
  %3533 = phi i64 [ %3538, %3532 ], [ %3530, %3529 ]
  %3534 = phi i32 [ %3537, %3532 ], [ %3531, %3529 ]
  %3535 = getelementptr inbounds i32, ptr %11, i64 %3533
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = mul nsw i32 %3536, %3534
  %3538 = add nsw i64 %3533, -1
  %3539 = trunc i64 %3533 to i32
  %3540 = icmp sgt i32 %3539, 0
  br i1 %3540, label %3532, label %3541, !llvm.loop !1060

3541:                                             ; preds = %3532, %3523
  %3542 = phi i32 [ %3527, %3523 ], [ %3537, %3532 ]
  %3543 = and i64 %3492, 4294967295
  %3544 = getelementptr inbounds i32, ptr %6, i64 %3543
  %3545 = load i32, ptr %3544, align 4, !tbaa !5
  %3546 = mul nsw i32 %3545, %3542
  %3547 = add nsw i32 %3546, %3486
  %3548 = icmp sgt i64 %3484, 2
  %3549 = add nsw i64 %3485, -1
  %3550 = add i32 %3483, 1
  br i1 %3548, label %3482, label %3551, !llvm.loop !1061

3551:                                             ; preds = %3541, %3478
  %3552 = phi i32 [ %3481, %3478 ], [ %3547, %3541 ]
  %3553 = icmp slt i32 %3552, %5
  br i1 %3553, label %3556, label %3554

3554:                                             ; preds = %3551
  %3555 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

3556:                                             ; preds = %3551
  %3557 = sext i32 %3552 to i64
  %3558 = getelementptr inbounds double, ptr %3018, i64 %3557
  %3559 = load double, ptr %3558, align 8, !tbaa !18
  %3560 = fptosi double %3559 to i64
  %3561 = add nsw i64 %3479, %3560
  store i64 %3561, ptr %3020, align 8, !tbaa !120
  %3562 = add nuw nsw i32 %3480, 1
  br i1 %3333, label %3563, label %3613

3563:                                             ; preds = %3556
  %3564 = load i32, ptr %4, align 4, !tbaa !5
  %3565 = load i32, ptr %12, align 4, !tbaa !5
  %3566 = add nsw i32 %3565, -1
  %3567 = icmp slt i32 %3564, %3566
  br i1 %3567, label %3590, label %3568

3568:                                             ; preds = %3563
  %3569 = icmp eq i32 %3564, %3566
  br i1 %3569, label %3570, label %3606

3570:                                             ; preds = %3568
  store i32 0, ptr %4, align 4, !tbaa !5
  %3571 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3571, ptr %6, align 4, !tbaa !5
  br i1 %3338, label %3613, label %3572

3572:                                             ; preds = %3570, %3600
  %3573 = phi i64 [ %3604, %3600 ], [ 1, %3570 ]
  %3574 = getelementptr inbounds i32, ptr %4, i64 %3573
  %3575 = load i32, ptr %3574, align 4, !tbaa !5
  %3576 = getelementptr inbounds i32, ptr %12, i64 %3573
  %3577 = load i32, ptr %3576, align 4, !tbaa !5
  %3578 = add nsw i32 %3577, -1
  %3579 = icmp slt i32 %3575, %3578
  br i1 %3579, label %3580, label %3598

3580:                                             ; preds = %3572
  br i1 %3567, label %3590, label %3581

3581:                                             ; preds = %3580
  %3582 = shl i64 %3573, 32
  %3583 = add i64 %3582, -4294967296
  %3584 = ashr exact i64 %3583, 32
  %3585 = getelementptr inbounds i32, ptr %7, i64 %3584
  %3586 = load i32, ptr %3585, align 4, !tbaa !5
  %3587 = getelementptr inbounds i32, ptr %6, i64 %3573
  %3588 = load i32, ptr %3587, align 4, !tbaa !5
  %3589 = add nsw i32 %3588, %3586
  store i32 %3589, ptr %3587, align 4, !tbaa !5
  br label %3608

3590:                                             ; preds = %3563, %3580
  %3591 = phi i32 [ %3575, %3580 ], [ %3564, %3563 ]
  %3592 = phi ptr [ %3574, %3580 ], [ %4, %3563 ]
  %3593 = phi i64 [ %3573, %3580 ], [ 0, %3563 ]
  %3594 = add nsw i32 %3591, 1
  store i32 %3594, ptr %3592, align 4, !tbaa !5
  %3595 = getelementptr inbounds i32, ptr %7, i64 %3593
  %3596 = load i32, ptr %3595, align 4, !tbaa !5
  %3597 = getelementptr inbounds i32, ptr %6, i64 %3593
  br label %3608

3598:                                             ; preds = %3572
  %3599 = icmp eq i32 %3575, %3578
  br i1 %3599, label %3600, label %3606

3600:                                             ; preds = %3598
  store i32 0, ptr %3574, align 4, !tbaa !5
  %3601 = getelementptr inbounds i32, ptr %8, i64 %3573
  %3602 = load i32, ptr %3601, align 4, !tbaa !5
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3573
  store i32 %3602, ptr %3603, align 4, !tbaa !5
  %3604 = add nuw nsw i64 %3573, 1
  %3605 = icmp eq i64 %3604, %3336
  br i1 %3605, label %3613, label %3572, !llvm.loop !1062

3606:                                             ; preds = %3568, %3598
  %3607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3608:                                             ; preds = %3581, %3590
  %3609 = phi ptr [ %3597, %3590 ], [ %3574, %3581 ]
  %3610 = phi i32 [ %3596, %3590 ], [ 1, %3581 ]
  %3611 = load i32, ptr %3609, align 4, !tbaa !5
  %3612 = add nsw i32 %3611, %3610
  store i32 %3612, ptr %3609, align 4, !tbaa !5
  br label %3613

3613:                                             ; preds = %3600, %3608, %3570, %3556
  %3614 = icmp eq i32 %3562, %5
  br i1 %3614, label %5401, label %3478, !llvm.loop !1063

3615:                                             ; preds = %3025
  %3616 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1504, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

3617:                                             ; preds = %18
  %3618 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3619 = load ptr, ptr %3618, align 8, !tbaa !9
  %3620 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3621 = load ptr, ptr %3620, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3621, align 8, !tbaa !18
  %3622 = icmp eq i32 %13, 0
  br i1 %3622, label %3623, label %3625

3623:                                             ; preds = %3617
  %3624 = load double, ptr %3619, align 8, !tbaa !18
  store double %3624, ptr %3621, align 8, !tbaa !18
  br label %5401

3625:                                             ; preds = %3617
  switch i32 %1, label %4205 [
    i32 1, label %3626
    i32 0, label %3917
  ]

3626:                                             ; preds = %3625
  %3627 = getelementptr inbounds i32, ptr %3, i64 %19
  %3628 = load i32, ptr %3627, align 4, !tbaa !5
  %3629 = icmp eq i32 %3628, 0
  %3630 = icmp sgt i32 %5, 0
  br i1 %3629, label %3640, label %3631

3631:                                             ; preds = %3626
  br i1 %3630, label %3632, label %5401

3632:                                             ; preds = %3631
  %3633 = icmp sgt i32 %13, 1
  %3634 = icmp sgt i32 %13, 0
  %3635 = add i32 %13, -2
  %3636 = zext i32 %3635 to i64
  %3637 = zext i32 %13 to i64
  %3638 = add nuw i32 %5, 1
  %3639 = icmp eq i32 %13, 1
  br label %3781

3640:                                             ; preds = %3626
  br i1 %3630, label %3641, label %5401

3641:                                             ; preds = %3640
  %3642 = icmp sgt i32 %13, 1
  %3643 = icmp sgt i32 %13, 0
  %3644 = add i32 %13, -2
  %3645 = zext i32 %3644 to i64
  %3646 = zext i32 %13 to i64
  %3647 = add nuw i32 %5, 1
  %3648 = icmp eq i32 %13, 1
  br label %3649

3649:                                             ; preds = %3641, %3779
  %3650 = phi double [ 0.000000e+00, %3641 ], [ %3730, %3779 ]
  %3651 = phi i32 [ 0, %3641 ], [ %3731, %3779 ]
  %3652 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3642, label %3653, label %3722

3653:                                             ; preds = %3649, %3712
  %3654 = phi i32 [ %3721, %3712 ], [ 0, %3649 ]
  %3655 = phi i64 [ %3663, %3712 ], [ %3646, %3649 ]
  %3656 = phi i64 [ %3720, %3712 ], [ %3645, %3649 ]
  %3657 = phi i32 [ %3718, %3712 ], [ %3652, %3649 ]
  %3658 = sub i32 %3644, %3654
  %3659 = tail call i32 @llvm.smin.i32(i32 %3658, i32 0)
  %3660 = sub i32 %3658, %3659
  %3661 = zext i32 %3660 to i64
  %3662 = add nuw nsw i64 %3661, 1
  %3663 = add nsw i64 %3655, -1
  %3664 = icmp ult i32 %3660, 31
  br i1 %3664, label %3700, label %3665

3665:                                             ; preds = %3653
  %3666 = and i64 %3662, 8589934560
  %3667 = sub i64 %3656, %3666
  br label %3668

3668:                                             ; preds = %3668, %3665
  %3669 = phi i64 [ 0, %3665 ], [ %3692, %3668 ]
  %3670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3688, %3668 ]
  %3671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3689, %3668 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3690, %3668 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3691, %3668 ]
  %3674 = sub i64 %3656, %3669
  %3675 = getelementptr inbounds i32, ptr %9, i64 %3674
  %3676 = getelementptr inbounds i32, ptr %3675, i64 -7
  %3677 = load <8 x i32>, ptr %3676, align 4, !tbaa !5
  %3678 = shufflevector <8 x i32> %3677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3679 = getelementptr inbounds i32, ptr %3675, i64 -15
  %3680 = load <8 x i32>, ptr %3679, align 4, !tbaa !5
  %3681 = shufflevector <8 x i32> %3680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3682 = getelementptr inbounds i32, ptr %3675, i64 -23
  %3683 = load <8 x i32>, ptr %3682, align 4, !tbaa !5
  %3684 = shufflevector <8 x i32> %3683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3685 = getelementptr inbounds i32, ptr %3675, i64 -31
  %3686 = load <8 x i32>, ptr %3685, align 4, !tbaa !5
  %3687 = shufflevector <8 x i32> %3686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3688 = mul <8 x i32> %3678, %3670
  %3689 = mul <8 x i32> %3681, %3671
  %3690 = mul <8 x i32> %3684, %3672
  %3691 = mul <8 x i32> %3687, %3673
  %3692 = add nuw i64 %3669, 32
  %3693 = icmp eq i64 %3692, %3666
  br i1 %3693, label %3694, label %3668, !llvm.loop !1064

3694:                                             ; preds = %3668
  %3695 = mul <8 x i32> %3689, %3688
  %3696 = mul <8 x i32> %3690, %3695
  %3697 = mul <8 x i32> %3691, %3696
  %3698 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3697)
  %3699 = icmp eq i64 %3662, %3666
  br i1 %3699, label %3712, label %3700

3700:                                             ; preds = %3653, %3694
  %3701 = phi i64 [ %3656, %3653 ], [ %3667, %3694 ]
  %3702 = phi i32 [ 1, %3653 ], [ %3698, %3694 ]
  br label %3703

3703:                                             ; preds = %3700, %3703
  %3704 = phi i64 [ %3709, %3703 ], [ %3701, %3700 ]
  %3705 = phi i32 [ %3708, %3703 ], [ %3702, %3700 ]
  %3706 = getelementptr inbounds i32, ptr %9, i64 %3704
  %3707 = load i32, ptr %3706, align 4, !tbaa !5
  %3708 = mul nsw i32 %3707, %3705
  %3709 = add nsw i64 %3704, -1
  %3710 = trunc i64 %3704 to i32
  %3711 = icmp sgt i32 %3710, 0
  br i1 %3711, label %3703, label %3712, !llvm.loop !1065

3712:                                             ; preds = %3703, %3694
  %3713 = phi i32 [ %3698, %3694 ], [ %3708, %3703 ]
  %3714 = and i64 %3663, 4294967295
  %3715 = getelementptr inbounds i32, ptr %6, i64 %3714
  %3716 = load i32, ptr %3715, align 4, !tbaa !5
  %3717 = mul nsw i32 %3716, %3713
  %3718 = add nsw i32 %3717, %3657
  %3719 = icmp sgt i64 %3655, 2
  %3720 = add nsw i64 %3656, -1
  %3721 = add i32 %3654, 1
  br i1 %3719, label %3653, label %3722, !llvm.loop !1066

3722:                                             ; preds = %3712, %3649
  %3723 = phi i32 [ %3652, %3649 ], [ %3718, %3712 ]
  %3724 = sext i32 %3723 to i64
  %3725 = getelementptr inbounds double, ptr %2, i64 %3724
  %3726 = load double, ptr %3725, align 8, !tbaa !18
  %3727 = getelementptr inbounds double, ptr %3619, i64 %3724
  %3728 = load double, ptr %3727, align 8, !tbaa !18
  %3729 = fmul fast double %3728, %3726
  %3730 = fadd fast double %3650, %3729
  store double %3730, ptr %3621, align 8, !tbaa !18
  %3731 = add nuw nsw i32 %3651, 1
  br i1 %3643, label %3732, label %3779

3732:                                             ; preds = %3722
  %3733 = load i32, ptr %4, align 4, !tbaa !5
  %3734 = load i32, ptr %12, align 4, !tbaa !5
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3756, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3772

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !5
  %3740 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3740, ptr %6, align 4, !tbaa !5
  br i1 %3648, label %3779, label %3741

3741:                                             ; preds = %3739, %3766
  %3742 = phi i64 [ %3770, %3766 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !5
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !5
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3764

3749:                                             ; preds = %3741
  br i1 %3736, label %3756, label %3750

3750:                                             ; preds = %3749
  %3751 = getelementptr inbounds i32, ptr %7, i64 %3742
  %3752 = load i32, ptr %3751, align 4, !tbaa !5
  %3753 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3754 = load i32, ptr %3753, align 4, !tbaa !5
  %3755 = add nsw i32 %3754, %3752
  store i32 %3755, ptr %3753, align 4, !tbaa !5
  br label %3774

3756:                                             ; preds = %3732, %3749
  %3757 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3758 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3759 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3760 = add nsw i32 %3757, 1
  store i32 %3760, ptr %3758, align 4, !tbaa !5
  %3761 = getelementptr inbounds i32, ptr %7, i64 %3759
  %3762 = load i32, ptr %3761, align 4, !tbaa !5
  %3763 = getelementptr inbounds i32, ptr %6, i64 %3759
  br label %3774

3764:                                             ; preds = %3741
  %3765 = icmp eq i32 %3744, %3747
  br i1 %3765, label %3766, label %3772

3766:                                             ; preds = %3764
  store i32 0, ptr %3743, align 4, !tbaa !5
  %3767 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3768 = load i32, ptr %3767, align 4, !tbaa !5
  %3769 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3768, ptr %3769, align 4, !tbaa !5
  %3770 = add nuw nsw i64 %3742, 1
  %3771 = icmp eq i64 %3770, %3646
  br i1 %3771, label %3779, label %3741, !llvm.loop !1067

3772:                                             ; preds = %3737, %3764
  %3773 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3774:                                             ; preds = %3750, %3756
  %3775 = phi ptr [ %3763, %3756 ], [ %3743, %3750 ]
  %3776 = phi i32 [ %3762, %3756 ], [ 1, %3750 ]
  %3777 = load i32, ptr %3775, align 4, !tbaa !5
  %3778 = add nsw i32 %3777, %3776
  store i32 %3778, ptr %3775, align 4, !tbaa !5
  br label %3779

3779:                                             ; preds = %3766, %3774, %3739, %3722
  %3780 = icmp eq i32 %3731, %5
  br i1 %3780, label %5401, label %3649, !llvm.loop !1068

3781:                                             ; preds = %3632, %3915
  %3782 = phi double [ 0.000000e+00, %3632 ], [ %3863, %3915 ]
  %3783 = phi i32 [ 0, %3632 ], [ %3864, %3915 ]
  %3784 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3633, label %3785, label %3854

3785:                                             ; preds = %3781, %3844
  %3786 = phi i32 [ %3853, %3844 ], [ 0, %3781 ]
  %3787 = phi i64 [ %3795, %3844 ], [ %3637, %3781 ]
  %3788 = phi i64 [ %3852, %3844 ], [ %3636, %3781 ]
  %3789 = phi i32 [ %3850, %3844 ], [ %3784, %3781 ]
  %3790 = sub i32 %3635, %3786
  %3791 = tail call i32 @llvm.smin.i32(i32 %3790, i32 0)
  %3792 = sub i32 %3790, %3791
  %3793 = zext i32 %3792 to i64
  %3794 = add nuw nsw i64 %3793, 1
  %3795 = add nsw i64 %3787, -1
  %3796 = icmp ult i32 %3792, 31
  br i1 %3796, label %3832, label %3797

3797:                                             ; preds = %3785
  %3798 = and i64 %3794, 8589934560
  %3799 = sub i64 %3788, %3798
  br label %3800

3800:                                             ; preds = %3800, %3797
  %3801 = phi i64 [ 0, %3797 ], [ %3824, %3800 ]
  %3802 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3820, %3800 ]
  %3803 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3821, %3800 ]
  %3804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3822, %3800 ]
  %3805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3823, %3800 ]
  %3806 = sub i64 %3788, %3801
  %3807 = getelementptr inbounds i32, ptr %11, i64 %3806
  %3808 = getelementptr inbounds i32, ptr %3807, i64 -7
  %3809 = load <8 x i32>, ptr %3808, align 4, !tbaa !5
  %3810 = shufflevector <8 x i32> %3809, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3811 = getelementptr inbounds i32, ptr %3807, i64 -15
  %3812 = load <8 x i32>, ptr %3811, align 4, !tbaa !5
  %3813 = shufflevector <8 x i32> %3812, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3814 = getelementptr inbounds i32, ptr %3807, i64 -23
  %3815 = load <8 x i32>, ptr %3814, align 4, !tbaa !5
  %3816 = shufflevector <8 x i32> %3815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3817 = getelementptr inbounds i32, ptr %3807, i64 -31
  %3818 = load <8 x i32>, ptr %3817, align 4, !tbaa !5
  %3819 = shufflevector <8 x i32> %3818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3820 = mul <8 x i32> %3810, %3802
  %3821 = mul <8 x i32> %3813, %3803
  %3822 = mul <8 x i32> %3816, %3804
  %3823 = mul <8 x i32> %3819, %3805
  %3824 = add nuw i64 %3801, 32
  %3825 = icmp eq i64 %3824, %3798
  br i1 %3825, label %3826, label %3800, !llvm.loop !1069

3826:                                             ; preds = %3800
  %3827 = mul <8 x i32> %3821, %3820
  %3828 = mul <8 x i32> %3822, %3827
  %3829 = mul <8 x i32> %3823, %3828
  %3830 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3829)
  %3831 = icmp eq i64 %3794, %3798
  br i1 %3831, label %3844, label %3832

3832:                                             ; preds = %3785, %3826
  %3833 = phi i64 [ %3788, %3785 ], [ %3799, %3826 ]
  %3834 = phi i32 [ 1, %3785 ], [ %3830, %3826 ]
  br label %3835

3835:                                             ; preds = %3832, %3835
  %3836 = phi i64 [ %3841, %3835 ], [ %3833, %3832 ]
  %3837 = phi i32 [ %3840, %3835 ], [ %3834, %3832 ]
  %3838 = getelementptr inbounds i32, ptr %11, i64 %3836
  %3839 = load i32, ptr %3838, align 4, !tbaa !5
  %3840 = mul nsw i32 %3839, %3837
  %3841 = add nsw i64 %3836, -1
  %3842 = trunc i64 %3836 to i32
  %3843 = icmp sgt i32 %3842, 0
  br i1 %3843, label %3835, label %3844, !llvm.loop !1070

3844:                                             ; preds = %3835, %3826
  %3845 = phi i32 [ %3830, %3826 ], [ %3840, %3835 ]
  %3846 = and i64 %3795, 4294967295
  %3847 = getelementptr inbounds i32, ptr %6, i64 %3846
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = mul nsw i32 %3848, %3845
  %3850 = add nsw i32 %3849, %3789
  %3851 = icmp sgt i64 %3787, 2
  %3852 = add nsw i64 %3788, -1
  %3853 = add i32 %3786, 1
  br i1 %3851, label %3785, label %3854, !llvm.loop !1071

3854:                                             ; preds = %3844, %3781
  %3855 = phi i32 [ %3784, %3781 ], [ %3850, %3844 ]
  %3856 = icmp slt i32 %3855, %5
  br i1 %3856, label %3859, label %3857

3857:                                             ; preds = %3854
  %3858 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

3859:                                             ; preds = %3854
  %3860 = sext i32 %3855 to i64
  %3861 = getelementptr inbounds double, ptr %3619, i64 %3860
  %3862 = load double, ptr %3861, align 8, !tbaa !18
  %3863 = fadd fast double %3782, %3862
  store double %3863, ptr %3621, align 8, !tbaa !18
  %3864 = add nuw nsw i32 %3783, 1
  br i1 %3634, label %3865, label %3915

3865:                                             ; preds = %3859
  %3866 = load i32, ptr %4, align 4, !tbaa !5
  %3867 = load i32, ptr %12, align 4, !tbaa !5
  %3868 = add nsw i32 %3867, -1
  %3869 = icmp slt i32 %3866, %3868
  br i1 %3869, label %3892, label %3870

3870:                                             ; preds = %3865
  %3871 = icmp eq i32 %3866, %3868
  br i1 %3871, label %3872, label %3908

3872:                                             ; preds = %3870
  store i32 0, ptr %4, align 4, !tbaa !5
  %3873 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3873, ptr %6, align 4, !tbaa !5
  br i1 %3639, label %3915, label %3874

3874:                                             ; preds = %3872, %3902
  %3875 = phi i64 [ %3906, %3902 ], [ 1, %3872 ]
  %3876 = getelementptr inbounds i32, ptr %4, i64 %3875
  %3877 = load i32, ptr %3876, align 4, !tbaa !5
  %3878 = getelementptr inbounds i32, ptr %12, i64 %3875
  %3879 = load i32, ptr %3878, align 4, !tbaa !5
  %3880 = add nsw i32 %3879, -1
  %3881 = icmp slt i32 %3877, %3880
  br i1 %3881, label %3882, label %3900

3882:                                             ; preds = %3874
  br i1 %3869, label %3892, label %3883

3883:                                             ; preds = %3882
  %3884 = shl i64 %3875, 32
  %3885 = add i64 %3884, -4294967296
  %3886 = ashr exact i64 %3885, 32
  %3887 = getelementptr inbounds i32, ptr %7, i64 %3886
  %3888 = load i32, ptr %3887, align 4, !tbaa !5
  %3889 = getelementptr inbounds i32, ptr %6, i64 %3875
  %3890 = load i32, ptr %3889, align 4, !tbaa !5
  %3891 = add nsw i32 %3890, %3888
  store i32 %3891, ptr %3889, align 4, !tbaa !5
  br label %3910

3892:                                             ; preds = %3865, %3882
  %3893 = phi i32 [ %3877, %3882 ], [ %3866, %3865 ]
  %3894 = phi ptr [ %3876, %3882 ], [ %4, %3865 ]
  %3895 = phi i64 [ %3875, %3882 ], [ 0, %3865 ]
  %3896 = add nsw i32 %3893, 1
  store i32 %3896, ptr %3894, align 4, !tbaa !5
  %3897 = getelementptr inbounds i32, ptr %7, i64 %3895
  %3898 = load i32, ptr %3897, align 4, !tbaa !5
  %3899 = getelementptr inbounds i32, ptr %6, i64 %3895
  br label %3910

3900:                                             ; preds = %3874
  %3901 = icmp eq i32 %3877, %3880
  br i1 %3901, label %3902, label %3908

3902:                                             ; preds = %3900
  store i32 0, ptr %3876, align 4, !tbaa !5
  %3903 = getelementptr inbounds i32, ptr %8, i64 %3875
  %3904 = load i32, ptr %3903, align 4, !tbaa !5
  %3905 = getelementptr inbounds i32, ptr %6, i64 %3875
  store i32 %3904, ptr %3905, align 4, !tbaa !5
  %3906 = add nuw nsw i64 %3875, 1
  %3907 = icmp eq i64 %3906, %3637
  br i1 %3907, label %3915, label %3874, !llvm.loop !1072

3908:                                             ; preds = %3870, %3900
  %3909 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3910:                                             ; preds = %3883, %3892
  %3911 = phi ptr [ %3899, %3892 ], [ %3876, %3883 ]
  %3912 = phi i32 [ %3898, %3892 ], [ 1, %3883 ]
  %3913 = load i32, ptr %3911, align 4, !tbaa !5
  %3914 = add nsw i32 %3913, %3912
  store i32 %3914, ptr %3911, align 4, !tbaa !5
  br label %3915

3915:                                             ; preds = %3902, %3910, %3872, %3859
  %3916 = icmp eq i32 %3864, %5
  br i1 %3916, label %5401, label %3781, !llvm.loop !1073

3917:                                             ; preds = %3625
  %3918 = getelementptr inbounds i32, ptr %3, i64 %19
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = icmp eq i32 %3919, 0
  %3921 = icmp sgt i32 %5, 0
  br i1 %3920, label %3931, label %3922

3922:                                             ; preds = %3917
  br i1 %3921, label %3923, label %5401

3923:                                             ; preds = %3922
  %3924 = icmp sgt i32 %13, 1
  %3925 = icmp sgt i32 %13, 0
  %3926 = add i32 %13, -2
  %3927 = zext i32 %3926 to i64
  %3928 = zext i32 %13 to i64
  %3929 = add nuw i32 %5, 1
  %3930 = icmp eq i32 %13, 1
  br label %4069

3931:                                             ; preds = %3917
  br i1 %3921, label %3932, label %5401

3932:                                             ; preds = %3931
  %3933 = icmp sgt i32 %13, 1
  %3934 = icmp sgt i32 %13, 0
  %3935 = add i32 %13, -2
  %3936 = zext i32 %3935 to i64
  %3937 = zext i32 %13 to i64
  %3938 = add nuw i32 %5, 1
  %3939 = icmp eq i32 %13, 1
  br label %3940

3940:                                             ; preds = %3932, %4067
  %3941 = phi double [ 0.000000e+00, %3932 ], [ %4018, %4067 ]
  %3942 = phi i32 [ 0, %3932 ], [ %4019, %4067 ]
  %3943 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3933, label %3944, label %4013

3944:                                             ; preds = %3940, %4003
  %3945 = phi i32 [ %4012, %4003 ], [ 0, %3940 ]
  %3946 = phi i64 [ %3954, %4003 ], [ %3937, %3940 ]
  %3947 = phi i64 [ %4011, %4003 ], [ %3936, %3940 ]
  %3948 = phi i32 [ %4009, %4003 ], [ %3943, %3940 ]
  %3949 = sub i32 %3935, %3945
  %3950 = tail call i32 @llvm.smin.i32(i32 %3949, i32 0)
  %3951 = sub i32 %3949, %3950
  %3952 = zext i32 %3951 to i64
  %3953 = add nuw nsw i64 %3952, 1
  %3954 = add nsw i64 %3946, -1
  %3955 = icmp ult i32 %3951, 31
  br i1 %3955, label %3991, label %3956

3956:                                             ; preds = %3944
  %3957 = and i64 %3953, 8589934560
  %3958 = sub i64 %3947, %3957
  br label %3959

3959:                                             ; preds = %3959, %3956
  %3960 = phi i64 [ 0, %3956 ], [ %3983, %3959 ]
  %3961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3979, %3959 ]
  %3962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3980, %3959 ]
  %3963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3981, %3959 ]
  %3964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3982, %3959 ]
  %3965 = sub i64 %3947, %3960
  %3966 = getelementptr inbounds i32, ptr %9, i64 %3965
  %3967 = getelementptr inbounds i32, ptr %3966, i64 -7
  %3968 = load <8 x i32>, ptr %3967, align 4, !tbaa !5
  %3969 = shufflevector <8 x i32> %3968, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3970 = getelementptr inbounds i32, ptr %3966, i64 -15
  %3971 = load <8 x i32>, ptr %3970, align 4, !tbaa !5
  %3972 = shufflevector <8 x i32> %3971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3973 = getelementptr inbounds i32, ptr %3966, i64 -23
  %3974 = load <8 x i32>, ptr %3973, align 4, !tbaa !5
  %3975 = shufflevector <8 x i32> %3974, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3976 = getelementptr inbounds i32, ptr %3966, i64 -31
  %3977 = load <8 x i32>, ptr %3976, align 4, !tbaa !5
  %3978 = shufflevector <8 x i32> %3977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3979 = mul <8 x i32> %3969, %3961
  %3980 = mul <8 x i32> %3972, %3962
  %3981 = mul <8 x i32> %3975, %3963
  %3982 = mul <8 x i32> %3978, %3964
  %3983 = add nuw i64 %3960, 32
  %3984 = icmp eq i64 %3983, %3957
  br i1 %3984, label %3985, label %3959, !llvm.loop !1074

3985:                                             ; preds = %3959
  %3986 = mul <8 x i32> %3980, %3979
  %3987 = mul <8 x i32> %3981, %3986
  %3988 = mul <8 x i32> %3982, %3987
  %3989 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3988)
  %3990 = icmp eq i64 %3953, %3957
  br i1 %3990, label %4003, label %3991

3991:                                             ; preds = %3944, %3985
  %3992 = phi i64 [ %3947, %3944 ], [ %3958, %3985 ]
  %3993 = phi i32 [ 1, %3944 ], [ %3989, %3985 ]
  br label %3994

3994:                                             ; preds = %3991, %3994
  %3995 = phi i64 [ %4000, %3994 ], [ %3992, %3991 ]
  %3996 = phi i32 [ %3999, %3994 ], [ %3993, %3991 ]
  %3997 = getelementptr inbounds i32, ptr %9, i64 %3995
  %3998 = load i32, ptr %3997, align 4, !tbaa !5
  %3999 = mul nsw i32 %3998, %3996
  %4000 = add nsw i64 %3995, -1
  %4001 = trunc i64 %3995 to i32
  %4002 = icmp sgt i32 %4001, 0
  br i1 %4002, label %3994, label %4003, !llvm.loop !1075

4003:                                             ; preds = %3994, %3985
  %4004 = phi i32 [ %3989, %3985 ], [ %3999, %3994 ]
  %4005 = and i64 %3954, 4294967295
  %4006 = getelementptr inbounds i32, ptr %6, i64 %4005
  %4007 = load i32, ptr %4006, align 4, !tbaa !5
  %4008 = mul nsw i32 %4007, %4004
  %4009 = add nsw i32 %4008, %3948
  %4010 = icmp sgt i64 %3946, 2
  %4011 = add nsw i64 %3947, -1
  %4012 = add i32 %3945, 1
  br i1 %4010, label %3944, label %4013, !llvm.loop !1076

4013:                                             ; preds = %4003, %3940
  %4014 = phi i32 [ %3943, %3940 ], [ %4009, %4003 ]
  %4015 = sext i32 %4014 to i64
  %4016 = getelementptr inbounds double, ptr %3619, i64 %4015
  %4017 = load double, ptr %4016, align 8, !tbaa !18
  %4018 = fadd fast double %3941, %4017
  store double %4018, ptr %3621, align 8, !tbaa !18
  %4019 = add nuw nsw i32 %3942, 1
  br i1 %3934, label %4020, label %4067

4020:                                             ; preds = %4013
  %4021 = load i32, ptr %4, align 4, !tbaa !5
  %4022 = load i32, ptr %12, align 4, !tbaa !5
  %4023 = add nsw i32 %4022, -1
  %4024 = icmp slt i32 %4021, %4023
  br i1 %4024, label %4044, label %4025

4025:                                             ; preds = %4020
  %4026 = icmp eq i32 %4021, %4023
  br i1 %4026, label %4027, label %4060

4027:                                             ; preds = %4025
  store i32 0, ptr %4, align 4, !tbaa !5
  %4028 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4028, ptr %6, align 4, !tbaa !5
  br i1 %3939, label %4067, label %4029

4029:                                             ; preds = %4027, %4054
  %4030 = phi i64 [ %4058, %4054 ], [ 1, %4027 ]
  %4031 = getelementptr inbounds i32, ptr %4, i64 %4030
  %4032 = load i32, ptr %4031, align 4, !tbaa !5
  %4033 = getelementptr inbounds i32, ptr %12, i64 %4030
  %4034 = load i32, ptr %4033, align 4, !tbaa !5
  %4035 = add nsw i32 %4034, -1
  %4036 = icmp slt i32 %4032, %4035
  br i1 %4036, label %4037, label %4052

4037:                                             ; preds = %4029
  br i1 %4024, label %4044, label %4038

4038:                                             ; preds = %4037
  %4039 = getelementptr inbounds i32, ptr %7, i64 %4030
  %4040 = load i32, ptr %4039, align 4, !tbaa !5
  %4041 = getelementptr inbounds i32, ptr %6, i64 %4030
  %4042 = load i32, ptr %4041, align 4, !tbaa !5
  %4043 = add nsw i32 %4042, %4040
  store i32 %4043, ptr %4041, align 4, !tbaa !5
  br label %4062

4044:                                             ; preds = %4020, %4037
  %4045 = phi i32 [ %4032, %4037 ], [ %4021, %4020 ]
  %4046 = phi ptr [ %4031, %4037 ], [ %4, %4020 ]
  %4047 = phi i64 [ %4030, %4037 ], [ 0, %4020 ]
  %4048 = add nsw i32 %4045, 1
  store i32 %4048, ptr %4046, align 4, !tbaa !5
  %4049 = getelementptr inbounds i32, ptr %7, i64 %4047
  %4050 = load i32, ptr %4049, align 4, !tbaa !5
  %4051 = getelementptr inbounds i32, ptr %6, i64 %4047
  br label %4062

4052:                                             ; preds = %4029
  %4053 = icmp eq i32 %4032, %4035
  br i1 %4053, label %4054, label %4060

4054:                                             ; preds = %4052
  store i32 0, ptr %4031, align 4, !tbaa !5
  %4055 = getelementptr inbounds i32, ptr %8, i64 %4030
  %4056 = load i32, ptr %4055, align 4, !tbaa !5
  %4057 = getelementptr inbounds i32, ptr %6, i64 %4030
  store i32 %4056, ptr %4057, align 4, !tbaa !5
  %4058 = add nuw nsw i64 %4030, 1
  %4059 = icmp eq i64 %4058, %3937
  br i1 %4059, label %4067, label %4029, !llvm.loop !1077

4060:                                             ; preds = %4025, %4052
  %4061 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4062:                                             ; preds = %4038, %4044
  %4063 = phi ptr [ %4051, %4044 ], [ %4031, %4038 ]
  %4064 = phi i32 [ %4050, %4044 ], [ 1, %4038 ]
  %4065 = load i32, ptr %4063, align 4, !tbaa !5
  %4066 = add nsw i32 %4065, %4064
  store i32 %4066, ptr %4063, align 4, !tbaa !5
  br label %4067

4067:                                             ; preds = %4054, %4062, %4027, %4013
  %4068 = icmp eq i32 %4019, %5
  br i1 %4068, label %5401, label %3940, !llvm.loop !1078

4069:                                             ; preds = %3923, %4203
  %4070 = phi double [ 0.000000e+00, %3923 ], [ %4151, %4203 ]
  %4071 = phi i32 [ 0, %3923 ], [ %4152, %4203 ]
  %4072 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3924, label %4073, label %4142

4073:                                             ; preds = %4069, %4132
  %4074 = phi i32 [ %4141, %4132 ], [ 0, %4069 ]
  %4075 = phi i64 [ %4083, %4132 ], [ %3928, %4069 ]
  %4076 = phi i64 [ %4140, %4132 ], [ %3927, %4069 ]
  %4077 = phi i32 [ %4138, %4132 ], [ %4072, %4069 ]
  %4078 = sub i32 %3926, %4074
  %4079 = tail call i32 @llvm.smin.i32(i32 %4078, i32 0)
  %4080 = sub i32 %4078, %4079
  %4081 = zext i32 %4080 to i64
  %4082 = add nuw nsw i64 %4081, 1
  %4083 = add nsw i64 %4075, -1
  %4084 = icmp ult i32 %4080, 31
  br i1 %4084, label %4120, label %4085

4085:                                             ; preds = %4073
  %4086 = and i64 %4082, 8589934560
  %4087 = sub i64 %4076, %4086
  br label %4088

4088:                                             ; preds = %4088, %4085
  %4089 = phi i64 [ 0, %4085 ], [ %4112, %4088 ]
  %4090 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4108, %4088 ]
  %4091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4109, %4088 ]
  %4092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4110, %4088 ]
  %4093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4111, %4088 ]
  %4094 = sub i64 %4076, %4089
  %4095 = getelementptr inbounds i32, ptr %11, i64 %4094
  %4096 = getelementptr inbounds i32, ptr %4095, i64 -7
  %4097 = load <8 x i32>, ptr %4096, align 4, !tbaa !5
  %4098 = shufflevector <8 x i32> %4097, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4099 = getelementptr inbounds i32, ptr %4095, i64 -15
  %4100 = load <8 x i32>, ptr %4099, align 4, !tbaa !5
  %4101 = shufflevector <8 x i32> %4100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4102 = getelementptr inbounds i32, ptr %4095, i64 -23
  %4103 = load <8 x i32>, ptr %4102, align 4, !tbaa !5
  %4104 = shufflevector <8 x i32> %4103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4105 = getelementptr inbounds i32, ptr %4095, i64 -31
  %4106 = load <8 x i32>, ptr %4105, align 4, !tbaa !5
  %4107 = shufflevector <8 x i32> %4106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4108 = mul <8 x i32> %4098, %4090
  %4109 = mul <8 x i32> %4101, %4091
  %4110 = mul <8 x i32> %4104, %4092
  %4111 = mul <8 x i32> %4107, %4093
  %4112 = add nuw i64 %4089, 32
  %4113 = icmp eq i64 %4112, %4086
  br i1 %4113, label %4114, label %4088, !llvm.loop !1079

4114:                                             ; preds = %4088
  %4115 = mul <8 x i32> %4109, %4108
  %4116 = mul <8 x i32> %4110, %4115
  %4117 = mul <8 x i32> %4111, %4116
  %4118 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4117)
  %4119 = icmp eq i64 %4082, %4086
  br i1 %4119, label %4132, label %4120

4120:                                             ; preds = %4073, %4114
  %4121 = phi i64 [ %4076, %4073 ], [ %4087, %4114 ]
  %4122 = phi i32 [ 1, %4073 ], [ %4118, %4114 ]
  br label %4123

4123:                                             ; preds = %4120, %4123
  %4124 = phi i64 [ %4129, %4123 ], [ %4121, %4120 ]
  %4125 = phi i32 [ %4128, %4123 ], [ %4122, %4120 ]
  %4126 = getelementptr inbounds i32, ptr %11, i64 %4124
  %4127 = load i32, ptr %4126, align 4, !tbaa !5
  %4128 = mul nsw i32 %4127, %4125
  %4129 = add nsw i64 %4124, -1
  %4130 = trunc i64 %4124 to i32
  %4131 = icmp sgt i32 %4130, 0
  br i1 %4131, label %4123, label %4132, !llvm.loop !1080

4132:                                             ; preds = %4123, %4114
  %4133 = phi i32 [ %4118, %4114 ], [ %4128, %4123 ]
  %4134 = and i64 %4083, 4294967295
  %4135 = getelementptr inbounds i32, ptr %6, i64 %4134
  %4136 = load i32, ptr %4135, align 4, !tbaa !5
  %4137 = mul nsw i32 %4136, %4133
  %4138 = add nsw i32 %4137, %4077
  %4139 = icmp sgt i64 %4075, 2
  %4140 = add nsw i64 %4076, -1
  %4141 = add i32 %4074, 1
  br i1 %4139, label %4073, label %4142, !llvm.loop !1081

4142:                                             ; preds = %4132, %4069
  %4143 = phi i32 [ %4072, %4069 ], [ %4138, %4132 ]
  %4144 = icmp slt i32 %4143, %5
  br i1 %4144, label %4147, label %4145

4145:                                             ; preds = %4142
  %4146 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

4147:                                             ; preds = %4142
  %4148 = sext i32 %4143 to i64
  %4149 = getelementptr inbounds double, ptr %3619, i64 %4148
  %4150 = load double, ptr %4149, align 8, !tbaa !18
  %4151 = fadd fast double %4070, %4150
  store double %4151, ptr %3621, align 8, !tbaa !18
  %4152 = add nuw nsw i32 %4071, 1
  br i1 %3925, label %4153, label %4203

4153:                                             ; preds = %4147
  %4154 = load i32, ptr %4, align 4, !tbaa !5
  %4155 = load i32, ptr %12, align 4, !tbaa !5
  %4156 = add nsw i32 %4155, -1
  %4157 = icmp slt i32 %4154, %4156
  br i1 %4157, label %4180, label %4158

4158:                                             ; preds = %4153
  %4159 = icmp eq i32 %4154, %4156
  br i1 %4159, label %4160, label %4196

4160:                                             ; preds = %4158
  store i32 0, ptr %4, align 4, !tbaa !5
  %4161 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4161, ptr %6, align 4, !tbaa !5
  br i1 %3930, label %4203, label %4162

4162:                                             ; preds = %4160, %4190
  %4163 = phi i64 [ %4194, %4190 ], [ 1, %4160 ]
  %4164 = getelementptr inbounds i32, ptr %4, i64 %4163
  %4165 = load i32, ptr %4164, align 4, !tbaa !5
  %4166 = getelementptr inbounds i32, ptr %12, i64 %4163
  %4167 = load i32, ptr %4166, align 4, !tbaa !5
  %4168 = add nsw i32 %4167, -1
  %4169 = icmp slt i32 %4165, %4168
  br i1 %4169, label %4170, label %4188

4170:                                             ; preds = %4162
  br i1 %4157, label %4180, label %4171

4171:                                             ; preds = %4170
  %4172 = shl i64 %4163, 32
  %4173 = add i64 %4172, -4294967296
  %4174 = ashr exact i64 %4173, 32
  %4175 = getelementptr inbounds i32, ptr %7, i64 %4174
  %4176 = load i32, ptr %4175, align 4, !tbaa !5
  %4177 = getelementptr inbounds i32, ptr %6, i64 %4163
  %4178 = load i32, ptr %4177, align 4, !tbaa !5
  %4179 = add nsw i32 %4178, %4176
  store i32 %4179, ptr %4177, align 4, !tbaa !5
  br label %4198

4180:                                             ; preds = %4153, %4170
  %4181 = phi i32 [ %4165, %4170 ], [ %4154, %4153 ]
  %4182 = phi ptr [ %4164, %4170 ], [ %4, %4153 ]
  %4183 = phi i64 [ %4163, %4170 ], [ 0, %4153 ]
  %4184 = add nsw i32 %4181, 1
  store i32 %4184, ptr %4182, align 4, !tbaa !5
  %4185 = getelementptr inbounds i32, ptr %7, i64 %4183
  %4186 = load i32, ptr %4185, align 4, !tbaa !5
  %4187 = getelementptr inbounds i32, ptr %6, i64 %4183
  br label %4198

4188:                                             ; preds = %4162
  %4189 = icmp eq i32 %4165, %4168
  br i1 %4189, label %4190, label %4196

4190:                                             ; preds = %4188
  store i32 0, ptr %4164, align 4, !tbaa !5
  %4191 = getelementptr inbounds i32, ptr %8, i64 %4163
  %4192 = load i32, ptr %4191, align 4, !tbaa !5
  %4193 = getelementptr inbounds i32, ptr %6, i64 %4163
  store i32 %4192, ptr %4193, align 4, !tbaa !5
  %4194 = add nuw nsw i64 %4163, 1
  %4195 = icmp eq i64 %4194, %3928
  br i1 %4195, label %4203, label %4162, !llvm.loop !1082

4196:                                             ; preds = %4158, %4188
  %4197 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4198:                                             ; preds = %4171, %4180
  %4199 = phi ptr [ %4187, %4180 ], [ %4164, %4171 ]
  %4200 = phi i32 [ %4186, %4180 ], [ 1, %4171 ]
  %4201 = load i32, ptr %4199, align 4, !tbaa !5
  %4202 = add nsw i32 %4201, %4200
  store i32 %4202, ptr %4199, align 4, !tbaa !5
  br label %4203

4203:                                             ; preds = %4190, %4198, %4160, %4147
  %4204 = icmp eq i32 %4152, %5
  br i1 %4204, label %5401, label %4069, !llvm.loop !1083

4205:                                             ; preds = %3625
  %4206 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

4207:                                             ; preds = %18
  %4208 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4209 = load ptr, ptr %4208, align 8, !tbaa !9
  %4210 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4211 = load ptr, ptr %4210, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4211, align 4, !tbaa !162
  %4212 = icmp eq i32 %13, 0
  br i1 %4212, label %4213, label %4216

4213:                                             ; preds = %4207
  %4214 = load double, ptr %4209, align 8, !tbaa !18
  %4215 = fptrunc double %4214 to float
  store float %4215, ptr %4211, align 4, !tbaa !162
  br label %5401

4216:                                             ; preds = %4207
  switch i32 %1, label %4803 [
    i32 1, label %4217
    i32 0, label %4513
  ]

4217:                                             ; preds = %4216
  %4218 = getelementptr inbounds i32, ptr %3, i64 %19
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = icmp eq i32 %4219, 0
  %4221 = icmp sgt i32 %5, 0
  br i1 %4220, label %4231, label %4222

4222:                                             ; preds = %4217
  br i1 %4221, label %4223, label %5401

4223:                                             ; preds = %4222
  %4224 = icmp sgt i32 %13, 1
  %4225 = icmp sgt i32 %13, 0
  %4226 = add i32 %13, -2
  %4227 = zext i32 %4226 to i64
  %4228 = zext i32 %13 to i64
  %4229 = add nuw i32 %5, 1
  %4230 = icmp eq i32 %13, 1
  br label %4376

4231:                                             ; preds = %4217
  br i1 %4221, label %4232, label %5401

4232:                                             ; preds = %4231
  %4233 = icmp sgt i32 %13, 1
  %4234 = icmp sgt i32 %13, 0
  %4235 = add i32 %13, -2
  %4236 = zext i32 %4235 to i64
  %4237 = zext i32 %13 to i64
  %4238 = add nuw i32 %5, 1
  %4239 = icmp eq i32 %13, 1
  br label %4240

4240:                                             ; preds = %4232, %4374
  %4241 = phi float [ 0.000000e+00, %4232 ], [ %4325, %4374 ]
  %4242 = phi i32 [ 0, %4232 ], [ %4326, %4374 ]
  %4243 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4233, label %4244, label %4313

4244:                                             ; preds = %4240, %4303
  %4245 = phi i32 [ %4312, %4303 ], [ 0, %4240 ]
  %4246 = phi i64 [ %4254, %4303 ], [ %4237, %4240 ]
  %4247 = phi i64 [ %4311, %4303 ], [ %4236, %4240 ]
  %4248 = phi i32 [ %4309, %4303 ], [ %4243, %4240 ]
  %4249 = sub i32 %4235, %4245
  %4250 = tail call i32 @llvm.smin.i32(i32 %4249, i32 0)
  %4251 = sub i32 %4249, %4250
  %4252 = zext i32 %4251 to i64
  %4253 = add nuw nsw i64 %4252, 1
  %4254 = add nsw i64 %4246, -1
  %4255 = icmp ult i32 %4251, 31
  br i1 %4255, label %4291, label %4256

4256:                                             ; preds = %4244
  %4257 = and i64 %4253, 8589934560
  %4258 = sub i64 %4247, %4257
  br label %4259

4259:                                             ; preds = %4259, %4256
  %4260 = phi i64 [ 0, %4256 ], [ %4283, %4259 ]
  %4261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4279, %4259 ]
  %4262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4280, %4259 ]
  %4263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4281, %4259 ]
  %4264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4282, %4259 ]
  %4265 = sub i64 %4247, %4260
  %4266 = getelementptr inbounds i32, ptr %9, i64 %4265
  %4267 = getelementptr inbounds i32, ptr %4266, i64 -7
  %4268 = load <8 x i32>, ptr %4267, align 4, !tbaa !5
  %4269 = shufflevector <8 x i32> %4268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4270 = getelementptr inbounds i32, ptr %4266, i64 -15
  %4271 = load <8 x i32>, ptr %4270, align 4, !tbaa !5
  %4272 = shufflevector <8 x i32> %4271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4273 = getelementptr inbounds i32, ptr %4266, i64 -23
  %4274 = load <8 x i32>, ptr %4273, align 4, !tbaa !5
  %4275 = shufflevector <8 x i32> %4274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4276 = getelementptr inbounds i32, ptr %4266, i64 -31
  %4277 = load <8 x i32>, ptr %4276, align 4, !tbaa !5
  %4278 = shufflevector <8 x i32> %4277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4279 = mul <8 x i32> %4269, %4261
  %4280 = mul <8 x i32> %4272, %4262
  %4281 = mul <8 x i32> %4275, %4263
  %4282 = mul <8 x i32> %4278, %4264
  %4283 = add nuw i64 %4260, 32
  %4284 = icmp eq i64 %4283, %4257
  br i1 %4284, label %4285, label %4259, !llvm.loop !1084

4285:                                             ; preds = %4259
  %4286 = mul <8 x i32> %4280, %4279
  %4287 = mul <8 x i32> %4281, %4286
  %4288 = mul <8 x i32> %4282, %4287
  %4289 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4288)
  %4290 = icmp eq i64 %4253, %4257
  br i1 %4290, label %4303, label %4291

4291:                                             ; preds = %4244, %4285
  %4292 = phi i64 [ %4247, %4244 ], [ %4258, %4285 ]
  %4293 = phi i32 [ 1, %4244 ], [ %4289, %4285 ]
  br label %4294

4294:                                             ; preds = %4291, %4294
  %4295 = phi i64 [ %4300, %4294 ], [ %4292, %4291 ]
  %4296 = phi i32 [ %4299, %4294 ], [ %4293, %4291 ]
  %4297 = getelementptr inbounds i32, ptr %9, i64 %4295
  %4298 = load i32, ptr %4297, align 4, !tbaa !5
  %4299 = mul nsw i32 %4298, %4296
  %4300 = add nsw i64 %4295, -1
  %4301 = trunc i64 %4295 to i32
  %4302 = icmp sgt i32 %4301, 0
  br i1 %4302, label %4294, label %4303, !llvm.loop !1085

4303:                                             ; preds = %4294, %4285
  %4304 = phi i32 [ %4289, %4285 ], [ %4299, %4294 ]
  %4305 = and i64 %4254, 4294967295
  %4306 = getelementptr inbounds i32, ptr %6, i64 %4305
  %4307 = load i32, ptr %4306, align 4, !tbaa !5
  %4308 = mul nsw i32 %4307, %4304
  %4309 = add nsw i32 %4308, %4248
  %4310 = icmp sgt i64 %4246, 2
  %4311 = add nsw i64 %4247, -1
  %4312 = add i32 %4245, 1
  br i1 %4310, label %4244, label %4313, !llvm.loop !1086

4313:                                             ; preds = %4303, %4240
  %4314 = phi i32 [ %4243, %4240 ], [ %4309, %4303 ]
  %4315 = sext i32 %4314 to i64
  %4316 = getelementptr inbounds double, ptr %2, i64 %4315
  %4317 = load double, ptr %4316, align 8, !tbaa !18
  %4318 = getelementptr inbounds double, ptr %4209, i64 %4315
  %4319 = load double, ptr %4318, align 8, !tbaa !18
  %4320 = fptrunc double %4319 to float
  %4321 = fpext float %4241 to double
  %4322 = fpext float %4320 to double
  %4323 = fmul fast double %4317, %4322
  %4324 = fadd fast double %4323, %4321
  %4325 = fptrunc double %4324 to float
  %4326 = add nuw nsw i32 %4242, 1
  br i1 %4234, label %4327, label %4374

4327:                                             ; preds = %4313
  %4328 = load i32, ptr %4, align 4, !tbaa !5
  %4329 = load i32, ptr %12, align 4, !tbaa !5
  %4330 = add nsw i32 %4329, -1
  %4331 = icmp slt i32 %4328, %4330
  br i1 %4331, label %4351, label %4332

4332:                                             ; preds = %4327
  %4333 = icmp eq i32 %4328, %4330
  br i1 %4333, label %4334, label %4367

4334:                                             ; preds = %4332
  store i32 0, ptr %4, align 4, !tbaa !5
  %4335 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4335, ptr %6, align 4, !tbaa !5
  br i1 %4239, label %4374, label %4336

4336:                                             ; preds = %4334, %4361
  %4337 = phi i64 [ %4365, %4361 ], [ 1, %4334 ]
  %4338 = getelementptr inbounds i32, ptr %4, i64 %4337
  %4339 = load i32, ptr %4338, align 4, !tbaa !5
  %4340 = getelementptr inbounds i32, ptr %12, i64 %4337
  %4341 = load i32, ptr %4340, align 4, !tbaa !5
  %4342 = add nsw i32 %4341, -1
  %4343 = icmp slt i32 %4339, %4342
  br i1 %4343, label %4344, label %4359

4344:                                             ; preds = %4336
  br i1 %4331, label %4351, label %4345

4345:                                             ; preds = %4344
  %4346 = getelementptr inbounds i32, ptr %7, i64 %4337
  %4347 = load i32, ptr %4346, align 4, !tbaa !5
  %4348 = getelementptr inbounds i32, ptr %6, i64 %4337
  %4349 = load i32, ptr %4348, align 4, !tbaa !5
  %4350 = add nsw i32 %4349, %4347
  store i32 %4350, ptr %4348, align 4, !tbaa !5
  br label %4369

4351:                                             ; preds = %4327, %4344
  %4352 = phi i32 [ %4339, %4344 ], [ %4328, %4327 ]
  %4353 = phi ptr [ %4338, %4344 ], [ %4, %4327 ]
  %4354 = phi i64 [ %4337, %4344 ], [ 0, %4327 ]
  %4355 = add nsw i32 %4352, 1
  store i32 %4355, ptr %4353, align 4, !tbaa !5
  %4356 = getelementptr inbounds i32, ptr %7, i64 %4354
  %4357 = load i32, ptr %4356, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %6, i64 %4354
  br label %4369

4359:                                             ; preds = %4336
  %4360 = icmp eq i32 %4339, %4342
  br i1 %4360, label %4361, label %4367

4361:                                             ; preds = %4359
  store i32 0, ptr %4338, align 4, !tbaa !5
  %4362 = getelementptr inbounds i32, ptr %8, i64 %4337
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = getelementptr inbounds i32, ptr %6, i64 %4337
  store i32 %4363, ptr %4364, align 4, !tbaa !5
  %4365 = add nuw nsw i64 %4337, 1
  %4366 = icmp eq i64 %4365, %4237
  br i1 %4366, label %4374, label %4336, !llvm.loop !1087

4367:                                             ; preds = %4332, %4359
  store float %4325, ptr %4211, align 4, !tbaa !162
  %4368 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4369:                                             ; preds = %4345, %4351
  %4370 = phi ptr [ %4358, %4351 ], [ %4338, %4345 ]
  %4371 = phi i32 [ %4357, %4351 ], [ 1, %4345 ]
  %4372 = load i32, ptr %4370, align 4, !tbaa !5
  %4373 = add nsw i32 %4372, %4371
  store i32 %4373, ptr %4370, align 4, !tbaa !5
  br label %4374

4374:                                             ; preds = %4361, %4369, %4334, %4313
  %4375 = icmp eq i32 %4326, %5
  br i1 %4375, label %5399, label %4240, !llvm.loop !1088

4376:                                             ; preds = %4223, %4511
  %4377 = phi float [ 0.000000e+00, %4223 ], [ %4459, %4511 ]
  %4378 = phi i32 [ 0, %4223 ], [ %4460, %4511 ]
  %4379 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4224, label %4380, label %4449

4380:                                             ; preds = %4376, %4439
  %4381 = phi i32 [ %4448, %4439 ], [ 0, %4376 ]
  %4382 = phi i64 [ %4390, %4439 ], [ %4228, %4376 ]
  %4383 = phi i64 [ %4447, %4439 ], [ %4227, %4376 ]
  %4384 = phi i32 [ %4445, %4439 ], [ %4379, %4376 ]
  %4385 = sub i32 %4226, %4381
  %4386 = tail call i32 @llvm.smin.i32(i32 %4385, i32 0)
  %4387 = sub i32 %4385, %4386
  %4388 = zext i32 %4387 to i64
  %4389 = add nuw nsw i64 %4388, 1
  %4390 = add nsw i64 %4382, -1
  %4391 = icmp ult i32 %4387, 31
  br i1 %4391, label %4427, label %4392

4392:                                             ; preds = %4380
  %4393 = and i64 %4389, 8589934560
  %4394 = sub i64 %4383, %4393
  br label %4395

4395:                                             ; preds = %4395, %4392
  %4396 = phi i64 [ 0, %4392 ], [ %4419, %4395 ]
  %4397 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4415, %4395 ]
  %4398 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4416, %4395 ]
  %4399 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4417, %4395 ]
  %4400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4418, %4395 ]
  %4401 = sub i64 %4383, %4396
  %4402 = getelementptr inbounds i32, ptr %11, i64 %4401
  %4403 = getelementptr inbounds i32, ptr %4402, i64 -7
  %4404 = load <8 x i32>, ptr %4403, align 4, !tbaa !5
  %4405 = shufflevector <8 x i32> %4404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4406 = getelementptr inbounds i32, ptr %4402, i64 -15
  %4407 = load <8 x i32>, ptr %4406, align 4, !tbaa !5
  %4408 = shufflevector <8 x i32> %4407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4409 = getelementptr inbounds i32, ptr %4402, i64 -23
  %4410 = load <8 x i32>, ptr %4409, align 4, !tbaa !5
  %4411 = shufflevector <8 x i32> %4410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4412 = getelementptr inbounds i32, ptr %4402, i64 -31
  %4413 = load <8 x i32>, ptr %4412, align 4, !tbaa !5
  %4414 = shufflevector <8 x i32> %4413, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4415 = mul <8 x i32> %4405, %4397
  %4416 = mul <8 x i32> %4408, %4398
  %4417 = mul <8 x i32> %4411, %4399
  %4418 = mul <8 x i32> %4414, %4400
  %4419 = add nuw i64 %4396, 32
  %4420 = icmp eq i64 %4419, %4393
  br i1 %4420, label %4421, label %4395, !llvm.loop !1089

4421:                                             ; preds = %4395
  %4422 = mul <8 x i32> %4416, %4415
  %4423 = mul <8 x i32> %4417, %4422
  %4424 = mul <8 x i32> %4418, %4423
  %4425 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4424)
  %4426 = icmp eq i64 %4389, %4393
  br i1 %4426, label %4439, label %4427

4427:                                             ; preds = %4380, %4421
  %4428 = phi i64 [ %4383, %4380 ], [ %4394, %4421 ]
  %4429 = phi i32 [ 1, %4380 ], [ %4425, %4421 ]
  br label %4430

4430:                                             ; preds = %4427, %4430
  %4431 = phi i64 [ %4436, %4430 ], [ %4428, %4427 ]
  %4432 = phi i32 [ %4435, %4430 ], [ %4429, %4427 ]
  %4433 = getelementptr inbounds i32, ptr %11, i64 %4431
  %4434 = load i32, ptr %4433, align 4, !tbaa !5
  %4435 = mul nsw i32 %4434, %4432
  %4436 = add nsw i64 %4431, -1
  %4437 = trunc i64 %4431 to i32
  %4438 = icmp sgt i32 %4437, 0
  br i1 %4438, label %4430, label %4439, !llvm.loop !1090

4439:                                             ; preds = %4430, %4421
  %4440 = phi i32 [ %4425, %4421 ], [ %4435, %4430 ]
  %4441 = and i64 %4390, 4294967295
  %4442 = getelementptr inbounds i32, ptr %6, i64 %4441
  %4443 = load i32, ptr %4442, align 4, !tbaa !5
  %4444 = mul nsw i32 %4443, %4440
  %4445 = add nsw i32 %4444, %4384
  %4446 = icmp sgt i64 %4382, 2
  %4447 = add nsw i64 %4383, -1
  %4448 = add i32 %4381, 1
  br i1 %4446, label %4380, label %4449, !llvm.loop !1091

4449:                                             ; preds = %4439, %4376
  %4450 = phi i32 [ %4379, %4376 ], [ %4445, %4439 ]
  %4451 = icmp slt i32 %4450, %5
  br i1 %4451, label %4454, label %4452

4452:                                             ; preds = %4449
  %4453 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

4454:                                             ; preds = %4449
  %4455 = sext i32 %4450 to i64
  %4456 = getelementptr inbounds double, ptr %4209, i64 %4455
  %4457 = load double, ptr %4456, align 8, !tbaa !18
  %4458 = fptrunc double %4457 to float
  %4459 = fadd fast float %4377, %4458
  store float %4459, ptr %4211, align 4, !tbaa !162
  %4460 = add nuw nsw i32 %4378, 1
  br i1 %4225, label %4461, label %4511

4461:                                             ; preds = %4454
  %4462 = load i32, ptr %4, align 4, !tbaa !5
  %4463 = load i32, ptr %12, align 4, !tbaa !5
  %4464 = add nsw i32 %4463, -1
  %4465 = icmp slt i32 %4462, %4464
  br i1 %4465, label %4488, label %4466

4466:                                             ; preds = %4461
  %4467 = icmp eq i32 %4462, %4464
  br i1 %4467, label %4468, label %4504

4468:                                             ; preds = %4466
  store i32 0, ptr %4, align 4, !tbaa !5
  %4469 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4469, ptr %6, align 4, !tbaa !5
  br i1 %4230, label %4511, label %4470

4470:                                             ; preds = %4468, %4498
  %4471 = phi i64 [ %4502, %4498 ], [ 1, %4468 ]
  %4472 = getelementptr inbounds i32, ptr %4, i64 %4471
  %4473 = load i32, ptr %4472, align 4, !tbaa !5
  %4474 = getelementptr inbounds i32, ptr %12, i64 %4471
  %4475 = load i32, ptr %4474, align 4, !tbaa !5
  %4476 = add nsw i32 %4475, -1
  %4477 = icmp slt i32 %4473, %4476
  br i1 %4477, label %4478, label %4496

4478:                                             ; preds = %4470
  br i1 %4465, label %4488, label %4479

4479:                                             ; preds = %4478
  %4480 = shl i64 %4471, 32
  %4481 = add i64 %4480, -4294967296
  %4482 = ashr exact i64 %4481, 32
  %4483 = getelementptr inbounds i32, ptr %7, i64 %4482
  %4484 = load i32, ptr %4483, align 4, !tbaa !5
  %4485 = getelementptr inbounds i32, ptr %6, i64 %4471
  %4486 = load i32, ptr %4485, align 4, !tbaa !5
  %4487 = add nsw i32 %4486, %4484
  store i32 %4487, ptr %4485, align 4, !tbaa !5
  br label %4506

4488:                                             ; preds = %4461, %4478
  %4489 = phi i32 [ %4473, %4478 ], [ %4462, %4461 ]
  %4490 = phi ptr [ %4472, %4478 ], [ %4, %4461 ]
  %4491 = phi i64 [ %4471, %4478 ], [ 0, %4461 ]
  %4492 = add nsw i32 %4489, 1
  store i32 %4492, ptr %4490, align 4, !tbaa !5
  %4493 = getelementptr inbounds i32, ptr %7, i64 %4491
  %4494 = load i32, ptr %4493, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %6, i64 %4491
  br label %4506

4496:                                             ; preds = %4470
  %4497 = icmp eq i32 %4473, %4476
  br i1 %4497, label %4498, label %4504

4498:                                             ; preds = %4496
  store i32 0, ptr %4472, align 4, !tbaa !5
  %4499 = getelementptr inbounds i32, ptr %8, i64 %4471
  %4500 = load i32, ptr %4499, align 4, !tbaa !5
  %4501 = getelementptr inbounds i32, ptr %6, i64 %4471
  store i32 %4500, ptr %4501, align 4, !tbaa !5
  %4502 = add nuw nsw i64 %4471, 1
  %4503 = icmp eq i64 %4502, %4228
  br i1 %4503, label %4511, label %4470, !llvm.loop !1092

4504:                                             ; preds = %4466, %4496
  %4505 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4506:                                             ; preds = %4479, %4488
  %4507 = phi ptr [ %4495, %4488 ], [ %4472, %4479 ]
  %4508 = phi i32 [ %4494, %4488 ], [ 1, %4479 ]
  %4509 = load i32, ptr %4507, align 4, !tbaa !5
  %4510 = add nsw i32 %4509, %4508
  store i32 %4510, ptr %4507, align 4, !tbaa !5
  br label %4511

4511:                                             ; preds = %4498, %4506, %4468, %4454
  %4512 = icmp eq i32 %4460, %5
  br i1 %4512, label %5401, label %4376, !llvm.loop !1093

4513:                                             ; preds = %4216
  %4514 = getelementptr inbounds i32, ptr %3, i64 %19
  %4515 = load i32, ptr %4514, align 4, !tbaa !5
  %4516 = icmp eq i32 %4515, 0
  %4517 = icmp sgt i32 %5, 0
  br i1 %4516, label %4527, label %4518

4518:                                             ; preds = %4513
  br i1 %4517, label %4519, label %5401

4519:                                             ; preds = %4518
  %4520 = icmp sgt i32 %13, 1
  %4521 = icmp sgt i32 %13, 0
  %4522 = add i32 %13, -2
  %4523 = zext i32 %4522 to i64
  %4524 = zext i32 %13 to i64
  %4525 = add nuw i32 %5, 1
  %4526 = icmp eq i32 %13, 1
  br label %4666

4527:                                             ; preds = %4513
  br i1 %4517, label %4528, label %5401

4528:                                             ; preds = %4527
  %4529 = icmp sgt i32 %13, 1
  %4530 = icmp sgt i32 %13, 0
  %4531 = add i32 %13, -2
  %4532 = zext i32 %4531 to i64
  %4533 = zext i32 %13 to i64
  %4534 = add nuw i32 %5, 1
  %4535 = icmp eq i32 %13, 1
  br label %4536

4536:                                             ; preds = %4528, %4664
  %4537 = phi float [ 0.000000e+00, %4528 ], [ %4615, %4664 ]
  %4538 = phi i32 [ 0, %4528 ], [ %4616, %4664 ]
  %4539 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4529, label %4540, label %4609

4540:                                             ; preds = %4536, %4599
  %4541 = phi i32 [ %4608, %4599 ], [ 0, %4536 ]
  %4542 = phi i64 [ %4550, %4599 ], [ %4533, %4536 ]
  %4543 = phi i64 [ %4607, %4599 ], [ %4532, %4536 ]
  %4544 = phi i32 [ %4605, %4599 ], [ %4539, %4536 ]
  %4545 = sub i32 %4531, %4541
  %4546 = tail call i32 @llvm.smin.i32(i32 %4545, i32 0)
  %4547 = sub i32 %4545, %4546
  %4548 = zext i32 %4547 to i64
  %4549 = add nuw nsw i64 %4548, 1
  %4550 = add nsw i64 %4542, -1
  %4551 = icmp ult i32 %4547, 31
  br i1 %4551, label %4587, label %4552

4552:                                             ; preds = %4540
  %4553 = and i64 %4549, 8589934560
  %4554 = sub i64 %4543, %4553
  br label %4555

4555:                                             ; preds = %4555, %4552
  %4556 = phi i64 [ 0, %4552 ], [ %4579, %4555 ]
  %4557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4575, %4555 ]
  %4558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4576, %4555 ]
  %4559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4577, %4555 ]
  %4560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4578, %4555 ]
  %4561 = sub i64 %4543, %4556
  %4562 = getelementptr inbounds i32, ptr %9, i64 %4561
  %4563 = getelementptr inbounds i32, ptr %4562, i64 -7
  %4564 = load <8 x i32>, ptr %4563, align 4, !tbaa !5
  %4565 = shufflevector <8 x i32> %4564, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4566 = getelementptr inbounds i32, ptr %4562, i64 -15
  %4567 = load <8 x i32>, ptr %4566, align 4, !tbaa !5
  %4568 = shufflevector <8 x i32> %4567, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4569 = getelementptr inbounds i32, ptr %4562, i64 -23
  %4570 = load <8 x i32>, ptr %4569, align 4, !tbaa !5
  %4571 = shufflevector <8 x i32> %4570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4572 = getelementptr inbounds i32, ptr %4562, i64 -31
  %4573 = load <8 x i32>, ptr %4572, align 4, !tbaa !5
  %4574 = shufflevector <8 x i32> %4573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4575 = mul <8 x i32> %4565, %4557
  %4576 = mul <8 x i32> %4568, %4558
  %4577 = mul <8 x i32> %4571, %4559
  %4578 = mul <8 x i32> %4574, %4560
  %4579 = add nuw i64 %4556, 32
  %4580 = icmp eq i64 %4579, %4553
  br i1 %4580, label %4581, label %4555, !llvm.loop !1094

4581:                                             ; preds = %4555
  %4582 = mul <8 x i32> %4576, %4575
  %4583 = mul <8 x i32> %4577, %4582
  %4584 = mul <8 x i32> %4578, %4583
  %4585 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4584)
  %4586 = icmp eq i64 %4549, %4553
  br i1 %4586, label %4599, label %4587

4587:                                             ; preds = %4540, %4581
  %4588 = phi i64 [ %4543, %4540 ], [ %4554, %4581 ]
  %4589 = phi i32 [ 1, %4540 ], [ %4585, %4581 ]
  br label %4590

4590:                                             ; preds = %4587, %4590
  %4591 = phi i64 [ %4596, %4590 ], [ %4588, %4587 ]
  %4592 = phi i32 [ %4595, %4590 ], [ %4589, %4587 ]
  %4593 = getelementptr inbounds i32, ptr %9, i64 %4591
  %4594 = load i32, ptr %4593, align 4, !tbaa !5
  %4595 = mul nsw i32 %4594, %4592
  %4596 = add nsw i64 %4591, -1
  %4597 = trunc i64 %4591 to i32
  %4598 = icmp sgt i32 %4597, 0
  br i1 %4598, label %4590, label %4599, !llvm.loop !1095

4599:                                             ; preds = %4590, %4581
  %4600 = phi i32 [ %4585, %4581 ], [ %4595, %4590 ]
  %4601 = and i64 %4550, 4294967295
  %4602 = getelementptr inbounds i32, ptr %6, i64 %4601
  %4603 = load i32, ptr %4602, align 4, !tbaa !5
  %4604 = mul nsw i32 %4603, %4600
  %4605 = add nsw i32 %4604, %4544
  %4606 = icmp sgt i64 %4542, 2
  %4607 = add nsw i64 %4543, -1
  %4608 = add i32 %4541, 1
  br i1 %4606, label %4540, label %4609, !llvm.loop !1096

4609:                                             ; preds = %4599, %4536
  %4610 = phi i32 [ %4539, %4536 ], [ %4605, %4599 ]
  %4611 = sext i32 %4610 to i64
  %4612 = getelementptr inbounds double, ptr %4209, i64 %4611
  %4613 = load double, ptr %4612, align 8, !tbaa !18
  %4614 = fptrunc double %4613 to float
  %4615 = fadd fast float %4537, %4614
  %4616 = add nuw nsw i32 %4538, 1
  br i1 %4530, label %4617, label %4664

4617:                                             ; preds = %4609
  %4618 = load i32, ptr %4, align 4, !tbaa !5
  %4619 = load i32, ptr %12, align 4, !tbaa !5
  %4620 = add nsw i32 %4619, -1
  %4621 = icmp slt i32 %4618, %4620
  br i1 %4621, label %4641, label %4622

4622:                                             ; preds = %4617
  %4623 = icmp eq i32 %4618, %4620
  br i1 %4623, label %4624, label %4657

4624:                                             ; preds = %4622
  store i32 0, ptr %4, align 4, !tbaa !5
  %4625 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4625, ptr %6, align 4, !tbaa !5
  br i1 %4535, label %4664, label %4626

4626:                                             ; preds = %4624, %4651
  %4627 = phi i64 [ %4655, %4651 ], [ 1, %4624 ]
  %4628 = getelementptr inbounds i32, ptr %4, i64 %4627
  %4629 = load i32, ptr %4628, align 4, !tbaa !5
  %4630 = getelementptr inbounds i32, ptr %12, i64 %4627
  %4631 = load i32, ptr %4630, align 4, !tbaa !5
  %4632 = add nsw i32 %4631, -1
  %4633 = icmp slt i32 %4629, %4632
  br i1 %4633, label %4634, label %4649

4634:                                             ; preds = %4626
  br i1 %4621, label %4641, label %4635

4635:                                             ; preds = %4634
  %4636 = getelementptr inbounds i32, ptr %7, i64 %4627
  %4637 = load i32, ptr %4636, align 4, !tbaa !5
  %4638 = getelementptr inbounds i32, ptr %6, i64 %4627
  %4639 = load i32, ptr %4638, align 4, !tbaa !5
  %4640 = add nsw i32 %4639, %4637
  store i32 %4640, ptr %4638, align 4, !tbaa !5
  br label %4659

4641:                                             ; preds = %4617, %4634
  %4642 = phi i32 [ %4629, %4634 ], [ %4618, %4617 ]
  %4643 = phi ptr [ %4628, %4634 ], [ %4, %4617 ]
  %4644 = phi i64 [ %4627, %4634 ], [ 0, %4617 ]
  %4645 = add nsw i32 %4642, 1
  store i32 %4645, ptr %4643, align 4, !tbaa !5
  %4646 = getelementptr inbounds i32, ptr %7, i64 %4644
  %4647 = load i32, ptr %4646, align 4, !tbaa !5
  %4648 = getelementptr inbounds i32, ptr %6, i64 %4644
  br label %4659

4649:                                             ; preds = %4626
  %4650 = icmp eq i32 %4629, %4632
  br i1 %4650, label %4651, label %4657

4651:                                             ; preds = %4649
  store i32 0, ptr %4628, align 4, !tbaa !5
  %4652 = getelementptr inbounds i32, ptr %8, i64 %4627
  %4653 = load i32, ptr %4652, align 4, !tbaa !5
  %4654 = getelementptr inbounds i32, ptr %6, i64 %4627
  store i32 %4653, ptr %4654, align 4, !tbaa !5
  %4655 = add nuw nsw i64 %4627, 1
  %4656 = icmp eq i64 %4655, %4533
  br i1 %4656, label %4664, label %4626, !llvm.loop !1097

4657:                                             ; preds = %4622, %4649
  store float %4615, ptr %4211, align 4, !tbaa !162
  %4658 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4659:                                             ; preds = %4635, %4641
  %4660 = phi ptr [ %4648, %4641 ], [ %4628, %4635 ]
  %4661 = phi i32 [ %4647, %4641 ], [ 1, %4635 ]
  %4662 = load i32, ptr %4660, align 4, !tbaa !5
  %4663 = add nsw i32 %4662, %4661
  store i32 %4663, ptr %4660, align 4, !tbaa !5
  br label %4664

4664:                                             ; preds = %4651, %4659, %4624, %4609
  %4665 = icmp eq i32 %4616, %5
  br i1 %4665, label %5400, label %4536, !llvm.loop !1098

4666:                                             ; preds = %4519, %4801
  %4667 = phi float [ 0.000000e+00, %4519 ], [ %4749, %4801 ]
  %4668 = phi i32 [ 0, %4519 ], [ %4750, %4801 ]
  %4669 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4520, label %4670, label %4739

4670:                                             ; preds = %4666, %4729
  %4671 = phi i32 [ %4738, %4729 ], [ 0, %4666 ]
  %4672 = phi i64 [ %4680, %4729 ], [ %4524, %4666 ]
  %4673 = phi i64 [ %4737, %4729 ], [ %4523, %4666 ]
  %4674 = phi i32 [ %4735, %4729 ], [ %4669, %4666 ]
  %4675 = sub i32 %4522, %4671
  %4676 = tail call i32 @llvm.smin.i32(i32 %4675, i32 0)
  %4677 = sub i32 %4675, %4676
  %4678 = zext i32 %4677 to i64
  %4679 = add nuw nsw i64 %4678, 1
  %4680 = add nsw i64 %4672, -1
  %4681 = icmp ult i32 %4677, 31
  br i1 %4681, label %4717, label %4682

4682:                                             ; preds = %4670
  %4683 = and i64 %4679, 8589934560
  %4684 = sub i64 %4673, %4683
  br label %4685

4685:                                             ; preds = %4685, %4682
  %4686 = phi i64 [ 0, %4682 ], [ %4709, %4685 ]
  %4687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4705, %4685 ]
  %4688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4706, %4685 ]
  %4689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4707, %4685 ]
  %4690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4708, %4685 ]
  %4691 = sub i64 %4673, %4686
  %4692 = getelementptr inbounds i32, ptr %11, i64 %4691
  %4693 = getelementptr inbounds i32, ptr %4692, i64 -7
  %4694 = load <8 x i32>, ptr %4693, align 4, !tbaa !5
  %4695 = shufflevector <8 x i32> %4694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4696 = getelementptr inbounds i32, ptr %4692, i64 -15
  %4697 = load <8 x i32>, ptr %4696, align 4, !tbaa !5
  %4698 = shufflevector <8 x i32> %4697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4699 = getelementptr inbounds i32, ptr %4692, i64 -23
  %4700 = load <8 x i32>, ptr %4699, align 4, !tbaa !5
  %4701 = shufflevector <8 x i32> %4700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4702 = getelementptr inbounds i32, ptr %4692, i64 -31
  %4703 = load <8 x i32>, ptr %4702, align 4, !tbaa !5
  %4704 = shufflevector <8 x i32> %4703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4705 = mul <8 x i32> %4695, %4687
  %4706 = mul <8 x i32> %4698, %4688
  %4707 = mul <8 x i32> %4701, %4689
  %4708 = mul <8 x i32> %4704, %4690
  %4709 = add nuw i64 %4686, 32
  %4710 = icmp eq i64 %4709, %4683
  br i1 %4710, label %4711, label %4685, !llvm.loop !1099

4711:                                             ; preds = %4685
  %4712 = mul <8 x i32> %4706, %4705
  %4713 = mul <8 x i32> %4707, %4712
  %4714 = mul <8 x i32> %4708, %4713
  %4715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4714)
  %4716 = icmp eq i64 %4679, %4683
  br i1 %4716, label %4729, label %4717

4717:                                             ; preds = %4670, %4711
  %4718 = phi i64 [ %4673, %4670 ], [ %4684, %4711 ]
  %4719 = phi i32 [ 1, %4670 ], [ %4715, %4711 ]
  br label %4720

4720:                                             ; preds = %4717, %4720
  %4721 = phi i64 [ %4726, %4720 ], [ %4718, %4717 ]
  %4722 = phi i32 [ %4725, %4720 ], [ %4719, %4717 ]
  %4723 = getelementptr inbounds i32, ptr %11, i64 %4721
  %4724 = load i32, ptr %4723, align 4, !tbaa !5
  %4725 = mul nsw i32 %4724, %4722
  %4726 = add nsw i64 %4721, -1
  %4727 = trunc i64 %4721 to i32
  %4728 = icmp sgt i32 %4727, 0
  br i1 %4728, label %4720, label %4729, !llvm.loop !1100

4729:                                             ; preds = %4720, %4711
  %4730 = phi i32 [ %4715, %4711 ], [ %4725, %4720 ]
  %4731 = and i64 %4680, 4294967295
  %4732 = getelementptr inbounds i32, ptr %6, i64 %4731
  %4733 = load i32, ptr %4732, align 4, !tbaa !5
  %4734 = mul nsw i32 %4733, %4730
  %4735 = add nsw i32 %4734, %4674
  %4736 = icmp sgt i64 %4672, 2
  %4737 = add nsw i64 %4673, -1
  %4738 = add i32 %4671, 1
  br i1 %4736, label %4670, label %4739, !llvm.loop !1101

4739:                                             ; preds = %4729, %4666
  %4740 = phi i32 [ %4669, %4666 ], [ %4735, %4729 ]
  %4741 = icmp slt i32 %4740, %5
  br i1 %4741, label %4744, label %4742

4742:                                             ; preds = %4739
  %4743 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

4744:                                             ; preds = %4739
  %4745 = sext i32 %4740 to i64
  %4746 = getelementptr inbounds double, ptr %4209, i64 %4745
  %4747 = load double, ptr %4746, align 8, !tbaa !18
  %4748 = fptrunc double %4747 to float
  %4749 = fadd fast float %4667, %4748
  store float %4749, ptr %4211, align 4, !tbaa !162
  %4750 = add nuw nsw i32 %4668, 1
  br i1 %4521, label %4751, label %4801

4751:                                             ; preds = %4744
  %4752 = load i32, ptr %4, align 4, !tbaa !5
  %4753 = load i32, ptr %12, align 4, !tbaa !5
  %4754 = add nsw i32 %4753, -1
  %4755 = icmp slt i32 %4752, %4754
  br i1 %4755, label %4778, label %4756

4756:                                             ; preds = %4751
  %4757 = icmp eq i32 %4752, %4754
  br i1 %4757, label %4758, label %4794

4758:                                             ; preds = %4756
  store i32 0, ptr %4, align 4, !tbaa !5
  %4759 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4759, ptr %6, align 4, !tbaa !5
  br i1 %4526, label %4801, label %4760

4760:                                             ; preds = %4758, %4788
  %4761 = phi i64 [ %4792, %4788 ], [ 1, %4758 ]
  %4762 = getelementptr inbounds i32, ptr %4, i64 %4761
  %4763 = load i32, ptr %4762, align 4, !tbaa !5
  %4764 = getelementptr inbounds i32, ptr %12, i64 %4761
  %4765 = load i32, ptr %4764, align 4, !tbaa !5
  %4766 = add nsw i32 %4765, -1
  %4767 = icmp slt i32 %4763, %4766
  br i1 %4767, label %4768, label %4786

4768:                                             ; preds = %4760
  br i1 %4755, label %4778, label %4769

4769:                                             ; preds = %4768
  %4770 = shl i64 %4761, 32
  %4771 = add i64 %4770, -4294967296
  %4772 = ashr exact i64 %4771, 32
  %4773 = getelementptr inbounds i32, ptr %7, i64 %4772
  %4774 = load i32, ptr %4773, align 4, !tbaa !5
  %4775 = getelementptr inbounds i32, ptr %6, i64 %4761
  %4776 = load i32, ptr %4775, align 4, !tbaa !5
  %4777 = add nsw i32 %4776, %4774
  store i32 %4777, ptr %4775, align 4, !tbaa !5
  br label %4796

4778:                                             ; preds = %4751, %4768
  %4779 = phi i32 [ %4763, %4768 ], [ %4752, %4751 ]
  %4780 = phi ptr [ %4762, %4768 ], [ %4, %4751 ]
  %4781 = phi i64 [ %4761, %4768 ], [ 0, %4751 ]
  %4782 = add nsw i32 %4779, 1
  store i32 %4782, ptr %4780, align 4, !tbaa !5
  %4783 = getelementptr inbounds i32, ptr %7, i64 %4781
  %4784 = load i32, ptr %4783, align 4, !tbaa !5
  %4785 = getelementptr inbounds i32, ptr %6, i64 %4781
  br label %4796

4786:                                             ; preds = %4760
  %4787 = icmp eq i32 %4763, %4766
  br i1 %4787, label %4788, label %4794

4788:                                             ; preds = %4786
  store i32 0, ptr %4762, align 4, !tbaa !5
  %4789 = getelementptr inbounds i32, ptr %8, i64 %4761
  %4790 = load i32, ptr %4789, align 4, !tbaa !5
  %4791 = getelementptr inbounds i32, ptr %6, i64 %4761
  store i32 %4790, ptr %4791, align 4, !tbaa !5
  %4792 = add nuw nsw i64 %4761, 1
  %4793 = icmp eq i64 %4792, %4524
  br i1 %4793, label %4801, label %4760, !llvm.loop !1102

4794:                                             ; preds = %4756, %4786
  %4795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4796:                                             ; preds = %4769, %4778
  %4797 = phi ptr [ %4785, %4778 ], [ %4762, %4769 ]
  %4798 = phi i32 [ %4784, %4778 ], [ 1, %4769 ]
  %4799 = load i32, ptr %4797, align 4, !tbaa !5
  %4800 = add nsw i32 %4799, %4798
  store i32 %4800, ptr %4797, align 4, !tbaa !5
  br label %4801

4801:                                             ; preds = %4788, %4796, %4758, %4744
  %4802 = icmp eq i32 %4750, %5
  br i1 %4802, label %5401, label %4666, !llvm.loop !1103

4803:                                             ; preds = %4216
  %4804 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1512, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

4805:                                             ; preds = %18
  %4806 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4807 = load ptr, ptr %4806, align 8, !tbaa !9
  %4808 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4809 = load ptr, ptr %4808, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4809, align 8, !tbaa !18
  %4810 = icmp eq i32 %13, 0
  br i1 %4810, label %4811, label %4813

4811:                                             ; preds = %4805
  %4812 = load double, ptr %4807, align 8, !tbaa !18
  store double %4812, ptr %4809, align 8, !tbaa !18
  br label %5401

4813:                                             ; preds = %4805
  switch i32 %1, label %5393 [
    i32 1, label %4814
    i32 0, label %5105
  ]

4814:                                             ; preds = %4813
  %4815 = getelementptr inbounds i32, ptr %3, i64 %19
  %4816 = load i32, ptr %4815, align 4, !tbaa !5
  %4817 = icmp eq i32 %4816, 0
  %4818 = icmp sgt i32 %5, 0
  br i1 %4817, label %4828, label %4819

4819:                                             ; preds = %4814
  br i1 %4818, label %4820, label %5401

4820:                                             ; preds = %4819
  %4821 = icmp sgt i32 %13, 1
  %4822 = icmp sgt i32 %13, 0
  %4823 = add i32 %13, -2
  %4824 = zext i32 %4823 to i64
  %4825 = zext i32 %13 to i64
  %4826 = add nuw i32 %5, 1
  %4827 = icmp eq i32 %13, 1
  br label %4969

4828:                                             ; preds = %4814
  br i1 %4818, label %4829, label %5401

4829:                                             ; preds = %4828
  %4830 = icmp sgt i32 %13, 1
  %4831 = icmp sgt i32 %13, 0
  %4832 = add i32 %13, -2
  %4833 = zext i32 %4832 to i64
  %4834 = zext i32 %13 to i64
  %4835 = add nuw i32 %5, 1
  %4836 = icmp eq i32 %13, 1
  br label %4837

4837:                                             ; preds = %4829, %4967
  %4838 = phi double [ 0.000000e+00, %4829 ], [ %4918, %4967 ]
  %4839 = phi i32 [ 0, %4829 ], [ %4919, %4967 ]
  %4840 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4830, label %4841, label %4910

4841:                                             ; preds = %4837, %4900
  %4842 = phi i32 [ %4909, %4900 ], [ 0, %4837 ]
  %4843 = phi i64 [ %4851, %4900 ], [ %4834, %4837 ]
  %4844 = phi i64 [ %4908, %4900 ], [ %4833, %4837 ]
  %4845 = phi i32 [ %4906, %4900 ], [ %4840, %4837 ]
  %4846 = sub i32 %4832, %4842
  %4847 = tail call i32 @llvm.smin.i32(i32 %4846, i32 0)
  %4848 = sub i32 %4846, %4847
  %4849 = zext i32 %4848 to i64
  %4850 = add nuw nsw i64 %4849, 1
  %4851 = add nsw i64 %4843, -1
  %4852 = icmp ult i32 %4848, 31
  br i1 %4852, label %4888, label %4853

4853:                                             ; preds = %4841
  %4854 = and i64 %4850, 8589934560
  %4855 = sub i64 %4844, %4854
  br label %4856

4856:                                             ; preds = %4856, %4853
  %4857 = phi i64 [ 0, %4853 ], [ %4880, %4856 ]
  %4858 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4876, %4856 ]
  %4859 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4877, %4856 ]
  %4860 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4878, %4856 ]
  %4861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4879, %4856 ]
  %4862 = sub i64 %4844, %4857
  %4863 = getelementptr inbounds i32, ptr %9, i64 %4862
  %4864 = getelementptr inbounds i32, ptr %4863, i64 -7
  %4865 = load <8 x i32>, ptr %4864, align 4, !tbaa !5
  %4866 = shufflevector <8 x i32> %4865, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4867 = getelementptr inbounds i32, ptr %4863, i64 -15
  %4868 = load <8 x i32>, ptr %4867, align 4, !tbaa !5
  %4869 = shufflevector <8 x i32> %4868, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4870 = getelementptr inbounds i32, ptr %4863, i64 -23
  %4871 = load <8 x i32>, ptr %4870, align 4, !tbaa !5
  %4872 = shufflevector <8 x i32> %4871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4873 = getelementptr inbounds i32, ptr %4863, i64 -31
  %4874 = load <8 x i32>, ptr %4873, align 4, !tbaa !5
  %4875 = shufflevector <8 x i32> %4874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4876 = mul <8 x i32> %4866, %4858
  %4877 = mul <8 x i32> %4869, %4859
  %4878 = mul <8 x i32> %4872, %4860
  %4879 = mul <8 x i32> %4875, %4861
  %4880 = add nuw i64 %4857, 32
  %4881 = icmp eq i64 %4880, %4854
  br i1 %4881, label %4882, label %4856, !llvm.loop !1104

4882:                                             ; preds = %4856
  %4883 = mul <8 x i32> %4877, %4876
  %4884 = mul <8 x i32> %4878, %4883
  %4885 = mul <8 x i32> %4879, %4884
  %4886 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4885)
  %4887 = icmp eq i64 %4850, %4854
  br i1 %4887, label %4900, label %4888

4888:                                             ; preds = %4841, %4882
  %4889 = phi i64 [ %4844, %4841 ], [ %4855, %4882 ]
  %4890 = phi i32 [ 1, %4841 ], [ %4886, %4882 ]
  br label %4891

4891:                                             ; preds = %4888, %4891
  %4892 = phi i64 [ %4897, %4891 ], [ %4889, %4888 ]
  %4893 = phi i32 [ %4896, %4891 ], [ %4890, %4888 ]
  %4894 = getelementptr inbounds i32, ptr %9, i64 %4892
  %4895 = load i32, ptr %4894, align 4, !tbaa !5
  %4896 = mul nsw i32 %4895, %4893
  %4897 = add nsw i64 %4892, -1
  %4898 = trunc i64 %4892 to i32
  %4899 = icmp sgt i32 %4898, 0
  br i1 %4899, label %4891, label %4900, !llvm.loop !1105

4900:                                             ; preds = %4891, %4882
  %4901 = phi i32 [ %4886, %4882 ], [ %4896, %4891 ]
  %4902 = and i64 %4851, 4294967295
  %4903 = getelementptr inbounds i32, ptr %6, i64 %4902
  %4904 = load i32, ptr %4903, align 4, !tbaa !5
  %4905 = mul nsw i32 %4904, %4901
  %4906 = add nsw i32 %4905, %4845
  %4907 = icmp sgt i64 %4843, 2
  %4908 = add nsw i64 %4844, -1
  %4909 = add i32 %4842, 1
  br i1 %4907, label %4841, label %4910, !llvm.loop !1106

4910:                                             ; preds = %4900, %4837
  %4911 = phi i32 [ %4840, %4837 ], [ %4906, %4900 ]
  %4912 = sext i32 %4911 to i64
  %4913 = getelementptr inbounds double, ptr %2, i64 %4912
  %4914 = load double, ptr %4913, align 8, !tbaa !18
  %4915 = getelementptr inbounds double, ptr %4807, i64 %4912
  %4916 = load double, ptr %4915, align 8, !tbaa !18
  %4917 = fmul fast double %4916, %4914
  %4918 = fadd fast double %4838, %4917
  store double %4918, ptr %4809, align 8, !tbaa !18
  %4919 = add nuw nsw i32 %4839, 1
  br i1 %4831, label %4920, label %4967

4920:                                             ; preds = %4910
  %4921 = load i32, ptr %4, align 4, !tbaa !5
  %4922 = load i32, ptr %12, align 4, !tbaa !5
  %4923 = add nsw i32 %4922, -1
  %4924 = icmp slt i32 %4921, %4923
  br i1 %4924, label %4944, label %4925

4925:                                             ; preds = %4920
  %4926 = icmp eq i32 %4921, %4923
  br i1 %4926, label %4927, label %4960

4927:                                             ; preds = %4925
  store i32 0, ptr %4, align 4, !tbaa !5
  %4928 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4928, ptr %6, align 4, !tbaa !5
  br i1 %4836, label %4967, label %4929

4929:                                             ; preds = %4927, %4954
  %4930 = phi i64 [ %4958, %4954 ], [ 1, %4927 ]
  %4931 = getelementptr inbounds i32, ptr %4, i64 %4930
  %4932 = load i32, ptr %4931, align 4, !tbaa !5
  %4933 = getelementptr inbounds i32, ptr %12, i64 %4930
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = add nsw i32 %4934, -1
  %4936 = icmp slt i32 %4932, %4935
  br i1 %4936, label %4937, label %4952

4937:                                             ; preds = %4929
  br i1 %4924, label %4944, label %4938

4938:                                             ; preds = %4937
  %4939 = getelementptr inbounds i32, ptr %7, i64 %4930
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = getelementptr inbounds i32, ptr %6, i64 %4930
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = add nsw i32 %4942, %4940
  store i32 %4943, ptr %4941, align 4, !tbaa !5
  br label %4962

4944:                                             ; preds = %4920, %4937
  %4945 = phi i32 [ %4932, %4937 ], [ %4921, %4920 ]
  %4946 = phi ptr [ %4931, %4937 ], [ %4, %4920 ]
  %4947 = phi i64 [ %4930, %4937 ], [ 0, %4920 ]
  %4948 = add nsw i32 %4945, 1
  store i32 %4948, ptr %4946, align 4, !tbaa !5
  %4949 = getelementptr inbounds i32, ptr %7, i64 %4947
  %4950 = load i32, ptr %4949, align 4, !tbaa !5
  %4951 = getelementptr inbounds i32, ptr %6, i64 %4947
  br label %4962

4952:                                             ; preds = %4929
  %4953 = icmp eq i32 %4932, %4935
  br i1 %4953, label %4954, label %4960

4954:                                             ; preds = %4952
  store i32 0, ptr %4931, align 4, !tbaa !5
  %4955 = getelementptr inbounds i32, ptr %8, i64 %4930
  %4956 = load i32, ptr %4955, align 4, !tbaa !5
  %4957 = getelementptr inbounds i32, ptr %6, i64 %4930
  store i32 %4956, ptr %4957, align 4, !tbaa !5
  %4958 = add nuw nsw i64 %4930, 1
  %4959 = icmp eq i64 %4958, %4834
  br i1 %4959, label %4967, label %4929, !llvm.loop !1107

4960:                                             ; preds = %4925, %4952
  %4961 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4962:                                             ; preds = %4938, %4944
  %4963 = phi ptr [ %4951, %4944 ], [ %4931, %4938 ]
  %4964 = phi i32 [ %4950, %4944 ], [ 1, %4938 ]
  %4965 = load i32, ptr %4963, align 4, !tbaa !5
  %4966 = add nsw i32 %4965, %4964
  store i32 %4966, ptr %4963, align 4, !tbaa !5
  br label %4967

4967:                                             ; preds = %4954, %4962, %4927, %4910
  %4968 = icmp eq i32 %4919, %5
  br i1 %4968, label %5401, label %4837, !llvm.loop !1108

4969:                                             ; preds = %4820, %5103
  %4970 = phi double [ 0.000000e+00, %4820 ], [ %5051, %5103 ]
  %4971 = phi i32 [ 0, %4820 ], [ %5052, %5103 ]
  %4972 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4821, label %4973, label %5042

4973:                                             ; preds = %4969, %5032
  %4974 = phi i32 [ %5041, %5032 ], [ 0, %4969 ]
  %4975 = phi i64 [ %4983, %5032 ], [ %4825, %4969 ]
  %4976 = phi i64 [ %5040, %5032 ], [ %4824, %4969 ]
  %4977 = phi i32 [ %5038, %5032 ], [ %4972, %4969 ]
  %4978 = sub i32 %4823, %4974
  %4979 = tail call i32 @llvm.smin.i32(i32 %4978, i32 0)
  %4980 = sub i32 %4978, %4979
  %4981 = zext i32 %4980 to i64
  %4982 = add nuw nsw i64 %4981, 1
  %4983 = add nsw i64 %4975, -1
  %4984 = icmp ult i32 %4980, 31
  br i1 %4984, label %5020, label %4985

4985:                                             ; preds = %4973
  %4986 = and i64 %4982, 8589934560
  %4987 = sub i64 %4976, %4986
  br label %4988

4988:                                             ; preds = %4988, %4985
  %4989 = phi i64 [ 0, %4985 ], [ %5012, %4988 ]
  %4990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5008, %4988 ]
  %4991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5009, %4988 ]
  %4992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5010, %4988 ]
  %4993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5011, %4988 ]
  %4994 = sub i64 %4976, %4989
  %4995 = getelementptr inbounds i32, ptr %11, i64 %4994
  %4996 = getelementptr inbounds i32, ptr %4995, i64 -7
  %4997 = load <8 x i32>, ptr %4996, align 4, !tbaa !5
  %4998 = shufflevector <8 x i32> %4997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4999 = getelementptr inbounds i32, ptr %4995, i64 -15
  %5000 = load <8 x i32>, ptr %4999, align 4, !tbaa !5
  %5001 = shufflevector <8 x i32> %5000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5002 = getelementptr inbounds i32, ptr %4995, i64 -23
  %5003 = load <8 x i32>, ptr %5002, align 4, !tbaa !5
  %5004 = shufflevector <8 x i32> %5003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5005 = getelementptr inbounds i32, ptr %4995, i64 -31
  %5006 = load <8 x i32>, ptr %5005, align 4, !tbaa !5
  %5007 = shufflevector <8 x i32> %5006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5008 = mul <8 x i32> %4998, %4990
  %5009 = mul <8 x i32> %5001, %4991
  %5010 = mul <8 x i32> %5004, %4992
  %5011 = mul <8 x i32> %5007, %4993
  %5012 = add nuw i64 %4989, 32
  %5013 = icmp eq i64 %5012, %4986
  br i1 %5013, label %5014, label %4988, !llvm.loop !1109

5014:                                             ; preds = %4988
  %5015 = mul <8 x i32> %5009, %5008
  %5016 = mul <8 x i32> %5010, %5015
  %5017 = mul <8 x i32> %5011, %5016
  %5018 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5017)
  %5019 = icmp eq i64 %4982, %4986
  br i1 %5019, label %5032, label %5020

5020:                                             ; preds = %4973, %5014
  %5021 = phi i64 [ %4976, %4973 ], [ %4987, %5014 ]
  %5022 = phi i32 [ 1, %4973 ], [ %5018, %5014 ]
  br label %5023

5023:                                             ; preds = %5020, %5023
  %5024 = phi i64 [ %5029, %5023 ], [ %5021, %5020 ]
  %5025 = phi i32 [ %5028, %5023 ], [ %5022, %5020 ]
  %5026 = getelementptr inbounds i32, ptr %11, i64 %5024
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = mul nsw i32 %5027, %5025
  %5029 = add nsw i64 %5024, -1
  %5030 = trunc i64 %5024 to i32
  %5031 = icmp sgt i32 %5030, 0
  br i1 %5031, label %5023, label %5032, !llvm.loop !1110

5032:                                             ; preds = %5023, %5014
  %5033 = phi i32 [ %5018, %5014 ], [ %5028, %5023 ]
  %5034 = and i64 %4983, 4294967295
  %5035 = getelementptr inbounds i32, ptr %6, i64 %5034
  %5036 = load i32, ptr %5035, align 4, !tbaa !5
  %5037 = mul nsw i32 %5036, %5033
  %5038 = add nsw i32 %5037, %4977
  %5039 = icmp sgt i64 %4975, 2
  %5040 = add nsw i64 %4976, -1
  %5041 = add i32 %4974, 1
  br i1 %5039, label %4973, label %5042, !llvm.loop !1111

5042:                                             ; preds = %5032, %4969
  %5043 = phi i32 [ %4972, %4969 ], [ %5038, %5032 ]
  %5044 = icmp slt i32 %5043, %5
  br i1 %5044, label %5047, label %5045

5045:                                             ; preds = %5042
  %5046 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

5047:                                             ; preds = %5042
  %5048 = sext i32 %5043 to i64
  %5049 = getelementptr inbounds double, ptr %4807, i64 %5048
  %5050 = load double, ptr %5049, align 8, !tbaa !18
  %5051 = fadd fast double %4970, %5050
  store double %5051, ptr %4809, align 8, !tbaa !18
  %5052 = add nuw nsw i32 %4971, 1
  br i1 %4822, label %5053, label %5103

5053:                                             ; preds = %5047
  %5054 = load i32, ptr %4, align 4, !tbaa !5
  %5055 = load i32, ptr %12, align 4, !tbaa !5
  %5056 = add nsw i32 %5055, -1
  %5057 = icmp slt i32 %5054, %5056
  br i1 %5057, label %5080, label %5058

5058:                                             ; preds = %5053
  %5059 = icmp eq i32 %5054, %5056
  br i1 %5059, label %5060, label %5096

5060:                                             ; preds = %5058
  store i32 0, ptr %4, align 4, !tbaa !5
  %5061 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5061, ptr %6, align 4, !tbaa !5
  br i1 %4827, label %5103, label %5062

5062:                                             ; preds = %5060, %5090
  %5063 = phi i64 [ %5094, %5090 ], [ 1, %5060 ]
  %5064 = getelementptr inbounds i32, ptr %4, i64 %5063
  %5065 = load i32, ptr %5064, align 4, !tbaa !5
  %5066 = getelementptr inbounds i32, ptr %12, i64 %5063
  %5067 = load i32, ptr %5066, align 4, !tbaa !5
  %5068 = add nsw i32 %5067, -1
  %5069 = icmp slt i32 %5065, %5068
  br i1 %5069, label %5070, label %5088

5070:                                             ; preds = %5062
  br i1 %5057, label %5080, label %5071

5071:                                             ; preds = %5070
  %5072 = shl i64 %5063, 32
  %5073 = add i64 %5072, -4294967296
  %5074 = ashr exact i64 %5073, 32
  %5075 = getelementptr inbounds i32, ptr %7, i64 %5074
  %5076 = load i32, ptr %5075, align 4, !tbaa !5
  %5077 = getelementptr inbounds i32, ptr %6, i64 %5063
  %5078 = load i32, ptr %5077, align 4, !tbaa !5
  %5079 = add nsw i32 %5078, %5076
  store i32 %5079, ptr %5077, align 4, !tbaa !5
  br label %5098

5080:                                             ; preds = %5053, %5070
  %5081 = phi i32 [ %5065, %5070 ], [ %5054, %5053 ]
  %5082 = phi ptr [ %5064, %5070 ], [ %4, %5053 ]
  %5083 = phi i64 [ %5063, %5070 ], [ 0, %5053 ]
  %5084 = add nsw i32 %5081, 1
  store i32 %5084, ptr %5082, align 4, !tbaa !5
  %5085 = getelementptr inbounds i32, ptr %7, i64 %5083
  %5086 = load i32, ptr %5085, align 4, !tbaa !5
  %5087 = getelementptr inbounds i32, ptr %6, i64 %5083
  br label %5098

5088:                                             ; preds = %5062
  %5089 = icmp eq i32 %5065, %5068
  br i1 %5089, label %5090, label %5096

5090:                                             ; preds = %5088
  store i32 0, ptr %5064, align 4, !tbaa !5
  %5091 = getelementptr inbounds i32, ptr %8, i64 %5063
  %5092 = load i32, ptr %5091, align 4, !tbaa !5
  %5093 = getelementptr inbounds i32, ptr %6, i64 %5063
  store i32 %5092, ptr %5093, align 4, !tbaa !5
  %5094 = add nuw nsw i64 %5063, 1
  %5095 = icmp eq i64 %5094, %4825
  br i1 %5095, label %5103, label %5062, !llvm.loop !1112

5096:                                             ; preds = %5058, %5088
  %5097 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

5098:                                             ; preds = %5071, %5080
  %5099 = phi ptr [ %5087, %5080 ], [ %5064, %5071 ]
  %5100 = phi i32 [ %5086, %5080 ], [ 1, %5071 ]
  %5101 = load i32, ptr %5099, align 4, !tbaa !5
  %5102 = add nsw i32 %5101, %5100
  store i32 %5102, ptr %5099, align 4, !tbaa !5
  br label %5103

5103:                                             ; preds = %5090, %5098, %5060, %5047
  %5104 = icmp eq i32 %5052, %5
  br i1 %5104, label %5401, label %4969, !llvm.loop !1113

5105:                                             ; preds = %4813
  %5106 = getelementptr inbounds i32, ptr %3, i64 %19
  %5107 = load i32, ptr %5106, align 4, !tbaa !5
  %5108 = icmp eq i32 %5107, 0
  %5109 = icmp sgt i32 %5, 0
  br i1 %5108, label %5119, label %5110

5110:                                             ; preds = %5105
  br i1 %5109, label %5111, label %5401

5111:                                             ; preds = %5110
  %5112 = icmp sgt i32 %13, 1
  %5113 = icmp sgt i32 %13, 0
  %5114 = add i32 %13, -2
  %5115 = zext i32 %5114 to i64
  %5116 = zext i32 %13 to i64
  %5117 = add nuw i32 %5, 1
  %5118 = icmp eq i32 %13, 1
  br label %5257

5119:                                             ; preds = %5105
  br i1 %5109, label %5120, label %5401

5120:                                             ; preds = %5119
  %5121 = icmp sgt i32 %13, 1
  %5122 = icmp sgt i32 %13, 0
  %5123 = add i32 %13, -2
  %5124 = zext i32 %5123 to i64
  %5125 = zext i32 %13 to i64
  %5126 = add nuw i32 %5, 1
  %5127 = icmp eq i32 %13, 1
  br label %5128

5128:                                             ; preds = %5120, %5255
  %5129 = phi double [ 0.000000e+00, %5120 ], [ %5206, %5255 ]
  %5130 = phi i32 [ 0, %5120 ], [ %5207, %5255 ]
  %5131 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5121, label %5132, label %5201

5132:                                             ; preds = %5128, %5191
  %5133 = phi i32 [ %5200, %5191 ], [ 0, %5128 ]
  %5134 = phi i64 [ %5142, %5191 ], [ %5125, %5128 ]
  %5135 = phi i64 [ %5199, %5191 ], [ %5124, %5128 ]
  %5136 = phi i32 [ %5197, %5191 ], [ %5131, %5128 ]
  %5137 = sub i32 %5123, %5133
  %5138 = tail call i32 @llvm.smin.i32(i32 %5137, i32 0)
  %5139 = sub i32 %5137, %5138
  %5140 = zext i32 %5139 to i64
  %5141 = add nuw nsw i64 %5140, 1
  %5142 = add nsw i64 %5134, -1
  %5143 = icmp ult i32 %5139, 31
  br i1 %5143, label %5179, label %5144

5144:                                             ; preds = %5132
  %5145 = and i64 %5141, 8589934560
  %5146 = sub i64 %5135, %5145
  br label %5147

5147:                                             ; preds = %5147, %5144
  %5148 = phi i64 [ 0, %5144 ], [ %5171, %5147 ]
  %5149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5167, %5147 ]
  %5150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5168, %5147 ]
  %5151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5169, %5147 ]
  %5152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5170, %5147 ]
  %5153 = sub i64 %5135, %5148
  %5154 = getelementptr inbounds i32, ptr %9, i64 %5153
  %5155 = getelementptr inbounds i32, ptr %5154, i64 -7
  %5156 = load <8 x i32>, ptr %5155, align 4, !tbaa !5
  %5157 = shufflevector <8 x i32> %5156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5158 = getelementptr inbounds i32, ptr %5154, i64 -15
  %5159 = load <8 x i32>, ptr %5158, align 4, !tbaa !5
  %5160 = shufflevector <8 x i32> %5159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5161 = getelementptr inbounds i32, ptr %5154, i64 -23
  %5162 = load <8 x i32>, ptr %5161, align 4, !tbaa !5
  %5163 = shufflevector <8 x i32> %5162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5164 = getelementptr inbounds i32, ptr %5154, i64 -31
  %5165 = load <8 x i32>, ptr %5164, align 4, !tbaa !5
  %5166 = shufflevector <8 x i32> %5165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5167 = mul <8 x i32> %5157, %5149
  %5168 = mul <8 x i32> %5160, %5150
  %5169 = mul <8 x i32> %5163, %5151
  %5170 = mul <8 x i32> %5166, %5152
  %5171 = add nuw i64 %5148, 32
  %5172 = icmp eq i64 %5171, %5145
  br i1 %5172, label %5173, label %5147, !llvm.loop !1114

5173:                                             ; preds = %5147
  %5174 = mul <8 x i32> %5168, %5167
  %5175 = mul <8 x i32> %5169, %5174
  %5176 = mul <8 x i32> %5170, %5175
  %5177 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5176)
  %5178 = icmp eq i64 %5141, %5145
  br i1 %5178, label %5191, label %5179

5179:                                             ; preds = %5132, %5173
  %5180 = phi i64 [ %5135, %5132 ], [ %5146, %5173 ]
  %5181 = phi i32 [ 1, %5132 ], [ %5177, %5173 ]
  br label %5182

5182:                                             ; preds = %5179, %5182
  %5183 = phi i64 [ %5188, %5182 ], [ %5180, %5179 ]
  %5184 = phi i32 [ %5187, %5182 ], [ %5181, %5179 ]
  %5185 = getelementptr inbounds i32, ptr %9, i64 %5183
  %5186 = load i32, ptr %5185, align 4, !tbaa !5
  %5187 = mul nsw i32 %5186, %5184
  %5188 = add nsw i64 %5183, -1
  %5189 = trunc i64 %5183 to i32
  %5190 = icmp sgt i32 %5189, 0
  br i1 %5190, label %5182, label %5191, !llvm.loop !1115

5191:                                             ; preds = %5182, %5173
  %5192 = phi i32 [ %5177, %5173 ], [ %5187, %5182 ]
  %5193 = and i64 %5142, 4294967295
  %5194 = getelementptr inbounds i32, ptr %6, i64 %5193
  %5195 = load i32, ptr %5194, align 4, !tbaa !5
  %5196 = mul nsw i32 %5195, %5192
  %5197 = add nsw i32 %5196, %5136
  %5198 = icmp sgt i64 %5134, 2
  %5199 = add nsw i64 %5135, -1
  %5200 = add i32 %5133, 1
  br i1 %5198, label %5132, label %5201, !llvm.loop !1116

5201:                                             ; preds = %5191, %5128
  %5202 = phi i32 [ %5131, %5128 ], [ %5197, %5191 ]
  %5203 = sext i32 %5202 to i64
  %5204 = getelementptr inbounds double, ptr %4807, i64 %5203
  %5205 = load double, ptr %5204, align 8, !tbaa !18
  %5206 = fadd fast double %5129, %5205
  store double %5206, ptr %4809, align 8, !tbaa !18
  %5207 = add nuw nsw i32 %5130, 1
  br i1 %5122, label %5208, label %5255

5208:                                             ; preds = %5201
  %5209 = load i32, ptr %4, align 4, !tbaa !5
  %5210 = load i32, ptr %12, align 4, !tbaa !5
  %5211 = add nsw i32 %5210, -1
  %5212 = icmp slt i32 %5209, %5211
  br i1 %5212, label %5232, label %5213

5213:                                             ; preds = %5208
  %5214 = icmp eq i32 %5209, %5211
  br i1 %5214, label %5215, label %5248

5215:                                             ; preds = %5213
  store i32 0, ptr %4, align 4, !tbaa !5
  %5216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5216, ptr %6, align 4, !tbaa !5
  br i1 %5127, label %5255, label %5217

5217:                                             ; preds = %5215, %5242
  %5218 = phi i64 [ %5246, %5242 ], [ 1, %5215 ]
  %5219 = getelementptr inbounds i32, ptr %4, i64 %5218
  %5220 = load i32, ptr %5219, align 4, !tbaa !5
  %5221 = getelementptr inbounds i32, ptr %12, i64 %5218
  %5222 = load i32, ptr %5221, align 4, !tbaa !5
  %5223 = add nsw i32 %5222, -1
  %5224 = icmp slt i32 %5220, %5223
  br i1 %5224, label %5225, label %5240

5225:                                             ; preds = %5217
  br i1 %5212, label %5232, label %5226

5226:                                             ; preds = %5225
  %5227 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5228 = load i32, ptr %5227, align 4, !tbaa !5
  %5229 = getelementptr inbounds i32, ptr %6, i64 %5218
  %5230 = load i32, ptr %5229, align 4, !tbaa !5
  %5231 = add nsw i32 %5230, %5228
  store i32 %5231, ptr %5229, align 4, !tbaa !5
  br label %5250

5232:                                             ; preds = %5208, %5225
  %5233 = phi i32 [ %5220, %5225 ], [ %5209, %5208 ]
  %5234 = phi ptr [ %5219, %5225 ], [ %4, %5208 ]
  %5235 = phi i64 [ %5218, %5225 ], [ 0, %5208 ]
  %5236 = add nsw i32 %5233, 1
  store i32 %5236, ptr %5234, align 4, !tbaa !5
  %5237 = getelementptr inbounds i32, ptr %7, i64 %5235
  %5238 = load i32, ptr %5237, align 4, !tbaa !5
  %5239 = getelementptr inbounds i32, ptr %6, i64 %5235
  br label %5250

5240:                                             ; preds = %5217
  %5241 = icmp eq i32 %5220, %5223
  br i1 %5241, label %5242, label %5248

5242:                                             ; preds = %5240
  store i32 0, ptr %5219, align 4, !tbaa !5
  %5243 = getelementptr inbounds i32, ptr %8, i64 %5218
  %5244 = load i32, ptr %5243, align 4, !tbaa !5
  %5245 = getelementptr inbounds i32, ptr %6, i64 %5218
  store i32 %5244, ptr %5245, align 4, !tbaa !5
  %5246 = add nuw nsw i64 %5218, 1
  %5247 = icmp eq i64 %5246, %5125
  br i1 %5247, label %5255, label %5217, !llvm.loop !1117

5248:                                             ; preds = %5213, %5240
  %5249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

5250:                                             ; preds = %5226, %5232
  %5251 = phi ptr [ %5239, %5232 ], [ %5219, %5226 ]
  %5252 = phi i32 [ %5238, %5232 ], [ 1, %5226 ]
  %5253 = load i32, ptr %5251, align 4, !tbaa !5
  %5254 = add nsw i32 %5253, %5252
  store i32 %5254, ptr %5251, align 4, !tbaa !5
  br label %5255

5255:                                             ; preds = %5242, %5250, %5215, %5201
  %5256 = icmp eq i32 %5207, %5
  br i1 %5256, label %5401, label %5128, !llvm.loop !1118

5257:                                             ; preds = %5111, %5391
  %5258 = phi double [ 0.000000e+00, %5111 ], [ %5339, %5391 ]
  %5259 = phi i32 [ 0, %5111 ], [ %5340, %5391 ]
  %5260 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5112, label %5261, label %5330

5261:                                             ; preds = %5257, %5320
  %5262 = phi i32 [ %5329, %5320 ], [ 0, %5257 ]
  %5263 = phi i64 [ %5271, %5320 ], [ %5116, %5257 ]
  %5264 = phi i64 [ %5328, %5320 ], [ %5115, %5257 ]
  %5265 = phi i32 [ %5326, %5320 ], [ %5260, %5257 ]
  %5266 = sub i32 %5114, %5262
  %5267 = tail call i32 @llvm.smin.i32(i32 %5266, i32 0)
  %5268 = sub i32 %5266, %5267
  %5269 = zext i32 %5268 to i64
  %5270 = add nuw nsw i64 %5269, 1
  %5271 = add nsw i64 %5263, -1
  %5272 = icmp ult i32 %5268, 31
  br i1 %5272, label %5308, label %5273

5273:                                             ; preds = %5261
  %5274 = and i64 %5270, 8589934560
  %5275 = sub i64 %5264, %5274
  br label %5276

5276:                                             ; preds = %5276, %5273
  %5277 = phi i64 [ 0, %5273 ], [ %5300, %5276 ]
  %5278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5296, %5276 ]
  %5279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5297, %5276 ]
  %5280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5298, %5276 ]
  %5281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5299, %5276 ]
  %5282 = sub i64 %5264, %5277
  %5283 = getelementptr inbounds i32, ptr %11, i64 %5282
  %5284 = getelementptr inbounds i32, ptr %5283, i64 -7
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !5
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = getelementptr inbounds i32, ptr %5283, i64 -15
  %5288 = load <8 x i32>, ptr %5287, align 4, !tbaa !5
  %5289 = shufflevector <8 x i32> %5288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5290 = getelementptr inbounds i32, ptr %5283, i64 -23
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !5
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = getelementptr inbounds i32, ptr %5283, i64 -31
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !5
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = mul <8 x i32> %5286, %5278
  %5297 = mul <8 x i32> %5289, %5279
  %5298 = mul <8 x i32> %5292, %5280
  %5299 = mul <8 x i32> %5295, %5281
  %5300 = add nuw i64 %5277, 32
  %5301 = icmp eq i64 %5300, %5274
  br i1 %5301, label %5302, label %5276, !llvm.loop !1119

5302:                                             ; preds = %5276
  %5303 = mul <8 x i32> %5297, %5296
  %5304 = mul <8 x i32> %5298, %5303
  %5305 = mul <8 x i32> %5299, %5304
  %5306 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5305)
  %5307 = icmp eq i64 %5270, %5274
  br i1 %5307, label %5320, label %5308

5308:                                             ; preds = %5261, %5302
  %5309 = phi i64 [ %5264, %5261 ], [ %5275, %5302 ]
  %5310 = phi i32 [ 1, %5261 ], [ %5306, %5302 ]
  br label %5311

5311:                                             ; preds = %5308, %5311
  %5312 = phi i64 [ %5317, %5311 ], [ %5309, %5308 ]
  %5313 = phi i32 [ %5316, %5311 ], [ %5310, %5308 ]
  %5314 = getelementptr inbounds i32, ptr %11, i64 %5312
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = mul nsw i32 %5315, %5313
  %5317 = add nsw i64 %5312, -1
  %5318 = trunc i64 %5312 to i32
  %5319 = icmp sgt i32 %5318, 0
  br i1 %5319, label %5311, label %5320, !llvm.loop !1120

5320:                                             ; preds = %5311, %5302
  %5321 = phi i32 [ %5306, %5302 ], [ %5316, %5311 ]
  %5322 = and i64 %5271, 4294967295
  %5323 = getelementptr inbounds i32, ptr %6, i64 %5322
  %5324 = load i32, ptr %5323, align 4, !tbaa !5
  %5325 = mul nsw i32 %5324, %5321
  %5326 = add nsw i32 %5325, %5265
  %5327 = icmp sgt i64 %5263, 2
  %5328 = add nsw i64 %5264, -1
  %5329 = add i32 %5262, 1
  br i1 %5327, label %5261, label %5330, !llvm.loop !1121

5330:                                             ; preds = %5320, %5257
  %5331 = phi i32 [ %5260, %5257 ], [ %5326, %5320 ]
  %5332 = icmp slt i32 %5331, %5
  br i1 %5332, label %5335, label %5333

5333:                                             ; preds = %5330
  %5334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

5335:                                             ; preds = %5330
  %5336 = sext i32 %5331 to i64
  %5337 = getelementptr inbounds double, ptr %4807, i64 %5336
  %5338 = load double, ptr %5337, align 8, !tbaa !18
  %5339 = fadd fast double %5258, %5338
  store double %5339, ptr %4809, align 8, !tbaa !18
  %5340 = add nuw nsw i32 %5259, 1
  br i1 %5113, label %5341, label %5391

5341:                                             ; preds = %5335
  %5342 = load i32, ptr %4, align 4, !tbaa !5
  %5343 = load i32, ptr %12, align 4, !tbaa !5
  %5344 = add nsw i32 %5343, -1
  %5345 = icmp slt i32 %5342, %5344
  br i1 %5345, label %5368, label %5346

5346:                                             ; preds = %5341
  %5347 = icmp eq i32 %5342, %5344
  br i1 %5347, label %5348, label %5384

5348:                                             ; preds = %5346
  store i32 0, ptr %4, align 4, !tbaa !5
  %5349 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5349, ptr %6, align 4, !tbaa !5
  br i1 %5118, label %5391, label %5350

5350:                                             ; preds = %5348, %5378
  %5351 = phi i64 [ %5382, %5378 ], [ 1, %5348 ]
  %5352 = getelementptr inbounds i32, ptr %4, i64 %5351
  %5353 = load i32, ptr %5352, align 4, !tbaa !5
  %5354 = getelementptr inbounds i32, ptr %12, i64 %5351
  %5355 = load i32, ptr %5354, align 4, !tbaa !5
  %5356 = add nsw i32 %5355, -1
  %5357 = icmp slt i32 %5353, %5356
  br i1 %5357, label %5358, label %5376

5358:                                             ; preds = %5350
  br i1 %5345, label %5368, label %5359

5359:                                             ; preds = %5358
  %5360 = shl i64 %5351, 32
  %5361 = add i64 %5360, -4294967296
  %5362 = ashr exact i64 %5361, 32
  %5363 = getelementptr inbounds i32, ptr %7, i64 %5362
  %5364 = load i32, ptr %5363, align 4, !tbaa !5
  %5365 = getelementptr inbounds i32, ptr %6, i64 %5351
  %5366 = load i32, ptr %5365, align 4, !tbaa !5
  %5367 = add nsw i32 %5366, %5364
  store i32 %5367, ptr %5365, align 4, !tbaa !5
  br label %5386

5368:                                             ; preds = %5341, %5358
  %5369 = phi i32 [ %5353, %5358 ], [ %5342, %5341 ]
  %5370 = phi ptr [ %5352, %5358 ], [ %4, %5341 ]
  %5371 = phi i64 [ %5351, %5358 ], [ 0, %5341 ]
  %5372 = add nsw i32 %5369, 1
  store i32 %5372, ptr %5370, align 4, !tbaa !5
  %5373 = getelementptr inbounds i32, ptr %7, i64 %5371
  %5374 = load i32, ptr %5373, align 4, !tbaa !5
  %5375 = getelementptr inbounds i32, ptr %6, i64 %5371
  br label %5386

5376:                                             ; preds = %5350
  %5377 = icmp eq i32 %5353, %5356
  br i1 %5377, label %5378, label %5384

5378:                                             ; preds = %5376
  store i32 0, ptr %5352, align 4, !tbaa !5
  %5379 = getelementptr inbounds i32, ptr %8, i64 %5351
  %5380 = load i32, ptr %5379, align 4, !tbaa !5
  %5381 = getelementptr inbounds i32, ptr %6, i64 %5351
  store i32 %5380, ptr %5381, align 4, !tbaa !5
  %5382 = add nuw nsw i64 %5351, 1
  %5383 = icmp eq i64 %5382, %5116
  br i1 %5383, label %5391, label %5350, !llvm.loop !1122

5384:                                             ; preds = %5346, %5376
  %5385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

5386:                                             ; preds = %5359, %5368
  %5387 = phi ptr [ %5375, %5368 ], [ %5352, %5359 ]
  %5388 = phi i32 [ %5374, %5368 ], [ 1, %5359 ]
  %5389 = load i32, ptr %5387, align 4, !tbaa !5
  %5390 = add nsw i32 %5389, %5388
  store i32 %5390, ptr %5387, align 4, !tbaa !5
  br label %5391

5391:                                             ; preds = %5378, %5386, %5348, %5335
  %5392 = icmp eq i32 %5340, %5
  br i1 %5392, label %5401, label %5257, !llvm.loop !1123

5393:                                             ; preds = %4813
  %5394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1517, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

5395:                                             ; preds = %1983
  store i16 %1934, ptr %1820, align 2, !tbaa !78
  br label %5401

5396:                                             ; preds = %2277
  store i16 %2228, ptr %1820, align 2, !tbaa !78
  br label %5401

5397:                                             ; preds = %3183
  store i64 %3134, ptr %3020, align 8, !tbaa !120
  br label %5401

5398:                                             ; preds = %3476
  store i64 %3427, ptr %3020, align 8, !tbaa !120
  br label %5401

5399:                                             ; preds = %4374
  store float %4325, ptr %4211, align 4, !tbaa !162
  br label %5401

5400:                                             ; preds = %4664
  store float %4615, ptr %4211, align 4, !tbaa !162
  br label %5401

5401:                                             ; preds = %5391, %5255, %5103, %4967, %4801, %4511, %4203, %4067, %3915, %3779, %3613, %3323, %3012, %2875, %2722, %2585, %2414, %2124, %1812, %1675, %1522, %1385, %1214, %1077, %924, %787, %616, %479, %326, %189, %5110, %5119, %4819, %4828, %4518, %4527, %5400, %4222, %4231, %5399, %3922, %3931, %3631, %3640, %3330, %3339, %5398, %3031, %3040, %5397, %2729, %2738, %2433, %2442, %2131, %2140, %5396, %1831, %1840, %5395, %1529, %1538, %1233, %1242, %931, %940, %635, %644, %333, %342, %37, %46, %4811, %5393, %4213, %4803, %3623, %4205, %3022, %3615, %2424, %3014, %1822, %2416, %1224, %1814, %626, %1216, %28, %618, %18, %4960, %5045, %5096, %5248, %5333, %5384, %4367, %4452, %4504, %4657, %4742, %4794, %3772, %3857, %3908, %4060, %4145, %4196, %3176, %3261, %3316, %3469, %3554, %3606, %2578, %2662, %2715, %2868, %2952, %3005, %1976, %2061, %2117, %2270, %2355, %2407, %1378, %1462, %1515, %1668, %1752, %1805, %780, %864, %917, %1070, %1154, %1207, %182, %266, %319, %472, %556, %609
  %5402 = phi i32 [ -1, %609 ], [ -1, %556 ], [ -1, %472 ], [ -1, %319 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1207 ], [ -1, %1154 ], [ -1, %1070 ], [ -1, %917 ], [ -1, %864 ], [ -1, %780 ], [ -1, %1805 ], [ -1, %1752 ], [ -1, %1668 ], [ -1, %1515 ], [ -1, %1462 ], [ -1, %1378 ], [ -1, %2407 ], [ -1, %2355 ], [ -1, %2270 ], [ -1, %2117 ], [ -1, %2061 ], [ -1, %1976 ], [ -1, %3005 ], [ -1, %2952 ], [ -1, %2868 ], [ -1, %2715 ], [ -1, %2662 ], [ -1, %2578 ], [ -1, %3606 ], [ -1, %3554 ], [ -1, %3469 ], [ -1, %3316 ], [ -1, %3261 ], [ -1, %3176 ], [ -1, %4196 ], [ -1, %4145 ], [ -1, %4060 ], [ -1, %3908 ], [ -1, %3857 ], [ -1, %3772 ], [ -1, %4794 ], [ -1, %4742 ], [ -1, %4657 ], [ -1, %4504 ], [ -1, %4452 ], [ -1, %4367 ], [ -1, %5384 ], [ -1, %5333 ], [ -1, %5248 ], [ -1, %5096 ], [ -1, %5045 ], [ -1, %4960 ], [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1216 ], [ 1, %626 ], [ 1, %1814 ], [ 1, %1224 ], [ 1, %2416 ], [ 1, %1822 ], [ 1, %3014 ], [ 1, %2424 ], [ 1, %3615 ], [ 1, %3022 ], [ 1, %4205 ], [ 1, %3623 ], [ 1, %4803 ], [ 1, %4213 ], [ 1, %5393 ], [ 1, %4811 ], [ 1, %46 ], [ 1, %37 ], [ 1, %342 ], [ 1, %333 ], [ 1, %644 ], [ 1, %635 ], [ 1, %940 ], [ 1, %931 ], [ 1, %1242 ], [ 1, %1233 ], [ 1, %1538 ], [ 1, %1529 ], [ %1847, %5395 ], [ 1, %1840 ], [ 1, %1831 ], [ %2147, %5396 ], [ 1, %2140 ], [ 1, %2131 ], [ 1, %2442 ], [ 1, %2433 ], [ 1, %2738 ], [ 1, %2729 ], [ %3047, %5397 ], [ 1, %3040 ], [ 1, %3031 ], [ %3346, %5398 ], [ 1, %3339 ], [ 1, %3330 ], [ 1, %3640 ], [ 1, %3631 ], [ 1, %3931 ], [ 1, %3922 ], [ %4238, %5399 ], [ 1, %4231 ], [ 1, %4222 ], [ %4534, %5400 ], [ 1, %4527 ], [ 1, %4518 ], [ 1, %4828 ], [ 1, %4819 ], [ 1, %5119 ], [ 1, %5110 ], [ %53, %189 ], [ %44, %326 ], [ %349, %479 ], [ %340, %616 ], [ %651, %787 ], [ %642, %924 ], [ %947, %1077 ], [ %938, %1214 ], [ %1249, %1385 ], [ %1240, %1522 ], [ %1545, %1675 ], [ %1536, %1812 ], [ %1838, %2124 ], [ %2138, %2414 ], [ %2449, %2585 ], [ %2440, %2722 ], [ %2745, %2875 ], [ %2736, %3012 ], [ %3038, %3323 ], [ %3337, %3613 ], [ %3647, %3779 ], [ %3638, %3915 ], [ %3938, %4067 ], [ %3929, %4203 ], [ %4229, %4511 ], [ %4525, %4801 ], [ %4835, %4967 ], [ %4826, %5103 ], [ %5126, %5255 ], [ %5117, %5391 ]
  ret i32 %5402
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5406 [
    i32 101, label %22
    i32 102, label %620
    i32 103, label %1218
    i32 104, label %1816
    i32 105, label %2418
    i32 106, label %3016
    i32 107, label %3617
    i32 108, label %4212
    i32 109, label %4805
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load float, ptr %24, align 4, !tbaa !162
  %30 = fptoui float %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5406

31:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %32
    i32 0, label %328
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5406

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %191

46:                                               ; preds = %32
  br i1 %36, label %47, label %5406

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %189
  %56 = phi i32 [ 0, %47 ], [ %141, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !1124

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !1125

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !1126

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds float, ptr %24, i64 %129
  %133 = load float, ptr %132, align 4, !tbaa !162
  %134 = fptoui float %133 to i8
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = uitofp i8 %134 to double
  %138 = fmul fast double %131, %137
  %139 = fadd fast double %138, %136
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = add nuw nsw i32 %56, 1
  br i1 %49, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %54, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %52
  br i1 %181, label %189, label %151, !llvm.loop !1127

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %5406, label %55, !llvm.loop !1128

191:                                              ; preds = %38, %326
  %192 = phi i32 [ 0, %38 ], [ %275, %326 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %43, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %42, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %41, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !1129

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !1130

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !1131

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds float, ptr %24, i64 %269
  %271 = load float, ptr %270, align 4, !tbaa !162
  %272 = fptoui float %271 to i8
  %273 = load i8, ptr %26, align 1, !tbaa !11
  %274 = add i8 %273, %272
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %192, 1
  br i1 %40, label %276, label %326

276:                                              ; preds = %268
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %45, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %43
  br i1 %318, label %326, label %285, !llvm.loop !1132

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %268
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %5406, label %191, !llvm.loop !1133

328:                                              ; preds = %31
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %5406

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %481

342:                                              ; preds = %328
  br i1 %332, label %343, label %5406

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %479
  %352 = phi i32 [ 0, %343 ], [ %431, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %354, label %423

354:                                              ; preds = %351, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %351 ]
  %356 = phi i64 [ %364, %413 ], [ %348, %351 ]
  %357 = phi i64 [ %421, %413 ], [ %347, %351 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %351 ]
  %359 = sub i32 %346, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !1134

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !1135

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !1136

423:                                              ; preds = %413, %351
  %424 = phi i32 [ %353, %351 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds float, ptr %24, i64 %425
  %427 = load float, ptr %426, align 4, !tbaa !162
  %428 = fptoui float %427 to i8
  %429 = load i8, ptr %26, align 1, !tbaa !11
  %430 = add i8 %429, %428
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = add nuw nsw i32 %352, 1
  br i1 %345, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %350, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %348
  br i1 %471, label %479, label %441, !llvm.loop !1137

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %5406, label %351, !llvm.loop !1138

481:                                              ; preds = %334, %616
  %482 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %339, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %338, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %337, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !1139

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !1140

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !1141

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds float, ptr %24, i64 %559
  %561 = load float, ptr %560, align 4, !tbaa !162
  %562 = fptoui float %561 to i8
  %563 = load i8, ptr %26, align 1, !tbaa !11
  %564 = add i8 %563, %562
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %482, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %558
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !1142

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %558
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %5406, label %481, !llvm.loop !1143

618:                                              ; preds = %31
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1720, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %620
  %627 = load float, ptr %622, align 4, !tbaa !162
  %628 = fptosi float %627 to i32
  store i32 %628, ptr %624, align 4, !tbaa !5
  br label %5406

629:                                              ; preds = %620
  switch i32 %1, label %1216 [
    i32 1, label %630
    i32 0, label %926
  ]

630:                                              ; preds = %629
  %631 = getelementptr inbounds i32, ptr %3, i64 %19
  %632 = load i32, ptr %631, align 4, !tbaa !5
  %633 = icmp eq i32 %632, 0
  %634 = icmp sgt i32 %5, 0
  br i1 %633, label %644, label %635

635:                                              ; preds = %630
  br i1 %634, label %636, label %5406

636:                                              ; preds = %635
  %637 = icmp sgt i32 %13, 1
  %638 = icmp sgt i32 %13, 0
  %639 = add i32 %13, -2
  %640 = zext i32 %639 to i64
  %641 = zext i32 %13 to i64
  %642 = add nuw i32 %5, 1
  %643 = icmp eq i32 %13, 1
  br label %789

644:                                              ; preds = %630
  br i1 %634, label %645, label %5406

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %653

653:                                              ; preds = %645, %787
  %654 = phi i32 [ 0, %645 ], [ %739, %787 ]
  %655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %656, label %725

656:                                              ; preds = %653, %715
  %657 = phi i32 [ %724, %715 ], [ 0, %653 ]
  %658 = phi i64 [ %666, %715 ], [ %650, %653 ]
  %659 = phi i64 [ %723, %715 ], [ %649, %653 ]
  %660 = phi i32 [ %721, %715 ], [ %655, %653 ]
  %661 = sub i32 %648, %657
  %662 = tail call i32 @llvm.smin.i32(i32 %661, i32 0)
  %663 = sub i32 %661, %662
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i64 %664, 1
  %666 = add nsw i64 %658, -1
  %667 = icmp ult i32 %663, 31
  br i1 %667, label %703, label %668

668:                                              ; preds = %656
  %669 = and i64 %665, 8589934560
  %670 = sub i64 %659, %669
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i64 [ 0, %668 ], [ %695, %671 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %691, %671 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %692, %671 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %693, %671 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %694, %671 ]
  %677 = sub i64 %659, %672
  %678 = getelementptr inbounds i32, ptr %9, i64 %677
  %679 = getelementptr inbounds i32, ptr %678, i64 -7
  %680 = load <8 x i32>, ptr %679, align 4, !tbaa !5
  %681 = shufflevector <8 x i32> %680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %682 = getelementptr inbounds i32, ptr %678, i64 -15
  %683 = load <8 x i32>, ptr %682, align 4, !tbaa !5
  %684 = shufflevector <8 x i32> %683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %685 = getelementptr inbounds i32, ptr %678, i64 -23
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %678, i64 -31
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = mul <8 x i32> %681, %673
  %692 = mul <8 x i32> %684, %674
  %693 = mul <8 x i32> %687, %675
  %694 = mul <8 x i32> %690, %676
  %695 = add nuw i64 %672, 32
  %696 = icmp eq i64 %695, %669
  br i1 %696, label %697, label %671, !llvm.loop !1144

697:                                              ; preds = %671
  %698 = mul <8 x i32> %692, %691
  %699 = mul <8 x i32> %693, %698
  %700 = mul <8 x i32> %694, %699
  %701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %700)
  %702 = icmp eq i64 %665, %669
  br i1 %702, label %715, label %703

703:                                              ; preds = %656, %697
  %704 = phi i64 [ %659, %656 ], [ %670, %697 ]
  %705 = phi i32 [ 1, %656 ], [ %701, %697 ]
  br label %706

706:                                              ; preds = %703, %706
  %707 = phi i64 [ %712, %706 ], [ %704, %703 ]
  %708 = phi i32 [ %711, %706 ], [ %705, %703 ]
  %709 = getelementptr inbounds i32, ptr %9, i64 %707
  %710 = load i32, ptr %709, align 4, !tbaa !5
  %711 = mul nsw i32 %710, %708
  %712 = add nsw i64 %707, -1
  %713 = trunc i64 %707 to i32
  %714 = icmp sgt i32 %713, 0
  br i1 %714, label %706, label %715, !llvm.loop !1145

715:                                              ; preds = %706, %697
  %716 = phi i32 [ %701, %697 ], [ %711, %706 ]
  %717 = and i64 %666, 4294967295
  %718 = getelementptr inbounds i32, ptr %6, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %716
  %721 = add nsw i32 %720, %660
  %722 = icmp sgt i64 %658, 2
  %723 = add nsw i64 %659, -1
  %724 = add i32 %657, 1
  br i1 %722, label %656, label %725, !llvm.loop !1146

725:                                              ; preds = %715, %653
  %726 = phi i32 [ %655, %653 ], [ %721, %715 ]
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %2, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !18
  %730 = getelementptr inbounds float, ptr %622, i64 %727
  %731 = load float, ptr %730, align 4, !tbaa !162
  %732 = fptosi float %731 to i32
  %733 = load i32, ptr %624, align 4, !tbaa !5
  %734 = sitofp i32 %733 to double
  %735 = sitofp i32 %732 to double
  %736 = fmul fast double %729, %735
  %737 = fadd fast double %736, %734
  %738 = fptosi double %737 to i32
  store i32 %738, ptr %624, align 4, !tbaa !5
  %739 = add nuw nsw i32 %654, 1
  br i1 %647, label %740, label %787

740:                                              ; preds = %725
  %741 = load i32, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %12, align 4, !tbaa !5
  %743 = add nsw i32 %742, -1
  %744 = icmp slt i32 %741, %743
  br i1 %744, label %764, label %745

745:                                              ; preds = %740
  %746 = icmp eq i32 %741, %743
  br i1 %746, label %747, label %780

747:                                              ; preds = %745
  store i32 0, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %748, ptr %6, align 4, !tbaa !5
  br i1 %652, label %787, label %749

749:                                              ; preds = %747, %774
  %750 = phi i64 [ %778, %774 ], [ 1, %747 ]
  %751 = getelementptr inbounds i32, ptr %4, i64 %750
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = getelementptr inbounds i32, ptr %12, i64 %750
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = add nsw i32 %754, -1
  %756 = icmp slt i32 %752, %755
  br i1 %756, label %757, label %772

757:                                              ; preds = %749
  br i1 %744, label %764, label %758

758:                                              ; preds = %757
  %759 = getelementptr inbounds i32, ptr %7, i64 %750
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %6, i64 %750
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, %760
  store i32 %763, ptr %761, align 4, !tbaa !5
  br label %782

764:                                              ; preds = %740, %757
  %765 = phi i32 [ %752, %757 ], [ %741, %740 ]
  %766 = phi ptr [ %751, %757 ], [ %4, %740 ]
  %767 = phi i64 [ %750, %757 ], [ 0, %740 ]
  %768 = add nsw i32 %765, 1
  store i32 %768, ptr %766, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %7, i64 %767
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %767
  br label %782

772:                                              ; preds = %749
  %773 = icmp eq i32 %752, %755
  br i1 %773, label %774, label %780

774:                                              ; preds = %772
  store i32 0, ptr %751, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %8, i64 %750
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %750
  store i32 %776, ptr %777, align 4, !tbaa !5
  %778 = add nuw nsw i64 %750, 1
  %779 = icmp eq i64 %778, %650
  br i1 %779, label %787, label %749, !llvm.loop !1147

780:                                              ; preds = %745, %772
  %781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

782:                                              ; preds = %758, %764
  %783 = phi ptr [ %771, %764 ], [ %751, %758 ]
  %784 = phi i32 [ %770, %764 ], [ 1, %758 ]
  %785 = load i32, ptr %783, align 4, !tbaa !5
  %786 = add nsw i32 %785, %784
  store i32 %786, ptr %783, align 4, !tbaa !5
  br label %787

787:                                              ; preds = %774, %782, %747, %725
  %788 = icmp eq i32 %739, %5
  br i1 %788, label %5406, label %653, !llvm.loop !1148

789:                                              ; preds = %636, %924
  %790 = phi i32 [ 0, %636 ], [ %873, %924 ]
  %791 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %637, label %792, label %861

792:                                              ; preds = %789, %851
  %793 = phi i32 [ %860, %851 ], [ 0, %789 ]
  %794 = phi i64 [ %802, %851 ], [ %641, %789 ]
  %795 = phi i64 [ %859, %851 ], [ %640, %789 ]
  %796 = phi i32 [ %857, %851 ], [ %791, %789 ]
  %797 = sub i32 %639, %793
  %798 = tail call i32 @llvm.smin.i32(i32 %797, i32 0)
  %799 = sub i32 %797, %798
  %800 = zext i32 %799 to i64
  %801 = add nuw nsw i64 %800, 1
  %802 = add nsw i64 %794, -1
  %803 = icmp ult i32 %799, 31
  br i1 %803, label %839, label %804

804:                                              ; preds = %792
  %805 = and i64 %801, 8589934560
  %806 = sub i64 %795, %805
  br label %807

807:                                              ; preds = %807, %804
  %808 = phi i64 [ 0, %804 ], [ %831, %807 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %827, %807 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %828, %807 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %829, %807 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %830, %807 ]
  %813 = sub i64 %795, %808
  %814 = getelementptr inbounds i32, ptr %11, i64 %813
  %815 = getelementptr inbounds i32, ptr %814, i64 -7
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %814, i64 -15
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = getelementptr inbounds i32, ptr %814, i64 -23
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %814, i64 -31
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = mul <8 x i32> %817, %809
  %828 = mul <8 x i32> %820, %810
  %829 = mul <8 x i32> %823, %811
  %830 = mul <8 x i32> %826, %812
  %831 = add nuw i64 %808, 32
  %832 = icmp eq i64 %831, %805
  br i1 %832, label %833, label %807, !llvm.loop !1149

833:                                              ; preds = %807
  %834 = mul <8 x i32> %828, %827
  %835 = mul <8 x i32> %829, %834
  %836 = mul <8 x i32> %830, %835
  %837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %836)
  %838 = icmp eq i64 %801, %805
  br i1 %838, label %851, label %839

839:                                              ; preds = %792, %833
  %840 = phi i64 [ %795, %792 ], [ %806, %833 ]
  %841 = phi i32 [ 1, %792 ], [ %837, %833 ]
  br label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %848, %842 ], [ %840, %839 ]
  %844 = phi i32 [ %847, %842 ], [ %841, %839 ]
  %845 = getelementptr inbounds i32, ptr %11, i64 %843
  %846 = load i32, ptr %845, align 4, !tbaa !5
  %847 = mul nsw i32 %846, %844
  %848 = add nsw i64 %843, -1
  %849 = trunc i64 %843 to i32
  %850 = icmp sgt i32 %849, 0
  br i1 %850, label %842, label %851, !llvm.loop !1150

851:                                              ; preds = %842, %833
  %852 = phi i32 [ %837, %833 ], [ %847, %842 ]
  %853 = and i64 %802, 4294967295
  %854 = getelementptr inbounds i32, ptr %6, i64 %853
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %852
  %857 = add nsw i32 %856, %796
  %858 = icmp sgt i64 %794, 2
  %859 = add nsw i64 %795, -1
  %860 = add i32 %793, 1
  br i1 %858, label %792, label %861, !llvm.loop !1151

861:                                              ; preds = %851, %789
  %862 = phi i32 [ %791, %789 ], [ %857, %851 ]
  %863 = icmp slt i32 %862, %5
  br i1 %863, label %866, label %864

864:                                              ; preds = %861
  %865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

866:                                              ; preds = %861
  %867 = sext i32 %862 to i64
  %868 = getelementptr inbounds float, ptr %622, i64 %867
  %869 = load float, ptr %868, align 4, !tbaa !162
  %870 = fptosi float %869 to i32
  %871 = load i32, ptr %624, align 4, !tbaa !5
  %872 = add i32 %871, %870
  store i32 %872, ptr %624, align 4, !tbaa !5
  %873 = add nuw nsw i32 %790, 1
  br i1 %638, label %874, label %924

874:                                              ; preds = %866
  %875 = load i32, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %12, align 4, !tbaa !5
  %877 = add nsw i32 %876, -1
  %878 = icmp slt i32 %875, %877
  br i1 %878, label %901, label %879

879:                                              ; preds = %874
  %880 = icmp eq i32 %875, %877
  br i1 %880, label %881, label %917

881:                                              ; preds = %879
  store i32 0, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %882, ptr %6, align 4, !tbaa !5
  br i1 %643, label %924, label %883

883:                                              ; preds = %881, %911
  %884 = phi i64 [ %915, %911 ], [ 1, %881 ]
  %885 = getelementptr inbounds i32, ptr %4, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !5
  %887 = getelementptr inbounds i32, ptr %12, i64 %884
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %886, %889
  br i1 %890, label %891, label %909

891:                                              ; preds = %883
  br i1 %878, label %901, label %892

892:                                              ; preds = %891
  %893 = shl i64 %884, 32
  %894 = add i64 %893, -4294967296
  %895 = ashr exact i64 %894, 32
  %896 = getelementptr inbounds i32, ptr %7, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %6, i64 %884
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, %897
  store i32 %900, ptr %898, align 4, !tbaa !5
  br label %919

901:                                              ; preds = %874, %891
  %902 = phi i32 [ %886, %891 ], [ %875, %874 ]
  %903 = phi ptr [ %885, %891 ], [ %4, %874 ]
  %904 = phi i64 [ %884, %891 ], [ 0, %874 ]
  %905 = add nsw i32 %902, 1
  store i32 %905, ptr %903, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %7, i64 %904
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %904
  br label %919

909:                                              ; preds = %883
  %910 = icmp eq i32 %886, %889
  br i1 %910, label %911, label %917

911:                                              ; preds = %909
  store i32 0, ptr %885, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %8, i64 %884
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %884
  store i32 %913, ptr %914, align 4, !tbaa !5
  %915 = add nuw nsw i64 %884, 1
  %916 = icmp eq i64 %915, %641
  br i1 %916, label %924, label %883, !llvm.loop !1152

917:                                              ; preds = %879, %909
  %918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

919:                                              ; preds = %892, %901
  %920 = phi ptr [ %908, %901 ], [ %885, %892 ]
  %921 = phi i32 [ %907, %901 ], [ 1, %892 ]
  %922 = load i32, ptr %920, align 4, !tbaa !5
  %923 = add nsw i32 %922, %921
  store i32 %923, ptr %920, align 4, !tbaa !5
  br label %924

924:                                              ; preds = %911, %919, %881, %866
  %925 = icmp eq i32 %873, %5
  br i1 %925, label %5406, label %789, !llvm.loop !1153

926:                                              ; preds = %629
  %927 = getelementptr inbounds i32, ptr %3, i64 %19
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = icmp eq i32 %928, 0
  %930 = icmp sgt i32 %5, 0
  br i1 %929, label %940, label %931

931:                                              ; preds = %926
  br i1 %930, label %932, label %5406

932:                                              ; preds = %931
  %933 = icmp sgt i32 %13, 1
  %934 = icmp sgt i32 %13, 0
  %935 = add i32 %13, -2
  %936 = zext i32 %935 to i64
  %937 = zext i32 %13 to i64
  %938 = add nuw i32 %5, 1
  %939 = icmp eq i32 %13, 1
  br label %1079

940:                                              ; preds = %926
  br i1 %930, label %941, label %5406

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %949

949:                                              ; preds = %941, %1077
  %950 = phi i32 [ 0, %941 ], [ %1029, %1077 ]
  %951 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %952, label %1021

952:                                              ; preds = %949, %1011
  %953 = phi i32 [ %1020, %1011 ], [ 0, %949 ]
  %954 = phi i64 [ %962, %1011 ], [ %946, %949 ]
  %955 = phi i64 [ %1019, %1011 ], [ %945, %949 ]
  %956 = phi i32 [ %1017, %1011 ], [ %951, %949 ]
  %957 = sub i32 %944, %953
  %958 = tail call i32 @llvm.smin.i32(i32 %957, i32 0)
  %959 = sub i32 %957, %958
  %960 = zext i32 %959 to i64
  %961 = add nuw nsw i64 %960, 1
  %962 = add nsw i64 %954, -1
  %963 = icmp ult i32 %959, 31
  br i1 %963, label %999, label %964

964:                                              ; preds = %952
  %965 = and i64 %961, 8589934560
  %966 = sub i64 %955, %965
  br label %967

967:                                              ; preds = %967, %964
  %968 = phi i64 [ 0, %964 ], [ %991, %967 ]
  %969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %987, %967 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %988, %967 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %989, %967 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %990, %967 ]
  %973 = sub i64 %955, %968
  %974 = getelementptr inbounds i32, ptr %9, i64 %973
  %975 = getelementptr inbounds i32, ptr %974, i64 -7
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %974, i64 -15
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = getelementptr inbounds i32, ptr %974, i64 -23
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = getelementptr inbounds i32, ptr %974, i64 -31
  %985 = load <8 x i32>, ptr %984, align 4, !tbaa !5
  %986 = shufflevector <8 x i32> %985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %987 = mul <8 x i32> %977, %969
  %988 = mul <8 x i32> %980, %970
  %989 = mul <8 x i32> %983, %971
  %990 = mul <8 x i32> %986, %972
  %991 = add nuw i64 %968, 32
  %992 = icmp eq i64 %991, %965
  br i1 %992, label %993, label %967, !llvm.loop !1154

993:                                              ; preds = %967
  %994 = mul <8 x i32> %988, %987
  %995 = mul <8 x i32> %989, %994
  %996 = mul <8 x i32> %990, %995
  %997 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %996)
  %998 = icmp eq i64 %961, %965
  br i1 %998, label %1011, label %999

999:                                              ; preds = %952, %993
  %1000 = phi i64 [ %955, %952 ], [ %966, %993 ]
  %1001 = phi i32 [ 1, %952 ], [ %997, %993 ]
  br label %1002

1002:                                             ; preds = %999, %1002
  %1003 = phi i64 [ %1008, %1002 ], [ %1000, %999 ]
  %1004 = phi i32 [ %1007, %1002 ], [ %1001, %999 ]
  %1005 = getelementptr inbounds i32, ptr %9, i64 %1003
  %1006 = load i32, ptr %1005, align 4, !tbaa !5
  %1007 = mul nsw i32 %1006, %1004
  %1008 = add nsw i64 %1003, -1
  %1009 = trunc i64 %1003 to i32
  %1010 = icmp sgt i32 %1009, 0
  br i1 %1010, label %1002, label %1011, !llvm.loop !1155

1011:                                             ; preds = %1002, %993
  %1012 = phi i32 [ %997, %993 ], [ %1007, %1002 ]
  %1013 = and i64 %962, 4294967295
  %1014 = getelementptr inbounds i32, ptr %6, i64 %1013
  %1015 = load i32, ptr %1014, align 4, !tbaa !5
  %1016 = mul nsw i32 %1015, %1012
  %1017 = add nsw i32 %1016, %956
  %1018 = icmp sgt i64 %954, 2
  %1019 = add nsw i64 %955, -1
  %1020 = add i32 %953, 1
  br i1 %1018, label %952, label %1021, !llvm.loop !1156

1021:                                             ; preds = %1011, %949
  %1022 = phi i32 [ %951, %949 ], [ %1017, %1011 ]
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds float, ptr %622, i64 %1023
  %1025 = load float, ptr %1024, align 4, !tbaa !162
  %1026 = fptosi float %1025 to i32
  %1027 = load i32, ptr %624, align 4, !tbaa !5
  %1028 = add nsw i32 %1027, %1026
  store i32 %1028, ptr %624, align 4, !tbaa !5
  %1029 = add nuw nsw i32 %950, 1
  br i1 %943, label %1030, label %1077

1030:                                             ; preds = %1021
  %1031 = load i32, ptr %4, align 4, !tbaa !5
  %1032 = load i32, ptr %12, align 4, !tbaa !5
  %1033 = add nsw i32 %1032, -1
  %1034 = icmp slt i32 %1031, %1033
  br i1 %1034, label %1054, label %1035

1035:                                             ; preds = %1030
  %1036 = icmp eq i32 %1031, %1033
  br i1 %1036, label %1037, label %1070

1037:                                             ; preds = %1035
  store i32 0, ptr %4, align 4, !tbaa !5
  %1038 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1038, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1077, label %1039

1039:                                             ; preds = %1037, %1064
  %1040 = phi i64 [ %1068, %1064 ], [ 1, %1037 ]
  %1041 = getelementptr inbounds i32, ptr %4, i64 %1040
  %1042 = load i32, ptr %1041, align 4, !tbaa !5
  %1043 = getelementptr inbounds i32, ptr %12, i64 %1040
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = add nsw i32 %1044, -1
  %1046 = icmp slt i32 %1042, %1045
  br i1 %1046, label %1047, label %1062

1047:                                             ; preds = %1039
  br i1 %1034, label %1054, label %1048

1048:                                             ; preds = %1047
  %1049 = getelementptr inbounds i32, ptr %7, i64 %1040
  %1050 = load i32, ptr %1049, align 4, !tbaa !5
  %1051 = getelementptr inbounds i32, ptr %6, i64 %1040
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, %1050
  store i32 %1053, ptr %1051, align 4, !tbaa !5
  br label %1072

1054:                                             ; preds = %1030, %1047
  %1055 = phi i32 [ %1042, %1047 ], [ %1031, %1030 ]
  %1056 = phi ptr [ %1041, %1047 ], [ %4, %1030 ]
  %1057 = phi i64 [ %1040, %1047 ], [ 0, %1030 ]
  %1058 = add nsw i32 %1055, 1
  store i32 %1058, ptr %1056, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %7, i64 %1057
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %6, i64 %1057
  br label %1072

1062:                                             ; preds = %1039
  %1063 = icmp eq i32 %1042, %1045
  br i1 %1063, label %1064, label %1070

1064:                                             ; preds = %1062
  store i32 0, ptr %1041, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %8, i64 %1040
  %1066 = load i32, ptr %1065, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %6, i64 %1040
  store i32 %1066, ptr %1067, align 4, !tbaa !5
  %1068 = add nuw nsw i64 %1040, 1
  %1069 = icmp eq i64 %1068, %946
  br i1 %1069, label %1077, label %1039, !llvm.loop !1157

1070:                                             ; preds = %1035, %1062
  %1071 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1072:                                             ; preds = %1048, %1054
  %1073 = phi ptr [ %1061, %1054 ], [ %1041, %1048 ]
  %1074 = phi i32 [ %1060, %1054 ], [ 1, %1048 ]
  %1075 = load i32, ptr %1073, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, %1074
  store i32 %1076, ptr %1073, align 4, !tbaa !5
  br label %1077

1077:                                             ; preds = %1064, %1072, %1037, %1021
  %1078 = icmp eq i32 %1029, %5
  br i1 %1078, label %5406, label %949, !llvm.loop !1158

1079:                                             ; preds = %932, %1214
  %1080 = phi i32 [ 0, %932 ], [ %1163, %1214 ]
  %1081 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1082, label %1151

1082:                                             ; preds = %1079, %1141
  %1083 = phi i32 [ %1150, %1141 ], [ 0, %1079 ]
  %1084 = phi i64 [ %1092, %1141 ], [ %937, %1079 ]
  %1085 = phi i64 [ %1149, %1141 ], [ %936, %1079 ]
  %1086 = phi i32 [ %1147, %1141 ], [ %1081, %1079 ]
  %1087 = sub i32 %935, %1083
  %1088 = tail call i32 @llvm.smin.i32(i32 %1087, i32 0)
  %1089 = sub i32 %1087, %1088
  %1090 = zext i32 %1089 to i64
  %1091 = add nuw nsw i64 %1090, 1
  %1092 = add nsw i64 %1084, -1
  %1093 = icmp ult i32 %1089, 31
  br i1 %1093, label %1129, label %1094

1094:                                             ; preds = %1082
  %1095 = and i64 %1091, 8589934560
  %1096 = sub i64 %1085, %1095
  br label %1097

1097:                                             ; preds = %1097, %1094
  %1098 = phi i64 [ 0, %1094 ], [ %1121, %1097 ]
  %1099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1117, %1097 ]
  %1100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1118, %1097 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1119, %1097 ]
  %1102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1120, %1097 ]
  %1103 = sub i64 %1085, %1098
  %1104 = getelementptr inbounds i32, ptr %11, i64 %1103
  %1105 = getelementptr inbounds i32, ptr %1104, i64 -7
  %1106 = load <8 x i32>, ptr %1105, align 4, !tbaa !5
  %1107 = shufflevector <8 x i32> %1106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1108 = getelementptr inbounds i32, ptr %1104, i64 -15
  %1109 = load <8 x i32>, ptr %1108, align 4, !tbaa !5
  %1110 = shufflevector <8 x i32> %1109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1111 = getelementptr inbounds i32, ptr %1104, i64 -23
  %1112 = load <8 x i32>, ptr %1111, align 4, !tbaa !5
  %1113 = shufflevector <8 x i32> %1112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1114 = getelementptr inbounds i32, ptr %1104, i64 -31
  %1115 = load <8 x i32>, ptr %1114, align 4, !tbaa !5
  %1116 = shufflevector <8 x i32> %1115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1117 = mul <8 x i32> %1107, %1099
  %1118 = mul <8 x i32> %1110, %1100
  %1119 = mul <8 x i32> %1113, %1101
  %1120 = mul <8 x i32> %1116, %1102
  %1121 = add nuw i64 %1098, 32
  %1122 = icmp eq i64 %1121, %1095
  br i1 %1122, label %1123, label %1097, !llvm.loop !1159

1123:                                             ; preds = %1097
  %1124 = mul <8 x i32> %1118, %1117
  %1125 = mul <8 x i32> %1119, %1124
  %1126 = mul <8 x i32> %1120, %1125
  %1127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1126)
  %1128 = icmp eq i64 %1091, %1095
  br i1 %1128, label %1141, label %1129

1129:                                             ; preds = %1082, %1123
  %1130 = phi i64 [ %1085, %1082 ], [ %1096, %1123 ]
  %1131 = phi i32 [ 1, %1082 ], [ %1127, %1123 ]
  br label %1132

1132:                                             ; preds = %1129, %1132
  %1133 = phi i64 [ %1138, %1132 ], [ %1130, %1129 ]
  %1134 = phi i32 [ %1137, %1132 ], [ %1131, %1129 ]
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1133
  %1136 = load i32, ptr %1135, align 4, !tbaa !5
  %1137 = mul nsw i32 %1136, %1134
  %1138 = add nsw i64 %1133, -1
  %1139 = trunc i64 %1133 to i32
  %1140 = icmp sgt i32 %1139, 0
  br i1 %1140, label %1132, label %1141, !llvm.loop !1160

1141:                                             ; preds = %1132, %1123
  %1142 = phi i32 [ %1127, %1123 ], [ %1137, %1132 ]
  %1143 = and i64 %1092, 4294967295
  %1144 = getelementptr inbounds i32, ptr %6, i64 %1143
  %1145 = load i32, ptr %1144, align 4, !tbaa !5
  %1146 = mul nsw i32 %1145, %1142
  %1147 = add nsw i32 %1146, %1086
  %1148 = icmp sgt i64 %1084, 2
  %1149 = add nsw i64 %1085, -1
  %1150 = add i32 %1083, 1
  br i1 %1148, label %1082, label %1151, !llvm.loop !1161

1151:                                             ; preds = %1141, %1079
  %1152 = phi i32 [ %1081, %1079 ], [ %1147, %1141 ]
  %1153 = icmp slt i32 %1152, %5
  br i1 %1153, label %1156, label %1154

1154:                                             ; preds = %1151
  %1155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

1156:                                             ; preds = %1151
  %1157 = sext i32 %1152 to i64
  %1158 = getelementptr inbounds float, ptr %622, i64 %1157
  %1159 = load float, ptr %1158, align 4, !tbaa !162
  %1160 = fptosi float %1159 to i32
  %1161 = load i32, ptr %624, align 4, !tbaa !5
  %1162 = add nsw i32 %1161, %1160
  store i32 %1162, ptr %624, align 4, !tbaa !5
  %1163 = add nuw nsw i32 %1080, 1
  br i1 %934, label %1164, label %1214

1164:                                             ; preds = %1156
  %1165 = load i32, ptr %4, align 4, !tbaa !5
  %1166 = load i32, ptr %12, align 4, !tbaa !5
  %1167 = add nsw i32 %1166, -1
  %1168 = icmp slt i32 %1165, %1167
  br i1 %1168, label %1191, label %1169

1169:                                             ; preds = %1164
  %1170 = icmp eq i32 %1165, %1167
  br i1 %1170, label %1171, label %1207

1171:                                             ; preds = %1169
  store i32 0, ptr %4, align 4, !tbaa !5
  %1172 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1172, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1214, label %1173

1173:                                             ; preds = %1171, %1201
  %1174 = phi i64 [ %1205, %1201 ], [ 1, %1171 ]
  %1175 = getelementptr inbounds i32, ptr %4, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !5
  %1177 = getelementptr inbounds i32, ptr %12, i64 %1174
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = add nsw i32 %1178, -1
  %1180 = icmp slt i32 %1176, %1179
  br i1 %1180, label %1181, label %1199

1181:                                             ; preds = %1173
  br i1 %1168, label %1191, label %1182

1182:                                             ; preds = %1181
  %1183 = shl i64 %1174, 32
  %1184 = add i64 %1183, -4294967296
  %1185 = ashr exact i64 %1184, 32
  %1186 = getelementptr inbounds i32, ptr %7, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !5
  %1188 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = add nsw i32 %1189, %1187
  store i32 %1190, ptr %1188, align 4, !tbaa !5
  br label %1209

1191:                                             ; preds = %1164, %1181
  %1192 = phi i32 [ %1176, %1181 ], [ %1165, %1164 ]
  %1193 = phi ptr [ %1175, %1181 ], [ %4, %1164 ]
  %1194 = phi i64 [ %1174, %1181 ], [ 0, %1164 ]
  %1195 = add nsw i32 %1192, 1
  store i32 %1195, ptr %1193, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %7, i64 %1194
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %6, i64 %1194
  br label %1209

1199:                                             ; preds = %1173
  %1200 = icmp eq i32 %1176, %1179
  br i1 %1200, label %1201, label %1207

1201:                                             ; preds = %1199
  store i32 0, ptr %1175, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %8, i64 %1174
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %6, i64 %1174
  store i32 %1203, ptr %1204, align 4, !tbaa !5
  %1205 = add nuw nsw i64 %1174, 1
  %1206 = icmp eq i64 %1205, %937
  br i1 %1206, label %1214, label %1173, !llvm.loop !1162

1207:                                             ; preds = %1169, %1199
  %1208 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1209:                                             ; preds = %1182, %1191
  %1210 = phi ptr [ %1198, %1191 ], [ %1175, %1182 ]
  %1211 = phi i32 [ %1197, %1191 ], [ 1, %1182 ]
  %1212 = load i32, ptr %1210, align 4, !tbaa !5
  %1213 = add nsw i32 %1212, %1211
  store i32 %1213, ptr %1210, align 4, !tbaa !5
  br label %1214

1214:                                             ; preds = %1201, %1209, %1171, %1156
  %1215 = icmp eq i32 %1163, %5
  br i1 %1215, label %5406, label %1079, !llvm.loop !1163

1216:                                             ; preds = %629
  %1217 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1723, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

1218:                                             ; preds = %18
  %1219 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1220 = load ptr, ptr %1219, align 8, !tbaa !9
  %1221 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1222 = load ptr, ptr %1221, align 8, !tbaa !9
  store i8 0, ptr %1222, align 1, !tbaa !11
  %1223 = icmp eq i32 %13, 0
  br i1 %1223, label %1224, label %1227

1224:                                             ; preds = %1218
  %1225 = load float, ptr %1220, align 4, !tbaa !162
  %1226 = fptosi float %1225 to i8
  store i8 %1226, ptr %1222, align 1, !tbaa !11
  br label %5406

1227:                                             ; preds = %1218
  switch i32 %1, label %1814 [
    i32 1, label %1228
    i32 0, label %1524
  ]

1228:                                             ; preds = %1227
  %1229 = getelementptr inbounds i32, ptr %3, i64 %19
  %1230 = load i32, ptr %1229, align 4, !tbaa !5
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp sgt i32 %5, 0
  br i1 %1231, label %1242, label %1233

1233:                                             ; preds = %1228
  br i1 %1232, label %1234, label %5406

1234:                                             ; preds = %1233
  %1235 = icmp sgt i32 %13, 1
  %1236 = icmp sgt i32 %13, 0
  %1237 = add i32 %13, -2
  %1238 = zext i32 %1237 to i64
  %1239 = zext i32 %13 to i64
  %1240 = add nuw i32 %5, 1
  %1241 = icmp eq i32 %13, 1
  br label %1387

1242:                                             ; preds = %1228
  br i1 %1232, label %1243, label %5406

1243:                                             ; preds = %1242
  %1244 = icmp sgt i32 %13, 1
  %1245 = icmp sgt i32 %13, 0
  %1246 = add i32 %13, -2
  %1247 = zext i32 %1246 to i64
  %1248 = zext i32 %13 to i64
  %1249 = add nuw i32 %5, 1
  %1250 = icmp eq i32 %13, 1
  br label %1251

1251:                                             ; preds = %1243, %1385
  %1252 = phi i32 [ 0, %1243 ], [ %1337, %1385 ]
  %1253 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1254, label %1323

1254:                                             ; preds = %1251, %1313
  %1255 = phi i32 [ %1322, %1313 ], [ 0, %1251 ]
  %1256 = phi i64 [ %1264, %1313 ], [ %1248, %1251 ]
  %1257 = phi i64 [ %1321, %1313 ], [ %1247, %1251 ]
  %1258 = phi i32 [ %1319, %1313 ], [ %1253, %1251 ]
  %1259 = sub i32 %1246, %1255
  %1260 = tail call i32 @llvm.smin.i32(i32 %1259, i32 0)
  %1261 = sub i32 %1259, %1260
  %1262 = zext i32 %1261 to i64
  %1263 = add nuw nsw i64 %1262, 1
  %1264 = add nsw i64 %1256, -1
  %1265 = icmp ult i32 %1261, 31
  br i1 %1265, label %1301, label %1266

1266:                                             ; preds = %1254
  %1267 = and i64 %1263, 8589934560
  %1268 = sub i64 %1257, %1267
  br label %1269

1269:                                             ; preds = %1269, %1266
  %1270 = phi i64 [ 0, %1266 ], [ %1293, %1269 ]
  %1271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1289, %1269 ]
  %1272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1290, %1269 ]
  %1273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1291, %1269 ]
  %1274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1292, %1269 ]
  %1275 = sub i64 %1257, %1270
  %1276 = getelementptr inbounds i32, ptr %9, i64 %1275
  %1277 = getelementptr inbounds i32, ptr %1276, i64 -7
  %1278 = load <8 x i32>, ptr %1277, align 4, !tbaa !5
  %1279 = shufflevector <8 x i32> %1278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1280 = getelementptr inbounds i32, ptr %1276, i64 -15
  %1281 = load <8 x i32>, ptr %1280, align 4, !tbaa !5
  %1282 = shufflevector <8 x i32> %1281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1283 = getelementptr inbounds i32, ptr %1276, i64 -23
  %1284 = load <8 x i32>, ptr %1283, align 4, !tbaa !5
  %1285 = shufflevector <8 x i32> %1284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1286 = getelementptr inbounds i32, ptr %1276, i64 -31
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = mul <8 x i32> %1279, %1271
  %1290 = mul <8 x i32> %1282, %1272
  %1291 = mul <8 x i32> %1285, %1273
  %1292 = mul <8 x i32> %1288, %1274
  %1293 = add nuw i64 %1270, 32
  %1294 = icmp eq i64 %1293, %1267
  br i1 %1294, label %1295, label %1269, !llvm.loop !1164

1295:                                             ; preds = %1269
  %1296 = mul <8 x i32> %1290, %1289
  %1297 = mul <8 x i32> %1291, %1296
  %1298 = mul <8 x i32> %1292, %1297
  %1299 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1298)
  %1300 = icmp eq i64 %1263, %1267
  br i1 %1300, label %1313, label %1301

1301:                                             ; preds = %1254, %1295
  %1302 = phi i64 [ %1257, %1254 ], [ %1268, %1295 ]
  %1303 = phi i32 [ 1, %1254 ], [ %1299, %1295 ]
  br label %1304

1304:                                             ; preds = %1301, %1304
  %1305 = phi i64 [ %1310, %1304 ], [ %1302, %1301 ]
  %1306 = phi i32 [ %1309, %1304 ], [ %1303, %1301 ]
  %1307 = getelementptr inbounds i32, ptr %9, i64 %1305
  %1308 = load i32, ptr %1307, align 4, !tbaa !5
  %1309 = mul nsw i32 %1308, %1306
  %1310 = add nsw i64 %1305, -1
  %1311 = trunc i64 %1305 to i32
  %1312 = icmp sgt i32 %1311, 0
  br i1 %1312, label %1304, label %1313, !llvm.loop !1165

1313:                                             ; preds = %1304, %1295
  %1314 = phi i32 [ %1299, %1295 ], [ %1309, %1304 ]
  %1315 = and i64 %1264, 4294967295
  %1316 = getelementptr inbounds i32, ptr %6, i64 %1315
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1314
  %1319 = add nsw i32 %1318, %1258
  %1320 = icmp sgt i64 %1256, 2
  %1321 = add nsw i64 %1257, -1
  %1322 = add i32 %1255, 1
  br i1 %1320, label %1254, label %1323, !llvm.loop !1166

1323:                                             ; preds = %1313, %1251
  %1324 = phi i32 [ %1253, %1251 ], [ %1319, %1313 ]
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds double, ptr %2, i64 %1325
  %1327 = load double, ptr %1326, align 8, !tbaa !18
  %1328 = getelementptr inbounds float, ptr %1220, i64 %1325
  %1329 = load float, ptr %1328, align 4, !tbaa !162
  %1330 = fptosi float %1329 to i8
  %1331 = load i8, ptr %1222, align 1, !tbaa !11
  %1332 = sitofp i8 %1331 to double
  %1333 = sitofp i8 %1330 to double
  %1334 = fmul fast double %1327, %1333
  %1335 = fadd fast double %1334, %1332
  %1336 = fptosi double %1335 to i8
  store i8 %1336, ptr %1222, align 1, !tbaa !11
  %1337 = add nuw nsw i32 %1252, 1
  br i1 %1245, label %1338, label %1385

1338:                                             ; preds = %1323
  %1339 = load i32, ptr %4, align 4, !tbaa !5
  %1340 = load i32, ptr %12, align 4, !tbaa !5
  %1341 = add nsw i32 %1340, -1
  %1342 = icmp slt i32 %1339, %1341
  br i1 %1342, label %1362, label %1343

1343:                                             ; preds = %1338
  %1344 = icmp eq i32 %1339, %1341
  br i1 %1344, label %1345, label %1378

1345:                                             ; preds = %1343
  store i32 0, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1346, ptr %6, align 4, !tbaa !5
  br i1 %1250, label %1385, label %1347

1347:                                             ; preds = %1345, %1372
  %1348 = phi i64 [ %1376, %1372 ], [ 1, %1345 ]
  %1349 = getelementptr inbounds i32, ptr %4, i64 %1348
  %1350 = load i32, ptr %1349, align 4, !tbaa !5
  %1351 = getelementptr inbounds i32, ptr %12, i64 %1348
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = add nsw i32 %1352, -1
  %1354 = icmp slt i32 %1350, %1353
  br i1 %1354, label %1355, label %1370

1355:                                             ; preds = %1347
  br i1 %1342, label %1362, label %1356

1356:                                             ; preds = %1355
  %1357 = getelementptr inbounds i32, ptr %7, i64 %1348
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = getelementptr inbounds i32, ptr %6, i64 %1348
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = add nsw i32 %1360, %1358
  store i32 %1361, ptr %1359, align 4, !tbaa !5
  br label %1380

1362:                                             ; preds = %1338, %1355
  %1363 = phi i32 [ %1350, %1355 ], [ %1339, %1338 ]
  %1364 = phi ptr [ %1349, %1355 ], [ %4, %1338 ]
  %1365 = phi i64 [ %1348, %1355 ], [ 0, %1338 ]
  %1366 = add nsw i32 %1363, 1
  store i32 %1366, ptr %1364, align 4, !tbaa !5
  %1367 = getelementptr inbounds i32, ptr %7, i64 %1365
  %1368 = load i32, ptr %1367, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %6, i64 %1365
  br label %1380

1370:                                             ; preds = %1347
  %1371 = icmp eq i32 %1350, %1353
  br i1 %1371, label %1372, label %1378

1372:                                             ; preds = %1370
  store i32 0, ptr %1349, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %8, i64 %1348
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1348
  store i32 %1374, ptr %1375, align 4, !tbaa !5
  %1376 = add nuw nsw i64 %1348, 1
  %1377 = icmp eq i64 %1376, %1248
  br i1 %1377, label %1385, label %1347, !llvm.loop !1167

1378:                                             ; preds = %1343, %1370
  %1379 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1380:                                             ; preds = %1356, %1362
  %1381 = phi ptr [ %1369, %1362 ], [ %1349, %1356 ]
  %1382 = phi i32 [ %1368, %1362 ], [ 1, %1356 ]
  %1383 = load i32, ptr %1381, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1382
  store i32 %1384, ptr %1381, align 4, !tbaa !5
  br label %1385

1385:                                             ; preds = %1372, %1380, %1345, %1323
  %1386 = icmp eq i32 %1337, %5
  br i1 %1386, label %5406, label %1251, !llvm.loop !1168

1387:                                             ; preds = %1234, %1522
  %1388 = phi i32 [ 0, %1234 ], [ %1471, %1522 ]
  %1389 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1235, label %1390, label %1459

1390:                                             ; preds = %1387, %1449
  %1391 = phi i32 [ %1458, %1449 ], [ 0, %1387 ]
  %1392 = phi i64 [ %1400, %1449 ], [ %1239, %1387 ]
  %1393 = phi i64 [ %1457, %1449 ], [ %1238, %1387 ]
  %1394 = phi i32 [ %1455, %1449 ], [ %1389, %1387 ]
  %1395 = sub i32 %1237, %1391
  %1396 = tail call i32 @llvm.smin.i32(i32 %1395, i32 0)
  %1397 = sub i32 %1395, %1396
  %1398 = zext i32 %1397 to i64
  %1399 = add nuw nsw i64 %1398, 1
  %1400 = add nsw i64 %1392, -1
  %1401 = icmp ult i32 %1397, 31
  br i1 %1401, label %1437, label %1402

1402:                                             ; preds = %1390
  %1403 = and i64 %1399, 8589934560
  %1404 = sub i64 %1393, %1403
  br label %1405

1405:                                             ; preds = %1405, %1402
  %1406 = phi i64 [ 0, %1402 ], [ %1429, %1405 ]
  %1407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1425, %1405 ]
  %1408 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1426, %1405 ]
  %1409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1427, %1405 ]
  %1410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1428, %1405 ]
  %1411 = sub i64 %1393, %1406
  %1412 = getelementptr inbounds i32, ptr %11, i64 %1411
  %1413 = getelementptr inbounds i32, ptr %1412, i64 -7
  %1414 = load <8 x i32>, ptr %1413, align 4, !tbaa !5
  %1415 = shufflevector <8 x i32> %1414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1416 = getelementptr inbounds i32, ptr %1412, i64 -15
  %1417 = load <8 x i32>, ptr %1416, align 4, !tbaa !5
  %1418 = shufflevector <8 x i32> %1417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1419 = getelementptr inbounds i32, ptr %1412, i64 -23
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1412, i64 -31
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = mul <8 x i32> %1415, %1407
  %1426 = mul <8 x i32> %1418, %1408
  %1427 = mul <8 x i32> %1421, %1409
  %1428 = mul <8 x i32> %1424, %1410
  %1429 = add nuw i64 %1406, 32
  %1430 = icmp eq i64 %1429, %1403
  br i1 %1430, label %1431, label %1405, !llvm.loop !1169

1431:                                             ; preds = %1405
  %1432 = mul <8 x i32> %1426, %1425
  %1433 = mul <8 x i32> %1427, %1432
  %1434 = mul <8 x i32> %1428, %1433
  %1435 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1434)
  %1436 = icmp eq i64 %1399, %1403
  br i1 %1436, label %1449, label %1437

1437:                                             ; preds = %1390, %1431
  %1438 = phi i64 [ %1393, %1390 ], [ %1404, %1431 ]
  %1439 = phi i32 [ 1, %1390 ], [ %1435, %1431 ]
  br label %1440

1440:                                             ; preds = %1437, %1440
  %1441 = phi i64 [ %1446, %1440 ], [ %1438, %1437 ]
  %1442 = phi i32 [ %1445, %1440 ], [ %1439, %1437 ]
  %1443 = getelementptr inbounds i32, ptr %11, i64 %1441
  %1444 = load i32, ptr %1443, align 4, !tbaa !5
  %1445 = mul nsw i32 %1444, %1442
  %1446 = add nsw i64 %1441, -1
  %1447 = trunc i64 %1441 to i32
  %1448 = icmp sgt i32 %1447, 0
  br i1 %1448, label %1440, label %1449, !llvm.loop !1170

1449:                                             ; preds = %1440, %1431
  %1450 = phi i32 [ %1435, %1431 ], [ %1445, %1440 ]
  %1451 = and i64 %1400, 4294967295
  %1452 = getelementptr inbounds i32, ptr %6, i64 %1451
  %1453 = load i32, ptr %1452, align 4, !tbaa !5
  %1454 = mul nsw i32 %1453, %1450
  %1455 = add nsw i32 %1454, %1394
  %1456 = icmp sgt i64 %1392, 2
  %1457 = add nsw i64 %1393, -1
  %1458 = add i32 %1391, 1
  br i1 %1456, label %1390, label %1459, !llvm.loop !1171

1459:                                             ; preds = %1449, %1387
  %1460 = phi i32 [ %1389, %1387 ], [ %1455, %1449 ]
  %1461 = icmp slt i32 %1460, %5
  br i1 %1461, label %1464, label %1462

1462:                                             ; preds = %1459
  %1463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

1464:                                             ; preds = %1459
  %1465 = sext i32 %1460 to i64
  %1466 = getelementptr inbounds float, ptr %1220, i64 %1465
  %1467 = load float, ptr %1466, align 4, !tbaa !162
  %1468 = fptosi float %1467 to i8
  %1469 = load i8, ptr %1222, align 1, !tbaa !11
  %1470 = add i8 %1469, %1468
  store i8 %1470, ptr %1222, align 1, !tbaa !11
  %1471 = add nuw nsw i32 %1388, 1
  br i1 %1236, label %1472, label %1522

1472:                                             ; preds = %1464
  %1473 = load i32, ptr %4, align 4, !tbaa !5
  %1474 = load i32, ptr %12, align 4, !tbaa !5
  %1475 = add nsw i32 %1474, -1
  %1476 = icmp slt i32 %1473, %1475
  br i1 %1476, label %1499, label %1477

1477:                                             ; preds = %1472
  %1478 = icmp eq i32 %1473, %1475
  br i1 %1478, label %1479, label %1515

1479:                                             ; preds = %1477
  store i32 0, ptr %4, align 4, !tbaa !5
  %1480 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1480, ptr %6, align 4, !tbaa !5
  br i1 %1241, label %1522, label %1481

1481:                                             ; preds = %1479, %1509
  %1482 = phi i64 [ %1513, %1509 ], [ 1, %1479 ]
  %1483 = getelementptr inbounds i32, ptr %4, i64 %1482
  %1484 = load i32, ptr %1483, align 4, !tbaa !5
  %1485 = getelementptr inbounds i32, ptr %12, i64 %1482
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = add nsw i32 %1486, -1
  %1488 = icmp slt i32 %1484, %1487
  br i1 %1488, label %1489, label %1507

1489:                                             ; preds = %1481
  br i1 %1476, label %1499, label %1490

1490:                                             ; preds = %1489
  %1491 = shl i64 %1482, 32
  %1492 = add i64 %1491, -4294967296
  %1493 = ashr exact i64 %1492, 32
  %1494 = getelementptr inbounds i32, ptr %7, i64 %1493
  %1495 = load i32, ptr %1494, align 4, !tbaa !5
  %1496 = getelementptr inbounds i32, ptr %6, i64 %1482
  %1497 = load i32, ptr %1496, align 4, !tbaa !5
  %1498 = add nsw i32 %1497, %1495
  store i32 %1498, ptr %1496, align 4, !tbaa !5
  br label %1517

1499:                                             ; preds = %1472, %1489
  %1500 = phi i32 [ %1484, %1489 ], [ %1473, %1472 ]
  %1501 = phi ptr [ %1483, %1489 ], [ %4, %1472 ]
  %1502 = phi i64 [ %1482, %1489 ], [ 0, %1472 ]
  %1503 = add nsw i32 %1500, 1
  store i32 %1503, ptr %1501, align 4, !tbaa !5
  %1504 = getelementptr inbounds i32, ptr %7, i64 %1502
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1502
  br label %1517

1507:                                             ; preds = %1481
  %1508 = icmp eq i32 %1484, %1487
  br i1 %1508, label %1509, label %1515

1509:                                             ; preds = %1507
  store i32 0, ptr %1483, align 4, !tbaa !5
  %1510 = getelementptr inbounds i32, ptr %8, i64 %1482
  %1511 = load i32, ptr %1510, align 4, !tbaa !5
  %1512 = getelementptr inbounds i32, ptr %6, i64 %1482
  store i32 %1511, ptr %1512, align 4, !tbaa !5
  %1513 = add nuw nsw i64 %1482, 1
  %1514 = icmp eq i64 %1513, %1239
  br i1 %1514, label %1522, label %1481, !llvm.loop !1172

1515:                                             ; preds = %1477, %1507
  %1516 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1517:                                             ; preds = %1490, %1499
  %1518 = phi ptr [ %1506, %1499 ], [ %1483, %1490 ]
  %1519 = phi i32 [ %1505, %1499 ], [ 1, %1490 ]
  %1520 = load i32, ptr %1518, align 4, !tbaa !5
  %1521 = add nsw i32 %1520, %1519
  store i32 %1521, ptr %1518, align 4, !tbaa !5
  br label %1522

1522:                                             ; preds = %1509, %1517, %1479, %1464
  %1523 = icmp eq i32 %1471, %5
  br i1 %1523, label %5406, label %1387, !llvm.loop !1173

1524:                                             ; preds = %1227
  %1525 = getelementptr inbounds i32, ptr %3, i64 %19
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = icmp eq i32 %1526, 0
  %1528 = icmp sgt i32 %5, 0
  br i1 %1527, label %1538, label %1529

1529:                                             ; preds = %1524
  br i1 %1528, label %1530, label %5406

1530:                                             ; preds = %1529
  %1531 = icmp sgt i32 %13, 1
  %1532 = icmp sgt i32 %13, 0
  %1533 = add i32 %13, -2
  %1534 = zext i32 %1533 to i64
  %1535 = zext i32 %13 to i64
  %1536 = add nuw i32 %5, 1
  %1537 = icmp eq i32 %13, 1
  br label %1677

1538:                                             ; preds = %1524
  br i1 %1528, label %1539, label %5406

1539:                                             ; preds = %1538
  %1540 = icmp sgt i32 %13, 1
  %1541 = icmp sgt i32 %13, 0
  %1542 = add i32 %13, -2
  %1543 = zext i32 %1542 to i64
  %1544 = zext i32 %13 to i64
  %1545 = add nuw i32 %5, 1
  %1546 = icmp eq i32 %13, 1
  br label %1547

1547:                                             ; preds = %1539, %1675
  %1548 = phi i32 [ 0, %1539 ], [ %1627, %1675 ]
  %1549 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1540, label %1550, label %1619

1550:                                             ; preds = %1547, %1609
  %1551 = phi i32 [ %1618, %1609 ], [ 0, %1547 ]
  %1552 = phi i64 [ %1560, %1609 ], [ %1544, %1547 ]
  %1553 = phi i64 [ %1617, %1609 ], [ %1543, %1547 ]
  %1554 = phi i32 [ %1615, %1609 ], [ %1549, %1547 ]
  %1555 = sub i32 %1542, %1551
  %1556 = tail call i32 @llvm.smin.i32(i32 %1555, i32 0)
  %1557 = sub i32 %1555, %1556
  %1558 = zext i32 %1557 to i64
  %1559 = add nuw nsw i64 %1558, 1
  %1560 = add nsw i64 %1552, -1
  %1561 = icmp ult i32 %1557, 31
  br i1 %1561, label %1597, label %1562

1562:                                             ; preds = %1550
  %1563 = and i64 %1559, 8589934560
  %1564 = sub i64 %1553, %1563
  br label %1565

1565:                                             ; preds = %1565, %1562
  %1566 = phi i64 [ 0, %1562 ], [ %1589, %1565 ]
  %1567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1585, %1565 ]
  %1568 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1586, %1565 ]
  %1569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1587, %1565 ]
  %1570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1588, %1565 ]
  %1571 = sub i64 %1553, %1566
  %1572 = getelementptr inbounds i32, ptr %9, i64 %1571
  %1573 = getelementptr inbounds i32, ptr %1572, i64 -7
  %1574 = load <8 x i32>, ptr %1573, align 4, !tbaa !5
  %1575 = shufflevector <8 x i32> %1574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1576 = getelementptr inbounds i32, ptr %1572, i64 -15
  %1577 = load <8 x i32>, ptr %1576, align 4, !tbaa !5
  %1578 = shufflevector <8 x i32> %1577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1579 = getelementptr inbounds i32, ptr %1572, i64 -23
  %1580 = load <8 x i32>, ptr %1579, align 4, !tbaa !5
  %1581 = shufflevector <8 x i32> %1580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1582 = getelementptr inbounds i32, ptr %1572, i64 -31
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !5
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = mul <8 x i32> %1575, %1567
  %1586 = mul <8 x i32> %1578, %1568
  %1587 = mul <8 x i32> %1581, %1569
  %1588 = mul <8 x i32> %1584, %1570
  %1589 = add nuw i64 %1566, 32
  %1590 = icmp eq i64 %1589, %1563
  br i1 %1590, label %1591, label %1565, !llvm.loop !1174

1591:                                             ; preds = %1565
  %1592 = mul <8 x i32> %1586, %1585
  %1593 = mul <8 x i32> %1587, %1592
  %1594 = mul <8 x i32> %1588, %1593
  %1595 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1594)
  %1596 = icmp eq i64 %1559, %1563
  br i1 %1596, label %1609, label %1597

1597:                                             ; preds = %1550, %1591
  %1598 = phi i64 [ %1553, %1550 ], [ %1564, %1591 ]
  %1599 = phi i32 [ 1, %1550 ], [ %1595, %1591 ]
  br label %1600

1600:                                             ; preds = %1597, %1600
  %1601 = phi i64 [ %1606, %1600 ], [ %1598, %1597 ]
  %1602 = phi i32 [ %1605, %1600 ], [ %1599, %1597 ]
  %1603 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1604 = load i32, ptr %1603, align 4, !tbaa !5
  %1605 = mul nsw i32 %1604, %1602
  %1606 = add nsw i64 %1601, -1
  %1607 = trunc i64 %1601 to i32
  %1608 = icmp sgt i32 %1607, 0
  br i1 %1608, label %1600, label %1609, !llvm.loop !1175

1609:                                             ; preds = %1600, %1591
  %1610 = phi i32 [ %1595, %1591 ], [ %1605, %1600 ]
  %1611 = and i64 %1560, 4294967295
  %1612 = getelementptr inbounds i32, ptr %6, i64 %1611
  %1613 = load i32, ptr %1612, align 4, !tbaa !5
  %1614 = mul nsw i32 %1613, %1610
  %1615 = add nsw i32 %1614, %1554
  %1616 = icmp sgt i64 %1552, 2
  %1617 = add nsw i64 %1553, -1
  %1618 = add i32 %1551, 1
  br i1 %1616, label %1550, label %1619, !llvm.loop !1176

1619:                                             ; preds = %1609, %1547
  %1620 = phi i32 [ %1549, %1547 ], [ %1615, %1609 ]
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds float, ptr %1220, i64 %1621
  %1623 = load float, ptr %1622, align 4, !tbaa !162
  %1624 = fptosi float %1623 to i8
  %1625 = load i8, ptr %1222, align 1, !tbaa !11
  %1626 = add i8 %1625, %1624
  store i8 %1626, ptr %1222, align 1, !tbaa !11
  %1627 = add nuw nsw i32 %1548, 1
  br i1 %1541, label %1628, label %1675

1628:                                             ; preds = %1619
  %1629 = load i32, ptr %4, align 4, !tbaa !5
  %1630 = load i32, ptr %12, align 4, !tbaa !5
  %1631 = add nsw i32 %1630, -1
  %1632 = icmp slt i32 %1629, %1631
  br i1 %1632, label %1652, label %1633

1633:                                             ; preds = %1628
  %1634 = icmp eq i32 %1629, %1631
  br i1 %1634, label %1635, label %1668

1635:                                             ; preds = %1633
  store i32 0, ptr %4, align 4, !tbaa !5
  %1636 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1636, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1675, label %1637

1637:                                             ; preds = %1635, %1662
  %1638 = phi i64 [ %1666, %1662 ], [ 1, %1635 ]
  %1639 = getelementptr inbounds i32, ptr %4, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = getelementptr inbounds i32, ptr %12, i64 %1638
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = add nsw i32 %1642, -1
  %1644 = icmp slt i32 %1640, %1643
  br i1 %1644, label %1645, label %1660

1645:                                             ; preds = %1637
  br i1 %1632, label %1652, label %1646

1646:                                             ; preds = %1645
  %1647 = getelementptr inbounds i32, ptr %7, i64 %1638
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = add nsw i32 %1650, %1648
  store i32 %1651, ptr %1649, align 4, !tbaa !5
  br label %1670

1652:                                             ; preds = %1628, %1645
  %1653 = phi i32 [ %1640, %1645 ], [ %1629, %1628 ]
  %1654 = phi ptr [ %1639, %1645 ], [ %4, %1628 ]
  %1655 = phi i64 [ %1638, %1645 ], [ 0, %1628 ]
  %1656 = add nsw i32 %1653, 1
  store i32 %1656, ptr %1654, align 4, !tbaa !5
  %1657 = getelementptr inbounds i32, ptr %7, i64 %1655
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %6, i64 %1655
  br label %1670

1660:                                             ; preds = %1637
  %1661 = icmp eq i32 %1640, %1643
  br i1 %1661, label %1662, label %1668

1662:                                             ; preds = %1660
  store i32 0, ptr %1639, align 4, !tbaa !5
  %1663 = getelementptr inbounds i32, ptr %8, i64 %1638
  %1664 = load i32, ptr %1663, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %6, i64 %1638
  store i32 %1664, ptr %1665, align 4, !tbaa !5
  %1666 = add nuw nsw i64 %1638, 1
  %1667 = icmp eq i64 %1666, %1544
  br i1 %1667, label %1675, label %1637, !llvm.loop !1177

1668:                                             ; preds = %1633, %1660
  %1669 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1670:                                             ; preds = %1646, %1652
  %1671 = phi ptr [ %1659, %1652 ], [ %1639, %1646 ]
  %1672 = phi i32 [ %1658, %1652 ], [ 1, %1646 ]
  %1673 = load i32, ptr %1671, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1672
  store i32 %1674, ptr %1671, align 4, !tbaa !5
  br label %1675

1675:                                             ; preds = %1662, %1670, %1635, %1619
  %1676 = icmp eq i32 %1627, %5
  br i1 %1676, label %5406, label %1547, !llvm.loop !1178

1677:                                             ; preds = %1530, %1812
  %1678 = phi i32 [ 0, %1530 ], [ %1761, %1812 ]
  %1679 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1531, label %1680, label %1749

1680:                                             ; preds = %1677, %1739
  %1681 = phi i32 [ %1748, %1739 ], [ 0, %1677 ]
  %1682 = phi i64 [ %1690, %1739 ], [ %1535, %1677 ]
  %1683 = phi i64 [ %1747, %1739 ], [ %1534, %1677 ]
  %1684 = phi i32 [ %1745, %1739 ], [ %1679, %1677 ]
  %1685 = sub i32 %1533, %1681
  %1686 = tail call i32 @llvm.smin.i32(i32 %1685, i32 0)
  %1687 = sub i32 %1685, %1686
  %1688 = zext i32 %1687 to i64
  %1689 = add nuw nsw i64 %1688, 1
  %1690 = add nsw i64 %1682, -1
  %1691 = icmp ult i32 %1687, 31
  br i1 %1691, label %1727, label %1692

1692:                                             ; preds = %1680
  %1693 = and i64 %1689, 8589934560
  %1694 = sub i64 %1683, %1693
  br label %1695

1695:                                             ; preds = %1695, %1692
  %1696 = phi i64 [ 0, %1692 ], [ %1719, %1695 ]
  %1697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1715, %1695 ]
  %1698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1716, %1695 ]
  %1699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1717, %1695 ]
  %1700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1718, %1695 ]
  %1701 = sub i64 %1683, %1696
  %1702 = getelementptr inbounds i32, ptr %11, i64 %1701
  %1703 = getelementptr inbounds i32, ptr %1702, i64 -7
  %1704 = load <8 x i32>, ptr %1703, align 4, !tbaa !5
  %1705 = shufflevector <8 x i32> %1704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1706 = getelementptr inbounds i32, ptr %1702, i64 -15
  %1707 = load <8 x i32>, ptr %1706, align 4, !tbaa !5
  %1708 = shufflevector <8 x i32> %1707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1709 = getelementptr inbounds i32, ptr %1702, i64 -23
  %1710 = load <8 x i32>, ptr %1709, align 4, !tbaa !5
  %1711 = shufflevector <8 x i32> %1710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1712 = getelementptr inbounds i32, ptr %1702, i64 -31
  %1713 = load <8 x i32>, ptr %1712, align 4, !tbaa !5
  %1714 = shufflevector <8 x i32> %1713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1715 = mul <8 x i32> %1705, %1697
  %1716 = mul <8 x i32> %1708, %1698
  %1717 = mul <8 x i32> %1711, %1699
  %1718 = mul <8 x i32> %1714, %1700
  %1719 = add nuw i64 %1696, 32
  %1720 = icmp eq i64 %1719, %1693
  br i1 %1720, label %1721, label %1695, !llvm.loop !1179

1721:                                             ; preds = %1695
  %1722 = mul <8 x i32> %1716, %1715
  %1723 = mul <8 x i32> %1717, %1722
  %1724 = mul <8 x i32> %1718, %1723
  %1725 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1724)
  %1726 = icmp eq i64 %1689, %1693
  br i1 %1726, label %1739, label %1727

1727:                                             ; preds = %1680, %1721
  %1728 = phi i64 [ %1683, %1680 ], [ %1694, %1721 ]
  %1729 = phi i32 [ 1, %1680 ], [ %1725, %1721 ]
  br label %1730

1730:                                             ; preds = %1727, %1730
  %1731 = phi i64 [ %1736, %1730 ], [ %1728, %1727 ]
  %1732 = phi i32 [ %1735, %1730 ], [ %1729, %1727 ]
  %1733 = getelementptr inbounds i32, ptr %11, i64 %1731
  %1734 = load i32, ptr %1733, align 4, !tbaa !5
  %1735 = mul nsw i32 %1734, %1732
  %1736 = add nsw i64 %1731, -1
  %1737 = trunc i64 %1731 to i32
  %1738 = icmp sgt i32 %1737, 0
  br i1 %1738, label %1730, label %1739, !llvm.loop !1180

1739:                                             ; preds = %1730, %1721
  %1740 = phi i32 [ %1725, %1721 ], [ %1735, %1730 ]
  %1741 = and i64 %1690, 4294967295
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1741
  %1743 = load i32, ptr %1742, align 4, !tbaa !5
  %1744 = mul nsw i32 %1743, %1740
  %1745 = add nsw i32 %1744, %1684
  %1746 = icmp sgt i64 %1682, 2
  %1747 = add nsw i64 %1683, -1
  %1748 = add i32 %1681, 1
  br i1 %1746, label %1680, label %1749, !llvm.loop !1181

1749:                                             ; preds = %1739, %1677
  %1750 = phi i32 [ %1679, %1677 ], [ %1745, %1739 ]
  %1751 = icmp slt i32 %1750, %5
  br i1 %1751, label %1754, label %1752

1752:                                             ; preds = %1749
  %1753 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

1754:                                             ; preds = %1749
  %1755 = sext i32 %1750 to i64
  %1756 = getelementptr inbounds float, ptr %1220, i64 %1755
  %1757 = load float, ptr %1756, align 4, !tbaa !162
  %1758 = fptosi float %1757 to i8
  %1759 = load i8, ptr %1222, align 1, !tbaa !11
  %1760 = add i8 %1759, %1758
  store i8 %1760, ptr %1222, align 1, !tbaa !11
  %1761 = add nuw nsw i32 %1678, 1
  br i1 %1532, label %1762, label %1812

1762:                                             ; preds = %1754
  %1763 = load i32, ptr %4, align 4, !tbaa !5
  %1764 = load i32, ptr %12, align 4, !tbaa !5
  %1765 = add nsw i32 %1764, -1
  %1766 = icmp slt i32 %1763, %1765
  br i1 %1766, label %1789, label %1767

1767:                                             ; preds = %1762
  %1768 = icmp eq i32 %1763, %1765
  br i1 %1768, label %1769, label %1805

1769:                                             ; preds = %1767
  store i32 0, ptr %4, align 4, !tbaa !5
  %1770 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1770, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1812, label %1771

1771:                                             ; preds = %1769, %1799
  %1772 = phi i64 [ %1803, %1799 ], [ 1, %1769 ]
  %1773 = getelementptr inbounds i32, ptr %4, i64 %1772
  %1774 = load i32, ptr %1773, align 4, !tbaa !5
  %1775 = getelementptr inbounds i32, ptr %12, i64 %1772
  %1776 = load i32, ptr %1775, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, -1
  %1778 = icmp slt i32 %1774, %1777
  br i1 %1778, label %1779, label %1797

1779:                                             ; preds = %1771
  br i1 %1766, label %1789, label %1780

1780:                                             ; preds = %1779
  %1781 = shl i64 %1772, 32
  %1782 = add i64 %1781, -4294967296
  %1783 = ashr exact i64 %1782, 32
  %1784 = getelementptr inbounds i32, ptr %7, i64 %1783
  %1785 = load i32, ptr %1784, align 4, !tbaa !5
  %1786 = getelementptr inbounds i32, ptr %6, i64 %1772
  %1787 = load i32, ptr %1786, align 4, !tbaa !5
  %1788 = add nsw i32 %1787, %1785
  store i32 %1788, ptr %1786, align 4, !tbaa !5
  br label %1807

1789:                                             ; preds = %1762, %1779
  %1790 = phi i32 [ %1774, %1779 ], [ %1763, %1762 ]
  %1791 = phi ptr [ %1773, %1779 ], [ %4, %1762 ]
  %1792 = phi i64 [ %1772, %1779 ], [ 0, %1762 ]
  %1793 = add nsw i32 %1790, 1
  store i32 %1793, ptr %1791, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %7, i64 %1792
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = getelementptr inbounds i32, ptr %6, i64 %1792
  br label %1807

1797:                                             ; preds = %1771
  %1798 = icmp eq i32 %1774, %1777
  br i1 %1798, label %1799, label %1805

1799:                                             ; preds = %1797
  store i32 0, ptr %1773, align 4, !tbaa !5
  %1800 = getelementptr inbounds i32, ptr %8, i64 %1772
  %1801 = load i32, ptr %1800, align 4, !tbaa !5
  %1802 = getelementptr inbounds i32, ptr %6, i64 %1772
  store i32 %1801, ptr %1802, align 4, !tbaa !5
  %1803 = add nuw nsw i64 %1772, 1
  %1804 = icmp eq i64 %1803, %1535
  br i1 %1804, label %1812, label %1771, !llvm.loop !1182

1805:                                             ; preds = %1767, %1797
  %1806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1807:                                             ; preds = %1780, %1789
  %1808 = phi ptr [ %1796, %1789 ], [ %1773, %1780 ]
  %1809 = phi i32 [ %1795, %1789 ], [ 1, %1780 ]
  %1810 = load i32, ptr %1808, align 4, !tbaa !5
  %1811 = add nsw i32 %1810, %1809
  store i32 %1811, ptr %1808, align 4, !tbaa !5
  br label %1812

1812:                                             ; preds = %1799, %1807, %1769, %1754
  %1813 = icmp eq i32 %1761, %5
  br i1 %1813, label %5406, label %1677, !llvm.loop !1183

1814:                                             ; preds = %1227
  %1815 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1727, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

1816:                                             ; preds = %18
  %1817 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1818 = load ptr, ptr %1817, align 8, !tbaa !9
  %1819 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1820 = load ptr, ptr %1819, align 8, !tbaa !9
  store i16 0, ptr %1820, align 2, !tbaa !78
  %1821 = icmp eq i32 %13, 0
  br i1 %1821, label %1822, label %1825

1822:                                             ; preds = %1816
  %1823 = load float, ptr %1818, align 4, !tbaa !162
  %1824 = fptosi float %1823 to i16
  store i16 %1824, ptr %1820, align 2, !tbaa !78
  br label %5406

1825:                                             ; preds = %1816
  switch i32 %1, label %2416 [
    i32 1, label %1826
    i32 0, label %2126
  ]

1826:                                             ; preds = %1825
  %1827 = getelementptr inbounds i32, ptr %3, i64 %19
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = icmp eq i32 %1828, 0
  %1830 = icmp sgt i32 %5, 0
  br i1 %1829, label %1840, label %1831

1831:                                             ; preds = %1826
  br i1 %1830, label %1832, label %5406

1832:                                             ; preds = %1831
  %1833 = icmp sgt i32 %13, 1
  %1834 = icmp sgt i32 %13, 0
  %1835 = add i32 %13, -2
  %1836 = zext i32 %1835 to i64
  %1837 = zext i32 %13 to i64
  %1838 = add nuw i32 %5, 1
  %1839 = icmp eq i32 %13, 1
  br label %1985

1840:                                             ; preds = %1826
  br i1 %1830, label %1841, label %5406

1841:                                             ; preds = %1840
  %1842 = icmp sgt i32 %13, 1
  %1843 = icmp sgt i32 %13, 0
  %1844 = add i32 %13, -2
  %1845 = zext i32 %1844 to i64
  %1846 = zext i32 %13 to i64
  %1847 = add nuw i32 %5, 1
  %1848 = icmp eq i32 %13, 1
  br label %1849

1849:                                             ; preds = %1841, %1983
  %1850 = phi i16 [ 0, %1841 ], [ %1934, %1983 ]
  %1851 = phi i32 [ 0, %1841 ], [ %1935, %1983 ]
  %1852 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1842, label %1853, label %1922

1853:                                             ; preds = %1849, %1912
  %1854 = phi i32 [ %1921, %1912 ], [ 0, %1849 ]
  %1855 = phi i64 [ %1863, %1912 ], [ %1846, %1849 ]
  %1856 = phi i64 [ %1920, %1912 ], [ %1845, %1849 ]
  %1857 = phi i32 [ %1918, %1912 ], [ %1852, %1849 ]
  %1858 = sub i32 %1844, %1854
  %1859 = tail call i32 @llvm.smin.i32(i32 %1858, i32 0)
  %1860 = sub i32 %1858, %1859
  %1861 = zext i32 %1860 to i64
  %1862 = add nuw nsw i64 %1861, 1
  %1863 = add nsw i64 %1855, -1
  %1864 = icmp ult i32 %1860, 31
  br i1 %1864, label %1900, label %1865

1865:                                             ; preds = %1853
  %1866 = and i64 %1862, 8589934560
  %1867 = sub i64 %1856, %1866
  br label %1868

1868:                                             ; preds = %1868, %1865
  %1869 = phi i64 [ 0, %1865 ], [ %1892, %1868 ]
  %1870 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1888, %1868 ]
  %1871 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1889, %1868 ]
  %1872 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1890, %1868 ]
  %1873 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1891, %1868 ]
  %1874 = sub i64 %1856, %1869
  %1875 = getelementptr inbounds i32, ptr %9, i64 %1874
  %1876 = getelementptr inbounds i32, ptr %1875, i64 -7
  %1877 = load <8 x i32>, ptr %1876, align 4, !tbaa !5
  %1878 = shufflevector <8 x i32> %1877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1879 = getelementptr inbounds i32, ptr %1875, i64 -15
  %1880 = load <8 x i32>, ptr %1879, align 4, !tbaa !5
  %1881 = shufflevector <8 x i32> %1880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1882 = getelementptr inbounds i32, ptr %1875, i64 -23
  %1883 = load <8 x i32>, ptr %1882, align 4, !tbaa !5
  %1884 = shufflevector <8 x i32> %1883, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1885 = getelementptr inbounds i32, ptr %1875, i64 -31
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = mul <8 x i32> %1878, %1870
  %1889 = mul <8 x i32> %1881, %1871
  %1890 = mul <8 x i32> %1884, %1872
  %1891 = mul <8 x i32> %1887, %1873
  %1892 = add nuw i64 %1869, 32
  %1893 = icmp eq i64 %1892, %1866
  br i1 %1893, label %1894, label %1868, !llvm.loop !1184

1894:                                             ; preds = %1868
  %1895 = mul <8 x i32> %1889, %1888
  %1896 = mul <8 x i32> %1890, %1895
  %1897 = mul <8 x i32> %1891, %1896
  %1898 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1897)
  %1899 = icmp eq i64 %1862, %1866
  br i1 %1899, label %1912, label %1900

1900:                                             ; preds = %1853, %1894
  %1901 = phi i64 [ %1856, %1853 ], [ %1867, %1894 ]
  %1902 = phi i32 [ 1, %1853 ], [ %1898, %1894 ]
  br label %1903

1903:                                             ; preds = %1900, %1903
  %1904 = phi i64 [ %1909, %1903 ], [ %1901, %1900 ]
  %1905 = phi i32 [ %1908, %1903 ], [ %1902, %1900 ]
  %1906 = getelementptr inbounds i32, ptr %9, i64 %1904
  %1907 = load i32, ptr %1906, align 4, !tbaa !5
  %1908 = mul nsw i32 %1907, %1905
  %1909 = add nsw i64 %1904, -1
  %1910 = trunc i64 %1904 to i32
  %1911 = icmp sgt i32 %1910, 0
  br i1 %1911, label %1903, label %1912, !llvm.loop !1185

1912:                                             ; preds = %1903, %1894
  %1913 = phi i32 [ %1898, %1894 ], [ %1908, %1903 ]
  %1914 = and i64 %1863, 4294967295
  %1915 = getelementptr inbounds i32, ptr %6, i64 %1914
  %1916 = load i32, ptr %1915, align 4, !tbaa !5
  %1917 = mul nsw i32 %1916, %1913
  %1918 = add nsw i32 %1917, %1857
  %1919 = icmp sgt i64 %1855, 2
  %1920 = add nsw i64 %1856, -1
  %1921 = add i32 %1854, 1
  br i1 %1919, label %1853, label %1922, !llvm.loop !1186

1922:                                             ; preds = %1912, %1849
  %1923 = phi i32 [ %1852, %1849 ], [ %1918, %1912 ]
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr inbounds double, ptr %2, i64 %1924
  %1926 = load double, ptr %1925, align 8, !tbaa !18
  %1927 = getelementptr inbounds float, ptr %1818, i64 %1924
  %1928 = load float, ptr %1927, align 4, !tbaa !162
  %1929 = fptosi float %1928 to i16
  %1930 = sitofp i16 %1850 to double
  %1931 = sitofp i16 %1929 to double
  %1932 = fmul fast double %1926, %1931
  %1933 = fadd fast double %1932, %1930
  %1934 = fptosi double %1933 to i16
  %1935 = add nuw nsw i32 %1851, 1
  br i1 %1843, label %1936, label %1983

1936:                                             ; preds = %1922
  %1937 = load i32, ptr %4, align 4, !tbaa !5
  %1938 = load i32, ptr %12, align 4, !tbaa !5
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1937, %1939
  br i1 %1940, label %1960, label %1941

1941:                                             ; preds = %1936
  %1942 = icmp eq i32 %1937, %1939
  br i1 %1942, label %1943, label %1976

1943:                                             ; preds = %1941
  store i32 0, ptr %4, align 4, !tbaa !5
  %1944 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1944, ptr %6, align 4, !tbaa !5
  br i1 %1848, label %1983, label %1945

1945:                                             ; preds = %1943, %1970
  %1946 = phi i64 [ %1974, %1970 ], [ 1, %1943 ]
  %1947 = getelementptr inbounds i32, ptr %4, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = getelementptr inbounds i32, ptr %12, i64 %1946
  %1950 = load i32, ptr %1949, align 4, !tbaa !5
  %1951 = add nsw i32 %1950, -1
  %1952 = icmp slt i32 %1948, %1951
  br i1 %1952, label %1953, label %1968

1953:                                             ; preds = %1945
  br i1 %1940, label %1960, label %1954

1954:                                             ; preds = %1953
  %1955 = getelementptr inbounds i32, ptr %7, i64 %1946
  %1956 = load i32, ptr %1955, align 4, !tbaa !5
  %1957 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1958 = load i32, ptr %1957, align 4, !tbaa !5
  %1959 = add nsw i32 %1958, %1956
  store i32 %1959, ptr %1957, align 4, !tbaa !5
  br label %1978

1960:                                             ; preds = %1936, %1953
  %1961 = phi i32 [ %1948, %1953 ], [ %1937, %1936 ]
  %1962 = phi ptr [ %1947, %1953 ], [ %4, %1936 ]
  %1963 = phi i64 [ %1946, %1953 ], [ 0, %1936 ]
  %1964 = add nsw i32 %1961, 1
  store i32 %1964, ptr %1962, align 4, !tbaa !5
  %1965 = getelementptr inbounds i32, ptr %7, i64 %1963
  %1966 = load i32, ptr %1965, align 4, !tbaa !5
  %1967 = getelementptr inbounds i32, ptr %6, i64 %1963
  br label %1978

1968:                                             ; preds = %1945
  %1969 = icmp eq i32 %1948, %1951
  br i1 %1969, label %1970, label %1976

1970:                                             ; preds = %1968
  store i32 0, ptr %1947, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %8, i64 %1946
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = getelementptr inbounds i32, ptr %6, i64 %1946
  store i32 %1972, ptr %1973, align 4, !tbaa !5
  %1974 = add nuw nsw i64 %1946, 1
  %1975 = icmp eq i64 %1974, %1846
  br i1 %1975, label %1983, label %1945, !llvm.loop !1187

1976:                                             ; preds = %1941, %1968
  store i16 %1934, ptr %1820, align 2, !tbaa !78
  %1977 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

1978:                                             ; preds = %1954, %1960
  %1979 = phi ptr [ %1967, %1960 ], [ %1947, %1954 ]
  %1980 = phi i32 [ %1966, %1960 ], [ 1, %1954 ]
  %1981 = load i32, ptr %1979, align 4, !tbaa !5
  %1982 = add nsw i32 %1981, %1980
  store i32 %1982, ptr %1979, align 4, !tbaa !5
  br label %1983

1983:                                             ; preds = %1970, %1978, %1943, %1922
  %1984 = icmp eq i32 %1935, %5
  br i1 %1984, label %5400, label %1849, !llvm.loop !1188

1985:                                             ; preds = %1832, %2124
  %1986 = phi i32 [ 0, %1832 ], [ %2071, %2124 ]
  %1987 = phi i32 [ 0, %1832 ], [ %2073, %2124 ]
  %1988 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1833, label %1989, label %2058

1989:                                             ; preds = %1985, %2048
  %1990 = phi i32 [ %2057, %2048 ], [ 0, %1985 ]
  %1991 = phi i64 [ %1999, %2048 ], [ %1837, %1985 ]
  %1992 = phi i64 [ %2056, %2048 ], [ %1836, %1985 ]
  %1993 = phi i32 [ %2054, %2048 ], [ %1988, %1985 ]
  %1994 = sub i32 %1835, %1990
  %1995 = tail call i32 @llvm.smin.i32(i32 %1994, i32 0)
  %1996 = sub i32 %1994, %1995
  %1997 = zext i32 %1996 to i64
  %1998 = add nuw nsw i64 %1997, 1
  %1999 = add nsw i64 %1991, -1
  %2000 = icmp ult i32 %1996, 31
  br i1 %2000, label %2036, label %2001

2001:                                             ; preds = %1989
  %2002 = and i64 %1998, 8589934560
  %2003 = sub i64 %1992, %2002
  br label %2004

2004:                                             ; preds = %2004, %2001
  %2005 = phi i64 [ 0, %2001 ], [ %2028, %2004 ]
  %2006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2024, %2004 ]
  %2007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2025, %2004 ]
  %2008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2026, %2004 ]
  %2009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2027, %2004 ]
  %2010 = sub i64 %1992, %2005
  %2011 = getelementptr inbounds i32, ptr %11, i64 %2010
  %2012 = getelementptr inbounds i32, ptr %2011, i64 -7
  %2013 = load <8 x i32>, ptr %2012, align 4, !tbaa !5
  %2014 = shufflevector <8 x i32> %2013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2015 = getelementptr inbounds i32, ptr %2011, i64 -15
  %2016 = load <8 x i32>, ptr %2015, align 4, !tbaa !5
  %2017 = shufflevector <8 x i32> %2016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2018 = getelementptr inbounds i32, ptr %2011, i64 -23
  %2019 = load <8 x i32>, ptr %2018, align 4, !tbaa !5
  %2020 = shufflevector <8 x i32> %2019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2021 = getelementptr inbounds i32, ptr %2011, i64 -31
  %2022 = load <8 x i32>, ptr %2021, align 4, !tbaa !5
  %2023 = shufflevector <8 x i32> %2022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2024 = mul <8 x i32> %2014, %2006
  %2025 = mul <8 x i32> %2017, %2007
  %2026 = mul <8 x i32> %2020, %2008
  %2027 = mul <8 x i32> %2023, %2009
  %2028 = add nuw i64 %2005, 32
  %2029 = icmp eq i64 %2028, %2002
  br i1 %2029, label %2030, label %2004, !llvm.loop !1189

2030:                                             ; preds = %2004
  %2031 = mul <8 x i32> %2025, %2024
  %2032 = mul <8 x i32> %2026, %2031
  %2033 = mul <8 x i32> %2027, %2032
  %2034 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2033)
  %2035 = icmp eq i64 %1998, %2002
  br i1 %2035, label %2048, label %2036

2036:                                             ; preds = %1989, %2030
  %2037 = phi i64 [ %1992, %1989 ], [ %2003, %2030 ]
  %2038 = phi i32 [ 1, %1989 ], [ %2034, %2030 ]
  br label %2039

2039:                                             ; preds = %2036, %2039
  %2040 = phi i64 [ %2045, %2039 ], [ %2037, %2036 ]
  %2041 = phi i32 [ %2044, %2039 ], [ %2038, %2036 ]
  %2042 = getelementptr inbounds i32, ptr %11, i64 %2040
  %2043 = load i32, ptr %2042, align 4, !tbaa !5
  %2044 = mul nsw i32 %2043, %2041
  %2045 = add nsw i64 %2040, -1
  %2046 = trunc i64 %2040 to i32
  %2047 = icmp sgt i32 %2046, 0
  br i1 %2047, label %2039, label %2048, !llvm.loop !1190

2048:                                             ; preds = %2039, %2030
  %2049 = phi i32 [ %2034, %2030 ], [ %2044, %2039 ]
  %2050 = and i64 %1999, 4294967295
  %2051 = getelementptr inbounds i32, ptr %6, i64 %2050
  %2052 = load i32, ptr %2051, align 4, !tbaa !5
  %2053 = mul nsw i32 %2052, %2049
  %2054 = add nsw i32 %2053, %1993
  %2055 = icmp sgt i64 %1991, 2
  %2056 = add nsw i64 %1992, -1
  %2057 = add i32 %1990, 1
  br i1 %2055, label %1989, label %2058, !llvm.loop !1191

2058:                                             ; preds = %2048, %1985
  %2059 = phi i32 [ %1988, %1985 ], [ %2054, %2048 ]
  %2060 = icmp slt i32 %2059, %5
  br i1 %2060, label %2063, label %2061

2061:                                             ; preds = %2058
  %2062 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

2063:                                             ; preds = %2058
  %2064 = sext i32 %2059 to i64
  %2065 = getelementptr inbounds float, ptr %1818, i64 %2064
  %2066 = load float, ptr %2065, align 4, !tbaa !162
  %2067 = fptosi float %2066 to i16
  %2068 = shl i32 %1986, 16
  %2069 = ashr exact i32 %2068, 16
  %2070 = sext i16 %2067 to i32
  %2071 = add nsw i32 %2069, %2070
  %2072 = trunc i32 %2071 to i16
  store i16 %2072, ptr %1820, align 2, !tbaa !78
  %2073 = add nuw nsw i32 %1987, 1
  br i1 %1834, label %2074, label %2124

2074:                                             ; preds = %2063
  %2075 = load i32, ptr %4, align 4, !tbaa !5
  %2076 = load i32, ptr %12, align 4, !tbaa !5
  %2077 = add nsw i32 %2076, -1
  %2078 = icmp slt i32 %2075, %2077
  br i1 %2078, label %2101, label %2079

2079:                                             ; preds = %2074
  %2080 = icmp eq i32 %2075, %2077
  br i1 %2080, label %2081, label %2117

2081:                                             ; preds = %2079
  store i32 0, ptr %4, align 4, !tbaa !5
  %2082 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2082, ptr %6, align 4, !tbaa !5
  br i1 %1839, label %2124, label %2083

2083:                                             ; preds = %2081, %2111
  %2084 = phi i64 [ %2115, %2111 ], [ 1, %2081 ]
  %2085 = getelementptr inbounds i32, ptr %4, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = getelementptr inbounds i32, ptr %12, i64 %2084
  %2088 = load i32, ptr %2087, align 4, !tbaa !5
  %2089 = add nsw i32 %2088, -1
  %2090 = icmp slt i32 %2086, %2089
  br i1 %2090, label %2091, label %2109

2091:                                             ; preds = %2083
  br i1 %2078, label %2101, label %2092

2092:                                             ; preds = %2091
  %2093 = shl i64 %2084, 32
  %2094 = add i64 %2093, -4294967296
  %2095 = ashr exact i64 %2094, 32
  %2096 = getelementptr inbounds i32, ptr %7, i64 %2095
  %2097 = load i32, ptr %2096, align 4, !tbaa !5
  %2098 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2099 = load i32, ptr %2098, align 4, !tbaa !5
  %2100 = add nsw i32 %2099, %2097
  store i32 %2100, ptr %2098, align 4, !tbaa !5
  br label %2119

2101:                                             ; preds = %2074, %2091
  %2102 = phi i32 [ %2086, %2091 ], [ %2075, %2074 ]
  %2103 = phi ptr [ %2085, %2091 ], [ %4, %2074 ]
  %2104 = phi i64 [ %2084, %2091 ], [ 0, %2074 ]
  %2105 = add nsw i32 %2102, 1
  store i32 %2105, ptr %2103, align 4, !tbaa !5
  %2106 = getelementptr inbounds i32, ptr %7, i64 %2104
  %2107 = load i32, ptr %2106, align 4, !tbaa !5
  %2108 = getelementptr inbounds i32, ptr %6, i64 %2104
  br label %2119

2109:                                             ; preds = %2083
  %2110 = icmp eq i32 %2086, %2089
  br i1 %2110, label %2111, label %2117

2111:                                             ; preds = %2109
  store i32 0, ptr %2085, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %8, i64 %2084
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = getelementptr inbounds i32, ptr %6, i64 %2084
  store i32 %2113, ptr %2114, align 4, !tbaa !5
  %2115 = add nuw nsw i64 %2084, 1
  %2116 = icmp eq i64 %2115, %1837
  br i1 %2116, label %2124, label %2083, !llvm.loop !1192

2117:                                             ; preds = %2079, %2109
  %2118 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

2119:                                             ; preds = %2092, %2101
  %2120 = phi ptr [ %2108, %2101 ], [ %2085, %2092 ]
  %2121 = phi i32 [ %2107, %2101 ], [ 1, %2092 ]
  %2122 = load i32, ptr %2120, align 4, !tbaa !5
  %2123 = add nsw i32 %2122, %2121
  store i32 %2123, ptr %2120, align 4, !tbaa !5
  br label %2124

2124:                                             ; preds = %2111, %2119, %2081, %2063
  %2125 = icmp eq i32 %2073, %5
  br i1 %2125, label %5406, label %1985, !llvm.loop !1193

2126:                                             ; preds = %1825
  %2127 = getelementptr inbounds i32, ptr %3, i64 %19
  %2128 = load i32, ptr %2127, align 4, !tbaa !5
  %2129 = icmp eq i32 %2128, 0
  %2130 = icmp sgt i32 %5, 0
  br i1 %2129, label %2140, label %2131

2131:                                             ; preds = %2126
  br i1 %2130, label %2132, label %5406

2132:                                             ; preds = %2131
  %2133 = icmp sgt i32 %13, 1
  %2134 = icmp sgt i32 %13, 0
  %2135 = add i32 %13, -2
  %2136 = zext i32 %2135 to i64
  %2137 = zext i32 %13 to i64
  %2138 = add nuw i32 %5, 1
  %2139 = icmp eq i32 %13, 1
  br label %2279

2140:                                             ; preds = %2126
  br i1 %2130, label %2141, label %5406

2141:                                             ; preds = %2140
  %2142 = icmp sgt i32 %13, 1
  %2143 = icmp sgt i32 %13, 0
  %2144 = add i32 %13, -2
  %2145 = zext i32 %2144 to i64
  %2146 = zext i32 %13 to i64
  %2147 = add nuw i32 %5, 1
  %2148 = icmp eq i32 %13, 1
  br label %2149

2149:                                             ; preds = %2141, %2277
  %2150 = phi i16 [ 0, %2141 ], [ %2228, %2277 ]
  %2151 = phi i32 [ 0, %2141 ], [ %2229, %2277 ]
  %2152 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2142, label %2153, label %2222

2153:                                             ; preds = %2149, %2212
  %2154 = phi i32 [ %2221, %2212 ], [ 0, %2149 ]
  %2155 = phi i64 [ %2163, %2212 ], [ %2146, %2149 ]
  %2156 = phi i64 [ %2220, %2212 ], [ %2145, %2149 ]
  %2157 = phi i32 [ %2218, %2212 ], [ %2152, %2149 ]
  %2158 = sub i32 %2144, %2154
  %2159 = tail call i32 @llvm.smin.i32(i32 %2158, i32 0)
  %2160 = sub i32 %2158, %2159
  %2161 = zext i32 %2160 to i64
  %2162 = add nuw nsw i64 %2161, 1
  %2163 = add nsw i64 %2155, -1
  %2164 = icmp ult i32 %2160, 31
  br i1 %2164, label %2200, label %2165

2165:                                             ; preds = %2153
  %2166 = and i64 %2162, 8589934560
  %2167 = sub i64 %2156, %2166
  br label %2168

2168:                                             ; preds = %2168, %2165
  %2169 = phi i64 [ 0, %2165 ], [ %2192, %2168 ]
  %2170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2188, %2168 ]
  %2171 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2189, %2168 ]
  %2172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2190, %2168 ]
  %2173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2191, %2168 ]
  %2174 = sub i64 %2156, %2169
  %2175 = getelementptr inbounds i32, ptr %9, i64 %2174
  %2176 = getelementptr inbounds i32, ptr %2175, i64 -7
  %2177 = load <8 x i32>, ptr %2176, align 4, !tbaa !5
  %2178 = shufflevector <8 x i32> %2177, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2179 = getelementptr inbounds i32, ptr %2175, i64 -15
  %2180 = load <8 x i32>, ptr %2179, align 4, !tbaa !5
  %2181 = shufflevector <8 x i32> %2180, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2182 = getelementptr inbounds i32, ptr %2175, i64 -23
  %2183 = load <8 x i32>, ptr %2182, align 4, !tbaa !5
  %2184 = shufflevector <8 x i32> %2183, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2185 = getelementptr inbounds i32, ptr %2175, i64 -31
  %2186 = load <8 x i32>, ptr %2185, align 4, !tbaa !5
  %2187 = shufflevector <8 x i32> %2186, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2188 = mul <8 x i32> %2178, %2170
  %2189 = mul <8 x i32> %2181, %2171
  %2190 = mul <8 x i32> %2184, %2172
  %2191 = mul <8 x i32> %2187, %2173
  %2192 = add nuw i64 %2169, 32
  %2193 = icmp eq i64 %2192, %2166
  br i1 %2193, label %2194, label %2168, !llvm.loop !1194

2194:                                             ; preds = %2168
  %2195 = mul <8 x i32> %2189, %2188
  %2196 = mul <8 x i32> %2190, %2195
  %2197 = mul <8 x i32> %2191, %2196
  %2198 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2197)
  %2199 = icmp eq i64 %2162, %2166
  br i1 %2199, label %2212, label %2200

2200:                                             ; preds = %2153, %2194
  %2201 = phi i64 [ %2156, %2153 ], [ %2167, %2194 ]
  %2202 = phi i32 [ 1, %2153 ], [ %2198, %2194 ]
  br label %2203

2203:                                             ; preds = %2200, %2203
  %2204 = phi i64 [ %2209, %2203 ], [ %2201, %2200 ]
  %2205 = phi i32 [ %2208, %2203 ], [ %2202, %2200 ]
  %2206 = getelementptr inbounds i32, ptr %9, i64 %2204
  %2207 = load i32, ptr %2206, align 4, !tbaa !5
  %2208 = mul nsw i32 %2207, %2205
  %2209 = add nsw i64 %2204, -1
  %2210 = trunc i64 %2204 to i32
  %2211 = icmp sgt i32 %2210, 0
  br i1 %2211, label %2203, label %2212, !llvm.loop !1195

2212:                                             ; preds = %2203, %2194
  %2213 = phi i32 [ %2198, %2194 ], [ %2208, %2203 ]
  %2214 = and i64 %2163, 4294967295
  %2215 = getelementptr inbounds i32, ptr %6, i64 %2214
  %2216 = load i32, ptr %2215, align 4, !tbaa !5
  %2217 = mul nsw i32 %2216, %2213
  %2218 = add nsw i32 %2217, %2157
  %2219 = icmp sgt i64 %2155, 2
  %2220 = add nsw i64 %2156, -1
  %2221 = add i32 %2154, 1
  br i1 %2219, label %2153, label %2222, !llvm.loop !1196

2222:                                             ; preds = %2212, %2149
  %2223 = phi i32 [ %2152, %2149 ], [ %2218, %2212 ]
  %2224 = sext i32 %2223 to i64
  %2225 = getelementptr inbounds float, ptr %1818, i64 %2224
  %2226 = load float, ptr %2225, align 4, !tbaa !162
  %2227 = fptosi float %2226 to i16
  %2228 = add i16 %2150, %2227
  %2229 = add nuw nsw i32 %2151, 1
  br i1 %2143, label %2230, label %2277

2230:                                             ; preds = %2222
  %2231 = load i32, ptr %4, align 4, !tbaa !5
  %2232 = load i32, ptr %12, align 4, !tbaa !5
  %2233 = add nsw i32 %2232, -1
  %2234 = icmp slt i32 %2231, %2233
  br i1 %2234, label %2254, label %2235

2235:                                             ; preds = %2230
  %2236 = icmp eq i32 %2231, %2233
  br i1 %2236, label %2237, label %2270

2237:                                             ; preds = %2235
  store i32 0, ptr %4, align 4, !tbaa !5
  %2238 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2238, ptr %6, align 4, !tbaa !5
  br i1 %2148, label %2277, label %2239

2239:                                             ; preds = %2237, %2264
  %2240 = phi i64 [ %2268, %2264 ], [ 1, %2237 ]
  %2241 = getelementptr inbounds i32, ptr %4, i64 %2240
  %2242 = load i32, ptr %2241, align 4, !tbaa !5
  %2243 = getelementptr inbounds i32, ptr %12, i64 %2240
  %2244 = load i32, ptr %2243, align 4, !tbaa !5
  %2245 = add nsw i32 %2244, -1
  %2246 = icmp slt i32 %2242, %2245
  br i1 %2246, label %2247, label %2262

2247:                                             ; preds = %2239
  br i1 %2234, label %2254, label %2248

2248:                                             ; preds = %2247
  %2249 = getelementptr inbounds i32, ptr %7, i64 %2240
  %2250 = load i32, ptr %2249, align 4, !tbaa !5
  %2251 = getelementptr inbounds i32, ptr %6, i64 %2240
  %2252 = load i32, ptr %2251, align 4, !tbaa !5
  %2253 = add nsw i32 %2252, %2250
  store i32 %2253, ptr %2251, align 4, !tbaa !5
  br label %2272

2254:                                             ; preds = %2230, %2247
  %2255 = phi i32 [ %2242, %2247 ], [ %2231, %2230 ]
  %2256 = phi ptr [ %2241, %2247 ], [ %4, %2230 ]
  %2257 = phi i64 [ %2240, %2247 ], [ 0, %2230 ]
  %2258 = add nsw i32 %2255, 1
  store i32 %2258, ptr %2256, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %7, i64 %2257
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = getelementptr inbounds i32, ptr %6, i64 %2257
  br label %2272

2262:                                             ; preds = %2239
  %2263 = icmp eq i32 %2242, %2245
  br i1 %2263, label %2264, label %2270

2264:                                             ; preds = %2262
  store i32 0, ptr %2241, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %8, i64 %2240
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2240
  store i32 %2266, ptr %2267, align 4, !tbaa !5
  %2268 = add nuw nsw i64 %2240, 1
  %2269 = icmp eq i64 %2268, %2146
  br i1 %2269, label %2277, label %2239, !llvm.loop !1197

2270:                                             ; preds = %2235, %2262
  store i16 %2228, ptr %1820, align 2, !tbaa !78
  %2271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

2272:                                             ; preds = %2248, %2254
  %2273 = phi ptr [ %2261, %2254 ], [ %2241, %2248 ]
  %2274 = phi i32 [ %2260, %2254 ], [ 1, %2248 ]
  %2275 = load i32, ptr %2273, align 4, !tbaa !5
  %2276 = add nsw i32 %2275, %2274
  store i32 %2276, ptr %2273, align 4, !tbaa !5
  br label %2277

2277:                                             ; preds = %2264, %2272, %2237, %2222
  %2278 = icmp eq i32 %2229, %5
  br i1 %2278, label %5401, label %2149, !llvm.loop !1198

2279:                                             ; preds = %2132, %2414
  %2280 = phi i16 [ 0, %2132 ], [ %2362, %2414 ]
  %2281 = phi i32 [ 0, %2132 ], [ %2363, %2414 ]
  %2282 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2133, label %2283, label %2352

2283:                                             ; preds = %2279, %2342
  %2284 = phi i32 [ %2351, %2342 ], [ 0, %2279 ]
  %2285 = phi i64 [ %2293, %2342 ], [ %2137, %2279 ]
  %2286 = phi i64 [ %2350, %2342 ], [ %2136, %2279 ]
  %2287 = phi i32 [ %2348, %2342 ], [ %2282, %2279 ]
  %2288 = sub i32 %2135, %2284
  %2289 = tail call i32 @llvm.smin.i32(i32 %2288, i32 0)
  %2290 = sub i32 %2288, %2289
  %2291 = zext i32 %2290 to i64
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = add nsw i64 %2285, -1
  %2294 = icmp ult i32 %2290, 31
  br i1 %2294, label %2330, label %2295

2295:                                             ; preds = %2283
  %2296 = and i64 %2292, 8589934560
  %2297 = sub i64 %2286, %2296
  br label %2298

2298:                                             ; preds = %2298, %2295
  %2299 = phi i64 [ 0, %2295 ], [ %2322, %2298 ]
  %2300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2318, %2298 ]
  %2301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2319, %2298 ]
  %2302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2320, %2298 ]
  %2303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2321, %2298 ]
  %2304 = sub i64 %2286, %2299
  %2305 = getelementptr inbounds i32, ptr %11, i64 %2304
  %2306 = getelementptr inbounds i32, ptr %2305, i64 -7
  %2307 = load <8 x i32>, ptr %2306, align 4, !tbaa !5
  %2308 = shufflevector <8 x i32> %2307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2309 = getelementptr inbounds i32, ptr %2305, i64 -15
  %2310 = load <8 x i32>, ptr %2309, align 4, !tbaa !5
  %2311 = shufflevector <8 x i32> %2310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2312 = getelementptr inbounds i32, ptr %2305, i64 -23
  %2313 = load <8 x i32>, ptr %2312, align 4, !tbaa !5
  %2314 = shufflevector <8 x i32> %2313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2315 = getelementptr inbounds i32, ptr %2305, i64 -31
  %2316 = load <8 x i32>, ptr %2315, align 4, !tbaa !5
  %2317 = shufflevector <8 x i32> %2316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2318 = mul <8 x i32> %2308, %2300
  %2319 = mul <8 x i32> %2311, %2301
  %2320 = mul <8 x i32> %2314, %2302
  %2321 = mul <8 x i32> %2317, %2303
  %2322 = add nuw i64 %2299, 32
  %2323 = icmp eq i64 %2322, %2296
  br i1 %2323, label %2324, label %2298, !llvm.loop !1199

2324:                                             ; preds = %2298
  %2325 = mul <8 x i32> %2319, %2318
  %2326 = mul <8 x i32> %2320, %2325
  %2327 = mul <8 x i32> %2321, %2326
  %2328 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2327)
  %2329 = icmp eq i64 %2292, %2296
  br i1 %2329, label %2342, label %2330

2330:                                             ; preds = %2283, %2324
  %2331 = phi i64 [ %2286, %2283 ], [ %2297, %2324 ]
  %2332 = phi i32 [ 1, %2283 ], [ %2328, %2324 ]
  br label %2333

2333:                                             ; preds = %2330, %2333
  %2334 = phi i64 [ %2339, %2333 ], [ %2331, %2330 ]
  %2335 = phi i32 [ %2338, %2333 ], [ %2332, %2330 ]
  %2336 = getelementptr inbounds i32, ptr %11, i64 %2334
  %2337 = load i32, ptr %2336, align 4, !tbaa !5
  %2338 = mul nsw i32 %2337, %2335
  %2339 = add nsw i64 %2334, -1
  %2340 = trunc i64 %2334 to i32
  %2341 = icmp sgt i32 %2340, 0
  br i1 %2341, label %2333, label %2342, !llvm.loop !1200

2342:                                             ; preds = %2333, %2324
  %2343 = phi i32 [ %2328, %2324 ], [ %2338, %2333 ]
  %2344 = and i64 %2293, 4294967295
  %2345 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = mul nsw i32 %2346, %2343
  %2348 = add nsw i32 %2347, %2287
  %2349 = icmp sgt i64 %2285, 2
  %2350 = add nsw i64 %2286, -1
  %2351 = add i32 %2284, 1
  br i1 %2349, label %2283, label %2352, !llvm.loop !1201

2352:                                             ; preds = %2342, %2279
  %2353 = phi i32 [ %2282, %2279 ], [ %2348, %2342 ]
  %2354 = icmp slt i32 %2353, %5
  br i1 %2354, label %2357, label %2355

2355:                                             ; preds = %2352
  %2356 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

2357:                                             ; preds = %2352
  %2358 = sext i32 %2353 to i64
  %2359 = getelementptr inbounds float, ptr %1818, i64 %2358
  %2360 = load float, ptr %2359, align 4, !tbaa !162
  %2361 = fptosi float %2360 to i16
  %2362 = add i16 %2280, %2361
  store i16 %2362, ptr %1820, align 2, !tbaa !78
  %2363 = add nuw nsw i32 %2281, 1
  br i1 %2134, label %2364, label %2414

2364:                                             ; preds = %2357
  %2365 = load i32, ptr %4, align 4, !tbaa !5
  %2366 = load i32, ptr %12, align 4, !tbaa !5
  %2367 = add nsw i32 %2366, -1
  %2368 = icmp slt i32 %2365, %2367
  br i1 %2368, label %2391, label %2369

2369:                                             ; preds = %2364
  %2370 = icmp eq i32 %2365, %2367
  br i1 %2370, label %2371, label %2407

2371:                                             ; preds = %2369
  store i32 0, ptr %4, align 4, !tbaa !5
  %2372 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2372, ptr %6, align 4, !tbaa !5
  br i1 %2139, label %2414, label %2373

2373:                                             ; preds = %2371, %2401
  %2374 = phi i64 [ %2405, %2401 ], [ 1, %2371 ]
  %2375 = getelementptr inbounds i32, ptr %4, i64 %2374
  %2376 = load i32, ptr %2375, align 4, !tbaa !5
  %2377 = getelementptr inbounds i32, ptr %12, i64 %2374
  %2378 = load i32, ptr %2377, align 4, !tbaa !5
  %2379 = add nsw i32 %2378, -1
  %2380 = icmp slt i32 %2376, %2379
  br i1 %2380, label %2381, label %2399

2381:                                             ; preds = %2373
  br i1 %2368, label %2391, label %2382

2382:                                             ; preds = %2381
  %2383 = shl i64 %2374, 32
  %2384 = add i64 %2383, -4294967296
  %2385 = ashr exact i64 %2384, 32
  %2386 = getelementptr inbounds i32, ptr %7, i64 %2385
  %2387 = load i32, ptr %2386, align 4, !tbaa !5
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2374
  %2389 = load i32, ptr %2388, align 4, !tbaa !5
  %2390 = add nsw i32 %2389, %2387
  store i32 %2390, ptr %2388, align 4, !tbaa !5
  br label %2409

2391:                                             ; preds = %2364, %2381
  %2392 = phi i32 [ %2376, %2381 ], [ %2365, %2364 ]
  %2393 = phi ptr [ %2375, %2381 ], [ %4, %2364 ]
  %2394 = phi i64 [ %2374, %2381 ], [ 0, %2364 ]
  %2395 = add nsw i32 %2392, 1
  store i32 %2395, ptr %2393, align 4, !tbaa !5
  %2396 = getelementptr inbounds i32, ptr %7, i64 %2394
  %2397 = load i32, ptr %2396, align 4, !tbaa !5
  %2398 = getelementptr inbounds i32, ptr %6, i64 %2394
  br label %2409

2399:                                             ; preds = %2373
  %2400 = icmp eq i32 %2376, %2379
  br i1 %2400, label %2401, label %2407

2401:                                             ; preds = %2399
  store i32 0, ptr %2375, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %8, i64 %2374
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2374
  store i32 %2403, ptr %2404, align 4, !tbaa !5
  %2405 = add nuw nsw i64 %2374, 1
  %2406 = icmp eq i64 %2405, %2137
  br i1 %2406, label %2414, label %2373, !llvm.loop !1202

2407:                                             ; preds = %2369, %2399
  %2408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

2409:                                             ; preds = %2382, %2391
  %2410 = phi ptr [ %2398, %2391 ], [ %2375, %2382 ]
  %2411 = phi i32 [ %2397, %2391 ], [ 1, %2382 ]
  %2412 = load i32, ptr %2410, align 4, !tbaa !5
  %2413 = add nsw i32 %2412, %2411
  store i32 %2413, ptr %2410, align 4, !tbaa !5
  br label %2414

2414:                                             ; preds = %2401, %2409, %2371, %2357
  %2415 = icmp eq i32 %2363, %5
  br i1 %2415, label %5406, label %2279, !llvm.loop !1203

2416:                                             ; preds = %1825
  %2417 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1732, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

2418:                                             ; preds = %18
  %2419 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2420 = load ptr, ptr %2419, align 8, !tbaa !9
  %2421 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2422 = load ptr, ptr %2421, align 8, !tbaa !9
  store i32 0, ptr %2422, align 4, !tbaa !5
  %2423 = icmp eq i32 %13, 0
  br i1 %2423, label %2424, label %2427

2424:                                             ; preds = %2418
  %2425 = load float, ptr %2420, align 4, !tbaa !162
  %2426 = fptosi float %2425 to i32
  store i32 %2426, ptr %2422, align 4, !tbaa !5
  br label %5406

2427:                                             ; preds = %2418
  switch i32 %1, label %3014 [
    i32 1, label %2428
    i32 0, label %2724
  ]

2428:                                             ; preds = %2427
  %2429 = getelementptr inbounds i32, ptr %3, i64 %19
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = icmp eq i32 %2430, 0
  %2432 = icmp sgt i32 %5, 0
  br i1 %2431, label %2442, label %2433

2433:                                             ; preds = %2428
  br i1 %2432, label %2434, label %5406

2434:                                             ; preds = %2433
  %2435 = icmp sgt i32 %13, 1
  %2436 = icmp sgt i32 %13, 0
  %2437 = add i32 %13, -2
  %2438 = zext i32 %2437 to i64
  %2439 = zext i32 %13 to i64
  %2440 = add nuw i32 %5, 1
  %2441 = icmp eq i32 %13, 1
  br label %2587

2442:                                             ; preds = %2428
  br i1 %2432, label %2443, label %5406

2443:                                             ; preds = %2442
  %2444 = icmp sgt i32 %13, 1
  %2445 = icmp sgt i32 %13, 0
  %2446 = add i32 %13, -2
  %2447 = zext i32 %2446 to i64
  %2448 = zext i32 %13 to i64
  %2449 = add nuw i32 %5, 1
  %2450 = icmp eq i32 %13, 1
  br label %2451

2451:                                             ; preds = %2443, %2585
  %2452 = phi i32 [ 0, %2443 ], [ %2537, %2585 ]
  %2453 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2444, label %2454, label %2523

2454:                                             ; preds = %2451, %2513
  %2455 = phi i32 [ %2522, %2513 ], [ 0, %2451 ]
  %2456 = phi i64 [ %2464, %2513 ], [ %2448, %2451 ]
  %2457 = phi i64 [ %2521, %2513 ], [ %2447, %2451 ]
  %2458 = phi i32 [ %2519, %2513 ], [ %2453, %2451 ]
  %2459 = sub i32 %2446, %2455
  %2460 = tail call i32 @llvm.smin.i32(i32 %2459, i32 0)
  %2461 = sub i32 %2459, %2460
  %2462 = zext i32 %2461 to i64
  %2463 = add nuw nsw i64 %2462, 1
  %2464 = add nsw i64 %2456, -1
  %2465 = icmp ult i32 %2461, 31
  br i1 %2465, label %2501, label %2466

2466:                                             ; preds = %2454
  %2467 = and i64 %2463, 8589934560
  %2468 = sub i64 %2457, %2467
  br label %2469

2469:                                             ; preds = %2469, %2466
  %2470 = phi i64 [ 0, %2466 ], [ %2493, %2469 ]
  %2471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2489, %2469 ]
  %2472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2490, %2469 ]
  %2473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2491, %2469 ]
  %2474 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2492, %2469 ]
  %2475 = sub i64 %2457, %2470
  %2476 = getelementptr inbounds i32, ptr %9, i64 %2475
  %2477 = getelementptr inbounds i32, ptr %2476, i64 -7
  %2478 = load <8 x i32>, ptr %2477, align 4, !tbaa !5
  %2479 = shufflevector <8 x i32> %2478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2480 = getelementptr inbounds i32, ptr %2476, i64 -15
  %2481 = load <8 x i32>, ptr %2480, align 4, !tbaa !5
  %2482 = shufflevector <8 x i32> %2481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2483 = getelementptr inbounds i32, ptr %2476, i64 -23
  %2484 = load <8 x i32>, ptr %2483, align 4, !tbaa !5
  %2485 = shufflevector <8 x i32> %2484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2486 = getelementptr inbounds i32, ptr %2476, i64 -31
  %2487 = load <8 x i32>, ptr %2486, align 4, !tbaa !5
  %2488 = shufflevector <8 x i32> %2487, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2489 = mul <8 x i32> %2479, %2471
  %2490 = mul <8 x i32> %2482, %2472
  %2491 = mul <8 x i32> %2485, %2473
  %2492 = mul <8 x i32> %2488, %2474
  %2493 = add nuw i64 %2470, 32
  %2494 = icmp eq i64 %2493, %2467
  br i1 %2494, label %2495, label %2469, !llvm.loop !1204

2495:                                             ; preds = %2469
  %2496 = mul <8 x i32> %2490, %2489
  %2497 = mul <8 x i32> %2491, %2496
  %2498 = mul <8 x i32> %2492, %2497
  %2499 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2498)
  %2500 = icmp eq i64 %2463, %2467
  br i1 %2500, label %2513, label %2501

2501:                                             ; preds = %2454, %2495
  %2502 = phi i64 [ %2457, %2454 ], [ %2468, %2495 ]
  %2503 = phi i32 [ 1, %2454 ], [ %2499, %2495 ]
  br label %2504

2504:                                             ; preds = %2501, %2504
  %2505 = phi i64 [ %2510, %2504 ], [ %2502, %2501 ]
  %2506 = phi i32 [ %2509, %2504 ], [ %2503, %2501 ]
  %2507 = getelementptr inbounds i32, ptr %9, i64 %2505
  %2508 = load i32, ptr %2507, align 4, !tbaa !5
  %2509 = mul nsw i32 %2508, %2506
  %2510 = add nsw i64 %2505, -1
  %2511 = trunc i64 %2505 to i32
  %2512 = icmp sgt i32 %2511, 0
  br i1 %2512, label %2504, label %2513, !llvm.loop !1205

2513:                                             ; preds = %2504, %2495
  %2514 = phi i32 [ %2499, %2495 ], [ %2509, %2504 ]
  %2515 = and i64 %2464, 4294967295
  %2516 = getelementptr inbounds i32, ptr %6, i64 %2515
  %2517 = load i32, ptr %2516, align 4, !tbaa !5
  %2518 = mul nsw i32 %2517, %2514
  %2519 = add nsw i32 %2518, %2458
  %2520 = icmp sgt i64 %2456, 2
  %2521 = add nsw i64 %2457, -1
  %2522 = add i32 %2455, 1
  br i1 %2520, label %2454, label %2523, !llvm.loop !1206

2523:                                             ; preds = %2513, %2451
  %2524 = phi i32 [ %2453, %2451 ], [ %2519, %2513 ]
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds double, ptr %2, i64 %2525
  %2527 = load double, ptr %2526, align 8, !tbaa !18
  %2528 = getelementptr inbounds float, ptr %2420, i64 %2525
  %2529 = load float, ptr %2528, align 4, !tbaa !162
  %2530 = fptosi float %2529 to i32
  %2531 = load i32, ptr %2422, align 4, !tbaa !5
  %2532 = sitofp i32 %2531 to double
  %2533 = sitofp i32 %2530 to double
  %2534 = fmul fast double %2527, %2533
  %2535 = fadd fast double %2534, %2532
  %2536 = fptosi double %2535 to i32
  store i32 %2536, ptr %2422, align 4, !tbaa !5
  %2537 = add nuw nsw i32 %2452, 1
  br i1 %2445, label %2538, label %2585

2538:                                             ; preds = %2523
  %2539 = load i32, ptr %4, align 4, !tbaa !5
  %2540 = load i32, ptr %12, align 4, !tbaa !5
  %2541 = add nsw i32 %2540, -1
  %2542 = icmp slt i32 %2539, %2541
  br i1 %2542, label %2562, label %2543

2543:                                             ; preds = %2538
  %2544 = icmp eq i32 %2539, %2541
  br i1 %2544, label %2545, label %2578

2545:                                             ; preds = %2543
  store i32 0, ptr %4, align 4, !tbaa !5
  %2546 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2546, ptr %6, align 4, !tbaa !5
  br i1 %2450, label %2585, label %2547

2547:                                             ; preds = %2545, %2572
  %2548 = phi i64 [ %2576, %2572 ], [ 1, %2545 ]
  %2549 = getelementptr inbounds i32, ptr %4, i64 %2548
  %2550 = load i32, ptr %2549, align 4, !tbaa !5
  %2551 = getelementptr inbounds i32, ptr %12, i64 %2548
  %2552 = load i32, ptr %2551, align 4, !tbaa !5
  %2553 = add nsw i32 %2552, -1
  %2554 = icmp slt i32 %2550, %2553
  br i1 %2554, label %2555, label %2570

2555:                                             ; preds = %2547
  br i1 %2542, label %2562, label %2556

2556:                                             ; preds = %2555
  %2557 = getelementptr inbounds i32, ptr %7, i64 %2548
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = getelementptr inbounds i32, ptr %6, i64 %2548
  %2560 = load i32, ptr %2559, align 4, !tbaa !5
  %2561 = add nsw i32 %2560, %2558
  store i32 %2561, ptr %2559, align 4, !tbaa !5
  br label %2580

2562:                                             ; preds = %2538, %2555
  %2563 = phi i32 [ %2550, %2555 ], [ %2539, %2538 ]
  %2564 = phi ptr [ %2549, %2555 ], [ %4, %2538 ]
  %2565 = phi i64 [ %2548, %2555 ], [ 0, %2538 ]
  %2566 = add nsw i32 %2563, 1
  store i32 %2566, ptr %2564, align 4, !tbaa !5
  %2567 = getelementptr inbounds i32, ptr %7, i64 %2565
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %6, i64 %2565
  br label %2580

2570:                                             ; preds = %2547
  %2571 = icmp eq i32 %2550, %2553
  br i1 %2571, label %2572, label %2578

2572:                                             ; preds = %2570
  store i32 0, ptr %2549, align 4, !tbaa !5
  %2573 = getelementptr inbounds i32, ptr %8, i64 %2548
  %2574 = load i32, ptr %2573, align 4, !tbaa !5
  %2575 = getelementptr inbounds i32, ptr %6, i64 %2548
  store i32 %2574, ptr %2575, align 4, !tbaa !5
  %2576 = add nuw nsw i64 %2548, 1
  %2577 = icmp eq i64 %2576, %2448
  br i1 %2577, label %2585, label %2547, !llvm.loop !1207

2578:                                             ; preds = %2543, %2570
  %2579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

2580:                                             ; preds = %2556, %2562
  %2581 = phi ptr [ %2569, %2562 ], [ %2549, %2556 ]
  %2582 = phi i32 [ %2568, %2562 ], [ 1, %2556 ]
  %2583 = load i32, ptr %2581, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, %2582
  store i32 %2584, ptr %2581, align 4, !tbaa !5
  br label %2585

2585:                                             ; preds = %2572, %2580, %2545, %2523
  %2586 = icmp eq i32 %2537, %5
  br i1 %2586, label %5406, label %2451, !llvm.loop !1208

2587:                                             ; preds = %2434, %2722
  %2588 = phi i32 [ 0, %2434 ], [ %2671, %2722 ]
  %2589 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2435, label %2590, label %2659

2590:                                             ; preds = %2587, %2649
  %2591 = phi i32 [ %2658, %2649 ], [ 0, %2587 ]
  %2592 = phi i64 [ %2600, %2649 ], [ %2439, %2587 ]
  %2593 = phi i64 [ %2657, %2649 ], [ %2438, %2587 ]
  %2594 = phi i32 [ %2655, %2649 ], [ %2589, %2587 ]
  %2595 = sub i32 %2437, %2591
  %2596 = tail call i32 @llvm.smin.i32(i32 %2595, i32 0)
  %2597 = sub i32 %2595, %2596
  %2598 = zext i32 %2597 to i64
  %2599 = add nuw nsw i64 %2598, 1
  %2600 = add nsw i64 %2592, -1
  %2601 = icmp ult i32 %2597, 31
  br i1 %2601, label %2637, label %2602

2602:                                             ; preds = %2590
  %2603 = and i64 %2599, 8589934560
  %2604 = sub i64 %2593, %2603
  br label %2605

2605:                                             ; preds = %2605, %2602
  %2606 = phi i64 [ 0, %2602 ], [ %2629, %2605 ]
  %2607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2625, %2605 ]
  %2608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2626, %2605 ]
  %2609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2627, %2605 ]
  %2610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2628, %2605 ]
  %2611 = sub i64 %2593, %2606
  %2612 = getelementptr inbounds i32, ptr %11, i64 %2611
  %2613 = getelementptr inbounds i32, ptr %2612, i64 -7
  %2614 = load <8 x i32>, ptr %2613, align 4, !tbaa !5
  %2615 = shufflevector <8 x i32> %2614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2616 = getelementptr inbounds i32, ptr %2612, i64 -15
  %2617 = load <8 x i32>, ptr %2616, align 4, !tbaa !5
  %2618 = shufflevector <8 x i32> %2617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2619 = getelementptr inbounds i32, ptr %2612, i64 -23
  %2620 = load <8 x i32>, ptr %2619, align 4, !tbaa !5
  %2621 = shufflevector <8 x i32> %2620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2622 = getelementptr inbounds i32, ptr %2612, i64 -31
  %2623 = load <8 x i32>, ptr %2622, align 4, !tbaa !5
  %2624 = shufflevector <8 x i32> %2623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2625 = mul <8 x i32> %2615, %2607
  %2626 = mul <8 x i32> %2618, %2608
  %2627 = mul <8 x i32> %2621, %2609
  %2628 = mul <8 x i32> %2624, %2610
  %2629 = add nuw i64 %2606, 32
  %2630 = icmp eq i64 %2629, %2603
  br i1 %2630, label %2631, label %2605, !llvm.loop !1209

2631:                                             ; preds = %2605
  %2632 = mul <8 x i32> %2626, %2625
  %2633 = mul <8 x i32> %2627, %2632
  %2634 = mul <8 x i32> %2628, %2633
  %2635 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2634)
  %2636 = icmp eq i64 %2599, %2603
  br i1 %2636, label %2649, label %2637

2637:                                             ; preds = %2590, %2631
  %2638 = phi i64 [ %2593, %2590 ], [ %2604, %2631 ]
  %2639 = phi i32 [ 1, %2590 ], [ %2635, %2631 ]
  br label %2640

2640:                                             ; preds = %2637, %2640
  %2641 = phi i64 [ %2646, %2640 ], [ %2638, %2637 ]
  %2642 = phi i32 [ %2645, %2640 ], [ %2639, %2637 ]
  %2643 = getelementptr inbounds i32, ptr %11, i64 %2641
  %2644 = load i32, ptr %2643, align 4, !tbaa !5
  %2645 = mul nsw i32 %2644, %2642
  %2646 = add nsw i64 %2641, -1
  %2647 = trunc i64 %2641 to i32
  %2648 = icmp sgt i32 %2647, 0
  br i1 %2648, label %2640, label %2649, !llvm.loop !1210

2649:                                             ; preds = %2640, %2631
  %2650 = phi i32 [ %2635, %2631 ], [ %2645, %2640 ]
  %2651 = and i64 %2600, 4294967295
  %2652 = getelementptr inbounds i32, ptr %6, i64 %2651
  %2653 = load i32, ptr %2652, align 4, !tbaa !5
  %2654 = mul nsw i32 %2653, %2650
  %2655 = add nsw i32 %2654, %2594
  %2656 = icmp sgt i64 %2592, 2
  %2657 = add nsw i64 %2593, -1
  %2658 = add i32 %2591, 1
  br i1 %2656, label %2590, label %2659, !llvm.loop !1211

2659:                                             ; preds = %2649, %2587
  %2660 = phi i32 [ %2589, %2587 ], [ %2655, %2649 ]
  %2661 = icmp slt i32 %2660, %5
  br i1 %2661, label %2664, label %2662

2662:                                             ; preds = %2659
  %2663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

2664:                                             ; preds = %2659
  %2665 = sext i32 %2660 to i64
  %2666 = getelementptr inbounds float, ptr %2420, i64 %2665
  %2667 = load float, ptr %2666, align 4, !tbaa !162
  %2668 = fptosi float %2667 to i32
  %2669 = load i32, ptr %2422, align 4, !tbaa !5
  %2670 = add i32 %2669, %2668
  store i32 %2670, ptr %2422, align 4, !tbaa !5
  %2671 = add nuw nsw i32 %2588, 1
  br i1 %2436, label %2672, label %2722

2672:                                             ; preds = %2664
  %2673 = load i32, ptr %4, align 4, !tbaa !5
  %2674 = load i32, ptr %12, align 4, !tbaa !5
  %2675 = add nsw i32 %2674, -1
  %2676 = icmp slt i32 %2673, %2675
  br i1 %2676, label %2699, label %2677

2677:                                             ; preds = %2672
  %2678 = icmp eq i32 %2673, %2675
  br i1 %2678, label %2679, label %2715

2679:                                             ; preds = %2677
  store i32 0, ptr %4, align 4, !tbaa !5
  %2680 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2680, ptr %6, align 4, !tbaa !5
  br i1 %2441, label %2722, label %2681

2681:                                             ; preds = %2679, %2709
  %2682 = phi i64 [ %2713, %2709 ], [ 1, %2679 ]
  %2683 = getelementptr inbounds i32, ptr %4, i64 %2682
  %2684 = load i32, ptr %2683, align 4, !tbaa !5
  %2685 = getelementptr inbounds i32, ptr %12, i64 %2682
  %2686 = load i32, ptr %2685, align 4, !tbaa !5
  %2687 = add nsw i32 %2686, -1
  %2688 = icmp slt i32 %2684, %2687
  br i1 %2688, label %2689, label %2707

2689:                                             ; preds = %2681
  br i1 %2676, label %2699, label %2690

2690:                                             ; preds = %2689
  %2691 = shl i64 %2682, 32
  %2692 = add i64 %2691, -4294967296
  %2693 = ashr exact i64 %2692, 32
  %2694 = getelementptr inbounds i32, ptr %7, i64 %2693
  %2695 = load i32, ptr %2694, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2682
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = add nsw i32 %2697, %2695
  store i32 %2698, ptr %2696, align 4, !tbaa !5
  br label %2717

2699:                                             ; preds = %2672, %2689
  %2700 = phi i32 [ %2684, %2689 ], [ %2673, %2672 ]
  %2701 = phi ptr [ %2683, %2689 ], [ %4, %2672 ]
  %2702 = phi i64 [ %2682, %2689 ], [ 0, %2672 ]
  %2703 = add nsw i32 %2700, 1
  store i32 %2703, ptr %2701, align 4, !tbaa !5
  %2704 = getelementptr inbounds i32, ptr %7, i64 %2702
  %2705 = load i32, ptr %2704, align 4, !tbaa !5
  %2706 = getelementptr inbounds i32, ptr %6, i64 %2702
  br label %2717

2707:                                             ; preds = %2681
  %2708 = icmp eq i32 %2684, %2687
  br i1 %2708, label %2709, label %2715

2709:                                             ; preds = %2707
  store i32 0, ptr %2683, align 4, !tbaa !5
  %2710 = getelementptr inbounds i32, ptr %8, i64 %2682
  %2711 = load i32, ptr %2710, align 4, !tbaa !5
  %2712 = getelementptr inbounds i32, ptr %6, i64 %2682
  store i32 %2711, ptr %2712, align 4, !tbaa !5
  %2713 = add nuw nsw i64 %2682, 1
  %2714 = icmp eq i64 %2713, %2439
  br i1 %2714, label %2722, label %2681, !llvm.loop !1212

2715:                                             ; preds = %2677, %2707
  %2716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

2717:                                             ; preds = %2690, %2699
  %2718 = phi ptr [ %2706, %2699 ], [ %2683, %2690 ]
  %2719 = phi i32 [ %2705, %2699 ], [ 1, %2690 ]
  %2720 = load i32, ptr %2718, align 4, !tbaa !5
  %2721 = add nsw i32 %2720, %2719
  store i32 %2721, ptr %2718, align 4, !tbaa !5
  br label %2722

2722:                                             ; preds = %2709, %2717, %2679, %2664
  %2723 = icmp eq i32 %2671, %5
  br i1 %2723, label %5406, label %2587, !llvm.loop !1213

2724:                                             ; preds = %2427
  %2725 = getelementptr inbounds i32, ptr %3, i64 %19
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = icmp eq i32 %2726, 0
  %2728 = icmp sgt i32 %5, 0
  br i1 %2727, label %2738, label %2729

2729:                                             ; preds = %2724
  br i1 %2728, label %2730, label %5406

2730:                                             ; preds = %2729
  %2731 = icmp sgt i32 %13, 1
  %2732 = icmp sgt i32 %13, 0
  %2733 = add i32 %13, -2
  %2734 = zext i32 %2733 to i64
  %2735 = zext i32 %13 to i64
  %2736 = add nuw i32 %5, 1
  %2737 = icmp eq i32 %13, 1
  br label %2877

2738:                                             ; preds = %2724
  br i1 %2728, label %2739, label %5406

2739:                                             ; preds = %2738
  %2740 = icmp sgt i32 %13, 1
  %2741 = icmp sgt i32 %13, 0
  %2742 = add i32 %13, -2
  %2743 = zext i32 %2742 to i64
  %2744 = zext i32 %13 to i64
  %2745 = add nuw i32 %5, 1
  %2746 = icmp eq i32 %13, 1
  br label %2747

2747:                                             ; preds = %2739, %2875
  %2748 = phi i32 [ 0, %2739 ], [ %2827, %2875 ]
  %2749 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2740, label %2750, label %2819

2750:                                             ; preds = %2747, %2809
  %2751 = phi i32 [ %2818, %2809 ], [ 0, %2747 ]
  %2752 = phi i64 [ %2760, %2809 ], [ %2744, %2747 ]
  %2753 = phi i64 [ %2817, %2809 ], [ %2743, %2747 ]
  %2754 = phi i32 [ %2815, %2809 ], [ %2749, %2747 ]
  %2755 = sub i32 %2742, %2751
  %2756 = tail call i32 @llvm.smin.i32(i32 %2755, i32 0)
  %2757 = sub i32 %2755, %2756
  %2758 = zext i32 %2757 to i64
  %2759 = add nuw nsw i64 %2758, 1
  %2760 = add nsw i64 %2752, -1
  %2761 = icmp ult i32 %2757, 31
  br i1 %2761, label %2797, label %2762

2762:                                             ; preds = %2750
  %2763 = and i64 %2759, 8589934560
  %2764 = sub i64 %2753, %2763
  br label %2765

2765:                                             ; preds = %2765, %2762
  %2766 = phi i64 [ 0, %2762 ], [ %2789, %2765 ]
  %2767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2785, %2765 ]
  %2768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2786, %2765 ]
  %2769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2787, %2765 ]
  %2770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2788, %2765 ]
  %2771 = sub i64 %2753, %2766
  %2772 = getelementptr inbounds i32, ptr %9, i64 %2771
  %2773 = getelementptr inbounds i32, ptr %2772, i64 -7
  %2774 = load <8 x i32>, ptr %2773, align 4, !tbaa !5
  %2775 = shufflevector <8 x i32> %2774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2776 = getelementptr inbounds i32, ptr %2772, i64 -15
  %2777 = load <8 x i32>, ptr %2776, align 4, !tbaa !5
  %2778 = shufflevector <8 x i32> %2777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2779 = getelementptr inbounds i32, ptr %2772, i64 -23
  %2780 = load <8 x i32>, ptr %2779, align 4, !tbaa !5
  %2781 = shufflevector <8 x i32> %2780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2782 = getelementptr inbounds i32, ptr %2772, i64 -31
  %2783 = load <8 x i32>, ptr %2782, align 4, !tbaa !5
  %2784 = shufflevector <8 x i32> %2783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2785 = mul <8 x i32> %2775, %2767
  %2786 = mul <8 x i32> %2778, %2768
  %2787 = mul <8 x i32> %2781, %2769
  %2788 = mul <8 x i32> %2784, %2770
  %2789 = add nuw i64 %2766, 32
  %2790 = icmp eq i64 %2789, %2763
  br i1 %2790, label %2791, label %2765, !llvm.loop !1214

2791:                                             ; preds = %2765
  %2792 = mul <8 x i32> %2786, %2785
  %2793 = mul <8 x i32> %2787, %2792
  %2794 = mul <8 x i32> %2788, %2793
  %2795 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2794)
  %2796 = icmp eq i64 %2759, %2763
  br i1 %2796, label %2809, label %2797

2797:                                             ; preds = %2750, %2791
  %2798 = phi i64 [ %2753, %2750 ], [ %2764, %2791 ]
  %2799 = phi i32 [ 1, %2750 ], [ %2795, %2791 ]
  br label %2800

2800:                                             ; preds = %2797, %2800
  %2801 = phi i64 [ %2806, %2800 ], [ %2798, %2797 ]
  %2802 = phi i32 [ %2805, %2800 ], [ %2799, %2797 ]
  %2803 = getelementptr inbounds i32, ptr %9, i64 %2801
  %2804 = load i32, ptr %2803, align 4, !tbaa !5
  %2805 = mul nsw i32 %2804, %2802
  %2806 = add nsw i64 %2801, -1
  %2807 = trunc i64 %2801 to i32
  %2808 = icmp sgt i32 %2807, 0
  br i1 %2808, label %2800, label %2809, !llvm.loop !1215

2809:                                             ; preds = %2800, %2791
  %2810 = phi i32 [ %2795, %2791 ], [ %2805, %2800 ]
  %2811 = and i64 %2760, 4294967295
  %2812 = getelementptr inbounds i32, ptr %6, i64 %2811
  %2813 = load i32, ptr %2812, align 4, !tbaa !5
  %2814 = mul nsw i32 %2813, %2810
  %2815 = add nsw i32 %2814, %2754
  %2816 = icmp sgt i64 %2752, 2
  %2817 = add nsw i64 %2753, -1
  %2818 = add i32 %2751, 1
  br i1 %2816, label %2750, label %2819, !llvm.loop !1216

2819:                                             ; preds = %2809, %2747
  %2820 = phi i32 [ %2749, %2747 ], [ %2815, %2809 ]
  %2821 = sext i32 %2820 to i64
  %2822 = getelementptr inbounds float, ptr %2420, i64 %2821
  %2823 = load float, ptr %2822, align 4, !tbaa !162
  %2824 = fptosi float %2823 to i32
  %2825 = load i32, ptr %2422, align 4, !tbaa !5
  %2826 = add nsw i32 %2825, %2824
  store i32 %2826, ptr %2422, align 4, !tbaa !5
  %2827 = add nuw nsw i32 %2748, 1
  br i1 %2741, label %2828, label %2875

2828:                                             ; preds = %2819
  %2829 = load i32, ptr %4, align 4, !tbaa !5
  %2830 = load i32, ptr %12, align 4, !tbaa !5
  %2831 = add nsw i32 %2830, -1
  %2832 = icmp slt i32 %2829, %2831
  br i1 %2832, label %2852, label %2833

2833:                                             ; preds = %2828
  %2834 = icmp eq i32 %2829, %2831
  br i1 %2834, label %2835, label %2868

2835:                                             ; preds = %2833
  store i32 0, ptr %4, align 4, !tbaa !5
  %2836 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2836, ptr %6, align 4, !tbaa !5
  br i1 %2746, label %2875, label %2837

2837:                                             ; preds = %2835, %2862
  %2838 = phi i64 [ %2866, %2862 ], [ 1, %2835 ]
  %2839 = getelementptr inbounds i32, ptr %4, i64 %2838
  %2840 = load i32, ptr %2839, align 4, !tbaa !5
  %2841 = getelementptr inbounds i32, ptr %12, i64 %2838
  %2842 = load i32, ptr %2841, align 4, !tbaa !5
  %2843 = add nsw i32 %2842, -1
  %2844 = icmp slt i32 %2840, %2843
  br i1 %2844, label %2845, label %2860

2845:                                             ; preds = %2837
  br i1 %2832, label %2852, label %2846

2846:                                             ; preds = %2845
  %2847 = getelementptr inbounds i32, ptr %7, i64 %2838
  %2848 = load i32, ptr %2847, align 4, !tbaa !5
  %2849 = getelementptr inbounds i32, ptr %6, i64 %2838
  %2850 = load i32, ptr %2849, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, %2848
  store i32 %2851, ptr %2849, align 4, !tbaa !5
  br label %2870

2852:                                             ; preds = %2828, %2845
  %2853 = phi i32 [ %2840, %2845 ], [ %2829, %2828 ]
  %2854 = phi ptr [ %2839, %2845 ], [ %4, %2828 ]
  %2855 = phi i64 [ %2838, %2845 ], [ 0, %2828 ]
  %2856 = add nsw i32 %2853, 1
  store i32 %2856, ptr %2854, align 4, !tbaa !5
  %2857 = getelementptr inbounds i32, ptr %7, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2855
  br label %2870

2860:                                             ; preds = %2837
  %2861 = icmp eq i32 %2840, %2843
  br i1 %2861, label %2862, label %2868

2862:                                             ; preds = %2860
  store i32 0, ptr %2839, align 4, !tbaa !5
  %2863 = getelementptr inbounds i32, ptr %8, i64 %2838
  %2864 = load i32, ptr %2863, align 4, !tbaa !5
  %2865 = getelementptr inbounds i32, ptr %6, i64 %2838
  store i32 %2864, ptr %2865, align 4, !tbaa !5
  %2866 = add nuw nsw i64 %2838, 1
  %2867 = icmp eq i64 %2866, %2744
  br i1 %2867, label %2875, label %2837, !llvm.loop !1217

2868:                                             ; preds = %2833, %2860
  %2869 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

2870:                                             ; preds = %2846, %2852
  %2871 = phi ptr [ %2859, %2852 ], [ %2839, %2846 ]
  %2872 = phi i32 [ %2858, %2852 ], [ 1, %2846 ]
  %2873 = load i32, ptr %2871, align 4, !tbaa !5
  %2874 = add nsw i32 %2873, %2872
  store i32 %2874, ptr %2871, align 4, !tbaa !5
  br label %2875

2875:                                             ; preds = %2862, %2870, %2835, %2819
  %2876 = icmp eq i32 %2827, %5
  br i1 %2876, label %5406, label %2747, !llvm.loop !1218

2877:                                             ; preds = %2730, %3012
  %2878 = phi i32 [ 0, %2730 ], [ %2961, %3012 ]
  %2879 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2731, label %2880, label %2949

2880:                                             ; preds = %2877, %2939
  %2881 = phi i32 [ %2948, %2939 ], [ 0, %2877 ]
  %2882 = phi i64 [ %2890, %2939 ], [ %2735, %2877 ]
  %2883 = phi i64 [ %2947, %2939 ], [ %2734, %2877 ]
  %2884 = phi i32 [ %2945, %2939 ], [ %2879, %2877 ]
  %2885 = sub i32 %2733, %2881
  %2886 = tail call i32 @llvm.smin.i32(i32 %2885, i32 0)
  %2887 = sub i32 %2885, %2886
  %2888 = zext i32 %2887 to i64
  %2889 = add nuw nsw i64 %2888, 1
  %2890 = add nsw i64 %2882, -1
  %2891 = icmp ult i32 %2887, 31
  br i1 %2891, label %2927, label %2892

2892:                                             ; preds = %2880
  %2893 = and i64 %2889, 8589934560
  %2894 = sub i64 %2883, %2893
  br label %2895

2895:                                             ; preds = %2895, %2892
  %2896 = phi i64 [ 0, %2892 ], [ %2919, %2895 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2915, %2895 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2916, %2895 ]
  %2899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2917, %2895 ]
  %2900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2918, %2895 ]
  %2901 = sub i64 %2883, %2896
  %2902 = getelementptr inbounds i32, ptr %11, i64 %2901
  %2903 = getelementptr inbounds i32, ptr %2902, i64 -7
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !5
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2902, i64 -15
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !5
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = getelementptr inbounds i32, ptr %2902, i64 -23
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !5
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2902, i64 -31
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !5
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = mul <8 x i32> %2905, %2897
  %2916 = mul <8 x i32> %2908, %2898
  %2917 = mul <8 x i32> %2911, %2899
  %2918 = mul <8 x i32> %2914, %2900
  %2919 = add nuw i64 %2896, 32
  %2920 = icmp eq i64 %2919, %2893
  br i1 %2920, label %2921, label %2895, !llvm.loop !1219

2921:                                             ; preds = %2895
  %2922 = mul <8 x i32> %2916, %2915
  %2923 = mul <8 x i32> %2917, %2922
  %2924 = mul <8 x i32> %2918, %2923
  %2925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2924)
  %2926 = icmp eq i64 %2889, %2893
  br i1 %2926, label %2939, label %2927

2927:                                             ; preds = %2880, %2921
  %2928 = phi i64 [ %2883, %2880 ], [ %2894, %2921 ]
  %2929 = phi i32 [ 1, %2880 ], [ %2925, %2921 ]
  br label %2930

2930:                                             ; preds = %2927, %2930
  %2931 = phi i64 [ %2936, %2930 ], [ %2928, %2927 ]
  %2932 = phi i32 [ %2935, %2930 ], [ %2929, %2927 ]
  %2933 = getelementptr inbounds i32, ptr %11, i64 %2931
  %2934 = load i32, ptr %2933, align 4, !tbaa !5
  %2935 = mul nsw i32 %2934, %2932
  %2936 = add nsw i64 %2931, -1
  %2937 = trunc i64 %2931 to i32
  %2938 = icmp sgt i32 %2937, 0
  br i1 %2938, label %2930, label %2939, !llvm.loop !1220

2939:                                             ; preds = %2930, %2921
  %2940 = phi i32 [ %2925, %2921 ], [ %2935, %2930 ]
  %2941 = and i64 %2890, 4294967295
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2941
  %2943 = load i32, ptr %2942, align 4, !tbaa !5
  %2944 = mul nsw i32 %2943, %2940
  %2945 = add nsw i32 %2944, %2884
  %2946 = icmp sgt i64 %2882, 2
  %2947 = add nsw i64 %2883, -1
  %2948 = add i32 %2881, 1
  br i1 %2946, label %2880, label %2949, !llvm.loop !1221

2949:                                             ; preds = %2939, %2877
  %2950 = phi i32 [ %2879, %2877 ], [ %2945, %2939 ]
  %2951 = icmp slt i32 %2950, %5
  br i1 %2951, label %2954, label %2952

2952:                                             ; preds = %2949
  %2953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

2954:                                             ; preds = %2949
  %2955 = sext i32 %2950 to i64
  %2956 = getelementptr inbounds float, ptr %2420, i64 %2955
  %2957 = load float, ptr %2956, align 4, !tbaa !162
  %2958 = fptosi float %2957 to i32
  %2959 = load i32, ptr %2422, align 4, !tbaa !5
  %2960 = add nsw i32 %2959, %2958
  store i32 %2960, ptr %2422, align 4, !tbaa !5
  %2961 = add nuw nsw i32 %2878, 1
  br i1 %2732, label %2962, label %3012

2962:                                             ; preds = %2954
  %2963 = load i32, ptr %4, align 4, !tbaa !5
  %2964 = load i32, ptr %12, align 4, !tbaa !5
  %2965 = add nsw i32 %2964, -1
  %2966 = icmp slt i32 %2963, %2965
  br i1 %2966, label %2989, label %2967

2967:                                             ; preds = %2962
  %2968 = icmp eq i32 %2963, %2965
  br i1 %2968, label %2969, label %3005

2969:                                             ; preds = %2967
  store i32 0, ptr %4, align 4, !tbaa !5
  %2970 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2970, ptr %6, align 4, !tbaa !5
  br i1 %2737, label %3012, label %2971

2971:                                             ; preds = %2969, %2999
  %2972 = phi i64 [ %3003, %2999 ], [ 1, %2969 ]
  %2973 = getelementptr inbounds i32, ptr %4, i64 %2972
  %2974 = load i32, ptr %2973, align 4, !tbaa !5
  %2975 = getelementptr inbounds i32, ptr %12, i64 %2972
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = add nsw i32 %2976, -1
  %2978 = icmp slt i32 %2974, %2977
  br i1 %2978, label %2979, label %2997

2979:                                             ; preds = %2971
  br i1 %2966, label %2989, label %2980

2980:                                             ; preds = %2979
  %2981 = shl i64 %2972, 32
  %2982 = add i64 %2981, -4294967296
  %2983 = ashr exact i64 %2982, 32
  %2984 = getelementptr inbounds i32, ptr %7, i64 %2983
  %2985 = load i32, ptr %2984, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %6, i64 %2972
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = add nsw i32 %2987, %2985
  store i32 %2988, ptr %2986, align 4, !tbaa !5
  br label %3007

2989:                                             ; preds = %2962, %2979
  %2990 = phi i32 [ %2974, %2979 ], [ %2963, %2962 ]
  %2991 = phi ptr [ %2973, %2979 ], [ %4, %2962 ]
  %2992 = phi i64 [ %2972, %2979 ], [ 0, %2962 ]
  %2993 = add nsw i32 %2990, 1
  store i32 %2993, ptr %2991, align 4, !tbaa !5
  %2994 = getelementptr inbounds i32, ptr %7, i64 %2992
  %2995 = load i32, ptr %2994, align 4, !tbaa !5
  %2996 = getelementptr inbounds i32, ptr %6, i64 %2992
  br label %3007

2997:                                             ; preds = %2971
  %2998 = icmp eq i32 %2974, %2977
  br i1 %2998, label %2999, label %3005

2999:                                             ; preds = %2997
  store i32 0, ptr %2973, align 4, !tbaa !5
  %3000 = getelementptr inbounds i32, ptr %8, i64 %2972
  %3001 = load i32, ptr %3000, align 4, !tbaa !5
  %3002 = getelementptr inbounds i32, ptr %6, i64 %2972
  store i32 %3001, ptr %3002, align 4, !tbaa !5
  %3003 = add nuw nsw i64 %2972, 1
  %3004 = icmp eq i64 %3003, %2735
  br i1 %3004, label %3012, label %2971, !llvm.loop !1222

3005:                                             ; preds = %2967, %2997
  %3006 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3007:                                             ; preds = %2980, %2989
  %3008 = phi ptr [ %2996, %2989 ], [ %2973, %2980 ]
  %3009 = phi i32 [ %2995, %2989 ], [ 1, %2980 ]
  %3010 = load i32, ptr %3008, align 4, !tbaa !5
  %3011 = add nsw i32 %3010, %3009
  store i32 %3011, ptr %3008, align 4, !tbaa !5
  br label %3012

3012:                                             ; preds = %2999, %3007, %2969, %2954
  %3013 = icmp eq i32 %2961, %5
  br i1 %3013, label %5406, label %2877, !llvm.loop !1223

3014:                                             ; preds = %2427
  %3015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1737, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

3016:                                             ; preds = %18
  %3017 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3018 = load ptr, ptr %3017, align 8, !tbaa !9
  %3019 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3020 = load ptr, ptr %3019, align 8, !tbaa !9
  store i64 0, ptr %3020, align 8, !tbaa !120
  %3021 = icmp eq i32 %13, 0
  br i1 %3021, label %3022, label %3025

3022:                                             ; preds = %3016
  %3023 = load float, ptr %3018, align 4, !tbaa !162
  %3024 = fptosi float %3023 to i64
  store i64 %3024, ptr %3020, align 8, !tbaa !120
  br label %5406

3025:                                             ; preds = %3016
  switch i32 %1, label %3615 [
    i32 1, label %3026
    i32 0, label %3325
  ]

3026:                                             ; preds = %3025
  %3027 = getelementptr inbounds i32, ptr %3, i64 %19
  %3028 = load i32, ptr %3027, align 4, !tbaa !5
  %3029 = icmp eq i32 %3028, 0
  %3030 = icmp sgt i32 %5, 0
  br i1 %3029, label %3040, label %3031

3031:                                             ; preds = %3026
  br i1 %3030, label %3032, label %5406

3032:                                             ; preds = %3031
  %3033 = icmp sgt i32 %13, 1
  %3034 = icmp sgt i32 %13, 0
  %3035 = add i32 %13, -2
  %3036 = zext i32 %3035 to i64
  %3037 = zext i32 %13 to i64
  %3038 = add nuw i32 %5, 1
  %3039 = icmp eq i32 %13, 1
  br label %3185

3040:                                             ; preds = %3026
  br i1 %3030, label %3041, label %5406

3041:                                             ; preds = %3040
  %3042 = icmp sgt i32 %13, 1
  %3043 = icmp sgt i32 %13, 0
  %3044 = add i32 %13, -2
  %3045 = zext i32 %3044 to i64
  %3046 = zext i32 %13 to i64
  %3047 = add nuw i32 %5, 1
  %3048 = icmp eq i32 %13, 1
  br label %3049

3049:                                             ; preds = %3041, %3183
  %3050 = phi i64 [ 0, %3041 ], [ %3134, %3183 ]
  %3051 = phi i32 [ 0, %3041 ], [ %3135, %3183 ]
  %3052 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3042, label %3053, label %3122

3053:                                             ; preds = %3049, %3112
  %3054 = phi i32 [ %3121, %3112 ], [ 0, %3049 ]
  %3055 = phi i64 [ %3063, %3112 ], [ %3046, %3049 ]
  %3056 = phi i64 [ %3120, %3112 ], [ %3045, %3049 ]
  %3057 = phi i32 [ %3118, %3112 ], [ %3052, %3049 ]
  %3058 = sub i32 %3044, %3054
  %3059 = tail call i32 @llvm.smin.i32(i32 %3058, i32 0)
  %3060 = sub i32 %3058, %3059
  %3061 = zext i32 %3060 to i64
  %3062 = add nuw nsw i64 %3061, 1
  %3063 = add nsw i64 %3055, -1
  %3064 = icmp ult i32 %3060, 31
  br i1 %3064, label %3100, label %3065

3065:                                             ; preds = %3053
  %3066 = and i64 %3062, 8589934560
  %3067 = sub i64 %3056, %3066
  br label %3068

3068:                                             ; preds = %3068, %3065
  %3069 = phi i64 [ 0, %3065 ], [ %3092, %3068 ]
  %3070 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3088, %3068 ]
  %3071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3089, %3068 ]
  %3072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3090, %3068 ]
  %3073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3091, %3068 ]
  %3074 = sub i64 %3056, %3069
  %3075 = getelementptr inbounds i32, ptr %9, i64 %3074
  %3076 = getelementptr inbounds i32, ptr %3075, i64 -7
  %3077 = load <8 x i32>, ptr %3076, align 4, !tbaa !5
  %3078 = shufflevector <8 x i32> %3077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3079 = getelementptr inbounds i32, ptr %3075, i64 -15
  %3080 = load <8 x i32>, ptr %3079, align 4, !tbaa !5
  %3081 = shufflevector <8 x i32> %3080, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3082 = getelementptr inbounds i32, ptr %3075, i64 -23
  %3083 = load <8 x i32>, ptr %3082, align 4, !tbaa !5
  %3084 = shufflevector <8 x i32> %3083, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3085 = getelementptr inbounds i32, ptr %3075, i64 -31
  %3086 = load <8 x i32>, ptr %3085, align 4, !tbaa !5
  %3087 = shufflevector <8 x i32> %3086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3088 = mul <8 x i32> %3078, %3070
  %3089 = mul <8 x i32> %3081, %3071
  %3090 = mul <8 x i32> %3084, %3072
  %3091 = mul <8 x i32> %3087, %3073
  %3092 = add nuw i64 %3069, 32
  %3093 = icmp eq i64 %3092, %3066
  br i1 %3093, label %3094, label %3068, !llvm.loop !1224

3094:                                             ; preds = %3068
  %3095 = mul <8 x i32> %3089, %3088
  %3096 = mul <8 x i32> %3090, %3095
  %3097 = mul <8 x i32> %3091, %3096
  %3098 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3097)
  %3099 = icmp eq i64 %3062, %3066
  br i1 %3099, label %3112, label %3100

3100:                                             ; preds = %3053, %3094
  %3101 = phi i64 [ %3056, %3053 ], [ %3067, %3094 ]
  %3102 = phi i32 [ 1, %3053 ], [ %3098, %3094 ]
  br label %3103

3103:                                             ; preds = %3100, %3103
  %3104 = phi i64 [ %3109, %3103 ], [ %3101, %3100 ]
  %3105 = phi i32 [ %3108, %3103 ], [ %3102, %3100 ]
  %3106 = getelementptr inbounds i32, ptr %9, i64 %3104
  %3107 = load i32, ptr %3106, align 4, !tbaa !5
  %3108 = mul nsw i32 %3107, %3105
  %3109 = add nsw i64 %3104, -1
  %3110 = trunc i64 %3104 to i32
  %3111 = icmp sgt i32 %3110, 0
  br i1 %3111, label %3103, label %3112, !llvm.loop !1225

3112:                                             ; preds = %3103, %3094
  %3113 = phi i32 [ %3098, %3094 ], [ %3108, %3103 ]
  %3114 = and i64 %3063, 4294967295
  %3115 = getelementptr inbounds i32, ptr %6, i64 %3114
  %3116 = load i32, ptr %3115, align 4, !tbaa !5
  %3117 = mul nsw i32 %3116, %3113
  %3118 = add nsw i32 %3117, %3057
  %3119 = icmp sgt i64 %3055, 2
  %3120 = add nsw i64 %3056, -1
  %3121 = add i32 %3054, 1
  br i1 %3119, label %3053, label %3122, !llvm.loop !1226

3122:                                             ; preds = %3112, %3049
  %3123 = phi i32 [ %3052, %3049 ], [ %3118, %3112 ]
  %3124 = sext i32 %3123 to i64
  %3125 = getelementptr inbounds double, ptr %2, i64 %3124
  %3126 = load double, ptr %3125, align 8, !tbaa !18
  %3127 = getelementptr inbounds float, ptr %3018, i64 %3124
  %3128 = load float, ptr %3127, align 4, !tbaa !162
  %3129 = fptosi float %3128 to i64
  %3130 = sitofp i64 %3050 to double
  %3131 = sitofp i64 %3129 to double
  %3132 = fmul fast double %3126, %3131
  %3133 = fadd fast double %3132, %3130
  %3134 = fptosi double %3133 to i64
  %3135 = add nuw nsw i32 %3051, 1
  br i1 %3043, label %3136, label %3183

3136:                                             ; preds = %3122
  %3137 = load i32, ptr %4, align 4, !tbaa !5
  %3138 = load i32, ptr %12, align 4, !tbaa !5
  %3139 = add nsw i32 %3138, -1
  %3140 = icmp slt i32 %3137, %3139
  br i1 %3140, label %3160, label %3141

3141:                                             ; preds = %3136
  %3142 = icmp eq i32 %3137, %3139
  br i1 %3142, label %3143, label %3176

3143:                                             ; preds = %3141
  store i32 0, ptr %4, align 4, !tbaa !5
  %3144 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3144, ptr %6, align 4, !tbaa !5
  br i1 %3048, label %3183, label %3145

3145:                                             ; preds = %3143, %3170
  %3146 = phi i64 [ %3174, %3170 ], [ 1, %3143 ]
  %3147 = getelementptr inbounds i32, ptr %4, i64 %3146
  %3148 = load i32, ptr %3147, align 4, !tbaa !5
  %3149 = getelementptr inbounds i32, ptr %12, i64 %3146
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = add nsw i32 %3150, -1
  %3152 = icmp slt i32 %3148, %3151
  br i1 %3152, label %3153, label %3168

3153:                                             ; preds = %3145
  br i1 %3140, label %3160, label %3154

3154:                                             ; preds = %3153
  %3155 = getelementptr inbounds i32, ptr %7, i64 %3146
  %3156 = load i32, ptr %3155, align 4, !tbaa !5
  %3157 = getelementptr inbounds i32, ptr %6, i64 %3146
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = add nsw i32 %3158, %3156
  store i32 %3159, ptr %3157, align 4, !tbaa !5
  br label %3178

3160:                                             ; preds = %3136, %3153
  %3161 = phi i32 [ %3148, %3153 ], [ %3137, %3136 ]
  %3162 = phi ptr [ %3147, %3153 ], [ %4, %3136 ]
  %3163 = phi i64 [ %3146, %3153 ], [ 0, %3136 ]
  %3164 = add nsw i32 %3161, 1
  store i32 %3164, ptr %3162, align 4, !tbaa !5
  %3165 = getelementptr inbounds i32, ptr %7, i64 %3163
  %3166 = load i32, ptr %3165, align 4, !tbaa !5
  %3167 = getelementptr inbounds i32, ptr %6, i64 %3163
  br label %3178

3168:                                             ; preds = %3145
  %3169 = icmp eq i32 %3148, %3151
  br i1 %3169, label %3170, label %3176

3170:                                             ; preds = %3168
  store i32 0, ptr %3147, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %8, i64 %3146
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = getelementptr inbounds i32, ptr %6, i64 %3146
  store i32 %3172, ptr %3173, align 4, !tbaa !5
  %3174 = add nuw nsw i64 %3146, 1
  %3175 = icmp eq i64 %3174, %3046
  br i1 %3175, label %3183, label %3145, !llvm.loop !1227

3176:                                             ; preds = %3141, %3168
  store i64 %3134, ptr %3020, align 8, !tbaa !120
  %3177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3178:                                             ; preds = %3154, %3160
  %3179 = phi ptr [ %3167, %3160 ], [ %3147, %3154 ]
  %3180 = phi i32 [ %3166, %3160 ], [ 1, %3154 ]
  %3181 = load i32, ptr %3179, align 4, !tbaa !5
  %3182 = add nsw i32 %3181, %3180
  store i32 %3182, ptr %3179, align 4, !tbaa !5
  br label %3183

3183:                                             ; preds = %3170, %3178, %3143, %3122
  %3184 = icmp eq i32 %3135, %5
  br i1 %3184, label %5402, label %3049, !llvm.loop !1228

3185:                                             ; preds = %3032, %3323
  %3186 = phi i64 [ 0, %3032 ], [ %3271, %3323 ]
  %3187 = phi i32 [ 0, %3032 ], [ %3272, %3323 ]
  %3188 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3033, label %3189, label %3258

3189:                                             ; preds = %3185, %3248
  %3190 = phi i32 [ %3257, %3248 ], [ 0, %3185 ]
  %3191 = phi i64 [ %3199, %3248 ], [ %3037, %3185 ]
  %3192 = phi i64 [ %3256, %3248 ], [ %3036, %3185 ]
  %3193 = phi i32 [ %3254, %3248 ], [ %3188, %3185 ]
  %3194 = sub i32 %3035, %3190
  %3195 = tail call i32 @llvm.smin.i32(i32 %3194, i32 0)
  %3196 = sub i32 %3194, %3195
  %3197 = zext i32 %3196 to i64
  %3198 = add nuw nsw i64 %3197, 1
  %3199 = add nsw i64 %3191, -1
  %3200 = icmp ult i32 %3196, 31
  br i1 %3200, label %3236, label %3201

3201:                                             ; preds = %3189
  %3202 = and i64 %3198, 8589934560
  %3203 = sub i64 %3192, %3202
  br label %3204

3204:                                             ; preds = %3204, %3201
  %3205 = phi i64 [ 0, %3201 ], [ %3228, %3204 ]
  %3206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3224, %3204 ]
  %3207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3225, %3204 ]
  %3208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3226, %3204 ]
  %3209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3227, %3204 ]
  %3210 = sub i64 %3192, %3205
  %3211 = getelementptr inbounds i32, ptr %11, i64 %3210
  %3212 = getelementptr inbounds i32, ptr %3211, i64 -7
  %3213 = load <8 x i32>, ptr %3212, align 4, !tbaa !5
  %3214 = shufflevector <8 x i32> %3213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3215 = getelementptr inbounds i32, ptr %3211, i64 -15
  %3216 = load <8 x i32>, ptr %3215, align 4, !tbaa !5
  %3217 = shufflevector <8 x i32> %3216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3218 = getelementptr inbounds i32, ptr %3211, i64 -23
  %3219 = load <8 x i32>, ptr %3218, align 4, !tbaa !5
  %3220 = shufflevector <8 x i32> %3219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3221 = getelementptr inbounds i32, ptr %3211, i64 -31
  %3222 = load <8 x i32>, ptr %3221, align 4, !tbaa !5
  %3223 = shufflevector <8 x i32> %3222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3224 = mul <8 x i32> %3214, %3206
  %3225 = mul <8 x i32> %3217, %3207
  %3226 = mul <8 x i32> %3220, %3208
  %3227 = mul <8 x i32> %3223, %3209
  %3228 = add nuw i64 %3205, 32
  %3229 = icmp eq i64 %3228, %3202
  br i1 %3229, label %3230, label %3204, !llvm.loop !1229

3230:                                             ; preds = %3204
  %3231 = mul <8 x i32> %3225, %3224
  %3232 = mul <8 x i32> %3226, %3231
  %3233 = mul <8 x i32> %3227, %3232
  %3234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3233)
  %3235 = icmp eq i64 %3198, %3202
  br i1 %3235, label %3248, label %3236

3236:                                             ; preds = %3189, %3230
  %3237 = phi i64 [ %3192, %3189 ], [ %3203, %3230 ]
  %3238 = phi i32 [ 1, %3189 ], [ %3234, %3230 ]
  br label %3239

3239:                                             ; preds = %3236, %3239
  %3240 = phi i64 [ %3245, %3239 ], [ %3237, %3236 ]
  %3241 = phi i32 [ %3244, %3239 ], [ %3238, %3236 ]
  %3242 = getelementptr inbounds i32, ptr %11, i64 %3240
  %3243 = load i32, ptr %3242, align 4, !tbaa !5
  %3244 = mul nsw i32 %3243, %3241
  %3245 = add nsw i64 %3240, -1
  %3246 = trunc i64 %3240 to i32
  %3247 = icmp sgt i32 %3246, 0
  br i1 %3247, label %3239, label %3248, !llvm.loop !1230

3248:                                             ; preds = %3239, %3230
  %3249 = phi i32 [ %3234, %3230 ], [ %3244, %3239 ]
  %3250 = and i64 %3199, 4294967295
  %3251 = getelementptr inbounds i32, ptr %6, i64 %3250
  %3252 = load i32, ptr %3251, align 4, !tbaa !5
  %3253 = mul nsw i32 %3252, %3249
  %3254 = add nsw i32 %3253, %3193
  %3255 = icmp sgt i64 %3191, 2
  %3256 = add nsw i64 %3192, -1
  %3257 = add i32 %3190, 1
  br i1 %3255, label %3189, label %3258, !llvm.loop !1231

3258:                                             ; preds = %3248, %3185
  %3259 = phi i32 [ %3188, %3185 ], [ %3254, %3248 ]
  %3260 = icmp slt i32 %3259, %5
  br i1 %3260, label %3263, label %3261

3261:                                             ; preds = %3258
  %3262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

3263:                                             ; preds = %3258
  %3264 = sext i32 %3259 to i64
  %3265 = getelementptr inbounds float, ptr %3018, i64 %3264
  %3266 = load float, ptr %3265, align 4, !tbaa !162
  %3267 = fptosi float %3266 to i64
  %3268 = sitofp i64 %3186 to double
  %3269 = sitofp i64 %3267 to double
  %3270 = fadd fast double %3268, %3269
  %3271 = fptosi double %3270 to i64
  store i64 %3271, ptr %3020, align 8, !tbaa !120
  %3272 = add nuw nsw i32 %3187, 1
  br i1 %3034, label %3273, label %3323

3273:                                             ; preds = %3263
  %3274 = load i32, ptr %4, align 4, !tbaa !5
  %3275 = load i32, ptr %12, align 4, !tbaa !5
  %3276 = add nsw i32 %3275, -1
  %3277 = icmp slt i32 %3274, %3276
  br i1 %3277, label %3300, label %3278

3278:                                             ; preds = %3273
  %3279 = icmp eq i32 %3274, %3276
  br i1 %3279, label %3280, label %3316

3280:                                             ; preds = %3278
  store i32 0, ptr %4, align 4, !tbaa !5
  %3281 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3281, ptr %6, align 4, !tbaa !5
  br i1 %3039, label %3323, label %3282

3282:                                             ; preds = %3280, %3310
  %3283 = phi i64 [ %3314, %3310 ], [ 1, %3280 ]
  %3284 = getelementptr inbounds i32, ptr %4, i64 %3283
  %3285 = load i32, ptr %3284, align 4, !tbaa !5
  %3286 = getelementptr inbounds i32, ptr %12, i64 %3283
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = add nsw i32 %3287, -1
  %3289 = icmp slt i32 %3285, %3288
  br i1 %3289, label %3290, label %3308

3290:                                             ; preds = %3282
  br i1 %3277, label %3300, label %3291

3291:                                             ; preds = %3290
  %3292 = shl i64 %3283, 32
  %3293 = add i64 %3292, -4294967296
  %3294 = ashr exact i64 %3293, 32
  %3295 = getelementptr inbounds i32, ptr %7, i64 %3294
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = getelementptr inbounds i32, ptr %6, i64 %3283
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = add nsw i32 %3298, %3296
  store i32 %3299, ptr %3297, align 4, !tbaa !5
  br label %3318

3300:                                             ; preds = %3273, %3290
  %3301 = phi i32 [ %3285, %3290 ], [ %3274, %3273 ]
  %3302 = phi ptr [ %3284, %3290 ], [ %4, %3273 ]
  %3303 = phi i64 [ %3283, %3290 ], [ 0, %3273 ]
  %3304 = add nsw i32 %3301, 1
  store i32 %3304, ptr %3302, align 4, !tbaa !5
  %3305 = getelementptr inbounds i32, ptr %7, i64 %3303
  %3306 = load i32, ptr %3305, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %6, i64 %3303
  br label %3318

3308:                                             ; preds = %3282
  %3309 = icmp eq i32 %3285, %3288
  br i1 %3309, label %3310, label %3316

3310:                                             ; preds = %3308
  store i32 0, ptr %3284, align 4, !tbaa !5
  %3311 = getelementptr inbounds i32, ptr %8, i64 %3283
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = getelementptr inbounds i32, ptr %6, i64 %3283
  store i32 %3312, ptr %3313, align 4, !tbaa !5
  %3314 = add nuw nsw i64 %3283, 1
  %3315 = icmp eq i64 %3314, %3037
  br i1 %3315, label %3323, label %3282, !llvm.loop !1232

3316:                                             ; preds = %3278, %3308
  %3317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3318:                                             ; preds = %3291, %3300
  %3319 = phi ptr [ %3307, %3300 ], [ %3284, %3291 ]
  %3320 = phi i32 [ %3306, %3300 ], [ 1, %3291 ]
  %3321 = load i32, ptr %3319, align 4, !tbaa !5
  %3322 = add nsw i32 %3321, %3320
  store i32 %3322, ptr %3319, align 4, !tbaa !5
  br label %3323

3323:                                             ; preds = %3310, %3318, %3280, %3263
  %3324 = icmp eq i32 %3272, %5
  br i1 %3324, label %5406, label %3185, !llvm.loop !1233

3325:                                             ; preds = %3025
  %3326 = getelementptr inbounds i32, ptr %3, i64 %19
  %3327 = load i32, ptr %3326, align 4, !tbaa !5
  %3328 = icmp eq i32 %3327, 0
  %3329 = icmp sgt i32 %5, 0
  br i1 %3328, label %3339, label %3330

3330:                                             ; preds = %3325
  br i1 %3329, label %3331, label %5406

3331:                                             ; preds = %3330
  %3332 = icmp sgt i32 %13, 1
  %3333 = icmp sgt i32 %13, 0
  %3334 = add i32 %13, -2
  %3335 = zext i32 %3334 to i64
  %3336 = zext i32 %13 to i64
  %3337 = add nuw i32 %5, 1
  %3338 = icmp eq i32 %13, 1
  br label %3478

3339:                                             ; preds = %3325
  br i1 %3329, label %3340, label %5406

3340:                                             ; preds = %3339
  %3341 = icmp sgt i32 %13, 1
  %3342 = icmp sgt i32 %13, 0
  %3343 = add i32 %13, -2
  %3344 = zext i32 %3343 to i64
  %3345 = zext i32 %13 to i64
  %3346 = add nuw i32 %5, 1
  %3347 = icmp eq i32 %13, 1
  br label %3348

3348:                                             ; preds = %3340, %3476
  %3349 = phi i64 [ 0, %3340 ], [ %3427, %3476 ]
  %3350 = phi i32 [ 0, %3340 ], [ %3428, %3476 ]
  %3351 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3341, label %3352, label %3421

3352:                                             ; preds = %3348, %3411
  %3353 = phi i32 [ %3420, %3411 ], [ 0, %3348 ]
  %3354 = phi i64 [ %3362, %3411 ], [ %3345, %3348 ]
  %3355 = phi i64 [ %3419, %3411 ], [ %3344, %3348 ]
  %3356 = phi i32 [ %3417, %3411 ], [ %3351, %3348 ]
  %3357 = sub i32 %3343, %3353
  %3358 = tail call i32 @llvm.smin.i32(i32 %3357, i32 0)
  %3359 = sub i32 %3357, %3358
  %3360 = zext i32 %3359 to i64
  %3361 = add nuw nsw i64 %3360, 1
  %3362 = add nsw i64 %3354, -1
  %3363 = icmp ult i32 %3359, 31
  br i1 %3363, label %3399, label %3364

3364:                                             ; preds = %3352
  %3365 = and i64 %3361, 8589934560
  %3366 = sub i64 %3355, %3365
  br label %3367

3367:                                             ; preds = %3367, %3364
  %3368 = phi i64 [ 0, %3364 ], [ %3391, %3367 ]
  %3369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3387, %3367 ]
  %3370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3388, %3367 ]
  %3371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3389, %3367 ]
  %3372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3390, %3367 ]
  %3373 = sub i64 %3355, %3368
  %3374 = getelementptr inbounds i32, ptr %9, i64 %3373
  %3375 = getelementptr inbounds i32, ptr %3374, i64 -7
  %3376 = load <8 x i32>, ptr %3375, align 4, !tbaa !5
  %3377 = shufflevector <8 x i32> %3376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3378 = getelementptr inbounds i32, ptr %3374, i64 -15
  %3379 = load <8 x i32>, ptr %3378, align 4, !tbaa !5
  %3380 = shufflevector <8 x i32> %3379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3381 = getelementptr inbounds i32, ptr %3374, i64 -23
  %3382 = load <8 x i32>, ptr %3381, align 4, !tbaa !5
  %3383 = shufflevector <8 x i32> %3382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3384 = getelementptr inbounds i32, ptr %3374, i64 -31
  %3385 = load <8 x i32>, ptr %3384, align 4, !tbaa !5
  %3386 = shufflevector <8 x i32> %3385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3387 = mul <8 x i32> %3377, %3369
  %3388 = mul <8 x i32> %3380, %3370
  %3389 = mul <8 x i32> %3383, %3371
  %3390 = mul <8 x i32> %3386, %3372
  %3391 = add nuw i64 %3368, 32
  %3392 = icmp eq i64 %3391, %3365
  br i1 %3392, label %3393, label %3367, !llvm.loop !1234

3393:                                             ; preds = %3367
  %3394 = mul <8 x i32> %3388, %3387
  %3395 = mul <8 x i32> %3389, %3394
  %3396 = mul <8 x i32> %3390, %3395
  %3397 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3396)
  %3398 = icmp eq i64 %3361, %3365
  br i1 %3398, label %3411, label %3399

3399:                                             ; preds = %3352, %3393
  %3400 = phi i64 [ %3355, %3352 ], [ %3366, %3393 ]
  %3401 = phi i32 [ 1, %3352 ], [ %3397, %3393 ]
  br label %3402

3402:                                             ; preds = %3399, %3402
  %3403 = phi i64 [ %3408, %3402 ], [ %3400, %3399 ]
  %3404 = phi i32 [ %3407, %3402 ], [ %3401, %3399 ]
  %3405 = getelementptr inbounds i32, ptr %9, i64 %3403
  %3406 = load i32, ptr %3405, align 4, !tbaa !5
  %3407 = mul nsw i32 %3406, %3404
  %3408 = add nsw i64 %3403, -1
  %3409 = trunc i64 %3403 to i32
  %3410 = icmp sgt i32 %3409, 0
  br i1 %3410, label %3402, label %3411, !llvm.loop !1235

3411:                                             ; preds = %3402, %3393
  %3412 = phi i32 [ %3397, %3393 ], [ %3407, %3402 ]
  %3413 = and i64 %3362, 4294967295
  %3414 = getelementptr inbounds i32, ptr %6, i64 %3413
  %3415 = load i32, ptr %3414, align 4, !tbaa !5
  %3416 = mul nsw i32 %3415, %3412
  %3417 = add nsw i32 %3416, %3356
  %3418 = icmp sgt i64 %3354, 2
  %3419 = add nsw i64 %3355, -1
  %3420 = add i32 %3353, 1
  br i1 %3418, label %3352, label %3421, !llvm.loop !1236

3421:                                             ; preds = %3411, %3348
  %3422 = phi i32 [ %3351, %3348 ], [ %3417, %3411 ]
  %3423 = sext i32 %3422 to i64
  %3424 = getelementptr inbounds float, ptr %3018, i64 %3423
  %3425 = load float, ptr %3424, align 4, !tbaa !162
  %3426 = fptosi float %3425 to i64
  %3427 = add nsw i64 %3349, %3426
  %3428 = add nuw nsw i32 %3350, 1
  br i1 %3342, label %3429, label %3476

3429:                                             ; preds = %3421
  %3430 = load i32, ptr %4, align 4, !tbaa !5
  %3431 = load i32, ptr %12, align 4, !tbaa !5
  %3432 = add nsw i32 %3431, -1
  %3433 = icmp slt i32 %3430, %3432
  br i1 %3433, label %3453, label %3434

3434:                                             ; preds = %3429
  %3435 = icmp eq i32 %3430, %3432
  br i1 %3435, label %3436, label %3469

3436:                                             ; preds = %3434
  store i32 0, ptr %4, align 4, !tbaa !5
  %3437 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3437, ptr %6, align 4, !tbaa !5
  br i1 %3347, label %3476, label %3438

3438:                                             ; preds = %3436, %3463
  %3439 = phi i64 [ %3467, %3463 ], [ 1, %3436 ]
  %3440 = getelementptr inbounds i32, ptr %4, i64 %3439
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = getelementptr inbounds i32, ptr %12, i64 %3439
  %3443 = load i32, ptr %3442, align 4, !tbaa !5
  %3444 = add nsw i32 %3443, -1
  %3445 = icmp slt i32 %3441, %3444
  br i1 %3445, label %3446, label %3461

3446:                                             ; preds = %3438
  br i1 %3433, label %3453, label %3447

3447:                                             ; preds = %3446
  %3448 = getelementptr inbounds i32, ptr %7, i64 %3439
  %3449 = load i32, ptr %3448, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %6, i64 %3439
  %3451 = load i32, ptr %3450, align 4, !tbaa !5
  %3452 = add nsw i32 %3451, %3449
  store i32 %3452, ptr %3450, align 4, !tbaa !5
  br label %3471

3453:                                             ; preds = %3429, %3446
  %3454 = phi i32 [ %3441, %3446 ], [ %3430, %3429 ]
  %3455 = phi ptr [ %3440, %3446 ], [ %4, %3429 ]
  %3456 = phi i64 [ %3439, %3446 ], [ 0, %3429 ]
  %3457 = add nsw i32 %3454, 1
  store i32 %3457, ptr %3455, align 4, !tbaa !5
  %3458 = getelementptr inbounds i32, ptr %7, i64 %3456
  %3459 = load i32, ptr %3458, align 4, !tbaa !5
  %3460 = getelementptr inbounds i32, ptr %6, i64 %3456
  br label %3471

3461:                                             ; preds = %3438
  %3462 = icmp eq i32 %3441, %3444
  br i1 %3462, label %3463, label %3469

3463:                                             ; preds = %3461
  store i32 0, ptr %3440, align 4, !tbaa !5
  %3464 = getelementptr inbounds i32, ptr %8, i64 %3439
  %3465 = load i32, ptr %3464, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %6, i64 %3439
  store i32 %3465, ptr %3466, align 4, !tbaa !5
  %3467 = add nuw nsw i64 %3439, 1
  %3468 = icmp eq i64 %3467, %3345
  br i1 %3468, label %3476, label %3438, !llvm.loop !1237

3469:                                             ; preds = %3434, %3461
  store i64 %3427, ptr %3020, align 8, !tbaa !120
  %3470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3471:                                             ; preds = %3447, %3453
  %3472 = phi ptr [ %3460, %3453 ], [ %3440, %3447 ]
  %3473 = phi i32 [ %3459, %3453 ], [ 1, %3447 ]
  %3474 = load i32, ptr %3472, align 4, !tbaa !5
  %3475 = add nsw i32 %3474, %3473
  store i32 %3475, ptr %3472, align 4, !tbaa !5
  br label %3476

3476:                                             ; preds = %3463, %3471, %3436, %3421
  %3477 = icmp eq i32 %3428, %5
  br i1 %3477, label %5403, label %3348, !llvm.loop !1238

3478:                                             ; preds = %3331, %3613
  %3479 = phi i64 [ 0, %3331 ], [ %3561, %3613 ]
  %3480 = phi i32 [ 0, %3331 ], [ %3562, %3613 ]
  %3481 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3332, label %3482, label %3551

3482:                                             ; preds = %3478, %3541
  %3483 = phi i32 [ %3550, %3541 ], [ 0, %3478 ]
  %3484 = phi i64 [ %3492, %3541 ], [ %3336, %3478 ]
  %3485 = phi i64 [ %3549, %3541 ], [ %3335, %3478 ]
  %3486 = phi i32 [ %3547, %3541 ], [ %3481, %3478 ]
  %3487 = sub i32 %3334, %3483
  %3488 = tail call i32 @llvm.smin.i32(i32 %3487, i32 0)
  %3489 = sub i32 %3487, %3488
  %3490 = zext i32 %3489 to i64
  %3491 = add nuw nsw i64 %3490, 1
  %3492 = add nsw i64 %3484, -1
  %3493 = icmp ult i32 %3489, 31
  br i1 %3493, label %3529, label %3494

3494:                                             ; preds = %3482
  %3495 = and i64 %3491, 8589934560
  %3496 = sub i64 %3485, %3495
  br label %3497

3497:                                             ; preds = %3497, %3494
  %3498 = phi i64 [ 0, %3494 ], [ %3521, %3497 ]
  %3499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3517, %3497 ]
  %3500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3518, %3497 ]
  %3501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3519, %3497 ]
  %3502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3520, %3497 ]
  %3503 = sub i64 %3485, %3498
  %3504 = getelementptr inbounds i32, ptr %11, i64 %3503
  %3505 = getelementptr inbounds i32, ptr %3504, i64 -7
  %3506 = load <8 x i32>, ptr %3505, align 4, !tbaa !5
  %3507 = shufflevector <8 x i32> %3506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3508 = getelementptr inbounds i32, ptr %3504, i64 -15
  %3509 = load <8 x i32>, ptr %3508, align 4, !tbaa !5
  %3510 = shufflevector <8 x i32> %3509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3511 = getelementptr inbounds i32, ptr %3504, i64 -23
  %3512 = load <8 x i32>, ptr %3511, align 4, !tbaa !5
  %3513 = shufflevector <8 x i32> %3512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3514 = getelementptr inbounds i32, ptr %3504, i64 -31
  %3515 = load <8 x i32>, ptr %3514, align 4, !tbaa !5
  %3516 = shufflevector <8 x i32> %3515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3517 = mul <8 x i32> %3507, %3499
  %3518 = mul <8 x i32> %3510, %3500
  %3519 = mul <8 x i32> %3513, %3501
  %3520 = mul <8 x i32> %3516, %3502
  %3521 = add nuw i64 %3498, 32
  %3522 = icmp eq i64 %3521, %3495
  br i1 %3522, label %3523, label %3497, !llvm.loop !1239

3523:                                             ; preds = %3497
  %3524 = mul <8 x i32> %3518, %3517
  %3525 = mul <8 x i32> %3519, %3524
  %3526 = mul <8 x i32> %3520, %3525
  %3527 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3526)
  %3528 = icmp eq i64 %3491, %3495
  br i1 %3528, label %3541, label %3529

3529:                                             ; preds = %3482, %3523
  %3530 = phi i64 [ %3485, %3482 ], [ %3496, %3523 ]
  %3531 = phi i32 [ 1, %3482 ], [ %3527, %3523 ]
  br label %3532

3532:                                             ; preds = %3529, %3532
  %3533 = phi i64 [ %3538, %3532 ], [ %3530, %3529 ]
  %3534 = phi i32 [ %3537, %3532 ], [ %3531, %3529 ]
  %3535 = getelementptr inbounds i32, ptr %11, i64 %3533
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = mul nsw i32 %3536, %3534
  %3538 = add nsw i64 %3533, -1
  %3539 = trunc i64 %3533 to i32
  %3540 = icmp sgt i32 %3539, 0
  br i1 %3540, label %3532, label %3541, !llvm.loop !1240

3541:                                             ; preds = %3532, %3523
  %3542 = phi i32 [ %3527, %3523 ], [ %3537, %3532 ]
  %3543 = and i64 %3492, 4294967295
  %3544 = getelementptr inbounds i32, ptr %6, i64 %3543
  %3545 = load i32, ptr %3544, align 4, !tbaa !5
  %3546 = mul nsw i32 %3545, %3542
  %3547 = add nsw i32 %3546, %3486
  %3548 = icmp sgt i64 %3484, 2
  %3549 = add nsw i64 %3485, -1
  %3550 = add i32 %3483, 1
  br i1 %3548, label %3482, label %3551, !llvm.loop !1241

3551:                                             ; preds = %3541, %3478
  %3552 = phi i32 [ %3481, %3478 ], [ %3547, %3541 ]
  %3553 = icmp slt i32 %3552, %5
  br i1 %3553, label %3556, label %3554

3554:                                             ; preds = %3551
  %3555 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

3556:                                             ; preds = %3551
  %3557 = sext i32 %3552 to i64
  %3558 = getelementptr inbounds float, ptr %3018, i64 %3557
  %3559 = load float, ptr %3558, align 4, !tbaa !162
  %3560 = fptosi float %3559 to i64
  %3561 = add nsw i64 %3479, %3560
  store i64 %3561, ptr %3020, align 8, !tbaa !120
  %3562 = add nuw nsw i32 %3480, 1
  br i1 %3333, label %3563, label %3613

3563:                                             ; preds = %3556
  %3564 = load i32, ptr %4, align 4, !tbaa !5
  %3565 = load i32, ptr %12, align 4, !tbaa !5
  %3566 = add nsw i32 %3565, -1
  %3567 = icmp slt i32 %3564, %3566
  br i1 %3567, label %3590, label %3568

3568:                                             ; preds = %3563
  %3569 = icmp eq i32 %3564, %3566
  br i1 %3569, label %3570, label %3606

3570:                                             ; preds = %3568
  store i32 0, ptr %4, align 4, !tbaa !5
  %3571 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3571, ptr %6, align 4, !tbaa !5
  br i1 %3338, label %3613, label %3572

3572:                                             ; preds = %3570, %3600
  %3573 = phi i64 [ %3604, %3600 ], [ 1, %3570 ]
  %3574 = getelementptr inbounds i32, ptr %4, i64 %3573
  %3575 = load i32, ptr %3574, align 4, !tbaa !5
  %3576 = getelementptr inbounds i32, ptr %12, i64 %3573
  %3577 = load i32, ptr %3576, align 4, !tbaa !5
  %3578 = add nsw i32 %3577, -1
  %3579 = icmp slt i32 %3575, %3578
  br i1 %3579, label %3580, label %3598

3580:                                             ; preds = %3572
  br i1 %3567, label %3590, label %3581

3581:                                             ; preds = %3580
  %3582 = shl i64 %3573, 32
  %3583 = add i64 %3582, -4294967296
  %3584 = ashr exact i64 %3583, 32
  %3585 = getelementptr inbounds i32, ptr %7, i64 %3584
  %3586 = load i32, ptr %3585, align 4, !tbaa !5
  %3587 = getelementptr inbounds i32, ptr %6, i64 %3573
  %3588 = load i32, ptr %3587, align 4, !tbaa !5
  %3589 = add nsw i32 %3588, %3586
  store i32 %3589, ptr %3587, align 4, !tbaa !5
  br label %3608

3590:                                             ; preds = %3563, %3580
  %3591 = phi i32 [ %3575, %3580 ], [ %3564, %3563 ]
  %3592 = phi ptr [ %3574, %3580 ], [ %4, %3563 ]
  %3593 = phi i64 [ %3573, %3580 ], [ 0, %3563 ]
  %3594 = add nsw i32 %3591, 1
  store i32 %3594, ptr %3592, align 4, !tbaa !5
  %3595 = getelementptr inbounds i32, ptr %7, i64 %3593
  %3596 = load i32, ptr %3595, align 4, !tbaa !5
  %3597 = getelementptr inbounds i32, ptr %6, i64 %3593
  br label %3608

3598:                                             ; preds = %3572
  %3599 = icmp eq i32 %3575, %3578
  br i1 %3599, label %3600, label %3606

3600:                                             ; preds = %3598
  store i32 0, ptr %3574, align 4, !tbaa !5
  %3601 = getelementptr inbounds i32, ptr %8, i64 %3573
  %3602 = load i32, ptr %3601, align 4, !tbaa !5
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3573
  store i32 %3602, ptr %3603, align 4, !tbaa !5
  %3604 = add nuw nsw i64 %3573, 1
  %3605 = icmp eq i64 %3604, %3336
  br i1 %3605, label %3613, label %3572, !llvm.loop !1242

3606:                                             ; preds = %3568, %3598
  %3607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3608:                                             ; preds = %3581, %3590
  %3609 = phi ptr [ %3597, %3590 ], [ %3574, %3581 ]
  %3610 = phi i32 [ %3596, %3590 ], [ 1, %3581 ]
  %3611 = load i32, ptr %3609, align 4, !tbaa !5
  %3612 = add nsw i32 %3611, %3610
  store i32 %3612, ptr %3609, align 4, !tbaa !5
  br label %3613

3613:                                             ; preds = %3600, %3608, %3570, %3556
  %3614 = icmp eq i32 %3562, %5
  br i1 %3614, label %5406, label %3478, !llvm.loop !1243

3615:                                             ; preds = %3025
  %3616 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1742, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

3617:                                             ; preds = %18
  %3618 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3619 = load ptr, ptr %3618, align 8, !tbaa !9
  %3620 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3621 = load ptr, ptr %3620, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3621, align 8, !tbaa !18
  %3622 = icmp eq i32 %13, 0
  br i1 %3622, label %3623, label %3626

3623:                                             ; preds = %3617
  %3624 = load float, ptr %3619, align 4, !tbaa !162
  %3625 = fpext float %3624 to double
  store double %3625, ptr %3621, align 8, !tbaa !18
  br label %5406

3626:                                             ; preds = %3617
  switch i32 %1, label %4210 [
    i32 1, label %3627
    i32 0, label %3920
  ]

3627:                                             ; preds = %3626
  %3628 = getelementptr inbounds i32, ptr %3, i64 %19
  %3629 = load i32, ptr %3628, align 4, !tbaa !5
  %3630 = icmp eq i32 %3629, 0
  %3631 = icmp sgt i32 %5, 0
  br i1 %3630, label %3641, label %3632

3632:                                             ; preds = %3627
  br i1 %3631, label %3633, label %5406

3633:                                             ; preds = %3632
  %3634 = icmp sgt i32 %13, 1
  %3635 = icmp sgt i32 %13, 0
  %3636 = add i32 %13, -2
  %3637 = zext i32 %3636 to i64
  %3638 = zext i32 %13 to i64
  %3639 = add nuw i32 %5, 1
  %3640 = icmp eq i32 %13, 1
  br label %3783

3641:                                             ; preds = %3627
  br i1 %3631, label %3642, label %5406

3642:                                             ; preds = %3641
  %3643 = icmp sgt i32 %13, 1
  %3644 = icmp sgt i32 %13, 0
  %3645 = add i32 %13, -2
  %3646 = zext i32 %3645 to i64
  %3647 = zext i32 %13 to i64
  %3648 = add nuw i32 %5, 1
  %3649 = icmp eq i32 %13, 1
  br label %3650

3650:                                             ; preds = %3642, %3781
  %3651 = phi double [ 0.000000e+00, %3642 ], [ %3732, %3781 ]
  %3652 = phi i32 [ 0, %3642 ], [ %3733, %3781 ]
  %3653 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3643, label %3654, label %3723

3654:                                             ; preds = %3650, %3713
  %3655 = phi i32 [ %3722, %3713 ], [ 0, %3650 ]
  %3656 = phi i64 [ %3664, %3713 ], [ %3647, %3650 ]
  %3657 = phi i64 [ %3721, %3713 ], [ %3646, %3650 ]
  %3658 = phi i32 [ %3719, %3713 ], [ %3653, %3650 ]
  %3659 = sub i32 %3645, %3655
  %3660 = tail call i32 @llvm.smin.i32(i32 %3659, i32 0)
  %3661 = sub i32 %3659, %3660
  %3662 = zext i32 %3661 to i64
  %3663 = add nuw nsw i64 %3662, 1
  %3664 = add nsw i64 %3656, -1
  %3665 = icmp ult i32 %3661, 31
  br i1 %3665, label %3701, label %3666

3666:                                             ; preds = %3654
  %3667 = and i64 %3663, 8589934560
  %3668 = sub i64 %3657, %3667
  br label %3669

3669:                                             ; preds = %3669, %3666
  %3670 = phi i64 [ 0, %3666 ], [ %3693, %3669 ]
  %3671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3689, %3669 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3690, %3669 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3691, %3669 ]
  %3674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3666 ], [ %3692, %3669 ]
  %3675 = sub i64 %3657, %3670
  %3676 = getelementptr inbounds i32, ptr %9, i64 %3675
  %3677 = getelementptr inbounds i32, ptr %3676, i64 -7
  %3678 = load <8 x i32>, ptr %3677, align 4, !tbaa !5
  %3679 = shufflevector <8 x i32> %3678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3680 = getelementptr inbounds i32, ptr %3676, i64 -15
  %3681 = load <8 x i32>, ptr %3680, align 4, !tbaa !5
  %3682 = shufflevector <8 x i32> %3681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3683 = getelementptr inbounds i32, ptr %3676, i64 -23
  %3684 = load <8 x i32>, ptr %3683, align 4, !tbaa !5
  %3685 = shufflevector <8 x i32> %3684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3686 = getelementptr inbounds i32, ptr %3676, i64 -31
  %3687 = load <8 x i32>, ptr %3686, align 4, !tbaa !5
  %3688 = shufflevector <8 x i32> %3687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3689 = mul <8 x i32> %3679, %3671
  %3690 = mul <8 x i32> %3682, %3672
  %3691 = mul <8 x i32> %3685, %3673
  %3692 = mul <8 x i32> %3688, %3674
  %3693 = add nuw i64 %3670, 32
  %3694 = icmp eq i64 %3693, %3667
  br i1 %3694, label %3695, label %3669, !llvm.loop !1244

3695:                                             ; preds = %3669
  %3696 = mul <8 x i32> %3690, %3689
  %3697 = mul <8 x i32> %3691, %3696
  %3698 = mul <8 x i32> %3692, %3697
  %3699 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3698)
  %3700 = icmp eq i64 %3663, %3667
  br i1 %3700, label %3713, label %3701

3701:                                             ; preds = %3654, %3695
  %3702 = phi i64 [ %3657, %3654 ], [ %3668, %3695 ]
  %3703 = phi i32 [ 1, %3654 ], [ %3699, %3695 ]
  br label %3704

3704:                                             ; preds = %3701, %3704
  %3705 = phi i64 [ %3710, %3704 ], [ %3702, %3701 ]
  %3706 = phi i32 [ %3709, %3704 ], [ %3703, %3701 ]
  %3707 = getelementptr inbounds i32, ptr %9, i64 %3705
  %3708 = load i32, ptr %3707, align 4, !tbaa !5
  %3709 = mul nsw i32 %3708, %3706
  %3710 = add nsw i64 %3705, -1
  %3711 = trunc i64 %3705 to i32
  %3712 = icmp sgt i32 %3711, 0
  br i1 %3712, label %3704, label %3713, !llvm.loop !1245

3713:                                             ; preds = %3704, %3695
  %3714 = phi i32 [ %3699, %3695 ], [ %3709, %3704 ]
  %3715 = and i64 %3664, 4294967295
  %3716 = getelementptr inbounds i32, ptr %6, i64 %3715
  %3717 = load i32, ptr %3716, align 4, !tbaa !5
  %3718 = mul nsw i32 %3717, %3714
  %3719 = add nsw i32 %3718, %3658
  %3720 = icmp sgt i64 %3656, 2
  %3721 = add nsw i64 %3657, -1
  %3722 = add i32 %3655, 1
  br i1 %3720, label %3654, label %3723, !llvm.loop !1246

3723:                                             ; preds = %3713, %3650
  %3724 = phi i32 [ %3653, %3650 ], [ %3719, %3713 ]
  %3725 = sext i32 %3724 to i64
  %3726 = getelementptr inbounds double, ptr %2, i64 %3725
  %3727 = load double, ptr %3726, align 8, !tbaa !18
  %3728 = getelementptr inbounds float, ptr %3619, i64 %3725
  %3729 = load float, ptr %3728, align 4, !tbaa !162
  %3730 = fpext float %3729 to double
  %3731 = fmul fast double %3727, %3730
  %3732 = fadd fast double %3731, %3651
  store double %3732, ptr %3621, align 8, !tbaa !18
  %3733 = add nuw nsw i32 %3652, 1
  br i1 %3644, label %3734, label %3781

3734:                                             ; preds = %3723
  %3735 = load i32, ptr %4, align 4, !tbaa !5
  %3736 = load i32, ptr %12, align 4, !tbaa !5
  %3737 = add nsw i32 %3736, -1
  %3738 = icmp slt i32 %3735, %3737
  br i1 %3738, label %3758, label %3739

3739:                                             ; preds = %3734
  %3740 = icmp eq i32 %3735, %3737
  br i1 %3740, label %3741, label %3774

3741:                                             ; preds = %3739
  store i32 0, ptr %4, align 4, !tbaa !5
  %3742 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3742, ptr %6, align 4, !tbaa !5
  br i1 %3649, label %3781, label %3743

3743:                                             ; preds = %3741, %3768
  %3744 = phi i64 [ %3772, %3768 ], [ 1, %3741 ]
  %3745 = getelementptr inbounds i32, ptr %4, i64 %3744
  %3746 = load i32, ptr %3745, align 4, !tbaa !5
  %3747 = getelementptr inbounds i32, ptr %12, i64 %3744
  %3748 = load i32, ptr %3747, align 4, !tbaa !5
  %3749 = add nsw i32 %3748, -1
  %3750 = icmp slt i32 %3746, %3749
  br i1 %3750, label %3751, label %3766

3751:                                             ; preds = %3743
  br i1 %3738, label %3758, label %3752

3752:                                             ; preds = %3751
  %3753 = getelementptr inbounds i32, ptr %7, i64 %3744
  %3754 = load i32, ptr %3753, align 4, !tbaa !5
  %3755 = getelementptr inbounds i32, ptr %6, i64 %3744
  %3756 = load i32, ptr %3755, align 4, !tbaa !5
  %3757 = add nsw i32 %3756, %3754
  store i32 %3757, ptr %3755, align 4, !tbaa !5
  br label %3776

3758:                                             ; preds = %3734, %3751
  %3759 = phi i32 [ %3746, %3751 ], [ %3735, %3734 ]
  %3760 = phi ptr [ %3745, %3751 ], [ %4, %3734 ]
  %3761 = phi i64 [ %3744, %3751 ], [ 0, %3734 ]
  %3762 = add nsw i32 %3759, 1
  store i32 %3762, ptr %3760, align 4, !tbaa !5
  %3763 = getelementptr inbounds i32, ptr %7, i64 %3761
  %3764 = load i32, ptr %3763, align 4, !tbaa !5
  %3765 = getelementptr inbounds i32, ptr %6, i64 %3761
  br label %3776

3766:                                             ; preds = %3743
  %3767 = icmp eq i32 %3746, %3749
  br i1 %3767, label %3768, label %3774

3768:                                             ; preds = %3766
  store i32 0, ptr %3745, align 4, !tbaa !5
  %3769 = getelementptr inbounds i32, ptr %8, i64 %3744
  %3770 = load i32, ptr %3769, align 4, !tbaa !5
  %3771 = getelementptr inbounds i32, ptr %6, i64 %3744
  store i32 %3770, ptr %3771, align 4, !tbaa !5
  %3772 = add nuw nsw i64 %3744, 1
  %3773 = icmp eq i64 %3772, %3647
  br i1 %3773, label %3781, label %3743, !llvm.loop !1247

3774:                                             ; preds = %3739, %3766
  %3775 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3776:                                             ; preds = %3752, %3758
  %3777 = phi ptr [ %3765, %3758 ], [ %3745, %3752 ]
  %3778 = phi i32 [ %3764, %3758 ], [ 1, %3752 ]
  %3779 = load i32, ptr %3777, align 4, !tbaa !5
  %3780 = add nsw i32 %3779, %3778
  store i32 %3780, ptr %3777, align 4, !tbaa !5
  br label %3781

3781:                                             ; preds = %3768, %3776, %3741, %3723
  %3782 = icmp eq i32 %3733, %5
  br i1 %3782, label %5406, label %3650, !llvm.loop !1248

3783:                                             ; preds = %3633, %3918
  %3784 = phi double [ 0.000000e+00, %3633 ], [ %3866, %3918 ]
  %3785 = phi i32 [ 0, %3633 ], [ %3867, %3918 ]
  %3786 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3634, label %3787, label %3856

3787:                                             ; preds = %3783, %3846
  %3788 = phi i32 [ %3855, %3846 ], [ 0, %3783 ]
  %3789 = phi i64 [ %3797, %3846 ], [ %3638, %3783 ]
  %3790 = phi i64 [ %3854, %3846 ], [ %3637, %3783 ]
  %3791 = phi i32 [ %3852, %3846 ], [ %3786, %3783 ]
  %3792 = sub i32 %3636, %3788
  %3793 = tail call i32 @llvm.smin.i32(i32 %3792, i32 0)
  %3794 = sub i32 %3792, %3793
  %3795 = zext i32 %3794 to i64
  %3796 = add nuw nsw i64 %3795, 1
  %3797 = add nsw i64 %3789, -1
  %3798 = icmp ult i32 %3794, 31
  br i1 %3798, label %3834, label %3799

3799:                                             ; preds = %3787
  %3800 = and i64 %3796, 8589934560
  %3801 = sub i64 %3790, %3800
  br label %3802

3802:                                             ; preds = %3802, %3799
  %3803 = phi i64 [ 0, %3799 ], [ %3826, %3802 ]
  %3804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3822, %3802 ]
  %3805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3823, %3802 ]
  %3806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3824, %3802 ]
  %3807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3799 ], [ %3825, %3802 ]
  %3808 = sub i64 %3790, %3803
  %3809 = getelementptr inbounds i32, ptr %11, i64 %3808
  %3810 = getelementptr inbounds i32, ptr %3809, i64 -7
  %3811 = load <8 x i32>, ptr %3810, align 4, !tbaa !5
  %3812 = shufflevector <8 x i32> %3811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3813 = getelementptr inbounds i32, ptr %3809, i64 -15
  %3814 = load <8 x i32>, ptr %3813, align 4, !tbaa !5
  %3815 = shufflevector <8 x i32> %3814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3816 = getelementptr inbounds i32, ptr %3809, i64 -23
  %3817 = load <8 x i32>, ptr %3816, align 4, !tbaa !5
  %3818 = shufflevector <8 x i32> %3817, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3819 = getelementptr inbounds i32, ptr %3809, i64 -31
  %3820 = load <8 x i32>, ptr %3819, align 4, !tbaa !5
  %3821 = shufflevector <8 x i32> %3820, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3822 = mul <8 x i32> %3812, %3804
  %3823 = mul <8 x i32> %3815, %3805
  %3824 = mul <8 x i32> %3818, %3806
  %3825 = mul <8 x i32> %3821, %3807
  %3826 = add nuw i64 %3803, 32
  %3827 = icmp eq i64 %3826, %3800
  br i1 %3827, label %3828, label %3802, !llvm.loop !1249

3828:                                             ; preds = %3802
  %3829 = mul <8 x i32> %3823, %3822
  %3830 = mul <8 x i32> %3824, %3829
  %3831 = mul <8 x i32> %3825, %3830
  %3832 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3831)
  %3833 = icmp eq i64 %3796, %3800
  br i1 %3833, label %3846, label %3834

3834:                                             ; preds = %3787, %3828
  %3835 = phi i64 [ %3790, %3787 ], [ %3801, %3828 ]
  %3836 = phi i32 [ 1, %3787 ], [ %3832, %3828 ]
  br label %3837

3837:                                             ; preds = %3834, %3837
  %3838 = phi i64 [ %3843, %3837 ], [ %3835, %3834 ]
  %3839 = phi i32 [ %3842, %3837 ], [ %3836, %3834 ]
  %3840 = getelementptr inbounds i32, ptr %11, i64 %3838
  %3841 = load i32, ptr %3840, align 4, !tbaa !5
  %3842 = mul nsw i32 %3841, %3839
  %3843 = add nsw i64 %3838, -1
  %3844 = trunc i64 %3838 to i32
  %3845 = icmp sgt i32 %3844, 0
  br i1 %3845, label %3837, label %3846, !llvm.loop !1250

3846:                                             ; preds = %3837, %3828
  %3847 = phi i32 [ %3832, %3828 ], [ %3842, %3837 ]
  %3848 = and i64 %3797, 4294967295
  %3849 = getelementptr inbounds i32, ptr %6, i64 %3848
  %3850 = load i32, ptr %3849, align 4, !tbaa !5
  %3851 = mul nsw i32 %3850, %3847
  %3852 = add nsw i32 %3851, %3791
  %3853 = icmp sgt i64 %3789, 2
  %3854 = add nsw i64 %3790, -1
  %3855 = add i32 %3788, 1
  br i1 %3853, label %3787, label %3856, !llvm.loop !1251

3856:                                             ; preds = %3846, %3783
  %3857 = phi i32 [ %3786, %3783 ], [ %3852, %3846 ]
  %3858 = icmp slt i32 %3857, %5
  br i1 %3858, label %3861, label %3859

3859:                                             ; preds = %3856
  %3860 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

3861:                                             ; preds = %3856
  %3862 = sext i32 %3857 to i64
  %3863 = getelementptr inbounds float, ptr %3619, i64 %3862
  %3864 = load float, ptr %3863, align 4, !tbaa !162
  %3865 = fpext float %3864 to double
  %3866 = fadd fast double %3784, %3865
  store double %3866, ptr %3621, align 8, !tbaa !18
  %3867 = add nuw nsw i32 %3785, 1
  br i1 %3635, label %3868, label %3918

3868:                                             ; preds = %3861
  %3869 = load i32, ptr %4, align 4, !tbaa !5
  %3870 = load i32, ptr %12, align 4, !tbaa !5
  %3871 = add nsw i32 %3870, -1
  %3872 = icmp slt i32 %3869, %3871
  br i1 %3872, label %3895, label %3873

3873:                                             ; preds = %3868
  %3874 = icmp eq i32 %3869, %3871
  br i1 %3874, label %3875, label %3911

3875:                                             ; preds = %3873
  store i32 0, ptr %4, align 4, !tbaa !5
  %3876 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3876, ptr %6, align 4, !tbaa !5
  br i1 %3640, label %3918, label %3877

3877:                                             ; preds = %3875, %3905
  %3878 = phi i64 [ %3909, %3905 ], [ 1, %3875 ]
  %3879 = getelementptr inbounds i32, ptr %4, i64 %3878
  %3880 = load i32, ptr %3879, align 4, !tbaa !5
  %3881 = getelementptr inbounds i32, ptr %12, i64 %3878
  %3882 = load i32, ptr %3881, align 4, !tbaa !5
  %3883 = add nsw i32 %3882, -1
  %3884 = icmp slt i32 %3880, %3883
  br i1 %3884, label %3885, label %3903

3885:                                             ; preds = %3877
  br i1 %3872, label %3895, label %3886

3886:                                             ; preds = %3885
  %3887 = shl i64 %3878, 32
  %3888 = add i64 %3887, -4294967296
  %3889 = ashr exact i64 %3888, 32
  %3890 = getelementptr inbounds i32, ptr %7, i64 %3889
  %3891 = load i32, ptr %3890, align 4, !tbaa !5
  %3892 = getelementptr inbounds i32, ptr %6, i64 %3878
  %3893 = load i32, ptr %3892, align 4, !tbaa !5
  %3894 = add nsw i32 %3893, %3891
  store i32 %3894, ptr %3892, align 4, !tbaa !5
  br label %3913

3895:                                             ; preds = %3868, %3885
  %3896 = phi i32 [ %3880, %3885 ], [ %3869, %3868 ]
  %3897 = phi ptr [ %3879, %3885 ], [ %4, %3868 ]
  %3898 = phi i64 [ %3878, %3885 ], [ 0, %3868 ]
  %3899 = add nsw i32 %3896, 1
  store i32 %3899, ptr %3897, align 4, !tbaa !5
  %3900 = getelementptr inbounds i32, ptr %7, i64 %3898
  %3901 = load i32, ptr %3900, align 4, !tbaa !5
  %3902 = getelementptr inbounds i32, ptr %6, i64 %3898
  br label %3913

3903:                                             ; preds = %3877
  %3904 = icmp eq i32 %3880, %3883
  br i1 %3904, label %3905, label %3911

3905:                                             ; preds = %3903
  store i32 0, ptr %3879, align 4, !tbaa !5
  %3906 = getelementptr inbounds i32, ptr %8, i64 %3878
  %3907 = load i32, ptr %3906, align 4, !tbaa !5
  %3908 = getelementptr inbounds i32, ptr %6, i64 %3878
  store i32 %3907, ptr %3908, align 4, !tbaa !5
  %3909 = add nuw nsw i64 %3878, 1
  %3910 = icmp eq i64 %3909, %3638
  br i1 %3910, label %3918, label %3877, !llvm.loop !1252

3911:                                             ; preds = %3873, %3903
  %3912 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

3913:                                             ; preds = %3886, %3895
  %3914 = phi ptr [ %3902, %3895 ], [ %3879, %3886 ]
  %3915 = phi i32 [ %3901, %3895 ], [ 1, %3886 ]
  %3916 = load i32, ptr %3914, align 4, !tbaa !5
  %3917 = add nsw i32 %3916, %3915
  store i32 %3917, ptr %3914, align 4, !tbaa !5
  br label %3918

3918:                                             ; preds = %3905, %3913, %3875, %3861
  %3919 = icmp eq i32 %3867, %5
  br i1 %3919, label %5406, label %3783, !llvm.loop !1253

3920:                                             ; preds = %3626
  %3921 = getelementptr inbounds i32, ptr %3, i64 %19
  %3922 = load i32, ptr %3921, align 4, !tbaa !5
  %3923 = icmp eq i32 %3922, 0
  %3924 = icmp sgt i32 %5, 0
  br i1 %3923, label %3934, label %3925

3925:                                             ; preds = %3920
  br i1 %3924, label %3926, label %5406

3926:                                             ; preds = %3925
  %3927 = icmp sgt i32 %13, 1
  %3928 = icmp sgt i32 %13, 0
  %3929 = add i32 %13, -2
  %3930 = zext i32 %3929 to i64
  %3931 = zext i32 %13 to i64
  %3932 = add nuw i32 %5, 1
  %3933 = icmp eq i32 %13, 1
  br label %4073

3934:                                             ; preds = %3920
  br i1 %3924, label %3935, label %5406

3935:                                             ; preds = %3934
  %3936 = icmp sgt i32 %13, 1
  %3937 = icmp sgt i32 %13, 0
  %3938 = add i32 %13, -2
  %3939 = zext i32 %3938 to i64
  %3940 = zext i32 %13 to i64
  %3941 = add nuw i32 %5, 1
  %3942 = icmp eq i32 %13, 1
  br label %3943

3943:                                             ; preds = %3935, %4071
  %3944 = phi double [ 0.000000e+00, %3935 ], [ %4022, %4071 ]
  %3945 = phi i32 [ 0, %3935 ], [ %4023, %4071 ]
  %3946 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3936, label %3947, label %4016

3947:                                             ; preds = %3943, %4006
  %3948 = phi i32 [ %4015, %4006 ], [ 0, %3943 ]
  %3949 = phi i64 [ %3957, %4006 ], [ %3940, %3943 ]
  %3950 = phi i64 [ %4014, %4006 ], [ %3939, %3943 ]
  %3951 = phi i32 [ %4012, %4006 ], [ %3946, %3943 ]
  %3952 = sub i32 %3938, %3948
  %3953 = tail call i32 @llvm.smin.i32(i32 %3952, i32 0)
  %3954 = sub i32 %3952, %3953
  %3955 = zext i32 %3954 to i64
  %3956 = add nuw nsw i64 %3955, 1
  %3957 = add nsw i64 %3949, -1
  %3958 = icmp ult i32 %3954, 31
  br i1 %3958, label %3994, label %3959

3959:                                             ; preds = %3947
  %3960 = and i64 %3956, 8589934560
  %3961 = sub i64 %3950, %3960
  br label %3962

3962:                                             ; preds = %3962, %3959
  %3963 = phi i64 [ 0, %3959 ], [ %3986, %3962 ]
  %3964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3982, %3962 ]
  %3965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3983, %3962 ]
  %3966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3984, %3962 ]
  %3967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3959 ], [ %3985, %3962 ]
  %3968 = sub i64 %3950, %3963
  %3969 = getelementptr inbounds i32, ptr %9, i64 %3968
  %3970 = getelementptr inbounds i32, ptr %3969, i64 -7
  %3971 = load <8 x i32>, ptr %3970, align 4, !tbaa !5
  %3972 = shufflevector <8 x i32> %3971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3973 = getelementptr inbounds i32, ptr %3969, i64 -15
  %3974 = load <8 x i32>, ptr %3973, align 4, !tbaa !5
  %3975 = shufflevector <8 x i32> %3974, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3976 = getelementptr inbounds i32, ptr %3969, i64 -23
  %3977 = load <8 x i32>, ptr %3976, align 4, !tbaa !5
  %3978 = shufflevector <8 x i32> %3977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3979 = getelementptr inbounds i32, ptr %3969, i64 -31
  %3980 = load <8 x i32>, ptr %3979, align 4, !tbaa !5
  %3981 = shufflevector <8 x i32> %3980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3982 = mul <8 x i32> %3972, %3964
  %3983 = mul <8 x i32> %3975, %3965
  %3984 = mul <8 x i32> %3978, %3966
  %3985 = mul <8 x i32> %3981, %3967
  %3986 = add nuw i64 %3963, 32
  %3987 = icmp eq i64 %3986, %3960
  br i1 %3987, label %3988, label %3962, !llvm.loop !1254

3988:                                             ; preds = %3962
  %3989 = mul <8 x i32> %3983, %3982
  %3990 = mul <8 x i32> %3984, %3989
  %3991 = mul <8 x i32> %3985, %3990
  %3992 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3991)
  %3993 = icmp eq i64 %3956, %3960
  br i1 %3993, label %4006, label %3994

3994:                                             ; preds = %3947, %3988
  %3995 = phi i64 [ %3950, %3947 ], [ %3961, %3988 ]
  %3996 = phi i32 [ 1, %3947 ], [ %3992, %3988 ]
  br label %3997

3997:                                             ; preds = %3994, %3997
  %3998 = phi i64 [ %4003, %3997 ], [ %3995, %3994 ]
  %3999 = phi i32 [ %4002, %3997 ], [ %3996, %3994 ]
  %4000 = getelementptr inbounds i32, ptr %9, i64 %3998
  %4001 = load i32, ptr %4000, align 4, !tbaa !5
  %4002 = mul nsw i32 %4001, %3999
  %4003 = add nsw i64 %3998, -1
  %4004 = trunc i64 %3998 to i32
  %4005 = icmp sgt i32 %4004, 0
  br i1 %4005, label %3997, label %4006, !llvm.loop !1255

4006:                                             ; preds = %3997, %3988
  %4007 = phi i32 [ %3992, %3988 ], [ %4002, %3997 ]
  %4008 = and i64 %3957, 4294967295
  %4009 = getelementptr inbounds i32, ptr %6, i64 %4008
  %4010 = load i32, ptr %4009, align 4, !tbaa !5
  %4011 = mul nsw i32 %4010, %4007
  %4012 = add nsw i32 %4011, %3951
  %4013 = icmp sgt i64 %3949, 2
  %4014 = add nsw i64 %3950, -1
  %4015 = add i32 %3948, 1
  br i1 %4013, label %3947, label %4016, !llvm.loop !1256

4016:                                             ; preds = %4006, %3943
  %4017 = phi i32 [ %3946, %3943 ], [ %4012, %4006 ]
  %4018 = sext i32 %4017 to i64
  %4019 = getelementptr inbounds float, ptr %3619, i64 %4018
  %4020 = load float, ptr %4019, align 4, !tbaa !162
  %4021 = fpext float %4020 to double
  %4022 = fadd fast double %3944, %4021
  %4023 = add nuw nsw i32 %3945, 1
  br i1 %3937, label %4024, label %4071

4024:                                             ; preds = %4016
  %4025 = load i32, ptr %4, align 4, !tbaa !5
  %4026 = load i32, ptr %12, align 4, !tbaa !5
  %4027 = add nsw i32 %4026, -1
  %4028 = icmp slt i32 %4025, %4027
  br i1 %4028, label %4048, label %4029

4029:                                             ; preds = %4024
  %4030 = icmp eq i32 %4025, %4027
  br i1 %4030, label %4031, label %4064

4031:                                             ; preds = %4029
  store i32 0, ptr %4, align 4, !tbaa !5
  %4032 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4032, ptr %6, align 4, !tbaa !5
  br i1 %3942, label %4071, label %4033

4033:                                             ; preds = %4031, %4058
  %4034 = phi i64 [ %4062, %4058 ], [ 1, %4031 ]
  %4035 = getelementptr inbounds i32, ptr %4, i64 %4034
  %4036 = load i32, ptr %4035, align 4, !tbaa !5
  %4037 = getelementptr inbounds i32, ptr %12, i64 %4034
  %4038 = load i32, ptr %4037, align 4, !tbaa !5
  %4039 = add nsw i32 %4038, -1
  %4040 = icmp slt i32 %4036, %4039
  br i1 %4040, label %4041, label %4056

4041:                                             ; preds = %4033
  br i1 %4028, label %4048, label %4042

4042:                                             ; preds = %4041
  %4043 = getelementptr inbounds i32, ptr %7, i64 %4034
  %4044 = load i32, ptr %4043, align 4, !tbaa !5
  %4045 = getelementptr inbounds i32, ptr %6, i64 %4034
  %4046 = load i32, ptr %4045, align 4, !tbaa !5
  %4047 = add nsw i32 %4046, %4044
  store i32 %4047, ptr %4045, align 4, !tbaa !5
  br label %4066

4048:                                             ; preds = %4024, %4041
  %4049 = phi i32 [ %4036, %4041 ], [ %4025, %4024 ]
  %4050 = phi ptr [ %4035, %4041 ], [ %4, %4024 ]
  %4051 = phi i64 [ %4034, %4041 ], [ 0, %4024 ]
  %4052 = add nsw i32 %4049, 1
  store i32 %4052, ptr %4050, align 4, !tbaa !5
  %4053 = getelementptr inbounds i32, ptr %7, i64 %4051
  %4054 = load i32, ptr %4053, align 4, !tbaa !5
  %4055 = getelementptr inbounds i32, ptr %6, i64 %4051
  br label %4066

4056:                                             ; preds = %4033
  %4057 = icmp eq i32 %4036, %4039
  br i1 %4057, label %4058, label %4064

4058:                                             ; preds = %4056
  store i32 0, ptr %4035, align 4, !tbaa !5
  %4059 = getelementptr inbounds i32, ptr %8, i64 %4034
  %4060 = load i32, ptr %4059, align 4, !tbaa !5
  %4061 = getelementptr inbounds i32, ptr %6, i64 %4034
  store i32 %4060, ptr %4061, align 4, !tbaa !5
  %4062 = add nuw nsw i64 %4034, 1
  %4063 = icmp eq i64 %4062, %3940
  br i1 %4063, label %4071, label %4033, !llvm.loop !1257

4064:                                             ; preds = %4029, %4056
  store double %4022, ptr %3621, align 8, !tbaa !18
  %4065 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4066:                                             ; preds = %4042, %4048
  %4067 = phi ptr [ %4055, %4048 ], [ %4035, %4042 ]
  %4068 = phi i32 [ %4054, %4048 ], [ 1, %4042 ]
  %4069 = load i32, ptr %4067, align 4, !tbaa !5
  %4070 = add nsw i32 %4069, %4068
  store i32 %4070, ptr %4067, align 4, !tbaa !5
  br label %4071

4071:                                             ; preds = %4058, %4066, %4031, %4016
  %4072 = icmp eq i32 %4023, %5
  br i1 %4072, label %5404, label %3943, !llvm.loop !1258

4073:                                             ; preds = %3926, %4208
  %4074 = phi double [ 0.000000e+00, %3926 ], [ %4156, %4208 ]
  %4075 = phi i32 [ 0, %3926 ], [ %4157, %4208 ]
  %4076 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3927, label %4077, label %4146

4077:                                             ; preds = %4073, %4136
  %4078 = phi i32 [ %4145, %4136 ], [ 0, %4073 ]
  %4079 = phi i64 [ %4087, %4136 ], [ %3931, %4073 ]
  %4080 = phi i64 [ %4144, %4136 ], [ %3930, %4073 ]
  %4081 = phi i32 [ %4142, %4136 ], [ %4076, %4073 ]
  %4082 = sub i32 %3929, %4078
  %4083 = tail call i32 @llvm.smin.i32(i32 %4082, i32 0)
  %4084 = sub i32 %4082, %4083
  %4085 = zext i32 %4084 to i64
  %4086 = add nuw nsw i64 %4085, 1
  %4087 = add nsw i64 %4079, -1
  %4088 = icmp ult i32 %4084, 31
  br i1 %4088, label %4124, label %4089

4089:                                             ; preds = %4077
  %4090 = and i64 %4086, 8589934560
  %4091 = sub i64 %4080, %4090
  br label %4092

4092:                                             ; preds = %4092, %4089
  %4093 = phi i64 [ 0, %4089 ], [ %4116, %4092 ]
  %4094 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4112, %4092 ]
  %4095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4113, %4092 ]
  %4096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4114, %4092 ]
  %4097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4089 ], [ %4115, %4092 ]
  %4098 = sub i64 %4080, %4093
  %4099 = getelementptr inbounds i32, ptr %11, i64 %4098
  %4100 = getelementptr inbounds i32, ptr %4099, i64 -7
  %4101 = load <8 x i32>, ptr %4100, align 4, !tbaa !5
  %4102 = shufflevector <8 x i32> %4101, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4103 = getelementptr inbounds i32, ptr %4099, i64 -15
  %4104 = load <8 x i32>, ptr %4103, align 4, !tbaa !5
  %4105 = shufflevector <8 x i32> %4104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4106 = getelementptr inbounds i32, ptr %4099, i64 -23
  %4107 = load <8 x i32>, ptr %4106, align 4, !tbaa !5
  %4108 = shufflevector <8 x i32> %4107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4109 = getelementptr inbounds i32, ptr %4099, i64 -31
  %4110 = load <8 x i32>, ptr %4109, align 4, !tbaa !5
  %4111 = shufflevector <8 x i32> %4110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4112 = mul <8 x i32> %4102, %4094
  %4113 = mul <8 x i32> %4105, %4095
  %4114 = mul <8 x i32> %4108, %4096
  %4115 = mul <8 x i32> %4111, %4097
  %4116 = add nuw i64 %4093, 32
  %4117 = icmp eq i64 %4116, %4090
  br i1 %4117, label %4118, label %4092, !llvm.loop !1259

4118:                                             ; preds = %4092
  %4119 = mul <8 x i32> %4113, %4112
  %4120 = mul <8 x i32> %4114, %4119
  %4121 = mul <8 x i32> %4115, %4120
  %4122 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4121)
  %4123 = icmp eq i64 %4086, %4090
  br i1 %4123, label %4136, label %4124

4124:                                             ; preds = %4077, %4118
  %4125 = phi i64 [ %4080, %4077 ], [ %4091, %4118 ]
  %4126 = phi i32 [ 1, %4077 ], [ %4122, %4118 ]
  br label %4127

4127:                                             ; preds = %4124, %4127
  %4128 = phi i64 [ %4133, %4127 ], [ %4125, %4124 ]
  %4129 = phi i32 [ %4132, %4127 ], [ %4126, %4124 ]
  %4130 = getelementptr inbounds i32, ptr %11, i64 %4128
  %4131 = load i32, ptr %4130, align 4, !tbaa !5
  %4132 = mul nsw i32 %4131, %4129
  %4133 = add nsw i64 %4128, -1
  %4134 = trunc i64 %4128 to i32
  %4135 = icmp sgt i32 %4134, 0
  br i1 %4135, label %4127, label %4136, !llvm.loop !1260

4136:                                             ; preds = %4127, %4118
  %4137 = phi i32 [ %4122, %4118 ], [ %4132, %4127 ]
  %4138 = and i64 %4087, 4294967295
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4138
  %4140 = load i32, ptr %4139, align 4, !tbaa !5
  %4141 = mul nsw i32 %4140, %4137
  %4142 = add nsw i32 %4141, %4081
  %4143 = icmp sgt i64 %4079, 2
  %4144 = add nsw i64 %4080, -1
  %4145 = add i32 %4078, 1
  br i1 %4143, label %4077, label %4146, !llvm.loop !1261

4146:                                             ; preds = %4136, %4073
  %4147 = phi i32 [ %4076, %4073 ], [ %4142, %4136 ]
  %4148 = icmp slt i32 %4147, %5
  br i1 %4148, label %4151, label %4149

4149:                                             ; preds = %4146
  %4150 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

4151:                                             ; preds = %4146
  %4152 = sext i32 %4147 to i64
  %4153 = getelementptr inbounds float, ptr %3619, i64 %4152
  %4154 = load float, ptr %4153, align 4, !tbaa !162
  %4155 = fpext float %4154 to double
  %4156 = fadd fast double %4074, %4155
  store double %4156, ptr %3621, align 8, !tbaa !18
  %4157 = add nuw nsw i32 %4075, 1
  br i1 %3928, label %4158, label %4208

4158:                                             ; preds = %4151
  %4159 = load i32, ptr %4, align 4, !tbaa !5
  %4160 = load i32, ptr %12, align 4, !tbaa !5
  %4161 = add nsw i32 %4160, -1
  %4162 = icmp slt i32 %4159, %4161
  br i1 %4162, label %4185, label %4163

4163:                                             ; preds = %4158
  %4164 = icmp eq i32 %4159, %4161
  br i1 %4164, label %4165, label %4201

4165:                                             ; preds = %4163
  store i32 0, ptr %4, align 4, !tbaa !5
  %4166 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4166, ptr %6, align 4, !tbaa !5
  br i1 %3933, label %4208, label %4167

4167:                                             ; preds = %4165, %4195
  %4168 = phi i64 [ %4199, %4195 ], [ 1, %4165 ]
  %4169 = getelementptr inbounds i32, ptr %4, i64 %4168
  %4170 = load i32, ptr %4169, align 4, !tbaa !5
  %4171 = getelementptr inbounds i32, ptr %12, i64 %4168
  %4172 = load i32, ptr %4171, align 4, !tbaa !5
  %4173 = add nsw i32 %4172, -1
  %4174 = icmp slt i32 %4170, %4173
  br i1 %4174, label %4175, label %4193

4175:                                             ; preds = %4167
  br i1 %4162, label %4185, label %4176

4176:                                             ; preds = %4175
  %4177 = shl i64 %4168, 32
  %4178 = add i64 %4177, -4294967296
  %4179 = ashr exact i64 %4178, 32
  %4180 = getelementptr inbounds i32, ptr %7, i64 %4179
  %4181 = load i32, ptr %4180, align 4, !tbaa !5
  %4182 = getelementptr inbounds i32, ptr %6, i64 %4168
  %4183 = load i32, ptr %4182, align 4, !tbaa !5
  %4184 = add nsw i32 %4183, %4181
  store i32 %4184, ptr %4182, align 4, !tbaa !5
  br label %4203

4185:                                             ; preds = %4158, %4175
  %4186 = phi i32 [ %4170, %4175 ], [ %4159, %4158 ]
  %4187 = phi ptr [ %4169, %4175 ], [ %4, %4158 ]
  %4188 = phi i64 [ %4168, %4175 ], [ 0, %4158 ]
  %4189 = add nsw i32 %4186, 1
  store i32 %4189, ptr %4187, align 4, !tbaa !5
  %4190 = getelementptr inbounds i32, ptr %7, i64 %4188
  %4191 = load i32, ptr %4190, align 4, !tbaa !5
  %4192 = getelementptr inbounds i32, ptr %6, i64 %4188
  br label %4203

4193:                                             ; preds = %4167
  %4194 = icmp eq i32 %4170, %4173
  br i1 %4194, label %4195, label %4201

4195:                                             ; preds = %4193
  store i32 0, ptr %4169, align 4, !tbaa !5
  %4196 = getelementptr inbounds i32, ptr %8, i64 %4168
  %4197 = load i32, ptr %4196, align 4, !tbaa !5
  %4198 = getelementptr inbounds i32, ptr %6, i64 %4168
  store i32 %4197, ptr %4198, align 4, !tbaa !5
  %4199 = add nuw nsw i64 %4168, 1
  %4200 = icmp eq i64 %4199, %3931
  br i1 %4200, label %4208, label %4167, !llvm.loop !1262

4201:                                             ; preds = %4163, %4193
  %4202 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4203:                                             ; preds = %4176, %4185
  %4204 = phi ptr [ %4192, %4185 ], [ %4169, %4176 ]
  %4205 = phi i32 [ %4191, %4185 ], [ 1, %4176 ]
  %4206 = load i32, ptr %4204, align 4, !tbaa !5
  %4207 = add nsw i32 %4206, %4205
  store i32 %4207, ptr %4204, align 4, !tbaa !5
  br label %4208

4208:                                             ; preds = %4195, %4203, %4165, %4151
  %4209 = icmp eq i32 %4157, %5
  br i1 %4209, label %5406, label %4073, !llvm.loop !1263

4210:                                             ; preds = %3626
  %4211 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1746, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

4212:                                             ; preds = %18
  %4213 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4214 = load ptr, ptr %4213, align 8, !tbaa !9
  %4215 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4216 = load ptr, ptr %4215, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4216, align 4, !tbaa !162
  %4217 = icmp eq i32 %13, 0
  br i1 %4217, label %4218, label %4220

4218:                                             ; preds = %4212
  %4219 = load float, ptr %4214, align 4, !tbaa !162
  store float %4219, ptr %4216, align 4, !tbaa !162
  br label %5406

4220:                                             ; preds = %4212
  switch i32 %1, label %4803 [
    i32 1, label %4221
    i32 0, label %4515
  ]

4221:                                             ; preds = %4220
  %4222 = getelementptr inbounds i32, ptr %3, i64 %19
  %4223 = load i32, ptr %4222, align 4, !tbaa !5
  %4224 = icmp eq i32 %4223, 0
  %4225 = icmp sgt i32 %5, 0
  br i1 %4224, label %4235, label %4226

4226:                                             ; preds = %4221
  br i1 %4225, label %4227, label %5406

4227:                                             ; preds = %4226
  %4228 = icmp sgt i32 %13, 1
  %4229 = icmp sgt i32 %13, 0
  %4230 = add i32 %13, -2
  %4231 = zext i32 %4230 to i64
  %4232 = zext i32 %13 to i64
  %4233 = add nuw i32 %5, 1
  %4234 = icmp eq i32 %13, 1
  br label %4379

4235:                                             ; preds = %4221
  br i1 %4225, label %4236, label %5406

4236:                                             ; preds = %4235
  %4237 = icmp sgt i32 %13, 1
  %4238 = icmp sgt i32 %13, 0
  %4239 = add i32 %13, -2
  %4240 = zext i32 %4239 to i64
  %4241 = zext i32 %13 to i64
  %4242 = add nuw i32 %5, 1
  %4243 = icmp eq i32 %13, 1
  br label %4244

4244:                                             ; preds = %4236, %4377
  %4245 = phi float [ 0.000000e+00, %4236 ], [ %4328, %4377 ]
  %4246 = phi i32 [ 0, %4236 ], [ %4329, %4377 ]
  %4247 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4237, label %4248, label %4317

4248:                                             ; preds = %4244, %4307
  %4249 = phi i32 [ %4316, %4307 ], [ 0, %4244 ]
  %4250 = phi i64 [ %4258, %4307 ], [ %4241, %4244 ]
  %4251 = phi i64 [ %4315, %4307 ], [ %4240, %4244 ]
  %4252 = phi i32 [ %4313, %4307 ], [ %4247, %4244 ]
  %4253 = sub i32 %4239, %4249
  %4254 = tail call i32 @llvm.smin.i32(i32 %4253, i32 0)
  %4255 = sub i32 %4253, %4254
  %4256 = zext i32 %4255 to i64
  %4257 = add nuw nsw i64 %4256, 1
  %4258 = add nsw i64 %4250, -1
  %4259 = icmp ult i32 %4255, 31
  br i1 %4259, label %4295, label %4260

4260:                                             ; preds = %4248
  %4261 = and i64 %4257, 8589934560
  %4262 = sub i64 %4251, %4261
  br label %4263

4263:                                             ; preds = %4263, %4260
  %4264 = phi i64 [ 0, %4260 ], [ %4287, %4263 ]
  %4265 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4260 ], [ %4283, %4263 ]
  %4266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4260 ], [ %4284, %4263 ]
  %4267 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4260 ], [ %4285, %4263 ]
  %4268 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4260 ], [ %4286, %4263 ]
  %4269 = sub i64 %4251, %4264
  %4270 = getelementptr inbounds i32, ptr %9, i64 %4269
  %4271 = getelementptr inbounds i32, ptr %4270, i64 -7
  %4272 = load <8 x i32>, ptr %4271, align 4, !tbaa !5
  %4273 = shufflevector <8 x i32> %4272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4274 = getelementptr inbounds i32, ptr %4270, i64 -15
  %4275 = load <8 x i32>, ptr %4274, align 4, !tbaa !5
  %4276 = shufflevector <8 x i32> %4275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4277 = getelementptr inbounds i32, ptr %4270, i64 -23
  %4278 = load <8 x i32>, ptr %4277, align 4, !tbaa !5
  %4279 = shufflevector <8 x i32> %4278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4280 = getelementptr inbounds i32, ptr %4270, i64 -31
  %4281 = load <8 x i32>, ptr %4280, align 4, !tbaa !5
  %4282 = shufflevector <8 x i32> %4281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4283 = mul <8 x i32> %4273, %4265
  %4284 = mul <8 x i32> %4276, %4266
  %4285 = mul <8 x i32> %4279, %4267
  %4286 = mul <8 x i32> %4282, %4268
  %4287 = add nuw i64 %4264, 32
  %4288 = icmp eq i64 %4287, %4261
  br i1 %4288, label %4289, label %4263, !llvm.loop !1264

4289:                                             ; preds = %4263
  %4290 = mul <8 x i32> %4284, %4283
  %4291 = mul <8 x i32> %4285, %4290
  %4292 = mul <8 x i32> %4286, %4291
  %4293 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4292)
  %4294 = icmp eq i64 %4257, %4261
  br i1 %4294, label %4307, label %4295

4295:                                             ; preds = %4248, %4289
  %4296 = phi i64 [ %4251, %4248 ], [ %4262, %4289 ]
  %4297 = phi i32 [ 1, %4248 ], [ %4293, %4289 ]
  br label %4298

4298:                                             ; preds = %4295, %4298
  %4299 = phi i64 [ %4304, %4298 ], [ %4296, %4295 ]
  %4300 = phi i32 [ %4303, %4298 ], [ %4297, %4295 ]
  %4301 = getelementptr inbounds i32, ptr %9, i64 %4299
  %4302 = load i32, ptr %4301, align 4, !tbaa !5
  %4303 = mul nsw i32 %4302, %4300
  %4304 = add nsw i64 %4299, -1
  %4305 = trunc i64 %4299 to i32
  %4306 = icmp sgt i32 %4305, 0
  br i1 %4306, label %4298, label %4307, !llvm.loop !1265

4307:                                             ; preds = %4298, %4289
  %4308 = phi i32 [ %4293, %4289 ], [ %4303, %4298 ]
  %4309 = and i64 %4258, 4294967295
  %4310 = getelementptr inbounds i32, ptr %6, i64 %4309
  %4311 = load i32, ptr %4310, align 4, !tbaa !5
  %4312 = mul nsw i32 %4311, %4308
  %4313 = add nsw i32 %4312, %4252
  %4314 = icmp sgt i64 %4250, 2
  %4315 = add nsw i64 %4251, -1
  %4316 = add i32 %4249, 1
  br i1 %4314, label %4248, label %4317, !llvm.loop !1266

4317:                                             ; preds = %4307, %4244
  %4318 = phi i32 [ %4247, %4244 ], [ %4313, %4307 ]
  %4319 = sext i32 %4318 to i64
  %4320 = getelementptr inbounds double, ptr %2, i64 %4319
  %4321 = load double, ptr %4320, align 8, !tbaa !18
  %4322 = getelementptr inbounds float, ptr %4214, i64 %4319
  %4323 = load float, ptr %4322, align 4, !tbaa !162
  %4324 = fpext float %4245 to double
  %4325 = fpext float %4323 to double
  %4326 = fmul fast double %4321, %4325
  %4327 = fadd fast double %4326, %4324
  %4328 = fptrunc double %4327 to float
  store float %4328, ptr %4216, align 4, !tbaa !162
  %4329 = add nuw nsw i32 %4246, 1
  br i1 %4238, label %4330, label %4377

4330:                                             ; preds = %4317
  %4331 = load i32, ptr %4, align 4, !tbaa !5
  %4332 = load i32, ptr %12, align 4, !tbaa !5
  %4333 = add nsw i32 %4332, -1
  %4334 = icmp slt i32 %4331, %4333
  br i1 %4334, label %4354, label %4335

4335:                                             ; preds = %4330
  %4336 = icmp eq i32 %4331, %4333
  br i1 %4336, label %4337, label %4370

4337:                                             ; preds = %4335
  store i32 0, ptr %4, align 4, !tbaa !5
  %4338 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4338, ptr %6, align 4, !tbaa !5
  br i1 %4243, label %4377, label %4339

4339:                                             ; preds = %4337, %4364
  %4340 = phi i64 [ %4368, %4364 ], [ 1, %4337 ]
  %4341 = getelementptr inbounds i32, ptr %4, i64 %4340
  %4342 = load i32, ptr %4341, align 4, !tbaa !5
  %4343 = getelementptr inbounds i32, ptr %12, i64 %4340
  %4344 = load i32, ptr %4343, align 4, !tbaa !5
  %4345 = add nsw i32 %4344, -1
  %4346 = icmp slt i32 %4342, %4345
  br i1 %4346, label %4347, label %4362

4347:                                             ; preds = %4339
  br i1 %4334, label %4354, label %4348

4348:                                             ; preds = %4347
  %4349 = getelementptr inbounds i32, ptr %7, i64 %4340
  %4350 = load i32, ptr %4349, align 4, !tbaa !5
  %4351 = getelementptr inbounds i32, ptr %6, i64 %4340
  %4352 = load i32, ptr %4351, align 4, !tbaa !5
  %4353 = add nsw i32 %4352, %4350
  store i32 %4353, ptr %4351, align 4, !tbaa !5
  br label %4372

4354:                                             ; preds = %4330, %4347
  %4355 = phi i32 [ %4342, %4347 ], [ %4331, %4330 ]
  %4356 = phi ptr [ %4341, %4347 ], [ %4, %4330 ]
  %4357 = phi i64 [ %4340, %4347 ], [ 0, %4330 ]
  %4358 = add nsw i32 %4355, 1
  store i32 %4358, ptr %4356, align 4, !tbaa !5
  %4359 = getelementptr inbounds i32, ptr %7, i64 %4357
  %4360 = load i32, ptr %4359, align 4, !tbaa !5
  %4361 = getelementptr inbounds i32, ptr %6, i64 %4357
  br label %4372

4362:                                             ; preds = %4339
  %4363 = icmp eq i32 %4342, %4345
  br i1 %4363, label %4364, label %4370

4364:                                             ; preds = %4362
  store i32 0, ptr %4341, align 4, !tbaa !5
  %4365 = getelementptr inbounds i32, ptr %8, i64 %4340
  %4366 = load i32, ptr %4365, align 4, !tbaa !5
  %4367 = getelementptr inbounds i32, ptr %6, i64 %4340
  store i32 %4366, ptr %4367, align 4, !tbaa !5
  %4368 = add nuw nsw i64 %4340, 1
  %4369 = icmp eq i64 %4368, %4241
  br i1 %4369, label %4377, label %4339, !llvm.loop !1267

4370:                                             ; preds = %4335, %4362
  %4371 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4372:                                             ; preds = %4348, %4354
  %4373 = phi ptr [ %4361, %4354 ], [ %4341, %4348 ]
  %4374 = phi i32 [ %4360, %4354 ], [ 1, %4348 ]
  %4375 = load i32, ptr %4373, align 4, !tbaa !5
  %4376 = add nsw i32 %4375, %4374
  store i32 %4376, ptr %4373, align 4, !tbaa !5
  br label %4377

4377:                                             ; preds = %4364, %4372, %4337, %4317
  %4378 = icmp eq i32 %4329, %5
  br i1 %4378, label %5406, label %4244, !llvm.loop !1268

4379:                                             ; preds = %4227, %4513
  %4380 = phi float [ 0.000000e+00, %4227 ], [ %4461, %4513 ]
  %4381 = phi i32 [ 0, %4227 ], [ %4462, %4513 ]
  %4382 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4228, label %4383, label %4452

4383:                                             ; preds = %4379, %4442
  %4384 = phi i32 [ %4451, %4442 ], [ 0, %4379 ]
  %4385 = phi i64 [ %4393, %4442 ], [ %4232, %4379 ]
  %4386 = phi i64 [ %4450, %4442 ], [ %4231, %4379 ]
  %4387 = phi i32 [ %4448, %4442 ], [ %4382, %4379 ]
  %4388 = sub i32 %4230, %4384
  %4389 = tail call i32 @llvm.smin.i32(i32 %4388, i32 0)
  %4390 = sub i32 %4388, %4389
  %4391 = zext i32 %4390 to i64
  %4392 = add nuw nsw i64 %4391, 1
  %4393 = add nsw i64 %4385, -1
  %4394 = icmp ult i32 %4390, 31
  br i1 %4394, label %4430, label %4395

4395:                                             ; preds = %4383
  %4396 = and i64 %4392, 8589934560
  %4397 = sub i64 %4386, %4396
  br label %4398

4398:                                             ; preds = %4398, %4395
  %4399 = phi i64 [ 0, %4395 ], [ %4422, %4398 ]
  %4400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4395 ], [ %4418, %4398 ]
  %4401 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4395 ], [ %4419, %4398 ]
  %4402 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4395 ], [ %4420, %4398 ]
  %4403 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4395 ], [ %4421, %4398 ]
  %4404 = sub i64 %4386, %4399
  %4405 = getelementptr inbounds i32, ptr %11, i64 %4404
  %4406 = getelementptr inbounds i32, ptr %4405, i64 -7
  %4407 = load <8 x i32>, ptr %4406, align 4, !tbaa !5
  %4408 = shufflevector <8 x i32> %4407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4409 = getelementptr inbounds i32, ptr %4405, i64 -15
  %4410 = load <8 x i32>, ptr %4409, align 4, !tbaa !5
  %4411 = shufflevector <8 x i32> %4410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4412 = getelementptr inbounds i32, ptr %4405, i64 -23
  %4413 = load <8 x i32>, ptr %4412, align 4, !tbaa !5
  %4414 = shufflevector <8 x i32> %4413, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4415 = getelementptr inbounds i32, ptr %4405, i64 -31
  %4416 = load <8 x i32>, ptr %4415, align 4, !tbaa !5
  %4417 = shufflevector <8 x i32> %4416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4418 = mul <8 x i32> %4408, %4400
  %4419 = mul <8 x i32> %4411, %4401
  %4420 = mul <8 x i32> %4414, %4402
  %4421 = mul <8 x i32> %4417, %4403
  %4422 = add nuw i64 %4399, 32
  %4423 = icmp eq i64 %4422, %4396
  br i1 %4423, label %4424, label %4398, !llvm.loop !1269

4424:                                             ; preds = %4398
  %4425 = mul <8 x i32> %4419, %4418
  %4426 = mul <8 x i32> %4420, %4425
  %4427 = mul <8 x i32> %4421, %4426
  %4428 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4427)
  %4429 = icmp eq i64 %4392, %4396
  br i1 %4429, label %4442, label %4430

4430:                                             ; preds = %4383, %4424
  %4431 = phi i64 [ %4386, %4383 ], [ %4397, %4424 ]
  %4432 = phi i32 [ 1, %4383 ], [ %4428, %4424 ]
  br label %4433

4433:                                             ; preds = %4430, %4433
  %4434 = phi i64 [ %4439, %4433 ], [ %4431, %4430 ]
  %4435 = phi i32 [ %4438, %4433 ], [ %4432, %4430 ]
  %4436 = getelementptr inbounds i32, ptr %11, i64 %4434
  %4437 = load i32, ptr %4436, align 4, !tbaa !5
  %4438 = mul nsw i32 %4437, %4435
  %4439 = add nsw i64 %4434, -1
  %4440 = trunc i64 %4434 to i32
  %4441 = icmp sgt i32 %4440, 0
  br i1 %4441, label %4433, label %4442, !llvm.loop !1270

4442:                                             ; preds = %4433, %4424
  %4443 = phi i32 [ %4428, %4424 ], [ %4438, %4433 ]
  %4444 = and i64 %4393, 4294967295
  %4445 = getelementptr inbounds i32, ptr %6, i64 %4444
  %4446 = load i32, ptr %4445, align 4, !tbaa !5
  %4447 = mul nsw i32 %4446, %4443
  %4448 = add nsw i32 %4447, %4387
  %4449 = icmp sgt i64 %4385, 2
  %4450 = add nsw i64 %4386, -1
  %4451 = add i32 %4384, 1
  br i1 %4449, label %4383, label %4452, !llvm.loop !1271

4452:                                             ; preds = %4442, %4379
  %4453 = phi i32 [ %4382, %4379 ], [ %4448, %4442 ]
  %4454 = icmp slt i32 %4453, %5
  br i1 %4454, label %4457, label %4455

4455:                                             ; preds = %4452
  %4456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

4457:                                             ; preds = %4452
  %4458 = sext i32 %4453 to i64
  %4459 = getelementptr inbounds float, ptr %4214, i64 %4458
  %4460 = load float, ptr %4459, align 4, !tbaa !162
  %4461 = fadd fast float %4380, %4460
  store float %4461, ptr %4216, align 4, !tbaa !162
  %4462 = add nuw nsw i32 %4381, 1
  br i1 %4229, label %4463, label %4513

4463:                                             ; preds = %4457
  %4464 = load i32, ptr %4, align 4, !tbaa !5
  %4465 = load i32, ptr %12, align 4, !tbaa !5
  %4466 = add nsw i32 %4465, -1
  %4467 = icmp slt i32 %4464, %4466
  br i1 %4467, label %4490, label %4468

4468:                                             ; preds = %4463
  %4469 = icmp eq i32 %4464, %4466
  br i1 %4469, label %4470, label %4506

4470:                                             ; preds = %4468
  store i32 0, ptr %4, align 4, !tbaa !5
  %4471 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4471, ptr %6, align 4, !tbaa !5
  br i1 %4234, label %4513, label %4472

4472:                                             ; preds = %4470, %4500
  %4473 = phi i64 [ %4504, %4500 ], [ 1, %4470 ]
  %4474 = getelementptr inbounds i32, ptr %4, i64 %4473
  %4475 = load i32, ptr %4474, align 4, !tbaa !5
  %4476 = getelementptr inbounds i32, ptr %12, i64 %4473
  %4477 = load i32, ptr %4476, align 4, !tbaa !5
  %4478 = add nsw i32 %4477, -1
  %4479 = icmp slt i32 %4475, %4478
  br i1 %4479, label %4480, label %4498

4480:                                             ; preds = %4472
  br i1 %4467, label %4490, label %4481

4481:                                             ; preds = %4480
  %4482 = shl i64 %4473, 32
  %4483 = add i64 %4482, -4294967296
  %4484 = ashr exact i64 %4483, 32
  %4485 = getelementptr inbounds i32, ptr %7, i64 %4484
  %4486 = load i32, ptr %4485, align 4, !tbaa !5
  %4487 = getelementptr inbounds i32, ptr %6, i64 %4473
  %4488 = load i32, ptr %4487, align 4, !tbaa !5
  %4489 = add nsw i32 %4488, %4486
  store i32 %4489, ptr %4487, align 4, !tbaa !5
  br label %4508

4490:                                             ; preds = %4463, %4480
  %4491 = phi i32 [ %4475, %4480 ], [ %4464, %4463 ]
  %4492 = phi ptr [ %4474, %4480 ], [ %4, %4463 ]
  %4493 = phi i64 [ %4473, %4480 ], [ 0, %4463 ]
  %4494 = add nsw i32 %4491, 1
  store i32 %4494, ptr %4492, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %7, i64 %4493
  %4496 = load i32, ptr %4495, align 4, !tbaa !5
  %4497 = getelementptr inbounds i32, ptr %6, i64 %4493
  br label %4508

4498:                                             ; preds = %4472
  %4499 = icmp eq i32 %4475, %4478
  br i1 %4499, label %4500, label %4506

4500:                                             ; preds = %4498
  store i32 0, ptr %4474, align 4, !tbaa !5
  %4501 = getelementptr inbounds i32, ptr %8, i64 %4473
  %4502 = load i32, ptr %4501, align 4, !tbaa !5
  %4503 = getelementptr inbounds i32, ptr %6, i64 %4473
  store i32 %4502, ptr %4503, align 4, !tbaa !5
  %4504 = add nuw nsw i64 %4473, 1
  %4505 = icmp eq i64 %4504, %4232
  br i1 %4505, label %4513, label %4472, !llvm.loop !1272

4506:                                             ; preds = %4468, %4498
  %4507 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4508:                                             ; preds = %4481, %4490
  %4509 = phi ptr [ %4497, %4490 ], [ %4474, %4481 ]
  %4510 = phi i32 [ %4496, %4490 ], [ 1, %4481 ]
  %4511 = load i32, ptr %4509, align 4, !tbaa !5
  %4512 = add nsw i32 %4511, %4510
  store i32 %4512, ptr %4509, align 4, !tbaa !5
  br label %4513

4513:                                             ; preds = %4500, %4508, %4470, %4457
  %4514 = icmp eq i32 %4462, %5
  br i1 %4514, label %5406, label %4379, !llvm.loop !1273

4515:                                             ; preds = %4220
  %4516 = getelementptr inbounds i32, ptr %3, i64 %19
  %4517 = load i32, ptr %4516, align 4, !tbaa !5
  %4518 = icmp eq i32 %4517, 0
  %4519 = icmp sgt i32 %5, 0
  br i1 %4518, label %4529, label %4520

4520:                                             ; preds = %4515
  br i1 %4519, label %4521, label %5406

4521:                                             ; preds = %4520
  %4522 = icmp sgt i32 %13, 1
  %4523 = icmp sgt i32 %13, 0
  %4524 = add i32 %13, -2
  %4525 = zext i32 %4524 to i64
  %4526 = zext i32 %13 to i64
  %4527 = add nuw i32 %5, 1
  %4528 = icmp eq i32 %13, 1
  br label %4667

4529:                                             ; preds = %4515
  br i1 %4519, label %4530, label %5406

4530:                                             ; preds = %4529
  %4531 = icmp sgt i32 %13, 1
  %4532 = icmp sgt i32 %13, 0
  %4533 = add i32 %13, -2
  %4534 = zext i32 %4533 to i64
  %4535 = zext i32 %13 to i64
  %4536 = add nuw i32 %5, 1
  %4537 = icmp eq i32 %13, 1
  br label %4538

4538:                                             ; preds = %4530, %4665
  %4539 = phi float [ 0.000000e+00, %4530 ], [ %4616, %4665 ]
  %4540 = phi i32 [ 0, %4530 ], [ %4617, %4665 ]
  %4541 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4531, label %4542, label %4611

4542:                                             ; preds = %4538, %4601
  %4543 = phi i32 [ %4610, %4601 ], [ 0, %4538 ]
  %4544 = phi i64 [ %4552, %4601 ], [ %4535, %4538 ]
  %4545 = phi i64 [ %4609, %4601 ], [ %4534, %4538 ]
  %4546 = phi i32 [ %4607, %4601 ], [ %4541, %4538 ]
  %4547 = sub i32 %4533, %4543
  %4548 = tail call i32 @llvm.smin.i32(i32 %4547, i32 0)
  %4549 = sub i32 %4547, %4548
  %4550 = zext i32 %4549 to i64
  %4551 = add nuw nsw i64 %4550, 1
  %4552 = add nsw i64 %4544, -1
  %4553 = icmp ult i32 %4549, 31
  br i1 %4553, label %4589, label %4554

4554:                                             ; preds = %4542
  %4555 = and i64 %4551, 8589934560
  %4556 = sub i64 %4545, %4555
  br label %4557

4557:                                             ; preds = %4557, %4554
  %4558 = phi i64 [ 0, %4554 ], [ %4581, %4557 ]
  %4559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4554 ], [ %4577, %4557 ]
  %4560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4554 ], [ %4578, %4557 ]
  %4561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4554 ], [ %4579, %4557 ]
  %4562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4554 ], [ %4580, %4557 ]
  %4563 = sub i64 %4545, %4558
  %4564 = getelementptr inbounds i32, ptr %9, i64 %4563
  %4565 = getelementptr inbounds i32, ptr %4564, i64 -7
  %4566 = load <8 x i32>, ptr %4565, align 4, !tbaa !5
  %4567 = shufflevector <8 x i32> %4566, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4568 = getelementptr inbounds i32, ptr %4564, i64 -15
  %4569 = load <8 x i32>, ptr %4568, align 4, !tbaa !5
  %4570 = shufflevector <8 x i32> %4569, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4571 = getelementptr inbounds i32, ptr %4564, i64 -23
  %4572 = load <8 x i32>, ptr %4571, align 4, !tbaa !5
  %4573 = shufflevector <8 x i32> %4572, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4574 = getelementptr inbounds i32, ptr %4564, i64 -31
  %4575 = load <8 x i32>, ptr %4574, align 4, !tbaa !5
  %4576 = shufflevector <8 x i32> %4575, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4577 = mul <8 x i32> %4567, %4559
  %4578 = mul <8 x i32> %4570, %4560
  %4579 = mul <8 x i32> %4573, %4561
  %4580 = mul <8 x i32> %4576, %4562
  %4581 = add nuw i64 %4558, 32
  %4582 = icmp eq i64 %4581, %4555
  br i1 %4582, label %4583, label %4557, !llvm.loop !1274

4583:                                             ; preds = %4557
  %4584 = mul <8 x i32> %4578, %4577
  %4585 = mul <8 x i32> %4579, %4584
  %4586 = mul <8 x i32> %4580, %4585
  %4587 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4586)
  %4588 = icmp eq i64 %4551, %4555
  br i1 %4588, label %4601, label %4589

4589:                                             ; preds = %4542, %4583
  %4590 = phi i64 [ %4545, %4542 ], [ %4556, %4583 ]
  %4591 = phi i32 [ 1, %4542 ], [ %4587, %4583 ]
  br label %4592

4592:                                             ; preds = %4589, %4592
  %4593 = phi i64 [ %4598, %4592 ], [ %4590, %4589 ]
  %4594 = phi i32 [ %4597, %4592 ], [ %4591, %4589 ]
  %4595 = getelementptr inbounds i32, ptr %9, i64 %4593
  %4596 = load i32, ptr %4595, align 4, !tbaa !5
  %4597 = mul nsw i32 %4596, %4594
  %4598 = add nsw i64 %4593, -1
  %4599 = trunc i64 %4593 to i32
  %4600 = icmp sgt i32 %4599, 0
  br i1 %4600, label %4592, label %4601, !llvm.loop !1275

4601:                                             ; preds = %4592, %4583
  %4602 = phi i32 [ %4587, %4583 ], [ %4597, %4592 ]
  %4603 = and i64 %4552, 4294967295
  %4604 = getelementptr inbounds i32, ptr %6, i64 %4603
  %4605 = load i32, ptr %4604, align 4, !tbaa !5
  %4606 = mul nsw i32 %4605, %4602
  %4607 = add nsw i32 %4606, %4546
  %4608 = icmp sgt i64 %4544, 2
  %4609 = add nsw i64 %4545, -1
  %4610 = add i32 %4543, 1
  br i1 %4608, label %4542, label %4611, !llvm.loop !1276

4611:                                             ; preds = %4601, %4538
  %4612 = phi i32 [ %4541, %4538 ], [ %4607, %4601 ]
  %4613 = sext i32 %4612 to i64
  %4614 = getelementptr inbounds float, ptr %4214, i64 %4613
  %4615 = load float, ptr %4614, align 4, !tbaa !162
  %4616 = fadd fast float %4539, %4615
  store float %4616, ptr %4216, align 4, !tbaa !162
  %4617 = add nuw nsw i32 %4540, 1
  br i1 %4532, label %4618, label %4665

4618:                                             ; preds = %4611
  %4619 = load i32, ptr %4, align 4, !tbaa !5
  %4620 = load i32, ptr %12, align 4, !tbaa !5
  %4621 = add nsw i32 %4620, -1
  %4622 = icmp slt i32 %4619, %4621
  br i1 %4622, label %4642, label %4623

4623:                                             ; preds = %4618
  %4624 = icmp eq i32 %4619, %4621
  br i1 %4624, label %4625, label %4658

4625:                                             ; preds = %4623
  store i32 0, ptr %4, align 4, !tbaa !5
  %4626 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4626, ptr %6, align 4, !tbaa !5
  br i1 %4537, label %4665, label %4627

4627:                                             ; preds = %4625, %4652
  %4628 = phi i64 [ %4656, %4652 ], [ 1, %4625 ]
  %4629 = getelementptr inbounds i32, ptr %4, i64 %4628
  %4630 = load i32, ptr %4629, align 4, !tbaa !5
  %4631 = getelementptr inbounds i32, ptr %12, i64 %4628
  %4632 = load i32, ptr %4631, align 4, !tbaa !5
  %4633 = add nsw i32 %4632, -1
  %4634 = icmp slt i32 %4630, %4633
  br i1 %4634, label %4635, label %4650

4635:                                             ; preds = %4627
  br i1 %4622, label %4642, label %4636

4636:                                             ; preds = %4635
  %4637 = getelementptr inbounds i32, ptr %7, i64 %4628
  %4638 = load i32, ptr %4637, align 4, !tbaa !5
  %4639 = getelementptr inbounds i32, ptr %6, i64 %4628
  %4640 = load i32, ptr %4639, align 4, !tbaa !5
  %4641 = add nsw i32 %4640, %4638
  store i32 %4641, ptr %4639, align 4, !tbaa !5
  br label %4660

4642:                                             ; preds = %4618, %4635
  %4643 = phi i32 [ %4630, %4635 ], [ %4619, %4618 ]
  %4644 = phi ptr [ %4629, %4635 ], [ %4, %4618 ]
  %4645 = phi i64 [ %4628, %4635 ], [ 0, %4618 ]
  %4646 = add nsw i32 %4643, 1
  store i32 %4646, ptr %4644, align 4, !tbaa !5
  %4647 = getelementptr inbounds i32, ptr %7, i64 %4645
  %4648 = load i32, ptr %4647, align 4, !tbaa !5
  %4649 = getelementptr inbounds i32, ptr %6, i64 %4645
  br label %4660

4650:                                             ; preds = %4627
  %4651 = icmp eq i32 %4630, %4633
  br i1 %4651, label %4652, label %4658

4652:                                             ; preds = %4650
  store i32 0, ptr %4629, align 4, !tbaa !5
  %4653 = getelementptr inbounds i32, ptr %8, i64 %4628
  %4654 = load i32, ptr %4653, align 4, !tbaa !5
  %4655 = getelementptr inbounds i32, ptr %6, i64 %4628
  store i32 %4654, ptr %4655, align 4, !tbaa !5
  %4656 = add nuw nsw i64 %4628, 1
  %4657 = icmp eq i64 %4656, %4535
  br i1 %4657, label %4665, label %4627, !llvm.loop !1277

4658:                                             ; preds = %4623, %4650
  %4659 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4660:                                             ; preds = %4636, %4642
  %4661 = phi ptr [ %4649, %4642 ], [ %4629, %4636 ]
  %4662 = phi i32 [ %4648, %4642 ], [ 1, %4636 ]
  %4663 = load i32, ptr %4661, align 4, !tbaa !5
  %4664 = add nsw i32 %4663, %4662
  store i32 %4664, ptr %4661, align 4, !tbaa !5
  br label %4665

4665:                                             ; preds = %4652, %4660, %4625, %4611
  %4666 = icmp eq i32 %4617, %5
  br i1 %4666, label %5406, label %4538, !llvm.loop !1278

4667:                                             ; preds = %4521, %4801
  %4668 = phi float [ 0.000000e+00, %4521 ], [ %4749, %4801 ]
  %4669 = phi i32 [ 0, %4521 ], [ %4750, %4801 ]
  %4670 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4522, label %4671, label %4740

4671:                                             ; preds = %4667, %4730
  %4672 = phi i32 [ %4739, %4730 ], [ 0, %4667 ]
  %4673 = phi i64 [ %4681, %4730 ], [ %4526, %4667 ]
  %4674 = phi i64 [ %4738, %4730 ], [ %4525, %4667 ]
  %4675 = phi i32 [ %4736, %4730 ], [ %4670, %4667 ]
  %4676 = sub i32 %4524, %4672
  %4677 = tail call i32 @llvm.smin.i32(i32 %4676, i32 0)
  %4678 = sub i32 %4676, %4677
  %4679 = zext i32 %4678 to i64
  %4680 = add nuw nsw i64 %4679, 1
  %4681 = add nsw i64 %4673, -1
  %4682 = icmp ult i32 %4678, 31
  br i1 %4682, label %4718, label %4683

4683:                                             ; preds = %4671
  %4684 = and i64 %4680, 8589934560
  %4685 = sub i64 %4674, %4684
  br label %4686

4686:                                             ; preds = %4686, %4683
  %4687 = phi i64 [ 0, %4683 ], [ %4710, %4686 ]
  %4688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4706, %4686 ]
  %4689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4707, %4686 ]
  %4690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4708, %4686 ]
  %4691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4683 ], [ %4709, %4686 ]
  %4692 = sub i64 %4674, %4687
  %4693 = getelementptr inbounds i32, ptr %11, i64 %4692
  %4694 = getelementptr inbounds i32, ptr %4693, i64 -7
  %4695 = load <8 x i32>, ptr %4694, align 4, !tbaa !5
  %4696 = shufflevector <8 x i32> %4695, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4697 = getelementptr inbounds i32, ptr %4693, i64 -15
  %4698 = load <8 x i32>, ptr %4697, align 4, !tbaa !5
  %4699 = shufflevector <8 x i32> %4698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4700 = getelementptr inbounds i32, ptr %4693, i64 -23
  %4701 = load <8 x i32>, ptr %4700, align 4, !tbaa !5
  %4702 = shufflevector <8 x i32> %4701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4703 = getelementptr inbounds i32, ptr %4693, i64 -31
  %4704 = load <8 x i32>, ptr %4703, align 4, !tbaa !5
  %4705 = shufflevector <8 x i32> %4704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4706 = mul <8 x i32> %4696, %4688
  %4707 = mul <8 x i32> %4699, %4689
  %4708 = mul <8 x i32> %4702, %4690
  %4709 = mul <8 x i32> %4705, %4691
  %4710 = add nuw i64 %4687, 32
  %4711 = icmp eq i64 %4710, %4684
  br i1 %4711, label %4712, label %4686, !llvm.loop !1279

4712:                                             ; preds = %4686
  %4713 = mul <8 x i32> %4707, %4706
  %4714 = mul <8 x i32> %4708, %4713
  %4715 = mul <8 x i32> %4709, %4714
  %4716 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4715)
  %4717 = icmp eq i64 %4680, %4684
  br i1 %4717, label %4730, label %4718

4718:                                             ; preds = %4671, %4712
  %4719 = phi i64 [ %4674, %4671 ], [ %4685, %4712 ]
  %4720 = phi i32 [ 1, %4671 ], [ %4716, %4712 ]
  br label %4721

4721:                                             ; preds = %4718, %4721
  %4722 = phi i64 [ %4727, %4721 ], [ %4719, %4718 ]
  %4723 = phi i32 [ %4726, %4721 ], [ %4720, %4718 ]
  %4724 = getelementptr inbounds i32, ptr %11, i64 %4722
  %4725 = load i32, ptr %4724, align 4, !tbaa !5
  %4726 = mul nsw i32 %4725, %4723
  %4727 = add nsw i64 %4722, -1
  %4728 = trunc i64 %4722 to i32
  %4729 = icmp sgt i32 %4728, 0
  br i1 %4729, label %4721, label %4730, !llvm.loop !1280

4730:                                             ; preds = %4721, %4712
  %4731 = phi i32 [ %4716, %4712 ], [ %4726, %4721 ]
  %4732 = and i64 %4681, 4294967295
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4732
  %4734 = load i32, ptr %4733, align 4, !tbaa !5
  %4735 = mul nsw i32 %4734, %4731
  %4736 = add nsw i32 %4735, %4675
  %4737 = icmp sgt i64 %4673, 2
  %4738 = add nsw i64 %4674, -1
  %4739 = add i32 %4672, 1
  br i1 %4737, label %4671, label %4740, !llvm.loop !1281

4740:                                             ; preds = %4730, %4667
  %4741 = phi i32 [ %4670, %4667 ], [ %4736, %4730 ]
  %4742 = icmp slt i32 %4741, %5
  br i1 %4742, label %4745, label %4743

4743:                                             ; preds = %4740
  %4744 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

4745:                                             ; preds = %4740
  %4746 = sext i32 %4741 to i64
  %4747 = getelementptr inbounds float, ptr %4214, i64 %4746
  %4748 = load float, ptr %4747, align 4, !tbaa !162
  %4749 = fadd fast float %4668, %4748
  store float %4749, ptr %4216, align 4, !tbaa !162
  %4750 = add nuw nsw i32 %4669, 1
  br i1 %4523, label %4751, label %4801

4751:                                             ; preds = %4745
  %4752 = load i32, ptr %4, align 4, !tbaa !5
  %4753 = load i32, ptr %12, align 4, !tbaa !5
  %4754 = add nsw i32 %4753, -1
  %4755 = icmp slt i32 %4752, %4754
  br i1 %4755, label %4778, label %4756

4756:                                             ; preds = %4751
  %4757 = icmp eq i32 %4752, %4754
  br i1 %4757, label %4758, label %4794

4758:                                             ; preds = %4756
  store i32 0, ptr %4, align 4, !tbaa !5
  %4759 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4759, ptr %6, align 4, !tbaa !5
  br i1 %4528, label %4801, label %4760

4760:                                             ; preds = %4758, %4788
  %4761 = phi i64 [ %4792, %4788 ], [ 1, %4758 ]
  %4762 = getelementptr inbounds i32, ptr %4, i64 %4761
  %4763 = load i32, ptr %4762, align 4, !tbaa !5
  %4764 = getelementptr inbounds i32, ptr %12, i64 %4761
  %4765 = load i32, ptr %4764, align 4, !tbaa !5
  %4766 = add nsw i32 %4765, -1
  %4767 = icmp slt i32 %4763, %4766
  br i1 %4767, label %4768, label %4786

4768:                                             ; preds = %4760
  br i1 %4755, label %4778, label %4769

4769:                                             ; preds = %4768
  %4770 = shl i64 %4761, 32
  %4771 = add i64 %4770, -4294967296
  %4772 = ashr exact i64 %4771, 32
  %4773 = getelementptr inbounds i32, ptr %7, i64 %4772
  %4774 = load i32, ptr %4773, align 4, !tbaa !5
  %4775 = getelementptr inbounds i32, ptr %6, i64 %4761
  %4776 = load i32, ptr %4775, align 4, !tbaa !5
  %4777 = add nsw i32 %4776, %4774
  store i32 %4777, ptr %4775, align 4, !tbaa !5
  br label %4796

4778:                                             ; preds = %4751, %4768
  %4779 = phi i32 [ %4763, %4768 ], [ %4752, %4751 ]
  %4780 = phi ptr [ %4762, %4768 ], [ %4, %4751 ]
  %4781 = phi i64 [ %4761, %4768 ], [ 0, %4751 ]
  %4782 = add nsw i32 %4779, 1
  store i32 %4782, ptr %4780, align 4, !tbaa !5
  %4783 = getelementptr inbounds i32, ptr %7, i64 %4781
  %4784 = load i32, ptr %4783, align 4, !tbaa !5
  %4785 = getelementptr inbounds i32, ptr %6, i64 %4781
  br label %4796

4786:                                             ; preds = %4760
  %4787 = icmp eq i32 %4763, %4766
  br i1 %4787, label %4788, label %4794

4788:                                             ; preds = %4786
  store i32 0, ptr %4762, align 4, !tbaa !5
  %4789 = getelementptr inbounds i32, ptr %8, i64 %4761
  %4790 = load i32, ptr %4789, align 4, !tbaa !5
  %4791 = getelementptr inbounds i32, ptr %6, i64 %4761
  store i32 %4790, ptr %4791, align 4, !tbaa !5
  %4792 = add nuw nsw i64 %4761, 1
  %4793 = icmp eq i64 %4792, %4526
  br i1 %4793, label %4801, label %4760, !llvm.loop !1282

4794:                                             ; preds = %4756, %4786
  %4795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4796:                                             ; preds = %4769, %4778
  %4797 = phi ptr [ %4785, %4778 ], [ %4762, %4769 ]
  %4798 = phi i32 [ %4784, %4778 ], [ 1, %4769 ]
  %4799 = load i32, ptr %4797, align 4, !tbaa !5
  %4800 = add nsw i32 %4799, %4798
  store i32 %4800, ptr %4797, align 4, !tbaa !5
  br label %4801

4801:                                             ; preds = %4788, %4796, %4758, %4745
  %4802 = icmp eq i32 %4750, %5
  br i1 %4802, label %5406, label %4667, !llvm.loop !1283

4803:                                             ; preds = %4220
  %4804 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1750, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

4805:                                             ; preds = %18
  %4806 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4807 = load ptr, ptr %4806, align 8, !tbaa !9
  %4808 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4809 = load ptr, ptr %4808, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4809, align 8, !tbaa !18
  %4810 = icmp eq i32 %13, 0
  br i1 %4810, label %4811, label %4814

4811:                                             ; preds = %4805
  %4812 = load float, ptr %4807, align 4, !tbaa !162
  %4813 = fpext float %4812 to double
  store double %4813, ptr %4809, align 8, !tbaa !18
  br label %5406

4814:                                             ; preds = %4805
  switch i32 %1, label %5398 [
    i32 1, label %4815
    i32 0, label %5108
  ]

4815:                                             ; preds = %4814
  %4816 = getelementptr inbounds i32, ptr %3, i64 %19
  %4817 = load i32, ptr %4816, align 4, !tbaa !5
  %4818 = icmp eq i32 %4817, 0
  %4819 = icmp sgt i32 %5, 0
  br i1 %4818, label %4829, label %4820

4820:                                             ; preds = %4815
  br i1 %4819, label %4821, label %5406

4821:                                             ; preds = %4820
  %4822 = icmp sgt i32 %13, 1
  %4823 = icmp sgt i32 %13, 0
  %4824 = add i32 %13, -2
  %4825 = zext i32 %4824 to i64
  %4826 = zext i32 %13 to i64
  %4827 = add nuw i32 %5, 1
  %4828 = icmp eq i32 %13, 1
  br label %4971

4829:                                             ; preds = %4815
  br i1 %4819, label %4830, label %5406

4830:                                             ; preds = %4829
  %4831 = icmp sgt i32 %13, 1
  %4832 = icmp sgt i32 %13, 0
  %4833 = add i32 %13, -2
  %4834 = zext i32 %4833 to i64
  %4835 = zext i32 %13 to i64
  %4836 = add nuw i32 %5, 1
  %4837 = icmp eq i32 %13, 1
  br label %4838

4838:                                             ; preds = %4830, %4969
  %4839 = phi double [ 0.000000e+00, %4830 ], [ %4920, %4969 ]
  %4840 = phi i32 [ 0, %4830 ], [ %4921, %4969 ]
  %4841 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4831, label %4842, label %4911

4842:                                             ; preds = %4838, %4901
  %4843 = phi i32 [ %4910, %4901 ], [ 0, %4838 ]
  %4844 = phi i64 [ %4852, %4901 ], [ %4835, %4838 ]
  %4845 = phi i64 [ %4909, %4901 ], [ %4834, %4838 ]
  %4846 = phi i32 [ %4907, %4901 ], [ %4841, %4838 ]
  %4847 = sub i32 %4833, %4843
  %4848 = tail call i32 @llvm.smin.i32(i32 %4847, i32 0)
  %4849 = sub i32 %4847, %4848
  %4850 = zext i32 %4849 to i64
  %4851 = add nuw nsw i64 %4850, 1
  %4852 = add nsw i64 %4844, -1
  %4853 = icmp ult i32 %4849, 31
  br i1 %4853, label %4889, label %4854

4854:                                             ; preds = %4842
  %4855 = and i64 %4851, 8589934560
  %4856 = sub i64 %4845, %4855
  br label %4857

4857:                                             ; preds = %4857, %4854
  %4858 = phi i64 [ 0, %4854 ], [ %4881, %4857 ]
  %4859 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4854 ], [ %4877, %4857 ]
  %4860 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4854 ], [ %4878, %4857 ]
  %4861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4854 ], [ %4879, %4857 ]
  %4862 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4854 ], [ %4880, %4857 ]
  %4863 = sub i64 %4845, %4858
  %4864 = getelementptr inbounds i32, ptr %9, i64 %4863
  %4865 = getelementptr inbounds i32, ptr %4864, i64 -7
  %4866 = load <8 x i32>, ptr %4865, align 4, !tbaa !5
  %4867 = shufflevector <8 x i32> %4866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4868 = getelementptr inbounds i32, ptr %4864, i64 -15
  %4869 = load <8 x i32>, ptr %4868, align 4, !tbaa !5
  %4870 = shufflevector <8 x i32> %4869, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4871 = getelementptr inbounds i32, ptr %4864, i64 -23
  %4872 = load <8 x i32>, ptr %4871, align 4, !tbaa !5
  %4873 = shufflevector <8 x i32> %4872, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4874 = getelementptr inbounds i32, ptr %4864, i64 -31
  %4875 = load <8 x i32>, ptr %4874, align 4, !tbaa !5
  %4876 = shufflevector <8 x i32> %4875, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4877 = mul <8 x i32> %4867, %4859
  %4878 = mul <8 x i32> %4870, %4860
  %4879 = mul <8 x i32> %4873, %4861
  %4880 = mul <8 x i32> %4876, %4862
  %4881 = add nuw i64 %4858, 32
  %4882 = icmp eq i64 %4881, %4855
  br i1 %4882, label %4883, label %4857, !llvm.loop !1284

4883:                                             ; preds = %4857
  %4884 = mul <8 x i32> %4878, %4877
  %4885 = mul <8 x i32> %4879, %4884
  %4886 = mul <8 x i32> %4880, %4885
  %4887 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4886)
  %4888 = icmp eq i64 %4851, %4855
  br i1 %4888, label %4901, label %4889

4889:                                             ; preds = %4842, %4883
  %4890 = phi i64 [ %4845, %4842 ], [ %4856, %4883 ]
  %4891 = phi i32 [ 1, %4842 ], [ %4887, %4883 ]
  br label %4892

4892:                                             ; preds = %4889, %4892
  %4893 = phi i64 [ %4898, %4892 ], [ %4890, %4889 ]
  %4894 = phi i32 [ %4897, %4892 ], [ %4891, %4889 ]
  %4895 = getelementptr inbounds i32, ptr %9, i64 %4893
  %4896 = load i32, ptr %4895, align 4, !tbaa !5
  %4897 = mul nsw i32 %4896, %4894
  %4898 = add nsw i64 %4893, -1
  %4899 = trunc i64 %4893 to i32
  %4900 = icmp sgt i32 %4899, 0
  br i1 %4900, label %4892, label %4901, !llvm.loop !1285

4901:                                             ; preds = %4892, %4883
  %4902 = phi i32 [ %4887, %4883 ], [ %4897, %4892 ]
  %4903 = and i64 %4852, 4294967295
  %4904 = getelementptr inbounds i32, ptr %6, i64 %4903
  %4905 = load i32, ptr %4904, align 4, !tbaa !5
  %4906 = mul nsw i32 %4905, %4902
  %4907 = add nsw i32 %4906, %4846
  %4908 = icmp sgt i64 %4844, 2
  %4909 = add nsw i64 %4845, -1
  %4910 = add i32 %4843, 1
  br i1 %4908, label %4842, label %4911, !llvm.loop !1286

4911:                                             ; preds = %4901, %4838
  %4912 = phi i32 [ %4841, %4838 ], [ %4907, %4901 ]
  %4913 = sext i32 %4912 to i64
  %4914 = getelementptr inbounds double, ptr %2, i64 %4913
  %4915 = load double, ptr %4914, align 8, !tbaa !18
  %4916 = getelementptr inbounds float, ptr %4807, i64 %4913
  %4917 = load float, ptr %4916, align 4, !tbaa !162
  %4918 = fpext float %4917 to double
  %4919 = fmul fast double %4915, %4918
  %4920 = fadd fast double %4919, %4839
  store double %4920, ptr %4809, align 8, !tbaa !18
  %4921 = add nuw nsw i32 %4840, 1
  br i1 %4832, label %4922, label %4969

4922:                                             ; preds = %4911
  %4923 = load i32, ptr %4, align 4, !tbaa !5
  %4924 = load i32, ptr %12, align 4, !tbaa !5
  %4925 = add nsw i32 %4924, -1
  %4926 = icmp slt i32 %4923, %4925
  br i1 %4926, label %4946, label %4927

4927:                                             ; preds = %4922
  %4928 = icmp eq i32 %4923, %4925
  br i1 %4928, label %4929, label %4962

4929:                                             ; preds = %4927
  store i32 0, ptr %4, align 4, !tbaa !5
  %4930 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4930, ptr %6, align 4, !tbaa !5
  br i1 %4837, label %4969, label %4931

4931:                                             ; preds = %4929, %4956
  %4932 = phi i64 [ %4960, %4956 ], [ 1, %4929 ]
  %4933 = getelementptr inbounds i32, ptr %4, i64 %4932
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = getelementptr inbounds i32, ptr %12, i64 %4932
  %4936 = load i32, ptr %4935, align 4, !tbaa !5
  %4937 = add nsw i32 %4936, -1
  %4938 = icmp slt i32 %4934, %4937
  br i1 %4938, label %4939, label %4954

4939:                                             ; preds = %4931
  br i1 %4926, label %4946, label %4940

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %7, i64 %4932
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = getelementptr inbounds i32, ptr %6, i64 %4932
  %4944 = load i32, ptr %4943, align 4, !tbaa !5
  %4945 = add nsw i32 %4944, %4942
  store i32 %4945, ptr %4943, align 4, !tbaa !5
  br label %4964

4946:                                             ; preds = %4922, %4939
  %4947 = phi i32 [ %4934, %4939 ], [ %4923, %4922 ]
  %4948 = phi ptr [ %4933, %4939 ], [ %4, %4922 ]
  %4949 = phi i64 [ %4932, %4939 ], [ 0, %4922 ]
  %4950 = add nsw i32 %4947, 1
  store i32 %4950, ptr %4948, align 4, !tbaa !5
  %4951 = getelementptr inbounds i32, ptr %7, i64 %4949
  %4952 = load i32, ptr %4951, align 4, !tbaa !5
  %4953 = getelementptr inbounds i32, ptr %6, i64 %4949
  br label %4964

4954:                                             ; preds = %4931
  %4955 = icmp eq i32 %4934, %4937
  br i1 %4955, label %4956, label %4962

4956:                                             ; preds = %4954
  store i32 0, ptr %4933, align 4, !tbaa !5
  %4957 = getelementptr inbounds i32, ptr %8, i64 %4932
  %4958 = load i32, ptr %4957, align 4, !tbaa !5
  %4959 = getelementptr inbounds i32, ptr %6, i64 %4932
  store i32 %4958, ptr %4959, align 4, !tbaa !5
  %4960 = add nuw nsw i64 %4932, 1
  %4961 = icmp eq i64 %4960, %4835
  br i1 %4961, label %4969, label %4931, !llvm.loop !1287

4962:                                             ; preds = %4927, %4954
  %4963 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

4964:                                             ; preds = %4940, %4946
  %4965 = phi ptr [ %4953, %4946 ], [ %4933, %4940 ]
  %4966 = phi i32 [ %4952, %4946 ], [ 1, %4940 ]
  %4967 = load i32, ptr %4965, align 4, !tbaa !5
  %4968 = add nsw i32 %4967, %4966
  store i32 %4968, ptr %4965, align 4, !tbaa !5
  br label %4969

4969:                                             ; preds = %4956, %4964, %4929, %4911
  %4970 = icmp eq i32 %4921, %5
  br i1 %4970, label %5406, label %4838, !llvm.loop !1288

4971:                                             ; preds = %4821, %5106
  %4972 = phi double [ 0.000000e+00, %4821 ], [ %5054, %5106 ]
  %4973 = phi i32 [ 0, %4821 ], [ %5055, %5106 ]
  %4974 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4822, label %4975, label %5044

4975:                                             ; preds = %4971, %5034
  %4976 = phi i32 [ %5043, %5034 ], [ 0, %4971 ]
  %4977 = phi i64 [ %4985, %5034 ], [ %4826, %4971 ]
  %4978 = phi i64 [ %5042, %5034 ], [ %4825, %4971 ]
  %4979 = phi i32 [ %5040, %5034 ], [ %4974, %4971 ]
  %4980 = sub i32 %4824, %4976
  %4981 = tail call i32 @llvm.smin.i32(i32 %4980, i32 0)
  %4982 = sub i32 %4980, %4981
  %4983 = zext i32 %4982 to i64
  %4984 = add nuw nsw i64 %4983, 1
  %4985 = add nsw i64 %4977, -1
  %4986 = icmp ult i32 %4982, 31
  br i1 %4986, label %5022, label %4987

4987:                                             ; preds = %4975
  %4988 = and i64 %4984, 8589934560
  %4989 = sub i64 %4978, %4988
  br label %4990

4990:                                             ; preds = %4990, %4987
  %4991 = phi i64 [ 0, %4987 ], [ %5014, %4990 ]
  %4992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5010, %4990 ]
  %4993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5011, %4990 ]
  %4994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5012, %4990 ]
  %4995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5013, %4990 ]
  %4996 = sub i64 %4978, %4991
  %4997 = getelementptr inbounds i32, ptr %11, i64 %4996
  %4998 = getelementptr inbounds i32, ptr %4997, i64 -7
  %4999 = load <8 x i32>, ptr %4998, align 4, !tbaa !5
  %5000 = shufflevector <8 x i32> %4999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5001 = getelementptr inbounds i32, ptr %4997, i64 -15
  %5002 = load <8 x i32>, ptr %5001, align 4, !tbaa !5
  %5003 = shufflevector <8 x i32> %5002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5004 = getelementptr inbounds i32, ptr %4997, i64 -23
  %5005 = load <8 x i32>, ptr %5004, align 4, !tbaa !5
  %5006 = shufflevector <8 x i32> %5005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5007 = getelementptr inbounds i32, ptr %4997, i64 -31
  %5008 = load <8 x i32>, ptr %5007, align 4, !tbaa !5
  %5009 = shufflevector <8 x i32> %5008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5010 = mul <8 x i32> %5000, %4992
  %5011 = mul <8 x i32> %5003, %4993
  %5012 = mul <8 x i32> %5006, %4994
  %5013 = mul <8 x i32> %5009, %4995
  %5014 = add nuw i64 %4991, 32
  %5015 = icmp eq i64 %5014, %4988
  br i1 %5015, label %5016, label %4990, !llvm.loop !1289

5016:                                             ; preds = %4990
  %5017 = mul <8 x i32> %5011, %5010
  %5018 = mul <8 x i32> %5012, %5017
  %5019 = mul <8 x i32> %5013, %5018
  %5020 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5019)
  %5021 = icmp eq i64 %4984, %4988
  br i1 %5021, label %5034, label %5022

5022:                                             ; preds = %4975, %5016
  %5023 = phi i64 [ %4978, %4975 ], [ %4989, %5016 ]
  %5024 = phi i32 [ 1, %4975 ], [ %5020, %5016 ]
  br label %5025

5025:                                             ; preds = %5022, %5025
  %5026 = phi i64 [ %5031, %5025 ], [ %5023, %5022 ]
  %5027 = phi i32 [ %5030, %5025 ], [ %5024, %5022 ]
  %5028 = getelementptr inbounds i32, ptr %11, i64 %5026
  %5029 = load i32, ptr %5028, align 4, !tbaa !5
  %5030 = mul nsw i32 %5029, %5027
  %5031 = add nsw i64 %5026, -1
  %5032 = trunc i64 %5026 to i32
  %5033 = icmp sgt i32 %5032, 0
  br i1 %5033, label %5025, label %5034, !llvm.loop !1290

5034:                                             ; preds = %5025, %5016
  %5035 = phi i32 [ %5020, %5016 ], [ %5030, %5025 ]
  %5036 = and i64 %4985, 4294967295
  %5037 = getelementptr inbounds i32, ptr %6, i64 %5036
  %5038 = load i32, ptr %5037, align 4, !tbaa !5
  %5039 = mul nsw i32 %5038, %5035
  %5040 = add nsw i32 %5039, %4979
  %5041 = icmp sgt i64 %4977, 2
  %5042 = add nsw i64 %4978, -1
  %5043 = add i32 %4976, 1
  br i1 %5041, label %4975, label %5044, !llvm.loop !1291

5044:                                             ; preds = %5034, %4971
  %5045 = phi i32 [ %4974, %4971 ], [ %5040, %5034 ]
  %5046 = icmp slt i32 %5045, %5
  br i1 %5046, label %5049, label %5047

5047:                                             ; preds = %5044
  %5048 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

5049:                                             ; preds = %5044
  %5050 = sext i32 %5045 to i64
  %5051 = getelementptr inbounds float, ptr %4807, i64 %5050
  %5052 = load float, ptr %5051, align 4, !tbaa !162
  %5053 = fpext float %5052 to double
  %5054 = fadd fast double %4972, %5053
  store double %5054, ptr %4809, align 8, !tbaa !18
  %5055 = add nuw nsw i32 %4973, 1
  br i1 %4823, label %5056, label %5106

5056:                                             ; preds = %5049
  %5057 = load i32, ptr %4, align 4, !tbaa !5
  %5058 = load i32, ptr %12, align 4, !tbaa !5
  %5059 = add nsw i32 %5058, -1
  %5060 = icmp slt i32 %5057, %5059
  br i1 %5060, label %5083, label %5061

5061:                                             ; preds = %5056
  %5062 = icmp eq i32 %5057, %5059
  br i1 %5062, label %5063, label %5099

5063:                                             ; preds = %5061
  store i32 0, ptr %4, align 4, !tbaa !5
  %5064 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5064, ptr %6, align 4, !tbaa !5
  br i1 %4828, label %5106, label %5065

5065:                                             ; preds = %5063, %5093
  %5066 = phi i64 [ %5097, %5093 ], [ 1, %5063 ]
  %5067 = getelementptr inbounds i32, ptr %4, i64 %5066
  %5068 = load i32, ptr %5067, align 4, !tbaa !5
  %5069 = getelementptr inbounds i32, ptr %12, i64 %5066
  %5070 = load i32, ptr %5069, align 4, !tbaa !5
  %5071 = add nsw i32 %5070, -1
  %5072 = icmp slt i32 %5068, %5071
  br i1 %5072, label %5073, label %5091

5073:                                             ; preds = %5065
  br i1 %5060, label %5083, label %5074

5074:                                             ; preds = %5073
  %5075 = shl i64 %5066, 32
  %5076 = add i64 %5075, -4294967296
  %5077 = ashr exact i64 %5076, 32
  %5078 = getelementptr inbounds i32, ptr %7, i64 %5077
  %5079 = load i32, ptr %5078, align 4, !tbaa !5
  %5080 = getelementptr inbounds i32, ptr %6, i64 %5066
  %5081 = load i32, ptr %5080, align 4, !tbaa !5
  %5082 = add nsw i32 %5081, %5079
  store i32 %5082, ptr %5080, align 4, !tbaa !5
  br label %5101

5083:                                             ; preds = %5056, %5073
  %5084 = phi i32 [ %5068, %5073 ], [ %5057, %5056 ]
  %5085 = phi ptr [ %5067, %5073 ], [ %4, %5056 ]
  %5086 = phi i64 [ %5066, %5073 ], [ 0, %5056 ]
  %5087 = add nsw i32 %5084, 1
  store i32 %5087, ptr %5085, align 4, !tbaa !5
  %5088 = getelementptr inbounds i32, ptr %7, i64 %5086
  %5089 = load i32, ptr %5088, align 4, !tbaa !5
  %5090 = getelementptr inbounds i32, ptr %6, i64 %5086
  br label %5101

5091:                                             ; preds = %5065
  %5092 = icmp eq i32 %5068, %5071
  br i1 %5092, label %5093, label %5099

5093:                                             ; preds = %5091
  store i32 0, ptr %5067, align 4, !tbaa !5
  %5094 = getelementptr inbounds i32, ptr %8, i64 %5066
  %5095 = load i32, ptr %5094, align 4, !tbaa !5
  %5096 = getelementptr inbounds i32, ptr %6, i64 %5066
  store i32 %5095, ptr %5096, align 4, !tbaa !5
  %5097 = add nuw nsw i64 %5066, 1
  %5098 = icmp eq i64 %5097, %4826
  br i1 %5098, label %5106, label %5065, !llvm.loop !1292

5099:                                             ; preds = %5061, %5091
  %5100 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

5101:                                             ; preds = %5074, %5083
  %5102 = phi ptr [ %5090, %5083 ], [ %5067, %5074 ]
  %5103 = phi i32 [ %5089, %5083 ], [ 1, %5074 ]
  %5104 = load i32, ptr %5102, align 4, !tbaa !5
  %5105 = add nsw i32 %5104, %5103
  store i32 %5105, ptr %5102, align 4, !tbaa !5
  br label %5106

5106:                                             ; preds = %5093, %5101, %5063, %5049
  %5107 = icmp eq i32 %5055, %5
  br i1 %5107, label %5406, label %4971, !llvm.loop !1293

5108:                                             ; preds = %4814
  %5109 = getelementptr inbounds i32, ptr %3, i64 %19
  %5110 = load i32, ptr %5109, align 4, !tbaa !5
  %5111 = icmp eq i32 %5110, 0
  %5112 = icmp sgt i32 %5, 0
  br i1 %5111, label %5122, label %5113

5113:                                             ; preds = %5108
  br i1 %5112, label %5114, label %5406

5114:                                             ; preds = %5113
  %5115 = icmp sgt i32 %13, 1
  %5116 = icmp sgt i32 %13, 0
  %5117 = add i32 %13, -2
  %5118 = zext i32 %5117 to i64
  %5119 = zext i32 %13 to i64
  %5120 = add nuw i32 %5, 1
  %5121 = icmp eq i32 %13, 1
  br label %5261

5122:                                             ; preds = %5108
  br i1 %5112, label %5123, label %5406

5123:                                             ; preds = %5122
  %5124 = icmp sgt i32 %13, 1
  %5125 = icmp sgt i32 %13, 0
  %5126 = add i32 %13, -2
  %5127 = zext i32 %5126 to i64
  %5128 = zext i32 %13 to i64
  %5129 = add nuw i32 %5, 1
  %5130 = icmp eq i32 %13, 1
  br label %5131

5131:                                             ; preds = %5123, %5259
  %5132 = phi double [ 0.000000e+00, %5123 ], [ %5210, %5259 ]
  %5133 = phi i32 [ 0, %5123 ], [ %5211, %5259 ]
  %5134 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5124, label %5135, label %5204

5135:                                             ; preds = %5131, %5194
  %5136 = phi i32 [ %5203, %5194 ], [ 0, %5131 ]
  %5137 = phi i64 [ %5145, %5194 ], [ %5128, %5131 ]
  %5138 = phi i64 [ %5202, %5194 ], [ %5127, %5131 ]
  %5139 = phi i32 [ %5200, %5194 ], [ %5134, %5131 ]
  %5140 = sub i32 %5126, %5136
  %5141 = tail call i32 @llvm.smin.i32(i32 %5140, i32 0)
  %5142 = sub i32 %5140, %5141
  %5143 = zext i32 %5142 to i64
  %5144 = add nuw nsw i64 %5143, 1
  %5145 = add nsw i64 %5137, -1
  %5146 = icmp ult i32 %5142, 31
  br i1 %5146, label %5182, label %5147

5147:                                             ; preds = %5135
  %5148 = and i64 %5144, 8589934560
  %5149 = sub i64 %5138, %5148
  br label %5150

5150:                                             ; preds = %5150, %5147
  %5151 = phi i64 [ 0, %5147 ], [ %5174, %5150 ]
  %5152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5147 ], [ %5170, %5150 ]
  %5153 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5147 ], [ %5171, %5150 ]
  %5154 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5147 ], [ %5172, %5150 ]
  %5155 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5147 ], [ %5173, %5150 ]
  %5156 = sub i64 %5138, %5151
  %5157 = getelementptr inbounds i32, ptr %9, i64 %5156
  %5158 = getelementptr inbounds i32, ptr %5157, i64 -7
  %5159 = load <8 x i32>, ptr %5158, align 4, !tbaa !5
  %5160 = shufflevector <8 x i32> %5159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5161 = getelementptr inbounds i32, ptr %5157, i64 -15
  %5162 = load <8 x i32>, ptr %5161, align 4, !tbaa !5
  %5163 = shufflevector <8 x i32> %5162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5164 = getelementptr inbounds i32, ptr %5157, i64 -23
  %5165 = load <8 x i32>, ptr %5164, align 4, !tbaa !5
  %5166 = shufflevector <8 x i32> %5165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5167 = getelementptr inbounds i32, ptr %5157, i64 -31
  %5168 = load <8 x i32>, ptr %5167, align 4, !tbaa !5
  %5169 = shufflevector <8 x i32> %5168, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5170 = mul <8 x i32> %5160, %5152
  %5171 = mul <8 x i32> %5163, %5153
  %5172 = mul <8 x i32> %5166, %5154
  %5173 = mul <8 x i32> %5169, %5155
  %5174 = add nuw i64 %5151, 32
  %5175 = icmp eq i64 %5174, %5148
  br i1 %5175, label %5176, label %5150, !llvm.loop !1294

5176:                                             ; preds = %5150
  %5177 = mul <8 x i32> %5171, %5170
  %5178 = mul <8 x i32> %5172, %5177
  %5179 = mul <8 x i32> %5173, %5178
  %5180 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5179)
  %5181 = icmp eq i64 %5144, %5148
  br i1 %5181, label %5194, label %5182

5182:                                             ; preds = %5135, %5176
  %5183 = phi i64 [ %5138, %5135 ], [ %5149, %5176 ]
  %5184 = phi i32 [ 1, %5135 ], [ %5180, %5176 ]
  br label %5185

5185:                                             ; preds = %5182, %5185
  %5186 = phi i64 [ %5191, %5185 ], [ %5183, %5182 ]
  %5187 = phi i32 [ %5190, %5185 ], [ %5184, %5182 ]
  %5188 = getelementptr inbounds i32, ptr %9, i64 %5186
  %5189 = load i32, ptr %5188, align 4, !tbaa !5
  %5190 = mul nsw i32 %5189, %5187
  %5191 = add nsw i64 %5186, -1
  %5192 = trunc i64 %5186 to i32
  %5193 = icmp sgt i32 %5192, 0
  br i1 %5193, label %5185, label %5194, !llvm.loop !1295

5194:                                             ; preds = %5185, %5176
  %5195 = phi i32 [ %5180, %5176 ], [ %5190, %5185 ]
  %5196 = and i64 %5145, 4294967295
  %5197 = getelementptr inbounds i32, ptr %6, i64 %5196
  %5198 = load i32, ptr %5197, align 4, !tbaa !5
  %5199 = mul nsw i32 %5198, %5195
  %5200 = add nsw i32 %5199, %5139
  %5201 = icmp sgt i64 %5137, 2
  %5202 = add nsw i64 %5138, -1
  %5203 = add i32 %5136, 1
  br i1 %5201, label %5135, label %5204, !llvm.loop !1296

5204:                                             ; preds = %5194, %5131
  %5205 = phi i32 [ %5134, %5131 ], [ %5200, %5194 ]
  %5206 = sext i32 %5205 to i64
  %5207 = getelementptr inbounds float, ptr %4807, i64 %5206
  %5208 = load float, ptr %5207, align 4, !tbaa !162
  %5209 = fpext float %5208 to double
  %5210 = fadd fast double %5132, %5209
  %5211 = add nuw nsw i32 %5133, 1
  br i1 %5125, label %5212, label %5259

5212:                                             ; preds = %5204
  %5213 = load i32, ptr %4, align 4, !tbaa !5
  %5214 = load i32, ptr %12, align 4, !tbaa !5
  %5215 = add nsw i32 %5214, -1
  %5216 = icmp slt i32 %5213, %5215
  br i1 %5216, label %5236, label %5217

5217:                                             ; preds = %5212
  %5218 = icmp eq i32 %5213, %5215
  br i1 %5218, label %5219, label %5252

5219:                                             ; preds = %5217
  store i32 0, ptr %4, align 4, !tbaa !5
  %5220 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5220, ptr %6, align 4, !tbaa !5
  br i1 %5130, label %5259, label %5221

5221:                                             ; preds = %5219, %5246
  %5222 = phi i64 [ %5250, %5246 ], [ 1, %5219 ]
  %5223 = getelementptr inbounds i32, ptr %4, i64 %5222
  %5224 = load i32, ptr %5223, align 4, !tbaa !5
  %5225 = getelementptr inbounds i32, ptr %12, i64 %5222
  %5226 = load i32, ptr %5225, align 4, !tbaa !5
  %5227 = add nsw i32 %5226, -1
  %5228 = icmp slt i32 %5224, %5227
  br i1 %5228, label %5229, label %5244

5229:                                             ; preds = %5221
  br i1 %5216, label %5236, label %5230

5230:                                             ; preds = %5229
  %5231 = getelementptr inbounds i32, ptr %7, i64 %5222
  %5232 = load i32, ptr %5231, align 4, !tbaa !5
  %5233 = getelementptr inbounds i32, ptr %6, i64 %5222
  %5234 = load i32, ptr %5233, align 4, !tbaa !5
  %5235 = add nsw i32 %5234, %5232
  store i32 %5235, ptr %5233, align 4, !tbaa !5
  br label %5254

5236:                                             ; preds = %5212, %5229
  %5237 = phi i32 [ %5224, %5229 ], [ %5213, %5212 ]
  %5238 = phi ptr [ %5223, %5229 ], [ %4, %5212 ]
  %5239 = phi i64 [ %5222, %5229 ], [ 0, %5212 ]
  %5240 = add nsw i32 %5237, 1
  store i32 %5240, ptr %5238, align 4, !tbaa !5
  %5241 = getelementptr inbounds i32, ptr %7, i64 %5239
  %5242 = load i32, ptr %5241, align 4, !tbaa !5
  %5243 = getelementptr inbounds i32, ptr %6, i64 %5239
  br label %5254

5244:                                             ; preds = %5221
  %5245 = icmp eq i32 %5224, %5227
  br i1 %5245, label %5246, label %5252

5246:                                             ; preds = %5244
  store i32 0, ptr %5223, align 4, !tbaa !5
  %5247 = getelementptr inbounds i32, ptr %8, i64 %5222
  %5248 = load i32, ptr %5247, align 4, !tbaa !5
  %5249 = getelementptr inbounds i32, ptr %6, i64 %5222
  store i32 %5248, ptr %5249, align 4, !tbaa !5
  %5250 = add nuw nsw i64 %5222, 1
  %5251 = icmp eq i64 %5250, %5128
  br i1 %5251, label %5259, label %5221, !llvm.loop !1297

5252:                                             ; preds = %5217, %5244
  store double %5210, ptr %4809, align 8, !tbaa !18
  %5253 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

5254:                                             ; preds = %5230, %5236
  %5255 = phi ptr [ %5243, %5236 ], [ %5223, %5230 ]
  %5256 = phi i32 [ %5242, %5236 ], [ 1, %5230 ]
  %5257 = load i32, ptr %5255, align 4, !tbaa !5
  %5258 = add nsw i32 %5257, %5256
  store i32 %5258, ptr %5255, align 4, !tbaa !5
  br label %5259

5259:                                             ; preds = %5246, %5254, %5219, %5204
  %5260 = icmp eq i32 %5211, %5
  br i1 %5260, label %5405, label %5131, !llvm.loop !1298

5261:                                             ; preds = %5114, %5396
  %5262 = phi double [ 0.000000e+00, %5114 ], [ %5344, %5396 ]
  %5263 = phi i32 [ 0, %5114 ], [ %5345, %5396 ]
  %5264 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5115, label %5265, label %5334

5265:                                             ; preds = %5261, %5324
  %5266 = phi i32 [ %5333, %5324 ], [ 0, %5261 ]
  %5267 = phi i64 [ %5275, %5324 ], [ %5119, %5261 ]
  %5268 = phi i64 [ %5332, %5324 ], [ %5118, %5261 ]
  %5269 = phi i32 [ %5330, %5324 ], [ %5264, %5261 ]
  %5270 = sub i32 %5117, %5266
  %5271 = tail call i32 @llvm.smin.i32(i32 %5270, i32 0)
  %5272 = sub i32 %5270, %5271
  %5273 = zext i32 %5272 to i64
  %5274 = add nuw nsw i64 %5273, 1
  %5275 = add nsw i64 %5267, -1
  %5276 = icmp ult i32 %5272, 31
  br i1 %5276, label %5312, label %5277

5277:                                             ; preds = %5265
  %5278 = and i64 %5274, 8589934560
  %5279 = sub i64 %5268, %5278
  br label %5280

5280:                                             ; preds = %5280, %5277
  %5281 = phi i64 [ 0, %5277 ], [ %5304, %5280 ]
  %5282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5300, %5280 ]
  %5283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5301, %5280 ]
  %5284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5302, %5280 ]
  %5285 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5277 ], [ %5303, %5280 ]
  %5286 = sub i64 %5268, %5281
  %5287 = getelementptr inbounds i32, ptr %11, i64 %5286
  %5288 = getelementptr inbounds i32, ptr %5287, i64 -7
  %5289 = load <8 x i32>, ptr %5288, align 4, !tbaa !5
  %5290 = shufflevector <8 x i32> %5289, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5291 = getelementptr inbounds i32, ptr %5287, i64 -15
  %5292 = load <8 x i32>, ptr %5291, align 4, !tbaa !5
  %5293 = shufflevector <8 x i32> %5292, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5294 = getelementptr inbounds i32, ptr %5287, i64 -23
  %5295 = load <8 x i32>, ptr %5294, align 4, !tbaa !5
  %5296 = shufflevector <8 x i32> %5295, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5297 = getelementptr inbounds i32, ptr %5287, i64 -31
  %5298 = load <8 x i32>, ptr %5297, align 4, !tbaa !5
  %5299 = shufflevector <8 x i32> %5298, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5300 = mul <8 x i32> %5290, %5282
  %5301 = mul <8 x i32> %5293, %5283
  %5302 = mul <8 x i32> %5296, %5284
  %5303 = mul <8 x i32> %5299, %5285
  %5304 = add nuw i64 %5281, 32
  %5305 = icmp eq i64 %5304, %5278
  br i1 %5305, label %5306, label %5280, !llvm.loop !1299

5306:                                             ; preds = %5280
  %5307 = mul <8 x i32> %5301, %5300
  %5308 = mul <8 x i32> %5302, %5307
  %5309 = mul <8 x i32> %5303, %5308
  %5310 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5309)
  %5311 = icmp eq i64 %5274, %5278
  br i1 %5311, label %5324, label %5312

5312:                                             ; preds = %5265, %5306
  %5313 = phi i64 [ %5268, %5265 ], [ %5279, %5306 ]
  %5314 = phi i32 [ 1, %5265 ], [ %5310, %5306 ]
  br label %5315

5315:                                             ; preds = %5312, %5315
  %5316 = phi i64 [ %5321, %5315 ], [ %5313, %5312 ]
  %5317 = phi i32 [ %5320, %5315 ], [ %5314, %5312 ]
  %5318 = getelementptr inbounds i32, ptr %11, i64 %5316
  %5319 = load i32, ptr %5318, align 4, !tbaa !5
  %5320 = mul nsw i32 %5319, %5317
  %5321 = add nsw i64 %5316, -1
  %5322 = trunc i64 %5316 to i32
  %5323 = icmp sgt i32 %5322, 0
  br i1 %5323, label %5315, label %5324, !llvm.loop !1300

5324:                                             ; preds = %5315, %5306
  %5325 = phi i32 [ %5310, %5306 ], [ %5320, %5315 ]
  %5326 = and i64 %5275, 4294967295
  %5327 = getelementptr inbounds i32, ptr %6, i64 %5326
  %5328 = load i32, ptr %5327, align 4, !tbaa !5
  %5329 = mul nsw i32 %5328, %5325
  %5330 = add nsw i32 %5329, %5269
  %5331 = icmp sgt i64 %5267, 2
  %5332 = add nsw i64 %5268, -1
  %5333 = add i32 %5266, 1
  br i1 %5331, label %5265, label %5334, !llvm.loop !1301

5334:                                             ; preds = %5324, %5261
  %5335 = phi i32 [ %5264, %5261 ], [ %5330, %5324 ]
  %5336 = icmp slt i32 %5335, %5
  br i1 %5336, label %5339, label %5337

5337:                                             ; preds = %5334
  %5338 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5406

5339:                                             ; preds = %5334
  %5340 = sext i32 %5335 to i64
  %5341 = getelementptr inbounds float, ptr %4807, i64 %5340
  %5342 = load float, ptr %5341, align 4, !tbaa !162
  %5343 = fpext float %5342 to double
  %5344 = fadd fast double %5262, %5343
  store double %5344, ptr %4809, align 8, !tbaa !18
  %5345 = add nuw nsw i32 %5263, 1
  br i1 %5116, label %5346, label %5396

5346:                                             ; preds = %5339
  %5347 = load i32, ptr %4, align 4, !tbaa !5
  %5348 = load i32, ptr %12, align 4, !tbaa !5
  %5349 = add nsw i32 %5348, -1
  %5350 = icmp slt i32 %5347, %5349
  br i1 %5350, label %5373, label %5351

5351:                                             ; preds = %5346
  %5352 = icmp eq i32 %5347, %5349
  br i1 %5352, label %5353, label %5389

5353:                                             ; preds = %5351
  store i32 0, ptr %4, align 4, !tbaa !5
  %5354 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5354, ptr %6, align 4, !tbaa !5
  br i1 %5121, label %5396, label %5355

5355:                                             ; preds = %5353, %5383
  %5356 = phi i64 [ %5387, %5383 ], [ 1, %5353 ]
  %5357 = getelementptr inbounds i32, ptr %4, i64 %5356
  %5358 = load i32, ptr %5357, align 4, !tbaa !5
  %5359 = getelementptr inbounds i32, ptr %12, i64 %5356
  %5360 = load i32, ptr %5359, align 4, !tbaa !5
  %5361 = add nsw i32 %5360, -1
  %5362 = icmp slt i32 %5358, %5361
  br i1 %5362, label %5363, label %5381

5363:                                             ; preds = %5355
  br i1 %5350, label %5373, label %5364

5364:                                             ; preds = %5363
  %5365 = shl i64 %5356, 32
  %5366 = add i64 %5365, -4294967296
  %5367 = ashr exact i64 %5366, 32
  %5368 = getelementptr inbounds i32, ptr %7, i64 %5367
  %5369 = load i32, ptr %5368, align 4, !tbaa !5
  %5370 = getelementptr inbounds i32, ptr %6, i64 %5356
  %5371 = load i32, ptr %5370, align 4, !tbaa !5
  %5372 = add nsw i32 %5371, %5369
  store i32 %5372, ptr %5370, align 4, !tbaa !5
  br label %5391

5373:                                             ; preds = %5346, %5363
  %5374 = phi i32 [ %5358, %5363 ], [ %5347, %5346 ]
  %5375 = phi ptr [ %5357, %5363 ], [ %4, %5346 ]
  %5376 = phi i64 [ %5356, %5363 ], [ 0, %5346 ]
  %5377 = add nsw i32 %5374, 1
  store i32 %5377, ptr %5375, align 4, !tbaa !5
  %5378 = getelementptr inbounds i32, ptr %7, i64 %5376
  %5379 = load i32, ptr %5378, align 4, !tbaa !5
  %5380 = getelementptr inbounds i32, ptr %6, i64 %5376
  br label %5391

5381:                                             ; preds = %5355
  %5382 = icmp eq i32 %5358, %5361
  br i1 %5382, label %5383, label %5389

5383:                                             ; preds = %5381
  store i32 0, ptr %5357, align 4, !tbaa !5
  %5384 = getelementptr inbounds i32, ptr %8, i64 %5356
  %5385 = load i32, ptr %5384, align 4, !tbaa !5
  %5386 = getelementptr inbounds i32, ptr %6, i64 %5356
  store i32 %5385, ptr %5386, align 4, !tbaa !5
  %5387 = add nuw nsw i64 %5356, 1
  %5388 = icmp eq i64 %5387, %5119
  br i1 %5388, label %5396, label %5355, !llvm.loop !1302

5389:                                             ; preds = %5351, %5381
  %5390 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5406

5391:                                             ; preds = %5364, %5373
  %5392 = phi ptr [ %5380, %5373 ], [ %5357, %5364 ]
  %5393 = phi i32 [ %5379, %5373 ], [ 1, %5364 ]
  %5394 = load i32, ptr %5392, align 4, !tbaa !5
  %5395 = add nsw i32 %5394, %5393
  store i32 %5395, ptr %5392, align 4, !tbaa !5
  br label %5396

5396:                                             ; preds = %5383, %5391, %5353, %5339
  %5397 = icmp eq i32 %5345, %5
  br i1 %5397, label %5406, label %5261, !llvm.loop !1303

5398:                                             ; preds = %4814
  %5399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1755, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5406

5400:                                             ; preds = %1983
  store i16 %1934, ptr %1820, align 2, !tbaa !78
  br label %5406

5401:                                             ; preds = %2277
  store i16 %2228, ptr %1820, align 2, !tbaa !78
  br label %5406

5402:                                             ; preds = %3183
  store i64 %3134, ptr %3020, align 8, !tbaa !120
  br label %5406

5403:                                             ; preds = %3476
  store i64 %3427, ptr %3020, align 8, !tbaa !120
  br label %5406

5404:                                             ; preds = %4071
  store double %4022, ptr %3621, align 8, !tbaa !18
  br label %5406

5405:                                             ; preds = %5259
  store double %5210, ptr %4809, align 8, !tbaa !18
  br label %5406

5406:                                             ; preds = %5396, %5106, %4969, %4801, %4665, %4513, %4377, %4208, %3918, %3781, %3613, %3323, %3012, %2875, %2722, %2585, %2414, %2124, %1812, %1675, %1522, %1385, %1214, %1077, %924, %787, %616, %479, %326, %189, %5113, %5122, %5405, %4820, %4829, %4520, %4529, %4226, %4235, %3925, %3934, %5404, %3632, %3641, %3330, %3339, %5403, %3031, %3040, %5402, %2729, %2738, %2433, %2442, %2131, %2140, %5401, %1831, %1840, %5400, %1529, %1538, %1233, %1242, %931, %940, %635, %644, %333, %342, %37, %46, %4811, %5398, %4218, %4803, %3623, %4210, %3022, %3615, %2424, %3014, %1822, %2416, %1224, %1814, %626, %1216, %28, %618, %18, %4962, %5047, %5099, %5252, %5337, %5389, %4370, %4455, %4506, %4658, %4743, %4794, %3774, %3859, %3911, %4064, %4149, %4201, %3176, %3261, %3316, %3469, %3554, %3606, %2578, %2662, %2715, %2868, %2952, %3005, %1976, %2061, %2117, %2270, %2355, %2407, %1378, %1462, %1515, %1668, %1752, %1805, %780, %864, %917, %1070, %1154, %1207, %182, %266, %319, %472, %556, %609
  %5407 = phi i32 [ -1, %609 ], [ -1, %556 ], [ -1, %472 ], [ -1, %319 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1207 ], [ -1, %1154 ], [ -1, %1070 ], [ -1, %917 ], [ -1, %864 ], [ -1, %780 ], [ -1, %1805 ], [ -1, %1752 ], [ -1, %1668 ], [ -1, %1515 ], [ -1, %1462 ], [ -1, %1378 ], [ -1, %2407 ], [ -1, %2355 ], [ -1, %2270 ], [ -1, %2117 ], [ -1, %2061 ], [ -1, %1976 ], [ -1, %3005 ], [ -1, %2952 ], [ -1, %2868 ], [ -1, %2715 ], [ -1, %2662 ], [ -1, %2578 ], [ -1, %3606 ], [ -1, %3554 ], [ -1, %3469 ], [ -1, %3316 ], [ -1, %3261 ], [ -1, %3176 ], [ -1, %4201 ], [ -1, %4149 ], [ -1, %4064 ], [ -1, %3911 ], [ -1, %3859 ], [ -1, %3774 ], [ -1, %4794 ], [ -1, %4743 ], [ -1, %4658 ], [ -1, %4506 ], [ -1, %4455 ], [ -1, %4370 ], [ -1, %5389 ], [ -1, %5337 ], [ -1, %5252 ], [ -1, %5099 ], [ -1, %5047 ], [ -1, %4962 ], [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1216 ], [ 1, %626 ], [ 1, %1814 ], [ 1, %1224 ], [ 1, %2416 ], [ 1, %1822 ], [ 1, %3014 ], [ 1, %2424 ], [ 1, %3615 ], [ 1, %3022 ], [ 1, %4210 ], [ 1, %3623 ], [ 1, %4803 ], [ 1, %4218 ], [ 1, %5398 ], [ 1, %4811 ], [ 1, %46 ], [ 1, %37 ], [ 1, %342 ], [ 1, %333 ], [ 1, %644 ], [ 1, %635 ], [ 1, %940 ], [ 1, %931 ], [ 1, %1242 ], [ 1, %1233 ], [ 1, %1538 ], [ 1, %1529 ], [ %1847, %5400 ], [ 1, %1840 ], [ 1, %1831 ], [ %2147, %5401 ], [ 1, %2140 ], [ 1, %2131 ], [ 1, %2442 ], [ 1, %2433 ], [ 1, %2738 ], [ 1, %2729 ], [ %3047, %5402 ], [ 1, %3040 ], [ 1, %3031 ], [ %3346, %5403 ], [ 1, %3339 ], [ 1, %3330 ], [ 1, %3641 ], [ 1, %3632 ], [ %3941, %5404 ], [ 1, %3934 ], [ 1, %3925 ], [ 1, %4235 ], [ 1, %4226 ], [ 1, %4529 ], [ 1, %4520 ], [ 1, %4829 ], [ 1, %4820 ], [ %5129, %5405 ], [ 1, %5122 ], [ 1, %5113 ], [ %53, %189 ], [ %44, %326 ], [ %349, %479 ], [ %340, %616 ], [ %651, %787 ], [ %642, %924 ], [ %947, %1077 ], [ %938, %1214 ], [ %1249, %1385 ], [ %1240, %1522 ], [ %1545, %1675 ], [ %1536, %1812 ], [ %1838, %2124 ], [ %2138, %2414 ], [ %2449, %2585 ], [ %2440, %2722 ], [ %2745, %2875 ], [ %2736, %3012 ], [ %3038, %3323 ], [ %3337, %3613 ], [ %3648, %3781 ], [ %3639, %3918 ], [ %3932, %4208 ], [ %4242, %4377 ], [ %4233, %4513 ], [ %4536, %4665 ], [ %4527, %4801 ], [ %4836, %4969 ], [ %4827, %5106 ], [ %5120, %5396 ]
  ret i32 %5407
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Sum_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !5
  switch i32 %21, label %5401 [
    i32 101, label %22
    i32 102, label %620
    i32 103, label %1218
    i32 104, label %1816
    i32 105, label %2418
    i32 106, label %3016
    i32 107, label %3617
    i32 108, label %4207
    i32 109, label %4805
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !9
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !9
  store i8 0, ptr %26, align 1, !tbaa !11
  %27 = icmp eq i32 %13, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load double, ptr %24, align 8, !tbaa !18
  %30 = fptoui double %29 to i8
  store i8 %30, ptr %26, align 1, !tbaa !11
  br label %5401

31:                                               ; preds = %22
  switch i32 %1, label %618 [
    i32 1, label %32
    i32 0, label %328
  ]

32:                                               ; preds = %31
  %33 = getelementptr inbounds i32, ptr %3, i64 %19
  %34 = load i32, ptr %33, align 4, !tbaa !5
  %35 = icmp eq i32 %34, 0
  %36 = icmp sgt i32 %5, 0
  br i1 %35, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %38, label %5401

38:                                               ; preds = %37
  %39 = icmp sgt i32 %13, 1
  %40 = icmp sgt i32 %13, 0
  %41 = add i32 %13, -2
  %42 = zext i32 %41 to i64
  %43 = zext i32 %13 to i64
  %44 = add nuw i32 %5, 1
  %45 = icmp eq i32 %13, 1
  br label %191

46:                                               ; preds = %32
  br i1 %36, label %47, label %5401

47:                                               ; preds = %46
  %48 = icmp sgt i32 %13, 1
  %49 = icmp sgt i32 %13, 0
  %50 = add i32 %13, -2
  %51 = zext i32 %50 to i64
  %52 = zext i32 %13 to i64
  %53 = add nuw i32 %5, 1
  %54 = icmp eq i32 %13, 1
  br label %55

55:                                               ; preds = %47, %189
  %56 = phi i32 [ 0, %47 ], [ %141, %189 ]
  %57 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %48, label %58, label %127

58:                                               ; preds = %55, %117
  %59 = phi i32 [ %126, %117 ], [ 0, %55 ]
  %60 = phi i64 [ %68, %117 ], [ %52, %55 ]
  %61 = phi i64 [ %125, %117 ], [ %51, %55 ]
  %62 = phi i32 [ %123, %117 ], [ %57, %55 ]
  %63 = sub i32 %50, %59
  %64 = tail call i32 @llvm.smin.i32(i32 %63, i32 0)
  %65 = sub i32 %63, %64
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %66, 1
  %68 = add nsw i64 %60, -1
  %69 = icmp ult i32 %65, 31
  br i1 %69, label %105, label %70

70:                                               ; preds = %58
  %71 = and i64 %67, 8589934560
  %72 = sub i64 %61, %71
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi i64 [ 0, %70 ], [ %97, %73 ]
  %75 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %93, %73 ]
  %76 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %94, %73 ]
  %77 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %95, %73 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %70 ], [ %96, %73 ]
  %79 = sub i64 %61, %74
  %80 = getelementptr inbounds i32, ptr %9, i64 %79
  %81 = getelementptr inbounds i32, ptr %80, i64 -7
  %82 = load <8 x i32>, ptr %81, align 4, !tbaa !5
  %83 = shufflevector <8 x i32> %82, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %84 = getelementptr inbounds i32, ptr %80, i64 -15
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !5
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %80, i64 -23
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !5
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %80, i64 -31
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !5
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = mul <8 x i32> %83, %75
  %94 = mul <8 x i32> %86, %76
  %95 = mul <8 x i32> %89, %77
  %96 = mul <8 x i32> %92, %78
  %97 = add nuw i64 %74, 32
  %98 = icmp eq i64 %97, %71
  br i1 %98, label %99, label %73, !llvm.loop !1304

99:                                               ; preds = %73
  %100 = mul <8 x i32> %94, %93
  %101 = mul <8 x i32> %95, %100
  %102 = mul <8 x i32> %96, %101
  %103 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %102)
  %104 = icmp eq i64 %67, %71
  br i1 %104, label %117, label %105

105:                                              ; preds = %58, %99
  %106 = phi i64 [ %61, %58 ], [ %72, %99 ]
  %107 = phi i32 [ 1, %58 ], [ %103, %99 ]
  br label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i32 [ %113, %108 ], [ %107, %105 ]
  %111 = getelementptr inbounds i32, ptr %9, i64 %109
  %112 = load i32, ptr %111, align 4, !tbaa !5
  %113 = mul nsw i32 %112, %110
  %114 = add nsw i64 %109, -1
  %115 = trunc i64 %109 to i32
  %116 = icmp sgt i32 %115, 0
  br i1 %116, label %108, label %117, !llvm.loop !1305

117:                                              ; preds = %108, %99
  %118 = phi i32 [ %103, %99 ], [ %113, %108 ]
  %119 = and i64 %68, 4294967295
  %120 = getelementptr inbounds i32, ptr %6, i64 %119
  %121 = load i32, ptr %120, align 4, !tbaa !5
  %122 = mul nsw i32 %121, %118
  %123 = add nsw i32 %122, %62
  %124 = icmp sgt i64 %60, 2
  %125 = add nsw i64 %61, -1
  %126 = add i32 %59, 1
  br i1 %124, label %58, label %127, !llvm.loop !1306

127:                                              ; preds = %117, %55
  %128 = phi i32 [ %57, %55 ], [ %123, %117 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds double, ptr %2, i64 %129
  %131 = load double, ptr %130, align 8, !tbaa !18
  %132 = getelementptr inbounds double, ptr %24, i64 %129
  %133 = load double, ptr %132, align 8, !tbaa !18
  %134 = fptoui double %133 to i8
  %135 = load i8, ptr %26, align 1, !tbaa !11
  %136 = uitofp i8 %135 to double
  %137 = uitofp i8 %134 to double
  %138 = fmul fast double %131, %137
  %139 = fadd fast double %138, %136
  %140 = fptoui double %139 to i8
  store i8 %140, ptr %26, align 1, !tbaa !11
  %141 = add nuw nsw i32 %56, 1
  br i1 %49, label %142, label %189

142:                                              ; preds = %127
  %143 = load i32, ptr %4, align 4, !tbaa !5
  %144 = load i32, ptr %12, align 4, !tbaa !5
  %145 = add nsw i32 %144, -1
  %146 = icmp slt i32 %143, %145
  br i1 %146, label %166, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, %145
  br i1 %148, label %149, label %182

149:                                              ; preds = %147
  store i32 0, ptr %4, align 4, !tbaa !5
  %150 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %150, ptr %6, align 4, !tbaa !5
  br i1 %54, label %189, label %151

151:                                              ; preds = %149, %176
  %152 = phi i64 [ %180, %176 ], [ 1, %149 ]
  %153 = getelementptr inbounds i32, ptr %4, i64 %152
  %154 = load i32, ptr %153, align 4, !tbaa !5
  %155 = getelementptr inbounds i32, ptr %12, i64 %152
  %156 = load i32, ptr %155, align 4, !tbaa !5
  %157 = add nsw i32 %156, -1
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %151
  br i1 %146, label %166, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds i32, ptr %7, i64 %152
  %162 = load i32, ptr %161, align 4, !tbaa !5
  %163 = getelementptr inbounds i32, ptr %6, i64 %152
  %164 = load i32, ptr %163, align 4, !tbaa !5
  %165 = add nsw i32 %164, %162
  store i32 %165, ptr %163, align 4, !tbaa !5
  br label %184

166:                                              ; preds = %142, %159
  %167 = phi i32 [ %154, %159 ], [ %143, %142 ]
  %168 = phi ptr [ %153, %159 ], [ %4, %142 ]
  %169 = phi i64 [ %152, %159 ], [ 0, %142 ]
  %170 = add nsw i32 %167, 1
  store i32 %170, ptr %168, align 4, !tbaa !5
  %171 = getelementptr inbounds i32, ptr %7, i64 %169
  %172 = load i32, ptr %171, align 4, !tbaa !5
  %173 = getelementptr inbounds i32, ptr %6, i64 %169
  br label %184

174:                                              ; preds = %151
  %175 = icmp eq i32 %154, %157
  br i1 %175, label %176, label %182

176:                                              ; preds = %174
  store i32 0, ptr %153, align 4, !tbaa !5
  %177 = getelementptr inbounds i32, ptr %8, i64 %152
  %178 = load i32, ptr %177, align 4, !tbaa !5
  %179 = getelementptr inbounds i32, ptr %6, i64 %152
  store i32 %178, ptr %179, align 4, !tbaa !5
  %180 = add nuw nsw i64 %152, 1
  %181 = icmp eq i64 %180, %52
  br i1 %181, label %189, label %151, !llvm.loop !1307

182:                                              ; preds = %147, %174
  %183 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

184:                                              ; preds = %160, %166
  %185 = phi ptr [ %173, %166 ], [ %153, %160 ]
  %186 = phi i32 [ %172, %166 ], [ 1, %160 ]
  %187 = load i32, ptr %185, align 4, !tbaa !5
  %188 = add nsw i32 %187, %186
  store i32 %188, ptr %185, align 4, !tbaa !5
  br label %189

189:                                              ; preds = %176, %184, %149, %127
  %190 = icmp eq i32 %141, %5
  br i1 %190, label %5401, label %55, !llvm.loop !1308

191:                                              ; preds = %38, %326
  %192 = phi i32 [ 0, %38 ], [ %275, %326 ]
  %193 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %39, label %194, label %263

194:                                              ; preds = %191, %253
  %195 = phi i32 [ %262, %253 ], [ 0, %191 ]
  %196 = phi i64 [ %204, %253 ], [ %43, %191 ]
  %197 = phi i64 [ %261, %253 ], [ %42, %191 ]
  %198 = phi i32 [ %259, %253 ], [ %193, %191 ]
  %199 = sub i32 %41, %195
  %200 = tail call i32 @llvm.smin.i32(i32 %199, i32 0)
  %201 = sub i32 %199, %200
  %202 = zext i32 %201 to i64
  %203 = add nuw nsw i64 %202, 1
  %204 = add nsw i64 %196, -1
  %205 = icmp ult i32 %201, 31
  br i1 %205, label %241, label %206

206:                                              ; preds = %194
  %207 = and i64 %203, 8589934560
  %208 = sub i64 %197, %207
  br label %209

209:                                              ; preds = %209, %206
  %210 = phi i64 [ 0, %206 ], [ %233, %209 ]
  %211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %229, %209 ]
  %212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %230, %209 ]
  %213 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %231, %209 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %206 ], [ %232, %209 ]
  %215 = sub i64 %197, %210
  %216 = getelementptr inbounds i32, ptr %11, i64 %215
  %217 = getelementptr inbounds i32, ptr %216, i64 -7
  %218 = load <8 x i32>, ptr %217, align 4, !tbaa !5
  %219 = shufflevector <8 x i32> %218, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %220 = getelementptr inbounds i32, ptr %216, i64 -15
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !5
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %216, i64 -23
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !5
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %216, i64 -31
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !5
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = mul <8 x i32> %219, %211
  %230 = mul <8 x i32> %222, %212
  %231 = mul <8 x i32> %225, %213
  %232 = mul <8 x i32> %228, %214
  %233 = add nuw i64 %210, 32
  %234 = icmp eq i64 %233, %207
  br i1 %234, label %235, label %209, !llvm.loop !1309

235:                                              ; preds = %209
  %236 = mul <8 x i32> %230, %229
  %237 = mul <8 x i32> %231, %236
  %238 = mul <8 x i32> %232, %237
  %239 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %238)
  %240 = icmp eq i64 %203, %207
  br i1 %240, label %253, label %241

241:                                              ; preds = %194, %235
  %242 = phi i64 [ %197, %194 ], [ %208, %235 ]
  %243 = phi i32 [ 1, %194 ], [ %239, %235 ]
  br label %244

244:                                              ; preds = %241, %244
  %245 = phi i64 [ %250, %244 ], [ %242, %241 ]
  %246 = phi i32 [ %249, %244 ], [ %243, %241 ]
  %247 = getelementptr inbounds i32, ptr %11, i64 %245
  %248 = load i32, ptr %247, align 4, !tbaa !5
  %249 = mul nsw i32 %248, %246
  %250 = add nsw i64 %245, -1
  %251 = trunc i64 %245 to i32
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %244, label %253, !llvm.loop !1310

253:                                              ; preds = %244, %235
  %254 = phi i32 [ %239, %235 ], [ %249, %244 ]
  %255 = and i64 %204, 4294967295
  %256 = getelementptr inbounds i32, ptr %6, i64 %255
  %257 = load i32, ptr %256, align 4, !tbaa !5
  %258 = mul nsw i32 %257, %254
  %259 = add nsw i32 %258, %198
  %260 = icmp sgt i64 %196, 2
  %261 = add nsw i64 %197, -1
  %262 = add i32 %195, 1
  br i1 %260, label %194, label %263, !llvm.loop !1311

263:                                              ; preds = %253, %191
  %264 = phi i32 [ %193, %191 ], [ %259, %253 ]
  %265 = icmp slt i32 %264, %5
  br i1 %265, label %268, label %266

266:                                              ; preds = %263
  %267 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

268:                                              ; preds = %263
  %269 = sext i32 %264 to i64
  %270 = getelementptr inbounds double, ptr %24, i64 %269
  %271 = load double, ptr %270, align 8, !tbaa !18
  %272 = fptoui double %271 to i8
  %273 = load i8, ptr %26, align 1, !tbaa !11
  %274 = add i8 %273, %272
  store i8 %274, ptr %26, align 1, !tbaa !11
  %275 = add nuw nsw i32 %192, 1
  br i1 %40, label %276, label %326

276:                                              ; preds = %268
  %277 = load i32, ptr %4, align 4, !tbaa !5
  %278 = load i32, ptr %12, align 4, !tbaa !5
  %279 = add nsw i32 %278, -1
  %280 = icmp slt i32 %277, %279
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = icmp eq i32 %277, %279
  br i1 %282, label %283, label %319

283:                                              ; preds = %281
  store i32 0, ptr %4, align 4, !tbaa !5
  %284 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %284, ptr %6, align 4, !tbaa !5
  br i1 %45, label %326, label %285

285:                                              ; preds = %283, %313
  %286 = phi i64 [ %317, %313 ], [ 1, %283 ]
  %287 = getelementptr inbounds i32, ptr %4, i64 %286
  %288 = load i32, ptr %287, align 4, !tbaa !5
  %289 = getelementptr inbounds i32, ptr %12, i64 %286
  %290 = load i32, ptr %289, align 4, !tbaa !5
  %291 = add nsw i32 %290, -1
  %292 = icmp slt i32 %288, %291
  br i1 %292, label %293, label %311

293:                                              ; preds = %285
  br i1 %280, label %303, label %294

294:                                              ; preds = %293
  %295 = shl i64 %286, 32
  %296 = add i64 %295, -4294967296
  %297 = ashr exact i64 %296, 32
  %298 = getelementptr inbounds i32, ptr %7, i64 %297
  %299 = load i32, ptr %298, align 4, !tbaa !5
  %300 = getelementptr inbounds i32, ptr %6, i64 %286
  %301 = load i32, ptr %300, align 4, !tbaa !5
  %302 = add nsw i32 %301, %299
  store i32 %302, ptr %300, align 4, !tbaa !5
  br label %321

303:                                              ; preds = %276, %293
  %304 = phi i32 [ %288, %293 ], [ %277, %276 ]
  %305 = phi ptr [ %287, %293 ], [ %4, %276 ]
  %306 = phi i64 [ %286, %293 ], [ 0, %276 ]
  %307 = add nsw i32 %304, 1
  store i32 %307, ptr %305, align 4, !tbaa !5
  %308 = getelementptr inbounds i32, ptr %7, i64 %306
  %309 = load i32, ptr %308, align 4, !tbaa !5
  %310 = getelementptr inbounds i32, ptr %6, i64 %306
  br label %321

311:                                              ; preds = %285
  %312 = icmp eq i32 %288, %291
  br i1 %312, label %313, label %319

313:                                              ; preds = %311
  store i32 0, ptr %287, align 4, !tbaa !5
  %314 = getelementptr inbounds i32, ptr %8, i64 %286
  %315 = load i32, ptr %314, align 4, !tbaa !5
  %316 = getelementptr inbounds i32, ptr %6, i64 %286
  store i32 %315, ptr %316, align 4, !tbaa !5
  %317 = add nuw nsw i64 %286, 1
  %318 = icmp eq i64 %317, %43
  br i1 %318, label %326, label %285, !llvm.loop !1312

319:                                              ; preds = %281, %311
  %320 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

321:                                              ; preds = %294, %303
  %322 = phi ptr [ %310, %303 ], [ %287, %294 ]
  %323 = phi i32 [ %309, %303 ], [ 1, %294 ]
  %324 = load i32, ptr %322, align 4, !tbaa !5
  %325 = add nsw i32 %324, %323
  store i32 %325, ptr %322, align 4, !tbaa !5
  br label %326

326:                                              ; preds = %313, %321, %283, %268
  %327 = icmp eq i32 %275, %5
  br i1 %327, label %5401, label %191, !llvm.loop !1313

328:                                              ; preds = %31
  %329 = getelementptr inbounds i32, ptr %3, i64 %19
  %330 = load i32, ptr %329, align 4, !tbaa !5
  %331 = icmp eq i32 %330, 0
  %332 = icmp sgt i32 %5, 0
  br i1 %331, label %342, label %333

333:                                              ; preds = %328
  br i1 %332, label %334, label %5401

334:                                              ; preds = %333
  %335 = icmp sgt i32 %13, 1
  %336 = icmp sgt i32 %13, 0
  %337 = add i32 %13, -2
  %338 = zext i32 %337 to i64
  %339 = zext i32 %13 to i64
  %340 = add nuw i32 %5, 1
  %341 = icmp eq i32 %13, 1
  br label %481

342:                                              ; preds = %328
  br i1 %332, label %343, label %5401

343:                                              ; preds = %342
  %344 = icmp sgt i32 %13, 1
  %345 = icmp sgt i32 %13, 0
  %346 = add i32 %13, -2
  %347 = zext i32 %346 to i64
  %348 = zext i32 %13 to i64
  %349 = add nuw i32 %5, 1
  %350 = icmp eq i32 %13, 1
  br label %351

351:                                              ; preds = %343, %479
  %352 = phi i32 [ 0, %343 ], [ %431, %479 ]
  %353 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %344, label %354, label %423

354:                                              ; preds = %351, %413
  %355 = phi i32 [ %422, %413 ], [ 0, %351 ]
  %356 = phi i64 [ %364, %413 ], [ %348, %351 ]
  %357 = phi i64 [ %421, %413 ], [ %347, %351 ]
  %358 = phi i32 [ %419, %413 ], [ %353, %351 ]
  %359 = sub i32 %346, %355
  %360 = tail call i32 @llvm.smin.i32(i32 %359, i32 0)
  %361 = sub i32 %359, %360
  %362 = zext i32 %361 to i64
  %363 = add nuw nsw i64 %362, 1
  %364 = add nsw i64 %356, -1
  %365 = icmp ult i32 %361, 31
  br i1 %365, label %401, label %366

366:                                              ; preds = %354
  %367 = and i64 %363, 8589934560
  %368 = sub i64 %357, %367
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %393, %369 ]
  %371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %389, %369 ]
  %372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %390, %369 ]
  %373 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %391, %369 ]
  %374 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %366 ], [ %392, %369 ]
  %375 = sub i64 %357, %370
  %376 = getelementptr inbounds i32, ptr %9, i64 %375
  %377 = getelementptr inbounds i32, ptr %376, i64 -7
  %378 = load <8 x i32>, ptr %377, align 4, !tbaa !5
  %379 = shufflevector <8 x i32> %378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %380 = getelementptr inbounds i32, ptr %376, i64 -15
  %381 = load <8 x i32>, ptr %380, align 4, !tbaa !5
  %382 = shufflevector <8 x i32> %381, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %383 = getelementptr inbounds i32, ptr %376, i64 -23
  %384 = load <8 x i32>, ptr %383, align 4, !tbaa !5
  %385 = shufflevector <8 x i32> %384, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds i32, ptr %376, i64 -31
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !5
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = mul <8 x i32> %379, %371
  %390 = mul <8 x i32> %382, %372
  %391 = mul <8 x i32> %385, %373
  %392 = mul <8 x i32> %388, %374
  %393 = add nuw i64 %370, 32
  %394 = icmp eq i64 %393, %367
  br i1 %394, label %395, label %369, !llvm.loop !1314

395:                                              ; preds = %369
  %396 = mul <8 x i32> %390, %389
  %397 = mul <8 x i32> %391, %396
  %398 = mul <8 x i32> %392, %397
  %399 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %398)
  %400 = icmp eq i64 %363, %367
  br i1 %400, label %413, label %401

401:                                              ; preds = %354, %395
  %402 = phi i64 [ %357, %354 ], [ %368, %395 ]
  %403 = phi i32 [ 1, %354 ], [ %399, %395 ]
  br label %404

404:                                              ; preds = %401, %404
  %405 = phi i64 [ %410, %404 ], [ %402, %401 ]
  %406 = phi i32 [ %409, %404 ], [ %403, %401 ]
  %407 = getelementptr inbounds i32, ptr %9, i64 %405
  %408 = load i32, ptr %407, align 4, !tbaa !5
  %409 = mul nsw i32 %408, %406
  %410 = add nsw i64 %405, -1
  %411 = trunc i64 %405 to i32
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %404, label %413, !llvm.loop !1315

413:                                              ; preds = %404, %395
  %414 = phi i32 [ %399, %395 ], [ %409, %404 ]
  %415 = and i64 %364, 4294967295
  %416 = getelementptr inbounds i32, ptr %6, i64 %415
  %417 = load i32, ptr %416, align 4, !tbaa !5
  %418 = mul nsw i32 %417, %414
  %419 = add nsw i32 %418, %358
  %420 = icmp sgt i64 %356, 2
  %421 = add nsw i64 %357, -1
  %422 = add i32 %355, 1
  br i1 %420, label %354, label %423, !llvm.loop !1316

423:                                              ; preds = %413, %351
  %424 = phi i32 [ %353, %351 ], [ %419, %413 ]
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds double, ptr %24, i64 %425
  %427 = load double, ptr %426, align 8, !tbaa !18
  %428 = fptoui double %427 to i8
  %429 = load i8, ptr %26, align 1, !tbaa !11
  %430 = add i8 %429, %428
  store i8 %430, ptr %26, align 1, !tbaa !11
  %431 = add nuw nsw i32 %352, 1
  br i1 %345, label %432, label %479

432:                                              ; preds = %423
  %433 = load i32, ptr %4, align 4, !tbaa !5
  %434 = load i32, ptr %12, align 4, !tbaa !5
  %435 = add nsw i32 %434, -1
  %436 = icmp slt i32 %433, %435
  br i1 %436, label %456, label %437

437:                                              ; preds = %432
  %438 = icmp eq i32 %433, %435
  br i1 %438, label %439, label %472

439:                                              ; preds = %437
  store i32 0, ptr %4, align 4, !tbaa !5
  %440 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %440, ptr %6, align 4, !tbaa !5
  br i1 %350, label %479, label %441

441:                                              ; preds = %439, %466
  %442 = phi i64 [ %470, %466 ], [ 1, %439 ]
  %443 = getelementptr inbounds i32, ptr %4, i64 %442
  %444 = load i32, ptr %443, align 4, !tbaa !5
  %445 = getelementptr inbounds i32, ptr %12, i64 %442
  %446 = load i32, ptr %445, align 4, !tbaa !5
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %444, %447
  br i1 %448, label %449, label %464

449:                                              ; preds = %441
  br i1 %436, label %456, label %450

450:                                              ; preds = %449
  %451 = getelementptr inbounds i32, ptr %7, i64 %442
  %452 = load i32, ptr %451, align 4, !tbaa !5
  %453 = getelementptr inbounds i32, ptr %6, i64 %442
  %454 = load i32, ptr %453, align 4, !tbaa !5
  %455 = add nsw i32 %454, %452
  store i32 %455, ptr %453, align 4, !tbaa !5
  br label %474

456:                                              ; preds = %432, %449
  %457 = phi i32 [ %444, %449 ], [ %433, %432 ]
  %458 = phi ptr [ %443, %449 ], [ %4, %432 ]
  %459 = phi i64 [ %442, %449 ], [ 0, %432 ]
  %460 = add nsw i32 %457, 1
  store i32 %460, ptr %458, align 4, !tbaa !5
  %461 = getelementptr inbounds i32, ptr %7, i64 %459
  %462 = load i32, ptr %461, align 4, !tbaa !5
  %463 = getelementptr inbounds i32, ptr %6, i64 %459
  br label %474

464:                                              ; preds = %441
  %465 = icmp eq i32 %444, %447
  br i1 %465, label %466, label %472

466:                                              ; preds = %464
  store i32 0, ptr %443, align 4, !tbaa !5
  %467 = getelementptr inbounds i32, ptr %8, i64 %442
  %468 = load i32, ptr %467, align 4, !tbaa !5
  %469 = getelementptr inbounds i32, ptr %6, i64 %442
  store i32 %468, ptr %469, align 4, !tbaa !5
  %470 = add nuw nsw i64 %442, 1
  %471 = icmp eq i64 %470, %348
  br i1 %471, label %479, label %441, !llvm.loop !1317

472:                                              ; preds = %437, %464
  %473 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

474:                                              ; preds = %450, %456
  %475 = phi ptr [ %463, %456 ], [ %443, %450 ]
  %476 = phi i32 [ %462, %456 ], [ 1, %450 ]
  %477 = load i32, ptr %475, align 4, !tbaa !5
  %478 = add nsw i32 %477, %476
  store i32 %478, ptr %475, align 4, !tbaa !5
  br label %479

479:                                              ; preds = %466, %474, %439, %423
  %480 = icmp eq i32 %431, %5
  br i1 %480, label %5401, label %351, !llvm.loop !1318

481:                                              ; preds = %334, %616
  %482 = phi i32 [ 0, %334 ], [ %565, %616 ]
  %483 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %335, label %484, label %553

484:                                              ; preds = %481, %543
  %485 = phi i32 [ %552, %543 ], [ 0, %481 ]
  %486 = phi i64 [ %494, %543 ], [ %339, %481 ]
  %487 = phi i64 [ %551, %543 ], [ %338, %481 ]
  %488 = phi i32 [ %549, %543 ], [ %483, %481 ]
  %489 = sub i32 %337, %485
  %490 = tail call i32 @llvm.smin.i32(i32 %489, i32 0)
  %491 = sub i32 %489, %490
  %492 = zext i32 %491 to i64
  %493 = add nuw nsw i64 %492, 1
  %494 = add nsw i64 %486, -1
  %495 = icmp ult i32 %491, 31
  br i1 %495, label %531, label %496

496:                                              ; preds = %484
  %497 = and i64 %493, 8589934560
  %498 = sub i64 %487, %497
  br label %499

499:                                              ; preds = %499, %496
  %500 = phi i64 [ 0, %496 ], [ %523, %499 ]
  %501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %519, %499 ]
  %502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %520, %499 ]
  %503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %521, %499 ]
  %504 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %496 ], [ %522, %499 ]
  %505 = sub i64 %487, %500
  %506 = getelementptr inbounds i32, ptr %11, i64 %505
  %507 = getelementptr inbounds i32, ptr %506, i64 -7
  %508 = load <8 x i32>, ptr %507, align 4, !tbaa !5
  %509 = shufflevector <8 x i32> %508, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %510 = getelementptr inbounds i32, ptr %506, i64 -15
  %511 = load <8 x i32>, ptr %510, align 4, !tbaa !5
  %512 = shufflevector <8 x i32> %511, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %513 = getelementptr inbounds i32, ptr %506, i64 -23
  %514 = load <8 x i32>, ptr %513, align 4, !tbaa !5
  %515 = shufflevector <8 x i32> %514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %516 = getelementptr inbounds i32, ptr %506, i64 -31
  %517 = load <8 x i32>, ptr %516, align 4, !tbaa !5
  %518 = shufflevector <8 x i32> %517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %519 = mul <8 x i32> %509, %501
  %520 = mul <8 x i32> %512, %502
  %521 = mul <8 x i32> %515, %503
  %522 = mul <8 x i32> %518, %504
  %523 = add nuw i64 %500, 32
  %524 = icmp eq i64 %523, %497
  br i1 %524, label %525, label %499, !llvm.loop !1319

525:                                              ; preds = %499
  %526 = mul <8 x i32> %520, %519
  %527 = mul <8 x i32> %521, %526
  %528 = mul <8 x i32> %522, %527
  %529 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %528)
  %530 = icmp eq i64 %493, %497
  br i1 %530, label %543, label %531

531:                                              ; preds = %484, %525
  %532 = phi i64 [ %487, %484 ], [ %498, %525 ]
  %533 = phi i32 [ 1, %484 ], [ %529, %525 ]
  br label %534

534:                                              ; preds = %531, %534
  %535 = phi i64 [ %540, %534 ], [ %532, %531 ]
  %536 = phi i32 [ %539, %534 ], [ %533, %531 ]
  %537 = getelementptr inbounds i32, ptr %11, i64 %535
  %538 = load i32, ptr %537, align 4, !tbaa !5
  %539 = mul nsw i32 %538, %536
  %540 = add nsw i64 %535, -1
  %541 = trunc i64 %535 to i32
  %542 = icmp sgt i32 %541, 0
  br i1 %542, label %534, label %543, !llvm.loop !1320

543:                                              ; preds = %534, %525
  %544 = phi i32 [ %529, %525 ], [ %539, %534 ]
  %545 = and i64 %494, 4294967295
  %546 = getelementptr inbounds i32, ptr %6, i64 %545
  %547 = load i32, ptr %546, align 4, !tbaa !5
  %548 = mul nsw i32 %547, %544
  %549 = add nsw i32 %548, %488
  %550 = icmp sgt i64 %486, 2
  %551 = add nsw i64 %487, -1
  %552 = add i32 %485, 1
  br i1 %550, label %484, label %553, !llvm.loop !1321

553:                                              ; preds = %543, %481
  %554 = phi i32 [ %483, %481 ], [ %549, %543 ]
  %555 = icmp slt i32 %554, %5
  br i1 %555, label %558, label %556

556:                                              ; preds = %553
  %557 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

558:                                              ; preds = %553
  %559 = sext i32 %554 to i64
  %560 = getelementptr inbounds double, ptr %24, i64 %559
  %561 = load double, ptr %560, align 8, !tbaa !18
  %562 = fptoui double %561 to i8
  %563 = load i8, ptr %26, align 1, !tbaa !11
  %564 = add i8 %563, %562
  store i8 %564, ptr %26, align 1, !tbaa !11
  %565 = add nuw nsw i32 %482, 1
  br i1 %336, label %566, label %616

566:                                              ; preds = %558
  %567 = load i32, ptr %4, align 4, !tbaa !5
  %568 = load i32, ptr %12, align 4, !tbaa !5
  %569 = add nsw i32 %568, -1
  %570 = icmp slt i32 %567, %569
  br i1 %570, label %593, label %571

571:                                              ; preds = %566
  %572 = icmp eq i32 %567, %569
  br i1 %572, label %573, label %609

573:                                              ; preds = %571
  store i32 0, ptr %4, align 4, !tbaa !5
  %574 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %574, ptr %6, align 4, !tbaa !5
  br i1 %341, label %616, label %575

575:                                              ; preds = %573, %603
  %576 = phi i64 [ %607, %603 ], [ 1, %573 ]
  %577 = getelementptr inbounds i32, ptr %4, i64 %576
  %578 = load i32, ptr %577, align 4, !tbaa !5
  %579 = getelementptr inbounds i32, ptr %12, i64 %576
  %580 = load i32, ptr %579, align 4, !tbaa !5
  %581 = add nsw i32 %580, -1
  %582 = icmp slt i32 %578, %581
  br i1 %582, label %583, label %601

583:                                              ; preds = %575
  br i1 %570, label %593, label %584

584:                                              ; preds = %583
  %585 = shl i64 %576, 32
  %586 = add i64 %585, -4294967296
  %587 = ashr exact i64 %586, 32
  %588 = getelementptr inbounds i32, ptr %7, i64 %587
  %589 = load i32, ptr %588, align 4, !tbaa !5
  %590 = getelementptr inbounds i32, ptr %6, i64 %576
  %591 = load i32, ptr %590, align 4, !tbaa !5
  %592 = add nsw i32 %591, %589
  store i32 %592, ptr %590, align 4, !tbaa !5
  br label %611

593:                                              ; preds = %566, %583
  %594 = phi i32 [ %578, %583 ], [ %567, %566 ]
  %595 = phi ptr [ %577, %583 ], [ %4, %566 ]
  %596 = phi i64 [ %576, %583 ], [ 0, %566 ]
  %597 = add nsw i32 %594, 1
  store i32 %597, ptr %595, align 4, !tbaa !5
  %598 = getelementptr inbounds i32, ptr %7, i64 %596
  %599 = load i32, ptr %598, align 4, !tbaa !5
  %600 = getelementptr inbounds i32, ptr %6, i64 %596
  br label %611

601:                                              ; preds = %575
  %602 = icmp eq i32 %578, %581
  br i1 %602, label %603, label %609

603:                                              ; preds = %601
  store i32 0, ptr %577, align 4, !tbaa !5
  %604 = getelementptr inbounds i32, ptr %8, i64 %576
  %605 = load i32, ptr %604, align 4, !tbaa !5
  %606 = getelementptr inbounds i32, ptr %6, i64 %576
  store i32 %605, ptr %606, align 4, !tbaa !5
  %607 = add nuw nsw i64 %576, 1
  %608 = icmp eq i64 %607, %339
  br i1 %608, label %616, label %575, !llvm.loop !1322

609:                                              ; preds = %571, %601
  %610 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

611:                                              ; preds = %584, %593
  %612 = phi ptr [ %600, %593 ], [ %577, %584 ]
  %613 = phi i32 [ %599, %593 ], [ 1, %584 ]
  %614 = load i32, ptr %612, align 4, !tbaa !5
  %615 = add nsw i32 %614, %613
  store i32 %615, ptr %612, align 4, !tbaa !5
  br label %616

616:                                              ; preds = %603, %611, %573, %558
  %617 = icmp eq i32 %565, %5
  br i1 %617, label %5401, label %481, !llvm.loop !1323

618:                                              ; preds = %31
  %619 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1959, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

620:                                              ; preds = %18
  %621 = getelementptr inbounds ptr, ptr %14, i64 %19
  %622 = load ptr, ptr %621, align 8, !tbaa !9
  %623 = getelementptr inbounds ptr, ptr %16, i64 %19
  %624 = load ptr, ptr %623, align 8, !tbaa !9
  store i32 0, ptr %624, align 4, !tbaa !5
  %625 = icmp eq i32 %13, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %620
  %627 = load double, ptr %622, align 8, !tbaa !18
  %628 = fptosi double %627 to i32
  store i32 %628, ptr %624, align 4, !tbaa !5
  br label %5401

629:                                              ; preds = %620
  switch i32 %1, label %1216 [
    i32 1, label %630
    i32 0, label %926
  ]

630:                                              ; preds = %629
  %631 = getelementptr inbounds i32, ptr %3, i64 %19
  %632 = load i32, ptr %631, align 4, !tbaa !5
  %633 = icmp eq i32 %632, 0
  %634 = icmp sgt i32 %5, 0
  br i1 %633, label %644, label %635

635:                                              ; preds = %630
  br i1 %634, label %636, label %5401

636:                                              ; preds = %635
  %637 = icmp sgt i32 %13, 1
  %638 = icmp sgt i32 %13, 0
  %639 = add i32 %13, -2
  %640 = zext i32 %639 to i64
  %641 = zext i32 %13 to i64
  %642 = add nuw i32 %5, 1
  %643 = icmp eq i32 %13, 1
  br label %789

644:                                              ; preds = %630
  br i1 %634, label %645, label %5401

645:                                              ; preds = %644
  %646 = icmp sgt i32 %13, 1
  %647 = icmp sgt i32 %13, 0
  %648 = add i32 %13, -2
  %649 = zext i32 %648 to i64
  %650 = zext i32 %13 to i64
  %651 = add nuw i32 %5, 1
  %652 = icmp eq i32 %13, 1
  br label %653

653:                                              ; preds = %645, %787
  %654 = phi i32 [ 0, %645 ], [ %739, %787 ]
  %655 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %646, label %656, label %725

656:                                              ; preds = %653, %715
  %657 = phi i32 [ %724, %715 ], [ 0, %653 ]
  %658 = phi i64 [ %666, %715 ], [ %650, %653 ]
  %659 = phi i64 [ %723, %715 ], [ %649, %653 ]
  %660 = phi i32 [ %721, %715 ], [ %655, %653 ]
  %661 = sub i32 %648, %657
  %662 = tail call i32 @llvm.smin.i32(i32 %661, i32 0)
  %663 = sub i32 %661, %662
  %664 = zext i32 %663 to i64
  %665 = add nuw nsw i64 %664, 1
  %666 = add nsw i64 %658, -1
  %667 = icmp ult i32 %663, 31
  br i1 %667, label %703, label %668

668:                                              ; preds = %656
  %669 = and i64 %665, 8589934560
  %670 = sub i64 %659, %669
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i64 [ 0, %668 ], [ %695, %671 ]
  %673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %691, %671 ]
  %674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %692, %671 ]
  %675 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %693, %671 ]
  %676 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %668 ], [ %694, %671 ]
  %677 = sub i64 %659, %672
  %678 = getelementptr inbounds i32, ptr %9, i64 %677
  %679 = getelementptr inbounds i32, ptr %678, i64 -7
  %680 = load <8 x i32>, ptr %679, align 4, !tbaa !5
  %681 = shufflevector <8 x i32> %680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %682 = getelementptr inbounds i32, ptr %678, i64 -15
  %683 = load <8 x i32>, ptr %682, align 4, !tbaa !5
  %684 = shufflevector <8 x i32> %683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %685 = getelementptr inbounds i32, ptr %678, i64 -23
  %686 = load <8 x i32>, ptr %685, align 4, !tbaa !5
  %687 = shufflevector <8 x i32> %686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %688 = getelementptr inbounds i32, ptr %678, i64 -31
  %689 = load <8 x i32>, ptr %688, align 4, !tbaa !5
  %690 = shufflevector <8 x i32> %689, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %691 = mul <8 x i32> %681, %673
  %692 = mul <8 x i32> %684, %674
  %693 = mul <8 x i32> %687, %675
  %694 = mul <8 x i32> %690, %676
  %695 = add nuw i64 %672, 32
  %696 = icmp eq i64 %695, %669
  br i1 %696, label %697, label %671, !llvm.loop !1324

697:                                              ; preds = %671
  %698 = mul <8 x i32> %692, %691
  %699 = mul <8 x i32> %693, %698
  %700 = mul <8 x i32> %694, %699
  %701 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %700)
  %702 = icmp eq i64 %665, %669
  br i1 %702, label %715, label %703

703:                                              ; preds = %656, %697
  %704 = phi i64 [ %659, %656 ], [ %670, %697 ]
  %705 = phi i32 [ 1, %656 ], [ %701, %697 ]
  br label %706

706:                                              ; preds = %703, %706
  %707 = phi i64 [ %712, %706 ], [ %704, %703 ]
  %708 = phi i32 [ %711, %706 ], [ %705, %703 ]
  %709 = getelementptr inbounds i32, ptr %9, i64 %707
  %710 = load i32, ptr %709, align 4, !tbaa !5
  %711 = mul nsw i32 %710, %708
  %712 = add nsw i64 %707, -1
  %713 = trunc i64 %707 to i32
  %714 = icmp sgt i32 %713, 0
  br i1 %714, label %706, label %715, !llvm.loop !1325

715:                                              ; preds = %706, %697
  %716 = phi i32 [ %701, %697 ], [ %711, %706 ]
  %717 = and i64 %666, 4294967295
  %718 = getelementptr inbounds i32, ptr %6, i64 %717
  %719 = load i32, ptr %718, align 4, !tbaa !5
  %720 = mul nsw i32 %719, %716
  %721 = add nsw i32 %720, %660
  %722 = icmp sgt i64 %658, 2
  %723 = add nsw i64 %659, -1
  %724 = add i32 %657, 1
  br i1 %722, label %656, label %725, !llvm.loop !1326

725:                                              ; preds = %715, %653
  %726 = phi i32 [ %655, %653 ], [ %721, %715 ]
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds double, ptr %2, i64 %727
  %729 = load double, ptr %728, align 8, !tbaa !18
  %730 = getelementptr inbounds double, ptr %622, i64 %727
  %731 = load double, ptr %730, align 8, !tbaa !18
  %732 = fptosi double %731 to i32
  %733 = load i32, ptr %624, align 4, !tbaa !5
  %734 = sitofp i32 %733 to double
  %735 = sitofp i32 %732 to double
  %736 = fmul fast double %729, %735
  %737 = fadd fast double %736, %734
  %738 = fptosi double %737 to i32
  store i32 %738, ptr %624, align 4, !tbaa !5
  %739 = add nuw nsw i32 %654, 1
  br i1 %647, label %740, label %787

740:                                              ; preds = %725
  %741 = load i32, ptr %4, align 4, !tbaa !5
  %742 = load i32, ptr %12, align 4, !tbaa !5
  %743 = add nsw i32 %742, -1
  %744 = icmp slt i32 %741, %743
  br i1 %744, label %764, label %745

745:                                              ; preds = %740
  %746 = icmp eq i32 %741, %743
  br i1 %746, label %747, label %780

747:                                              ; preds = %745
  store i32 0, ptr %4, align 4, !tbaa !5
  %748 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %748, ptr %6, align 4, !tbaa !5
  br i1 %652, label %787, label %749

749:                                              ; preds = %747, %774
  %750 = phi i64 [ %778, %774 ], [ 1, %747 ]
  %751 = getelementptr inbounds i32, ptr %4, i64 %750
  %752 = load i32, ptr %751, align 4, !tbaa !5
  %753 = getelementptr inbounds i32, ptr %12, i64 %750
  %754 = load i32, ptr %753, align 4, !tbaa !5
  %755 = add nsw i32 %754, -1
  %756 = icmp slt i32 %752, %755
  br i1 %756, label %757, label %772

757:                                              ; preds = %749
  br i1 %744, label %764, label %758

758:                                              ; preds = %757
  %759 = getelementptr inbounds i32, ptr %7, i64 %750
  %760 = load i32, ptr %759, align 4, !tbaa !5
  %761 = getelementptr inbounds i32, ptr %6, i64 %750
  %762 = load i32, ptr %761, align 4, !tbaa !5
  %763 = add nsw i32 %762, %760
  store i32 %763, ptr %761, align 4, !tbaa !5
  br label %782

764:                                              ; preds = %740, %757
  %765 = phi i32 [ %752, %757 ], [ %741, %740 ]
  %766 = phi ptr [ %751, %757 ], [ %4, %740 ]
  %767 = phi i64 [ %750, %757 ], [ 0, %740 ]
  %768 = add nsw i32 %765, 1
  store i32 %768, ptr %766, align 4, !tbaa !5
  %769 = getelementptr inbounds i32, ptr %7, i64 %767
  %770 = load i32, ptr %769, align 4, !tbaa !5
  %771 = getelementptr inbounds i32, ptr %6, i64 %767
  br label %782

772:                                              ; preds = %749
  %773 = icmp eq i32 %752, %755
  br i1 %773, label %774, label %780

774:                                              ; preds = %772
  store i32 0, ptr %751, align 4, !tbaa !5
  %775 = getelementptr inbounds i32, ptr %8, i64 %750
  %776 = load i32, ptr %775, align 4, !tbaa !5
  %777 = getelementptr inbounds i32, ptr %6, i64 %750
  store i32 %776, ptr %777, align 4, !tbaa !5
  %778 = add nuw nsw i64 %750, 1
  %779 = icmp eq i64 %778, %650
  br i1 %779, label %787, label %749, !llvm.loop !1327

780:                                              ; preds = %745, %772
  %781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

782:                                              ; preds = %758, %764
  %783 = phi ptr [ %771, %764 ], [ %751, %758 ]
  %784 = phi i32 [ %770, %764 ], [ 1, %758 ]
  %785 = load i32, ptr %783, align 4, !tbaa !5
  %786 = add nsw i32 %785, %784
  store i32 %786, ptr %783, align 4, !tbaa !5
  br label %787

787:                                              ; preds = %774, %782, %747, %725
  %788 = icmp eq i32 %739, %5
  br i1 %788, label %5401, label %653, !llvm.loop !1328

789:                                              ; preds = %636, %924
  %790 = phi i32 [ 0, %636 ], [ %873, %924 ]
  %791 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %637, label %792, label %861

792:                                              ; preds = %789, %851
  %793 = phi i32 [ %860, %851 ], [ 0, %789 ]
  %794 = phi i64 [ %802, %851 ], [ %641, %789 ]
  %795 = phi i64 [ %859, %851 ], [ %640, %789 ]
  %796 = phi i32 [ %857, %851 ], [ %791, %789 ]
  %797 = sub i32 %639, %793
  %798 = tail call i32 @llvm.smin.i32(i32 %797, i32 0)
  %799 = sub i32 %797, %798
  %800 = zext i32 %799 to i64
  %801 = add nuw nsw i64 %800, 1
  %802 = add nsw i64 %794, -1
  %803 = icmp ult i32 %799, 31
  br i1 %803, label %839, label %804

804:                                              ; preds = %792
  %805 = and i64 %801, 8589934560
  %806 = sub i64 %795, %805
  br label %807

807:                                              ; preds = %807, %804
  %808 = phi i64 [ 0, %804 ], [ %831, %807 ]
  %809 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %827, %807 ]
  %810 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %828, %807 ]
  %811 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %829, %807 ]
  %812 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %804 ], [ %830, %807 ]
  %813 = sub i64 %795, %808
  %814 = getelementptr inbounds i32, ptr %11, i64 %813
  %815 = getelementptr inbounds i32, ptr %814, i64 -7
  %816 = load <8 x i32>, ptr %815, align 4, !tbaa !5
  %817 = shufflevector <8 x i32> %816, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %818 = getelementptr inbounds i32, ptr %814, i64 -15
  %819 = load <8 x i32>, ptr %818, align 4, !tbaa !5
  %820 = shufflevector <8 x i32> %819, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %821 = getelementptr inbounds i32, ptr %814, i64 -23
  %822 = load <8 x i32>, ptr %821, align 4, !tbaa !5
  %823 = shufflevector <8 x i32> %822, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %824 = getelementptr inbounds i32, ptr %814, i64 -31
  %825 = load <8 x i32>, ptr %824, align 4, !tbaa !5
  %826 = shufflevector <8 x i32> %825, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %827 = mul <8 x i32> %817, %809
  %828 = mul <8 x i32> %820, %810
  %829 = mul <8 x i32> %823, %811
  %830 = mul <8 x i32> %826, %812
  %831 = add nuw i64 %808, 32
  %832 = icmp eq i64 %831, %805
  br i1 %832, label %833, label %807, !llvm.loop !1329

833:                                              ; preds = %807
  %834 = mul <8 x i32> %828, %827
  %835 = mul <8 x i32> %829, %834
  %836 = mul <8 x i32> %830, %835
  %837 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %836)
  %838 = icmp eq i64 %801, %805
  br i1 %838, label %851, label %839

839:                                              ; preds = %792, %833
  %840 = phi i64 [ %795, %792 ], [ %806, %833 ]
  %841 = phi i32 [ 1, %792 ], [ %837, %833 ]
  br label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %848, %842 ], [ %840, %839 ]
  %844 = phi i32 [ %847, %842 ], [ %841, %839 ]
  %845 = getelementptr inbounds i32, ptr %11, i64 %843
  %846 = load i32, ptr %845, align 4, !tbaa !5
  %847 = mul nsw i32 %846, %844
  %848 = add nsw i64 %843, -1
  %849 = trunc i64 %843 to i32
  %850 = icmp sgt i32 %849, 0
  br i1 %850, label %842, label %851, !llvm.loop !1330

851:                                              ; preds = %842, %833
  %852 = phi i32 [ %837, %833 ], [ %847, %842 ]
  %853 = and i64 %802, 4294967295
  %854 = getelementptr inbounds i32, ptr %6, i64 %853
  %855 = load i32, ptr %854, align 4, !tbaa !5
  %856 = mul nsw i32 %855, %852
  %857 = add nsw i32 %856, %796
  %858 = icmp sgt i64 %794, 2
  %859 = add nsw i64 %795, -1
  %860 = add i32 %793, 1
  br i1 %858, label %792, label %861, !llvm.loop !1331

861:                                              ; preds = %851, %789
  %862 = phi i32 [ %791, %789 ], [ %857, %851 ]
  %863 = icmp slt i32 %862, %5
  br i1 %863, label %866, label %864

864:                                              ; preds = %861
  %865 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

866:                                              ; preds = %861
  %867 = sext i32 %862 to i64
  %868 = getelementptr inbounds double, ptr %622, i64 %867
  %869 = load double, ptr %868, align 8, !tbaa !18
  %870 = fptosi double %869 to i32
  %871 = load i32, ptr %624, align 4, !tbaa !5
  %872 = add i32 %871, %870
  store i32 %872, ptr %624, align 4, !tbaa !5
  %873 = add nuw nsw i32 %790, 1
  br i1 %638, label %874, label %924

874:                                              ; preds = %866
  %875 = load i32, ptr %4, align 4, !tbaa !5
  %876 = load i32, ptr %12, align 4, !tbaa !5
  %877 = add nsw i32 %876, -1
  %878 = icmp slt i32 %875, %877
  br i1 %878, label %901, label %879

879:                                              ; preds = %874
  %880 = icmp eq i32 %875, %877
  br i1 %880, label %881, label %917

881:                                              ; preds = %879
  store i32 0, ptr %4, align 4, !tbaa !5
  %882 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %882, ptr %6, align 4, !tbaa !5
  br i1 %643, label %924, label %883

883:                                              ; preds = %881, %911
  %884 = phi i64 [ %915, %911 ], [ 1, %881 ]
  %885 = getelementptr inbounds i32, ptr %4, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !5
  %887 = getelementptr inbounds i32, ptr %12, i64 %884
  %888 = load i32, ptr %887, align 4, !tbaa !5
  %889 = add nsw i32 %888, -1
  %890 = icmp slt i32 %886, %889
  br i1 %890, label %891, label %909

891:                                              ; preds = %883
  br i1 %878, label %901, label %892

892:                                              ; preds = %891
  %893 = shl i64 %884, 32
  %894 = add i64 %893, -4294967296
  %895 = ashr exact i64 %894, 32
  %896 = getelementptr inbounds i32, ptr %7, i64 %895
  %897 = load i32, ptr %896, align 4, !tbaa !5
  %898 = getelementptr inbounds i32, ptr %6, i64 %884
  %899 = load i32, ptr %898, align 4, !tbaa !5
  %900 = add nsw i32 %899, %897
  store i32 %900, ptr %898, align 4, !tbaa !5
  br label %919

901:                                              ; preds = %874, %891
  %902 = phi i32 [ %886, %891 ], [ %875, %874 ]
  %903 = phi ptr [ %885, %891 ], [ %4, %874 ]
  %904 = phi i64 [ %884, %891 ], [ 0, %874 ]
  %905 = add nsw i32 %902, 1
  store i32 %905, ptr %903, align 4, !tbaa !5
  %906 = getelementptr inbounds i32, ptr %7, i64 %904
  %907 = load i32, ptr %906, align 4, !tbaa !5
  %908 = getelementptr inbounds i32, ptr %6, i64 %904
  br label %919

909:                                              ; preds = %883
  %910 = icmp eq i32 %886, %889
  br i1 %910, label %911, label %917

911:                                              ; preds = %909
  store i32 0, ptr %885, align 4, !tbaa !5
  %912 = getelementptr inbounds i32, ptr %8, i64 %884
  %913 = load i32, ptr %912, align 4, !tbaa !5
  %914 = getelementptr inbounds i32, ptr %6, i64 %884
  store i32 %913, ptr %914, align 4, !tbaa !5
  %915 = add nuw nsw i64 %884, 1
  %916 = icmp eq i64 %915, %641
  br i1 %916, label %924, label %883, !llvm.loop !1332

917:                                              ; preds = %879, %909
  %918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

919:                                              ; preds = %892, %901
  %920 = phi ptr [ %908, %901 ], [ %885, %892 ]
  %921 = phi i32 [ %907, %901 ], [ 1, %892 ]
  %922 = load i32, ptr %920, align 4, !tbaa !5
  %923 = add nsw i32 %922, %921
  store i32 %923, ptr %920, align 4, !tbaa !5
  br label %924

924:                                              ; preds = %911, %919, %881, %866
  %925 = icmp eq i32 %873, %5
  br i1 %925, label %5401, label %789, !llvm.loop !1333

926:                                              ; preds = %629
  %927 = getelementptr inbounds i32, ptr %3, i64 %19
  %928 = load i32, ptr %927, align 4, !tbaa !5
  %929 = icmp eq i32 %928, 0
  %930 = icmp sgt i32 %5, 0
  br i1 %929, label %940, label %931

931:                                              ; preds = %926
  br i1 %930, label %932, label %5401

932:                                              ; preds = %931
  %933 = icmp sgt i32 %13, 1
  %934 = icmp sgt i32 %13, 0
  %935 = add i32 %13, -2
  %936 = zext i32 %935 to i64
  %937 = zext i32 %13 to i64
  %938 = add nuw i32 %5, 1
  %939 = icmp eq i32 %13, 1
  br label %1079

940:                                              ; preds = %926
  br i1 %930, label %941, label %5401

941:                                              ; preds = %940
  %942 = icmp sgt i32 %13, 1
  %943 = icmp sgt i32 %13, 0
  %944 = add i32 %13, -2
  %945 = zext i32 %944 to i64
  %946 = zext i32 %13 to i64
  %947 = add nuw i32 %5, 1
  %948 = icmp eq i32 %13, 1
  br label %949

949:                                              ; preds = %941, %1077
  %950 = phi i32 [ 0, %941 ], [ %1029, %1077 ]
  %951 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %942, label %952, label %1021

952:                                              ; preds = %949, %1011
  %953 = phi i32 [ %1020, %1011 ], [ 0, %949 ]
  %954 = phi i64 [ %962, %1011 ], [ %946, %949 ]
  %955 = phi i64 [ %1019, %1011 ], [ %945, %949 ]
  %956 = phi i32 [ %1017, %1011 ], [ %951, %949 ]
  %957 = sub i32 %944, %953
  %958 = tail call i32 @llvm.smin.i32(i32 %957, i32 0)
  %959 = sub i32 %957, %958
  %960 = zext i32 %959 to i64
  %961 = add nuw nsw i64 %960, 1
  %962 = add nsw i64 %954, -1
  %963 = icmp ult i32 %959, 31
  br i1 %963, label %999, label %964

964:                                              ; preds = %952
  %965 = and i64 %961, 8589934560
  %966 = sub i64 %955, %965
  br label %967

967:                                              ; preds = %967, %964
  %968 = phi i64 [ 0, %964 ], [ %991, %967 ]
  %969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %987, %967 ]
  %970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %988, %967 ]
  %971 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %989, %967 ]
  %972 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %964 ], [ %990, %967 ]
  %973 = sub i64 %955, %968
  %974 = getelementptr inbounds i32, ptr %9, i64 %973
  %975 = getelementptr inbounds i32, ptr %974, i64 -7
  %976 = load <8 x i32>, ptr %975, align 4, !tbaa !5
  %977 = shufflevector <8 x i32> %976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %978 = getelementptr inbounds i32, ptr %974, i64 -15
  %979 = load <8 x i32>, ptr %978, align 4, !tbaa !5
  %980 = shufflevector <8 x i32> %979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %981 = getelementptr inbounds i32, ptr %974, i64 -23
  %982 = load <8 x i32>, ptr %981, align 4, !tbaa !5
  %983 = shufflevector <8 x i32> %982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %984 = getelementptr inbounds i32, ptr %974, i64 -31
  %985 = load <8 x i32>, ptr %984, align 4, !tbaa !5
  %986 = shufflevector <8 x i32> %985, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %987 = mul <8 x i32> %977, %969
  %988 = mul <8 x i32> %980, %970
  %989 = mul <8 x i32> %983, %971
  %990 = mul <8 x i32> %986, %972
  %991 = add nuw i64 %968, 32
  %992 = icmp eq i64 %991, %965
  br i1 %992, label %993, label %967, !llvm.loop !1334

993:                                              ; preds = %967
  %994 = mul <8 x i32> %988, %987
  %995 = mul <8 x i32> %989, %994
  %996 = mul <8 x i32> %990, %995
  %997 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %996)
  %998 = icmp eq i64 %961, %965
  br i1 %998, label %1011, label %999

999:                                              ; preds = %952, %993
  %1000 = phi i64 [ %955, %952 ], [ %966, %993 ]
  %1001 = phi i32 [ 1, %952 ], [ %997, %993 ]
  br label %1002

1002:                                             ; preds = %999, %1002
  %1003 = phi i64 [ %1008, %1002 ], [ %1000, %999 ]
  %1004 = phi i32 [ %1007, %1002 ], [ %1001, %999 ]
  %1005 = getelementptr inbounds i32, ptr %9, i64 %1003
  %1006 = load i32, ptr %1005, align 4, !tbaa !5
  %1007 = mul nsw i32 %1006, %1004
  %1008 = add nsw i64 %1003, -1
  %1009 = trunc i64 %1003 to i32
  %1010 = icmp sgt i32 %1009, 0
  br i1 %1010, label %1002, label %1011, !llvm.loop !1335

1011:                                             ; preds = %1002, %993
  %1012 = phi i32 [ %997, %993 ], [ %1007, %1002 ]
  %1013 = and i64 %962, 4294967295
  %1014 = getelementptr inbounds i32, ptr %6, i64 %1013
  %1015 = load i32, ptr %1014, align 4, !tbaa !5
  %1016 = mul nsw i32 %1015, %1012
  %1017 = add nsw i32 %1016, %956
  %1018 = icmp sgt i64 %954, 2
  %1019 = add nsw i64 %955, -1
  %1020 = add i32 %953, 1
  br i1 %1018, label %952, label %1021, !llvm.loop !1336

1021:                                             ; preds = %1011, %949
  %1022 = phi i32 [ %951, %949 ], [ %1017, %1011 ]
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds double, ptr %622, i64 %1023
  %1025 = load double, ptr %1024, align 8, !tbaa !18
  %1026 = fptosi double %1025 to i32
  %1027 = load i32, ptr %624, align 4, !tbaa !5
  %1028 = add nsw i32 %1027, %1026
  store i32 %1028, ptr %624, align 4, !tbaa !5
  %1029 = add nuw nsw i32 %950, 1
  br i1 %943, label %1030, label %1077

1030:                                             ; preds = %1021
  %1031 = load i32, ptr %4, align 4, !tbaa !5
  %1032 = load i32, ptr %12, align 4, !tbaa !5
  %1033 = add nsw i32 %1032, -1
  %1034 = icmp slt i32 %1031, %1033
  br i1 %1034, label %1054, label %1035

1035:                                             ; preds = %1030
  %1036 = icmp eq i32 %1031, %1033
  br i1 %1036, label %1037, label %1070

1037:                                             ; preds = %1035
  store i32 0, ptr %4, align 4, !tbaa !5
  %1038 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1038, ptr %6, align 4, !tbaa !5
  br i1 %948, label %1077, label %1039

1039:                                             ; preds = %1037, %1064
  %1040 = phi i64 [ %1068, %1064 ], [ 1, %1037 ]
  %1041 = getelementptr inbounds i32, ptr %4, i64 %1040
  %1042 = load i32, ptr %1041, align 4, !tbaa !5
  %1043 = getelementptr inbounds i32, ptr %12, i64 %1040
  %1044 = load i32, ptr %1043, align 4, !tbaa !5
  %1045 = add nsw i32 %1044, -1
  %1046 = icmp slt i32 %1042, %1045
  br i1 %1046, label %1047, label %1062

1047:                                             ; preds = %1039
  br i1 %1034, label %1054, label %1048

1048:                                             ; preds = %1047
  %1049 = getelementptr inbounds i32, ptr %7, i64 %1040
  %1050 = load i32, ptr %1049, align 4, !tbaa !5
  %1051 = getelementptr inbounds i32, ptr %6, i64 %1040
  %1052 = load i32, ptr %1051, align 4, !tbaa !5
  %1053 = add nsw i32 %1052, %1050
  store i32 %1053, ptr %1051, align 4, !tbaa !5
  br label %1072

1054:                                             ; preds = %1030, %1047
  %1055 = phi i32 [ %1042, %1047 ], [ %1031, %1030 ]
  %1056 = phi ptr [ %1041, %1047 ], [ %4, %1030 ]
  %1057 = phi i64 [ %1040, %1047 ], [ 0, %1030 ]
  %1058 = add nsw i32 %1055, 1
  store i32 %1058, ptr %1056, align 4, !tbaa !5
  %1059 = getelementptr inbounds i32, ptr %7, i64 %1057
  %1060 = load i32, ptr %1059, align 4, !tbaa !5
  %1061 = getelementptr inbounds i32, ptr %6, i64 %1057
  br label %1072

1062:                                             ; preds = %1039
  %1063 = icmp eq i32 %1042, %1045
  br i1 %1063, label %1064, label %1070

1064:                                             ; preds = %1062
  store i32 0, ptr %1041, align 4, !tbaa !5
  %1065 = getelementptr inbounds i32, ptr %8, i64 %1040
  %1066 = load i32, ptr %1065, align 4, !tbaa !5
  %1067 = getelementptr inbounds i32, ptr %6, i64 %1040
  store i32 %1066, ptr %1067, align 4, !tbaa !5
  %1068 = add nuw nsw i64 %1040, 1
  %1069 = icmp eq i64 %1068, %946
  br i1 %1069, label %1077, label %1039, !llvm.loop !1337

1070:                                             ; preds = %1035, %1062
  %1071 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1072:                                             ; preds = %1048, %1054
  %1073 = phi ptr [ %1061, %1054 ], [ %1041, %1048 ]
  %1074 = phi i32 [ %1060, %1054 ], [ 1, %1048 ]
  %1075 = load i32, ptr %1073, align 4, !tbaa !5
  %1076 = add nsw i32 %1075, %1074
  store i32 %1076, ptr %1073, align 4, !tbaa !5
  br label %1077

1077:                                             ; preds = %1064, %1072, %1037, %1021
  %1078 = icmp eq i32 %1029, %5
  br i1 %1078, label %5401, label %949, !llvm.loop !1338

1079:                                             ; preds = %932, %1214
  %1080 = phi i32 [ 0, %932 ], [ %1163, %1214 ]
  %1081 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %933, label %1082, label %1151

1082:                                             ; preds = %1079, %1141
  %1083 = phi i32 [ %1150, %1141 ], [ 0, %1079 ]
  %1084 = phi i64 [ %1092, %1141 ], [ %937, %1079 ]
  %1085 = phi i64 [ %1149, %1141 ], [ %936, %1079 ]
  %1086 = phi i32 [ %1147, %1141 ], [ %1081, %1079 ]
  %1087 = sub i32 %935, %1083
  %1088 = tail call i32 @llvm.smin.i32(i32 %1087, i32 0)
  %1089 = sub i32 %1087, %1088
  %1090 = zext i32 %1089 to i64
  %1091 = add nuw nsw i64 %1090, 1
  %1092 = add nsw i64 %1084, -1
  %1093 = icmp ult i32 %1089, 31
  br i1 %1093, label %1129, label %1094

1094:                                             ; preds = %1082
  %1095 = and i64 %1091, 8589934560
  %1096 = sub i64 %1085, %1095
  br label %1097

1097:                                             ; preds = %1097, %1094
  %1098 = phi i64 [ 0, %1094 ], [ %1121, %1097 ]
  %1099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1117, %1097 ]
  %1100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1118, %1097 ]
  %1101 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1119, %1097 ]
  %1102 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1094 ], [ %1120, %1097 ]
  %1103 = sub i64 %1085, %1098
  %1104 = getelementptr inbounds i32, ptr %11, i64 %1103
  %1105 = getelementptr inbounds i32, ptr %1104, i64 -7
  %1106 = load <8 x i32>, ptr %1105, align 4, !tbaa !5
  %1107 = shufflevector <8 x i32> %1106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1108 = getelementptr inbounds i32, ptr %1104, i64 -15
  %1109 = load <8 x i32>, ptr %1108, align 4, !tbaa !5
  %1110 = shufflevector <8 x i32> %1109, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1111 = getelementptr inbounds i32, ptr %1104, i64 -23
  %1112 = load <8 x i32>, ptr %1111, align 4, !tbaa !5
  %1113 = shufflevector <8 x i32> %1112, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1114 = getelementptr inbounds i32, ptr %1104, i64 -31
  %1115 = load <8 x i32>, ptr %1114, align 4, !tbaa !5
  %1116 = shufflevector <8 x i32> %1115, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1117 = mul <8 x i32> %1107, %1099
  %1118 = mul <8 x i32> %1110, %1100
  %1119 = mul <8 x i32> %1113, %1101
  %1120 = mul <8 x i32> %1116, %1102
  %1121 = add nuw i64 %1098, 32
  %1122 = icmp eq i64 %1121, %1095
  br i1 %1122, label %1123, label %1097, !llvm.loop !1339

1123:                                             ; preds = %1097
  %1124 = mul <8 x i32> %1118, %1117
  %1125 = mul <8 x i32> %1119, %1124
  %1126 = mul <8 x i32> %1120, %1125
  %1127 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1126)
  %1128 = icmp eq i64 %1091, %1095
  br i1 %1128, label %1141, label %1129

1129:                                             ; preds = %1082, %1123
  %1130 = phi i64 [ %1085, %1082 ], [ %1096, %1123 ]
  %1131 = phi i32 [ 1, %1082 ], [ %1127, %1123 ]
  br label %1132

1132:                                             ; preds = %1129, %1132
  %1133 = phi i64 [ %1138, %1132 ], [ %1130, %1129 ]
  %1134 = phi i32 [ %1137, %1132 ], [ %1131, %1129 ]
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1133
  %1136 = load i32, ptr %1135, align 4, !tbaa !5
  %1137 = mul nsw i32 %1136, %1134
  %1138 = add nsw i64 %1133, -1
  %1139 = trunc i64 %1133 to i32
  %1140 = icmp sgt i32 %1139, 0
  br i1 %1140, label %1132, label %1141, !llvm.loop !1340

1141:                                             ; preds = %1132, %1123
  %1142 = phi i32 [ %1127, %1123 ], [ %1137, %1132 ]
  %1143 = and i64 %1092, 4294967295
  %1144 = getelementptr inbounds i32, ptr %6, i64 %1143
  %1145 = load i32, ptr %1144, align 4, !tbaa !5
  %1146 = mul nsw i32 %1145, %1142
  %1147 = add nsw i32 %1146, %1086
  %1148 = icmp sgt i64 %1084, 2
  %1149 = add nsw i64 %1085, -1
  %1150 = add i32 %1083, 1
  br i1 %1148, label %1082, label %1151, !llvm.loop !1341

1151:                                             ; preds = %1141, %1079
  %1152 = phi i32 [ %1081, %1079 ], [ %1147, %1141 ]
  %1153 = icmp slt i32 %1152, %5
  br i1 %1153, label %1156, label %1154

1154:                                             ; preds = %1151
  %1155 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

1156:                                             ; preds = %1151
  %1157 = sext i32 %1152 to i64
  %1158 = getelementptr inbounds double, ptr %622, i64 %1157
  %1159 = load double, ptr %1158, align 8, !tbaa !18
  %1160 = fptosi double %1159 to i32
  %1161 = load i32, ptr %624, align 4, !tbaa !5
  %1162 = add nsw i32 %1161, %1160
  store i32 %1162, ptr %624, align 4, !tbaa !5
  %1163 = add nuw nsw i32 %1080, 1
  br i1 %934, label %1164, label %1214

1164:                                             ; preds = %1156
  %1165 = load i32, ptr %4, align 4, !tbaa !5
  %1166 = load i32, ptr %12, align 4, !tbaa !5
  %1167 = add nsw i32 %1166, -1
  %1168 = icmp slt i32 %1165, %1167
  br i1 %1168, label %1191, label %1169

1169:                                             ; preds = %1164
  %1170 = icmp eq i32 %1165, %1167
  br i1 %1170, label %1171, label %1207

1171:                                             ; preds = %1169
  store i32 0, ptr %4, align 4, !tbaa !5
  %1172 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1172, ptr %6, align 4, !tbaa !5
  br i1 %939, label %1214, label %1173

1173:                                             ; preds = %1171, %1201
  %1174 = phi i64 [ %1205, %1201 ], [ 1, %1171 ]
  %1175 = getelementptr inbounds i32, ptr %4, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !5
  %1177 = getelementptr inbounds i32, ptr %12, i64 %1174
  %1178 = load i32, ptr %1177, align 4, !tbaa !5
  %1179 = add nsw i32 %1178, -1
  %1180 = icmp slt i32 %1176, %1179
  br i1 %1180, label %1181, label %1199

1181:                                             ; preds = %1173
  br i1 %1168, label %1191, label %1182

1182:                                             ; preds = %1181
  %1183 = shl i64 %1174, 32
  %1184 = add i64 %1183, -4294967296
  %1185 = ashr exact i64 %1184, 32
  %1186 = getelementptr inbounds i32, ptr %7, i64 %1185
  %1187 = load i32, ptr %1186, align 4, !tbaa !5
  %1188 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1189 = load i32, ptr %1188, align 4, !tbaa !5
  %1190 = add nsw i32 %1189, %1187
  store i32 %1190, ptr %1188, align 4, !tbaa !5
  br label %1209

1191:                                             ; preds = %1164, %1181
  %1192 = phi i32 [ %1176, %1181 ], [ %1165, %1164 ]
  %1193 = phi ptr [ %1175, %1181 ], [ %4, %1164 ]
  %1194 = phi i64 [ %1174, %1181 ], [ 0, %1164 ]
  %1195 = add nsw i32 %1192, 1
  store i32 %1195, ptr %1193, align 4, !tbaa !5
  %1196 = getelementptr inbounds i32, ptr %7, i64 %1194
  %1197 = load i32, ptr %1196, align 4, !tbaa !5
  %1198 = getelementptr inbounds i32, ptr %6, i64 %1194
  br label %1209

1199:                                             ; preds = %1173
  %1200 = icmp eq i32 %1176, %1179
  br i1 %1200, label %1201, label %1207

1201:                                             ; preds = %1199
  store i32 0, ptr %1175, align 4, !tbaa !5
  %1202 = getelementptr inbounds i32, ptr %8, i64 %1174
  %1203 = load i32, ptr %1202, align 4, !tbaa !5
  %1204 = getelementptr inbounds i32, ptr %6, i64 %1174
  store i32 %1203, ptr %1204, align 4, !tbaa !5
  %1205 = add nuw nsw i64 %1174, 1
  %1206 = icmp eq i64 %1205, %937
  br i1 %1206, label %1214, label %1173, !llvm.loop !1342

1207:                                             ; preds = %1169, %1199
  %1208 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1209:                                             ; preds = %1182, %1191
  %1210 = phi ptr [ %1198, %1191 ], [ %1175, %1182 ]
  %1211 = phi i32 [ %1197, %1191 ], [ 1, %1182 ]
  %1212 = load i32, ptr %1210, align 4, !tbaa !5
  %1213 = add nsw i32 %1212, %1211
  store i32 %1213, ptr %1210, align 4, !tbaa !5
  br label %1214

1214:                                             ; preds = %1201, %1209, %1171, %1156
  %1215 = icmp eq i32 %1163, %5
  br i1 %1215, label %5401, label %1079, !llvm.loop !1343

1216:                                             ; preds = %629
  %1217 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1962, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

1218:                                             ; preds = %18
  %1219 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1220 = load ptr, ptr %1219, align 8, !tbaa !9
  %1221 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1222 = load ptr, ptr %1221, align 8, !tbaa !9
  store i8 0, ptr %1222, align 1, !tbaa !11
  %1223 = icmp eq i32 %13, 0
  br i1 %1223, label %1224, label %1227

1224:                                             ; preds = %1218
  %1225 = load double, ptr %1220, align 8, !tbaa !18
  %1226 = fptosi double %1225 to i8
  store i8 %1226, ptr %1222, align 1, !tbaa !11
  br label %5401

1227:                                             ; preds = %1218
  switch i32 %1, label %1814 [
    i32 1, label %1228
    i32 0, label %1524
  ]

1228:                                             ; preds = %1227
  %1229 = getelementptr inbounds i32, ptr %3, i64 %19
  %1230 = load i32, ptr %1229, align 4, !tbaa !5
  %1231 = icmp eq i32 %1230, 0
  %1232 = icmp sgt i32 %5, 0
  br i1 %1231, label %1242, label %1233

1233:                                             ; preds = %1228
  br i1 %1232, label %1234, label %5401

1234:                                             ; preds = %1233
  %1235 = icmp sgt i32 %13, 1
  %1236 = icmp sgt i32 %13, 0
  %1237 = add i32 %13, -2
  %1238 = zext i32 %1237 to i64
  %1239 = zext i32 %13 to i64
  %1240 = add nuw i32 %5, 1
  %1241 = icmp eq i32 %13, 1
  br label %1387

1242:                                             ; preds = %1228
  br i1 %1232, label %1243, label %5401

1243:                                             ; preds = %1242
  %1244 = icmp sgt i32 %13, 1
  %1245 = icmp sgt i32 %13, 0
  %1246 = add i32 %13, -2
  %1247 = zext i32 %1246 to i64
  %1248 = zext i32 %13 to i64
  %1249 = add nuw i32 %5, 1
  %1250 = icmp eq i32 %13, 1
  br label %1251

1251:                                             ; preds = %1243, %1385
  %1252 = phi i32 [ 0, %1243 ], [ %1337, %1385 ]
  %1253 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1244, label %1254, label %1323

1254:                                             ; preds = %1251, %1313
  %1255 = phi i32 [ %1322, %1313 ], [ 0, %1251 ]
  %1256 = phi i64 [ %1264, %1313 ], [ %1248, %1251 ]
  %1257 = phi i64 [ %1321, %1313 ], [ %1247, %1251 ]
  %1258 = phi i32 [ %1319, %1313 ], [ %1253, %1251 ]
  %1259 = sub i32 %1246, %1255
  %1260 = tail call i32 @llvm.smin.i32(i32 %1259, i32 0)
  %1261 = sub i32 %1259, %1260
  %1262 = zext i32 %1261 to i64
  %1263 = add nuw nsw i64 %1262, 1
  %1264 = add nsw i64 %1256, -1
  %1265 = icmp ult i32 %1261, 31
  br i1 %1265, label %1301, label %1266

1266:                                             ; preds = %1254
  %1267 = and i64 %1263, 8589934560
  %1268 = sub i64 %1257, %1267
  br label %1269

1269:                                             ; preds = %1269, %1266
  %1270 = phi i64 [ 0, %1266 ], [ %1293, %1269 ]
  %1271 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1289, %1269 ]
  %1272 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1290, %1269 ]
  %1273 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1291, %1269 ]
  %1274 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1266 ], [ %1292, %1269 ]
  %1275 = sub i64 %1257, %1270
  %1276 = getelementptr inbounds i32, ptr %9, i64 %1275
  %1277 = getelementptr inbounds i32, ptr %1276, i64 -7
  %1278 = load <8 x i32>, ptr %1277, align 4, !tbaa !5
  %1279 = shufflevector <8 x i32> %1278, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1280 = getelementptr inbounds i32, ptr %1276, i64 -15
  %1281 = load <8 x i32>, ptr %1280, align 4, !tbaa !5
  %1282 = shufflevector <8 x i32> %1281, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1283 = getelementptr inbounds i32, ptr %1276, i64 -23
  %1284 = load <8 x i32>, ptr %1283, align 4, !tbaa !5
  %1285 = shufflevector <8 x i32> %1284, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1286 = getelementptr inbounds i32, ptr %1276, i64 -31
  %1287 = load <8 x i32>, ptr %1286, align 4, !tbaa !5
  %1288 = shufflevector <8 x i32> %1287, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1289 = mul <8 x i32> %1279, %1271
  %1290 = mul <8 x i32> %1282, %1272
  %1291 = mul <8 x i32> %1285, %1273
  %1292 = mul <8 x i32> %1288, %1274
  %1293 = add nuw i64 %1270, 32
  %1294 = icmp eq i64 %1293, %1267
  br i1 %1294, label %1295, label %1269, !llvm.loop !1344

1295:                                             ; preds = %1269
  %1296 = mul <8 x i32> %1290, %1289
  %1297 = mul <8 x i32> %1291, %1296
  %1298 = mul <8 x i32> %1292, %1297
  %1299 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1298)
  %1300 = icmp eq i64 %1263, %1267
  br i1 %1300, label %1313, label %1301

1301:                                             ; preds = %1254, %1295
  %1302 = phi i64 [ %1257, %1254 ], [ %1268, %1295 ]
  %1303 = phi i32 [ 1, %1254 ], [ %1299, %1295 ]
  br label %1304

1304:                                             ; preds = %1301, %1304
  %1305 = phi i64 [ %1310, %1304 ], [ %1302, %1301 ]
  %1306 = phi i32 [ %1309, %1304 ], [ %1303, %1301 ]
  %1307 = getelementptr inbounds i32, ptr %9, i64 %1305
  %1308 = load i32, ptr %1307, align 4, !tbaa !5
  %1309 = mul nsw i32 %1308, %1306
  %1310 = add nsw i64 %1305, -1
  %1311 = trunc i64 %1305 to i32
  %1312 = icmp sgt i32 %1311, 0
  br i1 %1312, label %1304, label %1313, !llvm.loop !1345

1313:                                             ; preds = %1304, %1295
  %1314 = phi i32 [ %1299, %1295 ], [ %1309, %1304 ]
  %1315 = and i64 %1264, 4294967295
  %1316 = getelementptr inbounds i32, ptr %6, i64 %1315
  %1317 = load i32, ptr %1316, align 4, !tbaa !5
  %1318 = mul nsw i32 %1317, %1314
  %1319 = add nsw i32 %1318, %1258
  %1320 = icmp sgt i64 %1256, 2
  %1321 = add nsw i64 %1257, -1
  %1322 = add i32 %1255, 1
  br i1 %1320, label %1254, label %1323, !llvm.loop !1346

1323:                                             ; preds = %1313, %1251
  %1324 = phi i32 [ %1253, %1251 ], [ %1319, %1313 ]
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds double, ptr %2, i64 %1325
  %1327 = load double, ptr %1326, align 8, !tbaa !18
  %1328 = getelementptr inbounds double, ptr %1220, i64 %1325
  %1329 = load double, ptr %1328, align 8, !tbaa !18
  %1330 = fptosi double %1329 to i8
  %1331 = load i8, ptr %1222, align 1, !tbaa !11
  %1332 = sitofp i8 %1331 to double
  %1333 = sitofp i8 %1330 to double
  %1334 = fmul fast double %1327, %1333
  %1335 = fadd fast double %1334, %1332
  %1336 = fptosi double %1335 to i8
  store i8 %1336, ptr %1222, align 1, !tbaa !11
  %1337 = add nuw nsw i32 %1252, 1
  br i1 %1245, label %1338, label %1385

1338:                                             ; preds = %1323
  %1339 = load i32, ptr %4, align 4, !tbaa !5
  %1340 = load i32, ptr %12, align 4, !tbaa !5
  %1341 = add nsw i32 %1340, -1
  %1342 = icmp slt i32 %1339, %1341
  br i1 %1342, label %1362, label %1343

1343:                                             ; preds = %1338
  %1344 = icmp eq i32 %1339, %1341
  br i1 %1344, label %1345, label %1378

1345:                                             ; preds = %1343
  store i32 0, ptr %4, align 4, !tbaa !5
  %1346 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1346, ptr %6, align 4, !tbaa !5
  br i1 %1250, label %1385, label %1347

1347:                                             ; preds = %1345, %1372
  %1348 = phi i64 [ %1376, %1372 ], [ 1, %1345 ]
  %1349 = getelementptr inbounds i32, ptr %4, i64 %1348
  %1350 = load i32, ptr %1349, align 4, !tbaa !5
  %1351 = getelementptr inbounds i32, ptr %12, i64 %1348
  %1352 = load i32, ptr %1351, align 4, !tbaa !5
  %1353 = add nsw i32 %1352, -1
  %1354 = icmp slt i32 %1350, %1353
  br i1 %1354, label %1355, label %1370

1355:                                             ; preds = %1347
  br i1 %1342, label %1362, label %1356

1356:                                             ; preds = %1355
  %1357 = getelementptr inbounds i32, ptr %7, i64 %1348
  %1358 = load i32, ptr %1357, align 4, !tbaa !5
  %1359 = getelementptr inbounds i32, ptr %6, i64 %1348
  %1360 = load i32, ptr %1359, align 4, !tbaa !5
  %1361 = add nsw i32 %1360, %1358
  store i32 %1361, ptr %1359, align 4, !tbaa !5
  br label %1380

1362:                                             ; preds = %1338, %1355
  %1363 = phi i32 [ %1350, %1355 ], [ %1339, %1338 ]
  %1364 = phi ptr [ %1349, %1355 ], [ %4, %1338 ]
  %1365 = phi i64 [ %1348, %1355 ], [ 0, %1338 ]
  %1366 = add nsw i32 %1363, 1
  store i32 %1366, ptr %1364, align 4, !tbaa !5
  %1367 = getelementptr inbounds i32, ptr %7, i64 %1365
  %1368 = load i32, ptr %1367, align 4, !tbaa !5
  %1369 = getelementptr inbounds i32, ptr %6, i64 %1365
  br label %1380

1370:                                             ; preds = %1347
  %1371 = icmp eq i32 %1350, %1353
  br i1 %1371, label %1372, label %1378

1372:                                             ; preds = %1370
  store i32 0, ptr %1349, align 4, !tbaa !5
  %1373 = getelementptr inbounds i32, ptr %8, i64 %1348
  %1374 = load i32, ptr %1373, align 4, !tbaa !5
  %1375 = getelementptr inbounds i32, ptr %6, i64 %1348
  store i32 %1374, ptr %1375, align 4, !tbaa !5
  %1376 = add nuw nsw i64 %1348, 1
  %1377 = icmp eq i64 %1376, %1248
  br i1 %1377, label %1385, label %1347, !llvm.loop !1347

1378:                                             ; preds = %1343, %1370
  %1379 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1380:                                             ; preds = %1356, %1362
  %1381 = phi ptr [ %1369, %1362 ], [ %1349, %1356 ]
  %1382 = phi i32 [ %1368, %1362 ], [ 1, %1356 ]
  %1383 = load i32, ptr %1381, align 4, !tbaa !5
  %1384 = add nsw i32 %1383, %1382
  store i32 %1384, ptr %1381, align 4, !tbaa !5
  br label %1385

1385:                                             ; preds = %1372, %1380, %1345, %1323
  %1386 = icmp eq i32 %1337, %5
  br i1 %1386, label %5401, label %1251, !llvm.loop !1348

1387:                                             ; preds = %1234, %1522
  %1388 = phi i32 [ 0, %1234 ], [ %1471, %1522 ]
  %1389 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1235, label %1390, label %1459

1390:                                             ; preds = %1387, %1449
  %1391 = phi i32 [ %1458, %1449 ], [ 0, %1387 ]
  %1392 = phi i64 [ %1400, %1449 ], [ %1239, %1387 ]
  %1393 = phi i64 [ %1457, %1449 ], [ %1238, %1387 ]
  %1394 = phi i32 [ %1455, %1449 ], [ %1389, %1387 ]
  %1395 = sub i32 %1237, %1391
  %1396 = tail call i32 @llvm.smin.i32(i32 %1395, i32 0)
  %1397 = sub i32 %1395, %1396
  %1398 = zext i32 %1397 to i64
  %1399 = add nuw nsw i64 %1398, 1
  %1400 = add nsw i64 %1392, -1
  %1401 = icmp ult i32 %1397, 31
  br i1 %1401, label %1437, label %1402

1402:                                             ; preds = %1390
  %1403 = and i64 %1399, 8589934560
  %1404 = sub i64 %1393, %1403
  br label %1405

1405:                                             ; preds = %1405, %1402
  %1406 = phi i64 [ 0, %1402 ], [ %1429, %1405 ]
  %1407 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1425, %1405 ]
  %1408 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1426, %1405 ]
  %1409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1427, %1405 ]
  %1410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1402 ], [ %1428, %1405 ]
  %1411 = sub i64 %1393, %1406
  %1412 = getelementptr inbounds i32, ptr %11, i64 %1411
  %1413 = getelementptr inbounds i32, ptr %1412, i64 -7
  %1414 = load <8 x i32>, ptr %1413, align 4, !tbaa !5
  %1415 = shufflevector <8 x i32> %1414, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1416 = getelementptr inbounds i32, ptr %1412, i64 -15
  %1417 = load <8 x i32>, ptr %1416, align 4, !tbaa !5
  %1418 = shufflevector <8 x i32> %1417, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1419 = getelementptr inbounds i32, ptr %1412, i64 -23
  %1420 = load <8 x i32>, ptr %1419, align 4, !tbaa !5
  %1421 = shufflevector <8 x i32> %1420, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1422 = getelementptr inbounds i32, ptr %1412, i64 -31
  %1423 = load <8 x i32>, ptr %1422, align 4, !tbaa !5
  %1424 = shufflevector <8 x i32> %1423, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1425 = mul <8 x i32> %1415, %1407
  %1426 = mul <8 x i32> %1418, %1408
  %1427 = mul <8 x i32> %1421, %1409
  %1428 = mul <8 x i32> %1424, %1410
  %1429 = add nuw i64 %1406, 32
  %1430 = icmp eq i64 %1429, %1403
  br i1 %1430, label %1431, label %1405, !llvm.loop !1349

1431:                                             ; preds = %1405
  %1432 = mul <8 x i32> %1426, %1425
  %1433 = mul <8 x i32> %1427, %1432
  %1434 = mul <8 x i32> %1428, %1433
  %1435 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1434)
  %1436 = icmp eq i64 %1399, %1403
  br i1 %1436, label %1449, label %1437

1437:                                             ; preds = %1390, %1431
  %1438 = phi i64 [ %1393, %1390 ], [ %1404, %1431 ]
  %1439 = phi i32 [ 1, %1390 ], [ %1435, %1431 ]
  br label %1440

1440:                                             ; preds = %1437, %1440
  %1441 = phi i64 [ %1446, %1440 ], [ %1438, %1437 ]
  %1442 = phi i32 [ %1445, %1440 ], [ %1439, %1437 ]
  %1443 = getelementptr inbounds i32, ptr %11, i64 %1441
  %1444 = load i32, ptr %1443, align 4, !tbaa !5
  %1445 = mul nsw i32 %1444, %1442
  %1446 = add nsw i64 %1441, -1
  %1447 = trunc i64 %1441 to i32
  %1448 = icmp sgt i32 %1447, 0
  br i1 %1448, label %1440, label %1449, !llvm.loop !1350

1449:                                             ; preds = %1440, %1431
  %1450 = phi i32 [ %1435, %1431 ], [ %1445, %1440 ]
  %1451 = and i64 %1400, 4294967295
  %1452 = getelementptr inbounds i32, ptr %6, i64 %1451
  %1453 = load i32, ptr %1452, align 4, !tbaa !5
  %1454 = mul nsw i32 %1453, %1450
  %1455 = add nsw i32 %1454, %1394
  %1456 = icmp sgt i64 %1392, 2
  %1457 = add nsw i64 %1393, -1
  %1458 = add i32 %1391, 1
  br i1 %1456, label %1390, label %1459, !llvm.loop !1351

1459:                                             ; preds = %1449, %1387
  %1460 = phi i32 [ %1389, %1387 ], [ %1455, %1449 ]
  %1461 = icmp slt i32 %1460, %5
  br i1 %1461, label %1464, label %1462

1462:                                             ; preds = %1459
  %1463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

1464:                                             ; preds = %1459
  %1465 = sext i32 %1460 to i64
  %1466 = getelementptr inbounds double, ptr %1220, i64 %1465
  %1467 = load double, ptr %1466, align 8, !tbaa !18
  %1468 = fptosi double %1467 to i8
  %1469 = load i8, ptr %1222, align 1, !tbaa !11
  %1470 = add i8 %1469, %1468
  store i8 %1470, ptr %1222, align 1, !tbaa !11
  %1471 = add nuw nsw i32 %1388, 1
  br i1 %1236, label %1472, label %1522

1472:                                             ; preds = %1464
  %1473 = load i32, ptr %4, align 4, !tbaa !5
  %1474 = load i32, ptr %12, align 4, !tbaa !5
  %1475 = add nsw i32 %1474, -1
  %1476 = icmp slt i32 %1473, %1475
  br i1 %1476, label %1499, label %1477

1477:                                             ; preds = %1472
  %1478 = icmp eq i32 %1473, %1475
  br i1 %1478, label %1479, label %1515

1479:                                             ; preds = %1477
  store i32 0, ptr %4, align 4, !tbaa !5
  %1480 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1480, ptr %6, align 4, !tbaa !5
  br i1 %1241, label %1522, label %1481

1481:                                             ; preds = %1479, %1509
  %1482 = phi i64 [ %1513, %1509 ], [ 1, %1479 ]
  %1483 = getelementptr inbounds i32, ptr %4, i64 %1482
  %1484 = load i32, ptr %1483, align 4, !tbaa !5
  %1485 = getelementptr inbounds i32, ptr %12, i64 %1482
  %1486 = load i32, ptr %1485, align 4, !tbaa !5
  %1487 = add nsw i32 %1486, -1
  %1488 = icmp slt i32 %1484, %1487
  br i1 %1488, label %1489, label %1507

1489:                                             ; preds = %1481
  br i1 %1476, label %1499, label %1490

1490:                                             ; preds = %1489
  %1491 = shl i64 %1482, 32
  %1492 = add i64 %1491, -4294967296
  %1493 = ashr exact i64 %1492, 32
  %1494 = getelementptr inbounds i32, ptr %7, i64 %1493
  %1495 = load i32, ptr %1494, align 4, !tbaa !5
  %1496 = getelementptr inbounds i32, ptr %6, i64 %1482
  %1497 = load i32, ptr %1496, align 4, !tbaa !5
  %1498 = add nsw i32 %1497, %1495
  store i32 %1498, ptr %1496, align 4, !tbaa !5
  br label %1517

1499:                                             ; preds = %1472, %1489
  %1500 = phi i32 [ %1484, %1489 ], [ %1473, %1472 ]
  %1501 = phi ptr [ %1483, %1489 ], [ %4, %1472 ]
  %1502 = phi i64 [ %1482, %1489 ], [ 0, %1472 ]
  %1503 = add nsw i32 %1500, 1
  store i32 %1503, ptr %1501, align 4, !tbaa !5
  %1504 = getelementptr inbounds i32, ptr %7, i64 %1502
  %1505 = load i32, ptr %1504, align 4, !tbaa !5
  %1506 = getelementptr inbounds i32, ptr %6, i64 %1502
  br label %1517

1507:                                             ; preds = %1481
  %1508 = icmp eq i32 %1484, %1487
  br i1 %1508, label %1509, label %1515

1509:                                             ; preds = %1507
  store i32 0, ptr %1483, align 4, !tbaa !5
  %1510 = getelementptr inbounds i32, ptr %8, i64 %1482
  %1511 = load i32, ptr %1510, align 4, !tbaa !5
  %1512 = getelementptr inbounds i32, ptr %6, i64 %1482
  store i32 %1511, ptr %1512, align 4, !tbaa !5
  %1513 = add nuw nsw i64 %1482, 1
  %1514 = icmp eq i64 %1513, %1239
  br i1 %1514, label %1522, label %1481, !llvm.loop !1352

1515:                                             ; preds = %1477, %1507
  %1516 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1517:                                             ; preds = %1490, %1499
  %1518 = phi ptr [ %1506, %1499 ], [ %1483, %1490 ]
  %1519 = phi i32 [ %1505, %1499 ], [ 1, %1490 ]
  %1520 = load i32, ptr %1518, align 4, !tbaa !5
  %1521 = add nsw i32 %1520, %1519
  store i32 %1521, ptr %1518, align 4, !tbaa !5
  br label %1522

1522:                                             ; preds = %1509, %1517, %1479, %1464
  %1523 = icmp eq i32 %1471, %5
  br i1 %1523, label %5401, label %1387, !llvm.loop !1353

1524:                                             ; preds = %1227
  %1525 = getelementptr inbounds i32, ptr %3, i64 %19
  %1526 = load i32, ptr %1525, align 4, !tbaa !5
  %1527 = icmp eq i32 %1526, 0
  %1528 = icmp sgt i32 %5, 0
  br i1 %1527, label %1538, label %1529

1529:                                             ; preds = %1524
  br i1 %1528, label %1530, label %5401

1530:                                             ; preds = %1529
  %1531 = icmp sgt i32 %13, 1
  %1532 = icmp sgt i32 %13, 0
  %1533 = add i32 %13, -2
  %1534 = zext i32 %1533 to i64
  %1535 = zext i32 %13 to i64
  %1536 = add nuw i32 %5, 1
  %1537 = icmp eq i32 %13, 1
  br label %1677

1538:                                             ; preds = %1524
  br i1 %1528, label %1539, label %5401

1539:                                             ; preds = %1538
  %1540 = icmp sgt i32 %13, 1
  %1541 = icmp sgt i32 %13, 0
  %1542 = add i32 %13, -2
  %1543 = zext i32 %1542 to i64
  %1544 = zext i32 %13 to i64
  %1545 = add nuw i32 %5, 1
  %1546 = icmp eq i32 %13, 1
  br label %1547

1547:                                             ; preds = %1539, %1675
  %1548 = phi i32 [ 0, %1539 ], [ %1627, %1675 ]
  %1549 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1540, label %1550, label %1619

1550:                                             ; preds = %1547, %1609
  %1551 = phi i32 [ %1618, %1609 ], [ 0, %1547 ]
  %1552 = phi i64 [ %1560, %1609 ], [ %1544, %1547 ]
  %1553 = phi i64 [ %1617, %1609 ], [ %1543, %1547 ]
  %1554 = phi i32 [ %1615, %1609 ], [ %1549, %1547 ]
  %1555 = sub i32 %1542, %1551
  %1556 = tail call i32 @llvm.smin.i32(i32 %1555, i32 0)
  %1557 = sub i32 %1555, %1556
  %1558 = zext i32 %1557 to i64
  %1559 = add nuw nsw i64 %1558, 1
  %1560 = add nsw i64 %1552, -1
  %1561 = icmp ult i32 %1557, 31
  br i1 %1561, label %1597, label %1562

1562:                                             ; preds = %1550
  %1563 = and i64 %1559, 8589934560
  %1564 = sub i64 %1553, %1563
  br label %1565

1565:                                             ; preds = %1565, %1562
  %1566 = phi i64 [ 0, %1562 ], [ %1589, %1565 ]
  %1567 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1585, %1565 ]
  %1568 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1586, %1565 ]
  %1569 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1587, %1565 ]
  %1570 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1562 ], [ %1588, %1565 ]
  %1571 = sub i64 %1553, %1566
  %1572 = getelementptr inbounds i32, ptr %9, i64 %1571
  %1573 = getelementptr inbounds i32, ptr %1572, i64 -7
  %1574 = load <8 x i32>, ptr %1573, align 4, !tbaa !5
  %1575 = shufflevector <8 x i32> %1574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1576 = getelementptr inbounds i32, ptr %1572, i64 -15
  %1577 = load <8 x i32>, ptr %1576, align 4, !tbaa !5
  %1578 = shufflevector <8 x i32> %1577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1579 = getelementptr inbounds i32, ptr %1572, i64 -23
  %1580 = load <8 x i32>, ptr %1579, align 4, !tbaa !5
  %1581 = shufflevector <8 x i32> %1580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1582 = getelementptr inbounds i32, ptr %1572, i64 -31
  %1583 = load <8 x i32>, ptr %1582, align 4, !tbaa !5
  %1584 = shufflevector <8 x i32> %1583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1585 = mul <8 x i32> %1575, %1567
  %1586 = mul <8 x i32> %1578, %1568
  %1587 = mul <8 x i32> %1581, %1569
  %1588 = mul <8 x i32> %1584, %1570
  %1589 = add nuw i64 %1566, 32
  %1590 = icmp eq i64 %1589, %1563
  br i1 %1590, label %1591, label %1565, !llvm.loop !1354

1591:                                             ; preds = %1565
  %1592 = mul <8 x i32> %1586, %1585
  %1593 = mul <8 x i32> %1587, %1592
  %1594 = mul <8 x i32> %1588, %1593
  %1595 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1594)
  %1596 = icmp eq i64 %1559, %1563
  br i1 %1596, label %1609, label %1597

1597:                                             ; preds = %1550, %1591
  %1598 = phi i64 [ %1553, %1550 ], [ %1564, %1591 ]
  %1599 = phi i32 [ 1, %1550 ], [ %1595, %1591 ]
  br label %1600

1600:                                             ; preds = %1597, %1600
  %1601 = phi i64 [ %1606, %1600 ], [ %1598, %1597 ]
  %1602 = phi i32 [ %1605, %1600 ], [ %1599, %1597 ]
  %1603 = getelementptr inbounds i32, ptr %9, i64 %1601
  %1604 = load i32, ptr %1603, align 4, !tbaa !5
  %1605 = mul nsw i32 %1604, %1602
  %1606 = add nsw i64 %1601, -1
  %1607 = trunc i64 %1601 to i32
  %1608 = icmp sgt i32 %1607, 0
  br i1 %1608, label %1600, label %1609, !llvm.loop !1355

1609:                                             ; preds = %1600, %1591
  %1610 = phi i32 [ %1595, %1591 ], [ %1605, %1600 ]
  %1611 = and i64 %1560, 4294967295
  %1612 = getelementptr inbounds i32, ptr %6, i64 %1611
  %1613 = load i32, ptr %1612, align 4, !tbaa !5
  %1614 = mul nsw i32 %1613, %1610
  %1615 = add nsw i32 %1614, %1554
  %1616 = icmp sgt i64 %1552, 2
  %1617 = add nsw i64 %1553, -1
  %1618 = add i32 %1551, 1
  br i1 %1616, label %1550, label %1619, !llvm.loop !1356

1619:                                             ; preds = %1609, %1547
  %1620 = phi i32 [ %1549, %1547 ], [ %1615, %1609 ]
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds double, ptr %1220, i64 %1621
  %1623 = load double, ptr %1622, align 8, !tbaa !18
  %1624 = fptosi double %1623 to i8
  %1625 = load i8, ptr %1222, align 1, !tbaa !11
  %1626 = add i8 %1625, %1624
  store i8 %1626, ptr %1222, align 1, !tbaa !11
  %1627 = add nuw nsw i32 %1548, 1
  br i1 %1541, label %1628, label %1675

1628:                                             ; preds = %1619
  %1629 = load i32, ptr %4, align 4, !tbaa !5
  %1630 = load i32, ptr %12, align 4, !tbaa !5
  %1631 = add nsw i32 %1630, -1
  %1632 = icmp slt i32 %1629, %1631
  br i1 %1632, label %1652, label %1633

1633:                                             ; preds = %1628
  %1634 = icmp eq i32 %1629, %1631
  br i1 %1634, label %1635, label %1668

1635:                                             ; preds = %1633
  store i32 0, ptr %4, align 4, !tbaa !5
  %1636 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1636, ptr %6, align 4, !tbaa !5
  br i1 %1546, label %1675, label %1637

1637:                                             ; preds = %1635, %1662
  %1638 = phi i64 [ %1666, %1662 ], [ 1, %1635 ]
  %1639 = getelementptr inbounds i32, ptr %4, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !5
  %1641 = getelementptr inbounds i32, ptr %12, i64 %1638
  %1642 = load i32, ptr %1641, align 4, !tbaa !5
  %1643 = add nsw i32 %1642, -1
  %1644 = icmp slt i32 %1640, %1643
  br i1 %1644, label %1645, label %1660

1645:                                             ; preds = %1637
  br i1 %1632, label %1652, label %1646

1646:                                             ; preds = %1645
  %1647 = getelementptr inbounds i32, ptr %7, i64 %1638
  %1648 = load i32, ptr %1647, align 4, !tbaa !5
  %1649 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1650 = load i32, ptr %1649, align 4, !tbaa !5
  %1651 = add nsw i32 %1650, %1648
  store i32 %1651, ptr %1649, align 4, !tbaa !5
  br label %1670

1652:                                             ; preds = %1628, %1645
  %1653 = phi i32 [ %1640, %1645 ], [ %1629, %1628 ]
  %1654 = phi ptr [ %1639, %1645 ], [ %4, %1628 ]
  %1655 = phi i64 [ %1638, %1645 ], [ 0, %1628 ]
  %1656 = add nsw i32 %1653, 1
  store i32 %1656, ptr %1654, align 4, !tbaa !5
  %1657 = getelementptr inbounds i32, ptr %7, i64 %1655
  %1658 = load i32, ptr %1657, align 4, !tbaa !5
  %1659 = getelementptr inbounds i32, ptr %6, i64 %1655
  br label %1670

1660:                                             ; preds = %1637
  %1661 = icmp eq i32 %1640, %1643
  br i1 %1661, label %1662, label %1668

1662:                                             ; preds = %1660
  store i32 0, ptr %1639, align 4, !tbaa !5
  %1663 = getelementptr inbounds i32, ptr %8, i64 %1638
  %1664 = load i32, ptr %1663, align 4, !tbaa !5
  %1665 = getelementptr inbounds i32, ptr %6, i64 %1638
  store i32 %1664, ptr %1665, align 4, !tbaa !5
  %1666 = add nuw nsw i64 %1638, 1
  %1667 = icmp eq i64 %1666, %1544
  br i1 %1667, label %1675, label %1637, !llvm.loop !1357

1668:                                             ; preds = %1633, %1660
  %1669 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1670:                                             ; preds = %1646, %1652
  %1671 = phi ptr [ %1659, %1652 ], [ %1639, %1646 ]
  %1672 = phi i32 [ %1658, %1652 ], [ 1, %1646 ]
  %1673 = load i32, ptr %1671, align 4, !tbaa !5
  %1674 = add nsw i32 %1673, %1672
  store i32 %1674, ptr %1671, align 4, !tbaa !5
  br label %1675

1675:                                             ; preds = %1662, %1670, %1635, %1619
  %1676 = icmp eq i32 %1627, %5
  br i1 %1676, label %5401, label %1547, !llvm.loop !1358

1677:                                             ; preds = %1530, %1812
  %1678 = phi i32 [ 0, %1530 ], [ %1761, %1812 ]
  %1679 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1531, label %1680, label %1749

1680:                                             ; preds = %1677, %1739
  %1681 = phi i32 [ %1748, %1739 ], [ 0, %1677 ]
  %1682 = phi i64 [ %1690, %1739 ], [ %1535, %1677 ]
  %1683 = phi i64 [ %1747, %1739 ], [ %1534, %1677 ]
  %1684 = phi i32 [ %1745, %1739 ], [ %1679, %1677 ]
  %1685 = sub i32 %1533, %1681
  %1686 = tail call i32 @llvm.smin.i32(i32 %1685, i32 0)
  %1687 = sub i32 %1685, %1686
  %1688 = zext i32 %1687 to i64
  %1689 = add nuw nsw i64 %1688, 1
  %1690 = add nsw i64 %1682, -1
  %1691 = icmp ult i32 %1687, 31
  br i1 %1691, label %1727, label %1692

1692:                                             ; preds = %1680
  %1693 = and i64 %1689, 8589934560
  %1694 = sub i64 %1683, %1693
  br label %1695

1695:                                             ; preds = %1695, %1692
  %1696 = phi i64 [ 0, %1692 ], [ %1719, %1695 ]
  %1697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1715, %1695 ]
  %1698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1716, %1695 ]
  %1699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1717, %1695 ]
  %1700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1692 ], [ %1718, %1695 ]
  %1701 = sub i64 %1683, %1696
  %1702 = getelementptr inbounds i32, ptr %11, i64 %1701
  %1703 = getelementptr inbounds i32, ptr %1702, i64 -7
  %1704 = load <8 x i32>, ptr %1703, align 4, !tbaa !5
  %1705 = shufflevector <8 x i32> %1704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1706 = getelementptr inbounds i32, ptr %1702, i64 -15
  %1707 = load <8 x i32>, ptr %1706, align 4, !tbaa !5
  %1708 = shufflevector <8 x i32> %1707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1709 = getelementptr inbounds i32, ptr %1702, i64 -23
  %1710 = load <8 x i32>, ptr %1709, align 4, !tbaa !5
  %1711 = shufflevector <8 x i32> %1710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1712 = getelementptr inbounds i32, ptr %1702, i64 -31
  %1713 = load <8 x i32>, ptr %1712, align 4, !tbaa !5
  %1714 = shufflevector <8 x i32> %1713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1715 = mul <8 x i32> %1705, %1697
  %1716 = mul <8 x i32> %1708, %1698
  %1717 = mul <8 x i32> %1711, %1699
  %1718 = mul <8 x i32> %1714, %1700
  %1719 = add nuw i64 %1696, 32
  %1720 = icmp eq i64 %1719, %1693
  br i1 %1720, label %1721, label %1695, !llvm.loop !1359

1721:                                             ; preds = %1695
  %1722 = mul <8 x i32> %1716, %1715
  %1723 = mul <8 x i32> %1717, %1722
  %1724 = mul <8 x i32> %1718, %1723
  %1725 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1724)
  %1726 = icmp eq i64 %1689, %1693
  br i1 %1726, label %1739, label %1727

1727:                                             ; preds = %1680, %1721
  %1728 = phi i64 [ %1683, %1680 ], [ %1694, %1721 ]
  %1729 = phi i32 [ 1, %1680 ], [ %1725, %1721 ]
  br label %1730

1730:                                             ; preds = %1727, %1730
  %1731 = phi i64 [ %1736, %1730 ], [ %1728, %1727 ]
  %1732 = phi i32 [ %1735, %1730 ], [ %1729, %1727 ]
  %1733 = getelementptr inbounds i32, ptr %11, i64 %1731
  %1734 = load i32, ptr %1733, align 4, !tbaa !5
  %1735 = mul nsw i32 %1734, %1732
  %1736 = add nsw i64 %1731, -1
  %1737 = trunc i64 %1731 to i32
  %1738 = icmp sgt i32 %1737, 0
  br i1 %1738, label %1730, label %1739, !llvm.loop !1360

1739:                                             ; preds = %1730, %1721
  %1740 = phi i32 [ %1725, %1721 ], [ %1735, %1730 ]
  %1741 = and i64 %1690, 4294967295
  %1742 = getelementptr inbounds i32, ptr %6, i64 %1741
  %1743 = load i32, ptr %1742, align 4, !tbaa !5
  %1744 = mul nsw i32 %1743, %1740
  %1745 = add nsw i32 %1744, %1684
  %1746 = icmp sgt i64 %1682, 2
  %1747 = add nsw i64 %1683, -1
  %1748 = add i32 %1681, 1
  br i1 %1746, label %1680, label %1749, !llvm.loop !1361

1749:                                             ; preds = %1739, %1677
  %1750 = phi i32 [ %1679, %1677 ], [ %1745, %1739 ]
  %1751 = icmp slt i32 %1750, %5
  br i1 %1751, label %1754, label %1752

1752:                                             ; preds = %1749
  %1753 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

1754:                                             ; preds = %1749
  %1755 = sext i32 %1750 to i64
  %1756 = getelementptr inbounds double, ptr %1220, i64 %1755
  %1757 = load double, ptr %1756, align 8, !tbaa !18
  %1758 = fptosi double %1757 to i8
  %1759 = load i8, ptr %1222, align 1, !tbaa !11
  %1760 = add i8 %1759, %1758
  store i8 %1760, ptr %1222, align 1, !tbaa !11
  %1761 = add nuw nsw i32 %1678, 1
  br i1 %1532, label %1762, label %1812

1762:                                             ; preds = %1754
  %1763 = load i32, ptr %4, align 4, !tbaa !5
  %1764 = load i32, ptr %12, align 4, !tbaa !5
  %1765 = add nsw i32 %1764, -1
  %1766 = icmp slt i32 %1763, %1765
  br i1 %1766, label %1789, label %1767

1767:                                             ; preds = %1762
  %1768 = icmp eq i32 %1763, %1765
  br i1 %1768, label %1769, label %1805

1769:                                             ; preds = %1767
  store i32 0, ptr %4, align 4, !tbaa !5
  %1770 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1770, ptr %6, align 4, !tbaa !5
  br i1 %1537, label %1812, label %1771

1771:                                             ; preds = %1769, %1799
  %1772 = phi i64 [ %1803, %1799 ], [ 1, %1769 ]
  %1773 = getelementptr inbounds i32, ptr %4, i64 %1772
  %1774 = load i32, ptr %1773, align 4, !tbaa !5
  %1775 = getelementptr inbounds i32, ptr %12, i64 %1772
  %1776 = load i32, ptr %1775, align 4, !tbaa !5
  %1777 = add nsw i32 %1776, -1
  %1778 = icmp slt i32 %1774, %1777
  br i1 %1778, label %1779, label %1797

1779:                                             ; preds = %1771
  br i1 %1766, label %1789, label %1780

1780:                                             ; preds = %1779
  %1781 = shl i64 %1772, 32
  %1782 = add i64 %1781, -4294967296
  %1783 = ashr exact i64 %1782, 32
  %1784 = getelementptr inbounds i32, ptr %7, i64 %1783
  %1785 = load i32, ptr %1784, align 4, !tbaa !5
  %1786 = getelementptr inbounds i32, ptr %6, i64 %1772
  %1787 = load i32, ptr %1786, align 4, !tbaa !5
  %1788 = add nsw i32 %1787, %1785
  store i32 %1788, ptr %1786, align 4, !tbaa !5
  br label %1807

1789:                                             ; preds = %1762, %1779
  %1790 = phi i32 [ %1774, %1779 ], [ %1763, %1762 ]
  %1791 = phi ptr [ %1773, %1779 ], [ %4, %1762 ]
  %1792 = phi i64 [ %1772, %1779 ], [ 0, %1762 ]
  %1793 = add nsw i32 %1790, 1
  store i32 %1793, ptr %1791, align 4, !tbaa !5
  %1794 = getelementptr inbounds i32, ptr %7, i64 %1792
  %1795 = load i32, ptr %1794, align 4, !tbaa !5
  %1796 = getelementptr inbounds i32, ptr %6, i64 %1792
  br label %1807

1797:                                             ; preds = %1771
  %1798 = icmp eq i32 %1774, %1777
  br i1 %1798, label %1799, label %1805

1799:                                             ; preds = %1797
  store i32 0, ptr %1773, align 4, !tbaa !5
  %1800 = getelementptr inbounds i32, ptr %8, i64 %1772
  %1801 = load i32, ptr %1800, align 4, !tbaa !5
  %1802 = getelementptr inbounds i32, ptr %6, i64 %1772
  store i32 %1801, ptr %1802, align 4, !tbaa !5
  %1803 = add nuw nsw i64 %1772, 1
  %1804 = icmp eq i64 %1803, %1535
  br i1 %1804, label %1812, label %1771, !llvm.loop !1362

1805:                                             ; preds = %1767, %1797
  %1806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1807:                                             ; preds = %1780, %1789
  %1808 = phi ptr [ %1796, %1789 ], [ %1773, %1780 ]
  %1809 = phi i32 [ %1795, %1789 ], [ 1, %1780 ]
  %1810 = load i32, ptr %1808, align 4, !tbaa !5
  %1811 = add nsw i32 %1810, %1809
  store i32 %1811, ptr %1808, align 4, !tbaa !5
  br label %1812

1812:                                             ; preds = %1799, %1807, %1769, %1754
  %1813 = icmp eq i32 %1761, %5
  br i1 %1813, label %5401, label %1677, !llvm.loop !1363

1814:                                             ; preds = %1227
  %1815 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1966, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

1816:                                             ; preds = %18
  %1817 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1818 = load ptr, ptr %1817, align 8, !tbaa !9
  %1819 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1820 = load ptr, ptr %1819, align 8, !tbaa !9
  store i16 0, ptr %1820, align 2, !tbaa !78
  %1821 = icmp eq i32 %13, 0
  br i1 %1821, label %1822, label %1825

1822:                                             ; preds = %1816
  %1823 = load double, ptr %1818, align 8, !tbaa !18
  %1824 = fptosi double %1823 to i16
  store i16 %1824, ptr %1820, align 2, !tbaa !78
  br label %5401

1825:                                             ; preds = %1816
  switch i32 %1, label %2416 [
    i32 1, label %1826
    i32 0, label %2126
  ]

1826:                                             ; preds = %1825
  %1827 = getelementptr inbounds i32, ptr %3, i64 %19
  %1828 = load i32, ptr %1827, align 4, !tbaa !5
  %1829 = icmp eq i32 %1828, 0
  %1830 = icmp sgt i32 %5, 0
  br i1 %1829, label %1840, label %1831

1831:                                             ; preds = %1826
  br i1 %1830, label %1832, label %5401

1832:                                             ; preds = %1831
  %1833 = icmp sgt i32 %13, 1
  %1834 = icmp sgt i32 %13, 0
  %1835 = add i32 %13, -2
  %1836 = zext i32 %1835 to i64
  %1837 = zext i32 %13 to i64
  %1838 = add nuw i32 %5, 1
  %1839 = icmp eq i32 %13, 1
  br label %1985

1840:                                             ; preds = %1826
  br i1 %1830, label %1841, label %5401

1841:                                             ; preds = %1840
  %1842 = icmp sgt i32 %13, 1
  %1843 = icmp sgt i32 %13, 0
  %1844 = add i32 %13, -2
  %1845 = zext i32 %1844 to i64
  %1846 = zext i32 %13 to i64
  %1847 = add nuw i32 %5, 1
  %1848 = icmp eq i32 %13, 1
  br label %1849

1849:                                             ; preds = %1841, %1983
  %1850 = phi i16 [ 0, %1841 ], [ %1934, %1983 ]
  %1851 = phi i32 [ 0, %1841 ], [ %1935, %1983 ]
  %1852 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1842, label %1853, label %1922

1853:                                             ; preds = %1849, %1912
  %1854 = phi i32 [ %1921, %1912 ], [ 0, %1849 ]
  %1855 = phi i64 [ %1863, %1912 ], [ %1846, %1849 ]
  %1856 = phi i64 [ %1920, %1912 ], [ %1845, %1849 ]
  %1857 = phi i32 [ %1918, %1912 ], [ %1852, %1849 ]
  %1858 = sub i32 %1844, %1854
  %1859 = tail call i32 @llvm.smin.i32(i32 %1858, i32 0)
  %1860 = sub i32 %1858, %1859
  %1861 = zext i32 %1860 to i64
  %1862 = add nuw nsw i64 %1861, 1
  %1863 = add nsw i64 %1855, -1
  %1864 = icmp ult i32 %1860, 31
  br i1 %1864, label %1900, label %1865

1865:                                             ; preds = %1853
  %1866 = and i64 %1862, 8589934560
  %1867 = sub i64 %1856, %1866
  br label %1868

1868:                                             ; preds = %1868, %1865
  %1869 = phi i64 [ 0, %1865 ], [ %1892, %1868 ]
  %1870 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1888, %1868 ]
  %1871 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1889, %1868 ]
  %1872 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1890, %1868 ]
  %1873 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1865 ], [ %1891, %1868 ]
  %1874 = sub i64 %1856, %1869
  %1875 = getelementptr inbounds i32, ptr %9, i64 %1874
  %1876 = getelementptr inbounds i32, ptr %1875, i64 -7
  %1877 = load <8 x i32>, ptr %1876, align 4, !tbaa !5
  %1878 = shufflevector <8 x i32> %1877, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1879 = getelementptr inbounds i32, ptr %1875, i64 -15
  %1880 = load <8 x i32>, ptr %1879, align 4, !tbaa !5
  %1881 = shufflevector <8 x i32> %1880, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1882 = getelementptr inbounds i32, ptr %1875, i64 -23
  %1883 = load <8 x i32>, ptr %1882, align 4, !tbaa !5
  %1884 = shufflevector <8 x i32> %1883, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1885 = getelementptr inbounds i32, ptr %1875, i64 -31
  %1886 = load <8 x i32>, ptr %1885, align 4, !tbaa !5
  %1887 = shufflevector <8 x i32> %1886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1888 = mul <8 x i32> %1878, %1870
  %1889 = mul <8 x i32> %1881, %1871
  %1890 = mul <8 x i32> %1884, %1872
  %1891 = mul <8 x i32> %1887, %1873
  %1892 = add nuw i64 %1869, 32
  %1893 = icmp eq i64 %1892, %1866
  br i1 %1893, label %1894, label %1868, !llvm.loop !1364

1894:                                             ; preds = %1868
  %1895 = mul <8 x i32> %1889, %1888
  %1896 = mul <8 x i32> %1890, %1895
  %1897 = mul <8 x i32> %1891, %1896
  %1898 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1897)
  %1899 = icmp eq i64 %1862, %1866
  br i1 %1899, label %1912, label %1900

1900:                                             ; preds = %1853, %1894
  %1901 = phi i64 [ %1856, %1853 ], [ %1867, %1894 ]
  %1902 = phi i32 [ 1, %1853 ], [ %1898, %1894 ]
  br label %1903

1903:                                             ; preds = %1900, %1903
  %1904 = phi i64 [ %1909, %1903 ], [ %1901, %1900 ]
  %1905 = phi i32 [ %1908, %1903 ], [ %1902, %1900 ]
  %1906 = getelementptr inbounds i32, ptr %9, i64 %1904
  %1907 = load i32, ptr %1906, align 4, !tbaa !5
  %1908 = mul nsw i32 %1907, %1905
  %1909 = add nsw i64 %1904, -1
  %1910 = trunc i64 %1904 to i32
  %1911 = icmp sgt i32 %1910, 0
  br i1 %1911, label %1903, label %1912, !llvm.loop !1365

1912:                                             ; preds = %1903, %1894
  %1913 = phi i32 [ %1898, %1894 ], [ %1908, %1903 ]
  %1914 = and i64 %1863, 4294967295
  %1915 = getelementptr inbounds i32, ptr %6, i64 %1914
  %1916 = load i32, ptr %1915, align 4, !tbaa !5
  %1917 = mul nsw i32 %1916, %1913
  %1918 = add nsw i32 %1917, %1857
  %1919 = icmp sgt i64 %1855, 2
  %1920 = add nsw i64 %1856, -1
  %1921 = add i32 %1854, 1
  br i1 %1919, label %1853, label %1922, !llvm.loop !1366

1922:                                             ; preds = %1912, %1849
  %1923 = phi i32 [ %1852, %1849 ], [ %1918, %1912 ]
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr inbounds double, ptr %2, i64 %1924
  %1926 = load double, ptr %1925, align 8, !tbaa !18
  %1927 = getelementptr inbounds double, ptr %1818, i64 %1924
  %1928 = load double, ptr %1927, align 8, !tbaa !18
  %1929 = fptosi double %1928 to i16
  %1930 = sitofp i16 %1850 to double
  %1931 = sitofp i16 %1929 to double
  %1932 = fmul fast double %1926, %1931
  %1933 = fadd fast double %1932, %1930
  %1934 = fptosi double %1933 to i16
  %1935 = add nuw nsw i32 %1851, 1
  br i1 %1843, label %1936, label %1983

1936:                                             ; preds = %1922
  %1937 = load i32, ptr %4, align 4, !tbaa !5
  %1938 = load i32, ptr %12, align 4, !tbaa !5
  %1939 = add nsw i32 %1938, -1
  %1940 = icmp slt i32 %1937, %1939
  br i1 %1940, label %1960, label %1941

1941:                                             ; preds = %1936
  %1942 = icmp eq i32 %1937, %1939
  br i1 %1942, label %1943, label %1976

1943:                                             ; preds = %1941
  store i32 0, ptr %4, align 4, !tbaa !5
  %1944 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %1944, ptr %6, align 4, !tbaa !5
  br i1 %1848, label %1983, label %1945

1945:                                             ; preds = %1943, %1970
  %1946 = phi i64 [ %1974, %1970 ], [ 1, %1943 ]
  %1947 = getelementptr inbounds i32, ptr %4, i64 %1946
  %1948 = load i32, ptr %1947, align 4, !tbaa !5
  %1949 = getelementptr inbounds i32, ptr %12, i64 %1946
  %1950 = load i32, ptr %1949, align 4, !tbaa !5
  %1951 = add nsw i32 %1950, -1
  %1952 = icmp slt i32 %1948, %1951
  br i1 %1952, label %1953, label %1968

1953:                                             ; preds = %1945
  br i1 %1940, label %1960, label %1954

1954:                                             ; preds = %1953
  %1955 = getelementptr inbounds i32, ptr %7, i64 %1946
  %1956 = load i32, ptr %1955, align 4, !tbaa !5
  %1957 = getelementptr inbounds i32, ptr %6, i64 %1946
  %1958 = load i32, ptr %1957, align 4, !tbaa !5
  %1959 = add nsw i32 %1958, %1956
  store i32 %1959, ptr %1957, align 4, !tbaa !5
  br label %1978

1960:                                             ; preds = %1936, %1953
  %1961 = phi i32 [ %1948, %1953 ], [ %1937, %1936 ]
  %1962 = phi ptr [ %1947, %1953 ], [ %4, %1936 ]
  %1963 = phi i64 [ %1946, %1953 ], [ 0, %1936 ]
  %1964 = add nsw i32 %1961, 1
  store i32 %1964, ptr %1962, align 4, !tbaa !5
  %1965 = getelementptr inbounds i32, ptr %7, i64 %1963
  %1966 = load i32, ptr %1965, align 4, !tbaa !5
  %1967 = getelementptr inbounds i32, ptr %6, i64 %1963
  br label %1978

1968:                                             ; preds = %1945
  %1969 = icmp eq i32 %1948, %1951
  br i1 %1969, label %1970, label %1976

1970:                                             ; preds = %1968
  store i32 0, ptr %1947, align 4, !tbaa !5
  %1971 = getelementptr inbounds i32, ptr %8, i64 %1946
  %1972 = load i32, ptr %1971, align 4, !tbaa !5
  %1973 = getelementptr inbounds i32, ptr %6, i64 %1946
  store i32 %1972, ptr %1973, align 4, !tbaa !5
  %1974 = add nuw nsw i64 %1946, 1
  %1975 = icmp eq i64 %1974, %1846
  br i1 %1975, label %1983, label %1945, !llvm.loop !1367

1976:                                             ; preds = %1941, %1968
  store i16 %1934, ptr %1820, align 2, !tbaa !78
  %1977 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

1978:                                             ; preds = %1954, %1960
  %1979 = phi ptr [ %1967, %1960 ], [ %1947, %1954 ]
  %1980 = phi i32 [ %1966, %1960 ], [ 1, %1954 ]
  %1981 = load i32, ptr %1979, align 4, !tbaa !5
  %1982 = add nsw i32 %1981, %1980
  store i32 %1982, ptr %1979, align 4, !tbaa !5
  br label %1983

1983:                                             ; preds = %1970, %1978, %1943, %1922
  %1984 = icmp eq i32 %1935, %5
  br i1 %1984, label %5395, label %1849, !llvm.loop !1368

1985:                                             ; preds = %1832, %2124
  %1986 = phi i32 [ 0, %1832 ], [ %2071, %2124 ]
  %1987 = phi i32 [ 0, %1832 ], [ %2073, %2124 ]
  %1988 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %1833, label %1989, label %2058

1989:                                             ; preds = %1985, %2048
  %1990 = phi i32 [ %2057, %2048 ], [ 0, %1985 ]
  %1991 = phi i64 [ %1999, %2048 ], [ %1837, %1985 ]
  %1992 = phi i64 [ %2056, %2048 ], [ %1836, %1985 ]
  %1993 = phi i32 [ %2054, %2048 ], [ %1988, %1985 ]
  %1994 = sub i32 %1835, %1990
  %1995 = tail call i32 @llvm.smin.i32(i32 %1994, i32 0)
  %1996 = sub i32 %1994, %1995
  %1997 = zext i32 %1996 to i64
  %1998 = add nuw nsw i64 %1997, 1
  %1999 = add nsw i64 %1991, -1
  %2000 = icmp ult i32 %1996, 31
  br i1 %2000, label %2036, label %2001

2001:                                             ; preds = %1989
  %2002 = and i64 %1998, 8589934560
  %2003 = sub i64 %1992, %2002
  br label %2004

2004:                                             ; preds = %2004, %2001
  %2005 = phi i64 [ 0, %2001 ], [ %2028, %2004 ]
  %2006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2024, %2004 ]
  %2007 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2025, %2004 ]
  %2008 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2026, %2004 ]
  %2009 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2001 ], [ %2027, %2004 ]
  %2010 = sub i64 %1992, %2005
  %2011 = getelementptr inbounds i32, ptr %11, i64 %2010
  %2012 = getelementptr inbounds i32, ptr %2011, i64 -7
  %2013 = load <8 x i32>, ptr %2012, align 4, !tbaa !5
  %2014 = shufflevector <8 x i32> %2013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2015 = getelementptr inbounds i32, ptr %2011, i64 -15
  %2016 = load <8 x i32>, ptr %2015, align 4, !tbaa !5
  %2017 = shufflevector <8 x i32> %2016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2018 = getelementptr inbounds i32, ptr %2011, i64 -23
  %2019 = load <8 x i32>, ptr %2018, align 4, !tbaa !5
  %2020 = shufflevector <8 x i32> %2019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2021 = getelementptr inbounds i32, ptr %2011, i64 -31
  %2022 = load <8 x i32>, ptr %2021, align 4, !tbaa !5
  %2023 = shufflevector <8 x i32> %2022, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2024 = mul <8 x i32> %2014, %2006
  %2025 = mul <8 x i32> %2017, %2007
  %2026 = mul <8 x i32> %2020, %2008
  %2027 = mul <8 x i32> %2023, %2009
  %2028 = add nuw i64 %2005, 32
  %2029 = icmp eq i64 %2028, %2002
  br i1 %2029, label %2030, label %2004, !llvm.loop !1369

2030:                                             ; preds = %2004
  %2031 = mul <8 x i32> %2025, %2024
  %2032 = mul <8 x i32> %2026, %2031
  %2033 = mul <8 x i32> %2027, %2032
  %2034 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2033)
  %2035 = icmp eq i64 %1998, %2002
  br i1 %2035, label %2048, label %2036

2036:                                             ; preds = %1989, %2030
  %2037 = phi i64 [ %1992, %1989 ], [ %2003, %2030 ]
  %2038 = phi i32 [ 1, %1989 ], [ %2034, %2030 ]
  br label %2039

2039:                                             ; preds = %2036, %2039
  %2040 = phi i64 [ %2045, %2039 ], [ %2037, %2036 ]
  %2041 = phi i32 [ %2044, %2039 ], [ %2038, %2036 ]
  %2042 = getelementptr inbounds i32, ptr %11, i64 %2040
  %2043 = load i32, ptr %2042, align 4, !tbaa !5
  %2044 = mul nsw i32 %2043, %2041
  %2045 = add nsw i64 %2040, -1
  %2046 = trunc i64 %2040 to i32
  %2047 = icmp sgt i32 %2046, 0
  br i1 %2047, label %2039, label %2048, !llvm.loop !1370

2048:                                             ; preds = %2039, %2030
  %2049 = phi i32 [ %2034, %2030 ], [ %2044, %2039 ]
  %2050 = and i64 %1999, 4294967295
  %2051 = getelementptr inbounds i32, ptr %6, i64 %2050
  %2052 = load i32, ptr %2051, align 4, !tbaa !5
  %2053 = mul nsw i32 %2052, %2049
  %2054 = add nsw i32 %2053, %1993
  %2055 = icmp sgt i64 %1991, 2
  %2056 = add nsw i64 %1992, -1
  %2057 = add i32 %1990, 1
  br i1 %2055, label %1989, label %2058, !llvm.loop !1371

2058:                                             ; preds = %2048, %1985
  %2059 = phi i32 [ %1988, %1985 ], [ %2054, %2048 ]
  %2060 = icmp slt i32 %2059, %5
  br i1 %2060, label %2063, label %2061

2061:                                             ; preds = %2058
  %2062 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2063:                                             ; preds = %2058
  %2064 = sext i32 %2059 to i64
  %2065 = getelementptr inbounds double, ptr %1818, i64 %2064
  %2066 = load double, ptr %2065, align 8, !tbaa !18
  %2067 = fptosi double %2066 to i16
  %2068 = shl i32 %1986, 16
  %2069 = ashr exact i32 %2068, 16
  %2070 = sext i16 %2067 to i32
  %2071 = add nsw i32 %2069, %2070
  %2072 = trunc i32 %2071 to i16
  store i16 %2072, ptr %1820, align 2, !tbaa !78
  %2073 = add nuw nsw i32 %1987, 1
  br i1 %1834, label %2074, label %2124

2074:                                             ; preds = %2063
  %2075 = load i32, ptr %4, align 4, !tbaa !5
  %2076 = load i32, ptr %12, align 4, !tbaa !5
  %2077 = add nsw i32 %2076, -1
  %2078 = icmp slt i32 %2075, %2077
  br i1 %2078, label %2101, label %2079

2079:                                             ; preds = %2074
  %2080 = icmp eq i32 %2075, %2077
  br i1 %2080, label %2081, label %2117

2081:                                             ; preds = %2079
  store i32 0, ptr %4, align 4, !tbaa !5
  %2082 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2082, ptr %6, align 4, !tbaa !5
  br i1 %1839, label %2124, label %2083

2083:                                             ; preds = %2081, %2111
  %2084 = phi i64 [ %2115, %2111 ], [ 1, %2081 ]
  %2085 = getelementptr inbounds i32, ptr %4, i64 %2084
  %2086 = load i32, ptr %2085, align 4, !tbaa !5
  %2087 = getelementptr inbounds i32, ptr %12, i64 %2084
  %2088 = load i32, ptr %2087, align 4, !tbaa !5
  %2089 = add nsw i32 %2088, -1
  %2090 = icmp slt i32 %2086, %2089
  br i1 %2090, label %2091, label %2109

2091:                                             ; preds = %2083
  br i1 %2078, label %2101, label %2092

2092:                                             ; preds = %2091
  %2093 = shl i64 %2084, 32
  %2094 = add i64 %2093, -4294967296
  %2095 = ashr exact i64 %2094, 32
  %2096 = getelementptr inbounds i32, ptr %7, i64 %2095
  %2097 = load i32, ptr %2096, align 4, !tbaa !5
  %2098 = getelementptr inbounds i32, ptr %6, i64 %2084
  %2099 = load i32, ptr %2098, align 4, !tbaa !5
  %2100 = add nsw i32 %2099, %2097
  store i32 %2100, ptr %2098, align 4, !tbaa !5
  br label %2119

2101:                                             ; preds = %2074, %2091
  %2102 = phi i32 [ %2086, %2091 ], [ %2075, %2074 ]
  %2103 = phi ptr [ %2085, %2091 ], [ %4, %2074 ]
  %2104 = phi i64 [ %2084, %2091 ], [ 0, %2074 ]
  %2105 = add nsw i32 %2102, 1
  store i32 %2105, ptr %2103, align 4, !tbaa !5
  %2106 = getelementptr inbounds i32, ptr %7, i64 %2104
  %2107 = load i32, ptr %2106, align 4, !tbaa !5
  %2108 = getelementptr inbounds i32, ptr %6, i64 %2104
  br label %2119

2109:                                             ; preds = %2083
  %2110 = icmp eq i32 %2086, %2089
  br i1 %2110, label %2111, label %2117

2111:                                             ; preds = %2109
  store i32 0, ptr %2085, align 4, !tbaa !5
  %2112 = getelementptr inbounds i32, ptr %8, i64 %2084
  %2113 = load i32, ptr %2112, align 4, !tbaa !5
  %2114 = getelementptr inbounds i32, ptr %6, i64 %2084
  store i32 %2113, ptr %2114, align 4, !tbaa !5
  %2115 = add nuw nsw i64 %2084, 1
  %2116 = icmp eq i64 %2115, %1837
  br i1 %2116, label %2124, label %2083, !llvm.loop !1372

2117:                                             ; preds = %2079, %2109
  %2118 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2119:                                             ; preds = %2092, %2101
  %2120 = phi ptr [ %2108, %2101 ], [ %2085, %2092 ]
  %2121 = phi i32 [ %2107, %2101 ], [ 1, %2092 ]
  %2122 = load i32, ptr %2120, align 4, !tbaa !5
  %2123 = add nsw i32 %2122, %2121
  store i32 %2123, ptr %2120, align 4, !tbaa !5
  br label %2124

2124:                                             ; preds = %2111, %2119, %2081, %2063
  %2125 = icmp eq i32 %2073, %5
  br i1 %2125, label %5401, label %1985, !llvm.loop !1373

2126:                                             ; preds = %1825
  %2127 = getelementptr inbounds i32, ptr %3, i64 %19
  %2128 = load i32, ptr %2127, align 4, !tbaa !5
  %2129 = icmp eq i32 %2128, 0
  %2130 = icmp sgt i32 %5, 0
  br i1 %2129, label %2140, label %2131

2131:                                             ; preds = %2126
  br i1 %2130, label %2132, label %5401

2132:                                             ; preds = %2131
  %2133 = icmp sgt i32 %13, 1
  %2134 = icmp sgt i32 %13, 0
  %2135 = add i32 %13, -2
  %2136 = zext i32 %2135 to i64
  %2137 = zext i32 %13 to i64
  %2138 = add nuw i32 %5, 1
  %2139 = icmp eq i32 %13, 1
  br label %2279

2140:                                             ; preds = %2126
  br i1 %2130, label %2141, label %5401

2141:                                             ; preds = %2140
  %2142 = icmp sgt i32 %13, 1
  %2143 = icmp sgt i32 %13, 0
  %2144 = add i32 %13, -2
  %2145 = zext i32 %2144 to i64
  %2146 = zext i32 %13 to i64
  %2147 = add nuw i32 %5, 1
  %2148 = icmp eq i32 %13, 1
  br label %2149

2149:                                             ; preds = %2141, %2277
  %2150 = phi i16 [ 0, %2141 ], [ %2228, %2277 ]
  %2151 = phi i32 [ 0, %2141 ], [ %2229, %2277 ]
  %2152 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2142, label %2153, label %2222

2153:                                             ; preds = %2149, %2212
  %2154 = phi i32 [ %2221, %2212 ], [ 0, %2149 ]
  %2155 = phi i64 [ %2163, %2212 ], [ %2146, %2149 ]
  %2156 = phi i64 [ %2220, %2212 ], [ %2145, %2149 ]
  %2157 = phi i32 [ %2218, %2212 ], [ %2152, %2149 ]
  %2158 = sub i32 %2144, %2154
  %2159 = tail call i32 @llvm.smin.i32(i32 %2158, i32 0)
  %2160 = sub i32 %2158, %2159
  %2161 = zext i32 %2160 to i64
  %2162 = add nuw nsw i64 %2161, 1
  %2163 = add nsw i64 %2155, -1
  %2164 = icmp ult i32 %2160, 31
  br i1 %2164, label %2200, label %2165

2165:                                             ; preds = %2153
  %2166 = and i64 %2162, 8589934560
  %2167 = sub i64 %2156, %2166
  br label %2168

2168:                                             ; preds = %2168, %2165
  %2169 = phi i64 [ 0, %2165 ], [ %2192, %2168 ]
  %2170 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2188, %2168 ]
  %2171 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2189, %2168 ]
  %2172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2190, %2168 ]
  %2173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2165 ], [ %2191, %2168 ]
  %2174 = sub i64 %2156, %2169
  %2175 = getelementptr inbounds i32, ptr %9, i64 %2174
  %2176 = getelementptr inbounds i32, ptr %2175, i64 -7
  %2177 = load <8 x i32>, ptr %2176, align 4, !tbaa !5
  %2178 = shufflevector <8 x i32> %2177, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2179 = getelementptr inbounds i32, ptr %2175, i64 -15
  %2180 = load <8 x i32>, ptr %2179, align 4, !tbaa !5
  %2181 = shufflevector <8 x i32> %2180, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2182 = getelementptr inbounds i32, ptr %2175, i64 -23
  %2183 = load <8 x i32>, ptr %2182, align 4, !tbaa !5
  %2184 = shufflevector <8 x i32> %2183, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2185 = getelementptr inbounds i32, ptr %2175, i64 -31
  %2186 = load <8 x i32>, ptr %2185, align 4, !tbaa !5
  %2187 = shufflevector <8 x i32> %2186, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2188 = mul <8 x i32> %2178, %2170
  %2189 = mul <8 x i32> %2181, %2171
  %2190 = mul <8 x i32> %2184, %2172
  %2191 = mul <8 x i32> %2187, %2173
  %2192 = add nuw i64 %2169, 32
  %2193 = icmp eq i64 %2192, %2166
  br i1 %2193, label %2194, label %2168, !llvm.loop !1374

2194:                                             ; preds = %2168
  %2195 = mul <8 x i32> %2189, %2188
  %2196 = mul <8 x i32> %2190, %2195
  %2197 = mul <8 x i32> %2191, %2196
  %2198 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2197)
  %2199 = icmp eq i64 %2162, %2166
  br i1 %2199, label %2212, label %2200

2200:                                             ; preds = %2153, %2194
  %2201 = phi i64 [ %2156, %2153 ], [ %2167, %2194 ]
  %2202 = phi i32 [ 1, %2153 ], [ %2198, %2194 ]
  br label %2203

2203:                                             ; preds = %2200, %2203
  %2204 = phi i64 [ %2209, %2203 ], [ %2201, %2200 ]
  %2205 = phi i32 [ %2208, %2203 ], [ %2202, %2200 ]
  %2206 = getelementptr inbounds i32, ptr %9, i64 %2204
  %2207 = load i32, ptr %2206, align 4, !tbaa !5
  %2208 = mul nsw i32 %2207, %2205
  %2209 = add nsw i64 %2204, -1
  %2210 = trunc i64 %2204 to i32
  %2211 = icmp sgt i32 %2210, 0
  br i1 %2211, label %2203, label %2212, !llvm.loop !1375

2212:                                             ; preds = %2203, %2194
  %2213 = phi i32 [ %2198, %2194 ], [ %2208, %2203 ]
  %2214 = and i64 %2163, 4294967295
  %2215 = getelementptr inbounds i32, ptr %6, i64 %2214
  %2216 = load i32, ptr %2215, align 4, !tbaa !5
  %2217 = mul nsw i32 %2216, %2213
  %2218 = add nsw i32 %2217, %2157
  %2219 = icmp sgt i64 %2155, 2
  %2220 = add nsw i64 %2156, -1
  %2221 = add i32 %2154, 1
  br i1 %2219, label %2153, label %2222, !llvm.loop !1376

2222:                                             ; preds = %2212, %2149
  %2223 = phi i32 [ %2152, %2149 ], [ %2218, %2212 ]
  %2224 = sext i32 %2223 to i64
  %2225 = getelementptr inbounds double, ptr %1818, i64 %2224
  %2226 = load double, ptr %2225, align 8, !tbaa !18
  %2227 = fptosi double %2226 to i16
  %2228 = add i16 %2150, %2227
  %2229 = add nuw nsw i32 %2151, 1
  br i1 %2143, label %2230, label %2277

2230:                                             ; preds = %2222
  %2231 = load i32, ptr %4, align 4, !tbaa !5
  %2232 = load i32, ptr %12, align 4, !tbaa !5
  %2233 = add nsw i32 %2232, -1
  %2234 = icmp slt i32 %2231, %2233
  br i1 %2234, label %2254, label %2235

2235:                                             ; preds = %2230
  %2236 = icmp eq i32 %2231, %2233
  br i1 %2236, label %2237, label %2270

2237:                                             ; preds = %2235
  store i32 0, ptr %4, align 4, !tbaa !5
  %2238 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2238, ptr %6, align 4, !tbaa !5
  br i1 %2148, label %2277, label %2239

2239:                                             ; preds = %2237, %2264
  %2240 = phi i64 [ %2268, %2264 ], [ 1, %2237 ]
  %2241 = getelementptr inbounds i32, ptr %4, i64 %2240
  %2242 = load i32, ptr %2241, align 4, !tbaa !5
  %2243 = getelementptr inbounds i32, ptr %12, i64 %2240
  %2244 = load i32, ptr %2243, align 4, !tbaa !5
  %2245 = add nsw i32 %2244, -1
  %2246 = icmp slt i32 %2242, %2245
  br i1 %2246, label %2247, label %2262

2247:                                             ; preds = %2239
  br i1 %2234, label %2254, label %2248

2248:                                             ; preds = %2247
  %2249 = getelementptr inbounds i32, ptr %7, i64 %2240
  %2250 = load i32, ptr %2249, align 4, !tbaa !5
  %2251 = getelementptr inbounds i32, ptr %6, i64 %2240
  %2252 = load i32, ptr %2251, align 4, !tbaa !5
  %2253 = add nsw i32 %2252, %2250
  store i32 %2253, ptr %2251, align 4, !tbaa !5
  br label %2272

2254:                                             ; preds = %2230, %2247
  %2255 = phi i32 [ %2242, %2247 ], [ %2231, %2230 ]
  %2256 = phi ptr [ %2241, %2247 ], [ %4, %2230 ]
  %2257 = phi i64 [ %2240, %2247 ], [ 0, %2230 ]
  %2258 = add nsw i32 %2255, 1
  store i32 %2258, ptr %2256, align 4, !tbaa !5
  %2259 = getelementptr inbounds i32, ptr %7, i64 %2257
  %2260 = load i32, ptr %2259, align 4, !tbaa !5
  %2261 = getelementptr inbounds i32, ptr %6, i64 %2257
  br label %2272

2262:                                             ; preds = %2239
  %2263 = icmp eq i32 %2242, %2245
  br i1 %2263, label %2264, label %2270

2264:                                             ; preds = %2262
  store i32 0, ptr %2241, align 4, !tbaa !5
  %2265 = getelementptr inbounds i32, ptr %8, i64 %2240
  %2266 = load i32, ptr %2265, align 4, !tbaa !5
  %2267 = getelementptr inbounds i32, ptr %6, i64 %2240
  store i32 %2266, ptr %2267, align 4, !tbaa !5
  %2268 = add nuw nsw i64 %2240, 1
  %2269 = icmp eq i64 %2268, %2146
  br i1 %2269, label %2277, label %2239, !llvm.loop !1377

2270:                                             ; preds = %2235, %2262
  store i16 %2228, ptr %1820, align 2, !tbaa !78
  %2271 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2272:                                             ; preds = %2248, %2254
  %2273 = phi ptr [ %2261, %2254 ], [ %2241, %2248 ]
  %2274 = phi i32 [ %2260, %2254 ], [ 1, %2248 ]
  %2275 = load i32, ptr %2273, align 4, !tbaa !5
  %2276 = add nsw i32 %2275, %2274
  store i32 %2276, ptr %2273, align 4, !tbaa !5
  br label %2277

2277:                                             ; preds = %2264, %2272, %2237, %2222
  %2278 = icmp eq i32 %2229, %5
  br i1 %2278, label %5396, label %2149, !llvm.loop !1378

2279:                                             ; preds = %2132, %2414
  %2280 = phi i16 [ 0, %2132 ], [ %2362, %2414 ]
  %2281 = phi i32 [ 0, %2132 ], [ %2363, %2414 ]
  %2282 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2133, label %2283, label %2352

2283:                                             ; preds = %2279, %2342
  %2284 = phi i32 [ %2351, %2342 ], [ 0, %2279 ]
  %2285 = phi i64 [ %2293, %2342 ], [ %2137, %2279 ]
  %2286 = phi i64 [ %2350, %2342 ], [ %2136, %2279 ]
  %2287 = phi i32 [ %2348, %2342 ], [ %2282, %2279 ]
  %2288 = sub i32 %2135, %2284
  %2289 = tail call i32 @llvm.smin.i32(i32 %2288, i32 0)
  %2290 = sub i32 %2288, %2289
  %2291 = zext i32 %2290 to i64
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = add nsw i64 %2285, -1
  %2294 = icmp ult i32 %2290, 31
  br i1 %2294, label %2330, label %2295

2295:                                             ; preds = %2283
  %2296 = and i64 %2292, 8589934560
  %2297 = sub i64 %2286, %2296
  br label %2298

2298:                                             ; preds = %2298, %2295
  %2299 = phi i64 [ 0, %2295 ], [ %2322, %2298 ]
  %2300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2318, %2298 ]
  %2301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2319, %2298 ]
  %2302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2320, %2298 ]
  %2303 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2321, %2298 ]
  %2304 = sub i64 %2286, %2299
  %2305 = getelementptr inbounds i32, ptr %11, i64 %2304
  %2306 = getelementptr inbounds i32, ptr %2305, i64 -7
  %2307 = load <8 x i32>, ptr %2306, align 4, !tbaa !5
  %2308 = shufflevector <8 x i32> %2307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2309 = getelementptr inbounds i32, ptr %2305, i64 -15
  %2310 = load <8 x i32>, ptr %2309, align 4, !tbaa !5
  %2311 = shufflevector <8 x i32> %2310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2312 = getelementptr inbounds i32, ptr %2305, i64 -23
  %2313 = load <8 x i32>, ptr %2312, align 4, !tbaa !5
  %2314 = shufflevector <8 x i32> %2313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2315 = getelementptr inbounds i32, ptr %2305, i64 -31
  %2316 = load <8 x i32>, ptr %2315, align 4, !tbaa !5
  %2317 = shufflevector <8 x i32> %2316, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2318 = mul <8 x i32> %2308, %2300
  %2319 = mul <8 x i32> %2311, %2301
  %2320 = mul <8 x i32> %2314, %2302
  %2321 = mul <8 x i32> %2317, %2303
  %2322 = add nuw i64 %2299, 32
  %2323 = icmp eq i64 %2322, %2296
  br i1 %2323, label %2324, label %2298, !llvm.loop !1379

2324:                                             ; preds = %2298
  %2325 = mul <8 x i32> %2319, %2318
  %2326 = mul <8 x i32> %2320, %2325
  %2327 = mul <8 x i32> %2321, %2326
  %2328 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2327)
  %2329 = icmp eq i64 %2292, %2296
  br i1 %2329, label %2342, label %2330

2330:                                             ; preds = %2283, %2324
  %2331 = phi i64 [ %2286, %2283 ], [ %2297, %2324 ]
  %2332 = phi i32 [ 1, %2283 ], [ %2328, %2324 ]
  br label %2333

2333:                                             ; preds = %2330, %2333
  %2334 = phi i64 [ %2339, %2333 ], [ %2331, %2330 ]
  %2335 = phi i32 [ %2338, %2333 ], [ %2332, %2330 ]
  %2336 = getelementptr inbounds i32, ptr %11, i64 %2334
  %2337 = load i32, ptr %2336, align 4, !tbaa !5
  %2338 = mul nsw i32 %2337, %2335
  %2339 = add nsw i64 %2334, -1
  %2340 = trunc i64 %2334 to i32
  %2341 = icmp sgt i32 %2340, 0
  br i1 %2341, label %2333, label %2342, !llvm.loop !1380

2342:                                             ; preds = %2333, %2324
  %2343 = phi i32 [ %2328, %2324 ], [ %2338, %2333 ]
  %2344 = and i64 %2293, 4294967295
  %2345 = getelementptr inbounds i32, ptr %6, i64 %2344
  %2346 = load i32, ptr %2345, align 4, !tbaa !5
  %2347 = mul nsw i32 %2346, %2343
  %2348 = add nsw i32 %2347, %2287
  %2349 = icmp sgt i64 %2285, 2
  %2350 = add nsw i64 %2286, -1
  %2351 = add i32 %2284, 1
  br i1 %2349, label %2283, label %2352, !llvm.loop !1381

2352:                                             ; preds = %2342, %2279
  %2353 = phi i32 [ %2282, %2279 ], [ %2348, %2342 ]
  %2354 = icmp slt i32 %2353, %5
  br i1 %2354, label %2357, label %2355

2355:                                             ; preds = %2352
  %2356 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2357:                                             ; preds = %2352
  %2358 = sext i32 %2353 to i64
  %2359 = getelementptr inbounds double, ptr %1818, i64 %2358
  %2360 = load double, ptr %2359, align 8, !tbaa !18
  %2361 = fptosi double %2360 to i16
  %2362 = add i16 %2280, %2361
  store i16 %2362, ptr %1820, align 2, !tbaa !78
  %2363 = add nuw nsw i32 %2281, 1
  br i1 %2134, label %2364, label %2414

2364:                                             ; preds = %2357
  %2365 = load i32, ptr %4, align 4, !tbaa !5
  %2366 = load i32, ptr %12, align 4, !tbaa !5
  %2367 = add nsw i32 %2366, -1
  %2368 = icmp slt i32 %2365, %2367
  br i1 %2368, label %2391, label %2369

2369:                                             ; preds = %2364
  %2370 = icmp eq i32 %2365, %2367
  br i1 %2370, label %2371, label %2407

2371:                                             ; preds = %2369
  store i32 0, ptr %4, align 4, !tbaa !5
  %2372 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2372, ptr %6, align 4, !tbaa !5
  br i1 %2139, label %2414, label %2373

2373:                                             ; preds = %2371, %2401
  %2374 = phi i64 [ %2405, %2401 ], [ 1, %2371 ]
  %2375 = getelementptr inbounds i32, ptr %4, i64 %2374
  %2376 = load i32, ptr %2375, align 4, !tbaa !5
  %2377 = getelementptr inbounds i32, ptr %12, i64 %2374
  %2378 = load i32, ptr %2377, align 4, !tbaa !5
  %2379 = add nsw i32 %2378, -1
  %2380 = icmp slt i32 %2376, %2379
  br i1 %2380, label %2381, label %2399

2381:                                             ; preds = %2373
  br i1 %2368, label %2391, label %2382

2382:                                             ; preds = %2381
  %2383 = shl i64 %2374, 32
  %2384 = add i64 %2383, -4294967296
  %2385 = ashr exact i64 %2384, 32
  %2386 = getelementptr inbounds i32, ptr %7, i64 %2385
  %2387 = load i32, ptr %2386, align 4, !tbaa !5
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2374
  %2389 = load i32, ptr %2388, align 4, !tbaa !5
  %2390 = add nsw i32 %2389, %2387
  store i32 %2390, ptr %2388, align 4, !tbaa !5
  br label %2409

2391:                                             ; preds = %2364, %2381
  %2392 = phi i32 [ %2376, %2381 ], [ %2365, %2364 ]
  %2393 = phi ptr [ %2375, %2381 ], [ %4, %2364 ]
  %2394 = phi i64 [ %2374, %2381 ], [ 0, %2364 ]
  %2395 = add nsw i32 %2392, 1
  store i32 %2395, ptr %2393, align 4, !tbaa !5
  %2396 = getelementptr inbounds i32, ptr %7, i64 %2394
  %2397 = load i32, ptr %2396, align 4, !tbaa !5
  %2398 = getelementptr inbounds i32, ptr %6, i64 %2394
  br label %2409

2399:                                             ; preds = %2373
  %2400 = icmp eq i32 %2376, %2379
  br i1 %2400, label %2401, label %2407

2401:                                             ; preds = %2399
  store i32 0, ptr %2375, align 4, !tbaa !5
  %2402 = getelementptr inbounds i32, ptr %8, i64 %2374
  %2403 = load i32, ptr %2402, align 4, !tbaa !5
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2374
  store i32 %2403, ptr %2404, align 4, !tbaa !5
  %2405 = add nuw nsw i64 %2374, 1
  %2406 = icmp eq i64 %2405, %2137
  br i1 %2406, label %2414, label %2373, !llvm.loop !1382

2407:                                             ; preds = %2369, %2399
  %2408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2409:                                             ; preds = %2382, %2391
  %2410 = phi ptr [ %2398, %2391 ], [ %2375, %2382 ]
  %2411 = phi i32 [ %2397, %2391 ], [ 1, %2382 ]
  %2412 = load i32, ptr %2410, align 4, !tbaa !5
  %2413 = add nsw i32 %2412, %2411
  store i32 %2413, ptr %2410, align 4, !tbaa !5
  br label %2414

2414:                                             ; preds = %2401, %2409, %2371, %2357
  %2415 = icmp eq i32 %2363, %5
  br i1 %2415, label %5401, label %2279, !llvm.loop !1383

2416:                                             ; preds = %1825
  %2417 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1971, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

2418:                                             ; preds = %18
  %2419 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2420 = load ptr, ptr %2419, align 8, !tbaa !9
  %2421 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2422 = load ptr, ptr %2421, align 8, !tbaa !9
  store i32 0, ptr %2422, align 4, !tbaa !5
  %2423 = icmp eq i32 %13, 0
  br i1 %2423, label %2424, label %2427

2424:                                             ; preds = %2418
  %2425 = load double, ptr %2420, align 8, !tbaa !18
  %2426 = fptosi double %2425 to i32
  store i32 %2426, ptr %2422, align 4, !tbaa !5
  br label %5401

2427:                                             ; preds = %2418
  switch i32 %1, label %3014 [
    i32 1, label %2428
    i32 0, label %2724
  ]

2428:                                             ; preds = %2427
  %2429 = getelementptr inbounds i32, ptr %3, i64 %19
  %2430 = load i32, ptr %2429, align 4, !tbaa !5
  %2431 = icmp eq i32 %2430, 0
  %2432 = icmp sgt i32 %5, 0
  br i1 %2431, label %2442, label %2433

2433:                                             ; preds = %2428
  br i1 %2432, label %2434, label %5401

2434:                                             ; preds = %2433
  %2435 = icmp sgt i32 %13, 1
  %2436 = icmp sgt i32 %13, 0
  %2437 = add i32 %13, -2
  %2438 = zext i32 %2437 to i64
  %2439 = zext i32 %13 to i64
  %2440 = add nuw i32 %5, 1
  %2441 = icmp eq i32 %13, 1
  br label %2587

2442:                                             ; preds = %2428
  br i1 %2432, label %2443, label %5401

2443:                                             ; preds = %2442
  %2444 = icmp sgt i32 %13, 1
  %2445 = icmp sgt i32 %13, 0
  %2446 = add i32 %13, -2
  %2447 = zext i32 %2446 to i64
  %2448 = zext i32 %13 to i64
  %2449 = add nuw i32 %5, 1
  %2450 = icmp eq i32 %13, 1
  br label %2451

2451:                                             ; preds = %2443, %2585
  %2452 = phi i32 [ 0, %2443 ], [ %2537, %2585 ]
  %2453 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2444, label %2454, label %2523

2454:                                             ; preds = %2451, %2513
  %2455 = phi i32 [ %2522, %2513 ], [ 0, %2451 ]
  %2456 = phi i64 [ %2464, %2513 ], [ %2448, %2451 ]
  %2457 = phi i64 [ %2521, %2513 ], [ %2447, %2451 ]
  %2458 = phi i32 [ %2519, %2513 ], [ %2453, %2451 ]
  %2459 = sub i32 %2446, %2455
  %2460 = tail call i32 @llvm.smin.i32(i32 %2459, i32 0)
  %2461 = sub i32 %2459, %2460
  %2462 = zext i32 %2461 to i64
  %2463 = add nuw nsw i64 %2462, 1
  %2464 = add nsw i64 %2456, -1
  %2465 = icmp ult i32 %2461, 31
  br i1 %2465, label %2501, label %2466

2466:                                             ; preds = %2454
  %2467 = and i64 %2463, 8589934560
  %2468 = sub i64 %2457, %2467
  br label %2469

2469:                                             ; preds = %2469, %2466
  %2470 = phi i64 [ 0, %2466 ], [ %2493, %2469 ]
  %2471 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2489, %2469 ]
  %2472 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2490, %2469 ]
  %2473 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2491, %2469 ]
  %2474 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2466 ], [ %2492, %2469 ]
  %2475 = sub i64 %2457, %2470
  %2476 = getelementptr inbounds i32, ptr %9, i64 %2475
  %2477 = getelementptr inbounds i32, ptr %2476, i64 -7
  %2478 = load <8 x i32>, ptr %2477, align 4, !tbaa !5
  %2479 = shufflevector <8 x i32> %2478, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2480 = getelementptr inbounds i32, ptr %2476, i64 -15
  %2481 = load <8 x i32>, ptr %2480, align 4, !tbaa !5
  %2482 = shufflevector <8 x i32> %2481, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2483 = getelementptr inbounds i32, ptr %2476, i64 -23
  %2484 = load <8 x i32>, ptr %2483, align 4, !tbaa !5
  %2485 = shufflevector <8 x i32> %2484, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2486 = getelementptr inbounds i32, ptr %2476, i64 -31
  %2487 = load <8 x i32>, ptr %2486, align 4, !tbaa !5
  %2488 = shufflevector <8 x i32> %2487, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2489 = mul <8 x i32> %2479, %2471
  %2490 = mul <8 x i32> %2482, %2472
  %2491 = mul <8 x i32> %2485, %2473
  %2492 = mul <8 x i32> %2488, %2474
  %2493 = add nuw i64 %2470, 32
  %2494 = icmp eq i64 %2493, %2467
  br i1 %2494, label %2495, label %2469, !llvm.loop !1384

2495:                                             ; preds = %2469
  %2496 = mul <8 x i32> %2490, %2489
  %2497 = mul <8 x i32> %2491, %2496
  %2498 = mul <8 x i32> %2492, %2497
  %2499 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2498)
  %2500 = icmp eq i64 %2463, %2467
  br i1 %2500, label %2513, label %2501

2501:                                             ; preds = %2454, %2495
  %2502 = phi i64 [ %2457, %2454 ], [ %2468, %2495 ]
  %2503 = phi i32 [ 1, %2454 ], [ %2499, %2495 ]
  br label %2504

2504:                                             ; preds = %2501, %2504
  %2505 = phi i64 [ %2510, %2504 ], [ %2502, %2501 ]
  %2506 = phi i32 [ %2509, %2504 ], [ %2503, %2501 ]
  %2507 = getelementptr inbounds i32, ptr %9, i64 %2505
  %2508 = load i32, ptr %2507, align 4, !tbaa !5
  %2509 = mul nsw i32 %2508, %2506
  %2510 = add nsw i64 %2505, -1
  %2511 = trunc i64 %2505 to i32
  %2512 = icmp sgt i32 %2511, 0
  br i1 %2512, label %2504, label %2513, !llvm.loop !1385

2513:                                             ; preds = %2504, %2495
  %2514 = phi i32 [ %2499, %2495 ], [ %2509, %2504 ]
  %2515 = and i64 %2464, 4294967295
  %2516 = getelementptr inbounds i32, ptr %6, i64 %2515
  %2517 = load i32, ptr %2516, align 4, !tbaa !5
  %2518 = mul nsw i32 %2517, %2514
  %2519 = add nsw i32 %2518, %2458
  %2520 = icmp sgt i64 %2456, 2
  %2521 = add nsw i64 %2457, -1
  %2522 = add i32 %2455, 1
  br i1 %2520, label %2454, label %2523, !llvm.loop !1386

2523:                                             ; preds = %2513, %2451
  %2524 = phi i32 [ %2453, %2451 ], [ %2519, %2513 ]
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds double, ptr %2, i64 %2525
  %2527 = load double, ptr %2526, align 8, !tbaa !18
  %2528 = getelementptr inbounds double, ptr %2420, i64 %2525
  %2529 = load double, ptr %2528, align 8, !tbaa !18
  %2530 = fptosi double %2529 to i32
  %2531 = load i32, ptr %2422, align 4, !tbaa !5
  %2532 = sitofp i32 %2531 to double
  %2533 = sitofp i32 %2530 to double
  %2534 = fmul fast double %2527, %2533
  %2535 = fadd fast double %2534, %2532
  %2536 = fptosi double %2535 to i32
  store i32 %2536, ptr %2422, align 4, !tbaa !5
  %2537 = add nuw nsw i32 %2452, 1
  br i1 %2445, label %2538, label %2585

2538:                                             ; preds = %2523
  %2539 = load i32, ptr %4, align 4, !tbaa !5
  %2540 = load i32, ptr %12, align 4, !tbaa !5
  %2541 = add nsw i32 %2540, -1
  %2542 = icmp slt i32 %2539, %2541
  br i1 %2542, label %2562, label %2543

2543:                                             ; preds = %2538
  %2544 = icmp eq i32 %2539, %2541
  br i1 %2544, label %2545, label %2578

2545:                                             ; preds = %2543
  store i32 0, ptr %4, align 4, !tbaa !5
  %2546 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2546, ptr %6, align 4, !tbaa !5
  br i1 %2450, label %2585, label %2547

2547:                                             ; preds = %2545, %2572
  %2548 = phi i64 [ %2576, %2572 ], [ 1, %2545 ]
  %2549 = getelementptr inbounds i32, ptr %4, i64 %2548
  %2550 = load i32, ptr %2549, align 4, !tbaa !5
  %2551 = getelementptr inbounds i32, ptr %12, i64 %2548
  %2552 = load i32, ptr %2551, align 4, !tbaa !5
  %2553 = add nsw i32 %2552, -1
  %2554 = icmp slt i32 %2550, %2553
  br i1 %2554, label %2555, label %2570

2555:                                             ; preds = %2547
  br i1 %2542, label %2562, label %2556

2556:                                             ; preds = %2555
  %2557 = getelementptr inbounds i32, ptr %7, i64 %2548
  %2558 = load i32, ptr %2557, align 4, !tbaa !5
  %2559 = getelementptr inbounds i32, ptr %6, i64 %2548
  %2560 = load i32, ptr %2559, align 4, !tbaa !5
  %2561 = add nsw i32 %2560, %2558
  store i32 %2561, ptr %2559, align 4, !tbaa !5
  br label %2580

2562:                                             ; preds = %2538, %2555
  %2563 = phi i32 [ %2550, %2555 ], [ %2539, %2538 ]
  %2564 = phi ptr [ %2549, %2555 ], [ %4, %2538 ]
  %2565 = phi i64 [ %2548, %2555 ], [ 0, %2538 ]
  %2566 = add nsw i32 %2563, 1
  store i32 %2566, ptr %2564, align 4, !tbaa !5
  %2567 = getelementptr inbounds i32, ptr %7, i64 %2565
  %2568 = load i32, ptr %2567, align 4, !tbaa !5
  %2569 = getelementptr inbounds i32, ptr %6, i64 %2565
  br label %2580

2570:                                             ; preds = %2547
  %2571 = icmp eq i32 %2550, %2553
  br i1 %2571, label %2572, label %2578

2572:                                             ; preds = %2570
  store i32 0, ptr %2549, align 4, !tbaa !5
  %2573 = getelementptr inbounds i32, ptr %8, i64 %2548
  %2574 = load i32, ptr %2573, align 4, !tbaa !5
  %2575 = getelementptr inbounds i32, ptr %6, i64 %2548
  store i32 %2574, ptr %2575, align 4, !tbaa !5
  %2576 = add nuw nsw i64 %2548, 1
  %2577 = icmp eq i64 %2576, %2448
  br i1 %2577, label %2585, label %2547, !llvm.loop !1387

2578:                                             ; preds = %2543, %2570
  %2579 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2580:                                             ; preds = %2556, %2562
  %2581 = phi ptr [ %2569, %2562 ], [ %2549, %2556 ]
  %2582 = phi i32 [ %2568, %2562 ], [ 1, %2556 ]
  %2583 = load i32, ptr %2581, align 4, !tbaa !5
  %2584 = add nsw i32 %2583, %2582
  store i32 %2584, ptr %2581, align 4, !tbaa !5
  br label %2585

2585:                                             ; preds = %2572, %2580, %2545, %2523
  %2586 = icmp eq i32 %2537, %5
  br i1 %2586, label %5401, label %2451, !llvm.loop !1388

2587:                                             ; preds = %2434, %2722
  %2588 = phi i32 [ 0, %2434 ], [ %2671, %2722 ]
  %2589 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2435, label %2590, label %2659

2590:                                             ; preds = %2587, %2649
  %2591 = phi i32 [ %2658, %2649 ], [ 0, %2587 ]
  %2592 = phi i64 [ %2600, %2649 ], [ %2439, %2587 ]
  %2593 = phi i64 [ %2657, %2649 ], [ %2438, %2587 ]
  %2594 = phi i32 [ %2655, %2649 ], [ %2589, %2587 ]
  %2595 = sub i32 %2437, %2591
  %2596 = tail call i32 @llvm.smin.i32(i32 %2595, i32 0)
  %2597 = sub i32 %2595, %2596
  %2598 = zext i32 %2597 to i64
  %2599 = add nuw nsw i64 %2598, 1
  %2600 = add nsw i64 %2592, -1
  %2601 = icmp ult i32 %2597, 31
  br i1 %2601, label %2637, label %2602

2602:                                             ; preds = %2590
  %2603 = and i64 %2599, 8589934560
  %2604 = sub i64 %2593, %2603
  br label %2605

2605:                                             ; preds = %2605, %2602
  %2606 = phi i64 [ 0, %2602 ], [ %2629, %2605 ]
  %2607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2625, %2605 ]
  %2608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2626, %2605 ]
  %2609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2627, %2605 ]
  %2610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2602 ], [ %2628, %2605 ]
  %2611 = sub i64 %2593, %2606
  %2612 = getelementptr inbounds i32, ptr %11, i64 %2611
  %2613 = getelementptr inbounds i32, ptr %2612, i64 -7
  %2614 = load <8 x i32>, ptr %2613, align 4, !tbaa !5
  %2615 = shufflevector <8 x i32> %2614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2616 = getelementptr inbounds i32, ptr %2612, i64 -15
  %2617 = load <8 x i32>, ptr %2616, align 4, !tbaa !5
  %2618 = shufflevector <8 x i32> %2617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2619 = getelementptr inbounds i32, ptr %2612, i64 -23
  %2620 = load <8 x i32>, ptr %2619, align 4, !tbaa !5
  %2621 = shufflevector <8 x i32> %2620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2622 = getelementptr inbounds i32, ptr %2612, i64 -31
  %2623 = load <8 x i32>, ptr %2622, align 4, !tbaa !5
  %2624 = shufflevector <8 x i32> %2623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2625 = mul <8 x i32> %2615, %2607
  %2626 = mul <8 x i32> %2618, %2608
  %2627 = mul <8 x i32> %2621, %2609
  %2628 = mul <8 x i32> %2624, %2610
  %2629 = add nuw i64 %2606, 32
  %2630 = icmp eq i64 %2629, %2603
  br i1 %2630, label %2631, label %2605, !llvm.loop !1389

2631:                                             ; preds = %2605
  %2632 = mul <8 x i32> %2626, %2625
  %2633 = mul <8 x i32> %2627, %2632
  %2634 = mul <8 x i32> %2628, %2633
  %2635 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2634)
  %2636 = icmp eq i64 %2599, %2603
  br i1 %2636, label %2649, label %2637

2637:                                             ; preds = %2590, %2631
  %2638 = phi i64 [ %2593, %2590 ], [ %2604, %2631 ]
  %2639 = phi i32 [ 1, %2590 ], [ %2635, %2631 ]
  br label %2640

2640:                                             ; preds = %2637, %2640
  %2641 = phi i64 [ %2646, %2640 ], [ %2638, %2637 ]
  %2642 = phi i32 [ %2645, %2640 ], [ %2639, %2637 ]
  %2643 = getelementptr inbounds i32, ptr %11, i64 %2641
  %2644 = load i32, ptr %2643, align 4, !tbaa !5
  %2645 = mul nsw i32 %2644, %2642
  %2646 = add nsw i64 %2641, -1
  %2647 = trunc i64 %2641 to i32
  %2648 = icmp sgt i32 %2647, 0
  br i1 %2648, label %2640, label %2649, !llvm.loop !1390

2649:                                             ; preds = %2640, %2631
  %2650 = phi i32 [ %2635, %2631 ], [ %2645, %2640 ]
  %2651 = and i64 %2600, 4294967295
  %2652 = getelementptr inbounds i32, ptr %6, i64 %2651
  %2653 = load i32, ptr %2652, align 4, !tbaa !5
  %2654 = mul nsw i32 %2653, %2650
  %2655 = add nsw i32 %2654, %2594
  %2656 = icmp sgt i64 %2592, 2
  %2657 = add nsw i64 %2593, -1
  %2658 = add i32 %2591, 1
  br i1 %2656, label %2590, label %2659, !llvm.loop !1391

2659:                                             ; preds = %2649, %2587
  %2660 = phi i32 [ %2589, %2587 ], [ %2655, %2649 ]
  %2661 = icmp slt i32 %2660, %5
  br i1 %2661, label %2664, label %2662

2662:                                             ; preds = %2659
  %2663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2664:                                             ; preds = %2659
  %2665 = sext i32 %2660 to i64
  %2666 = getelementptr inbounds double, ptr %2420, i64 %2665
  %2667 = load double, ptr %2666, align 8, !tbaa !18
  %2668 = fptosi double %2667 to i32
  %2669 = load i32, ptr %2422, align 4, !tbaa !5
  %2670 = add i32 %2669, %2668
  store i32 %2670, ptr %2422, align 4, !tbaa !5
  %2671 = add nuw nsw i32 %2588, 1
  br i1 %2436, label %2672, label %2722

2672:                                             ; preds = %2664
  %2673 = load i32, ptr %4, align 4, !tbaa !5
  %2674 = load i32, ptr %12, align 4, !tbaa !5
  %2675 = add nsw i32 %2674, -1
  %2676 = icmp slt i32 %2673, %2675
  br i1 %2676, label %2699, label %2677

2677:                                             ; preds = %2672
  %2678 = icmp eq i32 %2673, %2675
  br i1 %2678, label %2679, label %2715

2679:                                             ; preds = %2677
  store i32 0, ptr %4, align 4, !tbaa !5
  %2680 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2680, ptr %6, align 4, !tbaa !5
  br i1 %2441, label %2722, label %2681

2681:                                             ; preds = %2679, %2709
  %2682 = phi i64 [ %2713, %2709 ], [ 1, %2679 ]
  %2683 = getelementptr inbounds i32, ptr %4, i64 %2682
  %2684 = load i32, ptr %2683, align 4, !tbaa !5
  %2685 = getelementptr inbounds i32, ptr %12, i64 %2682
  %2686 = load i32, ptr %2685, align 4, !tbaa !5
  %2687 = add nsw i32 %2686, -1
  %2688 = icmp slt i32 %2684, %2687
  br i1 %2688, label %2689, label %2707

2689:                                             ; preds = %2681
  br i1 %2676, label %2699, label %2690

2690:                                             ; preds = %2689
  %2691 = shl i64 %2682, 32
  %2692 = add i64 %2691, -4294967296
  %2693 = ashr exact i64 %2692, 32
  %2694 = getelementptr inbounds i32, ptr %7, i64 %2693
  %2695 = load i32, ptr %2694, align 4, !tbaa !5
  %2696 = getelementptr inbounds i32, ptr %6, i64 %2682
  %2697 = load i32, ptr %2696, align 4, !tbaa !5
  %2698 = add nsw i32 %2697, %2695
  store i32 %2698, ptr %2696, align 4, !tbaa !5
  br label %2717

2699:                                             ; preds = %2672, %2689
  %2700 = phi i32 [ %2684, %2689 ], [ %2673, %2672 ]
  %2701 = phi ptr [ %2683, %2689 ], [ %4, %2672 ]
  %2702 = phi i64 [ %2682, %2689 ], [ 0, %2672 ]
  %2703 = add nsw i32 %2700, 1
  store i32 %2703, ptr %2701, align 4, !tbaa !5
  %2704 = getelementptr inbounds i32, ptr %7, i64 %2702
  %2705 = load i32, ptr %2704, align 4, !tbaa !5
  %2706 = getelementptr inbounds i32, ptr %6, i64 %2702
  br label %2717

2707:                                             ; preds = %2681
  %2708 = icmp eq i32 %2684, %2687
  br i1 %2708, label %2709, label %2715

2709:                                             ; preds = %2707
  store i32 0, ptr %2683, align 4, !tbaa !5
  %2710 = getelementptr inbounds i32, ptr %8, i64 %2682
  %2711 = load i32, ptr %2710, align 4, !tbaa !5
  %2712 = getelementptr inbounds i32, ptr %6, i64 %2682
  store i32 %2711, ptr %2712, align 4, !tbaa !5
  %2713 = add nuw nsw i64 %2682, 1
  %2714 = icmp eq i64 %2713, %2439
  br i1 %2714, label %2722, label %2681, !llvm.loop !1392

2715:                                             ; preds = %2677, %2707
  %2716 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2717:                                             ; preds = %2690, %2699
  %2718 = phi ptr [ %2706, %2699 ], [ %2683, %2690 ]
  %2719 = phi i32 [ %2705, %2699 ], [ 1, %2690 ]
  %2720 = load i32, ptr %2718, align 4, !tbaa !5
  %2721 = add nsw i32 %2720, %2719
  store i32 %2721, ptr %2718, align 4, !tbaa !5
  br label %2722

2722:                                             ; preds = %2709, %2717, %2679, %2664
  %2723 = icmp eq i32 %2671, %5
  br i1 %2723, label %5401, label %2587, !llvm.loop !1393

2724:                                             ; preds = %2427
  %2725 = getelementptr inbounds i32, ptr %3, i64 %19
  %2726 = load i32, ptr %2725, align 4, !tbaa !5
  %2727 = icmp eq i32 %2726, 0
  %2728 = icmp sgt i32 %5, 0
  br i1 %2727, label %2738, label %2729

2729:                                             ; preds = %2724
  br i1 %2728, label %2730, label %5401

2730:                                             ; preds = %2729
  %2731 = icmp sgt i32 %13, 1
  %2732 = icmp sgt i32 %13, 0
  %2733 = add i32 %13, -2
  %2734 = zext i32 %2733 to i64
  %2735 = zext i32 %13 to i64
  %2736 = add nuw i32 %5, 1
  %2737 = icmp eq i32 %13, 1
  br label %2877

2738:                                             ; preds = %2724
  br i1 %2728, label %2739, label %5401

2739:                                             ; preds = %2738
  %2740 = icmp sgt i32 %13, 1
  %2741 = icmp sgt i32 %13, 0
  %2742 = add i32 %13, -2
  %2743 = zext i32 %2742 to i64
  %2744 = zext i32 %13 to i64
  %2745 = add nuw i32 %5, 1
  %2746 = icmp eq i32 %13, 1
  br label %2747

2747:                                             ; preds = %2739, %2875
  %2748 = phi i32 [ 0, %2739 ], [ %2827, %2875 ]
  %2749 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2740, label %2750, label %2819

2750:                                             ; preds = %2747, %2809
  %2751 = phi i32 [ %2818, %2809 ], [ 0, %2747 ]
  %2752 = phi i64 [ %2760, %2809 ], [ %2744, %2747 ]
  %2753 = phi i64 [ %2817, %2809 ], [ %2743, %2747 ]
  %2754 = phi i32 [ %2815, %2809 ], [ %2749, %2747 ]
  %2755 = sub i32 %2742, %2751
  %2756 = tail call i32 @llvm.smin.i32(i32 %2755, i32 0)
  %2757 = sub i32 %2755, %2756
  %2758 = zext i32 %2757 to i64
  %2759 = add nuw nsw i64 %2758, 1
  %2760 = add nsw i64 %2752, -1
  %2761 = icmp ult i32 %2757, 31
  br i1 %2761, label %2797, label %2762

2762:                                             ; preds = %2750
  %2763 = and i64 %2759, 8589934560
  %2764 = sub i64 %2753, %2763
  br label %2765

2765:                                             ; preds = %2765, %2762
  %2766 = phi i64 [ 0, %2762 ], [ %2789, %2765 ]
  %2767 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2785, %2765 ]
  %2768 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2786, %2765 ]
  %2769 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2787, %2765 ]
  %2770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2762 ], [ %2788, %2765 ]
  %2771 = sub i64 %2753, %2766
  %2772 = getelementptr inbounds i32, ptr %9, i64 %2771
  %2773 = getelementptr inbounds i32, ptr %2772, i64 -7
  %2774 = load <8 x i32>, ptr %2773, align 4, !tbaa !5
  %2775 = shufflevector <8 x i32> %2774, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2776 = getelementptr inbounds i32, ptr %2772, i64 -15
  %2777 = load <8 x i32>, ptr %2776, align 4, !tbaa !5
  %2778 = shufflevector <8 x i32> %2777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2779 = getelementptr inbounds i32, ptr %2772, i64 -23
  %2780 = load <8 x i32>, ptr %2779, align 4, !tbaa !5
  %2781 = shufflevector <8 x i32> %2780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2782 = getelementptr inbounds i32, ptr %2772, i64 -31
  %2783 = load <8 x i32>, ptr %2782, align 4, !tbaa !5
  %2784 = shufflevector <8 x i32> %2783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2785 = mul <8 x i32> %2775, %2767
  %2786 = mul <8 x i32> %2778, %2768
  %2787 = mul <8 x i32> %2781, %2769
  %2788 = mul <8 x i32> %2784, %2770
  %2789 = add nuw i64 %2766, 32
  %2790 = icmp eq i64 %2789, %2763
  br i1 %2790, label %2791, label %2765, !llvm.loop !1394

2791:                                             ; preds = %2765
  %2792 = mul <8 x i32> %2786, %2785
  %2793 = mul <8 x i32> %2787, %2792
  %2794 = mul <8 x i32> %2788, %2793
  %2795 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2794)
  %2796 = icmp eq i64 %2759, %2763
  br i1 %2796, label %2809, label %2797

2797:                                             ; preds = %2750, %2791
  %2798 = phi i64 [ %2753, %2750 ], [ %2764, %2791 ]
  %2799 = phi i32 [ 1, %2750 ], [ %2795, %2791 ]
  br label %2800

2800:                                             ; preds = %2797, %2800
  %2801 = phi i64 [ %2806, %2800 ], [ %2798, %2797 ]
  %2802 = phi i32 [ %2805, %2800 ], [ %2799, %2797 ]
  %2803 = getelementptr inbounds i32, ptr %9, i64 %2801
  %2804 = load i32, ptr %2803, align 4, !tbaa !5
  %2805 = mul nsw i32 %2804, %2802
  %2806 = add nsw i64 %2801, -1
  %2807 = trunc i64 %2801 to i32
  %2808 = icmp sgt i32 %2807, 0
  br i1 %2808, label %2800, label %2809, !llvm.loop !1395

2809:                                             ; preds = %2800, %2791
  %2810 = phi i32 [ %2795, %2791 ], [ %2805, %2800 ]
  %2811 = and i64 %2760, 4294967295
  %2812 = getelementptr inbounds i32, ptr %6, i64 %2811
  %2813 = load i32, ptr %2812, align 4, !tbaa !5
  %2814 = mul nsw i32 %2813, %2810
  %2815 = add nsw i32 %2814, %2754
  %2816 = icmp sgt i64 %2752, 2
  %2817 = add nsw i64 %2753, -1
  %2818 = add i32 %2751, 1
  br i1 %2816, label %2750, label %2819, !llvm.loop !1396

2819:                                             ; preds = %2809, %2747
  %2820 = phi i32 [ %2749, %2747 ], [ %2815, %2809 ]
  %2821 = sext i32 %2820 to i64
  %2822 = getelementptr inbounds double, ptr %2420, i64 %2821
  %2823 = load double, ptr %2822, align 8, !tbaa !18
  %2824 = fptosi double %2823 to i32
  %2825 = load i32, ptr %2422, align 4, !tbaa !5
  %2826 = add nsw i32 %2825, %2824
  store i32 %2826, ptr %2422, align 4, !tbaa !5
  %2827 = add nuw nsw i32 %2748, 1
  br i1 %2741, label %2828, label %2875

2828:                                             ; preds = %2819
  %2829 = load i32, ptr %4, align 4, !tbaa !5
  %2830 = load i32, ptr %12, align 4, !tbaa !5
  %2831 = add nsw i32 %2830, -1
  %2832 = icmp slt i32 %2829, %2831
  br i1 %2832, label %2852, label %2833

2833:                                             ; preds = %2828
  %2834 = icmp eq i32 %2829, %2831
  br i1 %2834, label %2835, label %2868

2835:                                             ; preds = %2833
  store i32 0, ptr %4, align 4, !tbaa !5
  %2836 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2836, ptr %6, align 4, !tbaa !5
  br i1 %2746, label %2875, label %2837

2837:                                             ; preds = %2835, %2862
  %2838 = phi i64 [ %2866, %2862 ], [ 1, %2835 ]
  %2839 = getelementptr inbounds i32, ptr %4, i64 %2838
  %2840 = load i32, ptr %2839, align 4, !tbaa !5
  %2841 = getelementptr inbounds i32, ptr %12, i64 %2838
  %2842 = load i32, ptr %2841, align 4, !tbaa !5
  %2843 = add nsw i32 %2842, -1
  %2844 = icmp slt i32 %2840, %2843
  br i1 %2844, label %2845, label %2860

2845:                                             ; preds = %2837
  br i1 %2832, label %2852, label %2846

2846:                                             ; preds = %2845
  %2847 = getelementptr inbounds i32, ptr %7, i64 %2838
  %2848 = load i32, ptr %2847, align 4, !tbaa !5
  %2849 = getelementptr inbounds i32, ptr %6, i64 %2838
  %2850 = load i32, ptr %2849, align 4, !tbaa !5
  %2851 = add nsw i32 %2850, %2848
  store i32 %2851, ptr %2849, align 4, !tbaa !5
  br label %2870

2852:                                             ; preds = %2828, %2845
  %2853 = phi i32 [ %2840, %2845 ], [ %2829, %2828 ]
  %2854 = phi ptr [ %2839, %2845 ], [ %4, %2828 ]
  %2855 = phi i64 [ %2838, %2845 ], [ 0, %2828 ]
  %2856 = add nsw i32 %2853, 1
  store i32 %2856, ptr %2854, align 4, !tbaa !5
  %2857 = getelementptr inbounds i32, ptr %7, i64 %2855
  %2858 = load i32, ptr %2857, align 4, !tbaa !5
  %2859 = getelementptr inbounds i32, ptr %6, i64 %2855
  br label %2870

2860:                                             ; preds = %2837
  %2861 = icmp eq i32 %2840, %2843
  br i1 %2861, label %2862, label %2868

2862:                                             ; preds = %2860
  store i32 0, ptr %2839, align 4, !tbaa !5
  %2863 = getelementptr inbounds i32, ptr %8, i64 %2838
  %2864 = load i32, ptr %2863, align 4, !tbaa !5
  %2865 = getelementptr inbounds i32, ptr %6, i64 %2838
  store i32 %2864, ptr %2865, align 4, !tbaa !5
  %2866 = add nuw nsw i64 %2838, 1
  %2867 = icmp eq i64 %2866, %2744
  br i1 %2867, label %2875, label %2837, !llvm.loop !1397

2868:                                             ; preds = %2833, %2860
  %2869 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

2870:                                             ; preds = %2846, %2852
  %2871 = phi ptr [ %2859, %2852 ], [ %2839, %2846 ]
  %2872 = phi i32 [ %2858, %2852 ], [ 1, %2846 ]
  %2873 = load i32, ptr %2871, align 4, !tbaa !5
  %2874 = add nsw i32 %2873, %2872
  store i32 %2874, ptr %2871, align 4, !tbaa !5
  br label %2875

2875:                                             ; preds = %2862, %2870, %2835, %2819
  %2876 = icmp eq i32 %2827, %5
  br i1 %2876, label %5401, label %2747, !llvm.loop !1398

2877:                                             ; preds = %2730, %3012
  %2878 = phi i32 [ 0, %2730 ], [ %2961, %3012 ]
  %2879 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %2731, label %2880, label %2949

2880:                                             ; preds = %2877, %2939
  %2881 = phi i32 [ %2948, %2939 ], [ 0, %2877 ]
  %2882 = phi i64 [ %2890, %2939 ], [ %2735, %2877 ]
  %2883 = phi i64 [ %2947, %2939 ], [ %2734, %2877 ]
  %2884 = phi i32 [ %2945, %2939 ], [ %2879, %2877 ]
  %2885 = sub i32 %2733, %2881
  %2886 = tail call i32 @llvm.smin.i32(i32 %2885, i32 0)
  %2887 = sub i32 %2885, %2886
  %2888 = zext i32 %2887 to i64
  %2889 = add nuw nsw i64 %2888, 1
  %2890 = add nsw i64 %2882, -1
  %2891 = icmp ult i32 %2887, 31
  br i1 %2891, label %2927, label %2892

2892:                                             ; preds = %2880
  %2893 = and i64 %2889, 8589934560
  %2894 = sub i64 %2883, %2893
  br label %2895

2895:                                             ; preds = %2895, %2892
  %2896 = phi i64 [ 0, %2892 ], [ %2919, %2895 ]
  %2897 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2915, %2895 ]
  %2898 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2916, %2895 ]
  %2899 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2917, %2895 ]
  %2900 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2892 ], [ %2918, %2895 ]
  %2901 = sub i64 %2883, %2896
  %2902 = getelementptr inbounds i32, ptr %11, i64 %2901
  %2903 = getelementptr inbounds i32, ptr %2902, i64 -7
  %2904 = load <8 x i32>, ptr %2903, align 4, !tbaa !5
  %2905 = shufflevector <8 x i32> %2904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2906 = getelementptr inbounds i32, ptr %2902, i64 -15
  %2907 = load <8 x i32>, ptr %2906, align 4, !tbaa !5
  %2908 = shufflevector <8 x i32> %2907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2909 = getelementptr inbounds i32, ptr %2902, i64 -23
  %2910 = load <8 x i32>, ptr %2909, align 4, !tbaa !5
  %2911 = shufflevector <8 x i32> %2910, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2912 = getelementptr inbounds i32, ptr %2902, i64 -31
  %2913 = load <8 x i32>, ptr %2912, align 4, !tbaa !5
  %2914 = shufflevector <8 x i32> %2913, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2915 = mul <8 x i32> %2905, %2897
  %2916 = mul <8 x i32> %2908, %2898
  %2917 = mul <8 x i32> %2911, %2899
  %2918 = mul <8 x i32> %2914, %2900
  %2919 = add nuw i64 %2896, 32
  %2920 = icmp eq i64 %2919, %2893
  br i1 %2920, label %2921, label %2895, !llvm.loop !1399

2921:                                             ; preds = %2895
  %2922 = mul <8 x i32> %2916, %2915
  %2923 = mul <8 x i32> %2917, %2922
  %2924 = mul <8 x i32> %2918, %2923
  %2925 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2924)
  %2926 = icmp eq i64 %2889, %2893
  br i1 %2926, label %2939, label %2927

2927:                                             ; preds = %2880, %2921
  %2928 = phi i64 [ %2883, %2880 ], [ %2894, %2921 ]
  %2929 = phi i32 [ 1, %2880 ], [ %2925, %2921 ]
  br label %2930

2930:                                             ; preds = %2927, %2930
  %2931 = phi i64 [ %2936, %2930 ], [ %2928, %2927 ]
  %2932 = phi i32 [ %2935, %2930 ], [ %2929, %2927 ]
  %2933 = getelementptr inbounds i32, ptr %11, i64 %2931
  %2934 = load i32, ptr %2933, align 4, !tbaa !5
  %2935 = mul nsw i32 %2934, %2932
  %2936 = add nsw i64 %2931, -1
  %2937 = trunc i64 %2931 to i32
  %2938 = icmp sgt i32 %2937, 0
  br i1 %2938, label %2930, label %2939, !llvm.loop !1400

2939:                                             ; preds = %2930, %2921
  %2940 = phi i32 [ %2925, %2921 ], [ %2935, %2930 ]
  %2941 = and i64 %2890, 4294967295
  %2942 = getelementptr inbounds i32, ptr %6, i64 %2941
  %2943 = load i32, ptr %2942, align 4, !tbaa !5
  %2944 = mul nsw i32 %2943, %2940
  %2945 = add nsw i32 %2944, %2884
  %2946 = icmp sgt i64 %2882, 2
  %2947 = add nsw i64 %2883, -1
  %2948 = add i32 %2881, 1
  br i1 %2946, label %2880, label %2949, !llvm.loop !1401

2949:                                             ; preds = %2939, %2877
  %2950 = phi i32 [ %2879, %2877 ], [ %2945, %2939 ]
  %2951 = icmp slt i32 %2950, %5
  br i1 %2951, label %2954, label %2952

2952:                                             ; preds = %2949
  %2953 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

2954:                                             ; preds = %2949
  %2955 = sext i32 %2950 to i64
  %2956 = getelementptr inbounds double, ptr %2420, i64 %2955
  %2957 = load double, ptr %2956, align 8, !tbaa !18
  %2958 = fptosi double %2957 to i32
  %2959 = load i32, ptr %2422, align 4, !tbaa !5
  %2960 = add nsw i32 %2959, %2958
  store i32 %2960, ptr %2422, align 4, !tbaa !5
  %2961 = add nuw nsw i32 %2878, 1
  br i1 %2732, label %2962, label %3012

2962:                                             ; preds = %2954
  %2963 = load i32, ptr %4, align 4, !tbaa !5
  %2964 = load i32, ptr %12, align 4, !tbaa !5
  %2965 = add nsw i32 %2964, -1
  %2966 = icmp slt i32 %2963, %2965
  br i1 %2966, label %2989, label %2967

2967:                                             ; preds = %2962
  %2968 = icmp eq i32 %2963, %2965
  br i1 %2968, label %2969, label %3005

2969:                                             ; preds = %2967
  store i32 0, ptr %4, align 4, !tbaa !5
  %2970 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %2970, ptr %6, align 4, !tbaa !5
  br i1 %2737, label %3012, label %2971

2971:                                             ; preds = %2969, %2999
  %2972 = phi i64 [ %3003, %2999 ], [ 1, %2969 ]
  %2973 = getelementptr inbounds i32, ptr %4, i64 %2972
  %2974 = load i32, ptr %2973, align 4, !tbaa !5
  %2975 = getelementptr inbounds i32, ptr %12, i64 %2972
  %2976 = load i32, ptr %2975, align 4, !tbaa !5
  %2977 = add nsw i32 %2976, -1
  %2978 = icmp slt i32 %2974, %2977
  br i1 %2978, label %2979, label %2997

2979:                                             ; preds = %2971
  br i1 %2966, label %2989, label %2980

2980:                                             ; preds = %2979
  %2981 = shl i64 %2972, 32
  %2982 = add i64 %2981, -4294967296
  %2983 = ashr exact i64 %2982, 32
  %2984 = getelementptr inbounds i32, ptr %7, i64 %2983
  %2985 = load i32, ptr %2984, align 4, !tbaa !5
  %2986 = getelementptr inbounds i32, ptr %6, i64 %2972
  %2987 = load i32, ptr %2986, align 4, !tbaa !5
  %2988 = add nsw i32 %2987, %2985
  store i32 %2988, ptr %2986, align 4, !tbaa !5
  br label %3007

2989:                                             ; preds = %2962, %2979
  %2990 = phi i32 [ %2974, %2979 ], [ %2963, %2962 ]
  %2991 = phi ptr [ %2973, %2979 ], [ %4, %2962 ]
  %2992 = phi i64 [ %2972, %2979 ], [ 0, %2962 ]
  %2993 = add nsw i32 %2990, 1
  store i32 %2993, ptr %2991, align 4, !tbaa !5
  %2994 = getelementptr inbounds i32, ptr %7, i64 %2992
  %2995 = load i32, ptr %2994, align 4, !tbaa !5
  %2996 = getelementptr inbounds i32, ptr %6, i64 %2992
  br label %3007

2997:                                             ; preds = %2971
  %2998 = icmp eq i32 %2974, %2977
  br i1 %2998, label %2999, label %3005

2999:                                             ; preds = %2997
  store i32 0, ptr %2973, align 4, !tbaa !5
  %3000 = getelementptr inbounds i32, ptr %8, i64 %2972
  %3001 = load i32, ptr %3000, align 4, !tbaa !5
  %3002 = getelementptr inbounds i32, ptr %6, i64 %2972
  store i32 %3001, ptr %3002, align 4, !tbaa !5
  %3003 = add nuw nsw i64 %2972, 1
  %3004 = icmp eq i64 %3003, %2735
  br i1 %3004, label %3012, label %2971, !llvm.loop !1402

3005:                                             ; preds = %2967, %2997
  %3006 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3007:                                             ; preds = %2980, %2989
  %3008 = phi ptr [ %2996, %2989 ], [ %2973, %2980 ]
  %3009 = phi i32 [ %2995, %2989 ], [ 1, %2980 ]
  %3010 = load i32, ptr %3008, align 4, !tbaa !5
  %3011 = add nsw i32 %3010, %3009
  store i32 %3011, ptr %3008, align 4, !tbaa !5
  br label %3012

3012:                                             ; preds = %2999, %3007, %2969, %2954
  %3013 = icmp eq i32 %2961, %5
  br i1 %3013, label %5401, label %2877, !llvm.loop !1403

3014:                                             ; preds = %2427
  %3015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1976, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

3016:                                             ; preds = %18
  %3017 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3018 = load ptr, ptr %3017, align 8, !tbaa !9
  %3019 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3020 = load ptr, ptr %3019, align 8, !tbaa !9
  store i64 0, ptr %3020, align 8, !tbaa !120
  %3021 = icmp eq i32 %13, 0
  br i1 %3021, label %3022, label %3025

3022:                                             ; preds = %3016
  %3023 = load double, ptr %3018, align 8, !tbaa !18
  %3024 = fptosi double %3023 to i64
  store i64 %3024, ptr %3020, align 8, !tbaa !120
  br label %5401

3025:                                             ; preds = %3016
  switch i32 %1, label %3615 [
    i32 1, label %3026
    i32 0, label %3325
  ]

3026:                                             ; preds = %3025
  %3027 = getelementptr inbounds i32, ptr %3, i64 %19
  %3028 = load i32, ptr %3027, align 4, !tbaa !5
  %3029 = icmp eq i32 %3028, 0
  %3030 = icmp sgt i32 %5, 0
  br i1 %3029, label %3040, label %3031

3031:                                             ; preds = %3026
  br i1 %3030, label %3032, label %5401

3032:                                             ; preds = %3031
  %3033 = icmp sgt i32 %13, 1
  %3034 = icmp sgt i32 %13, 0
  %3035 = add i32 %13, -2
  %3036 = zext i32 %3035 to i64
  %3037 = zext i32 %13 to i64
  %3038 = add nuw i32 %5, 1
  %3039 = icmp eq i32 %13, 1
  br label %3185

3040:                                             ; preds = %3026
  br i1 %3030, label %3041, label %5401

3041:                                             ; preds = %3040
  %3042 = icmp sgt i32 %13, 1
  %3043 = icmp sgt i32 %13, 0
  %3044 = add i32 %13, -2
  %3045 = zext i32 %3044 to i64
  %3046 = zext i32 %13 to i64
  %3047 = add nuw i32 %5, 1
  %3048 = icmp eq i32 %13, 1
  br label %3049

3049:                                             ; preds = %3041, %3183
  %3050 = phi i64 [ 0, %3041 ], [ %3134, %3183 ]
  %3051 = phi i32 [ 0, %3041 ], [ %3135, %3183 ]
  %3052 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3042, label %3053, label %3122

3053:                                             ; preds = %3049, %3112
  %3054 = phi i32 [ %3121, %3112 ], [ 0, %3049 ]
  %3055 = phi i64 [ %3063, %3112 ], [ %3046, %3049 ]
  %3056 = phi i64 [ %3120, %3112 ], [ %3045, %3049 ]
  %3057 = phi i32 [ %3118, %3112 ], [ %3052, %3049 ]
  %3058 = sub i32 %3044, %3054
  %3059 = tail call i32 @llvm.smin.i32(i32 %3058, i32 0)
  %3060 = sub i32 %3058, %3059
  %3061 = zext i32 %3060 to i64
  %3062 = add nuw nsw i64 %3061, 1
  %3063 = add nsw i64 %3055, -1
  %3064 = icmp ult i32 %3060, 31
  br i1 %3064, label %3100, label %3065

3065:                                             ; preds = %3053
  %3066 = and i64 %3062, 8589934560
  %3067 = sub i64 %3056, %3066
  br label %3068

3068:                                             ; preds = %3068, %3065
  %3069 = phi i64 [ 0, %3065 ], [ %3092, %3068 ]
  %3070 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3088, %3068 ]
  %3071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3089, %3068 ]
  %3072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3090, %3068 ]
  %3073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3065 ], [ %3091, %3068 ]
  %3074 = sub i64 %3056, %3069
  %3075 = getelementptr inbounds i32, ptr %9, i64 %3074
  %3076 = getelementptr inbounds i32, ptr %3075, i64 -7
  %3077 = load <8 x i32>, ptr %3076, align 4, !tbaa !5
  %3078 = shufflevector <8 x i32> %3077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3079 = getelementptr inbounds i32, ptr %3075, i64 -15
  %3080 = load <8 x i32>, ptr %3079, align 4, !tbaa !5
  %3081 = shufflevector <8 x i32> %3080, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3082 = getelementptr inbounds i32, ptr %3075, i64 -23
  %3083 = load <8 x i32>, ptr %3082, align 4, !tbaa !5
  %3084 = shufflevector <8 x i32> %3083, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3085 = getelementptr inbounds i32, ptr %3075, i64 -31
  %3086 = load <8 x i32>, ptr %3085, align 4, !tbaa !5
  %3087 = shufflevector <8 x i32> %3086, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3088 = mul <8 x i32> %3078, %3070
  %3089 = mul <8 x i32> %3081, %3071
  %3090 = mul <8 x i32> %3084, %3072
  %3091 = mul <8 x i32> %3087, %3073
  %3092 = add nuw i64 %3069, 32
  %3093 = icmp eq i64 %3092, %3066
  br i1 %3093, label %3094, label %3068, !llvm.loop !1404

3094:                                             ; preds = %3068
  %3095 = mul <8 x i32> %3089, %3088
  %3096 = mul <8 x i32> %3090, %3095
  %3097 = mul <8 x i32> %3091, %3096
  %3098 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3097)
  %3099 = icmp eq i64 %3062, %3066
  br i1 %3099, label %3112, label %3100

3100:                                             ; preds = %3053, %3094
  %3101 = phi i64 [ %3056, %3053 ], [ %3067, %3094 ]
  %3102 = phi i32 [ 1, %3053 ], [ %3098, %3094 ]
  br label %3103

3103:                                             ; preds = %3100, %3103
  %3104 = phi i64 [ %3109, %3103 ], [ %3101, %3100 ]
  %3105 = phi i32 [ %3108, %3103 ], [ %3102, %3100 ]
  %3106 = getelementptr inbounds i32, ptr %9, i64 %3104
  %3107 = load i32, ptr %3106, align 4, !tbaa !5
  %3108 = mul nsw i32 %3107, %3105
  %3109 = add nsw i64 %3104, -1
  %3110 = trunc i64 %3104 to i32
  %3111 = icmp sgt i32 %3110, 0
  br i1 %3111, label %3103, label %3112, !llvm.loop !1405

3112:                                             ; preds = %3103, %3094
  %3113 = phi i32 [ %3098, %3094 ], [ %3108, %3103 ]
  %3114 = and i64 %3063, 4294967295
  %3115 = getelementptr inbounds i32, ptr %6, i64 %3114
  %3116 = load i32, ptr %3115, align 4, !tbaa !5
  %3117 = mul nsw i32 %3116, %3113
  %3118 = add nsw i32 %3117, %3057
  %3119 = icmp sgt i64 %3055, 2
  %3120 = add nsw i64 %3056, -1
  %3121 = add i32 %3054, 1
  br i1 %3119, label %3053, label %3122, !llvm.loop !1406

3122:                                             ; preds = %3112, %3049
  %3123 = phi i32 [ %3052, %3049 ], [ %3118, %3112 ]
  %3124 = sext i32 %3123 to i64
  %3125 = getelementptr inbounds double, ptr %2, i64 %3124
  %3126 = load double, ptr %3125, align 8, !tbaa !18
  %3127 = getelementptr inbounds double, ptr %3018, i64 %3124
  %3128 = load double, ptr %3127, align 8, !tbaa !18
  %3129 = fptosi double %3128 to i64
  %3130 = sitofp i64 %3050 to double
  %3131 = sitofp i64 %3129 to double
  %3132 = fmul fast double %3126, %3131
  %3133 = fadd fast double %3132, %3130
  %3134 = fptosi double %3133 to i64
  %3135 = add nuw nsw i32 %3051, 1
  br i1 %3043, label %3136, label %3183

3136:                                             ; preds = %3122
  %3137 = load i32, ptr %4, align 4, !tbaa !5
  %3138 = load i32, ptr %12, align 4, !tbaa !5
  %3139 = add nsw i32 %3138, -1
  %3140 = icmp slt i32 %3137, %3139
  br i1 %3140, label %3160, label %3141

3141:                                             ; preds = %3136
  %3142 = icmp eq i32 %3137, %3139
  br i1 %3142, label %3143, label %3176

3143:                                             ; preds = %3141
  store i32 0, ptr %4, align 4, !tbaa !5
  %3144 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3144, ptr %6, align 4, !tbaa !5
  br i1 %3048, label %3183, label %3145

3145:                                             ; preds = %3143, %3170
  %3146 = phi i64 [ %3174, %3170 ], [ 1, %3143 ]
  %3147 = getelementptr inbounds i32, ptr %4, i64 %3146
  %3148 = load i32, ptr %3147, align 4, !tbaa !5
  %3149 = getelementptr inbounds i32, ptr %12, i64 %3146
  %3150 = load i32, ptr %3149, align 4, !tbaa !5
  %3151 = add nsw i32 %3150, -1
  %3152 = icmp slt i32 %3148, %3151
  br i1 %3152, label %3153, label %3168

3153:                                             ; preds = %3145
  br i1 %3140, label %3160, label %3154

3154:                                             ; preds = %3153
  %3155 = getelementptr inbounds i32, ptr %7, i64 %3146
  %3156 = load i32, ptr %3155, align 4, !tbaa !5
  %3157 = getelementptr inbounds i32, ptr %6, i64 %3146
  %3158 = load i32, ptr %3157, align 4, !tbaa !5
  %3159 = add nsw i32 %3158, %3156
  store i32 %3159, ptr %3157, align 4, !tbaa !5
  br label %3178

3160:                                             ; preds = %3136, %3153
  %3161 = phi i32 [ %3148, %3153 ], [ %3137, %3136 ]
  %3162 = phi ptr [ %3147, %3153 ], [ %4, %3136 ]
  %3163 = phi i64 [ %3146, %3153 ], [ 0, %3136 ]
  %3164 = add nsw i32 %3161, 1
  store i32 %3164, ptr %3162, align 4, !tbaa !5
  %3165 = getelementptr inbounds i32, ptr %7, i64 %3163
  %3166 = load i32, ptr %3165, align 4, !tbaa !5
  %3167 = getelementptr inbounds i32, ptr %6, i64 %3163
  br label %3178

3168:                                             ; preds = %3145
  %3169 = icmp eq i32 %3148, %3151
  br i1 %3169, label %3170, label %3176

3170:                                             ; preds = %3168
  store i32 0, ptr %3147, align 4, !tbaa !5
  %3171 = getelementptr inbounds i32, ptr %8, i64 %3146
  %3172 = load i32, ptr %3171, align 4, !tbaa !5
  %3173 = getelementptr inbounds i32, ptr %6, i64 %3146
  store i32 %3172, ptr %3173, align 4, !tbaa !5
  %3174 = add nuw nsw i64 %3146, 1
  %3175 = icmp eq i64 %3174, %3046
  br i1 %3175, label %3183, label %3145, !llvm.loop !1407

3176:                                             ; preds = %3141, %3168
  store i64 %3134, ptr %3020, align 8, !tbaa !120
  %3177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3178:                                             ; preds = %3154, %3160
  %3179 = phi ptr [ %3167, %3160 ], [ %3147, %3154 ]
  %3180 = phi i32 [ %3166, %3160 ], [ 1, %3154 ]
  %3181 = load i32, ptr %3179, align 4, !tbaa !5
  %3182 = add nsw i32 %3181, %3180
  store i32 %3182, ptr %3179, align 4, !tbaa !5
  br label %3183

3183:                                             ; preds = %3170, %3178, %3143, %3122
  %3184 = icmp eq i32 %3135, %5
  br i1 %3184, label %5397, label %3049, !llvm.loop !1408

3185:                                             ; preds = %3032, %3323
  %3186 = phi i64 [ 0, %3032 ], [ %3271, %3323 ]
  %3187 = phi i32 [ 0, %3032 ], [ %3272, %3323 ]
  %3188 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3033, label %3189, label %3258

3189:                                             ; preds = %3185, %3248
  %3190 = phi i32 [ %3257, %3248 ], [ 0, %3185 ]
  %3191 = phi i64 [ %3199, %3248 ], [ %3037, %3185 ]
  %3192 = phi i64 [ %3256, %3248 ], [ %3036, %3185 ]
  %3193 = phi i32 [ %3254, %3248 ], [ %3188, %3185 ]
  %3194 = sub i32 %3035, %3190
  %3195 = tail call i32 @llvm.smin.i32(i32 %3194, i32 0)
  %3196 = sub i32 %3194, %3195
  %3197 = zext i32 %3196 to i64
  %3198 = add nuw nsw i64 %3197, 1
  %3199 = add nsw i64 %3191, -1
  %3200 = icmp ult i32 %3196, 31
  br i1 %3200, label %3236, label %3201

3201:                                             ; preds = %3189
  %3202 = and i64 %3198, 8589934560
  %3203 = sub i64 %3192, %3202
  br label %3204

3204:                                             ; preds = %3204, %3201
  %3205 = phi i64 [ 0, %3201 ], [ %3228, %3204 ]
  %3206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3224, %3204 ]
  %3207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3225, %3204 ]
  %3208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3226, %3204 ]
  %3209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3201 ], [ %3227, %3204 ]
  %3210 = sub i64 %3192, %3205
  %3211 = getelementptr inbounds i32, ptr %11, i64 %3210
  %3212 = getelementptr inbounds i32, ptr %3211, i64 -7
  %3213 = load <8 x i32>, ptr %3212, align 4, !tbaa !5
  %3214 = shufflevector <8 x i32> %3213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3215 = getelementptr inbounds i32, ptr %3211, i64 -15
  %3216 = load <8 x i32>, ptr %3215, align 4, !tbaa !5
  %3217 = shufflevector <8 x i32> %3216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3218 = getelementptr inbounds i32, ptr %3211, i64 -23
  %3219 = load <8 x i32>, ptr %3218, align 4, !tbaa !5
  %3220 = shufflevector <8 x i32> %3219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3221 = getelementptr inbounds i32, ptr %3211, i64 -31
  %3222 = load <8 x i32>, ptr %3221, align 4, !tbaa !5
  %3223 = shufflevector <8 x i32> %3222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3224 = mul <8 x i32> %3214, %3206
  %3225 = mul <8 x i32> %3217, %3207
  %3226 = mul <8 x i32> %3220, %3208
  %3227 = mul <8 x i32> %3223, %3209
  %3228 = add nuw i64 %3205, 32
  %3229 = icmp eq i64 %3228, %3202
  br i1 %3229, label %3230, label %3204, !llvm.loop !1409

3230:                                             ; preds = %3204
  %3231 = mul <8 x i32> %3225, %3224
  %3232 = mul <8 x i32> %3226, %3231
  %3233 = mul <8 x i32> %3227, %3232
  %3234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3233)
  %3235 = icmp eq i64 %3198, %3202
  br i1 %3235, label %3248, label %3236

3236:                                             ; preds = %3189, %3230
  %3237 = phi i64 [ %3192, %3189 ], [ %3203, %3230 ]
  %3238 = phi i32 [ 1, %3189 ], [ %3234, %3230 ]
  br label %3239

3239:                                             ; preds = %3236, %3239
  %3240 = phi i64 [ %3245, %3239 ], [ %3237, %3236 ]
  %3241 = phi i32 [ %3244, %3239 ], [ %3238, %3236 ]
  %3242 = getelementptr inbounds i32, ptr %11, i64 %3240
  %3243 = load i32, ptr %3242, align 4, !tbaa !5
  %3244 = mul nsw i32 %3243, %3241
  %3245 = add nsw i64 %3240, -1
  %3246 = trunc i64 %3240 to i32
  %3247 = icmp sgt i32 %3246, 0
  br i1 %3247, label %3239, label %3248, !llvm.loop !1410

3248:                                             ; preds = %3239, %3230
  %3249 = phi i32 [ %3234, %3230 ], [ %3244, %3239 ]
  %3250 = and i64 %3199, 4294967295
  %3251 = getelementptr inbounds i32, ptr %6, i64 %3250
  %3252 = load i32, ptr %3251, align 4, !tbaa !5
  %3253 = mul nsw i32 %3252, %3249
  %3254 = add nsw i32 %3253, %3193
  %3255 = icmp sgt i64 %3191, 2
  %3256 = add nsw i64 %3192, -1
  %3257 = add i32 %3190, 1
  br i1 %3255, label %3189, label %3258, !llvm.loop !1411

3258:                                             ; preds = %3248, %3185
  %3259 = phi i32 [ %3188, %3185 ], [ %3254, %3248 ]
  %3260 = icmp slt i32 %3259, %5
  br i1 %3260, label %3263, label %3261

3261:                                             ; preds = %3258
  %3262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

3263:                                             ; preds = %3258
  %3264 = sext i32 %3259 to i64
  %3265 = getelementptr inbounds double, ptr %3018, i64 %3264
  %3266 = load double, ptr %3265, align 8, !tbaa !18
  %3267 = fptosi double %3266 to i64
  %3268 = sitofp i64 %3186 to double
  %3269 = sitofp i64 %3267 to double
  %3270 = fadd fast double %3268, %3269
  %3271 = fptosi double %3270 to i64
  store i64 %3271, ptr %3020, align 8, !tbaa !120
  %3272 = add nuw nsw i32 %3187, 1
  br i1 %3034, label %3273, label %3323

3273:                                             ; preds = %3263
  %3274 = load i32, ptr %4, align 4, !tbaa !5
  %3275 = load i32, ptr %12, align 4, !tbaa !5
  %3276 = add nsw i32 %3275, -1
  %3277 = icmp slt i32 %3274, %3276
  br i1 %3277, label %3300, label %3278

3278:                                             ; preds = %3273
  %3279 = icmp eq i32 %3274, %3276
  br i1 %3279, label %3280, label %3316

3280:                                             ; preds = %3278
  store i32 0, ptr %4, align 4, !tbaa !5
  %3281 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3281, ptr %6, align 4, !tbaa !5
  br i1 %3039, label %3323, label %3282

3282:                                             ; preds = %3280, %3310
  %3283 = phi i64 [ %3314, %3310 ], [ 1, %3280 ]
  %3284 = getelementptr inbounds i32, ptr %4, i64 %3283
  %3285 = load i32, ptr %3284, align 4, !tbaa !5
  %3286 = getelementptr inbounds i32, ptr %12, i64 %3283
  %3287 = load i32, ptr %3286, align 4, !tbaa !5
  %3288 = add nsw i32 %3287, -1
  %3289 = icmp slt i32 %3285, %3288
  br i1 %3289, label %3290, label %3308

3290:                                             ; preds = %3282
  br i1 %3277, label %3300, label %3291

3291:                                             ; preds = %3290
  %3292 = shl i64 %3283, 32
  %3293 = add i64 %3292, -4294967296
  %3294 = ashr exact i64 %3293, 32
  %3295 = getelementptr inbounds i32, ptr %7, i64 %3294
  %3296 = load i32, ptr %3295, align 4, !tbaa !5
  %3297 = getelementptr inbounds i32, ptr %6, i64 %3283
  %3298 = load i32, ptr %3297, align 4, !tbaa !5
  %3299 = add nsw i32 %3298, %3296
  store i32 %3299, ptr %3297, align 4, !tbaa !5
  br label %3318

3300:                                             ; preds = %3273, %3290
  %3301 = phi i32 [ %3285, %3290 ], [ %3274, %3273 ]
  %3302 = phi ptr [ %3284, %3290 ], [ %4, %3273 ]
  %3303 = phi i64 [ %3283, %3290 ], [ 0, %3273 ]
  %3304 = add nsw i32 %3301, 1
  store i32 %3304, ptr %3302, align 4, !tbaa !5
  %3305 = getelementptr inbounds i32, ptr %7, i64 %3303
  %3306 = load i32, ptr %3305, align 4, !tbaa !5
  %3307 = getelementptr inbounds i32, ptr %6, i64 %3303
  br label %3318

3308:                                             ; preds = %3282
  %3309 = icmp eq i32 %3285, %3288
  br i1 %3309, label %3310, label %3316

3310:                                             ; preds = %3308
  store i32 0, ptr %3284, align 4, !tbaa !5
  %3311 = getelementptr inbounds i32, ptr %8, i64 %3283
  %3312 = load i32, ptr %3311, align 4, !tbaa !5
  %3313 = getelementptr inbounds i32, ptr %6, i64 %3283
  store i32 %3312, ptr %3313, align 4, !tbaa !5
  %3314 = add nuw nsw i64 %3283, 1
  %3315 = icmp eq i64 %3314, %3037
  br i1 %3315, label %3323, label %3282, !llvm.loop !1412

3316:                                             ; preds = %3278, %3308
  %3317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3318:                                             ; preds = %3291, %3300
  %3319 = phi ptr [ %3307, %3300 ], [ %3284, %3291 ]
  %3320 = phi i32 [ %3306, %3300 ], [ 1, %3291 ]
  %3321 = load i32, ptr %3319, align 4, !tbaa !5
  %3322 = add nsw i32 %3321, %3320
  store i32 %3322, ptr %3319, align 4, !tbaa !5
  br label %3323

3323:                                             ; preds = %3310, %3318, %3280, %3263
  %3324 = icmp eq i32 %3272, %5
  br i1 %3324, label %5401, label %3185, !llvm.loop !1413

3325:                                             ; preds = %3025
  %3326 = getelementptr inbounds i32, ptr %3, i64 %19
  %3327 = load i32, ptr %3326, align 4, !tbaa !5
  %3328 = icmp eq i32 %3327, 0
  %3329 = icmp sgt i32 %5, 0
  br i1 %3328, label %3339, label %3330

3330:                                             ; preds = %3325
  br i1 %3329, label %3331, label %5401

3331:                                             ; preds = %3330
  %3332 = icmp sgt i32 %13, 1
  %3333 = icmp sgt i32 %13, 0
  %3334 = add i32 %13, -2
  %3335 = zext i32 %3334 to i64
  %3336 = zext i32 %13 to i64
  %3337 = add nuw i32 %5, 1
  %3338 = icmp eq i32 %13, 1
  br label %3478

3339:                                             ; preds = %3325
  br i1 %3329, label %3340, label %5401

3340:                                             ; preds = %3339
  %3341 = icmp sgt i32 %13, 1
  %3342 = icmp sgt i32 %13, 0
  %3343 = add i32 %13, -2
  %3344 = zext i32 %3343 to i64
  %3345 = zext i32 %13 to i64
  %3346 = add nuw i32 %5, 1
  %3347 = icmp eq i32 %13, 1
  br label %3348

3348:                                             ; preds = %3340, %3476
  %3349 = phi i64 [ 0, %3340 ], [ %3427, %3476 ]
  %3350 = phi i32 [ 0, %3340 ], [ %3428, %3476 ]
  %3351 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3341, label %3352, label %3421

3352:                                             ; preds = %3348, %3411
  %3353 = phi i32 [ %3420, %3411 ], [ 0, %3348 ]
  %3354 = phi i64 [ %3362, %3411 ], [ %3345, %3348 ]
  %3355 = phi i64 [ %3419, %3411 ], [ %3344, %3348 ]
  %3356 = phi i32 [ %3417, %3411 ], [ %3351, %3348 ]
  %3357 = sub i32 %3343, %3353
  %3358 = tail call i32 @llvm.smin.i32(i32 %3357, i32 0)
  %3359 = sub i32 %3357, %3358
  %3360 = zext i32 %3359 to i64
  %3361 = add nuw nsw i64 %3360, 1
  %3362 = add nsw i64 %3354, -1
  %3363 = icmp ult i32 %3359, 31
  br i1 %3363, label %3399, label %3364

3364:                                             ; preds = %3352
  %3365 = and i64 %3361, 8589934560
  %3366 = sub i64 %3355, %3365
  br label %3367

3367:                                             ; preds = %3367, %3364
  %3368 = phi i64 [ 0, %3364 ], [ %3391, %3367 ]
  %3369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3387, %3367 ]
  %3370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3388, %3367 ]
  %3371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3389, %3367 ]
  %3372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3364 ], [ %3390, %3367 ]
  %3373 = sub i64 %3355, %3368
  %3374 = getelementptr inbounds i32, ptr %9, i64 %3373
  %3375 = getelementptr inbounds i32, ptr %3374, i64 -7
  %3376 = load <8 x i32>, ptr %3375, align 4, !tbaa !5
  %3377 = shufflevector <8 x i32> %3376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3378 = getelementptr inbounds i32, ptr %3374, i64 -15
  %3379 = load <8 x i32>, ptr %3378, align 4, !tbaa !5
  %3380 = shufflevector <8 x i32> %3379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3381 = getelementptr inbounds i32, ptr %3374, i64 -23
  %3382 = load <8 x i32>, ptr %3381, align 4, !tbaa !5
  %3383 = shufflevector <8 x i32> %3382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3384 = getelementptr inbounds i32, ptr %3374, i64 -31
  %3385 = load <8 x i32>, ptr %3384, align 4, !tbaa !5
  %3386 = shufflevector <8 x i32> %3385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3387 = mul <8 x i32> %3377, %3369
  %3388 = mul <8 x i32> %3380, %3370
  %3389 = mul <8 x i32> %3383, %3371
  %3390 = mul <8 x i32> %3386, %3372
  %3391 = add nuw i64 %3368, 32
  %3392 = icmp eq i64 %3391, %3365
  br i1 %3392, label %3393, label %3367, !llvm.loop !1414

3393:                                             ; preds = %3367
  %3394 = mul <8 x i32> %3388, %3387
  %3395 = mul <8 x i32> %3389, %3394
  %3396 = mul <8 x i32> %3390, %3395
  %3397 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3396)
  %3398 = icmp eq i64 %3361, %3365
  br i1 %3398, label %3411, label %3399

3399:                                             ; preds = %3352, %3393
  %3400 = phi i64 [ %3355, %3352 ], [ %3366, %3393 ]
  %3401 = phi i32 [ 1, %3352 ], [ %3397, %3393 ]
  br label %3402

3402:                                             ; preds = %3399, %3402
  %3403 = phi i64 [ %3408, %3402 ], [ %3400, %3399 ]
  %3404 = phi i32 [ %3407, %3402 ], [ %3401, %3399 ]
  %3405 = getelementptr inbounds i32, ptr %9, i64 %3403
  %3406 = load i32, ptr %3405, align 4, !tbaa !5
  %3407 = mul nsw i32 %3406, %3404
  %3408 = add nsw i64 %3403, -1
  %3409 = trunc i64 %3403 to i32
  %3410 = icmp sgt i32 %3409, 0
  br i1 %3410, label %3402, label %3411, !llvm.loop !1415

3411:                                             ; preds = %3402, %3393
  %3412 = phi i32 [ %3397, %3393 ], [ %3407, %3402 ]
  %3413 = and i64 %3362, 4294967295
  %3414 = getelementptr inbounds i32, ptr %6, i64 %3413
  %3415 = load i32, ptr %3414, align 4, !tbaa !5
  %3416 = mul nsw i32 %3415, %3412
  %3417 = add nsw i32 %3416, %3356
  %3418 = icmp sgt i64 %3354, 2
  %3419 = add nsw i64 %3355, -1
  %3420 = add i32 %3353, 1
  br i1 %3418, label %3352, label %3421, !llvm.loop !1416

3421:                                             ; preds = %3411, %3348
  %3422 = phi i32 [ %3351, %3348 ], [ %3417, %3411 ]
  %3423 = sext i32 %3422 to i64
  %3424 = getelementptr inbounds double, ptr %3018, i64 %3423
  %3425 = load double, ptr %3424, align 8, !tbaa !18
  %3426 = fptosi double %3425 to i64
  %3427 = add nsw i64 %3349, %3426
  %3428 = add nuw nsw i32 %3350, 1
  br i1 %3342, label %3429, label %3476

3429:                                             ; preds = %3421
  %3430 = load i32, ptr %4, align 4, !tbaa !5
  %3431 = load i32, ptr %12, align 4, !tbaa !5
  %3432 = add nsw i32 %3431, -1
  %3433 = icmp slt i32 %3430, %3432
  br i1 %3433, label %3453, label %3434

3434:                                             ; preds = %3429
  %3435 = icmp eq i32 %3430, %3432
  br i1 %3435, label %3436, label %3469

3436:                                             ; preds = %3434
  store i32 0, ptr %4, align 4, !tbaa !5
  %3437 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3437, ptr %6, align 4, !tbaa !5
  br i1 %3347, label %3476, label %3438

3438:                                             ; preds = %3436, %3463
  %3439 = phi i64 [ %3467, %3463 ], [ 1, %3436 ]
  %3440 = getelementptr inbounds i32, ptr %4, i64 %3439
  %3441 = load i32, ptr %3440, align 4, !tbaa !5
  %3442 = getelementptr inbounds i32, ptr %12, i64 %3439
  %3443 = load i32, ptr %3442, align 4, !tbaa !5
  %3444 = add nsw i32 %3443, -1
  %3445 = icmp slt i32 %3441, %3444
  br i1 %3445, label %3446, label %3461

3446:                                             ; preds = %3438
  br i1 %3433, label %3453, label %3447

3447:                                             ; preds = %3446
  %3448 = getelementptr inbounds i32, ptr %7, i64 %3439
  %3449 = load i32, ptr %3448, align 4, !tbaa !5
  %3450 = getelementptr inbounds i32, ptr %6, i64 %3439
  %3451 = load i32, ptr %3450, align 4, !tbaa !5
  %3452 = add nsw i32 %3451, %3449
  store i32 %3452, ptr %3450, align 4, !tbaa !5
  br label %3471

3453:                                             ; preds = %3429, %3446
  %3454 = phi i32 [ %3441, %3446 ], [ %3430, %3429 ]
  %3455 = phi ptr [ %3440, %3446 ], [ %4, %3429 ]
  %3456 = phi i64 [ %3439, %3446 ], [ 0, %3429 ]
  %3457 = add nsw i32 %3454, 1
  store i32 %3457, ptr %3455, align 4, !tbaa !5
  %3458 = getelementptr inbounds i32, ptr %7, i64 %3456
  %3459 = load i32, ptr %3458, align 4, !tbaa !5
  %3460 = getelementptr inbounds i32, ptr %6, i64 %3456
  br label %3471

3461:                                             ; preds = %3438
  %3462 = icmp eq i32 %3441, %3444
  br i1 %3462, label %3463, label %3469

3463:                                             ; preds = %3461
  store i32 0, ptr %3440, align 4, !tbaa !5
  %3464 = getelementptr inbounds i32, ptr %8, i64 %3439
  %3465 = load i32, ptr %3464, align 4, !tbaa !5
  %3466 = getelementptr inbounds i32, ptr %6, i64 %3439
  store i32 %3465, ptr %3466, align 4, !tbaa !5
  %3467 = add nuw nsw i64 %3439, 1
  %3468 = icmp eq i64 %3467, %3345
  br i1 %3468, label %3476, label %3438, !llvm.loop !1417

3469:                                             ; preds = %3434, %3461
  store i64 %3427, ptr %3020, align 8, !tbaa !120
  %3470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3471:                                             ; preds = %3447, %3453
  %3472 = phi ptr [ %3460, %3453 ], [ %3440, %3447 ]
  %3473 = phi i32 [ %3459, %3453 ], [ 1, %3447 ]
  %3474 = load i32, ptr %3472, align 4, !tbaa !5
  %3475 = add nsw i32 %3474, %3473
  store i32 %3475, ptr %3472, align 4, !tbaa !5
  br label %3476

3476:                                             ; preds = %3463, %3471, %3436, %3421
  %3477 = icmp eq i32 %3428, %5
  br i1 %3477, label %5398, label %3348, !llvm.loop !1418

3478:                                             ; preds = %3331, %3613
  %3479 = phi i64 [ 0, %3331 ], [ %3561, %3613 ]
  %3480 = phi i32 [ 0, %3331 ], [ %3562, %3613 ]
  %3481 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3332, label %3482, label %3551

3482:                                             ; preds = %3478, %3541
  %3483 = phi i32 [ %3550, %3541 ], [ 0, %3478 ]
  %3484 = phi i64 [ %3492, %3541 ], [ %3336, %3478 ]
  %3485 = phi i64 [ %3549, %3541 ], [ %3335, %3478 ]
  %3486 = phi i32 [ %3547, %3541 ], [ %3481, %3478 ]
  %3487 = sub i32 %3334, %3483
  %3488 = tail call i32 @llvm.smin.i32(i32 %3487, i32 0)
  %3489 = sub i32 %3487, %3488
  %3490 = zext i32 %3489 to i64
  %3491 = add nuw nsw i64 %3490, 1
  %3492 = add nsw i64 %3484, -1
  %3493 = icmp ult i32 %3489, 31
  br i1 %3493, label %3529, label %3494

3494:                                             ; preds = %3482
  %3495 = and i64 %3491, 8589934560
  %3496 = sub i64 %3485, %3495
  br label %3497

3497:                                             ; preds = %3497, %3494
  %3498 = phi i64 [ 0, %3494 ], [ %3521, %3497 ]
  %3499 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3517, %3497 ]
  %3500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3518, %3497 ]
  %3501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3519, %3497 ]
  %3502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3494 ], [ %3520, %3497 ]
  %3503 = sub i64 %3485, %3498
  %3504 = getelementptr inbounds i32, ptr %11, i64 %3503
  %3505 = getelementptr inbounds i32, ptr %3504, i64 -7
  %3506 = load <8 x i32>, ptr %3505, align 4, !tbaa !5
  %3507 = shufflevector <8 x i32> %3506, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3508 = getelementptr inbounds i32, ptr %3504, i64 -15
  %3509 = load <8 x i32>, ptr %3508, align 4, !tbaa !5
  %3510 = shufflevector <8 x i32> %3509, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3511 = getelementptr inbounds i32, ptr %3504, i64 -23
  %3512 = load <8 x i32>, ptr %3511, align 4, !tbaa !5
  %3513 = shufflevector <8 x i32> %3512, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3514 = getelementptr inbounds i32, ptr %3504, i64 -31
  %3515 = load <8 x i32>, ptr %3514, align 4, !tbaa !5
  %3516 = shufflevector <8 x i32> %3515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3517 = mul <8 x i32> %3507, %3499
  %3518 = mul <8 x i32> %3510, %3500
  %3519 = mul <8 x i32> %3513, %3501
  %3520 = mul <8 x i32> %3516, %3502
  %3521 = add nuw i64 %3498, 32
  %3522 = icmp eq i64 %3521, %3495
  br i1 %3522, label %3523, label %3497, !llvm.loop !1419

3523:                                             ; preds = %3497
  %3524 = mul <8 x i32> %3518, %3517
  %3525 = mul <8 x i32> %3519, %3524
  %3526 = mul <8 x i32> %3520, %3525
  %3527 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3526)
  %3528 = icmp eq i64 %3491, %3495
  br i1 %3528, label %3541, label %3529

3529:                                             ; preds = %3482, %3523
  %3530 = phi i64 [ %3485, %3482 ], [ %3496, %3523 ]
  %3531 = phi i32 [ 1, %3482 ], [ %3527, %3523 ]
  br label %3532

3532:                                             ; preds = %3529, %3532
  %3533 = phi i64 [ %3538, %3532 ], [ %3530, %3529 ]
  %3534 = phi i32 [ %3537, %3532 ], [ %3531, %3529 ]
  %3535 = getelementptr inbounds i32, ptr %11, i64 %3533
  %3536 = load i32, ptr %3535, align 4, !tbaa !5
  %3537 = mul nsw i32 %3536, %3534
  %3538 = add nsw i64 %3533, -1
  %3539 = trunc i64 %3533 to i32
  %3540 = icmp sgt i32 %3539, 0
  br i1 %3540, label %3532, label %3541, !llvm.loop !1420

3541:                                             ; preds = %3532, %3523
  %3542 = phi i32 [ %3527, %3523 ], [ %3537, %3532 ]
  %3543 = and i64 %3492, 4294967295
  %3544 = getelementptr inbounds i32, ptr %6, i64 %3543
  %3545 = load i32, ptr %3544, align 4, !tbaa !5
  %3546 = mul nsw i32 %3545, %3542
  %3547 = add nsw i32 %3546, %3486
  %3548 = icmp sgt i64 %3484, 2
  %3549 = add nsw i64 %3485, -1
  %3550 = add i32 %3483, 1
  br i1 %3548, label %3482, label %3551, !llvm.loop !1421

3551:                                             ; preds = %3541, %3478
  %3552 = phi i32 [ %3481, %3478 ], [ %3547, %3541 ]
  %3553 = icmp slt i32 %3552, %5
  br i1 %3553, label %3556, label %3554

3554:                                             ; preds = %3551
  %3555 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

3556:                                             ; preds = %3551
  %3557 = sext i32 %3552 to i64
  %3558 = getelementptr inbounds double, ptr %3018, i64 %3557
  %3559 = load double, ptr %3558, align 8, !tbaa !18
  %3560 = fptosi double %3559 to i64
  %3561 = add nsw i64 %3479, %3560
  store i64 %3561, ptr %3020, align 8, !tbaa !120
  %3562 = add nuw nsw i32 %3480, 1
  br i1 %3333, label %3563, label %3613

3563:                                             ; preds = %3556
  %3564 = load i32, ptr %4, align 4, !tbaa !5
  %3565 = load i32, ptr %12, align 4, !tbaa !5
  %3566 = add nsw i32 %3565, -1
  %3567 = icmp slt i32 %3564, %3566
  br i1 %3567, label %3590, label %3568

3568:                                             ; preds = %3563
  %3569 = icmp eq i32 %3564, %3566
  br i1 %3569, label %3570, label %3606

3570:                                             ; preds = %3568
  store i32 0, ptr %4, align 4, !tbaa !5
  %3571 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3571, ptr %6, align 4, !tbaa !5
  br i1 %3338, label %3613, label %3572

3572:                                             ; preds = %3570, %3600
  %3573 = phi i64 [ %3604, %3600 ], [ 1, %3570 ]
  %3574 = getelementptr inbounds i32, ptr %4, i64 %3573
  %3575 = load i32, ptr %3574, align 4, !tbaa !5
  %3576 = getelementptr inbounds i32, ptr %12, i64 %3573
  %3577 = load i32, ptr %3576, align 4, !tbaa !5
  %3578 = add nsw i32 %3577, -1
  %3579 = icmp slt i32 %3575, %3578
  br i1 %3579, label %3580, label %3598

3580:                                             ; preds = %3572
  br i1 %3567, label %3590, label %3581

3581:                                             ; preds = %3580
  %3582 = shl i64 %3573, 32
  %3583 = add i64 %3582, -4294967296
  %3584 = ashr exact i64 %3583, 32
  %3585 = getelementptr inbounds i32, ptr %7, i64 %3584
  %3586 = load i32, ptr %3585, align 4, !tbaa !5
  %3587 = getelementptr inbounds i32, ptr %6, i64 %3573
  %3588 = load i32, ptr %3587, align 4, !tbaa !5
  %3589 = add nsw i32 %3588, %3586
  store i32 %3589, ptr %3587, align 4, !tbaa !5
  br label %3608

3590:                                             ; preds = %3563, %3580
  %3591 = phi i32 [ %3575, %3580 ], [ %3564, %3563 ]
  %3592 = phi ptr [ %3574, %3580 ], [ %4, %3563 ]
  %3593 = phi i64 [ %3573, %3580 ], [ 0, %3563 ]
  %3594 = add nsw i32 %3591, 1
  store i32 %3594, ptr %3592, align 4, !tbaa !5
  %3595 = getelementptr inbounds i32, ptr %7, i64 %3593
  %3596 = load i32, ptr %3595, align 4, !tbaa !5
  %3597 = getelementptr inbounds i32, ptr %6, i64 %3593
  br label %3608

3598:                                             ; preds = %3572
  %3599 = icmp eq i32 %3575, %3578
  br i1 %3599, label %3600, label %3606

3600:                                             ; preds = %3598
  store i32 0, ptr %3574, align 4, !tbaa !5
  %3601 = getelementptr inbounds i32, ptr %8, i64 %3573
  %3602 = load i32, ptr %3601, align 4, !tbaa !5
  %3603 = getelementptr inbounds i32, ptr %6, i64 %3573
  store i32 %3602, ptr %3603, align 4, !tbaa !5
  %3604 = add nuw nsw i64 %3573, 1
  %3605 = icmp eq i64 %3604, %3336
  br i1 %3605, label %3613, label %3572, !llvm.loop !1422

3606:                                             ; preds = %3568, %3598
  %3607 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3608:                                             ; preds = %3581, %3590
  %3609 = phi ptr [ %3597, %3590 ], [ %3574, %3581 ]
  %3610 = phi i32 [ %3596, %3590 ], [ 1, %3581 ]
  %3611 = load i32, ptr %3609, align 4, !tbaa !5
  %3612 = add nsw i32 %3611, %3610
  store i32 %3612, ptr %3609, align 4, !tbaa !5
  br label %3613

3613:                                             ; preds = %3600, %3608, %3570, %3556
  %3614 = icmp eq i32 %3562, %5
  br i1 %3614, label %5401, label %3478, !llvm.loop !1423

3615:                                             ; preds = %3025
  %3616 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1981, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

3617:                                             ; preds = %18
  %3618 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3619 = load ptr, ptr %3618, align 8, !tbaa !9
  %3620 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3621 = load ptr, ptr %3620, align 8, !tbaa !9
  store double 0.000000e+00, ptr %3621, align 8, !tbaa !18
  %3622 = icmp eq i32 %13, 0
  br i1 %3622, label %3623, label %3625

3623:                                             ; preds = %3617
  %3624 = load double, ptr %3619, align 8, !tbaa !18
  store double %3624, ptr %3621, align 8, !tbaa !18
  br label %5401

3625:                                             ; preds = %3617
  switch i32 %1, label %4205 [
    i32 1, label %3626
    i32 0, label %3917
  ]

3626:                                             ; preds = %3625
  %3627 = getelementptr inbounds i32, ptr %3, i64 %19
  %3628 = load i32, ptr %3627, align 4, !tbaa !5
  %3629 = icmp eq i32 %3628, 0
  %3630 = icmp sgt i32 %5, 0
  br i1 %3629, label %3640, label %3631

3631:                                             ; preds = %3626
  br i1 %3630, label %3632, label %5401

3632:                                             ; preds = %3631
  %3633 = icmp sgt i32 %13, 1
  %3634 = icmp sgt i32 %13, 0
  %3635 = add i32 %13, -2
  %3636 = zext i32 %3635 to i64
  %3637 = zext i32 %13 to i64
  %3638 = add nuw i32 %5, 1
  %3639 = icmp eq i32 %13, 1
  br label %3781

3640:                                             ; preds = %3626
  br i1 %3630, label %3641, label %5401

3641:                                             ; preds = %3640
  %3642 = icmp sgt i32 %13, 1
  %3643 = icmp sgt i32 %13, 0
  %3644 = add i32 %13, -2
  %3645 = zext i32 %3644 to i64
  %3646 = zext i32 %13 to i64
  %3647 = add nuw i32 %5, 1
  %3648 = icmp eq i32 %13, 1
  br label %3649

3649:                                             ; preds = %3641, %3779
  %3650 = phi double [ 0.000000e+00, %3641 ], [ %3730, %3779 ]
  %3651 = phi i32 [ 0, %3641 ], [ %3731, %3779 ]
  %3652 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3642, label %3653, label %3722

3653:                                             ; preds = %3649, %3712
  %3654 = phi i32 [ %3721, %3712 ], [ 0, %3649 ]
  %3655 = phi i64 [ %3663, %3712 ], [ %3646, %3649 ]
  %3656 = phi i64 [ %3720, %3712 ], [ %3645, %3649 ]
  %3657 = phi i32 [ %3718, %3712 ], [ %3652, %3649 ]
  %3658 = sub i32 %3644, %3654
  %3659 = tail call i32 @llvm.smin.i32(i32 %3658, i32 0)
  %3660 = sub i32 %3658, %3659
  %3661 = zext i32 %3660 to i64
  %3662 = add nuw nsw i64 %3661, 1
  %3663 = add nsw i64 %3655, -1
  %3664 = icmp ult i32 %3660, 31
  br i1 %3664, label %3700, label %3665

3665:                                             ; preds = %3653
  %3666 = and i64 %3662, 8589934560
  %3667 = sub i64 %3656, %3666
  br label %3668

3668:                                             ; preds = %3668, %3665
  %3669 = phi i64 [ 0, %3665 ], [ %3692, %3668 ]
  %3670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3688, %3668 ]
  %3671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3689, %3668 ]
  %3672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3690, %3668 ]
  %3673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3665 ], [ %3691, %3668 ]
  %3674 = sub i64 %3656, %3669
  %3675 = getelementptr inbounds i32, ptr %9, i64 %3674
  %3676 = getelementptr inbounds i32, ptr %3675, i64 -7
  %3677 = load <8 x i32>, ptr %3676, align 4, !tbaa !5
  %3678 = shufflevector <8 x i32> %3677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3679 = getelementptr inbounds i32, ptr %3675, i64 -15
  %3680 = load <8 x i32>, ptr %3679, align 4, !tbaa !5
  %3681 = shufflevector <8 x i32> %3680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3682 = getelementptr inbounds i32, ptr %3675, i64 -23
  %3683 = load <8 x i32>, ptr %3682, align 4, !tbaa !5
  %3684 = shufflevector <8 x i32> %3683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3685 = getelementptr inbounds i32, ptr %3675, i64 -31
  %3686 = load <8 x i32>, ptr %3685, align 4, !tbaa !5
  %3687 = shufflevector <8 x i32> %3686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3688 = mul <8 x i32> %3678, %3670
  %3689 = mul <8 x i32> %3681, %3671
  %3690 = mul <8 x i32> %3684, %3672
  %3691 = mul <8 x i32> %3687, %3673
  %3692 = add nuw i64 %3669, 32
  %3693 = icmp eq i64 %3692, %3666
  br i1 %3693, label %3694, label %3668, !llvm.loop !1424

3694:                                             ; preds = %3668
  %3695 = mul <8 x i32> %3689, %3688
  %3696 = mul <8 x i32> %3690, %3695
  %3697 = mul <8 x i32> %3691, %3696
  %3698 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3697)
  %3699 = icmp eq i64 %3662, %3666
  br i1 %3699, label %3712, label %3700

3700:                                             ; preds = %3653, %3694
  %3701 = phi i64 [ %3656, %3653 ], [ %3667, %3694 ]
  %3702 = phi i32 [ 1, %3653 ], [ %3698, %3694 ]
  br label %3703

3703:                                             ; preds = %3700, %3703
  %3704 = phi i64 [ %3709, %3703 ], [ %3701, %3700 ]
  %3705 = phi i32 [ %3708, %3703 ], [ %3702, %3700 ]
  %3706 = getelementptr inbounds i32, ptr %9, i64 %3704
  %3707 = load i32, ptr %3706, align 4, !tbaa !5
  %3708 = mul nsw i32 %3707, %3705
  %3709 = add nsw i64 %3704, -1
  %3710 = trunc i64 %3704 to i32
  %3711 = icmp sgt i32 %3710, 0
  br i1 %3711, label %3703, label %3712, !llvm.loop !1425

3712:                                             ; preds = %3703, %3694
  %3713 = phi i32 [ %3698, %3694 ], [ %3708, %3703 ]
  %3714 = and i64 %3663, 4294967295
  %3715 = getelementptr inbounds i32, ptr %6, i64 %3714
  %3716 = load i32, ptr %3715, align 4, !tbaa !5
  %3717 = mul nsw i32 %3716, %3713
  %3718 = add nsw i32 %3717, %3657
  %3719 = icmp sgt i64 %3655, 2
  %3720 = add nsw i64 %3656, -1
  %3721 = add i32 %3654, 1
  br i1 %3719, label %3653, label %3722, !llvm.loop !1426

3722:                                             ; preds = %3712, %3649
  %3723 = phi i32 [ %3652, %3649 ], [ %3718, %3712 ]
  %3724 = sext i32 %3723 to i64
  %3725 = getelementptr inbounds double, ptr %2, i64 %3724
  %3726 = load double, ptr %3725, align 8, !tbaa !18
  %3727 = getelementptr inbounds double, ptr %3619, i64 %3724
  %3728 = load double, ptr %3727, align 8, !tbaa !18
  %3729 = fmul fast double %3728, %3726
  %3730 = fadd fast double %3650, %3729
  store double %3730, ptr %3621, align 8, !tbaa !18
  %3731 = add nuw nsw i32 %3651, 1
  br i1 %3643, label %3732, label %3779

3732:                                             ; preds = %3722
  %3733 = load i32, ptr %4, align 4, !tbaa !5
  %3734 = load i32, ptr %12, align 4, !tbaa !5
  %3735 = add nsw i32 %3734, -1
  %3736 = icmp slt i32 %3733, %3735
  br i1 %3736, label %3756, label %3737

3737:                                             ; preds = %3732
  %3738 = icmp eq i32 %3733, %3735
  br i1 %3738, label %3739, label %3772

3739:                                             ; preds = %3737
  store i32 0, ptr %4, align 4, !tbaa !5
  %3740 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3740, ptr %6, align 4, !tbaa !5
  br i1 %3648, label %3779, label %3741

3741:                                             ; preds = %3739, %3766
  %3742 = phi i64 [ %3770, %3766 ], [ 1, %3739 ]
  %3743 = getelementptr inbounds i32, ptr %4, i64 %3742
  %3744 = load i32, ptr %3743, align 4, !tbaa !5
  %3745 = getelementptr inbounds i32, ptr %12, i64 %3742
  %3746 = load i32, ptr %3745, align 4, !tbaa !5
  %3747 = add nsw i32 %3746, -1
  %3748 = icmp slt i32 %3744, %3747
  br i1 %3748, label %3749, label %3764

3749:                                             ; preds = %3741
  br i1 %3736, label %3756, label %3750

3750:                                             ; preds = %3749
  %3751 = getelementptr inbounds i32, ptr %7, i64 %3742
  %3752 = load i32, ptr %3751, align 4, !tbaa !5
  %3753 = getelementptr inbounds i32, ptr %6, i64 %3742
  %3754 = load i32, ptr %3753, align 4, !tbaa !5
  %3755 = add nsw i32 %3754, %3752
  store i32 %3755, ptr %3753, align 4, !tbaa !5
  br label %3774

3756:                                             ; preds = %3732, %3749
  %3757 = phi i32 [ %3744, %3749 ], [ %3733, %3732 ]
  %3758 = phi ptr [ %3743, %3749 ], [ %4, %3732 ]
  %3759 = phi i64 [ %3742, %3749 ], [ 0, %3732 ]
  %3760 = add nsw i32 %3757, 1
  store i32 %3760, ptr %3758, align 4, !tbaa !5
  %3761 = getelementptr inbounds i32, ptr %7, i64 %3759
  %3762 = load i32, ptr %3761, align 4, !tbaa !5
  %3763 = getelementptr inbounds i32, ptr %6, i64 %3759
  br label %3774

3764:                                             ; preds = %3741
  %3765 = icmp eq i32 %3744, %3747
  br i1 %3765, label %3766, label %3772

3766:                                             ; preds = %3764
  store i32 0, ptr %3743, align 4, !tbaa !5
  %3767 = getelementptr inbounds i32, ptr %8, i64 %3742
  %3768 = load i32, ptr %3767, align 4, !tbaa !5
  %3769 = getelementptr inbounds i32, ptr %6, i64 %3742
  store i32 %3768, ptr %3769, align 4, !tbaa !5
  %3770 = add nuw nsw i64 %3742, 1
  %3771 = icmp eq i64 %3770, %3646
  br i1 %3771, label %3779, label %3741, !llvm.loop !1427

3772:                                             ; preds = %3737, %3764
  %3773 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3774:                                             ; preds = %3750, %3756
  %3775 = phi ptr [ %3763, %3756 ], [ %3743, %3750 ]
  %3776 = phi i32 [ %3762, %3756 ], [ 1, %3750 ]
  %3777 = load i32, ptr %3775, align 4, !tbaa !5
  %3778 = add nsw i32 %3777, %3776
  store i32 %3778, ptr %3775, align 4, !tbaa !5
  br label %3779

3779:                                             ; preds = %3766, %3774, %3739, %3722
  %3780 = icmp eq i32 %3731, %5
  br i1 %3780, label %5401, label %3649, !llvm.loop !1428

3781:                                             ; preds = %3632, %3915
  %3782 = phi double [ 0.000000e+00, %3632 ], [ %3863, %3915 ]
  %3783 = phi i32 [ 0, %3632 ], [ %3864, %3915 ]
  %3784 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3633, label %3785, label %3854

3785:                                             ; preds = %3781, %3844
  %3786 = phi i32 [ %3853, %3844 ], [ 0, %3781 ]
  %3787 = phi i64 [ %3795, %3844 ], [ %3637, %3781 ]
  %3788 = phi i64 [ %3852, %3844 ], [ %3636, %3781 ]
  %3789 = phi i32 [ %3850, %3844 ], [ %3784, %3781 ]
  %3790 = sub i32 %3635, %3786
  %3791 = tail call i32 @llvm.smin.i32(i32 %3790, i32 0)
  %3792 = sub i32 %3790, %3791
  %3793 = zext i32 %3792 to i64
  %3794 = add nuw nsw i64 %3793, 1
  %3795 = add nsw i64 %3787, -1
  %3796 = icmp ult i32 %3792, 31
  br i1 %3796, label %3832, label %3797

3797:                                             ; preds = %3785
  %3798 = and i64 %3794, 8589934560
  %3799 = sub i64 %3788, %3798
  br label %3800

3800:                                             ; preds = %3800, %3797
  %3801 = phi i64 [ 0, %3797 ], [ %3824, %3800 ]
  %3802 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3820, %3800 ]
  %3803 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3821, %3800 ]
  %3804 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3822, %3800 ]
  %3805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3797 ], [ %3823, %3800 ]
  %3806 = sub i64 %3788, %3801
  %3807 = getelementptr inbounds i32, ptr %11, i64 %3806
  %3808 = getelementptr inbounds i32, ptr %3807, i64 -7
  %3809 = load <8 x i32>, ptr %3808, align 4, !tbaa !5
  %3810 = shufflevector <8 x i32> %3809, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3811 = getelementptr inbounds i32, ptr %3807, i64 -15
  %3812 = load <8 x i32>, ptr %3811, align 4, !tbaa !5
  %3813 = shufflevector <8 x i32> %3812, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3814 = getelementptr inbounds i32, ptr %3807, i64 -23
  %3815 = load <8 x i32>, ptr %3814, align 4, !tbaa !5
  %3816 = shufflevector <8 x i32> %3815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3817 = getelementptr inbounds i32, ptr %3807, i64 -31
  %3818 = load <8 x i32>, ptr %3817, align 4, !tbaa !5
  %3819 = shufflevector <8 x i32> %3818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3820 = mul <8 x i32> %3810, %3802
  %3821 = mul <8 x i32> %3813, %3803
  %3822 = mul <8 x i32> %3816, %3804
  %3823 = mul <8 x i32> %3819, %3805
  %3824 = add nuw i64 %3801, 32
  %3825 = icmp eq i64 %3824, %3798
  br i1 %3825, label %3826, label %3800, !llvm.loop !1429

3826:                                             ; preds = %3800
  %3827 = mul <8 x i32> %3821, %3820
  %3828 = mul <8 x i32> %3822, %3827
  %3829 = mul <8 x i32> %3823, %3828
  %3830 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3829)
  %3831 = icmp eq i64 %3794, %3798
  br i1 %3831, label %3844, label %3832

3832:                                             ; preds = %3785, %3826
  %3833 = phi i64 [ %3788, %3785 ], [ %3799, %3826 ]
  %3834 = phi i32 [ 1, %3785 ], [ %3830, %3826 ]
  br label %3835

3835:                                             ; preds = %3832, %3835
  %3836 = phi i64 [ %3841, %3835 ], [ %3833, %3832 ]
  %3837 = phi i32 [ %3840, %3835 ], [ %3834, %3832 ]
  %3838 = getelementptr inbounds i32, ptr %11, i64 %3836
  %3839 = load i32, ptr %3838, align 4, !tbaa !5
  %3840 = mul nsw i32 %3839, %3837
  %3841 = add nsw i64 %3836, -1
  %3842 = trunc i64 %3836 to i32
  %3843 = icmp sgt i32 %3842, 0
  br i1 %3843, label %3835, label %3844, !llvm.loop !1430

3844:                                             ; preds = %3835, %3826
  %3845 = phi i32 [ %3830, %3826 ], [ %3840, %3835 ]
  %3846 = and i64 %3795, 4294967295
  %3847 = getelementptr inbounds i32, ptr %6, i64 %3846
  %3848 = load i32, ptr %3847, align 4, !tbaa !5
  %3849 = mul nsw i32 %3848, %3845
  %3850 = add nsw i32 %3849, %3789
  %3851 = icmp sgt i64 %3787, 2
  %3852 = add nsw i64 %3788, -1
  %3853 = add i32 %3786, 1
  br i1 %3851, label %3785, label %3854, !llvm.loop !1431

3854:                                             ; preds = %3844, %3781
  %3855 = phi i32 [ %3784, %3781 ], [ %3850, %3844 ]
  %3856 = icmp slt i32 %3855, %5
  br i1 %3856, label %3859, label %3857

3857:                                             ; preds = %3854
  %3858 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

3859:                                             ; preds = %3854
  %3860 = sext i32 %3855 to i64
  %3861 = getelementptr inbounds double, ptr %3619, i64 %3860
  %3862 = load double, ptr %3861, align 8, !tbaa !18
  %3863 = fadd fast double %3782, %3862
  store double %3863, ptr %3621, align 8, !tbaa !18
  %3864 = add nuw nsw i32 %3783, 1
  br i1 %3634, label %3865, label %3915

3865:                                             ; preds = %3859
  %3866 = load i32, ptr %4, align 4, !tbaa !5
  %3867 = load i32, ptr %12, align 4, !tbaa !5
  %3868 = add nsw i32 %3867, -1
  %3869 = icmp slt i32 %3866, %3868
  br i1 %3869, label %3892, label %3870

3870:                                             ; preds = %3865
  %3871 = icmp eq i32 %3866, %3868
  br i1 %3871, label %3872, label %3908

3872:                                             ; preds = %3870
  store i32 0, ptr %4, align 4, !tbaa !5
  %3873 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %3873, ptr %6, align 4, !tbaa !5
  br i1 %3639, label %3915, label %3874

3874:                                             ; preds = %3872, %3902
  %3875 = phi i64 [ %3906, %3902 ], [ 1, %3872 ]
  %3876 = getelementptr inbounds i32, ptr %4, i64 %3875
  %3877 = load i32, ptr %3876, align 4, !tbaa !5
  %3878 = getelementptr inbounds i32, ptr %12, i64 %3875
  %3879 = load i32, ptr %3878, align 4, !tbaa !5
  %3880 = add nsw i32 %3879, -1
  %3881 = icmp slt i32 %3877, %3880
  br i1 %3881, label %3882, label %3900

3882:                                             ; preds = %3874
  br i1 %3869, label %3892, label %3883

3883:                                             ; preds = %3882
  %3884 = shl i64 %3875, 32
  %3885 = add i64 %3884, -4294967296
  %3886 = ashr exact i64 %3885, 32
  %3887 = getelementptr inbounds i32, ptr %7, i64 %3886
  %3888 = load i32, ptr %3887, align 4, !tbaa !5
  %3889 = getelementptr inbounds i32, ptr %6, i64 %3875
  %3890 = load i32, ptr %3889, align 4, !tbaa !5
  %3891 = add nsw i32 %3890, %3888
  store i32 %3891, ptr %3889, align 4, !tbaa !5
  br label %3910

3892:                                             ; preds = %3865, %3882
  %3893 = phi i32 [ %3877, %3882 ], [ %3866, %3865 ]
  %3894 = phi ptr [ %3876, %3882 ], [ %4, %3865 ]
  %3895 = phi i64 [ %3875, %3882 ], [ 0, %3865 ]
  %3896 = add nsw i32 %3893, 1
  store i32 %3896, ptr %3894, align 4, !tbaa !5
  %3897 = getelementptr inbounds i32, ptr %7, i64 %3895
  %3898 = load i32, ptr %3897, align 4, !tbaa !5
  %3899 = getelementptr inbounds i32, ptr %6, i64 %3895
  br label %3910

3900:                                             ; preds = %3874
  %3901 = icmp eq i32 %3877, %3880
  br i1 %3901, label %3902, label %3908

3902:                                             ; preds = %3900
  store i32 0, ptr %3876, align 4, !tbaa !5
  %3903 = getelementptr inbounds i32, ptr %8, i64 %3875
  %3904 = load i32, ptr %3903, align 4, !tbaa !5
  %3905 = getelementptr inbounds i32, ptr %6, i64 %3875
  store i32 %3904, ptr %3905, align 4, !tbaa !5
  %3906 = add nuw nsw i64 %3875, 1
  %3907 = icmp eq i64 %3906, %3637
  br i1 %3907, label %3915, label %3874, !llvm.loop !1432

3908:                                             ; preds = %3870, %3900
  %3909 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

3910:                                             ; preds = %3883, %3892
  %3911 = phi ptr [ %3899, %3892 ], [ %3876, %3883 ]
  %3912 = phi i32 [ %3898, %3892 ], [ 1, %3883 ]
  %3913 = load i32, ptr %3911, align 4, !tbaa !5
  %3914 = add nsw i32 %3913, %3912
  store i32 %3914, ptr %3911, align 4, !tbaa !5
  br label %3915

3915:                                             ; preds = %3902, %3910, %3872, %3859
  %3916 = icmp eq i32 %3864, %5
  br i1 %3916, label %5401, label %3781, !llvm.loop !1433

3917:                                             ; preds = %3625
  %3918 = getelementptr inbounds i32, ptr %3, i64 %19
  %3919 = load i32, ptr %3918, align 4, !tbaa !5
  %3920 = icmp eq i32 %3919, 0
  %3921 = icmp sgt i32 %5, 0
  br i1 %3920, label %3931, label %3922

3922:                                             ; preds = %3917
  br i1 %3921, label %3923, label %5401

3923:                                             ; preds = %3922
  %3924 = icmp sgt i32 %13, 1
  %3925 = icmp sgt i32 %13, 0
  %3926 = add i32 %13, -2
  %3927 = zext i32 %3926 to i64
  %3928 = zext i32 %13 to i64
  %3929 = add nuw i32 %5, 1
  %3930 = icmp eq i32 %13, 1
  br label %4069

3931:                                             ; preds = %3917
  br i1 %3921, label %3932, label %5401

3932:                                             ; preds = %3931
  %3933 = icmp sgt i32 %13, 1
  %3934 = icmp sgt i32 %13, 0
  %3935 = add i32 %13, -2
  %3936 = zext i32 %3935 to i64
  %3937 = zext i32 %13 to i64
  %3938 = add nuw i32 %5, 1
  %3939 = icmp eq i32 %13, 1
  br label %3940

3940:                                             ; preds = %3932, %4067
  %3941 = phi double [ 0.000000e+00, %3932 ], [ %4018, %4067 ]
  %3942 = phi i32 [ 0, %3932 ], [ %4019, %4067 ]
  %3943 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3933, label %3944, label %4013

3944:                                             ; preds = %3940, %4003
  %3945 = phi i32 [ %4012, %4003 ], [ 0, %3940 ]
  %3946 = phi i64 [ %3954, %4003 ], [ %3937, %3940 ]
  %3947 = phi i64 [ %4011, %4003 ], [ %3936, %3940 ]
  %3948 = phi i32 [ %4009, %4003 ], [ %3943, %3940 ]
  %3949 = sub i32 %3935, %3945
  %3950 = tail call i32 @llvm.smin.i32(i32 %3949, i32 0)
  %3951 = sub i32 %3949, %3950
  %3952 = zext i32 %3951 to i64
  %3953 = add nuw nsw i64 %3952, 1
  %3954 = add nsw i64 %3946, -1
  %3955 = icmp ult i32 %3951, 31
  br i1 %3955, label %3991, label %3956

3956:                                             ; preds = %3944
  %3957 = and i64 %3953, 8589934560
  %3958 = sub i64 %3947, %3957
  br label %3959

3959:                                             ; preds = %3959, %3956
  %3960 = phi i64 [ 0, %3956 ], [ %3983, %3959 ]
  %3961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3979, %3959 ]
  %3962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3980, %3959 ]
  %3963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3981, %3959 ]
  %3964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3956 ], [ %3982, %3959 ]
  %3965 = sub i64 %3947, %3960
  %3966 = getelementptr inbounds i32, ptr %9, i64 %3965
  %3967 = getelementptr inbounds i32, ptr %3966, i64 -7
  %3968 = load <8 x i32>, ptr %3967, align 4, !tbaa !5
  %3969 = shufflevector <8 x i32> %3968, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3970 = getelementptr inbounds i32, ptr %3966, i64 -15
  %3971 = load <8 x i32>, ptr %3970, align 4, !tbaa !5
  %3972 = shufflevector <8 x i32> %3971, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3973 = getelementptr inbounds i32, ptr %3966, i64 -23
  %3974 = load <8 x i32>, ptr %3973, align 4, !tbaa !5
  %3975 = shufflevector <8 x i32> %3974, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3976 = getelementptr inbounds i32, ptr %3966, i64 -31
  %3977 = load <8 x i32>, ptr %3976, align 4, !tbaa !5
  %3978 = shufflevector <8 x i32> %3977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3979 = mul <8 x i32> %3969, %3961
  %3980 = mul <8 x i32> %3972, %3962
  %3981 = mul <8 x i32> %3975, %3963
  %3982 = mul <8 x i32> %3978, %3964
  %3983 = add nuw i64 %3960, 32
  %3984 = icmp eq i64 %3983, %3957
  br i1 %3984, label %3985, label %3959, !llvm.loop !1434

3985:                                             ; preds = %3959
  %3986 = mul <8 x i32> %3980, %3979
  %3987 = mul <8 x i32> %3981, %3986
  %3988 = mul <8 x i32> %3982, %3987
  %3989 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3988)
  %3990 = icmp eq i64 %3953, %3957
  br i1 %3990, label %4003, label %3991

3991:                                             ; preds = %3944, %3985
  %3992 = phi i64 [ %3947, %3944 ], [ %3958, %3985 ]
  %3993 = phi i32 [ 1, %3944 ], [ %3989, %3985 ]
  br label %3994

3994:                                             ; preds = %3991, %3994
  %3995 = phi i64 [ %4000, %3994 ], [ %3992, %3991 ]
  %3996 = phi i32 [ %3999, %3994 ], [ %3993, %3991 ]
  %3997 = getelementptr inbounds i32, ptr %9, i64 %3995
  %3998 = load i32, ptr %3997, align 4, !tbaa !5
  %3999 = mul nsw i32 %3998, %3996
  %4000 = add nsw i64 %3995, -1
  %4001 = trunc i64 %3995 to i32
  %4002 = icmp sgt i32 %4001, 0
  br i1 %4002, label %3994, label %4003, !llvm.loop !1435

4003:                                             ; preds = %3994, %3985
  %4004 = phi i32 [ %3989, %3985 ], [ %3999, %3994 ]
  %4005 = and i64 %3954, 4294967295
  %4006 = getelementptr inbounds i32, ptr %6, i64 %4005
  %4007 = load i32, ptr %4006, align 4, !tbaa !5
  %4008 = mul nsw i32 %4007, %4004
  %4009 = add nsw i32 %4008, %3948
  %4010 = icmp sgt i64 %3946, 2
  %4011 = add nsw i64 %3947, -1
  %4012 = add i32 %3945, 1
  br i1 %4010, label %3944, label %4013, !llvm.loop !1436

4013:                                             ; preds = %4003, %3940
  %4014 = phi i32 [ %3943, %3940 ], [ %4009, %4003 ]
  %4015 = sext i32 %4014 to i64
  %4016 = getelementptr inbounds double, ptr %3619, i64 %4015
  %4017 = load double, ptr %4016, align 8, !tbaa !18
  %4018 = fadd fast double %3941, %4017
  store double %4018, ptr %3621, align 8, !tbaa !18
  %4019 = add nuw nsw i32 %3942, 1
  br i1 %3934, label %4020, label %4067

4020:                                             ; preds = %4013
  %4021 = load i32, ptr %4, align 4, !tbaa !5
  %4022 = load i32, ptr %12, align 4, !tbaa !5
  %4023 = add nsw i32 %4022, -1
  %4024 = icmp slt i32 %4021, %4023
  br i1 %4024, label %4044, label %4025

4025:                                             ; preds = %4020
  %4026 = icmp eq i32 %4021, %4023
  br i1 %4026, label %4027, label %4060

4027:                                             ; preds = %4025
  store i32 0, ptr %4, align 4, !tbaa !5
  %4028 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4028, ptr %6, align 4, !tbaa !5
  br i1 %3939, label %4067, label %4029

4029:                                             ; preds = %4027, %4054
  %4030 = phi i64 [ %4058, %4054 ], [ 1, %4027 ]
  %4031 = getelementptr inbounds i32, ptr %4, i64 %4030
  %4032 = load i32, ptr %4031, align 4, !tbaa !5
  %4033 = getelementptr inbounds i32, ptr %12, i64 %4030
  %4034 = load i32, ptr %4033, align 4, !tbaa !5
  %4035 = add nsw i32 %4034, -1
  %4036 = icmp slt i32 %4032, %4035
  br i1 %4036, label %4037, label %4052

4037:                                             ; preds = %4029
  br i1 %4024, label %4044, label %4038

4038:                                             ; preds = %4037
  %4039 = getelementptr inbounds i32, ptr %7, i64 %4030
  %4040 = load i32, ptr %4039, align 4, !tbaa !5
  %4041 = getelementptr inbounds i32, ptr %6, i64 %4030
  %4042 = load i32, ptr %4041, align 4, !tbaa !5
  %4043 = add nsw i32 %4042, %4040
  store i32 %4043, ptr %4041, align 4, !tbaa !5
  br label %4062

4044:                                             ; preds = %4020, %4037
  %4045 = phi i32 [ %4032, %4037 ], [ %4021, %4020 ]
  %4046 = phi ptr [ %4031, %4037 ], [ %4, %4020 ]
  %4047 = phi i64 [ %4030, %4037 ], [ 0, %4020 ]
  %4048 = add nsw i32 %4045, 1
  store i32 %4048, ptr %4046, align 4, !tbaa !5
  %4049 = getelementptr inbounds i32, ptr %7, i64 %4047
  %4050 = load i32, ptr %4049, align 4, !tbaa !5
  %4051 = getelementptr inbounds i32, ptr %6, i64 %4047
  br label %4062

4052:                                             ; preds = %4029
  %4053 = icmp eq i32 %4032, %4035
  br i1 %4053, label %4054, label %4060

4054:                                             ; preds = %4052
  store i32 0, ptr %4031, align 4, !tbaa !5
  %4055 = getelementptr inbounds i32, ptr %8, i64 %4030
  %4056 = load i32, ptr %4055, align 4, !tbaa !5
  %4057 = getelementptr inbounds i32, ptr %6, i64 %4030
  store i32 %4056, ptr %4057, align 4, !tbaa !5
  %4058 = add nuw nsw i64 %4030, 1
  %4059 = icmp eq i64 %4058, %3937
  br i1 %4059, label %4067, label %4029, !llvm.loop !1437

4060:                                             ; preds = %4025, %4052
  %4061 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4062:                                             ; preds = %4038, %4044
  %4063 = phi ptr [ %4051, %4044 ], [ %4031, %4038 ]
  %4064 = phi i32 [ %4050, %4044 ], [ 1, %4038 ]
  %4065 = load i32, ptr %4063, align 4, !tbaa !5
  %4066 = add nsw i32 %4065, %4064
  store i32 %4066, ptr %4063, align 4, !tbaa !5
  br label %4067

4067:                                             ; preds = %4054, %4062, %4027, %4013
  %4068 = icmp eq i32 %4019, %5
  br i1 %4068, label %5401, label %3940, !llvm.loop !1438

4069:                                             ; preds = %3923, %4203
  %4070 = phi double [ 0.000000e+00, %3923 ], [ %4151, %4203 ]
  %4071 = phi i32 [ 0, %3923 ], [ %4152, %4203 ]
  %4072 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %3924, label %4073, label %4142

4073:                                             ; preds = %4069, %4132
  %4074 = phi i32 [ %4141, %4132 ], [ 0, %4069 ]
  %4075 = phi i64 [ %4083, %4132 ], [ %3928, %4069 ]
  %4076 = phi i64 [ %4140, %4132 ], [ %3927, %4069 ]
  %4077 = phi i32 [ %4138, %4132 ], [ %4072, %4069 ]
  %4078 = sub i32 %3926, %4074
  %4079 = tail call i32 @llvm.smin.i32(i32 %4078, i32 0)
  %4080 = sub i32 %4078, %4079
  %4081 = zext i32 %4080 to i64
  %4082 = add nuw nsw i64 %4081, 1
  %4083 = add nsw i64 %4075, -1
  %4084 = icmp ult i32 %4080, 31
  br i1 %4084, label %4120, label %4085

4085:                                             ; preds = %4073
  %4086 = and i64 %4082, 8589934560
  %4087 = sub i64 %4076, %4086
  br label %4088

4088:                                             ; preds = %4088, %4085
  %4089 = phi i64 [ 0, %4085 ], [ %4112, %4088 ]
  %4090 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4108, %4088 ]
  %4091 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4109, %4088 ]
  %4092 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4110, %4088 ]
  %4093 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4085 ], [ %4111, %4088 ]
  %4094 = sub i64 %4076, %4089
  %4095 = getelementptr inbounds i32, ptr %11, i64 %4094
  %4096 = getelementptr inbounds i32, ptr %4095, i64 -7
  %4097 = load <8 x i32>, ptr %4096, align 4, !tbaa !5
  %4098 = shufflevector <8 x i32> %4097, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4099 = getelementptr inbounds i32, ptr %4095, i64 -15
  %4100 = load <8 x i32>, ptr %4099, align 4, !tbaa !5
  %4101 = shufflevector <8 x i32> %4100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4102 = getelementptr inbounds i32, ptr %4095, i64 -23
  %4103 = load <8 x i32>, ptr %4102, align 4, !tbaa !5
  %4104 = shufflevector <8 x i32> %4103, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4105 = getelementptr inbounds i32, ptr %4095, i64 -31
  %4106 = load <8 x i32>, ptr %4105, align 4, !tbaa !5
  %4107 = shufflevector <8 x i32> %4106, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4108 = mul <8 x i32> %4098, %4090
  %4109 = mul <8 x i32> %4101, %4091
  %4110 = mul <8 x i32> %4104, %4092
  %4111 = mul <8 x i32> %4107, %4093
  %4112 = add nuw i64 %4089, 32
  %4113 = icmp eq i64 %4112, %4086
  br i1 %4113, label %4114, label %4088, !llvm.loop !1439

4114:                                             ; preds = %4088
  %4115 = mul <8 x i32> %4109, %4108
  %4116 = mul <8 x i32> %4110, %4115
  %4117 = mul <8 x i32> %4111, %4116
  %4118 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4117)
  %4119 = icmp eq i64 %4082, %4086
  br i1 %4119, label %4132, label %4120

4120:                                             ; preds = %4073, %4114
  %4121 = phi i64 [ %4076, %4073 ], [ %4087, %4114 ]
  %4122 = phi i32 [ 1, %4073 ], [ %4118, %4114 ]
  br label %4123

4123:                                             ; preds = %4120, %4123
  %4124 = phi i64 [ %4129, %4123 ], [ %4121, %4120 ]
  %4125 = phi i32 [ %4128, %4123 ], [ %4122, %4120 ]
  %4126 = getelementptr inbounds i32, ptr %11, i64 %4124
  %4127 = load i32, ptr %4126, align 4, !tbaa !5
  %4128 = mul nsw i32 %4127, %4125
  %4129 = add nsw i64 %4124, -1
  %4130 = trunc i64 %4124 to i32
  %4131 = icmp sgt i32 %4130, 0
  br i1 %4131, label %4123, label %4132, !llvm.loop !1440

4132:                                             ; preds = %4123, %4114
  %4133 = phi i32 [ %4118, %4114 ], [ %4128, %4123 ]
  %4134 = and i64 %4083, 4294967295
  %4135 = getelementptr inbounds i32, ptr %6, i64 %4134
  %4136 = load i32, ptr %4135, align 4, !tbaa !5
  %4137 = mul nsw i32 %4136, %4133
  %4138 = add nsw i32 %4137, %4077
  %4139 = icmp sgt i64 %4075, 2
  %4140 = add nsw i64 %4076, -1
  %4141 = add i32 %4074, 1
  br i1 %4139, label %4073, label %4142, !llvm.loop !1441

4142:                                             ; preds = %4132, %4069
  %4143 = phi i32 [ %4072, %4069 ], [ %4138, %4132 ]
  %4144 = icmp slt i32 %4143, %5
  br i1 %4144, label %4147, label %4145

4145:                                             ; preds = %4142
  %4146 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

4147:                                             ; preds = %4142
  %4148 = sext i32 %4143 to i64
  %4149 = getelementptr inbounds double, ptr %3619, i64 %4148
  %4150 = load double, ptr %4149, align 8, !tbaa !18
  %4151 = fadd fast double %4070, %4150
  store double %4151, ptr %3621, align 8, !tbaa !18
  %4152 = add nuw nsw i32 %4071, 1
  br i1 %3925, label %4153, label %4203

4153:                                             ; preds = %4147
  %4154 = load i32, ptr %4, align 4, !tbaa !5
  %4155 = load i32, ptr %12, align 4, !tbaa !5
  %4156 = add nsw i32 %4155, -1
  %4157 = icmp slt i32 %4154, %4156
  br i1 %4157, label %4180, label %4158

4158:                                             ; preds = %4153
  %4159 = icmp eq i32 %4154, %4156
  br i1 %4159, label %4160, label %4196

4160:                                             ; preds = %4158
  store i32 0, ptr %4, align 4, !tbaa !5
  %4161 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4161, ptr %6, align 4, !tbaa !5
  br i1 %3930, label %4203, label %4162

4162:                                             ; preds = %4160, %4190
  %4163 = phi i64 [ %4194, %4190 ], [ 1, %4160 ]
  %4164 = getelementptr inbounds i32, ptr %4, i64 %4163
  %4165 = load i32, ptr %4164, align 4, !tbaa !5
  %4166 = getelementptr inbounds i32, ptr %12, i64 %4163
  %4167 = load i32, ptr %4166, align 4, !tbaa !5
  %4168 = add nsw i32 %4167, -1
  %4169 = icmp slt i32 %4165, %4168
  br i1 %4169, label %4170, label %4188

4170:                                             ; preds = %4162
  br i1 %4157, label %4180, label %4171

4171:                                             ; preds = %4170
  %4172 = shl i64 %4163, 32
  %4173 = add i64 %4172, -4294967296
  %4174 = ashr exact i64 %4173, 32
  %4175 = getelementptr inbounds i32, ptr %7, i64 %4174
  %4176 = load i32, ptr %4175, align 4, !tbaa !5
  %4177 = getelementptr inbounds i32, ptr %6, i64 %4163
  %4178 = load i32, ptr %4177, align 4, !tbaa !5
  %4179 = add nsw i32 %4178, %4176
  store i32 %4179, ptr %4177, align 4, !tbaa !5
  br label %4198

4180:                                             ; preds = %4153, %4170
  %4181 = phi i32 [ %4165, %4170 ], [ %4154, %4153 ]
  %4182 = phi ptr [ %4164, %4170 ], [ %4, %4153 ]
  %4183 = phi i64 [ %4163, %4170 ], [ 0, %4153 ]
  %4184 = add nsw i32 %4181, 1
  store i32 %4184, ptr %4182, align 4, !tbaa !5
  %4185 = getelementptr inbounds i32, ptr %7, i64 %4183
  %4186 = load i32, ptr %4185, align 4, !tbaa !5
  %4187 = getelementptr inbounds i32, ptr %6, i64 %4183
  br label %4198

4188:                                             ; preds = %4162
  %4189 = icmp eq i32 %4165, %4168
  br i1 %4189, label %4190, label %4196

4190:                                             ; preds = %4188
  store i32 0, ptr %4164, align 4, !tbaa !5
  %4191 = getelementptr inbounds i32, ptr %8, i64 %4163
  %4192 = load i32, ptr %4191, align 4, !tbaa !5
  %4193 = getelementptr inbounds i32, ptr %6, i64 %4163
  store i32 %4192, ptr %4193, align 4, !tbaa !5
  %4194 = add nuw nsw i64 %4163, 1
  %4195 = icmp eq i64 %4194, %3928
  br i1 %4195, label %4203, label %4162, !llvm.loop !1442

4196:                                             ; preds = %4158, %4188
  %4197 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4198:                                             ; preds = %4171, %4180
  %4199 = phi ptr [ %4187, %4180 ], [ %4164, %4171 ]
  %4200 = phi i32 [ %4186, %4180 ], [ 1, %4171 ]
  %4201 = load i32, ptr %4199, align 4, !tbaa !5
  %4202 = add nsw i32 %4201, %4200
  store i32 %4202, ptr %4199, align 4, !tbaa !5
  br label %4203

4203:                                             ; preds = %4190, %4198, %4160, %4147
  %4204 = icmp eq i32 %4152, %5
  br i1 %4204, label %5401, label %4069, !llvm.loop !1443

4205:                                             ; preds = %3625
  %4206 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1985, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

4207:                                             ; preds = %18
  %4208 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4209 = load ptr, ptr %4208, align 8, !tbaa !9
  %4210 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4211 = load ptr, ptr %4210, align 8, !tbaa !9
  store float 0.000000e+00, ptr %4211, align 4, !tbaa !162
  %4212 = icmp eq i32 %13, 0
  br i1 %4212, label %4213, label %4216

4213:                                             ; preds = %4207
  %4214 = load double, ptr %4209, align 8, !tbaa !18
  %4215 = fptrunc double %4214 to float
  store float %4215, ptr %4211, align 4, !tbaa !162
  br label %5401

4216:                                             ; preds = %4207
  switch i32 %1, label %4803 [
    i32 1, label %4217
    i32 0, label %4513
  ]

4217:                                             ; preds = %4216
  %4218 = getelementptr inbounds i32, ptr %3, i64 %19
  %4219 = load i32, ptr %4218, align 4, !tbaa !5
  %4220 = icmp eq i32 %4219, 0
  %4221 = icmp sgt i32 %5, 0
  br i1 %4220, label %4231, label %4222

4222:                                             ; preds = %4217
  br i1 %4221, label %4223, label %5401

4223:                                             ; preds = %4222
  %4224 = icmp sgt i32 %13, 1
  %4225 = icmp sgt i32 %13, 0
  %4226 = add i32 %13, -2
  %4227 = zext i32 %4226 to i64
  %4228 = zext i32 %13 to i64
  %4229 = add nuw i32 %5, 1
  %4230 = icmp eq i32 %13, 1
  br label %4376

4231:                                             ; preds = %4217
  br i1 %4221, label %4232, label %5401

4232:                                             ; preds = %4231
  %4233 = icmp sgt i32 %13, 1
  %4234 = icmp sgt i32 %13, 0
  %4235 = add i32 %13, -2
  %4236 = zext i32 %4235 to i64
  %4237 = zext i32 %13 to i64
  %4238 = add nuw i32 %5, 1
  %4239 = icmp eq i32 %13, 1
  br label %4240

4240:                                             ; preds = %4232, %4374
  %4241 = phi float [ 0.000000e+00, %4232 ], [ %4325, %4374 ]
  %4242 = phi i32 [ 0, %4232 ], [ %4326, %4374 ]
  %4243 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4233, label %4244, label %4313

4244:                                             ; preds = %4240, %4303
  %4245 = phi i32 [ %4312, %4303 ], [ 0, %4240 ]
  %4246 = phi i64 [ %4254, %4303 ], [ %4237, %4240 ]
  %4247 = phi i64 [ %4311, %4303 ], [ %4236, %4240 ]
  %4248 = phi i32 [ %4309, %4303 ], [ %4243, %4240 ]
  %4249 = sub i32 %4235, %4245
  %4250 = tail call i32 @llvm.smin.i32(i32 %4249, i32 0)
  %4251 = sub i32 %4249, %4250
  %4252 = zext i32 %4251 to i64
  %4253 = add nuw nsw i64 %4252, 1
  %4254 = add nsw i64 %4246, -1
  %4255 = icmp ult i32 %4251, 31
  br i1 %4255, label %4291, label %4256

4256:                                             ; preds = %4244
  %4257 = and i64 %4253, 8589934560
  %4258 = sub i64 %4247, %4257
  br label %4259

4259:                                             ; preds = %4259, %4256
  %4260 = phi i64 [ 0, %4256 ], [ %4283, %4259 ]
  %4261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4279, %4259 ]
  %4262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4280, %4259 ]
  %4263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4281, %4259 ]
  %4264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4256 ], [ %4282, %4259 ]
  %4265 = sub i64 %4247, %4260
  %4266 = getelementptr inbounds i32, ptr %9, i64 %4265
  %4267 = getelementptr inbounds i32, ptr %4266, i64 -7
  %4268 = load <8 x i32>, ptr %4267, align 4, !tbaa !5
  %4269 = shufflevector <8 x i32> %4268, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4270 = getelementptr inbounds i32, ptr %4266, i64 -15
  %4271 = load <8 x i32>, ptr %4270, align 4, !tbaa !5
  %4272 = shufflevector <8 x i32> %4271, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4273 = getelementptr inbounds i32, ptr %4266, i64 -23
  %4274 = load <8 x i32>, ptr %4273, align 4, !tbaa !5
  %4275 = shufflevector <8 x i32> %4274, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4276 = getelementptr inbounds i32, ptr %4266, i64 -31
  %4277 = load <8 x i32>, ptr %4276, align 4, !tbaa !5
  %4278 = shufflevector <8 x i32> %4277, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4279 = mul <8 x i32> %4269, %4261
  %4280 = mul <8 x i32> %4272, %4262
  %4281 = mul <8 x i32> %4275, %4263
  %4282 = mul <8 x i32> %4278, %4264
  %4283 = add nuw i64 %4260, 32
  %4284 = icmp eq i64 %4283, %4257
  br i1 %4284, label %4285, label %4259, !llvm.loop !1444

4285:                                             ; preds = %4259
  %4286 = mul <8 x i32> %4280, %4279
  %4287 = mul <8 x i32> %4281, %4286
  %4288 = mul <8 x i32> %4282, %4287
  %4289 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4288)
  %4290 = icmp eq i64 %4253, %4257
  br i1 %4290, label %4303, label %4291

4291:                                             ; preds = %4244, %4285
  %4292 = phi i64 [ %4247, %4244 ], [ %4258, %4285 ]
  %4293 = phi i32 [ 1, %4244 ], [ %4289, %4285 ]
  br label %4294

4294:                                             ; preds = %4291, %4294
  %4295 = phi i64 [ %4300, %4294 ], [ %4292, %4291 ]
  %4296 = phi i32 [ %4299, %4294 ], [ %4293, %4291 ]
  %4297 = getelementptr inbounds i32, ptr %9, i64 %4295
  %4298 = load i32, ptr %4297, align 4, !tbaa !5
  %4299 = mul nsw i32 %4298, %4296
  %4300 = add nsw i64 %4295, -1
  %4301 = trunc i64 %4295 to i32
  %4302 = icmp sgt i32 %4301, 0
  br i1 %4302, label %4294, label %4303, !llvm.loop !1445

4303:                                             ; preds = %4294, %4285
  %4304 = phi i32 [ %4289, %4285 ], [ %4299, %4294 ]
  %4305 = and i64 %4254, 4294967295
  %4306 = getelementptr inbounds i32, ptr %6, i64 %4305
  %4307 = load i32, ptr %4306, align 4, !tbaa !5
  %4308 = mul nsw i32 %4307, %4304
  %4309 = add nsw i32 %4308, %4248
  %4310 = icmp sgt i64 %4246, 2
  %4311 = add nsw i64 %4247, -1
  %4312 = add i32 %4245, 1
  br i1 %4310, label %4244, label %4313, !llvm.loop !1446

4313:                                             ; preds = %4303, %4240
  %4314 = phi i32 [ %4243, %4240 ], [ %4309, %4303 ]
  %4315 = sext i32 %4314 to i64
  %4316 = getelementptr inbounds double, ptr %2, i64 %4315
  %4317 = load double, ptr %4316, align 8, !tbaa !18
  %4318 = getelementptr inbounds double, ptr %4209, i64 %4315
  %4319 = load double, ptr %4318, align 8, !tbaa !18
  %4320 = fptrunc double %4319 to float
  %4321 = fpext float %4241 to double
  %4322 = fpext float %4320 to double
  %4323 = fmul fast double %4317, %4322
  %4324 = fadd fast double %4323, %4321
  %4325 = fptrunc double %4324 to float
  %4326 = add nuw nsw i32 %4242, 1
  br i1 %4234, label %4327, label %4374

4327:                                             ; preds = %4313
  %4328 = load i32, ptr %4, align 4, !tbaa !5
  %4329 = load i32, ptr %12, align 4, !tbaa !5
  %4330 = add nsw i32 %4329, -1
  %4331 = icmp slt i32 %4328, %4330
  br i1 %4331, label %4351, label %4332

4332:                                             ; preds = %4327
  %4333 = icmp eq i32 %4328, %4330
  br i1 %4333, label %4334, label %4367

4334:                                             ; preds = %4332
  store i32 0, ptr %4, align 4, !tbaa !5
  %4335 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4335, ptr %6, align 4, !tbaa !5
  br i1 %4239, label %4374, label %4336

4336:                                             ; preds = %4334, %4361
  %4337 = phi i64 [ %4365, %4361 ], [ 1, %4334 ]
  %4338 = getelementptr inbounds i32, ptr %4, i64 %4337
  %4339 = load i32, ptr %4338, align 4, !tbaa !5
  %4340 = getelementptr inbounds i32, ptr %12, i64 %4337
  %4341 = load i32, ptr %4340, align 4, !tbaa !5
  %4342 = add nsw i32 %4341, -1
  %4343 = icmp slt i32 %4339, %4342
  br i1 %4343, label %4344, label %4359

4344:                                             ; preds = %4336
  br i1 %4331, label %4351, label %4345

4345:                                             ; preds = %4344
  %4346 = getelementptr inbounds i32, ptr %7, i64 %4337
  %4347 = load i32, ptr %4346, align 4, !tbaa !5
  %4348 = getelementptr inbounds i32, ptr %6, i64 %4337
  %4349 = load i32, ptr %4348, align 4, !tbaa !5
  %4350 = add nsw i32 %4349, %4347
  store i32 %4350, ptr %4348, align 4, !tbaa !5
  br label %4369

4351:                                             ; preds = %4327, %4344
  %4352 = phi i32 [ %4339, %4344 ], [ %4328, %4327 ]
  %4353 = phi ptr [ %4338, %4344 ], [ %4, %4327 ]
  %4354 = phi i64 [ %4337, %4344 ], [ 0, %4327 ]
  %4355 = add nsw i32 %4352, 1
  store i32 %4355, ptr %4353, align 4, !tbaa !5
  %4356 = getelementptr inbounds i32, ptr %7, i64 %4354
  %4357 = load i32, ptr %4356, align 4, !tbaa !5
  %4358 = getelementptr inbounds i32, ptr %6, i64 %4354
  br label %4369

4359:                                             ; preds = %4336
  %4360 = icmp eq i32 %4339, %4342
  br i1 %4360, label %4361, label %4367

4361:                                             ; preds = %4359
  store i32 0, ptr %4338, align 4, !tbaa !5
  %4362 = getelementptr inbounds i32, ptr %8, i64 %4337
  %4363 = load i32, ptr %4362, align 4, !tbaa !5
  %4364 = getelementptr inbounds i32, ptr %6, i64 %4337
  store i32 %4363, ptr %4364, align 4, !tbaa !5
  %4365 = add nuw nsw i64 %4337, 1
  %4366 = icmp eq i64 %4365, %4237
  br i1 %4366, label %4374, label %4336, !llvm.loop !1447

4367:                                             ; preds = %4332, %4359
  store float %4325, ptr %4211, align 4, !tbaa !162
  %4368 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4369:                                             ; preds = %4345, %4351
  %4370 = phi ptr [ %4358, %4351 ], [ %4338, %4345 ]
  %4371 = phi i32 [ %4357, %4351 ], [ 1, %4345 ]
  %4372 = load i32, ptr %4370, align 4, !tbaa !5
  %4373 = add nsw i32 %4372, %4371
  store i32 %4373, ptr %4370, align 4, !tbaa !5
  br label %4374

4374:                                             ; preds = %4361, %4369, %4334, %4313
  %4375 = icmp eq i32 %4326, %5
  br i1 %4375, label %5399, label %4240, !llvm.loop !1448

4376:                                             ; preds = %4223, %4511
  %4377 = phi float [ 0.000000e+00, %4223 ], [ %4459, %4511 ]
  %4378 = phi i32 [ 0, %4223 ], [ %4460, %4511 ]
  %4379 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4224, label %4380, label %4449

4380:                                             ; preds = %4376, %4439
  %4381 = phi i32 [ %4448, %4439 ], [ 0, %4376 ]
  %4382 = phi i64 [ %4390, %4439 ], [ %4228, %4376 ]
  %4383 = phi i64 [ %4447, %4439 ], [ %4227, %4376 ]
  %4384 = phi i32 [ %4445, %4439 ], [ %4379, %4376 ]
  %4385 = sub i32 %4226, %4381
  %4386 = tail call i32 @llvm.smin.i32(i32 %4385, i32 0)
  %4387 = sub i32 %4385, %4386
  %4388 = zext i32 %4387 to i64
  %4389 = add nuw nsw i64 %4388, 1
  %4390 = add nsw i64 %4382, -1
  %4391 = icmp ult i32 %4387, 31
  br i1 %4391, label %4427, label %4392

4392:                                             ; preds = %4380
  %4393 = and i64 %4389, 8589934560
  %4394 = sub i64 %4383, %4393
  br label %4395

4395:                                             ; preds = %4395, %4392
  %4396 = phi i64 [ 0, %4392 ], [ %4419, %4395 ]
  %4397 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4415, %4395 ]
  %4398 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4416, %4395 ]
  %4399 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4417, %4395 ]
  %4400 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4392 ], [ %4418, %4395 ]
  %4401 = sub i64 %4383, %4396
  %4402 = getelementptr inbounds i32, ptr %11, i64 %4401
  %4403 = getelementptr inbounds i32, ptr %4402, i64 -7
  %4404 = load <8 x i32>, ptr %4403, align 4, !tbaa !5
  %4405 = shufflevector <8 x i32> %4404, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4406 = getelementptr inbounds i32, ptr %4402, i64 -15
  %4407 = load <8 x i32>, ptr %4406, align 4, !tbaa !5
  %4408 = shufflevector <8 x i32> %4407, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4409 = getelementptr inbounds i32, ptr %4402, i64 -23
  %4410 = load <8 x i32>, ptr %4409, align 4, !tbaa !5
  %4411 = shufflevector <8 x i32> %4410, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4412 = getelementptr inbounds i32, ptr %4402, i64 -31
  %4413 = load <8 x i32>, ptr %4412, align 4, !tbaa !5
  %4414 = shufflevector <8 x i32> %4413, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4415 = mul <8 x i32> %4405, %4397
  %4416 = mul <8 x i32> %4408, %4398
  %4417 = mul <8 x i32> %4411, %4399
  %4418 = mul <8 x i32> %4414, %4400
  %4419 = add nuw i64 %4396, 32
  %4420 = icmp eq i64 %4419, %4393
  br i1 %4420, label %4421, label %4395, !llvm.loop !1449

4421:                                             ; preds = %4395
  %4422 = mul <8 x i32> %4416, %4415
  %4423 = mul <8 x i32> %4417, %4422
  %4424 = mul <8 x i32> %4418, %4423
  %4425 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4424)
  %4426 = icmp eq i64 %4389, %4393
  br i1 %4426, label %4439, label %4427

4427:                                             ; preds = %4380, %4421
  %4428 = phi i64 [ %4383, %4380 ], [ %4394, %4421 ]
  %4429 = phi i32 [ 1, %4380 ], [ %4425, %4421 ]
  br label %4430

4430:                                             ; preds = %4427, %4430
  %4431 = phi i64 [ %4436, %4430 ], [ %4428, %4427 ]
  %4432 = phi i32 [ %4435, %4430 ], [ %4429, %4427 ]
  %4433 = getelementptr inbounds i32, ptr %11, i64 %4431
  %4434 = load i32, ptr %4433, align 4, !tbaa !5
  %4435 = mul nsw i32 %4434, %4432
  %4436 = add nsw i64 %4431, -1
  %4437 = trunc i64 %4431 to i32
  %4438 = icmp sgt i32 %4437, 0
  br i1 %4438, label %4430, label %4439, !llvm.loop !1450

4439:                                             ; preds = %4430, %4421
  %4440 = phi i32 [ %4425, %4421 ], [ %4435, %4430 ]
  %4441 = and i64 %4390, 4294967295
  %4442 = getelementptr inbounds i32, ptr %6, i64 %4441
  %4443 = load i32, ptr %4442, align 4, !tbaa !5
  %4444 = mul nsw i32 %4443, %4440
  %4445 = add nsw i32 %4444, %4384
  %4446 = icmp sgt i64 %4382, 2
  %4447 = add nsw i64 %4383, -1
  %4448 = add i32 %4381, 1
  br i1 %4446, label %4380, label %4449, !llvm.loop !1451

4449:                                             ; preds = %4439, %4376
  %4450 = phi i32 [ %4379, %4376 ], [ %4445, %4439 ]
  %4451 = icmp slt i32 %4450, %5
  br i1 %4451, label %4454, label %4452

4452:                                             ; preds = %4449
  %4453 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

4454:                                             ; preds = %4449
  %4455 = sext i32 %4450 to i64
  %4456 = getelementptr inbounds double, ptr %4209, i64 %4455
  %4457 = load double, ptr %4456, align 8, !tbaa !18
  %4458 = fptrunc double %4457 to float
  %4459 = fadd fast float %4377, %4458
  store float %4459, ptr %4211, align 4, !tbaa !162
  %4460 = add nuw nsw i32 %4378, 1
  br i1 %4225, label %4461, label %4511

4461:                                             ; preds = %4454
  %4462 = load i32, ptr %4, align 4, !tbaa !5
  %4463 = load i32, ptr %12, align 4, !tbaa !5
  %4464 = add nsw i32 %4463, -1
  %4465 = icmp slt i32 %4462, %4464
  br i1 %4465, label %4488, label %4466

4466:                                             ; preds = %4461
  %4467 = icmp eq i32 %4462, %4464
  br i1 %4467, label %4468, label %4504

4468:                                             ; preds = %4466
  store i32 0, ptr %4, align 4, !tbaa !5
  %4469 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4469, ptr %6, align 4, !tbaa !5
  br i1 %4230, label %4511, label %4470

4470:                                             ; preds = %4468, %4498
  %4471 = phi i64 [ %4502, %4498 ], [ 1, %4468 ]
  %4472 = getelementptr inbounds i32, ptr %4, i64 %4471
  %4473 = load i32, ptr %4472, align 4, !tbaa !5
  %4474 = getelementptr inbounds i32, ptr %12, i64 %4471
  %4475 = load i32, ptr %4474, align 4, !tbaa !5
  %4476 = add nsw i32 %4475, -1
  %4477 = icmp slt i32 %4473, %4476
  br i1 %4477, label %4478, label %4496

4478:                                             ; preds = %4470
  br i1 %4465, label %4488, label %4479

4479:                                             ; preds = %4478
  %4480 = shl i64 %4471, 32
  %4481 = add i64 %4480, -4294967296
  %4482 = ashr exact i64 %4481, 32
  %4483 = getelementptr inbounds i32, ptr %7, i64 %4482
  %4484 = load i32, ptr %4483, align 4, !tbaa !5
  %4485 = getelementptr inbounds i32, ptr %6, i64 %4471
  %4486 = load i32, ptr %4485, align 4, !tbaa !5
  %4487 = add nsw i32 %4486, %4484
  store i32 %4487, ptr %4485, align 4, !tbaa !5
  br label %4506

4488:                                             ; preds = %4461, %4478
  %4489 = phi i32 [ %4473, %4478 ], [ %4462, %4461 ]
  %4490 = phi ptr [ %4472, %4478 ], [ %4, %4461 ]
  %4491 = phi i64 [ %4471, %4478 ], [ 0, %4461 ]
  %4492 = add nsw i32 %4489, 1
  store i32 %4492, ptr %4490, align 4, !tbaa !5
  %4493 = getelementptr inbounds i32, ptr %7, i64 %4491
  %4494 = load i32, ptr %4493, align 4, !tbaa !5
  %4495 = getelementptr inbounds i32, ptr %6, i64 %4491
  br label %4506

4496:                                             ; preds = %4470
  %4497 = icmp eq i32 %4473, %4476
  br i1 %4497, label %4498, label %4504

4498:                                             ; preds = %4496
  store i32 0, ptr %4472, align 4, !tbaa !5
  %4499 = getelementptr inbounds i32, ptr %8, i64 %4471
  %4500 = load i32, ptr %4499, align 4, !tbaa !5
  %4501 = getelementptr inbounds i32, ptr %6, i64 %4471
  store i32 %4500, ptr %4501, align 4, !tbaa !5
  %4502 = add nuw nsw i64 %4471, 1
  %4503 = icmp eq i64 %4502, %4228
  br i1 %4503, label %4511, label %4470, !llvm.loop !1452

4504:                                             ; preds = %4466, %4496
  %4505 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4506:                                             ; preds = %4479, %4488
  %4507 = phi ptr [ %4495, %4488 ], [ %4472, %4479 ]
  %4508 = phi i32 [ %4494, %4488 ], [ 1, %4479 ]
  %4509 = load i32, ptr %4507, align 4, !tbaa !5
  %4510 = add nsw i32 %4509, %4508
  store i32 %4510, ptr %4507, align 4, !tbaa !5
  br label %4511

4511:                                             ; preds = %4498, %4506, %4468, %4454
  %4512 = icmp eq i32 %4460, %5
  br i1 %4512, label %5401, label %4376, !llvm.loop !1453

4513:                                             ; preds = %4216
  %4514 = getelementptr inbounds i32, ptr %3, i64 %19
  %4515 = load i32, ptr %4514, align 4, !tbaa !5
  %4516 = icmp eq i32 %4515, 0
  %4517 = icmp sgt i32 %5, 0
  br i1 %4516, label %4527, label %4518

4518:                                             ; preds = %4513
  br i1 %4517, label %4519, label %5401

4519:                                             ; preds = %4518
  %4520 = icmp sgt i32 %13, 1
  %4521 = icmp sgt i32 %13, 0
  %4522 = add i32 %13, -2
  %4523 = zext i32 %4522 to i64
  %4524 = zext i32 %13 to i64
  %4525 = add nuw i32 %5, 1
  %4526 = icmp eq i32 %13, 1
  br label %4666

4527:                                             ; preds = %4513
  br i1 %4517, label %4528, label %5401

4528:                                             ; preds = %4527
  %4529 = icmp sgt i32 %13, 1
  %4530 = icmp sgt i32 %13, 0
  %4531 = add i32 %13, -2
  %4532 = zext i32 %4531 to i64
  %4533 = zext i32 %13 to i64
  %4534 = add nuw i32 %5, 1
  %4535 = icmp eq i32 %13, 1
  br label %4536

4536:                                             ; preds = %4528, %4664
  %4537 = phi float [ 0.000000e+00, %4528 ], [ %4615, %4664 ]
  %4538 = phi i32 [ 0, %4528 ], [ %4616, %4664 ]
  %4539 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4529, label %4540, label %4609

4540:                                             ; preds = %4536, %4599
  %4541 = phi i32 [ %4608, %4599 ], [ 0, %4536 ]
  %4542 = phi i64 [ %4550, %4599 ], [ %4533, %4536 ]
  %4543 = phi i64 [ %4607, %4599 ], [ %4532, %4536 ]
  %4544 = phi i32 [ %4605, %4599 ], [ %4539, %4536 ]
  %4545 = sub i32 %4531, %4541
  %4546 = tail call i32 @llvm.smin.i32(i32 %4545, i32 0)
  %4547 = sub i32 %4545, %4546
  %4548 = zext i32 %4547 to i64
  %4549 = add nuw nsw i64 %4548, 1
  %4550 = add nsw i64 %4542, -1
  %4551 = icmp ult i32 %4547, 31
  br i1 %4551, label %4587, label %4552

4552:                                             ; preds = %4540
  %4553 = and i64 %4549, 8589934560
  %4554 = sub i64 %4543, %4553
  br label %4555

4555:                                             ; preds = %4555, %4552
  %4556 = phi i64 [ 0, %4552 ], [ %4579, %4555 ]
  %4557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4575, %4555 ]
  %4558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4576, %4555 ]
  %4559 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4577, %4555 ]
  %4560 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4552 ], [ %4578, %4555 ]
  %4561 = sub i64 %4543, %4556
  %4562 = getelementptr inbounds i32, ptr %9, i64 %4561
  %4563 = getelementptr inbounds i32, ptr %4562, i64 -7
  %4564 = load <8 x i32>, ptr %4563, align 4, !tbaa !5
  %4565 = shufflevector <8 x i32> %4564, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4566 = getelementptr inbounds i32, ptr %4562, i64 -15
  %4567 = load <8 x i32>, ptr %4566, align 4, !tbaa !5
  %4568 = shufflevector <8 x i32> %4567, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4569 = getelementptr inbounds i32, ptr %4562, i64 -23
  %4570 = load <8 x i32>, ptr %4569, align 4, !tbaa !5
  %4571 = shufflevector <8 x i32> %4570, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4572 = getelementptr inbounds i32, ptr %4562, i64 -31
  %4573 = load <8 x i32>, ptr %4572, align 4, !tbaa !5
  %4574 = shufflevector <8 x i32> %4573, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4575 = mul <8 x i32> %4565, %4557
  %4576 = mul <8 x i32> %4568, %4558
  %4577 = mul <8 x i32> %4571, %4559
  %4578 = mul <8 x i32> %4574, %4560
  %4579 = add nuw i64 %4556, 32
  %4580 = icmp eq i64 %4579, %4553
  br i1 %4580, label %4581, label %4555, !llvm.loop !1454

4581:                                             ; preds = %4555
  %4582 = mul <8 x i32> %4576, %4575
  %4583 = mul <8 x i32> %4577, %4582
  %4584 = mul <8 x i32> %4578, %4583
  %4585 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4584)
  %4586 = icmp eq i64 %4549, %4553
  br i1 %4586, label %4599, label %4587

4587:                                             ; preds = %4540, %4581
  %4588 = phi i64 [ %4543, %4540 ], [ %4554, %4581 ]
  %4589 = phi i32 [ 1, %4540 ], [ %4585, %4581 ]
  br label %4590

4590:                                             ; preds = %4587, %4590
  %4591 = phi i64 [ %4596, %4590 ], [ %4588, %4587 ]
  %4592 = phi i32 [ %4595, %4590 ], [ %4589, %4587 ]
  %4593 = getelementptr inbounds i32, ptr %9, i64 %4591
  %4594 = load i32, ptr %4593, align 4, !tbaa !5
  %4595 = mul nsw i32 %4594, %4592
  %4596 = add nsw i64 %4591, -1
  %4597 = trunc i64 %4591 to i32
  %4598 = icmp sgt i32 %4597, 0
  br i1 %4598, label %4590, label %4599, !llvm.loop !1455

4599:                                             ; preds = %4590, %4581
  %4600 = phi i32 [ %4585, %4581 ], [ %4595, %4590 ]
  %4601 = and i64 %4550, 4294967295
  %4602 = getelementptr inbounds i32, ptr %6, i64 %4601
  %4603 = load i32, ptr %4602, align 4, !tbaa !5
  %4604 = mul nsw i32 %4603, %4600
  %4605 = add nsw i32 %4604, %4544
  %4606 = icmp sgt i64 %4542, 2
  %4607 = add nsw i64 %4543, -1
  %4608 = add i32 %4541, 1
  br i1 %4606, label %4540, label %4609, !llvm.loop !1456

4609:                                             ; preds = %4599, %4536
  %4610 = phi i32 [ %4539, %4536 ], [ %4605, %4599 ]
  %4611 = sext i32 %4610 to i64
  %4612 = getelementptr inbounds double, ptr %4209, i64 %4611
  %4613 = load double, ptr %4612, align 8, !tbaa !18
  %4614 = fptrunc double %4613 to float
  %4615 = fadd fast float %4537, %4614
  %4616 = add nuw nsw i32 %4538, 1
  br i1 %4530, label %4617, label %4664

4617:                                             ; preds = %4609
  %4618 = load i32, ptr %4, align 4, !tbaa !5
  %4619 = load i32, ptr %12, align 4, !tbaa !5
  %4620 = add nsw i32 %4619, -1
  %4621 = icmp slt i32 %4618, %4620
  br i1 %4621, label %4641, label %4622

4622:                                             ; preds = %4617
  %4623 = icmp eq i32 %4618, %4620
  br i1 %4623, label %4624, label %4657

4624:                                             ; preds = %4622
  store i32 0, ptr %4, align 4, !tbaa !5
  %4625 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4625, ptr %6, align 4, !tbaa !5
  br i1 %4535, label %4664, label %4626

4626:                                             ; preds = %4624, %4651
  %4627 = phi i64 [ %4655, %4651 ], [ 1, %4624 ]
  %4628 = getelementptr inbounds i32, ptr %4, i64 %4627
  %4629 = load i32, ptr %4628, align 4, !tbaa !5
  %4630 = getelementptr inbounds i32, ptr %12, i64 %4627
  %4631 = load i32, ptr %4630, align 4, !tbaa !5
  %4632 = add nsw i32 %4631, -1
  %4633 = icmp slt i32 %4629, %4632
  br i1 %4633, label %4634, label %4649

4634:                                             ; preds = %4626
  br i1 %4621, label %4641, label %4635

4635:                                             ; preds = %4634
  %4636 = getelementptr inbounds i32, ptr %7, i64 %4627
  %4637 = load i32, ptr %4636, align 4, !tbaa !5
  %4638 = getelementptr inbounds i32, ptr %6, i64 %4627
  %4639 = load i32, ptr %4638, align 4, !tbaa !5
  %4640 = add nsw i32 %4639, %4637
  store i32 %4640, ptr %4638, align 4, !tbaa !5
  br label %4659

4641:                                             ; preds = %4617, %4634
  %4642 = phi i32 [ %4629, %4634 ], [ %4618, %4617 ]
  %4643 = phi ptr [ %4628, %4634 ], [ %4, %4617 ]
  %4644 = phi i64 [ %4627, %4634 ], [ 0, %4617 ]
  %4645 = add nsw i32 %4642, 1
  store i32 %4645, ptr %4643, align 4, !tbaa !5
  %4646 = getelementptr inbounds i32, ptr %7, i64 %4644
  %4647 = load i32, ptr %4646, align 4, !tbaa !5
  %4648 = getelementptr inbounds i32, ptr %6, i64 %4644
  br label %4659

4649:                                             ; preds = %4626
  %4650 = icmp eq i32 %4629, %4632
  br i1 %4650, label %4651, label %4657

4651:                                             ; preds = %4649
  store i32 0, ptr %4628, align 4, !tbaa !5
  %4652 = getelementptr inbounds i32, ptr %8, i64 %4627
  %4653 = load i32, ptr %4652, align 4, !tbaa !5
  %4654 = getelementptr inbounds i32, ptr %6, i64 %4627
  store i32 %4653, ptr %4654, align 4, !tbaa !5
  %4655 = add nuw nsw i64 %4627, 1
  %4656 = icmp eq i64 %4655, %4533
  br i1 %4656, label %4664, label %4626, !llvm.loop !1457

4657:                                             ; preds = %4622, %4649
  store float %4615, ptr %4211, align 4, !tbaa !162
  %4658 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4659:                                             ; preds = %4635, %4641
  %4660 = phi ptr [ %4648, %4641 ], [ %4628, %4635 ]
  %4661 = phi i32 [ %4647, %4641 ], [ 1, %4635 ]
  %4662 = load i32, ptr %4660, align 4, !tbaa !5
  %4663 = add nsw i32 %4662, %4661
  store i32 %4663, ptr %4660, align 4, !tbaa !5
  br label %4664

4664:                                             ; preds = %4651, %4659, %4624, %4609
  %4665 = icmp eq i32 %4616, %5
  br i1 %4665, label %5400, label %4536, !llvm.loop !1458

4666:                                             ; preds = %4519, %4801
  %4667 = phi float [ 0.000000e+00, %4519 ], [ %4749, %4801 ]
  %4668 = phi i32 [ 0, %4519 ], [ %4750, %4801 ]
  %4669 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4520, label %4670, label %4739

4670:                                             ; preds = %4666, %4729
  %4671 = phi i32 [ %4738, %4729 ], [ 0, %4666 ]
  %4672 = phi i64 [ %4680, %4729 ], [ %4524, %4666 ]
  %4673 = phi i64 [ %4737, %4729 ], [ %4523, %4666 ]
  %4674 = phi i32 [ %4735, %4729 ], [ %4669, %4666 ]
  %4675 = sub i32 %4522, %4671
  %4676 = tail call i32 @llvm.smin.i32(i32 %4675, i32 0)
  %4677 = sub i32 %4675, %4676
  %4678 = zext i32 %4677 to i64
  %4679 = add nuw nsw i64 %4678, 1
  %4680 = add nsw i64 %4672, -1
  %4681 = icmp ult i32 %4677, 31
  br i1 %4681, label %4717, label %4682

4682:                                             ; preds = %4670
  %4683 = and i64 %4679, 8589934560
  %4684 = sub i64 %4673, %4683
  br label %4685

4685:                                             ; preds = %4685, %4682
  %4686 = phi i64 [ 0, %4682 ], [ %4709, %4685 ]
  %4687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4705, %4685 ]
  %4688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4706, %4685 ]
  %4689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4707, %4685 ]
  %4690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4682 ], [ %4708, %4685 ]
  %4691 = sub i64 %4673, %4686
  %4692 = getelementptr inbounds i32, ptr %11, i64 %4691
  %4693 = getelementptr inbounds i32, ptr %4692, i64 -7
  %4694 = load <8 x i32>, ptr %4693, align 4, !tbaa !5
  %4695 = shufflevector <8 x i32> %4694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4696 = getelementptr inbounds i32, ptr %4692, i64 -15
  %4697 = load <8 x i32>, ptr %4696, align 4, !tbaa !5
  %4698 = shufflevector <8 x i32> %4697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4699 = getelementptr inbounds i32, ptr %4692, i64 -23
  %4700 = load <8 x i32>, ptr %4699, align 4, !tbaa !5
  %4701 = shufflevector <8 x i32> %4700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4702 = getelementptr inbounds i32, ptr %4692, i64 -31
  %4703 = load <8 x i32>, ptr %4702, align 4, !tbaa !5
  %4704 = shufflevector <8 x i32> %4703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4705 = mul <8 x i32> %4695, %4687
  %4706 = mul <8 x i32> %4698, %4688
  %4707 = mul <8 x i32> %4701, %4689
  %4708 = mul <8 x i32> %4704, %4690
  %4709 = add nuw i64 %4686, 32
  %4710 = icmp eq i64 %4709, %4683
  br i1 %4710, label %4711, label %4685, !llvm.loop !1459

4711:                                             ; preds = %4685
  %4712 = mul <8 x i32> %4706, %4705
  %4713 = mul <8 x i32> %4707, %4712
  %4714 = mul <8 x i32> %4708, %4713
  %4715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4714)
  %4716 = icmp eq i64 %4679, %4683
  br i1 %4716, label %4729, label %4717

4717:                                             ; preds = %4670, %4711
  %4718 = phi i64 [ %4673, %4670 ], [ %4684, %4711 ]
  %4719 = phi i32 [ 1, %4670 ], [ %4715, %4711 ]
  br label %4720

4720:                                             ; preds = %4717, %4720
  %4721 = phi i64 [ %4726, %4720 ], [ %4718, %4717 ]
  %4722 = phi i32 [ %4725, %4720 ], [ %4719, %4717 ]
  %4723 = getelementptr inbounds i32, ptr %11, i64 %4721
  %4724 = load i32, ptr %4723, align 4, !tbaa !5
  %4725 = mul nsw i32 %4724, %4722
  %4726 = add nsw i64 %4721, -1
  %4727 = trunc i64 %4721 to i32
  %4728 = icmp sgt i32 %4727, 0
  br i1 %4728, label %4720, label %4729, !llvm.loop !1460

4729:                                             ; preds = %4720, %4711
  %4730 = phi i32 [ %4715, %4711 ], [ %4725, %4720 ]
  %4731 = and i64 %4680, 4294967295
  %4732 = getelementptr inbounds i32, ptr %6, i64 %4731
  %4733 = load i32, ptr %4732, align 4, !tbaa !5
  %4734 = mul nsw i32 %4733, %4730
  %4735 = add nsw i32 %4734, %4674
  %4736 = icmp sgt i64 %4672, 2
  %4737 = add nsw i64 %4673, -1
  %4738 = add i32 %4671, 1
  br i1 %4736, label %4670, label %4739, !llvm.loop !1461

4739:                                             ; preds = %4729, %4666
  %4740 = phi i32 [ %4669, %4666 ], [ %4735, %4729 ]
  %4741 = icmp slt i32 %4740, %5
  br i1 %4741, label %4744, label %4742

4742:                                             ; preds = %4739
  %4743 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

4744:                                             ; preds = %4739
  %4745 = sext i32 %4740 to i64
  %4746 = getelementptr inbounds double, ptr %4209, i64 %4745
  %4747 = load double, ptr %4746, align 8, !tbaa !18
  %4748 = fptrunc double %4747 to float
  %4749 = fadd fast float %4667, %4748
  store float %4749, ptr %4211, align 4, !tbaa !162
  %4750 = add nuw nsw i32 %4668, 1
  br i1 %4521, label %4751, label %4801

4751:                                             ; preds = %4744
  %4752 = load i32, ptr %4, align 4, !tbaa !5
  %4753 = load i32, ptr %12, align 4, !tbaa !5
  %4754 = add nsw i32 %4753, -1
  %4755 = icmp slt i32 %4752, %4754
  br i1 %4755, label %4778, label %4756

4756:                                             ; preds = %4751
  %4757 = icmp eq i32 %4752, %4754
  br i1 %4757, label %4758, label %4794

4758:                                             ; preds = %4756
  store i32 0, ptr %4, align 4, !tbaa !5
  %4759 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4759, ptr %6, align 4, !tbaa !5
  br i1 %4526, label %4801, label %4760

4760:                                             ; preds = %4758, %4788
  %4761 = phi i64 [ %4792, %4788 ], [ 1, %4758 ]
  %4762 = getelementptr inbounds i32, ptr %4, i64 %4761
  %4763 = load i32, ptr %4762, align 4, !tbaa !5
  %4764 = getelementptr inbounds i32, ptr %12, i64 %4761
  %4765 = load i32, ptr %4764, align 4, !tbaa !5
  %4766 = add nsw i32 %4765, -1
  %4767 = icmp slt i32 %4763, %4766
  br i1 %4767, label %4768, label %4786

4768:                                             ; preds = %4760
  br i1 %4755, label %4778, label %4769

4769:                                             ; preds = %4768
  %4770 = shl i64 %4761, 32
  %4771 = add i64 %4770, -4294967296
  %4772 = ashr exact i64 %4771, 32
  %4773 = getelementptr inbounds i32, ptr %7, i64 %4772
  %4774 = load i32, ptr %4773, align 4, !tbaa !5
  %4775 = getelementptr inbounds i32, ptr %6, i64 %4761
  %4776 = load i32, ptr %4775, align 4, !tbaa !5
  %4777 = add nsw i32 %4776, %4774
  store i32 %4777, ptr %4775, align 4, !tbaa !5
  br label %4796

4778:                                             ; preds = %4751, %4768
  %4779 = phi i32 [ %4763, %4768 ], [ %4752, %4751 ]
  %4780 = phi ptr [ %4762, %4768 ], [ %4, %4751 ]
  %4781 = phi i64 [ %4761, %4768 ], [ 0, %4751 ]
  %4782 = add nsw i32 %4779, 1
  store i32 %4782, ptr %4780, align 4, !tbaa !5
  %4783 = getelementptr inbounds i32, ptr %7, i64 %4781
  %4784 = load i32, ptr %4783, align 4, !tbaa !5
  %4785 = getelementptr inbounds i32, ptr %6, i64 %4781
  br label %4796

4786:                                             ; preds = %4760
  %4787 = icmp eq i32 %4763, %4766
  br i1 %4787, label %4788, label %4794

4788:                                             ; preds = %4786
  store i32 0, ptr %4762, align 4, !tbaa !5
  %4789 = getelementptr inbounds i32, ptr %8, i64 %4761
  %4790 = load i32, ptr %4789, align 4, !tbaa !5
  %4791 = getelementptr inbounds i32, ptr %6, i64 %4761
  store i32 %4790, ptr %4791, align 4, !tbaa !5
  %4792 = add nuw nsw i64 %4761, 1
  %4793 = icmp eq i64 %4792, %4524
  br i1 %4793, label %4801, label %4760, !llvm.loop !1462

4794:                                             ; preds = %4756, %4786
  %4795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4796:                                             ; preds = %4769, %4778
  %4797 = phi ptr [ %4785, %4778 ], [ %4762, %4769 ]
  %4798 = phi i32 [ %4784, %4778 ], [ 1, %4769 ]
  %4799 = load i32, ptr %4797, align 4, !tbaa !5
  %4800 = add nsw i32 %4799, %4798
  store i32 %4800, ptr %4797, align 4, !tbaa !5
  br label %4801

4801:                                             ; preds = %4788, %4796, %4758, %4744
  %4802 = icmp eq i32 %4750, %5
  br i1 %4802, label %5401, label %4666, !llvm.loop !1463

4803:                                             ; preds = %4216
  %4804 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

4805:                                             ; preds = %18
  %4806 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4807 = load ptr, ptr %4806, align 8, !tbaa !9
  %4808 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4809 = load ptr, ptr %4808, align 8, !tbaa !9
  store double 0.000000e+00, ptr %4809, align 8, !tbaa !18
  %4810 = icmp eq i32 %13, 0
  br i1 %4810, label %4811, label %4813

4811:                                             ; preds = %4805
  %4812 = load double, ptr %4807, align 8, !tbaa !18
  store double %4812, ptr %4809, align 8, !tbaa !18
  br label %5401

4813:                                             ; preds = %4805
  switch i32 %1, label %5393 [
    i32 1, label %4814
    i32 0, label %5105
  ]

4814:                                             ; preds = %4813
  %4815 = getelementptr inbounds i32, ptr %3, i64 %19
  %4816 = load i32, ptr %4815, align 4, !tbaa !5
  %4817 = icmp eq i32 %4816, 0
  %4818 = icmp sgt i32 %5, 0
  br i1 %4817, label %4828, label %4819

4819:                                             ; preds = %4814
  br i1 %4818, label %4820, label %5401

4820:                                             ; preds = %4819
  %4821 = icmp sgt i32 %13, 1
  %4822 = icmp sgt i32 %13, 0
  %4823 = add i32 %13, -2
  %4824 = zext i32 %4823 to i64
  %4825 = zext i32 %13 to i64
  %4826 = add nuw i32 %5, 1
  %4827 = icmp eq i32 %13, 1
  br label %4969

4828:                                             ; preds = %4814
  br i1 %4818, label %4829, label %5401

4829:                                             ; preds = %4828
  %4830 = icmp sgt i32 %13, 1
  %4831 = icmp sgt i32 %13, 0
  %4832 = add i32 %13, -2
  %4833 = zext i32 %4832 to i64
  %4834 = zext i32 %13 to i64
  %4835 = add nuw i32 %5, 1
  %4836 = icmp eq i32 %13, 1
  br label %4837

4837:                                             ; preds = %4829, %4967
  %4838 = phi double [ 0.000000e+00, %4829 ], [ %4918, %4967 ]
  %4839 = phi i32 [ 0, %4829 ], [ %4919, %4967 ]
  %4840 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4830, label %4841, label %4910

4841:                                             ; preds = %4837, %4900
  %4842 = phi i32 [ %4909, %4900 ], [ 0, %4837 ]
  %4843 = phi i64 [ %4851, %4900 ], [ %4834, %4837 ]
  %4844 = phi i64 [ %4908, %4900 ], [ %4833, %4837 ]
  %4845 = phi i32 [ %4906, %4900 ], [ %4840, %4837 ]
  %4846 = sub i32 %4832, %4842
  %4847 = tail call i32 @llvm.smin.i32(i32 %4846, i32 0)
  %4848 = sub i32 %4846, %4847
  %4849 = zext i32 %4848 to i64
  %4850 = add nuw nsw i64 %4849, 1
  %4851 = add nsw i64 %4843, -1
  %4852 = icmp ult i32 %4848, 31
  br i1 %4852, label %4888, label %4853

4853:                                             ; preds = %4841
  %4854 = and i64 %4850, 8589934560
  %4855 = sub i64 %4844, %4854
  br label %4856

4856:                                             ; preds = %4856, %4853
  %4857 = phi i64 [ 0, %4853 ], [ %4880, %4856 ]
  %4858 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4876, %4856 ]
  %4859 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4877, %4856 ]
  %4860 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4878, %4856 ]
  %4861 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4853 ], [ %4879, %4856 ]
  %4862 = sub i64 %4844, %4857
  %4863 = getelementptr inbounds i32, ptr %9, i64 %4862
  %4864 = getelementptr inbounds i32, ptr %4863, i64 -7
  %4865 = load <8 x i32>, ptr %4864, align 4, !tbaa !5
  %4866 = shufflevector <8 x i32> %4865, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4867 = getelementptr inbounds i32, ptr %4863, i64 -15
  %4868 = load <8 x i32>, ptr %4867, align 4, !tbaa !5
  %4869 = shufflevector <8 x i32> %4868, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4870 = getelementptr inbounds i32, ptr %4863, i64 -23
  %4871 = load <8 x i32>, ptr %4870, align 4, !tbaa !5
  %4872 = shufflevector <8 x i32> %4871, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4873 = getelementptr inbounds i32, ptr %4863, i64 -31
  %4874 = load <8 x i32>, ptr %4873, align 4, !tbaa !5
  %4875 = shufflevector <8 x i32> %4874, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4876 = mul <8 x i32> %4866, %4858
  %4877 = mul <8 x i32> %4869, %4859
  %4878 = mul <8 x i32> %4872, %4860
  %4879 = mul <8 x i32> %4875, %4861
  %4880 = add nuw i64 %4857, 32
  %4881 = icmp eq i64 %4880, %4854
  br i1 %4881, label %4882, label %4856, !llvm.loop !1464

4882:                                             ; preds = %4856
  %4883 = mul <8 x i32> %4877, %4876
  %4884 = mul <8 x i32> %4878, %4883
  %4885 = mul <8 x i32> %4879, %4884
  %4886 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4885)
  %4887 = icmp eq i64 %4850, %4854
  br i1 %4887, label %4900, label %4888

4888:                                             ; preds = %4841, %4882
  %4889 = phi i64 [ %4844, %4841 ], [ %4855, %4882 ]
  %4890 = phi i32 [ 1, %4841 ], [ %4886, %4882 ]
  br label %4891

4891:                                             ; preds = %4888, %4891
  %4892 = phi i64 [ %4897, %4891 ], [ %4889, %4888 ]
  %4893 = phi i32 [ %4896, %4891 ], [ %4890, %4888 ]
  %4894 = getelementptr inbounds i32, ptr %9, i64 %4892
  %4895 = load i32, ptr %4894, align 4, !tbaa !5
  %4896 = mul nsw i32 %4895, %4893
  %4897 = add nsw i64 %4892, -1
  %4898 = trunc i64 %4892 to i32
  %4899 = icmp sgt i32 %4898, 0
  br i1 %4899, label %4891, label %4900, !llvm.loop !1465

4900:                                             ; preds = %4891, %4882
  %4901 = phi i32 [ %4886, %4882 ], [ %4896, %4891 ]
  %4902 = and i64 %4851, 4294967295
  %4903 = getelementptr inbounds i32, ptr %6, i64 %4902
  %4904 = load i32, ptr %4903, align 4, !tbaa !5
  %4905 = mul nsw i32 %4904, %4901
  %4906 = add nsw i32 %4905, %4845
  %4907 = icmp sgt i64 %4843, 2
  %4908 = add nsw i64 %4844, -1
  %4909 = add i32 %4842, 1
  br i1 %4907, label %4841, label %4910, !llvm.loop !1466

4910:                                             ; preds = %4900, %4837
  %4911 = phi i32 [ %4840, %4837 ], [ %4906, %4900 ]
  %4912 = sext i32 %4911 to i64
  %4913 = getelementptr inbounds double, ptr %2, i64 %4912
  %4914 = load double, ptr %4913, align 8, !tbaa !18
  %4915 = getelementptr inbounds double, ptr %4807, i64 %4912
  %4916 = load double, ptr %4915, align 8, !tbaa !18
  %4917 = fmul fast double %4916, %4914
  %4918 = fadd fast double %4838, %4917
  store double %4918, ptr %4809, align 8, !tbaa !18
  %4919 = add nuw nsw i32 %4839, 1
  br i1 %4831, label %4920, label %4967

4920:                                             ; preds = %4910
  %4921 = load i32, ptr %4, align 4, !tbaa !5
  %4922 = load i32, ptr %12, align 4, !tbaa !5
  %4923 = add nsw i32 %4922, -1
  %4924 = icmp slt i32 %4921, %4923
  br i1 %4924, label %4944, label %4925

4925:                                             ; preds = %4920
  %4926 = icmp eq i32 %4921, %4923
  br i1 %4926, label %4927, label %4960

4927:                                             ; preds = %4925
  store i32 0, ptr %4, align 4, !tbaa !5
  %4928 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %4928, ptr %6, align 4, !tbaa !5
  br i1 %4836, label %4967, label %4929

4929:                                             ; preds = %4927, %4954
  %4930 = phi i64 [ %4958, %4954 ], [ 1, %4927 ]
  %4931 = getelementptr inbounds i32, ptr %4, i64 %4930
  %4932 = load i32, ptr %4931, align 4, !tbaa !5
  %4933 = getelementptr inbounds i32, ptr %12, i64 %4930
  %4934 = load i32, ptr %4933, align 4, !tbaa !5
  %4935 = add nsw i32 %4934, -1
  %4936 = icmp slt i32 %4932, %4935
  br i1 %4936, label %4937, label %4952

4937:                                             ; preds = %4929
  br i1 %4924, label %4944, label %4938

4938:                                             ; preds = %4937
  %4939 = getelementptr inbounds i32, ptr %7, i64 %4930
  %4940 = load i32, ptr %4939, align 4, !tbaa !5
  %4941 = getelementptr inbounds i32, ptr %6, i64 %4930
  %4942 = load i32, ptr %4941, align 4, !tbaa !5
  %4943 = add nsw i32 %4942, %4940
  store i32 %4943, ptr %4941, align 4, !tbaa !5
  br label %4962

4944:                                             ; preds = %4920, %4937
  %4945 = phi i32 [ %4932, %4937 ], [ %4921, %4920 ]
  %4946 = phi ptr [ %4931, %4937 ], [ %4, %4920 ]
  %4947 = phi i64 [ %4930, %4937 ], [ 0, %4920 ]
  %4948 = add nsw i32 %4945, 1
  store i32 %4948, ptr %4946, align 4, !tbaa !5
  %4949 = getelementptr inbounds i32, ptr %7, i64 %4947
  %4950 = load i32, ptr %4949, align 4, !tbaa !5
  %4951 = getelementptr inbounds i32, ptr %6, i64 %4947
  br label %4962

4952:                                             ; preds = %4929
  %4953 = icmp eq i32 %4932, %4935
  br i1 %4953, label %4954, label %4960

4954:                                             ; preds = %4952
  store i32 0, ptr %4931, align 4, !tbaa !5
  %4955 = getelementptr inbounds i32, ptr %8, i64 %4930
  %4956 = load i32, ptr %4955, align 4, !tbaa !5
  %4957 = getelementptr inbounds i32, ptr %6, i64 %4930
  store i32 %4956, ptr %4957, align 4, !tbaa !5
  %4958 = add nuw nsw i64 %4930, 1
  %4959 = icmp eq i64 %4958, %4834
  br i1 %4959, label %4967, label %4929, !llvm.loop !1467

4960:                                             ; preds = %4925, %4952
  %4961 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

4962:                                             ; preds = %4938, %4944
  %4963 = phi ptr [ %4951, %4944 ], [ %4931, %4938 ]
  %4964 = phi i32 [ %4950, %4944 ], [ 1, %4938 ]
  %4965 = load i32, ptr %4963, align 4, !tbaa !5
  %4966 = add nsw i32 %4965, %4964
  store i32 %4966, ptr %4963, align 4, !tbaa !5
  br label %4967

4967:                                             ; preds = %4954, %4962, %4927, %4910
  %4968 = icmp eq i32 %4919, %5
  br i1 %4968, label %5401, label %4837, !llvm.loop !1468

4969:                                             ; preds = %4820, %5103
  %4970 = phi double [ 0.000000e+00, %4820 ], [ %5051, %5103 ]
  %4971 = phi i32 [ 0, %4820 ], [ %5052, %5103 ]
  %4972 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %4821, label %4973, label %5042

4973:                                             ; preds = %4969, %5032
  %4974 = phi i32 [ %5041, %5032 ], [ 0, %4969 ]
  %4975 = phi i64 [ %4983, %5032 ], [ %4825, %4969 ]
  %4976 = phi i64 [ %5040, %5032 ], [ %4824, %4969 ]
  %4977 = phi i32 [ %5038, %5032 ], [ %4972, %4969 ]
  %4978 = sub i32 %4823, %4974
  %4979 = tail call i32 @llvm.smin.i32(i32 %4978, i32 0)
  %4980 = sub i32 %4978, %4979
  %4981 = zext i32 %4980 to i64
  %4982 = add nuw nsw i64 %4981, 1
  %4983 = add nsw i64 %4975, -1
  %4984 = icmp ult i32 %4980, 31
  br i1 %4984, label %5020, label %4985

4985:                                             ; preds = %4973
  %4986 = and i64 %4982, 8589934560
  %4987 = sub i64 %4976, %4986
  br label %4988

4988:                                             ; preds = %4988, %4985
  %4989 = phi i64 [ 0, %4985 ], [ %5012, %4988 ]
  %4990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5008, %4988 ]
  %4991 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5009, %4988 ]
  %4992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5010, %4988 ]
  %4993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4985 ], [ %5011, %4988 ]
  %4994 = sub i64 %4976, %4989
  %4995 = getelementptr inbounds i32, ptr %11, i64 %4994
  %4996 = getelementptr inbounds i32, ptr %4995, i64 -7
  %4997 = load <8 x i32>, ptr %4996, align 4, !tbaa !5
  %4998 = shufflevector <8 x i32> %4997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4999 = getelementptr inbounds i32, ptr %4995, i64 -15
  %5000 = load <8 x i32>, ptr %4999, align 4, !tbaa !5
  %5001 = shufflevector <8 x i32> %5000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5002 = getelementptr inbounds i32, ptr %4995, i64 -23
  %5003 = load <8 x i32>, ptr %5002, align 4, !tbaa !5
  %5004 = shufflevector <8 x i32> %5003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5005 = getelementptr inbounds i32, ptr %4995, i64 -31
  %5006 = load <8 x i32>, ptr %5005, align 4, !tbaa !5
  %5007 = shufflevector <8 x i32> %5006, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5008 = mul <8 x i32> %4998, %4990
  %5009 = mul <8 x i32> %5001, %4991
  %5010 = mul <8 x i32> %5004, %4992
  %5011 = mul <8 x i32> %5007, %4993
  %5012 = add nuw i64 %4989, 32
  %5013 = icmp eq i64 %5012, %4986
  br i1 %5013, label %5014, label %4988, !llvm.loop !1469

5014:                                             ; preds = %4988
  %5015 = mul <8 x i32> %5009, %5008
  %5016 = mul <8 x i32> %5010, %5015
  %5017 = mul <8 x i32> %5011, %5016
  %5018 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5017)
  %5019 = icmp eq i64 %4982, %4986
  br i1 %5019, label %5032, label %5020

5020:                                             ; preds = %4973, %5014
  %5021 = phi i64 [ %4976, %4973 ], [ %4987, %5014 ]
  %5022 = phi i32 [ 1, %4973 ], [ %5018, %5014 ]
  br label %5023

5023:                                             ; preds = %5020, %5023
  %5024 = phi i64 [ %5029, %5023 ], [ %5021, %5020 ]
  %5025 = phi i32 [ %5028, %5023 ], [ %5022, %5020 ]
  %5026 = getelementptr inbounds i32, ptr %11, i64 %5024
  %5027 = load i32, ptr %5026, align 4, !tbaa !5
  %5028 = mul nsw i32 %5027, %5025
  %5029 = add nsw i64 %5024, -1
  %5030 = trunc i64 %5024 to i32
  %5031 = icmp sgt i32 %5030, 0
  br i1 %5031, label %5023, label %5032, !llvm.loop !1470

5032:                                             ; preds = %5023, %5014
  %5033 = phi i32 [ %5018, %5014 ], [ %5028, %5023 ]
  %5034 = and i64 %4983, 4294967295
  %5035 = getelementptr inbounds i32, ptr %6, i64 %5034
  %5036 = load i32, ptr %5035, align 4, !tbaa !5
  %5037 = mul nsw i32 %5036, %5033
  %5038 = add nsw i32 %5037, %4977
  %5039 = icmp sgt i64 %4975, 2
  %5040 = add nsw i64 %4976, -1
  %5041 = add i32 %4974, 1
  br i1 %5039, label %4973, label %5042, !llvm.loop !1471

5042:                                             ; preds = %5032, %4969
  %5043 = phi i32 [ %4972, %4969 ], [ %5038, %5032 ]
  %5044 = icmp slt i32 %5043, %5
  br i1 %5044, label %5047, label %5045

5045:                                             ; preds = %5042
  %5046 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

5047:                                             ; preds = %5042
  %5048 = sext i32 %5043 to i64
  %5049 = getelementptr inbounds double, ptr %4807, i64 %5048
  %5050 = load double, ptr %5049, align 8, !tbaa !18
  %5051 = fadd fast double %4970, %5050
  store double %5051, ptr %4809, align 8, !tbaa !18
  %5052 = add nuw nsw i32 %4971, 1
  br i1 %4822, label %5053, label %5103

5053:                                             ; preds = %5047
  %5054 = load i32, ptr %4, align 4, !tbaa !5
  %5055 = load i32, ptr %12, align 4, !tbaa !5
  %5056 = add nsw i32 %5055, -1
  %5057 = icmp slt i32 %5054, %5056
  br i1 %5057, label %5080, label %5058

5058:                                             ; preds = %5053
  %5059 = icmp eq i32 %5054, %5056
  br i1 %5059, label %5060, label %5096

5060:                                             ; preds = %5058
  store i32 0, ptr %4, align 4, !tbaa !5
  %5061 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5061, ptr %6, align 4, !tbaa !5
  br i1 %4827, label %5103, label %5062

5062:                                             ; preds = %5060, %5090
  %5063 = phi i64 [ %5094, %5090 ], [ 1, %5060 ]
  %5064 = getelementptr inbounds i32, ptr %4, i64 %5063
  %5065 = load i32, ptr %5064, align 4, !tbaa !5
  %5066 = getelementptr inbounds i32, ptr %12, i64 %5063
  %5067 = load i32, ptr %5066, align 4, !tbaa !5
  %5068 = add nsw i32 %5067, -1
  %5069 = icmp slt i32 %5065, %5068
  br i1 %5069, label %5070, label %5088

5070:                                             ; preds = %5062
  br i1 %5057, label %5080, label %5071

5071:                                             ; preds = %5070
  %5072 = shl i64 %5063, 32
  %5073 = add i64 %5072, -4294967296
  %5074 = ashr exact i64 %5073, 32
  %5075 = getelementptr inbounds i32, ptr %7, i64 %5074
  %5076 = load i32, ptr %5075, align 4, !tbaa !5
  %5077 = getelementptr inbounds i32, ptr %6, i64 %5063
  %5078 = load i32, ptr %5077, align 4, !tbaa !5
  %5079 = add nsw i32 %5078, %5076
  store i32 %5079, ptr %5077, align 4, !tbaa !5
  br label %5098

5080:                                             ; preds = %5053, %5070
  %5081 = phi i32 [ %5065, %5070 ], [ %5054, %5053 ]
  %5082 = phi ptr [ %5064, %5070 ], [ %4, %5053 ]
  %5083 = phi i64 [ %5063, %5070 ], [ 0, %5053 ]
  %5084 = add nsw i32 %5081, 1
  store i32 %5084, ptr %5082, align 4, !tbaa !5
  %5085 = getelementptr inbounds i32, ptr %7, i64 %5083
  %5086 = load i32, ptr %5085, align 4, !tbaa !5
  %5087 = getelementptr inbounds i32, ptr %6, i64 %5083
  br label %5098

5088:                                             ; preds = %5062
  %5089 = icmp eq i32 %5065, %5068
  br i1 %5089, label %5090, label %5096

5090:                                             ; preds = %5088
  store i32 0, ptr %5064, align 4, !tbaa !5
  %5091 = getelementptr inbounds i32, ptr %8, i64 %5063
  %5092 = load i32, ptr %5091, align 4, !tbaa !5
  %5093 = getelementptr inbounds i32, ptr %6, i64 %5063
  store i32 %5092, ptr %5093, align 4, !tbaa !5
  %5094 = add nuw nsw i64 %5063, 1
  %5095 = icmp eq i64 %5094, %4825
  br i1 %5095, label %5103, label %5062, !llvm.loop !1472

5096:                                             ; preds = %5058, %5088
  %5097 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

5098:                                             ; preds = %5071, %5080
  %5099 = phi ptr [ %5087, %5080 ], [ %5064, %5071 ]
  %5100 = phi i32 [ %5086, %5080 ], [ 1, %5071 ]
  %5101 = load i32, ptr %5099, align 4, !tbaa !5
  %5102 = add nsw i32 %5101, %5100
  store i32 %5102, ptr %5099, align 4, !tbaa !5
  br label %5103

5103:                                             ; preds = %5090, %5098, %5060, %5047
  %5104 = icmp eq i32 %5052, %5
  br i1 %5104, label %5401, label %4969, !llvm.loop !1473

5105:                                             ; preds = %4813
  %5106 = getelementptr inbounds i32, ptr %3, i64 %19
  %5107 = load i32, ptr %5106, align 4, !tbaa !5
  %5108 = icmp eq i32 %5107, 0
  %5109 = icmp sgt i32 %5, 0
  br i1 %5108, label %5119, label %5110

5110:                                             ; preds = %5105
  br i1 %5109, label %5111, label %5401

5111:                                             ; preds = %5110
  %5112 = icmp sgt i32 %13, 1
  %5113 = icmp sgt i32 %13, 0
  %5114 = add i32 %13, -2
  %5115 = zext i32 %5114 to i64
  %5116 = zext i32 %13 to i64
  %5117 = add nuw i32 %5, 1
  %5118 = icmp eq i32 %13, 1
  br label %5257

5119:                                             ; preds = %5105
  br i1 %5109, label %5120, label %5401

5120:                                             ; preds = %5119
  %5121 = icmp sgt i32 %13, 1
  %5122 = icmp sgt i32 %13, 0
  %5123 = add i32 %13, -2
  %5124 = zext i32 %5123 to i64
  %5125 = zext i32 %13 to i64
  %5126 = add nuw i32 %5, 1
  %5127 = icmp eq i32 %13, 1
  br label %5128

5128:                                             ; preds = %5120, %5255
  %5129 = phi double [ 0.000000e+00, %5120 ], [ %5206, %5255 ]
  %5130 = phi i32 [ 0, %5120 ], [ %5207, %5255 ]
  %5131 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5121, label %5132, label %5201

5132:                                             ; preds = %5128, %5191
  %5133 = phi i32 [ %5200, %5191 ], [ 0, %5128 ]
  %5134 = phi i64 [ %5142, %5191 ], [ %5125, %5128 ]
  %5135 = phi i64 [ %5199, %5191 ], [ %5124, %5128 ]
  %5136 = phi i32 [ %5197, %5191 ], [ %5131, %5128 ]
  %5137 = sub i32 %5123, %5133
  %5138 = tail call i32 @llvm.smin.i32(i32 %5137, i32 0)
  %5139 = sub i32 %5137, %5138
  %5140 = zext i32 %5139 to i64
  %5141 = add nuw nsw i64 %5140, 1
  %5142 = add nsw i64 %5134, -1
  %5143 = icmp ult i32 %5139, 31
  br i1 %5143, label %5179, label %5144

5144:                                             ; preds = %5132
  %5145 = and i64 %5141, 8589934560
  %5146 = sub i64 %5135, %5145
  br label %5147

5147:                                             ; preds = %5147, %5144
  %5148 = phi i64 [ 0, %5144 ], [ %5171, %5147 ]
  %5149 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5167, %5147 ]
  %5150 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5168, %5147 ]
  %5151 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5169, %5147 ]
  %5152 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5144 ], [ %5170, %5147 ]
  %5153 = sub i64 %5135, %5148
  %5154 = getelementptr inbounds i32, ptr %9, i64 %5153
  %5155 = getelementptr inbounds i32, ptr %5154, i64 -7
  %5156 = load <8 x i32>, ptr %5155, align 4, !tbaa !5
  %5157 = shufflevector <8 x i32> %5156, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5158 = getelementptr inbounds i32, ptr %5154, i64 -15
  %5159 = load <8 x i32>, ptr %5158, align 4, !tbaa !5
  %5160 = shufflevector <8 x i32> %5159, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5161 = getelementptr inbounds i32, ptr %5154, i64 -23
  %5162 = load <8 x i32>, ptr %5161, align 4, !tbaa !5
  %5163 = shufflevector <8 x i32> %5162, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5164 = getelementptr inbounds i32, ptr %5154, i64 -31
  %5165 = load <8 x i32>, ptr %5164, align 4, !tbaa !5
  %5166 = shufflevector <8 x i32> %5165, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5167 = mul <8 x i32> %5157, %5149
  %5168 = mul <8 x i32> %5160, %5150
  %5169 = mul <8 x i32> %5163, %5151
  %5170 = mul <8 x i32> %5166, %5152
  %5171 = add nuw i64 %5148, 32
  %5172 = icmp eq i64 %5171, %5145
  br i1 %5172, label %5173, label %5147, !llvm.loop !1474

5173:                                             ; preds = %5147
  %5174 = mul <8 x i32> %5168, %5167
  %5175 = mul <8 x i32> %5169, %5174
  %5176 = mul <8 x i32> %5170, %5175
  %5177 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5176)
  %5178 = icmp eq i64 %5141, %5145
  br i1 %5178, label %5191, label %5179

5179:                                             ; preds = %5132, %5173
  %5180 = phi i64 [ %5135, %5132 ], [ %5146, %5173 ]
  %5181 = phi i32 [ 1, %5132 ], [ %5177, %5173 ]
  br label %5182

5182:                                             ; preds = %5179, %5182
  %5183 = phi i64 [ %5188, %5182 ], [ %5180, %5179 ]
  %5184 = phi i32 [ %5187, %5182 ], [ %5181, %5179 ]
  %5185 = getelementptr inbounds i32, ptr %9, i64 %5183
  %5186 = load i32, ptr %5185, align 4, !tbaa !5
  %5187 = mul nsw i32 %5186, %5184
  %5188 = add nsw i64 %5183, -1
  %5189 = trunc i64 %5183 to i32
  %5190 = icmp sgt i32 %5189, 0
  br i1 %5190, label %5182, label %5191, !llvm.loop !1475

5191:                                             ; preds = %5182, %5173
  %5192 = phi i32 [ %5177, %5173 ], [ %5187, %5182 ]
  %5193 = and i64 %5142, 4294967295
  %5194 = getelementptr inbounds i32, ptr %6, i64 %5193
  %5195 = load i32, ptr %5194, align 4, !tbaa !5
  %5196 = mul nsw i32 %5195, %5192
  %5197 = add nsw i32 %5196, %5136
  %5198 = icmp sgt i64 %5134, 2
  %5199 = add nsw i64 %5135, -1
  %5200 = add i32 %5133, 1
  br i1 %5198, label %5132, label %5201, !llvm.loop !1476

5201:                                             ; preds = %5191, %5128
  %5202 = phi i32 [ %5131, %5128 ], [ %5197, %5191 ]
  %5203 = sext i32 %5202 to i64
  %5204 = getelementptr inbounds double, ptr %4807, i64 %5203
  %5205 = load double, ptr %5204, align 8, !tbaa !18
  %5206 = fadd fast double %5129, %5205
  store double %5206, ptr %4809, align 8, !tbaa !18
  %5207 = add nuw nsw i32 %5130, 1
  br i1 %5122, label %5208, label %5255

5208:                                             ; preds = %5201
  %5209 = load i32, ptr %4, align 4, !tbaa !5
  %5210 = load i32, ptr %12, align 4, !tbaa !5
  %5211 = add nsw i32 %5210, -1
  %5212 = icmp slt i32 %5209, %5211
  br i1 %5212, label %5232, label %5213

5213:                                             ; preds = %5208
  %5214 = icmp eq i32 %5209, %5211
  br i1 %5214, label %5215, label %5248

5215:                                             ; preds = %5213
  store i32 0, ptr %4, align 4, !tbaa !5
  %5216 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5216, ptr %6, align 4, !tbaa !5
  br i1 %5127, label %5255, label %5217

5217:                                             ; preds = %5215, %5242
  %5218 = phi i64 [ %5246, %5242 ], [ 1, %5215 ]
  %5219 = getelementptr inbounds i32, ptr %4, i64 %5218
  %5220 = load i32, ptr %5219, align 4, !tbaa !5
  %5221 = getelementptr inbounds i32, ptr %12, i64 %5218
  %5222 = load i32, ptr %5221, align 4, !tbaa !5
  %5223 = add nsw i32 %5222, -1
  %5224 = icmp slt i32 %5220, %5223
  br i1 %5224, label %5225, label %5240

5225:                                             ; preds = %5217
  br i1 %5212, label %5232, label %5226

5226:                                             ; preds = %5225
  %5227 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5228 = load i32, ptr %5227, align 4, !tbaa !5
  %5229 = getelementptr inbounds i32, ptr %6, i64 %5218
  %5230 = load i32, ptr %5229, align 4, !tbaa !5
  %5231 = add nsw i32 %5230, %5228
  store i32 %5231, ptr %5229, align 4, !tbaa !5
  br label %5250

5232:                                             ; preds = %5208, %5225
  %5233 = phi i32 [ %5220, %5225 ], [ %5209, %5208 ]
  %5234 = phi ptr [ %5219, %5225 ], [ %4, %5208 ]
  %5235 = phi i64 [ %5218, %5225 ], [ 0, %5208 ]
  %5236 = add nsw i32 %5233, 1
  store i32 %5236, ptr %5234, align 4, !tbaa !5
  %5237 = getelementptr inbounds i32, ptr %7, i64 %5235
  %5238 = load i32, ptr %5237, align 4, !tbaa !5
  %5239 = getelementptr inbounds i32, ptr %6, i64 %5235
  br label %5250

5240:                                             ; preds = %5217
  %5241 = icmp eq i32 %5220, %5223
  br i1 %5241, label %5242, label %5248

5242:                                             ; preds = %5240
  store i32 0, ptr %5219, align 4, !tbaa !5
  %5243 = getelementptr inbounds i32, ptr %8, i64 %5218
  %5244 = load i32, ptr %5243, align 4, !tbaa !5
  %5245 = getelementptr inbounds i32, ptr %6, i64 %5218
  store i32 %5244, ptr %5245, align 4, !tbaa !5
  %5246 = add nuw nsw i64 %5218, 1
  %5247 = icmp eq i64 %5246, %5125
  br i1 %5247, label %5255, label %5217, !llvm.loop !1477

5248:                                             ; preds = %5213, %5240
  %5249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

5250:                                             ; preds = %5226, %5232
  %5251 = phi ptr [ %5239, %5232 ], [ %5219, %5226 ]
  %5252 = phi i32 [ %5238, %5232 ], [ 1, %5226 ]
  %5253 = load i32, ptr %5251, align 4, !tbaa !5
  %5254 = add nsw i32 %5253, %5252
  store i32 %5254, ptr %5251, align 4, !tbaa !5
  br label %5255

5255:                                             ; preds = %5242, %5250, %5215, %5201
  %5256 = icmp eq i32 %5207, %5
  br i1 %5256, label %5401, label %5128, !llvm.loop !1478

5257:                                             ; preds = %5111, %5391
  %5258 = phi double [ 0.000000e+00, %5111 ], [ %5339, %5391 ]
  %5259 = phi i32 [ 0, %5111 ], [ %5340, %5391 ]
  %5260 = load i32, ptr %6, align 4, !tbaa !5
  br i1 %5112, label %5261, label %5330

5261:                                             ; preds = %5257, %5320
  %5262 = phi i32 [ %5329, %5320 ], [ 0, %5257 ]
  %5263 = phi i64 [ %5271, %5320 ], [ %5116, %5257 ]
  %5264 = phi i64 [ %5328, %5320 ], [ %5115, %5257 ]
  %5265 = phi i32 [ %5326, %5320 ], [ %5260, %5257 ]
  %5266 = sub i32 %5114, %5262
  %5267 = tail call i32 @llvm.smin.i32(i32 %5266, i32 0)
  %5268 = sub i32 %5266, %5267
  %5269 = zext i32 %5268 to i64
  %5270 = add nuw nsw i64 %5269, 1
  %5271 = add nsw i64 %5263, -1
  %5272 = icmp ult i32 %5268, 31
  br i1 %5272, label %5308, label %5273

5273:                                             ; preds = %5261
  %5274 = and i64 %5270, 8589934560
  %5275 = sub i64 %5264, %5274
  br label %5276

5276:                                             ; preds = %5276, %5273
  %5277 = phi i64 [ 0, %5273 ], [ %5300, %5276 ]
  %5278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5296, %5276 ]
  %5279 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5297, %5276 ]
  %5280 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5298, %5276 ]
  %5281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5273 ], [ %5299, %5276 ]
  %5282 = sub i64 %5264, %5277
  %5283 = getelementptr inbounds i32, ptr %11, i64 %5282
  %5284 = getelementptr inbounds i32, ptr %5283, i64 -7
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !5
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = getelementptr inbounds i32, ptr %5283, i64 -15
  %5288 = load <8 x i32>, ptr %5287, align 4, !tbaa !5
  %5289 = shufflevector <8 x i32> %5288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5290 = getelementptr inbounds i32, ptr %5283, i64 -23
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !5
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = getelementptr inbounds i32, ptr %5283, i64 -31
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !5
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = mul <8 x i32> %5286, %5278
  %5297 = mul <8 x i32> %5289, %5279
  %5298 = mul <8 x i32> %5292, %5280
  %5299 = mul <8 x i32> %5295, %5281
  %5300 = add nuw i64 %5277, 32
  %5301 = icmp eq i64 %5300, %5274
  br i1 %5301, label %5302, label %5276, !llvm.loop !1479

5302:                                             ; preds = %5276
  %5303 = mul <8 x i32> %5297, %5296
  %5304 = mul <8 x i32> %5298, %5303
  %5305 = mul <8 x i32> %5299, %5304
  %5306 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5305)
  %5307 = icmp eq i64 %5270, %5274
  br i1 %5307, label %5320, label %5308

5308:                                             ; preds = %5261, %5302
  %5309 = phi i64 [ %5264, %5261 ], [ %5275, %5302 ]
  %5310 = phi i32 [ 1, %5261 ], [ %5306, %5302 ]
  br label %5311

5311:                                             ; preds = %5308, %5311
  %5312 = phi i64 [ %5317, %5311 ], [ %5309, %5308 ]
  %5313 = phi i32 [ %5316, %5311 ], [ %5310, %5308 ]
  %5314 = getelementptr inbounds i32, ptr %11, i64 %5312
  %5315 = load i32, ptr %5314, align 4, !tbaa !5
  %5316 = mul nsw i32 %5315, %5313
  %5317 = add nsw i64 %5312, -1
  %5318 = trunc i64 %5312 to i32
  %5319 = icmp sgt i32 %5318, 0
  br i1 %5319, label %5311, label %5320, !llvm.loop !1480

5320:                                             ; preds = %5311, %5302
  %5321 = phi i32 [ %5306, %5302 ], [ %5316, %5311 ]
  %5322 = and i64 %5271, 4294967295
  %5323 = getelementptr inbounds i32, ptr %6, i64 %5322
  %5324 = load i32, ptr %5323, align 4, !tbaa !5
  %5325 = mul nsw i32 %5324, %5321
  %5326 = add nsw i32 %5325, %5265
  %5327 = icmp sgt i64 %5263, 2
  %5328 = add nsw i64 %5264, -1
  %5329 = add i32 %5262, 1
  br i1 %5327, label %5261, label %5330, !llvm.loop !1481

5330:                                             ; preds = %5320, %5257
  %5331 = phi i32 [ %5260, %5257 ], [ %5326, %5320 ]
  %5332 = icmp slt i32 %5331, %5
  br i1 %5332, label %5335, label %5333

5333:                                             ; preds = %5330
  %5334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5401

5335:                                             ; preds = %5330
  %5336 = sext i32 %5331 to i64
  %5337 = getelementptr inbounds double, ptr %4807, i64 %5336
  %5338 = load double, ptr %5337, align 8, !tbaa !18
  %5339 = fadd fast double %5258, %5338
  store double %5339, ptr %4809, align 8, !tbaa !18
  %5340 = add nuw nsw i32 %5259, 1
  br i1 %5113, label %5341, label %5391

5341:                                             ; preds = %5335
  %5342 = load i32, ptr %4, align 4, !tbaa !5
  %5343 = load i32, ptr %12, align 4, !tbaa !5
  %5344 = add nsw i32 %5343, -1
  %5345 = icmp slt i32 %5342, %5344
  br i1 %5345, label %5368, label %5346

5346:                                             ; preds = %5341
  %5347 = icmp eq i32 %5342, %5344
  br i1 %5347, label %5348, label %5384

5348:                                             ; preds = %5346
  store i32 0, ptr %4, align 4, !tbaa !5
  %5349 = load i32, ptr %8, align 4, !tbaa !5
  store i32 %5349, ptr %6, align 4, !tbaa !5
  br i1 %5118, label %5391, label %5350

5350:                                             ; preds = %5348, %5378
  %5351 = phi i64 [ %5382, %5378 ], [ 1, %5348 ]
  %5352 = getelementptr inbounds i32, ptr %4, i64 %5351
  %5353 = load i32, ptr %5352, align 4, !tbaa !5
  %5354 = getelementptr inbounds i32, ptr %12, i64 %5351
  %5355 = load i32, ptr %5354, align 4, !tbaa !5
  %5356 = add nsw i32 %5355, -1
  %5357 = icmp slt i32 %5353, %5356
  br i1 %5357, label %5358, label %5376

5358:                                             ; preds = %5350
  br i1 %5345, label %5368, label %5359

5359:                                             ; preds = %5358
  %5360 = shl i64 %5351, 32
  %5361 = add i64 %5360, -4294967296
  %5362 = ashr exact i64 %5361, 32
  %5363 = getelementptr inbounds i32, ptr %7, i64 %5362
  %5364 = load i32, ptr %5363, align 4, !tbaa !5
  %5365 = getelementptr inbounds i32, ptr %6, i64 %5351
  %5366 = load i32, ptr %5365, align 4, !tbaa !5
  %5367 = add nsw i32 %5366, %5364
  store i32 %5367, ptr %5365, align 4, !tbaa !5
  br label %5386

5368:                                             ; preds = %5341, %5358
  %5369 = phi i32 [ %5353, %5358 ], [ %5342, %5341 ]
  %5370 = phi ptr [ %5352, %5358 ], [ %4, %5341 ]
  %5371 = phi i64 [ %5351, %5358 ], [ 0, %5341 ]
  %5372 = add nsw i32 %5369, 1
  store i32 %5372, ptr %5370, align 4, !tbaa !5
  %5373 = getelementptr inbounds i32, ptr %7, i64 %5371
  %5374 = load i32, ptr %5373, align 4, !tbaa !5
  %5375 = getelementptr inbounds i32, ptr %6, i64 %5371
  br label %5386

5376:                                             ; preds = %5350
  %5377 = icmp eq i32 %5353, %5356
  br i1 %5377, label %5378, label %5384

5378:                                             ; preds = %5376
  store i32 0, ptr %5352, align 4, !tbaa !5
  %5379 = getelementptr inbounds i32, ptr %8, i64 %5351
  %5380 = load i32, ptr %5379, align 4, !tbaa !5
  %5381 = getelementptr inbounds i32, ptr %6, i64 %5351
  store i32 %5380, ptr %5381, align 4, !tbaa !5
  %5382 = add nuw nsw i64 %5351, 1
  %5383 = icmp eq i64 %5382, %5116
  br i1 %5383, label %5391, label %5350, !llvm.loop !1482

5384:                                             ; preds = %5346, %5376
  %5385 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5401

5386:                                             ; preds = %5359, %5368
  %5387 = phi ptr [ %5375, %5368 ], [ %5352, %5359 ]
  %5388 = phi i32 [ %5374, %5368 ], [ 1, %5359 ]
  %5389 = load i32, ptr %5387, align 4, !tbaa !5
  %5390 = add nsw i32 %5389, %5388
  store i32 %5390, ptr %5387, align 4, !tbaa !5
  br label %5391

5391:                                             ; preds = %5378, %5386, %5348, %5335
  %5392 = icmp eq i32 %5340, %5
  br i1 %5392, label %5401, label %5257, !llvm.loop !1483

5393:                                             ; preds = %4813
  %5394 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5401

5395:                                             ; preds = %1983
  store i16 %1934, ptr %1820, align 2, !tbaa !78
  br label %5401

5396:                                             ; preds = %2277
  store i16 %2228, ptr %1820, align 2, !tbaa !78
  br label %5401

5397:                                             ; preds = %3183
  store i64 %3134, ptr %3020, align 8, !tbaa !120
  br label %5401

5398:                                             ; preds = %3476
  store i64 %3427, ptr %3020, align 8, !tbaa !120
  br label %5401

5399:                                             ; preds = %4374
  store float %4325, ptr %4211, align 4, !tbaa !162
  br label %5401

5400:                                             ; preds = %4664
  store float %4615, ptr %4211, align 4, !tbaa !162
  br label %5401

5401:                                             ; preds = %5391, %5255, %5103, %4967, %4801, %4511, %4203, %4067, %3915, %3779, %3613, %3323, %3012, %2875, %2722, %2585, %2414, %2124, %1812, %1675, %1522, %1385, %1214, %1077, %924, %787, %616, %479, %326, %189, %5110, %5119, %4819, %4828, %4518, %4527, %5400, %4222, %4231, %5399, %3922, %3931, %3631, %3640, %3330, %3339, %5398, %3031, %3040, %5397, %2729, %2738, %2433, %2442, %2131, %2140, %5396, %1831, %1840, %5395, %1529, %1538, %1233, %1242, %931, %940, %635, %644, %333, %342, %37, %46, %4811, %5393, %4213, %4803, %3623, %4205, %3022, %3615, %2424, %3014, %1822, %2416, %1224, %1814, %626, %1216, %28, %618, %18, %4960, %5045, %5096, %5248, %5333, %5384, %4367, %4452, %4504, %4657, %4742, %4794, %3772, %3857, %3908, %4060, %4145, %4196, %3176, %3261, %3316, %3469, %3554, %3606, %2578, %2662, %2715, %2868, %2952, %3005, %1976, %2061, %2117, %2270, %2355, %2407, %1378, %1462, %1515, %1668, %1752, %1805, %780, %864, %917, %1070, %1154, %1207, %182, %266, %319, %472, %556, %609
  %5402 = phi i32 [ -1, %609 ], [ -1, %556 ], [ -1, %472 ], [ -1, %319 ], [ -1, %266 ], [ -1, %182 ], [ -1, %1207 ], [ -1, %1154 ], [ -1, %1070 ], [ -1, %917 ], [ -1, %864 ], [ -1, %780 ], [ -1, %1805 ], [ -1, %1752 ], [ -1, %1668 ], [ -1, %1515 ], [ -1, %1462 ], [ -1, %1378 ], [ -1, %2407 ], [ -1, %2355 ], [ -1, %2270 ], [ -1, %2117 ], [ -1, %2061 ], [ -1, %1976 ], [ -1, %3005 ], [ -1, %2952 ], [ -1, %2868 ], [ -1, %2715 ], [ -1, %2662 ], [ -1, %2578 ], [ -1, %3606 ], [ -1, %3554 ], [ -1, %3469 ], [ -1, %3316 ], [ -1, %3261 ], [ -1, %3176 ], [ -1, %4196 ], [ -1, %4145 ], [ -1, %4060 ], [ -1, %3908 ], [ -1, %3857 ], [ -1, %3772 ], [ -1, %4794 ], [ -1, %4742 ], [ -1, %4657 ], [ -1, %4504 ], [ -1, %4452 ], [ -1, %4367 ], [ -1, %5384 ], [ -1, %5333 ], [ -1, %5248 ], [ -1, %5096 ], [ -1, %5045 ], [ -1, %4960 ], [ %10, %18 ], [ 1, %618 ], [ 1, %28 ], [ 1, %1216 ], [ 1, %626 ], [ 1, %1814 ], [ 1, %1224 ], [ 1, %2416 ], [ 1, %1822 ], [ 1, %3014 ], [ 1, %2424 ], [ 1, %3615 ], [ 1, %3022 ], [ 1, %4205 ], [ 1, %3623 ], [ 1, %4803 ], [ 1, %4213 ], [ 1, %5393 ], [ 1, %4811 ], [ 1, %46 ], [ 1, %37 ], [ 1, %342 ], [ 1, %333 ], [ 1, %644 ], [ 1, %635 ], [ 1, %940 ], [ 1, %931 ], [ 1, %1242 ], [ 1, %1233 ], [ 1, %1538 ], [ 1, %1529 ], [ %1847, %5395 ], [ 1, %1840 ], [ 1, %1831 ], [ %2147, %5396 ], [ 1, %2140 ], [ 1, %2131 ], [ 1, %2442 ], [ 1, %2433 ], [ 1, %2738 ], [ 1, %2729 ], [ %3047, %5397 ], [ 1, %3040 ], [ 1, %3031 ], [ %3346, %5398 ], [ 1, %3339 ], [ 1, %3330 ], [ 1, %3640 ], [ 1, %3631 ], [ 1, %3931 ], [ 1, %3922 ], [ %4238, %5399 ], [ 1, %4231 ], [ 1, %4222 ], [ %4534, %5400 ], [ 1, %4527 ], [ 1, %4518 ], [ 1, %4828 ], [ 1, %4819 ], [ 1, %5119 ], [ 1, %5110 ], [ %53, %189 ], [ %44, %326 ], [ %349, %479 ], [ %340, %616 ], [ %651, %787 ], [ %642, %924 ], [ %947, %1077 ], [ %938, %1214 ], [ %1249, %1385 ], [ %1240, %1522 ], [ %1545, %1675 ], [ %1536, %1812 ], [ %1838, %2124 ], [ %2138, %2414 ], [ %2449, %2585 ], [ %2440, %2722 ], [ %2745, %2875 ], [ %2736, %3012 ], [ %3038, %3323 ], [ %3337, %3613 ], [ %3647, %3779 ], [ %3638, %3915 ], [ %3938, %4067 ], [ %3929, %4203 ], [ %4229, %4511 ], [ %4525, %4801 ], [ %4835, %4967 ], [ %4826, %5103 ], [ %5126, %5255 ], [ %5117, %5391 ]
  ret i32 %5402
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!7, !7, i64 0}
!12 = distinct !{!12, !13, !14, !15}
!13 = !{!"llvm.loop.mustprogress"}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = distinct !{!16, !13, !15, !14}
!17 = distinct !{!17, !13}
!18 = !{!19, !19, i64 0}
!19 = !{!"double", !7, i64 0}
!20 = distinct !{!20, !13, !21}
!21 = !{!"llvm.loop.peeled.count", i32 1}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13, !14, !15}
!24 = distinct !{!24, !13, !15, !14}
!25 = distinct !{!25, !13}
!26 = distinct !{!26, !13, !21}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !13, !14, !15}
!29 = distinct !{!29, !13, !15, !14}
!30 = distinct !{!30, !13}
!31 = distinct !{!31, !13, !21}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !13, !14, !15}
!34 = distinct !{!34, !13, !15, !14}
!35 = distinct !{!35, !13}
!36 = distinct !{!36, !13, !21}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !13, !14, !15}
!39 = distinct !{!39, !13, !15, !14}
!40 = distinct !{!40, !13}
!41 = distinct !{!41, !13, !21}
!42 = distinct !{!42, !13}
!43 = distinct !{!43, !13, !14, !15}
!44 = distinct !{!44, !13, !15, !14}
!45 = distinct !{!45, !13}
!46 = distinct !{!46, !13, !21}
!47 = distinct !{!47, !13}
!48 = distinct !{!48, !13, !14, !15}
!49 = distinct !{!49, !13, !15, !14}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !13, !21}
!52 = distinct !{!52, !13}
!53 = distinct !{!53, !13, !14, !15}
!54 = distinct !{!54, !13, !15, !14}
!55 = distinct !{!55, !13}
!56 = distinct !{!56, !13, !21}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13, !14, !15}
!59 = distinct !{!59, !13, !15, !14}
!60 = distinct !{!60, !13}
!61 = distinct !{!61, !13, !21}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13, !14, !15}
!64 = distinct !{!64, !13, !15, !14}
!65 = distinct !{!65, !13}
!66 = distinct !{!66, !13, !21}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13, !14, !15}
!69 = distinct !{!69, !13, !15, !14}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13, !21}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !13, !14, !15}
!74 = distinct !{!74, !13, !15, !14}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !13, !21}
!77 = distinct !{!77, !13}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !7, i64 0}
!80 = distinct !{!80, !13, !14, !15}
!81 = distinct !{!81, !13, !15, !14}
!82 = distinct !{!82, !13}
!83 = distinct !{!83, !13, !21}
!84 = distinct !{!84, !13}
!85 = distinct !{!85, !13, !14, !15}
!86 = distinct !{!86, !13, !15, !14}
!87 = distinct !{!87, !13}
!88 = distinct !{!88, !13, !21}
!89 = distinct !{!89, !13}
!90 = distinct !{!90, !13, !14, !15}
!91 = distinct !{!91, !13, !15, !14}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !13, !21}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !13, !14, !15}
!96 = distinct !{!96, !13, !15, !14}
!97 = distinct !{!97, !13}
!98 = distinct !{!98, !13, !21}
!99 = distinct !{!99, !13}
!100 = distinct !{!100, !13, !14, !15}
!101 = distinct !{!101, !13, !15, !14}
!102 = distinct !{!102, !13}
!103 = distinct !{!103, !13, !21}
!104 = distinct !{!104, !13}
!105 = distinct !{!105, !13, !14, !15}
!106 = distinct !{!106, !13, !15, !14}
!107 = distinct !{!107, !13}
!108 = distinct !{!108, !13, !21}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13, !14, !15}
!111 = distinct !{!111, !13, !15, !14}
!112 = distinct !{!112, !13}
!113 = distinct !{!113, !13, !21}
!114 = distinct !{!114, !13}
!115 = distinct !{!115, !13, !14, !15}
!116 = distinct !{!116, !13, !15, !14}
!117 = distinct !{!117, !13}
!118 = distinct !{!118, !13, !21}
!119 = distinct !{!119, !13}
!120 = !{!121, !121, i64 0}
!121 = !{!"long", !7, i64 0}
!122 = distinct !{!122, !13, !14, !15}
!123 = distinct !{!123, !13, !15, !14}
!124 = distinct !{!124, !13}
!125 = distinct !{!125, !13, !21}
!126 = distinct !{!126, !13}
!127 = distinct !{!127, !13, !14, !15}
!128 = distinct !{!128, !13, !15, !14}
!129 = distinct !{!129, !13}
!130 = distinct !{!130, !13, !21}
!131 = distinct !{!131, !13}
!132 = distinct !{!132, !13, !14, !15}
!133 = distinct !{!133, !13, !15, !14}
!134 = distinct !{!134, !13}
!135 = distinct !{!135, !13, !21}
!136 = distinct !{!136, !13}
!137 = distinct !{!137, !13, !14, !15}
!138 = distinct !{!138, !13, !15, !14}
!139 = distinct !{!139, !13}
!140 = distinct !{!140, !13, !21}
!141 = distinct !{!141, !13}
!142 = distinct !{!142, !13, !14, !15}
!143 = distinct !{!143, !13, !15, !14}
!144 = distinct !{!144, !13}
!145 = distinct !{!145, !13, !21}
!146 = distinct !{!146, !13}
!147 = distinct !{!147, !13, !14, !15}
!148 = distinct !{!148, !13, !15, !14}
!149 = distinct !{!149, !13}
!150 = distinct !{!150, !13, !21}
!151 = distinct !{!151, !13}
!152 = distinct !{!152, !13, !14, !15}
!153 = distinct !{!153, !13, !15, !14}
!154 = distinct !{!154, !13}
!155 = distinct !{!155, !13, !21}
!156 = distinct !{!156, !13}
!157 = distinct !{!157, !13, !14, !15}
!158 = distinct !{!158, !13, !15, !14}
!159 = distinct !{!159, !13}
!160 = distinct !{!160, !13, !21}
!161 = distinct !{!161, !13}
!162 = !{!163, !163, i64 0}
!163 = !{!"float", !7, i64 0}
!164 = distinct !{!164, !13, !14, !15}
!165 = distinct !{!165, !13, !15, !14}
!166 = distinct !{!166, !13}
!167 = distinct !{!167, !13, !21}
!168 = distinct !{!168, !13}
!169 = distinct !{!169, !13, !14, !15}
!170 = distinct !{!170, !13, !15, !14}
!171 = distinct !{!171, !13}
!172 = distinct !{!172, !13, !21}
!173 = distinct !{!173, !13}
!174 = distinct !{!174, !13, !14, !15}
!175 = distinct !{!175, !13, !15, !14}
!176 = distinct !{!176, !13}
!177 = distinct !{!177, !13, !21}
!178 = distinct !{!178, !13}
!179 = distinct !{!179, !13, !14, !15}
!180 = distinct !{!180, !13, !15, !14}
!181 = distinct !{!181, !13}
!182 = distinct !{!182, !13, !21}
!183 = distinct !{!183, !13}
!184 = distinct !{!184, !13, !14, !15}
!185 = distinct !{!185, !13, !15, !14}
!186 = distinct !{!186, !13}
!187 = distinct !{!187, !13, !21}
!188 = distinct !{!188, !13}
!189 = distinct !{!189, !13, !14, !15}
!190 = distinct !{!190, !13, !15, !14}
!191 = distinct !{!191, !13}
!192 = distinct !{!192, !13, !21}
!193 = distinct !{!193, !13}
!194 = distinct !{!194, !13, !14, !15}
!195 = distinct !{!195, !13, !15, !14}
!196 = distinct !{!196, !13}
!197 = distinct !{!197, !13, !21}
!198 = distinct !{!198, !13}
!199 = distinct !{!199, !13, !14, !15}
!200 = distinct !{!200, !13, !15, !14}
!201 = distinct !{!201, !13}
!202 = distinct !{!202, !13, !21}
!203 = distinct !{!203, !13}
!204 = distinct !{!204, !13, !14, !15}
!205 = distinct !{!205, !13, !15, !14}
!206 = distinct !{!206, !13}
!207 = distinct !{!207, !13, !21}
!208 = distinct !{!208, !13}
!209 = distinct !{!209, !13, !14, !15}
!210 = distinct !{!210, !13, !15, !14}
!211 = distinct !{!211, !13}
!212 = distinct !{!212, !13, !21}
!213 = distinct !{!213, !13}
!214 = distinct !{!214, !13, !14, !15}
!215 = distinct !{!215, !13, !15, !14}
!216 = distinct !{!216, !13}
!217 = distinct !{!217, !13, !21}
!218 = distinct !{!218, !13}
!219 = distinct !{!219, !13, !14, !15}
!220 = distinct !{!220, !13, !15, !14}
!221 = distinct !{!221, !13}
!222 = distinct !{!222, !13, !21}
!223 = distinct !{!223, !13}
!224 = distinct !{!224, !13, !14, !15}
!225 = distinct !{!225, !13, !15, !14}
!226 = distinct !{!226, !13}
!227 = distinct !{!227, !13, !21}
!228 = distinct !{!228, !13}
!229 = distinct !{!229, !13, !14, !15}
!230 = distinct !{!230, !13, !15, !14}
!231 = distinct !{!231, !13}
!232 = distinct !{!232, !13, !21}
!233 = distinct !{!233, !13}
!234 = distinct !{!234, !13, !14, !15}
!235 = distinct !{!235, !13, !15, !14}
!236 = distinct !{!236, !13}
!237 = distinct !{!237, !13, !21}
!238 = distinct !{!238, !13}
!239 = distinct !{!239, !13, !14, !15}
!240 = distinct !{!240, !13, !15, !14}
!241 = distinct !{!241, !13}
!242 = distinct !{!242, !13, !21}
!243 = distinct !{!243, !13}
!244 = distinct !{!244, !13, !14, !15}
!245 = distinct !{!245, !13, !15, !14}
!246 = distinct !{!246, !13}
!247 = distinct !{!247, !13, !21}
!248 = distinct !{!248, !13}
!249 = distinct !{!249, !13, !14, !15}
!250 = distinct !{!250, !13, !15, !14}
!251 = distinct !{!251, !13}
!252 = distinct !{!252, !13, !21}
!253 = distinct !{!253, !13}
!254 = distinct !{!254, !13, !14, !15}
!255 = distinct !{!255, !13, !15, !14}
!256 = distinct !{!256, !13}
!257 = distinct !{!257, !13, !21}
!258 = distinct !{!258, !13}
!259 = distinct !{!259, !13, !14, !15}
!260 = distinct !{!260, !13, !15, !14}
!261 = distinct !{!261, !13}
!262 = distinct !{!262, !13, !21}
!263 = distinct !{!263, !13}
!264 = distinct !{!264, !13, !14, !15}
!265 = distinct !{!265, !13, !15, !14}
!266 = distinct !{!266, !13}
!267 = distinct !{!267, !13, !21}
!268 = distinct !{!268, !13}
!269 = distinct !{!269, !13, !14, !15}
!270 = distinct !{!270, !13, !15, !14}
!271 = distinct !{!271, !13}
!272 = distinct !{!272, !13, !21}
!273 = distinct !{!273, !13}
!274 = distinct !{!274, !13, !14, !15}
!275 = distinct !{!275, !13, !15, !14}
!276 = distinct !{!276, !13}
!277 = distinct !{!277, !13, !21}
!278 = distinct !{!278, !13}
!279 = distinct !{!279, !13, !14, !15}
!280 = distinct !{!280, !13, !15, !14}
!281 = distinct !{!281, !13}
!282 = distinct !{!282, !13, !21}
!283 = distinct !{!283, !13}
!284 = distinct !{!284, !13, !14, !15}
!285 = distinct !{!285, !13, !15, !14}
!286 = distinct !{!286, !13}
!287 = distinct !{!287, !13, !21}
!288 = distinct !{!288, !13}
!289 = distinct !{!289, !13, !14, !15}
!290 = distinct !{!290, !13, !15, !14}
!291 = distinct !{!291, !13}
!292 = distinct !{!292, !13, !21}
!293 = distinct !{!293, !13}
!294 = distinct !{!294, !13, !14, !15}
!295 = distinct !{!295, !13, !15, !14}
!296 = distinct !{!296, !13}
!297 = distinct !{!297, !13, !21}
!298 = distinct !{!298, !13}
!299 = distinct !{!299, !13, !14, !15}
!300 = distinct !{!300, !13, !15, !14}
!301 = distinct !{!301, !13}
!302 = distinct !{!302, !13, !21}
!303 = distinct !{!303, !13}
!304 = distinct !{!304, !13, !14, !15}
!305 = distinct !{!305, !13, !15, !14}
!306 = distinct !{!306, !13}
!307 = distinct !{!307, !13, !21}
!308 = distinct !{!308, !13}
!309 = distinct !{!309, !13, !14, !15}
!310 = distinct !{!310, !13, !15, !14}
!311 = distinct !{!311, !13}
!312 = distinct !{!312, !13, !21}
!313 = distinct !{!313, !13}
!314 = distinct !{!314, !13, !14, !15}
!315 = distinct !{!315, !13, !15, !14}
!316 = distinct !{!316, !13}
!317 = distinct !{!317, !13, !21}
!318 = distinct !{!318, !13}
!319 = distinct !{!319, !13, !14, !15}
!320 = distinct !{!320, !13, !15, !14}
!321 = distinct !{!321, !13}
!322 = distinct !{!322, !13, !21}
!323 = distinct !{!323, !13}
!324 = distinct !{!324, !13, !14, !15}
!325 = distinct !{!325, !13, !15, !14}
!326 = distinct !{!326, !13}
!327 = distinct !{!327, !13, !21}
!328 = distinct !{!328, !13}
!329 = distinct !{!329, !13, !14, !15}
!330 = distinct !{!330, !13, !15, !14}
!331 = distinct !{!331, !13}
!332 = distinct !{!332, !13, !21}
!333 = distinct !{!333, !13}
!334 = distinct !{!334, !13, !14, !15}
!335 = distinct !{!335, !13, !15, !14}
!336 = distinct !{!336, !13}
!337 = distinct !{!337, !13, !21}
!338 = distinct !{!338, !13}
!339 = distinct !{!339, !13, !14, !15}
!340 = distinct !{!340, !13, !15, !14}
!341 = distinct !{!341, !13}
!342 = distinct !{!342, !13, !21}
!343 = distinct !{!343, !13}
!344 = distinct !{!344, !13, !14, !15}
!345 = distinct !{!345, !13, !15, !14}
!346 = distinct !{!346, !13}
!347 = distinct !{!347, !13, !21}
!348 = distinct !{!348, !13}
!349 = distinct !{!349, !13, !14, !15}
!350 = distinct !{!350, !13, !15, !14}
!351 = distinct !{!351, !13}
!352 = distinct !{!352, !13, !21}
!353 = distinct !{!353, !13}
!354 = distinct !{!354, !13, !14, !15}
!355 = distinct !{!355, !13, !15, !14}
!356 = distinct !{!356, !13}
!357 = distinct !{!357, !13, !21}
!358 = distinct !{!358, !13}
!359 = distinct !{!359, !13, !14, !15}
!360 = distinct !{!360, !13, !15, !14}
!361 = distinct !{!361, !13}
!362 = distinct !{!362, !13, !21}
!363 = distinct !{!363, !13}
!364 = distinct !{!364, !13, !14, !15}
!365 = distinct !{!365, !13, !15, !14}
!366 = distinct !{!366, !13}
!367 = distinct !{!367, !13, !21}
!368 = distinct !{!368, !13}
!369 = distinct !{!369, !13, !14, !15}
!370 = distinct !{!370, !13, !15, !14}
!371 = distinct !{!371, !13}
!372 = distinct !{!372, !13, !21}
!373 = distinct !{!373, !13}
!374 = distinct !{!374, !13, !14, !15}
!375 = distinct !{!375, !13, !15, !14}
!376 = distinct !{!376, !13}
!377 = distinct !{!377, !13, !21}
!378 = distinct !{!378, !13}
!379 = distinct !{!379, !13, !14, !15}
!380 = distinct !{!380, !13, !15, !14}
!381 = distinct !{!381, !13}
!382 = distinct !{!382, !13, !21}
!383 = distinct !{!383, !13}
!384 = distinct !{!384, !13, !14, !15}
!385 = distinct !{!385, !13, !15, !14}
!386 = distinct !{!386, !13}
!387 = distinct !{!387, !13, !21}
!388 = distinct !{!388, !13}
!389 = distinct !{!389, !13, !14, !15}
!390 = distinct !{!390, !13, !15, !14}
!391 = distinct !{!391, !13}
!392 = distinct !{!392, !13, !21}
!393 = distinct !{!393, !13}
!394 = distinct !{!394, !13, !14, !15}
!395 = distinct !{!395, !13, !15, !14}
!396 = distinct !{!396, !13}
!397 = distinct !{!397, !13, !21}
!398 = distinct !{!398, !13}
!399 = distinct !{!399, !13, !14, !15}
!400 = distinct !{!400, !13, !15, !14}
!401 = distinct !{!401, !13}
!402 = distinct !{!402, !13, !21}
!403 = distinct !{!403, !13}
!404 = distinct !{!404, !13, !14, !15}
!405 = distinct !{!405, !13, !15, !14}
!406 = distinct !{!406, !13}
!407 = distinct !{!407, !13, !21}
!408 = distinct !{!408, !13}
!409 = distinct !{!409, !13, !14, !15}
!410 = distinct !{!410, !13, !15, !14}
!411 = distinct !{!411, !13}
!412 = distinct !{!412, !13, !21}
!413 = distinct !{!413, !13}
!414 = distinct !{!414, !13, !14, !15}
!415 = distinct !{!415, !13, !15, !14}
!416 = distinct !{!416, !13}
!417 = distinct !{!417, !13, !21}
!418 = distinct !{!418, !13}
!419 = distinct !{!419, !13, !14, !15}
!420 = distinct !{!420, !13, !15, !14}
!421 = distinct !{!421, !13}
!422 = distinct !{!422, !13, !21}
!423 = distinct !{!423, !13}
!424 = distinct !{!424, !13, !14, !15}
!425 = distinct !{!425, !13, !15, !14}
!426 = distinct !{!426, !13}
!427 = distinct !{!427, !13, !21}
!428 = distinct !{!428, !13}
!429 = distinct !{!429, !13, !14, !15}
!430 = distinct !{!430, !13, !15, !14}
!431 = distinct !{!431, !13}
!432 = distinct !{!432, !13, !21}
!433 = distinct !{!433, !13}
!434 = distinct !{!434, !13, !14, !15}
!435 = distinct !{!435, !13, !15, !14}
!436 = distinct !{!436, !13}
!437 = distinct !{!437, !13, !21}
!438 = distinct !{!438, !13}
!439 = distinct !{!439, !13, !14, !15}
!440 = distinct !{!440, !13, !15, !14}
!441 = distinct !{!441, !13}
!442 = distinct !{!442, !13, !21}
!443 = distinct !{!443, !13}
!444 = distinct !{!444, !13, !14, !15}
!445 = distinct !{!445, !13, !15, !14}
!446 = distinct !{!446, !13}
!447 = distinct !{!447, !13, !21}
!448 = distinct !{!448, !13}
!449 = distinct !{!449, !13, !14, !15}
!450 = distinct !{!450, !13, !15, !14}
!451 = distinct !{!451, !13}
!452 = distinct !{!452, !13, !21}
!453 = distinct !{!453, !13}
!454 = distinct !{!454, !13, !14, !15}
!455 = distinct !{!455, !13, !15, !14}
!456 = distinct !{!456, !13}
!457 = distinct !{!457, !13, !21}
!458 = distinct !{!458, !13}
!459 = distinct !{!459, !13, !14, !15}
!460 = distinct !{!460, !13, !15, !14}
!461 = distinct !{!461, !13}
!462 = distinct !{!462, !13, !21}
!463 = distinct !{!463, !13}
!464 = distinct !{!464, !13, !14, !15}
!465 = distinct !{!465, !13, !15, !14}
!466 = distinct !{!466, !13}
!467 = distinct !{!467, !13, !21}
!468 = distinct !{!468, !13}
!469 = distinct !{!469, !13, !14, !15}
!470 = distinct !{!470, !13, !15, !14}
!471 = distinct !{!471, !13}
!472 = distinct !{!472, !13, !21}
!473 = distinct !{!473, !13}
!474 = distinct !{!474, !13, !14, !15}
!475 = distinct !{!475, !13, !15, !14}
!476 = distinct !{!476, !13}
!477 = distinct !{!477, !13, !21}
!478 = distinct !{!478, !13}
!479 = distinct !{!479, !13, !14, !15}
!480 = distinct !{!480, !13, !15, !14}
!481 = distinct !{!481, !13}
!482 = distinct !{!482, !13, !21}
!483 = distinct !{!483, !13}
!484 = distinct !{!484, !13, !14, !15}
!485 = distinct !{!485, !13, !15, !14}
!486 = distinct !{!486, !13}
!487 = distinct !{!487, !13, !21}
!488 = distinct !{!488, !13}
!489 = distinct !{!489, !13, !14, !15}
!490 = distinct !{!490, !13, !15, !14}
!491 = distinct !{!491, !13}
!492 = distinct !{!492, !13, !21}
!493 = distinct !{!493, !13}
!494 = distinct !{!494, !13, !14, !15}
!495 = distinct !{!495, !13, !15, !14}
!496 = distinct !{!496, !13}
!497 = distinct !{!497, !13, !21}
!498 = distinct !{!498, !13}
!499 = distinct !{!499, !13, !14, !15}
!500 = distinct !{!500, !13, !15, !14}
!501 = distinct !{!501, !13}
!502 = distinct !{!502, !13, !21}
!503 = distinct !{!503, !13}
!504 = distinct !{!504, !13, !14, !15}
!505 = distinct !{!505, !13, !15, !14}
!506 = distinct !{!506, !13}
!507 = distinct !{!507, !13, !21}
!508 = distinct !{!508, !13}
!509 = distinct !{!509, !13, !14, !15}
!510 = distinct !{!510, !13, !15, !14}
!511 = distinct !{!511, !13}
!512 = distinct !{!512, !13, !21}
!513 = distinct !{!513, !13}
!514 = distinct !{!514, !13, !14, !15}
!515 = distinct !{!515, !13, !15, !14}
!516 = distinct !{!516, !13}
!517 = distinct !{!517, !13, !21}
!518 = distinct !{!518, !13}
!519 = distinct !{!519, !13, !14, !15}
!520 = distinct !{!520, !13, !15, !14}
!521 = distinct !{!521, !13}
!522 = distinct !{!522, !13, !21}
!523 = distinct !{!523, !13}
!524 = distinct !{!524, !13, !14, !15}
!525 = distinct !{!525, !13, !15, !14}
!526 = distinct !{!526, !13}
!527 = distinct !{!527, !13, !21}
!528 = distinct !{!528, !13}
!529 = distinct !{!529, !13, !14, !15}
!530 = distinct !{!530, !13, !15, !14}
!531 = distinct !{!531, !13}
!532 = distinct !{!532, !13, !21}
!533 = distinct !{!533, !13}
!534 = distinct !{!534, !13, !14, !15}
!535 = distinct !{!535, !13, !15, !14}
!536 = distinct !{!536, !13}
!537 = distinct !{!537, !13, !21}
!538 = distinct !{!538, !13}
!539 = distinct !{!539, !13, !14, !15}
!540 = distinct !{!540, !13, !15, !14}
!541 = distinct !{!541, !13}
!542 = distinct !{!542, !13, !21}
!543 = distinct !{!543, !13}
!544 = distinct !{!544, !13, !14, !15}
!545 = distinct !{!545, !13, !15, !14}
!546 = distinct !{!546, !13}
!547 = distinct !{!547, !13, !21}
!548 = distinct !{!548, !13}
!549 = distinct !{!549, !13, !14, !15}
!550 = distinct !{!550, !13, !15, !14}
!551 = distinct !{!551, !13}
!552 = distinct !{!552, !13, !21}
!553 = distinct !{!553, !13}
!554 = distinct !{!554, !13, !14, !15}
!555 = distinct !{!555, !13, !15, !14}
!556 = distinct !{!556, !13}
!557 = distinct !{!557, !13, !21}
!558 = distinct !{!558, !13}
!559 = distinct !{!559, !13, !14, !15}
!560 = distinct !{!560, !13, !15, !14}
!561 = distinct !{!561, !13}
!562 = distinct !{!562, !13, !21}
!563 = distinct !{!563, !13}
!564 = distinct !{!564, !13, !14, !15}
!565 = distinct !{!565, !13, !15, !14}
!566 = distinct !{!566, !13}
!567 = distinct !{!567, !13, !21}
!568 = distinct !{!568, !13}
!569 = distinct !{!569, !13, !14, !15}
!570 = distinct !{!570, !13, !15, !14}
!571 = distinct !{!571, !13}
!572 = distinct !{!572, !13, !21}
!573 = distinct !{!573, !13}
!574 = distinct !{!574, !13, !14, !15}
!575 = distinct !{!575, !13, !15, !14}
!576 = distinct !{!576, !13}
!577 = distinct !{!577, !13, !21}
!578 = distinct !{!578, !13}
!579 = distinct !{!579, !13, !14, !15}
!580 = distinct !{!580, !13, !15, !14}
!581 = distinct !{!581, !13}
!582 = distinct !{!582, !13, !21}
!583 = distinct !{!583, !13}
!584 = distinct !{!584, !13, !14, !15}
!585 = distinct !{!585, !13, !15, !14}
!586 = distinct !{!586, !13}
!587 = distinct !{!587, !13, !21}
!588 = distinct !{!588, !13}
!589 = distinct !{!589, !13, !14, !15}
!590 = distinct !{!590, !13, !15, !14}
!591 = distinct !{!591, !13}
!592 = distinct !{!592, !13, !21}
!593 = distinct !{!593, !13}
!594 = distinct !{!594, !13, !14, !15}
!595 = distinct !{!595, !13, !15, !14}
!596 = distinct !{!596, !13}
!597 = distinct !{!597, !13, !21}
!598 = distinct !{!598, !13}
!599 = distinct !{!599, !13, !14, !15}
!600 = distinct !{!600, !13, !15, !14}
!601 = distinct !{!601, !13}
!602 = distinct !{!602, !13, !21}
!603 = distinct !{!603, !13}
!604 = distinct !{!604, !13, !14, !15}
!605 = distinct !{!605, !13, !15, !14}
!606 = distinct !{!606, !13}
!607 = distinct !{!607, !13, !21}
!608 = distinct !{!608, !13}
!609 = distinct !{!609, !13, !14, !15}
!610 = distinct !{!610, !13, !15, !14}
!611 = distinct !{!611, !13}
!612 = distinct !{!612, !13, !21}
!613 = distinct !{!613, !13}
!614 = distinct !{!614, !13, !14, !15}
!615 = distinct !{!615, !13, !15, !14}
!616 = distinct !{!616, !13}
!617 = distinct !{!617, !13, !21}
!618 = distinct !{!618, !13}
!619 = distinct !{!619, !13, !14, !15}
!620 = distinct !{!620, !13, !15, !14}
!621 = distinct !{!621, !13}
!622 = distinct !{!622, !13, !21}
!623 = distinct !{!623, !13}
!624 = distinct !{!624, !13, !14, !15}
!625 = distinct !{!625, !13, !15, !14}
!626 = distinct !{!626, !13}
!627 = distinct !{!627, !13, !21}
!628 = distinct !{!628, !13}
!629 = distinct !{!629, !13, !14, !15}
!630 = distinct !{!630, !13, !15, !14}
!631 = distinct !{!631, !13}
!632 = distinct !{!632, !13, !21}
!633 = distinct !{!633, !13}
!634 = distinct !{!634, !13, !14, !15}
!635 = distinct !{!635, !13, !15, !14}
!636 = distinct !{!636, !13}
!637 = distinct !{!637, !13, !21}
!638 = distinct !{!638, !13}
!639 = distinct !{!639, !13, !14, !15}
!640 = distinct !{!640, !13, !15, !14}
!641 = distinct !{!641, !13}
!642 = distinct !{!642, !13, !21}
!643 = distinct !{!643, !13}
!644 = distinct !{!644, !13, !14, !15}
!645 = distinct !{!645, !13, !15, !14}
!646 = distinct !{!646, !13}
!647 = distinct !{!647, !13, !21}
!648 = distinct !{!648, !13}
!649 = distinct !{!649, !13, !14, !15}
!650 = distinct !{!650, !13, !15, !14}
!651 = distinct !{!651, !13}
!652 = distinct !{!652, !13, !21}
!653 = distinct !{!653, !13}
!654 = distinct !{!654, !13, !14, !15}
!655 = distinct !{!655, !13, !15, !14}
!656 = distinct !{!656, !13}
!657 = distinct !{!657, !13, !21}
!658 = distinct !{!658, !13}
!659 = distinct !{!659, !13, !14, !15}
!660 = distinct !{!660, !13, !15, !14}
!661 = distinct !{!661, !13}
!662 = distinct !{!662, !13, !21}
!663 = distinct !{!663, !13}
!664 = distinct !{!664, !13, !14, !15}
!665 = distinct !{!665, !13, !15, !14}
!666 = distinct !{!666, !13}
!667 = distinct !{!667, !13, !21}
!668 = distinct !{!668, !13}
!669 = distinct !{!669, !13, !14, !15}
!670 = distinct !{!670, !13, !15, !14}
!671 = distinct !{!671, !13}
!672 = distinct !{!672, !13, !21}
!673 = distinct !{!673, !13}
!674 = distinct !{!674, !13, !14, !15}
!675 = distinct !{!675, !13, !15, !14}
!676 = distinct !{!676, !13}
!677 = distinct !{!677, !13, !21}
!678 = distinct !{!678, !13}
!679 = distinct !{!679, !13, !14, !15}
!680 = distinct !{!680, !13, !15, !14}
!681 = distinct !{!681, !13}
!682 = distinct !{!682, !13, !21}
!683 = distinct !{!683, !13}
!684 = distinct !{!684, !13, !14, !15}
!685 = distinct !{!685, !13, !15, !14}
!686 = distinct !{!686, !13}
!687 = distinct !{!687, !13, !21}
!688 = distinct !{!688, !13}
!689 = distinct !{!689, !13, !14, !15}
!690 = distinct !{!690, !13, !15, !14}
!691 = distinct !{!691, !13}
!692 = distinct !{!692, !13, !21}
!693 = distinct !{!693, !13}
!694 = distinct !{!694, !13, !14, !15}
!695 = distinct !{!695, !13, !15, !14}
!696 = distinct !{!696, !13}
!697 = distinct !{!697, !13, !21}
!698 = distinct !{!698, !13}
!699 = distinct !{!699, !13, !14, !15}
!700 = distinct !{!700, !13, !15, !14}
!701 = distinct !{!701, !13}
!702 = distinct !{!702, !13, !21}
!703 = distinct !{!703, !13}
!704 = distinct !{!704, !13, !14, !15}
!705 = distinct !{!705, !13, !15, !14}
!706 = distinct !{!706, !13}
!707 = distinct !{!707, !13, !21}
!708 = distinct !{!708, !13}
!709 = distinct !{!709, !13, !14, !15}
!710 = distinct !{!710, !13, !15, !14}
!711 = distinct !{!711, !13}
!712 = distinct !{!712, !13, !21}
!713 = distinct !{!713, !13}
!714 = distinct !{!714, !13, !14, !15}
!715 = distinct !{!715, !13, !15, !14}
!716 = distinct !{!716, !13}
!717 = distinct !{!717, !13, !21}
!718 = distinct !{!718, !13}
!719 = distinct !{!719, !13, !14, !15}
!720 = distinct !{!720, !13, !15, !14}
!721 = distinct !{!721, !13}
!722 = distinct !{!722, !13, !21}
!723 = distinct !{!723, !13}
!724 = distinct !{!724, !13, !14, !15}
!725 = distinct !{!725, !13, !15, !14}
!726 = distinct !{!726, !13}
!727 = distinct !{!727, !13, !21}
!728 = distinct !{!728, !13}
!729 = distinct !{!729, !13, !14, !15}
!730 = distinct !{!730, !13, !15, !14}
!731 = distinct !{!731, !13}
!732 = distinct !{!732, !13, !21}
!733 = distinct !{!733, !13}
!734 = distinct !{!734, !13, !14, !15}
!735 = distinct !{!735, !13, !15, !14}
!736 = distinct !{!736, !13}
!737 = distinct !{!737, !13, !21}
!738 = distinct !{!738, !13}
!739 = distinct !{!739, !13, !14, !15}
!740 = distinct !{!740, !13, !15, !14}
!741 = distinct !{!741, !13}
!742 = distinct !{!742, !13, !21}
!743 = distinct !{!743, !13}
!744 = distinct !{!744, !13, !14, !15}
!745 = distinct !{!745, !13, !15, !14}
!746 = distinct !{!746, !13}
!747 = distinct !{!747, !13, !21}
!748 = distinct !{!748, !13}
!749 = distinct !{!749, !13, !14, !15}
!750 = distinct !{!750, !13, !15, !14}
!751 = distinct !{!751, !13}
!752 = distinct !{!752, !13, !21}
!753 = distinct !{!753, !13}
!754 = distinct !{!754, !13, !14, !15}
!755 = distinct !{!755, !13, !15, !14}
!756 = distinct !{!756, !13}
!757 = distinct !{!757, !13, !21}
!758 = distinct !{!758, !13}
!759 = distinct !{!759, !13, !14, !15}
!760 = distinct !{!760, !13, !15, !14}
!761 = distinct !{!761, !13}
!762 = distinct !{!762, !13, !21}
!763 = distinct !{!763, !13}
!764 = distinct !{!764, !13, !14, !15}
!765 = distinct !{!765, !13, !15, !14}
!766 = distinct !{!766, !13}
!767 = distinct !{!767, !13, !21}
!768 = distinct !{!768, !13}
!769 = distinct !{!769, !13, !14, !15}
!770 = distinct !{!770, !13, !15, !14}
!771 = distinct !{!771, !13}
!772 = distinct !{!772, !13, !21}
!773 = distinct !{!773, !13}
!774 = distinct !{!774, !13, !14, !15}
!775 = distinct !{!775, !13, !15, !14}
!776 = distinct !{!776, !13}
!777 = distinct !{!777, !13, !21}
!778 = distinct !{!778, !13}
!779 = distinct !{!779, !13, !14, !15}
!780 = distinct !{!780, !13, !15, !14}
!781 = distinct !{!781, !13}
!782 = distinct !{!782, !13, !21}
!783 = distinct !{!783, !13}
!784 = distinct !{!784, !13, !14, !15}
!785 = distinct !{!785, !13, !15, !14}
!786 = distinct !{!786, !13}
!787 = distinct !{!787, !13, !21}
!788 = distinct !{!788, !13}
!789 = distinct !{!789, !13, !14, !15}
!790 = distinct !{!790, !13, !15, !14}
!791 = distinct !{!791, !13}
!792 = distinct !{!792, !13, !21}
!793 = distinct !{!793, !13}
!794 = distinct !{!794, !13, !14, !15}
!795 = distinct !{!795, !13, !15, !14}
!796 = distinct !{!796, !13}
!797 = distinct !{!797, !13, !21}
!798 = distinct !{!798, !13}
!799 = distinct !{!799, !13, !14, !15}
!800 = distinct !{!800, !13, !15, !14}
!801 = distinct !{!801, !13}
!802 = distinct !{!802, !13, !21}
!803 = distinct !{!803, !13}
!804 = distinct !{!804, !13, !14, !15}
!805 = distinct !{!805, !13, !15, !14}
!806 = distinct !{!806, !13}
!807 = distinct !{!807, !13, !21}
!808 = distinct !{!808, !13}
!809 = distinct !{!809, !13, !14, !15}
!810 = distinct !{!810, !13, !15, !14}
!811 = distinct !{!811, !13}
!812 = distinct !{!812, !13, !21}
!813 = distinct !{!813, !13}
!814 = distinct !{!814, !13, !14, !15}
!815 = distinct !{!815, !13, !15, !14}
!816 = distinct !{!816, !13}
!817 = distinct !{!817, !13, !21}
!818 = distinct !{!818, !13}
!819 = distinct !{!819, !13, !14, !15}
!820 = distinct !{!820, !13, !15, !14}
!821 = distinct !{!821, !13}
!822 = distinct !{!822, !13, !21}
!823 = distinct !{!823, !13}
!824 = distinct !{!824, !13, !14, !15}
!825 = distinct !{!825, !13, !15, !14}
!826 = distinct !{!826, !13}
!827 = distinct !{!827, !13, !21}
!828 = distinct !{!828, !13}
!829 = distinct !{!829, !13, !14, !15}
!830 = distinct !{!830, !13, !15, !14}
!831 = distinct !{!831, !13}
!832 = distinct !{!832, !13, !21}
!833 = distinct !{!833, !13}
!834 = distinct !{!834, !13, !14, !15}
!835 = distinct !{!835, !13, !15, !14}
!836 = distinct !{!836, !13}
!837 = distinct !{!837, !13, !21}
!838 = distinct !{!838, !13}
!839 = distinct !{!839, !13, !14, !15}
!840 = distinct !{!840, !13, !15, !14}
!841 = distinct !{!841, !13}
!842 = distinct !{!842, !13, !21}
!843 = distinct !{!843, !13}
!844 = distinct !{!844, !13, !14, !15}
!845 = distinct !{!845, !13, !15, !14}
!846 = distinct !{!846, !13}
!847 = distinct !{!847, !13, !21}
!848 = distinct !{!848, !13}
!849 = distinct !{!849, !13, !14, !15}
!850 = distinct !{!850, !13, !15, !14}
!851 = distinct !{!851, !13}
!852 = distinct !{!852, !13, !21}
!853 = distinct !{!853, !13}
!854 = distinct !{!854, !13, !14, !15}
!855 = distinct !{!855, !13, !15, !14}
!856 = distinct !{!856, !13}
!857 = distinct !{!857, !13, !21}
!858 = distinct !{!858, !13}
!859 = distinct !{!859, !13, !14, !15}
!860 = distinct !{!860, !13, !15, !14}
!861 = distinct !{!861, !13}
!862 = distinct !{!862, !13, !21}
!863 = distinct !{!863, !13}
!864 = distinct !{!864, !13, !14, !15}
!865 = distinct !{!865, !13, !15, !14}
!866 = distinct !{!866, !13}
!867 = distinct !{!867, !13, !21}
!868 = distinct !{!868, !13}
!869 = distinct !{!869, !13, !14, !15}
!870 = distinct !{!870, !13, !15, !14}
!871 = distinct !{!871, !13}
!872 = distinct !{!872, !13, !21}
!873 = distinct !{!873, !13}
!874 = distinct !{!874, !13, !14, !15}
!875 = distinct !{!875, !13, !15, !14}
!876 = distinct !{!876, !13}
!877 = distinct !{!877, !13, !21}
!878 = distinct !{!878, !13}
!879 = distinct !{!879, !13, !14, !15}
!880 = distinct !{!880, !13, !15, !14}
!881 = distinct !{!881, !13}
!882 = distinct !{!882, !13, !21}
!883 = distinct !{!883, !13}
!884 = distinct !{!884, !13, !14, !15}
!885 = distinct !{!885, !13, !15, !14}
!886 = distinct !{!886, !13}
!887 = distinct !{!887, !13, !21}
!888 = distinct !{!888, !13}
!889 = distinct !{!889, !13, !14, !15}
!890 = distinct !{!890, !13, !15, !14}
!891 = distinct !{!891, !13}
!892 = distinct !{!892, !13, !21}
!893 = distinct !{!893, !13}
!894 = distinct !{!894, !13, !14, !15}
!895 = distinct !{!895, !13, !15, !14}
!896 = distinct !{!896, !13}
!897 = distinct !{!897, !13, !21}
!898 = distinct !{!898, !13}
!899 = distinct !{!899, !13, !14, !15}
!900 = distinct !{!900, !13, !15, !14}
!901 = distinct !{!901, !13}
!902 = distinct !{!902, !13, !21}
!903 = distinct !{!903, !13}
!904 = distinct !{!904, !13, !14, !15}
!905 = distinct !{!905, !13, !15, !14}
!906 = distinct !{!906, !13}
!907 = distinct !{!907, !13, !21}
!908 = distinct !{!908, !13}
!909 = distinct !{!909, !13, !14, !15}
!910 = distinct !{!910, !13, !15, !14}
!911 = distinct !{!911, !13}
!912 = distinct !{!912, !13, !21}
!913 = distinct !{!913, !13}
!914 = distinct !{!914, !13, !14, !15}
!915 = distinct !{!915, !13, !15, !14}
!916 = distinct !{!916, !13}
!917 = distinct !{!917, !13, !21}
!918 = distinct !{!918, !13}
!919 = distinct !{!919, !13, !14, !15}
!920 = distinct !{!920, !13, !15, !14}
!921 = distinct !{!921, !13}
!922 = distinct !{!922, !13, !21}
!923 = distinct !{!923, !13}
!924 = distinct !{!924, !13, !14, !15}
!925 = distinct !{!925, !13, !15, !14}
!926 = distinct !{!926, !13}
!927 = distinct !{!927, !13, !21}
!928 = distinct !{!928, !13}
!929 = distinct !{!929, !13, !14, !15}
!930 = distinct !{!930, !13, !15, !14}
!931 = distinct !{!931, !13}
!932 = distinct !{!932, !13, !21}
!933 = distinct !{!933, !13}
!934 = distinct !{!934, !13, !14, !15}
!935 = distinct !{!935, !13, !15, !14}
!936 = distinct !{!936, !13}
!937 = distinct !{!937, !13, !21}
!938 = distinct !{!938, !13}
!939 = distinct !{!939, !13, !14, !15}
!940 = distinct !{!940, !13, !15, !14}
!941 = distinct !{!941, !13}
!942 = distinct !{!942, !13, !21}
!943 = distinct !{!943, !13}
!944 = distinct !{!944, !13, !14, !15}
!945 = distinct !{!945, !13, !15, !14}
!946 = distinct !{!946, !13}
!947 = distinct !{!947, !13, !21}
!948 = distinct !{!948, !13}
!949 = distinct !{!949, !13, !14, !15}
!950 = distinct !{!950, !13, !15, !14}
!951 = distinct !{!951, !13}
!952 = distinct !{!952, !13, !21}
!953 = distinct !{!953, !13}
!954 = distinct !{!954, !13, !14, !15}
!955 = distinct !{!955, !13, !15, !14}
!956 = distinct !{!956, !13}
!957 = distinct !{!957, !13, !21}
!958 = distinct !{!958, !13}
!959 = distinct !{!959, !13, !14, !15}
!960 = distinct !{!960, !13, !15, !14}
!961 = distinct !{!961, !13}
!962 = distinct !{!962, !13, !21}
!963 = distinct !{!963, !13}
!964 = distinct !{!964, !13, !14, !15}
!965 = distinct !{!965, !13, !15, !14}
!966 = distinct !{!966, !13}
!967 = distinct !{!967, !13, !21}
!968 = distinct !{!968, !13}
!969 = distinct !{!969, !13, !14, !15}
!970 = distinct !{!970, !13, !15, !14}
!971 = distinct !{!971, !13}
!972 = distinct !{!972, !13, !21}
!973 = distinct !{!973, !13}
!974 = distinct !{!974, !13, !14, !15}
!975 = distinct !{!975, !13, !15, !14}
!976 = distinct !{!976, !13}
!977 = distinct !{!977, !13, !21}
!978 = distinct !{!978, !13}
!979 = distinct !{!979, !13, !14, !15}
!980 = distinct !{!980, !13, !15, !14}
!981 = distinct !{!981, !13}
!982 = distinct !{!982, !13, !21}
!983 = distinct !{!983, !13}
!984 = distinct !{!984, !13, !14, !15}
!985 = distinct !{!985, !13, !15, !14}
!986 = distinct !{!986, !13}
!987 = distinct !{!987, !13, !21}
!988 = distinct !{!988, !13}
!989 = distinct !{!989, !13, !14, !15}
!990 = distinct !{!990, !13, !15, !14}
!991 = distinct !{!991, !13}
!992 = distinct !{!992, !13, !21}
!993 = distinct !{!993, !13}
!994 = distinct !{!994, !13, !14, !15}
!995 = distinct !{!995, !13, !15, !14}
!996 = distinct !{!996, !13}
!997 = distinct !{!997, !13, !21}
!998 = distinct !{!998, !13}
!999 = distinct !{!999, !13, !14, !15}
!1000 = distinct !{!1000, !13, !15, !14}
!1001 = distinct !{!1001, !13}
!1002 = distinct !{!1002, !13, !21}
!1003 = distinct !{!1003, !13}
!1004 = distinct !{!1004, !13, !14, !15}
!1005 = distinct !{!1005, !13, !15, !14}
!1006 = distinct !{!1006, !13}
!1007 = distinct !{!1007, !13, !21}
!1008 = distinct !{!1008, !13}
!1009 = distinct !{!1009, !13, !14, !15}
!1010 = distinct !{!1010, !13, !15, !14}
!1011 = distinct !{!1011, !13}
!1012 = distinct !{!1012, !13, !21}
!1013 = distinct !{!1013, !13}
!1014 = distinct !{!1014, !13, !14, !15}
!1015 = distinct !{!1015, !13, !15, !14}
!1016 = distinct !{!1016, !13}
!1017 = distinct !{!1017, !13, !21}
!1018 = distinct !{!1018, !13}
!1019 = distinct !{!1019, !13, !14, !15}
!1020 = distinct !{!1020, !13, !15, !14}
!1021 = distinct !{!1021, !13}
!1022 = distinct !{!1022, !13, !21}
!1023 = distinct !{!1023, !13}
!1024 = distinct !{!1024, !13, !14, !15}
!1025 = distinct !{!1025, !13, !15, !14}
!1026 = distinct !{!1026, !13}
!1027 = distinct !{!1027, !13, !21}
!1028 = distinct !{!1028, !13}
!1029 = distinct !{!1029, !13, !14, !15}
!1030 = distinct !{!1030, !13, !15, !14}
!1031 = distinct !{!1031, !13}
!1032 = distinct !{!1032, !13, !21}
!1033 = distinct !{!1033, !13}
!1034 = distinct !{!1034, !13, !14, !15}
!1035 = distinct !{!1035, !13, !15, !14}
!1036 = distinct !{!1036, !13}
!1037 = distinct !{!1037, !13, !21}
!1038 = distinct !{!1038, !13}
!1039 = distinct !{!1039, !13, !14, !15}
!1040 = distinct !{!1040, !13, !15, !14}
!1041 = distinct !{!1041, !13}
!1042 = distinct !{!1042, !13, !21}
!1043 = distinct !{!1043, !13}
!1044 = distinct !{!1044, !13, !14, !15}
!1045 = distinct !{!1045, !13, !15, !14}
!1046 = distinct !{!1046, !13}
!1047 = distinct !{!1047, !13, !21}
!1048 = distinct !{!1048, !13}
!1049 = distinct !{!1049, !13, !14, !15}
!1050 = distinct !{!1050, !13, !15, !14}
!1051 = distinct !{!1051, !13}
!1052 = distinct !{!1052, !13, !21}
!1053 = distinct !{!1053, !13}
!1054 = distinct !{!1054, !13, !14, !15}
!1055 = distinct !{!1055, !13, !15, !14}
!1056 = distinct !{!1056, !13}
!1057 = distinct !{!1057, !13, !21}
!1058 = distinct !{!1058, !13}
!1059 = distinct !{!1059, !13, !14, !15}
!1060 = distinct !{!1060, !13, !15, !14}
!1061 = distinct !{!1061, !13}
!1062 = distinct !{!1062, !13, !21}
!1063 = distinct !{!1063, !13}
!1064 = distinct !{!1064, !13, !14, !15}
!1065 = distinct !{!1065, !13, !15, !14}
!1066 = distinct !{!1066, !13}
!1067 = distinct !{!1067, !13, !21}
!1068 = distinct !{!1068, !13}
!1069 = distinct !{!1069, !13, !14, !15}
!1070 = distinct !{!1070, !13, !15, !14}
!1071 = distinct !{!1071, !13}
!1072 = distinct !{!1072, !13, !21}
!1073 = distinct !{!1073, !13}
!1074 = distinct !{!1074, !13, !14, !15}
!1075 = distinct !{!1075, !13, !15, !14}
!1076 = distinct !{!1076, !13}
!1077 = distinct !{!1077, !13, !21}
!1078 = distinct !{!1078, !13}
!1079 = distinct !{!1079, !13, !14, !15}
!1080 = distinct !{!1080, !13, !15, !14}
!1081 = distinct !{!1081, !13}
!1082 = distinct !{!1082, !13, !21}
!1083 = distinct !{!1083, !13}
!1084 = distinct !{!1084, !13, !14, !15}
!1085 = distinct !{!1085, !13, !15, !14}
!1086 = distinct !{!1086, !13}
!1087 = distinct !{!1087, !13, !21}
!1088 = distinct !{!1088, !13}
!1089 = distinct !{!1089, !13, !14, !15}
!1090 = distinct !{!1090, !13, !15, !14}
!1091 = distinct !{!1091, !13}
!1092 = distinct !{!1092, !13, !21}
!1093 = distinct !{!1093, !13}
!1094 = distinct !{!1094, !13, !14, !15}
!1095 = distinct !{!1095, !13, !15, !14}
!1096 = distinct !{!1096, !13}
!1097 = distinct !{!1097, !13, !21}
!1098 = distinct !{!1098, !13}
!1099 = distinct !{!1099, !13, !14, !15}
!1100 = distinct !{!1100, !13, !15, !14}
!1101 = distinct !{!1101, !13}
!1102 = distinct !{!1102, !13, !21}
!1103 = distinct !{!1103, !13}
!1104 = distinct !{!1104, !13, !14, !15}
!1105 = distinct !{!1105, !13, !15, !14}
!1106 = distinct !{!1106, !13}
!1107 = distinct !{!1107, !13, !21}
!1108 = distinct !{!1108, !13}
!1109 = distinct !{!1109, !13, !14, !15}
!1110 = distinct !{!1110, !13, !15, !14}
!1111 = distinct !{!1111, !13}
!1112 = distinct !{!1112, !13, !21}
!1113 = distinct !{!1113, !13}
!1114 = distinct !{!1114, !13, !14, !15}
!1115 = distinct !{!1115, !13, !15, !14}
!1116 = distinct !{!1116, !13}
!1117 = distinct !{!1117, !13, !21}
!1118 = distinct !{!1118, !13}
!1119 = distinct !{!1119, !13, !14, !15}
!1120 = distinct !{!1120, !13, !15, !14}
!1121 = distinct !{!1121, !13}
!1122 = distinct !{!1122, !13, !21}
!1123 = distinct !{!1123, !13}
!1124 = distinct !{!1124, !13, !14, !15}
!1125 = distinct !{!1125, !13, !15, !14}
!1126 = distinct !{!1126, !13}
!1127 = distinct !{!1127, !13, !21}
!1128 = distinct !{!1128, !13}
!1129 = distinct !{!1129, !13, !14, !15}
!1130 = distinct !{!1130, !13, !15, !14}
!1131 = distinct !{!1131, !13}
!1132 = distinct !{!1132, !13, !21}
!1133 = distinct !{!1133, !13}
!1134 = distinct !{!1134, !13, !14, !15}
!1135 = distinct !{!1135, !13, !15, !14}
!1136 = distinct !{!1136, !13}
!1137 = distinct !{!1137, !13, !21}
!1138 = distinct !{!1138, !13}
!1139 = distinct !{!1139, !13, !14, !15}
!1140 = distinct !{!1140, !13, !15, !14}
!1141 = distinct !{!1141, !13}
!1142 = distinct !{!1142, !13, !21}
!1143 = distinct !{!1143, !13}
!1144 = distinct !{!1144, !13, !14, !15}
!1145 = distinct !{!1145, !13, !15, !14}
!1146 = distinct !{!1146, !13}
!1147 = distinct !{!1147, !13, !21}
!1148 = distinct !{!1148, !13}
!1149 = distinct !{!1149, !13, !14, !15}
!1150 = distinct !{!1150, !13, !15, !14}
!1151 = distinct !{!1151, !13}
!1152 = distinct !{!1152, !13, !21}
!1153 = distinct !{!1153, !13}
!1154 = distinct !{!1154, !13, !14, !15}
!1155 = distinct !{!1155, !13, !15, !14}
!1156 = distinct !{!1156, !13}
!1157 = distinct !{!1157, !13, !21}
!1158 = distinct !{!1158, !13}
!1159 = distinct !{!1159, !13, !14, !15}
!1160 = distinct !{!1160, !13, !15, !14}
!1161 = distinct !{!1161, !13}
!1162 = distinct !{!1162, !13, !21}
!1163 = distinct !{!1163, !13}
!1164 = distinct !{!1164, !13, !14, !15}
!1165 = distinct !{!1165, !13, !15, !14}
!1166 = distinct !{!1166, !13}
!1167 = distinct !{!1167, !13, !21}
!1168 = distinct !{!1168, !13}
!1169 = distinct !{!1169, !13, !14, !15}
!1170 = distinct !{!1170, !13, !15, !14}
!1171 = distinct !{!1171, !13}
!1172 = distinct !{!1172, !13, !21}
!1173 = distinct !{!1173, !13}
!1174 = distinct !{!1174, !13, !14, !15}
!1175 = distinct !{!1175, !13, !15, !14}
!1176 = distinct !{!1176, !13}
!1177 = distinct !{!1177, !13, !21}
!1178 = distinct !{!1178, !13}
!1179 = distinct !{!1179, !13, !14, !15}
!1180 = distinct !{!1180, !13, !15, !14}
!1181 = distinct !{!1181, !13}
!1182 = distinct !{!1182, !13, !21}
!1183 = distinct !{!1183, !13}
!1184 = distinct !{!1184, !13, !14, !15}
!1185 = distinct !{!1185, !13, !15, !14}
!1186 = distinct !{!1186, !13}
!1187 = distinct !{!1187, !13, !21}
!1188 = distinct !{!1188, !13}
!1189 = distinct !{!1189, !13, !14, !15}
!1190 = distinct !{!1190, !13, !15, !14}
!1191 = distinct !{!1191, !13}
!1192 = distinct !{!1192, !13, !21}
!1193 = distinct !{!1193, !13}
!1194 = distinct !{!1194, !13, !14, !15}
!1195 = distinct !{!1195, !13, !15, !14}
!1196 = distinct !{!1196, !13}
!1197 = distinct !{!1197, !13, !21}
!1198 = distinct !{!1198, !13}
!1199 = distinct !{!1199, !13, !14, !15}
!1200 = distinct !{!1200, !13, !15, !14}
!1201 = distinct !{!1201, !13}
!1202 = distinct !{!1202, !13, !21}
!1203 = distinct !{!1203, !13}
!1204 = distinct !{!1204, !13, !14, !15}
!1205 = distinct !{!1205, !13, !15, !14}
!1206 = distinct !{!1206, !13}
!1207 = distinct !{!1207, !13, !21}
!1208 = distinct !{!1208, !13}
!1209 = distinct !{!1209, !13, !14, !15}
!1210 = distinct !{!1210, !13, !15, !14}
!1211 = distinct !{!1211, !13}
!1212 = distinct !{!1212, !13, !21}
!1213 = distinct !{!1213, !13}
!1214 = distinct !{!1214, !13, !14, !15}
!1215 = distinct !{!1215, !13, !15, !14}
!1216 = distinct !{!1216, !13}
!1217 = distinct !{!1217, !13, !21}
!1218 = distinct !{!1218, !13}
!1219 = distinct !{!1219, !13, !14, !15}
!1220 = distinct !{!1220, !13, !15, !14}
!1221 = distinct !{!1221, !13}
!1222 = distinct !{!1222, !13, !21}
!1223 = distinct !{!1223, !13}
!1224 = distinct !{!1224, !13, !14, !15}
!1225 = distinct !{!1225, !13, !15, !14}
!1226 = distinct !{!1226, !13}
!1227 = distinct !{!1227, !13, !21}
!1228 = distinct !{!1228, !13}
!1229 = distinct !{!1229, !13, !14, !15}
!1230 = distinct !{!1230, !13, !15, !14}
!1231 = distinct !{!1231, !13}
!1232 = distinct !{!1232, !13, !21}
!1233 = distinct !{!1233, !13}
!1234 = distinct !{!1234, !13, !14, !15}
!1235 = distinct !{!1235, !13, !15, !14}
!1236 = distinct !{!1236, !13}
!1237 = distinct !{!1237, !13, !21}
!1238 = distinct !{!1238, !13}
!1239 = distinct !{!1239, !13, !14, !15}
!1240 = distinct !{!1240, !13, !15, !14}
!1241 = distinct !{!1241, !13}
!1242 = distinct !{!1242, !13, !21}
!1243 = distinct !{!1243, !13}
!1244 = distinct !{!1244, !13, !14, !15}
!1245 = distinct !{!1245, !13, !15, !14}
!1246 = distinct !{!1246, !13}
!1247 = distinct !{!1247, !13, !21}
!1248 = distinct !{!1248, !13}
!1249 = distinct !{!1249, !13, !14, !15}
!1250 = distinct !{!1250, !13, !15, !14}
!1251 = distinct !{!1251, !13}
!1252 = distinct !{!1252, !13, !21}
!1253 = distinct !{!1253, !13}
!1254 = distinct !{!1254, !13, !14, !15}
!1255 = distinct !{!1255, !13, !15, !14}
!1256 = distinct !{!1256, !13}
!1257 = distinct !{!1257, !13, !21}
!1258 = distinct !{!1258, !13}
!1259 = distinct !{!1259, !13, !14, !15}
!1260 = distinct !{!1260, !13, !15, !14}
!1261 = distinct !{!1261, !13}
!1262 = distinct !{!1262, !13, !21}
!1263 = distinct !{!1263, !13}
!1264 = distinct !{!1264, !13, !14, !15}
!1265 = distinct !{!1265, !13, !15, !14}
!1266 = distinct !{!1266, !13}
!1267 = distinct !{!1267, !13, !21}
!1268 = distinct !{!1268, !13}
!1269 = distinct !{!1269, !13, !14, !15}
!1270 = distinct !{!1270, !13, !15, !14}
!1271 = distinct !{!1271, !13}
!1272 = distinct !{!1272, !13, !21}
!1273 = distinct !{!1273, !13}
!1274 = distinct !{!1274, !13, !14, !15}
!1275 = distinct !{!1275, !13, !15, !14}
!1276 = distinct !{!1276, !13}
!1277 = distinct !{!1277, !13, !21}
!1278 = distinct !{!1278, !13}
!1279 = distinct !{!1279, !13, !14, !15}
!1280 = distinct !{!1280, !13, !15, !14}
!1281 = distinct !{!1281, !13}
!1282 = distinct !{!1282, !13, !21}
!1283 = distinct !{!1283, !13}
!1284 = distinct !{!1284, !13, !14, !15}
!1285 = distinct !{!1285, !13, !15, !14}
!1286 = distinct !{!1286, !13}
!1287 = distinct !{!1287, !13, !21}
!1288 = distinct !{!1288, !13}
!1289 = distinct !{!1289, !13, !14, !15}
!1290 = distinct !{!1290, !13, !15, !14}
!1291 = distinct !{!1291, !13}
!1292 = distinct !{!1292, !13, !21}
!1293 = distinct !{!1293, !13}
!1294 = distinct !{!1294, !13, !14, !15}
!1295 = distinct !{!1295, !13, !15, !14}
!1296 = distinct !{!1296, !13}
!1297 = distinct !{!1297, !13, !21}
!1298 = distinct !{!1298, !13}
!1299 = distinct !{!1299, !13, !14, !15}
!1300 = distinct !{!1300, !13, !15, !14}
!1301 = distinct !{!1301, !13}
!1302 = distinct !{!1302, !13, !21}
!1303 = distinct !{!1303, !13}
!1304 = distinct !{!1304, !13, !14, !15}
!1305 = distinct !{!1305, !13, !15, !14}
!1306 = distinct !{!1306, !13}
!1307 = distinct !{!1307, !13, !21}
!1308 = distinct !{!1308, !13}
!1309 = distinct !{!1309, !13, !14, !15}
!1310 = distinct !{!1310, !13, !15, !14}
!1311 = distinct !{!1311, !13}
!1312 = distinct !{!1312, !13, !21}
!1313 = distinct !{!1313, !13}
!1314 = distinct !{!1314, !13, !14, !15}
!1315 = distinct !{!1315, !13, !15, !14}
!1316 = distinct !{!1316, !13}
!1317 = distinct !{!1317, !13, !21}
!1318 = distinct !{!1318, !13}
!1319 = distinct !{!1319, !13, !14, !15}
!1320 = distinct !{!1320, !13, !15, !14}
!1321 = distinct !{!1321, !13}
!1322 = distinct !{!1322, !13, !21}
!1323 = distinct !{!1323, !13}
!1324 = distinct !{!1324, !13, !14, !15}
!1325 = distinct !{!1325, !13, !15, !14}
!1326 = distinct !{!1326, !13}
!1327 = distinct !{!1327, !13, !21}
!1328 = distinct !{!1328, !13}
!1329 = distinct !{!1329, !13, !14, !15}
!1330 = distinct !{!1330, !13, !15, !14}
!1331 = distinct !{!1331, !13}
!1332 = distinct !{!1332, !13, !21}
!1333 = distinct !{!1333, !13}
!1334 = distinct !{!1334, !13, !14, !15}
!1335 = distinct !{!1335, !13, !15, !14}
!1336 = distinct !{!1336, !13}
!1337 = distinct !{!1337, !13, !21}
!1338 = distinct !{!1338, !13}
!1339 = distinct !{!1339, !13, !14, !15}
!1340 = distinct !{!1340, !13, !15, !14}
!1341 = distinct !{!1341, !13}
!1342 = distinct !{!1342, !13, !21}
!1343 = distinct !{!1343, !13}
!1344 = distinct !{!1344, !13, !14, !15}
!1345 = distinct !{!1345, !13, !15, !14}
!1346 = distinct !{!1346, !13}
!1347 = distinct !{!1347, !13, !21}
!1348 = distinct !{!1348, !13}
!1349 = distinct !{!1349, !13, !14, !15}
!1350 = distinct !{!1350, !13, !15, !14}
!1351 = distinct !{!1351, !13}
!1352 = distinct !{!1352, !13, !21}
!1353 = distinct !{!1353, !13}
!1354 = distinct !{!1354, !13, !14, !15}
!1355 = distinct !{!1355, !13, !15, !14}
!1356 = distinct !{!1356, !13}
!1357 = distinct !{!1357, !13, !21}
!1358 = distinct !{!1358, !13}
!1359 = distinct !{!1359, !13, !14, !15}
!1360 = distinct !{!1360, !13, !15, !14}
!1361 = distinct !{!1361, !13}
!1362 = distinct !{!1362, !13, !21}
!1363 = distinct !{!1363, !13}
!1364 = distinct !{!1364, !13, !14, !15}
!1365 = distinct !{!1365, !13, !15, !14}
!1366 = distinct !{!1366, !13}
!1367 = distinct !{!1367, !13, !21}
!1368 = distinct !{!1368, !13}
!1369 = distinct !{!1369, !13, !14, !15}
!1370 = distinct !{!1370, !13, !15, !14}
!1371 = distinct !{!1371, !13}
!1372 = distinct !{!1372, !13, !21}
!1373 = distinct !{!1373, !13}
!1374 = distinct !{!1374, !13, !14, !15}
!1375 = distinct !{!1375, !13, !15, !14}
!1376 = distinct !{!1376, !13}
!1377 = distinct !{!1377, !13, !21}
!1378 = distinct !{!1378, !13}
!1379 = distinct !{!1379, !13, !14, !15}
!1380 = distinct !{!1380, !13, !15, !14}
!1381 = distinct !{!1381, !13}
!1382 = distinct !{!1382, !13, !21}
!1383 = distinct !{!1383, !13}
!1384 = distinct !{!1384, !13, !14, !15}
!1385 = distinct !{!1385, !13, !15, !14}
!1386 = distinct !{!1386, !13}
!1387 = distinct !{!1387, !13, !21}
!1388 = distinct !{!1388, !13}
!1389 = distinct !{!1389, !13, !14, !15}
!1390 = distinct !{!1390, !13, !15, !14}
!1391 = distinct !{!1391, !13}
!1392 = distinct !{!1392, !13, !21}
!1393 = distinct !{!1393, !13}
!1394 = distinct !{!1394, !13, !14, !15}
!1395 = distinct !{!1395, !13, !15, !14}
!1396 = distinct !{!1396, !13}
!1397 = distinct !{!1397, !13, !21}
!1398 = distinct !{!1398, !13}
!1399 = distinct !{!1399, !13, !14, !15}
!1400 = distinct !{!1400, !13, !15, !14}
!1401 = distinct !{!1401, !13}
!1402 = distinct !{!1402, !13, !21}
!1403 = distinct !{!1403, !13}
!1404 = distinct !{!1404, !13, !14, !15}
!1405 = distinct !{!1405, !13, !15, !14}
!1406 = distinct !{!1406, !13}
!1407 = distinct !{!1407, !13, !21}
!1408 = distinct !{!1408, !13}
!1409 = distinct !{!1409, !13, !14, !15}
!1410 = distinct !{!1410, !13, !15, !14}
!1411 = distinct !{!1411, !13}
!1412 = distinct !{!1412, !13, !21}
!1413 = distinct !{!1413, !13}
!1414 = distinct !{!1414, !13, !14, !15}
!1415 = distinct !{!1415, !13, !15, !14}
!1416 = distinct !{!1416, !13}
!1417 = distinct !{!1417, !13, !21}
!1418 = distinct !{!1418, !13}
!1419 = distinct !{!1419, !13, !14, !15}
!1420 = distinct !{!1420, !13, !15, !14}
!1421 = distinct !{!1421, !13}
!1422 = distinct !{!1422, !13, !21}
!1423 = distinct !{!1423, !13}
!1424 = distinct !{!1424, !13, !14, !15}
!1425 = distinct !{!1425, !13, !15, !14}
!1426 = distinct !{!1426, !13}
!1427 = distinct !{!1427, !13, !21}
!1428 = distinct !{!1428, !13}
!1429 = distinct !{!1429, !13, !14, !15}
!1430 = distinct !{!1430, !13, !15, !14}
!1431 = distinct !{!1431, !13}
!1432 = distinct !{!1432, !13, !21}
!1433 = distinct !{!1433, !13}
!1434 = distinct !{!1434, !13, !14, !15}
!1435 = distinct !{!1435, !13, !15, !14}
!1436 = distinct !{!1436, !13}
!1437 = distinct !{!1437, !13, !21}
!1438 = distinct !{!1438, !13}
!1439 = distinct !{!1439, !13, !14, !15}
!1440 = distinct !{!1440, !13, !15, !14}
!1441 = distinct !{!1441, !13}
!1442 = distinct !{!1442, !13, !21}
!1443 = distinct !{!1443, !13}
!1444 = distinct !{!1444, !13, !14, !15}
!1445 = distinct !{!1445, !13, !15, !14}
!1446 = distinct !{!1446, !13}
!1447 = distinct !{!1447, !13, !21}
!1448 = distinct !{!1448, !13}
!1449 = distinct !{!1449, !13, !14, !15}
!1450 = distinct !{!1450, !13, !15, !14}
!1451 = distinct !{!1451, !13}
!1452 = distinct !{!1452, !13, !21}
!1453 = distinct !{!1453, !13}
!1454 = distinct !{!1454, !13, !14, !15}
!1455 = distinct !{!1455, !13, !15, !14}
!1456 = distinct !{!1456, !13}
!1457 = distinct !{!1457, !13, !21}
!1458 = distinct !{!1458, !13}
!1459 = distinct !{!1459, !13, !14, !15}
!1460 = distinct !{!1460, !13, !15, !14}
!1461 = distinct !{!1461, !13}
!1462 = distinct !{!1462, !13, !21}
!1463 = distinct !{!1463, !13}
!1464 = distinct !{!1464, !13, !14, !15}
!1465 = distinct !{!1465, !13, !15, !14}
!1466 = distinct !{!1466, !13}
!1467 = distinct !{!1467, !13, !21}
!1468 = distinct !{!1468, !13}
!1469 = distinct !{!1469, !13, !14, !15}
!1470 = distinct !{!1470, !13, !15, !14}
!1471 = distinct !{!1471, !13}
!1472 = distinct !{!1472, !13, !21}
!1473 = distinct !{!1473, !13}
!1474 = distinct !{!1474, !13, !14, !15}
!1475 = distinct !{!1475, !13, !15, !14}
!1476 = distinct !{!1476, !13}
!1477 = distinct !{!1477, !13, !21}
!1478 = distinct !{!1478, !13}
!1479 = distinct !{!1479, !13, !14, !15}
!1480 = distinct !{!1480, !13, !15, !14}
!1481 = distinct !{!1481, !13}
!1482 = distinct !{!1482, !13, !21}
!1483 = distinct !{!1483, !13}
